{"Answer": "&lt;p&gt;Comsol Multiphysics中可以使用if语句来实现条件分支。if语句的基本语法如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;(condition)&lt;/span&gt;\n    stateme&lt;span class=\"hljs-symbol\"&gt;nt1&lt;/span&gt;;\nelse\n    stateme&lt;span class=\"hljs-symbol\"&gt;nt2&lt;/span&gt;;\ne&lt;span class=\"hljs-symbol\"&gt;nd&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中&amp;#xff0c;condition是一个逻辑表达式&amp;#xff0c;用于判断是否满足某个条件。如果condition为真&amp;#xff0c;则执行statement1&amp;#xff1b;否则执行statement2。可以根据需要嵌套多个if语句来实现更复杂的条件分支。&lt;/p&gt;\n&lt;p&gt;在您的情况下&amp;#xff0c;如果需要在函数值等于零的时候取一个极小值&amp;#xff0c;可以使用if语句来实现。具体实现方式可以参考以下示例代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;function y &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; myfunc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)\n% 定义函数myfunc&amp;#xff0c;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;为输入参数&amp;#xff0c;y为输出参数\n\nif (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    y &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1e-10&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;  % 如果x等于零&amp;#xff0c;则取一个极小值&lt;/span&gt;\nelse\n    y &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;      % 否则等于x的值&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个示例代码中&amp;#xff0c;if语句判断输入参数x是否等于零。如果x等于零&amp;#xff0c;则将输出参数y赋值为一个极小值1e-10&amp;#xff1b;否则将y赋值为x的值。这样可以保证在输入参数x等于零的情况下&amp;#xff0c;输出参数y不为零&amp;#xff0c;从而避免Comsol Multiphysics无法计算的问题。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;Comsol Multiphysics中的函数可以直接使用Matlab语言进行编写。因此&amp;#xff0c;您可以直接在Comsol Multiphysics中编写上述示例代码&amp;#xff0c;然后将其作为函数调用即可。不需要使用Matlab进行嵌套编写。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["comsol中如何加入if判断语句", ["在comsol中如何使用if语句（或者说是if语句的使用方法）", "目前有一个函数是我方输入的，但是因为这个函数会在某些时刻等于零导致了comsol算不了，只能说采用一个判断格式，假如这个函数的函数值不等于零的时候等于函数值，在这个函数的函数值等于零的时候取一个极小值，这样子comsol才能计算这个函数", "怎样加入这样子的一个形式呢，是comsol本身有这个格式还是用matlab嵌套进去呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;判断A中的x,y,z并输出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;syms x y z;\nA&amp;#61;&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-identifier\"&gt;y&lt;/span&gt; &lt;span class=\"hljs-identifier\"&gt;z&lt;/span&gt;]&lt;/span&gt;;\n&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt;,&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt;]&lt;/span&gt;&amp;#61;size(A);  %求出A的数组长度&amp;#xff0c;m为行数&amp;#xff0c;n为列数\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n       %从第一个数组开始判断\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;A(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;&amp;#61;&amp;#61;x&lt;span class=\"hljs-pattern-match\"&gt;&lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;A(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;y&lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;A(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;z     %判断\n        &lt;span class=\"hljs-constructor\"&gt;A(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;                         %输出\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["MATLAB如何用if语句判断一个数组中的未知数与已知数", ["假设数组内设置syms x y z", "然后设置数组:A=【1 2 3 x y z 】这样", "怎么设置if语句判断数组中的x y z，判别形式怎么写。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;才刚刚接触&amp;#xff0c;还不太熟练&amp;#xff0c;不会直接跳出两层循环&amp;#xff0c;只能跳两次来保证没有解时输出No Answer。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;N &amp;#61; int(input(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个三位数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\nfor A in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n     for &lt;span class=\"hljs-keyword\"&gt;B &lt;/span&gt;in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n          if ((A*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;B)*(B*10 &lt;/span&gt;&amp;#43; A) &amp;#61;&amp;#61; N) &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;(A &amp;lt; &lt;span class=\"hljs-keyword\"&gt;B): &lt;/span&gt;\n               print(A*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;B)\n&lt;/span&gt;               &lt;span class=\"hljs-keyword\"&gt;break &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#跳出B的for循环&lt;/span&gt;\n     if ((A*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;B)*(B*10 &lt;/span&gt;&amp;#43; A) &amp;#61;&amp;#61; N) &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;(A &amp;lt; &lt;span class=\"hljs-keyword\"&gt;B):\n&lt;/span&gt;          &lt;span class=\"hljs-keyword\"&gt;break &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#跳出A的for循环&lt;/span&gt;\nif (A &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;B &lt;/span&gt;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;):\n     print(&lt;span class=\"hljs-string\"&gt;&amp;#39;No Answer&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#当没有解时for循环会将A和B执行到9&amp;#xff0c;所以AB都为9时说明没有解&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["python习题，要求用for循环和if语句。", ["输入三位数字N，求两位数AB（其中个位数字为B，十位数字为A，且有0 < A < B <=9）。使得下列等式成立：", " AB x BA = N", "其中BA是把AB中个、十位数字交换所得的两位数。", "\n", "编写程序，接收控制台输入的三位整数N，求解A，B并输出。", "如果没有解则输出No Answer。", "\n", "【输入形式】", "\n", "从键盘输入整数N。", "\n", "【输出形式】", "\n", "输出只有一行，包含两个数字A和B。输出时两个数字紧密输出，不使用其它字符进行分隔。", "\n", "【样例输入】", "\n", "976", "\n", "【样例输出】", "\n", "16", "\n", "【样例说明】", "\n", "输入整数N=976。经计算得16*61=976。可得a=1, b=6。将两个字符依次输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你发的5是字符&amp;#xff0c;要发HEX&lt;br /&gt;作为调试&amp;#xff0c;你可以把收到的数据打印出来&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["串口中断的if elseif else语句一直都是执行最后", ["问题遇到的现象和发生背景", "\n", "程序烧录后，在串口调试助手中发送任何数字，单片机传回的数据都是“Error！”", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "void", " ", "main", "()", "\n", "{        \n    ", "inti", "();     \n    ", "while", "(", "1", ")\n    {\n        ", "if", "(flag_uart==", "1", ")\n        {\n            flag_uart=", "0", ";\n            ES=", "0", ";\n            TI=", "1", ";\n            ", "switch", "(flag_on)\n            {\n                ", "case", " ", "0", ":    ", "puts", "(", "\"Turn on ad!\\n\"", ");\n                            TR0=", "1", ";\n                            ", "break", ";\n                ", "case", " ", "1", ":    ", "printf", "(", "\"Turn off ad!\\n\"", ");\n                            TR0=", "0", ";\n                            ", "break", ";\n                ", "case", " ", "2", ":    ", "puts", "(", "\"Error!\\n\"", ");\n                            ", "break", ";\n            }\n            ", "while", "(!TI);\n            TI=", "0", ";\n            ES=", "1", ";\n        }\n        ", "if", "(flag_time==", "1", ")\n        {\n            flag_time=", "0", ";\n            ad_val=", "Read_AD_Data", "(", "0x94", ");\n            ad_vo=(", "float", ")ad_val*", "5.0", "/", "256.0", ";\n            ES=", "0", ";\n            TI=", "1", ";\n            ", "printf", "(", "\"The voltage is %fV\\n\"", ",ad_vo);\n            ", "while", "(!TI);\n            TI=", "0", ";            \n            ES=", "1", ";\n        }\n        ", "datapros", "();     ", "//数据处理函数", "\n        ", "display", "();", "//数码管显示函数        ", "\n    }    \n}\n", "\n", "void ser() interrupt ", "4", "                   //串口中断函数\n{\n    RI", "=", "0", ";", "\n    a", "=", "SBUF", ";", "\n    flag_uart", "=", "1", ";", "\n        if(a", "=", "=", "1", ")                    \n            flag_on", "=", "0", ";                ", "\n         else if(a", "=", "=", "2", ")               \n            flag_on", "=", "1", ";                    ", "\n        else\n            flag_on", "=", "2", ";", "\n                  \n}\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "试过将中断函数中的if语句表达改成", "if-if-if形式，电脑收到的还是“Error！”。", "\n", "试过if-else形式，只保留第一句和第二句，将第三句注释掉，收到的是“Turn off ad!”。", "\n", "试过将if语句改过很多不同的形式都不行。", "\n", "也试过在中断语句中将if语句改成switch语句控制，结果也不行。", "\n", "下面尝试了将后两句注释掉，结果在调试窗口里输入任何数字，AD检测都会开启", "\n", "void ser() interrupt ", "4", "\n{\n    RI", "=", "0", ";", "\n    a", "=", "SBUF", ";", "\n    flag_uart", "=", "1", ";", "\n        if(a", "=", "=", "1", ")                    \n            flag_on", "=", "0", ";                ", "\n/*        else if(a", "=", "=", "2", ")               \n            flag_on", "=", "1", ";                    ", "\n        else\n            flag_on", "=", "2", ";          */", "\n                  \n}\n\n", "\n", "\n", "我想要达到的结果", "\n", "想要实现在串口调试助手发送命令“1”，单片机返回“Turn on ad!”，并间隔1秒读取一次电位器的值，然后将值返回给电脑，显示“The voltage is %fV”", "\n", "“2”是停止，返回“Turn off ad!”", "\n", "“其他数值”，返回“Error!”"]], "Tag": "程序设计"}
{"Answer": "create trigger update_product_primary_key before insert on Product for each row begin  select count(*) into @count from Product; set new.Product_id =concat('CP',lpad(@count + 1,3,'0')); end;", "Konwledge_Point": "if语句的形式", "Question": ["求一条mysql5.0的触发器语句", ["语句主要实现在“Product”表中插入一条记录时，将主键“Product_id”变成“CP001”、“CP002”.....的形式 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目是啥&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["if语句的形式:if", ["评测失败，输入的就是浮点型，但光说是错的", "#include", "using namespace std;", "int main()", "{", "    float a,b,max;", "    cin>>a>>b;", "    if(a>b)", "{", "    cout<<a;", "}", "else", "{", "    cout<<b;", "}", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "先逐个表达式翻译\r\n```C++\r\n    if (i) //非零\r\n    {\r\n        if (i &lt; 0)\r\n        {\r\n            i = Math.max( 0, len + i );\r\n        }\r\n        /* 可以省略，保持不变\r\n        else\r\n        {\r\n            i = i;\r\n        }\r\n        */\r\n    }\r\n    /* 可以省略，已经等于 0 了\r\n    else\r\n    {\r\n        i = 0;\r\n    }\r\n    */\r\n```\r\n可以简化为\r\n```C++\r\n    if (i &lt; 0)\r\n        i = Math.max( 0, len + i );\r\n```", "Konwledge_Point": "if语句的形式", "Question": ["以下代码更改为if语句的形式", ["i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;格式化一些就能看明白了&amp;#xff0c;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;后面缺个&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (disc &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) //这里缺个&amp;#61;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x1&amp;#61;x2&amp;#61;%f\\n&amp;#34;&lt;/span&gt;, p);\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (disc &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x1&amp;#61;%f,x2&amp;#61;%f\\n&amp;#34;&lt;/span&gt;, p &amp;#43; &lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt;, p - &lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    (disc &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你这代码判断disc的值&amp;#xff0c; 最后那个判断条件(disc &amp;lt; 0)不需要加&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["C语言条件语句else-if形式", ["问题遇到的现象和发生背景", "\n", "C语言 条件语句 else-if形式", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#include<stdio.h>", "#include<math.h>", "int main(void)", "{", "    float a,b,c,disc,p,q;", "    printf(\"Please enter a b c:\");", "    scanf(\"%f，%f，%f\",&a,&b,&c);", "    if(a<0)", "        printf(\"不是二次方程!\\n\");", "    disc = pow(b,2)-4*a*c;", "    p = -b/(2*a);", "    q = sqrt(fabs(disc))/(2*a);", "    if(disc=0)", "        printf(\"x1=x2=%f\\n\",p);", "    else if(disc>0)", "        printf(\"x1=%f,x2=%f\\n\",p+q,p-q);", "    else(disc<0);", "        printf(\"x1=%fi,x2=%fi\",p+q,p-q);", "    return 0;", "}", "\n\n", "我的解答思路和尝试过的方法", "\n", "为什么在Code blocks和devc++上else（disc<0）后面都要加分号才能够正常运行？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;input()\n&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(n&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;sep&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,end&amp;#61;&amp;#39;&amp;#39;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; n:\n    &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;1\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,int(i)&amp;#43;1):\n        d*&amp;#61;j\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;!&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;sep&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,end&amp;#61;&amp;#39;&amp;#39;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i!&amp;#61;len(n)-1:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    s&amp;#43;&amp;#61;d\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;,s,&lt;span class=\"hljs-attribute\"&gt;sep&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;&amp;#61;int(n):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Yes&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;No&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["python阶乘和数题，要求用for循环，if语句", ["一个正整数如果等于组成它的各位数字的阶乘之和，则该正整数称为阶乘和数。例如正整数145，1!+4!+5!等于145，因此145就是一个阶乘和数。输入一个正整数，计算它的各位数字的阶乘之和，并判断它是否是一个阶乘和数。注意：输入的正整数，以及组成它的各位数字的阶乘之和都不会超过int类型的表示范围，并且输入的正整数的最高位不为0。", "\n", "【输入形式】", "\n", " 从控制台输入一个正整数。", "\n", "【输出形式】", "\n", " 先输出输入的正整数和一个逗号，并从最高位开始输出组成该正整数的各位数字的阶乘相加形式，然后输出等号“=”和各位数字阶乘之和，最后在下一行输出字符串Yes表示该正整数是阶乘和数，否则输出字符串No表示该正整数不是阶乘和数，输出Yes或No后输出回车换行符。所有输出字符之间都没有空格分隔。", "\n", "【输入样例1】", "\n", "145", "\n", "【输出样例1】", "\n", "145,1!+4!+5!=145"]], "Tag": "程序设计"}
{"Answer": "结果一样，不过第二种层次感强一些", "Konwledge_Point": "if语句的形式", "Question": ["以下两种js编写的条件语句的差别是什么，谢谢？", ["第一种方式是", "\nif (stmt)", "\n{", "\n...", "\n}", "\nelse if (stmt)", "\n{", "\n...", "\n}", "\n另一种是", "\nif (stmt)", "\n{", "\n...", "\n}", "\nelse", "\n{", "\nif (stmt)", "\n{", "\n...", "\n}", "\n}", "\n区别在哪里？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nn&amp;#61;int(&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个正整数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,n):\n    &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; i&lt;span class=\"hljs-comment\"&gt;//100&lt;/span&gt;\n    &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; (i-a*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//10&lt;/span&gt;\n    c &amp;#61; (i-a*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;-b*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &amp;#61;&amp;#61; pow(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&amp;#43;pow(&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&amp;#43;pow(c,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;):\n        print(i)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["python水仙花习题，要求用for循环，if语句", ["【问题描述】编写一个程序，输入一个正整数N(N大于等于100小于等于999)，求出100", "N之间的所有水仙花数。所谓的水仙花数是：如果一个三位数的个位数、十位数、百位数的立方和等于该数自身，就称这个数为水仙花数。", "【输入形式】输入一个正整数N。", "【输出形式】输出从100到N之间的所有水仙花数，一行一个。", "【样例输入】", " 400", "【样例输出】", " 153", " 370", " 371", "【样例说明】输入一个的正整数400，输出为100", "400之间的水仙花数153，370，371。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; int(input())\n&lt;span class=\"hljs-attribute\"&gt;outnumber&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; y10 in range(n // &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; y5 in range(n // &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; y2 in range(n // &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; (y10 * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; y5 * &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#43; y2 * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61;&amp;#61; n:\n                &lt;span class=\"hljs-attribute\"&gt;outnumber&lt;/span&gt;&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(outnumber)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;&lt;font style=\"color:#f00\"&gt;有帮助请点击右上角采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/01379148053617.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["python习题，换散币，要求用for循环和if语句", ["将n元（n是100的倍数）换成用10元、5元、2元的组合（其中每一面值都可取0），一共有多少种组合？输入n，输出组合数。", "\n", "【输入形式】", "\n", "输入钱币总额n", "【输出形式】", "\n", "输出组合数", "【样例输入】", "\n", "100", "【样例输出】", "66"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;# s &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;toooold-f0-8 A-F&amp;#39;&lt;/span&gt;\ns&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\nimport re\n&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; re.findall(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\w{1}-\\w{1}&amp;#39;&lt;/span&gt;, s)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt; in &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;st&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n    ed &amp;#61; &lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;st&lt;/span&gt;.isdigit() &lt;span class=\"hljs-built_in\"&gt;and&lt;/span&gt; ed.isdigit():\n        v &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(str, &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;st&lt;/span&gt;), &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(ed) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))))\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        v &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;([chr(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(ord(&lt;span class=\"hljs-keyword\"&gt;st&lt;/span&gt;), ord(ed) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)])\n    s &amp;#61; s.replace(&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;, v)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(s)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1 id=\"有帮助请点击右上角采纳有问题继续交流你的采纳是对我回答的最大的肯定和动力\"&gt;&lt;font style=\"color:#f00\"&gt;有帮助请点击右上角采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/096270951536192.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["Python扩展速记符 要求用for循环，if语句", ["【问题描述】下面的描述字符串的方法称为速记符：", "1.\"a-d\" : 代表ASCII码在a和b之间的所有字符构成的连续字符串。其中必有a<b。", "2.\"a-b-c\" : 代表ASCII码在a和b, 再到c之间的所有字符构成的连续字符串。其中必有a<b<c。", "例如：\"a-c\"代表字符串\"abc\"，\"a-z\"代表字符串\"abcdefghhijklmnopqrstuvwxyz\",\"a-c-g\"代表字符串\"abcdefg\"，等等。", "在字符串开始和结尾处的'-'不做处理。 编写函数expand(s1),将字符串s1中的速记符号加以扩展形成等价的完整串.允许处理大小写字母和数字,并可以处理诸如a-b-c与a-z0-9与-a-z等情况.", "编写程序,使用函数expand,将输入的字符串s1,进行处理,将结果输出.正确安排好前导和尾随的-.", "【输入形式】控制台输入一行，即为s1的内容.可以含有空格,制表符,换行符.", "【输出形式】控制台输出变换后的s1.", "【样例输入】toooold-f0-8 A-F", "【样例输出】tooooldef012345678 ABCDEF", "【样例说明】输出对输入中的d-f,0-8,A-F进行了扩展."]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;出生日期&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;当前日期&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n\na1 &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)\nb1 &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;实际年龄&amp;#xff1a;&amp;#39;&lt;/span&gt;,int(b1[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;-int(a1&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["python习题，要求用if语句，帅哥美女们康一康！", ["【问题描述】编写一个程序，用户输入出生日期和当前日期，计算出实际年龄。", "【输入形式】用户在第一行输入出生日期，在第二行输入当前日期。日期格式为年.月.日，即中间用.分割。", "【输出形式】程序在下一行输出实际年龄。", "【样例输入】", "1964.2.19", "2001.7.21", "【样例输出】37", "【样例说明】用户第一次输入的日期为出生日期，回车表示本次输入结束。第二次输入的为当前日期，回车表示本次输入结束。系统返回实际年龄"]], "Tag": "程序设计"}
{"Answer": "create trigger update_product_primary_key before insert on Product for each row begin  select count(*) into @count from Product; set new.Product_id =concat('CP',lpad(@count + 1,3,'0')); end;", "Konwledge_Point": "if语句的形式", "Question": ["一条SqlServer2000的触发器语句转换为mysql5.0的触发器语句", ["以下是一条SqlServer2000的触发器语句，现希望转换成mysql5.0的触发器语句 ", "\n\n", "该语句主要实现在Product表中插入一条记录时，将主键“Product_id”变成“CP001”、“CP002”.....的形式", "\n,只要是能实现这个功能就行了！！！", "\n\n", "CREATE  trigger Product_id ", "\non dbo.Product ", "\ninstead OF insert", "\nas ", "\nbegin ", "\ndeclare @preStr varchar(10) ", "\ndeclare @tempID varchar(16) ", "\ndeclare @preTl varchar(2) ", "\nselect * into #temptb from inserted ", "\nselect @preTl=max(Product_id ) from inserted", "\nset @preStr=@preTl ", "\ndeclare @sequNum int ", "\nselect @tempID=max(Product_id ) from Product where Product_id  like @preStr+'%' ", "\nif(@tempID is null) ", "\nset @sequNum=1 ", "\nelse ", "\n  set @sequNum=cast(subString(@tempID,3,3) as int)+1 ", "\nset @tempID=right('000'+cast(@sequNum as varchar),3) ", "\nset @tempID=@preStr+@tempID ", "\nupdate #temptb set Product_id =@tempID ", "\ninsert into Product select * from #temptb", "\nend ", "\n\n", "静候各位高手回音~！ "]], "Tag": "程序设计"}
{"Answer": "else if(x&gt;=1&amp;&amp;x&lt;10)\r\n{\r\n   \r\n}", "Konwledge_Point": "if语句的形式", "Question": ["刚学c语言，哪位前辈帮我看看哪里错了，谢谢", ["为什么不执行else后面的语句，我输入大于10数字执行的是elseif语句，程序调试也没错误啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;判断质数的函数吗&amp;#xff1f;你想要改成什么样子呢&amp;#xff1f;&lt;br /&gt;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;isPrime&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;isPrime&lt;/span&gt;(n))\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;n is a prime\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;n is not a prime\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["如何改变一下函数写法呢", ["大家看看怎样改成函数调用形式，现在只是普通函数形式，现在不知道改用以后if语句还能不能用"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What you do actually works, because you use the special comma-ok idiom of the &lt;a href=\"https://golang.org/ref/spec#Type_assertions\" rel=\"nofollow noreferrer\"&gt;type assertion&lt;/a&gt; which does not panic if the assertion does not hold, and because maps can be indexed with keys which are not in it (which will result in the zero value of the value type of the map).&lt;/p&gt;\n\n&lt;p&gt;It's true that with this you can't tell if the key is in the map or not, or it is but its value is &lt;code&gt;nil&lt;/code&gt;, but you already suspected this as if the assertion does not hold, you print &lt;em&gt;\"value does not exist or is not a string\"&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;To test all \"corner\" cases, see this example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;m := map[string]interface{}{\n    \"key\":  \"the value\",\n    \"key2\": 2,\n    \"key3\": nil,\n    // \"key4\":\"\", // Uncommented on purpose\n}\n\nfor _, k := range []string{\"key\", \"key2\", \"key3\", \"key4\"} {\n    if value, ok := m[k].(string); ok {\n        fmt.Printf(\"[key: %s] value exists and is a string: %s\n\", k, value)\n    } else {\n        fmt.Printf(\"[key: %s] value does not exist or is not a string: %s\n\",\n            k, value)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output (try it on the Go Playground):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[key: key] value exists and is a string: the value\n[key: key2] value does not exist or is not a string: \n[key: key3] value does not exist or is not a string: \n[key: key4] value does not exist or is not a string: \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So basically you &lt;em&gt;can&lt;/em&gt; use this, nothing bad will happen from it (e.g. panic or memory leak), just know its limits (e.g. you couldn't get the value associated for &lt;code&gt;\"key2\"&lt;/code&gt; as it's not of &lt;code&gt;string&lt;/code&gt; type).&lt;/p&gt;\n\n&lt;p&gt;If your intention is to get the value for a key if it exists and is of type &lt;code&gt;string&lt;/code&gt;, then this is what your code exactly does. Although you should avoid data structures and constructs where you need this, as it's harder to understand and maintain in larger projects.&lt;/p&gt;\n\n&lt;p&gt;What I mean by this is for example if at some point in your code you expect the key &lt;code&gt;\"somekey\"&lt;/code&gt; to have a &lt;code&gt;string&lt;/code&gt; value associated and it does not, you won't immediately know why it is so; is it because the map does not contain that key, or is it because it does but with a value of wrong type (or the value may even be &lt;code&gt;nil&lt;/code&gt;)? Further testing / debugging is needed to track down the root cause.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "if语句的形式", "Question": ["在一个语句中执行映射查找和类型声明是“坏形式”吗？", ["\n\n", "I just realized that it's possible to do a map lookup and a type/interface-assertion in one statement.", "\n\n", "m := map[string]interface{}{\n    \"key\": \"the value\",\n}\nif value, ok := m[\"key\"].(string); ok {\n    fmt.Printf(\"value exists and is a string: %s\n\", value)\n} else {\n    fmt.Println(\"value does not exist or is not a string\")\n}\n", "\n\n", "Is this considered bad?\nI've not seen any official documentation commenting this.", "\n\n", "edit: I know this code can not distinguish between \"key doesn't exist\" and \"value is of incorrect type\".", "\n\n", "edit2: ahem, the print in the else-clause was incorrect :(", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;声明一个数组&amp;#xff0c;将i的值追加到数组里&amp;#xff0c;最后在输出&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n#……原有代码\n&lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i)   #替换print(&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;,true)\n#……原有代码\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(i)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["如何把多个打印结果变成列表的形式-python", ["我使用了if语句筛选出了我想要的数据，但输出打印的格式是一行一行慢慢的输出的，这样我就无法在另一个.py脚本进行引用", "\n", "\n", "\n", "我需要把输出的内容变成像这样的一个列表形式： [''ALEPH_USDT True'',''OGN_USDT True'',''HC_USDT True'',''QNT_USDT True'',''POOL_USDT True'']"]], "Tag": "程序设计"}
{"Answer": "不好意思，上面的SqlMapSession应该是SqlMapExecutorDelegate\r\n\r\n楼主可以将\r\nSqlMapClient强制转成SqlMapClientImpl,然后获取delegate.\r\n\r\nSqlMapClientImpl sqlMapClientImpl = (SqlMapClientImpl)sqlMapClient;\r\nSqlMapExecutorDelegate delegate = sqlMapClientImpl.getDelegate();\r\n\r\n在delegate中，可以取到所有的环境信息\r\n包括\r\n\r\n[quote]  private HashMap mappedStatements;\r\n  private HashMap cacheModels;\r\n  private HashMap resultMaps;\r\n  private HashMap parameterMaps;[/quote]\r\n\r\n推荐用户可以根据这条线简单研究一下ibatis的源代码，不会花很长时间的。里面有些属性可能是private的，并且没有提供get和set方法，这样的话，可以用反射机制获得和设置。\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.lang.reflect.Method;\r\nimport java.lang.reflect.Modifier;\r\n\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\n\r\npublic class ReflectUtil\r\n{\r\n\r\n  private static final Log logger = LogFactory.getLog(ReflectUtil.class);\r\n\r\n  public static void setFieldValue(Object target, String fname, Class ftype,\r\n      Object fvalue)\r\n  {\r\n    if (target == null || fname == null || \"\".equals(fname)\r\n        || (fvalue != null &amp;&amp; !ftype.isAssignableFrom(fvalue.getClass())))\r\n    {\r\n      return;\r\n    }\r\n    Class clazz = target.getClass();\r\n    try\r\n    {\r\n\r\n      Method method = clazz.getDeclaredMethod(\"set\"\r\n          + Character.toUpperCase(fname.charAt(0)) + fname.substring(1),\r\n          new Class[] { ftype });\r\n      if (!Modifier.isPublic(method.getModifiers()))\r\n      {\r\n        method.setAccessible(true);\r\n      }\r\n      method.invoke(target, new Object[] { fvalue });\r\n\r\n    } catch (Exception me)\r\n    {\r\n      if (logger.isDebugEnabled())\r\n      {\r\n        logger.debug(me);\r\n      }\r\n      try\r\n      {\r\n        Field field = clazz.getDeclaredField(fname);\r\n        if (!Modifier.isPublic(field.getModifiers()))\r\n        {\r\n          field.setAccessible(true);\r\n        }\r\n        field.set(target, fvalue);\r\n      } catch (Exception fe)\r\n      {\r\n        if (logger.isDebugEnabled())\r\n        {\r\n          logger.debug(fe);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}", "Konwledge_Point": "if语句的形式", "Question": ["SQLMAP中，我想抓取sql，怎么做？", ["DAO里面写了个方法：", "\npublic List getList(HashMap map) {", "\n   return this.getSqlMapClientTemplate().queryForList(“sqlName”,map);", "\n}", "\n这样的一个方法，我执行了一个名叫：sqlName 的sql。", "\n\n", "\n        select  *  from test where id=#id#", "\n\n", "我想在调用getList()这个方法的时候，我能把sql也获取到一个String（Object）里面", "\n???", "\n不知道如何实现？？或者还有其他的办法？？？", "\n\n", "[b]问题补充：[/b]", "\n因为考虑到不去破坏整体框架，所以sql肯定要写到xml文件里面。", "\n但是部分sql需要抓取出来使用，用ireport导出报表，需要传sql。。", "\n不知道还有什么办法能实现这样的需要？？", "\n简单的说就是sql需要使用2次，而且尽量些到xml配置文件中", "\n\n", "谢谢。", "\n[b]问题补充：[/b]", "\nDAO里面写了个方法：", "\npublic List getList(HashMap map) {", "\n   return this.getSqlMapClientTemplate().queryForList(“sqlName”,map);", "\n}", "\n这样的一个方法，我执行了一个名叫：sqlName 的sql。", "\n\n", "\n        select  *  from test where id=#id#", "\n\n", "我想在调用getList()这个方法的时候，我能把sql也获取到一个String（Object）里面", "\n???", "\n不知道如何实现？？或者还有其他的办法？？？", "\n\n", "[b]问题补充：[/b]", "\n因为考虑到不去破坏整体框架，所以sql肯定要写到xml文件里面。", "\n但是部分sql需要抓取出来使用，用ireport导出报表，需要传sql。。", "\n不知道还有什么办法能实现这样的需要？？", "\n简单的说就是sql需要使用2次，而且尽量些到xml配置文件中", "\n\n", "谢谢。", "\n\n", "linpyi 你说对了，这个项目是改造项目。jasper文件都用以前的。", "\n\n", "所以没有办法再来做一次。只有想办法传个sql进去比较简单，快速了。", "\n\n", "simon511 提的建议可以把sql拿出来，但是我试验了下，传了个map进去，好像参数没有传进去，出来的还是id=?这样的形式。不知道我是否传错地方？", "\n代码如下：", "\n        String sql1 = null;", "\n        ExtendedSqlMapClient extendedSqlMapClient = (ExtendedSqlMapClient) this.getSqlMapClient();", "\n        MappedStatement mappedStatement = extendedSqlMapClient", "\n                .getMappedStatement(\"getADSLReasonAspList\");", "\n        if (mappedStatement != null) {", "\n            RequestScope request = new RequestScope();", "\n            request.setStatement(mappedStatement);", "\n            sql1 = mappedStatement.getSql().getSql(request, map);", "\n        }", "\n        System.out.println(sql1);", "\n\n", "谢谢。", "\n\n", "cats_tiger 的方法我想如果有1000人并发，是否有问题？", "\n导致sql乱续？方法有点难度哈。目前也不知道会不会导致其他问题产生。", "\n\n", "谢谢大家的指导。", "\n\n", "ps: 怎么提问没有“回复”这样的按钮啊？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if(a&amp;#61;1) 这几句里都少了 &amp;#39;&amp;#61;&amp;#39;, 应为 if (a &amp;#61;&amp;#61; 1)  ,后面的 if(a &amp;#61;&amp;#61; 2)  &lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["输入1，2时输出study，其他情况输出error，目前运行后不管输入哪个数字全部输出study", ["使用if-else嵌套语句，但不管哪种形式编译运行后最终结果全部都是study"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在方法中进行try catch处理方法中的异常不会向上抛出。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["想要这个程序分开成两个写", ["这是一个简单的学生管理系统，属性只有id号和用户名", "我现在写的是这个：", "\n", "\n", "我想把增删改查这几个if和else if语句以方法的形式写在另一个文件里，把管理系统的选项设置写在一个文件，然后在这个文件里实例化对象，输入数字进行方法调用。但是另一个文件里连接数据库的时候，如果要抛出异常好像只能出现在main方法里，可不可以两个文件都有main呢？我现在应该怎么分成两个文件呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考下&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/zhaijiahui/p/8391701.html\"&gt;https://www.cnblogs.com/zhaijiahui/p/8391701.html&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["Python pymssql问题", ["\n代码：\nsql1=f\"select People_ID from Account where People_ID = {self.contents3}\"\ncursor.execute(sql1)\nprint(cursor.fetchone())\nprint(self.contents3)\nif(self.contents3 in cursor.fetchone()):\n     tkmessage.showwarning(title=\"warning\",message=\"该身份证号已注册过账号\")", "\n\n", "报错：", "\n\n", "    if(self.contents3 in cursor.fetchone()):", "\nTypeError: argument of type 'NoneType' is not iterable", "\n\n", "代码中cursor.fetchone()是由输出的数据的且是元组形式，为什么我if语句会报错？", "\n\n", "谢谢大佬解惑", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我运行了你的代码&amp;#xff0c;输入1 2 3 4 5 6 7 8 9 10&amp;#xff0c;向右移 2&amp;#xff0c;发现在函数moveToRight有两个问题。&lt;/p&gt;\n\n&lt;p&gt;1&amp;#xff09;for循环语句有多了分号&lt;/p&gt;\n\n&lt;p&gt;for(i&amp;#61;0;i&amp;lt;(length-m);i&amp;#43;&amp;#43;);&lt;/p&gt;\n\n&lt;p&gt;*(p&amp;#43;i&amp;#43;m)&amp;#61;*(p&amp;#43;i);&lt;/p&gt;\n\n&lt;p&gt;2&amp;#xff09;循环顺序错了&amp;#xff0c;导致数据覆盖了。你看下面我运行你的代码打印的中间结果就知道了。应改倒序拷贝数据。&lt;/p&gt;\n\n&lt;p&gt;for(i&amp;#61;length-m-1; i&amp;gt;&amp;#61; 0;--i)&lt;/p&gt;\n\n&lt;p&gt;p[i&amp;#43;m]&amp;#61;p[i];&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;ATTENTION: wrong MoveToRight and moveToLeft\n\n#include  &amp;lt;stdio.h&amp;gt;\n#include  &amp;lt;stdlib.h&amp;gt;\n\n#define LENGTH 10\n\nint main(void) {\n    void input(int *p, int n);\n    void output(int *p, int n);\n    void move(int *p, int length, int m);\n    int a[LENGTH], m;\n    int *p &amp;#61; a;\n    \n    printf(&amp;#34;Please enter %d integer numbers: &amp;#34;, LENGTH);\n    input(p, LENGTH);\n    \n    printf(&amp;#34;Please enter steps to move (positive steps to move right; negative steps to move left): &amp;#34;);\n    scanf(&amp;#34;%d&amp;#34;, &amp;amp;m);\n    move(p, LENGTH, m);\n    \n    printf(&amp;#34;After moving %d steps, the array becomes: \\n&amp;#34;, m);\n    output(p, LENGTH);\n    return 0;\n}\n\nvoid input(int *p, int n) {\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        scanf(&amp;#34;%d&amp;#34;, p&amp;#43;&amp;#43;);\n}\n\nvoid output(int *p, int n) {\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        printf(&amp;#34;%d &amp;#34;, *p&amp;#43;&amp;#43;);\n    printf(&amp;#34;\\n&amp;#34;);\n}\n\nvoid moveToRight(int *p, int length, int m) {\n    int b[m];\n    int i;\n    \n    for (i &amp;#61; 0; i &amp;lt; m; i&amp;#43;&amp;#43;) {\n        b[i] &amp;#61; *(p &amp;#43; i &amp;#43; length - m);\n    }\n    printf(&amp;#34;array b, length %d:\\n&amp;#34;, m);\n    output(b, m);\n    \n    for (i &amp;#61; 0; i &amp;lt; (length - m); i&amp;#43;&amp;#43;)\n        *(p &amp;#43; i &amp;#43; m) &amp;#61; *(p &amp;#43; i);\n    printf(&amp;#34;array p, after moving %d elements: \\n&amp;#34;, length - m);\n    output(p, length);\n        \n    for (i &amp;#61; 0; i &amp;lt; m; i&amp;#43;&amp;#43;)\n        *(p &amp;#43; i) &amp;#61; b[i];\n\n    printf(&amp;#34;array p, after moving %d elements: \\n&amp;#34;, length - m);\n    output(p, length);\n}\n\nvoid moveToLeft(int *p, int length, int m) {\n    int b[-m];\n    int a[-m];\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; -m; i&amp;#43;&amp;#43;) {\n        b[i] &amp;#61; *(p &amp;#43; i);\n        a[i] &amp;#61; b[i];\n    }\n    for (i &amp;#61; 0; i &amp;lt; (length &amp;#43; m); i&amp;#43;&amp;#43;)\n    *(p &amp;#43; i) &amp;#61; *(p &amp;#43; i - m);\n    for (i &amp;#61; 0; i &amp;lt; -m; i&amp;#43;&amp;#43;)\n        *\n        (p &amp;#43; i &amp;#43; length &amp;#43; m) &amp;#61; a[i];\n}\n\nvoid move(int *p, int length, int m) {\n    if (m &amp;gt; 0) {\n        moveToRight(p, length, m);\n    } else if (m &amp;#61;&amp;#61; 0) {\n        ;\n    } else {\n        moveToLeft(p, length, m);\n    }\n}\n\n// Output:\nPlease enter 10 integer numbers: 1 2 3 4 5 6 7 8 9 10\nPlease enter steps to move (positive steps to move right; negative steps to move left): 2\narray b, length 2:\n9 10 \narray p, after moving 8 elements: \n1 2 1 2 1 2 1 2 1 2 \narray p, after moving 8 elements: \n9 10 1 2 1 2 1 2 1 2 \nAfter moving 2 steps, the array becomes: \n9 10 1 2 1 2 1 2 1 2 &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;更正了 moveToRight 函数后的代码和运行结果。moveToLeft 仍然待更正。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;// Corrected moveToRight. Wrong moveToLeft\n#include  &amp;lt;stdio.h&amp;gt;\n#include  &amp;lt;stdlib.h&amp;gt;\n\n#define LENGTH 10\n\nint main(void) {\n    void input(int *p, int n);\n    void output(int *p, int n);\n    void move(int *p, int length, int m);\n    int a[LENGTH], m;\n    int *p &amp;#61; a;\n    \n    printf(&amp;#34;Please enter %d integer numbers: &amp;#34;, LENGTH);\n    input(p, LENGTH);\n    \n    printf(&amp;#34;Please enter steps to move (positive steps to move right; negative steps to move left): &amp;#34;);\n    scanf(&amp;#34;%d&amp;#34;, &amp;amp;m);\n    move(p, LENGTH, m);\n    \n    printf(&amp;#34;After moving %d steps, the array becomes: \\n&amp;#34;, m);\n    output(p, LENGTH);\n    return 0;\n}\n\nvoid input(int *p, int n) {\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        scanf(&amp;#34;%d&amp;#34;, p&amp;#43;&amp;#43;);\n}\n\nvoid output(int *p, int n) {\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        printf(&amp;#34;%d &amp;#34;, *p&amp;#43;&amp;#43;);\n    printf(&amp;#34;\\n&amp;#34;);\n}\n\nvoid moveToRight(int *p, int length, int m) {\n    int b[m];\n    int i;\n    \n    for (i &amp;#61; 0; i &amp;lt; m; i&amp;#43;&amp;#43;) {\n        b[i] &amp;#61; *(p &amp;#43; i &amp;#43; length - m);\n    }\n    printf(&amp;#34;array b, length %d:\\n&amp;#34;, m);\n    output(b, m);\n    \n    for(i &amp;#61; length-m-1; i &amp;gt;&amp;#61; 0; --i)\n        p[i&amp;#43;m]&amp;#61;p[i];\n    printf(&amp;#34;array p, after moving %d elements: \\n&amp;#34;, length - m);\n    output(p, length);\n        \n    for (i &amp;#61; 0; i &amp;lt; m; i&amp;#43;&amp;#43;)\n        *(p &amp;#43; i) &amp;#61; b[i];\n\n    printf(&amp;#34;array p, after moving %d elements: \\n&amp;#34;, length - m);\n    output(p, length);\n}\n\nvoid moveToLeft(int *p, int length, int m) {\n    int b[-m];\n    int a[-m];\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; -m; i&amp;#43;&amp;#43;) {\n        b[i] &amp;#61; *(p &amp;#43; i);\n        a[i] &amp;#61; b[i];\n    }\n    for (i &amp;#61; 0; i &amp;lt; (length &amp;#43; m); i&amp;#43;&amp;#43;)\n    *(p &amp;#43; i) &amp;#61; *(p &amp;#43; i - m);\n    for (i &amp;#61; 0; i &amp;lt; -m; i&amp;#43;&amp;#43;)\n        *\n        (p &amp;#43; i &amp;#43; length &amp;#43; m) &amp;#61; a[i];\n}\n\nvoid move(int *p, int length, int m) {\n    if (m &amp;gt; 0) {\n        moveToRight(p, length, m);\n    } else if (m &amp;#61;&amp;#61; 0) {\n        ;\n    } else {\n        moveToLeft(p, length, m);\n    }\n}\n\n\n// Output\nPlease enter 10 integer numbers: 1 2 3 4 5 6 7 8 9 10\nPlease enter steps to move (positive steps to move right; negative steps to move left): 2\narray b, length 2:\n9 10 \narray p, after moving 8 elements: \n1 2 1 2 3 4 5 6 7 8 \narray p, after moving 8 elements: \n9 10 1 2 3 4 5 6 7 8 \nAfter moving 2 steps, the array becomes: \n9 10 1 2 3 4 5 6 7 8 &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;另外注意代码缩进&amp;#xff0c;提高可读性。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["C语言数位转移输出错误", ["\n", "#include  <stdio.h>\n#include  <stdlib.h>\n#define  LENGTH  10\nint  main(void){\n        void  input(int  *p,  int  n);\n        void  output(int  *p,  int  n);\n        void  move(int  *p,  int  length,  int  m);\n        int  a[LENGTH],  m; \n        int  *p  =  a;\n        input(p,  LENGTH);\n        scanf(\"%d\",  &m);\n        move(p,  LENGTH,  m);\n        output(p,  LENGTH);\n        return  0;\n}\nvoid  input(int  *p,  int  n){        \nint i;\nfor(i=0;i<n;i++)\nscanf(\"%d \",p++);\n}\nvoid  output(int  *p,  int  n){\nint i;\nfor(i=0;i<n;i++)\nprintf(\"%d \",*p++);\n}\nvoid  moveToRight(int  *p,  int  length,  int  m){\nint b[m],a[m];\nint i;\nfor(i=0;i<m;i++) \n{ \nb[i]=*(p+i+length-m);\na[i]=b[i];\n}\nfor(i=0;i<(length-m);i++);\n*(p+i+m)=*(p+i);\nfor(i=0;i<m;i++)\n*(p+i)=a[i];\n}\n\nvoid  moveToLeft(int  *p,  int  length,  int  m){\nint b[-m];\nint a[-m];\nint i;\nfor(i=0;i<-m;i++)\n{\nb[i]=*(p+i);\na[i]=b[i];\n}\nfor(i=0;i<(length+m);i++);\n*(p+i)=*(p+i-m);\nfor(i=0;i<-m;i++)\n*(p+i+length+m)=a[i];\n}\n\tmove(int  *p,  int  length,  int  m){\n        if(m  >  0){\n                moveToRight(p,  length,  m);\n        }else  if(m  ==  0){\n                ; \n                \n        }else{\n                moveToLeft(p,  length,  m);\n        }\n}", "\n\n", "【问题描述】", "\n\n", "定义一个长度为10的一维整型数组，并编写函数分别实现如下功能：", "\n\n", "（1）函数input：对数组的各元素实现从键盘输入赋值。", "\n\n", "（2）函数output：将数组的所有元素向屏幕打印输出。", "\n\n", "（3）函数moveToRight：向右循环移动数组元素", "\n\n", "（4）函数moveToLeft：向左循环移动数组元素", "\n\n", "（5）函数move：将数组元素向左或向右循环移动m个位置。移动规则为：", "\n\n", "● 若m>0，调用moveToRight函数，执行向右循环移动；", "\n\n", "● 若m=0，不做任何移动；", "\n\n", "● 若m<0，调用moveToLeft函数，执行向左循环移动。", "\n\n", "目前已编写完成main函数和move函数，请编程实现input函数、output函数、moveToRight函数和moveToLeft函数。", "\n\n", "/*", "\n\n", "@Filename: ex605.c", "\n\n", "@Author: ", "\n\n", "@Version: 1.0", "\n\n", "@Date: 2021-03-18", "\n\n", "@Description: Loopy Moving of Array Element", "\n\n", "*/", "\n\n", "#include <stdio.h>", "\n\n", "#include <stdlib.h>", "\n\n", "#define LENGTH 10", "\n\n", "/*主函数*/", "\n\n", "int main(void){", "\n\n", "/*声明函数*/", "\n\n", "void input(int *p, int n);", "\n\n", "void output(int *p, int n);", "\n\n", "void move(int *p, int length, int m);", "\n\n", " ", "\n\n", "/*定义数据结构*/", "\n\n", "int a[LENGTH], m;//m表示数组元素循环移动的位置个数", "\n\n", "int *p = a;", "\n\n", " ", "\n\n", "/*调用input函数，通过键盘输入为数组a赋值*/", "\n\n", "input(p, LENGTH);", "\n\n", " ", "\n\n", "/*从键盘输入为循环移动位置个数m赋值*/", "\n\n", "scanf(\"%d\", &m);", "\n\n", "/*调用move函数，完成数组元素的循环移动*/", "\n\n", "move(p, LENGTH, m);", "\n\n", " ", "\n\n", "/*调用output函数，输出移动后的数组元素*/", "\n\n", "output(p, LENGTH);", "\n\n", "return 0;", "\n\n", "}", "\n\n", "/*", "\n\n", " * 函数名称：input", "\n\n", " * 函数功能：通过键盘输入为一维数组元素赋值", "\n\n", " * 输入格式：各输入数据之间以空格分隔", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：n，int型，一维数组长度", "\n\n", " * 返回值：无", "\n\n", " */", "\n\n", "void input(int *p, int n){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", "/*", "\n\n", " * 函数名称：output", "\n\n", " * 函数功能：向屏幕打印输出一维数组元素值", "\n\n", " * 输出格式：各输出数据之间以空格分隔", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：n，int型，一维数组长度", "\n\n", " * 返回值：无", "\n\n", " */", "\n\n", "void output(int *p, int n){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：moveToRight", "\n\n", " * 函数功能：使一维数组各元素向右循环移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，循环移动的位置数", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void moveToRight(int *p, int length, int m){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：moveToLeft", "\n\n", " * 函数功能：使一维数组各元素向左循环移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，循环移动的位置数", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void moveToLeft(int *p, int length, int m){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：move", "\n\n", " * 函数功能：使一维数组元素循环向左或向右移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，表示循环移动的方向和移动的位置个数", "\n\n", " *          当m>0时，执行向右循环移动（水平方向从左向右循环移动）", "\n\n", " *          当m=0时，不做任何移动", "\n\n", " *          当m<0时，执行向左循环移动（水平方向从右向左循环移动）", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void move(int *p, int length, int m){", "\n\n", "if(m > 0){", "\n\n", "/*向右循环移动*/", "\n\n", "moveToRight(p, length, m);", "\n\n", " ", "\n\n", "}else if(m == 0){", "\n\n", "/*不移动*/", "\n\n", "; //空语句，什么都不做", "\n\n", " ", "\n\n", "}else{", "\n\n", "/*向左循环移动*/", "\n\n", "moveToLeft(p, length, m);", "\n\n", " ", "\n\n", "}", "\n\n", "}", "\n\n", "注：不得使用全局变量。", "\n\n", "【输入形式】", "\n\n", "有两行输入，第1行输入为数组元素赋值，第2行输入为m赋值", "\n\n", "【输出形式】", "\n\n", "有一行输出，输出循环移动后的数组各元素值", "\n\n", "【样例输入】", "\n\n", "1 2 3 4 5 6 7 8 9 10", "\n\n", "3", "\n\n", "【样例输出】", "\n\n", "8 9 10 1 2 3 4 5 6 7", "\n\n", "【样例输入】", "\n\n", "1 2 3 4 5 6 7 8 9 10", "\n\n", "-3", "\n\n", "【样例输出】", "\n\n", "4 5 6 7 8 9 10 1 2 3", "\n\n", "【样例说明】", "\n\n", "无", "\n\n", "【评分标准】", "\n\n", "正确性", "\n\n", "/*", "\n@Filename:  ex605.c", "\n@Author:  ", "\n@Version:  1.0", "\n@Date:  2021-03-18", "\n@Description:  Loopy  Moving  of  Array  Element", "\n*/", "\n#include  <stdio.h>", "\n#include  <stdlib.h>", "\n#define  LENGTH  10", "\n/*主函数*/", "\nint  main(void){", "\n        /*声明函数*/", "\n        void  input(int  *p,  int  n);", "\n        void  output(int  *p,  int  n);", "\n        void  move(int  *p,  int  length,  int  m);", "\n        ", "\n        /*定义数据结构*/", "\n        int  a[LENGTH],  m;//m表示数组元素循环移动的位置个数  ", "\n        int  *p  =  a;", "\n        ", "\n        /*调用input函数，通过键盘输入为数组a赋值*/", "\n        input(p,  LENGTH);", "\n        ", "\n        /*从键盘输入为循环移动位置个数m赋值*/", "\n        scanf(\"%d\",  &m);", "\n        /*调用move函数，完成数组元素的循环移动*/", "\n        move(p,  LENGTH,  m);", "\n        ", "\n        /*调用output函数，输出移动后的数组元素*/", "\n        output(p,  LENGTH);", "\n        return  0;", "\n}", "\n/*", "\n  *  函数名称：input", "\n  *  函数功能：通过键盘输入为一维数组元素赋值", "\n  *  输入格式：各输入数据之间以空格分隔  ", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：n，int型，一维数组长度  ", "\n  *  返回值：无  ", "\n  */", "\nvoid  input(int  *p,  int  n){", "\n        //  请编程实现本函数", "\n        int i; for(i=0;i<n;i++) scanf(\"%d \",p++);", "\n}", "\n/*", "\n  *  函数名称：output", "\n  *  函数功能：向屏幕打印输出一维数组元素值", "\n  *  输出格式：各输出数据之间以空格分隔  ", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：n，int型，一维数组长度", "\n  *  返回值：无  ", "\n  */", "\nvoid  output(int  *p,  int  n){", "\n        //  请编程实现本函数", "\n        int i; for(i=0;i<n;i++) printf(\"%d \",*p++);", "\n}", "\n", "\n/*", "\n  *  函数名称：moveToRight", "\n  *  函数功能：使一维数组各元素向右循环移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，循环移动的位置数", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  moveToRight(int  *p,  int  length,  int  m){", "\n        //  请编程实现本函数", "\n        int b[m],a[m]; int i; for(i=0;i<m;i++) { //1 2 3 4 5 6__2__5 6 1 2 3 4 b[i]=*(p+i+length-m); a[i]=b[i]; } for(i=0;i<(length-m);i++); *(p+i+m)=*(p+i); for(i=0;i<m;i++) *(p+i)=a[i];", "\n}", "\n", "\n/*", "\n  *  函数名称：moveToLeft", "\n  *  函数功能：使一维数组各元素向左循环移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，循环移动的位置数", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  moveToLeft(int  *p,  int  length,  int  m){", "\n        //  请编程实现本函数", "\n        int b[-m]; int a[-m]; int i; for(i=0;i<-m;i++) //1 2 3 4 5 6 __-2__3 4 5 6 1 2 { b[i]=*(p+i); a[i]=b[i]; } for(i=0;i<(length+m);i++); *(p+i)=*(p+i-m); for(i=0;i<-m;i++) *(p+i+length+m)=a[i];", "\n}", "\n", "\n/*", "\n  *  函数名称：move", "\n  *  函数功能：使一维数组元素循环向左或向右移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，表示循环移动的方向和移动的位置个数", "\n  *                    当m>0时，执行向右循环移动（水平方向从左向右循环移动）  ", "\n  *                    当m=0时，不做任何移动  ", "\n  *                    当m<0时，执行向左循环移动（水平方向从右向左循环移动）", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  move(int  *p,  int  length,  int  m){", "\n        if(m  >  0){", "\n                /*向右循环移动*/", "\n                moveToRight(p,  length,  m);", "\n                ", "\n        }else  if(m  ==  0){", "\n                /*不移动*/", "\n                ;  //空语句，什么都不做  ", "\n                ", "\n        }else{", "\n                /*向左循环移动*/", "\n                moveToLeft(p,  length,  m);", "\n                ", "\n        }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if(x &amp;#61;&amp;#61; y &amp;#43; z)   C语言中的等号是“&amp;#61;&amp;#61;”&amp;#xff0c;一个“&amp;#61;”是赋值&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["C语言选择结果相关问题", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "(", "void", ")", "{\n", "int", " x =", "-10", ", y = ", "5", ", z =", "0", ";\n", "if", " (x = y + z)\n", "printf", "(", "\"1\"", ");\n", "else", "\n", "printf", "(", "\"2\"", ");\n", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "1", "\n", "我的解答思路和尝试过的方法", "\n", "if (x = y + z)为假，是否根据", "https://it666.blog.csdn.net/article/details/117656810", "选择结构中的if第二种形式", "如果表达式为真,则执行语句块1,否则执行语句块2", "这条和题说不通啊？", "\n", "我想要达到的结果", "\n", "根据什么输出的1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最基本的概念没有弄明白哦&lt;br /&gt;你所谓的字符&amp;#xff0c;a、b、c、d&amp;#xff0c;那是你看到的&amp;#xff0c;但是在电脑里&amp;#xff0c;只有0和1&amp;#xff0c;那怎么表示a、b、c&amp;#xff1f;&lt;br /&gt;只能用0 和 1 组成数字强行表示 a、b、c&amp;#xff1b;&lt;br /&gt;同理&amp;#xff0c;怎么表示字符空格、回车、制表符&amp;#xff0c;同样的&amp;#xff0c;用0和1 组成数字。。&lt;br /&gt;这就是 ASCII 码&amp;#xff0c;你就理解为数字码&amp;#xff0c;用来对应的&lt;br /&gt;所以&amp;#xff0c;你这句if&amp;#xff0c;你就理解为数字之间的比较&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["ch是字符变量，在ch>='a'&&ch<='z  'a和z具体意义", ["郑轻oj1023", "\n", "#include<stdio.h>", "\n", "int main(){", "    char ch;", "    scanf(\"%c\",&ch);", "    if(ch>='a'&&ch<='z')", "    ch-=32;", "    printf(\"%c\",ch);", "    return 0;", "}", "\n", "问题是让输入一个字母，输出他的大写形式的字母。如输入a输出A", "\n", "if条件语句里面的（ch>='a'&&ch<='z'），1. 意思是ch是a的Ascii值到z的Ascii值之间对应的字符", "\n", "2.还是说单纯指的是ch为a到z之间的字符", "3.还是有别的含义或理解方式"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt; for (int i&amp;#61;0;i&amp;lt;arrStr.length ;i&amp;#43;&amp;#43; )   //自己只改了for语句开头       \n\t    {\n\t\t\tif(i.matches(E1))  {\n\t\t\t\tcountH&amp;#43;&amp;#43;;\n\t\t\t}\n\t\t\tif(i.matches(E2)) {\n\t\t\t\tcountE&amp;#43;&amp;#43;;\n\t\t\t}\n\t    }\ni只是索引呀&amp;#xff0c;应该要获取值所以改成arrStr[i]\n\n改后代码如下\n for (int i&amp;#61;0;i&amp;lt;arrStr.length ;i&amp;#43;&amp;#43; )   //自己只改了for语句开头       \n\t    {\n\t\t\tif(arrStr[i].matches(E1))  {\n\t\t\t\tcountH&amp;#43;&amp;#43;;\n\t\t\t}\n\t\t\tif(arrStr[i].matches(E2)) {\n\t\t\t\tcountE&amp;#43;&amp;#43;;\n\t\t\t}\n\t    }&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["Java编译报错无法取消引用int，请问该如何修改程序？", ["\n", "import java.util.Scanner;\npublic class Example1 {\n\tpublic static void main(String args[]) \n\t{\n\t\tSystem.out.println(\"请输入字符串\");\n\t\tScanner scan=new Scanner(System.in);\n\t\tString str = scan.next();\n\t\tString E1=\"[\\u4e00-\\u9fa5]\";\n        String E2=\"[a-zA-Z]\";\n\n        int countH=0;\n        int countE=0;\n        char[] arrChar=str.toCharArray();\n        String[] arrStr=new String[arrChar.length];\n\n        for (int i=0;i<arrChar.length ;i++ )\n            arrStr[i]=String.valueOf(arrChar[i]);\n\n     //请把程序中的“for (String i: arrStr )”改成传统的for语句形式进行调试；\n\n     //（源程序）  for (String i: arrStr ) {\n     //               if (i.matches(E1)) {\n     //                  countH++;\n     //               }\n     //               if (i.matches(E2)) {\n     //                  countE++;\n     //               }\n     //            }\n\n\n\t    for (int i=0;i<arrStr.length ;i++ )   //自己只改了for语句开头       \n\t    {\n\t\t\tif(i.matches(E1))  {\n\t\t\t\tcountH++;\n\t\t\t}\n\t\t\tif(i.matches(E2)) {\n\t\t\t\tcountE++;\n\t\t\t}\n\t    }\n                                                     \n     System.out.println(\"汉字的个数\"+countH);\n     System.out.println(\"字母的个数\"+countE);\n\t}\n}\n", "\n\n", "\n\n", "希望能有详细的解释，谢谢大家！"]], "Tag": "程序设计"}
{"Answer": "```\r\n wraps是python的装饰器的语法，表示执行这个方法的时候，需要先调用Conv2D，而Conv2D会再调用这个方法。\r\nZeroPadding2D就是用0填充你的矩阵。对于卷积神经网络，一般是用来填充图像的边缘\r\n**kwargs是可变名参数，这里是strides，前面的是args\r\n```", "Konwledge_Point": "if语句的形式", "Question": ["基于Keras的YOLOV3源码实现疑问", [" @wraps(Conv2D)\ndef DarknetConv2D(*args, **kwargs):\n    \"\"\"Wrapper to set Darknet parameters for Convolution2D.\"\"\"\n    darknet_conv_kwargs = {'kernel_regularizer': l2(5e-4)}\n    darknet_conv_kwargs['padding'] = 'valid' if kwargs.get('strides')==(2,2) else 'same'\n    darknet_conv_kwargs.update(kwargs)\n    return Conv2D(*args, **darknet_conv_kwargs)\n\ndef DarknetConv2D_BN_Leaky(*args, **kwargs):#*用于参数前面，表示传入的（多个）参数将按照元组的形式存储；**用于参数前则表示传入的（多个）参数将按照字典的形式存储\n    \"\"\"Darknet Convolution2D followed by BatchNormalization and LeakyReLU.\"\"\"\n    no_bias_kwargs = {'use_bias': False}\n    no_bias_kwargs.update(kwargs)\n    return compose(\n        DarknetConv2D(*args, **no_bias_kwargs),\n        BatchNormalization(),#归一化\n        LeakyReLU(alpha=0.1))#compose函数的作用：为嵌套函数  a = compose(b,c,d)   则a(1)=d(c(b(1)))\n\ndef resblock_body(x, num_filters, num_blocks):\n    '''A series of resblocks starting with a downsampling Convolution2D'''\n    # Darknet uses left and top padding instead of 'same' mode\n    x = ZeroPadding2D(((1,0),(1,0)))(x)#???\n    x = DarknetConv2D_BN_Leaky(num_filters, (3,3), strides=(2,2))(x)\n    for i in range(num_blocks):\n        y = compose(\n                DarknetConv2D_BN_Leaky(num_filters//2, (1,1)),\n                DarknetConv2D_BN_Leaky(num_filters, (3,3)))(x)\n        x = Add()([x,y])\n    return x\n", "\n\n", "    1.请问这里wraps的功能以及意义是什么？\n    2.源码中出现大量类似x = ZeroPadding2D(((1,0),(1,0)))(x)#???形式的语句，请问语句最后的（x）是什么意思？\n    3. x = DarknetConv2D_BN_Leaky(num_filters, (3,3), strides=(2,2))(x)语句在调用DarknetConv2D_BN_Leaky函数时传入的参数哪一部分是*args,哪一步分是 **kwargs\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实flag写什么都行&amp;#xff0c;只要你后面的if和else语句跟你设计的flag是对应的就行&lt;br /&gt;比如你写flag&amp;#61;1&amp;#xff0c;那么后面就要将if语句相应地改成if flag &amp;#61;&amp;#61; 1:&lt;br /&gt;所以跟flag本身的取值没关系&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;而你说的原理&amp;#xff0c;其实就是bool型变量的用法&amp;#xff0c; if语句的执行原理是if后面的值为 ‘真’ 时就执行if后面的语句&amp;#xff0c;比如&lt;br /&gt;假设a&amp;#61;1&amp;#xff0c;那么if a&amp;#61;&amp;#61;1:或者if Ture:这两种写法&amp;#xff0c;if后面的值都是 ‘真’&amp;#xff0c;所以就会执行if后面的语句&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/197642708646160.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["请问有人可以讲解一下python中flag的使用方式吗", ["才开始学习python不久，昨晚在一个视频中看到关于简单的信息管理系统的设计，然后在删除部分的flag方法使用中，不能理解其中的作用原理，查了很多资料也没有理解到，还有此步骤中的删除原理也没有理解到，希望有人可以解惑！", "\n", "def delete():", "    while True:", "        student_id = input('请输入要删除的学生ID：')", "        if student_id != '':  # 如果输入不等于空，即输入有效", "            if os.path.exists(filename):  # 通过磁盘路径判断文件是否存在", "                with open(filename, 'r', encoding='utf-8') as file:  # 使用with以只读方式打开文件", "                    student_old = file.readlines()  # 读取file的所有数据，并放进student_old中", "            else:", "                student_old = []  # 文件不存在时，定义一个空列表用于储存输入的ID", "            flag = False  # 标记是否删除（默认未删除）意为当flag == true 时，跳出判断", "            if student_old:  # 开始判断student_old:", "                with open(filename, 'w', encoding='utf-8') as wfile:  # 以写的方式打开文件，命名：wfile", "                    d = {}  # 用于储存", "                    # 将删除完之后的字典写进磁盘文件中", "                    for item in student_old:  # 遍历列表", "                        d = dict(eval(item))  # 将student_old中的每个元素都以字典的形式存储在d中", "                        # 判断将要删除的信息是否存在于字典d中", "                        if d['student_id'] != student_id:  # 比较d中的ID和原文件中的ID", "                            wfile.write(str(d)+'\\n')  #", "                        else:", "                            flag = True", "                    # 判断flag的值", "                    if flag:", "                        print(f'ID为{student_id}的学生信息已被删除')", "                    else:", "                        print(f'没有找到ID为{student_id}的学生信息')", "            else:  # 如果列表中没有数据", "                print('没有该学生的信息！')", "                break  # 退出本次循环", "            show()  # 删除之后重新显示全部学生信息", "            answer = input('是否继续删除？y/n\\n')", "            if answer == 'y':", "                continue", "            else:", "                break", "\n", "运行正常，且无报错", "\n", "以上编码中，这两段没理解到作用原理，即：", "1，为什么要设计flag = False  将其标记为未删除", "2，之后的两个判断语句执行的原理又是什么", "万分感谢"]], "Tag": "程序设计"}
{"Answer": "这样的比较也没问题 但是用户输入时间必须要统一格式 比如你等待比较的是20180224 那么你输入的时间必须也得是20180205也就是输入格式必须一致 YYYYMMDD\r\n这样比较就不会有错 你在处理的时候还得对输入的时间进行格式以及输入的数据是否正确才行。", "Konwledge_Point": "if语句的形式", "Question": ["关于比较字符串函数strcmp()", ["书中介绍", "\ns1与s2的前i的字符一致，但是s1的第i+1个字符小于s2的第i+1个字符。函数会认为s1小于s2。例如“abc”小于“bcd”，“abd”小于“abe”。", "\n能否理解为两个字符串的对应元素逐个比较，谁首先出现ASC码值小于对方的元素。就说：这个元素小于另一个元素？", "\n例如：\"abcdfeg\"小于“z”“abcd”小于“abcccccccc”", "\n以及“24 XXXXXXXXXX”小于“5”？", "\n如果我理解的正确，那么有如下代码片段：", "\n程序接收用户输入的日期和提醒，按时间顺序存储这些日期和对应当日的提醒，并输出。", "\nfor(i=0;i\nif(strcmp(day_str,reminders[i]) ", "\nbreak;", "\nfor(j=num_remind;j>i;j--)", "\nstrcpy(reminders[j],reminders[j-1]);//把当前i标记的日期后面的所有字符串各自下移一行", "\nstrcpy(reminders[i]),day_str);", "\nstrcat(reminders[i],msg_str);//把此日期以及相应的提醒存入reminders[i]中", "\nnum_remind++;", "\n请问下面这条语句的比较方法对吗？", "\nif(strcmp(day_str,reminders[i]) 假设循环已经把第一条字符串“24 XXXXXXXXXX”存进了reminders数组中、", "\n接下来的这条语句会把day_str（以字符串形式存储的下一个日期，我们假设是5）", "\n拿来和reminders[i]（也就是“24 XXXXXXXXXX”）进行比较。得出的结果应该是", "\n“5”>“24 XXXXXXXXXX”。这样程序就不会把5号以及5号的提醒事项塞入数组了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1 利用jieba分词&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"473\" src=\"https://img-ask.csdnimg.cn/upload/1622516931310.png\" width=\"1917\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;2 找出长度为四的单词&amp;#xff0c;去重&amp;#xff0c;排序&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"888\" src=\"https://img-ask.csdnimg.cn/upload/1622516858640.png\" width=\"1897\" /&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["Python大佬解题:找出下列英文中所有长度为4个字母的单词并输出。", ["      Python编写程序,找出下列英文中所有长度为4个字母的单词并输出，要求去除重复的单词并以字典顺序输出，输出以列表的形式。提示：假设输出列表为list1,则输出语句为:print(list1)。\n\n英文如下:Code Quality Standards\nYour code must meet the code quality standards. If you've taken CMPUT 174 before these should be familiar to you.\nUse readableindentation.\nBlocks must be indented (everything between  { and  } )\nOne line must not have more than one statement on it. However, a long statement should be split into multiple lines.\nUse only idiomatic for loops.\nUse descriptive variable names. It must be obvious to the person reading (and marking your code) what each variable does.\nNever use complicated switch logic. Each case must fall through immediately to the next without running any code, or it must run some code and then break out of the switch statement.\nNever use goto."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正则不是很好解决这个问题吗&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["求Python大佬解题:找出下列英文中所有长度为4个字母的单词并按字典排序列表输出。", ["Python大佬解题:找出下列英文中所有长度为4个字母的单词并输出。\npython\nlist\nPython编写程序,找出下列英文中所有长度为4个字母的单词并输出，要求去除重复的单词并以字典顺序输出，输出以列表的形式。提示：假设输出列表为list1,则输出语句为:print(list1)。 英文如下:Code Quality Standards Your code must meet the code quality standards. If you've taken CMPUT 174 before these should be familiar to you. Use readableindentation. Blocks must be indented (everything between { and } ) One line must not have more than one statement on it. However, a long statement should be split into multiple lines. Use only idiomatic for loops. Use descriptive variable names. It must be obvious to the person reading (and marking your code) what each variable does. Never use complicated switch logic. Each case must fall through immediately to the next without running any code, or it must run some code and then break out of the switch statement. Never use goto."]], "Tag": "程序设计"}
{"Answer": "http://bbs.csdn.net/topics/390435423", "Konwledge_Point": "if语句的形式", "Question": ["Statement executeBatch()批量提交效率好低 求高手答疑", ["数据大概一共有10W条左右,不固定,", "\n每条sql固定格式都不太一样,", "\n分别是对不同的表做的新增或则修改的操作", "\n所以无法用模板?的形式操作", "\n下面是代码", "\n其中设置的是每1000条数据提交一次", "\n然后这1000条数据却需要大概12S左右,", "\n整个数据跑下来十几分钟", "\n如果是每3000条提交一次,时间也大概是40S左右,", "\n感觉不应该这么慢啊", "\n数据库为Oracle..", "\n求高手指点一下优化方案", "\n\n", "Session session = baseDAO.getSessionFactory().openSession();\nConnection conn = session.connection();\nStatement stmt = null;\n\ntry {\n    conn.setAutoCommit(false);    // 关闭自动提交\n    stmt = conn.createStatement();\n\n    for(int i=0; i<sqlList.size(); i++){\n        stmt.addBatch(sqlList.get(i));\n        //System.out.println(sqlList.get(i));\n\n        if (i % 1000 == 0 && i != 0) {\n            long startTime = System.currentTimeMillis();\n            stmt.executeBatch();\n            conn.commit();\n            stmt.clearBatch();\n            System.out.println(\"executeBatch 执行使用了 ：\"+(System.currentTimeMillis() - startTime )/1000 + \" 秒\");\n        }\n    }\n\n    // 执行批处理语句  \n    stmt.executeBatch(); // 执行剩下的不到1000条的数据 \n    conn.commit(); \n    conn.setAutoCommit(true);//在把自动提交打开\n} catch (SQLException he) {\n    he.printStackTrace();\n    try {\n        conn.rollback();\n    } catch (SQLException e) {\n        e.printStackTrace();\n    }\n} finally {\n    if (stmt != null) {\n        try {\n            stmt.close();\n        } catch (SQLException sqlex) {\n            System.err.println(this.getClass().getName()\n                            + \".mymethod - 不能关闭数据库连接: \" + sqlex.toString());\n        }\n    }\n    if (conn != null) {\n        try {\n            conn.close();\n        } catch (SQLException sqlex) {\n            System.err.println(this.getClass().getName()\n                    + \".mymethod - 不能关闭数据库连接: \" + sqlex.toString());\n        }\n    }\n\n    session.close();\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单一点&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\n#include &amp;lt;stdlib.h&amp;gt;\n\n#define LENGTH 10\n\n/*主函数*/\n\nint main(void){\n\t/*声明函数*/\n\n\tvoid input(int *p, int n);\n\n\tvoid output(int *p, int n);\n\n\tvoid move(int *p, int length, int m);\n\n\n\n\t/*定义数据结构*/\n\n\tint a[LENGTH], m;//m表示数组元素循环移动的位置个数\n\n\tint *p &amp;#61; a;\n\n\n\n\t/*调用input函数&amp;#xff0c;通过键盘输入为数组a赋值*/\n\n\tinput(p, LENGTH);\n\n\n\n\t/*从键盘输入为循环移动位置个数m赋值*/\n\n\tscanf(&amp;#34;%d&amp;#34;, &amp;amp;m);\n\n\t/*调用move函数&amp;#xff0c;完成数组元素的循环移动*/\n\n\tmove(p, LENGTH, m);\n\n\n\n\t/*调用output函数&amp;#xff0c;输出移动后的数组元素*/\n\n\toutput(p, LENGTH);\n\n\treturn 0;\n\n}\n\n/*\n\n* 函数名称&amp;#xff1a;input\n\n* 函数功能&amp;#xff1a;通过键盘输入为一维数组元素赋值\n\n* 输入格式&amp;#xff1a;各输入数据之间以空格分隔\n\n* 形式参数&amp;#xff1a;p&amp;#xff0c;int型指针变量&amp;#xff0c;一维整型数组首地址\n\n* 形式参数&amp;#xff1a;n&amp;#xff0c;int型&amp;#xff0c;一维数组长度\n\n* 返回值&amp;#xff1a;无\n\n*/\n\nvoid input(int *p, int n){\n\t// 请编程实现本函数\n\n\tfor (int i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t\tscanf_s(&amp;#34;%d&amp;#34;, &amp;amp;p[i]);\n\n}\n\n/*\n\n* 函数名称&amp;#xff1a;output\n\n* 函数功能&amp;#xff1a;向屏幕打印输出一维数组元素值\n\n* 输出格式&amp;#xff1a;各输出数据之间以空格分隔\n\n* 形式参数&amp;#xff1a;p&amp;#xff0c;int型指针变量&amp;#xff0c;一维整型数组首地址\n\n* 形式参数&amp;#xff1a;n&amp;#xff0c;int型&amp;#xff0c;一维数组长度\n\n* 返回值&amp;#xff1a;无\n\n*/\n\nvoid output(int *p, int n){\n\t// 请编程实现本函数\n\n\tfor (int i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34;%d &amp;#34;, p[i]);\n\n}\n\n\n\n/*\n\n* 函数名称&amp;#xff1a;moveToRight\n\n* 函数功能&amp;#xff1a;使一维数组各元素向右循环移动m个位置\n\n* 形式参数&amp;#xff1a;p&amp;#xff0c;int型指针变量&amp;#xff0c;一维整型数组首地址\n\n* 形式参数&amp;#xff1a;length&amp;#xff0c;int型&amp;#xff0c;一维数组长度\n\n* 形式参数&amp;#xff1a;m&amp;#xff0c;int型&amp;#xff0c;循环移动的位置数\n\n* 返 回 值&amp;#xff1a;无\n\n*/\n\nvoid moveToRight(int *p, int length, int m){\n\t// 请编程实现本函数\n\tint *q &amp;#61; new int[length];\n\tint i &amp;#61; 0;\n\tfor (i &amp;#61; 0; i &amp;lt; length; i&amp;#43;&amp;#43;)\n\t{\n\t\tq[(i&amp;#43;m)%length] &amp;#61; p[i];\n\t}\n\tfor (i &amp;#61; 0; i &amp;lt; length; i&amp;#43;&amp;#43;)\n\t\tp[i] &amp;#61; q[i];\n\tdelete[]q;\n}\n\n\n\n/*\n\n* 函数名称&amp;#xff1a;moveToLeft\n\n* 函数功能&amp;#xff1a;使一维数组各元素向左循环移动m个位置\n\n* 形式参数&amp;#xff1a;p&amp;#xff0c;int型指针变量&amp;#xff0c;一维整型数组首地址\n\n* 形式参数&amp;#xff1a;length&amp;#xff0c;int型&amp;#xff0c;一维数组长度\n\n* 形式参数&amp;#xff1a;m&amp;#xff0c;int型&amp;#xff0c;循环移动的位置数\n\n* 返 回 值&amp;#xff1a;无\n\n*/\n\nvoid moveToLeft(int *p, int length, int m){\n\t// 请编程实现本函数\n\tint *q &amp;#61; new int[length];\n\tint i &amp;#61; 0;\n\tfor (i &amp;#61; 0; i &amp;lt; length; i&amp;#43;&amp;#43;)\n\t{\n\t\tq[(i-m&amp;#43;length)%length] &amp;#61; p[i];\n\t}\n\tfor (i &amp;#61; 0; i &amp;lt; length; i&amp;#43;&amp;#43;)\n\t\tp[i] &amp;#61; q[i];\n\tdelete[]q;\n\n\n}\n\n\n\n/*\n\n* 函数名称&amp;#xff1a;move\n\n* 函数功能&amp;#xff1a;使一维数组元素循环向左或向右移动m个位置\n\n* 形式参数&amp;#xff1a;p&amp;#xff0c;int型指针变量&amp;#xff0c;一维整型数组首地址\n\n* 形式参数&amp;#xff1a;length&amp;#xff0c;int型&amp;#xff0c;一维数组长度\n\n* 形式参数&amp;#xff1a;m&amp;#xff0c;int型&amp;#xff0c;表示循环移动的方向和移动的位置个数\n\n*          当m&amp;gt;0时&amp;#xff0c;执行向右循环移动&amp;#xff08;水平方向从左向右循环移动&amp;#xff09;\n\n*          当m&amp;#61;0时&amp;#xff0c;不做任何移动\n\n*          当m&amp;lt;0时&amp;#xff0c;执行向左循环移动&amp;#xff08;水平方向从右向左循环移动&amp;#xff09;\n\n* 返 回 值&amp;#xff1a;无\n\n*/\n\nvoid move(int *p, int length, int m){\n\tif (m &amp;gt; 0){\n\t\t/*向右循环移动*/\n\n\t\tmoveToRight(p, length, m);\n\n\n\n\t}\n\telse if (m &amp;#61;&amp;#61; 0){\n\t\t/*不移动*/\n\n\t\t; //空语句&amp;#xff0c;什么都不做\n\n\n\n\t}\n\telse{\n\t\t/*向左循环移动*/\n\n\t\tmoveToLeft(p, length, m);\n\n\n\n\t}\n\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["c语言循环移动数组元素", ["【问题描述】", "\n\n", "定义一个长度为10的一维整型数组，并编写三个函数分别实现如下功能：", "\n\n", "（1）函数input：对数组的各元素实现从键盘输入赋值。", "\n\n", "（2）函数output：将数组的所有元素向屏幕打印输出。", "\n\n", "（3）函数moveToRight：向右循环移动数组元素", "\n\n", "（4）函数moveToLeft：向左循环移动数组元素", "\n\n", "（5）函数move：将数组元素向左或向右循环移动m个位置。移动规则为：", "\n\n", "● 若m>0，调用moveToRight函数，执行向右循环移动；", "\n\n", "● 若m=0，不做任何移动；", "\n\n", "● 若m<0，调用moveToLeft函数，执行向左循环移动。", "\n\n", "目前已编写完成main函数和move函数，请编程实现input函数、output函数、moveToRight函数和moveToLeft函数。", "\n\n", "/*", "\n\n", "@Filename: ex605.c", "\n\n", "@Author: ", "\n\n", "@Version: 1.0", "\n\n", "@Date: 2021-03-18", "\n\n", "@Description: Loopy Moving of Array Element", "\n\n", "*/", "\n\n", "#include <stdio.h>", "\n\n", "#include <stdlib.h>", "\n\n", "#define LENGTH 10", "\n\n", "/*主函数*/", "\n\n", "int main(void){", "\n\n", "/*声明函数*/", "\n\n", "void input(int *p, int n);", "\n\n", "void output(int *p, int n);", "\n\n", "void move(int *p, int length, int m);", "\n\n", " ", "\n\n", "/*定义数据结构*/", "\n\n", "int a[LENGTH], m;//m表示数组元素循环移动的位置个数", "\n\n", "int *p = a;", "\n\n", " ", "\n\n", "/*调用input函数，通过键盘输入为数组a赋值*/", "\n\n", "input(p, LENGTH);", "\n\n", " ", "\n\n", "/*从键盘输入为循环移动位置个数m赋值*/", "\n\n", "scanf(\"%d\", &m);", "\n\n", "/*调用move函数，完成数组元素的循环移动*/", "\n\n", "move(p, LENGTH, m);", "\n\n", " ", "\n\n", "/*调用output函数，输出移动后的数组元素*/", "\n\n", "output(p, LENGTH);", "\n\n", "return 0;", "\n\n", "}", "\n\n", "/*", "\n\n", " * 函数名称：input", "\n\n", " * 函数功能：通过键盘输入为一维数组元素赋值", "\n\n", " * 输入格式：各输入数据之间以空格分隔", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：n，int型，一维数组长度", "\n\n", " * 返回值：无", "\n\n", " */", "\n\n", "void input(int *p, int n){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", "/*", "\n\n", " * 函数名称：output", "\n\n", " * 函数功能：向屏幕打印输出一维数组元素值", "\n\n", " * 输出格式：各输出数据之间以空格分隔", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：n，int型，一维数组长度", "\n\n", " * 返回值：无", "\n\n", " */", "\n\n", "void output(int *p, int n){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：moveToRight", "\n\n", " * 函数功能：使一维数组各元素向右循环移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，循环移动的位置数", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void moveToRight(int *p, int length, int m){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：moveToLeft", "\n\n", " * 函数功能：使一维数组各元素向左循环移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，循环移动的位置数", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void moveToLeft(int *p, int length, int m){", "\n\n", "// 请编程实现本函数", "\n\n", " ", "\n\n", "}", "\n\n", " ", "\n\n", "/*", "\n\n", " * 函数名称：move", "\n\n", " * 函数功能：使一维数组元素循环向左或向右移动m个位置", "\n\n", " * 形式参数：p，int型指针变量，一维整型数组首地址", "\n\n", " * 形式参数：length，int型，一维数组长度", "\n\n", " * 形式参数：m，int型，表示循环移动的方向和移动的位置个数", "\n\n", " *          当m>0时，执行向右循环移动（水平方向从左向右循环移动）", "\n\n", " *          当m=0时，不做任何移动", "\n\n", " *          当m<0时，执行向左循环移动（水平方向从右向左循环移动）", "\n\n", " * 返 回 值：无", "\n\n", " */", "\n\n", "void move(int *p, int length, int m){", "\n\n", "if(m > 0){", "\n\n", "/*向右循环移动*/", "\n\n", "moveToRight(p, length, m);", "\n\n", " ", "\n\n", "}else if(m == 0){", "\n\n", "/*不移动*/", "\n\n", "; //空语句，什么都不做", "\n\n", " ", "\n\n", "}else{", "\n\n", "/*向左循环移动*/", "\n\n", "moveToLeft(p, length, m);", "\n\n", " ", "\n\n", "}", "\n\n", "}", "\n\n", "注：不得使用全局变量。", "\n\n", "【输入形式】", "\n\n", "有两行输入，第1行输入为数组元素赋值，第2行输入为m赋值", "\n\n", "【输出形式】", "\n\n", "有一行输出，输出循环移动后的数组各元素值", "\n\n", "【样例输入】", "\n\n", "1 2 3 4 5 6 7 8 9 10", "\n\n", "3", "\n\n", "【样例输出】", "\n\n", "8 9 10 1 2 3 4 5 6 7", "\n\n", "【样例输入】", "\n\n", "1 2 3 4 5 6 7 8 9 10", "\n\n", "-3", "\n\n", "【样例输出】", "\n\n", "4 5 6 7 8 9 10 1 2 3", "\n\n", "【样例说明】", "\n\n", "无", "\n\n", "【评分标准】", "\n\n", "正确性", "\n\n", "/*", "\n@Filename:  ex605.c", "\n@Author:  ", "\n@Version:  1.0", "\n@Date:  2021-03-18", "\n@Description:  Loopy  Moving  of  Array  Element", "\n*/", "\n#include  <stdio.h>", "\n#include  <stdlib.h>", "\n#define  LENGTH  10", "\n/*主函数*/", "\nint  main(void){", "\n        /*声明函数*/", "\n        void  input(int  *p,  int  n);", "\n        void  output(int  *p,  int  n);", "\n        void  move(int  *p,  int  length,  int  m);", "\n        ", "\n        /*定义数据结构*/", "\n        int  a[LENGTH],  m;//m表示数组元素循环移动的位置个数  ", "\n        int  *p  =  a;", "\n        ", "\n        /*调用input函数，通过键盘输入为数组a赋值*/", "\n        input(p,  LENGTH);", "\n        ", "\n        /*从键盘输入为循环移动位置个数m赋值*/", "\n        scanf(\"%d\",  &m);", "\n        /*调用move函数，完成数组元素的循环移动*/", "\n        move(p,  LENGTH,  m);", "\n        ", "\n        /*调用output函数，输出移动后的数组元素*/", "\n        output(p,  LENGTH);", "\n        return  0;", "\n}", "\n/*", "\n  *  函数名称：input", "\n  *  函数功能：通过键盘输入为一维数组元素赋值", "\n  *  输入格式：各输入数据之间以空格分隔  ", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：n，int型，一维数组长度  ", "\n  *  返回值：无  ", "\n  */", "\nvoid  input(int  *p,  int  n){", "\n        //  ", "请编程实现本函数", "\n        ", "\n}", "\n/*", "\n  *  函数名称：output", "\n  *  函数功能：向屏幕打印输出一维数组元素值", "\n  *  输出格式：各输出数据之间以空格分隔  ", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：n，int型，一维数组长度", "\n  *  返回值：无  ", "\n  */", "\nvoid  output(int  *p,  int  n){", "\n        //  ", "请编程实现本函数", "\n        ", "\n}", "\n", "\n/*", "\n  *  函数名称：moveToRight", "\n  *  函数功能：使一维数组各元素向右循环移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，循环移动的位置数", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  moveToRight(int  *p,  int  length,  int  m){", "\n        //  ", "请编程实现本函数", "\n        ", "\n}", "\n", "\n/*", "\n  *  函数名称：moveToLeft", "\n  *  函数功能：使一维数组各元素向左循环移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，循环移动的位置数", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  moveToLeft(int  *p,  int  length,  int  m){", "\n        //", "  请编程实现本函数", "\n        ", "\n}", "\n", "\n/*", "\n  *  函数名称：move", "\n  *  函数功能：使一维数组元素循环向左或向右移动m个位置", "\n  *  形式参数：p，int型指针变量，一维整型数组首地址", "\n  *  形式参数：length，int型，一维数组长度", "\n  *  形式参数：m，int型，表示循环移动的方向和移动的位置个数", "\n  *                    当m>0时，执行向右循环移动（水平方向从左向右循环移动）  ", "\n  *                    当m=0时，不做任何移动  ", "\n  *                    当m<0时，执行向左循环移动（水平方向从右向左循环移动）", "\n  *  返  回  值：无  ", "\n  */", "\nvoid  move(int  *p,  int  length,  int  m){", "\n        if(m  >  0){", "\n                /*向右循环移动*/", "\n                moveToRight(p,  length,  m);", "\n                ", "\n        }else  if(m  ==  0){", "\n                /*不移动*/", "\n                ;  //空语句，什么都不做  ", "\n                ", "\n        }else{", "\n                /*向左循环移动*/", "\n                moveToLeft(p,  length,  m);", "\n                ", "\n        }", "\n}"]], "Tag": "程序设计"}
{"Answer": "具体代码我还没看过，不过我觉得应该注意\r\nConnection con = DataSourceUtils.getConnection(getDataSource());\r\n\r\ncon应该是在一个线程中保存的。注意到了吗，con也没有commit。\r\n在一个事务开始的时候，con打开，并在操作后保存到线程中。当整个事务完成或失败时，才进行commit或callback。", "Konwledge_Point": "if语句的形式", "Question": ["Spring中JdbcTemplate执行SQL出错不回滚？", ["在Spring中为了方便用户对数据库的操作，Spring提供了JdbcTemplate以及HibernateTemplate。今天，查看这两个类源码，发现一问题，令我费解，请知道的朋友指点一下。", "\n 大致问题就是，在JdbcTemplate的execute(..)方法中，执行SQL抛出异常时，居然没出现回滚代码，具体代码我贴出来，方便大家参考，至于疑问，我也在代码中以注释的形式标出来了，请大家帮忙解释一下，谢谢！", "\n\n", "[code=\"java\"]public Object execute(StatementCallback action) throws DataAccessException {", "\n        Assert.notNull(action, \"Callback object must not be null\");", "\n\n", "    Connection con = DataSourceUtils.getConnection(getDataSource());\n    Statement stmt = null;\n    try {\n        Connection conToUse = con;\n        if (this.nativeJdbcExtractor != null &&\n                this.nativeJdbcExtractor.isNativeConnectionNecessaryForNativeStatements()) {\n            conToUse = this.nativeJdbcExtractor.getNativeConnection(con);\n        }\n        stmt = conToUse.createStatement();\n        applyStatementSettings(stmt);\n        Statement stmtToUse = stmt;\n        if (this.nativeJdbcExtractor != null) {\n            stmtToUse = this.nativeJdbcExtractor.getNativeStatement(stmt);\n        }\n        Object result = action.doInStatement(stmtToUse);  //执行SQL语句\n        SQLWarning warning = stmt.getWarnings();\n        throwExceptionOnWarningIfNotIgnoringWarnings(warning);\n        return result;\n    }\n    catch (SQLException ex) { \n        /*\n         * 加入执行SQL时抛出异常，一般来说应该回滚的，但是现在没有出现con.rollback()\n         */\n        // Release Connection early, to avoid potential connection pool deadlock\n        // in the case when the exception translator hasn't been initialized yet.\n        JdbcUtils.closeStatement(stmt);\n        stmt = null;\n        DataSourceUtils.releaseConnection(con, getDataSource());\n        con = null;\n        throw getExceptionTranslator().translate(\"StatementCallback\", getSql(action), ex);\n    }\n    finally {\n        JdbcUtils.closeStatement(stmt);\n        DataSourceUtils.releaseConnection(con, getDataSource());\n    }\n}[/code]\n", "\n\n", "谢谢大家耐心观看以及分析！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;什么叫debug没看到作用&amp;#xff1f;运行后弹出下图不算起作用&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/36673319924610.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["刚学Win32汇编语言，使用MASM32 sdk来进行汇编、链接和调试，这个自带的调试工具Vkdebug该如何使用", ["我看了vkdebug帮助文档之后，大概了解到以下信息", "\n", "一些命令 ，如`PrintHex value [,text]\" 以十六进制的形式输出value的值，value可以为寄存器或一个变量，可选输出text所表示的文本内容", "在使用vkdebug之前，需要添加一些", "include...", "语句,如下所示", "\n", "include", " \\masm32\\", "include", "\\windows.inc\n", "include", " \\masm32\\", "include", "\\kernel32.inc\n", "include", " \\masm32\\", "include", "\\masm32.inc\n", "include", " \\masm32\\", "include", "\\debug.inc \n\nincludelib \\masm32\\", "lib", "\\", "masm32", ".", "lib", "\nincludelib \\masm32\\", "lib", "\\", "kernel32", ".", "lib", "\nincludelib \\masm32\\", "lib", "\\", "debug", ".", "lib", "\n", "\n", ";DBGWIN_DEBUG_ON = 1 ;turn it off if you don't want to include debug info into the program", "\n", ";DBGWIN_EXT_INFO = 1 ;turn it off if you don't want to include extra debug info into the program ", "\n", "\n", "\n", "写了一个汇编程序，来计算几个数的和，我想用vkdebug来查看最后的结果(", "PrintHex sum, \"Sum value\"", ")， 程序如下", "\n", "; AddVariables.asm", "\n", ".386", "\n", ".model", " flat, stdcall\n", ".stack", " ", "4096", "\n", "option", " casemap:none\nExitProcess PROTO, dwExitCode:", "DWORD", "\n\n\ninclude \\masm32\\include\\windows", ".", "inc", "\ninclude \\masm32\\include\\kernel32", ".", "inc", "\ninclude \\masm32\\include\\masm32", ".", "inc", "\ninclude \\masm32\\include\\debug", ".", "inc", " \n\nincludelib \\masm32\\lib\\masm32", ".", "lib\nincludelib \\masm32\\lib\\kernel32", ".", "lib\nincludelib \\masm32\\lib\\debug", ".", "lib\n\nDBGWIN_DEBUG_ON = ", "1", "\nDBGWIN_EXIT_INFO = ", "1", "\n", "\n.data", " \nfirstval ", "DWORD", " ", "20002000h", "\nsecondval ", "DWORD", " ", "11111111h", "\nthirdval ", "DWORD", " ", "22222222h", "\nsum ", "DWORD", " ", "0", "\n", "\n\n\n.code", "\nmain PROC\n    ", "mov", " ", "eax", ", firstval\n    ", "add", " ", "eax", ", secondval\n    ", "add", " ", "eax", ", thirdval\n    ", "mov", " sum, ", "eax", "\n    PrintHex sum, ", "\"Sum value\"", "\n\n    INVOKE ExitProcess,", "0", "\nmain ENDP\nEND main\n", "\n", "然后我依次执行以下命令进行汇编、链接和执行，都没有报错，", "但是debug没看到起作用啊？我想要的最终结果没有看到，这个vkdebug该如何使用啊?", "\n", "ml ", "/c", " ", "/coff", " AddVariable.asm\nlink ", "/subsystem", ":windows", " AddVariable.obj\nAddVariable.exe\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在main函数中&amp;#xff0c;用随机数生成两个数来构造Rational类的实例就可以了&amp;#xff0c;然后再下面的加减乘除中&amp;#xff0c;用两个Rational实例进行计算即可。参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100的随机数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        Rational a(m1,n1);\n        Rational b(m2,n2);\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;strcmp&lt;/span&gt;(strChoise, &lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a &amp;#43; b;\n            printReal(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;strcmp&lt;/span&gt;(strChoise, &lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a - b;\n            printReal(c);\n        }&lt;span class=\"hljs-comment\"&gt;//...后面的类似&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;不同的用户&amp;#xff0c;根据用户名来写文件就可以了&amp;#xff0c;可以定义几个内置的用户&amp;#xff0c;用户登录后&amp;#xff0c;记录下当前登录的是哪个用户就可以了。&lt;br /&gt;你的代码错误太多了&amp;#xff0c;给你改了一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//#include&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Rational&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Rational&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//分别表示分子和分母 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//&amp;#43;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;-(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//-&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;*(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//*&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;/(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;// /&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; istream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;gt;&amp;gt;(istream&amp;amp; is, Rational&amp;amp; r);&lt;span class=\"hljs-comment\"&gt;//重载流输入 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, Rational&amp;amp; r);&lt;span class=\"hljs-comment\"&gt;//重载流输出 &lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational&amp;amp; r)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-title\"&gt;normalize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational s)&lt;/span&gt;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//化简函数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;User&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//用户结构体类型定义&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; szName[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//用户名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nTime; &lt;span class=\"hljs-comment\"&gt;//使用次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nTest; &lt;span class=\"hljs-comment\"&gt;//测试次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; alAve; &lt;span class=\"hljs-comment\"&gt;//平均成绩&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nAdd; &lt;span class=\"hljs-comment\"&gt;//加法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nSub; &lt;span class=\"hljs-comment\"&gt;//减法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nMul; &lt;span class=\"hljs-comment\"&gt;//乘法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; dlScore[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//3次测试得分&lt;/span&gt;\n}user;\nRational::&lt;span class=\"hljs-built_in\"&gt;Rational&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor)\n{\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;numerator &amp;#61; numerator;\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;denomintor &amp;#61; denomintor;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational&amp;amp; r)&lt;/span&gt;\n&lt;/span&gt;{\n    cout &amp;lt;&amp;lt; r.numerator &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; r.denomintor;\n}\n&lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;normalize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational s)&lt;/span&gt;\n&lt;/span&gt;{                                                                &lt;span class=\"hljs-comment\"&gt;//求出分子和分母的最大公约数&amp;#xff0c;用欧几里得算法&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(s.numerator);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(s.denomintor);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; a % b;\n        a &amp;#61; b;\n        b &amp;#61; t;\n    }\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(s.numerator / a, s.denomintor / a)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d &amp;#43; b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;-(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d - b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;*(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;/(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d &amp;#43; b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\n\nistream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;gt;&amp;gt;(istream&amp;amp; is, Rational&amp;amp; r) {\n    is &amp;gt;&amp;gt; r.numerator &amp;gt;&amp;gt; r.denomintor;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.denomintor !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The denominator is 0, which is illegal. Please try again!&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n}\nostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, Rational&amp;amp; r) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.numerator % r.denomintor &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        os &amp;lt;&amp;lt; r.numerator / r.denomintor &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        os &amp;lt;&amp;lt; r.numerator &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; r.denomintor;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;userprint&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Login&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//当前用户信息函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; szName[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的姓名:&amp;#34;&lt;/span&gt;;\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(szName, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n    ifstream infile;\n    User user1;\n    infile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::in);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!infile)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;没有原始记录文件&amp;#xff0c;您是第一个用户!\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(user.szName, szName);\n        user.nTest&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    infile.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!infile.&lt;span class=\"hljs-built_in\"&gt;eof&lt;/span&gt;())\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(user1.szName, szName) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            user &amp;#61; user1;\n            user.nTime&amp;#43;&amp;#43;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎您再次使用复数计算器!&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;userprint&lt;/span&gt;();\n            cin.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;();\n            infile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n        infile.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎您再次使用计算器!&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(user.szName, szName);\n    user.nTime&amp;#43;&amp;#43;;\n    infile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SaveFile&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//用户资料保存函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;userprint&lt;/span&gt;();\n    fstream file;\n    User user1;\n    file.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::in | ios::out);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!file)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开错误&amp;#xff0c;不能进行更新!\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    file.&lt;span class=\"hljs-built_in\"&gt;seekp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ios::beg);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!file.&lt;span class=\"hljs-built_in\"&gt;eof&lt;/span&gt;())\n    {\n        file.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(user1.szName, user.szName) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            file.&lt;span class=\"hljs-built_in\"&gt;seekp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; * (&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User)), ios::cur);\n            file.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n            file.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n    }\n    file.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    fstream outfile;\n    outfile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::app);\n    outfile.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    outfile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)); &lt;span class=\"hljs-comment\"&gt;//初始化随机数种子语句 随机数在哪产生怎么写捏&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Login&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//当前用户信息函数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choise; &lt;span class=\"hljs-comment\"&gt;//定义字符串名&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t这是一个简单的计算器程序&amp;#xff0c;可以实现以下功能&amp;#xff0c;请按对应的按键(1-7)\\n\\n\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;MENU&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t1:有理数加法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t2:有理数减法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t3:测试分数加减乘法运算&amp;#xff0c;1次测试10道题\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t4:有理数乘法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t5:有理数除法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t0:退出程序\\n\\n:&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t请您选择:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; choise;\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100的随机数&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m1, n1)&lt;/span&gt;&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m2, n2)&lt;/span&gt;&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a &amp;#43; b;\n            &lt;span class=\"hljs-built_in\"&gt;printReal&lt;/span&gt;(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a - b;\n            &lt;span class=\"hljs-built_in\"&gt;printReal&lt;/span&gt;(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//用户选0则结束调用函数&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n\\t欢迎下次继续使用计算器!\\n&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\t输入错误&amp;#xff0c;请按任意键继续!\\n&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-comment\"&gt;//cin.get();&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//cin.get();&lt;/span&gt;\n        }\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;SaveFile&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//调用用户资料保存函数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["只能写成这样 主要是第4个测试和第5个要求不会实现 想知道怎么改", ["设计有理(分数)数计算器，要求如下：", "（1）为有理数定义一个Rational类。有理数可以表示成为两个相除的整数，如3/4、13/3等。将有理数表示成int类型的两个值相除，分别表示分子和分母；", "（2）通过接收从键盘输入a/b形式的分数生成有理数类的对象，在程序中可以识别出分子和分母并正确赋值;（要判断分母是否为0）；", "（3）采用运算符重载方法定义有理数的加、减、乘、除运算；（需要判断除数是否为0）", "（4）设计有理数计算器测试程序，采用由计算机随机出题（用随机数），用户答题的形式，对有理数的加法、减法、乘法和除法进行测试。", "（5）（选做题）设计记录功能，可以记录下不同用户使用计算器的情况，记录以文件形式保存。程序运行时要求输入用户名，显示该用户以前的记录。用户记录包括：做了多少次加法、减法、乘法和除法，进行测试的次数，测试的平均分等，在退出计算器程序时用新的用户记录代替原有记录。", "要求用重载运算符", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "Rational", "{\n    ", "Rational", "(", "int", " numerator,", "int", " denomintor);", "//分别表示分子和分母 ", "\n    ", "friend", " Rational ", "operator", "+(Rational r1,Rational r2);", "//+", "\n    ", "friend", " Rational ", "operator", "-(Rational r1,Rational r2);", "//-", "\n    ", "friend", " Rational ", "operator", "*(Rational r1,Rational r2);", "//*", "\n    ", "friend", " Rational ", "operator", "/(Rational r1,Rational r2);", "// /", "\n    ", "friend", " istream &", "operator", ">>(istream &is,Rational& r);", "//重载流输入 ", "\n    ", "friend", " ostream &", "operator", "<<(ostream &os,Rational& r);", "//重载流输出 ", "\n    ", "friend", " ", "void", " ", "printReal", "(Rational &r)", ";\n    ", "friend", " ", "void", " ", "normalize", "()", ";", "//化简函数", "\n    ", "private", ":\n        ", "int", " numerator;\n        ", "int", " denomintor; \n};\n", "struct", " ", "User", " ", "//用户结构体类型定义", "\n{\n   ", "char", " szName[", "20", "]; ", "//用户名", "\n   ", "int", " nTime; ", "//使用次数", "\n   ", "int", " nTest; ", "//测试次数", "\n   ", "double", " alAve; ", "//平均成绩", "\n   ", "int", " nAdd; ", "//加法次数", "\n   ", "int", " nSub; ", "//减法次数", "\n   ", "int", " nMul; ", "//乘法次数", "\n   ", "double", " dlScore[", "3", "]; ", "//3次测试得分", "\n}user; \n", "Rational ", "Rational::normalize", "()", "                                    \n", "{                                                                ", "//求出分子和分母的最大公约数，用欧几里得算法", "\n    ", "int", " a = ", "abs", "(numerator);\n    ", "int", " b = ", "abs", "(denominator);\n    ", "while", " (b > ", "0", ")\n    {\n        ", "int", " t = a % b;\n        a = b;\n        b = t;\n    }\n    ", "Rational ", "R", "(numerator / a, denominator / a)", ";\n    ", "return", " R;\n}\nRational ", "operator", "+(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d + b * c;\n    ", "int", " f = b *  d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "-(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d - b * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "*(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "/(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d + b * c;\n    ", "int", " f = b*d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "+(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d a/b * d/c", "\n    ", "int", " e = a * d;\n    ", "int", " f = b * c;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nistream &", "operator", ">>(istream &is,Rational &r){\n    is>>r.numerator>>r.denominator;\n    ", "if", "(r.denominator!=", "0", "){\n        ", "return", " is;\n    }\n    ", "else", "{\n        cout<<", "\"The denominator is 0, which is illegal. Please try again!\"", " <<endl; \n        ", "exit", "(", "0", ");\n    }\n}\nostream &", "operator", "<<(ostream &os,Rational &r){\n    ", "if", "(r.numerator%r.denominator==", "0", "){\n        os<<r.numerator/r.denominator<<endl;\n        ", "return", " oa;\n    }\n    ", "else", "\n        os<<r.numerator<<", "\"/\"", "<<r.denominator;\n        ", "return", " os;\n}\n", "void", " ", "Login", "()", " ", "//当前用户信息函数", "\n", "{\n", "char", " szName[", "20", "];\ncout<<", "\"请输入您的姓名:\"", ";\ncin.", "getline", "(szName,", "20", ");\nifstream infile;\nUser user1;\ninfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::in);\n", "if", "(!infile)\n{\ncout<<", "\"没有原始记录文件，您是第一个用户!\\n\"", ";\n", "strcpy", "(user.szName,szName);\nuser.nTest++;\n", "return", ";\n}\ninfile.", "read", "((", "char", " *)&user1,", "sizeof", "(User));\n", "while", "(!infile.", "eof", "())\n{\n", "if", "(", "strcmp", "(user1.szName,szName)==", "0", ")\n{\nuser=user1;\nuser.nTime++;\ncout<<", "\"欢迎您再次使用复数计算器!\"", ";\n", "userprint", "();\ncin.", "get", "();\ninfile.", "close", "();\n", "return", ";\n}\ninfile.", "read", "((", "char", " *) &user1,", "sizeof", "(User));\n}\ncout<<", "\"欢迎您再次使用计算器!\"", ";\n", "strcpy", "(user.szName,szName);\nuser.nTime++;\ninfile.", "close", "();\n", "return", ";\n}\n", "void", " ", "SaveFile", "()", " ", "//用户资料保存函数", "\n", "{\n", "userprint", "();\nfstream file;\nUser user1;\nfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::in|ios::out);\n", "if", "(!file)\n{\ncout<<", "\"文件打开错误，不能进行更新!\\n\"", ";\n", "return", ";\n}\nfile.", "seekp", "(", "0", ",ios::beg);\n", "while", "(!file.", "eof", "())\n{\nfile.", "read", "((", "char", " *)&user1,", "sizeof", "(User));\n", "if", "(", "strcmp", "(user1.szName,user.szName)==", "0", ")\n{\nfile.", "seekp", "(-(", "sizeof", "(User)),ios::cur);\nfile.", "write", "((", "char", " *)&user,", "sizeof", "(User));\nfile.", "close", "();\n", "return", ";\n}\n}\nfile.", "close", "();\nfstream outfile;\noutfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::app);\noutfile.", "write", "((", "char", " *)&user,", "sizeof", "(User));\noutfile.", "close", "();\n", "return", ";\n}\n", "int", " ", "main", "(", "void", ")", " \n", "{\n", "srand", "(", "time", "(", "NULL", ")); ", "//初始化随机数种子语句 随机数在哪产生怎么写捏", "\n", "Login", "(); ", "//当前用户信息函数", "\n", "char", " strChoise[", "20", "]; ", "//定义字符串名", "\n", "do", "\n{\n", "system", "(", "\"cls\"", ");\ncout<<", "\"\\t这是一个简单的计算器程序，可以实现以下功能，请按对应的按键(1-7)\\n\\n\\n\"", ";\ncout<<", "\"\\t=========================MENU===========================\\n\"", ";\ncout<<", "\"\\t1:有理数加法，以0结束\\n\"", ";\ncout<<", "\"\\t2:有理数减法，以0结束\\n\"", ";\ncout<<", "\"\\t3:测试分数加减乘法运算，1次测试10道题\\n\"", ";\ncout<<", "\"\\t4:有理数乘法，以0结束\\n\"", ";\ncout<<", "\"\\t5:有理数除法，以0结束\\n\"", "; \ncout<<", "\"\\t0:退出程序\\n\\n:\"", ";\ncout<<", "\"\\t请您选择:\"", ";\ncin>>strChoise;\n", "if", "(", "strcmp", "(strChoise,", "\"1\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"2\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"3\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"4\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"5\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"0\"", ")==", "0", ") ", "//用户选0则结束调用函数", "\n{\ncout<<", "\"\\n\\n\\t欢迎下次继续使用计算器!\\n\"", ";\n", "break", ";\n}\n", "else", "\n{\ncout<<", "\"\\n\\t输入错误，请按任意键继续!\\n\"", ";\ncin.", "get", "();\ncin.", "get", "();\n}\n}\n", "while", "((", "strcmp", "(strChoise,", "\"0\"", ")));\n", "SaveFile", "(); ", "//调用用户资料保存函数", "\n", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个用正则表达式比较方便处理&lt;/p&gt;\n\n&lt;p&gt;你的代码中要在循环结束后判断下if n&amp;gt;0:就是最后一个数字串没有添加到列表中&amp;#xff0c;则需要再执行一下else块的代码&amp;#xff0c;把最后一个数字串添加到列表中&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;ls_s1&amp;#61;[]\nn&amp;#61;0\nlist1&amp;#61;[]\nlist2&amp;#61;[]\ns2&amp;#61;input(&amp;#34;Please enter a string:&amp;#34;)\nfor i in range(0,len(s2)):\n    if s2[i].isdigit()&amp;#61;&amp;#61;True:\n        n&amp;#43;&amp;#61;1\n        ls_s1.append(s2[i])\n\n    else:\n        list1.append(n)\n        result&amp;#61;&amp;#39;&amp;#39;.join(ls_s1)\n        list2.append(result)\n        n&amp;#61;0\n        ls_s1&amp;#61;[]\nif n&amp;gt;0:\n        list1.append(n)\n        result&amp;#61;&amp;#39;&amp;#39;.join(ls_s1)\n        list2.append(result)\n        n&amp;#61;0\n        ls_s1&amp;#61;[]\n\nn&amp;#61;max(list1)\ns_max&amp;#61;max(list2,key&amp;#61;len,default&amp;#61;&amp;#39;&amp;#39;)\n\nprint(n)\nprint(s_max)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["关于Python输出一段字符串最大数字串的问题", ["题目如下：输入一段字符串，返回此段字符串中最大的数字串，并输出最大字符的个数。", "\n\n", " ", "\n\n", "我的代码如下：", "\n\n", "ls_s1=[]", "\nn=0", "\nlist1=[]", "\nlist2=[]", "\ns2=input(\"Please enter a string:\")", "\nfor i in range(0,len(s2)):", "\n    if s2[i].isdigit()==True:", "\n        n+=1", "\n        ls_s1.append(s2[i])", "\n    ", "\n    else:", "\n        list1.append(n)", "\n        result=''.join(ls_s1)", "\n        list2.append(result)", "\n        n=0", "\n        ls_s1=[]", "\n\n", "n=max(list1)", "\ns_max=max(list2,key=len,default='')", "\n\n", "print(n)", "\nprint(s_max)", "\n\n", "但是我这个代码有BUG，即最后一个字符不为字母时无法正确输出。", "\n\n", "我在网上找到了如下答案：", "\n\n", "# coding=utf-8", "\nimport sys", "\n\n", "def solve():", "\n    for line in sys.stdin:", "\n        # 字符串转列表进行遍历", "\n        str = list(line)", "\n        count = 0", "\n        length = 0", "\n        temp = []", "\n        dig = []", "\n        for i in range(str.__len__()):", "\n            if (str[i] >= '0' and str[i] <= '9'):", "\n                # 数字加一", "\n                count += 1", "\n                temp.append(str[i])", "\n               ", "\n            else:", "\n                if count >= length:", "\n                    # 数字串大于之前的，由于题目要求长度相等输出最后一串，所以这里要用大于等于", "\n                    length = count", "\n                    count = 0", "\n                    dig = temp.copy()", "\n                    temp = []", "\n                else:", "\n                    # 数字串较短则清空", "\n                    temp = []", "\n                    count = 0", "\n        # 结果输出", "\n        result = ''.join(dig)", "\n        print(\"%s,%d\" % (result, length))", "\n\n", "if __name__ == \"__main__\":", "\n    solve()", "\n我感觉这个代码和我遇到的问题一样，但是它却能进行正确输出。", "\n\n", "例如，输入字符串123abc12345", "\n\n", "在我的代码中，当进行到字符串中最后一个字符中，即5时，无法进入下一个else，即无法刷新列表", "\n\n", "但在第二个代码中，却能进行正确输出，我在第二个if语句加入print（dig）时，发现其中存储了12345，最后一个位数字，不能if和else都满足吧？这让我有些矛盾。", "\n\n", "求教各位，1.我的代码在现有的形式下如何修改；2.第二个代码中最后字符5怎么进入else循环的。", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;n &amp;#61; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;))\ndic &amp;#61; {}\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n    &lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;, num &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;).split(&amp;#34; &amp;#34;)\n    dic[&lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;(num)\n# 刘\nm &amp;#61; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;))\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(m):\n    &lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;, num &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;).split(&amp;#34; &amp;#34;)\n    dic[&lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;] &amp;#61; dic.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;(num)\n \nchaxunwupin &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;)\nprint(dic[chaxunwupin])\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["词典键值对经过修改，但是值还是没有被改变", ["【问题描述】马强东和刘云是两家电商的老板，最近他们准备合并他们的企业，干一番大事业。企业合并之后，他们的商品库存当然也要合在一起了。现在给你他们各自的商品清单，请你给出合并后的他们某项商品的数量。", "\n", "【输入形式】第一行，一个正整数 n，表示马强东的商品种类数。", "\n", "接下来 n行，每行第一项为某商品的名称，第二项为某商品的数量，用空格隔开。", "\n", "接下来一行，一个正整数 m，表示刘云的商品种类数。", "\n", "接下来 m行，每行第一项为某商品的名称，第二项为某商品的数量，用空格隔开。", "\n", "最后一行，表示询问你的商品名称，保证该商品至少在一个人的库存中出现。", "\n", "提示：看到用空格隔开你会想到列表的什么方法？python可以在一行语句里给多个变量同时赋值，按照你的想法试试看？", "\n", "【输出形式】一行，一个正整数，表示询问你的商品数量。", "\n", "【样例输入】", "\n", "3", "Computer 1", "Apple 2", "Chair 3", "2", "Chair 5", "Pen 1", "Chair", "\n", "【样例输出】", "\n", "8", "我的代码", "\n", " ", "# 电商合并", "\n", "# 马", "\nn = ", "int", "(", "input", "(", "\"\"", "))\ndic_1 = {}\nDic = {}\n", "list", " = []\n", "for", " i ", "in", " ", "range", "(", "1", ", n+", "1", "):\n    name_1, num_1 = ", "input", "(", "\"\"", ").split(", "\" \"", ")\n    num_1 = ", "int", "(num_1)\n    dic_1[name_1] = num_1\n", "# 刘", "\nm = ", "int", "(", "input", "(", "\"\"", "))\ndic_2 = {}\n", "for", " j ", "in", " ", "range", "(", "1", ", m + ", "1", "):\n    name_2, num_2 = ", "input", "(", "\"\"", ").split(", "\" \"", ")\n    num_2 = ", "int", "(num_2)\n    dic_2[name_2] = num_2\n    ", "for", " key ", "in", " dic_1:\n        ", "if", " name_2 == key:\n            ", "# 问题所在name_1", "\n            Dic[name_1] = dic_1[name_1] + num_2\n            ", "break", "\n        ", "else", ":\n            Dic[name_1] = num_1\n            Dic[name_2] = num_2\n\nchaxunwupin = ", "input", "(", "\"\"", ")\n", "print", "(Dic[chaxunwupin])\n", "\n", "1", "\n", "a 1", "2", "a 2", "b 3", "a", "1", "没有报错，就是计算结果出问题", "\n", "我的解答思路和尝试过的方法", "\n", "我就是采用两个词典将商品名和数量存储起来，再进行统计，最后再通过另建词典来存储所有的商品信息，然后查询", "\n", "我想要达到的结果", "\n", "结果理应是", "a", "3"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路:&lt;br /&gt;1.创建数据表及对应表的类&lt;br /&gt;2.实现UI设计&amp;#xff0c;&lt;br /&gt;3.实现数据库操作&lt;br /&gt;4.使用UDP或者tcp协议实现网络通信。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["模拟QQ系统（采用本地服务器），要求实现下列功能", ["注册  （设计数据库，以及查询）", "    1）需要输入用户名，长度为5-15位，允许中文，英文，以及和数字的组合", "     2）输入密码：密码长度为6-12位，包含数字和字母", "    3）性别：输入男或女", "    4）出生日期做成选择：", "             年：区间为1900年-2003年", "         月：区间为01-12", "        日：01-31（暂不考虑月份对应关系）", "    5）爱好：", "        内容呈现有：读书，玩游戏，打篮球，看电视，挣钱，刷微博，逛街，踢足球，打网球等等；", "        内容支持多选和单选", "    6）星座：自己填写，（不与月份做校验）", "    7）血型：自行输入，长度为小于5位", "    8）个人说明：长度为20个字符以内，字符格式不做要求", "    9）上传头像：格式要求为jpg格式，大小暂不做约束（其实就是一个图片的读写）", "        上传头像：a:使用本地图片，直接保存在注册模块中就OK", "                 b:可以使用网络图片，保存在注册模块中就OK（不用保存在数据库）", "    10）所在地：（if的嵌套）", "        国家：目前只支持中国", "        省份：选了国家才能输入省份", "        城市：输入省份后才能输入城市", "        区域：输入城市后再去选择区", "\n", "2.登陆   （使用数据库的封装来查询是否成功）", "3.实现多个账号登陆（多个客户端）", "4.实现多个账号之间的聊天", "5.实现聊天信息保存在当地", "    要求保存形式为：客户端昵称：聊天信息", "    **扩展（根据自己的情况选做）：保存聊天信息的相对应的时间，并实现根据时间查询聊天记录", "6.实现对聊天记录根据用户昵称查询", "7.实现对聊天记录根据内容查询", "8.实现清除聊天记录的功能", "    选择清除聊天记录，聊天记录为空（就是sql语句实现内容的删除）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;为什么登录这么麻烦&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;on_pushButton_Login_clicked&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, text&lt;/span&gt;):\n    user_name &amp;#61; self.lineEdit.text()\n    user_password &amp;#61; self.lineEdit_2.text()\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;进入账号判断函数&amp;#34;&lt;/span&gt;)\n    self.get_Mysql_conn()  &lt;span class=\"hljs-comment\"&gt;# 连接数据库&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 获取数据库中的值&lt;/span&gt;\n    sql &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;SELECT * FROM userinfo where name&amp;#61;&amp;#34;{}&amp;#34; and pwd&amp;#61;&amp;#34;{}&amp;#34;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(user_name, user_password)\n    cursor &amp;#61; self.conn.cursor()\n    cursor.execute(sql)\n    results &amp;#61; cursor.fetchone()\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(results)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; results &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n        QMessageBox.question(self, &lt;span class=\"hljs-string\"&gt;&amp;#34;警告&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;用户名或密码不正确&amp;#34;&lt;/span&gt;, QMessageBox.Yes)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;登录成功&amp;#xff0c;这里处理自己的逻辑&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["PyQt5+mysql完成登录", ["已经做好了一个界面并完成了注册功能，但无法成功登录", "\n", "这是注册代码", "\n", " ", "def", " ", "get_Mysql_conn", "(", "self", "):\n        ", "try", ":\n            config = {\n                ", "\"host\"", ": ", "\"localhost\"", ",\n                ", "\"user\"", ": ", "\"root\"", ",\n                ", "\"password\"", ": ", "\"zhaoqifeng159\"", ",\n                ", "\"database\"", ": ", "\"adimin\"", "\n            }\n            self.conn = pymysql.connect(**config)\n        ", "except", " pymysql.Error ", "as", " e:\n            ", "print", "(", "'Error: %s'", " % e)\n    ", "def", " ", "close_Mysql_conn", "(", "self", "):\n        ", "try", ":\n            ", "if", " self.conn:\n                self.conn.close()\n        ", "except", " pymysql.Error ", "as", " e:\n            ", "print", "(", "'Error: %s'", " % e)\n\n\n    ", "def", " ", "get_Mysql_userinfo", "(", "self", "):\n        self.get_Mysql_conn()\n        sql = ", "' SELECT * FROM userinfo'", " ", "#这里我的登录用户头叫userinfo ，每个人的数据库不同，在建立时初始化。", "\n        ", "# 使用cursor()方法获取操作游标", "\n        cursor = self.conn.cursor()\n        ", "# 使用execute()方法执行SQL语句", "\n        cursor.execute(sql)\n        ", "# 使用fetchall()方法获取全部数据", "\n        result = cursor.fetchall()\n        ", "# 将数据用字典形式存储于result", "\n        result = [", "dict", "(", "zip", "([k[", "0", "] ", "for", " k ", "in", " cursor.description], row)) ", "for", " row ", "in", " result]\n        ", "# 关闭连接", "\n        cursor.close()\n        self.close_Mysql_conn()\n        ", "return", " result\n\n\n\n\n    ", "def", " ", "insert_Mysql_userinfo", "(", "self, text", "):\n        ", "print", "(", "\"进入用户注册提交函数\"", ")\n\n        self.name = ", "str", "(self.lineEdit_3.text())\n        self.pwd = ", "str", "(self.lineEdit_4.text())\n\n        self.get_Mysql_conn()", "#连接数据库", "\n        sql = ", "'SELECT * FROM userinfo'", "\n        cursor = self.conn.cursor()\n        cursor.execute(sql)\n        result = cursor.fetchall()\n        ", "print", "(", "\"result=\"", ", result)\n        result = [", "dict", "(", "zip", "([k[", "0", "] ", "for", " k ", "in", " cursor.description], row)) ", "for", " row ", "in", " result]\n        ulist = []\n        ", "for", " item ", "in", " result:\n            ulist.append(item[", "'name'", "])\n        ", "print", "(", "\"ulist=\"", ", ulist)\n\n        ", "try", ":\n            sql = ", "\"insert into userinfo(name, pwd) values('{}', '{}');\"", ".", "format", "(self.name,self.pwd)\n            cursor.execute(sql)\n            ", "if", " self.name == ", "''", " ", "or", " self.pwd == ", "''", ":\n                self.conn.rollback()\n                QMessageBox.warning(self, ", "\"警告\"", ", ", "\"账号或者密码含有空格，注册失败\"", ", QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)\n\n            ", "elif", " self.name ", "in", " ulist:\n                ", "#messagebox.showerror('警告', message='用户名已存在')", "\n                ", "#msg_box = QMessageBox(QMessageBox.Warning, '警告', '用户名已存在')", "\n                QMessageBox.warning(self, ", "\"警告\"", ", ", "\"用户名已存在\"", ", QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)\n\n            ", "else", ":\n                ", "# 提交事务", "\n                self.conn.commit()\n                ", "#messagebox.showinfo(title='恭喜', message='注册成功')", "\n                ", "#msg_box = QMessageBox(QMessageBox.information, '恭喜', '注册成功')", "\n                QMessageBox.information(self, ", "\"欢迎\"", ", ", "\"注册成功\"", ", QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)\n                mainface.close()  ", "# 关闭注册界面，在这之后就可以进入你编写的其他界面了。", "\n            cursor.close()\n            self.close_conn()\n        ", "except", ":\n            ", "# 限制提交", "\n            self.conn.rollback()\n\n\n", "\n", "这是登录代码", "\n", "\n    def on_pushButton_Login_clicked(self, text):\n        user_name = self.lineEdit.text()\n        user_password = self.lineEdit_2.text()\n        ", "print", "(", "\"进入账号判断函数\"", ")\n        self.get_Mysql_conn()  # 连接数据库\n        # 获取数据库中的值\n        sql = ", "'SELECT * FROM userinfo'", "\n        cursor = self.conn.cursor()\n        cursor.execute(sql)\n        ", "results", "=cursor.fetchall()\n        ", "print", "(results)\n        name=[]\n        password=[]\n        ", "for", " row ", "in", " results:\n            ", "adimin_nmae", "=row[0]\n            name.append(adimin_nmae)\n            ", "admin_password", "=row[1]\n            password.append(admin_password)\n        ", "print", "(name)\n        ", "print", "(password)\n        # 判断是否存在该账号\n        ", "flag", "=0\n        ", "print", "(type(self.lineEdit.text()))\n        ", "for", " i ", "in", " range(len(name)):\n            ", "if", " user_name == name[i] ", "and", " user_password == [i]:\n                ", "flag", "=1\n                \n            ", "else", ":\n                pass\n                # ", "print", "(type(name[i]))\n                # ", "print", "(type(self.lineEdit.text()))\n        ", "if", " flag == 1:\n            self.pushButton_3.clicked.connect(self.logindef)\n        ", "else", ":\n            QMessageBox.question(self, ", "\"警告\"", ", ", "\"用户名或密码不正确\"", ", QMessageBox.", "Yes", ")\n\n\n\n", "\n", "这是数据库", "\n", "登录上明明输入正确还是显示不正确", "\n", "\n", "######有没有好心人修正一下，或者写一个新的登录的方法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;35行写错了&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;format&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%02d:%02d:%02d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;hour&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;getvalue&lt;/span&gt;(),&lt;span class=\"hljs-built_in\"&gt;minute&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;getClass&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;/*这里写错了&amp;#xff0c;getvalue写成getClass了*/&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;second&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;getvalue&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["运行出现报错，代码没错", ["题目内容：", "\n", "这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。", "\n", "我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：", "\n", "public Clock(int hour, int minute, int second);", "\n", "用", "hour", ", ", "minute", "和", "second", "初始化时间。\n", "\n", "public void tick();", "\n", "“嘀嗒”一下，时间走1秒。\n", "\n", "public String toString();", "\n", "返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补", "0", "。如“", "00", ":", "01", ":", "22", "\"。注意其中的冒号是西文的，不是中文的。", "\n", "\n", "提示：String.format()可以用和printf一样的方式来格式化一个字符串。", "\n", "另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：", "\n", "public static void main(String", "[]", " args) {\n\n    java.util.Scanner ", "in", " = ", "new", " java.util.", "Scanner(System.", "in", ")", ";\n\n    Clock clock = ", "new", " ", "Clock(", "in", ".", "nextInt", "()", ", ", "in", ".next", "Int()", ", ", "in", ".next", "Int()", ");\n\n    clock.tick", "()", ";\n\n    ", "System", ".", "out.println(clock);\n\n    ", "in", ".close", "()", ";\n\n}\n", "\n", "注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。", "\n", "输入格式:", "\n", "采用给定的main函数无需考虑输入输出。", "\n", "输出格式：", "\n", "采用给定的main函数无需考虑输入输出。", "\n", "输入样例：", "\n", "采用给定的main函数无需考虑输入输出。", "\n", "输出样例：", "\n", "采用给定的main函数无需考虑输入输出。", "\n", "代码如下：", "\n", "public", " ", "class", " ", "Main", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args) {\n        java.", "util", ".", "Scanner", " in = ", "new ", "java", ".", "util", ".", "Scanner", "(System.", "in", ");\n        Clock clock = ", "new ", "Clock", "(in.", "nextInt", "(), in.", "nextInt", "(), in.", "nextInt", "());\n        clock.", "tick", "();\n        System.", "out", ".", "println", "(clock);\n        in.", "close", "();\n    }\n}\n", "class", " ", "Clock", "\n{\n    Display ", "hour", " = ", "new ", "Display", "(", "24", ");\n    Display ", "minute", " = ", "new ", "Display", "(", "60", ");\n    Display ", "second", " = ", "new ", "Display", "(", "60", ");\n    ", "public", " ", "Clock", "(", "int", " h,", "int", " m,", "int", " s) \n    {\n        ", "hour", ".", "setvalue", "(h);\n        ", "minute", ".", "setvalue", "(m);\n        ", "second", ".", "setvalue", "(s);\n    }\n    ", "public", " ", "void", " ", "tick", "() \n    {\n        ", "second", ".", "incrase", "();\n        ", "if", "(", "second", ".", "getvalue", "()==", "0", ") \n        {\n            ", "minute", ".", "incrase", "();\n            ", "if", "(", "minute", ".", "getvalue", "()==", "0", ") \n            {\n                ", "hour", ".", "incrase", "();\n            }\n        }\n    }\n    ", "public", " ", "String", " ", "toString", "() \n    {\n        ", "String", " s = ", "String", ".", "format", "(", "\"%02d:%02d:%02d\"", ",", "hour", ".", "getvalue", "(),", "minute", ".", "getClass", "(),", "second", ".", "getvalue", "());\n        ", "return", " s;\n    }\n}\n", "class", " ", "Display", "\n{\n    ", "private", " ", "int", " limit = ", "0", ";\n    ", "private", " ", "int", " value = ", "0", ";\n    ", "Display", "(", "int", " limit)\n    {\n        ", "this", ".", "limit", " = limit;\n    }\n    ", "public", " ", "void", " ", "incrase", "() \n    {\n        value++;\n        ", "if", "(limit == value) \n        {\n            value = ", "0", ";\n        }\n    }\n    ", "public", " ", "int", " ", "getvalue", "()\n    {\n        ", "return", " value;\n    }\n    ", "public", " ", "void", " ", "setvalue", "(", "int", " value) \n    {\n        ", "this", ".", "value", " = value;\n    }\n}\n\n", "\n", "报错说明", "Exception in thread \"main\" java.util.IllegalFormatConversionException: d != java.lang.Class", "    at java.base/java.util.Formatter$FormatSpecifier.failConversion(Formatter.java:4445)", "    at java.base/java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2957)", "    at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:2911)", "    at java.base/java.util.Formatter.format(Formatter.java:2689)", "    at java.base/java.util.Formatter.format(Formatter.java:2625)", "    at java.base/java.lang.String.format(String.java:3290)", "    at Clock.toString(Main.java:35)", "    at java.base/java.lang.String.valueOf(String.java:3365)", "    at java.base/java.io.PrintStream.println(PrintStream.java:1047)", "    at Main.main(Main.java:6)", "求帮助"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以这样改一下你的代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;rank&lt;/span&gt;():\n&lt;span class=\"hljs-comment\"&gt;# 将景区人气按照mark的大小排序&amp;#xff0c;sorted函数返回的是一个新的排序后的列表&amp;#xff0c;不会对原来的point列表造成影响&lt;/span&gt;\nsorted_points &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(point, key&amp;#61;&lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; p: &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(p[&lt;span class=\"hljs-string\"&gt;&amp;#39;mark&amp;#39;&lt;/span&gt;]), reverse&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)\n&lt;span class=\"hljs-comment\"&gt;# 使用循环遍历排序后的列表&amp;#xff0c;输出每个景区的id和mark&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; p &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sorted_points:\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{p[&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]}&lt;/span&gt;: &lt;span class=\"hljs-subst\"&gt;{p[&lt;span class=\"hljs-string\"&gt;&amp;#39;mark&amp;#39;&lt;/span&gt;]}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\nadminwork()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;rank函数就可以按照你的需求输出景区人气排行榜了。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["Python数组按大小分行输出", ["景区人气排行榜", "\n", "怎么把各景区人气按大小分行输出", "\n", "p1={", "\"id\"", ":", "'八达岭长城风景名胜区'", ",", "'kind'", ":", "'fengjing'", ",", "'price'", ":", "'75'", ",", "'region'", ":", "'延庆区'", ",", "'mark'", ":", "'502'", "}\np2={", "\"id\"", ":", "'北京市奥林匹克公园'", ",", "'kind'", ":", "'xiuxian'", ",", "'price'", ":", "'45'", ",", "'region'", ":", "'朝阳区'", ",", "'mark'", ":", "'325'", "}\np3={", "\"id\"", ":", "'恭王府'", ",", "'kind'", ":", "'xiaofei'", ",", "'price'", ":", "'128'", ",", "'region'", ":", "'西城区'", ",", "'mark'", ":", "'514'", "}\np4={", "\"id\"", ":", "'故宫博物院'", ",", "'kind'", ":", "'lishi'", ",", "'price'", ":", "'75'", ",", "'region'", ":", "'东城区'", ",", "'mark'", ":", "'552'", "}\np5={", "\"id\"", ":", "'慕田峪长城'", ",", "'kind'", ":", "'fengjing'", ",", "'price'", ":", "'45'", ",", "'region'", ":", "'怀柔区'", ",", "'mark'", ":", "'322'", "}\npoint=[p1,p2,p3,p4,p5]\n", "def", " ", "adminwork", "():\n    over = ", "\"结束\"", "\n    ", "print", "(", "'==========Welcome! The Greatest Administrator==========='", ")\n    info=", "'''\n    ==========欢迎来到旅游推荐系统==========\n         输入功能编号，你可以选择相应的功能：\n         输入“1”：查看人气排行榜\n\n========================================\n    '''", "\n    ", "print", "(info)\n    ", "while", " ", "True", ":\n        code = ", "input", "(", "\"请输入功能编号:\"", ")\n        ", "if", " code == ", "\"1\"", ":\n            rank()\n", "def", " ", "rank", "():\n    ", "for", " p ", "in", " point:\n        Rank=[", "int", "(p[", "'mark'", "])]\n        a=", "sorted", "(Rank,reverse=", "True", ")\n        ", "print", "((p[", "\"id\"", "]),(a))\nadminwork()\n", "\n", "输出结果未按照大小排序", "\n", "我不太理解 a=sorted(Rank,reverse=True)为什么不起作用。我尝试用另一种方法for循环语句去逐一比较，但感觉工作量很大，且不知道如何在多个景区中相互比较并且输出最终排序结果。", "\n", "我想让输出结果按照数字大小排序，输出的形式是景区的id+景区的mark"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;能够给出程序并讲解&amp;#xff0c;但是能联系一下吗&amp;#xff0c;不然怎么讲解呢。&lt;br /&gt;至于遗传算法&amp;#xff0c;可以看我写的这篇文章 &lt;a href=\"https://blog.csdn.net/soar3033/article/details/101682243?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1655273108970_1655273141617_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Python实现的遗传算法_soar3033的博客-CSDN博客_用python实现遗传算法&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;遗传算法的Python实现看到CSDN问答区有这么一个问题**“请问如何通过遗传算法得出正确字符串&amp;#xff1f; 40C比如我希望得到最终结果为&amp;#34;Hello World!&amp;#34;。请结合代码说明&amp;#xff0c;最好是用python。”**问题链接: link.针对这个问题&amp;#xff0c;自己写了一个。如下&amp;#xff1a;import randomm&amp;#61;40 #种群数v&amp;#61;0  #子代中符合进化目标的个体的位置索引flag&amp;#61;False  #...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/soar3033/article/details/101682243?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["实例遗传算法的详细求解", ["构建一个遗传算法程序，书中已给出详细步骤，但由于基础知识的欠缺，不能完全理解每一步的原因。希望得到重点部分的解释和与结果一样的程序，以及最后如何在excel表格中现实图表的显示。最好能够具体说明。", "找到由30件行李组成的背包问题的最优解。", "然而，knapsack问题是以下问题（图3.15）。", "假设现在有几件行李。 每件行李都被赋予了一定的重量（重量）和价格（价值）。 你选择其中一些行李，并将其装入背包。", "并将它们装入背包。 由于背包有重量限制，行李的总重量不得超过一定重量。 在这些条件下，我们寻找一种行李的组合，使总价格尽可能高。", "\n", "\n", "(1)每件行李都有一定的重量(weight)和价格(value)", "(2)选择其中一些，将其装入有重量限制的背包中，并找到使总价值最大化的组合。", "图3.15 Knapsack问题", "首先，考虑一下染色体是如何表示的。 在背包问题中，直接的方法是将哪些行李要装在背包中表示为0/1。 因此，按行李的件数排列0/1，把要放进背包的行李件数对应的位置作为1，把不放进背包的行李件数对应的位置作为0。 例如，在图3.15中，假设只有五件行李中的第二件和第三件被装在背包里。 在这种情况下，染色体的表示方法看起来像 \"01100\"。", "染色体的估值被计算为装在编织袋中的价值之和。 然而，如果超过了背包的重量限制，该值将被设置为零。 例如，假设在图3.15中，背包的重量限制为100。 在这种情况下，对于将第二和第三件行李装入背包的染色体 \"01100\"，其数值计算如下", "染色体 \"01100\" 価値", "82+85=167", "重量", "39+9=48", "\n", "总重量值为48，总重量小于或等于重量限制，所以总数值167，是染色体的原值。", "相反，如果我们考虑，例如，图315中所有的行李都装在一个背包里的情况，染色体的表达是1。 以同样的方式思考价值和重量，染色体 \"1111 \"有以下价值27+82+85+71+91=356", "重量65+39+9+72+87=272", "染色体的总价值很大，但染色体的总重量超过了100的重量限制，所以染色体的价值为0。", "现在我们已经决定如何表示和评估染色体，现在我们可以根据前面介绍的程序建立遗传算法程序。 首先，考虑数据结构。 遗传算法在一个染色体群体上运行。 因此，让我们在C语言中把染色体群表示为一个变量。", "染色体被表示为0/1的序列，所以一条染色体可以被表示为一个一维数组。 其中的几个走到一起，形成一个染色体群体。 因此，一个染色体群体用一个二维数组表示，如下所示。", "int pool [POOLSIZE] [N]", "int ngpool [POOLSIZE * 2]", "其中，符号常数POOLSIZE给出了每一代染色体组的数量；pool数组保存特定一代的染色体，而ngpool数组保存在遗传操作中作为下一代染色体的候选个体。 ngpool序列中的元素数量是pool序列的两倍。 这样做是为了给后代创造更多的染色体，通过选择的遗传操作可以从中选择合适的染色体。", "在编织袋问题中，必须保留每个包裹的重量和价值。 这里，一个名为PARCEL的二维数组被用来保存重量和数值。 这里，第一个下标给出了包裹之间的区别，第二个下标给出了重量和价值之间的区别。 在下文中，第二个下标如果是0，则被视为代表权重，如果是1，则代表价值。 另外，符号常数N是地块的数量。", "int parcel [N][2]; /", "行李 ", "/", "现在让我们考虑如何根据一个程序来描述一个具体的过程。 首先，在处理步骤（1）中，通过随机数对染色体群进行初始化，具体操作如下。", "int i, j;/", "用于重复的控制变量 ", "/", "for (i = 0; i < POOLSIZE; ++i)for (j = 0; j < N; ++j)pool [i] [j] = rndn (2);", "这里，函数rndn是一个返回随机数的函数，该随机数小于作为参数给定的数字，并且大于或等于0。 在这里，染色体种群是通过随机生成0或1来初始化的。", "接下来是处理步骤（2），使用for语句将以下过程重复适当次数。", "首先，（2-1），交叉过程，首先创建一个轮盘，选择父母。", "具体来说，一个数组轮盘被创建如下，连同评价的总值totalfitness一起被计算。 其中函数evalfit计算作为参数的染色体的评估值。", "/", " 创建轮盘", "/", "for (i = 0; i < POOLSIZE; ++i)", "roulette[i] = evalfit (pool [i]);", "/", " 计算评估的总和", "/ for (i = 0; i < POOLSIZE; ++i)", "totalfitness += roulette [i];", "利用这些结果，步骤（2-1-1）中的父本选择被写成如下", "做(/", "选择父母", "/)", "mama=selectP（轮盘赌，Totalfitness）。", "papa = selectp（轮盘赌，totalfitness）。", "在这里，函数selectp通过轮盘选择来选择一个父本。", "上述做法还可以防止同一染色体被选择两次，这将使交叉运算无效。", "上述做法可以防止同一染色体被选择两次，这将使交叉运算无效。", "接下来，步骤（2-1-2）中的一点交叉等被实施，如下所示。这里，m和PD序列是父染色体，而c1和c2序列持有子染色体。", "/* 交叉点的确定 ", "/cp = rndn (N)。", "/", " 复制前半部分 */", "for (j = 0; j < cp; ++j)", "c1 [j] = m[j]。", "c2 [j] = P[j]。", "/*复制后半部分的内容 */", "for (; j< N; ++j)[c2 [j] = m[j];", "c1 [j] = p[j]。", "然后，步骤（2-2）中的突变过程按以下方式实施。下面的if语句对应于步骤（2-2-1），最后的赋值语句对应于（2-2-2）。注意，notval0函数将0和1倒置。", "for (i = 0; i < POOLSIZE * 2; ++i)", "for (j = 0; j < N; ++j)", "如果((double) rndn (100) / 100.0 <= MRATE)", "ngpool [i] [j] = notval（ngpool [i] [j]）。", "上述过程以程序的形式实现，其模块结构如图3.16所示。 该程序应命名为kpga.c。", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "主要是你的数据库连接字符串，有两种类型，你选择你对应的\r\n\r\n\r\n\r\n```\r\n //设置连接字符串\r\n //一个是数据库身份验证\r\n_bstr_t strConnect = \"Provider=SQLOLEDB.1;Data Source=ZHOUWEI\\\\MYSQL;Initial Catalog=AMS;User ID=sa;PWD=123456\";\r\n```\r\n\r\n\r\n\r\n```\r\n //下面是Windows身份验证方式\r\n_bstr_t strConnect = \"Provider=SQLOLEDB.1;Integrated Security = SSPI;Persist Security Info = FALSE;Data Source=WANGLIANG\\\\SQLEXPRESS;Initial Catalog=ADODemo\"; \r\n```", "Konwledge_Point": "if语句的形式", "Question": ["关于VS2005对SqlServer数据库操作的问题", ["对数据库Student进行查询时运行到msado.tli文件中的下面这个函数中的raw_Open时就崩溃掉。", "\n\n", " inline HRESULT Recordset15::Open ( const _variant_t & Source, const _variant_t & ActiveConnection, enum CursorTypeEnum CursorType, enum LockTypeEnum LockType, long Options ) {\n    HRESULT _hr = raw_Open(Source, ActiveConnection, CursorType, LockType, Options);\n    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));\n    return _hr;\n}\n", "\n\n", "调用代码：", "\n\n", "        CString strsql = _T(\"select * from LoginInfo where Name='\");\n        strsql+=name;\n        strsql+=\"' and Password='\";\n        strsql+=psw;\n        strsql+=\"'\";\n        MessageBox(hwnd, strsql, _T(\"查询字符串\"), MB_OK);\n        CString strcolumn[6] = {_T(\"Name\"),_T(\"Sex\"),_T(\"Password\"),_T(\"School\"),_T(\"Major\"),_T(\"Number\")};\n        int ncolumn = 6;\n        CStringArray strvalue;\n        theApp.m_dao.GetData(strsql,strcolumn,ncolumn,strvalue);\n", "\n\n", " BOOL CDao::GetData(CString strSql,CString *strQueryCloum,int nCloumNum,CStringArray& strDataValue)\n{\n    HRESULT het;\n    //_bstr_t    字符串          _variant_t 多种数据类型集合 vt类型   ..value值                               //com\n    _bstr_t bstrSql = strSql;               //执行sql\n    _bstr_t bstrConnect = m_strConnect;     //连库串\n    _bstr_t bstrQueryCloum;                 //列名\n\n    Fields *fields;\n    FieldPtr fieldPtr;\n\n    CString strValue;\n    _variant_t varBLOB;\n    try\n    {\n        //1.打开表\n        /*m_pRecordset->Open(查询SQL语句,连接串，打开方式，数据源更新时如何锁定结果集，以什么形式传入)\n            打开方式：\n            adOpenUnspecified = -1,  默认的方式打开\n            adOpenForwardOnly = 0,    向前移动的游标打开\n            adOpenKeyset = 1,         以键值打开\n            adOpenDynamic = 2,        当你添加数据时别人也有可能往这个表添加数据，谁在前谁添加到前面（多人用数据库时）\n            adOpenStatic = 3          别人也想往里面添加数据一直停留在打开时候\n\n            锁定结果集方式：\n            adLockReadOnly = 1,         只读的不能改变数据\n            adLockPessimistic = 2,       （保守式锁定）逐个 – 编辑时立即锁定数据源的纪录\n            adLockOptimistic = 3,        （开放式锁定）逐个 – 只在调用update方法时才锁定纪录\n            adLockBatchOptimistic = 4     开方式 可以更新一批数据更新模式\n            +       bstrConnect {\"Driver={SQL Native Client};Server=192.168.1.92,2433;Uid=sa;Pwd=sa;Database=colin0716\" (1)}    _bstr_t\n            +       bstrSql {\"select * from student\" (1)}   _bstr_t\n\n        */\n        het = m_pRecordset->Open(bstrSql,bstrConnect,adOpenDynamic,adLockOptimistic,adCmdText);\n        if (!SUCCEEDED(het))\n        {\n            AfxMessageBox(_T(\"打开表失败\"));\n            m_strErrorMsg = _T(\"查询表失败\");\n            return FALSE;\n        }\n        //循环结果\n        while(!m_pRecordset->ADOEOF)\n        {\n                        //按行遍历\n            for(int i=0;i<nCloumNum;i++)\n            {\n                bstrQueryCloum = strQueryCloum[i];\n                fields = m_pRecordset->GetFields(); //fields 结果集中的字段集合。由于一行记录中可以包含多个字段，因此fileds属性是一个数组形式，数组中每一个元素代表一个字段\n\n                fieldPtr = fields->GetItem(bstrQueryCloum);//field对象表示记录集中数据的某个单独的列。\n\n                varBLOB = fieldPtr->GetValue();//获得当前列的值\n\n                //long nSize =fieldPtr->ActualSize;\n\n\n                //注意图片名称必须为图片流的前一个字段\n                //strValue = DataToCStringType(varBLOB,nSize,strValue);\n                strValue = DataToCStringType(varBLOB);\n                strDataValue.Add(strValue);\n                //varBLOB.Detach();\n            }\n            m_pRecordset->MoveNext();\n        }\n\n        m_pRecordset->Close();\n    }\n    catch(_com_error *e)\n    {\n        m_strErrorMsg = e->ErrorMessage();\n        AfxMessageBox(e->ErrorMessage());\n    }\n\n    return TRUE;\n}\n\n", "\n\n", "那个_hr是总是返回E_FAIL,然后return的时候就崩溃掉。", "\n这几天在写一个对数据库操作的项目，但是这几天被这个问题给卡住了，实在是找不到如何解决了，还请各位大神指点迷津。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改完善如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#pragma warning(disable:&lt;span class=\"hljs-number\"&gt;4996&lt;/span&gt;)\n#include &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;stdio.h&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;\n#include &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;string.h&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;\n#include &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;stdlib.h&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;\n#define &lt;span class=\"hljs-type\"&gt;N&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;people&lt;/span&gt;\n{\n    char jiankangma[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//健康码  int jiankangma[32];&lt;/span&gt;\n    char number_id[&lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//身份证 &lt;/span&gt;\n    char name[&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//姓名 &lt;/span&gt;\n    long long phone;&lt;span class=\"hljs-comment\"&gt;//电话 &lt;/span&gt;\n    char address[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//所在地区  &lt;/span&gt;\n    char sblb[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//申报类别&lt;/span&gt;\n    char company[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//所属单位名称&lt;/span&gt;\n    char jkzk[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//健康状态 &lt;/span&gt;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;people&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;peo&lt;/span&gt;[&lt;span class=\"hljs-title class_\"&gt;N&lt;/span&gt;];\n&lt;span class=\"hljs-title class_\"&gt;int&lt;/span&gt;    &lt;span class=\"hljs-title class_\"&gt;max_N&lt;/span&gt; &amp;#61; 0;\n&lt;span class=\"hljs-title class_\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;menu&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-comment\"&gt;//char ch;&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;  ** 欢迎使用健康申报系统 ** &lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;请选择(1-6) :&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   1.查询人民信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   2.插入人民信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   3.添加人民信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   4.删除人民信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   5.浏览人民记录信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;   6.退出&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;************************************&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;\\t&lt;/span&gt;你的选择是&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-comment\"&gt;//ch&amp;#61;getche();&lt;/span&gt;\n};\nvoid &lt;span class=\"hljs-type\"&gt;Findname&lt;/span&gt;()  &lt;span class=\"hljs-comment\"&gt;//用户自定义函数&amp;#xff0c;实现对指定数据的查找功能。&amp;#xff08;名字&amp;#xff09; &lt;/span&gt;\n{\n\n    char s[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];  &lt;span class=\"hljs-comment\"&gt;//定义用户输入的学生姓名数据为char型&amp;#xff0c;占20列。&lt;/span&gt;\n    int i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的姓名:&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, s);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (strcmp(peo[i].name, s) &lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; max_N)\n        i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//当输入的姓名与当前姓名不相同时&amp;#xff0c;i自增1&amp;#xff0c;比较下一个成员。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; max_N)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到相关信息&amp;#xff01;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况 &lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %lld %s %s %s %s&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, peo[i].jiankangma, peo[i].number_id, \n        peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n\n}  &lt;span class=\"hljs-comment\"&gt;//以表列的形式输出查找到的成员的相关信息。&lt;/span&gt;\n\nvoid &lt;span class=\"hljs-type\"&gt;Findnumber_id&lt;/span&gt;()  &lt;span class=\"hljs-comment\"&gt;//用户自定义函数&amp;#xff0c;实现对指定数据的查找功能。&amp;#xff08;身份证&amp;#xff09; &lt;/span&gt;\n{\n    char s[&lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;];  &lt;span class=\"hljs-comment\"&gt;//定义用户输入身份证号数据为char型。&lt;/span&gt;\n    int i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的人民身份证号:&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, s);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (strcmp(peo[i].number_id, s) &lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; max_N)\n        i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//当输入的学号与当前学号不相同时&amp;#xff0c;i自增1&amp;#xff0c;比较下一个成员。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; max_N)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到相关学生信息&amp;#xff01;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况 &lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %lld %s %s %s %s&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, peo[i].jiankangma, peo[i].number_id,\n        peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n}  &lt;span class=\"hljs-comment\"&gt;//以表列的形式输出查找到的成员的相关信息。&lt;/span&gt;\n\nvoid &lt;span class=\"hljs-type\"&gt;Insert&lt;/span&gt;()  &lt;span class=\"hljs-comment\"&gt;//用户自定义Insert函数&amp;#xff0c;实现将学生信息插入指定位置的功能。&lt;/span&gt;\n{\n    int i, j;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max_N &lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;N&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//插入数超过最大容量&amp;#xff0c;不允许插入操作。&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要插入的位置&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;i);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt; max_N &lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt; i &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {  &lt;span class=\"hljs-comment\"&gt;//当要插入位置大于结构体数组元素总数时&amp;#xff0c;直接将数据插入到结构体数组最后。&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民健康码&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].jiankangma);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民身份证号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[&lt;span class=\"hljs-type\"&gt;N&lt;/span&gt;].number_id);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].name);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;peo[max_N].phone);  &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;peo[N].phone);&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民所在地区&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].address);  &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;peo[N].address);&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民申报类别&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].sblb);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民所属单位名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].company);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民健康状况&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].jkzk);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;信息输入成功&amp;#xff01;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    }  &lt;span class=\"hljs-comment\"&gt;//用户分别输入的各项信息&amp;#xff0c;系统返回&amp;#34;输入成功&amp;#34;的信息。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {  &lt;span class=\"hljs-comment\"&gt;//当要插入位置不大于结构体数组成员总数时&amp;#xff0c;执行下述操作。&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; max_N; j &lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;#61;&lt;/span&gt; i; j&lt;span class=\"hljs-operator\"&gt;--&lt;/span&gt;)\n        {\n            peo[j] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; peo[j &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].name, peo[j].name);&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].number_id, peo[j].number_id);&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].address, peo[j].address);&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].sblb, peo[j].sblb);&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].company, peo[j].company);&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//strcpy(peo[j &amp;#43; 1].jkzk, peo[j].jkzk);&lt;/span&gt;\n        }  &lt;span class=\"hljs-comment\"&gt;//通过for循环语句&amp;#xff0c;将第j&amp;#43;1项的各项数据赋值给第j项&amp;#xff0c;直到要插入数据的位置为止&amp;#xff0c;&lt;/span&gt;\n           &lt;span class=\"hljs-comment\"&gt;//实现第i项之后的数据每项都向后移动一个位置。&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民健康码&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].jiankangma);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民身份证号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].number_id);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].name);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].phone);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民所在地区&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].address);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民申报类别&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sblb);    &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;peo[N].sblb);&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民所属单位名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].company); &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;peo[N].company); &lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入人民健康状况&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[i&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].jkzk);    &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;peo[N].jkzk);&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;信息输入成功&amp;#xff01;&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    }  &lt;span class=\"hljs-comment\"&gt;//将用户输入的各项数据赋值到第i个位置中&amp;#xff0c;实现数据的插入。&lt;/span&gt;\n    max_N&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//全局变量n自增1&amp;#xff0c;保证插入的数据存储到结构体中。&lt;/span&gt;\n}\nvoid &lt;span class=\"hljs-type\"&gt;Input&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;//录入学生信息函数(添加&amp;#xff09; &lt;/span&gt;\n{\n    int i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//system(&amp;#34;cls&amp;#34;);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {     &lt;span class=\"hljs-comment\"&gt;//for (int i &amp;#61; 0; i &amp;lt; N; i&amp;#43;&amp;#43;)&lt;/span&gt;\n         &lt;span class=\"hljs-comment\"&gt;//先将数据赋给结构体变量&amp;#xff0c;而后再写入&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;开始录入信息&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;请先输入第%d名人民的健康码:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].jiankangma);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d人民的身份证号:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].number_id);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的姓名:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].name);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的电话:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;peo[max_N].phone);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的地址:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].address);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的申报类别:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].sblb);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的所属单位名称:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].company);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名人民的健康状况:&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, max_N &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peo[max_N].jkzk);\n        max_N&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max_N &lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;N&lt;/span&gt;) {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;记录已满&amp;#xff0c;退出添加&amp;#xff01;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续添加信息(1.继续  0.退出)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;i);\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i);\n\n}   &lt;span class=\"hljs-comment\"&gt;//;&lt;/span&gt;\nvoid writeinfo()\n{\n    &lt;span class=\"hljs-type\"&gt;FILE&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; fp;\n    fp &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;D:&lt;span class=\"hljs-subst\"&gt;\\\\&lt;/span&gt;健康申报系统名单.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;NULL&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    fwrite(peo, sizeof(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; people), max_N, fp);\n    fclose(fp);\n}\nvoid readinfo()\n{\n    &lt;span class=\"hljs-type\"&gt;FILE&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; fp;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;D:&lt;span class=\"hljs-subst\"&gt;\\\\&lt;/span&gt;健康申报系统名单.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;NULL&lt;/span&gt;) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;读文件错误&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fread(&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;peo[max_N], sizeof(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; people), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, fp) &lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            max_N&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;\n    }\n    fclose(fp);\n}\nvoid &lt;span class=\"hljs-type\"&gt;Output&lt;/span&gt;()  &lt;span class=\"hljs-comment\"&gt;//用户自定义Output函数&amp;#xff0c;实现数据的输出功能。M&lt;/span&gt;\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max_N &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; max_N; i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %lld %s %s %s %s&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, peo[i].jiankangma, peo[i].number_id,\n            peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------------------------------------&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n\n    }  &lt;span class=\"hljs-comment\"&gt;//使用for循环语句&amp;#xff0c;输出结构体中所有成员信息。&lt;/span&gt;\n}\nvoid &lt;span class=\"hljs-type\"&gt;Delete&lt;/span&gt;()\n{\n    char x[&lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;];  &lt;span class=\"hljs-comment\"&gt;//long x;&lt;/span&gt;\n    int j, i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入要删除的身份证号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, x);  &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;x);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//while (peo[i].number_id !&amp;#61; x &amp;amp;&amp;amp; i &amp;lt; n)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (strcmp(peo[i].number_id, x) &lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; max_N)\n        i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//比较输入的 x 数据与结构体中身份证号&amp;#xff0c;若不相同&amp;#xff0c;i 自增 1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; max_N)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到相关人员!&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; i; j &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; max_N &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;)\n            peo[j] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; peo[j &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        max_N&lt;span class=\"hljs-operator\"&gt;--&lt;/span&gt;;\n    }\n}     &lt;span class=\"hljs-comment\"&gt;//若 i 与 n 值相同&amp;#xff0c;说明无此数据&amp;#xff0c;输出“未找到信息&amp;#xff01;&lt;/span&gt;\nvoid main()\n{\n    &lt;span class=\"hljs-comment\"&gt;//char ch;&lt;/span&gt;\n    int ch;\n    readinfo();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (;;)\n    {\n        menu();\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;ch);  &lt;span class=\"hljs-comment\"&gt;//ch &amp;#61; getche();&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (ch)        &lt;span class=\"hljs-comment\"&gt;//;&lt;/span&gt;\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            int find;\n            &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.按姓名查找&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;2.按身份证号查找&lt;span class=\"hljs-subst\"&gt;\\n&lt;/span&gt;请选择&amp;#xff08;1-2&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;find);\n            } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (find &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt; find&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (find)     &lt;span class=\"hljs-comment\"&gt;//find()&lt;/span&gt;\n            {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Findname&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//findname()&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Findnumber_id&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Insert&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Input&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Delete&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;Output&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:writeinfo(); exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*输入错误&amp;#xff01;*&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["在函数void delete中出现问题，如何解决才能实现代码编译。", ["在函数void delete中出现问题", "\n", "问题是在 void delete 之前需要使用非限定id，请问我需要怎么解决呢", "\n", "我把void改成其他也不行，搜索过其他资料也不对 ", "\n", "代码调试通过并且将问题解决。", "\n", "#include", "<", "stdio.h", ">", "\n#include ", "<", "string.h", ">", "\n#include", "<", "stdlib.h", ">", "\n#include", "<", "string.h", ">", "\n#define ", "N", " ", "30", "\n#pragma warning(disable:", "4996", ")\n", "struct", " ", "people", "\n{\n    int jiankangma[", "32", "];", "//健康码 ", "\n    char number_id[", "36", "];", "//身份证 ", "\n    char name[", "18", "];", "//姓名 ", "\n    long long phone;", "//电话 ", "\n    char address[", "20", "];", "//所在地区  ", "\n    char sblb[", "30", "];", "//申报类别", "\n    char company[", "50", "];", "//所属单位名称", "\n    char jkzk[", "10", "];", "//健康状态 ", "\n};\n", "struct", " ", "people", " ", "peo", "[", "N", "];\n", "void", " ", "menu", "()\n{\n    char ch;\n    printf(", "\"", "\\n", "\\n", "\\t", "\\t", "  ** 欢迎使用健康申报系统 ** ", "\\n", "\\n", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "请选择(1-6) :", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   1.查询人民信息", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   2.修改人民信息", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   3.添加人民信息", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   4.删除人民信息", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   5.浏览人民记录信息", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "\\t", "   6.退出", "\\n", "\"", ");\n    printf(", "\"", "\\t", "\\t", "************************************", "\\n", "\"", ");\n    printf(", "\"", "\\n", "\\t", "\\t", "你的选择是：\"", ");\n    ", "//ch=getche();", "\n};\nvoid ", "Findname", "()  ", "//用户自定义函数，实现对指定数据的查找功能。（名字） ", "\n{\n\n    char s[", "20", "];  ", "//定义用户输入的学生姓名数据为char型，占20列。", "\n    int i", "=", "0", ";\n    printf(", "\"请输入要查询的姓名:\"", ");\n    scanf(", "\"%s\"", ",s);\n    ", "while", "(strcmp(peo[i].name,s)", "!=", "0", "&&", "i", "<", "N", ")\n        i", "++", ";  ", "//当输入的姓名与当前姓名不相同时，i自增1，比较下一个成员。", "\n    ", "if", "(i", "==", "N", ")\n    {\n        printf(", "\"未找到相关信息！", "\\n", "\"", ");\n    }\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    printf(", "\"健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况 ", "\\n", "\"", ");\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    printf(", "\"%s %s %s %lld %s %s %s %s", "\\n", "\"", ", peo[i].jiankangma, peo[i].number_id, peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    \n}  ", "//以表列的形式输出查找到的成员的相关信息。", "\n\nvoid ", "Findnumber_id", "()  ", "//用户自定义函数，实现对指定数据的查找功能。（身份证） ", "\n{\n    char s[", "50", "];  ", "//定义用户输入身份证号数据为char型，占20列。", "\n    int i", "=", "0", ";\n    printf(", "\"请输入要查询的人民身份证号:\"", "); \n    scanf(", "\"%s\"", ",s);\n    ", "while", "(strcmp(peo[i].number_id,s)", "!=", "0", "&&", "i", "<", "N", ")\n        i", "++", ";  ", "//当输入的学号与当前学号不相同时，i自增1，比较下一个成员。", "\n    ", "if", "(i", "==", "N", ") \n    {\n        printf(", "\"未找到相关学生信息！", "\\n", "\"", ");\n    }\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    printf(", "\"健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况 ", "\\n", "\"", ");\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    printf(", "\"%s %s %s %lld %s %s %s %s", "\\n", "\"", ", peo[i].jiankangma, peo[i].number_id, peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n}  ", "//以表列的形式输出查找到的成员的相关信息。", "\n\nvoid ", "Insert", "()  ", "//用户自定义Insert函数，实现将学生信息插入指定位置的功能。", "\n{\n    int i,j;\n    printf(", "\"请输入要插入的位置：\"", ");\n    scanf(", "\"%d\"", ",", "&", "i);\n    ", "if", "(i", ">", "N", ")\n    {  ", "//当要插入位置大于结构体数组元素总数时，直接将数据插入到结构体数组最后。", "\n    printf(", "\"输入人民健康码：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].jiankangma);\n    printf(", "\"输入人民身份证号：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].number_id);\n    printf(", "\"输入人民姓名：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].name);\n    printf(", "\"输入人民电话：\"", ");\n    scanf(", "\"%lld\"", ",", "&", "peo[", "N", "].phone);\n    printf(", "\"输入人民所在地区：\"", ");\n    scanf(", "\"%s\"", ",", "&", "peo[", "N", "].address);\n    printf(", "\"输入人民申报类别：\"", ");\n    scanf(", "\"%s\"", ",", "&", "peo[", "N", "].sblb);\n    printf(", "\"输入人民所属单位名称：\"", ");\n    scanf(", "\"%s\"", ",", "&", "peo[", "N", "].company);\n    printf(", "\"输入人民健康状况：\"", ");\n    scanf(", "\"%s\"", ",", "&", "peo[", "N", "].jkzk);\n    printf(", "\"信息输入成功！", "\\n", "\"", ");\n    }  ", "//用户分别输入的各项信息，系统返回\"输入成功\"的信息。", "\n    ", "else", "\n    {  ", "//当要插入位置不大于结构体数组成员总数时，执行下述操作。", "\n        ", "for", "(j", "=", "N", "-", "1", ";j", ">=", "i;j", "--", ")\n        {\n            j", "=", "j", "+", "1", ";\n            strcpy(peo[j", "+", "1", "].name,peo[j].name);\n            strcpy(peo[j", "+", "1", "].number_id,peo[j].number_id);\n            strcpy(peo[j", "+", "1", "].address,peo[j].address);\n            strcpy(peo[j", "+", "1", "].sblb,peo[j].sblb);\n            strcpy(peo[j", "+", "1", "].company,peo[j].company);\n            strcpy(peo[j", "+", "1", "].jkzk,peo[j].jkzk);\n        }  ", "//通过for循环语句，将第j+1项的各项数据赋值给第j项，直到要插入数据的位置为止，实现第i项之后的数据每项都向后移动一个位置。", "\n        printf(", "\"输入人民健康码：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].jiankangma);\n    printf(", "\"输入人民身份证号：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].number_id);\n    printf(", "\"输入人民姓名：\"", ");\n    scanf(", "\"%s\"", ",peo[", "N", "].name);\n    printf(", "\"输入人民电话：\"", ");\n    scanf(", "\"%d\"", ",", "&", "peo[", "N", "].phone);\n    printf(", "\"输入人民所在地区：\"", ");\n    scanf(", "\"%d\"", ",", "&", "peo[", "N", "].address);\n    printf(", "\"输入人民申报类别：\"", ");\n    scanf(", "\"%d\"", ",", "&", "peo[", "N", "].sblb);\n    printf(", "\"输入人民所属单位名称：\"", ");\n    scanf(", "\"%d\"", ",", "&", "peo[", "N", "].company);\n    printf(", "\"输入人民健康状况：\"", ");\n    scanf(", "\"%d\"", ",", "&", "peo[", "N", "].jkzk);\n    printf(", "\"信息输入成功！", "\\n", "\"", ");\n    }  ", "//将用户输入的各项数据赋值到第i个位置中，实现数据的插入。", "\n    j", "++", ";  ", "//全局变量n自增1，保证插入的数据存储到结构体中。", "\n    i", "++", ";\n}\nvoid ", "Input", "()", "//录入学生信息函数(添加） ", "\n{\n    int i;\n    ", "FILE", " ", "*", "fp;\n    ", "//system(\"cls\");", "\n    ", "for", " (int i ", "=", " ", "0", "; i ", "<", " ", "N", "; i", "++", ")\n    {", "//先将数据赋给结构体变量，而后再写入", "\n        printf(", "\"开始录入信息", "\\n", "请先输入第%d名人民的健康码:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].jiankangma);\n        printf(", "\"请输入第%d人民的身份证号:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].number_id);\n        printf(", "\"请输入第%d名人民的姓名:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].name);\n        printf(", "\"请输入第%d名人民的电话:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%lld\"", ", ", "&", "peo[i].phone);\n        printf(", "\"请输入第%d名人民的地址:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].address);\n        printf(", "\"请输入第%d名人民的申报类别:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].sblb);\n        printf(", "\"请输入第%d名人民的所属单位名称:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].company);\n        printf(", "\"请输入第%d名人民的健康状况:", "\\n", "\"", ", i ", "+", " ", "1", ");\n        scanf(", "\"%s\"", ", peo[i].jkzk);\n        ", "// system(\"cls\");", "\n        fp", "=", "fopen(", "\"D", "\\\\", "代码", "\\\\", "健康申报系统名单.txt\"", ",", "\"r\"", ");\n        fwrite(", "&", "peo[", "0", "],sizeof(peo[", "0", "]),", "N", ",fp);\n        fclose(fp);\n    }\n    ", "// writeinfo();//调用文件写入函数写入数据", "\n};\nvoid ", "Output", "()  ", "//用户自定义Output函数，实现数据的输出功能。M", "\n{\n    int i;\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    printf(", "\"健康码   身份证号   姓名   电话   所在地区   申报类别   所属单位名称   健康状况", "\\n", "\"", ");\n    printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n    ", "for", " (i ", "=", " ", "0", "; i ", "<", " ", "N", "; i", "++", ")\n    {\n        printf(", "\"%s %s %s %lld %s %s %s %s", "\\n", "\"", ", peo[i].jiankangma, peo[i].number_id, peo[i].name, peo[i].phone, peo[i].address, peo[i].sblb, peo[i].company, peo[i].jkzk);\n        printf(", "\"-------------------------------------------------------------------", "\\n", "\"", ");\n \n    }  ", "//使用for循环语句，输出结构体中所有成员信息。", "\n};\nvoid delete()\n{\n long x;\n int j,i", "=", "0", ";\n ", "FILE", " ", "*", "fp;\n      int n", "=", "0", ";\n      ", "if", "((fp", "=", "fopen(", "\"D", "\\\\", "代码", "\\\\", "健康申报系统名单.txt\"", ",", "\"r\"", "))", "==", "NULL", "){\n          printf(", "\"文件错误\"", ");\n          ", "return", "; \n      }\n      ", "while", " (", "!", "feof(fp))\n      {\n        ", "if", "((fread(", "&", "peo[", "N", "],sizeof(", "struct", " people),", "1", ",fp)))\n          n", "++", ";\n      }\nfclose(fp);\n\n    printf(", "\"输入要删除的身份证号：\"", ");\n    scanf(", "\"%s\"", ",", "&", "x);\n", "while", "(peo[i].number_id", "!=", "x", "&&", "i", "<", "n)\n    i", "++", ";                                   ", "//比较输入的 x 数据与结构体中身份证号，若不相同，i 自增 1", "\n", "if", "(i", "==", "n)\n{\n    printf(", "\"未找到相关人员!", "\\n", "\"", ");\n    ", "return", ";\n}  \n}                                        ", "//若 i 与 n 值相同，说明无此数据，输出“未找到信息！", "\nvoid main()\n{\n    char c;\n    ", "for", "()\n    {\n        menu();\n        ch", "=", "getche();\n        ", "switch", "(ch);\n        {\n            ", "case", " ", "1", ":\n                ", "switch", "(find())\n                {\n                ", "case", " ", "1", ":findname();", "break", ";\n                ", "case", " ", "2", ":", "Findnumber_id", "();", "break", ";\n                }\n            ", "case", " ", "2", ":", "Insert", "();", "break", ";\n            ", "case", " ", "3", ":", "Input", "();", "break", ";\n            ", "case", " ", "4", ":delete();", "break", ";\n            ", "case", " ", "5", ":", "Output", "();", "break", ";\n            ", "case", " ", "0", ":exit(", "0", ");", "break", ";\n            ", "default", ":printf(", "\"*输入错误！*\"", ");", "break", ";\n        }\n    }\n     \n } \n\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n 给你一个自己写的例子，实现bean转成JSONPObject，并输出JSONPObject的内容\r\npublic class JsonTest {\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tperson per=new person(\"xx\",20);\r\n\t\tJSONPObject jobj=new JSONPObject(\"p\", per);\r\n\t\tSystem.out.println(jobj.getValue().toString());\r\n\t}\r\n\t\r\n\tstatic class person{\r\n\t\tprivate String name;\r\n\t\tprivate int age;\r\n\t\tpublic person(String name, int age) {\r\n\t\t\tsuper();\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.age = age;\r\n\t\t}\r\n\t\tpublic String getName() {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t\tpublic void setName(String name) {\r\n\t\t\tthis.name = name;\r\n\t\t}\r\n\t\tpublic int getAge() {\r\n\t\t\treturn age;\r\n\t\t}\r\n\t\tpublic void setAge(int age) {\r\n\t\t\tthis.age = age;\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic String toString() {\r\n\t\t\t// TODO Auto-generated method stub\r\n\t\t\treturn \"name = \"+getName()+\", age =\"+getAge();\r\n\t\t}\r\n\t}\r\n}\r\n```", "Konwledge_Point": "if语句的形式", "Question": ["String字符串转换成json格式并打印json数据。", ["执行到150行的时候，不抱错，也没有执行后面的语句，我想请教大神String转json格式然后存储到本地数据库，有什么办法。", "\npackage sql_conn;", "\n\n", "import java.awt.EventQueue;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\nimport javax.swing.JButton;", "\nimport javax.swing.JFrame;", "\nimport javax.swing.JPanel;", "\nimport java.io.BufferedReader;", "\nimport java.io.BufferedWriter;", "\nimport java.io.DataOutputStream;", "\nimport java.io.IOException;", "\nimport java.io.InputStreamReader;", "\nimport java.io.OutputStreamWriter;", "\nimport java.io.PrintWriter;", "\nimport java.io.UnsupportedEncodingException;", "\nimport java.net.MalformedURLException;", "\nimport java.net.URL;", "\nimport java.net.URLConnection;", "\nimport java.net.URLEncoder;", "\nimport javax.swing.*;", "\nimport java.sql.Connection;", "\nimport java.sql.DatabaseMetaData;", "\nimport java.sql.DriverManager;", "\nimport java.sql.PreparedStatement;", "\nimport java.sql.ResultSet;", "\nimport java.sql.ResultSetMetaData;", "\nimport java.sql.SQLException;", "\nimport java.sql.Statement;", "\nimport java.sql.Types;", "\nimport java.io.BufferedReader;", "\nimport java.io.File;", "\nimport java.io.FileOutputStream;", "\nimport java.io.FileReader;", "\nimport java.io.RandomAccessFile;", "\nimport java.util.ArrayList;", "\nimport java.util.List;", "\nimport net.sf.json.JSONArray;", "\nimport net.sf.json.JSONObject;", "\n\n", "public class java_sql extends JFrame{  ", "\n\n", "JTextArea jtf1,jtf2;\nJButton yellowbutton,bluebutton,redbutton,okbutton;\nprivate static String test_url=\"jdbc:jtds:sqlserver://192.168.5.14:1433;DatabaseName=EUCP5\";\nprivate static String test_user = \"admin123\";  \nprivate static String test_pwd = \"abcd_12345\"; \nprivate static Connection con = null;  \n\npublic static void main(String[] args) {  \n    // TODO Auto-generated method stub  \n    EventQueue.invokeLater(new Runnable() {  \n\n        @Override  \n        public void run() {  \n            // TODO Auto-generated method stub  \n            java_sql frame=new java_sql();\n            frame.setVisible(true);  \n\n        }  \n    });  \n}  \n\npublic java_sql(){  \n\n    this.setTitle(\"EUCP_数据库连接调试工具\");  \n    this.setSize(600,600);  \n    okbutton=new JButton(\"提交\");\n    okbutton.setVisible(true);     \n    /*按钮添加button1Handler监听*/\n    okbutton.addActionListener(new Button1Handler());  \n    //add buttons to panel  \n    buttonPanel=new JPanel();    \n    buttonPanel.add(okbutton);\n\n    this.add(buttonPanel);   \n\n}\n\nprivate class Button1Handler implements ActionListener{\n    public void actionPerformed(ActionEvent e){\n\n        try {\n            java_sql sms=new java_sql();\n            //jtf2.setText(okbutton.getActionCommand());\n            //JOptionPane.showMessageDialog(null, e.toString(), \"alter\", JOptionPane.ERROR_MESSAGE);\n            sms.send_middle(\"177612309\",\"验证码是48907\");\n\n        } catch (Exception ex) {\n\n            //JOptionPane.showMessageDialog(null, ex.toString(), \"alter\", JOptionPane.ERROR_MESSAGE);\n            }\n        }\n    }\n\nprivate JPanel buttonPanel;  \n\n\npublic static int send_middle(String url, String param) throws MalformedURLException,\n        UnsupportedEncodingException {\n    String inputLine = \"\";\n    int value = -2;\n    String con;\n    DataOutputStream out = null;\n\n\n    //InputStream in = null;\n    String strUrl=\"http://eucpwx.mb345.com:443/AppApi/User/GetUserList?\";\n    String strparam = \"UserID=SU0126&GetType=1&NowID=&GetNum=100&Other=&SearchUserName=\";\n\n    try {\n        System.out.println(\"start\");\n        inputLine = sendPost(strUrl, strparam);\n        //value = new Integer(inputLine).intValue();\n        System.out.println(inputLine);\n        String str=String.valueOf(inputLine);\n\n        //JSONObject st = JSONObject.fromObject(str);\n\n        JSONObject jsonObject = new JSONObject().fromObject(str.toString());\n        System.out.println(\"可以\");\n        Object data=jsonObject.get(\"UserID\");\n        jsonObject = new JSONObject().fromObject(data.toString());\n        data=jsonObject.get(\"data\");\n        jsonObject = new JSONObject().fromObject(data.toString());\n        data=jsonObject.get(\"value\");\n        int value_k = Integer.parseInt(data.toString());\n\n        /*\n        Statement stmt = null;  \n        String strSQL = \"\";        \n        String driverName=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n        String dbURL=\"jdbc:slserver://192.168.5.14:1433;DatabaseName=EnterpriseSMS_Play\";\n        String userName=\"admin\";\n        String userPwd=\"abcd\";\n        Class.forName(driverName);\n        Connection dbConn=DriverManager.getConnection(dbURL,userName,userPwd);  \n        String sql = \"\"; //注意java对SQL Server发送的SQL语句中表名需要用[]包围\n        System.out.println(\"SQL 开始\"); \n        for (int i = 0; i < jsonArr.size(); i++) {  \n            userid[i] = jsonArr.getJSONObject(i).getString(\"userid\");  \n            username[i] = jsonArr.getJSONObject(i).getString(\"username\");  \n            mobile[i] = jsonArr.getJSONObject(i).getString(\"mobile\");  \n            Avatar[i] = jsonArr.getJSONObject(i).getString(\"Avatar\");  \n\n            sql = \"INSERT into user_bak (userid, username, mobile, Avatar) values('\"+userid[i]+\"','\" +username[i]+\"','\"+mobile[i]+ \"','\"+Avatar[i]+\"');\";    \n            System.out.println(sql.toString()); \n            PreparedStatement statement = null; \n             statement = dbConn.prepareStatement(sql); \n             ResultSet rs = statement.executeQuery();\n             rs.close();\n             statement.close();\n             dbConn.close();\n\n            File f = new File(\"log.txt\");      \n            if (!f.exists())   \n            {       \n                f.createNewFile();      \n            }      \n            OutputStreamWriter write = new OutputStreamWriter(new FileOutputStream(f),\"utf-8\");      \n            BufferedWriter writer=new BufferedWriter(write);          \n            writer.write(content);      \n            writer.close();   \n        }*/\n\n    } catch (Exception e) {\n        //System.out.println(e.toString());\n        value = -2;\n    }\n    //System.out.println(String.format(\"返回值：%d\", value));\n    return value;\n}\n\n/**\n * 向指定 URL 发送POST方法的请求\n * \n * @param url\n *            发送请求的 URL\n * @param param\n *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。\n * @return 所代表远程资源的响应结果\n */\npublic static String sendPost(String url, String param) {\n\n    PrintWriter out = null;\n    BufferedReader in = null;\n    String result = \"\";\n\n    try {\n\n        URL realUrl = new URL(url);\n        // 打开和URL之间的连接\n        URLConnection conn = realUrl.openConnection();\n        // 设置通用的请求属性\n        conn.setRequestProperty(\"accept\", \"*/*\");\n        conn.setRequestProperty(\"connection\", \"Keep-Alive\");\n        conn.setRequestProperty(\"user-agent\",\n                \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\");\n        // 发送POST请求必须设置如下两行\n        conn.setDoOutput(true);\n        conn.setDoInput(true);\n        // 获取URLConnection对象对应的输出流\n        out = new PrintWriter(conn.getOutputStream());\n        // 发送请求参数\n        out.print(param);\n        // flush输出流的缓冲\n        out.flush();\n        // 定义BufferedReader输入流来读取URL的响应\n        in = new BufferedReader(\n                new InputStreamReader(conn.getInputStream()));\n        String line;\n        while ((line = in.readLine()) != null) {\n            //System.out.println(line);\n            //String send_line =URLEncoder.encode(line.toString(), \"utf-8\");\n            //JOptionPane.showMessageDialog(null, line.toString(), \"alter\", JOptionPane.ERROR_MESSAGE);\n            //System.out.println(line.toString());\n            result += line;\n            //System.out.println(result.toString());\n        }\n    } catch (Exception e) {\n        //System.out.println(\"发送 POST 请求出现异常！\" + e);\n        e.printStackTrace();\n    }\n    // 使用finally块来关闭输出流、输入流\n    finally {\n        try {\n            if (out != null) {\n                out.close();\n            }\n            if (in != null) {\n                in.close();\n            }\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }\n    return result;\n}\n", "\n\n", "}  ", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;109行改为&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;PROXY &amp;#61; &amp;#34;xxxx:port&amp;#34;  #这里写你的代理\n\nchrome_options &amp;#61; webdriver.ChromeOptions()\nchrome_options.add_argument(&amp;#39;--proxy-server&amp;#61;%s&amp;#39; % PROXY)\n\n\nbrowser &amp;#61; webdriver.Chrome(executable_path&amp;#61;&amp;#39;./chromedriver&amp;#39;,options&amp;#61;chrome_options)&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "if语句的形式", "Question": ["请问大佬们在这个selenium代码中如何添加代理iP（小白的我在颤抖）", ["\n", "# -*- coding:utf-8 -*-\nfrom time import sleep\nfrom selenium import webdriver\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom bs4 import BeautifulSoup\nimport pymysql\nimport lxml\n\ndef login_info():\n    #通过扫码的形式去登录淘宝账号\n    browser.find_element_by_xpath('//*[@id=\"login\"]/div[1]/i').click()\n    sleep(5)\n    #点击淘宝首页\n    taobao_index = browser.find_element_by_xpath('//*[@id=\"J_SiteNavHome\"]/div/a')\n    taobao_index.click()\n    sleep(1)\ndef search_product(value):\n    # 标签定位\n    search_input = browser.find_element_by_id('q')\n    # 标签交互\n    search_input.send_keys(value)\n    # 执行一组js程序，拉到页面底部\n    browser.execute_script('window.scrollTo(0,document.body.scrollHeight)')\n    sleep(2)\n    # 点击搜索按钮\n    btn = browser.find_element_by_css_selector('.btn-search')\n    btn.click()\ndef data(value):\n\n\n    # 执行一组js程序，拉到页面底部\n    browser.execute_script('window.scrollTo(0,document.body.scrollHeight)')\n    sleep(2)\n    global shop_name_list, shop_price_list, shop_people_list, shop_location_list,a\n    shop_name_list = []\n    shop_price_list = []\n    shop_people_list = []\n    shop_location_list = []\n    a = 0\n    b = 44\n    for i in range(1,3):\n        page = browser.page_source\n        soup = BeautifulSoup(page, 'lxml')\n        shop_data_list = soup.find('div', class_='grid g-clearfix').find_all_next('div', class_='items')\n        for shop_data in shop_data_list:\n            # 商品名称\n            shop_image_data = shop_data.find_all('div',class_='pic')\n            for shop_data_a in shop_image_data:\n                shop_data_a = shop_data_a.find_all('a',class_='pic-link J_ClickStat J_ItemPicA')\n                for shop_name in shop_data_a:\n                    shop_name = shop_name.find_all('img')[0]['alt']\n                    shop_name_list.append(shop_name)\n            # 商品价格\n            shop_price_data = shop_data.find_all('div',class_='price g_price g_price-highlight')\n            for shop_price in shop_price_data:\n                shop_price_list.append(shop_price.text.strip())\n            # 付款人数\n            shop_people_number_data = shop_data.find_all('div',class_='deal-cnt')\n            for shop_people_number in shop_people_number_data:\n                shop_people_list.append(shop_people_number.text)\n            #地址s\n            shop_location_data = shop_data.find_all('div',class_='location')\n            for shop_location in shop_location_data:\n                shop_location_list.append(shop_location.text)\n\n        shop_data = zip(shop_name_list,shop_price_list,shop_people_list,shop_location_list)\n        for data in shop_data:\n            print(data)\n            a += 1\n        b += 44\n        browser.get(f\"https://s.taobao.com/search?q={value}&s={b}\")\n        sleep(0.5)\n\n    print('已成功爬取：%s条信息'%a)\n    return shop_name_list, shop_price_list, shop_people_list, shop_location_list,a\ndef mysql():\n    # 连接数据库\n    db = pymysql.connect(\n        host='localhost',\n        user='root',\n        password='123456',\n        database='dbtest',\n        port=3306,\n        charset='utf8',\n        cursorclass=pymysql.cursors.DictCursor\n    )\n    cursor = db.cursor()\n    # 如果表存在则删除\n    cursor.execute(\"drop table if exists taobao\")\n\n    sql = \"create table taobao (shop_name char(100) not null,price char(30),people_number char(30),location char(50))\"\n    cursor.execute(sql)\n    for i in range(a):\n        li_name = shop_name_list[i]\n        li_price = shop_price_list[i]\n        li_people = shop_people_list[i]\n        li_location = shop_location_list[i]\n        sql = f\"insert into taobao(shop_name,price,people_number,location) value('{li_name}','{li_price}','{li_people}','{li_location}')\"\n        # 执行sql语句\n        cursor.execute(sql)\n        # 提交到数据库执行\n        db.commit()\n    db.close()\n\n\n\nif __name__ == '__main__':\n    value = input(\"请输入你要查询的关键词：\")\n    browser = webdriver.Chrome(executable_path='./chromedriver')\n\n    taobao_index = browser.get('https://login.taobao.com/member/login.jhtml')\n    # 窗口最大化\n    browser.maximize_window()\n    wait = WebDriverWait(browser, 10)\n    login_info()\n\n    search_product(value)\n    data(value)\n\n\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;ChatGPT :&lt;br /&gt;在C语言中&amp;#xff0c;无法直接将map写入文件&amp;#xff0c;因为map是一个动态的数据结构&amp;#xff0c;其大小在编译时无法确定。因此&amp;#xff0c;需要将map转换为一种可以写入文件的数据结构&amp;#xff0c;比如数组或者结构体。在本文中&amp;#xff0c;作者使用了一个名为ZipStruct的结构体来存储压缩文件的相关信息&amp;#xff0c;其中包括编码表&amp;#xff08;encodeMap&amp;#xff09;和所占字节数&amp;#xff08;size&amp;#xff09;。在压缩文件时&amp;#xff0c;先将编码表和字节流写入ZipStruct结构体中&amp;#xff0c;然后再将整个结构体写入文件中。在解压文件时&amp;#xff0c;先读取ZipStruct结构体&amp;#xff0c;然后根据其中的编码表将二进制编码字符串转化为原始字符&amp;#xff0c;最后将原始字符写入文件中。需要注意的是&amp;#xff0c;在写入和读取文件时&amp;#xff0c;需要使用二进制模式打开文件&amp;#xff0c;否则可能会出现数据损坏的情况。同时&amp;#xff0c;在写入和读取结构体时&amp;#xff0c;需要使用fwrite和fread函数&amp;#xff0c;而不是普通的文件写入和读取函数。&lt;/p&gt;", "Konwledge_Point": "if语句的形式", "Question": ["关于C语言写入结构体时无法写入map的问题", ["在写哈夫曼编码压缩与解压文件的问题时，Java是非常容器且没有问题的；但是在C语言里面，这个文件读写就变得很困难；当我尝试写入一个结构体时，发现没有问题，但是实际并没有将map的内容顺利写入；而且我发现不管是fread还是fwrite，都无法将无法提前确定大小的map集合写入；太痛苦了；感觉我已经在尝试学习Java序列化的解决思路了。", "\n", "代码如下：（原本以为已经写完的我，才发现只是开了个头；C语言的文件读写好折磨，太折磨了）", "文章地址：", "\n      \n        ", "\n        \n      ", "\n      ", "\n      ", "\n        ", "\n         https://blog.csdn.net/bingbingyihao/article/details/129979463\n        ", "\n      ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "# ", "include", " ", "\n", "using", " ", "namespace", " std;\n\n", "// 读取文件得到int数组转化成哈夫曼编码得到哈夫曼树，进行压缩与解压", "\n\n", "typedef", " ", "int", " elementType;\n\n", "struct", " ", "Node", "\n{\n    elementType data;\n    ", "int", " value;\n    Node* left;\n    Node* right;\n};\n\n", "struct", " ", "ZipStruct", "\n{\n    map", " encodeMap; ", "// 由哈夫曼树生成的编码表", "\n    ", "int", " size = ", "0", "; ", "// 所占字节数", "\n    ", "int", " zipSize = ", "0", "; ", "// 所占比特数（用于处理末尾数字补全）", "\n};\n\n", "struct", " ", "Zip", "\n{\n    string originFileName;\n    string destFileName; ", "// 压缩生成的文件名", "\n    elementType* buff = ", "NULL", "; ", "// 读入的文件字符数据", "\n    map", "int> twoTuple; ", "// 字符串转化为二元组形式，表示各个字符出现的频率", "\n    map", " encodeMap; ", "// 由哈夫曼树生成的编码表", "\n    string res; ", "// 生成的二进制编码字符串", "\n    ", "int", " size = ", "0", "; ", "// 所占字节数", "\n    ", "int", " zipSize = ", "0", "; ", "// 所占比特数（用于处理末尾数字补全）", "\n};\n\n", "struct", " ", "UnZip", "\n{\n    string originFileName; ", "// 要解压的文件名", "\n    string destFileName; ", "// 解压生成的文件名", "\n};\n\n", "// 将int数组转化为二元组形式，表示各个int数字出现的频率", "\n", "map", "int", "> ", "getList", "(", "int", "* text, ", "int", " length)", ";\n\n", "//自定义排序函数  ", "\n", "bool", " ", "cmp", "(", "const", " Node* node1, ", "const", " Node* node2)", ";\n\n", "// 通过二元组创建哈夫曼树", "\n", "Node* ", "createHafumanTree", "(vector", " list)", ";\n\n", "// 获取编码", "\n", "void", " ", "getCodes", "(Node* root, string path, map", "& encodeMap)", ";\n\n", "// 读取文件内容，得到int数组", "\n", "elementType* ", "readFile", "(string fileName, ", "int", "& size)", ";\n\n", "// 根据编码表将int数组转化为新的编码", "\n", "string ", "transform", "(elementType* buff, ", "int", " length, map", " encodeMap)", ";\n\n", "// 获取文件生成的二进制编码字符串", "\n", "void", " ", "generateCodes", "(Zip& zip)", ";\n\n", "//将传入的二进制字符串转换成十进制，并返回十进制数字", "\n", "int", " ", "binToTen", "(string binaryString)", ";\n\n", "// 将新编码字符串转化为int数组(转化采用末尾不够补0)，减少占用空间，并写入文件中，返回文件比特数，同时一并将编码表和字节与比特数写入", "\n", "void", " ", "zipFile", "(string res, string fileName, ", "int", "& zipSize, ZipStruct* zipStruct)", ";\n\n", "//将传入的int转换成二进制字符串", "\n", "string ", "intToBin", "(", "int", " ch)", ";\n\n", "// 根据编码表将文件还原", "\n", "void", " ", "unZipFile", "(string originFileName, string destFileName, ZipStruct* zipStruct)", ";\n\n", "int", " ", "main", "()", "\n", "{\n    Zip zip;\n    UnZip unZip;\n    ZipStruct zipStruct;\n\n    zip.originFileName = ", "\"D:/test.png\"", ";\n    zip.destFileName = ", "\"D:/test.myZip\"", ";\n    ", "generateCodes", "(zip);\n    zipStruct.encodeMap = zip.encodeMap;\n    zipStruct.size = zip.size;\n    ", "zipFile", "(zip.res, zip.destFileName, zip.zipSize, &zipStruct);\n\n    unZip.originFileName = zip.destFileName;\n    unZip.destFileName = ", "\"D:/test1.png\"", ";\n    ", "unZipFile", "(unZip.originFileName, unZip.destFileName, &zipStruct);\n\n    ", "system", "(", "\"pause\"", ");\n}\n\n", "map", "int", "> ", "getList", "(", "int", "* text, ", "int", " length)", "\n{\n    map", "int> map;\n    ", "for", " (", "int", " i = ", "0", "; i < length; i++)\n    {\n        ", "if", " (map.", "count", "((", "int", ")text[i]) == ", "1", ")\n        {\n            map[text[i]] = map[text[i]] + ", "1", ";\n        }\n        ", "else", "\n        {\n            map[text[i]] = ", "1", ";\n        }\n    }\n    ", "return", " map;\n}\n\n", "bool", " ", "cmp", "(", "const", " Node* node1, ", "const", " Node* node2)", "\n", "{\n    ", "return", " node1->value > node2->value;\n}\n\n", "Node* ", "createHafumanTree", "(vector", " list)", "\n", "{\n    ", "while", " (list.", "size", "() > ", "1", ")\n    {\n        ", "sort", "(list.", "begin", "(), list.", "end", "(), cmp);\n\n        Node* left = list.", "at", "(list.", "size", "() - ", "1", ");\n        Node* right = list.", "at", "(list.", "size", "() - ", "2", ");\n        Node* node = (Node*)", "malloc", "(", "sizeof", "(Node));\n        ", "if", " (node == ", "NULL", ")\n        {\n            cout << ", "\"内存不足\"", " << endl;\n            ", "return", " ", "NULL", ";\n        }\n        node->value = left->value + right->value;\n        node->left = left;\n        node->right = right;\n\n        list.", "pop_back", "();\n        list.", "pop_back", "();\n        list.", "push_back", "(node);\n    }\n\n    ", "return", " list.", "at", "(", "0", ");\n}\n\n", "void", " ", "getCodes", "(Node* root, string path, map", "& encodeMap)", "\n", "{\n    ", "if", " (root == ", "NULL", ")\n    {\n        ", "return", ";\n    }\n    ", "if", " (root->left == ", "NULL", " && root->right == ", "NULL", ")\n    {\n        encodeMap.", "insert", "(map", "::", "value_type", "(root->data, path));\n    }\n    ", "getCodes", "(root->left, path + ", "\"0\"", ", encodeMap);\n    ", "getCodes", "(root->right, path + ", "\"1\"", ", encodeMap);\n}\n\n", "elementType* ", "readFile", "(string fileName, ", "int", "& size)", "\n", "{\n    ", "struct", " ", "stat", " buf;\n    ", "stat", "(fileName.", "c_str", "(), &buf);\n    size = buf.st_size;\n\n    FILE* fp = ", "NULL", ";\n    ", "int", "* buff = ", "new", " ", "int", "[buf.st_size];\n\n    ", "errno_t", " err;\n    ", "if", " ((err = ", "fopen_s", "(&fp, fileName.", "c_str", "(), ", "\"rb\"", ")) != ", "0", ")\n    {\n        cout << ", "\"文件打开失败\"", " << endl;\n        ", "return", " ", "NULL", ";\n    }\n\n    ", "int", " index = ", "0", ";\n    ", "while", " (index < buf.st_size)\n    {\n        buff[index++] = ", "fgetc", "(fp);\n    }\n    ", "fclose", "(fp);\n    ", "return", " buff;\n}\n\n", "string ", "transform", "(elementType* buff, ", "int", " length, map", " encodeMap)", "\n", "{\n    string res = ", "\"\"", ";\n    ", "for", " (", "int", " i = ", "0", "; i < length; i++)\n    {\n        res += encodeMap[buff[i]];\n    }\n    ", "return", " res;\n}\n\n", "void", " ", "generateCodes", "(Zip& zip)", "\n", "{\n    zip.buff = ", "readFile", "(zip.originFileName, zip.size);\n    zip.twoTuple = ", "getList", "(zip.buff, zip.size);\n    vector", " list;\n    ", "for", " (", "auto", "& it : zip.twoTuple)\n    {\n        Node* node = (Node*)", "malloc", "(", "sizeof", "(Node));\n        ", "if", " (node == ", "NULL", ")\n        {\n            cout << ", "\"内存不足\"", " << endl;\n            ", "return", ";\n        }\n        node->data = it.first;\n        node->value = it.second;\n        node->left = ", "NULL", ";\n        node->right = ", "NULL", ";\n        list.", "push_back", "(node);\n    }\n\n    Node* root = ", "createHafumanTree", "(list);\n    ", "getCodes", "(root, ", "\"\"", ", zip.encodeMap);\n    zip.res = ", "transform", "(zip.buff, zip.size, zip.encodeMap);\n}\n\n", "int", " ", "binToTen", "(string binaryString)", "\n", "{\n    ", "int", " parseBinary = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < binaryString.", "length", "(); ++i)\n    {\n        ", "if", " (binaryString[i] == ", "'1'", ")\n        {\n            parseBinary += ", "pow", "(", "2.0", ", binaryString.", "length", "() - i - ", "1", ");\n        }\n    }\n    ", "return", " parseBinary;\n}\n\n", "void", " ", "zipFile", "(string res, string fileName, ", "int", "& zipSize, ZipStruct* zipStruct)", "\n", "{\n    zipSize = res.", "length", "();\n    zipStruct->zipSize = zipSize;\n    ", "if", " (res.", "length", "() % ", "8", " != ", "0", ")\n    {\n        ", "for", " (", "int", " i = ", "0", "; i < res.", "length", "() % ", "8", "; i++)\n        {\n            res += ", "\"0\"", ";\n        }\n    }\n\n    ", "char", "* bytes = ", "new", " ", "char", "[res.", "length", "() / ", "8", "];\n    ", "int", " index = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < res.", "length", "();)\n    {\n        string subStr = res.", "substr", "(i, ", "8", ");\n        i += ", "8", ";\n        bytes[index] = ", "binToTen", "(subStr);\n        index++;\n    }\n\n    FILE* fp = ", "NULL", ";\n    ", "errno_t", " err;\n    ", "if", " ((err = ", "fopen_s", "(&fp, fileName.", "c_str", "(), ", "\"wb\"", ")) != ", "0", ")\n    {\n        cout << ", "\"文件写入失败\"", " << endl;\n        ", "return", ";\n    }\n    ", "fwrite", "(zipStruct, ", "sizeof", "(ZipStruct), ", "1", ", fp);\n    ", "fwrite", "(bytes, ", "sizeof", "(", "unsigned", " __int8), res.", "length", "() / ", "8", ", fp);\n    ", "fclose", "(fp);\n}\n\n", "string ", "intToBin", "(", "int", " ch)", "\n", "{\n    string res = ", "\"\"", ";\n    ", "for", " (", "int", " i = ", "7", "; i >= ", "0", "; i--)\n    {\n        ", "if", " (ch & (", "128", " >> ", "7", " - i))\n        {\n            res += ", "\"1\"", ";\n        }\n        ", "else", "\n        {\n            res += ", "\"0\"", ";\n        }\n    }\n    ", "return", " res;\n}\n\n", "void", " ", "unZipFile", "(string originFileName, string destFileName, ZipStruct* zipStruct)", "\n", "{\n    FILE* fp = ", "NULL", ";\n    ", "errno_t", " err;\n    ", "if", " ((err = ", "fopen_s", "(&fp, originFileName.", "c_str", "(), ", "\"rb\"", ")) != ", "0", ")\n    {\n        cout << ", "\"文件打开失败\"", " << endl;\n        ", "return", ";\n    }\n\n    ", "fread", "(zipStruct, ", "sizeof", "(ZipStruct), ", "1", ", fp);\n    map", " decodeMap;\n    ", "for", " (", "auto", "& it : zipStruct->encodeMap)\n    {\n        decodeMap.", "insert", "(map", "char>::", "value_type", "(it.second, it.first));\n    }\n\n    ", "// 为了凑整，省的用if语句了", "\n    ", "int", " size = zipStruct->zipSize;\n    ", "int", " length = (size + ", "7", ") / ", "8", ";\n    ", "int", "* buff = ", "new", " ", "int", "[length];\n    ", "int", " index = ", "0", ";\n    ", "while", " (index < length)\n    {\n        buff[index++] = ", "fgetc", "(fp);\n    }\n    ", "fclose", "(fp);\n\n    string res = ", "\"\"", ";\n    ", "for", " (", "int", " i = ", "0", "; i < length; i++)\n    {\n        res += ", "intToBin", "(buff[i]);\n    }\n\n    string text = ", "\"\"", ";\n    ", "for", " (", "int", " i = ", "0", "; i <= size;)\n    {\n        index = ", "1", ";\n        ", "while", " (i + index <= size)\n        {\n            string temp = res.", "substr", "(i, index);\n            ", "if", " (decodeMap.", "count", "(temp) == ", "1", ")\n            {\n                text += decodeMap[temp];\n                ", "break", ";\n            }\n            index++;\n        }\n        i += index;\n    }\n\n    ", "if", " ((err = ", "fopen_s", "(&fp, destFileName.", "c_str", "(), ", "\"wb\"", ")) != ", "0", ")\n    {\n        cout << ", "\"文件写入失败\"", " << endl;\n        ", "return", ";\n    }\n    ", "fwrite", "(text.", "c_str", "(), ", "sizeof", "(", "unsigned", " __int8), text.", "length", "(), fp);\n    ", "fclose", "(fp);\n}\n", "\n", "文章可能在审核，要过一小会才能看到"]], "Tag": "程序设计"}
