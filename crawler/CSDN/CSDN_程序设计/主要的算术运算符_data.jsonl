{"Answer": "&lt;p&gt;你这个问题&amp;#xff0c;和一个面试题文章里面的一样&amp;#xff0c;后面还有一些&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;简单性和清晰性。清晰性是Java设计者的目标之一。设计者不是只想复制语言&amp;#xff0c;而是希望拥有一种清晰&amp;#xff0c;真正面向对象的语言。添加运算符重载比没有它肯定会使设计更复杂&amp;#xff0c;并且它可能导致更复杂的编译器, 或减慢 JVM&amp;#xff0c;因为它需要做额外的工作来识别运算符的实际含义&amp;#xff0c;并减少优化的机会, 以保证 Java 中运算符的行为。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;避免编程错误。Java 不允许用户定义的运算符重载&amp;#xff0c;因为如果允许程序员进行运算符重载&amp;#xff0c;将为同一运算符赋予多种含义&amp;#xff0c;这将使任何开发人员的学习曲线变得陡峭&amp;#xff0c;事情变得更加混乱。据观察&amp;#xff0c;当语言支持运算符重载时&amp;#xff0c;编程错误会增加&amp;#xff0c;从而增加了开发和交付时间。由于 Java 和 JVM 已经承担了大多数开发人员的责任&amp;#xff0c;如在通过提供垃圾收集器进行内存管理时&amp;#xff0c;因为这个功能增加污染代码的机会, 成为编程错误之源, 因此没有多大意义。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;JVM复杂性。从JVM的角度来看&amp;#xff0c;支持运算符重载使问题变得更加困难。通过更直观&amp;#xff0c;更干净的方式使用方法重载也能实现同样的事情&amp;#xff0c;因此不支持 Java 中的运算符重载是有意义的。与相对简单的 JVM 相比&amp;#xff0c;复杂的 JVM 可能导致 JVM 更慢&amp;#xff0c;并为保证在 Java 中运算符行为的确定性从而减少了优化代码的机会。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;让开发工具处理更容易。这是在 Java 中不支持运算符重载的另一个好处。省略运算符重载使语言更容易处理&amp;#xff0c;这反过来又更容易开发处理语言的工具&amp;#xff0c;例如 IDE 或重构工具。Java 中的重构工具远胜于 C&amp;#43;&amp;#43;。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;另外最近恰好看到阿里技术号的一篇文章&amp;#xff0c;里面提到了Manifold &amp;#xff0c;它可以在java中实现操作符重载&amp;#xff0c;有兴趣可以试试。&lt;br /&gt;原文链接  &lt;a href=\"https://mp.weixin.qq.com/s/pr_zylljvVaW7taeovtOxw\" id=\"textarea_1678344564490_1678344684762_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://mp.weixin.qq.com/s/pr_zylljvVaW7taeovtOxw&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主要的算术运算符", "Question": ["为什么Java不支持运算符重载？", ["为什么 C++ 支持运算符重载而 Java 不支持? 与 C++ 不同，Java 不支持运算符重载。Java 不能为程序员提供自由的标准算术运算符重载，例如+， - ，*和/等。如果你以前用过 C++，那么 Java 与 C++ 相比少了很多功能，例如 Java 不支持多重继承，Java中没有指针，Java中没有引用传递。另一个类似的问题是关于 Java 通过引用传递，这主要表现为 Java 是通过值还是引用传参"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;plus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g &amp;#43; %g &amp;#61; %g\\n&amp;#34;&lt;/span&gt;, a, b, a &amp;#43; b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;minus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g - %g &amp;#61; %g\\n&amp;#34;&lt;/span&gt;, a, b, a - b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;multiply&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g * %g &amp;#61; %g\\n&amp;#34;&lt;/span&gt;, a, b, a * b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;divide&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{        \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g / %g &amp;#61; %.2f\\n&amp;#34;&lt;/span&gt;, a, b, a / b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  ret;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; in[&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; }, x[&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;], y[&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;], op[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, b;&lt;span class=\"hljs-comment\"&gt;//参加运算的两个数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(in);&lt;span class=\"hljs-comment\"&gt;//输入算式&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(in, &lt;span class=\"hljs-string\"&gt;&amp;#34;exit&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//输入“exit”时&amp;#xff0c;退出计算器&lt;/span&gt;\n        ret &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(in, &lt;span class=\"hljs-string\"&gt;&amp;#34;%[0-9.] %[^0-9. ] %[0-9.]&amp;#34;&lt;/span&gt;, x, op, y);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ret &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(x, &lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;a);\n            &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(y, &lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;b);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(op, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;plus&lt;/span&gt;(a, b);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(op, &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;minus&lt;/span&gt;(a, b);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(op, &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;multiply&lt;/span&gt;(a, b);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(op, &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; b !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;divide&lt;/span&gt;(a, b);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!Please input again.\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!Please input again.\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主要的算术运算符", "Question": ["（简单题）程序设计基础：简易计算器的设计（急，6.5号16：00截止哦）", ["课题2.简易计算器的设计", "\n", "问题描述:能够实现两个数的算术运算功能(加、减、乘、除)", "\n", "1.基本要求", "\n", "(1)依次输入第一个操作数、运算符、第二个操作数，然后输出运算结果，例如", "\n", "输入: 13*8", "\n", "输出: 13*8=104", "\n", "(2)对错误的表达式有识别功能，例如输入: 12/0", "\n", "输出: error! Please input again.", "\n", "(3)除法运算的结果要保留小数位数2位;(4)当输入“exit”时，退出计算器;", "\n", "(5)利用函数调用的方法实现计算器的计算功", "\n", "能。", "\n", "附上整个系统数据结构的定义及系统源代码，各自定义函数的声明部分中，要求对主要变量的作用进行注释，语句部分中要求对关键语句进行注释，以方便阅读和理解程序。"]], "Tag": "程序设计"}
