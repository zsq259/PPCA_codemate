{"Answer": "```\r\n    var a='1,2,3';\r\n    var b='1,2,3';\r\n    var array1=a.split(\",\");\r\n\r\n    var array2=b.split(\",\");\r\n    for (let index = 0; index &lt; array1.length; index++) {\r\n        const arr1 = array1[index];\r\n        for (let k = 0; k &lt; array2.length; k++) {\r\n            const arr2 = array2[k];\r\n            if(arr1==arr2){\r\n                console.log(arr1,arr2)\r\n            }\r\n        }\r\n    }\r\n```", "Konwledge_Point": "for循环", "Question": ["用js，或jquery进行双层for循环", ["就是var a=\"1,2,3\";var b=\"1,2,3\";", "\nfor(){  双层for循环，怎么让其1--1，2--2，3--3对应", "\nfor(){", "\n}", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样做&amp;#xff0c;最后的T就是你需要的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;%目的是求出满足条件的x1,x2,x3\nsyms x1 x2 x3\nparr &amp;#61; 0:1:500;\nuarr &amp;#61; 0:1:5000;\nsolveArr &amp;#61; zeros(numel(parr)*numel(uarr), 3);\nct &amp;#61; 0;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;parr\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;u&lt;/span&gt;&amp;#61;uarr\n        A&amp;#61;(x2/(x2&amp;#43;1))*(3-x2/1000)*(1-x3/1000);\n        &lt;span class=\"hljs-attribute\"&gt;g&lt;/span&gt;&amp;#61;p/2&amp;#43;50*(x2/(x2&amp;#43;100));\n        D&amp;#61; p&lt;span class=\"hljs-number\"&gt;*23&lt;/span&gt;&amp;#43;40*(x2/(x2&amp;#43;2500));\n        &lt;span class=\"hljs-attribute\"&gt;eq1&lt;/span&gt;&amp;#61;A-p;\n        &lt;span class=\"hljs-attribute\"&gt;eq2&lt;/span&gt;&amp;#61;p*(u-x2)-x1*g;\n        &lt;span class=\"hljs-attribute\"&gt;eq3&lt;/span&gt;&amp;#61;x1*A-p*x3;\n        [x1s,x2s,x3s]&amp;#61;vpasolve(eq1,eq2,eq3,[x1,x2,x3],[10 50;0 1000;0 1000]);\n        ct &amp;#61; ct &amp;#43; 1;\n        solveArr(ct,:) &amp;#61; eval([x1s, x2s, x3s]);\n    end\nend\nT &amp;#61; array2table(solveArr, &lt;span class=\"hljs-string\"&gt;&amp;#39;variablenames&amp;#39;&lt;/span&gt;, {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;x1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;x2&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;x3&amp;#39;&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Matlab如何将for循环的每次循环结果保存到一个矩阵！", ["简化的程序大致如下。应用的vpasolve函数，里面p和u是内层和外层循环，但是运行后只得到最后一次的结果。每一次循环得到的满足条件的解的个数不同，可能是1个，2个 等，那么如何把循环得到的所有结果放到一个矩阵或者将循环得到的相同个数解分别放在对应矩阵里呢（例如：3个解的跟3个解放在一个矩阵）", "\n", "%目的是求出满足条件的", "x", "1", ",", "x", "2", ",", "x", "3", "\n{syms ", "x", "1", " ", "x", "2", " ", "x", "3", "\nfor p", "=", "0", ":", "1", ":", "50", ";", "\n for u", "=", "0", ":", "1", ":", "5000", ";\n", "\nA", "=", "(", "x", "2", "/(", "x", "2", "+", "1", "))*(", "3", "-", "x", "2", "/", "1000", ")*(", "1", "-", "x", "3", "/", "1000", ")", ";", "\ng", "=", "p/", "2", "+", "50", "*(", "x", "2", "/(", "x", "2", "+", "100", "))", ";", "\nD", "=", " p*", "23", "+", "40", "*(", "x", "2", "/(", "x", "2", "+", "2500", "))", ";", "\n", "eq", "1", "=", "A-p", ";", "\n", "eq", "2", "=", "p*(u-", "x", "2", ")-", "x", "1", "*g", ";", "\n", "eq", "3", "=", "x", "1", "*A-p*", "x", "3", ";", "\n[", "x", "1", ",", "x", "2", ",", "x", "3", "]", "=", "vpasolve(", "eq", "1", ",", "eq", "2", ",", "eq", "3", ",", "[", "x", "1", ",", "x", "2", ",", "x", "3", "]", ",", "[", "10", " ", "50", ";0 1000;0 1000])", "\n", "end", "\n", "end", "\n}\n\nmatlab", "2016", "a\n\n\n求大家指点\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;[];\n&lt;span class=\"hljs-attribute\"&gt;for t&lt;/span&gt;&amp;#61;1:100\n    a(t)&amp;#61;t^2;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["matlab for循环中怎么输出每一次循环的结果（求解）", ["问题遇到的现象和发生背景", "\n", "matlab for循环中怎么输出每一次循环的结果，每次输出的都是最后一次循环的结果", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "例如", "\n", "for", " ", "t", "=1:100\n    ", "a", "=t^2;\nend\n", "\n", "运行结果及报错内容", "\n", "a=10000", "\n", "我想要达到的结果", "\n", "a=[1,4,9,...,10000]"]], "Tag": "程序设计"}
{"Answer": "sheet.getLastRowNum()的值是多少？", "Konwledge_Point": "for循环", "Question": ["关于双层for循环第二个for循环不执行问题的原因", ["\n如图片  第二个for没有执行的原因是什么？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个很好做啊&lt;br /&gt;1、你把每一次的结果打印出来  结果不要用分号&lt;br /&gt;2、保存为一个txt&lt;br /&gt;3、创建一个数组矩阵保存结果&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["matlab for循环结束后只留下了最后一次的结果", ["for循环结束后只留下了最后一次的结果，但是我想要所有循环的结果，并且将结果保存到一个矩阵，应该怎么做呐"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    pass\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(i)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;把print写在for循环外面就可以啦&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请问对于一个for循环，怎样才能只输出这个循环的最后一个数值", ["请问对于一个for循环，怎样才能只输出这个循环的最后一个数值"]], "Tag": "程序设计"}
{"Answer": "大致看了下你的代码，你的代码中存在很多线程不安全的地方，比如getAdminCheckList()，以及map和arraylist，而且很可能你的性能问题是频繁大量调用数据库，所以优化的思路是考虑在数据库上跨数据库联合查询或者写存储过程。用多线程没有太大的意义。", "Konwledge_Point": "for循环", "Question": ["java 如何在for循环中增加三个线程 提高for循环速度", ["for循环要循环五千次，速度太慢。我想提高速度，想现在在for循环里面写三个线程，进行同步处理，for循环的外部定义了一个list对象，三个线程同步处理的结果都要保存到该list里面，循环结束后要对list进行处理，请问应该如何实现呢？望大神给出具体代码 谢谢！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议使用异步消息队列   既可以完成你的需求 体验感也不会差&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["php for循环请求接口超时", ["$file =input('post.avatar');", "\n\n", "if(!$file){\n\n    $this->error('请上传需要导入的表格！支持csv,xls,xlsx格式！');\n\n}\n\n$filePath = ROOT_PATH . DS . 'public' . DS . $file;\n\nif (!is_file($filePath)) {\n\n    $this->error('上传的表格不存在，请核实');\n\n}\n\n$PHPReader = new \\PHPExcel_Reader_Excel2007();\n\n    if (!$PHPReader->canRead($filePath)) {\n\n        $PHPReader = new \\PHPExcel_Reader_Excel5();\n\n    if (!$PHPReader->canRead($filePath)) {\n\n        $PHPReader = new \\PHPExcel_Reader_CSV();\n\n        $PHPReader->setInputEncoding('GBK');\n\n        if (!$PHPReader->canRead($filePath)) {\n\n            $this->error(__('Unknown data format'));\n\n        }\n\n    }\n\n}         \n\nfor($i=2;$i<=$allRow;$i++){\n\n    switch ($express_id) {\n\n        case 1:\n\n            //接口请求参数\n\n            $post_info = [\n\n\n\n            ];\n\n            //请求接口\n\n            $json = sendRequest('',$post_info,'POST');\n\n            $return = json_decode($json,1);\n\n            $code = $return['code'];\n\n            if($code==0){\n\n                $return_data = $return['data'];\n\n                $taskid = $return_data['recordId'];\n\n                //处理成功时的业务逻辑\n\n                $result = [];\n\n                $result[$i] = [\n\n\n\n                ];\n\n                //更新用户信息\n\n                $yu_money = $yu_money-$total_fee;\n\n                \\app\\common\\model\\User::score($score=0,'-'.$total_fee,$uid,'，编号'.$retu[$i]['id']);\n\n                $continue_num = $continue_num+1;\n\n            }else{\n\n                $this->error($return['msg']);\n\n            }\n\n            break;\n\n        default:\n\n            # code...\n\n            break;\n\n    }\n\n}\n\n//循环结束执行业务逻辑\n", "\n\n", "\n```用户上传表格->php后台解析表格->通过for循环在循环体内请求外部接口 表格有多少记录循环多少次->当所有for循环执行结束后 处理其他业务\n\n现在的问题就是当表格有500以上的数据时 整个for循环体执行时间太长 导致服务器超时\n\n请问这种情况该怎么解决 对方接口一次最多接收5调数据\n\n上面是我代码的示例 请问这种问题该怎么解决 如果改变请求时间用户体验不好 等待时间过长\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1. ThreadPoolExecutor中有一个BlockingQueue类型的成员变量workQueue&amp;#xff0c;当工作线程不够用时&amp;#xff0c;任务会添加到该队列中&amp;#xff0c;只有当workQueue满了之后&amp;#xff0c;添加任务的线程才会阻塞。&lt;/p&gt;\n\n&lt;p&gt;2. 看newFixedThreadPool(int nThreads)的实现&amp;#xff0c;这个workQueue使用的是new LinkedBlockingQueue() ,生成的LinkedBlockingQueue实例的容量&amp;#xff08;capacity&amp;#xff09;是很大的&amp;#xff08;21亿多&amp;#xff09;&amp;#xff0c;基本不会满。&lt;/p&gt;\n\n&lt;p&gt;3. 综合而言&amp;#xff0c;不会等待。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中使用线程池,线程池里面的线程用完了for循环会等待嘛？", ["\n\n", "就像这种"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201905/09/1557370643_321074.png)", "Konwledge_Point": "for循环", "Question": ["小白问题--在python中for循环结束位置在哪里呢？", ["不确定python中for循环每次的结束位置。和C语言不一样，python的for循环没有括号（）之类的约束，怎么看他的边界在哪里吖？是看他代码开头的空格是否与for对齐吗？", "\n\n", "size = 100\ntheta0Vals = np.linspace(-10, 10,  size)  \n# 前两个参数分别是数列的开头与结尾。第三个参数，表示数列的元素个数\ntheta1Vals = np.linspace(-1, 4, size)   \nJVals = np.zeros((size, size))\nfor i in range(size):\n    for j in range(size):\n        col = np.array([ [theta0Vals[i]], [theta1Vals[j]] ]).reshape(-1,1) \n                #不知道z的shape属性，想让z变成只有一列，行数管，\n                #通过`z.reshape(-1,1)，Numpy自动计算出有16行\n        JVals[i,j] = compute_cost(X, y, col)\n\ntheta0Vals, theta1Vals = np.meshgrid(theta0Vals,  theta1Vals)  \n# 产生一个以向量x为行，向量y为列的矩阵，\n#X、Y必定是行数、列数相等的，且X、Y的行数都等\n# 于输入参数y中元素的总个数，X、Y的列数都等于输入参数x中元素总个数；形成网格\nJVals = JVals.T\nprint (JVals.shape, JVals[0, 0], JVals[1, 1] ) # test correct\n\nfig = plt.figure()\nax = Axes3D(fig)\nax.plot_surface(theta0Vals, theta1Vals, JVals)     # 绘制一个三维曲面\nax.set_xlabel(r'$\\theta_0$')\nax.set_ylabel(r'$\\theta_1$')\nax.set_zlabel(r'$J(\\theta)$')\nplt.show()\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for一次只能写一个“循环”&amp;#xff0c;不能两个&amp;#xff08;就是&amp;amp;&amp;amp;不行&amp;#xff09;。然后分隔的应该是分号&amp;#xff0c;不是逗号&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环定义两个循环变量", ["for循环定义两个循环变量为什么会报错，是语法有问题吗，各位帮忙看看，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你用个变量记录成功输出的次数&amp;#xff0c;比如n&lt;br /&gt;if(n%4&amp;#61;&amp;#61;0)   每4次就换行&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java中for循环如何在指定输出n个结果后换行", ["例如for循环嵌套if语句，符合if则输出一个数字不符合则不输出，如何达到每成功输出4次则自动换行"]], "Tag": "程序设计"}
{"Answer": "不知道具体的for内部还需要做什么，可以用下面的方式启线程处理，如下两个线程，一个线程跑1-1000另外一个线程跑1000-2000\r\n楼主可以自己对下面的改造一下\r\n\r\n\t\tnew Thread() {   \r\n\t\t\t      public void  run() {  \r\n\t\t\t    \t for(int 1=0 ;i&lt;1000;i++){\r\n\t\t\t\t\t\t\t}\r\n\t\t\t    \t\r\n\t\t\t      }\r\n\t\t\t}.start(); \r\n\t\t\t\r\n\t\t\tnew Thread() {   \r\n\t\t\t      public void  run() {  \r\n\t\t\t    \t for(int 1=1000 ;i&lt;2000;i++){\r\n\t\t\t\t\t\t\t}\r\n\t\t\t    \t\r\n\t\t\t      }\r\n\t\t\t}.start();", "Konwledge_Point": "for循环", "Question": ["java for循环四千多次 每次循环内部还要有其他处理逻辑 导致速度很慢 如何优化", ["java for循环四千多次 每次循环内部都要有其他处理逻辑 导致速度很慢 如何优化"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;重点还是从网页上分析翻页的网址构造情况&amp;#xff0c;即baseurl及请求的url要写准确,另外可能需要补充一些请求参数。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python爬虫如何用for循环翻页", ["askURL", "(", "\"https://www.ximalaya.com/xiangsheng/xiangsheng/\"", ")", "\n", "\n", " #1.爬取网页", "def getData(baseurl):", "    datalist = []", "    for i in range(0,10):", "        url = baseurl + str(i*25)", "        html = askURL(url)", "想要爬取该网址10页的播放量，但是这个遍历最后只能出现一页数据"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nfavorite_languages&amp;#61;{\n&lt;span class=\"hljs-string\"&gt;&amp;#39;Mike&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;Java&amp;#39;&lt;/span&gt;,20],\n&lt;span class=\"hljs-string\"&gt;&amp;#39;Tracy&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#43;&amp;#43;&amp;#39;&lt;/span&gt;,21],\n&lt;span class=\"hljs-string\"&gt;&amp;#39;Jack&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;,19],\n}\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; name,languages &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sorted (favorite_languages.items()):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(name, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; language &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; languages:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(language,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;加end&amp;#61;‘ ’可以取消换行&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/214201159846169.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/127990159846118.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Python 中for循环如何不换行", ["我的代码：", "favorite_languages={", "    'Mike':['Java',20],", "    'Tracy':['C++',21],", "    'Jack':['Python',19],", "    }", "\n", "for name,languages in sorted (favorite_languages.items()):", "    print(name)", "    for language in languages:", "        print(language)", "\n", "运行结果：", "Jack", "Python", "19", "Mike", "Java", "20", "Tracy", "C++", "21", "\n", "需要得到的结果：", "Jack Python 19", "\n", "Mike Java 20", "\n", "Tracy C++ 21", "\n", "求各位帮忙！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Test&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Scanner&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(System.in);\n        &lt;span class=\"hljs-comment\"&gt;//in只是一个Scanner对象&amp;#xff0c;需要调用Scanner的方法去读取你的输入&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; in.nextInt();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n            \n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["java利用for循环求偶数", ["题目：在Java中 用for循环求偶数", "\n", "\n", "报错", "\n", "问题：", "因为scanner虽然有获取输入的内容 但我好像还没定义类型，然后我尝试定义scanner为int的时候都会建议我改为scanner是为什么啊", "\n", "请问怎么样可以解决掉for循环条件中的报错"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果要写入原文件&amp;#xff0c; 那要先记录对应的单元格位置到一个列表中&amp;#xff0c; 进行分析后再用openpyxl 或者xlwt 库写入excel &amp;#xff0c; 如果是不用写入原文件&amp;#xff0c;&lt;br /&gt;那把过程数据添加到一个df 中&amp;#xff0c; 最后用to_excel 就可以搞掂。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python如何将for循环结果里的dataframe提取出来放进一个excel中", ["这是for循环里其中一个dataframe，如果将所有daframe提取出来放进excel中"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;j&amp;lt;&amp;#61;n-j?&lt;br /&gt;应该是j&amp;lt;&amp;#61;n-i吧&lt;br /&gt;另&amp;#xff0c;为啥不用i&amp;#43;&amp;#43;&amp;#xff0c;而要写i--&amp;#xff0c;你这整个逻辑都是个反的&amp;#xff0c;负负得正了属于&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用双重for循环打印星号三角形，行数由键盘输入的整数决定", ["用双重for循环打印星号三角形，行数由键盘输入的整数决定", "请问我的代码哪里错了？", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " n,i,j;\n    ", "printf", "(", "\"输入行数：\"", ");\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "for", "(i=n;i>", "0", ";i--){\n    ", "for", "(j=", "0", ";j<=n-j;j++)", "printf", "(", "\"* \"", ");\n    ", "printf", "(", "\"\\n\"", ");\n    }\n} \n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入第一个字符后按下回车&lt;br /&gt;接下来scanf(&amp;#34;%c&amp;#34;,&amp;amp;n)会读取回车符&amp;#xff0c;在后面加一句getchar()就行了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;5\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["c语言 for循环中嵌套switch语句循环次数问题", ["问题", "\n", " switch（n）中的n在n为int型和char型，在for循环中循环次数不同", "\n", "代码及结果", "\n", "（1）n为字符型：", "\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " n;\n    ", "int", " i;\n    ", "for", "(i=", "0", ";i<", "2", ";i++){\n        ", "scanf", "(", "\"%c\"", ",&n);\n        ", "switch", "(n){\n            ", "case", " ", "'0'", ": ", "printf", "(", "\"1\\n\"", ");", "break", ";\n            ", "case", " ", "'1'", ": ", "printf", "(", "\"2\\n\"", ");", "break", ";\n            ", "case", " ", "'2'", ": ", "printf", "(", "\"3\\n\"", ");", "break", ";\n            ", "case", " ", "'3'", ": ", "printf", "(", "\"4\\n\"", ");", "break", ";\n            ", "case", " ", "'4'", ": ", "printf", "(", "\"5\\n\"", ");", "break", ";\n        }\n    }\n}\n\n", "\n", "运行结果：输入一个数字，程序执行一次循环就会结束；", "（2）n为int型：", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n;\n    ", "int", " i;\n    ", "for", "(i=", "0", ";i<", "2", ";i++){\n        ", "scanf", "(", "\"%d\"", ",&n);\n        ", "switch", "(n){\n            ", "case", " ", "0", ": ", "printf", "(", "\"1\\n\"", ");", "break", ";\n            ", "case", " ", "1", ": ", "printf", "(", "\"2\\n\"", ");", "break", ";\n            ", "case", " ", "2", ": ", "printf", "(", "\"3\\n\"", ");", "break", ";\n            ", "case", " ", "3", ": ", "printf", "(", "\"4\\n\"", ");", "break", ";\n            ", "case", " ", "4", ": ", "printf", "(", "\"5\\n\"", ");", "break", ";\n        }\n    }\n}\n\n", "\n", "运行结果：可以按照for循环输入两个数字后程序结束", "\n", "\n", "想问下这是什么原因导致循环次数不一样", "\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改后的程序&amp;#xff0c;计算10万个数据仅用时1s&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/853644939946164.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;下面是详细代码&amp;#xff0c;带注释&amp;#xff01;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clear all\nclc\n&lt;span class=\"hljs-comment\"&gt;%先用一个数组存放besseli(n,0.5)&amp;#xff0c;n的范围为1-100&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%&amp;#xff08;1&amp;#xff09;为什么n只取到100&amp;#xff1f;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%因为n越大besseli(n,0.5)越小&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%当n取100时besseli(100,0.5)&amp;#61;6.6722e-219&amp;#xff0c;再往后面计算没有意义&amp;#xff0c;无限趋近于0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%也就是说n越大&amp;#xff0c;求和那部分无限接近于0&amp;#xff0c;所以只取到100即可&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%&amp;#xff08;2&amp;#xff09;为什么要用数组存放&amp;#xff1f;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%因为每次计算都要算一遍besseli(i,0.5)&amp;#xff0c;比较浪费时间&amp;#xff0c;尤其是x很多的时候&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%存放到数组中每次索引速度是很快的&lt;/span&gt;\n\ntic\ntempnums&amp;#61;&lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n    tempnums(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-built_in\"&gt;besseli&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%这里以10万个数据为例&lt;/span&gt;\nx&amp;#61;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;);\nlen &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x);\nf&amp;#61;&lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,len);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:len\n    &lt;span class=\"hljs-comment\"&gt;%tempvalue用来计算求和部分的值&lt;/span&gt;\n    tempvalue&amp;#61;&lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;%求和部分计算&lt;/span&gt;\n        tempvalue&amp;#61;tempvalue&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(tempnums(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;sind&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;*(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-260&lt;/span&gt;))/&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;%把求和部分放回原始式子计算&lt;/span&gt;\n    f(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)&amp;#61;(tempvalue&amp;#43;x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;besseli&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;))/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;besseli&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;));\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\ntoc\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["matlab中如果方程有累加要如何利用for循环写", ["\n", "就是有一组数x，用for循环写出如图的这种式子，带入进去", "其中I0(0.5)和In(0.5)是第一类修正贝塞尔函数，可以直接用matlab命令写，分别为besseli(0,0.5)，besseli(n,0.5)", "我先用syms命令写了个出来，但是计算的特别慢，就想着直接用for循环写", "这是syms的程序，如果只带几个数进去能算出来，但是x的数量一多就卡主", "\n", "X", " = xlsread('fengxiang.xlsx'); %X是一组", "0", "-", "360", "度的列向量，有", "2", "万个数左右\n", "n", "=", "1", ":", "1000", " %累加到", "1000", "就差不多够了\n", "syms", " x\n", "F", "(x)=(x*besseli(", "0", ",", "0", ".", "5", ")+", "2", "*sum(besseli(n',", "0", ".", "5", ").*sind(n'.*(x-", "260", "))./n'))./(", "2", "*pi*besseli(", "0", ",", "0", ".", "5", "))\n", "double", "(F(X))\n", "\n", "所以思考直接用for循环写,这里就不知道哪里出问题了，for循环计算的挺快的，但是算出来把F(x)直接求和了，前面全是0，最后一个是很大的数字", "\n", "X", " = xlsread('fengxiang.xlsx'); %X是一组", "0", "-", "360", "度的列向量\n", "n0", "=length(X)\n", "n", "=", "1", ":", "1000", "\n", "for", " i=n0\n", "F", "(i)=(X(i)*besseli(", "0", ",", "0", ".", "5", ")+", "2", "*sum(besseli(n',", "0", ".", "5", ").*sind(n'.*(X(i)-", "260", "))./n'))./(", "2", "*pi*besseli(", "0", ",", "0", ".", "5", "))\n", "end", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该可以&amp;#xff0c;只要s清0即可&lt;br /&gt;你颠倒的代码是什么样的&amp;#xff1f;&lt;br /&gt;你发一下完整代码看看。&lt;br /&gt;把你的代码用代码段&amp;lt;/&amp;gt;的文本形式发一下&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/399680803736163.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环输入输出一个数组", ["学长，假设我定义了某个数组 int a[11] = {0}；", "然后用for循环输入了全部十一个值，", "经过颠倒", "后，我准备再次用for循环将颠倒后的数组输出，但是我发现假如输入输出时for循环里的变量为同一个，那么输出后的数组是不颠倒的，如果for循环输入时用了s变量，输出时用了i变量，输出后的数组就成功了，这是为啥呀，我不李姐", "输入：", "    for (s=0; s<11; ++s)", "    {", "        scanf(\"%d\",&a[s]);", "\n", "    ", "while", " ((ch=getchar()) != ", "'\\n'", ")\n    ", "continue", ";", "//", "假如输入时", "for", "里的变量为i，那么输出后的数组就不是颠倒后的，而是把输入时的数组按顺序输出了一遍\n}\n", "\n", "输出：", "for (i=0; i<11; ++i)", "    {", "        printf(\"%d \",a[i]);", "    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先把for循环分四部分来看。for后面的括号里必须有两个分号&amp;#xff0c;第一个分号前的为第一部分A&amp;#xff0c;第一个分号后&amp;#xff0c;第二个分号前&amp;#xff0c;是第二部分B&amp;#xff0c;第二个分号后是第三部分C&amp;#xff0c;括号后是循环主体部分D。执行顺序是&amp;#xff1a;第一次进入循环时执行A代码&amp;#xff0c;后续循环不再执行。然后是先判断B代码的结果&amp;#xff0c;结果为真则继续循环执行&amp;#xff0c;为假则退出循环。然后是执行循环主体D&amp;#xff0c;执行完后转执行代码段C&amp;#xff0c;然后就继续判断B&amp;#xff0c;以此循环。&lt;br /&gt;按这个题来看&amp;#xff0c;第一次先执行A&amp;#xff0c;也就是i赋值为2&amp;#xff0c;然后判断B&amp;#xff0c;2&amp;#61;&amp;#61;0为假&amp;#xff0c;退出循环&amp;#xff0c;所以循环执行次数为0。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环判断,判断循环的次数", ["程序段for (i=2;i==0;) printf (\"%d\"，i--);", "他的循环次数为什么是0次"]], "Tag": "程序设计"}
{"Answer": "FOR循环不支持修改步长\r\nFOR counter IN [REVERSE] start_range....end_range LOOP statements;\r\nEND LOOP;\r\nFOR循环的循环次数是固定的，counter是一个隐式声明的变量，他的初始值是start_range,第二个值是start_range+1,直到end_range,如果start_range等于end _range,那么循环将执行一次\r\n\r\n可以用while来做\r\nbegin\r\ni:=1;\r\nwhile i&lt;=10 loop\r\n  i:=i+2;\r\n  dbms_output.put_line(i);\r\nend loop;", "Konwledge_Point": "for循环", "Question": ["oracle的pl/sql的for循环可否修改默认步长", ["例如", "\n从1循环到10，但是步长向设置为2，应该如何写该for循环呢，还是for循环不支持修改步长"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;void类型的函数没有返回值&lt;/p&gt;\n\n&lt;p&gt;在for循环中&amp;#xff0c;判断str[]中的字符是否包含ch&amp;#xff0c;如果str[i] !&amp;#61; ch&amp;#xff0c;就把str[i]放在str[j]中&amp;#xff0c;如果等于的话&amp;#xff0c;就不往str中放了&amp;#xff08;也就是从原来的str中删除掉了&amp;#xff09;。&lt;/p&gt;\n\n&lt;p&gt;假设str&amp;#61;&amp;#34;abcdefg&amp;#34;&amp;#xff0c;需要删除的字符是&amp;#39;c&amp;#39;&amp;#xff0c;刚开始i&amp;#61;0,j&amp;#61;0&amp;#xff0c;执行过程如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;首次循环&amp;#xff1a;str[0] &amp;#61; ‘a&amp;#39;   str[0]!&amp;#61; &amp;#39;c&amp;#39;为true  :str[0] &amp;#61; str[0]; i&amp;#43;&amp;#43;,j&amp;#43;&amp;#43;(此时&amp;#xff0c;i&amp;#61;1,j&amp;#61;1,str &amp;#61; &amp;#34;abcdefg&amp;#34;) &lt;/p&gt;\n\n&lt;p&gt;第二次循环&amp;#xff1a;str[1]&amp;#61;’b&amp;#39;   str[1]  !&amp;#61; &amp;#39;c&amp;#39; 为true&amp;#xff1a;str[1] &amp;#61; str[1]; i&amp;#43;&amp;#43;,j&amp;#43;&amp;#43;(此时&amp;#xff0c;i&amp;#61;2,j&amp;#61;2,str &amp;#61; &amp;#34;abcdefg&amp;#34;)&lt;/p&gt;\n\n&lt;p&gt;第三次循环&amp;#xff1a;str[2]&amp;#61;’c&amp;#39;   str[2]  !&amp;#61; &amp;#39;c&amp;#39; 为false: str[j&amp;#43;&amp;#43;] &amp;#61; str[i]这句话不执行&amp;#xff0c;for循环i&amp;#43;&amp;#43;执行&amp;#xff08;此时i &amp;#61; 3,j&amp;#61;2,str &amp;#61; &amp;#34;abcdefg&amp;#34;)&lt;/p&gt;\n\n&lt;p&gt;第四次循环&amp;#xff1a;str[3]&amp;#61;’c&amp;#39;   str[3]  !&amp;#61; &amp;#39;c&amp;#39; 为true:str[2] &amp;#61; str[3];i&amp;#43;&amp;#43;,j&amp;#43;&amp;#43;(此时&amp;#xff0c;i&amp;#61; 4,j&amp;#61;3,str &amp;#61; &amp;#34;ab&lt;strong&gt;d&lt;/strong&gt;defg&amp;#34;)&lt;/p&gt;\n\n&lt;p&gt;此时&amp;#xff0c;str数组的内容已经发生变化&amp;#xff0c;也就是把’c‘用’d‘替换了&amp;#xff08;相当于删除了&amp;#xff09;。后面的继续执行&amp;#xff0c;&lt;/p&gt;\n\n&lt;p&gt;到最后&amp;#xff0c;i &amp;#61; 7,j &amp;#61; 6,str &amp;#61; abdefgg。&lt;/p&gt;\n\n&lt;p&gt;for循环结束后&amp;#xff0c;str[6] &amp;#61; &amp;#39;\\0&amp;#39;&amp;#xff0c;就死把最后一个g替换成&amp;#39;\\0&amp;#39;&amp;#xff0c;表示字符串结束&amp;#xff0c;str最后的值就是“abdefg&amp;#34;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言中void头文件for循环的问题", ["\n\n", "像图中的例子for循环中是返回str[ i ]还是返回str[ j ] ", "\n\n", "希望能详细的说一下for循环的一些细节"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主&amp;#xff0c;你的意思是希望找到第s列&amp;#xff0c;以第i行为结尾&amp;#xff0c;满足第j行开始&amp;#xff0c;和大于n的那一个j吗&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt;如果是这样的话&amp;#xff0c;算法运行效率比较慢的原因是&amp;#xff0c;在if df4.sum() &amp;gt;&amp;#61; n的时候&amp;#xff0c;每次计算完sum(0:i&amp;#43;1)之后&amp;#xff0c;又重新计算一次sum(1:i&amp;#43;1)&amp;#xff0c;再计算sum(2:i&amp;#43;1)&amp;#xff0c;再计算sum(3:i&amp;#43;1)&amp;#xff0c;没有充分利用上一次得到的计算结果。这样的运算之后需要计算1&amp;#43;2&amp;#43;3&amp;#43;...&amp;#43;i&amp;#43;1,是O(n方)级别的。在加上外层的循环&amp;#xff0c;总的时间复杂度是O(n^3).&lt;/p&gt;\n\n&lt;p&gt;你可以计算第一次sum(0:i&amp;#43;1)之后&amp;#xff0c;每次减去a[0],a[1],a[2]。。。这样总的时间复杂度就降低为O(n^2)级别的了。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;def sumbars(df,s,n):\n    #s表示列名 \n    start &amp;#61; time()\n    sdata &amp;#61; np.array(df[s])\n    sdata &amp;#61; np.flipud(sdata)\n    l &amp;#61; len(sdata)\n    sumbars &amp;#61; np.zeros(l)\n    for i in range(l):\n        cumsum &amp;#61; np.cumsum(sdata[i:])\n        k &amp;#61; np.argmax(cumsum&amp;gt;&amp;#61;n)\n        if k !&amp;#61; 0:\n            sumbars[l-i-1] &amp;#61; k&amp;#43;1\n    stop &amp;#61; time()\n    print(stop-start)\n    global sumbarstime\n    sumbarstime &amp;#61; sumbarstime &amp;#43; stop - start\n    sumbars.astype(int)\n    df[&amp;#39;sumbars&amp;#39;] &amp;#61; sumbars\n    # df.to_csv(&amp;#34;my.csv&amp;#34;)\n    # print(df[&amp;#39;sumbars&amp;#39;])\n    return df[&amp;#39;sumbars&amp;#39;]&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;更进一步&amp;#xff0c;这个allSum也可以不用每个i都计算一次。只需要每次增加就行。 &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;def sumbars(df, s, n):\n    #s表示列名\n    start &amp;#61; time()\n    df[&amp;#39;sumbars&amp;#39;] &amp;#61; 0\n    allSum &amp;#61; 0\n    for i in range(len(df)):\n        allSum &amp;#43;&amp;#61; df[s].iloc[i]\n        eachSum &amp;#61; allSum\n        for j in range(i&amp;#43;1):\n            if eachSum &amp;gt;&amp;#61; n:\n                df.loc[i, &amp;#39;sumbars&amp;#39;] &amp;#61; j &amp;#43; 1\n                break\n            eachSum -&amp;#61; df[s].iloc[j]\n    stop &amp;#61; time()\n    global sumbarstime\n    sumbarstime &amp;#61; sumbarstime &amp;#43; stop - start\n    return df[&amp;#39;sumbars&amp;#39;]&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;另外&amp;#xff0c;导致题主之前代码运行比较慢的原因&amp;#xff0c;也可能是多次对df进行拷贝导致的。当DataFrame较大的时候&amp;#xff0c;拷贝也会占用一定时间。&lt;/p&gt;\n\n&lt;p&gt;如果我对题主代码的意思理解有偏差&amp;#xff0c;也请评论或私信告诉我。&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;/p&gt;\n\n&lt;p&gt;和题主沟通后&amp;#xff0c;题主的意思是找到最后一个符合大于等于n的行下标&amp;#xff0c;同时使用numpy进行优化。优化后的代码如下。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;def sumbars(df, s, n):\n    start &amp;#61; time()\n    sdata &amp;#61; np.array(df[s])\n    sdata &amp;#61; np.flipud(sdata)\n    l &amp;#61; len(sdata)\n    sumbars &amp;#61; np.zeros(l)\n    for i in range(l):\n        cumsum &amp;#61; np.cumsum(sdata[i:])\n        k &amp;#61; np.argmax(cumsum&amp;gt;&amp;#61;n)\n        if k !&amp;#61; 0:\n            sumbars[l-i-1] &amp;#61; k&amp;#43;1\n    stop &amp;#61; time()\n    print(stop-start)\n    global sumbarstime\n    sumbarstime &amp;#61; sumbarstime &amp;#43; stop - start\n    sumbars.astype(int)\n    df[&amp;#39;sumbars&amp;#39;] &amp;#61; sumbars\n    # df.to_csv(&amp;#34;my.csv&amp;#34;)\n    # print(df[&amp;#39;sumbars&amp;#39;])\n    return df[&amp;#39;sumbars&amp;#39;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["pandas 向量化优化双重for循环", ["我用pandas 写了个sumbars，二次for循环，感觉效率很慢，需要用向量化优化一下，麻烦各位看看", "\n\n", " ", "\n\n", "\n", "\ndef sumbars(df, s, n):\n#s表示列名\n    start = time()\n    df2 = df[s].copy()\n    # df2.loc[0]=1000\n    df['sumbars'] = 0\n    for i in range(len(df)):\n        df3 = df2[:i + 1]\n        l = len(df3)\n        for j in range(l):\n            # if i>=8:\n            #     print()\n            df4 = df3[l - j - 1:]\n            if df4.sum() >= n:\n                df.loc[i, 'sumbars'] = j + 1\n                # df5=df[['trade_date',s,'sumbars']]\n                break\n\n    stop = time()\n    global sumbarstime\n    sumbarstime = sumbarstime + stop - start\n    return df['sumbars']"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提示数组越界了&lt;br /&gt;你用个printf语句输出一下a的值看看&lt;br /&gt;你这s1和s2是一样长的&amp;#xff0c;a &amp;#61; s2.size() - n -1&amp;#xff0c;这里n&amp;#61;s1.size()&amp;#xff0c;那么a的值就是-1了啊&amp;#xff0c;自然进不了循环&lt;br /&gt;你的问题和错误的原因是&amp;#xff1a;&lt;br /&gt;vector的size函数的返回值是无符号型&amp;#xff0c;也就是说不会是负数。&lt;br /&gt;int a &amp;#61; s2.size()-n-1时&amp;#xff0c;由于a定义成int是有符号的&amp;#xff0c;所以在for循环中i&amp;lt;&amp;#61;a是不会成立的&amp;#xff0c;所以不进循环&lt;br /&gt;但如果写成&lt;br /&gt;for(int i&amp;#61;1;i&amp;lt;&amp;#61;s2.size()-n-1时&amp;#xff0c;s2.size()-n-1的结果会存储到一个隐式变量中&amp;#xff0c;这个变量默认会是s2.size()函数的返回值类型&amp;#xff0c;即无符号整型&amp;#xff0c;导致这个结果不是-1&amp;#xff0c;而是整型的0xFFFFFFFF&amp;#xff0c;一个很大的值&amp;#xff0c;所以能进循环&amp;#xff0c;且由于值超过1&amp;#xff0c;导致循环中访问s2数组时&amp;#xff0c;下标越界而崩溃了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环条件判断异常", ["\n", "第二个for循环那里，如果条件为i<=s2.size()-n-1，会进去循环，即使s2.size()-n-1加了括号也是这样，但如果是int(s2.size()-n-1)，那就不会进去循环，同样如果条件为i<=a，就不会进去循环，这到底是怎么回事啊"]], "Tag": "程序设计"}
{"Answer": "```\r\nfor(k=2;k&lt;i-1;k++)\r\n这是尝试用2~k-1每个数字被i除，因为素数的定义是只能被1和自己整除的数（2除外），所以用2~自己-1都试下，如果能除就不是。应该写k&lt;=i-1，而不是&lt;。\r\n当然，一个数肯定不可能被自身的1/2以上的数整除（比如12肯定不可能被6以上的数字整除），所以写&lt;或者&lt;=都能出正确结果\r\n\r\n关于for循环里的条件要怎么去判断它到底是小于还是小于等于之类的\r\n这个边界条件要具体分析\r\n\r\n比如说数组下表是0-N-1，那么 for(i = 0; i &lt; N; i++) 就不包括N\r\n比如说计算1+2+...+100，那么for(i = 1; i &lt;= 100; i++) sum = sum + i; 就包括100\r\n\r\n```\r\n# 问题解决的话，请点采纳", "Konwledge_Point": "for循环", "Question": ["关于for循环的条件——C语言求素数？？", ["小白刚学，不是很明白for循环的条件。", "\n譬如求素数这题，代码如下：", "\n#include", "\nint main(){", "\n    int i,m,n;", "\n    int sum=0;", "\n    int cnt=0;", "\n\n", "scanf(\"%d %d\",&m,&n);\nif(m==1){\n    m=2;\n}\nfor(i=m;i<=n;i++){\n    int isPrime=1;\n    int k=1;\n    for(k=2;k<i-1;k++){\n        if(i%k==0){\n            isPrime=0;\n            break;\n        }\n    }\n    if(isPrime==1){\n        cnt++;\n        sum+=i;\n    }\n}\nprintf(\"%d %d\",cnt,sum);\nreturn 0;\n", "\n\n", "} ", "\n\n", "代码的基本意思我本来是理得清的，但是越想越乱，不是很明白    for(k=2;k<i-1;k++)，这段什么意思，为什么要让k<i-1，试着debug调试了还是看不明白，烦请各位解答！另：关于for循环里的条件要怎么去判断它到底是小于还是小于等于之类的？有没有什么简单的例子呢？谢谢各位！"]], "Tag": "程序设计"}
{"Answer": "自己先定义图标数据，再在template里面遍历它\r\njavascript\r\n```\r\ndata(){\r\n\treturn {\r\n\t\ticons:[\"icon-user\",\"icon-iphone\",\"其他图标样式\"]\r\n\t}\r\n}\r\n```\r\ntemplate\r\n```\r\n&lt;el-row&gt;\r\n    &lt;el-col :span=\"3\" v-for=\"(index,item) in icons\" style=\"text-align:center\"&gt;\r\n        &lt;svg-icon :icon-class=\"item\" &gt;&lt;/svg-icon&gt;\r\n    &lt;/el-col&gt;\r\n&lt;/el-row&gt;\r\n```", "Konwledge_Point": "for循环", "Question": ["vue 使用v-for循环输出图标", ["使用v-for循环出一排七个不同的图标", "\n\n", "<el-row>\n    <el-col :span=\"3\" v-for=\"(index,item) in 7\" style=\"text-align:center\">\n        <svg-icon icon-class=\"user\" ></svg-icon>\n    </el-col>\n</el-row>\n", "\n\n", "####大致代码这个样子的，但是不太懂数据绑定啥的，求大神指点一下萌新"]], "Tag": "程序设计"}
{"Answer": "#include\"stdio.h\"\r\nint main()\r\n{\r\n    int a=0,b=0,d=0;\r\n    char c;\r\n    for (; (c=getchar())!= '\\n';)\r\n    {\r\n    if (c &gt;= 65 &amp;&amp; c &lt;= 90)\r\n    {\r\n    a++;\r\n    }\r\n    else if (c &gt;= 97 &amp;&amp; c &lt;= 122)\r\n    {\r\n    b++;\r\n    }\r\n    else\r\n    d++;\r\n    }\r\n    printf(\"大写字母有%d个\\n\", a);\r\n    printf(\"小写字母有%d个\\n\", b);\r\n    printf(\"其他字符有%d个\\n\", d);\r\n    return 0;\r\n}\r\n#getchar()是每次获得一个字符，所以不能整体赋给c，要循环输入才不会错", "Konwledge_Point": "for循环", "Question": ["用getchar（）和for循环求出输入一串字符大写字母，小写字母，和其他字符的个数。", ["我是一个大一新生，学C语言不久，求大佬指教。问题还比较多。。。", "\n                我的程序是这样的", "\n\n", "#include  ", "\nint main()", "\n{", "\n    int a=0,b=0,d=0;", "\n    char c=getchar();", "\n    for (; getchar() != '\\n';)", "\n    {", "\n        if (c >= 65 && c <= 90)", "\n        {", "\n            a++;", "\n        }", "\n      else if (c >= 97 && c <= 122)", "\n        {", "\n            b++;", "\n        }", "\n        else", "\n            d++;", "\n    }", "\n    printf(\"大写字母有%d个\\n\", a);", "\n    printf(\"小写字母有%d个\\n\", b);", "\n    printf(\"其他字符有%d个\\n\", d); ", "\n    return 0;", "\n}", "\n但是输出结果都在大写字母上了。", "\n\n", "结果是", "\n\n", "求解释，求正确的代码。。。"]], "Tag": "程序设计"}
{"Answer": "如：\r\nres=[]\r\nfor i in ...  #循环处理文档的每一行\r\n\t\t\t\t.........\r\n\t\t\t\tline=.....  #line为每一行的处理结果\r\n\t\t\t\tres.append(line)  #将每行的处理天剑到最总的列表中\r\nprint(res)   #res就是所需要的结果", "Konwledge_Point": "for循环", "Question": ["请问python如何抓取for循环的所有结果？", ["我抓取了一个txt文档，处理完一行得到一个名为line的数组。想知道如何抓取全部的数组放进一个list的集合内。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i就是个循环变量&lt;br /&gt;for循环里面3个表达式&lt;br /&gt;for(a;b;c)&lt;br /&gt;a初始化时执行一次&amp;#xff0c;b在每次循环之前作为是否继续循环的依据&amp;#xff0c;c每次循环之后执行&lt;br /&gt;而i就是用来控制循环的变量&lt;br /&gt;将i初始化为0&amp;#xff0c;每次循环之前判断它是否超出数组长度&amp;#xff0c;每次循环结束自加1&lt;br /&gt;它本身没有意义&amp;#xff0c;意义是你赋予的&lt;br /&gt;你想用它来干什么&amp;#xff0c;决定了表达式要如何写&amp;#xff0c;是自加1还是自乘以2&amp;#xff0c;这些都不是固定的&lt;br /&gt;比如在这个题目中&amp;#xff0c;你想遍历数组&amp;#xff0c;那么就需要自动生成从0到length-1的下标&amp;#xff0c;此时i就是数组下标&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["下面代码中i是什么意思，a[i]又是什么意思？一直弄不清楚for循环的i是什么意思？请详细解答一下for循环i的意思！(语言-java)", ["下面代码中i是什么意思，啊a[i]又是什么意思？一直弄不清楚for循环的i是什么意思？请详细解答一下for循环i的意思！"]], "Tag": "程序设计"}
{"Answer": "JAVA增强for循环，只能对已初始化的tempArr数组进行操作，比如遍历", "Konwledge_Point": "for循环", "Question": ["JAVA增强for循环 循环对象数组 的疑问", ["          Circlelist[] tempArr = new Circlelist[radix];\n//        for (Circlelist tempList : tempArr) {\n//            tempList = new Circlelist();\n//        }\n          for (int l = 0; l < tempArr.length; l++) {\n              tempArr[l] = new Circlelist();\n        }\n", "\n\n", "为什么第一个增强for循环不能对tempArr数组的每个成员进行初始化，而第二个普通的for循环却可以"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;含有i--的话&amp;#xff0c;一般索引不会从0开始的&amp;#xff0c;毕竟是递减&amp;#xff0c;到0的时候结束循环&amp;#xff0c;for里面不是有判断吗&amp;#xff0c;比如&lt;br /&gt;for(int i&amp;#61;10,i&amp;gt;&amp;#61;0;i--)&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java的for循环内容关于递增递减的问题", ["Java中for循环执行时，循环体中含有i--，那么从0索引位置开始执行时，遇到i--，要怎么退回上个索引呢，还是说还是处在0索引位置不改变，感谢铁子们"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;想重置用while&amp;#xff0c;for不行&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如何把我的for循环进行重置呢", ["python for循环重置问题。如下代码，我想让在i > 4时 把i进行重置，然后重新进行for 循环。但是实际上内部的i是没有进行变化的。", "\n", "for", " i in range(", "10", "):\n    ", "if", " i > ", "4", ":\n        ", "print", "(i)\n        ", "i", " = ", "0", "\n\n\n", "\n", "输出为：", "5", "6", "7", "8", "9", "我想问一下如何把我的for循环进行重置呢"]], "Tag": "程序设计"}
{"Answer": "把\\n去掉就可以了\r\n```\r\nscanf_s(\"%d\", &amp;N);\r\nscanf_s(\"%d\", &amp;a);\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环输入次数比循环次数多一", ["求N个数的平均数，for循环循环次数为N次，先给N赋值，但是要输入N+1个数才能结束循环，输出正确结果", "\n代码：", "\n#include", "\nusing namespace std;", "\nint main()", "\n{int N,i,sum=0,a;", "\nscanf(\"%d\\n\",&N);", "\nfor(i=1;i<=N;i=i+1)", "\n{scanf(\"%d\\n\",&a);", "\nsum=sum+a;}", "\nint b=sum/N;", "\nprintf(\"%d\\n\",b);", "\nreturn 0;   }"]], "Tag": "程序设计"}
{"Answer": "#include \"stdafx.h\"\r\n#include \"windows.h\"\r\nint main()\r\n{\r\nint c= 0;\r\nint sum = 0;\r\nint b1[4] = {2,4,3 };\r\nint b2[4] = { 3,4,2 };\r\nfor(int i=0;i&lt;4;i++){\r\n    for(int j=0;j&lt;4;j++){\r\n\t\t    sum=b1[i]+b2[j];\r\n\t\t\t\tif(sum==6){\r\n\t\t\t\tprintf(\"A:%2d B:%2d \\n \", b1[i], b2[j]);\r\n\t\t\t\t    c++;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n}\r\nprintf(\"共有%d种办法\\n\", c);\t\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n}", "Konwledge_Point": "for循环", "Question": ["2重for循环，如何循环赋值，以及判定求和的条件", ["我这里先给个程序的样板，有可能是错误的啊，老铁，帮忙给看看啊。谢谢啦。", "\n#include \"stdafx.h\"", "\n#include", "\n#include", "\nint main()", "\n{", "\nint a, b, i = 0;", "\nint sum = 0;", "\nint b1[4] = {2,4,3 };", "\nint b2[4] = { 3,4,2 };", "\nfor (a = 1; a <= 3; a++)", "\n\n", "b1[a] = 2;", "\nb1[a] = 4;", "\nb1[a] = 3;", "\n          /*", "\n             这里是第一个for循环，就是希望能够循环赋值给一个数组，具体想要实现的功能是：", "\n              当a=1的时候，b1[1]=2，然后把这个数字存储到数组，方便下面做sum求和用。", "\n               当a=2的时候，b1[2]=4，然后把这个数字存储起来，方便下面做sum求和用。", "\n                 当a=3的时候，b1[3]=3，然后把这个数字存储起来，方便下面做sum求和用。", "\n                   */", "\n\n", "for (b = 1; b <= 3; b++)", "\n\n", "b2[b] = 3;", "\nb2[b] = 4;", "\nb2[b] = 2;", "\n  /*", "\n             这里是第二个for循环，就是希望能够循环赋值给一个数组，具体想要实现的功能是：", "\n              当b=1的时候，b1[1]=3，然后把这个数字存储到数组，方便下面做sum求和用。", "\n               当b=2的时候，b1[2]=4，然后把这个数字存储起来，方便下面做sum求和用。", "\n                 当b=3的时候，b1[3]=2，然后把这个数字存储起来，方便下面做sum求和用。", "\n                   */", "\n\n", "sum = b1[a] + b2[b]  ;  /*  刚刚是希望能够循环给for 赋值，现在是希望能够根据刚刚的不同的值，来循环判定sum的和。*/", "\nif (sum == 6)", "\n{", "\nprintf(\"A:%2d B:%2d \", b1[a], b2[b]);  /* 如果sum等于6，那么把b1[a],b2[b]的值打印出来。*/", "\ni++;", "\nif (i % 1 == 0)", "\nprintf(\"\\n\");  /* i用了统计次数，看看总共有多少种组合方法。每一种方法i都自动加1*/", "\n}", "\nprintf(\"共有%d种办法\\n\", i);", "\nreturn 0;", "\n}", "\n\n", "希望看见的运行结果是 ：( b1[1] = 2    +    b2[2] = 4   )  ==6  ==sum", "\n                                             ( b1[3] = 3    +    b2[1] = 3   )  ==6  ==sum", "\n                                             ( b1[2] = 4    +    b2[3] = 2   )  ==6   ==sum", "\n                                            ......", "\n共有x种办法；  ", "\n\n", "注意：1 ： 可以不用数组来赋值。也可以用变量，但是我要求的值是特定的值，比如当 b ==1的时候，某一个变量要等于3，然后要用这个变量来参与sum求和。判定为6的时候，把该变量打印出来。", "\n           2 ：帮我看看sum  和那个等式有没有循环来判定，我是希望每一次循环都能判定一次sum求和", "\n           4：帮我看看我用for循环，循环赋值的时候是不是错啦？因为那个数组好像是从0开始的，我希望能够从1开始，如果要是从1开始，我给数组赋初值的时候是不是也赋值错啦。可以不用我的程序，我只是想演练一下自己的要实现的功能。", "\n           3 ：小程序，也不难，希望能够帮我写一个完整的小程序。希望能够保留的功能是，有多少种办法也就是i能够算清楚。然后，sum=6所涉及的2个变量的值的全部组合情况能够全部打印出来。最后希望程序能够尽量简单一点，有个main函数就可以啦。最好是在我原来代码的基础上简单的改动一下。不要用count  这些编译器会报错。我用的是vs2015。希望用的包能够提醒一下。我好导入进去。", "\n\n", "下面我把注释删掉：给一个完整程序，帮我修改一下：", "\n\n", "#include \"stdafx.h\"", "\n#include", "\n#include", "\nint main()", "\n{", "\nint a, b, i = 0;", "\nint sum = 0;", "\nint b1[4] = {2,4,3 };", "\nint b2[4] = { 3,4,2 };", "\nfor (a = 1; a <= 3; a++)", "\n\n", "b1[a] = 2;", "\nb1[a] = 4;", "\nb1[a] = 3;", "\n\n", "for (b = 1; b <= 3; b++)", "\n\n", "b2[b] = 3;", "\nb2[b] = 4;", "\nb2[b] = 2;", "\n\n", "sum = b1[a] + b2[b]  ; ", "\nif (sum == 6)", "\n{", "\nprintf(\"A:%2d B:%2d \", b1[a], b2[b]); ", "\ni++;", "\nif (i % 1 == 0)", "\nprintf(\"\\n\"); ", "\n}", "\nprintf(\"共有%d种办法\\n\", i);", "\nreturn 0;", "\n}", "\n\n", "谢谢啦老铁，双击666"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;open&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;IR1.xls&amp;#39;&lt;/span&gt;,model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;open&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;IR1.xls&amp;#39;&lt;/span&gt;,model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;就行&amp;#xff0c;可以追加&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如何把Python里用for循环得出的数据全部存入Excel", ["我写了一段程序，最后一块就是把这个程序运行三次，然后把这三次的值存入Excel中的不同行，因为每次运行有三个结果，这个是并列的，所以一次运行的结果存入一行里面的三列，三次运行的结果就是三行三列，但是现在运行完了只够最后一次的结果存入了Excel，前面两次都被覆盖了怎么修改一下", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i最小值不就是11吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;let arr &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; []\n        for(var i&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;100;i&amp;#43;&amp;#43; ){&lt;!-- --&gt;&lt;/span&gt;\n                // 最大值\n                \n              a&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n              if(a&amp;gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n                  arr.push(i)\n\n         \n              }\n                \n           }\n        console.log(arr)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/226193772646198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环如何获取到第一个值或者是最小值", ["比如一个这样的循环，如何获取到if判断后的i的最小值", "var a=0;", "//通过for循环获取对比次数", "\n", "\nfor(var i", "=", "0", ";i<100;i++ ){", "\n        // 最大值\n        \n      a", "=", "i", ";", "\n      if(a>", "10", "){\n          console.log(i)", ";", "\n\n      }\n        \n   }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;do_while循环至少会执行一次&amp;#xff0c;for循环会判断d[j]!&amp;#61;&amp;#39;\\0&amp;#39;&amp;#xff0c;j&amp;#61;0时&amp;#xff0c;如果d[j]&amp;#61;&amp;#39;\\0&amp;#39;&amp;#xff0c;就不会执行循环体。&lt;br /&gt;调试看下声明的d[0]是多少。&lt;br /&gt;如有帮助&amp;#xff0c;请采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["所有的do while循环都能改成for循环吗", ["#include<stdio.h>", "#include<stdlib.h>", "int main()", "{", "    char a[80];", "    int b,i;", "    float c;", "    gets(a);", "    scanf(\"%d%f\",&b,&c);", "    FILE *fp;", "    if((fp=fopen(\"f1.txt\",\"w\"))==NULL)", "    {", "        printf(\"cannot\");", "        exit(1);", "    }", "    fputs(a,fp);", "    fprintf(fp,\"%d\",b);", "    fprintf(fp,\"%.2f\",c);", "    char end='\\0';", "    fprintf(fp,\"%c\",end);", "    fclose(fp);", "    if((fp=fopen(\"f1.txt\",\"r\"))==NULL)", "    {", "        printf(\"cannot\");", "        exit(1);", "    }", "    char d[100];", "int j;", "for(j=0;d[j]!='\\0';j++)", "{", "    fscanf(fp,\"%c\",&d[j]);", "}", "    puts(d);", "    fclose(fp);", "    return 0;", "}", "这个代码我只把最后的do while循环改成了for循环，但是就没输出结婚了。"]], "Tag": "程序设计"}
{"Answer": "用colspan可以合并单元格，但是这个循环判断不好判断啊，这个table是已经写好的吗？还有那个id是自己生成的吗？", "Konwledge_Point": "for循环", "Question": ["jsp中for循环下怎么实现行合并", ["在一个jsp页面中", "\n怎么实现一个for循环中表格table中的tr下td的值等于下一个tr下的td的值的时候进行行合并"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;console.log(data.&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;item&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;.id&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Vue怎么for循环获取id来着", ["Vue怎么for循环获取id来着,如果有三组数据就获取这三组数据的id，v-for用多了，这个突然忘了", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/08937397666610.jpeg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;如图 因为平均数可能会出现小数 所以我们用双精度&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言用for循环输入3个整数，并求它们的平均值, 然后将均值输出。", [" 用for循环输入3个整数，并求它们的平均值, 然后将均值输出。", "提示：每次循环输入一门成绩，并将其加入总和。\n "]], "Tag": "程序设计"}
{"Answer": "```\r\n&lt;script&gt;\r\nvar index=0;\r\n var handler = setInterval(\"alladdroleshouquanusers()\",1000);\r\n if(index&lt;rows.length){\r\n    index++;\r\n\t\tif(index&gt;=rows.length){\r\n\t\t    clearInterval(handler);//关闭定时\r\n\t\t}\r\n    原来for里面的一堆代码\r\n }\r\n &lt;/script&gt;\r\n```", "Konwledge_Point": "for循环", "Question": ["js中for循环每次循环如何暂停一秒后执行", ["大神们帮我看一下我写的这段代码：", "\n          //人员授权的全增功能", "\n          function alladdroleshouquanusers()", "\n          {", "\n\n", "            var rows = partid3.getSelecteds();\n            for(var i=0;i<rows.length;i++)\n            {\n            var sendData = nui.encode({'userid':rows[i].OPERATOR_ID,'prPartId':plPartId3});\n            nui.ajax\n            (\n                {\n                     url:\"com.spinsoft.eip.portal.Part.queryalladdusers.biz.ext\",\n                     type:'POST',\n                     data:sendData,\n                     cache: false,\n                     contentType:'text/json',\n                     success:function(text)\n                     {\n                         var returnJson = nui.decode(text);\n                         if(returnJson.exception == null)\n                         {\n                             partid3.reload();\n                             partid4.reload();\n                         }\n                         else\n                         {\n                             nui.alert(\"添加角色授权失败\", \"系统提示\");\n                             partid1.unmask();\n                         }\n                     }\n                }\n            );\n            }\n      }\n", "\n\n", "我是想利用选择框全选，然后点击一键全都添加，但是在这里遇到了问题，以上代码中数据可以获取，但是在执行ajax的时候出现了问题，全增的时候之增加过去了一部分，还有一部分没有增加过去，我尝试在for循环下面加了一个alert，然后弹出一个alert就点击一下，就这样的方式，数据居然可以全都添加过去，为此很纳闷，不知道是哪里出了问题，自己怀疑是不是ajax执行的太快了，数据丢失的原因，所以想让for循环慢一点执行试一下，网上搜索页搜索不到结果，哪位大神有解决的办法，谢谢了！"]], "Tag": "程序设计"}
{"Answer": "ArrayList list = new ArrayList&lt;String&gt;();\r\nboolean fg = true;\r\nfor (String str : list) {\r\n\tif (str 满足某个条件 &amp;&amp; fg) {\r\n\t\tfg = false;\r\n\t\t你的代码1\r\n\t}\r\n\t你的代码2\r\n}", "Konwledge_Point": "for循环", "Question": ["在for循环里，怎么让一段代码只执行一次？有什么巧妙的方法吗?", ["在循环里，怎么让一段代码只执行一次？有什么巧妙的方法吗?在循环里，怎么让一段代码只执行一次？有什么巧妙的方法吗?在循环里，怎么让一段代码只执行一次？有什么巧妙的方法吗?"]], "Tag": "程序设计"}
{"Answer": "要这个样子的？\r\n[https://codepen.io/bettermo/pen/VJdgVE](https://codepen.io/bettermo/pen/VJdgVE \"https://codepen.io/bettermo/pen/VJdgVE\")", "Konwledge_Point": "for循环", "Question": ["vue使用v-for循环直接使用方法获得的数组问题", ["vue使用v-for循环直接使用方法获得的数组，代码", "\n\n", "<div id=\"test\">\n<select  placeholder=\"请选择\">\n            <template v-for=\"(item,index) in getList('a')\">\n                        <option v-if=\"item\" :label=\"item\" :value=\"item\"></option>\n            </template>\n</select>\n<input v-model=\"str\"/>\n</div>\n\n<script>\n    var test = new Vue({\n            el:\"#test\",\n            data:{\n                 arr:{\n                            a:[1,2,3,4],\n                            b:[5,6,7,8]\n                    },\n                    str:\"\"\n            },\n            methods:{\n                getList:function(name){\n                   return this.arr[name]\n                }\n            }\n    })\n\n</script>\n", "\n\n", "像这样，只要整个test发生变化就会调用getList方法，就比如我在input输入也会调用getList，各位大神有解决方法吗"]], "Tag": "程序设计"}
{"Answer": "https://ask.csdn.net/questions/691967", "Konwledge_Point": "for循环", "Question": ["javascript里可以把for循环放在switchi里面么？", ["javascript里可以把for循环放在switchi里面么？其中的break语句是结束循环还是结束选择？"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201706/02/1496391352_897162.png)", "Konwledge_Point": "for循环", "Question": ["java for循环，合并单元格", ["想要的效果需要通过for循环来实现", "\n通过循环循环出两行八列如下图所示", "\n\n", "\n最终效果如下图所示", "\n\n", "\n合并行跟列我需要把没有内容的TD删除或者隐藏掉", "\n形成第一行8列，第二行3列的效果，还合并单元格"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你要从for循环中获取汇总数据&amp;#xff0c;要在循环外定义一个列表&amp;#xff0c;在循环体内进行append,代码中new_links函数这样改就可以了。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;def new_links(list_1):\n    urls&amp;#61;[]\n    for i in list_1:\n        #print(&amp;#39;&amp;#61;&amp;#39;*220)\n        for index,y in enumerate(i):\n            resp &amp;#61; requests.get(y,headers&amp;#61;headers).content.decode(&amp;#39;gbk&amp;#39;)\n            html_1 &amp;#61; etree.HTML(resp)\n            adress &amp;#61; html_1.xpath(&amp;#39;//div[&amp;#64;id&amp;#61;&amp;#34;mouscroll&amp;#34;]/img/&amp;#64;src&amp;#39;)[0].replace(&amp;#39;t_s960x600c5&amp;#39;,&amp;#39;t_s1920x1080&amp;#39;)\n            urls.append({f&amp;#39;img_No.{index&amp;#43;1}&amp;#39;:adress})\n       \n    return urls&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["怎么使函数返回for循环里面的值", [" 怎么才能使函数返回for循环里面的值？", "\n\n", "也就是怎么才能让new_links这个函数将prin(url_111)的内容返回出来，供其他函数调用", "\n\n", "我目前这么写，print(url_111)出来的结果是我想要的，但是return返回的url_111是空的。。。这是为什么？？？", "\n\n", "\n", "from lxml import etree\nimport requests\nimport os\nimport threading\nimport queue\nfrom urllib import parse\nimport time\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36',\n    'cookie':'HMACCOUNT_BFESS=5A76C20AA8660D57; BDUSS_BFESS=UwZTVlQ0oxdTNNcVRiUUp3YkZ2YlpTWEtMN2tNSFpFeWdRUlRjRDlxZTBobDFmRVFBQUFBJCQAAAAAAAAAAAEAAAD8Ar-O70yDuv2XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALT5NV-0-TVfYj; BDSFRCVID_BFESS=dPCOJeC62xqMEQoeDjW8TGYSv07fn5jTH6aocB2aoVUNToy-YSWMEG0PDM8g0Kubo25nogKKBeOTH6KF_2uxOjjg8UtVJeC6EG0Ptf8g0M5; H_BDCLCKID_SF_BFESS=tR-JoDDMJDL3qPTuKITaKDCShUFsKpOmB2Q-5KL-MPjYsfjvbfO83Tk7Qnrg-j8f5D_tBfbdJJjoHp_4-tn43fC7hpuLXlJUBmTxoUJgBCnJhhvG-4PKjtCebPRi3tQ9Qg-qahQ7tt5W8ncFbT7l5hKpbt-q0x-jLTnhVn0MBCK0HPonHj8he5bP; BAIDUID_BFESS=7C613C37D1AFB222B605AA8CCBB44540:FG=1',\n}\n\n\n# 使用代理\nproxy = {\n    'http':'113.194.143.101:9999'\n}\n\n\n# 获取夜景壁纸列表，返回每个图组的urls\ndef yejing_pic_list(base_url):\n    res = requests.get(base_url,proxies=proxy,headers=headers).content.decode('gbk')\n    html = etree.HTML(res)\n    Incomplete_url = html.xpath('//li[@class=\"photo-list-padding\"]/a/@href') # 返回的是['/bizhi/8139_101249_2.html', '/bizhi/7947_98766_2.html', '/bizhi/7741_96199_2.html', '/bizhi/7568_93902_2.html', '/bizhi/7203_89142_2.html', '/bizhi/7000_86950_2.html', '/bizhi/6704_83622_2.html', '/bizhi/6383_78552_2.html', '/bizhi/6062_75033_2.html']\n    s = 'https://desk.zol.com.cn'\n    global name\n    name = html.xpath('//li[@class=\"photo-list-padding\"]/a/span/em/text()')  # 返回的是['繁华的都市唯美夜景壁纸', '城市图片-城市夜景壁纸图', '瑰丽的城市夜景壁纸', '都市夜景犹如漫画游戏般梦', '古城夜景桌面壁纸', '厦门夜景桌面壁纸', '2016年Bing夜景主题桌面壁', '高空视角城市夜景桌面壁纸', '唯美夜景图片-唯美夜景图']\n    # 拼接url   s+Incomplete_url\n    for i in range(len(Incomplete_url)):\n        Incomplete_url[i] = s + Incomplete_url[i]\n    urls_list = Incomplete_url                                                    # 返回的是['https://desk.zol.com.cn/bizhi/8139_101249_2.html', 'https://desk.zol.com.cn/bizhi/7947_98766_2.html', 'https://desk.zol.com.cn/bizhi/7741_96199_2.html', 'https://desk.zol.com.cn/bizhi/7568_93902_2.html', 'https://desk.zol.com.cn/bizhi/7203_89142_2.html', 'https://desk.zol.com.cn/bizhi/7000_86950_2.html', 'https://desk.zol.com.cn/bizhi/6704_83622_2.html', 'https://desk.zol.com.cn/bizhi/6383_78552_2.html', 'https://desk.zol.com.cn/bizhi/6062_75033_2.html']\n    return name,urls_list\n\n# 返回每张图的网页链接\ndef secande(urls_list):\n    list_1 = []\n    for x in urls_list:\n        resp = requests.get(x,headers=headers).content.decode('gbk')\n        html = etree.HTML(resp)\n        links = html.xpath('//div[@class=\"photo-list-box\"]/ul//li/a/@href')\n        s = 'https://desk.zol.com.cn'                                      \n        url_links = [s+i for i in links]\n        list_1.append(url_links)\n    return list_1\n\n# 返回每张图片的真实链接\ndef new_links(list_1):\n    for i in list_1:\n        print('='*220)\n        url_111 = {}\n        for index,y in enumerate(i):\n            resp = requests.get(y,headers=headers).content.decode('gbk')\n            html_1 = etree.HTML(resp)\n            adress = html_1.xpath('//div[@id=\"mouscroll\"]/img/@src')[0].replace('t_s960x600c5','t_s1920x1080')\n            url_111[f'img_No.{index+1}'] = adress\n        print(url_111)\n       \n    return url_111\n\n# 下载图片\n# def downlond(path,url_111):\n#     print(url_111)\n#     for img_links in url_111.items():\n#         index,img_links = img_links\n#         # print(url_111)\n#         with open(os.path.join(path, f'{index}.jpg'),'wb') as fp:\n#             fp.write(requests.get(img_links,headers=headers).content)  \n\n# 创建目录路径\n# def dir_path(name):\n#     for index,n in enumerate(name):\n#         path = os.path.join('zol高清壁纸',f'{index+1}'+'_'+n)\n#         if not os.path.exists(path):\n#             os.mkdir(path)\n#         return path           \n\ndef main():\n    base_url = 'https://desk.zol.com.cn/fengjing/yejing/'\n    name,urls_list = yejing_pic_list(base_url)\n    list_1 = secande(urls_list)\n    url_111 = new_links(list_1)\n    # path = dir_path(name)\n    # downlond(path,url_111)\n\nif __name__=='__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n", "\n\n", " 这是打印的结果，是我想要的，但是将这个字典传入 下载图片 这个函数里面，传进来的url_111却是空的", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先下面这种for循环的写法&amp;#xff0c;作用和上面的for循环写法都是遍历arr这个数组。至于为什么上面带&amp;amp;&amp;#xff0c; 那是因为你需要改变arr数组里面的值&amp;#xff0c;而下面只是把数据中的参数打印出来&amp;#xff0c;不改变数组里面的值&amp;#xff0c;实际上你下面循环带上&amp;amp;也行。就是你需要改变数组的里面的值你才需要带&amp;amp;。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于C++的for循环问题", ["\n\n", "今天用CLion写冒泡demo的时候发现一直用的for循环提示可以替代，就点了一下，小白不是很懂它提示替换的内容，为什么控制输入的for循环替换后有&而下面遍历输出的for循环替换后不带&，难道和scanf那个&有关？麻烦大佬给小弟讲解一下这样写法的原理，不尽感谢！", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "看你的数据量，\r\n1、数量小的话2种都没有问题\r\n2、数据量大的话，这2中方式也都不可以用，最好采用游标查询（hibernate/mybatis/或者原生数据库都有提供游标）的方式去查询。\r\n3、如果你非要用in的话，推荐你使用exists。", "Konwledge_Point": "for循环", "Question": ["java for循环一个一个查询和全部结果放一个list sql语句用in这list查询 哪个效率高", ["java for循环一个一个查询和全部结果放一个list里面，然后sql语句通过用in这个list查询 哪个效率高"]], "Tag": "程序设计"}
{"Answer": "find()对字符串进行匹配,匹配到的字符串可以在任何位置. \r\nJava代码示例: \r\nPattern p=Pattern.compile(\"\\\\d+\"); \r\nMatcher m=p.matcher(\"22bb23\"); \r\nm.find();//返回true \r\nMatcher m2=p.matcher(\"aa2223\"); \r\nm2.find();//返回true \r\nMatcher m3=p.matcher(\"aa2223bb\"); \r\nm3.find();//返回true \r\nMatcher m4=p.matcher(\"aabb\"); \r\nm4.find();//返回false \r\n\r\n可参照次链接。http://blog.csdn.net/cclovett/article/details/12448843", "Konwledge_Point": "for循环", "Question": ["for循环中find是怎么工作的", ["public static void splitOper(String[] s){  \n    Pattern p = Pattern.compile(\"[0-9]+\");  // 以数字做分隔，正则表达式  \n    for(int i=0;i<s.length;i++){  \n        Matcher m = p.matcher(s[i]);    // 得到所有数字   \n        m.find();   // 得到第一个数字   \n        int Row = Integer.parseInt(m.group());  // 取出第一个数字   \n        m.find();   // 得到第二个数字   \n        int Col = Integer.parseInt(m.group());  // 取出第二个数字   \n        System.out.println(fun(Row,Col));   // 计算结果并输出   \n    }  \n} \n    如果String[] s是R12C4，这段代码的作用是使Row =12，Col =4，\n    我想问一下，在for循环是一个字符一个字符来的，里面的两个find是怎么匹配的\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;你的循环变量i应该作为下标放在delta里面变成delta(i)&amp;#xff0c;给你修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;30;\n&lt;span class=\"hljs-attribute\"&gt;N&lt;/span&gt;&amp;#61;10;\n&lt;span class=\"hljs-attribute\"&gt;sintheta&lt;/span&gt;&amp;#61;linspace(-0.05,0.05,1001);\n&lt;span class=\"hljs-attribute\"&gt;delta&lt;/span&gt;&amp;#61;pi*d*sintheta/0.5;\n&lt;span class=\"hljs-attribute\"&gt;pbs&lt;/span&gt;&amp;#61;sin(delta);\n&lt;span class=\"hljs-attribute\"&gt;I&lt;/span&gt;&amp;#61;zeros(size(delta));\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1:1001\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; pbs(i)~&amp;#61;0\n        I(i)&amp;#61;N^(-2)*(sin(N&lt;span class=\"hljs-number\"&gt;*de&lt;/span&gt;lta(i))./sin(delta(i))).^2; %这里修改成delta(i)就行啦\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        I(i)&amp;#61;1;\n    end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["matlab for循环后结果与循环前一致", [" ", "d", "=30;\n", "N", "=10;\n", "sintheta", "=linspace(-0.05,0.05,1001);\n", "delta", "=pi*d*sintheta/0.5;\n", "pbs", "=sin(delta);\n", "I", "=zeros(size(delta));\n", "for", " ", "i", "=1:1001\n", "if", " pbs(i)~=0\nI(i)=N^(-2)*(sin(N", "*de", "lta(i))./sin(delta(i))).^2;\n", "else", "\nI(i)=1;\nend\n\n", "\n", "运行后", "I=zeros(size(delta))", "相当于没有进行for循环，猜想是条件表述有问题，但不知该如何修改"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;本来我也很奇怪&amp;#xff0c;想了半天突然想到你赋值list_3&amp;#61;list_2&amp;#61;list_1时他们仨用同一个内存相当于他们是同一个列表&amp;#xff0c;修改一个就会修改另外的&amp;#xff0c;所以赋值时copy一下就好了&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/530399388146142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/390390488146159.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for 循环无法生效问题", ["问题遇到的现象和发生背景", "\n", "python 学习中", "\n", "问题相关代码，请勿粘贴截图", "\n", "def", " puke7出", "2", "留", "5", "(list_1):\n    ", "list_2", " = list_1\n    ", "for", " i in range(", "6", "):\n        ", "for", " j in range(", "5", "):\n            ", "list_3", " = list_2\n            ", "if", " len(list_3) == ", "7", ":\n                ", "del", "(list_3[i])\n                ", "del", "(list_3[j])\n                ", "print", "(list_3)\n", "if", " __name__ == ", "\"__main__\"", ":\n    ", "list_1", " =", " [1,2,3,4,5,6,7]", "\n    ", "puke7", "出", "2", "留", "5", "(list_1)\n\n", "\n", "运行结果及报错内容", "\n", "为什么只能输出一行结果？不应该是将21种结果都输出么？", "[3, 4, 5, 6, 7]", "\n", "我的解答思路和尝试过的方法", "\n", "是不是在for 循环中无法正常调用外部列表？或只能调用一次外部列表？", "\n", "我想要达到的结果", "\n", "将7选2的所有组合输出出来"]], "Tag": "程序设计"}
{"Answer": "你可以把div的id设置成\r\n```\r\n随便一个英文字符+{{problem.user_id }} \r\n```\r\n这样你的每个div的id就是不一样的，通过js获取也是获取你设置的id格式，这样就能保证每个id的唯一性！", "Konwledge_Point": "for循环", "Question": ["Django for循环传递参数问题", ["\n\n", "如图，我通过for循环创建div,然后我希望在某一个div里点击按钮时传递对应的{{problem.user_id}}到< script >里", "\n\n", "对应得click.function写法如下：", "\n\n", "求大佬帮帮忙"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if datas[i]&amp;#61;&amp;#61;最佳匹配[0]:&lt;br /&gt;在递归调用后, 加一行break&lt;br /&gt;不然就会在你递归完成后, 继续循环, 访问错误的index&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Python for循环循环次数异常问题", ["问题遇到的现象和发生背景", "\n", "for循环次数错误", "\n", "问题相关代码，请勿粘贴截图", "\n", "def", " 剔除最佳重新排(datas,最佳匹配):\n    ", "print", "(", "'\\n-----------最新数据组---------'", ")\n    ", "print", "(datas)\n    ", "print", "(最佳匹配)\n    ", "print", "(", "len", "(最佳匹配))\n    ", "if", " ", "len", "(最佳匹配)>", "0", ":\n        ", "for", " i ", "in", " ", "range", "(", "len", "(datas)):\n            ", "print", "(", "'本次输出第'", "+", "str", "(i)+", "'个，值为：'", "+", "str", "(datas[i]))\n            ", "if", " datas[i]==最佳匹配[", "0", "]:\n                ", "del", " datas[i]\n                ", "del", " 最佳匹配[", "0", "]\n                剔除最佳重新排(datas,最佳匹配)\n    ", "else", ":\n        ", "global", " 匹配差值_2张,匹配差值_3张,匹配差值_4张\n        匹配差值_2张 = ", "10.0", "\n        匹配差值_3张 = ", "10.0", "\n        匹配差值_4张 = ", "10.0", " \n        匹配(datas)\n", "\n", "运行结果及报错内容", "\n", "[303.45, 142.74, 93.15, 264.1, 330.89]", "[200]", "1", "本次输出第0个，值为：303.45", "本次输出第1个，值为：142.74", "本次输出第2个，值为：93.15", "本次输出第3个，值为：264.1", "本次输出第4个，值为：330.89", "本次输出第2个，值为：93.15", "本次输出第3个，值为：264.1", "本次输出第4个，值为：330.89", "\n", "我的解答思路和尝试过的方法", "\n", "粗体部分为什么会重现？并且粗体之后报错 ", "IndexError: list index out of range", "\n", "我想要达到的结果", "\n", "循环次数超预期的原因"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、int c &amp;#61; a[i];这里数组下标越界了&amp;#xff0c;也没有意义&lt;br /&gt;2、第二个for循环里的switch&amp;#xff08;c&amp;#xff09;使用错误&amp;#xff0c;改为switch&amp;#xff08;a[i]&amp;#xff09;&lt;br /&gt;3、每个case后面要加break&amp;#xff1b;不然下边的case都会执行&amp;#xff0c;直到结束或者遇到break&amp;#xff1b;&lt;br /&gt;4、case用法是case&amp;#xff1a;语句&amp;#xff1b;break&amp;#xff1b;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环输不出来数组b了", ["for循环最后怎么输出学生打分的各个个数啊", "帮忙找找错误，蟹蟹了", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环要放在方法中或main函数中&amp;#xff0c;不能直接写在类里&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["JAVA类直接写个for循环为什么会编写报错", ["JAVA类直接写个for循环为什么会编写报错，是因为java虚拟机进行类加载的时候无法进行循环操作吗"]], "Tag": "程序设计"}
{"Answer": "你这个吧，首先逻辑就有点问题，居然在循环里面查询数据库，这样及其耗费性能，建议用，where xxx in() ，当然你这个错是因为你的集合在循环里面进行了赋值运算，每次赋值会吧上一次覆盖掉，建议你用list的addAll方法。", "Konwledge_Point": "for循环", "Question": ["java中for循环得数据如何获取到", ["请问，我应该改成怎么样才可以获取把下面得FOR循环数据全部取出来", "\n现在只能获取到最后一条数据", "\n\n"]], "Tag": "程序设计"}
{"Answer": "感觉应该是这样的\r\neval(['a' num2str(i) '=data(:,' num2str(i) ')']);\r\n写在for语句里面", "Konwledge_Point": "for循环", "Question": ["通过for循环来对变量命名成a1,a2,a3...", ["\n您好，我想通过for循环将data（如图）中的每一列命名成一个变量，从a1到an,请大神指点，感激不尽。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加个while(true)不就行了&amp;#xff0c;成功就跳过此次&amp;#xff0c;不成功一直重新本次&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python要怎么在for循环中条件符合才会继续循环否则重新开始这一次循环？", ["如题，和continue有点像，只不过不是跳过这一次，而是重新开始这一次", "\n "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;读取n个数&amp;#xff0c;并逐个放在数组A中&amp;#xff0c;在数组中存放时从A[1]开始存放。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环里包含的scanf是什么意思", ["第5行for循环里面有scanf，这是什么用法，帮忙解释一下第5行的意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入语句的%f改为%lf,double类型用%lf&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;shuru&lt;/span&gt; &amp;#61; scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf %lf&amp;#34;&lt;/span&gt;,&amp;amp;x,&amp;amp;n)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["for循环为什么不执行", ["计算e^x，每次直接跳过for循环"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;name[i]&amp;#61;&amp;#61;bookName&lt;/code&gt;换成&lt;code class=\"language-javascript\"&gt;bookName.equals(name[i])&lt;/code&gt;&amp;#xff0c;字符串这种引用类型不能用&lt;code class=\"language-javascript\"&gt;&amp;#61;&amp;#61;&lt;/code&gt;判断。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java中for循环中if判断不执行的问题", ["问题遇到的现象和发生背景", "\n", "for循环中if判断不执行", "\n", "问题相关代码，请勿粘贴截图", "\n", "   ", "private", " ", "String", "[] name = {", "\"盗墓笔记\"", ",", "\"牛马的自我修养\"", ",", "\"如何成为社恐\"", ",", "\"爱情公寓语录\"", "};", "//书名", "\n    ", "private", "  int[] money = {", "37", ",", "80", ",", "80", ",", "66", "};", "//价格", "\n    ", "private", "  int[] ", "number", " = {", "001", ",", "002", ",", "003", ",", "004", "};", "//编号", "\n    ", "private", "  int[] inventory = {", "100", ",", "100", ",", "100", ",", "100", "};", "//库存", "\n    ", "public", " ", "static", " int g=", "0", ";\n    ", "public", " ", "static", " int i=", "0", ";\n\n    ", "//根据编号查找书", "\n    ", "public", "  ", "void", " ", "find", "(", "String", " bookName", "){\n        ", "for", " (int i=", "0", ";i< name.", "length", ";i++){\n            ", "System", ".", "out", ".", "println", "(bookName);\n            ", "if", "(name[i]==bookName)\n                ", "break", ";\n            ", "System", ".", "out", ".", "println", "(name[i]);\n            g++;\n            ", "System", ".", "out", ".", "println", "(", "\"g=\"", "+g);\n            ", "System", ".", "out", ".", "println", "(", "\"i=\"", "+i);\n        }\n    }\n ", "/*调用方法*/", "\n    ", "//设置书名的值", "\n    ", "public", " ", "void", " ", "setName", "(", "String", " name", "){\n        int i=", "0", ";\n        ", "this", ".", "name", "[i] = name;\n    }\n    ", "//输出书名", "\n    ", "public", " ", "String", " ", "getName", "(", "){\n        ", "return", " name[g-", "1", "];\n    }\n    ", "//设置价格的值", "\n    ", "public", " ", "void", " ", "setMoney", "(", "int money", "){\n        ", "for", " (int i=", "0", ";i<", "10", ";i++)\n        ", "this", ".", "money", "[i] = money;\n    }\n    ", "//输出价格", "\n    ", "public", " int ", "getMoney", "(", "){\n        ", "return", " money[g-", "1", "];\n    }\n    ", "//设置编号的值", "\n    ", "public", " ", "void", " ", "setNumber", "(", "int ", "number", "){\n        ", "this", ".", "number", "[i] = ", "number", ";\n    }\n    ", "//输出编号", "\n    ", "public", " int ", "getNumber", "(", "){\n        ", "return", "  ", "number", "[g-", "1", "];\n    }\n    ", "//设置库存的值", "\n    ", "public", " ", "void", " ", "setInventory", "(", "int inventory", "){\n        ", "this", ".", "inventory", "[i] = inventory;\n    }\n    ", "//输出库存", "\n    ", "public", " int ", "getInventory", "(", "){\n        ", "return", " inventory[g-", "1", "];\n    }\n\n", "\n", "运行结果及报错内容", "\n", "图书管理系统", "\n", "\n", "1.查找书籍", "2.付款", "3.录入书籍", "4.退出", "\n", "\n", "1", "请输入书名：", "盗墓笔记", "输入的书名：盗墓笔记", "数组中的数据：盗墓笔记", "盗墓笔记", "g=1", "i=0", "输入的书名：盗墓笔记", "数组中的数据：牛马的自我修养", "牛马的自我修养", "g=2", "i=1", "输入的书名：盗墓笔记", "数组中的数据：如何成为社恐", "如何成为社恐", "g=3", "i=2", "输入的书名：盗墓笔记", "数组中的数据：爱情公寓语录", "爱情公寓语录", "g=4", "i=3", "书名：爱情公寓语录", "价格：66", "编号：100", "库存：4", "\n", "进程已结束,退出代码0", "\n", "我的解答思路和尝试过的方法", "\n", "while和for都试过了if判断均不成立；当我把if判读引去以后break可以执行；", "\n", "我想要达到的结果", "\n", "if能够执行就行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i为什么要&amp;#43;&amp;#61;1&lt;br /&gt;不是让你求3的倍数吗&lt;br /&gt;i&amp;#43;&amp;#61;3啊&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;i&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n{\n&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#43;&amp;#61;i;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Java怎么写可以利用for循环求100以内3或3的倍数的和", ["Java怎么写可以利用for循环求100以内3或3的倍数的和", "我定义了一个i=0", "然后for循环，i<100", "i+=1;", "可是算出来不对"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题已解决&amp;#xff1a;增强的for循环实质上是运用了临时变量获取数组或集合的值&amp;#xff0c;可以用来遍历&amp;#xff0c;而不可用来改变它的值。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java的int型数组使用增强的for循环时，为何赋值失败呢？", ["Java的int型数组使用增强的for循环时，为何赋值失败呢？", "Java的int型数组使用增强的for循环时，为何赋值失败呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;bs.find_all()是从页面内容匹配出来的&amp;#xff0c;它本来就是有限的&amp;#xff0c;怎么可能无限循环呢&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环遍历获取网页内部链接", ["这个程序的for循环部分，在结尾处可不可以设定一个限制条件使for循环不会无止境地执行下去?", "如果有可以讲下思路或者提供下代码吗？谢谢啦！", "for link in bs.find_all()('a',href=re.compile('^(/wiki/)')):", "if 'href' in link.attrs:", "if link.attrs['href'] not in pages:", "#我们遇到了新页面", "newPage = link.attrs['href']", "print('-'*20)", "print( newPage)", "pages . add(newPage)", "getLinks(newPage)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你为什么要添加不同的点击事件&lt;br /&gt;统一走同一个点击事件&amp;#xff0c;然后根据点的按钮文字不同、ID不同&amp;#xff0c;或者其他特征&amp;#xff0c;走不同的分支就行了啊&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["怎么给for循环生成的button按钮分别添加不同的点击事件？", ["for循环后，每行都有一个【上传】按钮，我想让每一行的这个按钮传的东西都不一样，可以实现吗？就是我现在写的这个是所有【上传】按钮传的都是前10条数据，我现在想让第一行只传前10条，第二行传11-20条，以此类推，怎么写个分支？怎么做判断啊", "\n", "//查询数据库并将前10条数据上传到文本框", "\n", "function", " ", "up", "(", "index", "){\n     ", "var", " ckbs=$(", "\"#qgInfo input[type=checkbox]:checked\"", ");\n     ", "var", " id=ckbs.", "val", "();\n     $.", "ajax", "({\n            ", "url", ":", "\"/RbHotPower/RbCon/findxtccrb.action\"", ",\n            ", "async", ":", "false", ",\n            ", "dataType", ":", "\"json\"", ",\n            ", "data", ":{\n                ", "\"ids\"", ":id\n            },", "success", ":", "function", "(", "data", "){\n                ", "console", ".", "log", "(data); \n                ", "if", "(dataList){\n                        ", "var", " ", "Zuhao", "=", "1", ";\n                        ", "var", " ", "RbAd", "1=data.", "rbList", "[", "0", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "2 =data.", "rbList", "[", "1", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "3=data.", "rbList", "[", "2", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "4 =data.", "rbList", "[", "3", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "5=data.", "rbList", "[", "4", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "6 =data.", "rbList", "[", "5", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "7=data.", "rbList", "[", "6", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "8 =data.", "rbList", "[", "7", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "9=data.", "rbList", "[", "8", "].", "rbAd", ";\n                        ", "var", " ", "RbAd", "10 =data.", "rbList", "[", "9", "].", "rbAd", ";\n                    $(", "\"#Zuhao\"", ").", "val", "(", "Zuhao", ");\n                    $(", "\"#RbAd1\"", ").", "val", "(", "RbAd", "1);\n                    $(", "\"#RbAd2\"", ").", "val", "(", "RbAd", "2);\n                    $(", "\"#RbAd3\"", ").", "val", "(", "RbAd", "3);\n                    $(", "\"#RbAd4\"", ").", "val", "(", "RbAd", "4);\n                    $(", "\"#RbAd5\"", ").", "val", "(", "RbAd", "5);\n                    $(", "\"#RbAd6\"", ").", "val", "(", "RbAd", "6);\n                    $(", "\"#RbAd7\"", ").", "val", "(", "RbAd", "7);\n                    $(", "\"#RbAd8\"", ").", "val", "(", "RbAd", "8);\n                    $(", "\"#RbAd9\"", ").", "val", "(", "RbAd", "9);\n                    $(", "\"#RbAd10\"", ").", "val", "(", "RbAd", "10);         \n                }\n                }\n    });\n    \n}\n\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二个for循环里面你也用了i&lt;br /&gt;第一次循环结束i变成3 直接跳出第一个循环了&lt;br /&gt;修改一下&amp;#xff0c;第二个for循环里面用j&lt;br /&gt;望采纳&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么只会循环一次？（第一次循环是正确的）是for循环那里出了问题了吗？", ["为什么只会循环一次？（第一次循环是正确的）是for循环那里出了问题了吗？", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你得看一下用&lt;code class=\"language-javascript\"&gt;List&amp;lt;Integer&amp;gt; list &amp;#61; List.of(1, 2, 1,2,3,5,5,6,7,8,9,0,2,3,4)&lt;/code&gt;的到的list具体是啥类型&amp;#xff0c;如果是&lt;code class=\"language-javascript\"&gt;ArrayList&lt;/code&gt;&amp;#xff0c;那确实传统的方式最快。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于迭代器与for循环效率问题", ["教材是这么说的：迭代器效率高于传统的for循环", "然后我测试了一下", "\n", "import", " java.util.Iterator;\n", "import", " java.util.List;\n\n", "public", " ", "class", " demo_Class {\n    List<", "Integer", "> list = List.", "of", "(", "1", ", ", "2", ", ", "1", ",", "2", ",", "3", ",", "5", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "0", ",", "2", ",", "3", ",", "4", ");\n    ", "public", " static ", "void", " main(String [] arg){\n        final demo_Class demo_class = ", "new", " demo_Class();\n\n        Long start1 = ", "System", ".currentTimeMillis();\n        ", "for", " (", "int", " i =", "0", ";i < ", "10000000", ";i++){\n            demo_class.go1();\n        }\n        Long end1 = ", "System", ".currentTimeMillis();\n        ", "System", ".", "out", ".println(\"go1 time:\"+(end1-start1));\n\n        Long start2 = ", "System", ".currentTimeMillis();\n        ", "for", " (", "int", " i =", "0", ";i < ", "10000000", ";i++){\n            demo_class.go2();\n        }\n        Long end2 = ", "System", ".currentTimeMillis();\n        ", "System", ".", "out", ".println(\"go2 time:\"+(end2-start2));\n\n    }\n    ", "public", " ", "void", " go1(){\n        ", "for", "(Iterator<", "Integer", "> i = list.iterator();i.hasNext();){\n            ", "if", " (i.next() == ", "4", "){\n                ", "return", ";\n            }\n        }\n    }\n    ", "public", " ", "void", " go2(){\n        ", "for", "(", "int", " ", "index", "=", "0", "; ", "index", " < list.size();", "index", "++){\n            ", "if", " (list.", "get", "(", "index", ") == ", "4", "){\n                ", "return", ";\n            }\n        }\n    }\n}\n", "\n", "结果：跑出来是这样的（forearch一样用时较多） ，传统的for循环用时反而比较少，这是为啥，跑了好几遍了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, na, ag, personal_plac&lt;/span&gt;):\n        self.name &amp;#61; na\n        self.age &amp;#61; ag\n        self.personal_place &amp;#61; personal_plac\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Print&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;【学生姓名:{},年龄:{},地址:{}】&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(self.name,self.age,self.personal_place))\n \nd &amp;#61; {}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;当前录入第&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;位学生信息&amp;#xff0c;总共需要录入10位学生信息&amp;#34;&lt;/span&gt;)\n    name &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n    age &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生的年龄&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n    personal_place &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生的地址&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n    d[i] &amp;#61; Student(name, age, personal_place)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;学生&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;信息录入完成&amp;#xff0c;信息为&amp;#xff1a;&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    d[i].Print()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["通过for循环，配合input，使用构造方法，完成多个学生的信息录入", ["设计一个类，记录学生的姓名、年龄、地址三类信息", "\n", "          需实现：①通过", "for", "循环，配合", "input", "输入语句，并使用构造方法，完成学生信息的键盘录入；\n                         ②输入完成后，使用", "print", "语句，完成信息的输出。\n", "\n", "\n", "class", " ", "Student", ":\n\n    ", "def", " ", "__int__", "(", "self, na, ag, personal_plac", "):\n        self.name = na\n        self.age = ag\n        self.personal_place = personal_plac\n\n\nd = {}\n", "for", " i ", "in", " ", "range", "(", "10", "):\n    ", "print", "(", "f\"当前录入第", "{i}", "位学生信息，总共需要录入10位学生信息\"", ")\n    name = ", "input", "(", "\"请输入学生的姓名：\"", ")\n    age = ", "input", "(", "\"请输入学生的年龄：\"", ")\n    personal_place = ", "input", "(", "\"请输入学生的地址：\"", ")\n    d[", "'stu'", "+", "str", "(i)] = Student(name, age, personal_place)\n    ", "print", "(", "f\"学生", "{i}", "信息录入完成，信息为", "{d[i]}", "\"", ")\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "刚开始学基础课程，还没能完全学懂，试过了网上能找到的相似的方法，但是还是没能解决。", "\n", "我想要达到的结果", "\n", "\n", "如果有了解此类问题的解决方法的，请提供一下解题思路，感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你使用的是嵌套循环&amp;#xff08;即一个循环内嵌套另一个循环&amp;#xff09;&amp;#xff0c;break 语句只会停止执行最内层的循环&amp;#xff0c;不会停止所有循环。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言 break 为什么跳不出for循环", ["#include<stdio.h>", "int main()", "{", "    int i,m,n,j,a[10][10],max=0;", "    scanf(\"%d %d\",&m,&n);", "    for (i=0;i<m;i++)", "    {", "        for (j=0;j<n;j++)", "        {", "            scanf(\"%d\",&a[i][j]);", "        }", "    }", "    for (i=0;i<m;i++)", "    {", "        for (j=0;j<n;j++)", "        {", "            if (a[i][j]>max)", "            {", "                max=a[i][j];", "            }", "        }", "    }", "    printf(\"%d \",max);", "    for (i=0;i<m;i++)", "    {", "        for (j=0;j<n;j++)", "        {", "            if (a[i][j]==max)", "            {", "                printf(\"%d %d \",i,j);", "                break;//这里跳不出for循环是为什么", "\n", "        }\n    }\n}\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;[::-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["数字121从左往右读与从右往左读是一样的，这种数称为回文数。请使用for循环以及切片方法设计一个程序， 找出>=0并且<=n的全部回文数。", ["数字121从左往右读与从右往左读是一样的，这种数称为回文数。请使用for循环以及切片方法设计一个程序， 找出>=0并且<=n的全部回文数。", "\n", "输入格式:", "n", "输出格式:", "多行输出，一行一个数", "\n", "输入样例:", "13", "结尾无空行", "输出样例:", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "11", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以使用 while(!stack.empty()) 条件,取出stack中的全部数据:&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/530410849946121.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如题,为什么无法通过for循环输出stack中的所有元素?栈不是这么用的吗?", ["如题,为什么无法通过for循环输出stack中的所有元素?栈不是这么用的吗?", "如题,为什么无法通过for循环输出stack中的所有元素?栈不是这么用的吗?", "\n"]], "Tag": "程序设计"}
{"Answer": "然后我重新想了一下，好像也是可以的，不过我没有测试\r\n\r\n\r\n```\r\n var checkbox = document.getElementsByTagName('input');\r\n        var all = document.getElementById('all');\r\n        var none = document.getElementById('none');\r\n        var dis = document.getElementById('dis');\r\n        var attr = [];\r\n        for(var i = 0; i &lt; checkbox.length; i++) {\r\n            if(checkbox[i].type == 'checkbox') {\r\n                attr.push(checkbox[i]);\r\n                all.addEventListener(\"click\", function () {\r\n                    checkbox[i].checked=true;//这个checkbox[i]这么写不是很安全\r\n                });\r\n                ...\r\n                ...\r\n            }\r\n        }\r\n```", "Konwledge_Point": "for循环", "Question": ["问个很白痴的问题，为什么函数不能写在FOR循环里面", ["源代码：", "\n\n", "var checkbox = document.getElementsByTagName('input');\nvar all = document.getElementById('all');\nvar none = document.getElementById('none');\nvar dis = document.getElementById('dis');\nvar attr = [];\nfor(var i = 0; i < checkbox.length; i++) {\n    if(checkbox[i].type == 'checkbox') {\n        attr.push(checkbox[i]);\n    }\n}\nall.onclick = function() {\n    for(var j = 0; j < attr.length; j++) {\n        attr[j].checked=true;\n    }\n}\nnone.onclick = function(){\n    for(var j = 0; j < attr.length; j++) {\n        attr[j].checked=false;\n    }\n}\ndis.onclick = function(){\n    for(var j = 0; j < attr.length; j++) {\n        attr[j].checked= !attr[j].checked;\n    }\n}\n", "\n\n", "两个问题：", "\n函数为什么不能写在FOR循环里面；", "\n是否可以简化代码"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The range over the channel blocks because the channel is not closed in sq.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func sq(in &amp;lt;-chan int) &amp;lt;-chan int {\n  out := make(chan int)\n\n  go func() {\n    for number := range in {\n        out &amp;lt;- number * number\n    }\n    close(out)\n  }()\n\n  return out\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A good way to debug deadlocks like this is to send the process a SIGQUIT. The runtime dumps the stacks of all the goroutines when a SIGQUIT is received. The stack dumps will often point to the issue.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环导致死锁", ["\n\n", "I have written some code example from ", "GO Concurrency", " : ", "\n\n", "func gen(numbers ...int) <-chan int {\n    out := make(chan int)\n\n    go func() {\n        for _, number := range numbers {\n            out <- number\n        }\n        close(out)\n    }()\n\n    return out\n}\n\nfunc sq(in <-chan int) <-chan int {\n    out := make(chan int)\n\n    go func() {\n        for number := range in {\n            out <- number * number\n        }\n    }()\n\n    return out\n}\n", "\n\n", "so I tried to use above code in my main function like this :", "\n\n", "func main() {\n\n\n\n    result := sq(sq(sq(gen(1, 2, 3, 4))))\n\n    fmt.Println(<-result)\n    fmt.Println(<-result)\n    fmt.Println(<-result)\n    fmt.Println(<-result)\n\n    fmt.Println(\"-------------------\")\n\n    for channelValue := range sq(sq(sq(gen(1, 2, 3, 4)))) {\n        fmt.Println(channelValue)\n    }\n\n}\n", "\n\n", "I was confused when I run the code I got this message after the loop: ", "\n\n", "\n  ", "fatal error: all goroutines are asleep - deadlock", "\n", "\n\n", "Please help me to understand this. From what I understand is calling the ", "fmt.Prinlnt(result)", " x 4 times is the same as the for loop on ", "for channelValue := range sq(sq(sq(gen(1, 2, 3, 4))))", ". is this correct?", "\n\n", "Could please tell me why I got deadlock after the loop?", "\n    "]], "Tag": "程序设计"}
{"Answer": "public List A（）{\r\n\t  int a = 0;\r\n\t\tArrayList list = new ArrayList();\r\n\t\tfor(int i = 0; i &lt; 10; i++) {\r\n\t\tlist.Add(i);\r\n\t}\r\n\treturn list；\r\n}\r\n//最后你去这个list的值就可以了", "Konwledge_Point": "for循环", "Question": ["如何在for循环外取for里面所以赋值结果", ["int a=0;", "\n         for (int i = 0; i < 10; i++) {", "\n             a=i;", "\n        }", "\n\n", "    在for外面取得a的值0——9的所有值放在一集合里\n"]], "Tag": "程序设计"}
{"Answer": "你就不能换个变量名。。\r\n\r\n如果是和window域的还有个前缀window.xxx获取同名明白，你这个视乎是没有办法。或者再套一个{}，for的i另外其名称\r\n\r\n\r\n\r\n```\r\n var a = [];\r\nfor (let i = 0; i &lt; 3; i++) {\r\n  let ii=i;\r\n  {let i = 'abc';\r\n   a[ii] = i;}\r\n}\r\nconsole.log(a)\r\n```", "Konwledge_Point": "for循环", "Question": ["let的变量范围，for循环中值得获取", ["ES6语法中for循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。", "\n\n", "for (let i = 0; i < 3; i++) {\n  let i = 'abc';\n  console.log(i);\n}\n// abc\n// abc\n// abc\n", "\n\n", "上面代码正确运行，输出了 3 次abc。这表明函数内部的变量i与循环变量i不在同一个作用域，有各自单独的作用域。", "\n请问如何调用for循环中的i,我想要使用一个数组去接受这个参数，那岂不是不能够获取到i变量的值", "\n\n", " var a = [];\nfor (let i = 0; i < 3; i++) {\n  let i = 'abc';\n  a[i] = i;\n}\n", "\n\n", "上面代码的输出结果是一个数组：", "\n\n", "[ abc: 'abc' ]\n", "\n\n", "，那该怎么调用？？", "\n并且下面代码怎么会只输出一个结果：", "\n\n", "for (var i = 0; i < 3; i++) {\n  var i = 'abc';\n  console.log(i);\n}\n", "\n\n", "输出结果为：abc,不应该是3个abc吗？？？"]], "Tag": "程序设计"}
{"Answer": "var Cont += '  改成  var Cont 放在for循环外，Cont+=", "Konwledge_Point": "for循环", "Question": ["js 使用for循环进行字符串拼接报错 ", [" $.ajax({\n                    url:'test.json',\n                    type:'get',\n                    dataType:'json',\n                    contentType: 'application/json; charset=utf-8',\n                    success:function(data){\n                        for (var i = 0; i <= data.code; i++) {\n                            var Cont += '<div class=\\\"weiboSend\\\">' + \n                                        '<div class=\\\"weibo-detail\\\">' +\n                                            '<div class=\\\"w-face\\\">' +\n                                                '<a target=\\\"_blank\\\" href=\\\"#\\\" title=' + data.datas[i].content.name +'></a>' +\n                                            '</div>' +\n                                            '<div class=\\\"w-detail\\\">' +\n                                                '<div class=\\\"w-info\\\">' +\n                                                    '<a href=\\\"#\\\" class=\\\"w-name\\\">' + data.datas[i].content.name + '</a>' +\n                                                '</div>' +\n                                                '<div class=\\\"w-from\\\">' +\n                                                    '<a href=\\\"#\\\" title=\\\"2017-05-31 19:07\\\">'+ getLocalTime(data.datas[i].content.date) +'</a> 来至 <a href=\\\"#\\\">'+ data.datas[i].content.source +'</a>' +\n                                                '</div>' +\n                                                '<div class=\\\"w-text\\\">'+ data.datas[i].content.text +'</div>' +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\\\"weibo-handle\\\">' +\n                                            '<div class=\\\"w-handle-list w-from-handle\\\">' +\n                                                '<ul>' +\n                                                    '<li class=\\\"hover-itme\\\"><a href=\\\"#\\\"><span class=\\\"icon-star-empty\\\"> &nbsp;收藏</span></a></li>' +\n                                                    '<li class=\\\"hover-itme\\\"><a href=\\\"#\\\"><span class=\\\"icon-share\\\">'+ data.datas[i].content.forwardCount +'</span></a></li>' +\n                                                    '<li class=\\\"hover-itme\\\"><a href=\\\"#\\\"><span class=\\\"icon-comment-alt\\\">'+ data.datas[i].content.commentCount +'</span></a></li>' +\n                                                    '<li class=\\\"focus-itme\\\"><a href=\\\"#\\\"><span class=\\\"icon-thumbs-up\\\">'+ data.datas[i].content.likeCount +'</span></a></li>' +\n                                                '</ul>' +\n                                            '</div>' +\n                                        '</div>' +\n                                    '</div>';\n                        };\n\n                        $('.HomeMain').html(Cont);\n                    }\n\n上面是我的代码， data.code=10 我想的是循环输出，动态添加十条信息。 如果是单单一条的话没有问题， 但是用for循环的+=就会报错，  望大神指点迷津\n\nUncaught SyntaxError: Unexpected token +=（这个是我的报错信息）\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;return应该写在for循环外面&lt;br /&gt;注意这里的return并没有意义&amp;#xff0c;因为对list1的修改直接会改变原来列表的值&lt;br /&gt;print应该写在函数调用后面&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;list1&amp;#61; []\ndef &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;):\n    &lt;span class=\"hljs-title function_\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;&lt;/span&gt;):\n        &lt;span class=\"hljs-title function_\"&gt;list1&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;i**&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-title function_\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-title function_\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;list1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["请教一个问题,自定义了一个python函数并用for循环遍历，但是return的时候不返回结果，请专家指出哪里有错误？", ["这是我的代码", "\n", "如图所示，运行函数以后，控制台不显示任何结果", "\n", "另外经过调试，发现for循环语句只返回了一个值，没有在范围内遍历循环", "\n", "\n", "请问，是我的代码语句有问题，还是逻辑不对"]], "Tag": "程序设计"}
{"Answer": "你的addname和addage方法有问题，每次调用都会new 一个string和int对象。\r\n\r\npublic class Student {\r\n    String name[]= new String[3]; // 姓名\r\n    int age[]= new int[3]; // 年龄\r\n\r\n    public void addName(String dName,int j){ // 添加姓名的方法\r\n      \r\n        name[j] = dName;\r\n    }\r\n\r\n    public void addAge(int dage,int j){ // 添加年龄的方法\r\n      \r\n        age[j] = dage;\r\n    }\r\n}", "Konwledge_Point": "for循环", "Question": ["使用for循环来输入3个学生信息，用i来获取循环的下标然后传入数组里面，可是刚我运行了一下，只有最后一个值传入进数组了，之前输入的两个值没有传入？", ["使用for循环来输入3个学生信息，用i来获取循环的下标然后传入数组里面，可是刚我运行了一下，只有最后一个值传入进数组了，之前输入的两个值没有传入", "\n\n", "这个是属性和方法类_", "\n\n", "\n\n", "这个是测试类", "\n\n", "\n\n", "这个是运行结果", "\n\n", "\n\n", "附上我写的问题代码", "\n\n", "Student类", "\n\n", "public class Student {\n    String name[]; // 姓名\n    int age[]; // 年龄\n\n    public void addName(String dName,int j){ // 添加姓名的方法\n        name = new String[3];\n        name[j] = dName;\n    }\n\n    public void addAge(int dage,int j){ // 添加年龄的方法\n        age = new int[3];\n        age[j] = dage;\n    }\n}\n", "\n\n", "StuTest测试类", "\n\n", "public class StuTest {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Student stu = new Student();\n        for(int i = 0;i < 3;i++){\n            System.out.println(\"请输入学生姓名：\");\n            Scanner sc = new Scanner(System.in);\n            String name = sc.next();\n            System.out.println(\"请输入学生年龄：\");\n            int age = sc.nextInt();\n            stu.addName(name,i);\n            stu.addAge(age,i);\n        }\n\n        for(int j = 0;j < 3;j++){\n            System.out.println(stu.name[j]+\"\\t\"+stu.age[j]);\n        }\n    }\n\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "你使用ide开发工具启动和关闭java进程；\r\n你最终上线运行这个程序是需要使用批处理脚本启动的，不可能在现场服务器上也装一个ide开发工具控制java进程吧\r\n批处理脚本是调用带main的java类文件，即调用main函数，\r\n如果是每次启动、关闭java进程，说白了就是现场上的执行批处理脚本和kill对应的进程的过程\r\nlinux批处理脚本是xxxx.YYClass $1 $2；\r\nwindow批处理脚本是xxxx.YYClass %1 %2；\r\n除非是共享分布式用的，如果只是但进程用，每次启动传入的$1 $2或%1，%2都是一样的（也可以动态设置，根据需求来定），\r\n作为一个可控的整体java进程，应该可以通过引入main函数参数（$1 $2或%1，%2）来控制进程初始化资源，线程循环资源，销毁资源等等。\r\n不知道这样描述，能帮得上你的忙吗。", "Konwledge_Point": "for循环", "Question": ["java for循环体循环一定次数终止程序重新开始循环（不是break，就是点那个正方形的那种终止）", [" for(;;){\n                System.out.println(\"跳出来\");\n                //终止循环体,在保留aid最后一次值的基础上,程序从这个位置重新开始运行。\n        for(aid=91322;aid<=2000000;aid++){\n            q=bili.inputav(aid,page);\n            j1++;\n\n            System.out.println(aid+\"连续扫描\"+j1+\"次\"+\"搜索到了\"+pp+\"个视频\");\n            if(j1==100)\n                {aid=aid-90;\n                j1=0;\n            break;//用break并不能达到我想要的效果，必须是手动点终止和改aid变量初始值，再运行循环体才有新的变化。\n            }j\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "index=\"menuItemIndex\" 前加冒号   : index=\"menuItemIndex\"\r\n ![图片说明](https://img-ask.csdn.net/upload/201911/25/1574668556_175477.jpg)", "Konwledge_Point": "for循环", "Question": ["element-ui中的menu菜单改为动态v-for循环生成后选中状态失效问题", ["问题如图中显示，选中一个菜单项，其他菜单项没有取消选中状态", "\n\n", "<el-menu default-active='0' v-for=\"(menuItemName, menuItemIndex) in menuItemNames\" :key=\"menuItemIndex\">\n  <el-menu-item index=\"menuItemIndex\">\n    <i class=\"el-icon-menu\"></i>\n    <span slot=\"title\" @click=\"addTab(menuItemName, menuItemIndex)\">{{menuItemName}}</span>\n  </el-menu-item>\n</el-menu>\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "for循环的使用是这样的，for(初始表达式;循环条件;增值表达式){语句块}如果只执行一次就退出，可能是你的循环条件不对，或者在语句块中加入了break语句，这样的话就算你前面都对程序也只执行一次就跳出循环了。", "Konwledge_Point": "for循环", "Question": ["c++中为什么for循环不能只能执行for的初始值，执行完后就直接退出，不能执行下一次。就等于没有循环。", ["c++中为什么for循环不能只能执行for的初始值，执行完后就直接退出，不能执行下一次。就等于没有循环。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;ret &amp;#61; []\nfor i in range(cols): \n     lr &amp;#61;LinearRegression() \n     f&amp;#61;lr.fit(x[i*ys:i*ys&amp;#43;xs],y[i*ys:i*ys&amp;#43;xs]) \n     p&amp;#61;lr.predict(test[xs&amp;#43;i*ys:(xs&amp;#43;ys)&amp;#43;i*ys]) \n     pp&amp;#61; [j for item in p for j in item] \n     ret.extend(pp)\n     \nprint(ret)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这样行不行 &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Python for循环结果转换成一列", ["\n\n", "如图，for循环后的结果好像不在同一列里，要怎么把它变成[1,2,3,4,5……]这样一列的形式呀？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以这样&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;&amp;#61;[]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;):\n    with &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;saif_{num2str[i]}.txt&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf&amp;#61;8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;.readlines()\n        &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Python中如何用for循环实现txt文件循环open", ["在matlab中，txt循环读取可以使用字符和num2str结合。", "for N=1:10", "a=load(['saif_',num2str(N),'.txt']);", "end", "请问同样的功能在python中应该怎么写，怎么实现", "With open中该怎么写"]], "Tag": "程序设计"}
{"Answer": "```\r\npublic List&lt;List&lt;UserOrder&gt;&gt; findCat(){\r\n        //查询一级下线\r\n        //   int popularizeId = (int) tokenService.getAuthentication().get( \"popularizeId\" );//获取分销推广id\r\n        int popularizeId = 531571277;//获取分销推广id\r\n        EntityWrapper&lt;User&gt; userEntityWrapper = new EntityWrapper&lt;&gt;(  );\r\n        userEntityWrapper.where( \"PARENT_ID={0}\",popularizeId );\r\n        List&lt;User&gt; userList = webUsersMapper.selectList( userEntityWrapper );\r\n        List&lt;List&lt;UserOrder&gt;&gt; userOrderList = new ArrayList&lt;List&lt;UserOrder&gt;&gt;();\r\n        for(User user : userList){\r\n            List&lt;UserOrder&gt; userOrder = new ArrayList&lt;UserOrder&gt;();\r\n            Long userId = user.getId();//获得用户id\r\n            System.out.println(\"用户id\"+ userId );\r\n            EntityWrapper&lt;UserOrder&gt; userOrderEntityWrapper = new EntityWrapper&lt;&gt;(  );\r\n            userOrderEntityWrapper.where( \"UID={0}\" ,userId);\r\n            webUserOrderMapper.selectList( userOrderEntityWrapper );\r\n            userOrder = webUserOrderMapper.selectList( userOrderEntityWrapper );\r\n            userOrderList.add(userOrder);\r\n        }\r\n        return userOrderList;\r\n    }\r\n```", "Konwledge_Point": "for循环", "Question": ["JAVA如果把FOR循环数据取出来", ["我现在这样写之后获取到最后一条数据", "\n请问我该如果修改，才可以把全部数据循环出来", "\n\n", "public List<UserOrder> findCat(){\n        //查询一级下线\n     //   int popularizeId = (int) tokenService.getAuthentication().get( \"popularizeId\" );//获取分销推广id\n        int popularizeId = 531571277;//获取分销推广id\n        EntityWrapper<User> userEntityWrapper = new EntityWrapper<>(  );\n        userEntityWrapper.where( \"PARENT_ID={0}\",popularizeId );\n        List<User> userList = webUsersMapper.selectList( userEntityWrapper );\n        List<UserOrder> userOrder = null;\n        for(User user : userList){\n            Long userId = user.getId();//获得用户id\n            System.out.println(\"用户id\"+ userId );\n            EntityWrapper<UserOrder> userOrderEntityWrapper = new EntityWrapper<>(  );\n            userOrderEntityWrapper.where( \"UID={0}\" ,userId);\n            webUserOrderMapper.selectList( userOrderEntityWrapper );\n            userOrder = webUserOrderMapper.selectList( userOrderEntityWrapper );\n        }\n\n        return userOrder;\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 那就 循环的时候 判断一下 index 下标 是 2的 倍数的 就 在 其这里 加一条数据  &lt;/p&gt;\n&lt;p&gt;splice 可以实现 &lt;a href=\"https://www.runoob.com/jsref/jsref-splice.html\" id=\"textarea_1655882095657_1655882246715_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.runoob.com/jsref/jsref-splice.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["微信小程序for循环，每隔几条数据就额外插入一条新数据", ["微信小程序我通过分页加载获取了1000条数据通过for循环显示到wxml页面里面，现在我想在wxml页面显示时每隔两条数据插入一条其他view组件，如何实现？"]], "Tag": "程序设计"}
{"Answer": "使用  arr.pop() 一次从尾部弹出一个\r\n使用 arr.shift() 一次从头部弹出一个", "Konwledge_Point": "for循环", "Question": ["js在for循环遍历数组怎么把数字遍历一个使用一个 直到遍历完成？", ["for (let i = 0; i < arr.length; i++) {", "\n\n", "            console.log(arr[i]);\n\n\n        }\n                    这样直接遍历直接就出来九个了 。。。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;import turtle  \nturtle&lt;span class=\"hljs-selector-class\"&gt;.color&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.fillcolor&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.begin_fill&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):    \n    turtle&lt;span class=\"hljs-selector-class\"&gt;.forward&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;) \n    turtle&lt;span class=\"hljs-selector-class\"&gt;.left&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.end_fill&lt;/span&gt;()\n\nturtle&lt;span class=\"hljs-selector-class\"&gt;.penup&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.goto&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.color&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.pendown&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.fillcolor&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.begin_fill&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.forward&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.left&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.end_fill&lt;/span&gt;()\n\nturtle&lt;span class=\"hljs-selector-class\"&gt;.penup&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.goto&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.pendown&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.color&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;green&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.fillcolor&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.begin_fill&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.forward&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.left&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.end_fill&lt;/span&gt;()\n\nturtle&lt;span class=\"hljs-selector-class\"&gt;.penup&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.goto&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.pendown&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.color&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.fillcolor&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;green&amp;#34;&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.begin_fill&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.forward&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\n    turtle&lt;span class=\"hljs-selector-class\"&gt;.left&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\nturtle&lt;span class=\"hljs-selector-class\"&gt;.end_fill&lt;/span&gt;()\nturtle&lt;span class=\"hljs-selector-class\"&gt;.done&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["如何用python的turtle库画四个正方形（for循环）", ["如何用python的turtle库画[图片]四个正方形[图片]（for循环）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;range()后少两个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;for &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;):\n    for j in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i*j)\n\n输出&amp;#xff1a;\n&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;选C&lt;br /&gt;for i in range (1,3)  &amp;#61;&amp;gt; i&amp;#61;1,2&lt;br /&gt;for j in range (2,5) &amp;#61;&amp;gt; j&amp;#61;2,3,4&lt;br /&gt;i&amp;#61;1时&amp;#xff1a; i&lt;em&gt;j&amp;#61;2,3,4&lt;br /&gt;i&amp;#61;2时&amp;#xff1a; i&lt;/em&gt;j&amp;#61;4,6,8&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/253653380046118.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["下列for循环执行后，输出结果的最后，求解🙏🏻", ["下列for循环执行后，输出结果的最后", "一行是", "for i in range (1,3)", "for j in range (2,5)", "print(i*j)", "A.2", "B.6", "C.8", "D.15"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;data中定义过contents没有&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue中v-for循环无法显示列表数据", ["vue3接收从后端返回数据之后将返回的列表赋给data中的contents列表，在html中用v-for循环呈现列表内容失败", "javascript中mounted获取后端返回值并给contents列表赋值的函数如下", "\n", "getAllArticle(", "1", ")\n      .then(res ", "=", "> {\n        this.contents ", "=", " res.data", ";", "\n        console.log(this.contents)", ";", "\n      })\n      .catch(() ", "=", "> {})", ";", "\n\n", "\n", "html段中v-for循环显示contents中各属性的值", "\n", "<", "div", " ", "class", "=", "\"box\"", " ", "v-for", "=", "\"(content, index) in contents\"", " ", ":key", "=", "\"index\"", ">", "\n            ", "<", "article", " ", "class", "=", "\"media\"", ">", "\n              ", "<", "figure", " ", "class", "=", "\"media-left\"", ">", "\n                ", "<", "p", " ", "class", "=", "\"image is-64x64\"", ">", "\n                  ", "<", "img", "\n                    ", ":src", "=", "\"require(`../../assets/${content.user.userImg}`)\"", "\n                    ", "class", "=", "\"size\"", "\n                  />", "\n                ", "</", "p", ">", "\n              ", "</", "figure", ">", "\n              ", "<", "div", " ", "class", "=", "\"media-content\"", ">", "\n                ", "<", "div", " ", "class", "=", "\"content\"", ">", "\n                  ", "<", "p", ">", "\n                    ", "<", "strong", ">", "发帖人用户名:", "{{ ", "content.user.userName", " }}", "</", "strong", ">", "\n\n                    ", "<", "br", " />", "\n                    发帖标题:", "{{ ", "content.article.artTitle", " }}", "\n                  ", "</", "p", ">", "\n                ", "</", "div", ">", "\n                ", "<", "nav", " ", "class", "=", "\"level is-mobile\"", ">", "\n                  ", "<", "div", " ", "class", "=", "\"level-left\"", ">", "\n                    ", "<", "a", " ", "class", "=", "\"level-item\"", ">", "\n                      ", "<", "span", " ", "class", "=", "\"icon is-small\"", ">", "\n                        ", "<", "i", " ", "class", "=", "\"fas fa-comment-dots\"", ">", "</", "i", ">", "\n                      ", "</", "span", ">", "\n                      ", "{{ ", "content.article.artComNum", " }}", "\n                    ", "</", "a", ">", "\n\n                    ", "<", "a", " ", "class", "=", "\"level-item\"", ">", "\n                      ", "<", "span", " ", "class", "=", "\"icon is-small\"", ">", "\n                        ", "<", "i", " ", "class", "=", "\"fas fa-heart\"", ">", "</", "i", ">", "\n                      ", "</", "span", ">", "\n                      ", "{{ ", "content.article.artLikeNum", " }}", "\n                    ", "</", "a", ">", "\n                  ", "</", "div", ">", "\n                ", "</", "nav", ">", "\n              ", "</", "div", ">", "\n              ", "<", "div", " ", "class", "=", "\"media-right\"", ">", "\n                ", "<", "a", " ", "class", "=", "\"navbar-item\"", " ", "slot", "=", "\"trigger\"", " ", "role", "=", "\"button\"", ">", "\n                  ", "<", "b-button", " ", "type", "=", "\"is-info\"", " ", "outlined", " @", "click", "=", "\"detail(index)\"", "\n                    >", "查看详情</b-button\n                  >\n                ", "</", "a", ">", "\n              ", "</", "div", ">", "\n            ", "</", "article", ">", "\n          ", "</", "div", ">", "\n\n", "\n", "\n", "浏览器中运行，控制台输出contents内容如下", "\n", "\n", "\n", "\n", "页面无法显示contents中的内容", "\n", "\n", "请问是哪里出了问题，该怎么解决。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for i&amp;#61;1:x吧&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么matlab中for循环只输出最后一次循环的值", ["我想用matlab批量读取文件夹内的所有图片，最开始我计划使用dr来获取文件夹下图片的名称然后读取，但是那样会报错没有权限。于是我计划创建一个单独的数组来储存每个文件的路径，代码如下", "\n", "file1", " = dir(", "'images\\neg\\*.jpg'", ");\n ", "x", " = length(file1);\n ", "fileNames1", " = strings(", "1", ",x);\n ", "for", " i = x\n    fileNames1(i) = [file1(i).folder,", "'\\',file1(i).name];\n end", "\n", "\n", "但是在这里我发现循环只储存了最后一次的结果，前面的都没存进去。我测试了一下是否是循环的问题，发现换成while之后也会出现相同的问题。", "\n", "希望有人能告知我为何会出现这样的问题以及改如何解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先呢&amp;#xff0c;你提到了返回值&amp;#xff0c;这里没定义函数&amp;#xff0c;就不存在返回值的&lt;br /&gt;你是想这样&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;l&amp;#61;[]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; number &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; numbers:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;1:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;1st&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;1st&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;2:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;2nd&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;2nd&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;3:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;3th&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;3th&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(str(number)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;th&amp;#39;&lt;/span&gt;)\n        l.append(str(number)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;th&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["如何将for循环的返回值，输入一个列表", ["如何将for循环的返回值，输入一个列表", "\n", "numbers=[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "9", ",", "8", "]\n\nnumbers.", "sort", "()\n\n", "for", " ", "number", " in numbers:\n    ", "if", " ", "number", "==", "1", ":\n        ", "print", "(", "'1st'", ")\n    ", "if", " ", "number", "==", "2", ":\n        ", "print", "(", "'2nd'", ")\n    ", "if", " ", "number", "==", "3", ":\n        ", "print", "(", "'3th'", ")\n    ", "else", ":\n        ", "print", "(str(", "number", ")+", "'th'", ")\n", "1", "th", "\n", "2", "nd\n", "2", "th", "\n", "3", "th", "\n", "4", "th", "\n", "5", "th", "\n", "6", "th", "\n", "7", "th", "\n", "8", "th", "\n", "9", "th", "\n", "\n", "返回值1st，2nd，3th，输入到一个list中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff01;可以这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; \n&lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt;(i&amp;lt;&amp;#61;size(s,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt;(j&amp;lt;&amp;#61;size(s,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;total&lt;/span&gt;(j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; total(j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; s{j,i};\n&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt; &amp;#61; j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt; &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["请问MATLAB中这里的for循环怎么改成while循环", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你绑定的都是一个值啊。 可以用楼上的方法 data.resource2&amp;#61;[[xxx],[xxx] ...]然后绑定就是 data.resource2[index]  .&lt;/p&gt;\n&lt;p&gt;你的 v-for&amp;#61;&amp;#34;(count,index) in 3&amp;#34;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环出多个单选框，但选中的时候是一起变的，怎么让他们自己变自己的呀", ["朋友们，用for循环出来了3组，但是这样的话，所有的单选框选中是一起变的，那个model不知道怎么解决，变成不同的值", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "ID浏览器有get缓存，改为post请求或者url加时间戳\r\n\r\n\r\n\r\n```\r\n req.open(\"GET\", \"b.jsp?id=\" + id +'&amp;'+new Date().getTime(), \"false\"); \r\n```", "Konwledge_Point": "for循环", "Question": ["关于ajax的问题，for循环部署的链接只能点击一次", ["再学习ajax的时候遇到一点问题，因为不了解ajax的原理所以一直没搞明白。", "\n\n", "这是ajax的代码，", "\n\n", " <script type=\"text/javascript\">\n    var req = null; \n    function test(id) { \n            if (window.XMLHttpRequest){\n                    req=new XMLHttpRequest();\n                }\n                else{\n                    req=new ActiveXObject(\"Microsoft.XMLHTTP\");\n                }\n            req.open(\"GET\", \"b.jsp?id=\" + id , \"false\"); \n            req.send(null); \n    } \n\n</script>    \n", "\n\n", "主页是用for循环写的10个按钮", "\n\n", " <%\n    for(int i=0;i<10;i++)\n    {%>\n        <button  onclick=\"test(<%=i%>)\">第<%=i %>个按钮</button>\n        <br/>\n    <%}%>\n", "\n\n", "b.jsp在控制台显示。", "\n\n", " <% \n        String id = request.getParameter(\"id\"); \n        System.out.println(\"id:\"+id);\n%>\n", "\n\n", "但是第二次点就没反应了，这是什么原因呢？该如何解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;感觉是变量i在栈里被一直重置为1了&amp;#xff0c;导致change第一个for 无限循环了&amp;#xff08;i &amp;lt;&amp;#61; x&amp;#xff09;i被重置1&amp;#xff0c;条件永远成立。猜测的&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c++，有关for循环，为什么这个最后会变成死循环", ["问题遇到的现象和发生背景", "\n", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "line1", "(", "int", " x,", "char", " y)", "\n", "{\n    ", "int", " i = ", "1", ";\n    ", "for", " (i;i <= x;i++)\n    {\n        cout << y;\n    }\n    cout << endl;\n}\n", "void", " ", "line2", "(", "int", " x, ", "char", " y)", "\n", "{\n    ", "int", " i = ", "1", ";\n    ", "for", " (;i <= x;i++)\n    {\n        ", "while", " (i >= ", "1", " && i < (x / ", "2", " + ", "1", "))\n        {\n            cout << ", "\" \"", ";\n        }\n        ", "while", " (i = (x / ", "2", " + ", "1", "))\n        {\n            cout << y;\n        }\n\n    }\n    cout << endl;\n}\n", "void", " ", "change", "(", "int", " x, ", "char", " y)", "\n", "{\n    ", "int", " i ;\n    ", "for", " (i=", "1", ";i <= x;i++)\n    {\n        ", "while", " (i == ", "1", ")\n        {\n            ", "line1", "(x, y);\n        }\n        ", "while", " ((i > ", "1", ") && (i < x / ", "2", " + ", "1", "))\n        {\n            ", "line2", "(x, y);\n        }\n        ", "while", " (i == x / ", "2", " + ", "1", ")\n        {\n            ", "line1", "(x, y);\n        }\n        ", "while", " ((i > x / ", "2", " + ", "1", ") && (i < x))\n        {\n            ", "line2", "(x, y);\n        }\n        ", "while", " (i = x)\n        {\n            ", "line1", "(x, y);\n        }\n        ", "while", "(i > x)\n        {\n            ", "break", ";\n        }\n\n    }\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a=", "4", ";\n    ", "char", " b;\n    cout << ", "\"汉字以多少点阵方式显示，16 * 16输入16, 32 * 32输入32，依次类推:\"", " << endl;\n    cin >> a;\n    cout << ", "\"请输入构成汉字的基本字符号是:\"", " << endl;\n    cin >> b;\n    ", "change", "(a, b); \n}\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "文章作者：Slyar 文章来源：Slyar Home (www.slyar.com) 转载请注明，谢谢合作。\r\n\r\n\r\n今天有同学问C语言中for循环里那个 i&amp;#43;&amp;#43; 和 &amp;#43;&amp;#43;i 是否有区别，我告诉他在for循环中是没有区别的，现在具体说一下 i&amp;#43;&amp;#43; 和 &amp;#43;&amp;#43;i 的区别。\r\n\r\n\r\n我们先用while语句写一下 for(i=1;i&amp;......&lt;br/&gt;&lt;strong&gt;答案就在这里：&lt;/strong&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/justheretobe/article/details/7828642'&gt;for循环中i++与++i&lt;/a&gt;&lt;br/&gt;----------------------你好，人类，我是来自CSDN星球的问答机器人小C，以上是依据我对问题的理解给出的答案，如果解决了你的问题，望采纳。", "Konwledge_Point": "for循环", "Question": ["for循环中i变量 i++与++i", ["此时的先加和后加会不会影响到for循环 应该是没有影响把？ 因为我做了测试 代码如下", "\n\n", "# include <stdio.h>\n# include <stdlib.h>\n# include <windows.h>\nint main ()\n\n{   int sum = 0;\n    int i ;\n\n\n    printf(\"(i++)后加的结果为\\n\");\n    for(i =1;i<=100;i++)\n    {\n        sum=sum+i;\n        printf(\"i=%d\\n\",i);\n    }\n    printf(\"退出循环后i的值为:%d\\n\",i);\n    printf(\"------------------------\\n\"); \n    printf(\"(++i)先加的结果为\"); \n\n    sum=0;\n    for(i=0;i<=100;++i)\n    {\n        sum=sum+i;\n        printf(\"i=%d\\n\",i); \n    }\n    printf(\"退出循环后i的值为:%d\\n\",i); \n    return 0;\n} \n\n\n", "\n\n", "运行结果:", "\n(i++)后加的结果为", "\ni=1", "\ni=2", "\ni=3", "\ni=4", "\ni=5", "\ni=6", "\ni=7", "\ni=8", "\ni=9", "\ni=10", "\ni=11", "\ni=12", "\ni=13", "\ni=14", "\ni=15", "\ni=16", "\ni=17", "\ni=18", "\ni=19", "\ni=20", "\ni=21", "\ni=22", "\ni=23", "\ni=24", "\ni=25", "\ni=26", "\ni=27", "\ni=28", "\ni=29", "\ni=30", "\ni=31", "\ni=32", "\ni=33", "\ni=34", "\ni=35", "\ni=36", "\ni=37", "\ni=38", "\ni=39", "\ni=40", "\ni=41", "\ni=42", "\ni=43", "\ni=44", "\ni=45", "\ni=46", "\ni=47", "\ni=48", "\ni=49", "\ni=50", "\ni=51", "\ni=52", "\ni=53", "\ni=54", "\ni=55", "\ni=56", "\ni=57", "\ni=58", "\ni=59", "\ni=60", "\ni=61", "\ni=62", "\ni=63", "\ni=64", "\ni=65", "\ni=66", "\ni=67", "\ni=68", "\ni=69", "\ni=70", "\ni=71", "\ni=72", "\ni=73", "\ni=74", "\ni=75", "\ni=76", "\ni=77", "\ni=78", "\ni=79", "\ni=80", "\ni=81", "\ni=82", "\ni=83", "\ni=84", "\ni=85", "\ni=86", "\ni=87", "\ni=88", "\ni=89", "\ni=90", "\ni=91", "\ni=92", "\ni=93", "\ni=94", "\ni=95", "\ni=96", "\ni=97", "\ni=98", "\ni=99", "\ni=100", "\n\n", "退出循环后i的值为:101", "\n\n", "(++i)先加的结果为i=0", "\ni=1", "\ni=2", "\ni=3", "\ni=4", "\ni=5", "\ni=6", "\ni=7", "\ni=8", "\ni=9", "\ni=10", "\ni=11", "\ni=12", "\ni=13", "\ni=14", "\ni=15", "\ni=16", "\ni=17", "\ni=18", "\ni=19", "\ni=20", "\ni=21", "\ni=22", "\ni=23", "\ni=24", "\ni=25", "\ni=26", "\ni=27", "\ni=28", "\ni=29", "\ni=30", "\ni=31", "\ni=32", "\ni=33", "\ni=34", "\ni=35", "\ni=36", "\ni=37", "\ni=38", "\ni=39", "\ni=40", "\ni=41", "\ni=42", "\ni=43", "\ni=44", "\ni=45", "\ni=46", "\ni=47", "\ni=48", "\ni=49", "\ni=50", "\ni=51", "\ni=52", "\ni=53", "\ni=54", "\ni=55", "\ni=56", "\ni=57", "\ni=58", "\ni=59", "\ni=60", "\ni=61", "\ni=62", "\ni=63", "\ni=64", "\ni=65", "\ni=66", "\ni=67", "\ni=68", "\ni=69", "\ni=70", "\ni=71", "\ni=72", "\ni=73", "\ni=74", "\ni=75", "\ni=76", "\ni=77", "\ni=78", "\ni=79", "\ni=80", "\ni=81", "\ni=82", "\ni=83", "\ni=84", "\ni=85", "\ni=86", "\ni=87", "\ni=88", "\ni=89", "\ni=90", "\ni=91", "\ni=92", "\ni=93", "\ni=94", "\ni=95", "\ni=96", "\ni=97", "\ni=98", "\ni=99", "\ni=100", "\n退出循环后i的值为:101"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你首先要确定&amp;#xff0c;你的objfunc函数返回的是函数&amp;#xff0c;还是你函数的计算结果。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python中使用定义一个函数，使用for循环return一个带参数的表达式，然后把这个表达式给其他包做最优化", ["问题遇到的现象和发生", "\n", "背景", "我想用Python的for循环建立一个类似表示这样累加的表达式，然后return出来交给其他算法包计算全局最小值", "\n", "问题相关代码，请勿粘贴截图", "\n", "from", " scipy.optimize ", "import", " differential_evolution,NonlinearConstraint\n", "import", " openpyxl\n", "import", " numpy ", "as", " np\n\n", "# 获取excel中注采数据", "\n", "def", " ", "get_injector_data", "():\n    workbook = openpyxl.load_workbook(", "r\"C:\\Users\\gongxl3\\Desktop\\渗流优势通道评价方法研究\\CB-B01H1_注采曲线.xlsx\"", ")\n    book_sheet = workbook[", "\"Sheet1\"", "]\n    columns_all = book_sheet.columns\n    data = []\n    columns11 = ", "list", "(columns_all)[", "10", "]\n    ", "for", " value ", "in", " columns11:\n        data.append(value.value)\n    data2 = data[", "2", ":]\n    ", "return", " data2\n\n", "def", " ", "get_producer_data1", "():\n    workbook = openpyxl.load_workbook(", "r\"C:\\Users\\gongxl3\\Desktop\\渗流优势通道评价方法研究\\CB-A01H1_注采曲线.xlsx\"", ")\n    book_sheet = workbook[", "\"Sheet1\"", "]\n    columns_all = book_sheet.columns\n    data = []\n    columns21 = ", "list", "(columns_all)[", "21", "]\n    ", "for", " value ", "in", " columns21:\n        data.append(value.value)\n    data2 = data[", "2", ":]\n    ", "return", " data2\n\n\n", "# 定义目标函数", "\n", "def", " ", "objfunc", "(", "lp, tp, lij, tij, injector_data, producer_data1", "):\n    inj = injector_data; pro = producer_data1\n    obj_sum = ", "0", "\n    obj_sum_square = ", "0", "\n    ", "for", " n ", "in", " ", "range", "(", "len", "(pro)):\n        tij_ = ", "0", "\n        ", "for", " m ", "in", " ", "range", "(n):\n            t = (", "1", "/tij) * np.exp((m - n)/tij) * inj[m]\n            tij_ = t + tij_\n        pro_eval = lp * np.exp(-n / tp) + lij * tij_\n        obj_sum = obj_sum + pro_eval\n        obj_sum_square = (pro[n] - obj_sum) ** ", "2", " + obj_sum_square\n    ", "return", " obj_sum_square\n\n", "def", " ", "main", "():\n    injector_data = get_injector_data()\n    producer_data1 = get_producer_data1()\n    ", "# lp, tp, lij, tij", "\n    lp_min, lp_max = ", "0", ", ", "2", "\n    tp_min, tp_max = ", "0", ", ", "4", "\n    lij_min, lij_max = ", "0", ", ", "2", "\n    tij_min, tij_max = ", "0", ", ", "4", "\n    bounds = [[lp_min, lp_max], [tp_min, tp_max], [lij_min, lij_max], [tij_min, tij_max]]\n    objfunc1 = objfunc(", "'lp'", ", ", "'tp'", ", ", "'lij'", ", ", "'tij'", ", injector_data, producer_data1)\n    result = differential_evolution(objfunc1, bounds)\n\n    ", "# summarize the result", "\n    ", "print", "(", "'Status : %s'", " % result[", "'message'", "])\n    ", "print", "(", "'Total Evaluations: %d'", " % result[", "'nfev'", "])\n    ", "# evaluate solution", "\n    solution = result[", "'lp'", ", ", "'tp'", ", ", "'lij'", ", ", "'tij'", "]\n    evaluation = objfunc1(solution)\n    ", "print", "(", "'Solution: f(%s) = %.5f'", " % (solution, evaluation))\n\n", "\n", "lp, tp, lij, tij，是想要return出来的表达式中的四个未知数，injector_data, producer_data1是两个列表（for循环就是循环这两个列表的值），我知道我代码的问题是str和int不能做算数运算，但是我不知道怎么去改（原谅我刚学两个月python）", "\n", "运行结果及报错内容", "\n", "TypeError: unsupported operand type(s) for /: 'int' and 'str'", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "def", " objective(v):\n    ", "x", ", y = v\n    ", "return", " -", "20", ".", "0", " * exp(-", "0", ".", "2", " * sqrt(", "0", ".", "5", " * (x**", "2", " + y**", "2", "))) - exp(", "0", ".", "5", " * (cos(", "2", " * pi * x) + cos(", "2", " * pi * y))) + e + ", "20", "\n", "\n", "我想要得到这个return中一样的函数，但这个函数是一个比较确定的，我想得到的那个函数需要通过传入两个列表建立，求帮帮忙"]], "Tag": "程序设计"}
{"Answer": "使用http://jsrun.net/6YXKp/edit\r\n\r\nhtml内容替换如下：\r\n\r\n```\r\n&lt;div id=\"app\"&gt;\r\n&lt;div v-for=\"(option,index) in a\"&gt;\r\n&lt;input :id='option.value' type=\"checkbox\" :checked=\"option.checked\"/&gt;\r\n&lt;label&gt;{{option.value}}&lt;/label&gt;\r\n&lt;/div&gt; \r\n\r\n&lt;input type='button' value='delete' @click='test()'/&gt;\r\n&lt;/div&gt;\r\n```\r\n\r\njs内容替换如下:\r\n\r\n```\r\nvar app = new Vue({\r\n  el: '#app',\r\n  data() {\r\n    return {     \r\n      a:[{ value:'a',checked:true  },\r\n      { value:'b',checked:false  },\r\n      { value:'c',checked:false  }\r\n      ]\r\n    }\r\n  }, \r\n  methods: {\r\n    test:function(){             \r\n        app.a.splice(0,1);            \r\n        console.log(app.a);\r\n    }\r\n  }\r\n});\r\n```", "Konwledge_Point": "for循环", "Question": ["vue的问题，用v-for循环checkbox,而其checked不用v-model绑定数组，在选中一项后删除该项,会自动勾选后一项是怎么回事？", ["比如说一个数组", "\nlet a= ['aaaa','bbb','ccc']", "\n然后 ", "\n\n", "<input type=\"checkbox\" v-for=\"item in a\"/>\n", "\n\n", "a", "b", "c", "\n我选中a项", "\n然后我使用a.splice(0,1)删除第一项,则会变成", "a", "b", "c", "\n按下面那位大哥的代码。。。还是会这样啊", "\n点击删除按钮后（代码更改splice(0,1)）之后,变成", "这样子了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环&amp;#xff0c;第一次c &amp;#61; getchar()&amp;#xff0c;c的值是1&amp;#xff0c;然后执行getchar() !&amp;#61; &amp;#39;#&amp;#39;&amp;#xff0c;这里读取了2&amp;#xff0c;然后执行putchar(c)&amp;#xff0c;输出1&lt;br /&gt;然后执行for循环的第三个参数 c&amp;#61;getchar()&amp;#xff0c;此时读取3&amp;#xff0c;c&amp;#61;‘3’&amp;#xff0c;然后执行getchar() !&amp;#61;&amp;#39;#&amp;#39;&amp;#xff0c;读取‘4’&amp;#xff0c;执行putchar(c)&amp;#xff0c;输出3&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请问关于for循环里的getchar", ["想问一下该题为什么输入12345#输出的是13有没有人能解答一下过程"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;集合之间并没有关联。&lt;br /&gt;是添加的数据相同而已。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java两个for循环add不同的集合为什么第二个集合会把第一个集合数据搬过来", ["两个String类型的集合", "\n", "\n", "两个数据库都按过来6个数据,当personIdList的for循环结束以后开始执行emcodeList的for循环的时候personIdList 第零位数据被拿到了emcodeList集合的第零位是怎么回事?"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;As mentioned in &lt;a href=\"https://github.com/golang/go/wiki/Range\" rel=\"noreferrer\"&gt;Range Clauses&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;A range clause provides a way to iterate over a array, slice, string, map, or channel.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you want to iterate over an &lt;code&gt;[]string&lt;/code&gt;, you need &lt;code&gt;range&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;A &lt;a href=\"https://golang.org/ref/spec#For_statements\" rel=\"noreferrer\"&gt;For statement&lt;/a&gt; doesn't always use range.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ForStmt = \"for\" [ Condition | ForClause | RangeClause ] Block .\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You have:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;ul&gt;\n  &lt;li&gt;&lt;p&gt;In its simplest form, a \"&lt;code&gt;for&lt;/code&gt;\" statement specifies the repeated execution of a block as long as a boolean condition evaluates to true&lt;/p&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;p&gt;A \"for\" statement with a &lt;code&gt;ForClause&lt;/code&gt; is also controlled by its condition, but additionally it may specify an init and a post statement, such as an assignment, an increment or decrement statement&lt;/p&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;p&gt;A \"for\" statement with a \"range\" clause iterates through all entries of an array, slice, string or map, or values received on a channel. For each entry it assigns iteration values to corresponding iteration variables if present and then executes the block. &lt;/p&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["Go中的for循环构造与range关键字之间的区别", ["\n\n", "Consider the following code which just prints all the ENV vars", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    for i, env := range os.Environ() {\n        fmt.Println(i, env)\n    }\n}\n", "\n\n", "Here, os.Environ() is supposed to return ", "array of strings([] string", "), to loop over it. I need to to use range keyword & also for loop. Question is:", "\n\n", "\n", "Why are both for & range required? is it possible to use for loop for this as ", "[]string", " is already an array & we can iterate over arrays right?", "\n", "In the above code what does ", "range", " do? and what does ", "for", " loop does?", "\n", "\n", "Sorry if this question is too stupid, I am just starting with Go", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;video标签加controls属性了吗&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue指令v-for循环video标签后视频无法播放,怎么解决。", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "无法播放，有什么解决 方法吗", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt; &amp;#61; []\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(i)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(len(&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;)):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;[i]&lt;span class=\"hljs-symbol\"&gt;%&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;[i] &amp;#61; &amp;#39;*&amp;#39;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["利用for 循环和range函数，将1-30之间的数字一次添加到一个列表中，并循环这个列表，将能被3整除的数改成*", ["利用for 循环和range函数，将1-30之间的数字一次添加到一个列表中，并循环这个列表，将能被3整除的数改成*"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-attribute\"&gt;sun&lt;/span&gt; &amp;#61; 0;\n&lt;span class=\"hljs-attribute\"&gt;fact&lt;/span&gt; &amp;#61; 1;\n&lt;span class=\"hljs-attribute\"&gt;for i&lt;/span&gt;&amp;#61;1:10\nfor j&amp;#61;1:10\nfact &amp;#61; fact*j;\n&lt;span class=\"hljs-attribute\"&gt;end\nsum&lt;/span&gt; &amp;#61; sum&amp;#43;fact;\n&lt;span class=\"hljs-attribute\"&gt;fact&lt;/span&gt;&amp;#61;1;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["以 for 循环求 1！+2！+…+10!的值。（使用matlab）", ["以 for 循环求 1！+2！+…+10!的值。（使用matlab）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n% 读取数据\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; load(&amp;#39;&lt;span class=\"hljs-title\"&gt;filename&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;mat&amp;#39;&lt;/span&gt;);&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;; % 如果 .mat 文件中的数据保存在名为 &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; 的变量中&lt;/span&gt;\n\n% 初始化结果矩阵\n&lt;span class=\"hljs-title\"&gt;result&lt;/span&gt; &amp;#61; zeros(&lt;span class=\"hljs-number\"&gt;366&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n\n% 组合数据\n&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;366&lt;/span&gt;\n    result(i, :) &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;i&lt;/span&gt;:&lt;span class=\"hljs-title\"&gt;i&lt;/span&gt;&amp;#43;3)&amp;#39;;&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["matlab  for循环的结果输出矩阵", ["在matlab中，有一个366个数据为一列的mat文件", "如何将这个文件满足以下条件组成一个366×4的矩阵", "1，从第一个数据开始循环，第1   2  3  4  数据为一组", "2，第二组从第二个数据开始，2    3     4      5为一组，", "以此类推生成一个366×4的矩阵", "请问各位这个程序应该如何编写"]], "Tag": "程序设计"}
{"Answer": "没有预分配空间，且调用格式出错", "Konwledge_Point": "for循环", "Question": ["matlab列数组在for循环中的一个小问题", ["exn是一个一维列数组", "\n\n", "b=exn;", "\na=114;", "\nfor i=0:1:687:", "\n            for j=1:149:", "\n                        a=a-1+j;", "\n                        b(a)=b(a)*(-1)^i;", "\n            end", "\nend", "\n\n", "最后报错", "\nerror in untitled", "\nb(a)=b(a)*(-1)^i;", "\n请问下各位了解的，问题出在哪里呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你微信多少&amp;#xff0c;我加你一下。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么我的for循环会一直执行下去?", ["window.onload=function(){", "\n               var allA=document.getElementsByTagName(\"a\");", "\n               for(var i=0;i<allA.length;i++){", "\n                        alert(i);", "\n               }", "\n            };"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;getchar每次读取的都只有一个字符&amp;#xff0c;同时在每次输入字符后按的回车也会被读取记录&amp;#xff0c;所以会出现间隔输入的情况&amp;#xff0c;你可以改成scanf(&amp;#34;%c&amp;#34;,c)&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c的for循环printf为什么多运行一次", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The number of stars is indicated by triangle numbers, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1+2&lt;/code&gt;, &lt;code&gt;1+2+3&lt;/code&gt;.  You want to increment your inner loop max value by &lt;code&gt;$i&lt;/code&gt; with every iteration:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$k = 0;\nfor ($i=1; $i&amp;lt;=10; $i++)\n{\n    $k += $i;\n    for ($j=1; $j&amp;lt;=$k; $j++)\n    {   \n       echo \"*\";\n    }\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is also a good case where your loops should be initialized with &lt;code&gt;1&lt;/code&gt; rather than &lt;code&gt;0&lt;/code&gt;, because it is more intuitive.  &lt;code&gt;0&lt;/code&gt;-based loops work best when you are working with arrays.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用PHP for循环创建星型模式", ["\n\n", "I'm trying to echo stars and zero like the pattern below ", "\n\n", "*\n***0\n******00\n**********000\n", "\n\n", "However I'm getting this result ", "\n\n", "    *\n    **0\n    ***00\n    ****000\n    *****0000\n    ******00000\n", "\n\n", "here is my code \n    \n\n", "\n", "for ($i=0; $i<=10; $i++)\n{   \n    echo \"*\";\n    for ($j=0; $j<$i; $j++)\n    {   \n       echo \"*\";\n\n    }\n        for ($z=0; $z<$i; $z++)\n            {\n                echo \"0\";\n            }       \n    echo \"</br>\";    \n} \n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "在for循环中ajax?怕不是以后数据多了，被怼得体无完肤。另外并不是for循环导致的，而是你后面的那句\r\n```\r\nwindow.location.reload() ;\r\n```\r\n页面reload了，页面中未有执行完毕的ajax请求就会被强制中断，强制中断当然会导致ajax接收不全\r\n\r\n更新------------------------------------------------------\r\n随便改了一下，没测试\r\n```\r\nfunction check3(){\r\n    console.log(1);\r\n    //var trList = $(\"#addTable\").children(\"tr\");\r\n    var obj= [];\r\n    var tb = document.getElementById(\"addTable\");  //根据id找到这个表格\r\n    var rows = tb.rows;               //取得这个table下的所有行\r\n\tvar param = [];\r\n    for(var i=1;i&lt;rows.length;i++)//循环遍历所有的tr行\r\n    {\r\n      var dd = [];\r\n      for(var j=0;j&lt;rows[i].cells.length;j++)//取得第几行下面的td个数，再次循环遍历该行下面的td元素\r\n      {\r\n            var cell = rows[i].cells[j];//获取某行下面的某个td元素\r\n             dd.push(cell.innerHTML);\r\n        }\r\n\t\tparam.push(dd);\r\n    }\r\n\t$.ajax({  \r\n            type : 'POST',  \r\n            url: '/contract/ContractManagement/insertProduct_num',\r\n            data: param,\r\n            traditional:true,\r\n            success : function(data) {//成功\r\n\t\t\t\t$(\"#motaikuang3\").modal('hide');\r\n\t\t\t\twindow.location.reload(); \r\n            },\r\n\t\t\terror:function(){ //失败\r\n\t\t\t\twindow.location.reload(); \r\n\t\t\t}\r\n    });\r\n}\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环遍历发送太快 ajax接受不全 小萌新求大神指点一下", ["function check3(){\n    console.log(1);\n    //var trList = $(\"#addTable\").children(\"tr\");\n    var obj= [];\n    var tb = document.getElementById(\"addTable\");  //根据id找到这个表格\n    var rows = tb.rows;               //取得这个table下的所有行\n    for(var i=1;i<rows.length;i++)//循环遍历所有的tr行\n    {\n      var dd = [];\n      for(var j=0;j<rows[i].cells.length;j++)//取得第几行下面的td个数，再次循环遍历该行下面的td元素\n      {\n            var cell = rows[i].cells[j];//获取某行下面的某个td元素\n             dd.push(cell.innerHTML);\n        }\n\n      $.ajax({  \n            type : 'POST',  \n            url: '/contract/ContractManagement/insertProduct_num',\n            data: {\"arr\":dd },\n            traditional:true,\n            success : function(data) {  \n            }  \n        });  \n\n    }\n    window.location.reload(); \n\n    $(\"#motaikuang3\").modal('hide');\n\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这不是异步&lt;br /&gt;这是注册了一个click事件&amp;#xff0c;传入了一个匿名函数作为click事件执行时的函数&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["异步这个for循环是异步吗这个for循环是异步吗", ["这个for循环是异步吗这个for循环是异步吗", "这个这个for循环是异步吗for循环是异步吗这个for循环是异步吗这个for循环是异步吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;iostream&amp;gt;\n\nint main()\n{\n    using namespace std;\n\n    int a[5]&amp;#61;{1,2,3,4,5};\n    int length &amp;#61; sizeof(a)/sizeof(a[0]);\n    \n    for(int i &amp;#61; 0;i &amp;lt; 5; i&amp;#43;&amp;#43;)\n    {\n        for(int j &amp;#61; 0;j &amp;lt; length; j&amp;#43;&amp;#43;)\n        {\n            if(j !&amp;#61; length-1)\n            {\n                cout &amp;lt;&amp;lt; a[j] &amp;lt;&amp;lt; &amp;#34;,&amp;#34;;\n            }\n            else\n            {\n                cout &amp;lt;&amp;lt; a[j];\n            }\n        }\n    }\n\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环将以下数组内的所有数输出五次。 a[5]={1,2,3,4,5} 输出要达到以，", ["用for循环将以下数组内的所有数输出五次。\na[5]={1,2,3,4,5}\n输出要达到以下效果：\n1，2，3，4，5\n1，2，3，4，5\n1，2，3，4，5\n1，2，3，4，5\n1，2，3，4，5"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;find和string里的函数名冲突了&amp;#xff0c;可以定义在main里面&amp;#xff0c;就没事了。再温馨提示一下&amp;#xff0c;代码问题比较多。首先百钱百鸡find.x和find.y的最大值不对&amp;#xff0c;因为这里的公鸡是7钱一个&amp;#xff0c;母鸡是4钱一个。还有就是应该不只是在公鸡和母鸡钱之和是100时才有小鸡&amp;#xff0c;应该是三个的钱之和为100。再提示一下&amp;#xff0c;小鸡如果是几分之一钱一只的话要判断是否整除&amp;#xff0c;int直接会向下取整。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环对struct结构体成员赋值，不知道为什么编译错误，求大佬解答", ["\n", "#include<iostream>\n#include<iomanip>\nusing namespace std;\nstruct findmax\n{\n\tint x,y,z;\n}find;\nmain()\n{\n    for(find.x=0;find.x<20;find.x++)\n    {\n\tfor(find.y=0;find.y<33;find.y++)\n        {\n\t    if(7*find.x+4*find.y==100)\n\t    {\n\t\tfind.z=100-find.x-find.y;\n\t\tcout<<\"鸡翁有：\"<<find.x<<\" \"<<\"鸡母有：\"<<find.y<<\" \"<<\"鸡雏有：\"<<find.z;\n\t\tcout<<endl;\n\t    }\n\t}\n    }\n}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\nint main()\r\n{\r\nint line=100;\r\nfor(;line&gt;=1;line--)\r\nprintf(\"*\");\r\nsystem(\"pause\");\r\nreturn 0;}\r\n```", "Konwledge_Point": "for循环", "Question": ["这是一个关于C语言的for循环问题", ["#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\nint line=100;\nfor(;line<1;line--)\nprintf(\"*\");\nsystem(\"pause\");\nreturn 0;}\n", "\n\n", "我想写个小程序，就是输出100个*，但是呢，我写完这个程序之后，发现一个*也不输出。我觉得我写的for循环是没有问题的，line初始值100；当line<1的时候停止执行，line每次减少1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是不是把换行符 \\n写成了 \\r&lt;br /&gt;在控制台打印时回车符(\\r&amp;#xff09;与换行符(\\n&amp;#xff09;效果是不一样的。&lt;br /&gt;回车符(\\r&amp;#xff09;在控制台打印中是把光标回到本行的开头&amp;#xff0c;不会换行。&lt;br /&gt;下一行的内容会覆盖本行已打印了的内容。&lt;br /&gt;比如&lt;br /&gt;printf(&amp;#34;abcd\\ref&amp;#34;)&lt;br /&gt;打印&lt;br /&gt;efcd&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环", "Question": ["我的idea有点小问题, 我写了一个for循环 只显示最后一次执行的结果", ["我写了一个for循环,命令行执行时没有问题的,证明代码没错;", "idea 就不行,只显示最后一个运行的结果", "\n", "正确结果应该是:", "1111111", "100001", "100001", "100001", "100001", "1111111", "\n", "显示结果如下:", "\n", "1111111", "Process finished with exit code 0", "\n", "软件版本 2020.2"]], "Tag": "程序设计"}
{"Answer": "“：”表示本行语句结束，你在for循环后面加上“；”说明你的for已经结束，所以此时你的for循环处于无用状态，你把for循环去掉运行结果还是一样的！\r\n你试试！", "Konwledge_Point": "for循环", "Question": ["关于for循环后面的分号", ["int main ()", "\n {  int i;", "\n    P1=0Xf0;", "\n    for(i=0;i<10;i++);", "\n    P1=0xf5;", "\n    for(i=0;i<10;i++);", "\n    return 0;", "\n\n", "}", "\n为什么for循环后面加了;号，调试时该语句只执行一次就走到下一句？求大神解惑"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Chances are your path or permissions are wrong; Check the return value from &lt;code&gt;addEmbeddedImage&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (!$mail-&amp;gt;AddEmbeddedImage($obrazy[$x], 'tel'.$x)) {\n  echo 'Failed to attach '. $obrazy[$x];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It's probably a good idea to turn the path into an absolute one, for example by saying something like  &lt;code&gt;__DIR__ . '/' . $obrazy[$x]&lt;/code&gt; instead of just the relative path.&lt;/p&gt;\n\n&lt;p&gt;It may be that your current working directory is not where you think it is. Try doing it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (!$mail-&amp;gt;AddEmbeddedImage(getcwd() . '/' . $obrazy[$x], 'tel'.$x)) {\n  echo 'Failed to attach '. getcwd() . '/' . $obrazy[$x];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then it will show you the full path of the files it's failing to find, and you can check whether they are correct.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["PHPMailer使用FOR循环添加图像", ["\n\n", "I have this PHP code:", "\n\n", "for($x = 0; $x < count($obrazy); $x++) \n{ \n   $mail->AddEmbeddedImage($obrazy[$x], 'tel'.$x); \n}\n", "\n\n", "the variable \"obrazy\" is a table storing path (link to the image) e.g. \"obraz/zdjecie.png\". I need to do this with a loop because the array of obrazy can have a different size each time. The above loop does not work for me, because when I want to show this image in the mail, nothing is displayed.", "\n\n", "$iterator = 0;\n\nwhile ($row = mysqli_fetch_array($rezultat)) \n{      \n         $mail->Body = $mail->Body.'//..........\n\n                <img src=\"cid:tel'.$iterator.'\" style=\"\n\n                    width: 160px;\n                    display: block;\n                    float: left;\n\n                \"/> //..........\n           ';\n\n          $iterator++;\n}\n", "\n\n", "\"// ......\" means another part of the code that does not matter to the question being asked. The while loop must be because I extract different data from the database. Everything works only the images do not want to be displayed in the email, even if instead of \"$iterator\" I enter the number. Links to the image contained in the table are RELIABLE for the PHP file.", "\n    "]], "Tag": "程序设计"}
{"Answer": "i需要声明一下，或者直接在括号中定义。\r\n小括号中的两个分号中间是条件语句，没有就是说没有条件，意思是任何条件都能执行。\r\n于是就是一个死循环。", "Konwledge_Point": "for循环", "Question": ["Java关于for循环的的问题。", ["请问Java中如下代码的语法为何可行呢？这个代码将如何运行", "\n\n", "         for (i=0;;i++){\n            //doSomething();\n        }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用一个变量记录下标&amp;#xff0c;循环加入&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing namespace std;\n\nint main()\n{ int i,j,&lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;&amp;#61;0,a[100];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;3;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0;j&amp;lt;3;j&amp;#43;&amp;#43;){\n            a[k&amp;#43;&amp;#43;]&amp;#61;i&amp;#43;j;\n        }\n            \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;k;i&amp;#43;&amp;#43;)\n    cout&amp;lt;&amp;lt;a[i];\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/306777292646118.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言 如何实现for循环中的数组拼接", ["每次循环产生的数组进行拼接得到一个新的数组，下一次循环得到的数组在前一次拼接结果的末尾继续进行拼接"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your loop breaks when &lt;code&gt;reader.Read()&lt;/code&gt; returns &lt;code&gt;io.EOF&lt;/code&gt;. This happens when your input is consumed.&lt;/p&gt;\n\n&lt;p&gt;At the same time (when &lt;code&gt;io.EOF&lt;/code&gt; is returned), the returned record will be &lt;code&gt;nil&lt;/code&gt;. &lt;a href=\"https://golang.org/pkg/encoding/csv/#Reader.Read\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;Reader.Read()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If there is no data left to be read, &lt;strong&gt;Read returns nil, io.EOF&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So you assign &lt;code&gt;nil&lt;/code&gt; to the &lt;code&gt;record&lt;/code&gt; variable, the loop breaks, and you inspect the &lt;code&gt;record&lt;/code&gt; variable.&lt;/p&gt;\n\n&lt;p&gt;If your intent is to hold the last record, store it in a separate variable, and do not \"overwrite\" it with the last &lt;code&gt;nil&lt;/code&gt; record:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var lastRecord []string\nfor {\n    record, err = reader.Read()\n    // Stop at EOF.\n    if err == io.EOF {\n        break\n    }\n    lastRecord = record\n    fmt.Printf(\"%v\", record) // works fine\n    fmt.Printf(\"%v\n\", record[0]) // works fine too\n}\nfmt.Printf(\"%v\n\", lastRecord) // this will be the last non-nil record\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在Golang中访问for循环之外的变量", ["\n\n", "I'm trying to read a CSV file to store the values in a variable. However, I couldn't access the variables outside of the for loop ", "\n\n", "func GetKeys(filename string) {\n    var record []string\n    var err error\n    file, err := os.Open(filename)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer file.Close()\n    // Create a new reader.\n    reader := csv.NewReader(bufio.NewReader(file))\n    for {\n        record, err = reader.Read()\n        // Stop at EOF.\n        if err == io.EOF {\n            break\n        }\n        fmt.Printf(\"%v\", record) // works fine\n        fmt.Printf(\"%v\n\", record[0]) // works fine too\n    }\n    fmt.Printf(\"%v\n\", record) // returns empty slice\n}\n\nfunc main() {\n    GetKeys(\"credentials.csv\")\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个只是遍历数组&lt;br /&gt;一个是改变了原数组&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请教一下，C#用for循环实现倒序输出数组的元素，和在for循环中进行数组元素的前后调换位置，最后都是将数组反转输出，二者有什么实际区别？不懂请教……", ["for(int i=nums.Length-1;i＞＝0;i--)", "｛", "        Console.WriteLine(nums[i]);", "   ｝", "和", "for(int i=0;i＜＝nums.Length/2;i++)", "｛", "        int temp=nums[i];", "        nums[i]=nums[nums.Length-1-i];", "        nums[nums.Length-1-i]= temp;", "   ｝"]], "Tag": "程序设计"}
{"Answer": "```\r\nList listSonBoard =(List)mapboard.get(new Integer(mainBoard.getBoardId()));\r\nif(listSonBoard!=null){//这句话加上肯定是对的，对，“mainBoard.getBoardId()&lt;=3 时显示的 ，不可以显示了.”肯定没影响，看看是不是其他原因导致不显示。\r\n for(int j=0;j&lt;listSonBoard.size();j++)        //java.lang.NullPointerException\r\n\r\n                            {\r\n                                Board sonBoard=(Board)listSonBoard.get(j);\r\n                                Topic topic =new Topic();\r\n                                User user=new User();\r\n                                int boardId =sonBoard.getBoardId();\r\n                                List listTopic=new TopicDAO().findListTopic(1, boardId);\r\n\r\n                                if(listTopic!=null&amp;&amp;listTopic.size()&gt;0)\r\n                                {\r\n                                    //取得最后发表的帖子\r\n                                    topic=(Topic)listTopic.get(0);\r\n                                    user=new UserDAO().findById(topic.getuId());\r\n                                }\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n```", "Konwledge_Point": "for循环", "Question": ["Java for循环取 List ，出现循环空指针，求助", [" <%\n                            List listSonBoard =(List)mapboard.get(new Integer(mainBoard.getBoardId()));\n                            for(int j=0;j<listSonBoard.size();j++)        //java.lang.NullPointerException\n\n                            {\n                                Board sonBoard=(Board)listSonBoard.get(j);\n                                Topic topic =new Topic();\n                                User user=new User();\n                                int boardId =sonBoard.getBoardId();\n                                List listTopic=new TopicDAO().findListTopic(1, boardId);\n\n                                if(listTopic!=null&&listTopic.size()>0)\n                                {\n                                    //取得最后发表的帖子\n                                    topic=(Topic)listTopic.get(0);\n                                    user=new UserDAO().findById(topic.getuId());\n                                }\n                        %>\n\n上面 for(int j=0;j<listSonBoard.size();j++)     出现   //java.lang.NullPointerException\n", "\n\n", "加了判断", "\nif(listSonBoard != null){", "\n      for(.....){  ..... }", "\n}", "\n有部分可以在 mainBoard.getBoardId()<=3 时显示的 ，不可以显示了."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以看下我这篇文章&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/z291493823/article/details/122275868?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1642521709502_1642521798552_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Vue实现ECharts动态渲染多个图表&amp;#xff0c;并可以联动_ZionHH的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;Vue实现ECharts动态渲染多个图表&amp;#xff0c;并可以联动。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/z291493823/article/details/122275868?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Vue-Echarts V-For 循环动态生成图表的数据传递", ["最近在学习 Vue-Echart 图表，现在有一个需求是：通过 V-For 动态的读取一个数组数据再生成图表，并将数组里的数据传给每个图表（title 和 value），可是如何实现将数组的每个数据依次传递给动态生成的图表呢？", "\n", "<", "template", ">", "\n  ", "<", "div", ">", "\n    ", "<", "el-card", ">", "\n      ", "<", "el-row", " ", "type", "=", "\"flex\"", " ", "justify", "=", "\"center\"", "\n        >", "<", "span", " ", "style", "=", "\"font-size: 20px; font-weight: 700\"", ">", " Wafer 统计数据", "</", "span", ">", "        \n      ", "</", "el-row", ">", "\n\n      ", "<", "el-row", " ", "type", "=", "\"flex\"", " ", "align", "=", "\"bottom\"", ">", "\n        ", "<!-- 总体货架 Loading -->", "\n        ", "<", "el-col", " ", ":span", "=", "\"5\"", ">", "\n          ", "<", "v-chart", " ", "style", "=", "\"height: 240px\"", " ", ":option", "=", "\"shelfSummary\"", " ", "autoresize", " />", "\n        ", "</", "el-col", ">", "\n        ", "<!-- 每个货架 Loading -->", "\n        ", "<", "el-col", " ", ":span", "=", "\"4\"", " ", "v-for", "=", "\"(item) in shelfList\"", " ", ":key", "=", "\"item[0]\"", ">", "\n          ", "<", "div", " ", "style", "=", "\"font-size: 12px; font-weight: 700;text-align:center\"", ">", "{{", "item", "[0]}}", "</", "div", ">", "\n          ", "<", "v-chart", " ", "style", "=", "\"height: 180px\"", " ", ":option", "=", "\"shelf\"", " ", "autoresize", " />", "\n        ", "</", "el-col", ">", "\n      ", "</", "el-row", ">", "\n      ", "<", "el-divider", ">", "</", "el-divider", ">", "\n      ", "<", "el-row", ">", "\n        ", "<!-- 每个货架具体分布 -->", "\n        ", "<", "el-col", " ", ":span", "=", "\"24\"", ">", "\n          ", "<", "v-chart", " ", "style", "=", "\"height: 380px\"", " ", ":option", "=", "\"shelfDetail\"", " ", "autoresize", " />", "\n        ", "</", "el-col", ">", "\n      ", "</", "el-row", ">", "\n    ", "</", "el-card", ">", "\n  ", "</", "div", ">", "\n", "</", "template", ">", "\n\n", "\n", "\n", "图表的 option 是通过计算属性得到的。", "\n", " ", "computed:", " {\n    ", "shelf()", " {\n      ", "let", " ", "shelf", " ", "=", " {\n        ", "//", " ", "定义", " ", "title", " ", "格式", "\n        ", "title:", " {\n          ", "show:", " ", "true", ",\n          ", "//", " ", "text:", " ", "\"Shelf\"", ",\n          ", "textStyle:", " { ", "fontSize:", " ", "12", ", ", "fontWeight:", " ", "'bolder'", " },\n          ", "left:", " ", "'center'", ",\n        },\n        ", "series:", " [\n          {\n            ", "type:", " ", "'gauge'", ",\n            ", "startAngle:", " ", "180", ",\n            ", "endAngle:", " ", "0", ",\n            ", "splitNumber:", " ", "5", ",\n            ", "progress:", " {\n              ", "show:", " ", "true", ",\n              ", "width:", " ", "10", ",\n            },\n            ", "pointer:", " {\n              ", "length:", " ", "'60%'", ",\n              ", "width:", " ", "3", ",\n            },\n            ", "axisLine:", " {\n              ", "lineStyle:", " {\n                ", "width:", " ", "10", ",\n              },\n            },\n            ", "axisTick:", " {\n              ", "splitNumber:", " ", "2", ",\n              ", "distance:", " ", "-1", ",\n              ", "lineStyle:", " {\n                ", "width:", " ", "2", ",\n                ", "color:", " ", "'#999'", ",\n              },\n            },\n            ", "splitLine:", " {\n              ", "distance:", " ", "0", ",\n              ", "length:", " ", "8", ",\n              ", "lineStyle:", " {\n                ", "width:", " ", "2", ",\n                ", "color:", " ", "'#999'", ",\n              },\n            },\n            ", "axisLabel:", " {\n              ", "distance:", " ", "15", ",\n              ", "color:", " ", "'#999'", ",\n              ", "fontSize:", " ", "8", ",\n            },\n            ", "detail:", " {\n              ", "width:", " ", "'60%'", ",\n              ", "offsetCenter:", " [", "0", ", ", "'20%'", "],\n              ", "valueAnimation:", " ", "true", ",\n              ", "formatter:", " ", "function", " ", "(value)", " {\n                ", "return", " ", "'{value|'", " ", "+", " ", "value.toFixed(0)", " ", "+", " ", "'}{unit|%}'", "\n              },\n              ", "rich:", " {\n                ", "value:", " {\n                  ", "fontSize:", " ", "12", ",\n                  ", "fontWeight:", " ", "'bolder'", ",\n                  ", "color:", " ", "'#777'", ",\n                },\n                ", "unit:", " {\n                  ", "fontSize:", " ", "14", ",\n                  ", "color:", " ", "'#999'", ",\n                  ", "padding:", " [", "0", ", ", "0", ", ", "0", ", ", "5", "],\n                },\n              },\n            },\n            ", "data:", " [\n              {\n               ", "value:", " ", "10", ",\n              },\n            ],\n          },\n        ],\n      }\n      ", "return", " ", "shelf", "\n    },\n\n", "\n", "数组举例：第一个为 title，第二个为需要传递进图表的 value", "\n", "(2)", " [", "Array(2)", ", ", "Array(2)", ", ", "__ob__:", " ", "Observer", "]\n", "0:", " ", "(2)", " [", "'Shelf-No.1'", ", ", "0", ", ", "__ob__:", " ", "Observer", "]\n", "1:", " ", "(2)", " [", "'Shelf-No.2'", ", ", "4", ", ", "__ob__:", " ", "Observer", "]\n", "length:", " ", "2", "\n", "__ob__:", " ", "Observer", " {", "value:", " ", "Array(2)", ", ", "dep:", " ", "Dep", ", ", "vmCount:", " ", "0", "}\n[[", "Prototype", "]]", ":", " ", "Array", "\n\n", "\n", "界面：", "\n", "如图，上面较小的两个速度表，是可以通过 v-for 生成的，而且 title 可以通过套用一个 div 来达到动态 title 的效果，可是如何将数组的值传递进入 chart 的 ：option=''shelf' 里的 data： value  （现在是写死的 value: 10, ）呢，查了半天，也没有找到合适的方法，特来请教。希望各位给些建议，谢谢。。"]], "Tag": "程序设计"}
{"Answer": "List&lt;A&gt; listA = getObjects(A.class);\r\n    Map&lt;Long,Object&gt; mapA = new HashMap&lt;String,Object&gt;();\r\n    /*这里map的key是Object中的某一字段的类型，可以是int，string，long之类的*/\r\n    \r\n    for(A a : listA){\r\n     mapA.put(a.getId(),a);\r\n    }\r\n    \r\n    List&lt;B&gt; listB = getObjects(B.class);\r\n    Map&lt;String, Object&gt; A_B = new HashMap&lt;String, Object&gt;();\r\n    for(B b : listB){\r\n       A a = mapA.get(b.getAId());\r\n       A_B.put(\"B\",b);\r\n       A_B.put(\"A\",a);\r\n    }\r\n    /*这样就避免了N次查询数据库，提高执行效率了*/", "Konwledge_Point": "for循环", "Question": ["循环查询数据库500次和用双层for循环进行25w次轮循哪个效率更高", ["有两张表A、B。", "\nA有500条记录，B有500乃至更多条，查询A表所有记录封装成List；", "\n现根据A表的ID查询B表中对应的记录，那么", "\n\n", "List<A> listA = getObjects(A.class);\nfor(A a : listA){/*循环查询数据库*/\n  B b= getObjectById(a.getId());\n  map.put(\"A\",a.name);\n  map.put(\"B\",b.time);\n}\nList<B> listB = getObjects(B.class);\nfor(A a : List<A>){\n  for(B b : List<B>){\n    if(a.getId() == b.getAid())\n      map.put(\"A\",a.name);\n      map.put(\"B\",b.time);\n  }\n}\n", "\n\n", "这两种方式哪个效率高"]], "Tag": "程序设计"}
{"Answer": "最好截图把代码发上来，这个代码都不怎么读的懂……", "Konwledge_Point": "for循环", "Question": ["两个for循环进行判断的问题", ["\n\n", "有两个表 一个Workers表是存的全部的ip，另一个表Triggers 有正在进行任务的ip。", "\n每次跑任务的时候。若workers中存在另一个表Triggers表格中没有的ip地址，则代表该ip完全空闲，则作为首选。若所有worker是中的ip地址都在另一个表Triggers表格中，则取另一个表Triggs表格中的出现次数最少的作为首选"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;One of the following must be happening:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;The function is never run&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$cust&lt;/code&gt; is never declared&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$cust&lt;/code&gt; is less than 1&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;So confirm/fix the above and you should be dandy.&lt;/p&gt;\n\n&lt;p&gt;Also I should note that you probably intended the &lt;code&gt;$minutes&lt;/code&gt; variable to contain a different number for every loop, but it won't with your current code. You have to run the &lt;code&gt;rand&lt;/code&gt; function again for every loop to get a new number.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;To answer your comment&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Expanding upon your current code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$cust = rand(50,100);\n$minutesarr = array();\nfunction minutesTable()\n{\n        global $cust, $minutesarr;\n\n        for ($i = 0; $i &amp;lt;= $cust; $i++)\n        {\n            $minutes = rand(200,2500);\n            array_push($minutesarr, $minutes);\n        }\n}\n\n// RUN the function :-P\nminutesTable();\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["Array_push（）在for循环中不起作用", ["\n\n", "$cust = rand(50,100);\n$minutes = rand(200,2500);\n$minutesarr = array();\nfunction minutesTable()\n{\n        global $cust,$i,$minutes,$minutesarr;\n        for ($i = 0; $i <= $cust; $i++)\n        {\n            array_push($minutesarr,$minutes);\n\n        }          \n}\n", "\n\n", "I've even resorted to using ", "$minutesarr[$i] = $minutes;", " but that didn't work either which is strangely mysterious.", "\n\n", "Edit: Whoops I forgot to add the $cust variable in the thread. Let me add that in there to prevent confusion.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;range函数的语法为&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(start, &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt;[, step])\n# start: 计数从 start 开始。默认是从 &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; 开始。例如&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;&amp;#xff08;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff09;等价于&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;&amp;#xff08;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#xff0c; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff09;;\n# &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt;: 计数到 &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt; 结束&amp;#xff0c;但不包括 &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt;。例如&amp;#xff1a;&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;&amp;#xff08;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#xff0c; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff09; 是[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]没有&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n# step&amp;#xff1a;步长&amp;#xff0c;默认为&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;。例如&amp;#xff1a;&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;&amp;#xff08;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#xff0c; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff09; 等价于 &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;num,0,-1&amp;#xff09;的意思就是&amp;#xff0c;这里的 i 从 num 开始&amp;#xff0c;到 0 结束&amp;#xff08;不含0&amp;#xff09;步长为 -1.&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环里的0和-1是什么意思？求解答", ["num=int(input(\"请输入一个整数：\"))", "for i in range(num,0,-1):", "    print(('* '", "i).center(3", "num))", "第二行（num,0,-1）是什么意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;少了个&amp;#61;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;if(j &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)   printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环打印星号三角形，行数由键盘输入 的整数决定。", ["题目：", "请问我的代码错哪了？", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", " ", "{\n", "int", " n,i,j;\n  ", "scanf", "(", "\"%d\"", ",&n);\n  ", "for", "(i=", "1", ";i<=n;i++){\n  ", "for", "(j=n-i+", "1", ";j>", "0", ";j--){\n    ", "if", "(j>", "1", ")\n      ", "printf", "(", "\"* \"", ");\n  ", "if", "(j=", "1", ")", "printf", "(", "\"*\"", ");}\n  ", "printf", "(", "\"\\n\"", ");\n  }\n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "不同的编译器不同。早期的编译器，会把UINT i放在全局作用域上。现在的编译器不会。\r\n在VC++ 6.0时代\r\nfor (int i = ...)\r\n{\r\n...\r\n}\r\nfor (int i = ...)\r\n{\r\n...\r\n}\r\n这代码是不能编译的，会说i重复定义。", "Konwledge_Point": "for循环", "Question": ["For 循环中的局部变量为什么可以拿出来用？", ["查阅HexEditor插件的时候发现如下代码，括号内定义的局部变量为什么可以拿出来用？", "\n\n", "    /* i 是局部变量 */\n    for (UINT i = 0; i < length; i++)\n    {\n    }\n\n    for (i = 1; i <= max; i++)\n\n", "\n\n", "有时候又不可以，会报错，是怎样配置VS使得VS支持或不支持以上“特性”？", "\n\n", "补充图片：c++设置", "\n\n", "\n\n", "\n", "/GS /analyze- /W4 /FAu /Zc:wchar_t /I\"../../src\" /I\"../../src/HelpDlg\" /I\"../../src/MISC\" /I\"../../src/OptionDlg\" /I\"../../src/UserDlg\" /I\"../../../Common/Ccpp\" /I\"../../../NativeLang/src\" /Od /Fd\"Debug\\vc142.pdb\" /Zc:inline /fp:precise /D \"WIN32\" /D \"_DEBUG\" /D \"_WINDOWS\" /D \"_USRDLL\" /D \"HEXEDITOR_EXPORTS\" /D \"_WINDLL\" /D \"_UNICODE\" /D \"UNICODE\" /errorReport:prompt /WX- /Zc:forScope- /RTC1 /Gd /Oy- /MDd /FC /Fa\"Debug\\\" /EHsc /nologo /Fo\"Debug\\\" /Fp\"Debug\\HexEditor.pch\" /diagnostics:column ", "\n", "\n\n", "link设置", "\n\n", "\n\n", "\n", "/OUT:\"D:\\Downloads\\npp.7.8.9.bin\\plugins\\HexEditor/HexEditor.dll\" /MANIFEST /NXCOMPAT /PDB:\"Debug\\HexEditor.pdb\" /DYNAMICBASE \"shlwapi.lib\" \"kernel32.lib\" \"user32.lib\" \"gdi32.lib\" \"winspool.lib\" \"comdlg32.lib\" \"advapi32.lib\" \"shell32.lib\" \"ole32.lib\" \"oleaut32.lib\" \"uuid.lib\" \"odbc32.lib\" \"odbccp32.lib\" /IMPLIB:\"Debug\\HexEditor.lib\" /DEBUG /DLL /MACHINE:X86 /SAFESEH /INCREMENTAL /PGD:\"Debug\\HexEditor.pgd\" /SUBSYSTEM:WINDOWS /MANIFESTUAC:\"level='asInvoker' uiAccess='false'\" /ManifestFile:\"Debug\\HexEditor.dll.intermediate.manifest\" /ERRORREPORT:PROMPT /NOLOGO /TLBID:1 ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can just use,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo $i+$inc&amp;gt;$end?$i:\"$i,\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It checks whether this is the last possible iteration instead.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["当限制和增量是动态的时，如何获得for循环的最后一次迭代？", ["\n\n", "I have seen some question related to this one like ", "\n\n", "How to check for last loop when using for loop in php?", "\n\n", "Last iteration of enhanced for loop in java", "\n\n", "but I am not getting exact solution because in my case ", "increment", " and ", "end limit", " both are ", "dynamic", ". ", "\n\n", "Requirement:-", " I do not want comma after last element printed.", "\n\n", "$inc=11;\n$end=100;\nfor($i=1;$i<=$end;$i=$i+$inc){\n    echo $i==$end?$i:\"$i,\";  // 1,12,23,34,45,56,67,78,89,100\n} \n", "\n\n", "In above code I know that ", "last element($i)", " will be ", "100($end)", ". ", "\n\n", "So I can write condition as ", "$i==$end", " but in below case it won't work.", "\n\n", "$inc=12;  // Now $inc is 12\n$end=100;\nfor($i=1;$i<=$end;$i=$i+$inc){\n    echo $i==$end?$i:\"$i,\";  // 1,13,25,37,49,61,73,85,97,\n}\n", "\n\n", "Now last element 97 has comma which I need to remove.", "\n\n", "Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;对&amp;#xff0c;前两个是嵌套循环&amp;#xff0c;前两个结束才开始第三个\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0   &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0  (j&amp;lt;3)\n      &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1\n      &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;2\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1   &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0  (j&amp;lt;2)\n      &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;2   &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0  (j&amp;lt;1)\n结束&amp;#xff0c;开始第三个循环\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["关于多个for循环的循环顺序问题！", ["关于第一，二个for循环与第三个for循环，第三个是等前面两个循环全部循环完后再循环的吗？a［i］是怎么得出相应的值的呀？", "第一个for循环解决什么问题？", "第二个又解决什么问题啊？", "有谁能告诉我呀谢谢谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;变量i要放在循环前面跟sum一块定义就可以了&lt;br /&gt;把循环判断里面的int去掉&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["怎么让devc++执行for循环", ["\n", "devc++的for循环语句怎么执行，求各位领跑者，带带我，能为我解决一下这个问题吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;能看一下rate数据长啥样嘛&amp;#xff0c;大小确定是200800xn嘛&amp;#xff0c;每一行都有大于等于0.001的值嘛&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["matlab用for循环对每一行进行计算时出现错误", ["本人有一组数据，会用程序求出其中一行的时间差。程序如下：", "\n", "v", "=rate\n", "a", "=v(", "500", ",:)%第", "500", "行\n", "k1", " = find(a>=", "0", ".", "001", ",", "1", ")  %找出第一个>=", "0", ".", "001", "的数\n", "k2", "=find(a>=", "0", ".", "001", ",", "1", ",'last')  %找出最后一个>=", "0", ".", "001", "的数\n", "t1", "=(k1-", "1", ")*", "0", ".", "05", "  %把点转化成时间用（i-", "1", "）* dt\n", "t2", "=(k2-", "1", ")*", "0", ".", "05", "\n", "tend", "=t2-t1   %结束的时间-开始的时间为延时\n", "\n", "但是这组数据有200800行，我想算出每一行的tend，于是写了个for循环，按理说应该得到一个200800x1的数据，现在得到的是200800x0的空矩阵，", "想问下如何修改", "？", "或者有更好地方法来算每一行的时间差（tend）吗？", "困惑了一下午，希望有人可以指导一下，非常感谢！！", "for循环语句如下：", "\n", "for", " i=", "1", ":", "200800", "  %有", "200800", "行\n  ", "a", "=v(i,:)\n  ", "k1", " = find(a>=", "0", ".", "001", ",", "1", ")  %找出第一个>=", "0", ".", "001", "的数\n  ", "k2", "=find(a>=", "0", ".", "001", ",", "1", ",'last')  %找出最后一个>=", "0", ".", "001", "的数\n  ", "t1", "=(k1-", "1", ")*", "0", ".", "05", "  %把点转化成时间用（i-", "1", "）* dt\n  ", "t2", "=(k2-", "1", ")*", "0", ".", "05", "\n  ", "y", "(i,:)=t2-t1;\n", "end", "\n"]], "Tag": "程序设计"}
{"Answer": "不同的编译器对于循环变量的定义不同，vc++ 6.0是20年前的古董了，对c++标准支持并不好。\r\n\r\n在vc++ 2010上就可以编译\r\n![图片说明](https://img-ask.csdn.net/upload/201811/06/1541434279_342241.gif)", "Konwledge_Point": "for循环", "Question": ["为什么for循环里的定义会影响后面的for循环啊", ["在第一个for循环里定义的k为double型，如果我在下面每一个for循环里都定义一边会报错，如果我只留第一个double定义却能得到正确答案，这是为什么啊，不是说for循环里的定义的变量是局部变量么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在声明的时候&amp;#xff0c;方括号[ ] 表明a是一个数组&amp;#xff0c;其括号中的数字表明了数组中元素的个数。&lt;br /&gt;而在访问元素的时候&amp;#xff0c;方括号[ ]中的数字表示的是数组的下标数&amp;#xff08;也就是索引编号&amp;#xff09;&amp;#xff0c;数组元素的编号是从0开始的&amp;#xff0c;所以a[0]是a数组中的第1个元素。以此类推a[4]是a数组中的第5个元素。在你的循环达到第5次时&amp;#xff0c;这时会执行a[5]&amp;#61;5;而a[5]是超出了你定要的a数组的范围。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环给数组赋值报错", ["\n", "只能for循环scanf输入给数组吗，我要100个数呢"]], "Tag": "程序设计"}
{"Answer": "SUBDIRS:=./test1/test9 ./test1/test6\r\n当在for循环中取SUBDIRS变量时，会把“./test1/test9 ./test1/test6”当成一个完整的变量，\r\nmake -C $$dir  -&gt; make -C ./test1/test9 ./test1/test6\r\n\r\n所以在for循环使用的时候需要将SUBDIRS变量拆分一下：\r\nfor dir in `echo $(SUBDIRS) | cut -d'&lt;空格&gt;' -f 1-`;    \\\r\ndo                                                                               \\\r\n    make -C $$dir;                                                        \\\r\ndone                                                                           \\\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201508/26/1440595973_639052.png)", "Konwledge_Point": "for循环", "Question": ["makefile中以for循环实现多目标,(两子目录makefile)", ["子目录./test1/test9 ./test1/test6含有两个正确的makefile\n1   SUBDIRS:=./test1/test9 ./test1/test6\n 2  subdirs:\n 3  for dir in $(SUBDIRS);do\\\n 4          $(MAKE) -C $$dir;\\\n 5          done\nmake之后：\n    for dir in ./test1/test9 ./test1/test6;do\n/bin/sh: 1: Syntax error: end of file unexpected\nmakea:3: recipe for target 'subdirs' failed\nmake: *** [subdirs] Error 2\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、a声明的位置不同会导致循环的结果不同&lt;br /&gt;2、console.log()打印语句位置的不同也会影响循环的结果&lt;br /&gt;你可以从这两方面入手&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["JS在for循环中用push方法改变数组，结果每次打印都一样？为什么？", ["如图所示、将b每次分割三份依次放入a中，在每次循环中都打印一下a,查看a的值。但是发现所有的结果都是一样的，只有长度不同，这是为什么？", "\n", "求解求解！"]], "Tag": "程序设计"}
{"Answer": "subMenu  这个返回回来应该是一个集合而不是object。如果是集合那你写法是没有问题的，而且看你的应用常见这个也应该返回耳机菜单的集合才对，如果没有任何数据也该返回一个空集合。\r\n他object 还用了for去循环，看结果是吧object的元素给输出一遍，这个需要看下他源代码是怎么回事了。", "Konwledge_Point": "for循环", "Question": ["vue v-for循环map时获取不到元素", ["1、问题描述", "\n  vue v-for循环map时可以获取到数据，但是用item.id时却获取不到数据", "\n2、数据样例", "\n\n", "\n\n", "数据是这样的，map里面嵌套了一个子map subMenu，但是subMenu的右侧显示为Object", "\nv-for的时候可以获取到subMenu的数据，用item.menu的时候是获取不到对应的值的。", "\n如果不用item.menu而是直接用menu却又可以获取到。请看前端代码", "\n\n", "<el-menu background-color=\"#252526\" text-color=\"#fff\" active-text-color=\"#ffd04b\">\n          <!-- 一级菜单区域 -->\n          <el-submenu :index=\"item.menu_id + ''\" v-for=\"item in menuList\" :key=\"item.menu_id\">\n            <!-- 一级菜单模板区域 -->\n            <template slot=\"title\">\n              <i class=\"el-icon-location\"></i>\n              <span>{{item.menu}}</span>\n            </template>\n            <!-- 二级菜单区域 -->\n            <el-menu-item :index=\"subItem.menu_id + ''\" v-for=\"subItem in item.subMenu\" :key=\"subItem.menu_id\">\n              <template slot=\"title\">\n                <i class=\"el-icon-location\"></i>\n                <span>{{subItem.menu}}</span>\n              </template>\n            </el-menu-item>\n          </el-submenu>\n        </el-menu>\n", "\n\n", "js代码：", "\n\n", "async getMenuList() {\n      this.$http.get('/manager/getMenu').then(\n        response => {\n            if(response.data.code!==200) {\n                return this.$message.error(\"左侧菜单获取失败！\");\n            }\n            this.menuList = response.data.data;\n            console.log(this.menuList);\n        },\n        error => {\n          return this.$message.error(\"左侧菜单获取失败！\");\n        }\n      );\n    }\n", "\n\n", "中如果为{{subItem}}则页面显示效果为", "\n\n", "\n\n", "中如果为{{subItem.menu}}则页面显示效果为", "\n\n", "\n\n", "是没有办法获取到相应的值。", "\n\n", "各位大神们，请问这是什么原因导致的？如何解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/680274574146180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; lt[&lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num[&lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; letters&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,space&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,digit&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,other&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,t&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(c)) \n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((c[j] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c[j] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;) || (c[j] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c[j] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;)) \n        {\n            letters&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c[j]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c[j]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)\n            lt[t&amp;#43;&amp;#43;]&amp;#61;c[j]&lt;span class=\"hljs-number\"&gt;-32&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c[j]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c[j]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;)\n            lt[t&amp;#43;&amp;#43;]&amp;#61;c[j]&amp;#43;&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c[j] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {\n            space&amp;#43;&amp;#43;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c[j] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c[j] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) {\n            digit&amp;#43;&amp;#43;;num[n&amp;#43;&amp;#43;]&amp;#61;c[j]&lt;span class=\"hljs-number\"&gt;-48&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            other&amp;#43;&amp;#43;;\n        }\n        j&amp;#43;&amp;#43;;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;字母为&amp;#xff1a;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(j&amp;lt;t)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,lt[j]);\n        j&amp;#43;&amp;#43;;\n    }\n    j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n数字为&amp;#xff1a;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(j&amp;lt;n)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,num[j]);\n        j&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; \n    &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[&lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一行字符&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(c);\n    \n    &lt;span class=\"hljs-built_in\"&gt;f1&lt;/span&gt;(c);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;字母数:%d\\n空格数:%d\\n数字数:%d\\n其他字符:%d\\n&amp;#34;&lt;/span&gt;,letters,space,digit,other);\n    &lt;span class=\"hljs-built_in\"&gt;f2&lt;/span&gt;();\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["用C语言函数调用，尽量不用for循环", ["编写一个程序，计算一串字符中字母、空格、数字以及其他标识符的出现次数并输出，并将字母和数字按顺序存储到对应数据类型的数组中，且字母需要进行大小写转化，并输出。计算与输出要用函数调用形式。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;var arr&amp;#61;[];要放在循环中&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;var&lt;/span&gt; obj &amp;#61; {};\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;var&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-built_in\"&gt;var&lt;/span&gt; arr &amp;#61; [];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;var&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;var&lt;/span&gt; s &amp;#61; j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;#43;i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;(i*j);\n        arr.&lt;span class=\"hljs-built_in\"&gt;push&lt;/span&gt;(s);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&amp;#61;&amp;#61;i) {\n            obj[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; arr;\n        }\n    }\n}\nconsole.&lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(obj);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/038167812146118.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环", "Question": ["js中for循环中对象赋值，退出循环后对象的属性值消失", ["为什么我用数组arr赋值给obj后，访问obj里面什么都没有呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我觉得如果只是为了看起来光滑&amp;#xff0c;0.01就已经可以了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["matlab关于for循环步长问题", ["matlab那个步长能不能设置为无穷小，就比如画图的话怎么给他连续地表示出来？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个用到随机数&amp;#xff0c;你把0-9&amp;#xff0c;a-f依次放数组&amp;#xff0c;然后循环6次&amp;#xff0c;每次产生6个随机的十六进制数 然后拼接即可&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java中的for循环", ["如何用Java    for循环输出16进制颜色编码，谢谢大佬"]], "Tag": "程序设计"}
{"Answer": "首先我们看for循环的语句 \nfor(表达式1;表达式2;表达式3){  \n循环内容;  \n}  \n当进入for循环的时候，首先执行表达式1， 然后执行表达式2，判断是否满足条件  \n满足条件进入循环体，执行循环体内容，当循环结束后执行表达式3，然后再执行表达式2，判断是否还满足条件，这时i经过了表达式3后值已经变成了2.所以还是满足表达式2的条件。这样一直下去直到不满足的时候循环就结束了，这个过程......&lt;br/&gt;&lt;strong&gt;答案就在这里：&lt;/strong&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/rui19911014/article/details/47056833'&gt;for循环的使用&lt;/a&gt;&lt;br/&gt;----------------------Hi，地球人，我是问答机器人小S，上面的内容就是我狂拽酷炫叼炸天的答案，除了赞同，你还有别的选择吗？", "Konwledge_Point": "for循环", "Question": ["关于的for循环的用法和使用", ["求大神解答，对于多个for循环，是不是当执行一个for循环完了之后，才跳到下个fir循环？还是执行一次就跳一次，再往返执行？"]], "Tag": "程序设计"}
{"Answer": "遍历的元素,而不是索引\r\n要索引可以这么写\r\n\r\n\r\n```\r\n\tname=['lucy','tom','alan','andy']\r\n\tfor i in range(0, len(name)):\r\n\t\tprint(name[i])\r\n```", "Konwledge_Point": "for循环", "Question": ["python中的for循环问题", ["最近刚开始学习python,在for循环的时候遇到了一个一直想不明白的问题，求各位大神解惑，跪谢！", "\n\n", "先来看个示例：", "\nname=['lucy','tom','alan','andy']", "\n#遍历", "\nfor i in name:", "\n                print(i)", "\n\n", "问题来了：i 到底是列表索引，还是列表中的元素？"]], "Tag": "程序设计"}
{"Answer": "```\r\nclass Untitled {\r\n\tpublic static void main(String[] args) {\r\n\t\tlong num = 12345678901L;\r\n\t\tlong sum = num;\r\n\t\tfor (int i = 0; i &lt; 10; i++)\r\n\t\t{\r\n\t\t\tnum = (num % 10000000000L) * 10 + num / 10000000000L;\r\n\t\t\tsum += num;\r\n\t\t}\r\n\t\tSystem.out.println(sum);\r\n\t}\r\n}\r\n```\r\n结果\r\n511111111106", "Konwledge_Point": "for循环", "Question": ["Java 使用for循环和数学方法实现", ["把手机号第1个数字移到最后一位，累加，再移再加，计算一轮之后的结果，使用for循环+数学方法，不允许用字符串截取等字符串函数", "\n例：你的手机号是12345678901，则计算 23456789011+34567890112+45678901123+...+11234567890"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是六次&amp;#xff0c;\\t   a  \\01   8    b    c&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环的执行次数问题", ["第六次不是不执行吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,5):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(0,4 - i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(end &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(0,2*i-1):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;#&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["利用for循环进行python编程", ["\n", "是否是试用for循环呢？该怎么写呢？"]], "Tag": "程序设计"}
{"Answer": "```\r\npublic List&lt;List&lt;UserOrder&gt;&gt; findCat(){\r\n        //查询一级下线\r\n        //   int popularizeId = (int) tokenService.getAuthentication().get( \"popularizeId\" );//获取分销推广id\r\n        int popularizeId = 531571277;//获取分销推广id\r\n        EntityWrapper&lt;User&gt; userEntityWrapper = new EntityWrapper&lt;&gt;(  );\r\n        userEntityWrapper.where( \"PARENT_ID={0}\",popularizeId );\r\n        List&lt;User&gt; userList = webUsersMapper.selectList( userEntityWrapper );\r\n        List&lt;List&lt;UserOrder&gt;&gt; userOrderList = new ArrayList&lt;List&lt;UserOrder&gt;&gt;();\r\n        for(User user : userList){\r\n            List&lt;UserOrder&gt; userOrder = new ArrayList&lt;UserOrder&gt;();\r\n            Long userId = user.getId();//获得用户id\r\n            System.out.println(\"用户id\"+ userId );\r\n            EntityWrapper&lt;UserOrder&gt; userOrderEntityWrapper = new EntityWrapper&lt;&gt;(  );\r\n            userOrderEntityWrapper.where( \"UID={0}\" ,userId);\r\n            webUserOrderMapper.selectList( userOrderEntityWrapper );\r\n            userOrder = webUserOrderMapper.selectList( userOrderEntityWrapper );\r\n            userOrderList.add(userOrder);\r\n        }\r\n        return userOrderList;\r\n    }\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环得数据如何获取到", ["请问，我应该改成怎么样才可以获取把下面得FOR循环数据全部取出来", "\n现在只能获取到最后一条数据"]], "Tag": "程序设计"}
{"Answer": "这个意思？\r\n\r\n```\r\n sz += \"\"+\r\n                \"&lt;tr&gt;&lt;td&gt;\"+ dt.Rows[j][\"goods_title\"].ToString() + \"&lt;/td&gt;\"+\r\n                \"&lt;td&gt;\" + dt.Rows[j][\"goods_price\"].ToString() + \"&lt;/td&gt;\"+\r\n                \"&lt;td&gt;\" + dt.Rows[j][\"quantity\"].ToString() + \"&lt;/td&gt;\"+\r\n                \"&lt;td&gt;\" + Convert.ToDecimal(dt.Rows[j][\"goods_price\"].ToString())*Convert.ToInt32(dt.Rows[j][\"quantity\"].ToString()) + \"&lt;/td&gt;&lt;/tr&gt;\" +\r\n                \"\";\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环中赋值为何只有最后一次的值,如何得到所有值??", ["string sz = \"\";\nstring[] gs = new string[dt.Rows.Count];\nfor (int j = 0;j< gs.Length; j++) {\n        sz = \"\"+\n                \"<tr><td>\"+ dt.Rows[j][\"goods_title\"].ToString() + \"</td>\"+\n                \"<td>\" + dt.Rows[j][\"goods_price\"].ToString() + \"</td>\"+\n                \"<td>\" + dt.Rows[j][\"quantity\"].ToString() + \"</td>\"+\n                \"<td>\" + Convert.ToDecimal(dt.Rows[j][\"goods_price\"].ToString())*Convert.ToInt32(dt.Rows[j][\"quantity\"].ToString()) + \"</td></tr>\" +\n                \"\";\n}\nHtmlGenericControl h = new HtmlGenericControl(\"div\");\nh.InnerHtml = s + sz + se;\nthis.contentss.Controls.Add(h);\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;k&amp;#61;0的值永远是false啊&lt;br /&gt;帮忙采纳一下&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么这个for循环循环0次呢？", ["问一下大家为什么这个for循环为什么循环0次啊？它不是虚幻一次吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用int不够大&amp;#xff0c;s和p都需要改为long long类型&amp;#xff0c;输出改用%lld输出&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,n,i,m;\n&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,p;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;n);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (m&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;m&amp;lt;&amp;#61;n;m&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,p&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&amp;#61;m;i&amp;#43;&amp;#43;){\n  p&amp;#61;p*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;a;\n}\ns&amp;#61;s&amp;#43;p;\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;,s);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["请教一下，for循环基础", ["问题遇到的现象和发生背景", "\n", "for循环题目：", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include <stdio.h>", "int main(){", "  int a,n,i,m,s=0,p;", "  scanf(\"%d%d\",&a,&n);", "  for (m=1;m<=n;m++){", "\n", "for", "(", "i", "=1,p=0;i<=m;i++){\n  ", "p", "=p*10+a;\n}\n", "s", "=s+p;\n", "\n", "  }", "  printf(\"%d\",s);", "  return 0;", "}", "\n", "运行结果及报错内容", "\n", "只有“部分正确”", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "“答案正确”"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/JuneZhang/archive/2011/12/11/2284243.html", "Konwledge_Point": "for循环", "Question": ["关于for循环出dataset合并的问题", ["\n怎么把for每次循环出来的的dataset，保存到一个dataset里或者datatable里"]], "Tag": "程序设计"}
{"Answer": "这句话改成常见写法是：\r\nfor sp in range(3)：\r\n    Q[s, a] += T[s, a, sp] * (R[s, a, sp] + discount_rate * np.max(Q_prev[sp]))\r\n\r\n举个例子：\r\nt = [i for i in range(3)]\r\n相当于：\r\nt = []\r\nfor i in range(3):\r\n    t.append(i)\r\n这是一种非常方便的写法。", "Konwledge_Point": "for循环", "Question": ["一个在python句子里面的for循环", ["新手学python，我遇到一个python在句子里面，我不能理解这个for循环是什么意思。", "\n如果改成常见的那种for循环应该怎么写。", "\n我看不懂的代码是这一句", "\n\n", " Q[s, a] = np.sum([T[s, a, sp] * (R[s, a, sp] + discount_rate * np.max(Q_prev[sp]))    for sp in range(3)])\n", "\n\n", "这是完整的代码，运行的环境是jupyter，python版本是3.6.5", "\n\n", " import numpy as np\nnan = np.nan\nT = np.array([[[0.7,0.3,0.0],[1.0,0.0,0.0],[0.8,0.2,0.0]],\n              [[0.0,1.0,0.0],[nan,nan,nan],[0.0,0.0,1.0]],\n              [[nan,nan,nan],[0.8,0.1,0.1],[nan,nan,nan]]\n             ])\nR = np.array([[[10.,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],\n              [[10.,0.0,0.0],[nan,nan,nan],[0.0,0.0,-50.0]],\n              [[nan,nan,nan],[40.0,0.0,0.0],[nan,nan,nan]]\n             ])\npossible_actions = [[0,1,2],[0,2],[1]]\n\nQ = np.full((3, 3), -np.inf)  # -inf 对应着不可能的动作 \nfor state, actions in enumerate(possible_actions):    \n    Q[state, actions] = 0.0  # 对所有可能的动作初始化为0.0\nlearning_rate = 0.01 \ndiscount_rate = 0.95 \nn_iterations = 100\nfor iteration in range(n_iterations):   \n    Q_prev = Q.copy()    \n    for s in range(3):        \n        for a in possible_actions[s]:            \n            Q[s, a] = np.sum([T[s, a, sp] * (R[s, a, sp] + discount_rate * np.max(Q_prev[sp]))  \n            for sp in range(3)])\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;continue&lt;/code&gt; 关键字的作用是&lt;strong&gt;结束本次循环&lt;/strong&gt;&amp;#xff0c;又因为是 for 循环&amp;#xff0c;for 循环头的语句&lt;strong&gt;不算在循环体内&lt;/strong&gt;。&lt;br /&gt;所以会执行最后的 &lt;code class=\"language-javascript\"&gt;i&amp;#43;&amp;#43;&lt;/code&gt;&amp;#xff0c;如果你是写成 while 循环的形式&amp;#xff0c;类似于&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i &amp;lt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n    }\n    i&amp;#43;&amp;#43;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;那么 continue 结束本次循环后, 不会执行 &lt;code class=\"language-javascript\"&gt;i&amp;#43;&amp;#43;&lt;/code&gt;&lt;br /&gt;如果你希望使用 &lt;code class=\"language-javascript\"&gt;continue&lt;/code&gt; 之后不执行 &lt;code class=\"language-javascript\"&gt;i&amp;#43;&amp;#43;&lt;/code&gt; &amp;#xff0c;那么就使用 &lt;code class=\"language-javascript\"&gt;while&lt;/code&gt; 循环吧&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言for循环中continue的使用", ["在这个for循环中，为什么continue语句执行后还是会执行i++。谢谢各位了🙏"]], "Tag": "程序设计"}
{"Answer": "```java\r\n/**\r\n * 作者：WGS\r\n * 微信：w1150111308\r\n * Q  Q：1150111308\r\n * 邮箱：gosse0405@163.com\r\n */\r\npublic class Answer {\r\n\r\n\tstatic Scanner sc = new Scanner(System.in);\r\n\r\n\tstatic String[] cars = {\"\", \"奥迪A4\", \"马自达6\", \"皮卡雪6\", \"金龙\", \"松花江\", \"依维柯\"};\r\n\tstatic int[] prices = {0, 500, 400, 450, 800, 400, 1000};\r\n\tstatic int[] persons = {0, 4, 4, 4, 20, 0, 0};\r\n\tstatic int[] tons = {0, 0, 0, 2, 0, 4, 20};\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"欢迎使用租车系统\");\r\n\r\n\t\t// 输入的数字\r\n\t\tint whether = inputNum(\"您是否要租车：1是，0否\");\r\n\t\tswitch (whether) {\r\n\t\t\tcase 1:\r\n\t\t\t\t// 租车系统内容\r\n\t\t\t\tcontent();\r\n\t\t\t\t// 输入租车数量\r\n\t\t\t\tint num = 0;\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tnum = inputNum(\"请输入要租车的数量：\");\r\n\t\t\t\t\tif (num &gt; 0 &amp;&amp; num &lt; cars.length) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSystem.out.println(\"您输入的内容不在系统范围，请重新输入！\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 执行租车流程和账单结算\r\n\t\t\t\ttotal(inputGroupStr(\"请输入您要租车的序号和天数：\", num));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0:\r\n\t\t\t\tSystem.out.println(\"欢迎您下次使用本系统！\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.out.println(\"输入错误的数字\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 租车主体内容\r\n\t */\r\n\tpublic static void content() {\r\n\t\tSystem.out.println(\"您可租车的类型及其节目表如下：\");\r\n\t\tfor (int i = 1; i &lt; cars.length; i++) {\r\n\t\t\tSystem.out.println(\r\n\t\t\t\t\"序号-\" + i + \"\\t\"\r\n\t\t\t\t+ \"汽车名称：\" + cars[i] + \"\\t\"\r\n\t\t\t\t+ \"租金：\" + prices[i] + \"/天 \\t\"\r\n\t\t\t\t+ \"容量：\" + (persons[i] != 0 ? (\"最多载人\" + persons[i] + \"人\") : \"\")\r\n\t\t\t\t+ (persons[i] != 0 &amp;&amp; tons[i] != 0 ? \"，\" : \"\")\r\n\t\t\t\t+ (tons[i] != 0 ? (\"最多载货\" + tons[i] + \"吨\") : \"\")\r\n\t\t\t);\r\n\t\t}\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * 账单计算\r\n\t */\r\n\tpublic static void total(int[][] orderDays) {\r\n\t\tSystem.out.println(\"您的账单如下：\");\r\n\t\tint total = 0;\r\n\t\tfor (int i = 0; i &lt; orderDays.length; i++) {\r\n\t\t\tint order = orderDays[i][0];\r\n\t\t\tint days = orderDays[i][0];\r\n\t\t\ttotal += prices[order] * days;\r\n\t\t\tSystem.out.println(cars[order] + \" \\t\" + days + \"天\");\r\n\t\t}\r\n\t\tSystem.out.println(\"总价格：\" + total);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 输入单个数字内容\r\n\t * @return\r\n\t */\r\n\tpublic static int inputNum(String info) {\r\n\t\tSystem.out.println(info);\r\n\t\tString s = sc.nextLine();\r\n\t\tint num = -1;\r\n\t\ttry {\r\n\t\t\tnum = Integer.parseInt(s);\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\t/**\r\n\t * 输入三组数字内容\r\n\t * @return\r\n\t */\r\n\tpublic static int[][] inputGroupStr(String infoGroup, int num) {\r\n\t\tint[][] nums = new int[num][2];\r\n\t\tSystem.out.println(infoGroup);\r\n\t\tfor (int i = 0; i&lt; num; i++) {\r\n\t\t\twhile (true) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tString[] s = sc.nextLine().split(\" \");\r\n\t\t\t\t\tint order = Integer.parseInt(s[0]);\r\n\t\t\t\t\tint days = Integer.parseInt(s[1]);\r\n\t\t\t\t\tif (order &gt;= cars.length || order &lt;= 0 || days &gt;= cars.length &amp;&amp; days &lt;= 0) {\r\n\t\t\t\t\t\tSystem.out.println(\"您输入的内容不在系统范围，请重新输入！\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnums[i][0] = order;\r\n\t\t\t\t\t\tnums[i][1] = days;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\tSystem.out.println(\"您输入的内容不规范，请重新输入！\");\r\n\t\t\t\t\tSystem.out.println(\"【示例】：2 3\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nums;\r\n\t}\r\n}\r\n```\r\nhttps://blog.csdn.net/qq_34417433/article/details/104808640", "Konwledge_Point": "for循环", "Question": ["java 在for循环中使用scanner然后，输入三组数据，然后判断", ["\n1. 就是红色圈出来这部分就是运行时的效果，应该怎么实现呢，想了for循环       for (int i = 0; i <carnum1 ; i++) {", "\n           Scanner input=new Scanner(System.in);", "\n           String temp =input.nextLine();", "\n           String a[]=temp.split(\" \");", "\n           int num1=Integer.parseInt(a[0]);", "\n           int num2=Integer.parseInt(a[1]);", "\n           switch (num1){", "\n               case 1: System.out.println(\"奥迪\");break;", "\n               case 2: System.out.println(\"马自达\");break;", "\n               case 3: System.out.println(\"皮卡雪\");break;", "\n               case 4: System.out.println(\"金龙\");break;", "\n               case 5: System.out.println(\"松花江\");break;", "\n               case 6: System.out.println(\"依维柯\");break;}", "\n但是输出以一次一次输出的，"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;1;\n&lt;span class=\"hljs-attribute\"&gt;sum&lt;/span&gt;&amp;#61;0;\n&lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1:20\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;t*i;\n&lt;span class=\"hljs-attribute\"&gt;sum&lt;/span&gt;&amp;#61;sum&amp;#43;t;\nend\nsum\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["MATLAB利用 for 循环求1!+2!+3!...+20!的值。", ["如何利用MATLAB编写利用 for 循环求1!+2!+3!...+20!的值       \n                         "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use &lt;a href=\"http://www.php.net/manual/en/language.variables.variable.php\" rel=\"nofollow\"&gt;variable variable&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while ($i &amp;lt;= $totalproducts) {\n   $variable = 'product' . $i;\n\n   $$variable = $_POST['product' . $i];\n   $i++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But better will be use array:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$products = array();\nwhile ($i &amp;lt;= $totalproducts) {\n   $products[$i] = $_POST['product' . $i];\n   $i++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中增加变量名称", ["\n\n", "so I have a variable that I would like to set based on some submitted form data. On the form I have a set of fields that the user can increase the number of (that is, they can add more of the same type of field), and so I need to set the script that handles the submitted data to accomodate this.", "\n\n", "So far this is what I have:", "\n\n", "while ($i <= $totalproducts) {\n\n       $product.$i = $_POST['product'.$i];\n       $i++;\n\n    }\n", "\n\n", "$totalproducts holds the total number of fields. As an example, let's say I had 3 items, here's what I would like to get from the code:", "\n\n", "$product1 = $_POST['product1'];\n$product2 = $_POST['product2'];\n$product3 = $_POST['product3'];\n", "\n\n", "I'm sure I'm close, just can't quite slot it together...", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以这样做&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; INT_MIN; // 定义一个变量&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;并初始化为最小的整数值\nfor (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n  &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n  printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个数: &amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n  scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n  &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;) {\n    &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n  }\n}\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;15个数中的最大值是: %d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["C语言for循环求最大值", ["\n", "怎么用for循环求15个数中的最大值?（不用数组用C语言怎么求）。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is because there is only a single loop variable &lt;code&gt;chart&lt;/code&gt;, and in each iteration just a new value is assigned to it. So if you attempt to take the address of the loop variable, it will be the same in each iteration, so you will store the same pointer, and the pointed object (the loop variable) is overwritten in each iteration (and after the loop it will hold the value assigned in the last iteration).&lt;/p&gt;\n\n&lt;p&gt;This is mentioned in &lt;a href=\"https://golang.org/ref/spec#For_statements\" rel=\"noreferrer\"&gt;Spec: For statements: For statements with &lt;code&gt;range&lt;/code&gt; clause:&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The iteration variables may be declared by the \"range\" clause using a form of &lt;a href=\"https://golang.org/ref/spec#Short_variable_declarations\" rel=\"noreferrer\"&gt;short variable declaration&lt;/a&gt; (&lt;code&gt;:=&lt;/code&gt;). In this case their types are set to the types of the respective iteration values and their &lt;a href=\"https://golang.org/ref/spec#Declarations_and_scope\" rel=\"noreferrer\"&gt;scope&lt;/a&gt; is the block of the \"for\" statement; &lt;strong&gt;they are re-used in each iteration&lt;/strong&gt;. If the iteration variables are declared outside the \"for\" statement, after execution their values will be those of the last iteration.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Your second version works, because you pass the loop variable to a function, so a copy will be made of it, and then you store the address of the copy (which is detached from the loop variable).&lt;/p&gt;\n\n&lt;p&gt;You can achieve the same effect without a function though: just create a local copy and use the address of that:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for _, chart := range arr {\n    chart2 := chart\n    err := svc.repo.Store(&amp;amp;chart2) // Address of the local var\n    // ... error handling\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also note that you may also store the address of the slice elements:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i := range arr {\n    err := svc.repo.Store(&amp;amp;arr[i]) // Address of the slice element\n    // ... error handling\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The disadvantage of this is that since you store pointers to the slice elements, the whole backing array of the slice would have to be kept in memory for as long as you keep any of the pointers (the array cannot be garbage collected). Moreover, the pointers you store would share the same &lt;code&gt;Chart&lt;/code&gt; values as the slice, so if someone would modify a chart value of the passed slice, that would effect the charts whose pointers you stored.&lt;/p&gt;\n\n&lt;p&gt;See related questions:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/44044245/golang-register-multiple-routes-using-range-for-loop-slices-map/44045012#44045012\"&gt;Golang: Register multiple routes using range for loop slices/map&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/44715882/why-do-these-two-for-loop-variations-give-me-different-behavior/44716068#44716068\"&gt;Why do these two for loop variations give me different behavior?&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中使用指针-Golang", ["\n\n", "I'm new to golang and struggling to understand why I have a bug in my code in one state but not the other. It's been a while since I've covered pointers, so I'm probably rusty!", "\n\n", "Basically I have a repository structure I'm using to store an object in memory, that has a ", "Store", " function.", "\n\n", "type chartsRepository struct {\n    mtx    sync.RWMutex\n    charts map[ChartName]*Chart\n}\n\nfunc (r *chartsRepository) Store(c *Chart) error {\n    r.mtx.Lock()\n    defer r.mtx.Unlock()\n    r.charts[c.Name] = c\n    return nil\n}\n", "\n\n", "So all it does is put a RW mutex lock on and adds the pointer to a map, referenced by an identifier.", "\n\n", "Then I've got a function that will basically loop through a slice of these objects, storing them all in the repository.", "\n\n", "type service struct {\n    charts Repository\n}\n\nfunc (svc *service) StoreCharts(arr []Chart) error {\n    hasError := false\n    for _, chart := range arr {\n        err := svc.repo.Store(&chart)\n        // ... error handling\n    }\n    if hasError {\n        // ... Deals with the error object\n        return me\n    }\n    return nil\n}\n", "\n\n", "The above doesn't work, it looks like everything works fine at first, but on trying to access the data later, the entries in the map all point to the same ", "Chart", " object, despite having different keys.", "\n\n", "If I do the following and move the pointer reference to another function, everything works as expected:", "\n\n", "func (svc *service) StoreCharts(arr []Chart) error {\n    // ...\n    for _, chart := range arr {\n        err := svc.storeChart(chart)\n    }\n    // ...\n}\n\nfunc (svc *service) storeChart(c Chart) error {\n    return svc.charts.Store(&c)\n}\n", "\n\n", "I'm assuming the issue is that because the loop overwrites the reference to the ", "chart", " in the ", "for", " loop, the pointer reference also changes. When the pointer is generated in an independent function, that reference is never overwritten. Is that right?", "\n\n", "I feel like I'm being stupid, but shouldn't the pointer be generated by ", "&chart", " and that's independent of the ", "chart", " reference? I also tried creating a new variable for the pointer ", "p := &chart", " in the ", "for", " loop and that didn't work either.", "\n\n", "Should I just avoid generating pointers in loops?", "\n\n", "Sorry for the multitude of questions, but I really want to get my head around this and I can't seem to find resources to explain this clearly.", "\n\n", "Thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;只要使用for循环就行了是吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;input()\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;list(a)\nb.sort()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; b[::-1]:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["python 编写程序题使用for循环", ["输入一个正整数，输出其各位数字重排后最大整数", "例输入2017 输出7210"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看你线程池设置的几个线程&amp;#xff0c;比如你线程池设置的是3个线程&amp;#xff0c; 那么循环3次都是立刻执行&amp;#xff0c; 循环第4次的时候线程池没有线程&amp;#xff0c;执行到threadPoolTaskExecutor.submit()会被阻塞&amp;#xff0c;当前面3个线程里有1个线程执行后&amp;#xff0c;这个完成任务的线程会继续执行threadPoolTaskExecutor.submit()的任务&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环里面多线程使用", ["private", " ", "final", " ThreadPoolTaskExecutor threadPoolTaskExecutor;\n", "\n", "for（）{", "\n", "threadPoolTaskExecutor.submit()", "\n", "}", "\n", "for循环里面用多线程执行业务，是不是每循环一次，就会创建一个线程？还是怎样逻辑，没搞明白"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你第二个for循环&amp;#xff0c;循环变量也是i&amp;#xff0c;与第一个循环变量冲突了。&lt;br /&gt;外层第一次循环时&amp;#xff0c;j为0&amp;#xff0c;第二次循环到i&amp;#61;a时结束。这时第一个循环也不会再运行了&amp;#xff0c;因为i&amp;#61;a&amp;#xff0c;已经不满足循环条件啦。&lt;br /&gt;解决方法就是第二个for循环定义一个新的循环变量就行了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环不能执行是出现了什么问题", ["最外层的for循环无法执行，我感觉没有问题,只能执行一次,谁能告诉我这个for循环问题出在哪&"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;matlab作为矩阵友好型的语言一般不建议用for&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;]\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;log(x&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;end&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-title\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["y=2x²+ln(x+1)已知x=[5,1,2,3,6,19]编程用for循环求y", ["y=2x²+ln(x+1),已知x=[5,1,2,3,6,19],", "编程用for循环求y", "需要对x用zeros进行数组定义吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;阶乘结果超出int类型数据范围&amp;#xff0c;改成double或者longlong类型试试&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环实现正整数的阶乘", ["用for循环实现正整数的阶乘，这两个代码都有问题，运行时，输入20直接出现负数，输入450，出现结果为0，请教大神是哪里出错了，"]], "Tag": "程序设计"}
{"Answer": "第一次循环i=1、2、3都是正常输出\r\n当i=4时，进入if里面，i-=2，结果i=2，continue的作用是跳过下面的内容，直接开启下一次循环，也就是不会输出i=2，直接进行i++，\r\n然后i=3，正常输出，再次循环i=4，就回到上一次的i=4的过程，就变成了死循环，并不断输出3", "Konwledge_Point": "for循环", "Question": ["for循环和continue的问题", ["public class test", "\n{", "\n    public  static  void main (String[] args)", "\n    {", "\n        for(int i=0;i<9;i++)", "\n        {", "\n        if(i==4)", "\n        {", "\n            i-=2;", "\n            continue;", "\n        }", "\n        System.out.println(i);", "\n     }", "\n    }", "\n}", "\n\n", "这段代码为什么输出的是3"]], "Tag": "程序设计"}
{"Answer": "for和while与线程是没有必然关系的，这俩只是实现循环的两种方式，与线程并不挂钩，这点要搞清楚。\r\n\r\n\r\n另外，你的代码中 `for` 和 `while` 这两种循环方式都存在线程安全问题，因为 `++` 操作符就不是一个线程安全的操作。\r\n\r\n\r\n`index`一直变是因为`for`操作中有两个线程不安全的变量两处不安全操作，虽然在这里变量`i`不会出现问题，但是它的`++`操作还是提高了每次循环所需的时间，这提高了所谓脏读的概率。\r\n\r\n\r\n`number`一直不变是因为`while`操作中只有一个线程不安全的变量`number`，而且条件和结果都是它自己，只有一处相对耗时操作，出现脏读的概率要小得多，而且你的数据量也比较小，线程数比较小碰巧最后几次没有遇到脏读。\r\n\r\n\r\n如果你\r\n```\r\n1.在每次循环中增加一点其他操作，比如打印语句增加每次循环时间\r\n2.增加线程数\r\n```\r\n那么你会发现`while`的结果也是不固定的，这点我想需要给你指出来。\r\n\r\n\r\n说完了一个一直变一个不变，下面是数值问题\r\n\r\n`for`循环中对`index`值没有做限定，所以线程安全情况下应该是两个线程循环两万次最终结果是2万，但是由于你的`for`循环逻辑中脏读概率较高(注意是你的代码逻辑导致的概率高，不是`for`循环导致的)，所以一直达不到两万而且一直在变\r\n\r\n\r\n`while`循环中限制了`number`上限，线程安全情况下只会循环1万次，但是实际循环上限是超过一万次的，而且限制了`number`上限，在到达上限之前虽然出现了脏读但对最终结果影响不会太大(只是你现在的情况，如果线程逻辑不同可能影响就会比较大了)，你的代码中当`number`接近上限1万的时候出现的脏读才会明显影响最终数据，所以即使出现脏读，最终结果也不会差太多", "Konwledge_Point": "for循环", "Question": ["java多线程中使用for循环和while循环的区别", ["下面是代码，我的到的结果是number一直是1W，而index一直在1W-2W之间。", "\n请问下这是为什么？", "\n\n", "public class MultiThreadsError implements Runnable {\n    int index = 0;\n    int number = 0;\n    int j = 0;\n    static MultiThreadsError instance = new MultiThreadsError();\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread1 = new Thread(instance);\n        Thread thread2 = new Thread(instance);\n        thread1.start();\n        thread2.start();\n        thread1.join();\n        thread2.join();\n        System.out.println(instance.index);\n        System.out.println(instance.number);\n    }\n    @Override\n    public void run() {\n        for (int i = 0; i < 10000; i++) {\n            index++;\n        }\n        while (number< 10000) {\n            number++;\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正常就应该是这样的&amp;#xff0c;你的循环本来就是在改变aliens列表的值呀&amp;#xff0c;alien是列表的其中一个元素。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么改变for循环中接受数据的变量的值可以影响到被遍历列表的值", ["\nalien_0 = {'color': 'green', 'points': 5}\nalien_1 = {'color': 'yellow', 'points': 10}\nalien_2 = {'color': 'red', 'points':15}\n# 创建一个空列表用于存储外星人\naliens = []\n\n# 创建30个绿色的外星人\nfor alien in range(30):\n    new_aliens = {'color': 'green', 'points': 5, 'speed': 'slow'}\n    aliens.append(new_aliens)\n\n# 改变前三个外星人的数据 \nfor alien in aliens[:3]:\n    if alien['green'] == 'green':   （问题所在处:为什么改变alien的值会改变aliens列表的值）\n        alien['color'] = 'yellow'\n        alien['points'] = 10\n        alien['speed'] = 'slow'\n\n\n# 打印前5个星人\nfor alien in aliens[:5]:\n    print(alien)\n\n# 显示创建了多少个外星人\nprint(f\"外星人的个数：{len(aliens)}\")"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入 -1 i%2!&amp;#61;0,sum&amp;#43;&amp;#61;i  -1也参与计算了&lt;br /&gt;解决方法&amp;#xff1a;输入i之后加一判断 if(i&amp;lt;0) break;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环求奇数和的问题", ["\n", "图一是题目要求", "图二是我写的过程及运行结果", "为什么我在for的条件中已经规定i大于0还是会把-1算到循环中呢？"]], "Tag": "程序设计"}
{"Answer": "StringBuffer  sb = new StringBuffer();\r\n\r\nfor(int i = 1;i &lt; 5;i++){\r\n  sb.append(\"test\"+i);\r\n\tif(i != 4){\r\n\t   sb.append(\",\");\r\n\t }\r\n}\r\n\r\nSystem.out.println(sb.toString());", "Konwledge_Point": "for循环", "Question": ["java for循环问题放入一条string中", ["for(int i=1; i<5;++i){", "\n            System.out.println(i);", "\n}", "\n\n", "i的输出值是1，2，3，4；有什么办法能够把1234放在string中下面的这个样子", "\n如果输出是 “ test1 AND table 1，test2 AND table 2，test3 AND table 3，test4 AND table4;该怎么办？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for j in range(c-4):&lt;br /&gt;为啥是c-4呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for 循环为什么没有执行", ["\n", "\ndef win(r,c,n):\n    ", "for", " j ", "in", " range(c-4):\n        ", "for", " i ", "in", " range(r-4):\n            \n            l=[]\n            ", "cnt", "=0\n            ", "while", " cnt<4:\n                \n                l.append(n[i][j])\n                i+=1;j+=1\n                cnt+=1\n            ", "print", "(l)\n            ", "if", " len(l)==4 ", "and", " len(", "set", "(l))==1 ", "and", " {k ", "for", " k ", "in", " l}<={", "'O'", ",", "'X'", "}:\n                return ", "True", "\n            ", "else", ":\n                l.clear(); ", "cnt", "=0\n", "r", "=5;c=5\nn=[[", "'.'", ", ", "'X'", ", ", "'·'", ", ", "'·'", ", ", "'·'", "], [", "'.'", ", ", "''", ", ", "'X'", ", ", "'·'", ", ", "'·'", "],[", "'·'", ", ", "'·'", ", ", "'·'", ", ", "'X'", ", ", "'·'", "],[", "'·'", ", ", "'·'", ", ", "'·'", ", ", "'·'", ", ", "'X'", "],[", "'·'", ", ", "'·'", ", ", "'·'", ", ", "'·'", ", ", "'·'", "]]\n", "if", " win(r,c,n):\n    ", "print", "(", "'k'", ")\n", "else", ":\n    ", "print", "(", "'j'", ")\n", "\n", "想check所有斜面cases， 为何for循环不执行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int sum &amp;#61; 0;&lt;/p&gt;\n&lt;p&gt;for (int i &amp;#61; 1;i &amp;lt;&amp;#61; 100 ;i&amp;#43;&amp;#61;2 ) {&lt;!-- --&gt;&lt;/p&gt;\n&lt;p&gt;/*if (i % 2 !&amp;#61; 0) {&lt;!-- --&gt;&lt;/p&gt;\n&lt;p&gt;sum &amp;#61; sum &amp;#43; i;&lt;/p&gt;\n&lt;p&gt;}*/&lt;/p&gt;\n&lt;p&gt;sum &amp;#61; sum &amp;#43; i;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["javafor循环刚写不会", ["怎么用for循环写出100以内的奇数和", "额"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n \n \n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n, i, j, k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#61;&amp;#34;&lt;/span&gt;, n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n    {\n        \n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n%i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                n &amp;#61; n / i;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) { &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, i); k&amp;#43;&amp;#43;; }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*%d&amp;#34;&lt;/span&gt;, i);\n            }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["c语言中for循环相关问题", ["\n", "这个分解质因数中,第二个for循环有啥用,j变量的意义在哪", "\n", "\n", "\n", "#include<stdio.h>", "\n\n\n", "int", " main()\n{\n    ", "int", " n, i, j, k = ", "1", ";\n    scanf(", "\"%d\"", ", &n);\n    ", "printf", "(", "\"%d=\"", ", n);\n    ", "for", " (i = ", "2", "; i <= n; i++)\n    {\n        ", "for", " (j = ", "2", "; j < i; j++)\n            ", "if", " (i%j == ", "0", ") ", "break", ";\n        ", "if", " (j >= i)\n            ", "while", " (n%i == ", "0", ")\n            {\n                n = n / i;\n                ", "if", " (k == ", "1", ") { ", "printf", "(", "\"%d\"", ", i); k++; }\n                ", "else", " ", "printf", "(", "\"*%d\"", ", i);\n            }\n    }\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个循环有问题的&amp;#xff0c;循环中输入的input[i]和for循环中的input[i]不是同一个i值啊。当输入input[i]以后&amp;#xff0c;进入下一次循环时&amp;#xff0c;执行i&amp;#43;&amp;#43;后&amp;#xff0c;i值增大了1&amp;#xff0c;下次循环判断input[i]!&amp;#61;&amp;#39;\\n&amp;#39;时&amp;#xff0c;这个i是加了1以后的i。所以不行&lt;br /&gt;改为&amp;#xff1a;&lt;br /&gt;for(int i&amp;#61;0;;i&amp;#43;&amp;#43;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;scanf(&amp;#34;%c&amp;#34;,&amp;amp;input[i]);&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  if(input[i] &amp;#61;&amp;#61; &amp;#39;\\n&amp;#39;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    break;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环不满足起始条件后不退出循环", ["for循环不满足起始条件后不退出循环", "#include<stdio.h>", "#include<string.h>", "int main()", "{", "    char input[255];", "    printf(\"please enter the setence:\\n\");", "    for(int i=0;input[i]!='\\n';i++)", "    {", "        scanf(\"%c\",&input[i]);", "    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用of遍历&amp;#xff0c;不是in&amp;#xff0c;in的值只是数组的下标&amp;#xff0c;并不是遍历每一项的值&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["js的for循环换一种写法总是报错", ["想试一下js的另一种for循环但是总报错，Uncaught TypeError: Cannot read properties of undefined (reading 'firstElementChild')"]], "Tag": "程序设计"}
{"Answer": "```\r\nvar carriers = result.gtex_carriers;\r\nfor(var i=0; i&lt;carriers.length; i++) {\r\n    if(carriers[i].carrier_name == $('#carrier').val()) {\r\n\t\t    #('#new2').html(\"电话号码：\" + carriers[i].carrier_phone);\r\n\t\t}\r\n} \r\n```", "Konwledge_Point": "for循环", "Question": ["Ajex的for循环小问题！", ["学习web前端中，因为之前从未接触过，有些概念无法明白，比如JS中的for循环。", "\n在这里列举一个小问题前来咨询各位大神。", "\n浏览器是谷歌，引入的jQuery是3.0.0，这里我想做的样式很简单，就是在文本框中输入“EMS”等快递公司名字，然后显示出相关快递公司的代码，公司名和电话这头三项。", "\n图1是html中的body，", "\n图2是按照老师模板写的Ajex,", "\n图3就是在谷歌上运行的结果的，查询后得到数组Arr[0]的phone是11183，", "\n图4，5是调用的API和示例。", "\n我目前要求不高，只希望能在文本框中输入快递公司名然后在html显示相关的公司和电话。", "\n1.  PS：不想做伸手党，有高手说想了解要学习C语言的循环部分，那应该看什么书好？", "图片说明"]], "Tag": "程序设计"}
{"Answer": "i=2 为什么要跳出for循环呢？？它不满足 小于3的条件的？？\r\n\r\ni = 0; i &lt; 3;     // i = 0\r\n进入循环体 ...\r\ni++；        \r\ni 小于 3          // i = 1\r\n再次进入循环体\r\ni++\r\ni 小于 3         // i = 2\r\n循环体\r\ni++               // i = 3\r\ni 小于 3 ？    //false   跳出", "Konwledge_Point": "for循环", "Question": ["一个关于for循环的例子", ["\npublic class blackDemo2 {", "\n\n", "static int i;\n\npublic static void main(String[] args) {\n\n    for ( i = 0; i < 3; i++) {\n\n        int a = 0;\n        int b=0;\n\n        a+=i;\n        System.out.println(\"每\"+i+\"次运行时的i值是\"+i);\n\n\n    }\n    System.out.println(\"跳出for循环时i的值是\"+i);\n\n}\n", "\n\n", "}", "\n\n", "我知道跳出for时输出的i值是i在for循环中的次数，但是为什么跳出for循环时i的值不是", "\n2？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;File[] files &amp;#61; deleteDir.listFiles();&lt;br /&gt;这个数组files内容就没变过&amp;#xff0c;&lt;br /&gt;哪句话写了修改这个数组元素内容&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["增强for循环递归删除文件夹", ["public", " ", "static", " ", "void", " main(String[] args) {\n        ", "File", " deleteDir = ", "new", " ", "File", "(", "\"sectect/fff\"", ");\n        ", "delete", "(deleteDir);\n    }\n", "public", " ", "static", " ", "void", " ", "delete", "(", "File", " deleteDir){\n        ", "File", "[] files = deleteDir.listFiles();\n        ", "if", "(files!=", "null", ") {\n            ", "for", " (", "File", " fileOrDir : files) {\n                ", "if", " (fileOrDir.isFile()) {\n                    fileOrDir.", "delete", "();\n                }", "else", " ", "if", "(fileOrDir.isDirectory()){\n                    ", "delete", "(fileOrDir);\n                }\n            }\n        }\n        deleteDir.", "delete", "();\n    }\n", "\n", "使用增强for循环递归删除文件数组,采用每个文件的删除方法,虽然不是调用数组对某个元素的删除方法,但是也算这个数组少了某个元素,应该也是会有索引错误的问题,但是这样子确实可以删除文件夹,不能理解,求解答!"]], "Tag": "程序设计"}
{"Answer": "```\r\nfor(s=n,m--;m;s+=n=sqrt(n),m--);\r\n就是\r\ns = n;\r\nm--;\r\nwhile (m &gt; 0) //或者说m != 0\r\n{\r\nn=sqrt(n);\r\ns += n;\r\nm--;\r\n}\r\n```", "Konwledge_Point": "for循环", "Question": ["关于C++中for循环的问题", ["刚刚在百度上搜题，发现这样一段代码，其中的for循环的应用实在是高深莫测，希望前辈可以指点迷津，解释一下这样使用for循环语句的作用，不胜感激", "\n\n", "#include \"stdio.h\"\n#include \"math.h\"\nint main(int argv,char *argc[]){\n    double n,s;\n    int m;\n    printf(\"Input n & m(int 0<n<10000 & 0<m<1000,other end)...\\n\");\n    while(scanf(\"%lf%d\",&n,&m)==2 && n>0 && n<10000 && m>0 && m<1000){\n        for(s=n,m--;m;s+=n=sqrt(n),m--);\n        printf(\"%.2f\\n\\n\",s);\n    }\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n你可以这里不分页&amp;#xff0c;把全部查询出来&amp;#xff0c;得到最后list再分页\n&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;//PageHelper.startPage(commonQo.getPageNum(),commonQo.getPageSize());\nList&amp;lt;FleetData&amp;gt; fleetData &amp;#61; fleetDataMapper.selectMarkAndSelfIdOne();&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["PageHelper 为什么我的PageSize传的数字是几 然后for循环就循环即便 在线等", ["\n    @Override\n    public PageInfo<FleetData> selectMarkAndSelfIdOne(CommonQo commonQo) {\n       ", "//我这里PageSize要是传5", "\n        PageHelper.startPage(commonQo.getPageNum(),commonQo.getPageSize());\n\n        List<FleetData> fleetData = fleetDataMapper.selectMarkAndSelfIdOne();\n        //debug断点\n        PageInfo<FleetData> pageInfo = new PageInfo<>(fleetData);\n\n        List<FleetData> fleetDataList = new ArrayList<>();\n        System.out.println(fleetData.size());\n        ", "//for循环就循环5", "\n        for (FleetData fleetData2: fleetData) {\n            Long userId= fleetData2.getId();//获得用户id\n            //System.out.println(\"用户id=======\"+ userId );\n            List<FleetBill> fleetBills = fleetBillMapper.selectBySelfId(userId);\n            if (fleetBills.size()>0){\n                for (FleetBill fleet:fleetBills) {\n                    Long userId1= fleet.getFleetId();//获得用户id\n                    //System.out.println(\"客户id=======\"+ userId1 );\n                }\n            }\n            else {\n                fleetDataList.add(fleetData2);\n            }\n        }\n//        PageInfo<FleetData> page= new PageInfo<>(fleetDataList);\n//        BeanUtils.copyProperties(pageInfo,page);\n        pageInfo.setList(fleetDataList);\n        return pageInfo;\n    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环当不完全匹配的时候&amp;#xff0c;如&amp;#39;flower&amp;#39;,&amp;#39;flight&amp;#39;这2个单词&amp;#xff0c;会在匹配第三个字符的时候不成功&amp;#xff0c;index一直在2这个值无法增加变死循环&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;while的话对应位置 s1.charAt(index) &amp;#61;&amp;#61; s2.charAt(index)不匹配就退出循环了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么for循环会超时而while循环就没事，二者有什么区别啊", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;错误在于这两行&amp;#xff1a;&lt;br /&gt;for b_1 in np.arange(-0.5, -1.0, 0.1):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            for b_2 in np.arange(-0.5, -1.0, 0.1):&lt;/span&gt;&lt;br /&gt;步长写错了&amp;#xff0c;这样返回结果为None&lt;br /&gt;步长应该是-0.1&amp;#xff0c;代码这样改写一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n&lt;span class=\"hljs-attribute\"&gt;s_v1&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;s_v3&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;s_all&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; a_1 in np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; a_2 in np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; b_1 in np.arange(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; b_2 in np.arange(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; v1 in np.arange(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; v2 in np.arange(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                        &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; v3 in np.arange(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                            &lt;span class=\"hljs-attribute\"&gt;t1&lt;/span&gt;&amp;#61;(v1-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)/a_1\n                            &lt;span class=\"hljs-attribute\"&gt;t2&lt;/span&gt;&amp;#61;(s_v1-t1*v1/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/v1\n                            &lt;span class=\"hljs-attribute\"&gt;t3&lt;/span&gt;&amp;#61;(v2-v1)/a_2\n                            &lt;span class=\"hljs-attribute\"&gt;t7&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;-v3)/b_2\n                            &lt;span class=\"hljs-attribute\"&gt;t6&lt;/span&gt;&amp;#61;(s_v3-t7*v3/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/v3\n                            &lt;span class=\"hljs-attribute\"&gt;t5&lt;/span&gt;&amp;#61;(v3-v2)/b_1\n                            &lt;span class=\"hljs-attribute\"&gt;t4&lt;/span&gt;&amp;#61;(s_all-s_v3-s_v1-(v1&amp;#43;v2)*t3/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-(v2&amp;#43;v3)*t5/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/v2\n                            &lt;span class=\"hljs-attribute\"&gt;s1&lt;/span&gt;&amp;#61;t1*v1/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n                            &lt;span class=\"hljs-attribute\"&gt;s2&lt;/span&gt;&amp;#61;v1*t2&amp;#43;s1\n                            &lt;span class=\"hljs-attribute\"&gt;s3&lt;/span&gt;&amp;#61;(v1&amp;#43;v2)*t3/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;s2\n                            &lt;span class=\"hljs-attribute\"&gt;s4&lt;/span&gt;&amp;#61;v2*t4&amp;#43;s3\n                            &lt;span class=\"hljs-attribute\"&gt;s5&lt;/span&gt;&amp;#61;(v2&amp;#43;v3)*t5/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;s4\n                            &lt;span class=\"hljs-attribute\"&gt;s6&lt;/span&gt;&amp;#61;v3*t6&amp;#43;s5\n                            &lt;span class=\"hljs-attribute\"&gt;s7&lt;/span&gt;&amp;#61;v3*t7/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;s6\n                            &lt;span class=\"hljs-attribute\"&gt;s_list&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, s1, s2, s3, s4, s5, s6, s7]\n                            &lt;span class=\"hljs-attribute\"&gt;v_list&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, v1, v1, v2, v2, v3, v3, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n\n                            &lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.plot(s_list,v_list)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.show()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;才能保证列表不为空&amp;#xff0c;并将plot函数放入循环&amp;#xff0c;画出多条曲线&amp;#xff08;由于循环嵌套过多&amp;#xff0c;运行较慢较卡&amp;#xff09;。&lt;br /&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/222362894236131.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;如果解答对你有用&amp;#xff0c;请点击一下我回答的右上方采纳按钮支持一下。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于For循环绘制大量曲线问题", ["我是小白，以前没学过编程。就是我想要生成大量的横坐标是路程S，纵坐标是速度V的曲线，我的思路是利用for循环生成很多个列表（代码里我是每循环一次，生成一次S_table,和V_table这两个列表）；", "因为想要把这些曲线画在一张图里，然后我把S_table,和V_table分别存到S_list和V_list中，这样就会有很多个小列表（S_table,和V_table）存在大列表（S_list和V_list）中，再用matplotlib绘制（S_list和V_list），这样其中的小列表（S_table,和V_table）就会一一对应，绘制出来。但是我发现plt画不出来，我找到原因其中一个也许是S_table,和V_table是空列表，我不知道为什么会是空列表，我觉得思路是没问题的呀，有谁可以指点指点我，或者提供一个更好的思路吗？代码如图1。", "\n", "注：4-6行，11-34行是一下物理参数，a代表加速度，b代表减速度，我验证过了公式之间和生成的数据是没问题的，我抛开我弄列表的思想，单独绘制一条曲线是可行的，如图2。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你需要在事件内使用事件外的循环变量i。&lt;br /&gt;当事件触发时&amp;#xff0c;那个循环早就结束了&amp;#xff0c;那时的i的值已经是循环最大值加1了。&lt;br /&gt;所以需要用一些方式保存住当前循环的i的值。&lt;/p&gt;\n&lt;h4 id=\"h4_方案一&amp;#xff1a;用闭包保存住当前循环的i的值_1654613883312\"&gt;方案一&amp;#xff1a;用闭包保存住当前循环的i的值&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n    (&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;){\n        bgImg[i].&lt;span class=\"hljs-property\"&gt;onload&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(bgImg[i]);\n        }\n    })(i);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4 id=\"h4_方案二&amp;#xff1a;用let块作用域变量_1654613883370\"&gt;方案二&amp;#xff1a;用let块作用域变量&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (let i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n    bgImg[i].onload &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; function () {\n        console.log(bgImg[i])&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    \n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4 id=\"h4_方案三&amp;#xff1a;为事件元素设置一个index属性&amp;#xff0c;在事件函数内通过this获取当前对象并访问index属性。_1654613883413\"&gt;方案三&amp;#xff1a;为事件元素设置一个index属性&amp;#xff0c;在事件函数内通过this获取当前对象并访问index属性。&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (var i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n    bgImg[i].index &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    bgImg[i].onclick &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; function () {\n        console.log(bgImg[this.index])&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Javascript  for循环遍历图片显示不出来", ["Javascript  for循环遍历图片显示不出来", "\n", "控制台提示bgIm[i]的类型是undefined，但是不用循环直接bgImg[0]就可以显示图片", "\n", "\n", "控制台显示：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、程序会把不能进入循环的情况考虑进去&amp;#xff0c;但是程序不知道能不能进入循环&amp;#xff0c;所以需要在循环外增加return&lt;br /&gt;2、你这循环内的代码逻辑好像没什么意义&amp;#xff0c;因为循环只会走一次就return结束了&amp;#xff0c;也就是只能判断ids[0] &amp;#61;&amp;#61; &amp;#34;10001&amp;#34;的情况&amp;#xff0c;如果只判断第一个的话完全不需要循环&amp;#xff0c;直接获取第一个拿来判断就行了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["return放for循环里，为什么会显示缺少返回值？", ["以上是我的代码，定义了return返回值，但是运行时，会显示缺少返回值，放for循环外时，问题又没了，哪位哥解答一下呀？"]], "Tag": "程序设计"}
{"Answer": "[js、vbs二维数组排列组合示例](http://www.w3dev.cn/article/20160113/js-vbs-two-dimensional-array-combination-demo.aspx \"\")", "Konwledge_Point": "for循环", "Question": ["不确定层级for循环怎么写", ["例如有n个数组", "\nvar arr1=[1,2,3]", "\nvar arr2=[4,5,6]", "\nvar arr3=[7,8,9]", "\nvar arr....", "\n\n", "怎么遍历获取：", "\n1,4,7....", "\n2,4,7....", "\n3,4,7....", "\n1,5,7....", "\n\n", "算法咋写，数组个数不确定"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的for循环加锁了&amp;#xff0c;while循环没加锁&amp;#xff0c;效果是不一样的&amp;#xff0c;加锁的会先全部执行完才轮到其他的&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for 循环和while 循环在多线程中会造成不同结果吗", ["我自己写了两个卖票的多线程代码，分别采用for循环和while循环来实现票数的减少，发现结果并不一样，请各位师兄师姐帮忙看看问题出在哪里，是不是我写的for循环的思路不对。", "\n\n", "\n\n", "这张是它的运行结果，每个线程都要等到上一个线程结束才会执行，是因为同步的问题吗。", "\n\n", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You don't need to assign anything, just use &lt;code&gt;for range&lt;/code&gt;, like this &lt;a href=\"https://play.golang.org/p/Np3GoVB1E5\" rel=\"noreferrer\"&gt;(on play)&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    ticker := time.NewTicker(time.Millisecond * 500)\n    go func() {\n        for range ticker.C {\n            fmt.Println(\"Tick\")\n        }\n    }()\n    time.Sleep(time.Second * 2)\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何避免“ for循环中未使用的变量”错误", ["\n\n", "How to avoid \"unused variable in a for loop\" error with code like", "\n\n", "ticker := time.NewTicker(time.Millisecond * 500)\ngo func() {\n    for t := range ticker.C {\n        fmt.Println(\"Tick at\", t)\n    }\n}()\n", "\n\n", "if I actually don't use the ", "t", " variable?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一种&amp;#xff0c;在不满足条件的时候输出&amp;#xff0c;但是n已经自增后再输出的。与循环次数一致。&lt;br /&gt;第二种&amp;#xff0c;每一次都会输出&amp;#xff0c;但是不满足条件时的n不会输出。&lt;br /&gt;比循环次数少1。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-section\"&gt;总结:因为第一种在循环体中自增的。循环的执行步骤&lt;/span&gt;\n1&amp;#xff1a;判断是否满足循环条件\n&lt;span class=\"hljs-section\"&gt;2:满足执行循环体&amp;#xff0c;否则退出&lt;/span&gt;\n&lt;span class=\"hljs-section\"&gt;3:执行递增&amp;#xff0c;重复第一步。&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;这么写就是一样的&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; pt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.006&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; pt &amp;lt; &lt;span class=\"hljs-number\"&gt;38500000000&lt;/span&gt;; pt *&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, n&amp;#43;&amp;#43;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["c语言中的for循环相关问题", ["\n", "int", " ", "main", "()", "\n", "{\n    ", "double", " pt = ", "0.006", ";\n    ", "int", " n=", "0", ";\n    ", "for", " (; pt < ", "38500000000", "; pt *= ", "2", ")\n        n++;\n    ", "printf", "(", "\"%d\\n\"", ", n);\n    ", "return", " ", "0", ";\n}\n", "\n", "\n", "int", " main()\n{\n    ", "double", " pt = ", "0", ".", "006", ";\n    ", "int", " n=", "0", ";\n    ", "for", " (; ", "pt", " < ", "38500000000", "; ", "pt", " *= ", "2", ", n++)\n    printf(", "\"%d\\n\"", ", n);\n    ", "return", " ", "0", ";\n}\n", "\n", "请问这两段for循环代码的区别在哪，为什么前后两次n的值都不同,第一次n的值为 43，第二次n的值值为42,前后差了一次循环。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main(void)\n{\n    int a[10]&amp;#61;{1,11,22,3,5,15,12,14,2,4};\n    int i; \n    for(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;){\n        if(a[i]&amp;gt;10){\n            printf(&amp;#34;大于10的数%d\\n&amp;#34;,a[i]);\n        }else if(a[i]&amp;lt;5){\n            printf(&amp;#34;小于5的数%d\\n&amp;#34;,a[i]);\n        }\n    }\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环输出以下数组内大于10的数与小于5的 a[10]=｛1，11，22，4，2，", ["（1）用for循环分别输出以下数组内大于10的数与小于5的数。\na[10]=｛1，11，22，4，2，12，14，3，5，15｝\n\nint a[10]={1,11,22,3,5,15,12,14,2,4};\nint i,b;\n\n for(i=0;i<10;i++);\nb=a[i];\nif (i=0)\na[i]=1;\nif (i=1)\na[i]=11;\nif (i=2)\na[i]=22;\nif (i=3)\na[i]=3;\nif (i=4)\na[i]=5;\nif (i=5)\na[i]=15;\nif (i=6)\na[i]=12;\nif (i=7)\na[i]=14;\nif (i=8)\na[i]=4;\nif (i=9)\na[i]=2;\n\n{\n\n    if(b>10)\n\n{\n   printf(\"大于10的数%d\\n\",b);\n}\n  else if(b<5)\n\n     printf(\"小于5的数%d\\n\",b);\n\n\n}\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "帮你写了个完整的程序，拿去用吧。\r\n\r\n\r\nimport java.io.File;\r\nimport java.io.FilenameFilter;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\n\r\npublic class Test4 {\r\n\r\n\tclass DirFilter implements FilenameFilter {\r\n\r\n\t\tpublic String suffix = null;\r\n\t\tpublic String endwith = null;\r\n\r\n\t\tpublic boolean accept(File dir, String name) {\r\n\r\n\t\t\t//return (name.toLowerCase().contains(suffix)) &amp;&amp; (name.toLowerCase().endsWith(endwith));\r\n\t\t\treturn (name.contains(suffix)) &amp;&amp; (name.contains(endwith));\r\n\t\t}\r\n\r\n\t\tpublic void SetSuffix(String suffixStr) {\r\n\t\t\tsuffix = suffixStr;\r\n\t\t}\r\n\t\t\r\n\t\tpublic void SetEndWith(String endWtihStr) {\r\n\t\t\tendwith = endWtihStr;\r\n\t\t}\r\n\r\n\t}\t\r\n\t\r\n\tpublic class SelfComparator implements Comparator&lt;File&gt; {\r\n\r\n\t\tpublic int compare(File o1, File o2) {\r\n\t\t\treturn  Integer.valueOf(getNum(o1.getName())).compareTo(Integer.valueOf(getNum(o2.getName()))); \r\n\t\t}\r\n\r\n\t\tpublic int getNum(String filename){\r\n\t\t\tint num;\r\n\t\t\tString numStr= filename.substring(\"Log_\".length(), filename.indexOf(\".a\"));\r\n\t\t\tif (\"\".equals(numStr)){\r\n\t\t\t\tnum=0;\r\n\t\t\t}else{\r\n\t\t\t\tnum=Integer.parseInt(numStr);\r\n\t\t\t}\r\n\t\t\treturn num;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void excute() {\r\n\t\tFile dir = new File(\"D://directory\");\r\n\t\tDirFilter difFilter = new DirFilter();\r\n\t\tdifFilter.SetSuffix(\"Log_\");\r\n\t\tdifFilter.SetEndWith(\".a\");\r\n\t\tFile[] files = dir.listFiles(difFilter);\r\n\t\tif (files.length &lt;= 1) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tList&lt;File&gt; fileList = new ArrayList&lt;File&gt;();\r\n\t\t\tfileList.addAll(Arrays.asList(files));\r\n\t\t\tCollections.sort(fileList, new SelfComparator());\r\n\t\t\tint list_size = fileList.size();\r\n\t\t\tfor (int i=0; i&lt;list_size; i++) {\r\n\t\t\t\tSystem.out.println(\"filename is :\" + fileList.get(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tTest4 test = new Test4();\r\n\t\ttest.excute();\r\n\t\t\r\n\t}\r\n\r\n}", "Konwledge_Point": "for循环", "Question": ["java 遍历本地目录中文件（文件数量比较大）,for循环按id顺序", ["java 遍历本地目录中文件（文件数量比较大）,for循环按id顺序得到的结果为什么是1,10，100,101，102，...,109,11......", "\n我希望得到的文件按顺序是从1依次递增到最后，及Log_1.a，Log_2.a，Log_3.a，Log_4.a……", "\n\n", "FileName: Log_1.a", "\nFileName: Log_10.a", "\nFileName: Log_100.a", "\nFileName: Log_101.a", "\nFileName: Log_102.a", "\nFileName: Log_103.a", "\nFileName: Log_104.a", "\nFileName: Log_105.a", "\nFileName: Log_106.a", "\nFileName: Log_107.a", "\nFileName: Log_108.a", "\nFileName: Log_109.a", "\nFileName: Log_11.a", "\nFileName: Log_110.a", "\nFileName: Log_111.a", "\nFileName: Log_112.a", "\nFileName: Log_113.a", "\nFileName: Log_114.a", "\nFileName: Log_115.a", "\nFileName: Log_116.a", "\nFileName: Log_117.a", "\nFileName: Log_118.a", "\nFileName: Log_119.a", "\nFileName: Log_12.a", "\nFileName: Log_120.a", "\nFileName: Log_121.a", "\nFileName: Log_122.a", "\nFileName: Log_123.a", "\nFileName: Log_124.a", "\nFileName: Log_125.a", "\nFileName: Log_126.a", "\nFileName: Log_127.a", "\nFileName: Log_128.a", "\nFileName: Log_129.a", "\nFileName: Log_13.a", "\nFileName: Log_130.a", "\nFileName: Log_131.a", "\nFileName: Log_132.a"]], "Tag": "程序设计"}
{"Answer": "ajax是异步请求的，所以才会出现楼主你这种情况。而且我们不提倡for循环里进行后端数据操作，这很可能被服务器拒绝（因为你在1s内请求太多次了）。\r\n楼主其实可以先使用一个数组或者对象将你的数据存储起来，然后再一次性post给后端，主要后端只要拿你的数组或对象解析就好了，对于后端来说也方便", "Konwledge_Point": "for循环", "Question": ["js 用全局变量累加 取出for循环得到的值", ["\n1处声明全局变量", "\n2处累加局部变量", "\n3处把获取完遍历后的值传入函数内", "\n但是2处能alert累加的值，3处获取的值还是0.0"]], "Tag": "程序设计"}
{"Answer": "你这题目是不是有问题啊，要输出奇数应该是i=0开始依次递增2", "Konwledge_Point": "for循环", "Question": ["C语言for循环问题求解", ["#include", "\nint main()", "\n{", "\n     int    i, a[10]={1,2,3,4,5,6,7,8,9,10};", "\n     for(  i=0; i<10;   _____)    //输出奇数", "\n        printf(\"%d\", a[i] );", "\n            return 0;", "\n}", "\n请问要输出奇数，横线应该填什么"]], "Tag": "程序设计"}
{"Answer": "你要把断点下在第10行才能说明问题。经过第八行，co改变很正常", "Konwledge_Point": "for循环", "Question": ["for循环后面的内容改变但编译为什么还是跟以前的一样？", ["\n\n", "请问一下，vc里面我这for循环后面明明是i++为什么到编译的时候变成co++了，我之前写错了后面是co，改完再编译却没有变化，重启也没用，是bug吗？"]], "Tag": "程序设计"}
{"Answer": "逻辑有问题\r\n\r\n\r\n\r\n```\r\n if (isdigit(ptr[i]))\r\n    {\r\n        if (i == 1)\r\n            mydigit = ptr[i];\r\n        else\r\n            mydigit = mydigit * 10 + ptr[i];\r\n    }\r\n    else\r\n        return 0;\r\n```\r\n当第一次循环，满足条件进第一个if，i是0，就进 mydigit = mydigit * 10 + ptr[i];但是mydigit还未初始化，你咋个和10乘。i==0的条件你需要考虑一下。应该就没问题了", "Konwledge_Point": "for循环", "Question": ["c语言中，为什么字符无法进入for循环", ["#include", "\n#include", "\nint myatoi(char *ptr);", "\nint main(void)", "\n{", "\n    char input[81];", "\n    int check;", "\n\n", "puts(\"enter a sentence only number:\");\nfgets(input, 81, stdin);\ncheck = myatoi(input);\nif (check)\n    printf(\"%d read\\n\", check);\nelse\n    puts(\"no ordered number input\");\ngetchar();\nreturn 0;\n", "\n\n", "}", "\n\n", "int myatoi(char * ptr)", "\n{", "\n    int mydigit,i;", "\n\n", "for (i = 0; i < 81; i++)\n{\n    if (isdigit(ptr[i]))\n    {\n        if (i == 1)\n            mydigit = ptr[i];\n        else\n            mydigit = mydigit * 10 + ptr[i];\n    }\n    else\n        return 0;\n}\nreturn mydigit;\n", "\n\n", "}", "\n调试输入纯数字的时候，程序中断并提示mydigit未初始化，想了想是mydigit这个变量没有进入for循环造成的，请问这个代码应该怎么改呢？谢谢"]], "Tag": "程序设计"}
{"Answer": "cout &lt;&lt; setw(6) &lt;&lt; 1 &lt;&lt; setw(5) &lt;&lt; 2 &lt;&lt; setw(5) &lt;&lt; 3 &lt;&lt; setw(5) &lt;&lt; 4 &lt;&lt; setw(5) &lt;&lt; 5 &lt;&lt; setw(5) &lt;&lt; 6 &lt;&lt; setw(5) &lt;&lt; 7 &lt;&lt; setw(5) &lt;&lt; 8 &lt;&lt; setw(5) &lt;&lt; 9 &lt;&lt; endl;\r\n\tfor (i = 1; i &lt;= 9; i++)\r\n\t{\r\n\t\tcout &lt;&lt; i ;\r\n\t\tfor (j = 1; j &lt;= i; j++)\r\n\t\t\tcout &lt;&lt; setw(5)&lt;&lt; i*j;\r\n\t\tcout &lt;&lt; endl;\r\n\t}\r\n\t![图片说明](https://img-ask.csdn.net/upload/201604/05/1459869646_341256.png)", "Konwledge_Point": "for循环", "Question": ["for循环 乘法表  求解怎么样才能打印出第一列1~9的数字", ["#include", "\n#include", "\nusing namespace std;", "\nint main()", "\n{", "\n    int i,j;", "\n    cout<<\"                    乘法口诀表                    \"<<endl;", "\n    cout<<\"--------------------------------------------------\"<<endl;", "\n    cout<<setw(5)<<1<<setw(5)<<2<<setw(5)<<3<<setw(5)<<4<<setw(5)<<5<<setw(5)<<6<<setw(5)<<7<<setw(5)<<8<<setw(5)<<9<<endl;", "\n    for(i=1;i<=9;i++)", "\n    {", "\n    for(j=1;j<=i;j++)", "\n    cout<<i*j<<setw(5);", "\n    cout<<endl;", "\n    }", "\n    cout<<\"--------------------------------------------------\"<<endl;", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入的文件是123.jpg&lt;br /&gt;i本来是3&lt;br /&gt;你把i改了&amp;#xff0c;它从0到5循环&amp;#xff0c;那后面file[i:]可就不是.jpg了&amp;#xff0c;它变成g了&lt;br /&gt;-&amp;#61;-&amp;#61;-&amp;#61;-&amp;#61;&lt;br /&gt;更本质的原因在于&amp;#xff0c;python没有c语言里块的概念&lt;br /&gt;在c语言里&amp;#xff0c;块内定义的同名变量出了块生命周期就到了&amp;#xff0c;块前定义一个int i&amp;#61;0&amp;#xff0c;块内定义成int i&amp;#61;1&amp;#xff0c;块后i的值还是0&amp;#xff0c;还是块前的那个i&lt;br /&gt;而python里所有定义的对象作用域都是整个代码&amp;#xff0c;只有类和函数有变量隔离的作用&amp;#xff0c;什么if&amp;#xff0c;for&amp;#xff0c;都不会生成一个新的块&amp;#xff0c;这导致在for中修改i之后&amp;#xff0c;出了for&amp;#xff0c;i的值还保留了被for修改之后的值&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环i被重新赋值", ["i被重新赋值的问题", "\n", "我知道i在for循环里被重新赋值了，但为什么如果验证码改成6位以下没问题，改成6位及以上就会占位.jpg", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答", "\n", "```python", "import random", "file = input('请输入文件名称：')", "if file.endswith('jpg') or file.endswith('gif') or file.endswith('png'):", "    i = file.find('.')", "    name = file[0:i]", "    if len(name) < 6:", "        # 重新构建名字，产生字母和数字的组合名称", "        filename = ''", "        s = 'qwertyuiopasdfghjklzxcvbnm123456'", "        for i in range(6):", "            index = random.randint(0, len(s) - 1)", "            filename += s[index]  # 获取下标匹配的字母", "        # filename 文件名和后缀进行拼接", "        new = filename + file[i:]", "    print('成功上传%s文件' % new)", "\n", "else:", "    print('上传失败，格式错误')", "\n", "```率下降 50%", "\n", "请输入文件名称：123.jpg", "\n", "成功上传a3cbadpg文件", "\n", "为什么i在for循环里被重新赋值的话，最后结果有种x位数验证码占了.jpg的位置的感觉", "\n", "我知道i被重新赋值了，只用修改for里面的变量改成上面没有用过的就行。但为什么i被重复用的话会出现这样一个结果"]], "Tag": "程序设计"}
{"Answer": "if(i==1 &amp;&amp; j==2){ 插入数据}\r\n1代表第二行\r\n2代表第三列", "Konwledge_Point": "for循环", "Question": ["for循环插入数据不会写了，求指点", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以类似这样。代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;input type&amp;#61;&amp;#34;text&amp;#34; value&amp;#61;&amp;#34;&amp;#39;&lt;/span&gt; &amp;#43; (i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34; /&amp;gt;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;);\n}\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;生成&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/32907874903614.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["HTML这个的text能不能用for循环创建", ["\n", "大量的这种text的创建 能不能用for循环来实现   以达到节约空间的目的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;重复赋值很常见的&amp;#xff0c;重新赋值后&amp;#xff0c;保留的是最新的值&amp;#xff0c;并不会报错。&lt;br /&gt;程序中的变量可以被多次使用&amp;#xff0c;并不是使用一次后就不可以用。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Python中for循环的变量名被重复赋值为什么不会报错。", ["例如：", "\n", "for password in range (3）:", "    password=input ('请输入您的密码……'）", "    if password==123456：", "        print('密码正确'）", "    else:", "    print('密码错误，请重试'）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看起来挺正确的&lt;br /&gt;内层for循环用于判断每一个n是否为素数,如果不是素数则说明2~n中存在数字整除n,即if的条件,如果找到第一个能整除的数字,则进入if输出分解结果并break&lt;br /&gt;如果n为素数,则一直未进入if,也一直没有break,顺序执行完毕后执行for-else结构中的else部分,输出素数信息&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python的简单for循环问题", ["看网上小甲鱼的入门python视频", "用for 循环打印有关0到10以内的质数有点看不懂", "源码：", "\n", "for", " n in ", "range", "(", "2", ",", "10", "):\n    ", "for", " x in ", "range", "(", "2", ",n):\n        ", "if", " n % x == ", "0", ":\n            ", "print", "(n,", "\"=\"", ",x,", "\"*\"", ",n", "//x)        #//为地板除      结果取小于结果的最接近的一位整数； ", "\n            ", "break", "\n    ", "else", ":\n        ", "print", "(n,", "\"是质数\"", ")\n\n\n#当n = ", "2", "    ", "range", "(", "2", ",", "2", ")  第二句条件位", "false", "  所以执行 ", "else", "                                                      输出", "2", "是质数\n#当n = ", "3", "    ", "range", "(", "2", ",", "3", ")  第二局条件为", "true", " 且x = ", "2", "  但", "3", "除", "2", "的余数为", "1", "所以不执行", "if", "内内容  执行", "else", "语句                 输出为 ", "3", "是质数\n#当n = ", "4", "    ", "range", "(", "2", ",", "4", ")  第二句条件为", "true", " 且x = ", "2", "、", "3", "  因为 ", "4", "/", "2", "的余数为", "0", " 所以执行", "if", "内容 并执行", "break", "结束循环          输出 ", "4", " = ", "2", " *", "2", "\n", "\n", "因为零基础入门有点看不懂 后面注释是我的推论 不知道对不对     if语句那里 关系有点看不明白"]], "Tag": "程序设计"}
{"Answer": "```c\r\nint N = 0;\r\nint a[N];\r\n```\r\n竟然不会报错?  \r\n定制数组 只能是常量,不能是变量;  \r\n**最浅显的办法: 把 int a[N];改成int a[6]**", "Konwledge_Point": "for循环", "Question": ["C语言：整型值N在for循环前为输入值，在经过for循环后锁定为4，问各位大佬是何原因？（若改为a[i] = i + 2, 则N变为6，也不知为何）", ["int main(void)", "\n{", "\n    int N = 0;", "\n    int a[N];", "\n    int flag;", "\n    int i;", "\n\n", "while(1)\n{\n    printf(\"Please input the scale of array：\\n\");\n    flag = scanf(\"%d\", &N);\n    fflush(stdin);\n    **printf(\"for循环前：N=%d\\n\", N);\n    for( i = 0; i < N ; i++)\n        a[i] = i ;\n    printf(\"for循环后：N=%d\\n\", N);**\n\n    if(!flag)\n        break;\n\n    putchar('\\n');\n\n}\n\n\nreturn 0;\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "我觉得还不如连接数据库后，进行查、改，然后输出来的更方便。", "Konwledge_Point": "for循环", "Question": ["for循环的问题(谢谢谢谢谢谢）", ["问题：   编写一个for循环来修改animals数组，把它们都变成可怕的动物！", "\n             例如，如果初始数组是：var animals=[\"Cat\",\"Fish\",\"Lemur\",\"Komodo Dragon\"];", "\n             那么，运行了改循环之后，就应该是：[\"Awesome Cat\",\"Awesome Fish\",\"Awesome Lemur\",\"Awesome Komodo Dragon\"]; ", "\n\n", "提示：   需要在数组的每个索引重新赋值。这只是意味着要为数组中已经存在的位置指定一个新的值。", "\n             例如，要使得第一个动物变为可怕的动物，可以这么写代码：animals[0]=\"Awesome \"+animals[0];", "\n想要这样的结果，可我不会写", "\n不要这样的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Please See this query hope this will be improve our code and speed.&lt;/p&gt;\n\n&lt;p&gt;Avoid doing SQL queries within a loop&lt;/p&gt;\n\n&lt;p&gt;A common mistake is placing a SQL query inside of a loop. This results in multiple round trips to the database, and significantly slower scripts. In the example below, you can change the loop to build a single SQL query and insert all of your users at once.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($userList as $user) {\n\n  $query = 'INSERT INTO users (first_name,last_name) VALUES(\"' . $user['first_name'] . '\", \"' . $user['last_name'] . '\")';\n\n  mysql_query($query);\n\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of using a loop, you can combine the data into a single database query.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$userData = array();\n\nforeach ($userList as $user) {\n\n    $userData[] = '(\"' . $user['first_name'] . '\", \"' . $user['last_name'] . '\")';\n\n}\n\n$query = 'INSERT INTO users (first_name,last_name) VALUES' . implode(',', $userData);\n\nmysql_query($query);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["是否有使用for循环插入多个查询的替代方法", ["\n\n", "I want to insert data from an array. Below is an example situation.", "\n\n", "I grab all my friends available in friends list (fb) and store them in an array.", "\n\n", "Now I want to insert their data ( ", "name, fbid, birthday", " ) into a table.", "\n\n", "Currently I'm doing this using a for loop below is an example code.", "\n\n", "<?php\n\n  $friendsname = $_POST['name'];\n  $friendsfbid = $_POST['fbid'];\n  $friendsbday = $_POST['birthday'];\n\n  for($i<0;count($friendsfbid);$i++){\n\n     $sql_query  = \"INSERT INTO table (fbid, name, birthday) VALUES ('$friendsfbid[$i]','$friendsname[$i]','$friendsbday[$i]') ON DUPLICATE KEY UPDATE fbid='$friendsfbid[$i]', name='$friendsname[$i]', birthday='$friendsbday[$i]'\";    \n\n  }\n\n?>\n", "\n\n", "Now if I have 300 friends this will loop 300 times.", "\n\n", "The more number of friends the more time its going to take to process the data.", "\n\n", "Is there a way to avoid this or to increase the performance of the code. ?", "\n\n", "Using PHP with mySQL", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用多线程&amp;#xff0c;你的问题因为需要等待字符全部显示后&amp;#xff0c;才继续往后执行。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java中swing按钮事件for循环", ["在页面里添加了一个按钮，并给它增加了一个事件监听，主要作用是发送500个字节字符；现在采用for循环的方式写的程序，遇到的问题是点击按钮后，按钮会变灰一段时间，等500个字符显示完成后才恢复正常，期间整个页面都会卡住，点不了其他的按钮，想问一下怎样处理才能实现点击按钮后，页面不卡住的同时字符也能正常显示？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用push&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nfunction aigejian(a, b,c, &lt;span class=\"hljs-keyword\"&gt;d&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;e&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; sz &amp;#61; [b,c,&lt;span class=\"hljs-keyword\"&gt;d&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;e&lt;/span&gt;];\n     \n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;cc&lt;/span&gt;&amp;#61;[] ;\n         &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; kk&amp;#61;[];\n         \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; 0; i &amp;lt; sz.length; i&amp;#43;&amp;#43;) {         \n         \n            &lt;span class=\"hljs-keyword\"&gt;cc&lt;/span&gt;.push(a - sz[i]);\n\n        }\n        console.&lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;cc&lt;/span&gt;);\n    }\n    aigejian(5, 2, 3,4, 1)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["js for循环的得到的每一次运算结果怎么变成数组，在循环外也可以用。", ["定义了一个函数，用第一个参数挨个减去另外四个参数，得到的结果如何变成数组输出，现在是覆盖成只能拿到最后一个运算结果，谢谢。", "function aigejian(a, b,c, d, e) { ", "\n", "var", " sz = [b,c,", "d", ",", "e", "];\n\n", "var", " ", "cc", "=[] ;\n ", "var", " kk=[];\n\n", "for", " (i = 0; i < sz.length; i++) {         \n\n    ", "cc", "= a - sz[i];\n   \n    console.", "log", "(", "cc", ");   \n}\n", "\n", " console.log(cc);", "}", "    aigejian(5, 2, 3 4, 1) ;"]], "Tag": "程序设计"}
{"Answer": "问题一：阁下的想法和初始想法不符合啊\r\nfor(i=0;i&lt;s1;i++) \r\n            {\r\n\t\t\t\t\t\t//判断原数组中是否含有相同元素\r\n\t\t\t\t\t\t//含有则退出\r\n                if(st1[i]==(char)token)\r\n                    break;\r\n            }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t if(i==s1)//for循环未经过break，所以 i==s1\r\n\t\t\t\t\t\t\r\n\t\t\t要求：我原来想法是for循环结束再下一个if判断，怎么解决？\r\n额。。\r\n\t增加个标志怎么样？\r\n\t case 1:\r\n\t\t\t\t\tbool flag =true；\r\n            for(i=0;i&lt;s1;i++)\r\n            {\r\n                if(st1[i]==(char)token)\r\n                    flag=false;\r\n            }\r\n            if(flag)\r\n            {\r\n                st1[s1++]=(char)token;\r\n                str4+=' ';\r\n                str4+=token;\r\n            }\r\n            break;\r\n如何", "Konwledge_Point": "for循环", "Question": ["c++问题求解，一个for循环为了不存入相同数据。", [" case 1:\n            for(i=0;i<s1;i++)\n            {\n                if(st1[i]==(char)token)\n                    break;\n            }\n            if(i==s1)\n            {\n                st1[s1++]=(char)token;\n                str4+=' ';\n                str4+=token;\n            }\n            break;\n", "\n\n", "第一次循环后，s1=1,并存入一个，然后读第二个时，i=0,第一个if判断不相同。就直接跳到下一个if判断，我原来想法是for循环结束再下一个if判断，怎么解决？"]], "Tag": "程序设计"}
{"Answer": "this就是当前的button对象，直接alert i只能得到for循环后的，要做闭包指向当前执行到的i值\r\n\r\n\r\n\r\n```\r\n         window.onload = function () {\r\n            var btn = document.getElementsByTagName(\"input\");\r\n            for (var i = 0; i &lt; btn.length; i++) {\r\n                btn[i].onclick = (function (i) {\r\n                    return function () { alert(this.value+\"|\"+i); }\r\n                })(i);\r\n            }\r\n        }\r\n```", "Konwledge_Point": "for循环", "Question": ["JS for循环绑定事件问题以及闭包", [" <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>for与onclick配合</title>\n    <script type=\"text/javascript\">\n    window.onload=function(){\n        var btn=document.getElementsByTagName(\"input\");\n         for(var i=0;i<btn.length;i++){\n         btn[i].onclick=function(){\n                alert(this.value);\n           }    \n    }\n}\n    </script>\n</head>\n<body>\n<input type=\"button\" value=\"for循环\"/>\n<input type=\"button\" value=\"事件处理\"/>\n<input type=\"button\" value=\"弹窗显示\"/>\n</body>\n</html>\n", "\n\n", "这段程序在点击了相应的按钮后会显示相应的value值。", "\n但是为什么把alert里改成i后，不管点哪个都显示3，而不是对应的0，1，2呢？", "\n既然i值都是3，那是怎么能正常显示出对应的value的。"]], "Tag": "程序设计"}
{"Answer": "top k算法：http://www.cnblogs.com/xudong-bupt/archive/2013/03/20/2971262.html", "Konwledge_Point": "for循环", "Question": ["java 求四千多用户的某一排名 如何用多线程 优化for循环", ["求四千多用户的某一排名，比如操作次数排名（不考虑sql写法），我先求出所有用户，然后for循环全部用户，得出每一个用户的操作次数，将用户名和对应操作次数放入一个map里面，再把这个map放入一个list里面，最后排出前十名，现在我想用多线程优化for循环，但是多线程的匿名内部类里面的全局变量只能是final的，final变量只能赋值一次啊，我就不能连续添加值到那个list里面了 怎么办？还有比如我现在开四个线程，每个线程for循环一千次，那么我如何写，等到四个线程全部结束再执行下面操作呢？"]], "Tag": "程序设计"}
{"Answer": "public class JavaDemo {\r\npublic static void main(String[] args) {\r\nString str = \"18302144468,18488888888\";\r\nString strs[]= str.split(\",\");\r\nfor (int i = 0; i &lt; strs.length-1; i++) {\r\nSystem.out.print(strs[i]);\r\n}\r\n}\r\n}", "Konwledge_Point": "for循环", "Question": ["求问，怎么写一个JAVA的for循环", ["现有一个字符串String= ”18263636366,053112345678，......”", "\n他是由n个电话号码（座机号和手机号）组成，我想写一个for循环，每次截取一个电话号码，，怎么写，？？？？？？？？我是要这一个群发短信的功能，一次送来多个号码组成的字符串，我想通过for循环，遍历到每一个号码，遍历到一个，发一次短信，请问如何遍历到这个字符串里的号码？？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; range(&lt;span class=\"hljs-keyword\"&gt;object&lt;/span&gt;)\n    range(stop) -&amp;gt; range &lt;span class=\"hljs-keyword\"&gt;object&lt;/span&gt;\n    range(&lt;span class=\"hljs-keyword\"&gt;start&lt;/span&gt;, stop[, step]) -&amp;gt; range &lt;span class=\"hljs-keyword\"&gt;object&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;range()的参数说明&amp;#xff1a;&lt;br /&gt;step为步长&amp;#xff0c;负数就是倒序&lt;br /&gt;[start, end] 起始区间为左开右闭&amp;#xff0c;也就是包括start&amp;#xff0c;不包括end&lt;br /&gt;in range(4,0,-1) 等价于 in [4,3,2,1]&lt;br /&gt;in range(1,10,2) 等价于 in [1,3,5,7,9]&lt;br /&gt;in range(1,9,2) 等价于 in [1,3,5,7]&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中4 0 -1三个数字分别有什么用", ["for循环中4 0 -1三个数字分别有什么用", "for循环中4 0 -1三个数字分别有什么用", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入的时候别输空格&amp;#xff0c;空格也会被读进去的&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言入门：for循环出错，如何解决？", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "#", "define", " SIZE 8", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " a,b;\n    ", "char", " name[SIZE];\n    \n    ", "for", "(a=", "0", ";a<SIZE;a++)\n    ", "scanf", "(", "\"%c\"", ",&name[a]);\n    ", "for", "(b=", "0", ";b<SIZE;b++)\n    ", "printf", "(", "\"%c\"", ",name[", "strlen", "(name)", "-1", "-b]);\n    \n    ", "return", " ", "0", ";\n}\n", "\n", "第一个for循环只能循环4次，且只有下标为0   2   4  6  这几个元素被读入了值，哪里错了吗？"]], "Tag": "程序设计"}
{"Answer": "```\r\n for (int j = 0; j &lt; tvs.size(); j++) {\r\n tvs.get(j).setTag(j);\r\ntvs.get(j).setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View arg0) {\r\n                // TODO Auto-generated method stub\r\n\t\t\t\t\t\t\t\tint j=(Integer)arg0.getTag();\r\n                edittext.setText(mVals[j]);\r\n            }\r\n        });\r\n\r\n    }\r\n```", "Konwledge_Point": "for循环", "Question": ["安卓用for循环给流式布局的TextView加listener，为什么不行？", ["代码如下：", "\n\n", "for (int  j = 0; j < tvs.size(); j++) {", "\n            tvs.get(j).setOnClickListener(new OnClickListener() {", "\n\n", "            @Override\n            public void onClick(View arg0) {\n                // TODO Auto-generated method stub\n                edittext.setText(mVals[j]);\n            }\n        });\n\n    }\n", "\n\n", "注释：tvs是之前赋过值的一个TextView类List，用来显示流式布局；mVals是一个String数组，用来存放每个TextView要显示的值。", "\n\n", "为什么用for循环添加点击事件会报错\"Unfortunately...\"?", "\n\n", "TextView很多很多，所以不能逐个添加事件了，求大神解答，很急很关键"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n \nint main()\n{\n    int a[10],sum&amp;#61;0;\n    for(int i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;){\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);\n    }\n    \n    for(int i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;){\n        sum &amp;#61; sum &amp;#43; a[i];\n    }\n    \n    printf(&amp;#34;%d\\n&amp;#34;,sum);\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环进行的数字累加和怎样用scanf语句输入数字进一个数组里面", ["用for循环进行的数字累加和怎样用scanf语句输入数字进一个数组里面"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实还是闭包问题&amp;#xff0c;你将图片这里的li改成this就好了&amp;#xff0c;因为第一层循环之后li变量已经变成最后一个li了&amp;#xff0c;所以无论你点击哪个&amp;#xff0c;其实点击函数接受到的li都是第四个li的变量&amp;#xff0c;所以相对于都在点击第四个&amp;#xff0c;但是改为this之后&amp;#xff0c;就不会了&amp;#xff0c;this会为你记录上下文。有帮助麻烦点个采纳【本回答右上角】&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/221853430436125.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["使用双for循环给div的每个子元素setattribute，index属性为什么只能给最后一个li添加呢？", ["\n", "<", "style", ">", "\n    ", "div", " {\n        ", "width", ": ", "400px", ";\n        ", "height", ": ", "400px", ";\n        ", "background-color", ": red;\n    }\n", "</", "style", ">", "\n\n", "<", "body", ">", "\n    ", "<", "div", ">", "</", "div", ">", "\n", "</", "body", ">", "\n", "<", "script", ">", "\n    ", "var", " div = ", "document", ".", "querySelector", "(", "'div'", ");\n\n    ", "for", " (", "let", " i = ", "0", "; i < ", "4", "; i++) {\n        ", "var", " li = ", "document", ".", "createElement", "(", "'li'", ");\n        div.", "appendChild", "(li);\n        li.", "addEventListener", "(", "'click'", ", ", "function", "(", ") {\n            ", "for", " (", "let", " i = ", "0", "; i < ", "4", "; i++) {\n                li.", "setAttribute", "(", "'index'", ", i);\n            }\n        });\n    }\n", "</", "script", ">", "\n", "\n", "\n", "正确的写法我知道，这是我在做轮播图练习的时候无意中写出来的，不太理解为什么第二个for循环中li.setattribute('index',i)为什么只能给最后一个li添加index属性 而不是给每一个li全部都加上index呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用GPT:&lt;br /&gt;使用for循环将&amp;#34;helloworld&amp;#34;以列表形式展示&amp;#xff0c;可以这样写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;list &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;helloworld&amp;#34;&lt;/span&gt;:\n    list&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(list)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出结果为&amp;#xff1a;[&amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;w&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;d&amp;#39;]&lt;br /&gt;如还有疑问&amp;#xff0c;可留言帮助解决。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["使用for循环将字符串以列表形式展示的方法", ["使用for循环将\"helloworld\"以列［\"helloworld\"］展示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不让用for那就用while呗&amp;#xff0c;总之必须得循环呀&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["MATLAB中不使用for循环该如何改写语句？", ["请教：MATLAB中，以下程序若不使用for循环，该如何改写？", "\n", "a=[a1,a2,", "..", "..", ",an];\n", "b", "=diag(a);%对角矩阵\n", "for", " ", "i", "=2:n \n     ", "for", " ", "j", "=1:i-1               \n          b(i,j)=(b(ii,ii)+b(jj,jj,:))/2; %根据主对角元素，求下三角的各项非对角元素                 \n     end\n end\n"]], "Tag": "程序设计"}
{"Answer": "应该把这个顺序换一下\r\n```\r\n\r\n                System.out.print(i+\"+\");\r\n\t\t\t\t\t\t\t\t i++;\r\n```", "Konwledge_Point": "for循环", "Question": ["while与for循环输出的区别？", ["也许这是个小白问题，但是还是想弄懂原因，为什么while循环会比for循环多输出一次？", "\nwhile循环：", "\n\n", "   public class teat1\n   {\n        public static void main(String args[])\n   {        int i = 1,sum = 0;\n            while(i<=10)\n            {\n                sum+=i;\n                i++;\n                System.out.print(i+\"+\");\n\n            }\n\n            System.out.println(\"=\"+sum);\n\n\n   }\n   }\n输出结果\nC:\\Users\\Administrator>java teat1\n2+3+4+5+6+7+8+9+10+11+=55\n", "\n\n", "for循环", "\n\n", "   public class teat\n   {\n        public static void main(String args[])\n   {        int i = 1,sum = 0;\n            for(i=1;i<=10;i++){\n                sum+=i;\n                System.out.print(i+\"+\");\n\n            }\n\n            System.out.println(\"=\"+sum);\n\n\n   }\n   }\n输出结果\nC:\\Users\\Administrator>java teat\n1+2+3+4+5+6+7+8+9+10+=55\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环的第三个参数要求是合法的C语句&amp;#xff0c;而i&amp;#43;2符合条件&amp;#xff0c;所以可以&amp;#xff0c;但这么写没有意义&amp;#xff0c;只是单纯在每次循环体前进行计算。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(int i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n  &lt;span class=\"hljs-comment\"&gt;//一些操作&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;等价于&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n  i&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n  &lt;span class=\"hljs-comment\"&gt;//一些操作&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["for循环第三个式子的合法性", ["可不可以这样定义for循环", "int i；", "for（i＝1；i＜10；i+2）", "就是第三个式子可不可以这样定义"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组或列表中的元素值加一&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;L1 &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[1,2,3,4,5,6,7]&lt;/span&gt;\nL2 &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; L1:\n    L2&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(L2)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/234996398056195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;或者是这样&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/72009559805618.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如何用python实现每循环一次输出的数字就加1", ["想要实现一个用for循环每循环一次一个变量就会加1，并把变量输出的效果"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Nope it's not going to work like that.&lt;/p&gt;\n\n&lt;p&gt;You have two options.&lt;/p&gt;\n\n&lt;h1&gt;Option 1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;$temp_string = '';\nfor ($i=0; $i&amp;lt;=$count; $i++)\n{\n $temp_string .= $variable1 . $variable2;\n}\necho \"This are the list\".$temp_string;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Option 2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"This are the list\";\nfor($i=0; $i&amp;lt;=$count; $i++)\n{\n echo $variable1 . $variable2;\n} \necho \"End\";\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在PHP中的'echo'中添加for循环", ["\n\n", "Is it possible in PHP ", "echo", " to have ", "for loop", " inside of it?\nSomething like this:", "\n\n", "echo \"This are the list\" . for($i=0; $i<=$count; $i++) { echo $variable1 . $variable2} . \"End\";\n", "\n\n", "My code goes like this.", "\n\n", "but I still experience error.", "\n    "]], "Tag": "程序设计"}
{"Answer": "StringBuilder sb=new StringBuilder(\"*********\");\r\nfor(int i=0;i&lt;5;i++){\r\nSystem.out.println(sb);\r\nint n=sb.length()-1;\r\nsb.deleteCharAt(n);\r\nsb.deleteCharAt(n-1);\r\nsb.insert(0,' ');\r\n}", "Konwledge_Point": "for循环", "Question": ["JAVA一层for循环打印出倒立三角形", ["如何使用JAVA一层for循环打印出倒立三角形？", "\n\n", "*\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;月经问题&amp;#xff1a;浮点数10进制和二进制无法明确转换&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环当步长为0.1 判断语句< 与<= 结果一致", ["问题遇到的现象和发生背景", "\n", "c++        for 循环", "\n", "问题相关代码，请勿粘贴截图", "\n", "double length ", "=", " ", "1.0", ";", "\n    \n    for (double i_one ", "=", " ", "0.0", "; i_one < length; i_one = i_one +0.1 )", "\n    {\n        cout<<", "\"i_one:\"", " << i_one << endl", ";", "\n    }\n    for (double i_two ", "=", " ", "0.0", "; i_two <= length; i_two = i_two + 0.1)", "\n    {\n        cout <<", "\"i_two：\"", " << i_two << endl", ";", "\n    }\n\n\n", "\n", "运行结果及报错内容", "\n"]], "Tag": "程序设计"}
{"Answer": "第一个是创建了4个li，每个li绑定了一个事件。所以无论点哪一个，都是1个1\r\n第二个，在一个li上绑定了4个事件，所以点了以后调用了4次，输出4个1", "Konwledge_Point": "for循环", "Question": ["爸爸救救我，在js的for循环中写入监听点击事件，点击后执行一次或多次", ["\n\n", "第一份代码控制台输出一个1", "\n第二份代码控制台输出四个1", "\n很奇怪", "\n爸爸救救我"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样就可以了&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;%方法&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\ny&amp;#61;[&lt;span class=\"hljs-number\"&gt;2.916&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;88.631&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0.68&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;11.137&lt;/span&gt;];\nret &amp;#61; [];\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:length(y)\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt;&amp;#61; &amp;#64;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;&lt;/span&gt;exp(y(i)*cos(x))/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi);\n    ret&amp;#61;[ret integral(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt;,0,360)];&lt;/span&gt;\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;%方法&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n%直接利用矩阵运算\ny&amp;#61;[&lt;span class=\"hljs-number\"&gt;2.916&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;88.631&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0.68&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;11.137&lt;/span&gt;];\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt;&amp;#61; &amp;#64;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;&lt;/span&gt;exp(y*cos(x))/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi);\nret&amp;#61;integral(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt;,0,360,&amp;#39;ArrayValued&amp;#39;,&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["matlab求积分，如何用for循环或者向量求一组结果", ["如下代码，想把4个y代入这个fun函数中求积分，但一个个求太麻烦了，想一次性求出来，要如何改", "\n", "y=[", "2.916", ";", "88.631", ";", "0.68", ";", "11.137", "];\n", "fun", "= @", "(x)", "exp(y(", "1", ")*cos(x))/(", "2", "*pi);\ny1 = integral(", "fun", ",0,360) ；", "\n", "fun", "= @", "(x)", "exp(y(", "2", ")*cos(x))/(", "2", "*pi);\ny2 = integral(", "fun", ",0,360) ；", "\n", "fun", "= @", "(x)", "exp(y(", "3", ")*cos(x))/(", "2", "*pi);\ny3 = integral(", "fun", ",0,360) ；", "\n", "fun", "= @", "(x)", "exp(y(", "4", ")*cos(x))/(", "2", "*pi);\ny4 = integral(", "fun", ",0,360) ；", "\n", "\n", "我试着用for循环，但是这种写法会把4个值加在一起，是哪里有问题吗", "\n", "y", "=[", "2", ".", "916", ";", "88", ".", "631", ";", "0", ".", "68", ";", "11", ".", "137", "];\n", "n", "=numel(y)\n", "for", " i=", "1", ":", "1", ":n\n", "fun", "= @(x)exp(y(i)*cos(x))/(", "2", "*pi);\n", "y0", " = integral(fun,", "0", ",", "360", ") ；\n", "end", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大哥&amp;#xff0c;你for循环的那一行&amp;#xff0c;多了一个分号&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么for循环只打印了一个数字", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;冒泡排序&lt;/strong&gt;&lt;br /&gt;第二个for循环就是和当前元素后面的所有元素逐个相比较&amp;#xff0c;比如a[5] &amp;#61; {1, 2, 3, 4, 5}&lt;br /&gt;如果i&amp;#61;0&amp;#xff0c;第二个for循环就会从1这个元素开始&amp;#xff0c;逐次取两个元素比较&amp;#xff0c;也就是 1 2 比较 2 3 比较&lt;br /&gt;遍历完成i变成1&lt;br /&gt;这次从第二个元素开始比较&amp;#xff0c;也就是 2 3 比较 3 4&lt;br /&gt;以此类推&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;望采纳&amp;#xff0c;谢谢~&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["第二个for循环哪里是什么意思？", ["第二个for循环哪里是什么意思？这应用的是选择法排序吗？求解答 感谢感谢", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你计算的是N&amp;#xff01;&amp;#xff0c;你循环条件如果是&amp;lt;N的话&amp;#xff0c;只能计算(N-1)!&amp;#xff0c;因为当i加到N的时候会判断是否满足循环条件是否满足。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么for循环里边小于号的话是不对的", ["问题遇到的现象和发生背景", "\n", "这是一个阶乘的代码，为什么for循环里边小于号的话是不对的，而小于等于是对的，不是i<N时就i ++吗，为什么最后一次就不参与循环了？", "（可能我对for循环理解还不到位吧）", "请大家解答，谢谢"]], "Tag": "程序设计"}
{"Answer": "for (int i=1; i&lt;4; i++) {\r\n        UILabel *label = [self objectForKey:[NSString stringWithFormat:@\"lblTeamName%i\", i]];\r\n        label.text = @\"blah\";\r\n    }", "Konwledge_Point": "for循环", "Question": ["怎么样能实现改写for循环属性？", ["hi我又来提问了。", "\n我的问题是我想知道怎么样能实现for循环中int的属性修改？", "\n\n", "例子：", "\n\n", "controller.h:", "\n\n", " @property (weak, nonatomic) IBOutlet UILabel *lblTeamName1;\n @property (weak, nonatomic) IBOutlet UILabel *lblTeamName2;\n @property (weak, nonatomic) IBOutlet UILabel *lblTeamName3;\n", "\n\n", "controller.m", "\n\n", " @synthesize property lblTeamName1;\n @synthesize property lblTeamName2;\n @synthesize property lblTeamName3;     \n\n for(int i = 0;i <= 3;i++)\n {\n  lblTeamName(i).text = @\"something\";\n }\n", "\n\n", "不知道这样能不能实现哦？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; (n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; (n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//两个空格&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;* &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n - i * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; j&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;// j与i成反比时&amp;#xff0c;考虑-i&amp;#xff0c;即相反数&lt;/span&gt;\n        { \n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;* &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["尝试用for循环打印下列的图形", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果List中的元素对应的a字段的值具有随机性&amp;#xff0c;你这么写是没问题的&amp;#xff0c;无需优化。但如果不具有随机性&amp;#xff0c;你可以把if判断放在循环体外。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;A &lt;span class=\"hljs-attr\"&gt;a0&lt;/span&gt; &amp;#61; list.get(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a0 !&amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;) {\n   int &lt;span class=\"hljs-attr\"&gt;tmp&lt;/span&gt; &amp;#61; a0.a ? &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n   for(A o : list) {\n       o.&lt;span class=\"hljs-attr\"&gt;b&lt;/span&gt; &amp;#61; tmp;\n       o.&lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["优化for循环内的if判断", ["问题遇到的现象和发生背景", "\n", "代码优化", "\n", "问题相关代码，请勿粘贴截图", "\n", "for循环里的id有点重复，改怎么优化，能否只判断一次,就把c和b的值都改了", "\n", "//所有的A的a 都是一样的 一个是true就其他的就都是true", "\n", "public", " ", "void", " ", "test", "(List<A> list)", "{\n        ", "for", " (A a : list) {\n            ", "if", "(a.a){\n                a.b = ", "1", ";\n            }", "else", " {\n                a.b = ", "2", ";\n            }\n               a.c = ", "1", ";\n        }\n    }\n    \n    ", "class", " ", "A", "{\n        ", "boolean", " ", "a", " ", "=", " ", "true", ";\n        ", "Integer", " ", "b", " ", "=", " ", "0", ";\n        ", "Integer", " ", "c", " ", "=", " ", "0", ";\n    }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;0和&amp;#39;0&amp;#39;不是同一个东西&lt;br /&gt;你写数字0的话&amp;#xff0c;是用字符s[i]的ASCII码跟0进行比较的&amp;#xff0c;而\\0的ASCII码是0&amp;#xff0c;所以n&amp;#61;3的时候&amp;#xff0c;s[i]&amp;#61;&amp;#39;\\0&amp;#39;&amp;#xff0c;他的ASCII码为0&amp;#xff0c;跳出循环&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/565012783646170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环条件的问题", ["请问，这个执行结果n的值为什么是3啊，这个for循环的条件不是s[i]!=0吗，但是s[0]=0，不是应该不继续执行程序了吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;They are exactly the same, but your understanding of C's &lt;code&gt;for&lt;/code&gt; loops is wrong. They are the same as in PHP.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; for (x; y; z) { /* body */ }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is almost like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; x;\n\n while (y) {\n     /* body */\n     z;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Though the &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; examples in C are not exactly the same because of scopes and things.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["C for循环与PHP for循环不同吗？", ["\n\n", "It seems like the following from the ", "PHP manual regarding ", "for", " loops", " is incorrect.", "\n\n", "\n  ", "They behave like their C counterparts.  ", "\n", "\n\n", "This is my understanding of ", "for", " loops.", "\nIn C", "for (i = foo; i < 10; i++) {   /* body */ }", "\nis equivalent to  ", "\n\n", "if ( i = foo )  \n{   while (i < 10)  \n    {    /* body */\n         i++;\n    }\n}\n", "\n\n", "In PHP the comparable loop", "for ($i = $foo; $i < 10; $i++) { /* body */ }", "\nbecomes", "\n\n", "$i = $foo;\nwhile ($i < 10)\n{   /* body */\n    $i++;\n}\n", "\n\n", "The difference is that in PHP ", "$i = $foo", " is not a condition but rather a convenient place for a statement.  Suppose we change the single ", "=", " to ", "==", ".  The distinction becomes significant.  Is this correct?  If so, then PHP and C loops behave differently and the manual is incorrect, right?  ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/591870473766121.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;路径不正确&amp;#xff0c;要么是D:表示完整路径&amp;#xff0c;要么是 ../表示上级目录&lt;br /&gt;至于为什么不从0开始&amp;#xff0c;很明显&amp;#xff0c;第一个读取的应该是0&amp;#xff0c;然后后面1到n的excel都是要合并在0里&amp;#xff0c;然后另存为一个新的excel文件。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请问这里的for循环为什么不从0开始", ["请问这里的for循环为什么不从0开始，还有这个代码无法运行可以帮我看看是因为什么问题吗，谢谢你呀！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你需要在事件内使用事件外的循环变量i。&lt;br /&gt;当事件触发时&amp;#xff0c;那个循环早就结束了&amp;#xff0c;那时的i的值已经是循环最大值加1了。&lt;br /&gt;所以需要用一些方式保存住当前循环的i的值。&lt;/p&gt;\n&lt;h4 id=\"方案一&amp;#xff1a;用闭包保存住当前循环的i的值\"&gt;方案一&amp;#xff1a;用闭包保存住当前循环的i的值&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i&amp;#43;&amp;#43;) {\n    (&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(i)&lt;/span&gt;&lt;/span&gt;{\n        arr[i].onclick &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n            alert(i);\n        }\n    })(i);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4 id=\"方案二&amp;#xff1a;用let块作用域变量\"&gt;方案二&amp;#xff1a;用let块作用域变量&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (var i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; arr.length; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n    let k &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    arr[i].onclick &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; function () {\n        alert(k)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;ps&amp;#xff1a;IE11中在for语的()内声明的let是整个循环体中共用的&amp;#xff0c;只有在{}内声明的let才是每次循环都独立的。&lt;br /&gt;非ie的浏览器中可以在中在for语的()内声明let&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (let i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; arr.length; i&amp;#43;&amp;#43;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4 id=\"方案三&amp;#xff1a;为事件元素设置一个index属性&amp;#xff0c;在事件函数内通过this获取当前对象并访问index属性。\"&gt;方案三&amp;#xff1a;为事件元素设置一个index属性&amp;#xff0c;在事件函数内通过this获取当前对象并访问index属性。&lt;/h4&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (var i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; arr.length; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n    arr[i].index &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    arr[i].onclick &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; function () {\n        alert(this.index)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环中变量的引用问题", ["\n", "<", "body", ">", "\n    ", "<", "form", " ", "id", "=", "\"userForm\"", ">", "\n        ", "<", "div", " ", "id", "=", "\"advTest\"", ">", "\n            ", "<", "span", ">", "0", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "1", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "2", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "3", "</", "span", ">", "\n        ", "</", "div", ">", "\n        ", "<", "hr", " />", "\n        ", "<", "div", " ", "id", "=", "\"advTest2\"", ">", "\n            ", "<", "span", ">", "0", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "1", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "2", "</", "span", ">", "&nbsp;", "--", "&nbsp;", "<", "span", ">", "3", "</", "span", ">", "\n        ", "</", "div", ">", "\n        ", "<", "input", " ", "type", "=", "\"button\"", " ", "value", "=", "\"Test\"", "  ", "id", "=", "\"btnTest\"", " />", "\n    ", "</", "form", ">", "\n    ", "<", "script", " ", "type", "=", "\"text/javascript\"", ">", "\n        ", "//for逻辑块", "\n        ", "var", " i = ", "0", ";\n        ", "var", " spans = $(", "\"#advTest span\"", ");\n        ", "for", " (i; i < spans.", "length", "; i++) {\n            spans[i].", "onclick", " = ", "function", " (", ") {\n                ", "alert", "(i);\n            }\n        }\n        i++;\n\n       ", "//if逻辑块", "\n        ", "var", " v = ", "0", ";\n        ", "if", " (", "true", ") {\n            ", "document", ".", "getElementById", "(", "\"btnTest\"", ").", "onclick", " = ", "function", " ", "test", "(", ") {\n                ", "alert", "(v);\n            }\n        }\n        v++;\n\n    ", "</", "script", ">", "\n", "</", "body", ">", "\n", "\n", "有些问题不解，希望解答 谢谢：", "对于for逻辑体，先抛开i++不说，这个例子是典型for循环内引用全局变量造成绑定都是一个值的问题。在绑定click监听时，函数并未执行，当在触发click时，全局变量i的值是多少就alert多少。如果抛开i++，是4没问题。但是我后面有了i++,在click之前 i 的值已经改变，为什么alert的不是5呢？很是费解。而if逻辑块，输出的就是v++后的值。它们区别在哪呢？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;当前的代码只保存了一次循环的结果&amp;#xff0c;因此输出的字典中只包含一组键值对&amp;#xff0c;其键是 &amp;#34;值&amp;#34;&amp;#xff0c;值是最后一次循环的结果。&lt;/p&gt;\n&lt;p&gt;如果要将每次循环的结果都保存到字典中&amp;#xff0c;可以在循环内部使用一个列表来保存每次的结果&amp;#xff0c;然后在循环结束后将列表转换成字典。例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;results &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;):\n    c &amp;#61; c &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    item &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;值&amp;#34;&lt;/span&gt;: c}\n    results&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(item)\ndict_result &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;结果&amp;#34;&lt;/span&gt;: results}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(dict_result)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["python，每次for循环运行的的结果，全部保存在字典中", ["python，每次for循环运行的的结果，全部保存在字典中", "\n", "c = ", "0", "\n", "for", " i ", "in", " range(", "1", ", ", "7", "):\n    c = c + ", "1", "\n   \nitem = {", "\"值\"", ": c}\n\nprint(item)\n\n![img](https:", "//img", "-mid.csdnimg.cn", "/release/", "static", "/image/mi", "d", "/ask/", "755187745776181", ".png ", "\"#left\"", ")\n", "\n", "为什么他只会把最后一个结果输出，而不是输出所有的结果，正确的代码应该是怎样的？求指点"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sentence是一个String类型变量&amp;#xff0c;sentences是数组&amp;#xff0c;用数组中取出变量并显示,有几个变量循环几次。相当与 foreach(String sentence in sentences)&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于java的for循环相关问题（附代码）", ["\n", "package test1;\n\npublic class Test1 {\n    public static void main(String[] args) { \n    \tString[] sentences = {\"hello\", \"thank u\", \"thank u very much\"};\n    \tfor (String sentence : sentences) {\n    \t    System.out.println(sentence);\n    \t}\n}\n\t\n}", "\n\n", "可以请问一下for (String sentence : sentences)这个循环的运行逻辑是什么吗，这个for循环似乎不是按照正常逻辑书写的，有些看不懂"]], "Tag": "程序设计"}
{"Answer": "首先是end loop \r\n然后是end test\r\n你多了一个end少年", "Konwledge_Point": "for循环", "Question": ["存储过程 使用for循环更新执行  报错 ORA-06550", ["create or replace procedure test is", "\nCursor C_EMP  is ", "\nselect * from CST_TW_RECORD where GRANT_STATE = '0' and CLEAN_STATE = '3' ;", "\nC_ROW C_EMP%ROWTYPE; --定义游标变量，该变量的类型为基于游标C_EMP的记录", "\nbegin", "\n  --For 循环", "\n  FOR C_ROW IN C_EMP LOOP ", "\n-- 更新清洗记录表", "\n update CST_TW_RECORD set  GRANT_STATE = 1,GRANT_FIRST_DATE=sysdate,GRANT_DATE=sysdate,SELLER_ID = 2012999991,GRANT_REMARK = 11  where CUST_ID=C_ROW.CUST_ID ;", "\n --更新客户表", "\n  update CST_CUSTOMER set  APP_DATE = sysdate,PAST_DATE = sysdate,SELLER_ID = 2012999991,SELLER_DEPT_ID = 0001", "\n where CUST_ID=C_ROW.CUST_ID ;", "\n --踢出客户", "\nUPDATE CST_CUSTOMER_EXTEND  SET PUB_STATE    =  1 WHERE CUST_ID =C_ROW.CUST_ID ;", "\nend;", "\nend LOOP;", "\nend test;", "\n\n", "--执行存储过程", "\nbegin", "\nexecute  test ;", "\nend;", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你在%d后面加\\n&amp;#xff0c;你直接敲一个回车的时候&amp;#xff0c;这个回车会被当做对数字的确认&amp;#xff0c;而被丢弃&amp;#xff08;被当做空格、制表符之类的分隔符了&amp;#xff09;&lt;br /&gt;你需要在数字后面加个空格&amp;#xff0c;再回车&amp;#xff0c;或者连续键入2个回车&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言中运用for循环，连续读入多个值的错误", ["用for循环连续读入值的时候发现**scanf(\"%d\",&n)", "与", "scanf(\"%d\\n\",&n)**有区别。", "例如：", "\n", "# ", "include", " ", "<stdio.h>", "\n", "# ", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{    ", "int", " n,a;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "for", "(", "int", " i=", "0", ";i<n;++i){\n        ", "scanf", "(", "\"%d\"", ",&a);\n    }\n    ", "printf", "(", "\"end\"", ");\n    \n    ", "return", " ", "0", ";\n } \n", "\n", "在这个程序中输入n=5，然后从键盘依次读入1 2 3 4 5时可以正常进行并打印end。", "如", "\n", "而如果在scanf的“  ”中加入\\n时输入异常{", "scanf(\"%d\\n\",&a)", "}。", "例如程序", "\n", "# ", "include", " ", "<stdio.h>", "\n", "# ", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{    ", "int", " n,a;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "for", "(", "int", " i=", "0", ";i<n;++i){\n        ", "scanf", "(", "\"%d\\n\"", ",&a);\n    }\n    ", "printf", "(", "\"end\"", ");\n    \n    ", "return", " ", "0", ";\n } \n", "\n", "在此更改后的程序中依旧输入n=5，从键盘读入1 2 3 4 5后发现并不能按照修改前的程序输出end，而应该再次从键盘读入一个数字后正常进行。", "\n", "\n", "如上图所示，printf函数无反应。", "\n", "而当键入6并回车后", "\n", "\n", "如上图所示程序继续执行，printf函数正常打印end字符。", "\n", "因此请问", "scanf(\"%d\\n\",&a)与scanf(\"%d\",&a)之间的区别。"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这个问题的回答你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/7560778?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7560778&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;这篇博客你也可以参考下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/Yezeqi0328/article/details/116209974?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;python 熔断器&amp;#xff0c;限流器&amp;#xff0c;实现服务的熔断和限流&amp;#xff0c;也可以应用与其他场景的函数超时处理和异常错误处理。&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;除此之外, 这篇博客: &lt;a href=\"https://blog.csdn.net/qq_46015410/article/details/124899777?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;python期末习题整理&lt;/font&gt;&lt;/a&gt;中的 &lt;strong&gt;6-1 python函数&amp;#xff1a;求m到n之和&lt;/strong&gt; 部分也许能够解决你的问题, 你可以仔细阅读以下内容或跳转源博客中阅读: &lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;本题要求实现一个计算m~n&amp;#xff08;m&amp;lt;n&amp;#xff09;之间所有整数的和的简单函数。&lt;/p&gt;\n&lt;p&gt;函数接口定义&amp;#xff1a;&lt;br /&gt;\n函数接口&amp;#xff1a;&lt;br /&gt;\nsum(m,n)&lt;br /&gt;\nm&amp;lt;n&amp;#xff0c;m和n可以是负数&lt;/p&gt;\n&lt;p&gt;裁判测试程序样例&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;/* 请在这里填写答案 */&lt;br /&gt;\n在这里给出函数被调用进行测试的例子。例如&amp;#xff1a;&lt;br /&gt;\nm&amp;#61;int(input())&lt;br /&gt;\nn&amp;#61;int(input())&lt;br /&gt;\nprint(sum(m,n))&lt;br /&gt;\n输入样例&amp;#xff1a;&lt;br /&gt;\n在这里给出一组输入。例如&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;-1&lt;br /&gt;\n5&lt;br /&gt;\n输出样例&amp;#xff1a;&lt;br /&gt;\n在这里给出相应的输出。例如&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;14&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"prism language-python\"&gt;&lt;span class=\"token keyword\"&gt;def&lt;/span&gt; &lt;span class=\"token function\"&gt;sum&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;m&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;:&lt;/span&gt;\n    result&lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"token number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"token keyword\"&gt;if&lt;/span&gt; m&lt;span class=\"token operator\"&gt;&amp;lt;&lt;/span&gt;n&lt;span class=\"token punctuation\"&gt;:&lt;/span&gt;\n        &lt;span class=\"token keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"token keyword\"&gt;in&lt;/span&gt; &lt;span class=\"token builtin\"&gt;range&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;m&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"token operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"token number\"&gt;1&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;:&lt;/span&gt;\n            result&lt;span class=\"token operator\"&gt;&amp;#43;&amp;#61;&lt;/span&gt;i\n        &lt;span class=\"token keyword\"&gt;return&lt;/span&gt; result\n    &lt;span class=\"token keyword\"&gt;else&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;:&lt;/span&gt;\n        &lt;span class=\"token keyword\"&gt;return&lt;/span&gt; &lt;span class=\"token string\"&gt;&amp;#34;输入有误&amp;#xff01;&amp;#34;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "for循环", "Question": ["关于#python#的问题：在python中用for循环出m到n的所有自然数，可是for循环m到n的所有数打印出来", ["在python中用for循环出m到n的所有自然数，并求和，求和做出来了，可是用for循环把m到n的所有数打印出来，懵了。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for中是 i &amp;lt; this.content.length&lt;/p&gt;\n\n&lt;p&gt;不能是 &amp;lt;&amp;#61;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Vue为什么for循环中i显示为定义", ["\n\n", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组定义后缺少&amp;#xff1b;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言中关于二维数组FOR循环打印问题", ["问题遇到的现象和发生背景", "\n", "定义一组二维数组，用for循环打印，但是编译出错", "\n", "问题相关代码，请勿粘贴截图", "\n", "int", " ", "main", "(", "void", ")", "\n{\n    ", "int", " a, b;\n    ", "int", " arr[", "2", "][", "5", "] =\n    {\n        {", "1", ", ", "2", ", ", "3", ", ", "4", ", ", "5", "},\n        {", "4", ", ", "5", ", ", "6", ", ", "7", ", ", "8", "}\n    }\n    ", "for", " (a = ", "0", "; a < ", "sizeof", "(arr) / ", "sizeof", "(arr[", "0", "]); a++)\n    {\n        ", "for", " (b = ", "0", "; b < ", "sizeof", "(arr[", "0", "]) / ", "sizeof", "(arr[", "0", "][", "0", "]); b++)\n        {\n            printf(", "\"%d,\"", ", arr[a][b]);\n        }\n        printf(", "\"\\n\"", ");\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "error C2143: syntax error : missing ';' before 'for'", "执行 cl.exe 时出错.", "\n", "我的解答思路和尝试过的方法", "\n", "重新编写多次，并不知道错误出在哪里", "\n", "我想要达到的结果", "\n", "希望能解决这个问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主要就是m[i]&amp;#61;new Integer(101 i);和m[i]&amp;#61;101 i;的区别&lt;br /&gt;new 只能产生对象&amp;#xff0c;Integer是int的对象类型&amp;#xff0c;他是一个简单数据类型int的封装类&amp;#xff0c;而int不是类对象所以不能new&amp;#xff1b;顺便说一句&amp;#xff0c;简单数据类型的封装类new一个对象&amp;#xff0c;其值与简单数据值相等&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环对一维数组的动态赋值", ["new一个数组m[]，for循环去赋值时", "1：for(int i=0;i<m.length;i++){", "m[i]=new Integer(101+i);", "System.out.println(m[i]);}", "2：for(int i=0;i<m.length;i++){", "m[i]=101+i;", "System.out.println(m[i]);}", "我想知道是两种方法都可以么，有大神可以解答一下么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;v-for 不用加 this , 前提是 num 是 在data里声明过了 且为 数组 。 item就是 每一项&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue如何拿到v-for循环出来的item的值使它等于一个全局变量", ["\n", "我想要这个item等于一个全局变量，如何操作", "\n", "运行结果及报错内容", "\n", "\n", "我想监听item的变化，所以想让item等于一个全局变量", "运行效果", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "因为你获取的cookie的时候有空格你没有清除\r\nlet key = list[i].split('=')[0].replace(/(^\\s)/g,'')\r\n\r\n你可以打印一下你获取的cookie 是不是带有空格，就会被转为字符串", "Konwledge_Point": "for循环", "Question": ["使用for循环创建obj时，key带双引号的问题", ["尝试编写函数获取cookie对象，代码如下", "\n\n", "    document.cookie = 'user = test'\n    document.cookie = 'password = pass'\n    document.cookie = 'age = 18'\n    let obj = {}\n    getCookie()\n    function getCookie() {\n        let cookie = document.cookie\n        let list = cookie.split(';')\n        for (let i = 0; i < list.length; i++) {\n            let key = list[i].split('=')[0]\n            let value = list[i].split('=')[1]\n            obj[key] = value\n        }\n        console.log(obj);\n    }\n", "\n\n", "最终获得对象", "\n{password: \"pass\", \" user\": \"test\", \" age\": \"18\"}", "\n除了第一个key，后面的key都带上了双引号，请教下出了什么问题，如何解决"]], "Tag": "程序设计"}
{"Answer": "```\r\n     save.onclick = function () {\r\n        for (var i = 1; i &lt; tb.getElementsByTagName('tr').length; i++) {\r\n            var tds = tb.getElementsByTagName('tr')[i].getElementsByTagName('td');\r\n            database.transaction(\r\n\r\n                (function () {\r\n                    return function (fx) {\r\n                        fx.executeSql(\r\n                            \"insert into class (id,name,age,sex)values(?,?,?,?)\",\r\n                            [tds[0].innerHTML, tds[1].innerHTML, tds[2].innerHTML, tds[3].innerHTML],\r\n                            function () {\r\n                                alert(\"insert success!!!\");\r\n                            },\r\n                            function () {\r\n                                alert(\"insert false!!!\");\r\n                            }\r\n                        )\r\n                    }\r\n                })(tds)\r\n                );\r\n        }\r\n\r\n    }\r\n```", "Konwledge_Point": "for循环", "Question": ["为什么我的js代码中的for循环只执行最后一次，是闭包造成的么，怎么解决吖", ["save.onclick=function(){", "\n                    for (var i = 1; i < tb.getElementsByTagName('tr').length; i++) {", "\n                        var tds=tb.getElementsByTagName('tr')[i].getElementsByTagName('td');", "\n                        database.transaction(function(fx){", "\n                            fx.executeSql(", "\n                                \"insert into class (id,name,age,sex)values(?,?,?,?)\",", "\n                                [tds[0].innerHTML,tds[1].innerHTML,tds[2].innerHTML,tds[3].innerHTML],", "\n                                function(){", "\n                                    alert(\"insert success!!!\");", "\n                                },", "\n                                function(){", "\n                                    alert(\"insert false!!!\");", "\n                                }", "\n                            )", "\n                        })", "\n                    }", "\n                }"]], "Tag": "程序设计"}
{"Answer": "```\r\nfor(i = -1; i &lt; LEN - 1;i++){\r\n-&gt;\r\nfor(i = -1; i &lt; (int)LEN - 1;i++){\r\n```", "Konwledge_Point": "for循环", "Question": ["以下两种for循环的结果为什么不一样？", ["int array[] = {1,2,3,4,5};\n#define LEN (sizeof(array) / sizeof(array[0]))\n\nint main(void)\n{\n    int i, sum = 0;\n    for(i = 0; i < LEN; i++){\n        printf(\"i = %d\\n\", i);\n        sum += array[i];\n    }\n    printf(\"%d\\n\", sum);\n\n    sum = 0;\n    for(i = -1; i < LEN - 1;i++){\n        printf(\"i = %d\\n\", i);\n        sum += array[i+1];\n    }\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n", "\n\n", "我自己运行了一下，第一个for循环是对的，但是第二个for都没有开始，请问这是为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;你子类代码中\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;__init__&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;self&lt;/span&gt;, restaurant_name, cuisine_type, *flavors)&lt;/span&gt;&lt;/span&gt;:\n\n*flavors是把剩余参数打包形成一个元组&amp;#xff0c;而你调用时传的kind也是一个元组\nflavors就成了一个嵌套二层的元组\n( (&lt;span class=\"hljs-string\"&gt;&amp;#39;香草&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;蓝莓&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;柠檬&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;西瓜&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;草莓&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;猫屎&amp;#39;&lt;/span&gt;),)\n\n\n需要在调用时用*kind把这个元组拆解开\n\n    re &amp;#61; IceCreamStand(&lt;span class=\"hljs-string\"&gt;&amp;#39;蜜雪冰城&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;冰淇淋&amp;#39;&lt;/span&gt;, *kind)\n\n或者 子类代码 *flavors改成flavors 直接接受kind元组\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;__init__&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;self&lt;/span&gt;, restaurant_name, cuisine_type, flavors)&lt;/span&gt;&lt;/span&gt;:\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Python 3.9.6中子类方法中使用for循环遍历列表，循环只执行一次打印出整个列表", ["调用子类方法，方法中使用for循环遍历元组，循环只执行一次打印出元组，不是预想的单个元素打印的效果。", "\n", "代码", "父类相关代码", "\n", "\n", "class", " ", "Restaurant", ":\n    ", "\"\"\"餐馆的描述与营业状态\"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self, restaurant_name, cuisine_type", "):\n        ", "\"\"\"初始化属性restaurant_name和cuisine_type\"\"\"", "\n        self.restaurant_name = restaurant_name\n        self.cuisine_type = cuisine_type\n        self.number_served = ", "8", "\n\n    ", "def", " ", "describle_restaurant", "(", "self", "):\n        ", "\"\"\"描述餐馆的信息\"\"\"", "\n        ", "print", "(", "f'The restaurant name is ", "{self.restaurant_name}", ".'", ")\n        ", "print", "(", "f'There are ", "{self.number_served}", " persons visited '", "\n              ", "f'", "{self.restaurant_name}", ".'", ")\n        ", "print", "(", "f\"", "{self.restaurant_name}", "'s type is ", "{self.cuisine_type}", ".\"", ")\n", "\n", "创建子类代码", "\n", "class", " ", "IceCreamStand", "(", "Restaurant", "):\n    ", "\"\"\"冰淇淋子类继承餐馆父类\"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self, restaurant_name, cuisine_type, *flavors", "):\n        ", "\"\"\"\n        初始化父类属性，再初始化子类属性\n        \"\"\"", "\n        ", "super", "().__init__(restaurant_name, cuisine_type)\n        self.flavors = flavors\n\n    ", "def", " ", "show_ice", "(", "self", "):\n        ", "print", "(", "f\"\\nThe following is the kind of this icecream:\"", ")\n        ", "for", " flavor ", "in", " self.flavors:\n            ", "print", "(", "f'", "{flavor}", "'", ")\n\n\n", "\n", "方法调用", "\n", "kind = (", "'香草'", ", ", "'蓝莓'", ", ", "'柠檬'", ", ", "'西瓜'", ", ", "'草莓'", ", ", "'猫屎'", ")\nre = IceCreamStand(", "'蜜雪冰城'", ", ", "'冰淇淋'", ", kind)\nre", ".describle_restaurant", "()\nre", ".show_ice", "()\n\n", "\n", "show_ice()是子类特有的方法，", "执行结果", "\n", "尝试解决，修改子类方法", "\n", "def", " ", "__init__", "(", "self, restaurant_name, cuisine_type", "):\n        ", "\"\"\"\n        初始化父类属性，再初始化子类属性\n        \"\"\"", "\n        ", "super", "().__init__(restaurant_name, cuisine_type)\n        self.flavors = []\n\n", "\n", "直接使用实例re.flavors = kind 传入实参得到预期结果", "\n", "疑惑是为什么第一种方式不可以，是因为初始化父类属性时不能直接在_init_()方法中添加子类属性（不能的话，但是实参能传进去）。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;A&amp;#61;&amp;#61;0,B&amp;#61;&amp;#61;0,C&amp;#61;&amp;#61;0,D&amp;#61;&amp;#61;0,E&amp;#61;&amp;#61;0每个都要加分号&lt;br /&gt;if在for循环里面&lt;br /&gt;你是不是n输入的太大了  &amp;#xff0c;n的输入scanf不需要加\\n&amp;#xff1b;&lt;br /&gt;比如 输入N&amp;#61;5;&lt;br /&gt;就要输入5个数每输入一个都要按一次回车&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个for循环一直不可以输出循环？？是哪里出问题了呢？最后的结果也不对，实在是找不到了，刚开始自学", ["\n", "这个for循环一直不可以输出循环？？是哪里出问题了呢？最后的结果也不对，实在是找不到了，刚开始自学"]], "Tag": "程序设计"}
{"Answer": "在一个js程序线程执行过程中，页面内容是不会更新渲染的。\r\n只有当js程序线程执行结束，页面内容才会更新渲染。\r\n\r\n不过，在ie浏览器或者低版本的谷歌浏览器中alert()弹出对话框时也会更新渲染，但高版本的谷歌浏览器不会这样", "Konwledge_Point": "for循环", "Question": ["for循环中为什么内容不是一个一个的显示出来而是是一起出来的？", ["<!DOCTYPE html>\n<html>\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <title></title>\n    </head>\n\n    <body>\n        <input type=\"text\" id=\"t\" value=\"\" />\n        <input type=\"button\" id=\"obtn\" value=\"创建\" onclick=\"text()\" />\n        <div id=\"content\">\n\n        </div>\n        <script type=\"text/javascript\">\n            var i = 0;\n            function text() {\n                for(var i = 0; i < 10; i++) {\n                    var div = document.createElement(\"div\");\n                    div.innerHTML = i;\n                    document.getElementById(\"content\").appendChild(div);\n                    alert(i);\n                }\n            }\n        </script>\n    </body>\n\n</html>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不需要使用递归&amp;#xff0c;for循环即可解决,参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nvoid main(){\n    int i,j,n,m,&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;0;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;1||n&amp;gt;7)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input error!&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;0;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;m*10&amp;#43;i;\n            s&amp;#43;&amp;#61;m;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;S&amp;#61;%d&amp;#34;&lt;/span&gt;,s);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/001934102266180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环能解决吗，是不是需要用到递归？", ["用for循环能解决吗，是不是需要用到递归？递归的话递归出口和递归式子应该怎样写啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是i&amp;#61;b不是i&amp;#61;&amp;#61;b&amp;#xff0c;把判断写成了赋值&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这里for循环为什么一直无限循环", ["这里for为什么无限循环，而不是只有一个四，因为当i++ 变成5以后，就不等于四了，应该直接结束循环，i++没有实现吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环内只保留data.append&amp;#xff0c;其他的放在循环外。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环下写入表格怎么避免被覆盖啊？", ["最后一段的for循环里面，每次爬取完写入表格就会把前面的数据覆盖了，请问怎么修改来避免，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为第一条数据插入成功&amp;#xff0c;就return返回了插入成功&amp;#xff0c;直接就跳出循环了&lt;/p&gt;\n&lt;p&gt;把代码中的&lt;br /&gt;if(result &amp;gt;0){&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      return new Result.....200  success 插入成功&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;\n&lt;p&gt;放到for循环结束&amp;#xff0c;就是说最后一个插入成功才返回结果&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["怎样将控制台输出的值，通过for循环，逐个插入到数据库，上述图片的方法只能插入第一个数据", ["\n", "怎样将控制台输出的值，通过for循环，逐个插入到数据库，上述图片的方法只能插入第一个数据"]], "Tag": "程序设计"}
{"Answer": "字符串的之后有一个结束字符。‘\\0’ = 0\r\n你可以看到i循环到3，从0开始 4个字符", "Konwledge_Point": "for循环", "Question": ["for循环的判定实现？？", ["这是一个打印字符数组和字符指针变量的程序", "\n\n", " #include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int i;\n    char str[] = \"ABC\";\n    char *ptr = \"123\";\n    for (i = 0; str[i]; i++)\n    {\n        putchar(str[i]);\n    }\n    putchar('\\n');\n    for (i = 0; ptr[i]; i++)\n    {\n        putchar(ptr[i]);\n    }\n    putchar('\\n');\n\n    printf(\"str=%s\\n\", str);\n    printf(\"ptr=%s\\n\", ptr);\n\n    system(\"pause\");\n    return 0;\n\n\n}\n", "\n\n", "在for循环中，是如何判定不超过数组和变量的大小范围的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;从0开始也可以&amp;#xff0c;没什么差别&amp;#xff0c;只是在处理的时候注意别越界了就可以&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个程序用的是选择排序法。为什么for循环是从1开始，而不是从0开始？", ["这个程序用的是选择排序法。为什么for循环是从1开始，而不是从0开始？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf中的n和x代表的意义不一样&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["while循环和for循环计算奇数分之一前N项和结果不一致？", ["用上面的for循环就是对的但是用下面的while循环就不对了是为什么？", "结果相差很小就很奇怪"]], "Tag": "程序设计"}
{"Answer": "小数计算是有误差的，计算机是二进制计算，小数转化成二进制有无限循环的情况，有误差\r\n你可以多看几位小数就知道了\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\n\r\nint main()\r\n\r\n{\r\n\r\n    double i;\r\n\r\n    for(i=0;i&lt;=10;i+=0.1) \r\n    printf(\"%.30lf\\n\",i);\r\n    return 0;\r\n\r\n } \r\n\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环不应该在 打印9.9 之后遇到 i==10 停止吗？求告知", ["\n#include<stdio.h>\n\nint main()\n\n{\n\n    double i;\n\n    for(i=0;i!=10;i+=0.1)\n\n        printf(\"%.1lf\\n\",i);\n\n    return 0;\n\n } \n\n", "\n\n", "for循环不应该在 打印9.9 之后遇到 i==10 停止吗？", "\n怎么会这样？"]], "Tag": "程序设计"}
{"Answer": "这样是不行的，最后你的map中有不同的url但他们都指向同一个对象（最后的那个对象）", "Konwledge_Point": "for循环", "Question": ["在for循环前只生成一次对象可以吗？", ["本人目前遇到的一个问题，在公司眼前跑的系统中，有一个项目中设了两个定时器，每天到定时的时候严重影响服务器性能，致使CPU的占有率达到了100%，有时会宕机，我修改了一下跑定时的程序，如下：", "                        SeoPageTextsBean  pageTextBean = new SeoPageTextsBean();", "         int len = pageTexts.size();", "          for (int i=0;i<len;i++)", "            {", "             TSeoPageTexts seoPageText = (TSeoPageTexts) pageTexts.get(i);", "             String pageUrl = seoPageText.getPageUrl();", "                if (pageUrl!=null&&!\"\".equals(pageUrl))", "               {", "                 pageTextBean.setPageUrl(pageUrl);", "                 pageTextBean.setTitle(seoPageText.getTitle());", "                    pageTextBean.setDescription(seoPageText.getDescription());", "                    pageTextBean.setKeywords(seoPageText.getKeywords());", "                  pageTextBean.setH1Text(seoPageText.getH1Text());", "                  pageTextBean.setTopText(seoPageText.getTopText());", "                    pageTextBean.setH2Text(seoPageText.getH2Text());", "                  pageTextBean.setLeftText(seoPageText.getLeftText());", "                  pageTextBean.setBottomText((seoPageText.getBottomText()));", "                  String url =AnalyseUrl.analyse(pageTextBean.getPageUrl());", "                    if (url!=null)", "                    {", "                     url =url.toLowerCase().trim();", "                        if (\"\".equals(url)){", "                        if(log.isInfoEnabled()){", "                           log(\"======分析后结果为空字符!===== 原url串为: \"+pageTextBean.getPageUrl());", "                       }", "                     }", "                      else{                         SEOPageTexts.SEO_Page_Texts_Map.put(url,pageTextBean );", "                            ", "                   }", "                 }    ", "               }", "         }", "请注意这句 SeoPageTextsBean  pageTextBean = new SeoPageTextsBean(); ，我把SeoPageTextsBean对象的生成写在for循环的前边，因为从程序优化的角度考虑，这样可以在程序中只生成一次SeoPageTextsBean的实例，比在for循环中不断地生成新实例的性能上会减少开销，在本机上测试，pageTextBean 在for循环中也有值，就是不知道这样的写法在程序run的时候会不会有什么bug存在，这个请有这方面经验的Jer们给予建议，，希望大家能畅所欲言，各抒已见。"]], "Tag": "程序设计"}
{"Answer": "for (; k &lt; 16 * 8 * 256;)\r\n这里要修改为\r\nfor (k=0; k &lt; 16 * 8 * 256;)", "Konwledge_Point": "for循环", "Question": ["二维数组，for循环赋值", ["这能达到循环赋值的效果吗", "\n\n", "int i=0,j=0,k=0;\n\nfor (; i < 24;)\n{\n  for (j=0; j < 16;)\n      {\n         for (; k < 16 * 8 * 256;)\n             {\n                change[i, j] = Convert.ToString(code[k], 2);\n                k++;\n             }                    \n         j++;\n       }\n  i++;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;continue只是跳出当前循环的后侧语句,stat3还是会执行的,可以理解为直接跳到stat3那个地方&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环中的continue，有一点问题不太明白。", ["我在学习C语言网课的时候，说continue就是忽略这一次的循环所剩下的语句，直接进行下一轮循环。", "\n", "\n", "而for循环中的（；；第三条语句）理论上在循环体最后执行，也就是算作循环剩下的语句，那么被continue跳出的话，循环条件不就不改变，变成死循环了咩？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目是什么啊&amp;#xff1f;&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include&amp;lt;stdio.h&amp;gt;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;a, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n    for (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;a;\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["求解决如何在for循环条件中使用在外部定义的变量！", ["问题出在第五行第六行", "谢谢各位！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;贴代码&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["在增强for循环中迭代集合，集合不能被修改，那怎么把另一个集合添加进集合里", ["感谢!", "在增强for循环中迭代集合，集合不能被修改，那怎么把另一个集合添加进集合里啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你想要的是这样还是&amp;#xff1f;&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-selector-tag\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a{} &amp;#61; \\&amp;#34;&lt;/span&gt;r{},g{},b{}\\&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;.format(i,i,i,i))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/97112384563618.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python无法在for循环通过多次引用一个相同变量实现多个变量赋值", ["注释掉的部分是我期望实现的部分，可是好像没办法用for循环在同一表达式中多次引用i这个变量，有巨佬能给出这个问题的解决办法吗？（在前面的代码中已经定义过r、g、b的1到9的值了）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;&amp;lt;a href=\"#\" onclick=\"for(i=0;i&amp;lt;=&amp;lt;?= $NumberOfTotalRecords ?&amp;gt;;i++){document.getElementById('x' . i . '_Order').value=i;}\"&amp;gt;Function&amp;lt;/a&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; operator is string concatenation in php.  Try using the &lt;code&gt;+&lt;/code&gt; operator for string concatenation in javascript.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;document.getElementById('x' + i + '_Order')\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["FOR循环中的getElementById不起作用", ["\n\n", "I'm not sure why this isn't working.", "\n\n", "I have a record list of text fields in a form:", "\n\n", "<input type=\"text\" id=\"x1_Order\">\n<input type=\"text\" id=\"x2_Order\">\n<input type=\"text\" id=\"x3_Order\">\n<input type=\"text\" id=\"x4_Order\">\n<input type=\"text\" id=\"x5_Order\">\n...\n<input type=\"text\" id=\"x253_Order\">\n<input type=\"text\" id=\"x254_Order\">\n<input type=\"text\" id=\"x255_Order\">\n", "\n\n", "$NumberOfTotalRecords = 255", "\n\n", "And using this PHP/Javascript:", "\n\n", "<a href=\"#\" onclick=\"for(i=0;i<=<?= $NumberOfTotalRecords ?>;i++){document.getElementById('x' . i . '_Order').value=i;}\">Function</a>\n", "\n\n", "When I click the ", "Function", " link to trigger the javascript, in Google Chrome Developer Javascript Console, I get this error:", "\n\n", "Uncaught SyntaxError: Unexpected string\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "因为 你这里写了  \r\nint b1[4] = { 2,4,3 };\r\nint b2[4] = { 3,4,2 };\r\n也就是 b1[0]=2, b1[1]=4, b1[2]=3, b1[4]=0;\r\n你数组长度是4，但是你只赋值了3个，默认为0；", "Konwledge_Point": "for循环", "Question": ["2重for循环，如何循环赋值，以及判定求和的条件", ["我这里先给个程序的样板，有可能是错误的啊，老铁，帮忙给看看啊。谢谢啦。", "\n#include \"stdafx.h\"", "\n#include", "\n#include", "\nint main()", "\n{", "\nint a, b, i = 0;", "\nint sum = 0;", "\nint b1[4] = {2,4,3 };", "\nint b2[4] = { 3,4,2 };", "\nfor (a = 1; a <= 3; a++)", "\nb1[a] = 2;", "\nb1[a] = 4;", "\nb1[a] = 3;", "\n/*", "\n这里是第一个for循环，就是希望能够循环赋值给一个数组，具体想要实现的功能是：", "\n当a=1的时候，b1[1]=2，然后把这个数字存储到数组，方便下面做sum求和用。", "\n当a=2的时候，b1[2]=4，然后把这个数字存储起来，方便下面做sum求和用。", "\n当a=3的时候，b1[3]=3，然后把这个数字存储起来，方便下面做sum求和用。", "/", "\nfor (b = 1; b <= 3; b++)", "\nb2[b] = 3;", "\nb2[b] = 4;", "\nb2[b] = 2;", "\n/", "\n这里是第二个for循环，就是希望能够循环赋值给一个数组，具体想要实现的功能是：", "\n当b=1的时候，b1[1]=3，然后把这个数字存储到数组，方便下面做sum求和用。", "\n当b=2的时候，b1[2]=4，然后把这个数字存储起来，方便下面做sum求和用。", "\n当b=3的时候，b1[3]=2，然后把这个数字存储起来，方便下面做sum求和用。", "/", "\nsum = b1[a] + b2[b] ; /", " 刚刚是希望能够循环给for 赋值，现在是希望能够根据刚刚的不同的值，来循环判定sum的和。*/", "\nif (sum == 6)", "\n{", "\nprintf(\"A:%2d B:%2d \", b1[a], b2[b]); /* 如果sum等于6，那么把b1[a],b2[b]的值打印出来。*/", "\ni++;", "\nif (i % 1 == 0)", "\nprintf(\"\\n\"); /* i用了统计次数，看看总共有多少种组合方法。每一种方法i都自动加1*/", "\n}", "\nprintf(\"共有%d种办法\\n\", i);", "\nreturn 0;", "\n}", "\n希望看见的运行结果是 ：( b1[1] = 2 + b2[2] = 4 ) ==6 ==sum", "\n( b1[3] = 3 + b2[1] = 3 ) ==6 ==sum", "\n( b1[2] = 4 + b2[3] = 2 ) ==6 ==sum", "\n......", "\n共有x种办法；", "\n注意：1 ： 可以不用数组来赋值。也可以用变量，但是我要求的值是特定的值，比如当 b ==1的时候，某一个变量要等于3，然后要用这个变量来参与sum求和。判定为6的时候，把该变量打印出来。", "\n2 ：帮我看看sum 和那个等式有没有循环来判定，我是希望每一次循环都能判定一次sum求和", "\n4：帮我看看我用for循环，循环赋值的时候是不是错啦？因为那个数组好像是从0开始的，我希望能够从1开始，如果要是从1开始，我给数组赋初值的时候是不是也赋值错啦。可以不用我的程序，我只是想演练一下自己的要实现的功能。", "\n3 ：小程序，也不难，希望能够帮我写一个完整的小程序。希望能够保留的功能是，有多少种办法也就是i能够算清楚。然后，sum=6所涉及的2个变量的值的全部组合情况能够全部打印出来。最后希望程序能够尽量简单一点，有个main函数就可以啦。最好是在我原来代码的基础上简单的改动一下。不要用count 这些编译器会报错。我用的是vs2015。希望用的包能够提醒一下。我好导入进去。", "\n下面我把注释删掉：给一个完整程序，帮我修改一下：", "\n#include \"stdafx.h\"", "\n#include", "\n#include", "\nint main()", "\n{", "\nint a, b, i = 0;", "\nint sum = 0;", "\nint b1[4] = {2,4,3 };", "\nint b2[4] = { 3,4,2 };", "\nfor (a = 1; a <= 3; a++)", "\nb1[a] = 2;", "\nb1[a] = 4;", "\nb1[a] = 3;", "\nfor (b = 1; b <= 3; b++)", "\nb2[b] = 3;", "\nb2[b] = 4;", "\nb2[b] = 2;", "\nsum = b1[a] + b2[b] ; ", "\nif (sum == 6)", "\n{", "\nprintf(\"A:%2d B:%2d \", b1[a], b2[b]); ", "\ni++;", "\nif (i % 1 == 0)", "\nprintf(\"\\n\"); ", "\n}", "\nprintf(\"共有%d种办法\\n\", i);", "\nreturn 0;", "\n}", "\n\n", "有的朋友给出啦如下的解决方案：", "\n#include \"stdafx.h\"", "\n#include \"windows.h\"", "\nint main()", "\n{", "\n    int c = 0;", "\n    int sum = 0;", "\n    int b1[4] = { 2,4,3 };", "\n    int b2[4] = { 3,4,2 };", "\n    for (int i = 0; i<4; i++)", "\n    {", "\n        for (int j = 0; j<4; j++)", "\n        {", "\n            sum = b1[i] + b2[j];", "\n            if (sum ==6) ", "\n            {", "\n                printf(\"A:%2d B:%2d \\n \", b1[i], b2[j]);", "\n                c++;", "\n            }", "\n\n", "    }\n}\nprintf(\"共有%d种办法\\n\", c);\n\nsystem(\"pause\");\nreturn 0;\n", "\n\n", "}", "\n 运行结果为：", "\n\n", "但是我把参数修改成sum ==4的时候，运行结果为：", "\n\n", "4+0 ==4。这个不是我想要看到的结果，我只是希望能看到2+2==4，也就是说", "\n sum要求的和值4，必须的出自b1[]和b2[]这两个数组。但是4是出自于数组b1[]，0是从哪里跑出来的呀？我不需要这个0。", "\n\n", "能不能不用数组来赋值，用变量。用数组的话，感觉数组很复杂。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n\n&lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;InputBox&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入第一个自然数&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;InputBox&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入第二个自然数&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;If&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Then&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;t&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;t&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;Dim&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Integer&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Integer&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;For&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;If&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Mod&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;And&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Mod&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Then&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;If&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;Next&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;MsgBox&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;最大公约数为&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["求解答，求两个数的最大公约数，并且要求使用for循环", ["求解答，使用visual basic，求两个数的最大公约数，并且要求使用for循环"]], "Tag": "程序设计"}
{"Answer": "i依次代表从m到n的每一个数，而k代表每一个i，大于1且小于i的每一个可能存在的因数，如果从2到i-1都没有i的因数，那么此时的i就是素数", "Konwledge_Point": "for循环", "Question": ["关于for循环的条件——C语言素数", ["小白刚学，不是很明白一些问题，代码如下：", "\n#include", "\nint main(){", "\n    int i,m,n;", "\n    int sum=0;", "\n    int cnt=0;", "\n\n", "scanf(\"%d %d\",&m,&n);\nif(m==1){\n    m=2;\n}\nfor(i=m;i<=n;i++){\n    int isPrime=1;\n    int k=1;\n    for(k=2;k<i-1;k++){\n        if(i%k==0){\n            isPrime=0;\n            break;\n        }\n    }\n    if(isPrime==1){\n        cnt++;\n        sum+=i;\n    }\n}\nprintf(\"%d %d\",cnt,sum);\nreturn 0;\n", "\n\n", "} ", "\n\n", "大致思路是明白，就是越想越乱，for(k=2;k<i-1;k++)这句搞不懂for循环的条件，为什么是k<i-1，debug还是不明白，希望各位能解答一二。另：遇此类for循环条件应该如何去判断，有没有什么简单的实例可以解释一下呢？谢谢！"]], "Tag": "程序设计"}
{"Answer": "```\r\n for(;i&lt;list.size();)\r\n 这里的i++呢\r\n```", "Konwledge_Point": "for循环", "Question": ["在线程里实现get方式发送，for循环走两次", ["代码如下：", "\n\n", "总共一条数据：for循环走了两次，很纳闷呀，而且run只走一次，有没有看出是什么原因呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先呢&amp;#xff0c;你提到了返回值&amp;#xff0c;这里没定义函数&amp;#xff0c;就不存在返回值的&lt;br /&gt;你是想这样&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;l&amp;#61;[]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; number &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; numbers:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;1:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;1st&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;1st&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;2:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;2nd&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;2nd&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;number&lt;/span&gt;&amp;#61;&amp;#61;3:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;3th&amp;#39;&lt;/span&gt;)\n        l.append(&lt;span class=\"hljs-string\"&gt;&amp;#39;3th&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(str(number)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;th&amp;#39;&lt;/span&gt;)\n        l.append(str(number)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;th&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["如何将for循环的返回值，输出一个列表", ["如何将for循环的返回值输出为一个列表。", "\n", "\n```", "python", "\nnumbers=[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "9", ",", "8", "]\n\nnumbers.", "sort", "()\n\n", "for", " ", "number", " in numbers:\n    ", "if", " ", "number", "==", "1", ":\n        ", "print", "(", "'1st'", ")\n    ", "if", " ", "number", "==", "2", ":\n        ", "print", "(", "'2nd'", ")\n    ", "if", " ", "number", "==", "3", ":\n        ", "print", "(", "'3th'", ")\n    ", "else", ":\n        ", "print", "(str(", "number", ")+", "'th'", ")\n", "1", "st", "\n", "1", "th", "\n", "2", "nd\n", "2", "th", "\n", "3", "th", "\n", "4", "th", "\n", "5", "th", "\n", "6", "th", "\n", "7", "th", "\n", "8", "th", "\n", "9", "th", "\n\n", "\n", "把1st，2nd，3th……放在一个列表里。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改为int sum&amp;#61;0,i&amp;#61;0;&lt;br /&gt;for(i&amp;#61;1;i&amp;lt;&amp;#61;10;i&amp;#43;&amp;#43;)即可。&lt;br /&gt;在for 中定义的变量&amp;#xff0c;其作用域只是在for循环体内部&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java  for循环 请问最后输出（\"i=\"+i） 第二个 i 为什么会报错", [" Java  for循环 请问最后输出（\"i=\"+i） 第二个 i 为什么会报？找了好久都没找到错误，求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a 既然是外循环的因子&amp;#xff0c;内循环里就不能再用&amp;#xff0c;不然就出错了&amp;#xff0c;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main()\n{\n   int &lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;100,b&amp;#61;0,c,d,e,f&amp;#61;0,g;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;100;a&amp;lt;&amp;#61;999;a&amp;#43;&amp;#43;)\n   {\n       &lt;span class=\"hljs-attribute\"&gt;g&lt;/span&gt;&amp;#61;a;f&amp;#61;0;\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;1;b&amp;lt;&amp;#61;3;b&amp;#43;&amp;#43;)\n       {\n           c &amp;#61; g%10;\n           g &amp;#61; g/10;\n           f &amp;#61; f &amp;#43; c&lt;span class=\"hljs-number\"&gt;*c&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*c&lt;/span&gt;;\n       }\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f &amp;#61;&amp;#61; a)\n       {\n           printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,a);\n       }\n   }\n   return 0;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["关于#c语言#的问题：我输入的这个代码为什么for循环里面的a全部变成了1", ["\n", "帮忙看一下我哪里错了，我输入的这个代码为什么for循环里面的a全部变成了1，求解！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你remove掉当前的i位置后&amp;#xff0c;数组中下一个元素下标就成i了&amp;#xff0c;下一循环会取i&amp;#43;1&amp;#xff0c;就跳过新的i位置数据了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么for循环自动步进两", ["xlist = ", "input", "()\n", "print", "(", "'list is:'", ",xlist)\nxlist = [", "int", "(xlist[i]) ", "for", " i ", "in", " ", "range", "(", "len", "(xlist))]\n", "print", "(", "'new list:'", ",xlist)\n", "def", " ", "findnumber", "(", "nums", "):\n    list2 = xlist\n    ", "print", "(", "'nums:'", ",list2)\n    ", "for", " i ", "in", " xlist:\n        ", "print", "(", "'process:'", ",i)\n        list2.remove(i)\n    ", "return", " list2[", "0", "]\n            \n", "print", "(findnumber(xlist))\n", "\n", "``运行结果：", "list is: 1243", "new list: [1, 2, 4, 3]", "nums: [1, 2, 4, 3]", "process: 1", "process: 4", "2", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你看看我这个基础测试&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;break&amp;#xff1a;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/545076227346140.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;continue&amp;#xff1a;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/426917227346147.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;顺便在我的好久之前的笔记找到的图&amp;#xff0c;你看看&amp;#xff0c;不过没画全&amp;#xff0c;&lt;br /&gt;注意&amp;#xff1a;我这里的表达式1是你的表达式2&amp;#xff0c;我这里的表达式2是判断是否执行break/continue语句&amp;#xff0c;没有把你的表达式3写进去&amp;#xff0c;可以把表达式3理解成那条回往表达式1的线吧。&lt;br /&gt;break&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/352628227346170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;continue&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/019138227346116.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;以上基础仅供参考&amp;#xff0c;希望对楼主有帮助&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java便签for循环中出现 break和continue时的差别是 是否执行表达式3？", ["请教一下continue inner不是终止本次循环吗，为什么还会执行for循环的表达式3，i++，不是直接停止，返回标签位置吗，表达式3在循环体执行完之后才执行呀，按理说循环体都中止了，应该不会往后继续了呀，能不能解释下，请赐教，还有出现break后没有去执行for循环的i++，而在出现continue inner后却执行了for循环的i++，所以这是他们之间的差异还是我对代码的理解不对？这是俩个问题", "话不多说上代码", "\n", "\n", "public", " ", "class", " ", "age", " ", "{\n    ", "public", " static void main(String[] args) {\n        int i = ", "0", ";\n        outer: ", "// Can't have statements here", "\n        ", "for", "(; ", "true", " ;) { ", "// infinite loop", "\n            ", "inner", ": ", "// Can't have statements here", "\n            ", "for", "(; i < ", "10", "; i++) {\n                System.", "out", ".println(", "\"i = \"", " + i);\n                ", "if", "(i == ", "2", ") {\n                    System.", "out", ".println(", "\"continue\"", ");\n                    ", "continue", ";\n                }\n                ", "if", "(i == ", "3", ") {\n                    System.", "out", ".println(", "\"break\"", ");\n                    i++; ", "// Otherwise i never", "\n                    ", "// gets incremented.", "\n                    ", "break", ";\n                }\n                ", "if", "(i == ", "7", ") {\n                    System.", "out", ".println(", "\"continue outer\"", ");\n                    i++; ", "// Otherwise i never", "\n                    ", "// gets incremented.", "\n                    ", "continue", " outer;\n                }\n                ", "if", "(i == ", "8", ") {\n                    System.", "out", ".println(", "\"break outer\"", ");\n                    ", "break", " outer;\n                }\n                ", "for", "(int k = ", "0", "; k < ", "5", "; k++) {\n                    ", "if", "(k == ", "3", ") {\n                        System.", "out", ".println(", "\"continue inner\"", ");\n                        ", "continue", " ", "inner", ";\n                    }\n                }\n            }\n        }\n        ", "// Can't break or continue to labels here", "\n    }\n    }\n", "\n", "运行结果如下：", "\n", "i = ", "0", "\n", "continue", " ", "inner", "\ni = ", "1", "\n", "continue", " ", "inner", "\ni = ", "2", "\n", "continue", "\ni = ", "3", "\n", "break", "\ni = ", "4", "\n", "continue", " ", "inner", "\ni = ", "5", "\n", "continue", " ", "inner", "\ni = ", "6", "\n", "continue", " ", "inner", "\ni = ", "7", "\n", "continue", " outer\ni = ", "8", "\n", "break", " outer\n", "\n", "这个代码是摘自是wuding梦想成真的一篇博客（已经三年没有发表过动态了）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为循环终止条件是b&amp;lt;50,你都没有改变b的值&amp;#xff0c;循环条件恒成立&amp;#xff0c;自然就死循环了。&lt;br /&gt;&lt;strong&gt;b&amp;#61;5a&amp;#xff0c;你只是在循环上面执行了&amp;#xff0c;给b赋了初始值&amp;#xff0c;后面并没有取修改。&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环结束条件的疑问", ["如以下例子：", "int b=5", "a；", "for（a=1；b<50；a++） \\这一步为什么不可以用b作为循环结束条件", "printf（“%d”，a）；", "这个代码运行时会出现死循环，是为什么呢？", "把循环条件换成a就可以正常运行了 但是之前已经定义了b=5", "a 为什么不能用b呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;你的b和c的初值应该放在对应的循环里面&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;1;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; a&amp;lt;10\n    &lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;0;% &lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;0放里面\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; b&amp;lt;10\n        &lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;0; % &lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;0放里面\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; c&amp;lt;10\n            &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;a*10^3&amp;#43;b*10^2&amp;#43;c*10&amp;#43;a;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;&amp;#61;(5*c&amp;#43;1)^2\n                disp(d)% s改成d\n            end\n            &lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;c&amp;#43;1;\n        end\n        &lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;b&amp;#43;1;\n    end\n    &lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;a&amp;#43;1;\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后结果就对了&amp;#xff1a;     1681&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&amp;#xff0c;(●&amp;#39;◡&amp;#39;●)&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["此for循环怎么转化为while循环", ["for a=1:9", "    for b=0:9", "        for c=0:9", "            d=a", "10^3+b", "10^2+c", "10+a;", "            if d==(5", "c+1)^2", "                disp(d)", "            end", "        end", "    end", "end"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;通过断点调试是可以看出这个问题&amp;#xff0c;如果想继续输入&amp;#xff0c;可以在改成这种方式&lt;/p&gt;\n\n&lt;pre&gt;\n       else {\n                System.out.println(&amp;#34;输入错误&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;);\n             &lt;/pre&gt;\n\n&lt;pre&gt;\n                input &amp;#61; new Scanner(System.in);\n                continue;\n            }&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中加入has判断 就挑跳不出来了，怎么解决？", ["\nfor循环中加入has判断 就挑跳不出来了，求大佬解答\n下面是代码\n\npackage shopping;\n\nimport java.util.Scanner;\n\npublic class jieMian {\n    public static void main(String[] args) {\n        denglu();\n\n    }\n\n    public static void denglu() {\n        //声明\n        String name = \"admin\";\n        int num = 123;\n        int a;\n        System.out.println(\"\\t\\t欢迎使用我行我素购物管理系统！\");\n        System.out.println(\"\\t\\t1.登录系统\");\n        System.out.println(\"\\t\\t2.退出\");\n        System.out.println(\"***************************************\");\n        Scanner input = new Scanner(System.in);\n        for (; ; ) {\n            System.out.println(\"请选择，输入数字：\");\n            if (input.hasNextInt()) {\n                a = input.nextInt();\n                if (a == 1) {\n                    for (; ; ) {\n                        System.out.println(\"请输入账号：\");\n                        String name1 = input.next();\n                        System.out.println(\"请输入密码：\");\n                        int num1 = input.nextInt();\n                        if (name1.equals(name) && num1 == num) {\n                            break;\n                        } else {\n                            System.out.println(\"用户名密码错误，请重新输入!\");\n                        }\n                    }\n                    break;\n                } else if (a == 2) {\n                    System.out.println(\"欢迎下次光临！\");\n                    break;\n                } else {\n                    System.out.println(\"输入错误，请重新输入！\");\n                }\n            } else {\n                System.out.println(\"输入错误，请重新输入！\");\n                continue;\n            }\n        }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "# 声明变量的作用域不一样。\r\n# 在for循环里面声明则变量只能在for循环里有效\r\n# 在for循环外面声明则在对应函数的作用域内有效", "Konwledge_Point": "for循环", "Question": ["javascript的for循环变量的初始化问题", ["为什么声明的变量位置不一样得出的结果也不一样？在for循环外面和在for里面声明变量i", "\n和j并初始化赋值0，结果不一样。", "\n\n", " <html>\n<head>\n    <meta charset=\"utf-8\"/>\n    <title></title>\n    <style type=\"text/css\">\n    *{\n        padding:0;\n        margin:0;\n        font-size: 14px;\n        list-style: none;\n    }\n    .wrap{\n        width:200px;\n        margin: 10px auto;\n        border: 1px solid #ccc;\n\n    }\n    .current{\n        background-color: #fff;\n    }\n    .tit{\n        color::#fff;        \n        height:20px;\n        line-height: 20px;\n        margin: 0 auto; \n        background-color: #888;\n    }\n    .tit ul li{\n        width:25%;\n        float:left;\n        height:20px;\n    }\n    .a{\n        padding-left: 10px;\n        display: none;\n    }\n    .active{\n        padding-left: 10px;\n        display: block;\n    }\n    </style>\n    <script type=\"text/javascript\">\n        window.onload=function(){\n            var tit=document.getElementById('tit');\n            var titLis=tit.getElementsByTagName('li');\n            var conUls=document.getElementById('con').getElementsByTagName('ul');       \n            // var i =0;\n            // var j=0;\n            var index;\n            for(var i=0;i<titLis.length;i++){\n                titLis[i].index=i;\n                titLis[i].onmouseover=function(){\n                    for(var j=0;j<titLis.length;j++){\n                        titLis[j].className=''; \n                        conUls[j].className='a';    \n\n                    }                   \n                    this.className=\"current\";                   \n                    conUls[this.index].className='active';\n                }\n\n            }\n        }\n\n\n    </script>\n</head>\n<body>\n    <div class=\"wrap\">\n\n        <div class=\"tit\" id=\"tit\">\n            <ul>\n                <li class=\"current\">遇见</li>\n                <li>天黑黑</li>\n                <li>逆光</li>\n                <li>绿光</li>\n            </ul>\n        </div>\n\n        <div id=\"con\">\n            <ul class=\"active\">\n            <li>遇见</li>\n            <li>天黑黑</li>\n            <li>逆光</li>\n            <li>绿光</li>\n            </ul>\n            <ul class=\"a\">\n            <li>天黑黑</li>\n            <li>遇见</li>\n            <li>逆光</li>\n            <li>绿光</li>\n            </ul>\n            <ul class=\"a\">\n            <li>逆光</li>\n            <li>天黑黑</li>\n            <li>遇见</li>\n            <li>绿光</li>\n            </ul>\n            <ul class=\"a\">\n            <li>绿光</li>\n            <li>天黑黑</li>\n            <li>逆光</li>\n            <li>遇见</li>\n            </ul>\n        </div>\n    </div>\n</body>\n</html>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;%寻找特殊四位数&amp;#xff1a;abcd,满足&amp;#xff1a;&amp;#xff08;ab&amp;#43;cd&amp;#xff09;^2&amp;#61;abcd;&lt;br /&gt;K&amp;#61;zeros(1,3);%预置空间&lt;br /&gt;k&amp;#61;1;&lt;br /&gt;for abcd&amp;#61;1000:9999&lt;br /&gt;    ab&amp;#61;floor(abcd/100);&lt;br /&gt;    cd&amp;#61;mod(abcd,100);&lt;br /&gt;    if((ab&amp;#43;cd)^2&amp;#61;&amp;#61;abcd)&lt;br /&gt;        K(k)&amp;#61;abcd;&lt;br /&gt;        k&amp;#61;k&amp;#43;1;&lt;br /&gt;    end&lt;br /&gt;end&lt;br /&gt;K&lt;/p&gt;\n&lt;p&gt;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["MATLAB中用for循环语句找一类特殊四位数", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;难道不允许在for里面定义int i&amp;#xff1f;&amp;#xff1f;把int i放到for循环外面呢&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["错误：只允许在 C99 模式下使用‘for’循环初始化声明", ["问题", "\n", "在Linux python=3.7版本下，运行sh build.sh时出现问题", "\n", "运行结果及报错内容", "\n", "running build_ext", "skipping 'nms/cpu_nms.c' Cython extension (up-to-date)", "running build_ext", "skipping 'lib/rasterize.cpp' Cython extension (up-to-date)", "render.c: 在函数‘_render’中:", "render.c:43:5: 错误：只允许在 C99 模式下使用‘for’循环初始化声明", "     for (int i = 0; i < ntri; i++)", "     ^", "render.c:43:5: 附注：使用 -std=c99 或 -std=gnu99 来编译您的代码", "render.c:75:14: 错误：‘i’重定义", "     for (int i = 0; i < nver; ++i)", "              ^", "render.c:43:14: 附注：‘i’的上一个定义在此", "     for (int i = 0; i < ntri; i++)", "              ^", "render.c:75:5: 错误：只允许在 C99 模式下使用‘for’循环初始化声明", "     for (int i = 0; i < nver; ++i)", "     ^", "render.c:106:14: 错误：‘i’重定义", "     for (int i = 0; i < nver; ++i)", "              ^", "render.c:75:14: 附注：‘i’的上一个定义在此", "     for (int i = 0; i < nver; ++i)", "              ^", "render.c:106:5: 错误：只允许在 C99 模式下使用‘for’循环初始化声明", "     for (int i = 0; i < nver; ++i)", "     ^", "render.c:144:14: 错误：‘i’重定义", "     for (int i = 0; i < ntri; ++i)", "              ^", "render.c:106:14: 附注：‘i’的上一个定义在此", "     for (int i = 0; i < nver; ++i)", "              ^", "render.c:144:5: 错误：只允许在 C99 模式下使用‘for’循环初始化声明", "     for (int i = 0; i < ntri; ++i)", "\n", "我的解答思路和尝试过的方法", "\n", "试过网上的那种 添加-std=gnu99 的参数（失败）"]], "Tag": "程序设计"}
{"Answer": "for in语句与通配符*合用,批量处理文件\r\n    批量改文件名\r\n\r\n[root@vm testtip]# ls\r\naaa.txt  ccc.txt  eee.txt  ggg.txt  hhh.txt  jjj.txt  lll.txt  nnn.txt\r\nbbb.txt  ddd.txt  fff.txt  go.sh    iii.txt  kkk.txt  mmm.txt  ooo.txt\r\n \r\n[root@vm testtip]# cat go.sh\r\nfor i in *.txt                 *.txt相当于一个字符串数组，依次循环赋值给i\r\ndo\r\nmv \"$i\" \"$i.bak\"       \r\ndone\r\n \r\n=================\r\nfor i in * 依次循环本目录下的所有文件", "Konwledge_Point": "for循环", "Question": ["linux  下for循环  ", ["for i in *", "\ndo", "\n    if [ -f $i ]    then", "\n        echo \"$i is a file\"", "\n    else", "\n        echo \"$i is a directory\"", "\n    fi", "\ndone  ", "\n\n", "其中  for i in *   表示什么意思呀？ 各位大虾，谁能跟我说说吗？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;10和11行互换位置&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for语句循环问题，for循环的逻辑", ["\n\n", "为什么这里输出是000000000，而不是0123456789"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def maxnum(lst):\n    &lt;span class=\"hljs-built_in\"&gt;maxn&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(lst):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;maxn&lt;/span&gt; &amp;lt; lst[i]:\n            &lt;span class=\"hljs-built_in\"&gt;maxn&lt;/span&gt; &amp;#61; lst[i]\n        i&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;maxn&lt;/span&gt;\ndef minnum(lst):\n    minn &amp;#61; lst[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n    i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(lst):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; minn &amp;gt; lst[i]:\n            minn&amp;#61; lst[i]\n        i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; minn\na &amp;#61; [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;]\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(maxnum(a) - minnum(a))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python中for循环怎么改成while循环？", ["以下代码怎么改成while循环？", "\n", "def maxnum(lst):", "    maxn = 0", "    for i in lst:", "        if maxn < i:", "            maxn = i", "    return maxn", "def minnum(lst):", "    minn = lst[0]", "    for i in lst:", "        if minn > i:", "            minn= i", "    return minn", "a = [3,4,6,7]", "print(maxnum(a) - minnum(a))"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;for {\n    command := GetCommandFromUser()\n    if command == ExitCommand {\n        break\n    }\n\n    ProcessCommand(command)\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在[for]循环中使用返回值", ["\n\n", "I have an experience with C#, where I can work with commands from user like this:", "\n\n", "string command;\nwhile ( (command = GetCommandFromUser()) != EXIT_COMMAND )\n    ProcessCommand(command);\n", "\n\n", "This simple code allows me get command from user (from Console or something like this) and process it.", "\n\n", "But in ", "Go", " I have only this code:", "\n\n", "var command string\nfor command = GetCommandFromUser(); command != ExitCommand; command = GetCommandFromUser() {\n    ProcessCommand(command)\n}\n", "\n\n", "Can I do it simply?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不推荐v-for与v-if同时使用&amp;#xff0c;因为v-for的优先级较高&amp;#xff0c;会先讲所有的dom渲染才会根据v-if去判断销毁&amp;#xff0c;影响性能。想要达成你说所的效果&amp;#xff0c;其中一个方法是可以对原始数据进行处理&amp;#xff0c;将你最终需要渲染的数据先过滤出来&amp;#xff0c;然后再赋值给v-for的数据源或变量。做法如下&amp;#xff0c;可以在你最开始拿到原始数据的地方&amp;#xff0c;对数据根据条件进行过滤&amp;#xff0c;然后把新的数据赋值给v-for的数据源即可。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue dom有 v-for   还有 v-if\n有没办法, v-if 某条件时,终止 v-for,不再循环下去了", ["vue dom 中的 v-for   还有 v-if", "有没办法, v-if 某条件时,终止 v-for,不再循环下去了  "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第15行的i 你使用前没有声明啊&lt;br /&gt;int i &amp;#61;judge(&amp;amp;L,temp);&lt;br /&gt;检查一下你的judege函数中L-&amp;gt;length的值是多少&amp;#xff0c;可以把 L-&amp;gt;data[i].num打印出来看看&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言 返回for循环里面的i值给函数", ["\n", "int", " ", "judge", " ", "(SeqList*L,", "char", " num_find[])", "{\n    ", "int", " i;\n    ", "for", "(i=", "0", ";i<=L->length;i++)                            ", "//从第一个元素开始比较学号直到", "\n        ", "if", "(", "strcmp", "(L->data[i].num,num_find)==", "0", "){        ", "//学号一样", "\n            ", "printf", "(", "\"%d\"", ",i);\n            ", "break", ";\n        }\n        ", "return", " i;\n}  \n", "int", " ", "main", "()", "\n", "{\n    ", "printf", "(", "\"请输入插入位置：\"", ");\n    ", "scanf", "(", "\"%s\"", ",temp);\n    i=", "judge", "(&L,temp);\n    res=", "insertSeqList", "(&L,i);\n    ", "if", "(res==", "1", ") ", "displayList", "(&L);\n    ", "break", ";\n}\n", "\n", "我想把judge函数里面的for循环结束时的i值返回给函数，但是i的值一直返回的是0"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 0; $i &amp;lt; 50; $i++) {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 0; $i === 50; $i++) {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In a for loop, the second part is NOT the ending condition, but the continuation condition. In your case it's checking if $i is equals to 50, and because it is not, it will never go in the loop.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["PHP：For循环不会执行", ["\n\n", "I am at a complete loss. I've searched this site extensively and others as to why my for loop, among many other working loops, will not execute, and tried many suggestions. I have checked that it is in fact not executing and not failing to meet a condition for its execution. This is the loop:", "\n\n", " if (count($bunnyList)>100){\n        echo \"Too many bunnies! Initiating mass cull.</br>\";\n        for ($i=0; $i===50; $i++){\n            echo 'something';\n            unset ($bunnyList[rand(0,(count($bunnyList)))]);\n            array_values($bunnyList);\n         }\n        echo 'Number of bunnies: '.(count($bunnyList));\n", "\n\n", "The if condition executes; the first echo statement executes, and then the echo statement following the loop also executes. If the loop had been executed, then I should get a number of \"something\"s printed to the page, and yet I never have, even after trying tons of suggestions for other people's failed for loops. After staring at this particular piece of code for hours I'm reasonably sure I haven't messed up a piece of syntax. Please help me, I've already pulled too many chunks of my hair ou\n:(", "\n\n", "The entire code is over a hundred lines long and I didn't think it prudent to post the whole thing. In addition, all the other for loops within the program work just fine, while endless variations of this one do not.", "\n\n", "I apologize if this is a redundant question or if it has been asked before. Other answers to questions similar to mine were not able to fix the problem. Please help me D:", "\n\n", "TL;DR Why does only this for loop not execute within my program containing many functioning loops? The echo statements within the if condition do execute.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since the &lt;code&gt;for&lt;/code&gt; loop runs forever, your code runs forever. Receiving from &lt;code&gt;ch&lt;/code&gt; after the &lt;code&gt;for&lt;/code&gt; loop is never reached.&lt;/p&gt;\n\n&lt;p&gt;If you want your code to exit sometime, you have to end the &lt;code&gt;for&lt;/code&gt; loop sometime, e.g. make it run only a certain number of iterations:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i := 0; i &amp;lt; 5; i++ {\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So if you only run 5 iterations (like in my example), after the &lt;code&gt;for&lt;/code&gt; loop receiving from &lt;code&gt;ch&lt;/code&gt; will be executed which may block (because &lt;code&gt;ch&lt;/code&gt; is unbuffered) if other goroutines have not yet run, and at least one of the started goroutines will be executed which sends a value on the channel which may trigger the main goroutine to continue (because its blocking operating is no longer blocking).&lt;/p&gt;\n\n&lt;p&gt;Also note that the &lt;a href=\"http://golang.org/ref/mem\" rel=\"nofollow\"&gt;&lt;strong&gt;Go Memory Model&lt;/strong&gt;&lt;/a&gt; only guarantees that certain events happen before other events, you have no guarantee how 2 concurrent goroutines are executed. You have no guarantee that the goroutines started in the &lt;code&gt;for&lt;/code&gt; loop will start to execute before the main goroutine gets blocked at receiving from &lt;code&gt;ch&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Usually when a goroutine gets blocked (e.g. blocking channel receive operation), the runtime may schedule another goroutine to run.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["Goroutine和for循环", ["\n\n", "All I want to do is to send one value to the channel and return from the ", "main()", " function and exit the program right after I receive one value from the channel ", "ch", ".", "\n\n", "But this keeps running forever:", "\n\n", "ch := make(chan int)\n\nfor {\n    go func() {\n        ch <- 1\n    }()\n}\n\n<-ch\n", "\n\n", "How do I return with this ", "for", " loop after I receive one value from the channel?", "\n\n", "And why does this run forever?", "\n\n", "Go playground link is here", "\n\n", "http://play.golang.org/p/EvmT6Pw96Y", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int n,k;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    float t,s&amp;#61;1.0;//用于累加记录最终值,t用于计算n的阶乘&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for(int i&amp;#61;2;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        t&amp;#61;1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        for(int j&amp;#61;2;j&amp;lt;&amp;#61;2&lt;/span&gt;&lt;em&gt;n-1;j&amp;#43;&amp;#43;)//计算n的阶乘&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;           t&amp;#61;t&lt;/span&gt;&lt;/em&gt;j;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(i%2) k&amp;#61;1;//k&amp;#61;(-1)^(n&amp;#43;1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        else k&amp;#61;-1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        t&amp;#61;t*k;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        s&amp;#61;s&amp;#43;1.0/t;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%f\\n&amp;#34;,s);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["求解c语言习题，用for循环该怎么弄", ["编写程序，求数列1,-3!,5!,-7!,...,(-1)^n-1(2n-1)!前n项的和。n的值由键盘输入。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have an incorrect understanding of sleep. Sleep delays the php script, which delays the\nresponse from the server, but the resulting webpage that you serve will be exactly the same\nwith or without sleep. It will just take longer to load. You can not control this from php\nyou have to do it on the client somehow. Look at &lt;a href=\"https://stackoverflow.com/questions/11973673/have-audio-tag-play-after-a-delay\"&gt;this question&lt;/a&gt; for example.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何在PHP中的for循环中使睡眠函数正确响应", ["\n\n", "I am writing a script that gets an eight digit number then reads it out loud. I want a delay of two seconds between the numbers as they are being read out. The problem is that even after setting the delay with sleep(), all my numbers are read out at once which leads to a summon-like audio that is getting me closer to being the antichrist with every debug. Here is my code. How do i get my loop to execute so that the numbers are read as e.g 2 .... 1 .... 3 .... 4 .... (where .... = 2 seconds.)", "\n\n", "for($counter=0; $counter<count($dbId); $counter++)\n{\n    $fileName = array_search($dbId[$counter], $letterArray);\n    echo \"<audio src='../resources/audio/mp3/'.$fileName.'.mp3' autoplay></audio>\";\n    echo time() . \"<br />\";\n    sleep(2);\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;你说得对&amp;#xff0c;n在内循环中&amp;#xff0c;是不会等于4的。&lt;/strong&gt;因为当n等于4的时候&amp;#xff0c;j也是4&amp;#xff0c;不符合j&amp;lt;&amp;#61;3的条件&amp;#xff0c;因此内循环到此会结束&amp;#xff0c;回到主循环。到了下一次&amp;#xff0c;进入内循环时&amp;#xff0c;j和n会先被赋予0值。&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;但是&lt;/strong&gt;内循环的if(n%4&amp;#61;&amp;#61;0)不只在n为4的时候成立&amp;#xff0c;n的初始值0也满足了这个if语句的条件&amp;#xff0c;所以会在每次第一次进入内循环时运行if语句。&lt;/p&gt;\n&lt;p&gt;另外提两点建议。&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    1) 兄弟你的格式不是很规范&amp;#xff0c;除你以外的人阅读起来不是很方便。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    2) 兄弟你的问题没描述清楚。如果这样表达可能更加清晰&amp;#xff1a;&lt;/span&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;这个程序运行起来得到的结果是aaaaaa。但是我觉得某个地方不应该是这样&amp;#xff0c;而应该是gggggg。请问为什么是aaaaaa而不是gggggg呢&amp;#xff1f;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;因为&amp;#xff0c;一种很有可能的情况是&amp;#xff0c;有些人看不懂你的代码&amp;#xff08;或是看起来太费劲&amp;#xff09;&amp;#xff0c;或是没看懂你的问题&amp;#xff0c;所以  即使想帮忙也无能为力。&lt;/p&gt;\n&lt;p&gt;希望能够帮到你。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言for循环和计数器问题", ["我的疑惑是if的那句话，循环结束说明此时j应该为4并且n也为4，跳出内循环，当再进入内循环是n又被赋值给0，所以我认为n不可能在循环体当中等于4，也就是不会换行，我可能说的不好，我其实是这个问题兄弟"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;赋值可以分为静态赋值和动态赋值&amp;#xff0c;下面我分别为这两种方式举一个例子&amp;#xff0c;程序代码都可以直接运行&amp;#xff0c;你可以直接复制代码到编程工具中运行&amp;#xff0c;如果对你有帮助&amp;#xff0c;请采纳。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;public class Test {\n\n    public static void main(String[] args) {\n        //静态赋值\n        System.out.println(&amp;#34;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;静态赋值输出结果&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#34;);\n        int[][]arr&amp;#61; {&lt;!-- --&gt;{1,2},{3,4},{5,6,7}};\n        for (int i &amp;#61; 0; i &amp;lt; arr.length; i&amp;#43;&amp;#43;) {\n            for (int j &amp;#61; 0; j &amp;lt; arr[i].length; j&amp;#43;&amp;#43;) {\n                System.out.print(arr[i][j] &amp;#43; &amp;#34; &amp;#34;);\n            }\n            System.out.println();\n        }\n\n        System.out.println(&amp;#34;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;动态赋值输出结果&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#34;);\n        //创建多维数组&amp;#xff0c;动态赋值\n        int [][] intArr&amp;#61;new int[3][3];\n        for (int i &amp;#61; 0; i &amp;lt; intArr.length; i&amp;#43;&amp;#43;) {\n            for (int j &amp;#61; 0; j &amp;lt; intArr[i].length; j&amp;#43;&amp;#43;) {\n                intArr[i][j]&amp;#61;i&amp;#43;j;\n            }\n        }\n        for (int i &amp;#61; 0; i &amp;lt; intArr.length; i&amp;#43;&amp;#43;) {\n            for (int j &amp;#61; 0; j &amp;lt; intArr[i].length; j&amp;#43;&amp;#43;) {\n                System.out.print(intArr[i][j] &amp;#43; &amp;#34; &amp;#34;);\n            }\n            System.out.println();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br /&gt;\n&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;静态赋值输出结果&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;\n1 2 &lt;br /&gt;\n3 4 &lt;br /&gt;\n5 6 7 &lt;br /&gt;\n&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;动态赋值输出结果&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;\n0 1 2 &lt;br /&gt;\n1 2 3 &lt;br /&gt;\n2 3 4 &lt;/p&gt;\n\n&lt;p&gt;Process finished with exit code 0&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["JAVA比较大的二维数组怎么赋值啊（初学者），用for循环赋值的话流程是啥样的啊", ["JAVA比较大的二维数组怎么赋值啊（初学者），用for循环赋值的话流程是啥样的啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;When &lt;code&gt;c.NextSibling&lt;/code&gt; is not nil, it seems that the loop is exiting as the loop value is the same as the previous iteration&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Not sure what you meant by that, but yes, you're misinterpreting &lt;em&gt;something&lt;/em&gt;. But &lt;code&gt;for&lt;/code&gt; loop is not to blame. It most certainly &lt;a href=\"https://play.golang.org/p/4ghE8cvOp_h\" rel=\"nofollow noreferrer\"&gt;does not exit&lt;/a&gt; while its continue condition is still true.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Node struct {\n    NodeId                  int\n    FirstChild, NextSibling *Node\n}\n\nfunc visit(n *Node) {\n    for c := n.FirstChild; c != nil; c = c.NextSibling {\n        fmt.Printf(\"seeing node %d\n\", c.NodeId)\n        visit(c)\n    }\n}\n\nfunc main() {\n    c3 := &amp;amp;Node{NodeId: 4}\n    c2 := &amp;amp;Node{NodeId: 3, NextSibling: c3}\n    c1 := &amp;amp;Node{NodeId: 2, NextSibling: c2}\n    root := &amp;amp;Node{NodeId: 1, FirstChild: c1}\n\n    visit(root)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;seeing node 2\nseeing node 3\nseeing node 4\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["Go for循环的post部分中的分配如何使该循环退出？", ["\n\n", "I'm working through \"The Go Programming Language\" book and have come across what is an unusual for loop syntax in chapter 5. I've cut down the example below, but the whole program is ", "on the book's GitHub page", ".", "\n\n", "type Node struct {\n    int                     NodeType\n    FirstChild, NextSibling *Node\n}\n\nfunc visit(n *Node) {\n  for c:= n.FirstChild; c != nil; c = c.NextSibling {\n    visit(c)\n  }\n}\n", "\n\n", "The C parser in my head tells me that ", "c.NextSibling", " will always either point to a ", "Node", " or be ", "nil", ". In that case the loop should either then always break or continue forever.", "\n\n", "When ", "c.NextSibling", " is not ", "nil", ", it seems that the loop is exiting as the loop value is the same as the previous iteration, but I couldn't find anything in the ", "Go Language Specification", " to back that up.", "\n\n", "I've compiled that program and confirm that it works as per the book.", "\n\n", "Am I missing something fundamental or is something else going on here?", "\n\n", "\n", "Full example, with instrumented code (thanks to Sergio):", "\n\n", "package main\n\nimport (\n    \"fmt\"\n)\n\ntype Node struct {\n    NodeId                  int\n    FirstChild, NextSibling *Node\n}\n\nfunc visit(n *Node) {\n    fmt.Printf(\"Entering node %d\n\", n.NodeId)\n    for c := n.FirstChild; c != nil; c = nextSib(c) {\n        fmt.Printf(\"Will now visit node %d\n\", c.NodeId)\n        visit(c)\n    }\n}\n\nfunc nextSib(n *Node) *Node {\n    next := n.NextSibling\n    fmt.Printf(\"In nextSib for %d %t\n\", n.NodeId, next != nil)\n    return next\n}\n\nfunc main() {\n    c4 := &Node{NodeId: 5}\n    c3 := &Node{NodeId: 4}\n    c2 := &Node{NodeId: 3, NextSibling: c3}\n    c1 := &Node{NodeId: 2, FirstChild: c4, NextSibling: c2}\n    root := &Node{NodeId: 1, FirstChild: c1}\n\n    visit(root)\n}\n", "\n\n", "Output:", "\n\n", "Entering node 1\nWill now visit node 2\nEntering node 2\nWill now visit node 5\nEntering node 5\nIn nextSib for 5 false\nIn nextSib for 2 true\nWill now visit node 3\nEntering node 3\nIn nextSib for 3 true\nWill now visit node 4\nEntering node 4\nIn nextSib for 4 false\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "你在for循环的时候并没有每次对data对象都初始化，即data = {};导致for循环添加的都是同一个对象的引用地址。对象是引用类型，for循环结束后，数组中\r\n的所有data对象指向的都是i = 23那一轮的赋值对象。改正如下：\r\nvar data;\r\nfor(var i =0; i&lt;24;i++){\r\n\t\tdata = {};\r\n    if(i&lt;10){\r\n        data.name = \"0\" + i + \"时\";\r\n    } else{\r\n        data.name = i + \"时\";\r\n    }\r\n    data.property = \"h\" + i;\r\n    data.align = \"right\";\r\n    data.width =80;\r\n    date.push(data);\r\n}", "Konwledge_Point": "for循环", "Question": ["push的内容为for循环最后的结果", ["var date = [{\n    \"align\": \"left\",\n    \"width\": 170,\n    \"fixed\": true\n}, {\n    \"align\": \"left\",\n    \"width\": 160,\n    \"fixed\": true\n}, {\n    \"align\": \"right\",\n    \"width\": 110,\n    \"fixed\": true\n}, {\n    \"align\": \"right\",\n    \"width\": 110,\n    \"fixed\": true\n},{\n    \"name\": \"09时\",\n    \"property\": \"h9\",\n    \"align\": \"right\",\n    \"width\": 80,\n    \"fixed\": false\n}\n           ]\nvar data = {};\nfor(var i =0; i<24;i++){\n    if(i<10){\n        data.name = \"0\" + i + \"时\";\n    } else{\n        data.name = i + \"时\";\n    }\n    data.property = \"h\" + i;\n    data.align = \"right\";\n    data.width =80;\n    date.push(data);\n}\nconsole.log(date)\n", "\n\n", "运行结果：", "\n\n", "理想状态应该是打印24个小时。但是添加的都是循环的最后结果，是我有哪里搞错了吗？"]], "Tag": "程序设计"}
{"Answer": "绑定结束时，i的值就是2，跳出循环，这时候i的值就是2，而不是你触发这个事件时，才绑定的，才执行这个函数，而是文档流加载完以后，就一直是2，所以你触发输出i就一直是2，你把两个标签的内容换一下，就能看到，i还是2，但触发标签是不同的", "Konwledge_Point": "for循环", "Question": ["javascript函数，为什么for循环遍历dom节点，监听被点击对象，输出都是一样的呢？", [" 我想通过for循环内嵌一个事件监听，捕获我点击的是哪个个区域，执行对应函数。可是为什么点击第一个或第二个区域，输出都是2呢？\n不是应该对应 0 和 1 吗\n\n\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>为什么</title>\n    <style type=\"text/css\">\n        .container{\n            width: 100px;\n            height: 100px;\n            border: 1px solid black;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">container1</div>\n    <div class=\"container\">container2</div>\n\n    <script type=\"text/javascript\">\n        var container = document.getElementsByClassName(\"container\");\n        console.log(container.length);          //2\n        for (var i = 0; i < container.length; i++) {\n            container[i].onmouseup = function(){\n                console.log(i)                  //2 (不明白为什么，不是应该0或1吗)\n            }\n        }\n    </script>\n</body>\n</html>\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;factorial&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n , &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,f &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(n)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ; &amp;#43;&amp;#43;i)\n    {\n        f*&amp;#61; i;\n    }\n    f &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/f;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; f;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["求解答（用for循环）C语言", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can do line break using css implementation ...\nlike:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.rcorners1 a {\n    display: block;\n    margin-bottom: 10px;//for show extra margin between each line...  \n\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit: Use margin css attribute for extra margin... &lt;/p&gt;\n\n&lt;p&gt;please try implementing this...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["PHP for循环中的换行符", ["\n\n", "There have been a bunch of questions like this already, but none of the answers seem to help me. I would like to have a line-break after each output from a loop. I am using double-quoted strings, ", "like I read here", ", as well as using HTML (because I want the browser to recognize the line-breaks too) ", "as I read here", ". ", "\n\n", "It does create a line-break, however only ", "below", " the complete output.", "\n\n", "I cannot manage to create a line-break ", "between", " the outputs of the loop. Basically I get a block of text and then a linebreak.", "\n\n", "Here is the loop I am using:", "\n\n", "<?php\ninclude_once('simple_html_dom.php');\n$target_url = \"http://www.buzzfeed.com/trending?country=en-us\";\n$html = new simple_html_dom();\n\n$html->load_file($target_url);\n\n$posts = $html->find('ul[class=list--numbered trending-posts trending-posts-    now]');\n$limit = 10;\n$limit = count($posts) < $limit ? count($posts) : $limit;\nfor($i=0; $i < $limit; $i++){\n  $post = $posts[$i];\n  $post->find('div[class=trending-post-text]',0)->outertext = \"\";\n  echo strip_tags($post, '<p><a>') . \"<br/>\n\";\n}\n", "\n\n", "I've also tried ", "\"\n\"", " and a bunch of variations, as well as the ", "nl2br() function", ". I believe the PHP_EOL command is meant only for the command line, from what I've researched.", "\n\n", "I'm an absolute beginner with PHP, so I am probably missing something simple, but I can't figure it out.", "\n\n", "EDIT:\nHere is what it prints:\n", "http://globalsocialnews.com/crawler/test8.php", "\n\n", "I also included the complete code in case that helps.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不可以&amp;#xff0c;无法同步线程&amp;#xff0c;所以你的vector会是杂乱无章的&amp;#xff0c;另外线程对于vector不安全的&amp;#xff0c;会造成异常。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C++两个for循环中，第二个for循环改成多线程？", ["int", " size=", "10000", ";\nvector<", "int", ">a;\n", "for", "(", "int", "=", "0", ";i<size;i++)\n    ", "for", "(", "int", " j=i+", "1", ";j<size;j++)\n         a.", "push_back", "(i+j);\n", "\n", "可以开size个多线程吗", "\n", "for", "(", "int", " i=", "0", ";i<size;i++)\n   {\n     creat", "Thead_1()", "\n    .\n   .\n    . \n    creat", "Thead_size()", "\n }\ntheadfun1(", "int", " i,", "int", " size)\n{\n    ", "for", "(", "int", " k=i+", "1", ";k<size;k++)\n           a.push", "_back(", "i", "+", "k", ")", ";\n    break;\n}\n\n不需要按顺序push_back进a，只要存进去就行。\n......\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一次for()里start &amp;lt;&amp;#61; &amp;#39;U&amp;#39;&amp;#xff0c;二次循环次数太多了&amp;#xff0c;end&amp;#43;&amp;#43; 的值超过了ascii 的上限&amp;#xff0c;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; start;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; lend;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; number,end;\n    lend &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n    end &amp;#61; lend;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; ( start&amp;#61;lend; start &amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;; start&amp;#43;&amp;#43;)\n    { \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (number &amp;#61; lend; number&amp;lt;&amp;#61;start; number&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c(%d)&amp;#34;&lt;/span&gt;, end,end);\n            end&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n \n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;/*\nA(65)\nB(66)C(67)\nD(68)E(69)F(70)\nG(71)H(72)I(73)J(74)\nK(75)L(76)M(77)N(78)O(79)\nP(80)Q(81)R(82)S(83)T(84)U(85)\n*/&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["采用vxcode编写c程序for循环，出现字符串乱码", ["\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "char", " start;\n    ", "char", " lend;\n    ", "char", " number,end;\n    lend = ", "'A'", ";\n    end = lend;\n    ", "for", " ( start=lend; start <=", "'U'", "; start++)\n    { \n        ", "for", " (number = lend; number<=start; number++)\n        {\n            ", "printf", "(", "\"%c\"", ", end);\n            end++;\n        }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    \n\n\n\n    ", "getchar", "();\n    ", "return", " ", "0", ";\n}\n", "\n", "这个代码我自己的理解来说，应该是出现", "A", "BC", "DEF", ".", ".", "PQRSTU", "这个情况，但是在编译过程U的后面出现了后续字符，并且在断点查询中发现end=40 '('，不知道哪里出现问题，或者是我理解不对，请解惑。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            max &amp;#61; num;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num&amp;gt;max){\n            max &amp;#61; num;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;max &amp;#61; %d&amp;#34;&lt;/span&gt;,max);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;望采纳。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["输入10个整数，输出最大数，请用for循环完成", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;二中把第一个printf当成循环语句了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言鸡兔同笼 for循环结构", ["问题遇到的现象和发生背景", "\n", "为什么算法一正确，二却不对？", " #include<stdio.h>", "#include<math.h>", "int main()", "{", "    int a,b;", "    for(a=1,b=97;2", "a+4", "b!=386;)", "    {", "        a++;b--;", "    }", "    printf(\"chicken:%d\\n\",a);", "    printf(\"rabbit:%d\\n\",b);", "    return 0;", "}", "\n", "\n", "#include<stdio.h>", "int main()", "{", "    int a,b;", "    for(a=1,b=97;2", "a+4", "b!=386;a++,b--)", "    printf(\"chicken:%d\\n\",a);", "    printf(\"rabbit:%d\\n\",b);", "    return 0;", "}", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Most likely is the fact that you are overwriting the neededinfo variable&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func main() {\n    var neededinfo []string\n    for _, slice := range info_slices {\n        // Get information out of slices\n        if strings.Contains(slice, \"indicator \") {\n            response := string(ExeSH(\"echo '\" + slice + \"' | awk '{ print $4 }'\"))\n            neededinfo = append(neededinfo, response[1:len(response)-2]\n        }\n    }\n    fmt.Println(neededinfo) \n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环的异常行为", ["\n\n", "I sure hope this is something simple.  When I grab information from within an if statement that is inside of a for loop it is not carried to outside of the for loop.  I can print the information from within the if statement just fine and then lose it afterwards.  Am I missing something? Coming from Python I have never experienced this before.", "\n\n", "func main() {\n    var neededinfo string\n    for _, slice := range info_slices {\n        // Get information out of slices\n        if strings.Contains(slice, \"indicator \") {\n            neededinfo := string(ExeSH(\"echo '\" + slice + \"' | awk '{ print $4 }'\"))\n            neededinfo = neededinfo[1:len(neededinfo)-2]\n            fmt.Println(neededinfo) // Returns my information\n        }\n    }\n    fmt.Println(neededinfo) // Returns nothing\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i=0, $k=10; $i&amp;lt;=10 ; $i++, $k--) {\n    echo \"Var \" . $i . \" is \" . $k . \"&amp;lt;br&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The two variables &lt;code&gt;$i&lt;/code&gt; and &lt;code&gt;$k&lt;/code&gt; are initialized with &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;10&lt;/code&gt; respectively. At the end of each each loop &lt;code&gt;$i&lt;/code&gt; will be incremented by one (&lt;code&gt;$i++&lt;/code&gt;) and &lt;code&gt;$k&lt;/code&gt; decremented by one (&lt;code&gt;$k--&lt;/code&gt;). So &lt;code&gt;$i&lt;/code&gt; will have the values 0, 1, …, 10 and &lt;code&gt;$k&lt;/code&gt; the values 10, 9, …, 0.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["Php for循环有2个变量？", ["\n\n", "is it possible to do this? (here is my code)", "\n\n", "for ($i = 0 ; $i <= 10 ; $i++){\n  for ($j = 10 ; $j >= 0 ; $j--){\n     echo \"Var \" . $i . \" is \" . $k . \"<br>\";\n  }\n}\n", "\n\n", "I want something like this:", "\n\n", "var 0 is 10", "\n\n", "var 1 is 9", "\n\n", "var 2 is 8 ...", "\n\n", "But my code is wrong, it gives a huge list. Php guru, help me !!", "\n    "]], "Tag": "程序设计"}
{"Answer": "零呢？不用输出吗？\r\n对零单独处理\r\n其它的数 -1 再取模是最简单的，要不直接除以 10 也行\r\n\r\n因为直接取模 10 与 1-9 不是一个数值。", "Konwledge_Point": "for循环", "Question": ["for循环 输出结果求解", [" for i= 0 to 30\n1...................30\n\n我想要的结果是\n<div id=1>1-10</div>\n<div id=2>11-20</div>\n<div id=3>21-30</div>\nnext\n"]], "Tag": "程序设计"}
{"Answer": "已经解决\r\n服务器问题\r\nlighttpd中fastcgi的配置问题\r\n默认max-proce=1，我改成其他数就可以了", "Konwledge_Point": "for循环", "Question": ["php中for循环的堵塞问题", ["<?php", "\nfor($i=0;$i<=10;$i++)", "\n{", "\nprint \"value is now\".$i.\"", "\";", "\nob_flush(); ", "\nflush(); ", "\nsleep(1);", "\n}", "\n?>", "\n\n", "同时打开多个此页面，总是在循环完成后后续页面才能执行，阻塞了，是php环境哪里出错了吗。", "\n\n", "php5.5.3", "\nlighttpd", "\n嵌入式ARM板"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;两个从逻辑上是一样，没看出来有什么问题，除非你的变量没有定义和初始化&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["初学C语言,想问一下这个for循环改成while循环为什么不对?", ["\n", "for(i=10000;i>=0;i--)\n            for(j=1;j<=book[i];j++)\n                printf(\"%d\\n\",i);   \n\n\nfor(i=10000;i>=0;i--)\n        {    j=1;\n            while(j<=book[i])\n            {\n                j++;\n                printf(\"%d\\n\",i);\n            }    \n        }", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在for(;a!&amp;#61;0;)的后面有个隐藏的 ;   所以这个循环会一直执行后面的&amp;#xff1b;空语句&amp;#xff0c;导致死循环&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个for循环为什么是死循环？？", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "有没有提示你哪里错误？？？", "Konwledge_Point": "for循环", "Question": ["Java的for循环打印菱形", ["\n\n", "第一张图是我照着写的打印菱形代码，帮忙看看哪里有错？（第二张图是对的，我试过）"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Per the &lt;a href=\"http://golang.org/ref/spec#For_statements\" rel=\"nofollow\"&gt;documentation&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ForStmt = \"for\" [ Condition | ForClause | RangeClause ] Block .\nCondition = Expression .\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can either have a Condition, &lt;em&gt;or&lt;/em&gt; a ForClause, &lt;em&gt;or&lt;/em&gt; a RangeClause. You cannot combine them.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中使用多个表达式", ["\n\n", "It is possible to use multiple expression in go loop like:", "\n\n", "for _, err := range errs; err != nil  {\n\n    }\n", "\n\n", "Or I have to do like:", "\n\n", "for _, err := range errs {\n        if err != nil {\n         statement\n        }\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;301&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#范围200~300之间&lt;/span&gt;\n    flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;# 假设是素数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;): \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n%i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; flag:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(n,&lt;span class=\"hljs-string\"&gt;&amp;#34;是素数&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["Python中for循环求200-300之间的素数", ["\n", "为啥有重复啊 不懂 麻烦给看看怎么修改去掉重复的谢谢各位了！实在不会写"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次循环的打印语句执行完输出 &lt;code class=\"language-javascript\"&gt;10.0&lt;/code&gt;&lt;br /&gt;接着执行for循环的 &lt;code class=\"language-javascript\"&gt;i&amp;#43;&amp;#43;&lt;/code&gt;&amp;#xff0c;这时i已经是&lt;code class=\"language-javascript\"&gt;11.0&lt;/code&gt;了&lt;br /&gt;然后执行&lt;code class=\"language-javascript\"&gt;11&amp;#43;11*0.25&lt;/code&gt;&amp;#xff0c;结果自然是&lt;code class=\"language-javascript\"&gt;13.75&lt;/code&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环迷了double到底咋用啊", ["public static void main(String[] args){", "                int a=2006", "                for(double i=8;i<=20;i++){", "                    i=i+i*0.25", "                    a++", "                    System.out.println(i)", "                }", "                System.out.print(\"2006年培养学员8万人，每年增长25%，到\"+a+\"年培训学员人数将达到20万人。\");", "\n", "        }\n", "\n", "为啥输出是 10.0   13.75   18.4375   24.296875", "而不是10.0  12.5  15.5  19.375"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;设置一个标志量&amp;#xff0c;表明出现过大于10的情况&amp;#xff0c;当新情况是小于10时&amp;#xff0c;退出&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中判断次数够了，就停止？", ["当第一个if，运行3次及3次以上后，运行到 非第一个if 后，停止循环：", "如案例中，数据66，34，16 都满足第一个if，然后运行到5后，不是第一个if，停止循环，后面的不要了：", "代码怎么写呢？", "\n", "l", "=[", "1", ",", "2", ",", "5", ",", "2", ",", "66", ",", "34", ",", "16", ",", "5", ",", "23", ",", "54", "]\n\n\n", "for", " i in range(len(l)):\n    ", "if", " l[i] >", "10", ":\n        ", "print", "(i,l[i],", "\"A\"", ")\n    ", "if", " l[i] <", "10", ":\n        ", "print", "(i,l[i],", "\"B\"", ")\n\n", "0", " ", "1", " B\n", "1", " ", "2", " B\n", "2", " ", "5", " B\n", "3", " ", "2", " B\n", "4", " ", "66", " A\n", "5", " ", "34", " A\n", "6", " ", "16", " A\n", "7", " ", "5", " B\n", "8", " ", "23", " A\n", "9", " ", "54", " A\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for两个&amp;#xff1b;&amp;#xff1b;之间可以为空也可以为表达式&amp;#xff0c;你第一个为空&amp;#xff0c;第二个逗号表达式&lt;br /&gt;即&amp;#xff1a;&amp;#xff08; p , j &amp;lt; i),最终判断的是这个逗号表达式的值&amp;#xff0c;这个表达式的值等价为j &amp;lt; i,&lt;br /&gt;所以你的p不管是不是NULL都能进入&amp;#xff0c;你可以这样写 p!&amp;#61;NULL &amp;amp;&amp;amp; j&amp;lt;i&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于c语言for循环的问题", ["问题如图，按我的理解，循环条件中有p，那么空的p是无法进入循环体的，那这里为什么会报p为空的错误呢。", "求解惑", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 你最后两个for循环只是循环输出了一下数组中的值&amp;#xff0c;不会改变数组中的值&amp;#xff0c;其次最后一行System.out.println();只是起到一个换行的作用&amp;#xff0c;使得你最后的形式是一行一行的&amp;#xff0c;否则所有数据会全部在一行 &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java写杨辉三角时，为什么最后一行用for循环输出不改变之前的值呢？", ["java写杨辉三角时，为什么最后一行用for循环输出不改变之前的值呢？这个感觉不清楚，感谢大家解答", "\n", "代码如下", "\n", "/*\n* 使用二维数组打印一个 10 行杨辉三角.\n  1\n  1 1\n  1 2 1\n  1 3 3  1\n  1 4 6  4  1\n  1 5 10 10 5 1\n   ....\n开发提示\n1. 第一行有 1 个元素, 第 n 行有 n 个元素\n2. 每一行的第一个元素和最后一个元素都是 1\n3. 从第三行开始, 对于非第一个元素和最后一个元素的元素.\nyanghui", "[i]", "[j]", " = yanghui", "[i-1]", "[j-1]", " + yanghui", "[i-1]", "[j]", ";\n */\npublic class ArrayExer4 {\n    public static void main(String", "[]", " args) {\n        //声明一个二维数组，用来存储杨辉三角的数字，一共10行\n        int", "[]", "[]", " yangHui = new int", "[10]", "[]", ";\n\n        for (int i = 0; i < yangHui.length; i++) {\n            //先确定每一行的列数\n            yangHui", "[i]", " = new int", "[i+1]", ";\n\n            //每一行的第一个元素和最后一个元素都是 1\n            yangHui", "[i]", "[0]", " = 1;\n            yangHui", "[i]", "[i]", " = 1; //yangHui", "[i]", "[yangHui", "[i]", ".length-1]", " = 1;\n\n\n            //再确定每一行的每一列的值\n            for (int j = 1; j < yangHui", "[i]", ".length - 1; j++) {\n                yangHui", "[i]", "[j]", " = yangHui", "[i - 1]", "[j - 1]", " + yangHui", "[i - 1]", "[j]", ";\n            }\n\n        }\n\n        //输出\n        for (int i = 0; i < yangHui.length; i++) {\n            for (int j = 0; j < yangHui", "[i]", ".length; j++) {\n                System.out.print(yangHui", "[i]", "[j]", " + ", "\"\\t\"", ");\n            }\n            System.out.println();\n        }\n\n    }\n}\n\n", "\n", "运行结果为：", "\n", "1", "1    1", "1    2    1", "1    3    3    1", "1    4    6    4    1", "1    5    10    10    5    1", "1    6    15    20    15    6    1", "1    7    21    35    35    21    7    1", "1    8    28    56    70    56    28    8    1", "1    9    36    84    126    126    84    36    9    1    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最后一项应该是除以(n&amp;#43;1)呀&amp;#xff0c;你怎么乘以&lt;br /&gt;要么分母要用括号括起来&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环结构完成多项式计算", ["最左边的是题目要求，不知道是哪里错了，输出的结果不正确，求各位帮帮忙！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对 a 进行遍历&lt;br /&gt;每个元素的值翻倍&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个numpy里for循环的代码什么意思", ["为什么这样可以修改数组a", "\n", "\nimport numpy as np\n", "a", " = np", ".arange", "(", "0", ",", "60", ",", "5", ")\n", "a", " = ", "a", ".reshape", "(", "3", ",", "4", ") \nprint (", "\"原数组是:\"", ",a)\n", "for", " x ", "in", " np", ".nditer", "(", "a", ", op_flags=", "[", "'readwrite'", "]", "):\n    x", "[...]", "=", "2", "*x\nprint (", "'修改后的数组是：'", ",a)\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nclude &amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;math.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i, j, k;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;i j k\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 控制台打印出i j k 后换行\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; k&amp;#43;&amp;#43;)\n               &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d\\n&amp;#34;&lt;/span&gt;,i,j,k); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 控制台打印出i j k的值后换行\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-regexp\"&gt;/**\n     * 第一次循环&amp;#xff0c;执行第一个for i&amp;#61;0,第二个for j&amp;#61;0,第三个for k&amp;#61;0,执行printf,输出第一行0 0 0\n     * k&amp;#43;&amp;#43;后&amp;#xff0c;此时i&amp;#61;0,j&amp;#61;0,k&amp;#61;1&amp;#xff0c;然后第三个for做循环判断k&amp;lt;2;输出第二行 0 0 1\n     * 第三个for再次循环&amp;#xff0c;此时i&amp;#61;0,j&amp;#61;0,k&amp;#61;2&amp;#xff0c;判断k&amp;lt;2&amp;#xff0c;不成立&amp;#xff0c;则跳到第二个for做循环\n     * 此时i&amp;#61;0,j&amp;#61;1&amp;#xff0c;执行第三个for循环&amp;#xff0c;k&amp;#61;0,输出第三行 0 1 0 \n     * 继续执行第三个for循环&amp;#xff0c;i&amp;#61;0,j&amp;#61;1,k&amp;#61;1输出第四行 0 1 1 \n     * 继续执行第三个for循环&amp;#xff0c;i&amp;#61;0,j&amp;#61;1,k&amp;#61;2,k&amp;lt;2不成立&amp;#xff0c;\n     * 跳到第二个for循环&amp;#xff0c;j&amp;#61;2,j&amp;lt;2不成立 &amp;#xff0c;\n     * 跳到第一个for循环&amp;#xff0c;此时i&amp;#61;1,i&amp;lt;2成立&amp;#xff0c;执行第二个for循环&amp;#xff0c;j&amp;#61;0,执行第三个for循环\n     * k&amp;#61;0,输出第五行 1 0 0 ,\n     * 继续执行第三个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;0,k&amp;#61;1,k&amp;lt;2成立输出第六行 1 0 1\n     * 继续执行第三个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;0,k&amp;#61;2,k&amp;lt;2不成立&amp;#xff0c;\n     * 跳到第二个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;1,k&amp;#61;0,j&amp;lt;2成立\n     * 继续执行第三个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;1,k&amp;#61;0,k&amp;lt;2成立输出第七行 1 1 0 \n     * 继续执行第三个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;1,k&amp;#61;1,k&amp;lt;2成立输出第八行 1 1 1 \n     * 继续执行第三个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;1,k&amp;#61;2,k&amp;lt;2不成立\n     * 跳到第二个for循环&amp;#xff0c;此时i&amp;#61;1,j&amp;#61;2,j&amp;lt;2不成立\n     * 跳到第一个for循环&amp;#xff0c;此时i&amp;#61;2,i&amp;lt;2不成立\n     * 退出第一个for循环&amp;#xff0c;程序执行结束\n     * \n     * /&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["C语言 for循环没看懂怎么运行", ["请问这是怎么运行的?", "看不懂怎么得到这样的结果"]], "Tag": "程序设计"}
{"Answer": "我的理解，是否可以解释的通。![图片](https://img-ask.csdn.net/upload/201512/20/1450620131_492379.jpeg)", "Konwledge_Point": "for循环", "Question": ["JAVA for循环变量问题", ["为什么j++和++j的输出会天壤之别？求大神指教！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,x;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;lt;&amp;#61;x; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d的平方根是%.2f\\n&amp;#34;&lt;/span&gt;, i,&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(i));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/90425900443613.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["pta的题，for循环：输出1到x间所有数的平方根并按行输出", ["打到这里，也许前面也有错。。。不知道怎么用for，偶尔有点思路，又不知道怎么同时输出几个平方根，望指导，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个程序是先打开一个dat文件&amp;#xff0c;并在其中写入一个整型变量&amp;#xff0c;随后进入for循环。&lt;br /&gt;进入循环后&amp;#xff0c;将文件指针置于文件开头&amp;#xff08;fseek&amp;#xff09;&amp;#xff0c;然后读取之前写入的数据&amp;#xff0c;将其与对应数组相加&amp;#xff0c;并写入文件&amp;#xff0c;退出循环&amp;#xff08;注&amp;#xff1a;数据是添加在之前数据的前面&amp;#xff0c;所以实际读取出的数据会有变化&amp;#xff0c;比如数据原先是00010100&amp;#xff0c;加上01101110后就会成为0001010001101110&amp;#xff09;。&lt;br /&gt;最后置文件指针于开头&amp;#xff0c;读取写入信息&amp;#xff0c;关闭文件。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个for循环是怎么实现的", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;引入的包也拿出来 还有依赖&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么Element的集合增强for循环无法解析", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "    ", "@Test", "\n    ", "public", " ", "void", " ", "test1", "()", " ", "throws", " DocumentException {\n        ", "//1读取xml文件", "\n        ", "SAXReader", " ", "saxReader", " ", "=", " ", "new", " ", "SAXReader", "();\n        ", "Document", " ", "read", " ", "=", " saxReader.read(", "\"src/books.xml\"", ");\n        ", "//通过document对象获取根元素", "\n        ", "Element", " ", "rootElement", " ", "=", " read.getRootElement();\n        ", "//通过根元素获取book对象", "\n\n        ", "//4遍历，处理每个book标签转换为book类", "\n        ", "//element和elements方法都是通过标签名查找子元素", "\n        ", "List", " ", "books", " ", "=", " rootElement.elements(", "\"book\"", ");\n        ", "//asXML()把标签对象，转换为标签字符串；", "\n        ", "for", "(Element book:books){\n            Element nameElement=(Element)(book).element(", "\"name\"", ");\n            String nameText=nameElement.getText();\n            System.out.println(nameText);\n        }\n    }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二个for语句最后的分号去掉&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言二维数组的输入以及for循环的问题", ["\n", "各位大牛好，想问一下我这个程序的代码是否有问题以及数组的使用是否正确。为什么会导致输入一次成绩后结束了，第二个循环函数没有起作用。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for (int j &amp;#61; 1; j &amp;lt;&amp;#61; i / 2; j&amp;#43;&amp;#43;) {  ---这个不行啊&amp;#xff0c;得循环所有值&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环出现的基本问题", ["//一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6=1＋2＋3.编程找出1000以内的所有完数。", "public class Yinzi {", "    public static void main(String[] args) {", "        yinzi();", "    }", "\n", "private", " ", "static", " ", "void", " ", "yinzi", "(", ")", " {\n    ", "int", " tat = ", "0", ";\n    ", "for", " (", "int", " i = ", "1", "; i <= ", "1000", "; i++) {\n        ", "for", " (", "int", " j = ", "1", "; j <= i / ", "2", "; j++) {\n            ", "if", " (i % j == ", "0", ") {\n                tat = tat + j;\n                ", "if", " (tat == i) {\n                    System.", "out", ".println(i);\n                    tat = ", "0", ";\n                    ", "continue", ";\n                }\n            }\n        }\n    }\n}\n", "\n", "}", "jr们，问题出在哪里了呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这有什么问题呢&amp;#xff1f;你的第二层循环的一个条件就是 j&amp;lt;i&amp;#xff0c;也就是说只有 j&amp;lt;i时才执行println&amp;#xff0c;当首次循环&amp;#xff0c;i&amp;#61;0,j&amp;#61;0是&amp;#xff0c;循环条件不满足&amp;#xff0c;println代码是不会被执行的啊&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么双重for循环中i=0 j=0 i<j是true 0<0就是false呢？", ["为什么双重for循环中i=0 j=0 i<j是true 0<0就是false呢？", "\n\n", "\n", "for(int i=0; i<999;i++){\n    for (int j = 0; j < i; j++) {\n        System.out.println(j<i);//true\n        System.out.println(0<0);//false\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;By checking the elapsed time since the start:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var i int\nfor start := time.Now(); time.Since(start) &amp;lt; time.Second; {\n    i++\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or using a \"timeout\" channel, acquired by  calling &lt;a href=\"https://golang.org/pkg/time/#After\" rel=\"noreferrer\"&gt;&lt;code&gt;time.After()&lt;/code&gt;&lt;/a&gt;. Use &lt;code&gt;select&lt;/code&gt; to check if time is up, but you must add a &lt;code&gt;default&lt;/code&gt; branch so it will be a non-blocking check. If time is up, break from the loop. Also very important to use a label and break from the &lt;code&gt;for&lt;/code&gt; loop, else &lt;code&gt;break&lt;/code&gt; will just break from the &lt;code&gt;select&lt;/code&gt; and it will be an endless loop.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;loop:\n    for timeout := time.After(time.Second); ; {\n        select {\n        case &amp;lt;-timeout:\n            break loop\n        default:\n        }\n        i++\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the loop body also performs communication operations (like send or receive), using a timeout channel may be the only viable option! (You can list the timeout check and the loop's communication op in the same &lt;code&gt;select&lt;/code&gt;.)&lt;/p&gt;\n\n&lt;p&gt;We may rewrite the timeout channel solution to not use a label:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for stay, timeout := true, time.After(time.Second); stay; {\n    i++\n    select {\n    case &amp;lt;-timeout:\n        stay = false\n    default:\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Optimization&lt;/h3&gt;\n\n&lt;p&gt;I know your loop is just an example, but if the loop is doing just a tiny bit of work, it is not worth checking the timeout in every iteration. We may rewrite the first solution to check timeout e.g. in every 10 iterations like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var i int\nfor start := time.Now(); ; {\n    if i % 10 == 0 {\n        if time.Since(start) &amp;gt; time.Second {\n            break\n        }\n    }\n    i++\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We may choose an iteration number which is a multiple of 2, and then we may use bitmasks which is supposed to be even faster than remainder check:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var i int\nfor start := time.Now(); ; {\n    if i&amp;amp;0x0f == 0 { // Check in every 16th iteration\n        if time.Since(start) &amp;gt; time.Second {\n            break\n        }\n    }\n    i++\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We may also calculate the end time once (when the loop must end), and then you just have to compare the current time to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var i int\nfor end := time.Now().Add(time.Second); ; {\n    if i&amp;amp;0x0f == 0 { // Check in every 16th iteration\n        if time.Now().After(end) {\n            break\n        }\n    }\n    i++\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环在n秒后中断", ["\n\n", "How can I make this simple ", "for", " loop break after exactly one 1s has passed since its execution?", "\n\n", "var i int\n\nfor {\n  i++\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在循环的外层元素上设置flex布局\n循环的那个元素设为行内元素&amp;#xff0c;display:flex\n设置循环的元素为float\n都可以的哦&amp;#xff0c;循环不会规定方向的&amp;#xff0c;要怎么排布还是取决于你的样式怎么写&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue v-for 横向遍历怎么弄呀", ["v-for怎么横向循环呀，各位，这怎么改为横向呀", "\n\n"]], "Tag": "程序设计"}
{"Answer": "第一次循环开始的时候，,i=1,j=10\r\n第一次循环结束，i=2,j=9\r\n循环本身会让i + 1，For i = 1 To j相当于For i = 1 To 10 Step 1，特别注意，这个循环条件j是10，而不会变化\r\n第二次循环开始的时候i=3,j=9\r\n第三次开始（下类似）i=5 j=8\r\n第四次i=7 j=7\r\n第五次i=9,j=6\r\n最后一次i=11,j=5，此时循环不满足，不执行\r\n最后结果11 5", "Konwledge_Point": "for循环", "Question": ["关于VB，for循环的问题", ["Dim i%, j%", "\nj = 10", "\nFor i = 1 To j", "\ni = i + 1", "\nj = j - 1", "\nNext ", "\nPrint \"i=\" & i, \"j=\" & j", "\n为什么i=11，j=5", "\n谁能给解释下呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;v-for放到上面&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/477709304946146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["vue的v-for在el-descriptions展示数据时，如何给每一条数据设置分割线el-divider", ["\n", "\n", "如上图，只有最上面和最下面有分割线，我想每条数据线都有分割线"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据奇偶情况分别输出大小写就行了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cin&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            cout&amp;lt;&amp;lt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;)(&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;#43; i/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            cout&amp;lt;&amp;lt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;)(&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;#43;i/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["C++for循环，纯白求大家捞一下", ["不懂输入52时怎么让大小写交错输出，感觉好难，想不出来，求大家捞一下纯白"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个问题要分情况&amp;#xff0c;首先得看数据库的性能怎么样&amp;#xff1f;如果性能不错&amp;#xff0c;不至于死机&amp;#xff0c;还得看查询的内容&amp;#xff0c;可以做个查询计划看看&amp;#xff0c;如果查询中有死循环或者系统消耗太高&amp;#xff0c;那还真说不好。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环查询数据库，数据库会死机么", ["循环查询数据中的数据，数据库会死机么？", "数据会死机么？需要查询出指定的数据做对比"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;它问的是输出结果的行数&amp;#xff0c;不是结果&lt;br /&gt;结果只有两行&amp;#xff1a;一行是50&amp;#xff0c;一行是error&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环 遍历列表如何遍历", ["想问问上面的for是怎么遍历列表的呀，//是取商，那怎么得出来的2呀？求一个解析"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You start with an empty &lt;code&gt;s&lt;/code&gt; slice. So you will never enter your inner for loop where you add elements to the slice.&lt;/p&gt;\n\n&lt;p&gt;Here is an alternative and straight forward way to do it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i := 1; i &amp;lt;= 10; i++ {\n    wIndex := int(rand.Intn(len(x) + 1)) \n    found := false\n    for _, v := range s {\n        if v == wIndex {\n            found = true\n            break\n        }\n     }\n     if !found {\n        s = append(s, wIndex)\n        x[wIndex] += float32(value)\n     }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;note that you need to convert the value to a float32, so &lt;code&gt;x[wIndex] += float32(value)&lt;/code&gt; instead of just &lt;code&gt;x[wIndex] += value&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;rand.Intn(n int)&lt;/code&gt; generates numbers in the range [0,n), so you need to add 1 to cover the proper range, and avoid panic when the map is empty.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["For循环以其主体结尾", ["\n\n", "For loop ends with its body and dont go furter", "\n\n", "I need find wIndex, check if its in the slice, if no add value\nWhere I go wrong?", "\n\n", "var x make(map[int]float32, 10)\nvar s []int\nvar value = 100\nfor i := 1; i <= 10; i++ {\n    wIndex := int(rand.Intn(len(x))) // random Index choice among map values\n    for _, v := range s {            //end of loop here (if exactly it returnts to loop before)\n        if v != wIndex {\n            s = append(s, wIndex)\n            x[wIndex] += value\n        }\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;#假如全买公鸡最多20个&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;#假如全买母鸡最多33个&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; k in range(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;):\n            &lt;span class=\"hljs-comment\"&gt;#假如全买小鸡最多98个&amp;#xff0c;要保证 全部都有&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; (i &amp;#43; j &amp;#43; k &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; and i * &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#43; j * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#43; k // &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;):\n                &lt;span class=\"hljs-comment\"&gt;#判断公鸡母鸡小鸡是否有100只 和 加起来是否为100文钱&lt;/span&gt;\n                    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;公鸡&amp;#34;&lt;/span&gt;, i,&lt;span class=\"hljs-string\"&gt;&amp;#34;只&amp;#xff0c;母鸡&amp;#34;&lt;/span&gt;, j,&lt;span class=\"hljs-string\"&gt;&amp;#34;只,小鸡&amp;#34;&lt;/span&gt;, k,&lt;span class=\"hljs-string\"&gt;&amp;#34;只\\n&amp;#34;&lt;/span&gt;);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/854688928236111.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环解决数学问题", ["公鸡五文钱一只，母鸡三文钱一只，小鸡三只一文钱，用一百文钱买一百只鸡，其中公鸡，母鸡，小鸡都必须要有，问公鸡，母鸡，小鸡要买多少只，刚好凑足一百文钱（公鸡，小鸡，母鸡，都要有。三只鸡买的数量价钱要刚好100）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那试试这样:&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import pandas as pd\nimport numpy as np\n\nA &amp;#61; np.arange(10,100,10)\nB &amp;#61; np.arange(0.1,1,0.1)\nC &amp;#61; np.arange(2,16,2)\n\ni_re &amp;#61; 10\nj_re &amp;#61; 0.1\nk_re &amp;#61; 2\nv_re &amp;#61; -9.8\n\nfor i in A:\n    for j in B:\n        for k in C:\n            V &amp;#61; j*k-i\n            if V&amp;gt;v_re:\n                i_re,j_re,k_re,v_re &amp;#61; i,j,k,V\n                \nprint(i_re,j_re,k_re,v_re)    &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如何找到for循环中的参数", ["\nA = np.arange(10,100,10)\nB = np.arange(0.1,1,0.1)\nC = np.arange(2,16,2)\nfor i in A:\n    for j in B:\n        for k in C:\n            V = j*k-i\n如何找到V的最大值很简单但如何找到得到最大值时的ijk分别是多少 求大神告知"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for(int j&amp;#61;1;j&amp;lt;&amp;#61;120;j&amp;#43;&amp;#43;)&lt;br /&gt;if(aa[j]&amp;gt;8000)&lt;br /&gt;for(int i &amp;#61; j&amp;#43;1;i&amp;lt;&amp;#61;j&amp;#43;12;i&amp;#43;&amp;#43;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;     if(aa[i]&amp;gt;8000)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    c&amp;#61;(aa[i]-8000)*0.0107&amp;#43;((aa[i]-8000)/12);&lt;/span&gt;&lt;br /&gt;aa[]&amp;#61;{}里面装还款金额&amp;#xff0c;本息分期12期&amp;#xff0c;每月最少还多少&amp;#xff08;8000&amp;#xff09;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    aa[i]&amp;#61;aa[i]&amp;#43;c;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c++ for循环给数组赋值", ["欠一笔钱120000万，分期12期还完！ 每期10000元", "小明每月收入5000元、问小明多久能还完贷款？", "第一个月还款：", "120000/12=10000；", "10000-5000=5000；", "5000", "0.0107=53.5；（利率0.0107）", "给10000第二次起都+53.5；", "第二个月还款：", "10000+53.5=10053.5；", "10053.5-5000=5053.5；", "5053.5", "0.0107=54.07", "第三个月：", "10053.5+54.07= 10107.57", "10107.57-5000=51507.5", "51507.5*0.0107= 54.65", "第四个月", "10107.57+54.65", "\n", "如此循环。怎么用Ｃ＋+", "做出来"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/weixin_40784198/article/details/81989962", "Konwledge_Point": "for循环", "Question": ["关于js的不加var和let的for循环", ["L=3\nfunction f(d){\n    for(i=0;i<L;i++){\n        console.log('f-->'+d+'-->'+i)\n        if(i>d){\n            f(d+1)\n        }\n    }\n}\nf(0)\n\nfunction v(d){\n    for(var i=0;i<L;i++){\n        console.log('v-->'+d+'-->'+i)\n        if(i>d){\n            v(d+1)\n        }\n    }\n}\nv(0)\nconsole.log('vvvvvvvvvv')\nfunction g(d){\n    for(let i=0;i<L;i++){\n        console.log('g-->'+d+'-->'+i)\n        if(i>d){\n            g(d+1)\n        }\n    }\n}\ng(0)\nconsole.log('gggggggg')\n", "\n\n", "这3个方法里第一个不运行完，后两个能运行完，推测是i在递归里被改变后影响了调用它的外层方法，有大佬指点一下不加var和let的情况下详细情况吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;遍历文件夹下的文件名&amp;#xff0c;再做操作&amp;#xff0c;不限于名称&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; os\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;todoSomething&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;image&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;# 一些操作&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(image)\n    \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getImage&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;filePath&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt; &amp;#61; os.listdir(filePath)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; image &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;:\n        todoSomething(image)\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:\n    \n    filePath &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:/1/5/&amp;#34;&lt;/span&gt;\n    getImage(filePath)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["python怎么用for循环顺序读取文件", ["代码如图，我需要读取命名为text1到text9的九张图，进行完全相同的操作，就是说我要写只有第一行不同的九段一样的代码TwT我想问一下这个问题是否可以通过循环函数解决呢？感谢巨佬的帮助！", "\n"]], "Tag": "程序设计"}
{"Answer": "你的命题是错误的：两个Demo之所以不同，因为第一个Demo打印的是同一个MyThread2对象的字段a，第二个Demo打印的是同一个MyThread2对象里的方法里的局部变量i.\r\n第一个Demo，两个线程在字段a上存在“内存冲突”——一个线程在字段a上的操作(a--)，会影响另一个线程对该字段的读取。\r\n第二个Demo，两个线程在局部变量 i 上不存在冲突，原因是，一个方法的局部变量的生命周期始于方法的调用，终于方法调用结束。当两个线程调用这个run方法时，这个方法里的局部变量 i 在该方法的每次调用时都被创建出来，并且在方法的调用与调用之间的局部变量互相独立，互不相关。", "Konwledge_Point": "for循环", "Question": ["在java多线程中用while循环和for循环输出的结果不同", ["public class Demo14 {", "\n\n", "public static void main(String[] args) throws InterruptedException {\n\n    MyThread2 thread2 = new MyThread2();\n    Thread t = new Thread(thread2,\"1\");\n    Thread t1 = new Thread(thread2,\"2\");\n    t1.start();\n    t.start();\n\n\n}\n", "\n\n", "}", "\nclass MyThread2 implements Runnable{", "\n    private int a = 5;", "\n    @Override", "\n    public void run() {", "\n        while(a>0){", "\n            a--;", "\n            System.out.println(Thread.currentThread", "\n\n", "().getName()+\":\"+a);", "\n        }", "\n    }}", "\n\n", "输出结果：", "\nThread-1:3", "\nThread-0:3", "\nThread-1:2", "\nThread-1:0", "\nThread-0:1", "\n\n", "public class Demo14 {", "\n\n", "public static void main(String[] args) throws InterruptedException {\n    MyThread2 thread2 = new MyThread2();\n    Thread t = new Thread(thread2);\n    Thread t1 = new Thread(thread2);\n    t1.start(); \n    t.start();\n}\n", "\n\n", "}", "\n\n", "class MyThread2 implements Runnable{", "\n    private int a = 5;", "\n    @Override", "\n    public void run() {", "\n\n", "    // TODO Auto-generated method stub\n    for(int i = 0; i < a ; i++){\n        System.out.println(Thread.currentThread\n", "\n\n", "().getName()+\":\"+i);", "\n        }", "\n    }}", "\n\n", "输出结果：", "\nThread-0:0", "\nThread-1:0", "\nThread-0:1", "\nThread-1:1", "\nThread-0:2", "\nThread-1:2", "\nThread-0:3", "\nThread-1:3", "\nThread-0:4", "\nThread-1:4", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "var alldomain = \"\";\r\nfor (var i = 0; i &lt; data.data.length; i++)\r\nalldomain = alldomain + data.data[i].domain + \" \";\r\n\r\n然后在你的下面框里，把那个替换成 alldomain", "Konwledge_Point": "for循环", "Question": ["关于for循环在不同场景下的使用", ["\n\n", "怎样能让这个循环在这个弹框里使用啊 我试着把循环写在弹框里 不出意外地弹出来五个弹框 求指导"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次外循环 i &amp;#61; 0&amp;#xff0c;内循环 j 从0循环到0&amp;#xff0c;循环1次&lt;br /&gt;第二次外循环 i &amp;#61; 1&amp;#xff0c;内循环 j 从0循环到1&amp;#xff0c;循环2次&lt;br /&gt;第三次外循环 i &amp;#61; 2&amp;#xff0c;内循环 j 从0循环到2&amp;#xff0c;循环3次&lt;br /&gt;共循环6次&lt;br /&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的【采纳】按钮&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c语言for循环过程", ["\n", "是怎么运行六次的呢  先外在内 第四次开始j怎么等于0了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;子组件的bookinfo默认为空数组&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["v-for渲染组件时数据丢失", ["vue做前端项目的时候，v-for循环某个组件，后端数据还没传过来就进行渲染，导致组件无法获取数据显示未定义（不知道是不是这个原因，我猜的）", "\n", "\n", "相关代码如下：", "\n", "\n```html\n", "<", "div", " ", "v-if", "=", "\"user.isCreator==1||user.isCreator=='1'\"", ">", "\n                ", "<", "h5", ">", "作品", "</", "h5", ">", "\n                ", "<", "el-row", ">", "\n                    ", "<", "div", " ", "v-for", "=", "\"(item, index) in workList\"", " ", ":key", "=", "\"index\"", ">", "\n                        ", "<", "el-col", " ", ":span", "=", "\"6\"", ">", "\n                            ", "<", "ABook", " ", ":bookinfo", "=", "\"item\"", ">", "</", "ABook", ">", "\n                        ", "</", "el-col", ">", "\n                    ", "</", "div", ">", "\n                ", "</", "el-row", ">", "\n                ", "<", "el-divider", ">", "</", "el-divider", ">", "\n            ", "</", "div", ">", "\n            ", "<", "h5", ">", "书架", "</", "h5", ">", "\n            ", "<", "el-row", ">", "\n                ", "<", "div", " ", "v-for", "=", "\"(item, index) in collectList\"", " ", ":key", "=", "\"index\"", ">", "\n                    ", "<", "el-col", " ", ":span", "=", "\"6\"", ">", "\n                        ", "<", "ABook", " ", ":bookinfo", "=", "\"item\"", ">", "</", "ABook", ">", "\n                    ", "</", "el-col", ">", "\n                ", "</", "div", ">", "\n            ", "</", "el-row", ">", "\n\n", "\n", "\n```javascript\n", "getUserOrCreator", "()", " {\n                let map = {}\n                map", "[", "'userid'", "]", " = Number", ".parseInt", "(this.", "$route", ".query", ".userid)\n                let url = ", "\"/user/getUserOrCreator\"", "\n                postRequestPure(url, map)", ".then", "(resp => {\n                    ", "if", " (resp", ".data", ".responseCode", " == ", "200", ") {\n                        this", ".user", " = resp", ".data", ".data", ".user", "\n                        this", ".workList", " = resp", ".data", ".data", ".workList", "\n                        this", ".collectList", " = resp", ".data", ".data", ".collectList", "\n                        console", ".log", "(this.workList)\n                        console", ".log", "(this.collectList)\n                    } ", "else", " {\n                        this.", "$message", ".error", "(", "'用户数据获取失败'", ")\n                    }\n                })\n            }\n", "\n", "去网上查了一下没有找到类似的问题，不知道该怎么办了Orz，有没有人帮忙看看怎么解决"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The simplest way is probably to use &lt;code&gt;range&lt;/code&gt; and an external function. For example (&lt;a href=\"http://play.golang.org/p/AKN5BByBdT\" rel=\"nofollow\"&gt;On play&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func For(start, end int) &amp;lt;-chan int {\n    c := make(chan int)\n    go func() {\n        for i := start; i &amp;lt; end; i++ {\n            c &amp;lt;- i\n        }\n        close(c)\n    }()\n    return c\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in the template:&lt;/p&gt;\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;{{range For 0 10}}\ni: {{.}}\n{{end}}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["模板中的for循环", ["\n\n", "I need ", "for", " loop in template.", "\n\n", "for i := start; i < finish; i++ {\n    // do something\n}\n", "\n\n", "Is it just one way by using ", "range", " with prepared array or how can I add this functional to templates?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;My suggestion: Take an entirely different approach to rate limiting.&lt;/p&gt;\n\n&lt;p&gt;I would put it in the HTTP transport, since that's logically where such a limit ought to exist, and then you needn't mangle your application code at all.  Something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import (\n    \"net/http\"\n\n    \"golang.org/x/time/rate\"\n)\n\ntype rateLimitTransport struct {\n    limiter *rate.Limiter\n    xport   http.RoundTripper\n}\n\nvar _ http.RoundTripper = &amp;amp;rateLimitTransport{}\n\nfunc newRateLimitTransport(r float64, xport http.RoundTripper) http.RoundTripper {\n    return &amp;amp;rateLimitTransport{\n        limiter: rate.NewLimiter(rate.Limit(r), 1),\n        xport:   xport,\n    }\n}\n\nfunc (t *rateLimitTransport) RoundTrip(r *http.Request) (*http.Response, error) {\n    t.limiter.Wait(r.Context())\n    return t.xport.RoundTrip(r)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This uses the &lt;code&gt;golang.org/x/time/rate&lt;/code&gt; package to implement the rate limiting.  &lt;code&gt;newRateLimitTransport()&lt;/code&gt; creates a new rate-limiting transport, where &lt;code&gt;r&lt;/code&gt; is the maximum number of requests to allow per second.&lt;/p&gt;\n\n&lt;p&gt;To take advantage of this, use an instance of the rate-limited transport in the HTTP client for your backend API:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// set this in `init()` for example\nmyClient := http.&amp;amp;Client{\n    // Use a rate-limiting transport which falls back to the default\n    Transport: newRateLimitTransport(60, http.DefaultTransport)\n}\n\n// Then later use `myClient` instead of the default, when making API\n// requests:\nreq, err := http.NewRequest(http.MethodPost, url, body)\nif err != nil {\n    return err\n}\nmyClient.Do(req)\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["暂停for循环的执行", ["\n\n", "I have an API that I am POSTing a small JSON object too.", "\n\n", "This runs as an infinite loop, looping over 7 colours (the rainbow) and send these inside the aforementioned JSON object.", "\n\n", "The API I am connecting to has a rate limit on it of 40 requests per minute.", "\n\n", "I don't want to hit the rate limit and so I have devised a method to avoid this;", "\n\n", "\n", "I have a global variable that stores the number of requests I am allowed to make", "\n", "I have a function that holds a ticker set to run every 60 seconds and top up the global variable that stores my requests", "\n", "I then have a never ending for loop that runs and checks the number of requests that are still allowed to be made, if it is greater than 0 then we make our next request, if is not then we just sleep for a second and try again", "\n", "\n", "It looks a little something like this:", "\n\n", "var rateLimit int\n\nfunc main() {\n\n    request := gorequest.New().SetDebug(false)\n\n    // Set the initial request bucket to 40\n    rateLimit = 40\n\n    go topUpLimiter()\n\n    for {\n        makeTheLightsBlinkTheRainbow(request)\n    }\n}\n\nfunc topUpLimiter() {\n    for range time.Tick(60 * time.Second) {\n        rateLimit += 40\n    }\n}\n\nfunc makeTheLightsBlinkTheRainbow(request *gorequest.SuperAgent) {\n    colours := [7]string{\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"pink\"}\n\n    for _, colour := range colours {\n\n        if rateLimit > 0 {\n\n            response, _, _ := request.Post(\"http://example.com/blink\").\n                Send(fmt.Sprintf(`{\"color\":\"%v\"}`, colour)).\n                End()\n\n            rateLimit--\n\n        } else {\n            time.Sleep(1 * time.Second)\n        }\n    }\n}\n", "\n\n", "This works and I don't ever hit the rate limit, but once I run out of requests, the loop continues to run and will only starts making requests again when the ", "rateLimit", " variable is topped up.", "\n\n", "I am making an IoT light blink the colours of the rainbow and the result is the colours get out of order once the ", "rateLimit", " variable runs out and is then later topped up due to the fact that the for loop just keeps running.", "\n\n", "I'd like to pause/block the for loop while I wait for the ", "rateLimit", " variable to replenish so that the colours don't get out of order.", "\n\n", "How would I implement something like that? From my searches it seems like it may be possible with channels, but I'm not too sure how to do it like that.", "\n\n", "This is an example of what ends up happening: ", "https://play.golang.org/p/r6OG4kK9vCP", "\nOnce it has finished running, you will notice the colours printed out get out of order about halfway through.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;)):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;,b,c]:\n        f1.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{x[i-1]},&amp;#39;&lt;/span&gt;)\n    f1.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#34;{random.randint(80,100)}\\n&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["有没有能把这个for循环优化成两个for的·循环", ["如题", "\n", "f1 = open(", "\"name\"", ",", "\"w\"", ")\n", "a", " = ", "[1,2,3]", "\n", "b", " = ", "[q,w,e]", "\nc = ", "[7,8,9]", " \n", "for", " ", "i", " ", "in", " range(", "1", ",len(a)):\n    f1", ".write", "(f", "'{a[i-1]},'", ")\n    f1", ".write", "(f", "'{b[i-1]},'", ")\n    f1", ".write", "(f", "'{c[i-1]},'", ")\n    f1", ".write", "(f", "\"{random.randint(80,100)}\\n\"", ")\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&amp;#xff0c;n你可以任意设置&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clc &lt;span class=\"hljs-comment\"&gt;;clear&lt;/span&gt;\nn &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; % n值&amp;#xff0c;可改变&lt;/span&gt;\n[&lt;span class=\"hljs-type\"&gt;i2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;i1&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; meshgrid(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:n)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n% 由于你没有提供xy&amp;#xff0c;我这里&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;和y是从&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;到&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;和&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#xff08;你可以选择自己的&amp;#xff09;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;   % 1×10的x&lt;/span&gt;\ny &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;   % 1×10的y&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;i1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;i1&lt;/span&gt;(:)&lt;span class=\"hljs-comment\"&gt;; % i1是x的幂指标&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;i2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;i2&lt;/span&gt;(:)&lt;span class=\"hljs-comment\"&gt;; % i2是y的幂指标&lt;/span&gt;\np &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; length(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;; % p是x或者&lt;/span&gt;\nq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; length(y)&lt;span class=\"hljs-comment\"&gt;; % q是y的长度&lt;/span&gt;\n[q&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; meshgrid(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:q)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nX &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(p&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;(:))&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nY &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; y(q&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;(:))&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nF &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; zeros(p*q&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; (n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;% F的大小&lt;/span&gt;\nfor i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)%一次循环即可\n    F(i&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;:) &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; X(i).^&lt;span class=\"hljs-type\"&gt;i1&lt;/span&gt;.*Y(i).^&lt;span class=\"hljs-type\"&gt;i2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;%F的计算&amp;#xff0c;从x(1)、y(1)一直到xp、yq&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nF\n%最后F就是你需要的矩阵\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果示意&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt; &amp;#61;\n\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;196&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;128&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;162&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;242&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;484&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;225&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;108&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;147&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;441&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;192&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;243&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;729&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;363&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1089&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;96&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;196&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;112&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;784&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;128&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1296&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;484&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;176&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1936&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;225&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;125&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;125&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;625&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;245&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;175&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1225&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;320&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;405&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;225&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2025&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2500&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;55&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;605&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;275&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3025&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;108&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;96&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;216&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;216&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1296&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;294&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;252&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1764&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;384&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;288&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2304&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;486&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2916&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;726&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;396&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;4356&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;196&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;147&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;441&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;112&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;196&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;784&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;175&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;245&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1225&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;252&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;294&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1764&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;343&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;343&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2401&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;448&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;392&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3136&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;567&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;441&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3969&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;700&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;490&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;4900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;77&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;847&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;539&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;5929&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;128&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;192&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;128&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;320&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;288&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;384&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2304&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;392&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;448&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3136&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;4096&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;648&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;5184&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;640&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;6400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;88&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;968&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;704&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;7744&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;162&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;243&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;729&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1296&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;225&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;405&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2025&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;324&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;486&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2916&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;441&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;567&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3969&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;576&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;648&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;5184&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;729&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;729&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;6561&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;810&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;8100&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1089&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;891&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;9801&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;2500&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;3600&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;490&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;700&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;4900&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;640&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;6400&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;           &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;810&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;900&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;8100&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;\n           &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;          &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;110&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1210&lt;/span&gt;         &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;        &lt;span class=\"hljs-number\"&gt;1100&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;12100&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助望采纳哟&amp;#xff0c;帮助答主冲榜哦&amp;#xff0c;谢谢啦&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["MATLAB如何用for循环来编写复杂多循环", ["将p个x和q个y数据代入下面这个公式里,     X=(x1、x2、x3……xp)，Y=(y1、y2、y3……yq)", "最后想把输出结果弄为一个矩阵F，以n=2为例,这个输出矩阵F的行长度是p×q，列长度是(n+1)²", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为在 for语句的{}语句块内用int定义的m变量是{}语句块内的局部变量, 与在for语句外面定义的m变量不是同一个变量.&lt;br /&gt;m&amp;#43;&amp;#43; 操作的是for语句{}语句块内的m变量, 外面定义的m变量的值一直没有变,始终是1&lt;/p&gt;\n&lt;p&gt;当for语句执行结束后,for语句的{}语句块内的m变量会被系统销毁, 再输出m变量,输出的是for语句外面定义的m变量&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/975560763546198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中的m++", ["这个循环结束后m的值为什么是1呢", "i=4的时候进去循环m++后   不是应该是2嘛", "然后 m=n  循环不就结束了嘛  为什么最后输出m的值为1呢"]], "Tag": "程序设计"}
{"Answer": "```\r\n 任何for循环：\r\nfor(语句1;语句2;语句3)\r\n{\r\n...\r\n}\r\n都可以机械地改写为\r\n语句1\r\nwhile(语句2)\r\n{\r\n...\r\n语句3\r\n}\r\n比如\r\nfor (i = 1; i &lt;= 100; i++)\r\n{\r\n...\r\n}\r\n可以写为\r\ni = 1;\r\nwhile (i &lt;= 100)\r\n{\r\n...\r\ni++;\r\n}\r\n回到你的问题\r\n\r\nfor(foo(1);foo(2)&amp;&amp;(i&lt;2);foo(3))\r\n{\r\ni++;\r\nfoo(4);\r\n}\r\n就是\r\nfoo(1);\r\nwhile (foo(2)&amp;&amp;(i&lt;2))\r\n{\r\ni++;\r\nfoo(4);\r\nfoo(3);\r\n}\r\n先执行foo(1)\r\n然后判断foo(2)&amp;&amp;(i&lt;2)，这个过程执行了foo(2)\r\n然后执行foo(4) foo(3)\r\n然后判断foo(2)&amp;&amp;(i&lt;2)，这个过程执行了foo(2)\r\n然后执行foo(4) foo(3)\r\n然后判断foo(2)&amp;&amp;(i&lt;2)，这个过程执行了foo(2)，条件不满足，结束。\r\n```", "Konwledge_Point": "for循环", "Question": ["新手入门 求大神指导下这个FOR循环", ["static boolean foo(int c){", "\n            System.out.print(c);", "\n            return true;", "\n            }", "\n        public static void main(String[] args){", "\n            int i=0;", "\n            for(foo(1);foo(2)&&(i<2);foo(3)){", "\n                i++;", "\n                foo(4);", "\n            }", "\n        }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是 1&amp;lt;&amp;#61;x&amp;lt;&amp;#61;9吧&amp;#xff1f; 只取整数么&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f(%d) &amp;#61; %d\\n&amp;#34;&lt;/span&gt;,i,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*i*i&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["假设函数fx=3x²+2x+1，试利用for循环语句分别求出1<=c<=9的f1～f9各函数的值", ["解答过程，运行结果                    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不会的&amp;#xff0c;for循环在第一次进去的时候已经确定了&amp;#xff0c;会remove六次&amp;#xff0c;因为刚进去的时候就是range(6)&lt;br /&gt;跟写&lt;br /&gt;for i in ss:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    ss.remove(max(ss))&lt;/span&gt;&lt;br /&gt;不一样的&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python For循环和remove", ["ss=['e','h','b','s','l','p']", "for i in range(len(ss)):", "    print(max(ss),end=',')", "    ss.remove(max(ss))", "\n", "这段码为什么能正常输出s,p,l,h,e,b,？", "我是这样想的，", "循环第一次，移除了s，列表为ehblp", "循环第二次，索引在1的地方，移除p，列表为ehbl", "循环第三次，索引在2，移除l，列表为ehb，", "运行第四次，索引在3，但是列表为ehb，此时不是应该结束循环吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把程序超时时间设置长一点&amp;#xff0c;程序会自动等待&amp;#xff0c;等返回数据就往下处理了&amp;#xff0c;反复循环的post请求只会影响处理速度&amp;#xff0c;因为你没请求一次&amp;#xff0c;后台就要重新处理一次&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python中post请求能否使用for循环", ["场景如下:", "要post请求一个接口,这个接口要处理事务花费一些时间,所以接口一开始response的是pending,处理完成后response是ok,因为不知道要花费多长时间,所以想要第一时间获取到ok状态,能不能循环post获取状态呢,还是有其他好的方法"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;xuangu1&amp;#61;[&amp;#39;&lt;span class=\"hljs-number\"&gt;000001&lt;/span&gt;.SZ&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;000002&lt;/span&gt;.SZ&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;000009&lt;/span&gt;.SZ&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;000049&lt;/span&gt;.SZ&amp;#39;]\nfor i in xuangu1:\n    print([i])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/47100485443613.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环输出列表，怎么得到自己想要的？", ["xuangu1=['000001.SZ', '000002.SZ', '000009.SZ', '000049.SZ']", "for i in xuangu1:", "    print(i)", "\n", "\n", "怎么得到结果", "['000001.SZ']", "['000002.SZ']", "['000009.SZ']", "['000049.SZ']"]], "Tag": "程序设计"}
{"Answer": "闭包没做好，第一个setTimeout没执行i就已经变为3了。。而且最后的结果应该是0 1 2 3 3 3 3.。而且死循环了。。。\r\n\r\n你那个结构我无法理解你要干嘛，给你简单闭包例子你自己参考。。\r\n\r\n\r\n  \r\n\r\n```\r\n   var b = 0.2;\r\n    function startjianyin() {\r\n        for (var i = 0; i &lt; 3; i++) {\r\n            var yin = (function (i) {\r\n                return function () { console.log(i); }\r\n            })(i);\r\n            yin();\r\n            setTimeout(yin, 10);\r\n        }\r\n    }\r\n    startjianyin()//0 1 2 0 1 2\r\n```", "Konwledge_Point": "for循环", "Question": ["JS关于for循环中定时器的问题", ["按照逻辑应该是i的输出应该是 0,0,0,1,1,1,2,2,2但是实际情况是输出0,1,2,2,2,2,2,2,2", "\n这是什么原因啊！！！！", "\n\n", "    var b=0.2;\n    function startjianyin(){\n        for(var i=0;i<3;i++){   \n            var yin=function(){\n                if(b<=0.4){\n                    b=b+0.1;\n                    alert(i);\n                 }else{\n                    b=0.2;\n                 }\n                 setTimeout(yin, 10);\n            }\n            yin();\n        }\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=\"https://golang.org/ref/spec#Variable_declarations\" rel=\"nofollow noreferrer\"&gt;The Go Programming Language Specification&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=\"https://golang.org/ref/spec#Variable_declarations\" rel=\"nofollow noreferrer\"&gt;Variable declarations&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;... each variable is given the type of the corresponding\n  initialization value in the assignment.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;code&gt;i := uint(0)&lt;/code&gt;. For example,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var pc [256]byte\n\n    for i := range pc {\n        pc[i] = pc[i/2] + byte(i&amp;amp;1)\n    }\n\n    var x uint64 = 65535\n    var population uint8\n\n    for i := uint(0); i &amp;lt; 8; i++ {\n        population = population + pc[byte(x&amp;gt;&amp;gt;(i*8))]\n    }\n\n    fmt.Printf(\"Population Count: %d\", population)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Playground: &lt;a href=\"https://play.golang.org/p/H_4cn9w_dOq\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/H_4cn9w_dOq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Population Count: 16\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何在for循环初始化中声明uint8，因为for循环初始化中不允许使用var", ["\n\n", "I am writing following code to calculate Population Count as below:", "\n\n", "package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var pc [256]byte\n\n    for i := range pc {\n        pc[i] = pc[i/2] + byte(i&1)\n    }\n\n    var x uint64 = 65535\n    var population uint8\n\n    for i := 0; i < 8; i++ {\n        population  = population + pc[byte(x>>(i*8))]\n    }\n\n    fmt.Printf(\"Population Count: %d\", population)\n}\n", "\n\n", "On compilation I get following error:", "\n\n", "\n  ", "prog.go:19:39: invalid operation: x >> (i * 8) (shift count type int,\n  must be unsigned integer)", "\n", "\n\n", "The problem is with the variable ", "i", " which is declared while initializing the for loop. The shorthand initialization of ", "i", " makes it of type ", "int", " which in internally of type ", "signed int32", ". This is why the following line:", "\n\n", "population  = population + pc[byte(x>>(i*8))]\n", "\n\n", "is causing the problem. Because shift operator ", ">>", " is expecting only unsigned integer, but the expression ", "i*8", " results into ", "int", " which is internally ", "signed int32", ".", "\n\n", "As ", "var", " can not be used in ", "for", " initialization. ", "\n\n", "for var i uint8 = 0; i < 8; i++ { ... }\n", "\n\n", "\n  ", "syntax error: var declaration not allowed in for initializer", "\n", "\n\n", "I can declare variable ", "i", " outside of ", "for loop", ", but I do not find it clean and readable.", "\n\n", "What should be the clean way to achieve the same?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Scanner &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;请输入周&amp;#34;&amp;#43;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&amp;#34;周的学习时间&amp;#xff1a;&amp;#34;);\n            sum &amp;#43;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;.nextInt();\n        }\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;周一至周五每日平均学习时间是:&amp;#34;&amp;#43;sum/&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#43;&amp;#34;小时&amp;#34;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/189338409236134.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Java中for循环求平均值", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主这段代码写错了吧&amp;#xff0c;应该是k&amp;lt;&amp;#61;i-1&amp;#xff0c;而不是k&amp;lt;i-1&amp;#xff0c;因为素数的定义是除了2之外&amp;#xff0c;只能被1和自身整除&amp;#xff0c;所以依次用2到自身-1都试着除一下&amp;#xff0c;如果能整除就不是素数了&amp;#xff0c;所以不能除以自身&amp;#xff0c;只能除以自身的前1个数&amp;#xff0c;即k&amp;lt;&amp;#61;i-1&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["求教c语言在定义求素数的函数事，这里for循环内的条件为什么是k＜i-1，而不是k＜i啊？", ["求教c语言在定义求素数的函数事，这里for循环内的条件为什么是k＜i-1，而不是k＜i啊？"]], "Tag": "程序设计"}
{"Answer": "this的指向有问题，在方法的最开始定义 const self = this;\r\n循环的时候使用self代替this\r\nfor(var item in self.listDate)", "Konwledge_Point": "for循环", "Question": ["vue js  用普通循环就可以 用 for in 循环就报错", ["用普通循环就可以", "\n\n", "用 for in 循环就报错"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your problem lies here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($i = 0; $i &amp;lt; count($nt); $i++) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You are counting the elements of $nt (which are 3), but you want to access the elements of $nt[2] (which are 5). Thus, you need to change the above line to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($i = 0; $i &amp;lt; count($nt[2]); $i++) \n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["来自数组的php for循环在3个循环后停止", ["\n\n", "I have an array that looks like this.", "\n\n", "Array ( [0] => Array ( [0] => MDT 2920 P [1] => MDT 1210 P [2] => MDT 939 P [3] => MDT 1760 P [4] => PDT 23800 P ) [1] => Array ( [0] => MDT [1] => MDT [2] => MDT [3] => MDT [4] => PDT ) [2] => Array ( [0] => 2920 [1] => 1210 [2] => 939 [3] => 1760 [4] => 23800 ) )", "\n\n", "I want to loop through array in the first key of [2] and echo all the values.", "\n\n", "for($i = 0; $i < count($nt); $i++) \n{\necho $nt[2][$i];\necho \"<br />\";\n}\n", "\n\n", "this works,  but stops after three loops and the output looks like this:", "\n\n", "2920\n1210\n939\n", "\n\n", "I am expecting -- hoping for this:", "\n\n", "2920\n1210\n939\n1760\n23800\n", "\n\n", "I don't understand why it is stopping. thanks.  ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This part&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$i = 1;\nwhile ($aliasCheck) \n{\n    $newAlias = $oldAlias . '-' . $i;\n    $aliasCheck = ShopCategoryName::where('alias', $newAlias)-&amp;gt;first();\n    $i++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is equivalent to&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 1; $aliasCheck; $i++) \n{\n    $newAlias = $oldAlias . '-' . $i;\n    $aliasCheck = ShopCategoryName::where('alias', $newAlias)-&amp;gt;first();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also rewrite your code to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$oldAlias = str_slug($request-&amp;gt;{\"new_category_lang_{$value-&amp;gt;code}\"}, '-');\n$newAlias = $oldAlias;\n$newCategory = new ShopCategoryName; // &amp;lt;-- not sure what that is good for\n\nfor ($i = 1; ShopCategoryName::where('alias', $newAlias)-&amp;gt;exists(); ++$i) \n{\n    $newAlias = $oldAlias . '-' . $i;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用FOR循环比较和增加字符串值", ["\n\n", "I'm trying to compare new string against old string from database, and if that string exists increase it by one, for example if string ", "car", " exists new string should be ", "car-1", " and if that string exist then ", "car-2", "...", "\n\n", "I'm using Laravel, and have achieved that by using ", "while()", " loop, but I would like to do it with ", "for()", " loop too.", "\n\n", "This is my code that works:", "\n\n", "foreach($lang_codes as $key => $value)\n{               \n    $oldAlias = str_slug($request->{\"new_category_lang_{$value->code}\"}, '-');\n    $newAlias = $oldAlias;\n    $aliasCheck = ShopCategoryName::where('alias', $oldAlias)->first();\n    $newCategory = new ShopCategoryName;\n\n    $i = 1;\n    while ($aliasCheck) \n    {\n        $newAlias = $oldAlias . '-' . $i;\n        $aliasCheck = ShopCategoryName::where('alias', $newAlias)->first();\n        $i++;\n    }\n}\n", "\n\n", "I was trying to use ", "strcmp()", " with ", "for()", " loop, but I don't know how to put that code together, it was mess.", "\n\n", "So basically, I'm trying code above to work with ", "for()", " loop, but my brain has blocked and overcomplicated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的算法慢是因为&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;你用的排序算法是O(n^2), 可以直接用Arrays.sort()优化。&lt;/li&gt;&lt;li&gt;你最后获取序号的算法也是O(n^2), 可以用哈希表优化成O(n)&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Solution {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arrayRankTransform(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr_copy &amp;#61; Arrays.copyOf(arr, arr.length);\n        Arrays.sort(arr_copy);\n        Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-type\"&gt;record&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num : arr_copy) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!&lt;span class=\"hljs-type\"&gt;record&lt;/span&gt;.containsKey(num)) {\n                &lt;span class=\"hljs-type\"&gt;record&lt;/span&gt;.put(num, &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt;&amp;#43;&amp;#43;);\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;arr.length; &amp;#43;&amp;#43;i) {\n            arr[i] &amp;#61; &lt;span class=\"hljs-type\"&gt;record&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(arr[i]);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; arr;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["优化一段代码，主要是for循环。希望减少运行时间。", ["下面这段代码是将输入的数字进行排序后，将排好的序号替换掉原来数组中元素位置上的值。", "\n", "例如", "\n", "\n", "求优化下列代码。运行时间长，效率不高。", "\n", "class", " ", "Solution", " {\n    ", "public", " ", "int", "[] ", "arrayRankTransform", "(", "int", "[] arr", ")", " {\n        ", "int", " i, j, k;\n       \n        ", "int", " arr_a[] = arr;\n        HashSet<Integer> ", "set", " = ", "new", " HashSet<>();\n\n", "//        for (int i1 : arr_a) {", "\n", "//            System.out.println(i1);", "\n", "//", "\n", "//        }", "\n\n        ", "for", " (", "int", " x = ", "0", "; x < arr.length; x++) {\n            ", "set", ".", "add", "(arr_a[x]);\n        }\n        Integer arr_b[] = ", "set", ".toArray(", "set", ".toArray(", "new", " Integer[]{}));\n\n        ", "for", " (i = ", "0", "; i < arr_b.length - ", "1", "; i++) {\n            ", "for", " (j = ", "0", "; j < arr_b.length - i - ", "1", "; j++) {\n                ", "if", " (arr_b[j] > arr_b[j + ", "1", "]) {\n                    k = arr_b[j];\n                    arr_b[j] = arr_b[j + ", "1", "];\n                    arr_b[j + ", "1", "] = k;\n                }\n            }\n\n        }\n       \n        ", "for", " (", "int", " i1 = ", "0", "; i1 < arr.length; i1++) {\n            ", "for", " (", "int", " i2 = ", "0", "; i2 < arr_b.length; i2++) {\n                ", "if", " (arr[i1] == arr_b[i2]) {\n                    arr[i1] = i2 + ", "1", ";\n                    ", "break", ";\n\n                }\n\n            }\n\n\n        }\n        ", "return", " arr;\n\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;穷举法可以这么做&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; k &amp;#61; j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; l &amp;#61; k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt;( i&amp;#43;j&amp;#43;k&amp;#43;l&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;disp&lt;/span&gt;([i,j,k,l])\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果比较长&amp;#xff0c;就不显示出来啦&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["matlab关于for循环的问题", ["从1--100中选择四个整数，使得这四个数之和等于100，用for_loop穷举法，找出所有的可能组合"]], "Tag": "程序设计"}
{"Answer": "你试过timeout 吗？\r\n比如 timeout 300 command", "Konwledge_Point": "for循环", "Question": ["小白求解，shell脚本，用循环来重复执行一个命令，需要限制每一次循环的执行时间最多为5分钟。", ["用一个命令来分析多个文件，用for循环来实现。但是有的文件分析很长时间都不会出结果，所以需要限制每一个文件被分析的时间，最多为5分钟。如果超过这个时间，就停止，转而用这个命令继续分析下一个文件。请问大神们，这个应该怎么做？谢谢！"]], "Tag": "程序设计"}
{"Answer": "从报错看，是因为数据写入的时候，发现32这个主键已经存在，主键是不能重复的所以报错，有三种解决方法：\r\n（1）你可以把数据库里面主键未32的数据删除然后再写入\r\n（2）修改要写入数据的主键，然后写入。\r\n（3）写入时忽略主键，让系统自动生成主键。", "Konwledge_Point": "for循环", "Question": ["go 语言 beego web 服务 在循环插入数据时 报错: Error 1062: Duplicate entry '32' for key 'PRIMARY',有大佬帮忙吗?", ["\nvar product_sku models.TProductSku\n        for _, i := range strings.Split(getproduct.SpecificationValues, \",\") {\n            product_sku.ProductId = getproduct.Id\n            product_sku.ProductNumber = getproduct.ProductNumber\n            product_sku.SpecificationValue = i\n            product_sku.Status = 1\n            if _, err := o.Insert(&product_sku); err != nil {\n                logs.Error(err)\n                return\n            }\n            msg[\"code\"] = 200\n            msg[\"message\"] = \"Data insertion successful\"\n            this.Data[\"json\"] = msg\n            this.ServeJSON()\n            return\n", "\n\n", "据说是主键没自增,但是有的!", "\n然后百度查到说,需要初始化结构体, 不知怎么操作?", "\n\n", "继各位大佬回答之后呢, 我贴出我的结构体:", "\n\n", "\n//SKU\ntype TProductSku struct {\n    Id                 int     `json:\"id\"`\n    ProductId          int     `orm:\"index\" json:\"product_id\"`\n    ProductNumber      string  `orm:\"size(255)\" json:\"product_number\"`\n\n    SpecificationValue string  `orm:\"null\" json:\"specification_value\"` //规格值\n\n    Status             byte    `orm:\"default(1)\" json:\"status\"` //1正常  0 取消\n    Base\n}\n", "\n\n", "大概也就是我操作循环插入时, 并没有自己操作主键的插入, 所以他是自增的, 唯一的问题是, 例如我有三条数据 [{1,\"123\",\"z\"},{1,\"123\",\"z\"},{1,\"123\",\"z\"},],循环插入第一条可以入库, 如果是空表,那么第一条的主键id 为 1 , 当插入第二条时 就显示报错 主键id 1 重复条目", "\n\n", "问题已经解决!", "\n\n", "还是考虑初始化的问题, 然后把 ", "\n\n", "var product_sku models.TProductSku\n", "\n\n", "放进for循环里, 每一次循环都去初始化化一次结构体.", "\n不知道这样性能消耗是怎么样, 还有没有更好的办法...", "\n但是目前来说是解决了当下的问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i的值在while循环中被改变了&amp;#xff0c;影响for循环的执行。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/236947527646168.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  a,c;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9000&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        c &amp;#61; i;\n        a &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (c !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            a &amp;#61; a * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; c % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            c /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i * &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &amp;#61;&amp;#61; a)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, i);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n\n\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["为什么for循环执行一次就不执行了", ["问题遇到的现象和发生背景", "\n", "设N是一个4位数，求9倍为其反序数的N的值", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<stdio.h>", "\n\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", "  a , c;\n    ", "for", " (", "int", " i = ", "1000", "; i <= ", "9000", "; i++)\n    {\n        c = i;\n        a = ", "0", ";\n        ", "while", " (i != ", "0", ")\n        {\n            a = a * ", "10", " + i % ", "10", ";\n            i /= ", "10", ";\n        }\n        ", "if", " (c * ", "9", " == a)\n        {\n            ", "printf", "(", "\"%d\\n\"", ", c);\n        }\n        ", "else", " {\n            ", "continue", ";\n        }\n    \n\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "无结果输出", "\n", "我的解答思路和尝试过的方法", "\n", "#", "include", "<stdio.h>", "\n\n", "int", " ", "ret", "(", "int", " x)", "\n", "{\n    ", "int", " retx = ", "0", ";\n    ", "while", " (x != ", "0", ")\n    {\n        retx *= ", "10", ";\n        retx += x % ", "10", ";\n        x /= ", "10", ";\n    }\n    ", "return", " retx;\n}\n\n", "int", " ", "main2", "()", "\n", "{\n    ", "for", " (", "int", " i = ", "1000", ";i <= ", "9999", ";++i)\n    {\n        ", "if", " (i * ", "9", " == ", "ret", "(i))\n        {\n            ", "printf", "(", "\"%d\\n\"", ", i);\n        }\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "我想要达到的结果", "\n", "输出结果，N的值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个变量&amp;#xff0c;在if语句里改变他的值&amp;#xff0c;循环结束判断其是否被改变&amp;#xff0c;改变了就有符合的条件&amp;#xff0c;没改变就不符合&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中不满足所有循环时提示", ["for(n=2；n＜20；n++)", "｛", "string filename=xsheet.cells[n,2].value", "if（filename=\"文件名\"）", "｛", "\n", "｝", "\n", "｝", "如何在所有都不满足的情况下提示没有对应内容！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In your &lt;code&gt;for&lt;/code&gt; loop, echo a &lt;code&gt;DIV&lt;/code&gt; instead of just echoing the number.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 1; $i &amp;lt;= $postCounter; $i++) {\n    echo \"&amp;lt;div&amp;gt;$i&amp;lt;/div&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用for循环和sql COUNT循环遍历div", ["\n\n", "CODE : ", "\n\n", "$result= mysql_query (\"SELECT COUNT(post_id) AS postCounter FROM headlines WHERE user_id= '$_SESSION[user_id]' \");\n$numrows = mysql_num_rows ($result);\n\nif ($numrows!=0){\n    while ($row = mysql_fetch_array ($result))\n        $postCounter = $row['postCounter'];\n\n    for ($i=1; $i<=$postCounter; $i++){\n        echo \"$i\";\n    }\n}\n", "\n\n", "Now, what I want to know is \"How could I use for-loop to echo div's depending on the COUNT result?\"", "\n\n", "So if ", "$postCounter", " above was \"4\" I need to display 4 divs for it .", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;37行那个i什么都没干&amp;#xff0c;要么初始化一下&amp;#xff0c;要么删了吧。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环范围改变问题", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Don't use the normal for loop, too much work for you. Use foreach loops. Nest ones at that.&lt;/p&gt;\n\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ( $this-&amp;gt;questions_model-&amp;gt;insert($question) )\n{\n  $question_id = $this-&amp;gt;db-&amp;gt;insert_id();\n\n  foreach ($answers AS $answer)\n  {\n    $answer['questions_question_id'] = $question_id;\n\n    if (!$this-&amp;gt;answers_model-&amp;gt;insert($answer)) {\n      $errors = array(\"Something has gone wrong please try and submit again\");\n    }\n  }\n}\nelse\n{\n  $errors = array(\"Something has gone wrong please try and submit again\");\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem I see here is that if your questions and answers are coming from one big form then how do we know which answers go to which questions? Your best bet here is to only submit one question with multiple answers in the same form. Then the above code will work.&lt;/p&gt;\n\n&lt;p&gt;Otherwise you need to embed a way to attach the answers to each question ahead of time. Maybe even embed the array of answers in each question. In which case you can do this...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($questions AS $question)\n{\n  if ( $this-&amp;gt;questions_model-&amp;gt;insert($question) )\n  {\n    $question_id = $this-&amp;gt;db-&amp;gt;insert_id();\n\n    foreach ($question-&amp;gt;answers AS $answer)\n    {\n      $answer['questions_question_id'] = $question_id;\n\n      if (!$this-&amp;gt;answers_model-&amp;gt;insert($answer)) {\n        $errors = array(\"Something has gone wrong please try and submit again\");\n      }\n    }\n  }\n  else\n  {\n    $errors = array(\"Something has gone wrong please try and submit again\");\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Nested loops and function calls are your friend. If each loop gets much more complex I would recommend encapsulating parts of it into functions that you can call repetitively.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["帮助for循环并将数据插入数据库", ["\n\n", "Ok, so I am building an application, that allows the users to post a question, and add 4 possible answers to that question. I have save the question to the database, get the inserted id and assign that to my answers so I can pull the corresponding answers back for the correct questions, however my foreach loop only fires once, as currently I am only adding 1 question, which means that only 1 answers gets added to the database. How can a rewrite my code so that the question gets saved and then a loop over the answers the correct number of times to add the 4 answers for the question?, My current code is below, ", "\n\n", "$count = count($questions);\n            for($i = 0; $i < $count; $i ++) {\n                if($this->questions_model->insert($questions[$i]))\n                {\n                    $answers[$i]['questions_question_id'] = $this->db->insert_id();\n                    if(!$this->answers_model->insert($answers[$i])) {\n                        $errors = array(\"Something has gone wrong please try and submit again\");\n                    }\n                }\n                else\n                {\n                    $errors = array(\"Something has gone wrong please try and submit again\");\n                }\n            }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sum是double类型的&amp;#xff0c;输出用%lf&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C中for循环求阶乘的和", ["#include<stdio.h>", "\n", "int main()", "{", "    int i,n;", "    double fac=1,sum=0;", "    scanf(\"%d\",&n);", "    for(i=1; i<=n; i++)", "    {", "        fac=fac*i;", "        sum=sum+fac;", "    }", "    printf(\"%d\\n\",sum);", "    return 0;", "}", "为啥不能实现"]], "Tag": "程序设计"}
{"Answer": "首先，python中是很注重缩进的，您的排版上最好修改一下\r\n暂且按照现在的格式来看，第一段代码应该是这样的\r\n```python\r\na=[1,2,1,4,1,]\r\nn=a[0]\r\nwhile n&lt;len(a)+1:\r\n    if a[n]==1:\r\n        a.remove(a[n])\r\n    n=n+1\r\nprint (a)\r\n```\r\n这段代码的问题在于：\r\n 1、循环中n是作为下标使用的，但是一开始的赋值却是n = a[0]，n为列表a的第0号元素（也就是第一个），即n = 1\r\n 2、循环条件的判断n&lt;len(a)+1,则n会取到5，但是列表的下标是从0开始，到a[5]的时候已经没有取值了循环条件的判断n&lt;len(a)+1,则n会取到5，但是列表的下标是从0开始，到a[5]的时候已经没有取值了\r\n 3、判断条件是a[n]==1，也就是说这个代码的作用不在于去重，而是要删除所有为1的元素判断条件是a[n]==1，也就是说这个代码的作用不在于去重，而是要删除所有为1的元素\r\n 4、a.remove(a[n])，删除不是用下标删除而是判断删除这个值，根据上边的判断条件，这一句就相当于a.remove(1)\r\n\r\n这段代码看下来就是，n从1开始取值，直到5，判断列表中后四个元素是否等于1，如果等于1，则从列表中删除一个元素1，但是删除时用的取值删除，因此会从第0号元素的1开始，后四位中有两个1，因此有两次判断为True执行删除，自然删不掉最后的1\r\n改正：\r\n~~~python\r\na=[1,2,1,4,1,]\r\nn=0\r\nwhile n&lt;len(a):\r\n    if a[n]==1:\r\n        a.remove(a[n])\r\n    n=n+1\r\nprint (a)\r\n~~~\r\n第二段代码的错误和第一段完全相同，只是删除的方法换了而已改正方法和第一段相同\r\n\r\n第三段代码的错误也基本一样，但是本段的a.pop(n)是利用下标删除的，所以删除的是后两个1\r\n\r\n最后一段没问题是因为for i in a这个语句是从头遍历的，所以判断并删除没有出现错误\r\n\r\n你的问题不复杂，但是基础差的太多了，而且这个代码不是一般意义上的去重，而是去掉列表中的元素1", "Konwledge_Point": "for循环", "Question": ["python怎么用循环删除列表中的重复数值", ["a=[1,2,1,4,1,]", "\nn=a[0]", "\nwhile n<len(a)+1:", "\n    if a[n]==1:", "\n        a.remove(a[n])", "\n    n=n+1", "\nprint (a)", "\n这样写执行的结果列表最后的1删不掉", "\n\n", "a=[1,2,1,4,1,]", "\nn=a[0]", "\nwhile n<len(a)+1:", "\n    if a[n]==1:", "\n        del a[n]", "\n    n=n+1", "\nprint (a)", "\n判断条件下的删除改成del,最前面的1删不掉。", "\n\n", "a=[1,2,1,4,1,]", "\nn=a[0]", "\nwhile n<len(a)+1:", "\n    if a[n]==1:", "\n        a.pop(n)", "\n    n=n+1", "\nprint (a)", "\n把判断条件下的删除改成pop,最前面的1也是删不掉", "\n\n", "a=[1,2,1,4,1,]", "\nfor i in a:", "\n    if i==1:", "\n        a.remove(1)", "\nprint (a)", "\n改成for循环，又没问题", "\n\n", "现在有个问题，就是删除重复值1，for循环配合del,pop,remove怎么写，while循环配合del,pop,remove代码又该怎么写。可能我的问题有些复杂。请原谅我是小白。希望大神不吝赐教。谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;假设a是4&amp;#xff0c;n是3&amp;#xff1a;\n循环第一次&amp;#xff1a;&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;t*10&amp;#43;a &amp;#61; 0&lt;span class=\"hljs-number\"&gt;*10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-attribute\"&gt;4&lt;/span&gt;&amp;#61;4\n第二次&amp;#xff1a;&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;t*10&amp;#43;a&amp;#61;4*10&amp;#43;4&amp;#61;44\n第三次&amp;#xff1a;&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;t*10&amp;#43;a&amp;#61;44*10&amp;#43;4&amp;#61;444\n\n就是把a不断的加到t的个位\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中t的值也变吗", ["不理解t=t*10+a的意思，为什么会形成这个循环，t的值是咋变化的"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($hourofday=9; $hourofday &amp;lt;= 20; $hourofday++)\n{\n    if($hourofday &amp;gt; 12)\n        $output .= $hourofday - 12 . ':00';\n    else\n        $output .= $hourofday . ':00';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or the shorter but harder to read way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($hourofday=9; $hourofday &amp;lt;= 20; $hourofday++)\n{\n    $output .= ($hourofday - ($hourofday &amp;gt; 12 ? 12 : 0)) .':00 ';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["php for循环语法：如何强加多个条件", ["\n\n", "For a daily calendar application, I want to print out the hours of the day from nine in the morning to eight at night.  I am using the following syntax which works up through 12.  However, then I want to restart the numbering on 1 and have it continue to 8.  I know this could be done in a more complicated way with multiple if then expressions and so forth but hoping there is a clean way to do it with one elegant expression.  This is partly because there is a database query in the midst of this that I would like to write out only once.  Here is basic code:", "\n\n", "PHP\n//following works up to 12\nfor($hourofday = 9; $hourofday <= 12; $hourofday++): \n\n//I want to do something like following but the following does not work.\n\n//for($hourofday = 9; $hourofday <= 12 || $hourofday >=1 && $hourofday <=8); $hourofday++): \n    $output.= $hourofday.':00';\n//This is where dbase is queried for events and there is formatting so it looks like a calendar\n\nendfor\n", "\n\n", "Thanks for any suggestions!", "\n    "]], "Tag": "程序设计"}
{"Answer": "你完全对多线程一点概念都没有，先好好看看msdn\r\nhttps://msdn.microsoft.com/zh-cn/library/c5kehkcz(VS.80).aspx\r\n\r\n&gt;通常，应避免锁定 public 类型，否则实例将超出代码的控制范围。常见的结构 lock (this)、lock (typeof (MyType)) 和 lock (\"myLock\") 违反此准则：\r\n如果实例可以被公共访问，将出现 lock (this) 问题。\r\n如果 MyType 可以被公共访问，将出现 lock (typeof (MyType)) 问题。\r\n由于进程中使用同一字符串的任何其他代码将共享同一个锁，所以出现 lock(“myLock”) 问题。", "Konwledge_Point": "for循环", "Question": ["c# 多线程 线程循环到一半就不动了", [" Thread Th = new Thread(() =>\n            {\n                for (int i = 0; i < 1; i++)\n                {\n                    Thread.Sleep(100);\n                    Thread T = new Thread(GetItemThrd);\n                    T.IsBackground = true;\n                    T.Start();\n                }\n            });\n            Th.IsBackground = true;\n            Th.Start();\n", "\n\n", " private void GetItemThrd()\n        {\n            int CrtThrdID;\n            lock (this)\n            {\n                CrtThrdID = ThrdID;\n                Interlocked.Increment(ref ThrdID);\n                Invoke(new Action(() =>\n                {\n                    AddRecordToDT(new List<string>() { CrtThrdID.ToString(), \"正在g工作\" }, ThrdTable);\n                }));\n            }\n            string CatName = \"\";\n            while (true)\n            {\n                if (CatQue.Count > 0)\n                {\n", "\n\n", "以上为多线程循环运行某一段代码的部分代码", "\n但是线程中有foreach循环.foreach循环会循环500次.但是工作到一半就不动了...", "\n就是没有办法循环完", "\n是什么原因呢 ,,改成for循环也没有用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;(1) &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;s &amp;#61; input(&amp;#34;输入一个字符&amp;#34;)\nn &amp;#61; 1\nss &amp;#61; &amp;#34;&amp;#34;\n\nfor i in range(1,len(s)):             \n    if s[i] &amp;#61;&amp;#61; s[i-1]:\n        n&amp;#43;&amp;#61;1\n    else:\n        ss &amp;#61; ss &amp;#43; str(n)&amp;#43;s[i-1]\n        n &amp;#61; 1\nss &amp;#61; ss &amp;#43; str(n)&amp;#43;s[len(s)-1]\n\n\nprint(ss)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(2)&lt;/p&gt;\n\n&lt;p&gt;4R2G&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环语句与程序实现", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There are two (three) problems with your code.&lt;/p&gt;\n\n&lt;p&gt;First, you are right that there is no point in the loop at which you give control to the scheduler and such it can't execute the update goroutine. To fix this you can set &lt;code&gt;GOMAXPROCS&lt;/code&gt; to something bigger than one and then multiple goroutines can run in parallel.&lt;/p&gt;\n\n&lt;p&gt;(However, as it is this won't help as you pass x by value to the update function which means that the main goroutine will never see the update on x. To fix this problem you have to pass x by pointer. Now obsolete as OP fixed the code.)&lt;/p&gt;\n\n&lt;p&gt;Finally, note that you have a data race on &lt;code&gt;Addr&lt;/code&gt; as you are not using atomic loads and stores.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["为什么不处理“无限” for循环？", ["\n\n", "I need to wait until x.Addr is being updated but it seems the for loop is not run. I suspect this is due the go scheduler and I'm wondering why it works this way or if there is any way I can fix it(without channels). ", "\n\n", "package main\n\nimport \"fmt\"\nimport \"time\"\n\ntype T struct {\n    Addr *string\n}\n\nfunc main() {\n\n    x := &T{}\n    go update(x)\n    for x.Addr == nil {\n        if x.Addr != nil {\n            break\n        }\n    }\n    fmt.Println(\"Hello, playground\")\n}\n\nfunc update(x *T) {\n    time.Sleep(2 * time.Second)\n    y := \"\"\n    x.Addr = &y\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哪里是同一个对象&amp;#xff01;&amp;#xff01;&amp;#xff01;是把 &lt;code class=\"language-javascript\"&gt;data&lt;/code&gt; 中的每一行数据都取出来实例化&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;有用望采纳&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环", "Question": ["springboot中for循环里set对象有什么意义呀，这样不是重复set一个类中的对象吗", ["每次set的传入的还是一个相同值，这样不会有影响吗", "在我粘贴代码的倒数3.4.5行", "\n", " ", "for", " (", "int", " i = ", "0", "; i < data.size", "()", "; i++){\n            prcsCtrlInfoDTO = ", "new", " ", "PrcsCtrlInfoDTO()", ";\n            prcsCtrlInfoDTO = (PrcsCtrlInfoDTO) data.get(i);\n\n            OutAppyEvtDO outAppyEvtDO = ", "new", " ", "OutAppyEvtDO()", ";\n            OutAppyEvtDTO outAppyEvtDTO = ", "new", " ", "OutAppyEvtDTO()", ";\n            outAppyEvtDO.set", "ServMattInstId(", "prcsCtrlInfoDTO", ".", "getBusinessKey", "()", ");\n\n            List<OutAppyEvtDO> outAppyEvtDOS = outAppyEvtDAO.query", "ByCondition(", "outAppyEvtDO", ")", ";\n            ", "if", " (outAppyEvtDOS.size", "()", " > ", "0", "){\n                outAppyEvtDO = outAppyEvtDOS.get(", "0", ");\n            } ", "else", " {\n                pageResult.set", "RecordCounts(", "pageResult", ".", "getRecordCounts", "()", " - ", "1", ");\n                ", "WorkFlowUtil", ".", "close", "Flow(", "prcsCtrlInfoDTO", ".", "getPrcsId", "()", ");\n                continue;\n            }\n\n            ", "ObjectConversionUtil", ".", "convert(outAppyEvtDTO, outAppyEvtDO);\n            outAppyEvtDTO.set", "TaskId(", "prcsCtrlInfoDTO", ".", "getTaskId", "()", ");\n            outAppyEvtDTO.set", "TaskName(", "prcsCtrlInfoDTO", ".", "getNodeName", "()", ");\n            outAppyEvtDTO.set", "TaskStates(", "prcsCtrlInfoDTO", ".", "getStates", "()", ");\n            ", "list", ".add(outAppyEvtDTO);\n        }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Let's show how it works, with these code samples:  &lt;/p&gt;\n\n&lt;p&gt;Let's simplify your first sample, see this working sample code (1):  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    a := 100\n    {\n        fmt.Println(a) // 100\n        a, b := 0, 0\n        fmt.Println(a, b) // 0 0\n    }\n    fmt.Println(a) // 100\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;100\n0 0\n100\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;so &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;a, b := 0, 0&lt;/code&gt; is &lt;strong&gt;shadowed&lt;/strong&gt;, this &lt;code&gt;a&lt;/code&gt; is new variable,&lt;br&gt;\nthis is called Variable scoping and shadowing,&lt;br&gt;\nand you may name it e.g. &lt;code&gt;c&lt;/code&gt; like this code for now to show how it works (2):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    a := 100\n    {\n        fmt.Println(a) // 100\n        c, b := 0, 0\n        fmt.Println(c, b) // 0 0\n    }\n    fmt.Println(a) // 100\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the output is that same as (1):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;100\n0 0\n100\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and lets simplify your next sample code (3):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    a := 0\n    b := byte(0)\n    {\n        fmt.Println(a, b) // 0 0\n        a, b = 1, byte(1)\n        fmt.Println(a, b) // 1 1\n    }\n    fmt.Println(a, b) // 1 1\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 0\n1 1\n1 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;so here &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are the same inside and outside loop.&lt;/p&gt;\n\n&lt;p&gt;also see: &lt;a href=\"https://stackoverflow.com/questions/36553134/where-can-we-use-variable-shadowing-and-why\"&gt;Where can we use Variable Scoping and Shadowing in Go?&lt;/a&gt;&lt;br&gt;\nand see:\n&lt;a href=\"https://stackoverflow.com/questions/36512919/what-is-the-difference-between-and-in-go/36513131#36513131\"&gt;What is the difference between := and = in Go?&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环内时，多变量简短重新声明会创建新变量吗？", ["\n\n", "The ", "documenation", " states:", "\n\n", "\n  ", "As a consequence, redeclaration can only appear in a multi-variable short declaration. ", "Redeclaration does not introduce a new variable; it just assigns a new value to the original", ".", "\n", "\n\n", "But how does this work in for loops? ", "See this example", ". It seems that the variable \"nextPos\", which has a scope outside the loop, actually gets redeclared inside the loop for the inner scope, and thus looses its value for each iteration. ", "This", " version works though.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你相当于输入了&lt;code class=\"language-javascript\"&gt;A\\n&lt;/code&gt;,第二个循环实际上应该是读入了你输入的回车,所以被跳过了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环为什么跳过其中一个循环", ["\n", "\n", "为什么会跳过一个循环？有大佬知道为什么吗？"]], "Tag": "程序设计"}
{"Answer": "```\r\n cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;i++&lt;&lt;endl\r\n```\r\n\r\n计算是从右至左执行的，而打印是从左往右的。", "Konwledge_Point": "for循环", "Question": ["如何理解for循环的条件更新", ["for(int i = 0; i < 5; cout<<i<<\"  \"<<i++<<endl);", "\n我以为，这段代码的输出是：", "\n0 0", "\n1 1", "\n2 2", "\n3 3", "\n4 4", "\n但结果确实这样的：", "\n1 0", "\n2 1", "\n3 2", "\n4 3", "\n5 4", "\n为什么会出现这种情况，第一个i和第二个i不应该输出是一样的吗？", "\n表示很难理解啊~"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n#include&amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(){\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\nfor(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;; i&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n}\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;计算值为:%d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;);\nreturn &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["这个怎么用for循环做，求解", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;执行次数要看你的变量&amp;#xff08;题目中的x&amp;#xff0c;y&amp;#xff09;经过多少次循环&amp;#xff08;题目中每次循环都会使得x&amp;#43;&amp;#43;&amp;#xff09;才能达到跳出循环的标准&amp;#xff08;题目中的&amp;#xff08;y&amp;#61;123&amp;amp;&amp;amp;x&amp;lt;4&amp;#xff09;&amp;#xff09;&lt;/p&gt;\n\n&lt;p&gt;但是实际上这个题目有个陷阱就在于&amp;#xff08;y&amp;#61;123&amp;#xff09;和&amp;#xff08;y&amp;#61;&amp;#61;123&amp;#xff09;是不一样的&amp;#xff0c;后者是判断y的值是不是等于123&amp;#xff0c;而前者是赋值&amp;#xff0c;理论上只要y的类型和等号后面的数类型一样都会返回true。因此最后就只有当x&amp;lt;4为true时就可以跳出&amp;#xff0c;所以循环次数应该是x&amp;#61;0&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;3这四种情况。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环的执行次数怎么判断", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to use &lt;code&gt;mysql_fetch_row()&lt;/code&gt; inside a loop in itself:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$result = mysql_query(\"SELECT DISTINCT date FROM participants WHERE subdomein='testdomain'\");\nwhile($date = mysql_fetch_row($result))\n{\n    echo $date[0];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should also note that the &lt;code&gt;mysql_*&lt;/code&gt; family of functions are not deprecated. You should avoid using them if possible, and look into alternatives such as MySQLi or PDO.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["For循环不返回所有值", ["\n\n", "I'm working on a piece of code that's meant to be implemented in Google Charts, however, not all values I'm looking for are being returned.", "\n\n", "I need a couple of dates selected from my database, and I select them as follows:", "\n\n", "$dates = mysql_fetch_row(mysql_query(\"SELECT DISTINCT date FROM participants WHERE subdomein='testdomain'\")) or die(mysql_error());\n", "\n\n", "Then I use a for-loop to echo them:", "\n\n", "for ($i = 0; $i <= count($dates); $i++)\n    {\n        echo $dates[0].' ';\n    }\n", "\n\n", "In my database there are 3 (distinct) dates: ", "24-03-2013", ", ", "25-03-2013", " and ", "26-03-2013", ", however the piece of code returns ", "2x 24-03-2013", ". What am I doing wrong here? ", "\n\n", "P.S. I also tried a while-loop but that loops infinitely or crashes my page. Besides that, I tested the query by running it in the database itself and it returns the right results, so the query works fine.", "\n\n", "Help is much appreciated!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;polynomial&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;{\n     &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n     &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n     &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n             sum &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/i;\n         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n             sum -&amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/i;\n     }\n     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum;\n\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; sum;\n    sum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;polynomial&lt;/span&gt;(t);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;sum&amp;#61;%.5f\\n&amp;#34;&lt;/span&gt;,sum);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; EXIT_SUCCESS;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环该怎么写，希望得到指导", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;双重循环。判断x,y的值输出不同的字符&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,y;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (y &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; y &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; y&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; x &amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;; x&amp;#43;&amp;#43;)\n        {\n               &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x&amp;#43;y&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; || x&amp;#43;y&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;);\n       }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/429955798436152.png\" /&gt;&lt;/p&gt;&lt;br /&gt;&amp;#xff08;**如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!**&amp;#xff09;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C语言用for循环输入图案", ["输出此图案"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You got it almost right, but each iteration needs to EITHER display a &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; OR an &lt;code&gt;&amp;lt;/tr&amp;gt;&lt;/code&gt; so:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://eval.in/93455\" rel=\"nofollow\"&gt;https://eval.in/93455&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$num = 1;\n        while($num &amp;lt; 11)\n        {\n                if (fmod($num,2)) echo '&amp;lt;tr&amp;gt;';\n                echo \"&amp;lt;td&amp;gt;\" . $num . \"&amp;lt;/td&amp;gt;\";\n                if (!fmod($num,2)) echo '&amp;lt;/tr&amp;gt;';\n                $num++;\n       }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note I altered your while condition for test purposes&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中打印表中的2列", ["\n\n", "I am trying to print results from a mysql query in a table that will be in 2 columns. to do this through my for loop i did the following:", "\n\n", "    $num = 1;\n            while($r = $qry->fetch())\n            {\n                    if (!fmod($num,2)) echo '<tr>';\n                    echo \"<td>\" . $num . \"</td>\";\n                    if (!fmod($num,2)) echo '</tr>';\n                    $num++;\n           }\n", "\n\n", "however,  each row is getting its own row in the table.  even though $num is printed and shows 1,2,3,4 and so on.  what am i missing?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;客流量和营业额不是统计出来的吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["新人求解答，怎么用for循环输出一天的客流量和营业额啊", ["\ndouble pc1=0;//预付款\ndouble pc2;//折后价\ndouble pc3;//实际付款\ndouble pc4;//找零\ndouble pc5;//商品单价\nint number;//商品单量\nString hasNext=\"y\";//判断条件\nScanner sc=new Scanner(System.in);//接收输入信号\nwhile(hasNext.equals(\"y\")){\n    System.out.println(\"请输入商品单价\");\n    pc5=sc.nextDouble();\n    System.out.println(\"请输入商品数量\");\n    number=sc.nextInt();\n    System.out.println(\"是否还有商品？(y/n)\");\n    hasNext=sc.next();\n    pc1+=pc5*number;\n}\nSystem.out.println(\"应付款:\"+pc1);\nif (pc1>=1000){\n    pc2=pc1*0.6;\n}else if (pc1>=800){\n    pc2=pc1*0.7;\n}else if (pc1>=500){\n    pc2=pc1*0.8;\n}else if (pc1>=300){\n    pc2=pc1*0.9;\n}else{\n    pc2=pc1;\n}\nSystem.out.println(\"折后价\"+pc2);\nSystem.out.println(\"实际付款：\");\npc3=sc.nextDouble();\npc4=pc3-pc2;\nSystem.out.println(\"找零为\"+pc4);"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在这个修复后的代码中&amp;#xff0c;我们使用while (true)循环&amp;#xff0c;当输入为-999时&amp;#xff0c;使用break语句跳出循环。同时&amp;#xff0c;我们对变量i进行了初始化。这样&amp;#xff0c;当输入为-999时&amp;#xff0c;程序会停止加和并输出结果。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;) {\n        cin &amp;gt;&amp;gt; i;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;-999&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        sum &amp;#43;&amp;#61; i;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;sum&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["for循环解决输入的问题", ["int i,sum；", "for (；i！=-999；)", "    ｛cin>>i；", "       sum＋=i；｝", "cout<<\"sum=\"<<sum；<br />system(\"pause\")；", "\n", " 输入-999的时候就停止加和", "但是这样写电脑提示i没有被初始化"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;都是循环a次&amp;#xff0c;区别在于循环的开始不同&amp;#xff0c;一个从1开始&amp;#xff0c;一个从a开始&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环(求详细讲解一下)", ["for(int i=a;i>=1;i--)这个什么意思，与", "for(int i=1;i<=a;i++)有什么区别?求解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是一个列表推导式&amp;#xff0c;本身是由for循环语句新建列表推导出来的&amp;#xff0c;如下。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-comment\"&gt;# for循环&lt;/span&gt;\nn&amp;#61;5\nlist_nums &amp;#61; list()\nfor i in range(n):\n    list_nums.append(a)\n&lt;span class=\"hljs-comment\"&gt;#推导后 &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;\nlist_nums&amp;#61;[a for i in range(n)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;nums&amp;#61;[[0]n for i in range(n)]&lt;br /&gt;因此按照上面还原则&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;nums&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n  nums&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;*n)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["这行代码换成for循环是怎么实现的呀", ["nums=[[0]", "n for i in range(n)]  # 初始化一个n", "n的零阵"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your error is due to double foreach, you foreach too many time.&lt;/p&gt;\n\n&lt;p&gt;3 value selected = 3 loop (&lt;code&gt;for($a=0; $a&amp;lt;count($area_id); $a++)&lt;/code&gt;) * n loop for every estimated_time (&lt;code&gt;for($i=0; $i&amp;lt;count($estimated_time); $i++)&lt;/code&gt;)&lt;/p&gt;\n\n&lt;p&gt;So remove second foreach and acces POST via array :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump($_POST);\nfor($a=0; $a&amp;lt;count($_POST['area_id']); $a++)\n{\n\n    var_dump($_POST['estimated_time'][$_POST['area_id'][$a]]);\n    var_dump($_POST['area_id'][$a]);\n    echo 'insert';\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit : it s a correction our your code, but your concption still wrong&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["我遇到for循环问题。 在mysql中重复值", ["\n\n", "My controller", "\n\n", "for($a=0; $a<count($area_id); $a++)\n{\n  for($i=0; $i<count($estimated_time); $i++)\n   {\n      $project_area = new Projectarea;\n      $project_area->area_id = $area_id[$a];\n      $project_area->project_id = $project->id;\n      $project_area->estimated_time = $estimated_time[$i];\n      $project_area->save();\n    }\n}\nreturn Redirect::to('admin');\n", "\n\n", "my view ", "\n\n", "<div class=\"form-group\">\n  <label for=\"select_client\">Choose area</label>\n     <select class=\"form-control\" name=\"area_id[]\"  multiple=\"multiple\">\n     @foreach($area as $row)\n        <option class=\"click\" value=\"{{ $row->id }}\" area=\"{{ $row->id }}\">{{$row->area_name}}</option>\n     @endforeach\n     </select>\n\n    @foreach($area as $row)\n      <input class=\"other\" id=\"{{ $row->id }}\" type=\"text\" name=\"estimated_time[]\" placeholder=\"{{ $row->area_name }}\" />\n    @endforeach\n</div>\n", "\n\n", "mysql result.", "\n\n", "if i select for example three values from multiple select i have this result in database", "\n\n", "project_id  area_id estimated_time\n123           7          0\n123           7          2\n123           7          3\n123           7          4\n123           7          0\n123           8          0\n123           8          2\n123           8          3\n123           8          4\n123           8          0\n123           9          0\n123           9          2\n123           9          3\n123           9          4\n123           9          0\n124           8          0\n", "\n\n", "Thank you", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for(int j&amp;#61;sqrt(n), i &amp;#61; sqrt(m); j&amp;lt;m,i&amp;lt;n;j&amp;#43;&amp;#43;,i&amp;#43;&amp;#43;)&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["这个for 循环哪里出错了，系统一直报错", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Remove the -1, the value of &lt;code&gt;$tags_cnt-1&lt;/code&gt; is 2, when start the for the value &lt;code&gt;$i&lt;/code&gt; is 0, in the second loop the value for the &lt;code&gt;$i&lt;/code&gt; is 1, the condition says that the loop works until &lt;code&gt;$i&amp;lt;$tags_cnt&lt;/code&gt; so, in the second loop 1&amp;lt;2 and is the last one because in the next loop don't match with the condition.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$searchValue=\"Bob Is Fat\";\n$explode = explode(' ', $searchValue);           //turns $searchValue into an array\n$tags_cnt = count($explode);                     //counts elements in the array\n\n$result_tag = array(\"Volvo\", \"Skinny\", \"Fat\");   //creates an array\n$row_cnt = count($result_tag);                   //counts elements in array\n\n\n        for($i=0; $i&amp;lt;$tags_cnt; $i++) {\n            for($x=0; $x&amp;lt;$row_cnt; $x++) {\n                if ($result_tag[$x] == $explode[$i]) {        \n                    echo $explode[$i];\n                }   \n            } //2 forloop                                                               \n        } //1 forloop\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or in your first for:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($i=0; $i&amp;lt;=$tags_cnt-1; $i++)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and in the second:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for($x=0; $x&amp;lt;=$row_cnt-1; $x++)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope works for you.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何使用for循环逐元素地比较两个数组？", ["\n\n", "This is a mock example of my problem. ", "\n\n", "The 'for loops' will be contained inside a while loop, if that matters.", "\n\n", "The code below should compare every element of each array and echo out the element that is the same. In this case 'Fat'.", "\n\n", "However, the code is not working and I can't figure out why. I'm sure it's a simple fix, but I can't seem to find it.", "\n\n", "$searchValue=\"Bob Is Fat\";\n$explode = explode(' ', $searchValue);           //turns $searchValue into an array\n$tags_cnt = count($explode);                     //counts elements in the array\n\n$result_tag = array(\"Volvo\", \"Skinny\", \"Fat\");   //creates an array\n$row_cnt = count($result_tag);                   //counts elements in array\n\n\n        for($i=0; $i<$tags_cnt-1; $i++) {\n            for($x=0; $x<$row_cnt-1; $x++) {\n                if ($result_tag[$x] == $explode[$i]) {        \n                    echo $explode[$i];\n                }   \n            } //2 forloop                                                               \n        } //1 forloop\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;To my mind you are right in all of your assumptions. To avoid channel draining just use&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;close(doStuffChan)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;instead of &lt;code&gt;doStuffChan &amp;lt;- true&lt;/code&gt;, because you can receive nil from closed channel forever.\nThem surround Wait with loop to check before cond been true since it's a condition in most cases. If you don't want to close channel guard signalling in channel and broadcasting with Lock, which make operation precedence deterministic.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func main() {\n    doStuffChan = make(chan bool)\n    cond = &amp;amp;sync.Cond{L: &amp;amp;sync.Mutex{}}\n    go startDoStuffLoop()\n\n    cond.L.Lock()\n    doStuffChan &amp;lt;- true\n    cond.Wait()\n    cond.L.Unlock()\n\n    fmt.Println(result)\n}\n\nfunc startDoStuffLoop() {\n    for {\n        &amp;lt;-doStuffChan\n        result = \"success\"\n        cond.L.Lock()\n        cond.Broadcast()\n        cond.L.Unlock()\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See it works &lt;a href=\"https://play.golang.org/p/1S6VW7nIoV\" rel=\"nofollow\"&gt;https://play.golang.org/p/1S6VW7nIoV&lt;/a&gt;  Both versions are threadsafe however. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何使用sync.Cond对在无限for循环上运行的goroutine进行单元测试？", ["\n\n", "I am trying to unit test a channel that runs on an infinite for loop. I think I've found a way to do it, but I'm not sure if it's a valid way to use conditional variables. Also I'm not sure if this approach is prone to a race condition. Since the for loop is running on its own goroutine, is it possible the channel would be drained by the time I get to \"cond.Wait()?\" If this happened would I hang forever? In all the examples I've seen using conditional variables they are usually accompanied by a for loop surrounding the wait. Do I need this here? My question: is there anything wrong with the approach I'm using here? Is this a valid/idiomatic use of conditional variables?", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nvar doStuffChan chan bool\nvar cond *sync.Cond\nvar result string\n\nfunc main() {\n    doStuffChan = make(chan bool, 10)\n    cond = &sync.Cond{L: &sync.Mutex{}}\n    go startDoStuffLoop()\n\n    doStuffChan <- true\n\n    cond.L.Lock()\n    cond.Wait()\n    cond.L.Unlock()\n\n    fmt.Println(result)\n}\n\nfunc startDoStuffLoop() {\n    for {\n        <-doStuffChan\n        result = \"success\"\n        cond.Broadcast()\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "var chilrow = sel[i].parentNode.parentNode;/*选中行*/\r\n\t\t\t\tvar newRow = parentTable.insertRow();\r\n\t\t\t\tnewRow.insertCell().innerHTML='&lt;input type=\"checkbox\" name=\"select\" value=\"id1\"&gt;';\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[1].innerHTML;\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[2].innerHTML;\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[3].innerHTML;\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[4].innerHTML;\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[5].innerHTML;\r\n\t\t\t\tnewRow.insertCell().innerHTML=chilrow.cells[6].innerHTML;", "Konwledge_Point": "for循环", "Question": ["javascript for循环内定义对象问题", ["父，子窗口内每个table的每行都有一个checkbox标签；", "\nvar parentTable = window.opener.document.getElementById(\"mytable\");/*父窗口table*/", "\nvar sel = document.getElementsByName(\"select\");/*子窗口checkbox*/", "\n我要把子窗口的行赋值到父窗口", "\n[code=\"java\"]", "\nvar len = sel.length;", "\nvar newRow;", "\n           for(var i=0; i<len;i++){", "\n        var chilrow = sel[i].parentNode.parentNode;/*选中行*/", "\n        if(sel[i] != null && sel[i].checked == true ){", "\n            var rownum = parentTable.rows.length;", "\n            newRow = parentTable.insertRow(rownum);", "\n            newRow.align = \"center\";", "\n            newRow = chilrow;", "\n        }", "\n           }", "\n[/code]", "\n\n", "现在的问题复制的是空行，子窗口行内的列值未复制到父窗口。", "\n大家帮我看看问题出在哪里了？", "\n\n", "我有试过像这样一列列赋值：", "\nnewRow.insertCell(0).innerHTML=sel[i].parentNode.parentNode.insertCell(0).innerHTML;", "\n结果是子窗口的行列值改变了。", "\n[b]问题补充：[/b]", "\n附源码：见附件"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最标准的代码&amp;#xff0c;尝试了一个多小时做出来的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\npublic static &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; totalRow &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;lt; totalRow; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-comment\"&gt;// 左边空格数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; leftSpaceNum &amp;#61; Math.&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(totalRow / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//每行中间最大值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; colMid &amp;#61; totalRow / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - leftSpaceNum &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;// 数字个数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; number &amp;#61; totalRow-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Math.&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(totalRow/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;lt; totalRow; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;lt; leftSpaceNum) {\n                System.out.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;lt; number&amp;#43;leftSpaceNum) {\n                System.out.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(colMid - Math.&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(totalRow/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        System.out.println();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/823544139646126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["用for循环怎么输出这样的菱形啊", ["敲了几十行，定义的变量太多太麻烦了，后半部分还没写，感觉这样写超麻烦，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环有问题&amp;#xff0c;第一次循环的时候i&amp;#61;0&amp;#xff1b;需要开始条件为i&amp;lt;0,这个条件不可能成立。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["为什么我的for循环并不执行呢？调试里看出来不执行for循环的", ["我用c语言编一个求正整数的位数的程序，但是在我编出我理论程序后无法执行，麻烦帮帮我"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;y对3取余之后你不是给了它一个 &amp;#43;&amp;#61;3 了吗&amp;#xff1b;然后到continue之后他又跳出当前循环开始下一次循环这样一直到y&amp;gt;&amp;#61;20。并且你给y的初始值又是1&amp;#xff0c;每次又是&amp;#43;3那么y只要是小于20的时候都会进到第二个if里面去&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java里面的for循环语句 y没有自增，为什么等于22？", ["\n int x; \n         int y; \n         for (x = 1, y = 1; x <= 100; x++) { \n             if (y >= 20) { \n                break; \n             } \n             if (y % 3 == 1) {  \n                y += 3;   \n                continue; \n             }\n             y -= 5; \n         } \n         System.out.println(\"x=\" + x + \",y=\" + y);"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你一开始数组随机赋值的时候&amp;#xff0c;是从数组下标1开始的&amp;#xff0c;不是从零开始的&amp;#xff0c;所以你的数组0位&amp;#xff0c;是默认值0。你比大小的时候&amp;#xff0c;是从数组0到数组9&amp;#xff0c;所以你第一位是0&amp;#xff0c;后面的随机数都比0大&amp;#xff0c;所以最小值一直是0。&lt;br /&gt; System.out.println();--------&amp;gt;你这一句不就能看见&amp;#xff0c;你的数组内容吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["java使用for循环输出数组最大值最小值，问题如下，输出最大值正常，输出最小值为什么为0", ["package day06;\n", "//求数组元素的最大值", "\n", "public", " ", "class", " ", "MaxOfArray", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n        ", "int", " [] arr = ", "new", " ", "int", "[", "10", "];\n        ", "for", "(", "int", " i = ", "1", "; i < arr.length ; i++){\n            arr[i] = (", "int", ")(Math.", "random", "() * ", "100", ");\n            System.out.", "print", "(arr[i]+", "\"\\t\"", ");\n        }\n        System.out.", "println", "();\n        ", "//数组最大值", "\n        ", "int", " max = arr[", "0", "];\n        ", "for", "(", "int", " i = ", "1", " ; i < arr.length ; i++){\n            ", "if", "(arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        System.out.", "println", "(", "\"最大值为  \"", " + max);\n        ", "//数组最小值", "\n        ", "int", " min = arr[", "0", "];\n        ", "for", "(", "int", " i = ", "1", " ; i < arr.length; i++){\n            ", "if", "(arr[i] < min){\n                min = arr[i];\n            }\n        }\n        System.out.", "println", "(", "\"最小值    \"", "+ min);\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这么写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;public List&amp;lt;MstPositions&amp;gt; find&lt;span class=\"hljs-constructor\"&gt;All()&lt;/span&gt; {\n \n    List&amp;lt;MstPositions&amp;gt; resultList &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n    ModelMapper mapper &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;ModelMapperUtil&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;ModelMapper()&lt;/span&gt;;\n    MstPositionRepositorySearchCriteria searchCriteria &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;MstPositionRepositorySearchCriteria()&lt;/span&gt;;\n    \n    searchCriteria.set&lt;span class=\"hljs-constructor\"&gt;Enable(Boolean.TRUE)&lt;/span&gt;;\n    searchCriteria.set&lt;span class=\"hljs-constructor\"&gt;Order(BusinessContext.SELECT_DISPLAY_ORDER)&lt;/span&gt;;\n    List&amp;lt;MstPositionsEntity&amp;gt; mpEntityList &amp;#61; this.mstPositionsRepository.find&lt;span class=\"hljs-constructor\"&gt;ByCriteria(&lt;span class=\"hljs-params\"&gt;searchCriteria&lt;/span&gt;)&lt;/span&gt;;\n \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;ObjectUtils&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;is&lt;span class=\"hljs-constructor\"&gt;NotEmpty(&lt;span class=\"hljs-params\"&gt;mpEntityList&lt;/span&gt;)&lt;/span&gt;) { \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; mpEntityList.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;; i&amp;#43;&amp;#43;)   \n        {  \n            MstPositionsEntity mpEntity &amp;#61; mpEntityList.get(i)\n            resultList.add(mapper.map(mpEntity, &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;MstPositions&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt;));\n        }  \n    }\n    return resultList;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["这个循环怎么写成普通的for循环", ["public", " List<MstPositions> ", "findAll", "() {\n\n    List<MstPositions> resultList = ", "new", " ArrayList<>();\n    ModelMapper mapper = ModelMapperUtil.getModelMapper();\n    MstPositionRepositorySearchCriteria searchCriteria = ", "new", " MstPositionRepositorySearchCriteria();\n    \n    searchCriteria.setEnable(", "Boolean", ".", "TRUE", ");\n    searchCriteria.setOrder(BusinessContext.SELECT_DISPLAY_ORDER);\n    List<MstPositionsEntity> mpEntityList = ", "this", ".mstPositionsRepository.findByCriteria(searchCriteria);\n\n    ", "if", " (ObjectUtils.isNotEmpty(mpEntityList)) {\n        \n        mpEntityList.forEach(mpEntity -> {\n            resultList.add(mapper.map(mpEntity, MstPositions.", "class", "));\n        });\n    }\n    ", "return", " resultList;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Under windows you will need to do it a bit differently.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$runCommand = 'calc.exe';\n$WshShell = new COM(\"WScript.Shell\");\n$oExec = $WshShell-&amp;gt;Run($runCommand, 7, false);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This should help explain it &lt;a href=\"http://www.somacon.com/p395.php\" rel=\"nofollow\"&gt;http://www.somacon.com/p395.php&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://de2.php.net/manual/en/function.exec.php#43917\" rel=\"nofollow\"&gt;http://de2.php.net/manual/en/function.exec.php#43917&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在for循环中执行 - 执行多个实例", ["\n\n", "How can you run multiple exec instances from a for loop and run them separately (i.e. not have one dependent on another finishing before starting another)? I have the following code which is hopefully self explanatory:", "\n\n", "for ($i = 0;$i < 5;$i++){\n    exec('START '.$path.' '.PATH.'spawn.php \"'.\"$type,$core\".'\"');\n}\n", "\n\n", "I have looked at ", "php in background exec() function", " but it isn't a duplicate as I am using the START command and adding an & did not fix it.", "\n\n", "I have tried /B as an option but additionally this didn't work - it just ran it in the background.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二个代码中的 &lt;code class=\"language-javascript\"&gt;int i&amp;#61;1, j&amp;#61;1, k&amp;#61;1;&lt;/code&gt; 和 &lt;code class=\"language-javascript\"&gt;for&lt;/code&gt; 循环里面的问题。&lt;br /&gt;第一个代码在 &lt;code class=\"language-javascript\"&gt;i&lt;/code&gt; 为 2时&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;for (j&amp;#61;1; j &amp;lt;&amp;#61; 26; j&amp;#43;&amp;#43;)&lt;/code&gt;&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;j&lt;/code&gt; 仍是从 &lt;code class=\"language-javascript\"&gt;1&lt;/code&gt; 开始循环&amp;#xff1b;&lt;br /&gt;第二个代码在 &lt;code class=\"language-javascript\"&gt;i&lt;/code&gt; 为 2时&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;for (j; j &amp;lt;&amp;#61; 26; j&amp;#43;&amp;#43;)&lt;/code&gt;&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;j&lt;/code&gt; 是从 &lt;code class=\"language-javascript\"&gt;26&lt;/code&gt; 开始循环。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环问题，两个代码的区别", ["问题遇到的现象和发生背景", "\n", "小明用字母 A对应数字 1，B对应 2，以此类推，用 Z对应 26。对于 27以上的数字，小明用两位或更长位的字符串来对应，例如 AA对应27，AB对应28，AZ对应52，LQ对应329。", "请问2019对应的字符串是什么？", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", " ", "{\n    \n    ", "int", " i , j , k ;\n    ", "for", " (i=", "1", "; i <= ", "26", "; i++) {\n        ", "for", " (j=", "1", "; j <= ", "26", "; j++) {\n            ", "for", " (k=", "1", "; k <= ", "26", "; k++) {\n                ", "int", " t = i * ", "26", " * ", "26", " + j * ", "26", " + k;\n                ", "if", " ( t== ", "2019", ") {\n                    ", "printf", "(", "\"%d %d %d\"", ", i, j, k);\n                    \n                    ", "break", ";\n                }\n            }\n        }\n    }\n    ", "return", " ", "0", ";\n}\n", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", " ", "{\n\n    ", "int", " i=", "1", ", j=", "1", ", k=", "1", ";\n    ", "for", " (i; i <= ", "26", "; i++) {\n        ", "for", " (j; j <= ", "26", "; j++) {\n            ", "for", " (k; k <= ", "26", "; k++) {\n                ", "int", " t = i * ", "26", " * ", "26", " + j * ", "26", " + k;\n                ", "if", " (t == ", "2019", ") {\n                    ", "printf", "(", "\"%d %d %d\"", ", i, j, k);\n                    ", "break", ";\n                }\n            }\n        }\n    }\n    ", "return", " ", "0", ";\n}\n", "\n", "\n", "我想要达到的结果", "\n", "这两个代码区别在哪里？为什么结果不同？"]], "Tag": "程序设计"}
{"Answer": "\"$i\"  不用加“” $i 就可以了", "Konwledge_Point": "for循环", "Question": ["PHP中for循环设定的标志位没有增加", ["先创建10个jpg和cookie文件，分别是1.jpg,1.cookie,2.jpg......然后用下面的文件去删除，按理来说应该会把$filenum变量增加到10，但是实际却一直是0，改变原有的文件数量也是一样，不知道问题出在哪。（文件还是会全部删除，就是计数变量没有增加）", "\n<?php", "\n$filenum=0;", "\nfor ($i=0; $i <= 5000 ; $i++) ", "\n{ ", "\n    $picname=\"$i\".\".jpg\";", "\n    $cookie=\"$i\".\".cookie\";", "\n    if(file_exists($picname))", "\n    {", "\n        $filenum++;", "\n        unlink($picname);", "\n    }", "\n    if (file_exists($cookie))", "\n    {", "\n        unlink($cookie);", "\n    }", "\n}", "\nvar_dump($filenum);", "\necho \"清除\".\"$filenum\".\"个缓存\";", "\n\n", "?>"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;To be efficient:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Use a slice of pointers to Articles, then we will be moving pointers\nto structures instead of structure values.&lt;/li&gt;\n&lt;li&gt;If the order of the Articles in the list is not important, use the\nunordered algorithm; it reduces pointer movement. Otherwise, use the\nordered algorithm. In any case, minimize pointer movement.&lt;/li&gt;\n&lt;li&gt;Don't leave dangling pointers at the end of the list. The garbage\ncollector will think they are still in use; it looks at the slice\ncapacity not the slice length.&lt;/li&gt;\n&lt;li&gt;Minimize memory allocations.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For example,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\ntype Article struct {\n    FeedURL string\n    URL     string // should be unique\n    // ... more data\n}\n\n// Remove every Article from an articleList that contains url without preserving order.\nfunc unsubscribeUnordered(a []*Article, url string) []*Article {\n    for i := 0; i &amp;lt; len(a); i++ {\n        if a[i].FeedURL == url {\n            a[len(a)-1], a[i], a = nil, a[len(a)-1], a[:len(a)-1]\n            i--\n        }\n    }\n    return a\n}\n\n// Remove every Article from an articleList that contains url while preserving order.\nfunc unsubscribeOrdered(a []*Article, url string) []*Article {\n    j := 0\n    for i := 0; i &amp;lt; len(a); i++ {\n        if a[i].FeedURL == url {\n            continue\n        }\n        if i != j {\n            a[j] = a[i]\n        }\n        j++\n    }\n    for k := j; k &amp;lt; len(a); k++ {\n        a[k] = nil\n    }\n    return a[:j]\n}\n\nfunc NewArticleList() []*Article {\n    return []*Article{\n        &amp;amp;Article{\"http://blog.golang.org/feed.atom\", \"http://blog.golang.org/race-detector\"},\n        &amp;amp;Article{\"http://planet.python.org/rss20.xml\", \"http://archlinux.me/dusty/2013/06/29/creating-an-application-in-kivy-part-3/\"},\n        &amp;amp;Article{\"http://planet.python.org/rss20.xml\", \"http://feedproxy.google.com/~r/cubicweborg/~3/BncbP-ap0n0/2957378\"},\n        // ... much more examples\n    }\n}\n\nfunc PrintArticleList(a []*Article) {\n    fmt.Print(\"[\")\n    for _, e := range a {\n        fmt.Printf(\"%+v\", *e)\n    }\n    fmt.Println(\"]\")\n}\n\nfunc main() {\n    PrintArticleList(NewArticleList())\n    ao := unsubscribeOrdered(NewArticleList(), \"http://planet.python.org/rss20.xml\")\n    PrintArticleList(ao)\n    auo := unsubscribeUnordered(NewArticleList(), \"http://planet.python.org/rss20.xml\")\n    PrintArticleList(auo)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[{FeedURL:http://blog.golang.org/feed.atom URL:http://blog.golang.org/race-detector}{FeedURL:http://planet.python.org/rss20.xml URL:http://archlinux.me/dusty/2013/06/29/creating-an-application-in-kivy-part-3/}{FeedURL:http://planet.python.org/rss20.xml URL:http://feedproxy.google.com/~r/cubicweborg/~3/BncbP-ap0n0/2957378}]\n\n[{FeedURL:http://blog.golang.org/feed.atom URL:http://blog.golang.org/race-detector}]\n[{FeedURL:http://blog.golang.org/feed.atom URL:http://blog.golang.org/race-detector}]\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何在for循环中修改分片？", ["\n\n", "I've got a slice of articles in my reading list. Each Article has the attribute \"FeedURL\" that has the URL of the feed the article came from. When I unsubscribe from a feed, I want to be able to remove every Article that contains that Feed's URL.", "\n\n", "type Article struct {\n    FeedURL string\n    URL     string // should be unique\n    // ... more data\n}\n\nfunc unsubscribe(articleList []Article, url string) []Article {\n   // how do I remove every Article from articleList that contains url?\n}\n\nfunc main() {\n    myArticleList := []Article{\n        Article{\"http://blog.golang.org/feed.atom\", \"http://blog.golang.org/race-detector\"},\n        Article{\"http://planet.python.org/rss20.xml\", \"http://archlinux.me/dusty/2013/06/29/creating-an-application-in-kivy-part-3/\"},\n        Article{\"http://planet.python.org/rss20.xml\", \"http://feedproxy.google.com/~r/cubicweborg/~3/BncbP-ap0n0/2957378\"},\n        // ... much more examples\n    }\n\n    myArticleList = unsubscribe(myArticleList, \"http://planet.python.org/rss20.xml\")\n\n    fmt.Printf(\"%+v\", myArticleList)\n}\n", "\n\n", "What is the efficient way of solving this problem?", "\n\n", "At first my code looked like this for unsubscribe:", "\n\n", "func unsubscribe(articleList []Article, url string) []Article {\n    for _, article := range articleList {\n        if article.FeedURL == url {\n            articleList = append(articleList[:i], articleList[i+1:]...)\n        }\n    }\n    return articleList\n}\n", "\n\n", "But then I realized that this would change the slice and make the for loop unpredictable.", "\n\n", "What is an efficient and pretty way to accomplish this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're printing the channels info, not the data it contains. You don't want a loop, you just want to receive then print.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   json := &amp;lt;-index\n   json.NewEncoder(os.Stdout).Encode(json)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now I do I need to point out, that code is not going to block. If you want to keep reading until all work is done you need some kind of locking/coordination mechanism.&lt;/p&gt;\n\n&lt;p&gt;You'll often see things like &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for {\n   select {\n        case json := &amp;lt;-jsonChannel:\n            // do stuff\n        case &amp;lt;-abort:\n            // get out of here \n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To deal with that. Also, just fyi you're initializing your channel with a default capacity (meaning it's a buffered channel) which is pretty odd. I'd recommend reviewing some tutorials on the topic cause overall your design needs some work actually be an improvement of non-concurrent implementations. Lastly you can find libraries to abstract some of this work for you and most people would probably recommend you do. Here's an example; &lt;a href=\"https://github.com/lytics/squaredance\" rel=\"nofollow\"&gt;https://github.com/lytics/squaredance&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中的goroutine通道", ["\n\n", "My ", "main", " function reads json from a file, unmarshals it into a struct, converts it into another struct type and spits out formatted JSON through stdout.", "\n\n", "I'm trying to implement goroutines and channels to add concurrency to my ", "for", " loop.", "\n\n", "func main() {\n    muvMap := map[string]string{\"male\": \"M\", \"female\": \"F\"}\n    fileA, err := os.Open(\"serviceAfileultimate.json\")\n    if err != nil {\n        panic(err)\n    }\n    defer fileA.Close()\n\n    data := make([]byte, 10000)\n    count, err := fileA.Read(data)\n    if err != nil {\n        panic(err)\n    }\n\n    dataBytes := data[:count]\n\n    var servicesA ServiceA\n    json.Unmarshal(dataBytes, &servicesA)\n    var servicesB = make([]ServiceB, servicesA.Count)\n    goChannels := make(chan ServiceB, servicesA.Count)\n\n    for i := 0; i < servicesA.Count; i++ {\n        go func() {\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Address\").SetString(Merge(&servicesA.Users[i].Location))\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Date_Of_Birth\").SetString(dateCopyTransform(servicesA.Users[i].Dob))\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Email\").SetString(servicesA.Users[i].Email)\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Fullname\").SetString(Merge(&servicesA.Users[i].Name))\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Gender\").SetString(muvMap[servicesA.Users[i].Gender])\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Phone\").SetString(servicesA.Users[i].Cell)\n            reflect.ValueOf(&servicesB[i]).Elem().FieldByName(\"Username\").SetString(servicesA.Users[i].Username)\n            goChannels <- servicesB[i]\n        }()\n    }\n\n    for index := range goChannels {\n        json.NewEncoder(os.Stdout).Encode(index)\n    }\n\n}\n", "\n\n", "It compiles but is returning messages like:", "\n\n", "goroutine 1 [chan receive]: main.main() C://.....go.94 +0x55b.\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.puts是输出字符串的&amp;#xff0c;字符串是以‘\\0’作为结束符的&amp;#xff0c;而字符数组并没有这个结束符。&lt;br /&gt;2.你在往数组a中存储数据是存储的整数&amp;#xff0c;%d就是用来输出整数的&amp;#xff0c;%c是输出字符的&amp;#xff0c;你可以参考一下ASCII码表看下字符对应的整数值&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请问为什么不能用puts输出字符串，用for循环输出就可以呢，还有字符数组为什么用%d输出就是数字，用%c反而达不到目的呢？", ["#include<stdio.h>", "int main()", "{", "int i;", "char a[100];", "for(i=0;i<=99;i++)", "{", "    a[i]=i;", "}", "//for(i=0;i<=99;i++)", "//{printf(\"%d \",a[i]);}", "puts(a);", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;无论是什么语言的FOR都一样道理&amp;#xff0c;赋初值&amp;#xff0c;设条件&amp;#xff0c;执行循环量&amp;#xff0c;就这三句。变通的就是可以把三句分别移动到别处写。如FOR&amp;#xff08;&amp;#xff1b;&amp;#xff1b;&amp;#xff09;FOR&amp;#xff08;&amp;#xff1b;I《10&amp;#xff1b;&amp;#xff09;FOR&amp;#xff08;I&amp;#61;0&amp;#xff1b;&amp;#xff1b;&amp;#xff09;FOR&amp;#xff08;&amp;#xff1b;&amp;#xff1b;I&amp;#43;&amp;#43;&amp;#xff09;等变异形式。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["c#中如何很好的理解for循环", ["for循环也会写，就是不是很理解。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use arrays to collect all the data and then comma separate them at the end of each loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 0; $i &amp;lt; $arraoy['numberOfRooms']; $i++) {\n    $prefix = \"room-$i\";\n\n    $values = array($arraoy[\"$prefix-adult-total\"]);\n\n    for($j = 0; $j &amp;lt; $arraoy[\"$prefix-child-total\"]; $j++) {\n        $values[] = $arraoy[\"$prefix-child-$j-age\"];\n    }\n    echo 'room' . ($i + 1) . '=' . join(',', $values), '&amp;lt;br&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何在for循环之外获取值？  [关闭]", ["\n\n", "I am sending a hotel list request. My URL is:", "\n\n", "&numberOfRooms=2&room-0-adult-total=1&room-0-child-total=1&room-1-adult-total=1&room-1-child-total=0&room-0-child-0-age=2&button=search", "\n\n", "I need a result for this method:", "\n\n", "\n&room1=2,3,5    (2 Adults, 2 Children Ages 3 & 5)\n&room2=2,10  (2 Adults, 1 Children Ages 10)\n", "\n\n", "How can I get this output?", "\n\n", "Here is my code:", "\n\n", "for ($i=0;$i<$arraoy[numberOfRooms];$i++)\n{\n    echo\"room_adut$i=\";\n    echo $adult[] = $arraoy['room-'.$i.'-adult-total'];\n    $child =$arraoy['room-'.$i.'-child-total'];\n    echo\",\";\n\n    for($j=0;$j<$child =$arraoy['room-'.$i.'-child-total'];$j++)\n    {\n        echo $age[]= $arraoy['room-'.$i.'-child-'.$j.'-age'];\n        echo\",\";\n    }\n\n    echo\"<br>\";\n}\n", "\n\n", "I can print the inner for-loop and the result is correct. But how can I get the value outside of the for-loop?", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n import java.sql.Connection;\r\nimport java.sql.DriverManager;\r\n\r\npublic class DBHelper {\r\n\t\r\n\tprivate static final String driver = \"com.mysql.jdbc.Driver\";//数据库驱动\r\n\tprivate static final String url = \"jdbc:mysql://localhost:3306/gumysql?useUnicon=true&amp;characterEncoding=UTF-8\";\r\n\tprivate static final String username = \"root\";\r\n\tprivate static final String password = \"root\";\r\n\t\r\n\tstatic\r\n\t{\r\n\t\ttry \r\n\t\t{\r\n\t\t\tClass.forName(driver);\r\n\t\t}\r\n\t\tcatch (Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static Connection conn = null;\r\n\t//单例模式返回数据库连接\r\n\tpublic static Connection getConnection() throws Exception\r\n\t{\r\n\t\tif(conn == null)\r\n\t\t{\r\n\t\t\tconn = DriverManager.getConnection(url, username, password);\r\n\t\t\treturn conn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn conn;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n\r\n```\r\n import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ReadDBPage {\r\n\r\n    /**\r\n     * @param pageNo   表示第几页\r\n     * @param pageSize 表示每页的数量\r\n     * @return\r\n     */\r\n    public List&lt;String&gt; query(int pageNo, int pageSize) {\r\n        //计算起始值，比如假如每页条数为5，第一页是0 - 4，第二页是5 - 9;。。。。\r\n        int pageStart = (pageNo - 1) * pageSize;\r\n        Connection conn = null;\r\n        PreparedStatement stmt = null;\r\n        ResultSet rs = null;\r\n        String sql = \" select * from compare limit ?,?; \";\r\n        List&lt;String&gt; mapList = new ArrayList&lt;String&gt;();\r\n        try {\r\n            conn = DBHelper.getConnection();\r\n            stmt = conn.prepareStatement(sql);\r\n            //把参数设置到 ?号里面\r\n            stmt.setInt(1, pageStart);\r\n            stmt.setInt(2, pageSize);\r\n            rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                mapList.add(rs.getString(\"id\"));\r\n            }\r\n            return mapList;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        } finally {\r\n            if (rs != null) {\r\n                try {\r\n                    rs.close();\r\n                    rs = null;\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            if (stmt != null) {\r\n                try {\r\n                    stmt.close();\r\n                    stmt = null;\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n```\r\n import java.util.List;\r\n\r\npublic class Bootstrap {\r\n\r\n    public static void main(String args[]){\r\n        ReadDBPage read = new ReadDBPage();\r\n\r\n        //查询第1页的数据，每页数据为5条\r\n        List&lt;String&gt; strList = read.query(1,5);\r\n\r\n        //查询第2页的数据，每页数据为5条\r\n        List&lt;String&gt; strList2 = read.query(2,5);\r\n\r\n        //查询第2页的数据，每页数据为4条\r\n        List&lt;String&gt; strList3 = read.query(2,4);\r\n\r\n        System.out.println(strList);\r\n\r\n        System.out.println(strList2);\r\n\r\n        System.out.println(strList3);\r\n\r\n    }\r\n}\r\n\r\n```\r\n还拿你昨天的数据库举例\r\n![图片说明](https://img-ask.csdn.net/upload/201808/10/1533890216_144479.png)\r\n\r\n运行结果为\r\n![图片说明](https://img-ask.csdn.net/upload/201808/10/1533890254_532169.png)", "Konwledge_Point": "for循环", "Question": ["java循环读取mysql并存入java集合里", ["如果数据库数据过大，用java读取数据库，分页存入集合，每分页一次集合就被调用一次，这个java实现的方式是怎么样的？直接", "\n直接在sql语句上面加个for循环吗？for(){", "\nString sql = \"SELECT ID,name, url From websites limit \" + (i * 2) + \",2;\";......}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以&amp;#xff0c;iterator循环基本都可以使用其他循环实现&lt;br /&gt;for&amp;#xff08;int i&amp;#61;0;i&amp;lt;c1.getAllStudents ( ).size;i&amp;#43;&amp;#43;&amp;#xff09;{&lt;!-- --&gt;&lt;br /&gt;System.out.println ( &amp;#34; \\t&amp;#34; &amp;#43; c1.getAllStudents ( ).get(i));&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["请问没学过iterator，这里可以用for循环写吗，具体怎么做", ["这是一个关于Java多对多的问题，题目主要是解决学生和课程的关系，要求输出每个学生所选的所有的课程列表和每个课程的所有选课学生的列表", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i是int类型.&lt;br /&gt;int类型取值范围为-2147483648 到 2147483647。&lt;br /&gt;循环中当 i&amp;#61;2147483647时&amp;#xff0c;再i&amp;#43;&amp;#43;对i加1&amp;#xff0c;就超出int型取值范围了&amp;#xff0c;&lt;br /&gt;2147483647&amp;#43;1会变成负数 -2147483648, 下次循环i再加1就是-2147483647&lt;br /&gt;,之后循环到0,再之后变回正数,再到2147483647之后又会变成负数 -2147483648 ,周而复始.&lt;br /&gt;你循环条件是i &amp;lt;&amp;#61; 2147483647, 就只有大于2147483647才能结束循环.你永远达不到这个条件就是死循环&lt;br /&gt;解决办法&amp;#xff1a;循环条件改成i &amp;lt; 2147483647 &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2147483647&lt;/span&gt;; i&amp;#43;&amp;#43;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者i改成long int类型.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2147483647&lt;/span&gt;; i&amp;#43;&amp;#43;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环", "Question": ["这里for循环为什么显示会无限循环，而且结果出现一个负数？", ["我写的代码是这样的，", "但是运行会无限循环1而且有俩个结果，其中一个还是负数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;su &amp;#61; input()这行执行后&amp;#xff0c;输入的数据都会当做字符串放到li中&amp;#xff0c;但是遍历li的时候是按int类型的1&amp;#xff0c;2&amp;#xff0c;3进行比较&amp;#xff0c;肯定不会相等的&lt;br /&gt;&lt;strong&gt;有帮助的话&amp;#xff0c;请采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["类似这种python中的for循环总是输出不了东西呢？", ["想问一下，为什么这个代码中总是输出不了呢？", "\n", "\nx = int(", "input", "())\n", "li", " = ", "[]", "\n", "for", " ", "i", " ", "in", " range(x):\n    su = ", "input", "()\n    ", "li", ".append", "(su)\n", "for", " j ", "in", " ", "li", " :\n    ", "if", " j", "[0]", " == ", "1", ":\n        print(j", "[2]", ")\n    elif j", "[0]", " == ", "2", ":\n        j", ".sort", "()\n        print(j", "[0]", ")\n    elif j", "[0]", " == ", "3", ":\n        j", ".sort", "()\n        print(j", ".remove", "(j", "[0]", "))\n        break\n"]], "Tag": "程序设计"}
{"Answer": "变量要用[]操作符，不能用点，用点必须是明确的属性，你那样就是取keykey这个属性值了，不是keykey变量存储的属性名称的值\r\n\r\n\r\n\r\n```\r\n var keykey = key;\r\nfor (aa = 0; aa &lt; data.Table1.length; aa++) {\r\nvar c = data.Table1[aa][keykey];/////////\r\n```\r\n而且你的data到底是什么结构的， 你这个变量实在是乱套一通", "Konwledge_Point": "for循环", "Question": ["for循环获取到json的key，再拿key去取值。取不到。求大佬帮忙！", ["var myarray = new Array();", "\n                var num = 0;", "\n                var aa;//二维数组长度", "\n                var jsons;", "\n                for (var i = 0; i < 1; i++) {", "\n                    jsons = data.Table1[i];", "\n                }", "\n                for (var key in jsons) {", "\n                    myarray[num] = new Array();", "\n                    var keykey = key;", "\n                    for (aa = 0; aa < data.Table1.length; aa++) {", "\n                        var c = data.Table1[aa].keykey;", "\n                        var bbbb = JSON.stringify(c);", "\n                        myarray[num][aa] = JSON.stringify(c);                    }", "\n                    num++;", "\n                }", "\n                for (var cc = 0; cc < myarray.length; cc++) {", "\n                    for (var dd = 0; dd <= aa;dd++){", "\n                    }", "\n                }", "\n        这是我的jquery代码！", "\n        Table1\":[{\"date1\":\"2016-12\",\"00000001\":0,\"00000002\":0,\"00000003\":0,\"00000004\":0,\"00000005\":0,\"00000006\":0,\"00000007\":1,\"00000008\":0}", "\ndata.Table1[aa].keykey的时候取不到值，data.Table1[aa].date1的时候能取到值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;84&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;};\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i;j&amp;#43;&amp;#43;)\n       {\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[j]&amp;gt;a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n           {\n              &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61;a[j];\n              a[j]&amp;#61;a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n              a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;t;\n           }\n       }\n    }\n \n                          &lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//for(int&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["我想知道哪里错了，第一个for循环就开始报错", ["#include <stdio.h>", "int main()", "{", "    int a[10]={1,3,6,8,5,7,4,84,15,22};", "    for (int i=0;i<9;i++)", "     {", "         for(int j=0;j<10-1-i;j++)", "         {", "             if(a[j]>a[j+1])", "             {", "                 int t=a[j];", "                 a[j]=a[j+1];", "                 a[j+1]=t;", "\n", "         }\n     }\n }\n \n", "\n", "}", "for(int=0;i<10;i++)", "{", "    printf(\"%d \",a[i]);", "}", "return 0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;不用循环的话&amp;#xff0c;可以考虑pdist来计算。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;positionplus &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;); range1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;; range2&amp;#61;&lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;%因为题主没给数据我这里随机生成一些&amp;#xff0c;便于调试&lt;/span&gt;\nD &amp;#61; squareform(pdist(positionplus, &lt;span class=\"hljs-string\"&gt;&amp;#39;squaredeuclidean&amp;#39;&lt;/span&gt;));&lt;span class=\"hljs-comment\"&gt;%以距离平方和来计算距离矩阵&lt;/span&gt;\nD &amp;#61; &lt;span class=\"hljs-built_in\"&gt;triu&lt;/span&gt;(D);&lt;span class=\"hljs-comment\"&gt;%获取上三角&lt;/span&gt;\n[&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;find&lt;/span&gt;(D&amp;gt;range1^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;amp; D&amp;lt;range2^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%获取满足条件的两个点的编号i和j&lt;/span&gt;\nposition1 &amp;#61; positionplus(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,:);\nposition2 &amp;#61; positionplus(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;,:);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["matlab不用for循环怎么做？", ["k", "=", "0", ";c=", "0", ";\n", "for", " i=", "1", ":l-", "1", "\n    ", "for", " j=i+", "1", ":l\n        ", "k", "=k+", "1", ";\n        ", "distance", "(k)=sqrt((positionplus(i,", "1", ")-positionplus(j,", "1", "))^", "2", "+(positionplus(i,", "2", ")-positionplus(j,", "2", "))^", "2", "+(positionplus(i,", "3", ")-positionplus(j,", "3", "))^", "2", ");\n        ", "if", "(distance(k)>range1 && distance(k)<range2)\n            ", "c", "=c+", "1", ";\n            ", "a", "=[positionplus(i,", "1", "),positionplus(i,", "2", "),positionplus(i,", "3", ")];\n            ", "b", "=[positionplus(j,", "1", "),positionplus(j,", "2", "),positionplus(j,", "3", ")];\n            ", "position1", "(c,", "1", ")=a(", "1", ",", "1", ");position1(c,", "2", ")=a(", "1", ",", "2", ");position1(c,", "3", ")=a(", "1", ",", "3", ");\n            ", "position2", "(c,", "1", ")=b(", "1", ",", "1", ");position2(c,", "2", ")=b(", "1", ",", "2", ");position2(c,", "3", ")=b(", "1", ",", "3", ");\n        ", "end", "\n    ", "end", "\n", "end", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改成这样试试&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; put&lt;span class=\"hljs-constructor\"&gt;Plane()&lt;/span&gt;{\n&lt;span class=\"hljs-comment\"&gt;//代码编写区域&lt;/span&gt;\n     &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-pattern-match\"&gt;&lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt;i&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;5){\n                set&lt;span class=\"hljs-constructor\"&gt;Plane(&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;110,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;90,&lt;span class=\"hljs-string\"&gt;&amp;#34;res/enemy_03.png&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n                \n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                set&lt;span class=\"hljs-constructor\"&gt;Plane(&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;110,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;90,&lt;span class=\"hljs-string\"&gt;&amp;#34;res/enemy_04.png&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n            }\n        }\n    }\n}\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["js for循环问题不清楚哪里做错了", ["\n", "\n", "\n", "function", " put", "Plane()", "{\n", "//代码编写区域", "\n     ", "for", "(i=", "0", ";i<", "6", ";i++){\n        ", "for", "(j=", "0", ";j<", "3", ";j++){\n            ", "if", "(j!=", "2", "&&i!=", "5", "){\n                set", "Plane(", "j", "*", "110,", "i", "*", "90,", "\"res/enemy_04.png\"", ")", ";\n                \n            }", "else", "{\n                set", "Plane(", "j", "*", "110,", "i", "*", "90,", "\"res/enemy_03.png\"", ")", ";\n            }\n            ", "if", "(i==", "5", "){\n                set", "Plane(", "j", "*", "110,", "i", "*", "90,", "\"res/enemy_03.png\"", ")", ";\n            }\n            \n        }\n    }\n}\n\nput", "Plane()", ";\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;double s&amp;#61;0&amp;#xff0c;循环中累加时间&amp;#xff0c;最后/3完事。&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环里计算得到的数据应该如何在for循环以外保存并进行计算", ["做一个对比两个函数运算效率的程序，要分别将两个函数执行三次所用时间求平均值然后比较。", "我想的时候弄个数组然后把每次的时间存进数组里，但是感觉有点麻烦，不知道有没有更优解"]], "Tag": "程序设计"}
{"Answer": "Student student=(Student)SpringContextUtil.getBean(\"student\");\r\n我觉得真是闲着无聊了才这样做。。。", "Konwledge_Point": "for循环", "Question": ["spring中for循环创建bean疑问", ["Spring配置文件内容片断：", " <!-- bean -->", "  <!-- action -->", "\n\n", "Struts2中的action文件内容片断：", "\nprivate List listStudent;", "\nfor(int i=0; i<list1.size(); i++){", "\n  Studnet student = new Student();", "\n  student.setName(\"name1\");", "\n  listStudent.add(i,student);", "\n}", "\n\n", "疑问：listStudent每次add时都是放入新的student实例，Studnet类已经被Spring管理了，肯定是不需要每次都new一个实例，求解决办法"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;key&lt;/code&gt; is just a variable name.  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for key in d:\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will simply loop over the keys in the dictionary, rather than the keys and values.  To loop over both key and value you can use the following:&lt;/p&gt;\n\n&lt;p&gt;For Python 2.x:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for key, value in d.iteritems():\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For Python 3.x:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for key, value in d.items():\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To test for yourself, change the word &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;poop&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;For Python 3.x, &lt;code&gt;iteritems()&lt;/code&gt; has been replaced with simply &lt;code&gt;items()&lt;/code&gt;, which returns a set-like view backed by the dict, like &lt;code&gt;iteritems()&lt;/code&gt; but even better. \nThis is also available in 2.7 as &lt;code&gt;viewitems()&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;The operation &lt;code&gt;items()&lt;/code&gt; will work for both 2 and 3, but in 2 it will return a list of the dictionary's &lt;code&gt;(key, value)&lt;/code&gt; pairs, which will not reflect changes to the dict that happen after the &lt;code&gt;items()&lt;/code&gt; call. If you want the 2.x behavior in 3.x, you can call &lt;code&gt;list(d.items())&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用 for 循环遍历字典          ", ["\n\n", "I am a bit puzzled by the following code:", "\n\n", "d = {'x': 1, 'y': 2, 'z': 3} \nfor key in d:\n    print key, 'corresponds to', d[key]\n", "\n\n", "What I don't understand is the ", "key", " portion. How does Python recognize that it needs only to read the key from the dictionary? Is ", "key", " a special word in Python? Or is it simply a variable?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;向列表中添加元素&amp;#xff0c;用append()方法。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def get_HOSID():\n    url&amp;#61;XXX\n    resp&amp;#61;requests.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(url).&lt;span class=\"hljs-built_in\"&gt;json&lt;/span&gt;()\n    hos_id&amp;#61;[]\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(resp[&lt;span class=\"hljs-string\"&gt;&amp;#34;data&amp;#34;&lt;/span&gt;])):\n        hos_id.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(resp[&lt;span class=\"hljs-string\"&gt;&amp;#34;data&amp;#34;&lt;/span&gt;][i][&lt;span class=\"hljs-string\"&gt;&amp;#39;HOS_MAT_ID&amp;#39;&lt;/span&gt;])\n    return hos_id\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["怎么获取函数里for循环遍历的值呢", ["整段代码是这样的，我只能返回一个值，我想获取到hos_id所有的值", "\n", "def get_HOSID():\n    ", "url", "=XXX\n    ", "resp", "=requests.get(url).json()\n    hos_id=[]\n    ", "for", " i ", "in", " range(len(resp[", "\"data\"", "])):\n        ", "hos_id", "=resp[", "\"data\"", "][i][", "'HOS_MAT_ID'", "]\n    return hos_id\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;colors&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i&amp;lt;len(colors):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; colors[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;not black&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;i&amp;#43;1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/456312099536196.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["Python  while循环代替for循环，二维数组切片问题", ["\n", "初学Python，求大佬解答一下"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try a variable variable:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for ($i = 1; $i &amp;lt;= 3; $i++) \n{\n    $dayVar = \"day_\".$i;\n    $dayVarCount = $dayVar.\"_count\";\n    $$dayVarCount = $row[$$dayVar];\n    echo $$dayVar.': '.$$dayVarCount.'&amp;lt;p&amp;gt;'; // Edited.\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This basically uses a string to reference a variable by its name.&lt;/p&gt;\n\n&lt;p&gt;Just think of it this way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$variable = 'hello';\n\n$string = 'variable';\n\necho $$string;\n// Is the same thing as:\necho $variable;\n\n// Because you can thing of $$string as ${$string} ---&amp;gt; $variable when {$string} is interpreted into 'variable'\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/language.variables.variable.php\" rel=\"nofollow\"&gt;http://php.net/manual/en/language.variables.variable.php&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用for循环从MySQL查询中逐步选择值", ["\n\n", "I am trying to use a for loop to select an incremental value with a MySQL query. I have included sample code below:", "\n\n", "<?php\n\n$day_1=\"sep_28\";\n$day_2=\"sep_29\";\n$day_3=\"sep_30\";\n\n$query = mysql_query(\"SELECT * FROM table WHERE id = '$id'\");\n\nwhile ($row = mysql_fetch_assoc($query))\n{\nfor ($i = 1; $i <= 3; $i++) \n    {\n        $dayVar = \"day_\".$i;\n        //$dayVarCount = $dayVar.\"_count\"; // Don't really need this anymore, so removed.\n        $dayVarCount = $row[$$dayVar];\n        echo \"$$dayVar.': '.$dayVarCount<p>\"; // Edited.\n    }      \n}\n?>\n", "\n\n", "I think I am getting close, but when I run the code my page is showing this:", "\n\n", "$day_1.': '.0", "\n\n", "$day_2.': '.2", "\n\n", "$day_3.': '.5", "\n\n", "Any additional recommendations? Thanks for the great help!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Short Answer&lt;/strong&gt; : Channels uses mutex. More channels means more  &lt;code&gt;futex&lt;/code&gt; system calls &lt;/p&gt;\n\n&lt;p&gt;Here is the strace on programs .&lt;/p&gt;\n\n&lt;p&gt;The code with 7 select statements waiting for 7 &lt;code&gt;channels&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 98.20    0.424434          13     33665      6061 futex\n  1.09    0.004731          10       466           sched_yield\n  0.47    0.002038          30        67           select\n  0.11    0.000484           4       114           rt_sigaction\n  0.05    0.000203           5        41         8 rt_sigreturn\n  0.03    0.000128           9        15           mmap\n  0.02    0.000081          27         3           clone\n  0.01    0.000052           7         8           rt_sigprocmask\n  0.01    0.000032          32         1           openat\n  0.00    0.000011           4         3           setitimer\n  0.00    0.000009           5         2           sigaltstack\n  0.00    0.000008           8         1           munmap\n  0.00    0.000006           6         1           execve\n  0.00    0.000006           6         1           sched_getaffinity\n  0.00    0.000004           4         1           arch_prctl\n  0.00    0.000004           4         1           gettid\n  0.00    0.000000           0         2         2 restart_syscall\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.432231                 34392      6071 total\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The code with 3 select statements waiting for 3 &lt;code&gt;channels&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 90.47    0.118614          11     10384      1333 futex\n  6.64    0.008704          11       791           sched_yield\n  2.06    0.002706          23       120           select\n  0.39    0.000512           4       114           rt_sigaction\n  0.14    0.000181           8        22         2 rt_sigreturn\n  0.10    0.000131           9        15           mmap\n  0.05    0.000060          60         1           openat\n  0.04    0.000057          19         3           setitimer\n  0.04    0.000051          17         3           clone\n  0.03    0.000045           6         8           rt_sigprocmask\n  0.01    0.000009           9         1           execve\n  0.01    0.000009           5         2           sigaltstack\n  0.01    0.000009           9         1           sched_getaffinity\n  0.01    0.000008           8         1           munmap\n  0.01    0.000007           7         1           arch_prctl\n  0.00    0.000005           5         1           gettid\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.131108                 11468      1335 total\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As it is clear here the number of &lt;code&gt;futex&lt;/code&gt; calls are proportional to the number of channels and futex system calls are the reason for this performance .&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Here is explanation on that&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You may find the channel implementation in the following file &lt;a href=\"https://github.com/golang/go/blob/4fc9565ffce91c4299903f7c17a275f0786734a1/src/runtime/chan.go\" rel=\"noreferrer\"&gt;src/runtime/chan.go&lt;/a&gt; . &lt;/p&gt;\n\n&lt;p&gt;Here is &lt;code&gt;hchan&lt;/code&gt; the struct for a channel&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type hchan struct {\n    qcount   uint           // total data in the queue\n    dataqsiz uint           // size of the circular queue\n    buf      unsafe.Pointer // points to an array of dataqsiz elements\n    elemsize uint16\n    closed   uint32\n    elemtype *_type // element type\n    sendx    uint   // send index\n    recvx    uint   // receive index\n    recvq    waitq  // list of recv waiters\n    sendq    waitq  // list of send waiters\n    lock     mutex\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There's a Lock embedded structure that is defined in runtime2.go and that serves as a mutex (&lt;code&gt;futex&lt;/code&gt;) or semaphore depending on the OS. &lt;/p&gt;\n\n&lt;p&gt;So with increase in number of channels more &lt;code&gt;futex system call&lt;/code&gt; calls be there and that would affect performance&lt;/p&gt;\n\n&lt;p&gt;You may read more about these in : &lt;a href=\"http://man7.org/linux/man-pages/man2/futex.2.html\" rel=\"noreferrer\"&gt;futex(2)&lt;/a&gt;,&lt;a href=\"https://docs.google.com/document/d/1yIAYmbvL3JxOKOjuCyon7JhW4cSv1wy5hC0ApeGMV9s/pub\" rel=\"noreferrer\"&gt;Channels in steroids&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中golang select语句的性能", ["\n\n", "I make a test to see the performance of select, and found the result is not\ngood. The go version is 1.7.3", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"runtime/pprof\"\n    \"time\"\n)\n\nvar serverDone = make(chan struct{})\nvar serverDone1 = make(chan struct{})\nvar serverDone2 = make(chan struct{})\nvar serverDone3 = make(chan struct{})\nvar serverDone4 = make(chan struct{})\nvar serverDone5 = make(chan struct{})\n\nfunc main() {\n    f, err := os.Create(\"cpu.pprof\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    pprof.StartCPUProfile(f)\n    defer pprof.StopCPUProfile()\n\n    for i := 0; i < 1000; i++ {\n        go messageLoop()\n    }\n    <-time.After(10 * time.Second)\n    close(serverDone)\n    fmt.Println(\"finished\")\n}\n\nfunc messageLoop() {\n    var ticker = time.NewTicker(100 * time.Millisecond)\n    defer ticker.Stop()\n    var counter = 0\n    for {\n        select {\n        case <-serverDone:\n            return\n        case <-serverDone1:\n            return\n        // case <-serverDone2:\n        //  return\n        // case <-serverDone3:\n        //  return\n        // case <-serverDone4:\n        //  return\n        // case <-serverDone5:\n        //  return\n        case <-ticker.C:\n            counter += 1\n        }\n    }\n}\n", "\n\n", "When run the above code, you will find the CPU up(in my book, about 5%) each time when a serverDone case is added.", "\nWhen all of the serverDone case are removed, the CPU is about 5%, It's not good.", "\nIf I turn globally locked object(like serverDone) to locally, the performance is better, but still not good enough.", "\n\n", "Who knows is there anything wrong in my case, or what is the correct usage of select statement?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的对象指定的不对,wx:for之后还有 wx:key&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/539519099826135.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["微信小程序for循环怎么用item", ["\nwxml\n\n      ", "<", "swiper-item", " ", "wx:for", "=", "\"", "{{", "banneritem", "}}", "\"", ">", "\n        ", "<", "image", " ", "src", "=", "\"", "{{", "bannerurl", "}}", "\"", ">", "</", "image", ">", "\n      ", "</", "swiper-item", ">", "\n\njavascript\n\nif (res.data.code == 0) {\n          // console.log(res);\n          for(let i =0;i< res.data.messge.length ; i++){\n            urlImg += res.data.messge[i].For_img;\n          }\n          _this.setData({\n            banneritem : res.data.messge.length,\n          })\n          console.log(urlImg);\n        }", "\n", "\n", "代码如上，我有4个数据，的确是遍历出来了4个内容，但图片全部是一样的，全部是第一张，微信小程序好像没有[i++]这个，我查了网上方法都是用item，但都没看懂，请指点"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$flr_arr = [];\n\n$max_val = 2;\nfor ($i = 0; $i &amp;lt; $max_val; $i++) {\n  $flr_arr[][key] = 'fl_' . $i . '_sq';\n}\n\n$output = \"&amp;lt;pre&amp;gt;\";\n\nforeach ($flr_arr as $i =&amp;gt; $flr_arr_item) {\n  $output .= print_r($flr_arr_item, true);\n  if($i &amp;lt; count($flr_arr)-1){\n    $output = substr($output, 0, -1) . \",\n\";\n  }\n}\n$output .= \"&amp;lt;/pre&amp;gt;\";\n\necho $output;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The output:&lt;/p&gt;\n\n&lt;pre&gt;\nArray\n(\n    [key] =&amp;gt; fl_0_sq\n),\nArray\n(\n    [key] =&amp;gt; fl_1_sq\n)\n&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["在php中使用for循环构建关联数组", ["\n\n", "I am trying to create an associative array using php. My desired output is ", "\n\n", "Array\n(\n     [key] => fl_0_sq\n),\nArray\n(\n     [key] => fl_1_sq\n)\n", "\n\n", "The code is ", "\n\n", "  $max_val = 2;  \n  for($i=0; $i<$max_val; $i++)\n  {\n        $flr_arr .= \"array('key' => 'fl_\".$i.\"_sq'),\";      \n  }\n  print_r($flr_arr);\n", "\n\n", "Output is", "\n\n", "array('key' => 'fl_0_sq'),array('key' => 'fl_1_sq'),\n", "\n\n", "Now the issue is that it has become a string instead of an array. Is it at all possible to create a array structure like the desired output. Any help is highly appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;for ($i = 1; isset($house[$i-1]); $i++) {\n   echo $i;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Like this?&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["计算for循环中的迭代次数", ["\n\n", "Currently have this.", "\n\n", "for ($i = 0; isset($house[$i]); $i++) {\n     print $i++;\n}\n", "\n\n", "and it returns something like this. ", "0,1,2,3,4,5,6,7,8,9", " I want it to return that same format, but replace the initial ", "0", " with a ", "1", " then count forward from there, how can I achieve this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There are many ways to make each iteration executed asynchronously. One of them is by taking advantage of goroutine and channel (like what you desired).&lt;/p&gt;\n\n&lt;p&gt;Please take a look at example below. I think it'll be easier if I put the explanations as comments on each part of the code.&lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;// prepare the channel for data transporation purpose between goroutines and main routine\nresChan := make(chan []interface{})\n\nfor ID, person := range people {\n\n    // dispatch an IIFE as goroutine, so no need to change the `someApiCall()`\n    go func(id string, person Person) {\n        result := someApiCall(person)\n\n        // send both id and result to channel.\n        // it'll be better if we construct new type based id and result, but in this example I'll use channel with []interface{} type\n        resChan &amp;lt;- []interface{}{id, result}\n    }(ID, person)\n}\n\n// close the channel since every data is sent.\nclose(resChan)\n\n// prepare a variable to hold all results\nresults := make(map[string]Result)\n\n// use `for` and `range` to retrieve data from channel\nfor res := range ch {\n    id := res[0].(string)\n    person := res[1].(Person)\n\n    // append it to the map\n    result[id] = person\n}\n\n// And do something with all the results once completed\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Another way is by using few &lt;code&gt;sync&lt;/code&gt; API like &lt;code&gt;sync.Mutex&lt;/code&gt; and &lt;code&gt;sync.WaitGroup&lt;/code&gt; to achieve same target.&lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;// prepare a variable to hold all results\nresults := make(map[string]Result)\n\n// prepare a mutex object with purpose is to lock and unlock operations related to `results` variable, to avoid data race.\nmtx := new(sync.Mutex)\n\n// prepare a waitgroup object for effortlessly waits for goroutines to finish\nwg := new(sync.WaitGroup)\n\n// tell the waitgroup object how many goroutines that need to be finished\nwg.Add(people)\n\nfor ID, person := range people {\n\n    // dispatch an IIFE as goroutine, so no need to change the `someApiCall()`\n    go func(id string, person Person) {\n        result := someApiCall(person)\n\n        // lock the append operation on `results` variable to avoid data race\n        mtx.Lock()\n        results[ID] = result\n        mtx.Unlock()\n\n        // tell waitgroup object that one goroutine is just finished\n        wg.Done()\n    }(ID, person)\n}\n\n// block the process synchronously till all goroutine finishes.\n// after that it'll continue to next process underneath\nwg.Wait()\n\n// And do something with all the results once completed\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;A warning&lt;/strong&gt;. Both approaches above are fine to use on a case that there are only few data that need to be iterated. If there are a lot of it, it'll not be good, there will be tons of goroutine dispatched nearly in the same time, and will cause very high machine memory usage. I suggest to take a look about &lt;a href=\"https://gobyexample.com/worker-pools\" rel=\"nofollow noreferrer\"&gt;worker pool technique&lt;/a&gt; to improve the code.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何优化向API发出请求的for循环？  [关闭]", ["\n\n", "I have a for-loop in my Go code. Each iteration makes a request to a certain API and then saves its result in a map. How do I optimise the performance so that the iterations will be called asynchronously?", "\n\n", "I'm currently diving into goroutines and channels and all that, but I'm still having trouble to apply it in the wild :)", "\n\n", "results := map[string]Result\n\nfor ID, person := range people {\n    result := someApiCall(person)\n    results[ID] = result\n}\n\n// And do something with all the results once completed\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$str = '1111/222/333/444' ;\n$pieces = explode(\"/\", $str);\n$num = count($pieces);\nfor($i=0;$i&amp;lt;$num;$i++) {\n        print implode('-',$pieces).($i?'-':'').\"\n\";\n        array_pop($pieces);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://codepad.org/Hc6mexm7\" rel=\"nofollow\"&gt;See it work&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["PHP递减循环", ["\n\n", "I have a string variable like this:  ", "'1111/222/333'", " or ", "'1111/222/333/444'", " ", "\n\n", "and I want to get an Array like this: ", "\n\n", "111-222-3333\n111-222-\n111-\n", "\n\n", "OR ", "\n\n", "1111-222-333-444\n1111-222-333-\n1111-222-\n1111-\n", "\n\n", "I have tried with ", "$pieces = explode(\"/\", $str);", "\n\n", "and:", "\n\n", "$str = '1111/222/333/444';\n$pieces = explode(\"/\", $str);\nfor($i=0; $i<count($pieces); $i++) {\n\n    $var .= $pieces[$i].\"-\".$pieces[$i+1];\n    echo $i.\" - \".$var.\"<br>\";  \n\n}\n", "\n\n", "but I haven't gotten the correct result! ", "\n\n", "Any help?", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n&lt;el-input v-model=\"index\" :value=\"item\" class=\"rbipt\"&gt;&lt;/el-input&gt;\r\n```", "Konwledge_Point": "for循环", "Question": ["vue v-for 生成的input不能编辑修改", ["      <el-form ref=\"form\" :inline=\"true\" :model=\"form\" label-width=\"120px\">\n        <el-form-item v-for=\"(item,index) in form\" :key=\"index\" :label=\"index\">\n          <el-input :v-model=\"index\" :value=\"form[index]\" class=\"rbipt\"></el-input>\n      </el-form>\n", "\n\n", "<script>\n  export default {\n    data() {\n      return {\n        form: {}\n      }\n    },\n    created() {\n      this.taskid = this.$route.query.taskid;\n      this.$fetch(“....”, {}).then((res) => {\n        if (res.code == 1) {\n          for(let key in res.data){\n            this.$set(this.form, key, res.data[key])\n          }\n        }\n      })\n\n    },\n\n  }\n</script>\n", "\n\n", "感谢楼下指导，我改成了这样", "\n\n", "        <el-form-item v-for=\"(item,index) in formindex\" :key=\"item\" :label=\"item\">\n          <el-input :v-model=\"item\" :value=\"formvalue[index]\" class=\"rbipt\"></el-input>\n        </el-form-item>\n", "\n\n", "   data() {\n      return {\n        taskid: '',\n        form: {},\n        formindex:[],\n        formvalue:[],\n      }\n    },\n        .......\n                  for(let key in res.data){\n            // this.$set(this.form, key, res.data[key])\n            this.formindex.push(key)\n            this.formvalue.push(res.data[key])\n          }\n", "\n\n", "依然不好使，求原谅，太菜了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/07970485113619.png\" /&gt;&lt;/p&gt;&lt;br /&gt;注意async和await的位置&amp;#xff0c;使用Promise等待异步请求。这样就是每执行一次for循环就执行一次ajax请求。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如图所示，前端写了一个HTML for循环，我想做一个点击事件把for循环里的值传到后台 ，该怎么写呢？", [" 比如我想取到 list[i].boxname 想传第i条的boxname 该怎么搞？"]], "Tag": "程序设计"}
{"Answer": "```\r\n \r\n    function class_mask_Click() {\r\n        var Mask = document.getElementsByClassName(\"img_bg\");\r\n        var id_Bg = document.getElementsByClassName(\"Bg\");\r\n        for (var i = 0;i &lt; Mask.length-1;i++) {\r\n            Mask[i].onclick = (function (i) {\r\n                return function () {\r\n                    console.log(id_Bg[i]);\r\n                    console.log(id_Bg.length);\r\n                }\r\n            })(i);\r\n        }\r\n    }\r\n    class_mask_Click();\r\n```", "Konwledge_Point": "for循环", "Question": ["for循环无法向内部传参 js", ["function class_mask_Click() {", "\n    var Mask = document.getElementsByClassName(\"img_bg\");", "\n    var id_Bg = document.getElementsByClassName(\"Bg\");", "\n    for (var i = 0;i < Mask.length-1;i++) {", "\n        Mask[i].click(function (i) {", "\n            console.log(id_Bg[i]);", "\n            console.log(id_Bg.length);", "\n        })", "\n    }", "\n}", "\n class_mask_Click()；"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你列表中7.,8,3是数值。要加引号改成字符串&lt;/p&gt;\n&lt;p&gt;数值 7 不等于字符串“7”&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python 语句循环问题 代码功能，自动删除特定字符串，弄不懂的地方是for循环两次，才执行if从句，怎样修改可以正确运行代码", ["代码部分：", "\n", "\n", "测试结果：", "\n", "\n", "请问循环两次的原因，和if从句仅执行一次的原因，以及要实现代码功能，应该怎样修改？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;item&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;wx:for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;Items&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;item-IMG&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;image&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;cloud://cloud1-2g85e0fnd7caadea.636c-cloud1-2g85e0fnd7caadea-1308292860/images/Index/周末训练/轨迹直播.jpg&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;image&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;item-TEX&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-comment\"&gt;&amp;lt;!---key名自己修改下--&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;text&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;item.key&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;text&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;catchtap&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;catchVideoTap&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;primary&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Button&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;点击查看&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["wx:for 循环里面的内容怎么更换", ["\n", "<", "view", " ", "class", "=", "\"item\"", " ", "wx:for", "=", "\"", "{{", "Items", "}}", "\"", ">", "\n  ", "<", "view", " ", "class", "=", "\"item-IMG\"", ">", "\n    ", "<", "image", " ", "src", "=", "\"cloud://cloud1-2g85e0fnd7caadea.636c-cloud1-2g85e0fnd7caadea-1308292860/images/Index/周末训练/轨迹直播.jpg\"", ">", "</", "image", ">", "\n  ", "</", "view", ">", "\n  ", "<", "view", " ", "class", "=", "\"item-TEX\"", ">", "\n    ", "<", "text", ">", "Grade-1（G-1）轨迹直播", "</", "text", ">", "\n    ", "<", "view", " ", "catchtap", "=", "\"catchVideoTap\"", " ", "type", "=", "\"primary\"", " ", "class", "=", "\"Button\"", ">", "\n      ", "<", "button", ">", "点击查看", "</", "button", ">", "\n    ", "</", "view", ">", "\n  ", "</", "view", ">", "\n", "</", "view", ">", "\n", "\n", "\n", "需要替换的是", " <text>Grade-1（G-1）轨迹直播</text> 和 catchtap的点击时间"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;can you tri this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$servername = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'image';\n$conn = new mysqli($servername,$username,$password,$dbname);\nif($conn-&amp;gt;connect_error){\n    die.(\"Connection failed : \" .$conn-&amp;gt;connect_error);\n}\n$select_path = 'select * from images';\n$var = mysqli_query($conn,$select_path);\nwhile ($row=mysqli_fetch_array($var))\n{\n    $image_name = $row['image_name'];\n    $image_path = 'images';\n    $url = \"$image_path\".'/'.\"$image_name\";\n    echo'&amp;lt;div id=\"ninja-slider\"&amp;gt;\n      &amp;lt;div class=\"slider-inner\"&amp;gt;\n      &amp;lt;ul&amp;gt;';\n    echo'  &amp;lt;a class=\"ns-img\" href=\"'.$url.'\"&amp;gt;&amp;lt;/a&amp;gt;\n           &amp;lt;div class=\"caption\"&amp;gt;'.$url.'&amp;lt;/div&amp;gt;\n    &amp;lt;/li&amp;gt;';\n}\n?&amp;gt;\n&amp;lt;/ul&amp;gt;\n        &amp;lt;div class=\"fs-icon\" title=\"Expand/Close\"&amp;gt;&amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何在for循环php中显示图像？", ["\n\n", "i had 5 images ", "path", " and ", "name", "  in mysql database.", "\n\n", "now i want to display that in a slider in for loop ", "\n\n", "include ('conn.php');\n\n$select_path=\"select * from image_table\";\n\n$var=mysqli_query($conn,$select_path);\n\nwhile($row=mysqli_fetch_array($var))\n{\n $image_name=$row[\"name\"];\n $image_path=$row[\"path\"];\n $url=$image_path.$image_name;\n}\n\n\n\necho' <div id=\"ninja-slider\">\n    <div class=\"slider-inner\">\n        <ul>';\n            for($i=0;$i < $url;$i++){\n               echo'<li>';\n               echo'  <a class=\"ns-img\" href=\"'.$url[$i].'\"></a>\n                <div class=\"caption\">image 1</div>\n               </li>';}\n\n        </ul>\n        <div class=\"fs-icon\" title=\"Expand/Close\"></div>\n    </div>\n</div>\n", "\n\n", "for loop can display a list from database?", "\n    "]], "Tag": "程序设计"}
{"Answer": "你到不如这样写：\r\n\r\n```\r\n public class MyMain {\r\n\tpublic static void main(String[] args) {\r\n\t\tString a = \"b\";\r\n\t\tStringBuffer sb = new StringBuffer(a);\r\n\t\tfor (int i = 0; i &lt; 10000000; i++) {\r\n\t\t\tsb.append(i);\r\n\t\t}\r\n\t\tSystem.out.println(sb.toString());\r\n\t}\r\n}\r\n```\r\n按照你的写法，JVM会频繁的进行GC，这对性能影响特别大，造成严重的资源浪费。", "Konwledge_Point": "for循环", "Question": ["java for循环的问题   看看下面的有啥问题", ["public static void main(String[] args) {", "\n        String a = \"b\";", "\n        for (int i = 0; i < 10000000; i++) {", "\n            a += i;", "\n        }", "\n        System.out.println(a);", "\n                }", "\n                这样输出值是什么?程序是否会有什么问题?有的话怎样解决?", "\n\n", "            如果程序正常运行,a.length()大约是多少?提供思路或方法?\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Program&lt;/span&gt;\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] args&lt;/span&gt;)&lt;/span&gt;\n    {\n        List&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;&amp;gt; strList &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; List&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;&amp;gt;();\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;a,b,c&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;d,f&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;d,h,m&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;c,j&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;a,w&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;h,z&amp;#34;&lt;/span&gt;);\n        strList.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;j,k&amp;#34;&lt;/span&gt;);\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; strList.Count&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;strList.Count;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] ss&amp;#61;strList[j].Split(&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; s &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; ss)\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strList[i].IndexOf(s)&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    {\n                        strList[i]&amp;#43;&amp;#61;strList[j].Substring(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                        strList.RemoveAt(j);\n                        i&amp;#61;j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//从0开始重新遍历查找&lt;/span&gt;\n                        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                    }\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; strList.Count; i&amp;#43;&amp;#43;)\n            Console.WriteLine(strList[i]);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/264456163626121.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C# 递归 for循环，如何能得到以下结果？", ["\n", "要得到这种结果：", "a,b,c,g,w,z", "d,e,f,h,m", "\n"]], "Tag": "程序设计"}
{"Answer": "for i in [1, 2, 3, 4, 5]:\r\n...   if i == 6:\r\n...      break\r\n...   if i == 2:\r\n...      print i\r\n...   else:\r\n...      print 'all'\r\n...\r\n\r\nelse向前进一个tab", "Konwledge_Point": "for循环", "Question": ["请大家来看看python2.6怎么回事啊，For循环出错啊！！谢谢！！", ["for i in [1,2,3,4,5]:", "...     if i==6:", "...         break", "...     if i==2:", "...         print i", "...         else:", "...             print 'all'", "... ", "               ^", "''' <type 'exceptions.syntaxerror'=\"\"> : invalid syntax '''", ">>> ", "\n\n", "谢谢大家帮忙！！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-C\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main() {\n    int i,j;\n    char a;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1;i&amp;lt;&amp;#61;7;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;#43;i-1;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;&amp;#61;7-i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,a);\n            a--;\n        }\n        a&amp;#43;&amp;#61;2;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,a);\n            a&amp;#43;&amp;#43;;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1;i&amp;lt;&amp;#61;7;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;-i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;&amp;#61;7-i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,a);\n            a--;\n        }\n        a&amp;#43;&amp;#61;2;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1;j&amp;lt;7-i;j&amp;#43;&amp;#43;){\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,a);\n            a&amp;#43;&amp;#43;;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["这个字母三角形用for循环怎么打啊", ["打了上半部分，下半部分求解"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;I'd like to know is my method less efficient than the ones I saw online that use runes&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Nothing to do with runes or &lt;code&gt;for&lt;/code&gt; loop. Your method builds and rebuilds and rebuilds a string, over and over. Whereas the other one reverses the string in-place, by simply swapping characters. And the difference is only getting worse with larger strings.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"testing\"\n\nfunc reverseConcat(str string) string {\n    var reversed string\n\n    for i := len(str) - 1; i &amp;gt;= 0; i-- {\n        reversed += string(str[i])\n    }\n\n    return reversed\n}\n\nfunc reverseSwapRunes(s string) string {\n    chars := []rune(s)\n    for i, j := 0, len(chars)-1; i &amp;lt; j; i, j = i+1, j-1 {\n        chars[i], chars[j] = chars[j], chars[i]\n    }\n    return string(chars)\n}\n\nfunc BenchmarkConcatSmall(b *testing.B) {\n    for i := 0; i &amp;lt; b.N; i++ {\n        reverseConcat(\"hello world\")\n    }\n}\n\nfunc BenchmarkSwapRunesSmall(b *testing.B) {\n    for i := 0; i &amp;lt; b.N; i++ {\n        reverseSwapRunes(\"hello world\")\n    }\n}\n\nfunc BenchmarkConcatLarger(b *testing.B) {\n    for i := 0; i &amp;lt; b.N; i++ {\n        reverseConcat(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\")\n    }\n}\n\nfunc BenchmarkSwapRunesLarger(b *testing.B) {\n    for i := 0; i &amp;lt; b.N; i++ {\n        reverseSwapRunes(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\")\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Results&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ go test -bench . -benchmem\ngoos: linux\ngoarch: amd64\nBenchmarkConcatSmall-8           5000000           329 ns/op          80 B/op         10 allocs/op\nBenchmarkSwapRunesSmall-8       20000000           117 ns/op          16 B/op          1 allocs/op\nBenchmarkConcatLarger-8            30000         44877 ns/op      172833 B/op        573 allocs/op\nBenchmarkSwapRunesLarger-8        300000          5353 ns/op        2944 B/op          2 allocs/op\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["通过在golang中使用for循环来反转字符串效率低下？", ["\n\n", "I did it like this Golang:", "\n\n", "func reverseStr(str string) string {\n    var reversed string\n\n    for i := len(str) - 1; i >= 0; i-- {\n        reversed += string(str[i])\n    }\n\n    return reversed\n}\n", "\n\n", "I'm a beginner and can't do better for now, but I'm still learning. I'd like to know is my method less efficient than the ones I saw online that use runes:", "\n\n", "func reverse(s string) string {\n    chars := []rune(s)\n    for i, j := 0, len(chars)-1; i < j; i, j = i+1, j-1 {\n        chars[i], chars[j] = chars[j], chars[i]\n    }\n    return string(chars)\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n long sum = 0;\r\nlong x = 9;\r\nfor (int i = 1; i &lt;= 10; i++)\r\n{\r\nsum += x;\r\nx *= 10;\r\nx += 9;\r\n}\r\nSystem.out.println(sum);\r\n```", "Konwledge_Point": "for循环", "Question": ["用for 循环做一个求数列和 要求和图片中一样【图片】", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\nif( scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;lf%lf%lf&amp;#34;&lt;/span&gt;,&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]))//这句格式错误&amp;#xff0c;格式符最前少了 &lt;span class=\"hljs-comment\"&gt;% &amp;#xff0c; 修改如下&amp;#xff1a;&lt;/span&gt;\nif( scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf%lf%lf&amp;#34;&lt;/span&gt;,&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],&amp;amp;test[i][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["#C语言   for循环没到终止条件跳出", ["最终的运行结果显示 i=4 n=5  该条件成i<n+1 也不行", "代码如下 ", "\n", "#include<stdio.h>", "int main()", "{   int i,n", "\n", "int count=0;\nscanf(", "\"%d\"", ", &n);\ndouble ", "test", "[10][3];\n", "for", "(i = 0; i <n; i++)\n{  ", "if", "( scanf(", "\"lf%lf%lf\"", ",&", "test", "[i][0],&", "test", "[i][1],&", "test", "[i][2]))\n    count++;\n   ", "if", "((", "test", "[i][0]+", "test", "[i][1])>", "test", "[i][2])\n{\n    ", "if", "(count<n)\n         ", "printf", "(", "\"Case #%d: true\\n\"", ",i+1);\n    ", "else", "\n         ", "printf", "(", "\"Case #%d: true\"", ",i+1);\n}\n    \n   \n    ", "else", "    \n    {   ", "if", "(count<n)\n        ", "printf", "(", "\"Case #%d: false\\n\"", ",i+1);\n        ", "else", "\n         ", "printf", "(", "\"Case #%d: false\"", ",i+1);\n    }\n}\n \n", "\n", " return 0;", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,v;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; avg&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;v);\n        avg &amp;#43;&amp;#61; v;\n    }\n    avg/&amp;#61;n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,avg);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["多个数的平均值（简单循环，for循环）", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This will check if the string is the same. if it is, we move on&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    $a=\"abc\";\n    $b=123;\n    $c=1;\n\n    $tempStr =  '';\n    $str = '';\n    $sum = '';\n    for ($i=0;$i&amp;lt;3;$i++) {\n        $tempStr = \"'\" . $a . \"' , '\" . $b . \"', '\" . $c . \"', '1'\";\n        if ($tempStr === $str) {\n            continue;\n        }//END IF\n        $str=\"'\" . $a . \"' , '\" . $b . \"', '\" . $c . \"', '1'\";\n        $sum .= \"(\" . $str . \"),\";\n    }\n    //output ('abc' , '123', '1', '1')\n    echo rtrim($sum, ',');\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT: added a &lt;a href=\"http://codepad.viper-7.com/K1dz4z\" rel=\"nofollow\"&gt;fiddle here&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如果在PHP中的for循环中重复检查字符串", ["\n\n", "    $a=\"abc\";\n    $b=123;\n    $c=1;\n\n    for ($i=0;$i<3;$i++) {\n        $str=\"'\" . $a . \"' , '\" . $b . \"', '\" . $c . \"', '1'\";\n        $sum .= \"(\" . $str . \"),\";\n    }\n    //output ('abc' , '123', '1', '1'),('abc' , '123', '1', '1'),('abc' , '123', '1', '1'),\n    echo $sum;\n", "\n\n", "Can anyone help me with the above codes?\nI want the ", "$sum", " to output ", "('abc' , '123', '1', '1'),", " one time only.\nThat I have to check the ", "$str", " is repeated.", "\n\n", "Can anyone help me or give me some hits?\nThanks. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$data= \"750ML XYZ,750ML ABC|280,30|60,20|16800,600|12.25,25.25|205800,15150\";\n\n$array = explode(\"|\", $data);\n\n$final = array();\n\nforeach($array as $a) {\n    $row = explode(\",\", $a);\n    $final[\"first\"][]  =  $row[0];\n    $final[\"second\"][] =  $row[1];\n} \n?&amp;gt;\n&amp;lt;table&amp;gt;\n    &amp;lt;thead&amp;gt;\n        &amp;lt;th&amp;gt;Goods&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;Pkg&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;Avg&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;Qty&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;Rate&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;Total&amp;lt;/th&amp;gt;\n    &amp;lt;/thead&amp;gt;\n    &amp;lt;tbody&amp;gt;\n        &amp;lt;?php foreach($final as $f) { ?&amp;gt;\n            &amp;lt;tr&amp;gt;\n                &amp;lt;?php foreach($f as $v){ ?&amp;gt;\n                    &amp;lt;td&amp;gt;&amp;lt;?php echo $v; ?&amp;gt;&amp;lt;/td&amp;gt;\n                &amp;lt;?php } ?&amp;gt;\n            &amp;lt;/tr&amp;gt;\n        &amp;lt;?php } ?&amp;gt;\n    &amp;lt;/tbody&amp;gt;\n&amp;lt;/table&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope this helps.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["如何使用php使用for循环将数据打印到表中", ["\n\n", "I need to print the following data into table using for loop.I know there will be two explode.First for \"|\" and second for \",\" and after that it should be print.\n", "\n\n", "PHP:", "\n\n", "  $data=750ML XYZ,750ML ABC|280,30|60,20|16800,600|12.25,25.25|205800,15150\n   for($i=0;$i<count($d);$i++)\n    {  \n    $d2[]=explode(\",\",$d[$i]);\necho \"<tr>\";\n    //Suggest here\necho \"</tr>\"\n    }\n", "\n\n", "Expected Output:", "\n\n", "Goods         Pkg      Avg     Qty     Rate    Total\n750ML XYZ     280      60     16800  12.25    205800\n750ML ABC      30      20       600  25.25    15150\n", "\n\n", "I tried but it didnt work.I am confused.Please give some suggestion.Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Looks like bad escaping/concatenation around the column name...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\"SELECT SUM(column{$t}) AS value_sum FROM scoring WHERE ID='{$userID}' AND name ='{$name}'\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is that what you want?  &lt;/p&gt;\n\n&lt;p&gt;Also use &lt;a href=\"https://stackoverflow.com/questions/13569/mysqli-or-pdo-what-are-the-pros-and-cons\"&gt;&lt;strong&gt;PDO&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["选择SUM（）作为for循环中的变量", ["\n\n", "I'm trying to generate XML from database and need to gather a specific amount of data based on the average from a column. This can vary from anywhere between 5 to 30 queries for the ", "$numItems", " variable.", "\n\n", "I need to execute a for loop and assign the column name in the ", "SUM($variable)", " but I'm not getting any data (but no errors either).", "\n\n", "Here is my code:", "\n\n", "for ($t = 1; $t <= $numItems; $t++){\n\n$query = mysql_fetch_assoc(mysql_query(\"SELECT SUM(column'\".$t.\"') AS value_sum FROM scoring WHERE ID='\" . $userID . \"' AND name ='\" . $name . \"'\")); \n\n$q = $query['value_sum'] / $totalUsers;\n\necho \"<output\".$t.\">\" . $q . \"</output\".$t.\">\n\";\n\n}\n", "\n\n", "The problem is assigning the ", "SUM(column1)", " variable name for the column I'm getting data from, when I write the queries individually it works, but assigning the variable within the statement is causing a problem. Can any one give me any pointers?", "\n\n", "Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "for (int i = id; i &lt; i + 4; i++)\r\n死循环了，i &lt; i+4永远成立\r\n\r\n\r\n\r\n```\r\n for (int i = id,j=i+4; i&lt;j; i++)\r\n```", "Konwledge_Point": "for循环", "Question": ["这样写for循环错在哪？为什么页面没反应？", ["int id=(int)Session[\"userid\"];", "\n\n", "           string str = ConfigurationManager.ConnectionStrings[\"shuju\"].ConnectionString;\n           SqlConnection conn = new SqlConnection(str);\n           for (int i = id; i < i + 4; i++)\n           {\n           string sql = \" select * from [user] where grade =\"+i+ \"\";\n           SqlCommand cmd = new SqlCommand(sql, conn);\n           SqlDataAdapter da = new SqlDataAdapter();\n           da.SelectCommand = cmd;\n           DataTable dt = new DataTable();\n           da.Fill(dt);\n           DataList1.DataSource = dt;\n           DataList1.DataBind();\n       }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main()\n{\n   int i,flg&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n   float score[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;88&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;},b;\n   printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;从键盘上输入一个成绩&amp;#xff0c;判定该成绩是否在数组中&amp;#xff0c;若在则输出所在序号\\n&amp;#34;&lt;/span&gt;);\n   printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入一个成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n   scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;b);\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;i&amp;#43;&amp;#43;)\n   {\n       &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;f( score[i] !&amp;#61; b )  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt; ;\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;)\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该成绩不在数组中\\n&amp;#34;&lt;/span&gt;);\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt; ;\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ( b &amp;#61;&amp;#61; score[i] )\n       {\n           flg&amp;#43;&amp;#43;;           &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n           printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;,i);\n       }\n   }\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!flg)                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n       printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该成绩不在数组中\\n&amp;#34;&lt;/span&gt;);\n   return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["c语言：for循环，在数组中查找数据，如果有重复的数据怎么查找", ["如果输入60，怎么把数组里三个60都找到，输出三个序号", "\n", "#include <stdio.h> ", "\n", "int main()", "{", "    int i;", "    float score[30]={60,60,60,56,88,99},b;", "    printf(\"从键盘上输入一个成绩，判定该成绩是否在数组中，若在则输出所在序号\\n\");", "    printf(\"输入一个成绩：\");", "    scanf(\"%f\",&b);", "    for(i=0;i<30;i++)", "    {", "        if( score[i] != b )", "        {", "            continue ;", "        }", "        else if(i=29)", "        {", "            printf(\"该成绩不在数组中\\n\");", "            break ;", "        }", "        else if ( b == score[i] )", "        {", "            printf(\"%d\\t\",i);", "        }", "    }", "    return 0 ;", "}"]], "Tag": "程序设计"}
{"Answer": "第39行有错\r\n#         start=begin=str.substr(0,flag);  \r\n#         end=str.substr(flag+1);  \r\n#         alert(begin);  \r\n#         alert(end);  \r\n#         for(;begin&lt;=end;begin++)  \r\n#         {  \r\n#             range.push(begin);  \r\n#         }    \r\n\r\n当begin=6时，end=24时，由于两者都是字符串，导致6 &gt; 24\r\n所以在这之前需要进行类型转换", "Konwledge_Point": "for循环", "Question": ["关于js中for循环的疑问", ["预期功能:实现抽奖。不同的奖项在不同的范围产生。getLuckers()函数产生抽奖号码，产生奖项的范围、个数作参数。问题是第二次调用getLuckers()函数时，貌似死循环了...", "\n  代码如下,希望大家不吝赐教.", "\n[code=\"js\"]", "\n Array.prototype.indexOf=function(substr,start){", "\n     var ta,rt,d='\\0';", "\n     if(start!=null){ta=this.slice(start);rt=start;}else{ta=this;rt=0;}", "\n     var str=d+ta.join(d)+d,t=str.indexOf(d+substr+d);", "\n     if(t==-1)return -1;rt+=str.slice(0,t).replace(/[^\\0]/g,'').length;", "\n     return rt;", "\n}", "\nfunction GoodLuck()", "\n{", "\n    var str1=\"1-5\";//", "\n    var str2=\"6-24\";", "\n\n", "var luckers=new Array();\nvar luckers1=new Array();\n\nluckers=getLuckers(str1,2);\nalert(luckers);\nluckers1=getLuckers(str2,3);\nalert(luckers1);\n", "\n\n", "}", "\nfunction getLuckers(str,count)", "\n{", "\n\n", "var flag=0;\nvar begin=0;\nvar start=0;\nvar end=0;\nvar range=new Array();\nflag=str.indexOf(\"-\");\nif(flag==-1)\n{\n    range=str.split(\",\");\n}else\n{\n    start=begin=str.substr(0,flag);\n    end=str.substr(flag+1);\n    alert(begin);\n    alert(end);\n    for(;begin<=end;begin++)\n    {\n        range.push(begin);\n    }       \n}\n\nvar luckers=new Array();\nvar v=end-start+1; \nif(v>1)\n{\n    for(var i=0,j=0;j<count;i++)\n    {\n        var temp=parseInt(Math.random()*(v+1)+start) ;\n        if(-1!=range.indexOf(temp))\n        {\n            var index=range.indexOf(temp);\n            range.splice(index, 1);\n            luckers.push(temp);\n            j++;\n        }\n\n    }\n\n}else\n{\n    for(var i=0,j=0;j<count;i++)\n    {\n        var temp=parseInt(Math.random()*185+1) \n\n        if(-1!=range.indexOf(temp))\n        {\n            var index=range.indexOf(temp);\n            range.splice(index, 1);\n            luckers.push(temp);\n            j++;\n        }\n\n    }\n} \n\nreturn luckers;\n", "\n\n", "}", "\n[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意你那break语句&amp;#xff0c;没有包裹在if语句里。&lt;/p&gt;\n\n&lt;p&gt;解决办法&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;if (i &amp;#61;&amp;#61; 3) {\n\tprintf(&amp;#34;I will run forever !%d\\n&amp;#34;, i);\n\tbreak;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环傻傻分不清楚", [" ", "\n\n", " 输出结果怎么跳过了1 2 3", "\n\n", "\n", "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <strings.h>\n\nint main(void){\n\tint i;\n\n\tfor (i=0;i<=5; i++)\n\t{\n\tif (i == 3)\n\t \n\tprintf(\"I will run forever !%d\\n\",i);\n        break;\n\t}\n\tprintf(\"%d\\n\",i);\n        return 0;\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/a1270136601/article/details/47612495'&gt;C语言初学关于for循环的自己的见解&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/YanandYue/article/details/49130425'&gt;C语言for循环&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/qq_15766257/article/details/37730341'&gt;c语言循环-for&lt;/a&gt;&lt;br/&gt;----------------------同志你好，我是CSDN问答机器人小N，奉组织之命为你提供参考答案，编程尚未成功，同志仍需努力！", "Konwledge_Point": "for循环", "Question": ["初学渣.关于C语言for循环的省略问题", ["int i=-2;", "\nfor(;i++;);", "\nprintf(\"%d\\n\",i)", "\n(节选，如上所示)", "\n最后输出的结果是多少，为什么？", "\n新人，求不喷..."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为scanf(&amp;#34;%c&amp;#34;)接受的是一个字符&lt;/p&gt;\n\n&lt;p&gt;回车也是一个字符&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环时scanf输入次数有问题", ["\n\n", " ", "\n\n", "为什么会出现框中的情况，然后实际能输入的次数为13次"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你应该用筛法求质数&amp;#xff0c;直接求得1-10000之间的质数&amp;#xff0c;然后输出前n个即可&lt;br /&gt;否则n越大你后面要验证n是否是质数循环次数越多&lt;br /&gt;还有for(i&amp;#61;2;i&amp;lt;x;i&amp;#43;&amp;#43;)是个明显可优化的点&amp;#xff0c;应该写i*i&amp;lt;&amp;#61;x&lt;br /&gt;你这个i,j双重循环写的毫无意义&amp;#xff0c;直接写i从2到10000就得了&amp;#xff0c;加来加去的浪费时间&lt;br /&gt;或者直接写个while(m&amp;lt;n)就得了&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环太多次导致超时怎么优化", ["#include <stdio.h>", "#include <stdlib.h>", "\n", "int yesorno(int x)", "{", "    int i;", "    if(x==1)", "        return 0;", "    if(x==2)", "        return 1;", "    for(i=2;i<x;i++)", "    {", "        if(x%i==0)", "            return 0;", "    }", "    return 1;", "}", "int main()", "{", "    int n,i=0,j,s,m=0;", "    scanf(\"%d\",&n);", "    for(i=0;;i=i+100)", "    {", "        for(j=0;j<100;j++)", "        {", "            s=i+j;", "            if(yesorno(s)==1)", "                break;", "        }", "        if(j==100)", "        {", "            printf(\"%d %d\\n\",i,i+99);", "            m++;", "        }", "        if(m==n)", "            break;", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;列表解析式中迭代元素不能用赋值表达式,用赋值的形式修改列表元素就要用for循环结构&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;for i in range(0, 3):\n    a[i] &amp;#61; 333\n\nprint(a)\n#[333, 333, 333]&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["python中for循环，使用列表解析，报错", ["a=[1,2,3]", "\n\n", "以下分别用3条语句运行，其中第1、2条都可以，但第3条报错，想不明白为啥……", "\n\n", "[print(a[i]) for i in range(0,3)]#正确运行", "\na=[333 for i in range(0,3)]#正确运行", "\n[a[i]=333 for i in range(0,3)]#报错"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sizeof(数组名) 的值是这个数组所占据的内存的大小&amp;#xff0c;单位是字节(bytes)&lt;/p&gt;\n\n&lt;p&gt;求长度你可以写len&amp;#61;sizeof(ls)/sizeof(int)&lt;/p&gt;\n\n&lt;p&gt;然后i的循环应该是[0,len)&amp;#xff0c;不是[0,len]&amp;#xff0c;for循环那&amp;lt;&amp;#61;改成&amp;lt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C++ for循环遍历输出数组内容异常", ["我定义的数组内容为1,2,3 。    打印出的结果为毛会有其他数字出现？求大佬指点", "\n\n", "\n", "#include<iostream>\nusing namespace std;\n\n\nmain()\n{\n    int ls[]=  {1,2,3};\n    for (int i=0; i<=sizeof(ls); i++)\n  {\n      cout << ls[i] << endl;\n  }\ncout << endl;\nreturn 0;\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;Js里面有很多中方法可以实现你说的功能。如&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt; &amp;#xff08;1&amp;#xff09;、截取substr(0, 字符串长度 - 1)&lt;/p&gt;\n\n&lt;p&gt; &amp;#xff08;2&amp;#xff09;、把所有需要组合的数字放在数组内通过join组合。&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"106\" src=\"https://img-ask.csdnimg.cn/upload/1616547143720.jpg\" width=\"547\" /&gt;​&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环输出结果后多了一个符号怎么去掉？", [" ", "\n\n", "\n", " <script>\n        window.onload = function (value) {\n            var number = document.getElementsByTagName(\"input\");\n            number[2].onclick = function () {\n                var n = parseInt(number[0].value);\n                var k = parseInt(number[1].value);\n                var a, d, c, b;\n                d = 0;\n                c = 0;\n                for (a = 1; a <= n; a++) {\n\n                    c += a;\n                    c += \"^\" + k;\n                    for (b = 1; b <= a; b++) {\n                        c += \"+\";\n                        break;\n                    }\n                    d += Math.pow(a, k);\n                }\n                document.getElementsByTagName(\"textarea\")[0].value = c + \"=\" + d;\n            }\n        }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are declaring &lt;code&gt;$secondExample&lt;/code&gt; as a new array on every iteration. Do it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$exampleArray = array();\n$secondExample = array();\n\nfor ($i = 0; $i &amp;lt; 100; $i++){\n    $exampleArray[] = array(\n        $A1 = $Anotherarray[$i][25],\n        $A2 = $Anotherarray[$i][26],\n        $A3 = $Anotherarray[$i][24],\n        $A4 = $Anotherarray[$i][27],\n        $A5 = $Anotherarray[$i][28]\n    );\n\n    $secondExample[$i] = array();\n    foreach( $A1 as $j =&amp;gt; $val) {\n        $secondExample[$i][] = array(\n        \"Field1\" =&amp;gt; $val,\n        \"Field2\" =&amp;gt; ucfirst($A2[$j]),\n        \"Field3\" =&amp;gt; ucfirst($A3[$j]),\n        \"Field4\" =&amp;gt; ucfirst($A4[$j]),\n        \"Field5\" =&amp;gt; ucfirst($A5[$j])\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["php for和foreach循环只存储最后一个值", ["\n\n", "I am looping though one initial array, and specifying values i want. Then i am storing the values i need in an array. Then i am combining those values into a new array, with keys and values. The new array is only storing the last entry of all the data that has been passed to it. ", "\n\n", "$exampleArray = array();\nfor ($i = 0; $i < 100; $i++){\n    $exampleArray[] = array(\n        $A1 =  $Anotherarray[$i][25],\n        $A2 = $Anotherarray[$i][26],\n        $A3 = $Anotherarray[$i][24],\n        $A4 = $Anotherarray[$i][27],\n        $A5 = $Anotherarray[$i][28]\n    );\n\n    $secondExample = array();\n\n    foreach( $A1 as $i => $val )\n    {\n        $secondExample[] = array(\n            \"Field1\" => $val,\n            \"Field2\" => ucfirst($A2[$i]),\n            \"Field3\" => ucfirst($A3[$i]),\n            \"Field4\" => ucfirst($A4[$i]),\n            \"Field5\" => ucfirst($A5[$i])\n        );\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(初始化语句;判断语句;控制语句)&lt;/span&gt;&lt;/span&gt;{\n  循环语句\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;等价于&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;初始化语句\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(判断语句)&lt;/span&gt;&lt;/span&gt;{\n  循环语句\n  控制语句\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;所以1中AB等价&amp;#xff0c;都是循环内的控制语句&amp;#xff0c;而C则是在判断语句中自增&lt;br /&gt;就需要考虑&lt;code class=\"language-javascript\"&gt;i&amp;#43;&amp;#43;&amp;gt;5&lt;/code&gt;是先判断&amp;#xff0c;再自增&amp;#xff1b;而&lt;code class=\"language-javascript\"&gt;&amp;#43;&amp;#43;i&amp;gt;5&lt;/code&gt;是先自增&amp;#xff0c;再判断&lt;br /&gt;而问题2的代码可以等价于一下代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,i&amp;#43;&amp;#43;);\n    i/&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["关于for循环的疑惑count++以及++count的应用", ["\n", "第一张图片的四个选项怎么区分？它们各自的含义是什么？i++以及++i在使用时有什么要注意的？或者说什么时候要用i++，什么情况需要用++i？", "第二张图片中代码的具体运行过程是怎么样的？为什么一开始会出现10？是因为和while一样，先判断了i>1这个条件就执行了printf，然后再进行i/=2的动作吗？", "问题比较多，🙏🙏🙏"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Passing array elements by reference (notice the &lt;code&gt;&amp;amp;&lt;/code&gt; sign):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($cards as &amp;amp;$card){\n    $card[\"success\"] = 1;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["php编辑for循环中的数组值", ["\n\n", "I have an array of arrays, and I want to loop them while assigning a new key-value for each. But the original array fails to response. Here is my try:", "\n\n", "<?php\n$cards = array(\n    array(\n        \"test\" => 1  \n    ),array(\n        \"test\" => 2      \n    )\n);\n\nforeach($cards as $card){\n    $card[\"success\"] = 1;\n}\n\nprint_r($cards);\n", "\n\n", "OUTPUT:", "\n\n", "Array\n(\n    [0] => Array\n        (\n            [test] => 1\n        )\n\n    [1] => Array\n        (\n            [test] => 2\n        )\n\n)\n", "\n\n", "How can I modify the method hence the 'success' value can be inserted into each of them?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第18行&amp;#xff0c;改为&amp;#xff1a;else if(x &amp;lt; 60) &lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["关于c语言for循环的问题", ["\n", "请问i是什么意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;PageHelper.startPage要放到mapper查询前一行&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["加双重for循环后不分页了，正常查询就可以分页", ["\npublic PageInfo find", "ByParam(Map<String, Object> ", "param", ")", "\n  {\n    ", "PageHelper", ".", "start", "Page(Integer.", "parseInt", "((String)", "param.get(", "\"pageNum\"", ")), ", "Integer", ".", "parse", "Int((String)", "param.get(", "\"pageSize\"", ")));\n    ", "//List list = this.orktapeMapper.findByParam(param);", "\n    List<OrktapeName> li = orktapeMapper.get", "OrktapeName()", ";\n    List<Orktape> ", "list", " = orktapeMapper.get", "Ork(", "param", ")", ";\n    ", "for", " (OrktapeName a:li) {\n      ", "for", " (Orktape b:", "list", ") {\n        String callnum = a.get", "Callnum()", ".", "to", "String()", ";\n        ", "if", " (callnum.equals(b.get", "LocalParty()", ")){\n          b.set", "LocalParty(", "a", ".", "getCallname", "()", ");\n        }\n        ", "if", "(callnum.equals(b.get", "RemoteParty()", ")){\n          b.set", "RemoteParty(", "a", ".", "getCallname", "()", ");\n        }\n      }\n    }\n    return ", "new", " ", "PageInfo(", "list", ")", ";\n  }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Code with loop will &lt;strong&gt;keep printing&lt;/strong&gt; data from channel &lt;code&gt;something&lt;/code&gt; &lt;strong&gt;until&lt;/strong&gt; it receives anything on channel &lt;code&gt;done&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Select-only code will &lt;strong&gt;either&lt;/strong&gt; print data from channel &lt;code&gt;something&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; will quit when it receives anything on channel &lt;code&gt;done&lt;/code&gt;. &lt;strong&gt;Only one case&lt;/strong&gt; will be executed. Keep in mind there is no fallthrough in Go &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;switch&lt;/code&gt; statements by default.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["for循环和select和select的区别是什么？", ["\n\n", "Could not fully understand it from the docs or google:", "\n\n", "What are the differences between the two and in \nWhich case would you use each one?", "\n\n", "    for{\n       select{\n       case s := <-something:\n           fmt.Println(s)\n       case done := <-true:\n           return \n       }\n    }\n", "\n\n", "and", "\n\n", "       select{\n       case s := <-something:\n           fmt.Println(s)\n       case done := <-true:\n           return \n       }\n", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; xx[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//////打印时用作间隔、、、、、&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; sex;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n    }stu[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please enter name,sex,age,score for student\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %c %d %f&amp;#34;&lt;/span&gt;, stu[i].name, &amp;amp;stu[i].sex, &amp;amp;stu[i].age, &amp;amp;stu[i].score);\n        \n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出信息\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stu[i].sex &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t%d\\t%4.1f\\n&amp;#34;&lt;/span&gt;, stu[i].name, stu[i].age, stu[i].score);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["最后一个for循环怎么不执行？", ["\n", "#", "include", " ", "<stdio.h>", "\n", "void", " ", "main", "()", "\n", "{\n    ", "struct", " ", "student", "\n    {\n        ", "char", " name[", "10", "];\n        ", "char", " sex;\n        ", "int", " age;\n        ", "float", " score;\n    }stu[", "5", "];\n    ", "printf", "(", "\"please enter name,sex,age,score for student\\n\"", ");\n    ", "for", " (", "int", " i = ", "0", "; i < ", "5", "; i++)\n    {\n        ", "scanf", "(", "\"%s,%c,%d,%f\"", ", stu[i].name, &stu[i].sex, &stu[i].age, &stu[i].score);\n    }\n    ", "printf", "(", "\"输出信息\\n\"", ");\n    ", "for", " (", "int", " i = ", "0", "; i < ", "5", "; i++)\n    {\n        ", "if", " (stu[i].sex == ", "'f'", ")\n            ", "printf", "(", "\"%s\\t%d\\t%4.1f\\n\"", ", stu[i].name, stu[i].age, stu[i].score);\n    }\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a / 180是不行的&amp;#xff0c;因为a是整型,180也是整型&amp;#xff0c;整型与整型计算还是整型&amp;#xff0c;应该改成a / 180.0,之后的a / 90也改成a / 90.0&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["C++  for循环方面求最少的次数", ["\n", "关于上面的第一张照片上的题本人给出的第二张的编程有什么问题吗？（见笑）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在这个场景中&amp;#xff0c;通过var 声明的 i是全局变量&lt;br /&gt;在for循环内&amp;#xff0c;给a添加了10个函数&lt;code class=\"language-javascript\"&gt;function () { console.log(i); }&lt;/code&gt;&lt;br /&gt;只是在&lt;code class=\"language-javascript\"&gt;a[6]()&lt;/code&gt;&lt;strong&gt;调用的时候&lt;/strong&gt; &lt;code class=\"language-javascript\"&gt;i&lt;/code&gt;已经成为了10&amp;#xff0c;所以输出10&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环的a[i]问题", ["\nvar a ", "=", " []", ";", "\nfor (var i ", "=", " ", "0", "; i < 10; i++) {", "\n  a[i] ", "=", " function () {\n    console.log(i)", ";", "\n  }", ";", "\n}\na[", "6", "]()", "; // 10", "\n复制代码\n", "\n", "解读：", "\n", "a是一个数组，a的每一项都是一个函数function(){console.log(i);},", "变量i是var声明的，是一个全局变量，而数组a的函数内部的console.log(i)，里面的i指向的就是全局的i。也就是说，所有数组a的成员里面的i，指向的都是同一个i，导致运行时输出的是最后一轮的i的值，也就是 10", "函数只有调用才会起作用，调用的时候i已经是10了，无论调用数组里边的哪个函数都是输出10", "为什么是10 不是9呢？因为在循环中 i=9时 9<10 i执行了一个i++ 为10", "\n", "晚辈问题：", " 既然console.log(i)的i指向的是全部变量i，第三行代码中a[i]里面的i，不也是全局变量么？"]], "Tag": "程序设计"}
{"Answer": "老哥，你这写法太暴力了，m和n都是 $10^9$ 数量级的，你从头遍历一遍求最大公约数当然超时啊。\r\n你可以百度一下辗转相除法求最大公约数。", "Konwledge_Point": "for循环", "Question": ["只用了一个for循环就超时了 求解", ["\n\n", "\n\n", "题目是求最大公约数何最小公倍数的和，程序运行也没问题，但是提交了就显示超时，求解一下"]], "Tag": "程序设计"}
{"Answer": "抱歉,如上猜测.是log打印加错地方了.\r\nint main(int argc, char** argv) {\r\n    cout &lt;&lt; \"main test start\" &lt;&lt; endl;\r\n    vector&lt;People&gt; ps;\r\n    ps.push_back(People(\"zhangshan\"));\r\n    ps.push_back(People(\"lisi\"));\r\n    ps.push_back(People(\"wangwu\"));\r\n    \r\n    for (auto p : ps){\r\n        p.name += \"123\";\r\n        cout &lt;&lt; &amp;(p.name) &lt;&lt; endl;\r\n    }\r\n    for (const auto p : ps){\r\n        cout &lt;&lt; p.name &lt;&lt; endl;\r\n    }\r\n    cout &lt;&lt; \"================\" &lt;&lt; endl;\r\n    for (auto &amp;p : ps){\r\n        p.name += \"123\";\r\n        cout &lt;&lt; &amp;(p.name) &lt;&lt; endl;\r\n    }\r\n    for (const auto p : ps){\r\n        cout &lt;&lt; p.name &lt;&lt; endl;\r\n    }   \r\n    return 0;\r\n}\r\n\r\nint main(int argc, char** argv) {\r\n    cout &lt;&lt; \"main test start\" &lt;&lt; endl;\r\n    vector&lt;People&gt; ps;\r\n    ps.push_back(People(\"zhangshan\"));\r\n    ps.push_back(People(\"lisi\"));\r\n    ps.push_back(People(\"wangwu\"));\r\n    \r\n    for (auto p : ps){\r\n        p.name += \"123\";\r\n        cout &lt;&lt; &amp;(p.name) &lt;&lt; endl;\r\n    }\r\n    for (const auto p : ps){\r\n        cout &lt;&lt; p.name &lt;&lt; endl;\r\n    }\r\n    cout &lt;&lt; \"================\" &lt;&lt; endl;\r\n    for (auto &amp;p : ps){\r\n        p.name += \"123\";\r\n        cout &lt;&lt; &amp;(p.name) &lt;&lt; endl;\r\n    }\r\n    for (const auto p : ps){\r\n        cout &lt;&lt; p.name &lt;&lt; endl;\r\n    }   \r\n    return 0;\r\n}", "Konwledge_Point": "for循环", "Question": ["C++ for循环遍历, 遍历加和不加&,为何结果差异这么大:for (auto p : ps) 与for (auto &p : ps)", ["问题:", "\n见下面的代码和结果", "\n1.加过地址打印,两种方式打印的地址全部完全相同,猜测是for遍历中始终使用一个临时中间遍历", "\n2.不加引用符表征的是复制操作,更改不会同步;加了是别名引用,更改会同步?", "\n3.如果2猜测是对的.那么&(p.name)地址值应该不一样.然后结果还是一样", "\n4.那么该如何解释背后原理?", "\n\n", "代码:", "\n#include", "\n#include", "\n#include ", "\n#include \"fact.h\"", "\nusing namespace std;", "\n\n", "class People {", "\npublic:", "\n    string name;", "\n    People(string n) {", "\n        name = n;", "\n    }", "\n};", "\n\n", "int main(int argc, char** argv) {", "\n    cout << \"main test start\" << endl;", "\n    vector ps;", "\n    ps.push_back(People(\"zhangshan\"));", "\n    ps.push_back(People(\"lisi\"));", "\n    ps.push_back(People(\"wangwu\"));", "\n\n", "for (auto p : ps){\n    p.name += \"123\";\n}\nfor (const auto p : ps){\n    cout << p.name << endl;\n}\ncout << \"================\" << endl;\nfor (auto &p : ps){\n    p.name += \"123\";\n}\nfor (const auto p : ps){\n    cout << p.name << endl;\n}   \nreturn 0;\n", "\n\n", "}", "\n结果:", "\n#include", "\n#include", "\n#include ", "\n#include \"fact.h\"", "\nusing namespace std;", "\n\n", "class People {", "\npublic:", "\n    string name;", "\n    People(string n) {", "\n        name = n;", "\n    }", "\n};", "\n\n", "int main(int argc, char** argv) {", "\n    cout << \"main test start\" << endl;", "\n    vector ps;", "\n    ps.push_back(People(\"zhangshan\"));", "\n    ps.push_back(People(\"lisi\"));", "\n    ps.push_back(People(\"wangwu\"));", "\n\n", "for (auto p : ps){\n    p.name += \"123\";\n}\nfor (const auto p : ps){\n    cout << p.name << endl;\n}\ncout << \"================\" << endl;\nfor (auto &p : ps){\n    p.name += \"123\";\n}\nfor (const auto p : ps){\n    cout << p.name << endl;\n}   \nreturn 0;\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "$nmsg这个变量必须在循环外面定义", "Konwledge_Point": "for循环", "Question": ["php为什么在for循环中链接符不能用呢，请指教", ["这样不行", "\n\n", " <?php\nfor($i=0;$i<5;$i++){\n$nmsg.=dechex(rand(0,15));\n}\n?>\n", "\n\n", "这样也不行", "\n\n", " for($i=0;$i<5;$i++){\n$nmsg=$nmsg.dechex(rand(0,15));\n}\n", "\n\n", "看到别人演示的是可以的，但是到我这就不行了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为%是格式化字符串&amp;#xff0c;它后面的字符代表格式&amp;#xff0c;那么要输出%本身&amp;#xff0c;它是需要转义的&amp;#xff0c;%%就是直接输出一个%的意思&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["第一个for循环里面的两个%%是什么意思呢？", ["#include <stdio.h>", "\n", "#define NUM_RATES ((int) (sizeof(value) / sizeof(value[0])))", "#define INITIAL_BALANCE 100.00", "\n", "int main(void)", "{", "  int i, low_rate, num_years, year;", "  double value[5];", "\n", "  printf(\"Enter interest rate: \");", "  scanf(\"%d\", &low_rate);", "  printf(\"Enter number of years: \");", "  scanf(\"%d\", &num_years);", "\n", "  printf(\"\\nYears\");", "  for (i = 0; i < NUM_RATES; i++) {", "    printf(\"%6d%%\", low_rate + i);", "    value[i] = INITIAL_BALANCE;", "  }", "  printf(\"\\n\");", "\n", "  for (year = 1; year <= num_years; year++) {", "    printf(\"%3d    \", year);", "    for (i = 0; i < NUM_RATES; i++) {", "      value[i] += (low_rate + i) / 100.0 * value[i];", "      printf(\"%7.2f\", value[i]);", "    }", "    printf(\"\\n\");", "  }", "\n", "  return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There is no guarantee the loop body will be executed. This is the case if you pass &lt;code&gt;nil&lt;/code&gt; or an empty slice for &lt;code&gt;livesJSON&lt;/code&gt;. That way you would not return anything.&lt;/p&gt;\n\n&lt;p&gt;For that case, you must insert a &lt;code&gt;return&lt;/code&gt; statement after the loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func Contain(livesJSON []LiveJSON, single db.Live) bool {\n    for _, json := range livesJSON {\n        if json.Start == single.Time &amp;amp;&amp;amp; json.Team == single.HomeTeamId {\n            return false\n        } else {\n            return true\n        }\n    }\n    return false\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["为什么在for循环的函数结尾处缺少返回值", ["\n\n", "The code looks like:", "\n\n", "func Contain(livesJSON []LiveJSON, single db.Live) bool {\n    for _, json := range livesJSON {\n        if json.Start == single.Time && json.Team == single.HomeTeamId {\n            return false\n        } else {\n            return true\n        }\n    }\n}\n", "\n\n", "I have ", "return", " in both ", "if", " and ", "else", ".", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你for第一次进去是n假如他的值1   j&amp;#61;0;j&amp;lt;n;j&amp;#43;&amp;#43;&lt;br /&gt;然后你的j还是0啊&amp;#xff0c;下一个循环不就走不了了&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;你第二层循环写的有问题&lt;/p&gt;\n&lt;p&gt;为何不一层循环就给他写完&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,n,s,p,i;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;n);\n    s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;p &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n    {\n        s &amp;#61; s * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a;\n        p &amp;#61; p &amp;#43; s;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,p);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环", "Question": ["想知道为什么这个for循环没有输出", ["//想知道为什么没有输出", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<math.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " an=", "0", ";\n    ", "int", " a=", "0", ";\n    ", "int", " n=", "0", ";\n    ", "int", " i=", "0", ";\n    ", "int", " j=", "0", ";\n    ", "int", " sum1=", "0", ";\n    ", "int", " sum2=", "0", ";\n    ", "scanf", "(", "\"%d%d\"", ",&a,&n);\n    ", "for", "(j=", "0", ";j<n;j++)\n    {\n      ", "for", "(i=", "0", ";i<j;i++)\n     {\n      an=an+i*", "pow", "(", "10", ",i);\n      sum1+=an;\n     }\n     sum2+=sum1;\n    }\n    ", "printf", "(", "\"%d\"", ",sum2*a);\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for 循环本身是所在线程运行的&amp;#xff0c;setTimeout 是从新开一个线程&amp;#xff0c;如果你在 for 循环里&amp;#xff0c;开了多个 setTimeout&amp;#xff0c;会几乎同时触发&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;setTimeout&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;())},&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/828902119736171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;如果想用定时器触发&amp;#xff0c;那就用 setInterval 方便一些&amp;#xff0c;setTimeout 的话&amp;#xff0c;还要嵌套一个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; 倒计时(i){&lt;!-- --&gt;&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(i,&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;());&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;setTimeout&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;){倒计时(i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)},&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)}};倒计时(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/127264119736171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环中定时器问题请教下原理", ["++ 先输出5然后每一秒输出4,3,2,1 等待时间为什么不增加", "``javascript", "\n", " for (var n = 0; n < 5; n++) {", "        setTimeout(", "          function (n) {", "            console.log(\"n\", 5 - n);", "          },", "          1000 * n,", "          n", "        );", "      }", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your difficulty is the way you're defining your array:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array=array(0=&amp;gt;\"hello\",\n             1=&amp;gt;\"world\", \n             2=&amp;gt;\"this\", \n             3=&amp;gt;\"is\", \n             4=&amp;gt;\"an\", \n             20=&amp;gt;\"array\",\n             21=&amp;gt;\"code\" );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Arrays in php are really hashmaps; when you call index &lt;code&gt;5&lt;/code&gt; on the above array, it is undefined. No index item up to 20 will be defined, and these will Notice out:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;PHP Notice:  Undefined offset:  5\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because you're using array length as your iterating variable, and calling exactly that variable, you will never get positions 20 and 21 in your code.&lt;/p&gt;\n\n&lt;p&gt;This is what your array looks like to the computer:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 =&amp;gt; \"hello\"\n1 =&amp;gt; \"world\"\n2 =&amp;gt; \"this\"\n3 =&amp;gt; \"is\"\n4 =&amp;gt; \"an\"\n5 =&amp;gt; NULL\n6 =&amp;gt; NULL\n7 =&amp;gt; NULL\n... //elided for succinctness \n19 =&amp;gt; NULL\n20 =&amp;gt; \"array\"\n21 =&amp;gt; \"code\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When you call &lt;code&gt;$array[7]&lt;/code&gt; it can't return anything. When you call &lt;code&gt;$array[20]&lt;/code&gt; it will return \"array\".&lt;/p&gt;\n\n&lt;p&gt;What you really want is a foreach loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($array as $key =&amp;gt; $val) {\n    //key will be one of { 0..4, 20..21}\n    echo \"$key is $value\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Resulting in:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ php test.php \n0 is hello\n1 is world\n2 is this\n3 is is\n4 is an\n20 is array\n21 is code\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you must use a for loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$key_array = array_keys($array);\nfor($i=0;$i&amp;lt;count($key_array);$i++){\n   $key = $key_array[$i];\n   echo \"$key =&amp;gt; \".$array[$key].\"\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note this is not a clean solution.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["使用for循环打印数组", ["\n\n", "I want to print this array to all indexes upto 21, but in this code this is printing only to array length, what i should i do the print whole array in ", "for loop", "?", "\n\n", "<?php\n$array=array(0=>\"hello\",\n             1=>\"world\", \n             2=>\"this\", \n             3=>\"is\", \n             4=>\"an\", \n             20=>\"array\",\n             21=>\"code\" );\n\n$length=count($array);\n\nfor($i=0;$i<$length;$i++){\n         echo \"$i=>\".$array[$i]; \n         echo \"<br />\";\n\n      }\n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你如果一开始就能确定最后一个值是多少&amp;#xff0c;写个if呗&lt;br /&gt;不过你确定是i&amp;lt;3&amp;#xff0c;不是大于3吗&amp;#xff0c;你这初始值和条件一开始就不满足啊&amp;#xff0c;跟后面i怎么变都没关系&lt;br /&gt;假如是for(int i &amp;#61;16;i&amp;gt;3;i/&amp;#61;2)&lt;br /&gt;那么你写个条件&amp;#xff0c;if(i&amp;#61;&amp;#61;4){printf(&amp;#34;&amp;#34;);}&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["如何输出for循环中的一个值？", ["for(int i =16;i<3;i%=2){", "如何只输出最后一个值？", "不用数组可以吗？", "}"]], "Tag": "程序设计"}
{"Answer": "C语言不像其他高级语言，它本身并没有定义boolean类型。它认为非0的值都为真，而只有0是假。\r\n\r\n在进行真假判断的时候，系统首先将表达式的值转化为整型，再确定是否值为0。\r\n\r\n题目中for循环条件判断处为 a[i] , 看定义它属于char类型，每个char类型字符有其对应的整数值。\r\n\r\ngets函数读取到的字符串未尾会加上字符串结束符 '\\0' 即 null 其对应整数值为0。\r\n\r\n此时a[i] = 0 为假，从而结束循环。\r\n\r\n以下链接是Ascii 字符表：\r\n\r\nhttp://ascii.911cha.com/", "Konwledge_Point": "for循环", "Question": ["c语言for循环判断条件是a[i]，一个数组，里面是字符串，是如何判断的", ["比如一下删除字符串中指定字符", "\n#include", "\nint main()", "\n{", "\n    char a[100],ch,i,j,k,count;", "\n    gets(a);", "\n    scanf(\" %c\",&ch);", "\n    for(i=0;a[i];++i)", "\n    {", "\n        count=0;", "\n        for(j=i;a[j];j++)", "\n        {", "\n            if(a[j]==ch)", "\n            {", "\n                k=0;", "\n                count++;", "\n            }", "\n            else", "\n                k=1;", "\n            if(k==1)", "\n                a[j-count]=a[j];", "\n        }", "\n        a[j-count]='\\0';", "\n    }", "\n    puts(a);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;你的&lt;code class=\"language-javascript\"&gt;5e-0i&lt;/code&gt;不能直接这么写(不能直接带变量名&amp;#xff0c;数字表示法都是常数不能有诸如&lt;code class=\"language-javascript\"&gt;i&lt;/code&gt;之类的变量名存在)&amp;#xff0c;需要化成&lt;strong&gt;5乘以10的-i次方&lt;/strong&gt;&amp;#xff0c;即&lt;code class=\"language-javascript\"&gt;5*10^(-i)&lt;/code&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;:-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; e_1 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;^(-i)\n&lt;span class=\"hljs-attribute\"&gt;n_1&lt;/span&gt;&amp;#61;i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助望题主给个采纳支持一下答主答题哟&amp;#xff08;づ&amp;#xffe3;3&amp;#xffe3;&amp;#xff09;づ╭❤&amp;#xff5e;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环里面加if判断，一直得不到我想要的结果。（使用Matlab）", ["我的想法是，i在100~1的倒序循环中，加个if判断，如果e_1<= 5e-0i（科学计数法，5×10负几次方），就把当前的i减去1赋值给n_1，如果不满足条件就继续做步长为-1的循环，代码如下。", "\n", "for i=100:-1:1", "    if e_1 <= 5e-0i", "        n_1=i-1;", "    end", "end", "\n", "但是现在一直得不到我想要的结果，i都是减到 1直接退出了。是不是我科学计数法表示得有问题？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For example,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc foo(n int) func() (int, bool) {\n    i := -1\n    return func() (int, bool) {\n        if i &amp;gt;= n {\n            return 0, true\n        }\n        i++\n        return i, false\n    }\n}\n\nfunc main() {\n    f := foo(5)\n    for i, eof := f(); !eof; i, eof = f() {\n        fmt.Println(i)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0\n1\n2\n3\n4\n5\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环", "Question": ["是否可以使用for循环遍历golang中返回的函数？", ["\n\n", "Say we have this:", "\n\n", "func foo() func() int {\n    return func() {\n        for i := range [0..10] {\n            return i\n        }\n    }\n}\n\nfunc main() {\n    for i := foo() {\n\n    }\n}\n", "\n\n", "Can I iterate over the returned function in a for loop without knowing how many times it will loop?", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n_DATA.forEach((value, index) =&gt; {\r\n\tDATA2.push({\r\n\t\tid: value.id,\r\n\t\ttitle: value.name,\r\n\t\tchildren: value.child.map((value2, index2)=&gt;({\r\n\t\t\ttitle: value2.name,\r\n\t\t\tid: value2.id,\r\n\t\t\tkey: `0-${index}-${index2}`,\r\n\t\t\tselectable: true\r\n\t\t})),\r\n\t\tkey: `0-${index}`,\r\n\t\tselectable: true\r\n\t})\r\n});\r\n \r\n```", "Konwledge_Point": "for循环", "Question": ["请教：用forEach简写了for循环，如下，还可以怎么继续简化（不用递归）？", ["_DATA.forEach( (value, index) =>{", "\n                            const children = [];", "\n                            value.child.forEach( (value2, index2) =>{", "\n                                children.push({", "\n                                    title:value2.name,", "\n                                    id:value2.id,", "\n                                    key:", "0-${index}-${index2}", ",", "\n                                    selectable: true", "\n                                })", "\n                            })", "\n                            DATA2.push({", "\n                                id:value.id,", "\n                                title:value.name,", "\n                                children:children,", "\n                                key:", "0-${index}", ",", "\n                                selectable: true", "\n                            })", "\n                        });"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;“不调用 l 是指不使用i[i]吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;l&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;189&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;94&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;]\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;[x for x in l if x&amp;gt;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;]\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(a)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;还是说是指不产生新的列表&amp;#xff0c;直接 从l中移除 &amp;lt;&amp;#61; 50的值吧。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;l&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;189&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;94&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;]\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(len(l)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; l[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;l&lt;/span&gt;.pop(i)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(l)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环", "Question": ["for循环得到的结果输入到一个列表？", ["下面的案例，怎么在不调用 l 的情况下，输出的内容为【189，94，56】", "知道一种方法可以实现", "l=[189,14,94,47,56,48]", "a=[]", "a.extend([l[i] for i in range(len(l)) if l[i] >50])", "print(a)", "但是本次 想要知道的是在 “不调用l的情况下，怎么能输出为【189，94，56】”", "回答问题，请注意 “不调用 l 的情况下”", "回答问题，请注意 “不调用 l 的情况下”", "回答问题，请注意 “不调用 l 的情况下”", "回答问题，请注意 “不调用 l 的情况下”", "回答问题，请注意 “不调用 l 的情况下”", "\n", "l", "=[", "189", ",", "14", ",", "94", ",", "47", ",", "56", ",", "48", "]\n", "for", " i in range(len(l)):\n    ", "if", " l[i] > ", "50", " :\n        ", "print", "(l[i])\n", "189", "\n", "94", "\n", "56", "\n"]], "Tag": "程序设计"}
