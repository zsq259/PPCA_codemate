{"Answer": "给对象就行了\r\nstatic void Main(string[] args)\r\n        {\r\n            Respose respose = new Respose();\r\n            respose.Body = new Body()\r\n            {\r\n                Authentication = new Authentication()\r\n                {\r\n                    Useraccount = \"aaaa\"\r\n                }\r\n            };\r\n            Console.WriteLine(respose.Body.Authentication.Useraccount);\r\n        }\r\n\r\n不这样你就一个一个new出来赋值再添加。\r\n\r\nstatic void Main(string[] args)\r\n        {\r\n            Respose respose = new Respose();\r\n            Body body = new Body();\r\n            Authentication authentication = new Authentication();\r\n\r\n\r\n            authentication.Useraccount = \"aaa\";\r\n            body.Authentication = authentication;\r\n            respose.Body = body;\r\n\r\n            Console.WriteLine(respose.Body.Authentication.Useraccount);\r\n        }", "Konwledge_Point": "赋值的嵌套", "Question": ["C# 多层嵌套里的变量怎么赋值", ["\nRespose response = new Respose();", "\nresponse.body.authentication.useraccount = \"18857475598\";这样赋值赋不进去，提示未将对象引用设置到对象的实例。 本人新手，求解应该怎么赋值才能赋值进去"]], "Tag": "程序设计"}
{"Answer": "指定父arrayList的泛型为ArrayList就行，这样得到的子arrayList就不需要强转，get到的直接就是一个list对象可以使用链式方法直接再Add是没有问题的", "Konwledge_Point": "赋值的嵌套", "Question": ["arrayList嵌套arrayList如何取出或者赋值特定子arrayList的值？", ["ArrayList arrayList=new ArrayList();", "\n\n", "    arrayList.add(new ArrayList());\n    arrayList.add(new ArrayList());\n\n            可以用\n\n    ArrayList x=(ArrayList)arrayList.get(0);\n    x.get(1);\n            这样可以实现指定  arrayList第一个元素的ArrayList()的2个值。\n\n            但这新建了x变量。不利于动态数据的处理。\n            有没有办法通过索引号进行复制和取值例如\n\n            arrayLis.get(1).add(2)\n            arrayLis.get(1).add(2)\n            arrayLis.get(1).add(3)\n            但这样语法是错的的。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;p-&amp;gt;t.clas &amp;#61; 2;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["？？？嵌套结构体指针怎么赋值", []], "Tag": "程序设计"}
{"Answer": "```\r\n 你这个不是JSON，json键属性分隔是：，不是=，你确认结构正确就这样取\r\nvar rows=data.loglistJSON.rows\r\nfor(var i=0;i&lt;rows.length;i++)alert(rorws[i].id)//其他属性自己加rows[i].xxxx\r\n```", "Konwledge_Point": "赋值的嵌套", "Question": ["js多层对象嵌套请问如何取值", ["{total=10, loglistJSON={\"total\":89,\"errMsg\":\"\",\"errCode\":\"0\",\"rows\":[{\"opcontent\":\"登录成功\",\"id\":\"0000000000152643695214000101997\",\"optime\":\"20180516101552\",\"optype\":1,\"operatename\":\"\",\"adminname\":\"opt_201805081506\"}]}", "\n\n", "怎么取出对象里的数组值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可否提供完整一点的代码&lt;br /&gt;getQueue&lt;br /&gt;showC&lt;br /&gt;addQ&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["结构体数组赋值不成功？", ["问题遇到的现象和发生背景 需要初始化一个结构体数组，但是有些赋值成功有些不成功", "\n", "问题相关代码，请勿粘贴截图", "\n", "    ", "int", " k = ", "0", ";", "//银行窗口个数", "\n    ", "int", " N = ", "0", ";", "//顾客总人数", "\n    ", "struct", " Queue* Q = get", "Queue(100)", ";", "//返回一个队列", "\n    scanf(", "\"%d\"", ", &N);\n    ", "//创建一个用户数组", "\n    ", "struct", " Customer* CS = (", "struct", " Customer*)malloc(N", " * ", "sizeof(", "struct", " Customer));\n        ", "//没有初始化之间的用户数组", "\n    printf(", "\"没有初始化之间的用户数组\\n\"", ");\n    show", "C(CS, N)", ";\n    ", "//初始化用户数组,并加入队列", "\n    ", "for", " (", "int", " i = ", "0", "; i < N; i++) {\n        ", "int", " t = ", "0", ";\n        ", "int", " p = ", "0", ";\n        scanf(", "\"%d %d\"", ", &t, &p);\n        CS", "[", "i", "]", ".T = t;\n        CS", "[", "i", "]", ".P = p;\n        CS", "[", "i", "]", ".waitTime = ", "0", ";\n        add", "Q(Q, &CS[", "i", "])", ";", "//入队", "\n\n    }\n    ", "//展示顾客数组，测试数据", "\n    show", "C(CS, N)", ";\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果 希望全部初始化赋值"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Reset &lt;code&gt;$CC_results&lt;/code&gt; to empty array on every iteration of &lt;code&gt;foreach&lt;/code&gt; loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($loc_results as $loc) {\n    $CC_results = array();\n\n    // all other code stays the same\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["嵌套的foreach循环给出了奇怪的增量结果", ["\n\n", "I am planning on building an html table filled with locations followed by 2 subcategories of things, all pulled from the database and stored in a PHP array. Something weird is going on with my ", "foreach", " loop.", "\n\n", "    $loc_query = \"SELECT Location FROM Locations;\";\n    $loc_result = $mysqli->query($loc_query);\n\n    while($row = $loc_result->fetch_assoc()){\n    $loc_results[] = $row;\n    }\n\n\n    foreach($loc_results as $loc){\n        echo '<tr align=\"right\"><td width=\"20\" align=\"center\" onmousedown=\"show()\" bordercolor=\"#000000\"\n         style=\"cursor:pointer;font-size:10pt;font-weight:bold;border-style:solid;border-width:1pt\">+</td>\n         <td width=\"120\" align=\"left\" \n         bgcolor=\"#00FFFF\" style=\"border-top-style:solid;border-top-width:1pt;border-right-style:solid;\n         border-right-width:1pt;border-bottom-style:solid;border-bottom-width:1pt\" >'.$loc['Location'].'</td></tr>';\n\n        $CC_query = \"SELECT Cost_Center_Category.Cost_Center_Category_Name, Cost_Center_Name, \n        Locations.Location_Abbrev, Locations.Location, LC, \n        FX, RR_In_LC, Hours \n        FROM Cost_Centers \n        LEFT JOIN Cost_Center_Category \n        ON Cost_Centers.Cost_Center_Category = Cost_Center_Category.Cost_Center_Category_ID \n        LEFT JOIN Locations ON Cost_Centers.Location = Locations.Location_Abbrev;\";\n\n        $CC_result = $mysqli->query($CC_query);\n\n\n        while($row = $CC_result->fetch_assoc()){\n            $CC_results[] = $row;\n        }\n\n        foreach ($CC_results as $result){\n            switch($result['Cost_Center_Category_Name'])\n            {\n                case 'Strategy & Performance' :\n                    echo '<tr align=\"right\"><td width=\"20\" align=\"center\" onmousedown=\"show()\" bordercolor=\"#000000\"\n                     style=\"cursor:pointer;font-size:10pt;font-weight:bold;border-style:solid;border-width:1pt\">+</td>\n                     <td width=\"150\" align=\"left\"\n                      bgcolor=\"#FFCC00\" \n                      style=\"border-top-style:solid;border-top-width:1pt;border-right-style:solid;\n                      border-right-width:1pt;border-bottom-style:\n                      solid;border-bottom-width:1pt\"\n                       onmousedown=\"show()\">'.$result['Cost_Center_Category_Name'].'</td></tr>';\n\n                    break;\n\n            }\n        }\n    }\n", "\n\n", "It outputs all the locations fine, but once I try to populate each location with a cost center category, it outputs something like ", "\n\n", "\n", "Nuremberg", "\n", "Strategy & Performance", "\n", "Regensburg", "\n", "Strategy & Performance", "\n", "Strategy & Performance", "\n", "Sibiu", "\n", "Strategy & Performance", "\n", "Strategy & Performance", "\n", "Strategy & Performance", "\n", "\n", "and it grows each time. I know it must be something to do with my logic, I've tried things like ", "break 2", " and I think I've been staring at it too long, it's probably really obvious. \nIs there something wrong with the way I set up the nested loops or is it something else?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;ArrayList&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;HashMap&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;List&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Map&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Test&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args&lt;/span&gt;) {\n        &lt;span class=\"hljs-title class_\"&gt;List&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;,&lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;&amp;gt;&amp;gt; mapList&amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n        &lt;span class=\"hljs-title class_\"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;&amp;gt; m1&amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;&amp;gt;();\n        m1.&lt;span class=\"hljs-title function_\"&gt;put&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pass&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        m1.&lt;span class=\"hljs-title function_\"&gt;put&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;百度-&amp;gt;百度&amp;#34;&lt;/span&gt;);\n        m1.&lt;span class=\"hljs-title function_\"&gt;put&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;count&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        m1.&lt;span class=\"hljs-title function_\"&gt;put&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;status&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(m1);  &lt;span class=\"hljs-comment\"&gt;// {pass&amp;#61;0, name&amp;#61;百度-&amp;gt;百度, count&amp;#61;0, status&amp;#61;Fail}&lt;/span&gt;\n        mapList.&lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;(m1);\n        &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(mapList); &lt;span class=\"hljs-comment\"&gt;// [{pass&amp;#61;0, name&amp;#61;百度-&amp;gt;百度, count&amp;#61;0, status&amp;#61;Fail}]&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["Java List列表嵌套字典Map  怎么直接给变量赋值呢？", ["Java List列表嵌套字典Map  怎么直接给变量赋值呢？（", "不要通过add 或者put 等方法赋值", "）", "Java List列表嵌套字典Map  怎么直接给变量赋值呢？（", "不要通过add 或者put 等方法赋值", "）", "Java List列表嵌套字典Map  怎么直接给变量赋值呢？（", "不要通过add 或者put 等方法赋值", "）", "\n", "问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "    List<", "Map", "<", "String", ",", "String", ">> mapList= ", "null", ";\n\n    mapList= [\n                {", "\"pass\"", "=", "0", ", ", "\"name\"", "=百度},\n                {", "\"pass\"", "=", "0", ", ", "\"name\"", "=百度", "2", "}\n            ];\n", "\n", "List列表嵌套字典Map  怎么给变量赋值呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;typedef ACE{...} stt;&lt;br /&gt;是指定义一个ACE类型的别名stt&lt;br /&gt;所以在这里stt是一个&lt;strong&gt;类型&lt;/strong&gt;&lt;br /&gt;类型肯定是不能直接用的&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["ace结构体嵌套abc结构体，给abc变量赋值时为什么不能直接写stt.stu.name", ["问题遇到的现象和发生背景", "\n", "我在名称为ace的结构体里面嵌套了abc结构体；abc结构体的变量名是stu ；ace结构体的变量名是stt ；我在给stu里面的变量赋值时，为什么不能直接写成 stt.stu.name=\"小红\";", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "main()", "{", "typedef     struct ACE", "    {", "        char *mz;", "        float kd;", "        struct abc", "    {", "        char *name;", "        int ID;", "    }stu;", "\n", "}stt;", "     stt.stu.name=\"小红\";", "        stt.stu.ID=123;", "    printf(\"name=%s  id=%d\\n\",stt.stu.name,stt.stu.ID); ", "\n", " stt.stu.", "name", "=", "\"小刚\"", ";\n stt.", "mz", "=", "\"小明\"", ";\n stt.", "kd", "=5.0;\n stt.stu.", "ID", "=223;\nprintf(", "\"名字：%s KD=%3.1f ID=%d name=%s \\n\"", ",stt.mz,stt.kd,stt.stu.ID,stt.stu.name);\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "error C2143: syntax error : missing ';' before '.'", "\n", "我的解答思路和尝试过的方法", "\n", "添加 stt a;语句 把stt.stu.name;换成a.stu.name; 就可以正常运行", "\n", "我想要达到的结果", "\n", "不明白为什么不能直接写stt.stu.name;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是因为数组动态添加的时候数据变化没有检测到&amp;#xff0c;用$set这个api就可以解决&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["vue表格中嵌入下拉框第一次赋值不显示", ["我调用方法根据商品id从后端查询到这个商品对应的所有订单号，然后赋值在表格对应商品列中的订单下拉框中,因为我是扫码枪扫码获取数据，每次扫码都会新加一条数据进入表格，所以扫入的数据不同，所对应的订单号也不同，第一次扫码查到订单号并且查到数据后赋值在表格信息中，表格有数据，下拉框无数据，第二次扫码，第一条表格信息中下拉框中有值了，第二次扫码进来的表格信息中下拉框没有数据，以后每次扫进来的信息只有第一条表格信息中下拉框进行改变选中时，后面扫进来的数据中下拉框才会出现值，不然刚进来都是无数据", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;赋值还要循环赋值&amp;#xff1f;建议先用list将每列的值装起来&amp;#xff0c;再用这个list循环创建列并赋值&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["java按模板导出excel，遍历结果给单元格赋值会三层for嵌套如何避免", ["问题遇到的现象和发生背景", "\n", "如何遍历list<map>里的数据赋值给单元格\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "  List<Map<String, Object>> resultList = ", "Service", ".", "select", "InfoList(", "dataParams", ")", ";\n            XSSFWorkbook workBook = null;\n            FileInputStream fis = null;\n            OutputStream ouputStream = null;\n            String classPath = this.get", "Class()", ".get", "Resource(", "\"/\"", ")", ".get", "File()", ".", "to", "String()", ";\n            String srcFilePath = classPath + ", "\"/file/模板.xlsx\"", "; ", "//模板", "\n            ", "//创建Excel文件的输入流对象", "\n            fis = ", "new", " ", "FileInputStream(", "srcFilePath", ")", ";\n            ", "//根据模板创建excel工作簿", "\n            workBook = ", "new", " ", "XSSFWorkbook(", "fis", ")", ";\n            ", "//获取创建的工作簿第一页", "\n            XSSFSheet sheet = workBook.get", "SheetAt(0)", ";\n            ", "//给指定的sheet命名", "\n            workBook.set", "SheetName(0, ", "\"管理人员\"", ")", ";\n            CellStyle style = workBook.create", "CellStyle()", ";  ", "//单元格样式设置", "\n            style.set", "BorderRight(BorderStyle.THIN)", ";\n            style.set", "BorderLeft(BorderStyle.THIN)", ";\n            style.set", "BorderTop(BorderStyle.THIN)", ";\n            style.set", "BorderBottom(BorderStyle.THIN)", ";\n         ", "for", " (", "int", " i = ", "2", "; i < resultList.size", "()", " + ", "2", "; i++) {\n                XSSFRow row = sheet.create", "Row(", "i", ")", ";       ", "//建行", "\n                ", "for", " (", "int", " j = ", "0", "; j < resultList.get(i).size", "()", "; j++) {\n                    XSSFCell cell = row.create", "Cell(", "j", ")", ";          ", "//建单元格", "\n                    ", "for", " (String key : resultList.get(i).key", "Set()", ") {\n                        cell.set", "CellValue(", "nvl", "(", "resultList", ".", "get", "(", "i", ")", ".get(key)));    ", "//给单元格赋值", "\n                    }\n                }\n            }\n            response.set", "ContentType(", "\"application/octet-stream; charset=utf-8\"", ")", ";\n            response.set", "Header(", "\"Content-Disposition\"", ", ", "\"attachment; filename=\"", " + Encodes.", "urlEncode", "(", "\"市公司本部四级管理人员.xlsx\"", ")", ");\n            ouputStream = response.get", "OutputStream()", ";\n            workBook.write(ouputStream);\n            ", "//关闭流", "\n            ouputStream.flush", "()", ";\n            ouputStream.close", "()", ";\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes, it's possible. Use the &lt;a href=\"https://golang.org/pkg/encoding/json/#RawMessage\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;json.RawMessage&lt;/code&gt;&lt;/a&gt; type which implements custom marshaling / unmarshaling, which \"renders\" it as-is into the JSON output. It's just a plain byte slice:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type RawMessage []byte\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Its value should be the &lt;code&gt;UTF-8&lt;/code&gt; encoded byte sequence of the raw JSON text (exactly what you get when you do a conversion, e.g. &lt;code&gt;[]byte(\"someText\")&lt;/code&gt;).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type RootJson struct {\n    NestedJson      json.RawMessage\n    AdditionalField string\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With this, the output will be (try it on the &lt;a href=\"https://play.golang.org/p/w7FxE6JwKTC\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\"NestedJson\":{\"number\":1,\"string\":\"string\",\"float\":6.56},\n    \"AdditionalField\":\"additionalField\"}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;sub&gt;(Indentation added by me.)&lt;/sub&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["是否可以在Go中按原样添加嵌套的json？", ["\n\n", "Is this possible way to add nested json \"as is\". The nested json doesn't have any structure and might be different. I need to put the nested json data directly to the root node. ", "\n\n", "https://play.golang.org/p/MzBt7DLQEpD", "\n\n", "type RootJson struct {\n    NestedJson []byte\n    AdditionalField string\n}\n\nfunc main() {\n    nestedJson := []byte(\"{\\\"number\\\": 1, \\\"string\\\": \\\"string\\\", \\\"float\\\": 6.56}\")\n\n    rootJson := RootJson{nestedJson, \"additionalField\"}\n    payload, _ := json.Marshal(&rootJson)\n\n    fmt.Println(string(payload))\n\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我看了一下api没有默认值属性&amp;#xff0c;那就只能循环遍历数据。scope.row.checkResult&amp;#61;&amp;#34;合格&amp;#34;&amp;#xff08;合格的value值&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["el-table里嵌套的el-select怎么绑定默认选中（默认选中合格）？求助", ["\n", "<el-table-column label=\"检测结果\" align=\"center\" prop=\"checkResult\">\n              <template slot=\"header\">\n                <span class=\"star\">*</span>\n                <span>检测结果</span>\n              </template>\n              <template slot-scope=\"scope\">\n                <el-input v-model=\"scope.row.checkResult\" placeholder=\"请输入检测结果\" v-if=\"checkType ==='2' || checkType === '3'\"/>\n                <el-select v-model=\"scope.row.checkResult\" placeholder=\"请输入检测结果\" clearable size=\"small\" v-else>\n                  <el-option\n                    v-for=\"dict in resultOptions\"\n                    :key=\"dict.dictValue\"\n                    :label=\"dict.dictLabel\"\n                    :value=\"dict.dictLabel\"\n                  />\n                </el-select>\n              </template>\n            </el-table-column>"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In PHP you can access that value like this, assuming that you have it stored in variable &lt;em&gt;$mydoc&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$mydoc-&amp;gt;Thought[0]-&amp;gt;Comments[0]-&amp;gt;cmt_likes = '4.0';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In MongoDB, this should be something like this. I assumed you would need a condition which sub-documents to update, so I used the username &lt;em&gt;Vipul&lt;/em&gt; for that:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;db.mydb.update(\n    { \"Thought.0.th_username\": \"Vipul\" },\n    { $set: { \"Thought.0.Comments.0.cmt_likes\": \"4.0\" } }\n)\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["修改嵌套数组中的字段值", ["\n\n", "{ \n    \"_id\" : ObjectId(\"568501dd4b1eaa529a40c3b7\"), \n    \"Thought\" : [\n        {\n            \"thread_id\" : \"f6a678ed8e45ab22f258020530ddaafc\", \n            \"th_username\" : \"Vipul\", \n            \"th_email\" : \"abc@abc.com\", \n            \"th_text\" : \"original thought\", \n            \"th_image\" : \"\", \n            \"likes\" : NumberInt(0), \n            \"liked_user\" : [], \n            \"th_inserted_at\" : \"18-01-2016 13:31:45\", \n            \"Comments\" : [\n                {\n                    \"comment_id\" : \"f30937a4e12b0b7c975c172767ce7713\", \n                    \"cmt_from_id\" : \"5509dc6dcf5b5b7b8f95f23f041886d3\", \n                    \"commenter_name\" : \"Vipul Masurkar\", \n                    \"commenter_email\" : \"abc@abc.com\", \n                    \"comment_txt\" : \"hello comment\", \n                    \"cmt_likes\" : 2.0, \n                    \"cmt_liked_user\" : [\n\n                    ], \n                    \"cmt_inserted_at\" : \"18-01-2016 13:31:54\"\n                }\n            ]\n        }\n    ]\n}\n", "\n\n", "This is my Document and I want to replace ", "Thought.Comments.cmt_likes", " from 2.0 to something of my wish (eg 4.0) ", "\n\n", "I can't use ", "$", " operator twice so I can't use ", "$inc", " to increment the value.", "\n\n", "Is there any way to modify the nested array fields?\nIf not possible then can I do it through php atleast?", "\n\n", "Thank You", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大致类似这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; obj &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.treeData[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (obj.children) {\n    obj &amp;#61; obj.children[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(obj.efaultChoose) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.typeCodeRef &amp;#61; obj.value;\n        flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;) {\n  &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.$message(&lt;span class=\"hljs-string\"&gt;&amp;#39;请选择&amp;#xff01;&amp;#39;&lt;/span&gt;)\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["判断多层数组（级联选择）有没有指定的值，然后进行赋值", ["只能想到这种方法，不知道有没有可以简写的方法", "\n", "\n", "if", "(this.treeData[", "0", "].children[", "0", "].defaultChoose)", " {\n  this", ".typeCodeRef", " = this", ".treeData", "[0]", ".children", "[0]", ".value", "\n} ", "else", " ", "if", "(this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".defaultChoose) {\n  this", ".typeCodeRef", " = this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".value", "\n} ", "else", " ", "if", "(this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".defaultChoose) {\n  this", ".typeCodeRef", " = this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".value", "\n} ", "else", " ", "if", "(this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".defaultChoose) {\n  this", ".typeCodeRef", " = this", ".treeData", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".children", "[0]", ".value", "\n} ", "else", " {\n  this.", "$message", "(", "'请选择！'", ")\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I would suggest that, &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;you create an array with keys as new path and value as old path (\npath to be replaced). &lt;/li&gt;\n&lt;li&gt;Loop you path array and check if it is available in above defined array.&lt;/li&gt;\n&lt;li&gt;If available replace it with key of above defined array.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;For example &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// array defined as point 1\n$change_path_array= array('pics'=&amp;gt;'pictures','meal'=&amp;gt;'food');\n// $array is your array.\nforeach ($array as $value) {\n    // loop you path array  \n    for($i=0;$i&amp;lt;count($value-&amp;gt;doc-&amp;gt;path);$i++){\n        // check if the value is in defined array\n        if(in_array($value-&amp;gt;doc-&amp;gt;path[$i],$change_path_array)){\n            // get the key and replace it. \n            $value-&amp;gt;doc-&amp;gt;path[$i] = array_search($value-&amp;gt;doc-&amp;gt;path[$i], $change_path_array);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Out Put: picture is replaced with pics and food with meal&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Array\n(\n    [0] =&amp;gt; stdClass Object\n        (\n            [doc] =&amp;gt; stdClass Object\n                (\n                    [path] =&amp;gt; Array\n                        (\n                            [0] =&amp;gt; Bob\n                            [1] =&amp;gt; pics\n                            [2] =&amp;gt; meal\n                        )\n\n                )\n\n        )\n\n    [1] =&amp;gt; stdClass Object\n        (\n            [doc] =&amp;gt; stdClass Object\n                (\n                    [path] =&amp;gt; Array\n                        (\n                            [0] =&amp;gt; Alice\n                            [1] =&amp;gt; pics\n                            [2] =&amp;gt; vacations\n                            [3] =&amp;gt; rome\n                        )\n\n                )\n\n        )\n\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can modify the code to check casesensitive.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["更改数组/对象嵌套组合数组中的值时出现问题", ["\n\n", "I don't know what to do to get this done what would like to do. I tried multiple approaches, e.g. I used ", "array_map", ", ", "array_walk", ", nested ", "foreach", " loops with ", "get_object_vars", " and I worked with ", "json_decode/encode", " and so on. I always come a little bit further but never reach my goal and I would like to get some guidance from you", "\n\n", "Basically when you see the array below, how would you proceed when you want to change some value in the ", "path", " array for multiple values in the array itself? ", "\n\n", "My questions:", "\n\n", "1) Is it right that I must convert both nested objects to an array first or is this not nesessary to do this? I mean I always get some type conversion error which tells me that I either have everything as an object or array. Is this right?", "\n\n", "2) If this mistery is solved, which php array function is the appropriate one to change values in an array(/object)? As I have written above, I tried so many and I don't see the trees in the woods anymore. Which one do you suggest to me to use in a foreach loop?", "\n\n", "Array\n(\n    [0] => stdClass Object\n        (\n            [doc] => stdClass Object\n                (\n                    [path] => Array\n                        (\n                            [0] => Bob\n                            [1] => pictures\n                            [2] => food\n                        )\n                )\n\n        )\n\n    [1] => stdClass Object\n        (\n            [doc] => stdClass Object\n                (\n\n                    [path] => Array\n                        (\n                            [0] => Alice\n                            [1] => pictures\n                            [2] => vacations\n                            [3] => rome\n                        )\n                )\n\n        )\n)\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;比如 你的表格对应的字段 是list &amp;#61; [{&amp;#39;商品编码&amp;#39;:&amp;#39;1111&amp;#39;,&amp;#39;价格&amp;#39;:11}]&lt;/p&gt;\n\n&lt;p&gt;那你在添加值的时候 list.push({&amp;#39;商品编码&amp;#39;:&amp;#39;2222&amp;#39;,&amp;#39;价格&amp;#39;:22})&lt;/p&gt;\n\n&lt;p&gt;添加完成之后 你的list 应该是  [{&amp;#39;商品编码&amp;#39;:&amp;#39;1111&amp;#39;,&amp;#39;价格&amp;#39;:11},{&amp;#39;商品编码&amp;#39;:&amp;#39;2222&amp;#39;,&amp;#39;价格&amp;#39;:22}]&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["element-ui的table表格给它赋值时是一条一条加，怎么让它不覆盖前面的数据", ["我使用键盘监听文本框，监听到后会根据文本框填写的id找到对应信息并赋值给表格，我重新在填一个id查到的数据就会覆盖掉上一条，反正它表格只会显示一条数据。", "\n\n", "我想要的效果和在商店前台付款时差不多，扫了五件商品，扫一件，表格就加一件，然后一起付款，求大佬帮忙解答一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环嵌套&amp;#xff0c;有几层就套几次&amp;#xff0c;或者把这个变成str&amp;#xff0c;正则获取&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["Python 数据结构 复杂字典列表嵌套怎么取", ["有没有办法这些复杂的字典列表嵌套，里面的时间跟对应的值取出来，赋值给一个新的列表呀", "\n", "so2，pm co 这些就同样取出来，赋值给不同列表（加一个判断，例如一个so2存在就赋值，没有就空）", "\n"]], "Tag": "程序设计"}
{"Answer": "已解决,附带解决方案:\r\n以下是最主要的代码:\r\n```\r\n \t@Override\r\n\tpublic int getCount() {\r\n\t\tif (haveMore != 0) {\r\n\t\t\treturn isShowAll ? allList.size() + 1 : subCount;\r\n\t\t}else {\r\n\t\t\treturn subCount;\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Object getItem(int position) {\r\n\t\tif (haveMore != 0) {\r\n\t\t\treturn isShowAll ? allList.get(position) : subList.get(position);\r\n\t\t}else {\r\n\t\t\treturn subList.get(position);\r\n\t\t}\r\n\t}\r\n```\r\n主要逻辑就是,在getcount里进行判断,是否需要进行全部数据的展示.", "Konwledge_Point": "赋值的嵌套", "Question": ["【求助】gridview作为listview的item的一些问题", ["我在项目中，使用ListView嵌套GridView，把listview的每一个item都用gridview处理，现在需求是这样的：每一个gridview的item数量不是固定的，超过一定数量之后，要显示更多按钮，点击即可展开更多并显示收起。如下图所示：", "\n\n", "\n\n", "这种需求，应该如何实现呢？神们指点迷津！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;main里你没有调用函数啊&amp;#xff0c;也没有输入三个变量&lt;br /&gt;int a,b,c,sum;&lt;br /&gt;scanf(&amp;#34;%d%d%d&amp;#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c);&lt;br /&gt;sum&amp;#61;Max(a,b,c)&amp;#43;Min(a,b,c);&lt;br /&gt;printf(&amp;#34;Max&amp;#43;Min&amp;#61;%d&amp;#34;,sum);&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["函数嵌套的调用~求三个数中最大数和最小数的和", ["求三个数中最大数与最小数的和。要求：编写三个函数；一个函数实现求3个数中最大数；另一个函数实现求3个数中最小数；第3个函数调用前两个函数，实现求最大数与最小数的和。", "输入格式:", "给3个变量赋值。", "输出格式:", "输出最大数与最小数的和。按格式“Max+Min=”的格式输出。", "输入样例:", "1 -24 20", "输出样例:", "Max+Min=-4", "我的编码", "#include <stdio.h>", "int Max(int x,int y,int z)", "{", "int Max;", "if(x>y)", "Max=x;", "else", "Max=y;", "if(z>Max)", "Max=z;", "return Max;", "}", "int Min(int x,int y,int z)", "{", "int Min;", "if(x<y)", "Min=x;", "else", "Min=y;", "if(z<Min)", "Min=z;", "return Min;", "}", "int main()", "{", "int sum=0;", "printf(\"Max+Min=%d\",sum);", "return 0;", "}", "哪里错了呀"]], "Tag": "程序设计"}
{"Answer": "难点在于取数据，看代码：\r\n分别得到这一行和指定单元格的数据。\r\nvar recode = grid.getSelectionModel().getSelected(); \r\nvar row= recode.data // get the hash of the row  \r\nvar feild=recode.get(\"columName\") // get the value of the cell \r\n至于拼装弹出框，就比较简单了，弹出一个formPanel的window。里面有个字段显示你的数据，而默认数据就是你从grid的recode中取得的。", "Konwledge_Point": "赋值的嵌套", "Question": ["关于EXT中给FORM填充数据的问题", ["这里有个需求，在GRID里选中一行数据，点GRID的TBAR上的一个按钮会弹出一个带有FORM的WINDOW，问题是怎么把选中的那行数据填充到FORM里"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;datalist &amp;#61; []\ndef unpack(ls):\n    for v in ls:\n        if type(v) is list:\n            unpack(v)\n        else:\n            datalist.append(v)\n\nlst&amp;#61;eval(input())\nif type(lst) is list:\n    unpack(lst)\n    print(datalist)\nelse:\n    print(&amp;#39;I need a list of lists ! Please check your input !&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["python嵌套列表", ["自定义一个递归函数  unpack(lst) ,参数为一个列表，其中列表可能包含嵌套列表。该函数的作用就是将嵌套列表中的元素解放出来，最后生成一个无嵌套结构的简单列表。例如：\n\nlst=[[1,7,4,6],[5,9,4,2],[88,3,3,1],[88,[31,45,[43,17],19,17],12,1]]\n\n最后解包后的列表为 [1, 7, 4, 6, 5, 9, 4, 2, 88, 3, 3, 1, 88, 31, 45, 43, 17, 19, 17, 12, 1]\n\n由于嵌套列表的嵌套层数不限，最好的解决方法就是 使用 递归函数解决问题。\n\n主程序首先使用 lst=eval(input())  让用户输入一个嵌套列表，然后定义一个全局变量如 datalist赋值为空列表。为安全期间，在转换之前先判断输入的数据是否为列表，若是列表，则调用自定义函数 unpack(lst) 进行解包数据，不是列表则提示：I need a list of lists ! Please check your input !\n\n关于递归函数的处理流程：\n\n循环访问lst中的元素，若不是列表，则直接将该元素添加到datalist列表中；若是列表则递归调用unpack函数解包当前元素。\n\n输入描述\n[[1,7,4,6],[5,9,4,2],[88,3,3,1],[88,[31,45,[43,17],19,17],12,1]]\n\n输出描述\n[1, 7, 4, 6, 5, 9, 4, 2, 88, 3, 3, 1, 88, 31, 45, 43, 17, 19, 17, 12, 1]\n\n样例输入1:\n[[1,7,4,6],[5,9,4,2],[88,3,3,1],[88,[31,45,[43,17],19,17],12,1]]\n样例输出1:\n[1, 7, 4, 6, 5, 9, 4, 2, 88, 3, 3, 1, 88, 31, 45, 43, 17, 19, 17, 12, 1]\n样例输入2:\n7\n样例输出2:\nI need a list of lists ! Please check your input !\n语言\nPython\n代码（请注意：不要出现中文）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你Dfind函数的q指针始终指向了新建链表的头结点&amp;#xff0c;你应该在循环内部不断把p置为q的头结点&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["怎么实现嵌套单链表的遍历呀？", ["#include<iostream>", "\n#include<string>", "\nusing namespace std;", "\n\n", "//子链表存放数据", "\nstruct Slist {", "\n    char data;", "\n    Slist* next;", "\n\n", "};", "\n\n", "//父链表存放连表名和子链表", "\nstruct Dlist {", "\n    string data;            //定义链表名字", "\n    Slist* head;            //将子链表插入父链表数据域", "\n    Dlist* next;", "\n};", "\n\n", "//初始化父链表", "\nDlist* initdlist() {", "\n    Dlist* head = new Dlist;", "\n    head->data = \"value\";", "\n    head->head = NULL;", "\n    head->next = NULL;", "\n    return head;", "\n}", "\n//头插法插入父链表数据", "\nDlist* headInsert(Dlist* Head, string data, Slist* head) {", "\n    Dlist* node = new Dlist;", "\n    node->data = data;", "\n    node->head = head;", "\n\n", "    node->next = Head->next;", "\n    Head->next = node;", "\n    return Head;", "\n}", "\n\n", "//子链表的初始化", "\nSlist* initslist() {", "\n    Slist* head = new Slist;", "\n    head->data = 0;", "\n    head->next = NULL;", "\n    return head;", "\n}", "\n\n", "//子链表插入数据", "\nSlist* createslist(Slist* head, int n) {", "\n    Slist* pre = head;", "\n    cout << \"输入\" << n << \"个字符：\";", "\n    for (int i = 0; i < n; i++)", "\n    {", "\n        Slist* p = new Slist;", "\n        cin >> p->data;                                        //新节点的数据域填数据", "\n        pre->next = p;                                        //老结点的next指针指向新节点", "\n        pre = p;                                            //让新节点赋值给老结点 形成一次循环", "\n        pre->next = NULL;                                    //让最后一个新生成的结点指向空 变成尾结点", "\n    }", "\n    return head;", "\n}", "\n\n", "//求父链表长度", "\nint Dlength(Dlist* head) {", "\n    Dlist* p = head->next;", "\n    int count = 0;", "\n    while (p != NULL) {", "\n        count++;", "\n        p = p->next;", "\n\n", "    }", "\n    return count;", "\n}", "\n\n", "//求子节点的长度", "\nint Slength(Slist* head) {", "\n    Slist* p = head->next;", "\n    int count = 0;", "\n    while (p != NULL)", "\n    {", "\n        count++;", "\n        p = p->next;", "\n    }", "\n    return count;", "\n}", "\n\n", "\n//查找父节点", "\nvoid Dfind(Dlist* head, string n)", "\n{", "\n    Dlist* p = head->next;                    //父链表首元节点", "\n    Slist* q = p->head;                        //子链表头结点", "\n    while (p != NULL) {", "\n        if (p->data == n) {", "\n            cout << p->data << \",\";", "\n            while (q->next != NULL) {", "\n                cout << q->data;", "\n                q = q->next;", "\n            }", "\n        }", "\n        p = p->next;", "\n    }", "\n\n", "}", "\n\n", "\nint main() {", "\n\n", "    Slist* p = initslist();", "\n    Dlist* q = initdlist();", "\n    string name;", "\n    while (1) {", "\n        cin >> name;", "\n        if (name == \"createlist\") {", "\n            string a;", "\n            int n;", "\n            cout << \"请输入链表名字:\";", "\n            cin >> a;", "\n            cout << \"请输入结点个数：\";", "\n            cin >> n;", "\n            createslist(p, n);", "\n            headInsert(q, a, p);", "\n            cout << \"插入成功！\" << endl;", "\n        }if (name == \"Dfind\") {", "\n            string a;", "\n            cout << \"输入查找的链表名字：\";", "\n            cin >> a;", "\n            Dfind(q, a);", "\n        }", "\n        if (name == \"0\") {", "\n            delete p, q;", "\n            break;", "\n        }", "\n    }", "\n\n", "    return 0;", "\n}", "\n ", "\n\n", "//遍历的结果不是相应对应的链表  而是我新建的链表"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这有啥为什麽啊&amp;#xff0c;你在内层for循环中不断修改这个值&amp;#xff0c;内层循环结束后&amp;#xff0c;回到外层循环时&amp;#xff0c;这个变量并不会恢复为初始值啊&amp;#xff0c;因为初始值你是在外层for循环之前设置的啊。所以必须放到外层循环内&amp;#xff0c;内层循环前进行初始化&amp;#xff0c;这样每次内层循环开始前&amp;#xff0c;这个变量才能恢复初始值。&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["赋值一次之后只能在一个循环管用吗？", ["假设有一个for循环，里面嵌套了一个for循环，某个变量在第一个前面赋值了一次，这个变量在第二个for循环里就不管用了，这是为什么？"]], "Tag": "程序设计"}
{"Answer": "下个断点，看看在哪一步挂的。还有for()循环之前测试一下i的值是多少。", "Konwledge_Point": "赋值的嵌套", "Question": ["关于vector嵌套使用的问题", ["class person", "\n{", "\npublic:", "\n    CString name;", "\n    std::vector vecfriends;", "\n\n", "};", "\nstd::vector vecperson;", "\n我想给person中的friends元素逐个赋值 然后显示", "\n是这样写的", "\nint i = -1;", "\nvoid CSocial_testDlg::OnAdd() ", "\n{", "\n    UpdateData(TRUE);", "\n    person A;", "\n    A.name = m_name;", "\n    MessageBox(\"已添加\");", "\n    m_name = \"\";", "\n    vecperson.push_back(A);", "\n    i++;", "\n    UpdateData(FALSE);", "\n}", "\n\n", "void CSocial_testDlg::OnButton3() ", "\n{", "\n    UpdateData(TRUE);", "\n    int j = 0;", "\n    vecperson[i].vecfriends[j] = m_friends;", "\n    j++;", "\n    MessageBox(\"已添加\");", "\n    m_friends = \"\";", "\n    UpdateData(FALSE);", "\n}", "\n\n", "void CSocial_testDlg::OnShow() ", "\n{", "\n    // TODO: Add your control notification handler code here", "\n    CString str;", "\n    str = \"姓名：\";", "\n    for (int k = 0;k < vecperson[i].vecfriends.size();k++)", "\n    {", "\n        str = str + vecperson[i].vecfriends[k] + \"\\n\";", "\n    }", "\n    MessageBox(str);", "\n}", "\n\n", "运行了就挂了 是什么问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;类成员的初始化于初始化列表中完成, 先于构造函数体执行. 即成员真正的初始化发生在初始化列表中, 而不是构造函数体中.&lt;/p&gt;\n&lt;p&gt;因为要满足类成员先进行初始化&amp;#xff0c;所以必须把类成员的初始化放在类初始化的前面&amp;#xff0c;即把它放到初始化列表中进行初始化。如果把它放到函数体中则无法优先初始化。&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/cckluv/article/details/109144665?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;4.14.0&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen\" id=\"textarea_1629594462304_1629594504806_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;什么时候必须使用初始化列表&amp;#xff1f;_cckluv的博客-CSDN博客_什么时候必须用初始化列表&lt;/span&gt;\n  &lt;span class=\"md_link_desc\" style=\"\"&gt;什么时候必须使用初始化列表1. 初始化 !&amp;#61; 赋值.a.初始化代表为变量分配内存. 变量在其定义处被编译器初始化(编译时). 在函数中, 函数参数初始化发生在函数调用时(运行时).b.赋值代表&amp;#34;擦除对象当前值, 赋予新值&amp;#34;. 它不承担为对象分配内存的义务2. C&amp;#43;&amp;#43;中, 类成员的初始化于初始化列表中完成, 先于构造函数体执行. 即成员真正的初始化发生在初始化列表中, 而不是构造函数体中.如果类中有一个成员是一个引用, 由于引用必须给予初始值, 因此, 引用必须使用初始化列表.同理, const&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/cckluv/article/details/109144665?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;4.14.0&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["c++类和对象  使用嵌套构造函数初始化时的问题", ["\n", "#include<iostream>", "\n", "#include<string>", "\n", "using", " ", "namespace", " ", "std", ";\n\n", "class", " ", "card", "\n{\n", "public", ":\ncard(", "int", " a,", "string", " b)\n{\nindex=a;\npassword=b;\n}\n", "int", " index;\n", "string", " password;\n\n};\n", "class", " ", "student", "\n{\n", "public", ":\n\n", "1.", "  student(", "string", " a,", "int", " b,", "string", " c):m_name(a),m_card(b,c){}   ", "//right", "\n\n", "2.", "  student(", "string", " a,", "int", " b,", "string", " c)\n{ \nm_name=a;\n", "card ", "m_card", "(", "b,c", ")", "; ", "//error", "\n}\n\n", "string", " m_name;\ncard m_card;\n};\n\n\n", "void", " ", "f", "(", ")", "\n{\n", "student ", "hfj", "(", "\"hanfeijiang\"", ",", "0213", ",", "\"hfj020709\"", ")", ";\ncout << hfj.m_name << endl;\ncout << hfj.m_card.index << endl;\ncout << hfj.m_card.password << endl;\n}\n\n\n", "int", " ", "main", "(", ")", "\n{\nf();\n    ", "return", " ", "0", ";\n}\n", "\n", "想问一下在class student中那两种student含参构造函数，为什么第一种直接使用初始化列标就正常赋值，第二种就错误。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;外层 &lt;code class=\"language-javascript\"&gt;ListBox&lt;/code&gt; 绑定 &lt;code class=\"language-javascript\"&gt; List&amp;lt;OrderList&amp;gt;  list&lt;/code&gt; &amp;#xff0c;&lt;br /&gt;内层 &lt;code class=\"language-javascript\"&gt;ListBox&lt;/code&gt; 绑定 &lt;code class=\"language-javascript\"&gt;List&amp;lt;OrderList&amp;gt; list&lt;/code&gt; 里面的 &lt;code class=\"language-javascript\"&gt;ShangPin[] shangpinzu&lt;/code&gt; ,&lt;br /&gt;直接写属性名。&lt;br /&gt;比如外层某一项是一个 &lt;code class=\"language-javascript\"&gt;OrderList&lt;/code&gt; 对象&amp;#xff0c;内层会去解析外层这个 &lt;code class=\"language-javascript\"&gt;OrderList&lt;/code&gt; 对象的 &lt;code class=\"language-javascript\"&gt;shangpinzu&lt;/code&gt; 属性&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["wpf的listbox嵌套listbox内层的数据过长时外层行高如何跟着自适应", ["问题遇到的现象和发生背景", "\n", "WPF的listbox嵌套listbox时，里层的listbox数据过长时，外层的行高不能自适应变高", "\n", "问题相关代码，请勿粘贴截图", "\n", "<", "Window", " ", "x:Class", "=", "\"WPFceshiTEST.MainWindow\"", "\n        ", "xmlns", "=", "\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"", "\n        ", "xmlns:x", "=", "\"http://schemas.microsoft.com/winfx/2006/xaml\"", "\n        ", "xmlns:d", "=", "\"http://schemas.microsoft.com/expression/blend/2008\"", "\n        ", "xmlns:mc", "=", "\"http://schemas.openxmlformats.org/markup-compatibility/2006\"", "\n        ", "xmlns:local", "=", "\"clr-namespace:WPFceshiTEST\"", "\n        ", "mc:Ignorable", "=", "\"d\"", "\n        ", "Title", "=", "\"MainWindow\"", " >", "\n\n  \n\n    ", "<", "Grid", " ", "Width", "=", "\"1200\"", " ", "Height", "=", "\"600\"", ">", "\n\n        ", "<", "ListBox", " ", "Name", "=", "\"LB1\"", "  ", "HorizontalContentAlignment", "=", "\"Stretch\"", " ", "Width", "=", "\"1000\"", " ", "Height", "=", "\"500\"", "  >", "\n            ", "<", "ListBox.ItemTemplate", ">", "\n                ", "<", "DataTemplate", ">", "\n                    ", "<", "Grid", " ", "Margin", "=", "\"5\"", ">", "\n                        ", "<", "Grid.ColumnDefinitions", ">", "\n                            ", "<", "ColumnDefinition", " ", "Width", "=", "\"100\"", "/>", "\n                            ", "<", "ColumnDefinition", " ", "Width", "=", "\"300\"", "/>", "\n                            ", "<", "ColumnDefinition", " ", "Width", "=", "\"300\"", "/>", "\n                        ", "</", "Grid.ColumnDefinitions", ">", "\n                        ", "<", "Grid.RowDefinitions", ">", "\n                            ", "<", "RowDefinition", " ", "Height", "=", "\"30\"", "/>", "\n                            ", "<", "RowDefinition", " ", "Height", "=", "\"30\"", "/>", "\n                            ", "<", "RowDefinition", " ", "Height", "=", "\"100\"", "/>", "\n                        ", "</", "Grid.RowDefinitions", ">", "\n                        ", "<", "TextBlock", " ", "Grid.Row", "=", "\"0\"", " ", "Grid.Column", "=", "\"0\"", "  ", "Text", "=", "\"", "{Binding ordernumber}", "\"", "/>", "\n                        ", "<", "TextBlock", " ", "Grid.Row", "=", "\"0\"", " ", "Grid.Column", "=", "\"1\"", " ", "Text", "=", "\"", "{Binding shuliang}", "\"", "/>", "\n                       \n                        ", "<", "TextBlock", " ", "Grid.Row", "=", "\"1\"", " ", "Grid.Column", "=", "\"0\"", " ", "Text", "=", "\"我是第二行\"", " ", "Grid.ColumnSpan", "=", "\"3\"", " />", "\n                        ", "<", "ListBox", "  ", "Name", "=", "\"LB2\"", " ", "Grid.Row", "=", "\"2\"", " ", "Grid.Column", "=", "\"0\"", " ", "Grid.ColumnSpan", "=", "\"3\"", " ", "ItemsSource", "=", "\"", "{Binding shangpinzu}", "\"", " >", "\n                            ", "<", "ListBox.ItemTemplate", ">", "\n                                ", "<", "DataTemplate", ">", "\n                                    ", "<", "TextBlock", " ", "Text", "=", "\"", "{Binding tupian}", "\"", "/>", "\n                                ", "</", "DataTemplate", ">", "\n                            ", "</", "ListBox.ItemTemplate", ">", "\n                        ", "</", "ListBox", ">", "\n                    ", "</", "Grid", ">", "\n                ", "</", "DataTemplate", ">", "\n            ", "</", "ListBox.ItemTemplate", ">", "\n        ", "</", "ListBox", ">", "\n    ", "</", "Grid", ">", "\n", "</", "Window", ">", "\n\n", "\n", "\n", "using", " System;\n", "using", " System.Collections.Generic;\n", "using", " System.Linq;\n", "using", " System.Text;\n", "using", " System.Threading.Tasks;\n", "using", " System.Windows;\n", "using", " System.Windows.Controls;\n", "using", " System.Windows.Data;\n", "using", " System.Windows.Documents;\n", "using", " System.Windows.Input;\n", "using", " System.Windows.Media;\n", "using", " System.Windows.Media.Imaging;\n", "using", " System.Windows.Navigation;\n", "using", " System.Windows.Shapes;\n\n", "namespace", " ", "WPFceshiTEST", "\n{\n    ", "///", " ", "<summary>", "\n    ", "///", " MainWindow.xaml 的交互逻辑", "\n    ", "///", " ", "</summary>", "\n    ", "public", " ", "partial", " ", "class", " ", "MainWindow", " : ", "Window", "\n    {\n        ", "public", " ", "MainWindow", "(", ")", "\n        {\n            InitializeComponent();\n            List<OrderList> list = ", "new", " List<OrderList>();\n            ShangPin[] shangpinzus = ", "new", " ShangPin[", "10", "];\n\n            ", "for", " (", "int", " i = ", "0", "; i <", "10", "; i++)\n            {\n                ShangPin shangpins = ", "new", " ShangPin(", "\"第\"", " + i + ", "\"个商品的图片\"", ", ", "\"第\"", " + i + ", "\"个商品的标题\"", ");\n                shangpinzus[i] = shangpins;\n\n                OrderList ord = ", "new", " OrderList(", "\"订单编号：A500\"", " + i + ", "\"    商品数量：\"", ", ", "10", ", shangpinzus);\n                list.Add(ord);\n            }\n            LB1.ItemsSource = list;\n        }        \n        ", "public", " ", "class", " ", "OrderList", "\n        {\n            ", "public", " ", "string", " ordernumber { ", "get", "; ", "set", "; }\n            ", "public", " ", "int", " shuliang { ", "get", "; ", "set", "; }\n\n            ", "public", " ShangPin[] shangpinzu { ", "get", "; ", "set", "; }\n            ", "public", " ", "OrderList", "(", "string", " ordernumber, ", "int", " shu, ShangPin[] shangpinmingxi", ")", "\n            {\n                ", "this", ".ordernumber = ordernumber;\n                ", "this", ".shuliang = shu;\n                shangpinzu = shangpinmingxi;\n            }\n        }\n        ", "public", " ", "class", " ", "ShangPin", "\n        {\n            ", "public", " ", "string", " tupian { ", "get", "; ", "set", "; }\n            ", "public", " ", "string", " biaoti { ", "get", "; ", "set", "; }\n            ", "public", " ", "ShangPin", "(", "string", " tu, ", "string", " bt", ")", "\n            {\n                tupian = tu;\n                biaoti = bt;\n            }\n        }\n    }\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "数据组成是：  订单列表，包含了订单编号，订单数量，商品详情（商品详情包含标题，图片）；", "需要外层listbox显示订单编号和订单数量，内层的listbox显示对应的该行订单的标题，图片列表。", "\n", "两个listbox嵌套在一起的时候，外层的listbox我可以通过 itemsource=list，在c#这边赋值，可以展现出来，内层的listbox通过绑定list的集合对象的子集合也可以读取到数据，子集合数据过多时，内层的listbox不会自己变高，受外层的listbox的固定行高的影响，出现了右侧的下拉条，怎么才能让外层的listbox的行高跟着里面的变化呢？", "\n", "，"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ndef &lt;span class=\"hljs-meta\"&gt;Max&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;)\n\n\ndef &lt;span class=\"hljs-meta\"&gt;Min&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;min&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;)\n\n\ndef func(string):\n    &lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt; &amp;#61; [eval(i) for i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; string.split(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)]\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;Max&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-meta\"&gt;Min&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;)\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-keyword\"&gt;    data &lt;/span&gt;&amp;#61; &lt;span class=\"hljs-meta\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入3个数(中间空格隔开):&amp;#34;&lt;/span&gt;)\n    result &amp;#61; func(string&amp;#61;data)\n    pr&lt;span class=\"hljs-meta\"&gt;int&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#34;Max&amp;#43;Min&amp;#61;{result}&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有用的话点一下采纳&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["函数的嵌套调用 看看怎么做", ["求三个数中最大数与最小数的和。要求：编写三个函数；一个函数实现求3个数中最大数；另一个函数实现求3个数中最小数；第3个函数调用前两个函数，实现求最大数与最小数的和。", "\n", "输入格式:", "给3个变量赋值。", "\n", "输出格式:", "输出最大数与最小数的和。按格式“Max+Min=”的格式输出。", "\n", "输入样例:", "1 -24 20", "结尾无空行", "输出样例:", "Max+Min=-4", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;books &amp;#61; []\nnum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nchoice &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        choice &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; choice:\n            name &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入书名&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; book in books:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; book.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;书名&amp;#39;&lt;/span&gt;) &amp;#61;&amp;#61; name:\n                    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;添加书名重复&amp;#xff0c;重新添加&amp;#39;&lt;/span&gt;)\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                choice &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n\n    author &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入作者&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    price &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入价格&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    books.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;书名&amp;#39;&lt;/span&gt;: name, &lt;span class=\"hljs-string\"&gt;&amp;#39;作者&amp;#39;&lt;/span&gt;: author, &lt;span class=\"hljs-string\"&gt;&amp;#39;价格&amp;#39;&lt;/span&gt;: price})\n    num &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(books)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/458946812446112.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["#python 我想实现循环判断并且跳出循环嵌套，个人认为逻辑通顺，但是没能实现功能", ["问题遇到的现象和发生背景", "\n", "为啥我的代码跑起来一直是请输入书名？", "\n", "问题相关代码，请勿粘贴截图", "\n", "     books = []\n     num = ", "0", "\n     choice = ", "1", "\n     ", "while", " ", "1", ":\n                  ", "if", " num < ", "3", ":\n                             ", "while", " choice:\n                                               name = ", "input", "(", "'请输入书名：'", ")\n                                               ", "for", " book in books:\n                                               ", "if", " book.", "get", "(", "'书名'", ") == name:\n                                               ", "print", "(", "'添加书名重复，重新添加'", ")\n                                               ", "else", ":\n                                                       choice = ", "0", "\n                                                       ", "break", "\n\n    author = ", "input", "(", "'请输入作者：'", ")\n    price = ", "input", "(", "'请输入价格：'", ")\n    books.", "append", "({", "'书名'", ": name, ", "'作者'", ": author, ", "'价格'", ": price})\n    num += ", "1", "\n    ", "print", "(books)\n               ", "else", ":\n                      ", "print", "(", "'图书信息添加完成！'", ")\n                      ", "print", "(books)\n                      ", "break", "\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我的想法是如果书名输入不重复choice重新赋值为0，while循环跳出，break跳出for循环", "\n", "我想要达到的结果", "\n", "判断输入的书名是否重复，如果重复提示重新输入，不重复继续输入作者和价格"]], "Tag": "程序设计"}
{"Answer": "我印象里好像是有区分的，也是类似于传参数  时，引用对象和赋值对象的区别，要是赋值对象，比如int，float这种，是新开辟空间做的，需要定义返回值，但是如果是结构体的话，属于java的引用对象，那就是直接操作内存赋值就行了。返回值定义成void。\r\n你看看吧：http://www.cnweblog.com/fly2700/archive/2012/03/21/320083.html", "Konwledge_Point": "赋值的嵌套", "Question": ["C++通过jni向java层传递自定义结构体参数", ["自定义结构体在java中定义为相应的类，存储数据变量", "\n\n", "C++的回调函数的注册函数为：", "\n\n", " void CCtest::registerInit(void (*pFunc)(PARAMETER*)){\n    xxxxxxxx\n    ...\n}\n", "\n\n", "现有若干问题不解。", "\n1.该函数的函数签名的变量类型该如何进行书写？", "\n是直接将参数看作是void类型？", "\n\n", " {\"registerInit\",\"()V\",(void*)native_registerInit}; ?\n", "\n\n", "2.假设上述问题解决。", "\n在jni层通过定义", "\n\n", " static jmethodID registerInit_callback_method_ID;\ntypedef void (* registerInit_Cb_t)(PARAMETER* myPara);\n", "\n\n", "在native_registerInit函数中直接调用", "\n\n", " CCtest::registerInit(registerInit_Cb_t)；\n", "\n\n", "registerInit_Cb_t指向具体的实现函数nativeregisterInit_Cb；", "\n\n", "在函数void nativeregisterInit_Cb(PARAMETER*)中，通过", "\n\n", " env->CallVoidMethod(xxxobject,xxxmethodID,/*xxx结构体的参数如何表示成类类型？（jobject？）*/);\n", "\n\n", "调用java层中的回调函数。"]], "Tag": "程序设计"}
{"Answer": "```\r\n 因为你指向了新的对象，而不是修改对象本身（string是只读的）\r\n你的代码需要这么写\r\nclass Warp\r\n{\r\npublic String reason;\r\n}\r\nprivate void change(boolean flag,Warp w){\r\n            flag = false;\r\n            w.reason += \"测试\";\r\n}\r\nWarp w = new Warp();\r\nw.reason = \"开始\";\r\nthis.change(flag, w);\r\n```", "Konwledge_Point": "赋值的嵌套", "Question": ["一个关于方法调用赋值的问题", ["话不多说，直接上代码", "\n\n", "public class Entity {\n\n        private void run(){\n            boolean flag = true;\n            String reason = \"开始\";\n            this.change(flag, reason);\n            System.out.println(flag+\"///////\"+reason);\n        }\n\n\n        private void change(boolean flag,String reason){\n            flag = false;\n            reason += \"测试\";\n        }\n\n        public static void main(String[] args) {\n            Entity ent = new Entity();\n            ent.run();\n        }\n}\n\n", "\n\n", "就想问问诸位大牛，为什在chang方法里面改变不了run方法里面的两个变量的值，我试过把两个变量定义成全局的也不行，想知道具体是什么原因，如果要实现这种效果的话要怎么改"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You defined 'Weight_Data' as array of struct&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Weight_Data [] struct {...}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And used it as &lt;code&gt;[]Weight_Data&lt;/code&gt; field in &lt;code&gt;AutoGenerated&lt;/code&gt; struct. This makes it as array of array of struct ie &lt;code&gt;[][]struct{...}&lt;/code&gt;. I have corrected this mistake in below executable code sample.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype AutoGenerated struct {\n    StatusMessage string `json:\"Status_message\"`\n    Weight_Data   []Weight_Data\n}\n\ntype Weight_Data struct {\n    Weight_Date string  `json:\"Weight_date\"`\n    Weight_Kgs  float64 `json:\"Weight_kg\"`\n}\n\nfunc main() {\n\n    var current_weight []Weight_Data\n\n    current_weight = append(current_weight, Weight_Data{\n        Weight_Date: \"2017-11-17 15:22:59 -0600 CST\",\n        Weight_Kgs:  86.273,\n    })\n\n    current_weight = append(current_weight, Weight_Data{\n        Weight_Date: \"2017-11-14 15:22:59 -0600 CST\",\n        Weight_Kgs:  85.273,\n    })\n\n    final := AutoGenerated{\"Success\", current_weight}\n\n    js, err := json.Marshal(final)\n    fmt.Println(string(js), err)\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\"Status_message\":\"Success\",\"Weight_Data\":[{\"Weight_date\":\"2017-11-17 15:22:59 -0600 CST\",\"Weight_kg\":86.273},{\"Weight_date\":\"2017-11-14 15:22:59 -0600 CST\",\"Weight_kg\":85.273}]} &amp;lt;nil&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["根据长度为N的数组创建嵌套的JSON", ["\n\n", "I’ve been working to create a nested JSON from an Array but can’t seem to figure out how to do it. I currently have the following code, however its not working and cannot seem to fix it no matter what I do.\nThe array that i’m currently working with look as follows. Note i’m trying to make JSON work no matter the array’s length.", "\n\n", "[{2017-11-20 13:18:12 -0600 CST 70.261 2 1} {2017-11-20 13:11:15 -0600 CST 70.253 0 1} {2017-11-20 13:08:45 -0600 CST 70.43 0 1} {2017-11-20 13:05:29 -0600 CST 70.32000000000001 0 1} {2017-11-13 15:32:43 -0600 CST 76.354 0 1} {2017-11-13 15:26:41 -0600 CST 86.273 2 1} {2017-11-13 15:22:59 -0600 CST 86.273 2 1}][{2017-11-20 13:18:12 -0600 CST 70.261}]\n", "\n\n", "The output i would like to would look something like this :", "\n\n", "{\n   \"Status_message\": \"successful\",\n   \"Weight_data\": [{\n   \"Weight_date\": \"2017-11-17 15:22:59 -0600 CST\",\n    \"Weight_kg\": 86.273\n}, {\n    \"Weight_date\": \"2017-11-14 15:22:59 -0600 CST\",\n    \"Weight_kg\": 85.273\n}, {\n    \"Weight_date\": \"2017-11-12 15:22:59 -0600 CST\",\n    \"Weight_kg\": 76.273\n}, {\n    \"Weight_date\": \"2017-11-16 15:22:59 -0600 CST\",\n    \"Weight_kg\": 66.273\n }]\n", "\n\n", "My current code looks as follows, two structs", "\n\n", "type AutoGenerated struct {\n     StatusMessage string `json:\"Status_message\"`\n     Weight_Data   [] Weight_Data\n }\n\ntype Weight_Data [] struct {\n     Weight_Date string  `json:\"Weight_date\"`\n     Weight_Kgs   float64 `json:\"Weight_kg\"`\n}\n\n\nfunc main() {\n\n\n   var mainStruct AutoGenerated\n\n\n\n   var current_weight [] Weight_Datas\n\n   for i, _ := range m.ParseData().Weights {\n\n        current_weight = Weight_Datas{m.ParseData().Weights[i].Date.String(),m.ParseData().Weights[i].Kgs}\n\n        mainStruct.Weight_Datas = append(mainStruct.Weight_Datas, current_weight)\n\n\n  }\n\n    final := AutoGenerated{\"Success\",current_weight}\n\n    js, err := json.Marshal(final)\n\n }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这有个类似的问题, 你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/7765672?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7765672&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["为什么在两个for的嵌套循环里对i和j的赋值的形式不同", ["\n", "\n", "\n", "为什么在两个for的嵌套循环里对i和j的赋值的形式不同，得到的结果不一样呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以这样去做&amp;#xff0c;&lt;br /&gt;1、每种题型设置一个的类型id&amp;#xff0c;设置一个对象把所有题型的id都存在来&amp;#xff0c;作为这个对象的属性&amp;#xff08;key&amp;#xff09;&lt;br /&gt;2、在弹出框的表格里面设置分值的时候匹配id把这个分值放到对象相应的id&amp;#xff0c;作为这个属性的值&amp;#xff08;value&amp;#xff09;&lt;br /&gt;3、设置完成之后&amp;#xff0c;这个对象里面就会有各类题型的id与其对应的分值&amp;#xff0c;然后在试卷展示页面根据题型id去获取对应的分值&lt;br /&gt;达到批量设置题型分值的效果&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["element-ui table表格多个输入框怎么", ["根据数据列表显示这个弹框得设置，数据要怎么处理，输入框要怎么循环出来v-model怎么绑定"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这两个的不同之处在于&lt;br /&gt;当isprime的初始化放在开头时&amp;#xff0c;isprime为全局变量&amp;#xff0c;那么只有到程序结束isprime才会被释放&amp;#xff0c;也就是说在整个程序运行时&amp;#xff0c;isprime的变化是”累加“的&amp;#xff0c;比如isprime先是为1&amp;#xff0c;后改变为0&amp;#xff0c;如果不在改变isprime的值那么isprime在整个程序运行时都不会改变。所以只能输出2和3&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;当isprime放在for循环中时&amp;#xff0c;每一次的循环都会将isprime初始化为1&amp;#xff0c;那么即使后续没有改变isprime的语句&amp;#xff0c;在下一次循环进行时isprime的值都会被重置为1&amp;#xff0c;那么就可以输出其他不同结果&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["C语言嵌套循环for", [" 我前后把", "isprime", "的赋值放在", "for", "循环内和开头，发现输出结果不同。尤其是在开头赋值，输出结果仅有", "2", "和", "3", "。请问这是什么原因？\n", "\n", "（顺变问下vs有没有好的排版插件，我有强迫症每次自己调就很浪费时间）", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在Vue iView的Table组件中&amp;#xff0c;要渲染expandRow子表格&amp;#xff0c;可以通过&lt;code class=\"language-javascript\"&gt;render&lt;/code&gt;函数来实现。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;您可以在&lt;code class=\"language-javascript\"&gt;render&lt;/code&gt;函数中返回一个包裹了&lt;code class=\"language-javascript\"&gt;Table&lt;/code&gt;组件的&lt;code class=\"language-javascript\"&gt;div&lt;/code&gt;标签&amp;#xff0c;并设置子表格的数据。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;Table&lt;/span&gt;\n      &lt;span class=\"hljs-attr\"&gt;:columns&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;tableColumns&amp;#34;&lt;/span&gt;\n      &lt;span class=\"hljs-attr\"&gt;:data&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;tableData&amp;#34;&lt;/span&gt;\n      &lt;span class=\"hljs-attr\"&gt;:expanded-row-render&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;renderExpandedRow&amp;#34;&lt;/span&gt;\n   &amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;Table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n   &lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; {\n      data () {\n         &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; {\n            &lt;span class=\"hljs-attr\"&gt;tableColumns&lt;/span&gt;: [\n               &lt;span class=\"hljs-comment\"&gt;// 表格列定义&lt;/span&gt;\n            ],\n            &lt;span class=\"hljs-attr\"&gt;tableData&lt;/span&gt;: [\n               &lt;span class=\"hljs-comment\"&gt;// 表格数据&lt;/span&gt;\n            ]\n         }\n      },\n      &lt;span class=\"hljs-attr\"&gt;methods&lt;/span&gt;: {\n         renderExpandedRow (params) {\n            &lt;span class=\"hljs-comment\"&gt;// params是Object类型&amp;#xff0c;包含了当前行的所有数据和索引&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (\n               &lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;Table&lt;/span&gt;\n                     &lt;span class=\"hljs-attr\"&gt;:columns&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;subTableColumns&amp;#34;&lt;/span&gt;\n                     &lt;span class=\"hljs-attr\"&gt;:data&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;params.row.subTableData&amp;#34;&lt;/span&gt;\n                  &amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;Table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n               &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n            )\n         }\n      }\n   }\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个例子中&amp;#xff0c;渲染&lt;code class=\"language-javascript\"&gt;expandRow&lt;/code&gt;子表格的方法是通过&lt;code class=\"language-javascript\"&gt;render-expanded-row&lt;/code&gt;属性来实现的。在&lt;code class=\"language-javascript\"&gt;renderExpandedRow&lt;/code&gt;方法中&amp;#xff0c;我们可以通过&lt;code class=\"language-javascript\"&gt;params&lt;/code&gt;参数来获取当前行的数据以及索引。在返回的JSX代码中&amp;#xff0c;我们构建了包含子表格的&lt;code class=\"language-javascript\"&gt;div&lt;/code&gt;标签&amp;#xff0c;通过&lt;code class=\"language-javascript\"&gt;subTableColumns&lt;/code&gt;和&lt;code class=\"language-javascript\"&gt;params.row.subTableData&lt;/code&gt;来指定子表格的列和数据。&lt;/p&gt;\n&lt;p&gt;关于&lt;code class=\"language-javascript\"&gt;render&lt;/code&gt;函数的参数问题&amp;#xff0c;如果您在&lt;code class=\"language-javascript\"&gt;render&lt;/code&gt;函数中需要对参数进行修改&amp;#xff0c;可以先将参数赋值给另一个变量&amp;#xff0c;再对该变量进行修改。例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;render (h, { &lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;column&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; }) {\n   let &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;column&lt;/span&gt;.key] &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; // 将参数赋值给一个变量\n   &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; // 修改这个变量的值\n   &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &amp;lt;span&amp;gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;}&amp;lt;/span&amp;gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个例子中&amp;#xff0c;我们将&lt;code class=\"language-javascript\"&gt;row[column.key]&lt;/code&gt;的值赋值给了一个变量&lt;code class=\"language-javascript\"&gt;temp&lt;/code&gt;&amp;#xff0c;然后对&lt;code class=\"language-javascript\"&gt;temp&lt;/code&gt;进行修改&amp;#xff0c;最后返回修改后的结果。这样做可以避免直接修改参数带来的副作用。&lt;/p&gt;\n&lt;p&gt;如果您还有其他问题或者需要更详细的解答&amp;#xff0c;请提供更具体的问题描述和代码示例&amp;#xff0c;以便我们更好地为您解决问题。&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["Vue iview table如何渲染expandRow子表格?", ["首先，我渲染expandRow是这样的渲染方法——通过render来渲染的：", "\n\n", "然后，现在碰到的问题是，当我点击行的时候，我想往params.row里面插入数据，**这个数据是要通过接口返回获取的**。", "\n\n", "于是，我就把这个请求放在了render里面，然后把return放在请求方法里面。然而，这样做的话，expandRow就不执行渲染了，打debugger也不会跳转到这里，肯定是出bug了...", "\n\n", "如果把请求放在外边的话:", "\n\n", "\n", "都是先执行渲染，才到请求的，所以，数据没有变化...", "\n", "我担心到时候，点击别的行的话，会干扰到前面点击展示的expandRow数据。", "\n", "所以，还能有什么办法去解决这个render里面的params赋值和修改值的问题呢?"]], "Tag": "程序设计"}
{"Answer": "```\r\n void swap(int *x,int *y)\r\n{\r\nint temp;\r\ntemp=*x;\r\n*x=*y;\r\n*y=temp;\r\n}\r\n\r\nswap(&amp;a[0],&amp;a[1]);\r\n```", "Konwledge_Point": "赋值的嵌套", "Question": ["C  嵌套调用交换函数swap", ["我定义了一个数组int a[5];", "\n    声明了两个函数，一个是赋值函数，一个是交换函数", "\n    void f1(int *a)", "\n{", "\n        a[0]=1;", "\n        a[1]=2;", "\n}", "\n\n", "void swap(int *x,int *y)", "\n{", "\n        int *temp;", "\n        *temp=*x;", "\n        *x=*y;", "\n        *y=*temp;", "\n}", "\n\n", "现在，我要使用函数嵌套调用去交换a[0]与a[1]的值，是这样写是正确的", "\nvoid f1(int *a)", "\n{", "\n        a[0]=1;", "\n        a[1]=2;", "\n        swap(a[0],a[1]);", "\n}", "\n\n", "还是这样写是正确的？", "\nvoid f1(int *a)", "\n{", "\n        a[0]=1;", "\n        a[1]=2;", "\n        swap(&a[0],&a[1]);", "\n}"]], "Tag": "程序设计"}
{"Answer": "没有看你写的的Repeater 相关的代码，我估计可能是下面几原因：\r\n1.  repeater.DataBind()没有调用。应该是：repeater.DataSource = 【你的DataSourc】;接着repeater.DataBind();\r\n2.  没有设置模板列，如下：\r\n &amp;lt;asp:Repeater runat=\"server\" ID=\"rptNewProductList\" OnItemDataBound=\"rptNewProductList_ItemDataBound\"&amp;gt;\r\n                            &amp;lt;ItemTemplate&amp;gt; 【你的模板】 如：&amp;lt;div&amp;gt;&amp;lt;%#Eval(\"数据的属性名称\")%&amp;gt;&amp;lt;div&amp;gt;\r\n                            &amp;lt;/ItemTemplate&amp;gt;\r\n                        &amp;lt;/asp:Repeater&amp;gt;\r\n3. 没有在Page_Load（或是其它相关页面事件。）中调用 绑定reapter的方法。", "Konwledge_Point": "赋值的嵌套", "Question": ["asp.net  Repeater问题", ["repeater嵌套中内层repeater绑定数据时datasource没法用，怎么回事，求解啊"]], "Tag": "程序设计"}
{"Answer": "sql还有有点让人混淆，因为t2只是department表的别名，而你的domain对象里并没有t2.这样的属性，所以我帮你修改一下sql:\r\n\r\n\r\nString sql = \"select t1.id,t1.name,t2.id as 'department.id',t2.name as 'department.name' from Employee t1 inner join Department t2 on t1.departmentId=t2.id where t1.id=?\"; \r\n\r\n\r\n有两种方法解决你的问题\r\n1. List&lt;Employee&gt; empList = jdbcTemplate.query(sql, BeanPropertyRowMapper.newInstance(Employee.class),2);\r\nBeanPropertyRowMapper是RowMapper的子类，它的转换方法是在mapRow()方法里实现的，所以可以重构这个方法\r\n\r\nList&lt;Employee&gt; empList = jdbcTemplate.query(sql, new RowMapper&lt;Employee&gt;(){\r\n\r\n\t\t\tpublic Employee mapRow(ResultSet rs, int rowNum) {\r\n                Employee emp = new Employee();\r\n                try {\r\n\t                emp.setId(rs.getInt(\"id\"));\r\n\t                emp.setName(rs.getString(\"name\"));\r\n\t                emp.setDepartment(new Department());\r\n\t                emp.getDepartment().setId(rs.getInt(\"department.id\"));\r\n\t                emp.getDepartment().setName(rs.getString(\"department.name\"));\t                \r\n                } catch (SQLException e) {\r\n\t                emp = null;\r\n                }\r\n                \r\n                return emp;\t\t\t\r\n            }\r\n\t\t\t\r\n\t\t},2);\r\n\r\n\r\n第二个方法，是在你的Employee和Department这两个对象上建立一个EmployeeVO的对象，这个对象的属性是包括两个对象的，如：\r\n\r\npublic class EmployeeVO {\r\n    private int id;\r\n    private String name;\r\n    private int departmentId;\r\n    private String departmentName;\r\n    ....\r\n}\r\n\r\n\r\n这样的话，你的sql也要进行修改如下：\r\n\r\nString sql = \"select t1.id,t1.name,t2.id as 'departmentId',t2.name as 'departmentName' from Employee t1 inner join Department t2 on t1.departmentId=t2.id where t1.id=?\";", "Konwledge_Point": "赋值的嵌套", "Question": ["Spring JdbcTemplate BeanPropertyRowMapper能否支持内嵌对象属性的包装？", ["环境：Spring 3.0.", "\n如有entity bean Employee.java和Department.java:", "\n[code=\"java\"]public Class Employee{", "\n    private Integer id;", "\n    private String name;", "\n    private Department department;", "\n    ....", "\n}", "\npublic Class Department{", "\n    private Integer id;", "\n    private String name;", "\n    ....", "\n}[/code]", "\n使用关联查询，无法给department赋值：", "\n[code=\"java\"]String sql = \"select t1.id,t1.name,t2.id as 't1.department.id',t2.name as 't1.department.name' from Employee t1 inner join Department department on t1.departmentId=department.id where t1.id=?\";", "\n\n", "return this.jdbcTemplate.query(sql, BeanPropertyRowMapper.newInstance(Employee.class),1);[/code]", "\n\n", "是BeanPropertyRowMapper不支持内嵌对象属性的赋值吗，有什么好的解决方案，谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说明你在最初初始化二维list的时候就搞错了&lt;br /&gt;第二维的每个list填充的其实是同一个list的不同引用&lt;br /&gt;生成一个空二维list这样做&lt;br /&gt;lst&amp;#61;[[0]*10 for _ in range(100)] #一个10*100的二维list&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["py双重for循环嵌套if", ["在循环里单独输出每一个赋值后的zhongzi [i][j]都正常，循环跳出后输出整体zhongzi后就变成同一列的值一样了，即便在循环里输出时是不同的，最后也会同。"]], "Tag": "程序设计"}
{"Answer": "使用下面的代码\r\n我在网上随便搜了一个qq空间的地址(http://410159784.qzone.qq.com/)，这个空间的iframe的id和你的不一样(后面注释掉的那两个id)，所以我id定义成了变量，方便修改。另外把操作放在了try里面，这样就算没有找到也不会导致程序奔溃。你可以自己修改一下。\r\n还有需要注意的是webBrowser1.IsBusy这个判断可能不能准确判断嵌套的iframe页面是否加载完成。\r\n\r\n```\r\n \t\t\tif (!webBrowser1.IsBusy)//判断有没有加载新的文档\r\n\t\t\t{\r\n\t\t\t\tstring frameBlog = \"tgb\";//\"tblog\";\r\n\t\t\t\tstring frameEdit = \"veditor1_Iframe\";\r\n\t\t\t\tstring btnPost = \"btnPostMsg\";//\"submitCommentBtn\";\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tHtmlElement html_input1 = webBrowser1.Document.Window.Frames[frameBlog].Document.Window.Frames[frameEdit].Document.Body;\r\n\t\t\t\t\tif (html_input1 != null) {\r\n\t\t\t\t\t\thtml_input1.InnerHtml = \"Google\";\r\n\t\t\t\t\t\tHtmlElement searchButton = webBrowser1.Document.Window.Frames[frameBlog].Document.GetElementById(btnPost);\r\n\t\t\t\t\t\tif (searchButton != null) {\r\n\t\t\t\t\t\t\tsearchButton.InvokeMember(\"click\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (Exception) {\r\n\t\t\t\t\t//throw;\r\n\t\t\t\t}\r\n\t\t\t}\r\n```", "Konwledge_Point": "赋值的嵌套", "Question": ["c#使用iframe嵌套问题", ["小弟想用WebBrowser控件来操作QQ空间的留言板，完成自动留言并点击提交按钮，目前提交按钮功能已经实现，但是往留言板中写文字还没有实现，哪位大神帮帮忙，我的代码如下", "\n\n", "if (!webBrowser1.IsBusy)//判断有没有加载新的文档", "\n{ ", "\n    HtmlElement html_input1 = webBrowser1.Document.Window.Frames[\"tgb\"].Document.All[\"veditor1_Iframe\"];", "\n     html_input1.SetAttribute(\"value\", \"google\");//这步不好使", "\n    HtmlElement searchButton = webBrowser1.Document.Window.Frames[\"tgb\"].Document.All[\"btnPostMsg\"];//获取到iframe id为tgb下面的button", "\nsearchButton.InvokeMember(\"click\");//这步好使", "\n\n", "我发现veditor1_Iframe也是一个iframe的id，也就是iframe“tgb”里面又有一个iframe“veditro1_Iframe”，并且里面没有找到输入框的id，请问这时怎么去寻找这个输入框并给它赋值呢？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把你下拉框选中的数据对应的赋值给你绑定的账号名称和账号用户就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-select v-model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;value&amp;#34;&lt;/span&gt; placeholder&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择&amp;#34;&lt;/span&gt; &amp;#64;change&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;changeMethod&amp;#39;&lt;/span&gt;&amp;gt;\n    &amp;lt;&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-option  label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt; value&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&amp;gt; &amp;lt;/&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-option&amp;gt;\n    &amp;lt;&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-option  label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;yyy&amp;#34;&lt;/span&gt; value&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;456&amp;#34;&lt;/span&gt;&amp;gt; &amp;lt;/&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-option&amp;gt;\n  &amp;lt;/&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-select&amp;gt;\n&amp;lt;&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt; v-model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;账号名称&amp;#34;&lt;/span&gt; &amp;gt;&amp;lt;/&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;&amp;gt;\n&amp;lt;&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt; v-model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;账号用户&amp;#34;&lt;/span&gt; &amp;gt;&amp;lt;/&lt;span class=\"hljs-keyword\"&gt;el&lt;/span&gt;-&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//js&lt;/span&gt;\nchangeMethod(&lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.账号名称 &amp;#61; value.aa\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.账号用户 &amp;#61; value.bb\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["vue实现table嵌套事件", ["<el-table v-loading=", "\"loading\"", " :", "data", "=", "\"payplangrid_fx_list\"", " :row-", "class", "-", "name", "=\"", "rowClassName", "\"", "\n                ", "@selection", "-change=", "\"selectionChangeHandle\"", " :key=", "\"randomKey\"", " ", "@cell", "-dblclick=", "\"editData\"", "\n                style=", "\"width: 100%\"", "\n   >\n  <el-table-column label=", "\"银行账号\"", " align=", "\"center\"", " prop=", "\"bankacct\"", ">\n          <template slot-scope=", "\"scope\"", " style=", "\"line-height: 10px;height: 10px\"", ">\n            <el-select size=", "\"mini\"", " v-model=", "\"scope.row.bankacct\"", " ", "@change", "=", "\"payplangrid_fx_inbank\"", " ", "@blur", "=", "\"alterData(scope.row,scope.column)\"", " ", "class", "=\"", "statement1", "\">", "\n\n              <el-option v-", "for", "=", "\"(item, index) in displayOptions\"", "\n                         :key=", "\"index\"", "\n                         :label=", "\"item.brcname\"", "\n                         :value=", "\"item.bankacct\"", "\n                         v-", "if", "=", "\"scope.row[scope.column.prop + 'isShow']\"", "\n                         :ref=", "\"scope.column.prop\"", "\n                         :disabled=", "\"form.rw == 'r'\"", ">\n              </el-option>\n              <span ", "class", "=\"", "option", "-", "span", "\">", "{{ scope.row.brcname }}\n              <span ", "class", "=\"", "option", "-", "span", "-", "short", "\">", "{{ scope.row.bankacct }}\n            </el-select>\n          </template>\n        </el-table-column>\n</el-table>\n\n created() {\n    ", "this", ".commonQuery(", "\"query_payplangrid_fx_inbank\"", ", {}).then(response => {\n      ", "this", ".displayOptions = response.", "data", ";\n    });\n    ", "this", ".query()\n  },\nmethods: {\n payplangrid_fx_inbank() {\n      ", "this", ".payplangrid_fx_list.bankacct = ", "\"\"", ";\n      ", "this", ".autofilter_org={bankcode:", "this", ".payplangrid_fx_list.bankacct};\n      ", "this", ".commonQuery(", "'query_payplangrid_fx_inbank'", ", { bankacct: ", "this", ".payplangrid_fx_list.bankacct }).then((response) => {\n        ", "this", ".$", "set", "(", "this", ".payplangrid_fx_list, ", "'bankbranch'", ", response.", "data", "[", "0", "].bankbranch)\n        ", "this", ".$", "set", "(", "this", ".payplangrid_fx_list, ", "'ccy'", ", response.", "data", "[", "0", "].chname)\n      })\n    },\n alterData(row, column) {\n      row[column.prop + ", "'isShow'", "] = ", "false", "\n      ", "this", ".refreshTable()\n    },\neditData(row, column) {\n      row[column.prop + ", "'isShow'", "] = ", "true", "\n      ", "//refreshTable是table数据改动时，刷新table的", "\n      ", "this", ".refreshTable()\n      ", "this", ".$nextTick(() => {\n        ", "this", ".$refs[column.prop] && ", "this", ".$refs[column.prop].focus()\n      })\n    },\n}\n", "\n", "在vue中实现el-table的下拉框单选账号后，通过所查询到的sql给账号名称和账号用户赋值，怎么实现呢", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;打开控制台&amp;#xff0c;看有报错吗&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["el-table里写el-input输入不上内容", ["这样写的，页面的输入框不能输入内容，是什么原因啊？v-model定义在data里了已经。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def fun1():\n    global name, num\n    &lt;span class=\"hljs-attribute\"&gt;name&lt;/span&gt;&amp;#61;input()\n    &lt;span class=\"hljs-attribute\"&gt;num&lt;/span&gt;&amp;#61;input()\n    &lt;span class=\"hljs-attribute\"&gt;password&lt;/span&gt;&amp;#61;input()\n    def fun2(name_str,num_str):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;员工姓名为&amp;#xff1a;&amp;#34;&lt;/span&gt;,name_str)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;员工工号为&amp;#xff1a;&amp;#34;&lt;/span&gt;,num_str)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; password &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#34;123&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;321&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;345&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;]:\n        fun2(name,num)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;查无此人&amp;#34;&lt;/span&gt;;num&amp;#61;&amp;#34;0000&amp;#34;\nfun1()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;员工姓名为&amp;#xff1a;&amp;#34;&lt;/span&gt;,name,&lt;span class=\"hljs-string\"&gt;&amp;#34;员工工号为&amp;#xff1a;&amp;#34;&lt;/span&gt;,num)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["python函数的嵌套定义", ["调整代码的对齐缩进，完成提议要求，", "增加外部变量声明语句，使得函数内赋值的变量能在函数外使用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用随机数赋值&amp;#xff0c;冒泡排序好了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;\nint main()\n{\n    int a[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;],i,&lt;span class=\"hljs-keyword\"&gt;j,k;\n&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;srand(time(NULL));\n&lt;/span&gt;    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;8;i&amp;#43;&amp;#43;)&lt;/span&gt;\n        a[i] &amp;#61; rand();\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;7;i&amp;#43;&amp;#43;)&lt;/span&gt;\n        for(&lt;span class=\"hljs-keyword\"&gt;j&amp;#61;0;j&amp;lt;7-i;j&amp;#43;&amp;#43;)\n&lt;/span&gt;        {\n            if(a[&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;gt; a[&lt;span class=\"hljs-keyword\"&gt;j&amp;#43;1])\n&lt;/span&gt;            {\n                k &amp;#61; a[&lt;span class=\"hljs-keyword\"&gt;j];\n&lt;/span&gt;                a[&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;#61; a[&lt;span class=\"hljs-keyword\"&gt;j&amp;#43;1];\n&lt;/span&gt;                a[&lt;span class=\"hljs-keyword\"&gt;j&amp;#43;1] &lt;/span&gt;&amp;#61; k;\n            }\n        }    \n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;8;i&amp;#43;&amp;#43;)&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["关于#c++#的问题，如何解决？", ["######定义长度为8的整型数组a[8]，随机赋值后使用嵌套循环实现数组数据不 元素从小到大排列", "要怎么做"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用Promise.all。例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;async &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; test() {\n  &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; arr &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;{id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;},&lt;span class=\"hljs-built_in\"&gt;{id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;},&lt;span class=\"hljs-built_in\"&gt;{id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}]\n&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; list &amp;#61; arr.&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;item&lt;/span&gt; &amp;#61;&amp;gt; {\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  fetch(&lt;span class=\"hljs-string\"&gt;&amp;#39;https://yapi.dingxiang-inc.com/mock/64/test?a&amp;#61;&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;.id&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;(d &amp;#61;&amp;gt; d.json())\n    .&lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;(data &amp;#61;&amp;gt; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;.d &amp;#61; data.data)\n})\n\nawait Promise.all(list)\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; arr\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["小程序循环发异步请求困惑", ["需求: 获取视频列表数据 的vid 再发请求通过vid获取视频地址", "循环嵌套发请求?", "/* 就是要拿 map 处理过后的数据  再给this.data赋值*/", "//不写 setTimeout的话 就是先执行 setData赋值  再执行的map函数", "/** 这种情况该怎么处理 目前使用的是 setTimout*/", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不方便分析的话&amp;#xff0c;你在代码里面输出一些信息看下&amp;#xff0c;便于观察分析问题。&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["关于在pandas内循环中更新 DataFrame 内容   异常问题", ["这是一个简单的两层循环嵌套，在导出pandas时发现 data1.iloc[m，11] 的数据很多并没有被赋值 显示的值为空   但是data2.iloc[m,12]  却被正常赋值了 （我的意思就是 有的data1.iloc[m，11]=data2.iloc[m,3]   这一句 有的时候 没有被赋值，导致导出的pandas  一部分有值一部分没值）   这是怎么出现这种情况的   是我逻辑问题还是什么？", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的update 为什么没有索引。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/641715007136111.png\" /&gt;&lt;/p&gt;&lt;br /&gt;没建索引肯定不一样啊。查询除非order by&lt;br /&gt;不然结果集虽然结果是一样的&amp;#xff0c;但是顺序肯定不一样。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["SQLITE update与select中排序不一致问题", ["原始表YY", "\n", "目标表TT", "\n", "赋值语句", "update TT set DA = (", "select group_concat(Y.DA) from", "( select * from YY order by LN,cast(replace(DA,'J','') as int) ) as Y", " where Y.LN = TT.LN group by Y.LN );", "\n", "赋值结果", "\n", "这里S行对应的DA列里，J11是排在前面", "\n", "挑出赋值语句中的选择语句", "select LN, group_concat(Y.DA) from", "( select * from YY order by LN,cast(replace(DA,'J','') as int) ) as Y", " group by Y.LN", "\n", "执行结果", "\n", "这里可以看到，J2是排在J11前面", "\n", "为什么嵌套一个update，内部的顺序就不一样了呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实他们没有什么本质的区别 ,都是迭代器遍历的语法糖,lambda的形式也是内部调用了foreach,&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/357103255536119.png\" /&gt;&lt;/p&gt;,&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;至于 forech 和 fori  ,他们如果都用迭代器遍历其实是一样的,例如:foreach就等同于 &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;for(java.util.Iterator i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; list.iterator()&lt;span class=\"hljs-comment\"&gt;; i.hasNext();)&lt;/span&gt;\n        {\n            String s &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (String) i.next()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n           System.out.println(s)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n      }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;需要注意的可能就是,比如循环删除元素的时候建议使用迭代器删除&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["问个java中foreach的注意事项", ["\n", "源码：", "\n", "List<Long> shotsIdList = result.stream", "()", ".map", "(BandBindingVO::getRuiShotsId)", ".distinct", "()", ".collect", "(Collectors.toList()", ");\nList<ShotsManageDO> shotsNameList = shotsManageMapper.selectByShotIds", "(shotsIdList)", ";\n\n", "//", "第一种：for循环嵌套赋值\nfor ", "(BandBindingVO bandBindingVO : result)", " {\n      for ", "(ShotsManageDO shotsManageDO : shotsNameList)", " {\n           ", "if", " ", "(shotsManageDO.getRuiShotsId()", ".equals", "(bandBindingVO.getRuiShotsId()", ")){\n                bandBindingVO.", "set", "ShotsArea", "(shotsManageDO.getShotsArea()", ");\n                }\n       }\n}\n", "//", "第二种：foreach 加上lambda\nresult.forEach", "(bandBindingVO -> shotsNameList.forEach(shotsManageDO -> {\n    if (bandBindingVO.getRuiShotsId()", ".equals", "(shotsManageDO.getRuiShotsId()", ")) {\n        bandBindingVO.", "set", "ShotsArea", "(shotsManageDO.getShotsArea()", ");\n    }\n}));\n\n", "\n", "问题一：俩种遍历，哪种跟好？", "问题二：第二种这样在foreach里面再进行foreach遍历赋值有问题吗？", "如果没问题，这样写效率是更高还是更低。", "问题三：如果有空可以给我讲讲for，fori，foreach的区别和各要注意什么事项吗？感谢感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果只是这个需求&amp;#xff0c;而且不用考虑数据异常。可以新生成一个数组&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;lst &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[[&lt;span class=\"hljs-string\"&gt;&amp;#34;好评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;差评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;中评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;好评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;中评&amp;#34;&lt;/span&gt;]&lt;/span&gt;]\nlst1 &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[[1 if m &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;好评&amp;#39;&lt;/span&gt; else 0 if m &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;中评&amp;#39;&lt;/span&gt; else -1 for m in n]&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; lst]\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(lst1)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果要遍历解决&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nlst &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[[&lt;span class=\"hljs-string\"&gt;&amp;#34;好评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;差评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;中评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;好评&amp;#34;&lt;/span&gt;]&lt;/span&gt;, &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#34;中评&amp;#34;&lt;/span&gt;]&lt;/span&gt;]\n\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(lst)):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; type(lst&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;)&amp;#61;&amp;#61;list:\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(lst&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;)):\n            lst&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[j]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; lst&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[j]&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;好评&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; lst&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[j]&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;中评&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(lst)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["Python怎样将一个一维数组组成的列表中对指定的元素进行修改？", ["请问一下大家：目前得到形如[['好评'],……['差评'],['中评'],['差评'],['好评']]的一维数组列表，需要对其中好评全都修改为1，中评修改为0，差评修改为-1，请问代码应该是怎样去写，目前思路是通过for循环嵌套if语句对数组中内容进行判断，然后分别对好评、中评、差评进行重新赋值，但是代码还是写不出来，有人有更好的办法或者思路的解决方案代码吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改动处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#define _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;结构体嵌套二级指针练习\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;结构体设计\nstruct TeaCher {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;老师姓名\n    char* name;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;老师带的学生姓名数组\n    char** Studets;\n};\n\nvoid allocateSpace(struct TeaCher** teacherArray) {\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;void allocateSpace(struct TeaCher*** teacherArray) 修改\n\n                        &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;f ((*teacherArray) &amp;#61;&amp;#61; NULL) 修改\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    return;\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;堆区分配内存\n    struct TeaCher* ts &amp;#61; (struct TeaCher*)malloc(sizeof(struct TeaCher) * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n                         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;struct TeaCher** ts &amp;#61; malloc(sizeof(struct TeaCher*) * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;); 修改\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数据赋值\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n                         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;ts[i] &amp;#61; malloc(sizeof(struct TeaCher));&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;给老师分配内存   修改\n        ts[i].name &amp;#61; (char*)malloc(sizeof(char) * &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;给老师姓名属性分配内存\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;ts[i]-&amp;gt;name &amp;#61; ()malloc(sizeof(char) * &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n        sprintf(ts[i].name, &lt;span class=\"hljs-string\"&gt;&amp;#34;TeaCher_%d&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;给老师姓名赋值\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;sprintf(ts[i]-&amp;gt;name, &lt;span class=\"hljs-string\"&gt;&amp;#34;TeaCher_%d&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n        ts[i].Studets &amp;#61; (char**)malloc(sizeof(char*) * &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;给老师带领学生数组分配内存\n                       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;ts[i]-&amp;gt;name &amp;#61; malloc(sizeof(char*) * &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 修改\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;给学生姓名赋值\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            ts[i].Studets[j] &amp;#61; (char *)malloc(sizeof(char) * &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;);\n                       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;ts[i]-&amp;gt;Studets[j] &amp;#61; malloc(sizeof(char) * &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;); 修改\n            sprintf(ts[i].Studets[j], &lt;span class=\"hljs-string\"&gt;&amp;#34;%s_studet_%d&amp;#34;&lt;/span&gt;, ts[i].name, j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;sprintf(ts[i]-&amp;gt;Studets[j], &lt;span class=\"hljs-string\"&gt;&amp;#34;%s_studet_%d&amp;#34;&lt;/span&gt;, ts[i]-&amp;gt;name, j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  修改\n        }\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立关系\n    (*teacherArray) &amp;#61; ts;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;打印操作\nvoid printTeacharArray(struct TeaCher* teacherArray) {\n                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;void printTeacharArray(struct TeaCher** teacherArray)  修改\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, teacherArray[i].name);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;老师姓名\n                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, teacherArray[i]-&amp;gt;name);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;   %s\\n&amp;#34;&lt;/span&gt;, teacherArray[i].Studets[j]);\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;   %s\\n&amp;#34;&lt;/span&gt;, teacherArray[i]-&amp;gt;Studets[j]);\n        }\n    }\n}\nvoid test01() {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;老师数组创建\n    struct TeaCher* teacherArray &amp;#61; NULL;\n                   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;struct TeaCher** teacherArray &amp;#61; NULL;  修改\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;分配内存\n    allocateSpace(&amp;amp;teacherArray);\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;打印所有老师和学生的信息\n    printTeacharArray(teacherArray);\n}\nint main() \n{\n    test01();\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    return EXIT_SUCCESS;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["调试运行出现指针异常", ["\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<stdlib.h>", "\n\n", "//结构体嵌套二级指针练习", "\n", "//结构体设计", "\n", "struct", " ", "TeaCher", " {\n    ", "//老师姓名", "\n    ", "char", " *name;\n\n    ", "//老师带的学生姓名数组", "\n    ", "char", " **Studets;\n\n\n\n};\n\n", "void", " ", "allocateSpace", "(", "struct", " TeaCher ***teacherArray)", " ", "{\n    \n    ", "if", " (teacherArray == ", "NULL", ")\n    {\n        ", "return", ";\n    }\n    ", "//堆区分配内存", "\n     ", "struct", " ", "TeaCher", " ** ts = ", "malloc", "(", "sizeof", "(", "struct", " TeaCher *) * ", "3", ");\n    ", "//数据赋值", "\n    \n    ", "for", " (", "int", " i = ", "0", "; i < ", "3", "; i++)\n    {\n        ts[i] = ", "malloc", "(", "sizeof", "(", "struct", " TeaCher));", "//给老师分配内存", "\n        ts[i]->name = ", "malloc", "(", "sizeof", "(", "char", ") * ", "64", ");", "//给老师姓名属性分配内存", "\n        ", "sprintf", "(ts[i]->name, ", "\"TeaCher_%d\"", ", i + ", "1", ");", "//给老师姓名赋值", "\n        ts[i]->name = ", "malloc", "(", "sizeof", "(", "char", " *) * ", "4", ");", "//给老师带领学生数组分配内存", "\n        ", "//给学生姓名赋值", "\n\n        ", "for", " (", "int", " j = ", "0", "; j < ", "4", "; j++)\n        {\n            ts[i]->Studets[j] = ", "malloc", "(", "sizeof", "(", "char", ")* ", "64", ");\n            ", "sprintf", "(ts[i]->Studets[j], ", "\"%s_studet_%d\"", ", ts[i]->name, j + ", "1", ");\n        }\n    \n    }\n\n\n    ", "//建立关系", "\n    *teacherArray = ts;\n\n}\n\n", "//打印操作", "\n", "void", " ", "printTeacharArray", "(", "struct", " TeaCher ** teacherArray)", " ", "{\n\n    ", "for", " (", "int", " i = ", "0", "; i < ", "3", "; i++)\n    {\n        ", "printf", "(", "\"%s\\n\"", ", teacherArray[i]->name);", "//老师姓名", "\n        ", "for", " (", "int", " j = ", "0", "; j < ", "4", "; j++)\n        {\n            ", "printf", "(", "\"   %s\\n\"", ",teacherArray[i]->Studets[j]);\n        }\n\n    }\n\n}\n\n", "void", " ", "test01", "()", " ", "{\n    ", "//老师数组创建", "\n    ", "struct", " ", "TeaCher", " ** teacherArray = ", "NULL", ";\n\n    ", "//分配内存", "\n    ", "allocateSpace", "(&teacherArray);\n    \n    ", "//打印所有老师和学生的信息", "\n    ", "printTeacharArray", "(teacherArray);\n\n}\n\n\n", "int", " ", "main", "()", " ", "{\n\n    ", "test01", "();\n\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " EXIT_SUCCESS;\n}\n", "\n", "调试发现一个", "\n", "\n", "这里报错", "需要怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; ans[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;j)\n        {\n            ans[i] &amp;#43;&amp;#61; a[j][i];\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i) ans[i] /&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; ans[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;j)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;a[i][j]);\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(a,ans);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2lf &amp;#34;&lt;/span&gt;,ans[i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/352455345256143.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["需要写个程序符合4条要求", ["输入一个3行3列的矩阵（数据类型不限，整型或浮点型均可），编写函数对矩阵按列求均值，保存在一个一维数组中，在主函数中输出该一维数组", "\n", "a. 举例：\n\n", "    假设3行3列的矩阵为\n", "\n", "    1   2   3\n", "\n", "    4   5   6\n", "\n", "    7   8   9\n", "\n", "    则输出结果为4.00   5.00   6.00（保留两位小数）\n", "\nb. 说明：\n\n", "    i. 程序中包含主函数main()和子函数，子函数的功能是对矩阵按列求均值\n", "\n", "    ii. 在主函数中定义二维数组和一维数组，二维数组中元素的赋值（从键盘输入）是在主函数中实现\n", "\n", "    iii. 将二维数组和一维数组作为子函数参数，参数传递方式为地址传递，在子函数中使用嵌套两重循环计算一维数组中每个元素的值；子函数的返回值为void类型\n", "\n", "    iv. 在主函数中输出一维数组中每个元素的值，保留两位小数", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;翻译一下就懂了&amp;#xff0c;你这个代码翻译到网页上显示的是&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;&amp;lt;script&amp;gt;\nvar a &amp;#61; lala;\n&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;lala就成了一个未声明的变量&amp;#xff0c;所以程序无法执行&amp;#xff0c;正确的赋值应该是&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;var a &amp;#61; &amp;#39;&amp;lt;?php echo $a[&amp;#39;a&amp;#39;];?&amp;gt;&amp;#39;;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["js 中 php 输出数组变量 为什么要经过 json_encode", ["<?php", "\n\n", "$a = ['a' => 'lala'];", "\n\n", "?>", "\n\n", "<script>", "\n\n", "var a = <?php echo $a['a]; ?>", "\n</script>", "\n\n", "js 中嵌套php 代码的原理是什么？ 我的理解是 php代码先执行 直接 将输出的字符串 lala 赋值给 js 变量 a 但是 实际结果 显然不是这样为什么？ 考虑到 js不支持 关联数组 所以不行？ 但是php代码 不是直接输出的字符串吗 难道还包含 值的类型 这其中 有什么原理？"]], "Tag": "程序设计"}
{"Answer": "var dataProperty = {\r\nproperty1:'name1',\r\nproperty2:'name2',\r\nproperty3:'name3'\r\n}\r\n\r\n\r\nvar dataValues = [{\r\n\tname0:\"12\",\r\n\tname1:\"13\",\r\n\tname2:\"14\"\r\n\r\n},{\r\n\tname0:\"22\",\r\n\tname1:\"23\",\r\n\tname2:\"24\"\r\n}];\r\n//以数组的属性值name0,name1和name2不确定属性是动态的 \r\n$.each(dataValues,function(index,datas){ \r\n\r\n$.each(dataProperty,function(index2,property){ \r\n//我拿name0,到name3的值通过如下方式，无法拿到 \r\n  alert(datas[property]); \r\n}); \r\n}); \r\n\r\n这样试试，\r\n其实你这个直接用javascript的反射就可以拿到对像的属性了\r\n\r\n像 \r\nvar a = {field1:'aaa',field2:'222'}\r\n\r\nfor(var _a in a ){\r\n   alert(a[_a]);\r\n}", "Konwledge_Point": "赋值的嵌套", "Question": ["Jquery each 的高级使用问题", ["在使用jquery嵌套时，出现问题", "\nhtmValue  ='';", "\n$.each(data.values, function(index,value){", "\n   htmValue +='", "';", "\n  htmValue +='", "';", "\n  htmValue +=''+value.name+'';", "\n$.each(data.titles, function(index2,title){", "\n    var keys = json2string(title.value);", "\n    alert(keys); 显示的值为name", "\n        alert(value[\"name\"]); 显示的值正确", "\n    alert(value[keys]); 显示undefined", "\n    htmValue +='' + value[keys] +'';", "\n});", "\nhtmValue +='';", "\n});\n\n", "在使用.each时，外的循环的 key值不能动态的赋值？", "\n这是为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;既然已知的两个数组都是有序的&amp;#xff0c;就可以直接同时遍历两个数组&amp;#xff0c;择其一填入结果数组即可&amp;#xff0c;一个单层的循环即可&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["将2个已知有序的数组合并为一个新的有序数组。如下代码，已有两个数组 arr1 和 arr2，要求将两个数组中元素合并到数组 arr3 中，合并时要去除数组中的重复", ["将2个已知有序的数组合并为一个新的有序数组。如下代码，已有两个数组 arr1 和 arr2，要求将两个数组中元素合并到数组 arr3 中，合并时要去除数组中的重复数据。在下面代码中的补全代码处，补全下面代码实现相应功能。在补全处可以定义新的变量来完成合并功能。", "\n", "#", "include", " ", "<stdio.h>", "\n", "void", " ", "sort", "(", "int", " *a,", "int", " N)", "//编写sort函数 ", "\n", "{\n", "for", " (", "int", " i = ", "0", "; i < N - ", "1", "; i++)\n{\n", "int", " min = i;\n", "for", " (", "int", " j = i + ", "1", "; j < N; j++) ", "if", " (a[min] > a[j]) min = j;\n", "int", " t = a[min]; a[min]=a[i];a[i] =t;\n}\n}\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " arr1[] = {", "3", ",", "6", ",", "8", ",", "9", ",", "9", ",", "11", ",", "45", "}; \n    ", "int", " arr2[] = {", "1", ",", "3", ",", "6", ",", "8", ",", "45", ",", "89", "};\n    ", "int", " arr3[", "20", "]; \n    ", "int", " i, len;\n    \n    ", "// 补全代码处", "\n    ", "int", " j,k;\n    ", "for", "(i = ", "0", "; i < ", "7", "; i ++)", "//对于arr1[]的元素进行查重 ", "\n    {\n        ", "for", "(j = i+", "1", "; j <", "7", "; j ++)", "//对后面每个元素比较，去重。", "\n        {\n            ", "if", "(arr1[j] == arr1[i])", "//发现重复元素。", "\n            {\n                ", "for", "(k = j+", "1", "; k<", "7", "; k ++)", "//依次前移一位。", "\n                    arr1[k", "-1", "] = arr1[k];\n            }\n        }\n    }\n    ", "for", " (i = ", "0", "; i < ", "7", "; i++)arr3[i] = arr1[i];", "//先将arr1的元素赋值给arr3 ", "\n    ", "for", "(i=", "0", ";i<", "7", ";i++)", "//利用for循环嵌套，将arr1和arr2相同的元素变成0，进行筛选 ", "\n    {\n        ", "for", " (j = ", "0", "; j < ", "6", "; j++)\n        {\n            ", "if", " (arr1[i] == arr2[j])\n                arr2[j] = ", "0", ";\n        }\n    }\n    len = ", "6", ";\n    ", "for", "(i=", "0", ";i<", "6", ";i++)", "//将arr2的元素赋值给arr3 ", "\n    {\n        ", "if", "(arr2[i]>", "0", "){ \n        arr3[len] = arr2[i];\n        len++; \n        }\n    }\n    ", "for", "(i=", "0", ";i<len;i++){\n        ", "sort", "(arr3,len);", "//对arr3进行从小到大排序 ", "\n    } \n    ", "for", " (i=", "0", "; i<len; ++i)\n    {\n        ", "printf", "(", "\"%d \"", ", arr3[i]);\n    }\n    ", "printf", "(", "\"\\n\"", ");\n", "//     预期输出结果：1 3 6 8 9 11 45 89", "\n\n    ", "return", " ", "0", ";\n}\n\n", "\n", "刚刚入门c语言，以上是我个人的解决办法，个人感觉代码中应该会有很多可以删除或者简化的地方，希望大家可以和我交流一下，如何改进这个代码"]], "Tag": "程序设计"}
{"Answer": "```\r\nimport ast\r\nwith open('test_log.log', 'r') as f:\r\n    for row in f.readlines():\r\n        if row.startswith(\"b'{\"):\r\n            res = ast.literal_eval(row.lstrip(\"b'\").rstrip().rstrip(\"'\").replace(\"\\\\\\\\\", \"\\\\\"))\r\n\r\n            print(res)\r\n\r\n```", "Konwledge_Point": "赋值的嵌套", "Question": ["请问如何处理这样的binlog日志文件？", ["1.拿到手的是这样的一个log文件xxx.log:", "\n\n", "orderPlan_test\nb'{\"eventType\":\"INSERT\",\"schemaName\":\"qixiao_test\",\"rowAfter\":{\"update_time\":1575291953000,\"order_plan_id\":63000036509,\"create_time\":1575291953000,\"click_through_json\":\"{\\\\\"landingPage\\\\\":\\\\\"http://www.baidu.com\\\\\",\\\\\"landingPageFlag\\\\\":0,\\\\\"appName\\\\\":\\\\\"tgnr120205\\\\\",\\\\\"account\\\\\":\\\\\"tgnr120205\\\\\"}\"},\"tableName\":\"qx_order_plan_click_through\",\"timestamp\":1575291953000}'\ncreative_test\nb'{\"rowBefore\":{\"update_time\":1575291971000,\"create_time\":1575291971000,\"submit_time\":1575291971000,\"name\":\"\\xe6\\x88\\x91\\xe7\\x9a\\x84\\xe5\\x88\\x9b\\xe6\\x84\\x8f20191202210554\",\"prod_status\":0,\"landing_page\":\"http://www.baidu.com\",\"id\":64000017479,\"prod_fail_type\":0,\"landing_page_flag\":0,\"material_json\":\"{\\\\\"name\\\\\":\\\\\"\\xe6\\x88\\x91\\xe7\\x9a\\x84\\xe5\\x88\\x9b\\xe6\\x84\\x8f20191202210554\\\\\",\\\\\"url\\\\\":1585,\\\\\"title\\\\\":\\\\\"\\xe5\\xb9\\xbf\\xe5\\x91\\x8a\\xe6\\x96\\x87\\xe6\\xa1\\x88123\\\\\",\\\\\"previewData\\\\\":{\\\\\"buttonTitle\\\\\":\\\\\"\\xe4\\xba\\x86\\xe8\\xa7\\xa3\\xe8\\xaf\\xa6\\xe6\\x83\\x85\\\\\"},\\\\\"events\\\\\":{\\\\\"impressionUrl\\\\\":null,\\\\\"clickUrl\\\\\":null},\\\\\"feedId\\\\\":\\\\\"1569467048\\\\\",\\\\\"clickThrough\\\\\":{\\\\\"landingPage\\\\\":\\\\\"http://www.baidu.com\\\\\",\\\\\"landingPageFlag\\\\\":0,\\\\\"appName\\\\\":\\\\\"tgnr120205\\\\\",\\\\\"account\\\\\":\\\\\"tgnr120205\\\\\"}}\",\"status\":1},\"eventType\":\"UPDATE\",\"schemaName\":\"qixiao_test\",\"rowAfter\":{\"update_time\":1575291971000,\"create_time\":1575291971000,\"submit_time\":1575291971000,\"name\":\"\\xe6\\x88\\x91\\xe7\\x9a\\x84\\xe5\\x88\\x9b\\xe6\\x84\\x8f20191202210554\",\"prod_status\":1,\"landing_page\":\"http://www.baidu.com\",\"id\":64000017479,\"prod_fail_type\":0,\"landing_page_flag\":0,\"material_json\":\"{\\\\\"name\\\\\":\\\\\"\\xe6\\x88\\x91\\xe7\\x9a\\x84\\xe5\\x88\\x9b\\xe6\\x84\\x8f20191202210554\\\\\",\\\\\"url\\\\\":1585,\\\\\"title\\\\\":\\\\\"\\xe5\\xb9\\xbf\\xe5\\x91\\x8a\\xe6\\x96\\x87\\xe6\\xa1\\x88123\\\\\",\\\\\"previewData\\\\\":{\\\\\"buttonTitle\\\\\":\\\\\"\\xe4\\xba\\x86\\xe8\\xa7\\xa3\\xe8\\xaf\\xa6\\xe6\\x83\\x85\\\\\"},\\\\\"events\\\\\":{\\\\\"impressionUrl\\\\\":null,\\\\\"clickUrl\\\\\":null},\\\\\"feedId\\\\\":\\\\\"1569467048\\\\\",\\\\\"clickThrough\\\\\":{\\\\\"landingPage\\\\\":\\\\\"http://www.baidu.com\\\\\",\\\\\"landingPageFlag\\\\\":0,\\\\\"appName\\\\\":\\\\\"tgnr120205\\\\\",\\\\\"account\\\\\":\\\\\"tgnr120205\\\\\"}}\",\"status\":1},\"tableName\":\"qx_creative_staging\",\"timestamp\":1575291971000}'\norderPlan_test\nb'{\"eventType\":\"INSERT\",\"schemaName\":\"qixiao_test\",\"rowAfter\":{\"update_time\":1575291953000,\"order_plan_id\":63000036509,\"create_time\":1575291953000,\"target_json\":\"[{\\\\\"id\\\\\":32,\\\\\"type\\\\\":1,\\\\\"isAnti\\\\\":false},{\\\\\"id\\\\\":33,\\\\\"type\\\\\":1,\\\\\"isAnti\\\\\":false},{\\\\\"id\\\\\":1,\\\\\"type\\\\\":210,\\\\\"isAnti\\\\\":false},{\\\\\"id\\\\\":3,\\\\\"type\\\\\":210,\\\\\"isAnti\\\\\":false},{\\\\\"id\\\\\":4,\\\\\"type\\\\\":210,\\\\\"isAnti\\\\\":false},{\\\\\"id\\\\\":2,\\\\\"type\\\\\":210,\\\\\"isAnti\\\\\":false}]\"},\"tableName\":\"qx_order_plan_target\",\"timestamp\":1575291953000}'\n………………\n", "\n\n", "2.明显可见每隔一行是个json格式，我现在希望将这个解析成dic。如果手动赋值，显然是可行的。", "\n3.但是若果我用with open(filename,'r') 打开binlog文件，每一行结果是str格式，无法decode。请问该如何解决？", "\n4.如果用with open(filename,'r+b')打开还是不行", "\n5.1L回答的方法的问题是rowBefore，rowAfter里的中文编码，以及这两个key里嵌套的json格式不对"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;时间回溯的过程中&amp;#xff0c;先把物理脚本停了&lt;br /&gt;等全部回溯完了再开&lt;br /&gt;否则一边回溯一边还要碰撞&amp;#43;往下掉&amp;#xff0c;不乱了&lt;/p&gt;", "Konwledge_Point": "赋值的嵌套", "Question": ["Unity时间回溯问题有bug", ["unity中时间回溯问题，当我回溯到最初位置时，物体却没有静止，而是随着重力下降，求帮忙解决一下", "\n", "using", " System;\n", "using", " System.Collections;\n", "using", " System.Collections.Generic;\n", "using", " UnityEngine;\n\n", "public", " ", "class", " ", "TimeBack", " : MonoBehaviour\n{\n    ", "public", " ", "class", " ", "TimeBack1", " ", "// 定义了一个嵌套类 TimeBack1", "\n    {\n        ", "public", " Vector2 position; ", "// 定义了一个 Vector2 类型的 position 变量", "\n        ", "public", " Quaternion rotation; ", "// 定义了一个 Quaternion 类型的 rotation 变量", "\n\n        ", "public", " ", "TimeBack1", "(Vector2 position, Quaternion rotation)", " ", "// 定义了 TimeBack1 类的构造函数，接受两个参数 position 和 rotation", "\n        ", "{\n            ", "this", ".position = position; ", "// 将传入的 position 参数赋值给当前实例的 position 变量", "\n            ", "this", ".rotation = rotation; ", "// 将传入的 rotation 参数赋值给当前实例的 rotation 变量", "\n        }\n    }\n \n    ", "private", " List<TimeBack1> timeBackList = ", "new", " ", "List", "<TimeBack1>();\n    ", "public", " ", "float", " RecordTime = ", "50f", ";\n    ", "private", " ", "bool", " _isRewarding = ", "false", ";\n    ", "private", " Rigidbody2D rb;\n\n    ", "private", " ", "void", " ", "Awake", "()", "\n    ", "{\n        rb = ", "GetComponent", "<Rigidbody2D>();\n    }\n\n    ", "void", " ", "Update", "()", "\n    ", "{\n        ", "if", " (Input.", "GetMouseButton", "(", "0", "))\n        {\n            ", "StartReward", "();\n        }\n        ", "if", " (Input.", "GetMouseButton", "(", "1", "))\n        {\n            ", "StopReward", "();\n        }\n    }\n\n    ", "private", " ", "void", " ", "FixedUpdate", "()", "\n    ", "{\n        ", "if", " (_isRewarding)\n        {\n            ", "Reward", "();\n        }\n        ", "else", "\n        {\n            ", "Record", "();\n        }\n    }\n\n    ", "private", " ", "void", " ", "Record", "()", " ", "// 定义了一个 Record() 方法，用于记录当前物体的位置和旋转信息", "\n    ", "{\n        ", "if", " (timeBackList.Count > Mathf.", "Round", "(RecordTime / Time.deltaTime)) ", "// 如果时间回放列表中的数据数量大于“记录时间除以帧率”后的结果", "\n        {\n            timeBackList.", "RemoveAt", "(timeBackList.Count - ", "1", "); ", "// 移除列表中的最后一个（时间最久远的）元素", "\n        }\n        timeBackList.", "Insert", "(", "0", ", ", "new", " ", "TimeBack1", "(transform.position, transform.rotation)); ", "// 在列表的开头插入一个新的元素，存储当前物体的位置和旋转信息", "\n    }\n    ", "private", " ", "void", " ", "StartReward", "()", "\n    ", "{\n        _isRewarding = ", "true", ";\n        rb.gravityScale = ", "0", ";\n        rb.isKinematic = ", "true", ";\n    }\n\n    ", "private", " ", "void", " ", "StopReward", "()", "\n    ", "{\n        _isRewarding = ", "false", ";\n        rb.gravityScale = ", "1", ";\n        rb.isKinematic = ", "false", ";\n    }\n    ", "private", " ", "void", " ", "Reward", "()", "\n    ", "{\n        ", "if", " (timeBackList.Count > ", "0", ")\n        {\n            TimeBack1 information = timeBackList[", "0", "];\n            transform.position = information.position;\n            transform.rotation = information.rotation;\n            timeBackList.", "RemoveAt", "(", "0", ");\n        }\n    }\n}\n\n\n"]], "Tag": "程序设计"}
