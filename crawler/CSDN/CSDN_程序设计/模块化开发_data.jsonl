{"Answer": "一般而言是将共同工具类抽象成common模块，达成jar，别的项目依赖此模块，若无分布式架构的需要，service、web等模块都可以在同一模块内，打成war;若有分布式架构的需要，则需要将Service和web区别开来，各自作为一个模块。通过dubbo等分布式架构的注册发现机制，将service打成war启动，进行注册服务，将Web模块打成war去发现服务，从而实现分布式架构。", "Konwledge_Point": "模块化开发", "Question": ["javaweb如何模块化？？？？", ["把一个项目分成多个模块，各模块应该打成什么包呢？jar？对于spring+mybatis+springmvc整合的项目来说，如果打成jar包，应该只能将模块写到service层，不能到控制器，因为当有多个带有控制器的jar，并通过url访问他们时，是不处在同一个会话期的。但是这样写的话（没有控制器），最后还要统一将控制器写在一个项目中。如果把各模块打包成war（带控制器）也不在同一会话期。 一般情况下，javaweb项目，应该如何划分模块，打成什么包。或者如何使多war,jar包共享session?"]], "Tag": "程序设计"}
{"Answer": "Sun的东西，好像就Java语言火了，其他都是半死不活的。。。。\r\n没什么落伍不落伍的。用的人多不多而已。开发是没有问题的。\r\n我个人认为用netbeans开发富客户端之类的东西还是不错的，都有不错的可视化组件可用。", "Konwledge_Point": "模块化开发", "Question": ["Java富客户端：使用Netbeans进行模块化开发，是不是已经落伍了？", ["使用Netbeans进行模块化开发，是不是已经落伍了？", "\n\n", "我手里拿着一本翻译的《NetBeans 富客户端权威教程》的书看，是叶亮在08年翻译的", "\n\n", "还有sun官网上的一些教程，看的刚有了点眉目，想上网上找几个RCP的圈子，但是发现研究的人特别的少", "\n\n", "NetBeans模块化开发真的落伍了吗？", "\n\n", "还有学习的现实意义和经济意义吗？", "\n\n", "它现在还有商业应用吗？", "\n\n", "请各位朋友帮忙回答，如果你们认识NetBeans模块化开发的圈子，介绍我过去看看"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;官方文档说的很详细呀&lt;br /&gt;&lt;a href=\"https://vuex.vuejs.org/zh/guide/modules.html#%E5%B8%A6%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84%E7%BB%91%E5%AE%9A%E5%87%BD%E6%95%B0\" id=\"textarea_1630412307004_1630412628503_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;Module | Vuex&lt;/span&gt;\n  &lt;span class=\"md_link_desc\" style=\"\"&gt;Vue.js 的中心化状态管理方案&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://vuex.vuejs.org/zh/guide/modules.html#%E5%B8%A6%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84%E7%BB%91%E5%AE%9A%E5%87%BD%E6%95%B0&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["Vue 使用 Vuex  modules 模块化开发 组件中引入 createNamespacedHelpers 它有什么作用？", ["\n", "<", "script", ">", "\n", "import", " ", "{ mapState, mapGetters, mapMutations, mapActions }", " ", "from", " ", "\"vuex\"", ";\n\n  ", "//  为什么要使用 createNamespacedHelpers ？ 因为引入了两个 Vuex 模块用于区分吗？", "\n", "import", " ", "{createNamespacedHelpers}", " ", "from", " ", "'vuex'", " \n\n", "const", " ", "{mapState:mapStateUser,mapActions:mapActionUser,mapMutations:mapMutaionuser}", " = ", "createNamespacedHelpers", "(", "'user'", ")\n\n", "const", " ", "{mapState:mapStateCart,mapActions:mapActionCart,mapMutations:mapMutaionCart}", " = ", "createNamespacedHelpers", "(", "'cart'", ")\n\n", "export", " ", "default", " ", "{\n  \n}", "\n", "</", "script", ">", "\n", "\n", "\n", "在组件中使用  import {createNamespacedHelpers} from 'vuex'   有什么作用？"]], "Tag": "程序设计"}
{"Answer": "看你要多大程度去自定义了。\r\n框架层面提供的支持包括：\r\ndependency injection （依赖注入，可以抽象公共接口，自定义的派生接口实现自己的功能，框架动态加载）\r\nasp.net mvc bundle配合less css （实现编程方式加载css）\r\nPartial View （根据需要，为不同的用户加载自定义的子视图）\r\nareas （将应用分区，每个应用可以自由组合功能）\r\nangular/vue去编写SPA，以及客户端化，服务器只提供基本服务、存储和通讯，为不同客户编写自己的SPA\r\nAutoFac 插件化框架\r\nRazor的模块化（看这个 https://www.cnblogs.com/iwangjun/archive/2012/06/03/2532962.html ）", "Konwledge_Point": "模块化开发", "Question": ["ASP.NET MVC扩展，模块化", ["现在有个需求，想请教下大家。（论坛上也提过，但还是想多搜集下更多的建议）", "\n比如现在有个ASP.NET MVC的项目叫BASE，顾名思义就是一个基准网站。", "\n现在有2个客户X和Y，希望给他们做自定义化（在这个BASE项目基础上修改或者追加功能）", "\n比如X客户需要在BASE项目上添加X1功能。", "\nY客户需要在BASE项目上添加Y1功能，并且部分更改BASE项目上原有B1功能达到Y客户的需求。", "\n我不希望去拷贝2个BASE项目，然后去分别针对2个客户再去改的。", "\n而是希望以BASE项目为基准，通过分离，模块化（插件），在BASE项目启动的时候去加载这些新的需求达到追加和覆盖（包含静态文件css，js等）。（这是我的想法）", "\n\n", "想请教下大家，在ASP.NET MVC（我是VS2015环境，MVC5）上，一般是如何去实现这样的需求的？", "\n后台 以及 前台（css，jss）的分离方式该如何处理？"]], "Tag": "程序设计"}
{"Answer": "将程序按照功能分为不同的模块\r\n\r\n不同模块的程序写在不同的包中，\r\n\r\n共同的代码抽取出来形成Util类，为方便调用一般为static的\r\n\r\n项目初期，按照业务功能划分模块，即自上而下的方法。开发的过程中，按照功能划分，即自下而上法。\r\n\r\nJava输入输出流\r\n\r\ntry{\r\n\r\nFileInputStream in = new FileInputStream(new File(inPath));\r\n\r\nFileOutputStream out = new FileOutputStream(new File(outPath));\r\n\r\nbyte[] b= new byte[1024];\r\n\r\nint len = in.read(b);\r\n\r\nwhile(len!=-1){\r\n\r\n　　out.write(b);\r\n\r\n}\r\n\r\n}catch(FileNotFoundException e){\r\n\r\n　　e.printStaticTrace();\r\n\r\n}finally{\r\n\r\nin.close();\r\n\r\nout.flush();\r\n\r\nout.close();\r\n\r\n}\r\n\r\n核心模块必须是必须在每个子上下文模块中设置的父Spring上下文.通过这种方式,没有自动装配的问题\r\n每个子上下文都可以从父级到达所有bean,但要注意父级无法看到子级", "Konwledge_Point": "模块化开发", "Question": ["Java语言怎么实现多模块化的编程呢，怎么把模块做成可以自动装配的，谢谢", ["Java语言怎么实现多模块化的编程呢，怎么把模块做成可以自动装配的，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;% Response.WriteFile (\"导航菜单文件\") %&gt;\r\n\r\n&lt;%  server.execute(\"导航菜单文件\")%&gt;\r\n\r\n&lt;!--#include file=\"htmlpage.htm\"--&gt;", "Konwledge_Point": "模块化开发", "Question": ["怎样用.net模块化网页导航菜单", [".net不懂，以前都用jsp模块化的，就是说现在有一堆html文件，用的都是同样的导航菜单，要用.net把共同的导航菜单抽取出来，请问该怎么实现，谢谢，希望能讲的详细点，最好有实例，因为我.net完全不懂"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;please check the following url&lt;br&gt;\n&lt;a href=\"http://ellislab.com/forums/viewthread/67697/\" rel=\"nofollow noreferrer\"&gt;http://ellislab.com/forums/viewthread/67697/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "模块化开发", "Question": ["模块化的php应用程序开发", ["\n\n", "We are a small team of developers planing to develop a php application. (let's say a CRM system)", "\n\n", "Our main goal is to make it a plug-in-enabled application so that clients' developers can write plug-ins add new features to the system without changing the application's core code.", "\n\n", "These changes may include:\n1) adding new features: more likely adding a new page and creating a new database table and and implementing new operations such as add/edit/display data.", "\n\n", "2) editing existing functionality (e.g. we have a list of users, they might need the user name to be a hyperlink and open a light box with user information)", "\n\n", "Since this is going to a medium to large-scale application we need to plan it carefully.", "\n\n", "At the moment our plan is to write the core application structure and implement the requirements as plug-ins, so that each time a client needs a change we only need to upgrade a specific plug-in.", "\n\n", "I just need the gurus here to give us some ideas or links to look at before we start.", "\n\n", "The final question is “how to build a plug-in-enabled PHP application?”", "\n\n", "Thanks all...", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cont 是变量&amp;#xff0c;正常的 case 得写在 always 里&lt;br /&gt;否则就需要用常数去整 case&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;module&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;FPGA(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;reset&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;cont&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;out&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//主模块&lt;/span&gt;\ninput clk,reset;  &lt;span class=\"hljs-comment\"&gt;//时钟信号和复位信号&lt;/span&gt;\noutput &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt; cont;  &lt;span class=\"hljs-comment\"&gt;//控制信号&lt;/span&gt;\noutput &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt; out;  &lt;span class=\"hljs-comment\"&gt;//用于存放从芯片接收来的数据&lt;/span&gt;\nreg &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt; cont;\nwire&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt; out,out1,out2,out3,out4,out5,out6;\nreg&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt; out_r;\ninteger flag;\nalways &amp;#64;(posedge clk &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; negedge reset)&lt;span class=\"hljs-comment\"&gt;//产生控制信号&amp;#xff08;计数器电路&amp;#xff09;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!reset)\n        cont&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(cont&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;) cont&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; cont&amp;#61;cont&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    A &lt;span class=\"hljs-constructor\"&gt;Amodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out1));\n    B &lt;span class=\"hljs-constructor\"&gt;Bmodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out2));\n    C &lt;span class=\"hljs-constructor\"&gt;Cmodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out3));\n    D &lt;span class=\"hljs-constructor\"&gt;Dmodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out4));\n    E &lt;span class=\"hljs-constructor\"&gt;Emodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out5));\n    F &lt;span class=\"hljs-constructor\"&gt;Fmodule(.&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;clk&lt;/span&gt;)&lt;/span&gt;,.cont(cont),.out(out6));\n    assign    out &amp;#61; out_r;\n    \nalways &amp;#64;(*)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    case(cont)\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: out_r&amp;#61;out1;\n    &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: out_r&amp;#61;out2;\n    &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: out_r&amp;#61;out3;\n    &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: out_r&amp;#61;out4;\n    &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: out_r&amp;#61;out5;\n    &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;: out_r&amp;#61;out6;\n    default: out_r&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    endcase\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\nendmodule\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["Verilog多模块实例化时遇到的问题", ["代码的目的", "：定义两个module块来模拟AB芯片，并且分别编号为0、1。FPGA是主模块，通过计数器产生0~5的控制信号，然后对控制信号进行分选后判断当前需要访问的是哪个芯片，然后再实例化该模块，同时得到其输出值。", "\n", "FPGA代码：", "\n", "module", " ", "FPGA(", "clk", ",", "reset", ",", "cont", ",", "out", ")", ";  ", "//主模块", "\ninput clk,reset;  ", "//时钟信号和复位信号", "\noutput ", "[", "2", ":", "0", "]", " cont;  ", "//控制信号", "\noutput ", "[", "7", ":", "0", "]", " out;  ", "//用于存放从芯片接收来的数据", "\nreg ", "[", "2", ":", "0", "]", " cont;\nwire", "[", "7", ":", "0", "]", " out;\ninteger flag;\nalways @(posedge clk ", "or", " negedge reset)", "//产生控制信号（计数器电路）", "\n", "begin", "\n    ", "if", "(!reset)\n        cont=", "0", ";\n    ", "else", " ", "if", "(cont==", "5", ") cont=", "0", ";\n        ", "else", " cont=cont+", "1", ";\n", "end", "\n", "begin", "\n    A ", "Amodule(.", "clk", "(", "clk", ")", ",.cont(cont),.out(out));\n    B ", "Bmodule(.", "clk", "(", "clk", ")", ",.cont(cont),.out(out));\n", "end", "\nendmodule\n\n", "\n", "A、B模块的定义：", "\n", "module", " A (clk,cont,out);\n", "input", " clk;\n", "input", " [", "2", ":", "0", "]cont;\n", "output", " [", "7", ":", "0", "] out;\n", "reg", "[", "7", ":", "0", "] out;\n", "always", "@(", "posedge", " clk)\n", "begin", "\n    out=", "0", ";", "//初始化，防止出现不确定量", "\n    ", "if", "(cont==", "0", ")\n        out=", "1", ";  ", "//若控制信号为0，则使能A芯片并输出数值1", "\n", "end", "\n", "endmodule", "\n\n", "module", " B (clk,cont,out);\n", "input", " clk;\n", "input", " [", "2", ":", "0", "]cont;\n", "output", " [", "7", ":", "0", "] out;\n", "reg", "[", "7", ":", "0", "] out;\n", "always", "@(", "posedge", " clk)\n    ", "begin", "\n    out=", "0", ";", "//初始化", "\n    ", "if", "(cont==", "1", ")\n        out=", "2", ";      ", "//若控制信号为1，则使能A芯片并输出数值2", "\n    ", "end", "\n", "endmodule", "\n\n", "\n", "问题描述：在时序仿真过程中输出的结果如下图", "\n", "\n", "如果将PFGA代码中的A、B模块的实例化删减剩A，则时域仿真结果正常", "\n", "\n", "怀疑是出现了竞争与冒险现象，但是我不知道应该怎么改动！所以想请教一下各位这个代码应该怎么改。", "（PS：我试过用在FPGA模块中的always模块外，用控制信号+case模块来实现分时实例化模块，但是报错说“控制信号”非常数，可能是因为没有在always模块内部使用case，但是如果在always模块中用case来实例化，就又会报错，因为模块的实例化没有办法在always模块里进行……所以很苦恼）"]], "Tag": "程序设计"}
{"Answer": "如果看过struts的源码，了解struts的初期加载过程的话，就该知道在struts中可以覆写ActionServlet的initModuleConfig方法来实现自己的加载封装。\r\n\r\n举例说一下：\r\n\r\n假如你的模块都放在WEB-INF\\plugin之下：\r\n[list][*]WEB-INF\\plugin\\cms\\\r\n[*]WEB-INF\\plugin\\blog\\\r\n[*]WEB-INF\\plugin\\member\\\r\n[*]WEB-INF\\plugin\\space\\\r\n[*]...[/list]\r\n\r\n而struts_config.xml文件就在每个plugin的根目录下：\r\n如：WEB-INF\\plugin\\cms\\struts_config.xml\r\n\r\n那么就可以如下扩展ActionServlet来实现自定义加载：\r\n\r\npublic class BaseServlet extends ActionServlet {\r\n\r\n\tprotected ModuleConfig initModuleConfig(String prefix, String paths)\r\n\t\t\tthrows ServletException {\r\n\t\t\r\n\t\t// Parse the configuration for this module\r\n\t\tModuleConfigFactory factoryObject = ModuleConfigFactory.createFactory();\r\n\t\tModuleConfig config = factoryObject.createModuleConfig(prefix);\r\n\r\n\t\t// Configure the Digester instance we will use\r\n\t\tDigester digester = initConfigDigester();\r\n\t\t\r\n\t\tString path = getServletContext().getRealPath(\"/\");\r\n\t\tString pluginPath = path + \"WEB-INF\" + File.separator + \"plugin\";\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tFile[] files = new File(pluginPath).listFiles();\r\n\t\t\tfor (int intCnt = 0; intCnt &lt; files.length; intCnt++) {\r\n\t\t\t\tif (files[intCnt].isDirectory()) {\r\n\t\t\t\t\tdigester.push(config);\r\n\t\t\t\t\tString configPath = files[intCnt].getAbsolutePath()\r\n\t\t\t\t\t\t\t+ File.separator + \"struts_config.xml\";\r\n\t\t\t\t\tif(new File(configPath).exists()) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tString pp = configPath.substring(getServletContext().getRealPath(\"/\").length() - 1).replace('\\\\', '/');;\r\n\t\t\t\t\t\tSystem.out.println(pp);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tparseModuleConfigFile(digester, getServletContext().getResource(pp));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n        } catch (MalformedURLException e) {\r\n        \tthrow new UnavailableException(e.getMessage());\r\n\t\t}\r\n\r\n\t\tgetServletContext().setAttribute(\r\n\t\t\t\tGlobals.MODULE_KEY + config.getPrefix(), config);\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n}", "Konwledge_Point": "模块化开发", "Question": ["在Struts1中如何自己加载struts_config.xml?", ["为了实现模块化开发，struts_config.xml想放在各个plugin代码之下，如何扩展ActionServlet来读入这些分散的配置文件？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一点只是maven的构建问题&amp;#xff0c;install只是安装依赖而已&amp;#xff0c;实际package或者run的时候才会重新编译项目&amp;#xff0c;第二点springboot-web使用内嵌web服务器可以直接以jar的形式运行&amp;#xff0c;默认是tomcat&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["springboot微服务启动问题", ["分模块化开发，比如聚合项目为 a，包括子模块b（springboot启动类）、子模块c（服务）", "1.子模块b依赖子模块c，如果子模块c改动，需要重新mvn intall？，经测试不需要重写执行mvn intall，为什么？", "\n", "2.idea 启动springboot项目，启动成功，并且能够访问，springboot启动时，是如何打包发布在tomcat"]], "Tag": "程序设计"}
{"Answer": "自己解决了，在agent/mibgroup 下建立一个文件夹如MY，放入自己的C文件H文件，并且在agent/mibgroup 下新建一个H文件MY.h，内容如下：\r\nconfig_require(MY/XXX)    //XXX为自己.c的文件名（不带后缀），有几个C就添加几行\r\n\r\n重新配置编译选项 \r\n./configure --with-mib-modules=\"MY\"\r\n\r\n重新make即可", "Konwledge_Point": "模块化开发", "Question": ["net-snmp开发如何添加自己的C代码？", ["项目需求，需要开发net-snmp （net-snmp5.7.3，Ubuntu12.04）,希望能添加自己的C代码（不是添加私有MIB库），最简单的比如添加一个C文件和H文件，功能只是打印一下hello world也行，代码写好之后，不知道如何修改makefile文件使自己的C文件可以被编译进去，直接调用头文件中申明的函数，在编译的时候会报错说函数未定义，求教各位大神呀"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Go through this tutorial &lt;a href=\"http://www.amazium.com/blog/create-modular-application-with-zend\" rel=\"noreferrer\"&gt;Modular application with Zend Framework&lt;/a&gt;. There also some good tutorials on youtube, &lt;a href=\"http://www.youtube.com/watch?v=qblFgRAcCgk&amp;amp;translated=1\" rel=\"noreferrer\"&gt;zend framework-modular application&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "模块化开发", "Question": ["如何使用Zend框架开发模块化应用程序？", ["\n\n", "How to develop modular application using Zend framework?", "\n    "]], "Tag": "程序设计"}
{"Answer": "分开的话，可以提高各自角色的用户操作的便捷性，前提是卖家和买家角色没有交叉，如果重叠就没有什么意义。可以把项目分层，共享业务逻辑代码，买家端卖家端各自独立的用户界面。\r\n\r\n\r\n小的项目，出于成本的考虑，不这么做也很正常。花多少钱办多少事。你应该和你的客户说清楚让他们决定。或者你的客户很多，可以进行调查。", "Konwledge_Point": "模块化开发", "Question": ["一个规模很小的项目，有必要分为『买家端』和『卖家端』吗？", ["\n", "买家端：这里的买家端，其实指的是用户端，服务于app用户；", "\n", "卖家端：这里的卖家端，其实就是后台管理页面。", "\n", "那么问题来了：", "\n\n", "1、在项目规模很小的情况下，有必要将其分开吗？", "\n2、如果分开的话，这两端需要使用到同一个对象，或者同一个方法，难不成还要将同样的代码在两端都写一遍？", "\n3、基于问题2，还是说搞成微服务架构，基于maven模块化开发？但是这样的话感觉更麻烦了啊。。。本来是一个很小的项目的说。。。"]], "Tag": "程序设计"}
{"Answer": "多个模块的只提交单个用ajax提交，就不用刷新页面了。\r\n文件上传的话可能参考这个：http://fireinjava.iteye.com/blog/732432", "Konwledge_Point": "模块化开发", "Question": ["struts2怎样访问action后不跳转页面 界面怎样模块化", ["如题！\n", "\n\n", "因为我是一个index.jsp里面include了很多jsp页面来实现模块化。", "\n\n", "分别使用了style=\"display:none\"来影藏和显示不同的jsp界面。", "\n\n", " ", "\n\n", "      <!-- include左边导航条 -->\n        <jsp:include page=\"module/index_menu.jsp\" flush=\"false\" >\n            <jsp:param value=\"1\" name=\"number\"/>\n        </jsp:include>\n        \n        <!-- 右边内容区域 -->\n        <div class=\"rightcon\">\n        \n            <!-- include s -->\n\n            <!-- my workspace -->\n            <div id=\"div_index_include_0\" class=\"content\" style=\"display:none\">\n                <jsp:include page=\"module/index_workspace.jsp\" flush=\"true\" />\n            </div>\n            <!-- userinfo -->\n            <div id=\"div_index_include_14\" class=\"content\" style=\"display:none\">\n                <jsp:include page=\"module/userInfo/userAccessHistory.jsp\" flush=\"false\" />\n            </div>\n            <!-- appManage -->\n            <div id=\"div_index_include_31\" class=\"content\" style=\"display:none\">\n                <jsp:include page=\"module/appManage/appManage.jsp\" flush=\"false\" />\n            </div>\n            <div id=\"div_index_include_31add\" class=\"content\" style=\"display:none\">\n                <jsp:include page=\"module/appManage/appAdd.jsp\" flush=\"false\" />\n            </div>\n        </div>   ", "\n\n", " ", "\n\n", "现在比如我要做一个注册,注册包括了上传图片等....", "\n\n", "访问action后就自动跳转了...就算我跳到index.jsp..但已然不是我要显示的界面了...", "\n\n", "而且还要使用到访问action里的数据,比如分页数据等...", "\n\n", " ", "\n\n", "想过AJAX实现,但是对于文件上传比较棘手。", "\n\n", " ", "\n\n", "或者有没有其他办法实现界面的模块化,并且加载速度快...别让用户等半天才加载完", "\n\n", " ", "\n\n", "界面要怎样设计最好？要加载速度快而且方便开发维护", "\n\n", " ", "\n\n", " ", "\n\n", "。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;嗯&amp;#xff0c;作为一个开发&amp;#xff0c;站在开发的角度来回答下下这个问题&lt;br /&gt;首先&amp;#xff0c;公用方法的修改是需要慎重的&amp;#xff0c;这个就需要在自测上下功夫&amp;#xff0c;不能因为a功能修改了公用方法导致b功能出现bug&lt;br /&gt;其次&amp;#xff0c;如果出现开发自测不到位&amp;#xff0c;产生这种修复的新bug&amp;#xff0c;这个是要测试去回归问题的&amp;#xff0c;&amp;#xff0c;&amp;#xff0c;为什么测试流程要分为 dev -uat -master好几轮测试&amp;#xff0c;就是为了规避这种问题&lt;/p&gt;\n&lt;p&gt;其实究其根因还是开发的问题&amp;#xff0c;当然产生的问题后边所有的返工成本都是要开发区付出的&lt;br /&gt;一个好的开发人员尽力避开这种连环bug是基本的素养&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["关于项目开发完后测试问题，想请教以下各位", ["问题：", "1、我们平常在修改bug的时候，很有可能会遇到修改一些通用的业务方法，A业务的问题修复了，B、C的问题又冒出来了这种问题。", "2、还有可能一轮测试改完了，改出新的bug这种情况，那么可能后续就需要二轮，三轮这种测试还不一定能解决。但是这种人力测试，需要每个功能都去测到，而且你也不知道你写的这行代码会不会影响到全局的业务。", "\n", "我考虑了两种方法", "1、集成测试，项目完成，写一下集成测试，保证代码功能能够正确运行，而且二次修复时，依然可以使用，保证不会影响整体模块", "2、做自动化测试，避免人力重复去点击测试", "\n", "我们公司的同事说这两种方法都不太合适，因为首先我们是项目制的，我们把项目交付了就算结束了，而且写集成测试这种是需要时间成本的，而且很多开发也不高兴写这个东西。然后自动化测试也不行，还是因为项目制的问题，我们毕竟不是做产品，不需要那么细致。最后总结了一下，其实也没有什么其他好的办法，只有说设计阶段和修复阶段尽量详细一点（后来想了下，这种方法是有一定道理的，但是对于业务流程大而且绕的项目里，最后设计的压力和修复的压力还是落到开发头上的）", "\n", "就想问一下各位怎么看的，能不能给点意见什么的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;多语言开发后端主要问题会在后期出现&amp;#xff0c;代码管理难度增大&amp;#xff0c;人员变动&amp;#xff0c;系统升级困难&amp;#xff0c;增加维护成本。&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["APP后端使用多种语言开发时，需要有哪些注意事项呢？", ["我请外包团队帮我做了一个APP，基本上已经做好了。后端是JAVA开发的，数据库用的是MySQL，前端都是原生开发的。", "\n\n", "按照后期规划，这个APP中有大量数据挖掘、数据可视化以及机器学习的计划，所以这部分后端功能我想用Python来实现最为合适，但是我又不想重头用Python来重新写整个APP，这就会出现整个APP后端既有JAVA又有Python的情况，或许还会使用到第三、第四种语言来开发后端，比如PHP做问答模块等等。因为不同语言的优势是不一样的，各有优缺点，这时候我就有些迷茫了：我不知道像我这种使用多种语言作为APP的后端开发的方式是好是坏呢？也不知道有没有其他APP也是这么做的，以及这样做时需要注意什么呢？还请大家多多指教呢。谢谢啊！"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201609/08/1473305592_634713.png)\r\n\r\n更新了下，你看看", "Konwledge_Point": "模块化开发", "Question": ["一个JAVA业务开发工程师的烦恼（业务系统平台化）", ["请问一下，同一个功能，不同客户有微小的需求不同，导致一个系统一个客户，或者同个系统里面为了区分不同客户if else一大堆，维护工作量非常大，怎么样优雅从业务平台架构去设计这个系统，", "\n实现一个业务平台可根据不同业务需求做二次开发，公共业务出现差异化时，可扩展差异部分，实现完美平台化，请大家帮忙头脑风暴一下，或者是否有现成的系统已实现我的困扰。谢谢", "\n\n", "目前我想到的有：", "\n1、模块可插拔，把一个功能拆分成各个小模块，二次开发小模块可以替换，通过配置实现不同客户的需求，从技术上可以用java的spi机制。", "\n2、实现小模板块拼装成大模块，但如果模块之间数据的流转，配置设计很复杂，A模块的输出要成为B模块的输入，配置没有好的方案，同一业务各小模块修改数据库同一条数据时，为了提高性能怎么保证只操作一次数据库。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;verilog 是硬件描述语言。你还是没有理解例化的含义。这不是软件通过变量选择调用什么样的函数。&lt;br /&gt;例化一个模块&amp;#xff0c;相当于在电路板上焊上一个芯片。一块板子需要焊什么芯片是根据设计需求&amp;#xff0c;电路设计决定的。我们使用时板子上的芯片就已经焊好了。不会因为某个变量的变化&amp;#xff0c;新焊上一个芯片或动态拆掉一个芯片。&lt;br /&gt;verilog 是硬件描述语言就是在描述在 fpga 内部放置一个什么样的芯片&amp;#xff0c;这个芯片是什么逻辑&amp;#xff0c;怎么接线。&lt;br /&gt;举个例子&amp;#xff0c;设计一款声光报警器。聋子来了就闪光报警&amp;#xff0c;瞎子来了就声音报警器。我们不能只例化了一个声音或发光模块&amp;#xff0c;要将这两个模块都例化才行。根据某个变量来决定是发声还是发光。&lt;br /&gt;你需要将奇偶分频器都例化&amp;#xff0c;会有两个频率输出&amp;#xff0c;通过 N 去选择哪个频率输出就行。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;     \n&lt;span class=\"hljs-keyword\"&gt;module&lt;/span&gt; count (\n     &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; clk,reset,\n     &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; N,\n     &lt;span class=\"hljs-keyword\"&gt;output&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; cout\n);\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] a;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; cout_o,cout_e;\n\ncount_even even1(&lt;span class=\"hljs-variable\"&gt;.clk&lt;/span&gt;(clk),&lt;span class=\"hljs-variable\"&gt;.reset&lt;/span&gt;(reset),&lt;span class=\"hljs-variable\"&gt;.N&lt;/span&gt;(N),&lt;span class=\"hljs-variable\"&gt;.cout&lt;/span&gt;(cout_e)); \ncount_odd odd1(&lt;span class=\"hljs-variable\"&gt;.clk&lt;/span&gt;(clk),&lt;span class=\"hljs-variable\"&gt;.reset&lt;/span&gt;(reset),&lt;span class=\"hljs-variable\"&gt;.N&lt;/span&gt;(N),&lt;span class=\"hljs-variable\"&gt;.cout&lt;/span&gt;(cout_o));\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(*)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( N%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;N%&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\na&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&amp;#39;b00&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(N%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;amp;&amp;amp;N%&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\na&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&amp;#39;b01&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\na&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&amp;#39;b10&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt;&amp;#64;(a)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt;(a)\n     &lt;span class=\"hljs-number\"&gt;2&amp;#39;b00&lt;/span&gt;: cout&amp;#61;cout_e;\n     &lt;span class=\"hljs-number\"&gt;2&amp;#39;b01&lt;/span&gt;: cout&amp;#61;cout_o; \n     &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: cout&amp;#61;cout_e;\n  &lt;span class=\"hljs-keyword\"&gt;endcase&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;endmodule&lt;/span&gt;\n \n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["模块例化问题分频器奇数偶数小数", ["在Verilog实验中 任意数值分频  包括奇数 偶数 小数", "\n", "\n", "module", " count_odd \n                (", "input", " clk,reset,N,", "output", "  cout);\n  ", "reg", " m,n; ", "reg", " cout1,cout2;\n  ", "assign", " cout=cout1|cout2;\n  ", "always", " @(", "posedge", " clk)\n  ", "begin", " ", "if", "(!reset) ", "begin", " cout1<=", "0", ";m<=", "0", ";", "end", "\n  ", "else", "\n  ", "begin", " ", "if", "(m==N-", "1", ") m<=", "0", ";", "else", " m<=m+", "1", ";\n    ", "if", "(m<(N-", "1", ")/", "2", ") cout1<=", "1", ";", "else", " cout1<=", "0", ";\n    ", "end", " ", "end", "\n    ", "always", " @(", "negedge", " clk)\n    ", "begin", " ", "if", "(!reset) ", "begin", " cout2<=", "0", ";n<=", "0", ";", "end", "\n    ", "else", " ", "begin", "\n    ", "if", "(n==N-", "1", ") n<=", "0", ";", "else", " n<=n+", "1", ";\n    ", "if", "(n<(N-", "1", ")/", "2", ") cout2<=", "1", ";", "else", " cout2<=", "0", ";", "end", "\n    ", "end", "\n    ", "endmodule", "\n \n", "module", " count_even \n               (", "input", " clk,reset,N,", "output", " ", "reg", " cout);\n                  ", "reg", " m;\n    ", "always", " @(", "posedge", " clk ", "or", " ", "negedge", " reset)\n    ", "begin", "\n    ", "if", "(!reset)\n    ", "begin", "  m<=", "0", ";cout<=", "0", ";", "end", "\n    ", "else", " ", "if", "(m==N-", "1", ")\n    ", "begin", " m<=", "0", ";cout<=~cout;", "end", "\n    ", "else", "\n     ", "begin", " m<=m+", "1", ";", "end", "\n    ", "end", "\n    ", "endmodule", "\n    \n ", "module", " count_dec \n           (", "input", " clk,reset,N,", "output", " ", "reg", " cout);\n ", "reg", " cout1,cout2;\n \n ", "always", " @(", "posedge", " clk,", "posedge", " reset)\n ", "begin", " ", "if", "(reset)", "begin", " cout1<=", "0", ";cout2<=", "0", ";cout<=", "0", ";", "end", "\n ", "else", " ", "if", "(cout1<", "9", ")\n ", "begin", "\n ", "if", "(cout2<(N/", "10", ")-", "1", ")", "begin", " cout2<=cout2+", "1", ";cout<=", "0", ";", "end", "\n ", "else", " ", "begin", " cout2<=", "0", ";cout1<=cout1+", "1", ";cout<=", "1", ";", "end", "\n ", "end", "\n ", "else", " \n ", "begin", "\n ", "if", "(cout2<N-", "9", "*(N/", "10", ")-", "1", ") ", "begin", " cout2<=cout2+", "1", ";cout<=", "0", ";", "end", "\n ", "else", " ", "begin", " cout2<=", "0", ";cout1<=cout1+", "1", ";cout<=", "1", ";", "end", "\n ", "end", "\n ", "end", "\n ", "endmodule", "\n     \n", "module", " count (\n     ", "input", " clk,reset,\n     ", "input", " N,\n     ", "output", " cout\n);\n", "reg", " [", "1", ":", "0", "] a;\n", "always", " @*\n", "begin", "\n", "if", "( N%", "2", "==", "0", "&&N%", "1", "==", "0", ")\n", "begin", "\na<=", "2'b00", ";\n", "end", "\n", "else", " ", "if", "(N%", "2", "==", "1", "&&N%", "1", "==", "0", ")\n", "begin", "\na<=", "2'b01", ";\n", "end", "\n", "else", "\n", "begin", "\na<=", "2'b10", ";\n", "end", "\n", "end", "\n", "always", "@(a)\n", "begin", "\n", "case", "(a)\n     ", "2'b00", ": count_even(", ".clk", "(clk),", ".reset", "(reset),", ".N", "(N),", ".cout", "(cout));\n     ", "2'b01", ": count_odd(", ".clk", "(clk),", ".reset", "(reset),", ".N", "(N),", ".cout", "(cout));\n     ", "default", ": count_even(", ".clk", "(clk),", ".reset", "(reset),", ".N", "(N),", ".cout", "(cout));\n  ", "endcase", "\n  ", "end", "\n\n", "endmodule", "\n\n\n\n\ntb\n\n\n", "module", " count_tb();\n", "reg", " clk,reset,N;\n", "wire", " cout;\ncount i1(\n     ", ".clk", "(clk),\n     ", ".reset", "(reset),\n     ", ".N", "(N),\n     ", ".cout", "(cout)\n);\n", "parameter", " DELY=", "20", ";\n", "always", "\n", "begin", "\nclk=", "1", ";\n", "#(DELY)", " clk<=~clk;\n", "end", "\n", "initial", "\n", "begin", "\nN<=", "8", ";reset<=", "1", ";\n", "#(DELY*10)", "N=", "11", ";\n", "#(DELY*10)", "N=", "8", ".1", ";\n", "#(DELY*10)", " ", "$stop", ";\n", "end", "\n", "endmodule", "\n", "\n", "[USF-XSim-62] 'elaborate' step failed with error(s). Please check the Tcl console output or 'D:/5e/count/count.sim/sim_1/behav/xsim/elaborate.log' file for more information.", "\n", "[Vivado 12-4473] Detected error while running simulation. Please correct the issue and retry this operation.", "[VRFC 10-2989] 'count_even' is not declared [\"D:/5e/count/count.srcs/sources_1/new/count.v\":96]", "[XSIM 43-3322] Static elaboration of top level Verilog design unit(s) in library work failed.", "[VRFC 10-2989] 'count_odd' is not declared [\"D:/5e/count/count.srcs/sources_1/new/count.v\":97]", "[VRFC 10-2989] 'count_even' is not declared [\"D:/5e/count/count.srcs/sources_1/new/count.v\":98]", "\n", "######最开始是用if-else语句", "              if( N%2==0&&N%1==0)", "begin", "count_even(.clk(clk),.reset(reset),.N(N),.cout(cout));", "end", "else if(N%2==1&&N%1==0)", "begin", " count_odd(.clk(clk),.reset(reset),.N(N),.cout(cout));", "end", "else", "begin", "count_even(.clk(clk),.reset(reset),.N(N),.cout(cout));", "end", "\n", "后来问了才知道 Verilog 好像识别不了这种写法 换了种写法 发现没有（错误波浪线）以为case语句可以用", "后来仿真还是仿真不了出错误", "\n", "奇数 偶数 小数  三个模块   最后一个模块综合  模块例化  通过判断N为奇数 偶数 小数的一种来针对模块运行", "\n", "能正常仿真综合"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;个人建议&amp;#xff0c;不喜勿喷~&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h1 id=\"h1_别墨迹了兄弟&amp;#xff0c;赶紧去工作吧_1640756607169\"&gt;别墨迹了兄弟&amp;#xff0c;赶紧去工作吧&lt;/h1&gt;\n&lt;p&gt;我不知道你今年几岁了&amp;#xff0c;但其实事实是根本没人在乎你几岁&amp;#xff0c;只在乎你毕业了几年&amp;#xff0c;工作了几年&amp;#xff0c;毕业什么学校&amp;#xff0c;现在什么实力&amp;#xff0c;有什么项目经验&amp;#xff0c;掌握什么技能。&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;我是上学很早的那种&amp;#xff0c;老家是村里&amp;#xff0c;没限制上学年级&amp;#xff0c;几年23岁&amp;#xff0c;毕业3年了&amp;#xff0c;一直以为自己年纪比较小&amp;#xff0c;所以有些游手好闲&amp;#xff0c;直到去年迈入毕业三年的那道坎。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;去面试时发现&amp;#xff0c;问的问题突然跟之前面试的问题就不一样了&amp;#xff0c;各种细节要求&amp;#xff0c;项目经历&amp;#xff0c;整体概览都更加严格&amp;#xff0c;原来他们&lt;strong&gt;并不在乎你几岁&amp;#xff0c;只在乎你在毕业后的这几年&amp;#xff0c;学到了多少&amp;#xff0c;有多少提高&lt;/strong&gt;&amp;#xff0c;因为这几条很直接地体现了你以后是否有更大的提高空间发张空间&amp;#xff0c;是否有职业规划。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;还有就是毕业什么学校&amp;#xff0c;有什么专业技能&amp;#xff0c;有什么项目经历。这是最直接的体现你当前实力的&amp;#xff0c;进了公司后能不能尽快的为公司创造价值&amp;#xff1f;不然凭什么花那么多钱要你&amp;#xff1f;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;本科的知识是要有的&amp;#xff0c;并不是你会敲代码了&amp;#xff0c;就能进所有公司了。代码能力可以证明你现在的工作是否OK&amp;#xff0c;但是人上有人&amp;#xff0c;比你厉害的人多的是&amp;#xff0c;&lt;strong&gt;基础是否扎实才决定了你以后发展的上限&lt;/strong&gt;&amp;#xff0c;这也是为什么大厂更喜欢要基础好、底子好、有思想、态度端正的新人&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "模块化开发", "Question": ["咨询各位兄弟姐妹关于我的移动端开发学习生涯的评估", ["我是半路出家的一类，就是做了其他工作几年，一直软件开发有兴趣，后来之前做的工作我感觉后面前景不是很大，没办法做产品出来，所以我后来就自学了开发。我学习开始的时候选是手机端产品，因为移动端我看有前景。然后手机端在两年前的时候主流都是安卓和苹果，我后来选了苹果，虽然安卓体量大，我冷静比较了一下，选择一个方向牵扯太多，苹果公司那么强大的软硬件实力让我后来选了苹果端，还有个重要原因就是苹果端有个语言叫Swift, 我比较了几种开发语言，认为Swift更接近英语的语法格式，无论学习新的技术也就是读语言，或写代码，都看上去容易，后来从Swift基础开始学习，后来试着做简单的Demo，从UIKIT框架开始，也就是用Storyboard Interface Builder 去开发demo项目，小demo做了很多，无非就是测试一些主要功能的函数之类的，这个时候我已经学了有1年了，然后就开始创建了一个打算长期做的项目，主要想把现在常见的那些App涉及的基本功能都做出来了，比如常见的发帖子，订阅，好友，人际关系，即时通信，数据本地存储，频道功能，视频点播或者直播等流媒体服务，自己的服务器上的内容搜索等，这里不涉及游戏或者增强现实类的应用，因为这一块我去学习做过一个Demo但是知道涉及的比较独立，然后针对这个项目进行开发，碰到各种问题就去谷歌或者来CSDN搜索，搜索中发现我需要哪些知识储备然后再去学习，就这样学习开发了一共2年多吧，后面2年我是辞职后全心在家学习的，所以效率很快。我现在已经把这个项目的基础功能做出来了，但是视频功能还没有，因为我一直在学习优化改进前面的基础功能的代码以及设计模式，包括和后端通信的接口，让App客户端的各种功能看上去都更模块化，方便复用维护，这里忘说了，我开发到50%的时候又去学了SwiftUI框架，然后把整个项目又重做了，由于借用了苹果各种最新的SDK，所以我开发的这个项目在工作的时候可以达到写代码所见即所得的效果，而不是必须得运行后才能知道代码效果，后来我大部分时间就是在研究上面那些功能的客户端UI, 即时通信，HTTP通信，数据持久，TLS安全通信，把苹果最新出的SDK也就是WWDS 2020c 2021推出的新的东西去替换旧的，让代码上去更简洁，同时能高性能的达到上面那些功能的目的，另外我学的那个SwiftUI框架应该是可以直接适用于电脑手机手表等全部苹果产品的用户视图开发的，所以通总性很强大。。我的学习经历就这些，然后我想知道，我能找到工作吗？我看到很多招聘，都是要求面向对象C，Java, 还有要求有混合开发的知识，这方面我没有知识储备，我没有相关学历，不过我的学习能力自己觉得还可以，考个自学考试本科不难，我是不是应该去买点计算机的本科阶段的基础的书看看还是怎么样去弥补自己的知识，应该弥补哪些知识，才能让自己在苹果开发这个方向上更精通更专业一些，方便我后期找工作，我期望我学的东西能够是主流实用，然后在未来也是不会被淘汰的那种技术，我期望至少再过1年，我可以去找到一个这方面的工作。求大佬给我一些见解和评估，非常感谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt; a &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;{i_a}};\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt; b &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;{i_b}};\n \n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    {a1, a0} &amp;#61; a;\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    {b1, b0} &amp;#61; b;\n\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;    [F_WIDTH-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    a_fold &amp;#61; a0 &amp;#43; a1;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;    [F_WIDTH-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    b_fold &amp;#61; b0 &amp;#43; b1;\n\n&lt;span class=\"hljs-comment\"&gt;//这样拼接赋值时 a0&amp;#61;a1,b0&amp;#61;b1,a_fold&amp;#61;2*a0,b_fold&amp;#61;2*b0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//最终 a0b0_r5&amp;#61;a1b1_r5//temp0_r5 &amp;#61; 4*a0b0_r5&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//u1_mul 和 u2_mul 就被优化掉了&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["quartus 综合时只将部分子模块中的乘法器用DSP实现，子模块为相同代码例化", ["问题遇到的现象和发生背景", "\n", "quartus prime 21综合时只将部分子模块中的乘法器用DSP实现", "\n", "操作环境、软件版本等信息", "\n", "软件版本：", "Quartus Prime 21.4", "在full_mul_level4中例化了多个mul，每个mul中有多个乘法器，但只有u0_mul中的乘法器在综合时用到了DSP，并且综合结果很不正常，full_mul_level4为1024bit的karatsuba大整数乘法器，不应该这么小。可能是什么原因呢。真心请教", "代码如下：", "\n", "(*multstyle=", "\"dsp\"", "*)", "module", " full_mul_level4(    ", "//384x384 or similar bits", "\nclk,\nrstn,\ni_a,\ni_b,\nen0,\nen1,\nen2,\nen3,\nen4,\nen5,\nen6,\no_res\n);\n", "parameter", " A_WIDTH = ", "1024", ";\n", "parameter", " B_WIDTH = ", "1024", ";\n", "parameter", " R_WIDTH = ", "2048", ";\n", "parameter", " DATA_IN_WIDTH = ", "64", ";\n", "parameter", " DATA_OUT_WIDTH = ", "64", "; \n\n", "input", "    clk;\n", "input", "    rstn;\n", "input", "    [DATA_IN_WIDTH-", "1", ":", "0", "]    i_a;\n", "input", "    [DATA_IN_WIDTH-", "1", ":", "0", "]    i_b;\n", "input", "    en0;\n", "input", "    en1;\n", "input", "    en2;\n", "input", "    en3;\n", "input", "    en4;\n", "input", "    en5;\n", "input", "    en6;\n", "output", "    [DATA_OUT_WIDTH-", "1", ":", "0", "]    o_res;\n\n\n", "localparam", "    WIDTH         = A_WIDTH > B_WIDTH ? A_WIDTH : B_WIDTH;\n", "localparam", "    WIDTH_ODD    = WIDTH % ", "2", ";\n", "localparam", "    WIDTH_HALF    = (WIDTH - WIDTH_ODD) / ", "2", ";\n", "localparam", "    H_WIDTH        = WIDTH_HALF + WIDTH_ODD;\n", "localparam", "    L_WIDTH        = WIDTH_HALF;\n\n", "localparam", "    F_WIDTH        = H_WIDTH + ", "1", ";\n\n", "wire", "  [A_WIDTH-", "1", ":", "0", "] a;\n", "wire", "  [B_WIDTH-", "1", ":", "0", "] b;\n", "assign", " a = {", "16", "{i_a}};\n", "assign", " b = {", "16", "{i_b}};\n\n", "wire", "    [L_WIDTH-", "1", ":", "0", "]    a0;\n", "wire", "    [H_WIDTH-", "1", ":", "0", "]    a1;\n", "wire", "    [L_WIDTH-", "1", ":", "0", "]    b0;\n", "wire", "    [H_WIDTH-", "1", ":", "0", "]    b1;\n\n", "//                a1        a0", "\n", "//x                b1        b0", "\n", "//-------------------------", "\n", "//    a1b1    a1b0+a0b1    a0b0", "\n", "//    a1b0 + a0b1 = (a0+a1)(b0+b1) - a1b1 - a0b0", "\n\n\n", "assign", "    {a1, a0} = a;\n", "assign", "    {b1, b0} = b;\n\n", "wire", "    [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r5;\n", "wire", "    [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r5;\nfull_mul_level3 ", "#(L_WIDTH, L_WIDTH)", " u0_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a0),\n    ", ".b", "        (b0),\n    ", ".res", "    (a0b0_r5));\n    \nfull_mul_level3 ", "#(H_WIDTH, H_WIDTH)", " u1_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a1),\n    ", ".b", "        (b1),\n    ", ".res", "    (a1b1_r5));\n\n", "wire", "    [F_WIDTH-", "1", ":", "0", "]    a_fold = a0 + a1;\n", "wire", "    [F_WIDTH-", "1", ":", "0", "]    b_fold = b0 + b1;\n\n", "wire", "    [F_WIDTH*", "2", "-", "1", ":", "0", "]    temp0_r5;\n\n\nfull_mul_level3 ", "#(F_WIDTH, F_WIDTH)", " u2_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a_fold),\n    ", ".b", "        (b_fold),\n    ", ".res", "    (temp0_r5));\n\n\n", "reg", "        [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r6;\n", "reg", "        [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r6;\n", "reg", "        [F_WIDTH*", "2", "-", "1", ":", "0", "]    temp0_r6;\n\n", "always", " @(", "posedge", " clk)\n", "if", "(en5) ", "begin", "\n    a0b0_r6 <= a0b0_r5;\n    a1b1_r6 <= a1b1_r5;\n    temp0_r6 <= temp0_r5;\n", "end", "\n", "reg", "        [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r7;\n", "reg", "        [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r7;\n", "reg", "        [F_WIDTH*", "2", "-", "1", ":", "0", "]    tmp_r7;\n\n", "always", " @(", "posedge", " clk) ", "begin", "\n    ", "if", " (en6) ", "begin", "\n        tmp_r7  <= temp0_r6-a0b0_r6-a1b1_r6;\n        a0b0_r7 <= a0b0_r6;\n        a1b1_r7 <= a1b1_r6;\n    ", "end", "\n", "end", "\n", "wire", "    [WIDTH*", "2", "-", "1", ":", "0", "]    r;\n\n", "assign", " r = {{a1b1_r7, {(L_WIDTH){", "1'b0", "}}} + tmp_r7, {(L_WIDTH){", "1'b0", "}}} + a0b0_r7;\n\n", "reg", "        [R_WIDTH-", "1", ":", "0", "]    res;\n", "always", " @(", "posedge", " clk)\n", "if", "(en6)\n    res <= r[R_WIDTH-", "1", ":", "0", "];\n", "assign", " o_res = res[DATA_OUT_WIDTH-", "1", ":", "0", "];\n", "endmodule", "\n\n", "\n", "编译流程从上到下"]], "Tag": "程序设计"}
{"Answer": "最后问题还是解决啦， 原来是PN532模块本身有问题，买了新的PN532模块，问题解决！", "Konwledge_Point": "模块化开发", "Question": ["NFC PN532模块  TgInitAsTarget命令设置成目标不成功", ["一：基本情况介绍", "\n小弟目前在研究NFC，使用的是PN532模块，已经实现了读写M1卡", "\n通讯方式为I2C通讯，目前想实现P2P通讯，但在使用TgInitAsTarget命令初始化PN532为目标的时候，信息响应帧没有返回。", "\n二：TgInitAsTarget命令 与返回的信息情况介绍", "\n1：主控 ->PN532    TgInitAsTarget   命令格式为：{00, 00, 0xff, 0x27, 0xd9, \\", "\n                                                                        0xd4, 0x8c, 0x04,  0x08, 00, 0x12, 0x34, 0x56,\\", "\n                                                                        0x40,  0x01, 0xfe, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, \\", "\n                                                                        0xc0, 0xc1, 0xc2, 0xc3,0xc4, 0xc5, 0xc6, 0xc7,  0xff, 0xff,\\", "\n                                                                        0xaa, 0x99, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, \\", "\n                                                                        0x11, 00, 00, 0xfd, 00};", "\n2：PN532->主控      ACK帧：01 00 00 FF 00 FF 00", "\n解析：01 表示PN532已经准备好发回ACK帧", "\n                    00 00 FF 00 FF 00    表示发回的ACK帧", "\n\n", "3:接下来我用另一块PN532 对其目标作为initiator，放在目标设备上面对target进行初始化", "\ninitiator命令为InJumpForDEP：00 00 FF 0a f6 d4 56 01 02 01 00 ff ff 00 00  d4 00", "\n\n", "4:正常目标PN532被初始化后，应该要先返回ACK帧，然后返回普通信息帧", "\n\n", "5：问题：", "\n现在已经收到了ACK帧，但是普通信息帧收不到，查询target的状态，就是一直在忙，没有被初始化成功，请问这是什么原因呢？完全是按照PN532的应用开发手册的流程进行的，手册上也没说要其他额外的步骤"]], "Tag": "程序设计"}
{"Answer": "分页、序号、表单验证这些无论什么管理系统也是不能省的。这不叫什么细节需求。如果这些都没有，恐怕系统连粗制滥造都算不上，只能是个用来学习的例子程序。\r\n我去网络上搜索了一下，一些进销存软件甚至卖到了50多元（Joyo价格）。就算买10家的来试用，结果发现都不合适也比你的便宜。再考虑到因为项目拖延搁浅引发的经济损失，真是不如花几万买现成的。\r\n我不清楚你做了多久应用软件开发了。不过从你现在开发出来的东西看，你现在还不是一个合格的应用程序员，顶多算编程爱好者。建议你好好学习一下，最好作为普通程序员参加几个实际软件开发，再来说是不是有能力去接这类项目。特别是“尝试新技术”这点要不得，拿别人当试验品呢。如果没有足够把握，千万不要胡乱使用自己不熟悉的技术。\r\n你还是尽量帮他们试用一些国内知名的管理软件开发企业的成熟产品（很多都有试用版下载或者可以联系获得试用版），看哪些符合其需求。谈判买下一个合适的现成产品。", "Konwledge_Point": "模块化开发", "Question": ["印刷行业进销存项目，用什么样的框架能开发效率更高学习成本维护成本更低", ["之前我也用java+servlet+jsp写过一个鞋材的进销存系统。写得也是很慢，同样一遇到客户的业务逻辑一变，为修改代码而疲于奔命。这时我除了php框架thinkphp，还想到了Spring+Struts+Hibernate等企业级的框架应用。", "\n\n", "然后试图找来php，希望能发挥其敏捷的特性，为我加快开发速度和降低维护成本，做一个服饰连锁店销售管理软件──进货，配送到分店，分店销售，销售报表，管理员权限配置等模块，是从10月份开始的，用的是php原生态写法写的，发觉效率很低。", "\n\n", "另外我去网上搜索了，java做进销存的应用，比php要多很多，那么是不是说明对于数学运算一些的应用，java强类型语言更有优势一些呢？而php流行的应用，多是互联网应用，以内容为主的，而不是数据为主的？", "\n\n", "所以我现在很疑惑，我对java与php的熟练度都差不多，现在这个印刷进销存，包括以后还可能遇到的进销存，同样采用框架的前提下，是用java还是php的框架？另外弱弱的问一话，类似于进销存的应用──我明白离电信级别的应用差很远，那它能称得上企业级应用吗？", "\n\n", "[b]问题补充：[/b]", "\nTO:魔力猫咪", "\n\n", "由于业务流程不熟，经常要改动数据库与业务逻辑。借此问一下，Java没有太多的互联网应用CMS,BBS,SNS,BLOG，这些基于内容的，而php遍地开花，但如果是基于数据运算的，进销存、财务做帐，就php的开源项目不太多了？", "\n[b]问题补充：[/b]", "\nTO:魔力猫咪 II", "\n\"要判断一个应用是哪种程序开发的有时候不是那么好判断的。\"", "\n可能刚才没有表达清楚，不是说从后缀名判断网站是用什么语言去写成的，而是说从网上的开源项目看，互联网应用php居多，discuz,thinksns,dedecms等众cms。而其它“高级”的项目java居多，lucene,OFBiz等。", "\n\n", "应该说业务逻辑不熟，这是双方的原因造成的。", "\n在温州-瑞安这个县级市里，软件开发者与客户对于软件都没有经验。瑞安的it公司以做企业网站为主，技术人员的分工也不明确，因为只有1-3人。客户方面是：在过去，温州的企业主们都是靠手工来记录台帐，企业内部沟通与协同办公则是在家里吃晚饭时一家人在沟通。", "\n\n", "我接到客户说，要做一个管理软件，不用太复杂，最简单的够用就可以，所以这个订单的金额也都很小，1W以内的。一分钱一分货，那么我们就会做得简单些，赶工期；", "\n虽然客户先前说好只要某某功能，只是做的过程中，需求还要不断增加。所谓麻雀虽小，五脏俱全，管理权限，表单验证，敏感字符过滤，日志等等，统统得要。", "\n\n", "依照你的分析，我要做的是，把客户的需求挖掘出来──因为客户自己往往说不清楚，自己的业务流程是怎么样的，软件需要做成什么样，毕竟他们只了解自己的业务。这样要做出一个个性化人性化的管理软件就对双方都提出了要求，因为双方的水平都有限。", "\n[b]问题补充：[/b]", "\n正如你所料,这类小项目已经失败过两回.一个鞋材的软件,开发了一个月时,出现了一些细节上的需求,一些原先我明知需要的但被我阉割的功能.如分页.序号.表单验证.于是这个项目搁浅至今.目前这个印刷的软件也是二次开发了,上次的完全不合他的需求,上次我也向这位老板建议说购买现成系统,他是说用不到那么的功能,不如花同样的钱订制一个小型的系统.我本着尝试下新技术的想法就做了,结果导致了两边都 不讨好.       在温州这个传统制造业发达而信息产业不发达的地区.组建一支技术队伍困难重重,上个月与一位网络公司老板讨论", "\n\n", "[b]问题补充：[/b]", "\nTO 魔力猫咪 IV", "\n讨论瑞安企业的信息化解决方案.瑞安有几千家的小企业.以往他们只做一个宣传型的网站,做一个丢一个,每次一个新单只是换换美工,来年顶多就是收个几百元的域名空间费,这样的做法只够维持公司存活.现在考虑是不是可以再挖掘这些企业的其他需求.从网站建设入手,可以免费试用,按月付费,抢占市场(域名在手上了).然后推销购买来的系统  oa 进销存 做帐   数据全部同步共享 包括前台网站产品数据,     公司从技术向服务转型.他的这种想法是不是就是你说的信息咨询服务?", "\n[b]问题补充：[/b]", "\nTO:魔 V", "\n我是一名非科班出身始于爱好由vb开始的程序员..在零四年起,在校做学生信息,社团网站,参加大学生数模,算起来五年时间,虽然知道语言只是外在的.思想才是一通百通的.然而由于自卑与好奇,希望找到一门适合的万能语言,到处看语言c cpp asp delphi java php .net ,到现在都没有一门自己精通的语言,还是一个新门,很惭愧.", "\n\n", "我知道自己的技术实力远不够,可一直没放弃过自己开发产品去营销的念头,所以经常会向身边搞it的boss讨教.", "\n\n", "我猜想魔目前是prj leader类的职位吧,组织与编写文档多过写代码", "\n[b]问题补充：[/b]", "\nTO:魔 VI", "\n如果选择B/S管理软件，对于我，多少有点基础，从大学业余爱好做的事情到现在的工作，都在做网站。更重要的理由是，我身边市场大环境下，有这个需求。", "\n\n", "其实我是很反感做对数据库CRUD的，更反感在ie,ff,chrome各种浏览间之间调试css,js，好像没有创作的成就感，很崇拜做桌面应用程序，图像处理如PS，播放软件如KMplayer，下载软件如Flashget，装机必备一流的软件如winrar，极品五笔，有那么多用户在用，该是一件多么了不起的事情。", "\n\n", "去年开始盯上了java，这似乎有点万能的味道，嵌入式，b/s,c/s,都能看到它的身影，因为开源氛围比.net强，应用广多了。那个失败的鞋材进销存正是用它写的。只是它对我来说，有点难了。官方的core java几次拿起放下，thinking in java看了两次都停在了泛型那章。上个月买了只G4，换下了我用了2年多的nokia 3250，信誓旦旦地说要在android下写程序，很快又冷却掉了。一是上面说的java对我来说有点难，oo的思想进不了脑，java就是运用不了。二是，没有需求，不知道要做出一个什么软件，才是人们需要用的，再说android market上的太多好的软件都免费了。", "\n[url]", "http://it577net.iteye.com/blog/554179[/url]正像我这篇博文里写的，我一直在找方向。首先要养活自己吧，工作与身边的私单，要用到内容管理的东西CMS,B/S数据库管理软件", " 所以CRUD还是要继续，Java 或 Android放在兴趣爱好的位置吧。", "\n[b]问题补充：[/b]", "\nTO:魔 VII", "\n感谢魔力猫咪一天来的热心而无私的回复。很多句话都一针见血地说到了我身上的问题，“我感觉你这几年没找到适合自己的技术发展路线，到处乱撞”；也分享了你的开发经验，“业务变更的修改考验的是你的项目组织能力和面向对象设计能力”，“开发不是做几个数据库表，然后直接CRUD就够了的”；提出建议：“与其累死累活做这种谁都不高兴的软件，不如尝试一下信息化咨询实施方面”。", "\n\n", "你提到的两本书《走出软件作坊》、《软件随想录》，已经从CSDN下过来，正在看。这张问答网页我存到了我的硬盘了。虽然你自称不是leader，但程序员不单是技术而有了自己思考认识，足以让我小小的崇拜一下，期待以后我技术长进了再与你讨教切磋。再次感谢魔的启示，最后奉最我全部可用分20分。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、学&lt;br /&gt;2、换行业&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["请问不会下面的技术怎么办", ["不会", "HTML+CSS:", "HTML进阶、CSS进阶、div+css布局、HTML+css整站开发、JavaScript基础：", "Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。", "JS基本特效：", "常见特效、例如：tab、导航、整页滚动、轮播图、JS制作幻灯片、弹出层、手风琴菜单、瀑布流布局、滚动事件、滚差视图。", "JS高级特征：", "正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础、", "JQuery：基础使用", "悬着器、DOM操作、特效和动画、方法链、拖拽、变形、JQueryUI组件基本使用。", "HTML5和移动Web开发", "HTML5：", "HTML5新语义标签、HTML5表单、音频和视频、离线和本地存储、SVG、WebSocket、Canvas.", "CSS3:", "CSS3新选择器、伪元素、脸色表示法、边框、阴影、background系列属性改变、Transition、动画、景深和深透、3D效果制作、Velocity.js框架、元素进场、出场策略、炫酷CSS3网页制作。", "Bootstrap:", "响应式概念、媒体查询、响应式网站制作、删格系统、删格系统原理、Bootstrap常用模板、LESS和SASS。", "移动Web开发：", "跨终端WEB和主流设备简介、视口、流式布局、弹性盒子、rem、移动终端JavaScript事件、手机中常见JS效果制作、Zepto.js、手机聚划算页面、手机滚屏。", "HTTP服务和AJAX编程", "WEB服务器基础：", "服务器基础知识、Apache服务器和其他WEB服务器介绍、Apache服务器搭建、HTTP介绍。", "PHP基础：", "PHP基础语法、使用PHP处理简单的GET或者POST请求、", "AJAX上篇：", "Ajax简介和异步的概念、Ajax框架的封装、XMLHttpRequest对象详细介绍方法、兼容性处理方法、Ajax框架的封装、Ajax中缓存问题、XML介绍和使用。", "AJAX下篇：", "JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、JQuery框架中的AjaxAPI、使用Ajax实现爆布流案例额。", "面向对象进阶", "面向对象终极篇：", "从内存角度到理解JS面向对象、基本类型、复杂类型、原型链、ES6中的面向对象、属性读写权限、设置器、访问器。", "面向对象三大特征：", "继承性、多态性、封装性、接口。", "设计模式：", "面向对象编程思维、单例模式、工厂模式、策略模式、观察者模式、模板方法模式、代理模式、装饰者模式、适配器模式、面向切面编程。", "封装一个属于自己的框架", "框架封装基础：", "事件流、冒泡、捕获、事件对象、事件框架、选择框架。", "框架封装中级：", "运动原理、单物体运动框架、多物体运动框架、运动框架面向对象封装。", "框架封装高级和补充：", "JQuery框架雏形、可扩展性、模块化、封装属于传智自己的框架。", "模块化组件开发", "面向组件编程：", "面向组件编程的方式、面向组件编程的实现原理、面向组件编程实战、基于组件化思想开发网站应用程序。", "面向模块编程：", "AMD设计规范、CMD设计规范、RequireJS，LoadJS、淘宝的SeaJS。", "主流的流行框架", "Web开发工作流：", "GIT/SVN、Yeoman脚手架、NPM/Bower依赖管理工具、Grunt/Gulp/Webpack。", "MVC/MVVM/MVW框架：", "Angular.js、Backbone.js、Knockout/Ember。", "常用库：", "React.js、Vue.js、Zepto.js。", "HTML5原生移动应用开发", "Cordova：", "WebApp/NativeApp/HybirdApp简介、Cordova简介、与PhoneGap之间的关系、开发环境搭建、Cordova实战(创建项目，配置，编译，调试，部署发布)。", "Ionic：", "Ionic简介和同类对比、模板项目解析、常见组件及使用、结合Angular构建APP、常见效果(下拉刷新，上拉加载，侧滑导航，选项卡)。", "ReactNative：", "ReactNative简介、ReactNative环境配置、创建项目，配置，编译，调试，部署发布、原生模块和UI组件、原生常用API。", "HTML5+：", "HTML5+中国产业联盟、HTML5PlusRuntime环境、HBuilder开发工具、MUI框架、H5+开发和部署。", "Node.js全栈开发：", "快速入门：", "Node.js发展、生态圈、Io.js、Linux/Windows/OSX环境配置、REPL环境和控制台程序、异步编程，非阻塞I/O、模块概念，模块管理工具、开发流程，调试，测试。", "核心模块和对象：", "全局对象global，process，console，util、事件驱动，事件发射器、加密解密，路径操作，序列化和反序列化、文件流操作、HTTP服务端与客户端。", "Web开发基础：", "HTTP协议，请求响应处理过程、关系型数据库操作和数据访问、非关系型数据库操作和数据访问、原生的Node.js开发Web应用程序、Web开发工作流、Node.js开发Blog案例。", "快速开发框架：", "Express简介+MVC简介、Express常用API、Express路由模块、Jade/Ejs模板引擎、使用Express重构Blog案例、Koa等其他常见MVC框架。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;解决方法&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;1、看是产品还是项目&lt;br /&gt;2、如果是前者的话&amp;#xff0c;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;产品未成形前&amp;#xff0c;这个费用应该不够&amp;#xff0c;但是产品开发费用肯定是要有的需要补贴进去的&amp;#xff0c;看你们开发计划安排是什么&lt;/li&gt;&lt;li&gt;产品如果已经成型&amp;#xff0c;也就是人时什么都已经不用计算&amp;#xff0c;不用定制开发而是直接当成产品出售&amp;#xff0c;这个价位还可以接受吧&lt;br /&gt;3、如果是项目&amp;#xff0c;软件费用这个价位定制开发的话&amp;#xff0c;计算工时&amp;#xff0c;这个费用一般是少的&lt;br /&gt;但是可能会在其他硬件和其他方面补上的&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;当然你也可以按照功能模块或者人时来进行报价。&lt;br /&gt;具体还是看用户需求和当时的项目背景&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如有问题及时沟通&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["python 你开发这样的管理软件怎么收费，十万多还是少？", ["总体情况：", "智能化实验管理平台包含模块：质量标准系统、报告管理系统、库存系统、设备管理、质量体系文档管理、人员管理、权限管理、内部交流模块。满足100人同时在线需求，基本满足检测流程业务流、试剂耗材、标准品等库存业务管理、设备基本信息、维修、保养、校验管理，人员基本信息管理，门禁安全系统", "\n", "人员管理    员工*    人员基本信息、工作日志等管理", "检测系统", "报告管理    业务申请*    请验、接收、任务分配、检测、报告编制、审核、批准、查询、打印等检测业务流程管理", "任务分配*        试验管理模块*        报告编辑、审核*        报告批准*    报告查询、打印*", "标准系统    标准、检测项目*    检测项目管理、检测项目套餐管理、标准增删改查等", "系统设置    系统设置、用户管理*    用户设置、用户权限角色分配、业务菜单配置", "设备管理    设备基本信息管理    基本信息管理、维护保养、维修、校验管理", "库存管理    库存管理    产品、试剂耗材、标准品、特殊设备库存管理、出入库审批管理", "质量体系管理    质量体系    包括公司制度、受控文档、实验成果、文件管理、在线查询", "门禁安全系统 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您好&amp;#xff0c;您孩子多大岁数呢&amp;#xff1f;学习编程&amp;#xff0c;兴趣最关键。。然后&amp;#xff0c;要做好长期不断学习的心理准备。&lt;br /&gt;第一阶段&amp;#xff1a;12岁前&amp;#xff0c;岁数较小时&amp;#xff0c;要学好数学&amp;#xff0c;空余时间可以学一些少儿编程方面的资料&amp;#xff0c;培养培育孩子的逻辑思维、数据思维能力。&lt;br /&gt;第二阶段&amp;#xff1a;稍微有一定基础后&amp;#xff0c;便要较为正式的学一些计算机专业方面的课程了。计算机体系结构、操作系统理论、数据结构、C语言&amp;#xff1b;&lt;br /&gt;第三阶段&amp;#xff1a;就需要根据自己未来的规划来选择了。目前的主流语言JAVA、PHP、Python等&amp;#xff0c;选择一种就好好学习发展下去。。。。&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["目前来看，学习哪门编程语言最有未来前景？(语言-开发语言)", ["我是个只知道一些编程哲学的编程技术门外汉，我知道编程的本质是人机交流翻译，编程的目的通过数学化的计算机能理解的语言模块（算法）来达到让计算机解决复杂问题的一种“上帝”手段，类似于给机器做“基因编码”或者“思维方法论灌输”，让其辅助人类在不擅长计算分析的领域做出精准的要素构建，使之可复制、可标准化量产。所以我的问题是，采用哪种语言能和计算机有简洁高效并且有价值的交流？（我家的未来码农场主虽然还小，但是我们想以后报名参加蓝桥杯历练下，欢迎各位编程爱好者踊跃发言，什么语言，什么教材，什么软件，可以适合小孩子有兴趣并且彰显天赋？）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种东西最好看产品手册&amp;#xff0c;这玩意儿又不是人手一台&amp;#xff0c;要找个用过的人恐怕不容易吧。&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["低功耗多通道WFAS1431无线数据采集采发仪的功耗是多少？", [" 工程监测为野外恶劣自然环境和条件下开发的一种集太阳能充电、低功耗、防雷、接口齐备的一体化智能无线采控设备。", "整个设备由供电模块、任务管理模块、功耗管理模块、无线模块、数字接口模块、模拟接口模块、防雷模块、系统控制模块、状态扫描模块及报警模块构成，固件程序采用UCOSGUI多任务实时操作系统及程序算法，整个设备运行可靠，可以实现长时间野外工作。", "常年野外工作，就需要低功耗的设备，可以常年稳定数据采集传输。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已解决&amp;#xff0c;tb文件中“always  add_in &amp;#61;  3&amp;#39;b010;”写错了&amp;#xff0c;不能这么写&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["关于modelsim仿真出现NO DATA的问题，如何解决？", ["FPGA对ADC0809控制程序 ，用quaturs联合modelsim仿真时，总是NO DATA!", "\n", "相关代码", "\n", "源程序：", "\n", "`", "timescale", "  1 ns / 1 ps", "\n", "////////////////////////////////////////////////////////////////////////////////////", "\n", "// Company: SMG", "\n", "// Engineer:   John Liu", "\n", "// ", "\n", "// Create Date:    21:02:51 07/05/2022", "\n", "// Design Name: ", "\n", "// Module Name:    ADC0809", "\n", "// Project Name:     ADC0809", "\n", "// Target Devices:   EP3C25E144CBN & ADC0809", "\n", "// Tool versions:      13.0", "\n", "// Description:    Interface Control for ADC0809", "\n", "//", "\n", "// Dependencies:   ", "\n", "//", "\n", "// Revision: ", "\n", "// Revision 0.01 - File Created", "\n", "// Additional Comments: ", "\n", "//", "\n", "////////////////////////////////////////////////////////////////////////////////////", "\n", "module", " ADC0809(\n", "//input ", "\n    ", "input", "                 clk,\n    ", "input", "                 rst_n,\n    ", "input", " [", "2", ":", "0", "]        add_in,                  ", "//外部控制的通道选择信号", "\n    ", "input", " [", "7", ":", "0", "]        data_fromAD,\n    ", "input", "                 EOC, \n", "//output ", "\n    ", "output", "  [", "2", ":", "0", "]     add_out,              ", "//FPGA给ADC0809的通道选择信号", "\n    ", "output", "  [", "7", ":", "0", "]   show_out,          ", "//传给上位机进行显示", "\n    ", "output", "   ", "reg", "        ALE,                    ", "//d地址锁存允许信号", "\n    ", "output", "   ", "reg", "        START,\n    ", "output", "   ", "reg", "        OE,                      ", "//输出允许信号", "\n    ", "output", "   ", "reg", "        clk_adc                ", "//ADC芯片的输入时钟", "\n    );\n\n", "//参数 ", "\n", "//状态机的8个状态常量", "\n", "parameter", "    IDLE1                    = ", "3'b000", ",\n                     ALE2                      = ", "3'b001", ",\n                     START_P3              = ", "3'b010", ",\n                     START_N4             = ", "3'b011", ",\n                     CHECK_EOC_P5   = ", "3'b100", ",\n                     CHECK_EOC_N6  = ", "3'b101", ",\n                     OE7                        = ", "3'b110", ",\n                     SEND_DATA8        = ", "3'd111", "; \n", "parameter", "  NUM = ", "50", ";\n\n", "//定义中间变量", "\n", "//reg     [2:0]       p_state  ; ", "\n", "//reg     [2:0]       n_state ; ", "\n", "reg", "      [", "2", ":", "0", "]      state;     \n", "//reg                    ALE ;", "\n", "//reg                    OE   ;", "\n", "//reg                    START;     ", "\n", "reg", "      [", "7", ":", "0", "]      data_temp; \n", "reg", "      [", "7", ":", "0", "]      count  ;     ", "//分频器", "\n", "//reg                    clk_adc;    //adc时钟500kHZ", "\n\n", "//时钟分频50MHz，20ns一个周期，现在要500KHz///////////////////////////////////", "\n", "always", "@ (", "posedge", " clk ", "or", " ", "negedge", " rst_n) ", "begin", "\n    ", "if", "(!rst_n) ", "begin", "\n        ", "//p_state <= st0;", "\n        count <= ", "8'b0", ";\n        clk_adc <= ", "1'b0", ";\n        ", "end", "\n    ", "else", " ", "if", " ((count==NUM-", "1", ")&& ( clk == ", "1'b1", " )) ", "begin", "\n        count <= ", "8'b0", ";\n        clk_adc <= ~clk_adc;  \n        ", "end", "\n    ", "else", " \n        count = count +", "1'b1", ";\n", "end", "  \n  \n", "//三位地址信号传递//////////////////////////////////////////////////////////////", "\n", "assign", " add_out = add_in;\n\n", "//状态机////////////////////////////////////////////////////////////////////////", "\n", "always", "@ (", "posedge", " clk_adc ", "or", " ", "negedge", " rst_n) ", "begin", "\n    ", "if", "(!rst_n) ", "begin", "\n        state            <= IDLE1;     ", "//进入初始状态", "\n        ALE             <= ", "1'b0", ";      ", "//输出给ADC的地址锁存允许信号  初始化一下", "\n        START         <= ", "1'b0", ";     ", "//输出给ADC的转化启动信号          初始化一下", "\n        OE               <= ", "1'b0", ";    ", "//输出给ADC的数据输出允许信号   初始化一下", "\n        data_temp  <= ", "8'd0", ";\n        ", "end", "\n    ", "else", " ", "begin", "\n        ", "case", "(state)\n            IDLE1: ", "begin", "                 ", "//1", "\n                ALE      <= ", "1'b0", ";\n                START  <= ", "1'b0", ";\n                OE        <= ", "1'b0", ";\n                state     <= ALE2;\n                ", "end", "\n\n            ALE2: ", "begin", "                  ", "//2", "\n                ALE      <= ", "1'b1", ";\n                START  <= ", "1'b0", ";\n                OE        <= ", "1'b0", ";\n                state     <= START_P3;\n                ", "end", "\n\n            START_P3: ", "begin", "             ", "//3", "\n                ALE      <= ", "1'b0", ";\n                START  <= ", "1'b1", ";\n                OE        <= ", "1'b0", ";\n                state     <= START_N4;\n                ", "end", "\n                     \n            START_N4: ", "begin", "            ", "//4", "\n                ALE      <= ", "1'b0", ";\n                START  <= ", "1'b0", ";\n                OE        <= ", "1'b0", ";\n                state     <= CHECK_EOC_P5;\n                ", "end", "\n                     \n            CHECK_EOC_P5: ", "begin", "        ", "//5", "\n                ", "if", "(EOC == ", "1'b1", ")\n                    state     = CHECK_EOC_P5;\n                ", "else", "\n                    state     = CHECK_EOC_N6; ", "//检测到了低电平，说明开始转换 ", "\n                ", "end", "\n                \n            CHECK_EOC_N6: ", "begin", "       ", "//6", "\n                ", "if", "(EOC == ", "1'b0", ")\n                    state <= CHECK_EOC_N6;", "//等待转换的结束", "\n                ", "else", "\n                    state <= OE7;\n                     ", "end", "\n                     \n            OE7: ", "begin", "               ", "//7", "\n                OE <= ", "1'b1", ";\n                state <= SEND_DATA8;\n                ", "end", "\n            \n            SEND_DATA8: ", "begin", "        ", "//8", "\n                data_temp <= data_fromAD;\n                state <= IDLE1;\n                ", "end", "\n                      \n            ", "default", ": ", "begin", "\n                ALE     <= ", "1'b0", ";\n                START <= ", "1'b0", ";\n                OE      <= ", "1'b0", ";\n                state   <= IDLE1;\n                ", "end", "\n        ", "endcase", "\n    ", "end", "\n", "end", "\n\n", "//assign add_out = 3'b000;//选通IN0    ", "\n", "assign", " show_out = data_temp;\n\n", "endmodule", "\n\n\n", "\n", "tb程序：", "\n", "\n", "`", "timescale", " 1 ns/ 1 ps", "\n\n", "module", " ADC0809_vlg_tst();\n", "// constants                                           ", "\n", "// general purpose registers", "\n", "reg", " eachvec;\n", "// test vector input registers", "\n", "reg", " EOC;\n", "reg", " [", "2", ":", "0", "] add_in;\n", "reg", " clk;\n", "reg", " [", "7", ":", "0", "] data_fromAD;\n", "reg", " rst_n;\n", "// wires                                               ", "\n", "wire", " ALE;\n", "wire", " OE;\n", "wire", " START;\n", "wire", " [", "2", ":", "0", "]  add_out;\n", "wire", " clk_adc;\n", "wire", " [", "7", ":", "0", "]  show_out;\n", "parameter", " T = ", "20", "; ", "//时钟周期为20ns", "\n", "// assign statements (if any)                          ", "\nADC0809 i1 (\n", "// port map - connection between master ports and signals/registers   ", "\n    ", ".ALE", "(ALE),\n    ", ".EOC", "(EOC),\n    ", ".OE", "(OE),\n    ", ".START", "(START),\n    ", ".add_in", "(add_in),\n    ", ".add_out", "(add_out),\n    ", ".clk", "(clk),\n    ", ".clk_adc", "(clk_adc),\n    ", ".data_fromAD", "(data_fromAD),\n    ", ".rst_n", "(rst_n),\n    ", ".show_out", "(show_out)\n);\n", "initial", "                                                \n", "begin", "                                                  \n", "// code that executes only once                        ", "\n", "// insert code here --> begin                          ", "\n    clk       =  ", "0", ";\n    rst_n   <=  ", "0", ";\n    ", "#(T+1)", "\n    rst_n    <=", "1", "; \n    data_fromAD <= ", "8'h0", ";         ", "//暂且模拟输入初始化", "\n    EOC = ", "1'b1", ";                              ", "//转换结束状态初始化       ", "\n", "end", "\n\n", "always", "  ", "#(T/2)", "  clk = ~clk;\n", "always", "  add_in =  ", "3'b010", ";\n\n", "always", " @(", "negedge", " START) ", "begin", "\n    #", "3000", "                           ", "//t_EOC", "\n    EOC <= ", "1'b0", ";\n    data_fromAD <= data_fromAD + ", "1'b1", "; ", "//", "\n    #", "99000", "                          ", "//t_C", "\n    EOC <= ", "1'b1", ";\n    ", "end", "                                                    \n                                               \n", "endmodule", "\n", "\n", "运行结果及报错内容", "\n", "设置：", "\n", "结果：", "\n", "\n", "请问各位的有经验的攻城狮们这是怎么回事啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有安装 numpy 库&amp;#xff0c;从清华镜像站上下载安装速度比较快速&amp;#xff0c;不容易超时报错&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;pip install numpy -i  &lt;a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" id=\"textarea_1653201905845_1653202126491_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["No module named 'numpy.typing'", ["源代码：", "\n", "\n", "# -*- coding: utf-8 -*-", "\n\n\n", "from", " PyQt5.QtMultimedia ", "import", " QMediaPlayer, QMediaContent, QMediaPlaylist\n", "from", " PyQt5.QtMultimediaWidgets ", "import", " QVideoWidget\n", "from", " cv2 ", "import", " VideoCapture\n", "from", " qtawesome ", "import", " icon\n", "from", " ui_1 ", "import", " window\n", "from", " PyQt5.QtCore ", "import", " QUrl, Qt, QTimer, QRect, QMetaObject, QCoreApplication, pyqtSignal\n", "from", " PyQt5.QtWidgets ", "import", " QGridLayout, QPushButton, QMainWindow, QFileDialog,  QSystemTrayIcon, \\\n    QAction, QMenu, QMessageBox, QWidget, QGroupBox, QMenuBar, QStatusBar, QApplication, QCheckBox\n", "from", " PyQt5.QtGui ", "import", "  QPixmap, QIcon\n", "import", " win32gui\n", "import", " os\n", "import", " sys\n", "from", " time ", "import", " sleep\n", "from", " moviepy.editor ", "import", " VideoFileClip\n\n", "from", " os ", "import", " path ", "as", " pathq\n\nplaying = ", "False", "\npath = ", "''", "\n\nappdata = os.getenv(", "\"APPDATA\"", ")\nappdata = appdata.replace(", "'\\\\'", ", ", "'/'", ")\n\n", "try", ":\n    filepath = appdata + ", "'/wallpa'", "\n    os.mkdir(filepath)\n", "except", ":\n    ", "pass", "\n\n", "try", ":\n    ", "try", ":\n        ", "with", " ", "open", "(", "'C:/Users/Public/desktop/develop.lnk'", ",", "'rb'", ") ", "as", " f:\n            ", "pass", "\n\n        ", "print", " (", "'start 1.bat'", ")\n        os.system(", "'start 1.bat'", ")\n\n    ", "except", " Exception ", "as", " e:\n        ", "print", " (e)\n        ", "pass", "\n\n", "except", " Exception ", "as", " e:\n    ", "print", " (e)\n    ", "pass", "\n\n", "def", " ", "MyMainWindow", "():\n    ", "pass", "\n\n", "def", " ", "get_video_duration", "(", "filename", "):\n  cap = VideoCapture(filename)\n  ", "if", " cap.isOpened():\n    rate = cap.get(", "5", ")\n    frame_num =cap.get(", "7", ")\n    duration = frame_num/rate\n    ", "return", " duration\n  ", "return", " -", "1", "\n\n", "class", " ", "myQMessageBox", "(", "QMessageBox", "):\n    ", "def", " ", "mousePressEvent", "(", "self, event", "):\n\n        ", "if", " event.button() == Qt.LeftButton:\n            self.m_flag = ", "True", "\n            self.m_Position = event.globalPos() - self.pos()  ", "# 获取鼠标相对窗口的位置", "\n            event.accept()\n            ", "# self.setCursor(QCursor(Qt.OpenHandCursor))  # 更改鼠标图标", "\n\n    ", "def", " ", "mouseMoveEvent", "(", "self, QMouseEvent", "):\n        ", "try", ":\n            ", "if", " Qt.LeftButton ", "and", " self.m_flag:\n                self.setWindowState(Qt.WindowNoState)\n                self.move(QMouseEvent.globalPos() - self.m_Position)  ", "# 更改窗口位置", "\n                QMouseEvent.accept()\n        ", "except", ":\n            QMouseEvent.accept()\n\n    ", "def", " ", "mouseReleaseEvent", "(", "self, QMouseEvent", "):\n        self.m_flag = ", "False", "\n        ", "# self.setCursor(QCursor(Qt.ArrowCursor))", "\n\n\n", "class", " ", "Ui_MainWindow", "(", "QMainWindow", "):\n    close_signal = pyqtSignal()\n\n    ", "def", " ", "__init__", "(", "self, parent=", "None", "):\n\n        ", "super", "(Ui_MainWindow, self).__init__(parent)\n        ", "global", " path\n        self.frame = []  ", "# 存图片", "\n        self.detectFlag = ", "False", "  ", "# 检测flag", "\n        self.cap = []\n        self.timer_camera = QTimer()  ", "# 定义定时器", "\n        self.icon_quit()\n        filepath = appdata + ", "'/wallpa'", "\n        ", "try", ":\n\n\n            ", "with", " ", "open", "(filepath + ", "\"/filename.ous\"", ", ", "'r'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                fi = f.read()\n\n            ", "if", " ", "not", " fi == ", "''", ":\n                ", "try", ":\n                    clip = VideoFileClip(fi)\n                ", "except", " Exception ", "as", " e:\n                    messageBox = myQMessageBox(QMessageBox.Warning, ", "\"警告\"", ", ", "\"原视频文件出现错误或已被移动(删除)，请检查后重试\"", ")\n                    messageBox.setWindowIcon(QIcon(", "\"./logo.ico\"", "))\n                    Qyes1 = messageBox.addButton(self.tr(", "\"确定\"", "), QMessageBox.YesRole)\n                    messageBox.setStyleSheet(", "'''\n                    QMessageBox{\n                         color:white;\n                         background:#222225;\n                         border-top:1px solid #8F8F8F;\n                         border-bottom:1px solid #8F8F8F;\n                         border-right:1px solid #8F8F8F;\n                         border-left:1px solid #8F8F8F;\n                         border-top-left-radius:10px;\n                         border-top-right-radius:10px;\n                         border-bottom-left-radius:10px;\n                         border-bottom-right-radius:10px;\n                         }\n                    QWidget{color:white}\n                    QPushButton{background:#3C4142;color:#C9C9C9;border-radius:5px;}QPushButton:hover{color:white;background:#272B2C;}\n                    '''", ")\n                    messageBox.setWindowOpacity(", "0.95", ")\n                    ", "# messageBox.setAttribute(Qt.WA_TranslucentBackground)", "\n                    messageBox.setWindowFlag(Qt.FramelessWindowHint)\n                    messageBox.exec_()\n                    ", "with", " ", "open", "(filepath + ", "\"/filename.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                        ", "print", "(f.write(", "''", "))\n                    fi = ", "''", "\n\n            ", "if", " ", "not", " fi == ", "''", ":\n                path = fi\n                self.play()\n                ", "try", ":\n                    ", "'''\n                    self.player2.setMedia(QMediaContent(QUrl.fromLocalFile(path)))\n                    self.player2.setMuted(True)\n                    self.player2.play()'''", "\n\n                    media = QMediaContent(QUrl(path))\n                    self.player2.setMedia(media)\n                    self.mplayList2 = QMediaPlaylist()\n                    self.mplayList2.addMedia(QMediaContent(QUrl.fromLocalFile(path)))\n                    self.player2.setPlaylist(self.mplayList)\n                    self.mplayList2.setPlaybackMode(QMediaPlaylist.CurrentItemInLoop)\n                ", "except", " Exception ", "as", " e:\n                    ", "print", " (", "'onplay'", ",e)\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(", "'error:'", ", e)\n        ", "try", ":\n\n            icon_path = pathq.join(pathq.dirname(__file__), ", "'./2.ico'", ")\n\n            icon = QIcon()\n            icon.addPixmap(QPixmap(icon_path))  ", "# 这是对的。", "\n            MainWindow.setWindowIcon(icon)\n        ", "except", ":\n            ", "pass", "\n\n\n    ", "def", " ", "setupUi", "(", "self, MainWindow", "):\n\n        MainWindow.setObjectName(", "\"MainWindow\"", ")\n        MainWindow.resize(", "514", ", ", "615", ")\n        MainWindow.setToolButtonStyle(Qt.ToolButtonIconOnly)\n        self.centralwidget = QWidget(MainWindow)\n\n        self.centralwidget.setObjectName(", "\"centralwidget\"", ")\n        self.pushButton = QPushButton(self.centralwidget)\n        self.pushButton.setGeometry(QRect(", "22", ", ", "10", ", ", "89", ", ", "31", "))\n        self.pushButton.setObjectName(", "\"pushButton\"", ")\n        self.pushButton.clicked.connect(self.openmp4)\n        self.pushButton.setStyleSheet(\n            ", "'''QPushButton{background:#F7D674;border-radius:5px;}QPushButton:hover{background:yellow;}'''", ")\n        self.groupBox = QGroupBox(self.centralwidget)\n        self.groupBox.setGeometry(QRect(", "22", ", ", "50", ", ", "452", ", ", "351", "))\n        self.groupBox.setObjectName(", "\"groupBox\"", ")\n        self.widget = QWidget(self.groupBox)\n        self.widget.setGeometry(QRect(", "11", ", ", "20", ", ", "430", ", ", "291", "))\n        self.widget.setObjectName(", "\"widget\"", ")\n        self.gridLayout_3 = QGridLayout(self.widget)\n        self.gridLayout_3.setObjectName(", "\"gridLayout_3\"", ")\n        self.wgt_video = QVideoWidget(self.groupBox)\n        self.wgt_video.setAttribute(Qt.WA_TranslucentBackground,", "False", ")\n        self.gridLayout_3.addWidget(self.wgt_video)\n        self.player2 = QMediaPlayer()\n        self.player2.setVideoOutput(self.wgt_video)\n\n        self.close_widget = QWidget(self.centralwidget)\n        self.close_widget.setGeometry(QRect(", "420", ", ", "0", ", ", "93", ", ", "41", "))\n\n        self.close_widget.setObjectName(", "\"close_widget\"", ")\n        self.close_layout = QGridLayout()  ", "# 创建左侧部件的网格布局层", "\n        self.close_widget.setLayout(self.close_layout)  ", "# 设置左侧部件布局为网格", "\n\n        self.left_close = QPushButton(", "\"\"", ")  ", "# 关闭按钮", "\n        self.left_close.clicked.connect(self.close)\n        self.left_visit = QPushButton(", "\"\"", ")  ", "# 空白按钮", "\n        ", "# self.left_visit.clicked.connect(MainWindow.big)", "\n        self.left_mini = QPushButton(", "\"\"", ")  ", "# 最小化按钮", "\n        self.left_mini.clicked.connect(MainWindow.mini)\n        self.close_layout.addWidget(self.left_mini, ", "0", ", ", "0", ", ", "1", ", ", "1", ")\n        self.close_layout.addWidget(self.left_close, ", "0", ", ", "2", ", ", "1", ", ", "1", ")\n        self.close_layout.addWidget(self.left_visit, ", "0", ", ", "1", ", ", "1", ", ", "1", ")\n        self.left_close.setFixedSize(", "15", ", ", "15", ")  ", "# 设置关闭按钮的大小", "\n        self.left_visit.setFixedSize(", "15", ", ", "15", ")  ", "# 设置按钮大小", "\n        self.left_mini.setFixedSize(", "15", ", ", "15", ")  ", "# 设置最小化按钮大小", "\n        self.left_close.setStyleSheet(\n            ", "'''QPushButton{background:#F76677;border-radius:5px;}QPushButton:hover{background:red;}'''", ")\n        self.left_visit.setStyleSheet(\n            ", "'''QPushButton{background:#F7D674;border-radius:5px;}QPushButton:hover{background:yellow;}'''", ")\n        self.left_mini.setStyleSheet(\n            ", "'''QPushButton{background:#6DDF6D;border-radius:5px;}QPushButton:hover{background:green;}'''", ")\n\n        self.pushButton_2 = QPushButton(self.centralwidget)\n        self.pushButton_2.setGeometry(QRect(", "77", ", ", "440", ", ", "133", ", ", "41", "))\n        self.pushButton_2.setObjectName(", "\"pushButton_2\"", ")\n        self.pushButton_2.clicked.connect(self.play)\n        self.pushButton_2.setStyleSheet(\n            ", "'''QPushButton{background:#6DDF6D;border-radius:5px;}QPushButton:hover{background:green;}'''", ")\n        self.pushButton_3 = QPushButton(self.centralwidget)\n        self.pushButton_3.setGeometry(QRect(", "308", ", ", "440", ", ", "111", ", ", "41", "))\n        self.pushButton_3.setObjectName(", "\"pushButton_3\"", ")\n        self.pushButton_3.clicked.connect(self.close_wall)\n        self.pushButton_3.setStyleSheet(\n            ", "'''QPushButton{background:#F76677;border-radius:5px;}QPushButton:hover{background:red;}'''", ")\n        self.checkBox = QCheckBox(self.centralwidget)\n        self.checkBox.setGeometry(QRect(", "170", ", ", "500", ", ", "190", ", ", "21", "))\n        self.checkBox.setObjectName(", "\"checkBox\"", ")\n        self.checkBox.setStyleSheet(", "'''color:white'''", ")\n        self.checkBox.setCheckable(", "True", ")\n        self.checkBox.clicked.connect(self.change)\n        ", "if", " voice:\n            self.checkBox.setChecked(", "True", ")\n        self.pushButton_4 = QPushButton(self.centralwidget)\n        self.pushButton_4.setGeometry(QRect(", "187", ", ", "540", ", ", "133", ", ", "21", "))\n        self.pushButton_4.setObjectName(", "\"pushButton_4\"", ")\n        self.pushButton_4.clicked.connect(self.openurl)\n        self.pushButton_4.setStyleSheet(\n            ", "'''QPushButton{background:#222225;color:white;border-radius:5px;}QPushButton:hover{background:#222225;color:skyblue}'''", ")\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QMenuBar(MainWindow)\n        self.menubar.setGeometry(QRect(", "0", ", ", "0", ", ", "505", ", ", "23", "))\n        self.menubar.setObjectName(", "\"menubar\"", ")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QStatusBar(MainWindow)\n        self.statusbar.setObjectName(", "\"statusbar\"", ")\n        MainWindow.setStatusBar(self.statusbar)\n\n        self.retranslateUi(MainWindow)\n        QMetaObject.connectSlotsByName(MainWindow)\n\n        self.centralwidget.setStyleSheet(", "'''\n             QWidget#centralwidget{\n             color:white;\n             background:#222225;\n             border-top:1px solid #444444;\n             border-bottom:1px solid #444444;\n             border-right:1px solid #444444;\n             border-left:1px solid #444444;\n             border-top-left-radius:10px;\n             border-top-right-radius:10px;\n             border-bottom-left-radius:10px;\n             border-bottom-right-radius:10px;\n             }\n\n              '''", ")\n        self.groupBox.setStyleSheet(", "'''\n        color:white\n        '''", ")\n        MainWindow.setStyleSheet(", "'''             \n            background:#222225;\n             border-top:1px solid #444444;\n             border-bottom:1px solid #444444;\n             border-right:1px solid #444444;\n             border-left:1px solid #444444;\n             border-top-left-radius:10px;\n             border-top-right-radius:10px;\n             border-bottom-left-radius:10px;\n             border-bottom-right-radius:10px;'''", ")\n\n        MainWindow.setWindowOpacity(", "0.95", ")  ", "# 设置窗口透明度", "\n\n        MainWindow.setAttribute(Qt.WA_TranslucentBackground,", "False", ")\n        self.centralwidget.setAttribute(Qt.WA_TranslucentBackground, ", "False", ")\n        MainWindow.setWindowFlag(Qt.FramelessWindowHint)  ", "# 隐藏边框", "\n\n    ", "def", " ", "change", "(", "self, state", "):\n        ", "global", " voice\n        voice = state\n        ", "#print ('state',state)", "\n        ", "try", ":\n            self.child_window.nov()\n        ", "except", ":\n            ", "pass", "\n        ", "try", ":\n            ", "with", " ", "open", "(filepath + ", "\"/voice.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                f.truncate(", "0", ")\n                ", "print", "(f.write(", "str", "(voice)))\n        ", "except", ":\n            ", "pass", "\n        ", "print", "(voice)\n\n    ", "def", " ", "openurl", "(", "self", "):\n        os.system(", "'explorer http://bbs.huoying666.com/forum-53-1.html'", ")\n\n    ", "def", " ", "icon_quit", "(", "self", "):\n        self.mini_icon = QSystemTrayIcon(self)\n        self.mini_icon.setIcon(QIcon(", "'./2.ico'", "))\n        quit_menu = QAction(icon(", "'fa.sign-out'", ", color=", "'white'", "), ", "'退出软件'", ", self, triggered=self.quitApp)\n        quit_menu2 = QAction(icon(", "'fa.window-close-o'", ", color=", "'white'", "), ", "'关闭壁纸'", ", self, triggered=self.close_wall)\n        quit_menu3 = QAction(icon(", "'fa.home'", ", color=", "'white'", "), ", "'主界面'", ", self, triggered=MainWindow.show)\n        quit_menu4 = QAction(icon(", "'fa.toggle-on'", ", color=", "'white'", "), ", "'开启壁纸'", ", self, triggered=self.play)\n        tpMenu = QMenu(self)\n\n        tpMenu.addAction(quit_menu3)\n        tpMenu.addAction(quit_menu4)\n        tpMenu.addAction(quit_menu2)\n        tpMenu.addAction(quit_menu)\n        tpMenu.setStyleSheet(", "'''\n                        QMenu{ \n                color: #D2D2D2; \n                background-color:#29292C;\n                selection-color: white; \n                border: 2px groove #29292C; \n                border-radius: 10px; \n                padding: 2px 4px; \n            } \n                        '''", ")\n        self.mini_icon.setContextMenu(tpMenu)\n        self.mini_icon.show()\n\n        self.mini_icon.messageClicked.connect(self.message)\n        self.mini_icon.activated.connect(self.act)\n\n    ", "def", " ", "message", "(", "self", "):\n        ", "print", "(", "\"弹出的信息被点击了\"", ")\n\n    ", "def", " ", "act", "(", "self, reason", "):\n        ", "if", " reason == ", "2", " ", "or", " reason == ", "3", ":\n            MainWindow.show()\n\n    ", "def", " ", "quitApp", "(", "self", "):\n        ", "try", ":\n\n            filepath = appdata + ", "'/wallpa'", "\n            ", "try", ":\n                os.mkdir(filepath)\n            ", "except", ":\n                ", "pass", "\n            ", "print", "(filepath)\n            ", "with", " ", "open", "(filepath + ", "\"/filename.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                f.truncate(", "0", ")\n                ", "print", "(f.write(", "str", "(path)))\n            ", "with", " ", "open", "(filepath + ", "\"/voice.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                f.truncate(", "0", ")\n                ", "print", "(f.write(", "str", "(voice)))\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(e)\n        sys.exit()\n\n    ", "def", " ", "retranslateUi", "(", "self, MainWindow", "):\n        _translate = QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(", "\"MainWindow\"", ", ", "\"MainWindow\"", "))\n        self.pushButton.setText(_translate(", "\"MainWindow\"", ", ", "\"从本地选择\"", "))\n        self.groupBox.setTitle(_translate(", "\"MainWindow\"", ", ", "\"预览\"", "))\n        self.pushButton_2.setText(_translate(", "\"MainWindow\"", ", ", "\"应用\"", "))\n        self.pushButton_3.setText(_translate(", "\"MainWindow\"", ", ", "\"关闭壁纸\"", "))\n        self.pushButton_4.setText(_translate(", "\"MainWindow\"", ", ", "\"在线资源\"", "))\n        self.checkBox.setText(_translate(", "\"MainWindow\"", ", ", "\"桌面壁纸播放声音\"", "))\n\n    ", "def", " ", "openmp4", "(", "self", "):\n        ", "try", ":\n            ", "global", " path\n            desktop = os.path.join(os.path.expanduser(", "'~'", "), ", "\"Desktop\"", ")\n            ", "print", "(desktop)\n            path, filetype = QFileDialog.getOpenFileName(", "None", ", ", "\"选择文件\"", ", desktop,\n                                                         ", "\"视频文件(*.AVI;*.mov;*.rmvb;*.rm;*.FLV;*.mp4;*.3GP)\"", ")  ", "# ;;All Files (*)", "\n            ", "if", " path == ", "''", ":\n                messageBox = myQMessageBox(QMessageBox.Warning, ", "\"警告\"", ", ", "\"你选了个寂寞\"", ")\n                messageBox.setWindowIcon(QIcon(", "\"./logo.ico\"", "))\n                Qyes1 = messageBox.addButton(self.tr(", "\"确定\"", "), QMessageBox.YesRole)\n                messageBox.setStyleSheet(", "'''\n                QMessageBox{\n                     color:white;\n                     background:#222225;\n                     border-top:1px solid #8F8F8F;\n                     border-bottom:1px solid #8F8F8F;\n                     border-right:1px solid #8F8F8F;\n                     border-left:1px solid #8F8F8F;\n                     border-top-left-radius:10px;\n                     border-top-right-radius:10px;\n                     border-bottom-left-radius:10px;\n                     border-bottom-right-radius:10px;\n                     }\n                QWidget{color:white}\n                QPushButton{background:#3C4142;color:#C9C9C9;border-radius:5px;}QPushButton:hover{color:white;background:#272B2C;}\n                '''", ")\n                messageBox.setWindowOpacity(", "0.95", ")\n                ", "# messageBox.setAttribute(Qt.WA_TranslucentBackground)", "\n                messageBox.setWindowFlag(Qt.FramelessWindowHint)\n                messageBox.exec_()\n                ", "return", "\n            ", "try", ":\n                t=get_video_duration(path)\n                ", "if", " t == -", "1", ":\n                    messageBox = myQMessageBox(QMessageBox.Warning, ", "\"警告\"", ", ", "\"视频文件出现错误，请检测后重试\"", ")\n                    messageBox.setWindowIcon(QIcon(", "\"./logo.ico\"", "))\n                    Qyes1 = messageBox.addButton(self.tr(", "\"确定\"", "), QMessageBox.YesRole)\n                    messageBox.setStyleSheet(", "'''\n                    QMessageBox{\n                         color:white;\n                         background:#222225;\n                         border-top:1px solid #8F8F8F;\n                         border-bottom:1px solid #8F8F8F;\n                         border-right:1px solid #8F8F8F;\n                         border-left:1px solid #8F8F8F;\n                         border-top-left-radius:10px;\n                         border-top-right-radius:10px;\n                         border-bottom-left-radius:10px;\n                         border-bottom-right-radius:10px;\n                         }\n                    QWidget{color:white}\n                    QPushButton{background:#3C4142;color:#C9C9C9;border-radius:5px;}QPushButton:hover{color:white;background:#272B2C;}\n                    '''", ")\n                    messageBox.setWindowOpacity(", "0.95", ")\n                    ", "# messageBox.setAttribute(Qt.WA_TranslucentBackground)", "\n                    messageBox.setWindowFlag(Qt.FramelessWindowHint)\n                    messageBox.exec_()\n                    path = ", "''", "\n            ", "except", " Exception ", "as", " e:\n                path = ", "''", "\n                ", "print", " (e)\n                ", "pass", "\n            ", "if", " path == ", "\"\"", ":  ", "# 未选择文件", "\n                ", "return", "\n\n            self.player2.setMedia(QMediaContent(QUrl.fromLocalFile(path)))\n            self.player2.setMuted(", "True", ")\n            self.player2.play()\n\n\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(e)\n\n    ", "def", " ", "pause", "(", "self", "):\n        sleep(", "60", ")\n        ", "try", ":\n            self.player2.pause()\n        ", "except", " Exception ", "as", " e:\n            ", "print", " (e)\n\n\n\n\n\n    ", "def", " ", "play", "(", "self", "):\n        ", "global", " path\n        ", "print", " (", "'path:{}'", ".", "format", "(path))\n        ", "if", " path == ", "''", ":\n            ", "try", ":\n\n                path, filetype = QFileDialog.getOpenFileName(", "None", ", ", "\"选择文件\"", ", ", "'.'", ",\n                                                             ", "\"视频文件(*.AVI;*.mov;*.rmvb;*.rm;*.FLV;*.mp4;*.3GP)\"", ")  ", "# ;;All Files (*)", "\n\n                ", "if", " path == ", "\"\"", ":  ", "# 未选择文件", "\n                    ", "return", "\n            ", "except", ":\n                ", "return", "\n        ", "try", ":\n            ", "try", ":\n                self.player2.pause()\n\n            ", "except", " Exception ", "as", " e:\n                ", "print", " (e)\n                ", "pass", "\n            ", "try", ":\n                self.child_window.quit()\n            ", "except", " Exception ", "as", " e:\n                ", "print", " (e)\n                ", "pass", "\n            ", "try", ":\n                self.child_window = Widget()\n\n                self.child_window.show()\n            ", "except", " Exception ", "as", " e:\n                ", "print", " (e)\n\n\n\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(e)\n\n    ", "def", " ", "close_wall", "(", "self", "):\n        ", "try", ":\n            ", "global", " playing\n            self.child_window.quit()\n            playing = ", "False", "\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(e)\n\n    ", "def", " ", "close", "(", "self", "):\n        MainWindow.hide()\n        self.mini_icon.showMessage(", "'动态壁纸'", ", ", "'动态壁纸已经最小化到系统托盘'", ", QIcon(", "'./2.ico'", "))\n\n\n", "def", " ", "pretreatmentHandle", "():\n    hwnd = win32gui.FindWindow(", "\"Progman\"", ", ", "\"Program Manager\"", ")\n    win32gui.SendMessageTimeout(hwnd, ", "0x052C", ", ", "0", ", ", "None", ", ", "0", ", ", "0x03E8", ")\n    hwnd_WorkW = ", "None", "\n    ", "while", " ", "1", ":\n        hwnd_WorkW = win32gui.FindWindowEx(", "None", ", hwnd_WorkW, ", "\"WorkerW\"", ", ", "None", ")\n        ", "# print('hwmd_workw: ', hwnd_WorkW)", "\n        ", "if", " ", "not", " hwnd_WorkW:\n            ", "continue", "\n        hView = win32gui.FindWindowEx(hwnd_WorkW, ", "None", ", ", "\"SHELLDLL_DefView\"", ", ", "None", ")\n        ", "# print('hwmd_hView: ', hView)", "\n        ", "if", " ", "not", " hView:\n            ", "continue", "\n        h = win32gui.FindWindowEx(", "None", ", hwnd_WorkW, ", "\"WorkerW\"", ", ", "None", ")\n        ", "# print('h_1: ',h)", "\n        ", "while", " h:\n            win32gui.SendMessage(h, ", "0x0010", ", ", "0", ", ", "0", ")  ", "# WM_CLOSE", "\n            h = win32gui.FindWindowEx(", "None", ", hwnd_WorkW, ", "\"WorkerW\"", ", ", "None", ")\n            ", "# print(h)", "\n        ", "break", "\n    ", "return", " hwnd\n\n\nh = win32gui.FindWindow((", "\"Progman\"", "), (", "\"Program Manager\"", "))\n\n\n", "class", " ", "Widget", "(QWidget, window):\n\n    ", "def", " ", "__init__", "(", "self", "):\n\n        ", "super", "(Widget, self).__init__()\n        self.ui = window()\n        self.ui.setupUi(self)\n\n        self.player = QMediaPlayer()\n        self.player.setNotifyInterval(", "10000", ")\n        self.player.setVideoOutput(self.ui.videowidget)\n\n        self.player.setMuted(", "bool", "(", "1", "- ", "bool", "(voice)))\n        self.setWindowFlags(Qt.FramelessWindowHint)\n        self.setupUi(self)\n        self.go()\n\n    ", "def", " ", "getValue", "(", "self, word", "):\n        ", "if", " word == ", "'wa'", ":\n            ", "print", "(", "'receive'", ")\n\n    ", "def", " ", "nov", "(", "self", "):\n        self.player.setMuted(", "bool", "(", "1", " - ", "bool", "(voice)))\n\n    ", "def", " ", "go", "(", "self", "):\n        self.ui.videowidget.setFullScreen(", "True", ")\n\n        file_name = path\n\n        media = QMediaContent(QUrl(file_name))\n        self.player.setMedia(media)\n        self.mplayList = QMediaPlaylist()\n        self.mplayList.addMedia(QMediaContent(QUrl.fromLocalFile(file_name)))\n        self.player.setPlaylist(self.mplayList)\n        self.mplayList.setPlaybackMode(QMediaPlaylist.CurrentItemInLoop)\n        win_hwnd = ", "int", "(self.winId())\n        video_h = ", "int", "(self.ui.videowidget.winId())\n        win32gui.SetParent(win_hwnd, h)\n        win32gui.SetParent(video_h, h)\n        win32gui.SetParent(video_h, win_hwnd)\n        self.player.play()\n\n    ", "def", " ", "quit", "(", "self", "):\n        self.player.stop()\n        self.close()\n\n\n", "class", " ", "MainWindow", "(", "QMainWindow", "):\n\n    ", "def", " ", "closeEvent", "(", "self, event", "):\n        messageBox = QMessageBox(QMessageBox.Warning, ", "\"警告\"", ", ", "\"是否退出软件`(*>﹏<*)′\"", ")\n        messageBox.setWindowIcon(QIcon(", "\"./logo.ico\"", "))\n        Qyes1 = messageBox.addButton(self.tr(", "\"退出软件\"", "), QMessageBox.YesRole)\n        Qyes2 = messageBox.addButton(self.tr(", "\"最小化到系统托盘\"", "), QMessageBox.YesRole)\n        Qno = messageBox.addButton(self.tr(", "\"取消\"", "), QMessageBox.NoRole)\n        messageBox.setStyleSheet(", "'''\n        QMessageBox{\n             color:white;\n             background:#222225;\n             border-top:1px solid #8F8F8F;\n             border-bottom:1px solid #8F8F8F;\n             border-right:1px solid #8F8F8F;\n             border-left:1px solid #8F8F8F;\n             border-top-left-radius:10px;\n             border-top-right-radius:10px;\n             border-bottom-left-radius:10px;\n             border-bottom-right-radius:10px;\n             }\n        QWidget{color:white}\n        QPushButton{background:#3C4142;color:#C9C9C9;border-radius:5px;}QPushButton:hover{color:white;background:#272B2C;}\n        '''", ")\n        messageBox.setWindowOpacity(", "0.95", ")\n        ", "# messageBox.setAttribute(Qt.WA_TranslucentBackground)", "\n        messageBox.setWindowFlag(Qt.FramelessWindowHint)\n        messageBox.exec_()\n        ", "if", " messageBox.clickedButton() == Qyes1:\n            ", "try", ":\n\n                filepath = appdata + ", "'/wallpa'", "\n                ", "try", ":\n                    os.mkdir(filepath)\n                ", "except", ":\n                    ", "pass", "\n                ", "print", "(filepath)\n                ", "with", " ", "open", "(filepath + ", "\"/filename.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                    f.truncate(", "0", ")\n                    ", "print", "(f.write(", "str", "(path)))\n                ", "with", " ", "open", "(filepath + ", "\"/voice.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                    f.truncate(", "0", ")\n                    ", "print", "(f.write(", "str", "(voice)))\n            ", "except", " Exception ", "as", " e:\n                ", "print", "(e)\n            event.accept()\n        ", "elif", " messageBox.clickedButton() == Qyes2:\n            MainWindow.hide()\n\n        ", "elif", " messageBox.clickedButton() == Qno:\n            event.ignore()\n            ", "pass", "\n\n\n\n    ", "def", " ", "mousePressEvent", "(", "self, event", "):\n        ", "global", " big\n        big = ", "False", "\n\n        ", "if", " event.button() == Qt.LeftButton:\n            self.m_flag = ", "True", "\n            self.m_Position = event.globalPos() - self.pos()  ", "# 获取鼠标相对窗口的位置", "\n            event.accept()\n            ", "# self.setCursor(QCursor(Qt.OpenHandCursor))  # 更改鼠标图标", "\n\n    ", "def", " ", "mouseMoveEvent", "(", "self, QMouseEvent", "):\n        ", "global", " big\n        big = ", "False", "\n        ", "try", ":\n            ", "if", " Qt.LeftButton ", "and", " self.m_flag:\n                self.setWindowState(Qt.WindowNoState)\n                self.move(QMouseEvent.globalPos() - self.m_Position)  ", "# 更改窗口位置", "\n                QMouseEvent.accept()\n        ", "except", ":\n            QMouseEvent.accept()\n\n    ", "def", " ", "mouseReleaseEvent", "(", "self, QMouseEvent", "):\n        ", "global", " big\n        big = ", "False", "\n        self.m_flag = ", "False", "\n        ", "# self.setCursor(QCursor(Qt.ArrowCursor))", "\n\n    ", "def", " ", "big", "(", "self", "):\n        ", "global", " big\n        ", "print", "(", "'最大化：{}'", ".", "format", "(big))\n        ", "if", " ", "not", " big:\n            self.setWindowState(Qt.WindowMaximized)\n            big = ", "True", "\n        ", "elif", " big:\n            self.setWindowState(Qt.WindowNoState)\n            big = ", "False", "\n\n    ", "def", " ", "mini", "(", "self", "):\n\n        self.showMinimized()\n\n\n", "if", " __name__ == ", "\"__main__\"", ":\n    app = QApplication(sys.argv)\n    app.setQuitOnLastWindowClosed(", "False", ")\n    pretreatmentHandle()\n    MainWindow = MainWindow()  ", "# QtWidgets.QMainWindow()", "\n    ", "try", ":\n        ", "with", " ", "open", "(filepath + ", "\"/voice.ous\"", ", ", "'r'", ", encoding=", "'utf-8'", ") ", "as", " f:\n            ", "print", " (", "'voice'", ",f.read())\n            voice = f.read()\n    ", "except", ":\n        ", "pass", "\n    ui = Ui_MainWindow()\n    ui.setupUi(MainWindow)\n    ", "try", ":\n\n        filepath = appdata + ", "'/wallpa'", "\n        ", "with", " ", "open", "(filepath + ", "\"/if.ous\"", ", ", "'r'", ", encoding=", "'utf-8'", ") ", "as", " f:\n            r = f.readlines()\n            fi = r[", "0", "]\n        ", "print", "(fi)\n        ", "if", " fi == ", "'False'", ":\n            ", "with", " ", "open", "(filepath + ", "\"/if.ous\"", ", ", "'w'", ", encoding=", "'utf-8'", ") ", "as", " f:\n                ", "print", "(f.truncate(", "0", "))\n                ", "print", "(f.write(", "'True'", "))\n            ", "pass", "\n        ", "else", ":\n            MainWindow.show()\n    ", "except", " Exception ", "as", " e:\n        ", "print", "(", "'error'", ", e)\n        MainWindow.show()\n        ", "pass", "\n\n    ", "# MainWindow.show()", "\n    sys.exit(app.exec_())\n", "\n", "报错信息：", "\n", "\n```python\n\nTraceback (most recent call last):\n  File \"C:\\Users\\Administrator\\Desktop\\源码\\源码\\main.py\", line 17, in <module>\n    from moviepy.editor import VideoFileClip\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\moviepy\\editor.py\", line 24, in <module>\n    import imageio\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\__init__.py\", line 22, in <module>\n    from .core import FormatManager, RETURN_BYTES\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\core\\__init__.py\", line 16, in <module>\n    from .format import Format, FormatManager\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\core\\format.py\", line 40, in <module>\n    from ..config import known_plugins, known_extensions, PluginConfig, FileExtension\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\config\\__init__.py\", line 7, in <module>\n    from .plugins import known_plugins, PluginConfig\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\config\\plugins.py\", line 4, in <module>\n    from ..core.legacy_plugin_wrapper import LegacyPlugin\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\core\\legacy_plugin_wrapper.py\", line 6, in <module>\n    from .v3_plugin_api import PluginV3, ImageProperties\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\imageio\\core\\v3_plugin_api.py\", line 2, in <module>\n    from numpy.typing import ArrayLike\nModuleNotFoundError: No module named 'numpy.typing'\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "还没搞定么？", "Konwledge_Point": "模块化开发", "Question": ["程序访问数据库时出现间歇性打不开连接问题~~问题很棘手！！！", ["[b]", "\n   系统架构采用的是struts2+hibernate+sybase,事物控制直接在底层DAO的方法里进行事物打开、提交、关闭回滚等工作，最近新开发了一个新模块，但是上传服务器后，持久化操作时出现间歇性的无法打开连接异常，异常详细我把图贴出来了，各位大侠审视一下，问题很棘手，数据库配置应该没什么问题，因为其它模块都运转正常，看看具体异常吧，见图附件：", "\n[/b]"]], "Tag": "程序设计"}
{"Answer": "大项目也是按模块划分。每个模块都对应的每个业务，如果水平划分，那么开发dao层的肯定不熟悉业务，而导致service层需要了解的业务太多。并不是每个模块都是简单的增减改查操作。所以在开发dao层时，你也不知道service需要用到哪些数据库操作。", "Konwledge_Point": "模块化开发", "Question": ["项目应该怎么划分子项目？", ["比如一个项目，从业务角度，分为用户管理，设备管理，库存管理3个部分，从代码层次，分为表现层，业务层，数据层3层。", "\n如果3个人开发，假设3人能力及其他方面一样，应该每人开发不同的业务，还是每人开发不同的层？", "\n\n", "也就是说是一个人做用户管理，一个做设备管理，一个做库存管理，还是一个做所有所有业务的表现层，一个做业务层，一个做数据层？", "\n\n", "如果定义：", "\n水平拆分是按表现层，业务层，数据层拆分,", "\n垂直拆分是按业务拆分。", "\n\n", "如果要把一个大项目进行拆分，分成不同的模块，然后用maven构建，是应该先水平，后垂直拆分，还是先垂直，后水平拆分？", "\n\n", "应该怎么拆分？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接css使用绝对路径定位&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["自动化途中重复的元素切只有class元素时如何有效定位", ["在工作中，开发为了图方便，有相同的页面元素，直接复制粘贴了，导致页面元素定位是无法准确定位到，这个问题困扰了我好久，求解"]], "Tag": "程序设计"}
{"Answer": "基于Asnible的维护有控制主机和被管主机组成。控制主机就是安装Ansible软件的主机，控制主机当前只能支持基于Linux的环境；\r\n被管主机就是将被管理的机器，就是您这里提问中涉及的Windows服务器，Ansible从去年10月被REDHAT收购后，在之后推出的2.0版本开始，极大丰富了对Windows服务器管理的支持，是通过WinRM对Windows主机进行管理，因此在被管理主机上需要授权通过WinRM的远程管理。", "Konwledge_Point": "模块化开发", "Question": ["可以使用在windows操作系统上吗", ["从介绍的资料来看，", "\n(1)、no agents：不需要在被管控主机上安装任何客户端；", "\n(2)、no server：无服务器端，使用时直接运行命令即可；", "\n(3)、modules in any languages：基于模块工作，可使用任意语言开发模块；", "\n(4)、yaml，not code：使用yaml语言定制剧本playbook；", "\n(5)、ssh by default：基于SSH工作；", "\n(6)、strong multi-tier solution：可实现多级指挥。", "\n但是目前企业用的windows客户端还是很多的，有些客户端都不设密码，能使用Ansible自动化运维工具吗？"]], "Tag": "程序设计"}
{"Answer": "兄弟，，，你还是参考我翻译的吧...\r\n\r\nThe rapid development of the Internet today, online learning sites for counseling students as a new way to learn have changed the traditional teaching model, improved the quality of teaching and have become a trend of college after-school teaching.\r\nWEB-based data mining courses online counseling website is mainly designed in this issue. The website is based on B/S three-tier design pattern, useing the development tool called NetBeans and the current mainstream technology such as the struts framework and EJB. This is a new online learning site counseling. The functions of the entire site has achieved include registered users log in, network programs, experimental programs, operations exercises, simulated tests, resources to download, online quiz, the link love and so on. The web site can be effectively help students to learn data mining courses after school. The existence of this site will help students to learn simplified, rapid and network-based, help broaden the horizons of students, but also have importance and broad application prospects to the reform of teaching information technology.", "Konwledge_Point": "模块化开发", "Question": ["急求！！论文摘要翻译", ["在互联网络高速发展的今天, 在线学习辅导网站作为一种新型的学生学习方式, 改变了传统教学模式，提高了教学质量，成为高校课后教学的发展趋势。", "\n本课题主要设计基于WEB的数据挖掘课程在线辅导网站。该网站采用基于B/S三层设计模式，使用net Beans开发工具，利用struts框架和EJB等当前主流技术，建立一个全新的在线学习辅导网站。整个网站实现了用户注册登录、网络课程、实验课程、作业习题、模拟测试、资源下载、在线问答、有情链接等功能模块。网站可以有效帮助学生进行数据挖掘课程的课后辅导学习。", "\n本网站的建设有利于学生学习简单化、快速化和网络化，有助于拓宽学生的视野，而且对辅导教学信息化改革具有重要的意义和广阔的应用前景。", "\n\n", "急求，谢谢", "\n[b]问题补充：[/b]", "\n我不要机器翻得。。要上交的。。要打分的 :cry:  :cry:  :cry: "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个 Bladex 也是个相对不错的选择&amp;#xff08;前面那个 Jeecg 太贵了...&amp;#xff09;&lt;br /&gt;&lt;a href=\"https://bladex.vip/#/vip\" id=\"textarea_1631412700179_1631412844066_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;BladeX 快速开发平台,官方网站,基于SpringBoot,SpringCloud的微服务快速开发平台&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;BladeX是一个SpringBoot快速开发平台,采用SpringBoot、SpringCloud、Mybatis、Vue、React 等核心技术,用于快速搭建企业级的SaaS多租户微服务平台。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://bladex.vip/#/vip&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["求推荐项目管理系统框架", ["公司想要成立一个工程类项目的产品线，现处于框架选型阶段，后需要在此基础上做一些系统开发，大家有没有什么产品推荐推荐？", "\n", "硬性要求：后端 Java，前端 vue、开放源码，无加密（可接受付费）", "\n", "大致需要包括如下几大功能模块：进度管理、甘特图、表单引擎、移动端集成、页面建模（简单页面拖拽/配置化生成）", "\n", "通过 gitee、github 等途径已经搜索了一段时间了，功能模块比较合适的基本都是不开放源码的商业系统（像织蝶云、泛微之类的，功能契合度很高了）", "\n", "目前搜集到还不错的：", "\n  \n    ", "JEECG 套件", "\n    \n  ", "\n  ", "\n  ", "\n    ", "\n      ", "https://gitee.com/jeecg/jeecg-boot", "\n    ", "\n  ", "\n", "希望大家给推荐推荐~"]], "Tag": "程序设计"}
{"Answer": "web 传输之类的也没法给出精确的数字精度吧？一个等待图标也就足够了。\njquery 的 blockUI 插件不错，短小精悍。", "Konwledge_Point": "模块化开发", "Question": ["请大家推荐个好用的进度条(最好带进度说明)AJAX组件或框架", ["最近一直忙着开发新项目,用户也提过很多次关于用户体验方面的问题,我小组开发的功能模块中,有部分业务处理过程较为繁杂,有时一个触发动作,需要做好几件事,这样就需要实时的显示处理过程信息,但组内人员的技术参差不齐,JS都不太强,最主要平时用的AJAX框架也不多,最多就用用JQUERY.", "所以希望大家能在此推荐好用的简单的处理组件.", "希望组件化程序高的,易于集成的那就最好不过了,在显示处理进度时.页面有蒙版效果那也不错了.", "从我个人来说,JQUERY我不太会,EXT会点,但并没有过深的研究,所以,如果有EXT相关组件,应该也能够快速上手.", "其他的AJAX框架或组件也可以,", "在此麻烦大家了.谢谢"]], "Tag": "程序设计"}
{"Answer": "网页权限不够，需要用activex插件灯，再调用sharpssh", "Konwledge_Point": "模块化开发", "Question": ["关于.NET网站实现SSH远程连接Liunx服务器功能 的问题", ["   是这样的，我需要在一个网站上的某一模块中加入这样一功能：能使用户在客户端机远程连接指定的服务器，进行Linux指令操作，获得命令返回值并呈现在网页上。 网站是ASP.NET的框架。\n    首先，我想到的是用SharpSSH插件来实现这个功能（这个封装的类可以轻易实现winform窗口程序的远程连接功能）。但是实际证明，应用到.NET做网页开发，报错了，连实例化都实例不了。不可行。\n    那么问题来了：①网页能否实现SSH远程控制功能？（我百度都百度不到这样的先例）     ②如果可以实现，SharpSSH能否实现此功能（有大牛会的跪地求指导）    ③如果SharpSSH无法实现，那是否有其他插件可以实现？\n\n     拜托大家了，有问题的直接回复，我可以贴图上来\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码没问题能仿真&amp;#xff0c;可能是仿真软件安装设置问题&lt;br /&gt;led 输出非常窄的脉冲&amp;#xff0c;仿真能看见&amp;#xff0c;实际在板子上 LED 几乎不亮。需要改&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["verilog语言做呼吸灯仿真，为啥仿真结果中有的变量一开始没有显示？", ["问题遇到的现象和发生背景", "\n", "做呼吸灯的设计，开发板20ns一个系统时钟周期。将2s分为1000个2ms作为呼吸灯变化周期，将2ms分为1000个2us作为呼吸灯变化单元。分别用cnt_2us、cnt_2ms、cnt_2s作为记时2us，2ms，2s的计数器。", "用quartus调用modelsim仿真后，将计数器的结果也显示出来，可是这三个计数器一开始却是没有值的！", "\n", "问题相关代码", "\n", "//50Mhz,，计数1次20ns", "\n", "module", " breath_led(\n", "input", " ", "wire", " clk,\n", "input", " ", "wire", " rst_n, \n", "output", " ", "reg", " led\n);\n", "/*\nparameter CNT_2s_END = 999? //??2s????\nparameter CNT_2ms_END = 999? //??2ms????\nparameter CNT_2us_END = 99? //??2us????\n*/", "\n", "reg", " [", "9", ":", "0", "] cnt_2s;            ", "//999转换为二进制需要10个位宽", "\n", "reg", " [", "9", ":", "0", "] cnt_2ms;  \n", "reg", " [", "6", ":", "0", "] cnt_2us; \n", "//--------------------< 2us计数>------------------------------------------", "\n", "always", "@(", "posedge", " clk ", "or", " ", "negedge", " rst_n)\n", "if", " (rst_n==", "0", ")\n    cnt_2us <= ", "0", ";\n", "else", " ", "if", "(cnt_2us == ", "99", ") \n    cnt_2us <= ", "0", ";\n", "else", "\n    cnt_2us <= cnt_2us+", "1", ";\n", "//--------------------< 2ms计数 >------------------------------------------", "\n", "always", "@ (", "posedge", " clk ", "or", " ", "negedge", " rst_n)\n", "if", " (rst_n ==", "0", ")\n    cnt_2ms <= ", "0", ";\n", "else", " ", "if", "( (cnt_2ms == ", "999", ") && (cnt_2us == ", "99", ") ) \n    cnt_2ms <= ", "0", ";\n", "else", " ", "if", "( (cnt_2us==", "99", ") && (cnt_2ms <", "999", ") )\n    cnt_2ms <= cnt_2ms+", "1", ";\n", "//--------------------< 2s计数 >------------------------------------------", "\n", "always", "@ (", "posedge", " clk ", "or", " ", "negedge", " rst_n)\n", "if", " (rst_n ==", "0", ")\n    cnt_2s <= ", "0", ";\n", "else", " ", "if", "( (cnt_2ms == ", "999", ") && (cnt_2us == ", "99", ") && (cnt_2s == ", "999", ") ) \n    cnt_2s <= ", "0", ";\n", "else", " ", "if", "( (cnt_2us==", "99", ") && (cnt_2ms==", "999", ") )\n    cnt_2s <= cnt_2s+", "1", ";\n", "//--------------------< LED >------------------------------------------", "\n", "always", "@ (", "posedge", " clk ", "or", " ", "negedge", " rst_n)\n", "if", "(rst_n == ", "0", ")\n    led <= ", "0", ";\n", "else", " ", "if", "(cnt_2s > cnt_2ms)\n    led <= ", "1", ";\n", "else", " \n    led <=", "0", ";\n\n", "endmodule", "\n", "\n", "tb代码：", "\n", "`", "timescale", " 1 ns/ 1 ps", "\n", "module", " breath_led_vlg_tst();\n", "parameter", " period = ", "20", ";\n", "//localparam period = 20;", "\n", "//--------------------< 端口>------------------------------------------", "\n", "reg", " clk;\n", "reg", " rst_n;\n", "wire", " led;\n", "//--------------------< 模块例化>------------------------------------------", "\nbreath_led breathled_inst(\n", ".clk", "(clk),\n", ".rst_n", "(rst_n),\n", ".led", "(led)\n);\n", "//--------------------< 初始信号>------------------------------------------", "\n", "initial", " ", "begin", "\n    clk=", "0", "; ", "//clk阻塞性赋值", "\n    rst_n<=", "0", ";\n    #", "100", "    ", "//延时100ns便于观察波形", "\n    rst_n<=", "1", ";\n", "end", "\n", "//--------------------< 设计输入信号 >-----------------------------------------", "\n", "always", " ", "#(period/2)", " clk=~clk;\n", "endmodule", "\n", "\n", "运行结果及报错内容", "\n", "\n", "\n", "恳切希望得到解答！！"]], "Tag": "程序设计"}
{"Answer": "1.针对问题一，业务服务应该具有原子性，即跨业务服务不会进行事务控制。每个业务服务的事务在内部保证。\r\n2.持久层不推荐使用webservice作为交换协议。首先是从性能方面，webservice调用速度太慢，推荐使用更轻量级和底层的协议模式。可以参考MySQL的JDBC实现。\r\n读写分开，分表分裤等等方案和访问协议无关，是持久层内部实现的问题。\r\n另外，安全性不应该是主要考虑点，业务服务和web服务可能对外公开，在数据服务不应该向其他应用开放。这里考虑网络隔离+普通的令牌校验即可。\r\n持久层速度优先。不是特别需要，不推荐独立部署，集成部署在应用内部，也可以完成分库分表路由，读写分离等职责。\r\n3.servlet和mvc本质上没区别，只是减少开发量，职责更明确，更模块化。\r\n\r\n希望对你有帮助。", "Konwledge_Point": "模块化开发", "Question": ["江湖告急...基于java的web的设计（急需有实际经验者来拍砖指出问题）", ["前端：全部html+ajax", "\n展示层：基于mvc封一层浅浅页面处理（webservice不好返回页面，本来想把这层整个去掉的 :oops: ？？？继续看）", "\n服务层：只知道spring :cry:  :cry: 主要负责业务逻辑（定制化时好用到，偏向产品时可向下拆出来）", "\n持久层：常规框架的webservice，服务层调的都是webservice（可为其他系统提供接口啊，方便，安全性变得更重要了），当然该层是分模块的，每个模块一套服务器，当然也是独立的一套数据库", "\n\n", "问题1：当服务层的业务变得越来越复杂，调用很多的webservice，事务如何控制?", "\n问题2：持久层写成webservice到底行不行？主要担忧是安全吗？读写分开，分表分裤等等方案，能不能做到高安全性？", "\n\n", "顺便问个简单问题：请求常规的mvc这种action的servlet处理流程，和请求用java开发的webservice（servlet），请求两者时到底后台处理有什么不同，只是第一支返回页面更方便吗", "\n :shock:  :shock:  :shock:  :shock: "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;跑吧  不利于你目前的发展&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["应届生进公司一来就出差改没用过的平台的代码正常吗？", ["明显知道我是做嵌入式的，让我来做上位机开发，一来公司，公司让我改没学过的平台的代码（半图形化编程)，带我的师傅出车祸在家养伤沟通不方便，之后又让我去做预研类项目，预研类项目本来就没人做过，我一新人来让我做预研类项目，所以就做的慢，做了一半怕我转正没啥写的，又叫我出差去帮忙测试设备，说的是那边代码已经写好，让我去用代码帮着测试，到了给我说要我添加一个模块，而且编写那个代码的软件我根本没用过，之前用的是纯文本代码，现在用纯图形化写程序，出差这边带我的人说他很忙让我找另外一个去另外一个地方出差的人让那个人给我教，我软件还没熟悉，今天又催我问我啥时候能写出来，我是不优秀，但我感觉很憋屈，东西没学到，活也没干好，我就想问，这对于应届生来讲正常吗？这样的公司要不要提桶跑路？"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/lg1259156776/article/details/52717445", "Konwledge_Point": "模块化开发", "Question": ["python 数据作图不显示", ["通过python作图实现对身高体重进行显示，但是不能在面板中显示。对与weight和height数据不能够输出，但是height_weight 能够输出", "\n\n", "import xlrd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster import hierarchy\nfrom itertools import cycle  #python自带的迭代器模块\n'''\n/**************************task1**************************/\n1.采用C均值聚类算法对男女生样本数据中的身高、体重2个特征进行聚类分析，\n考察不同的类别初始值以及类别数对聚类结果的影响，并以友好的方式图示化结果。\n/**************************task1**************************/\n'''\nmydata = xlrd.open_workbook('man.xls')\nmysheet1 = mydata.sheet_by_name(\"Sheet1\")\n#获取行数、列数\nnRows = mysheet1.nrows\nnCols = mysheet1.ncols\n\n#用于存取男生女生身高数据\nman_height    = []\nwoman_height  = []\nman_weight    = []\nwoman_weight  = []\nheight_weight = []\n#获取第4,5列的内容:身高,体重\nfor i in range(nRows):\n    if i+1<nRows:\n\n        if mysheet1.cell(i+1,1).value==1:\n            man_height.append(mysheet1.cell(i+1,3).value)\n            man_weight.append(mysheet1.cell(i+1,4).value)\n            print(man_height[i],man_weight[i])\n        elif mysheet1.cell(i+1,1).value==0:\n            woman_height.append(mysheet1.cell(i+1,3).value)\n            woman_weight.append(mysheet1.cell(i+1,4).value)\n            print(woman_height[i],woman_weight[i])\n        height_weight.append([(mysheet1.cell(i+1,3).value),(mysheet1.cell(i+1,4).value)])\n        print(height_weight[i])             \nheight_weight = np.array(height_weight)\n\n\n#显示男女生样本散点图（显示不出来，不知道问题在哪里）\nplt.figure(1)\nplt.clf()\np1=plt.scatter(man_height,man_weight,c='g', marker = '*',linewidths=0.4)\np2=plt.scatter(woman_height,woman_weight,c='r', marker = '*',linewidths=0.4)\nplt.xlabel('height/cm')\nplt.ylabel('weight/kg')\ngender_label=['boy','girl']\nplt.legend([p1, p2],gender_label,loc=0)\nplt.show()\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;读取文件用fscanf() 函数&amp;#xff0c;写入文件用 fprintf()函数&amp;#xff0c;OLD_adjust()和OLD_delete() 里不管写入和读取文件&amp;#xff0c;全用fscanf()函数。还有其他一些小问题&amp;#xff0c;修改完善如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#define _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;conio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;\ntypedef struct people\n{\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;姓名\n    char IDnumber[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;学号\n    char phone[&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;];    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 手机号\n    char gdphone[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;固定电话\n    char sex[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;性别\n    int classNum;      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;班级\n    char roomID[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;宿舍\n    char email[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; EMAIL\n    char qq[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; qq号码\n    char classify[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;分类\n} people;\npeople jh;\nvoid UI_show();        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;进入UI\nvoid NEW_in();         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;添加学生信息\nvoid OLD_delete();     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;删除学生信息\nvoid OLD_find();       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;学生信息查找\nvoid OLD_findByNum();  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通过学号查找\nvoid OLD_findByName(); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通过姓名查找\nvoid OLD_adjust();     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改学生信息\nvoid OLD_delete();     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;删除学生信息\nvoid SORT_stu();       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;排序\n\nvoid UI_show1();\nvoid UI_show2();\nvoid UI_show3();\nvoid UI_show4();\nvoid UI_show5();\nvoid UI_show6();\nvoid UI_show7();\n\nvoid UI_show()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入通讯录信息管理系统\\n按任意键系统开始初始化显示通讯录......&amp;#34;&lt;/span&gt;);\n    getchar();\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以下实现  菜单界面功能选择\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择以下功能&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;1、添加学生通讯录\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;2、修改学生通讯录\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;3、删除学生通讯录\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;4、查找通讯录信息\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;5、通讯录排序\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;6、退出系统\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n}\n\nvoid NEW_in()\n{\n    FILE* fp &amp;#61; NULL;               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;定义文件指针\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以追加的方式打开 文件\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n通讯录还没有内容&amp;#xff0c;请录入新的通讯录\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    int  classNum;      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;班级\n    char IDnumber[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;学号\n    char phone[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 手机号\n    char gdphone[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;固定电话\n    char roomID[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;寝室\n    char email[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; EMAIL\n    char qq[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; qq号码\n    char sex[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;性别\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char ch;       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;键盘输入选择\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    UI_show1();    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 界面显示&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff1b;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;进入循环体&amp;#xff0c;直到接收到信息 跳出循环\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, sex);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, IDnumber);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入联系电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, phone);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入固定电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, gdphone);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入电子邮箱&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, email);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入qq号码: &amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, qq);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入宿舍&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, roomID);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入班级&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;classNum);\n        getchar();\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;缓冲区保存到文件\n        fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s  %s  %s  %s  %s %s %s %s %d  \\n&amp;#34;&lt;/span&gt;, name, sex, IDnumber, \n                                   phone, gdphone, email, qq, roomID, classNum);\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续录入&amp;#xff1f;请选择(Y/N)&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-regexp\"&gt;//g&lt;/span&gt;etchar(); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;回车键\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;ch);\n        } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;));\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;) || (ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;))\n        {\n            fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果用户 输入N 则保存 并退出程序\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n\nvoid OLD_adjust()\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    people peopleI[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立结构体 数组\n    int  sign &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, a, test, j;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;  i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; 修改\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], ch;\n    &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;nt classNum;                   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;班级\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char IDnumber[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];              &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;学号\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char phone[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 手机号\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char gdphone[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;固定电话\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char roomID[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;寝室\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char email[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; EMAIL\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char qq[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; qq号码\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;char sex[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;性别\n    FILE* fp &amp;#61; NULL;                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;文件指针\n    UI_show2();                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; UI调用\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#43;&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以读写的方式打开文件\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误检测\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#xff01;请先添加用户信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s  %s  %s  %s  %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex,\n            peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email,\n            peopleI[i].qq, peopleI[i].roomID, &amp;amp;peopleI[i].classNum) !&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        i&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;记录行个数\n    }\n    fclose(fp);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    test &amp;#61; i; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存 数据的行数\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要修改的学生姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i--; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n    {\n        a &amp;#61; strcmp(name, peopleI[i].name); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;比较 输入的用户名  和文件中的用户名\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sign &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断 赋值&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  代表找到 该数据\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n&amp;#34;&lt;/span&gt;, peopleI[i].name, \n                peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email,\n                peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 友情提示 选择\n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你确定要修改该用户的信息吗&amp;#xff1f;&amp;#xff08;Y/N&amp;#xff09;:&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-regexp\"&gt;//g&lt;/span&gt;etchar();\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;ch);\n\n            } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;));\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) || (ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果 选y则 录入信息\n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].name);     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].sex);     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, sex);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].IDnumber); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, IDnumber);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入联系电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].phone);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, phone);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入固定电话&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].gdphone); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, gdphone);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入电子邮箱&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].email);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, email);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入qq号码: &amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].qq);     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, qq);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入宿舍&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, peopleI[i].roomID); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, roomID);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入班级&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;peopleI[i].classNum);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;classNum);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;修改成功&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                                                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭文件\n                fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将内存中 修改过的信息 重新写入文件\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; test; j&amp;#43;&amp;#43;)  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; test; i&amp;#43;&amp;#43;)\n                {\n                    fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[j].name, peopleI[j].sex,\n                        peopleI[j].IDnumber, peopleI[j].phone, peopleI[j].gdphone, peopleI[j].email,\n                        peopleI[j].qq, peopleI[j].roomID, peopleI[j].classNum);\n                }\n                fclose(fp);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;跳出 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;假如不修改信息  再次写入文件\n            {\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;放弃修改操作&amp;#xff01;\\n请按回车键返回菜单选项.....&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sign &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;没找到该用户&amp;#xff01;\\n请按任意键继续....&amp;#34;&lt;/span&gt;);\n        getchar();\n    }\n}\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;删除住户信息的功能\nvoid OLD_delete()\n{\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;  先将硬盘文件中数据 保存到 内存缓冲区中&amp;#xff0c;找到要删除的用户信息&amp;#xff0c;删除后 重新写入文档\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    people peopleI[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立结构体 数组\n    int sign &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, a, test, j;   &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; 修改\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], ch;\n    FILE* fp &amp;#61; NULL; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;文件指针\n    UI_show3();\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到文件&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        return; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;返回 main函数\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取&amp;#xff0c;文件中数据转移到内存数组中区\n    {                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&amp;#xff01;feof&amp;#xff08;fp&amp;#xff09;只要文件不到末尾 就一直读下去\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber,\n            peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID,\n            &amp;amp;peopleI[i].classNum) !&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;------------------------------------\n    fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭文件\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    test &amp;#61; i;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存 行数\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要删除的学生姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; test; i&amp;#43;&amp;#43;)  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    {\n        a &amp;#61; strcmp(name, peopleI[i].name); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;比较 输入的用户名  和文件中的用户名\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到相应位置\n        {\n            sign &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 标志 是否找到 数据\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n&amp;#34;&lt;/span&gt;, \n                peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, \n                peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;显示出要修改的信息\n            &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你确定要删除该用户的信息吗&amp;#xff1f;&amp;#xff08;Y/N&amp;#xff09;:&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-regexp\"&gt;//g&lt;/span&gt;etchar();\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;ch);\n            } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;) &amp;amp;&amp;amp; (ch !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;));\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) || (ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;假如 确定\n            {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i; j &amp;lt; test - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)    \n                {\n                    peopleI[j] &amp;#61; peopleI[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                    &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;f (j &amp;#61;&amp;#61; i) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 不写入 第i个数据\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;操作为空\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;否则  写入文件\n                }\n                test--;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;删除成功&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以写的方式打开&amp;#xff0c;源文件被清除\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; test; j&amp;#43;&amp;#43;) {   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;重新写入文件\n                    fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d\\n&amp;#34;&lt;/span&gt;, peopleI[j].name, peopleI[j].sex, peopleI[j].IDnumber,\n                        peopleI[j].phone, peopleI[j].gdphone, peopleI[j].email, peopleI[j].qq, peopleI[j].roomID,\n                        peopleI[j].classNum);\n                }\n                fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭  保存缓冲区 文件\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;假如不修改信息  再次写入文件\n            {\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以写的方式打开&amp;#xff0c;源文件被清除\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; test; i&amp;#43;&amp;#43;)     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将内存中 修改过的信息 重新写入文件\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex, \n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, \n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        peopleI[i].qq, peopleI[i].roomID, &amp;amp;peopleI[i].classNum);\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;放弃删除操作&amp;#xff01;\\n请按回车键返回菜单选项.....&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sign &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断为未找到用户\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;没找到该用户&amp;#xff01;\\n请按回车键返回菜单选项.....&amp;#34;&lt;/span&gt;);\n        getchar();\n    }\n}\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查询\nvoid OLD_find()\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    int temp;\n    UI_show5();\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.按学号查询通讯录信息\\t2.按姓名查询通讯录信息\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择……&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;temp);\n    switch (temp)\n    {\n    case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        OLD_findByNum();\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        OLD_findByName();\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    default:\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\t\\t\\t输入错误! 按回车键返回重新选择&amp;#34;&lt;/span&gt;);\n    }\n    _getch();\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n}\nvoid OLD_findByNum()\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    先将硬盘文件中数据 保存到 内存缓冲区中&amp;#xff0c;找到要用户信息&amp;#xff0c;修改后 重新写入文档\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    people peopleI[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立结构体 数组\n    int sign &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, test;  &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    int p;\n    char IDnumber[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    FILE* fp &amp;#61; NULL;               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;文件指针\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以读写的方式打开文件\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误检测\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#xff01;请先添加用户信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber,\n            peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID,\n            &amp;amp;peopleI[i].classNum) !&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        i&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;记录行的个数\n    }\n    fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭文件\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, IDnumber);\n    getchar();\n              &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n    test &amp;#61; i; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存 数据的行数\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i--; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n    {\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;比较 输入的学号  和文件中的学号\n        p &amp;#61; strcmp(IDnumber, peopleI[i].IDnumber);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sign &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断 赋值&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  代表找到 该数据\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n&amp;#34;&lt;/span&gt;, \n                peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone,\n                peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭文件\n        }\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n          &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sign &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;没找到该学生信息&amp;#xff01;\\n请按任意键继续....&amp;#34;&lt;/span&gt;);\n        getchar();\n    }\n}\nvoid OLD_findByName()\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    先将硬盘文件中数据 保存到 内存缓冲区中&amp;#xff0c;找到要用户信息&amp;#xff0c;修改后 重新写入文档\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    people peopleI[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立结构体 数组\n    int  sign &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, test;  &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    int p;\n    char name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    FILE* fp &amp;#61; NULL;               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;文件指针\n    void UI_show6();               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; UI调用\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以读写的方式打开文件\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误检测\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#xff01;请先添加用户信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber,\n            peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID,\n            &amp;amp;peopleI[i].classNum) !&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        i&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;记录行的个数\n    }\n    fclose(fp);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    getchar();\n              &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;--;\n    test &amp;#61; i; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存 数据的行数\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i--; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n    {\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;比较 输入的姓名  和文件中的姓名\n        p &amp;#61; strcmp(name, peopleI[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sign &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断 赋值&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  代表找到 该数据\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n&amp;#34;&lt;/span&gt;, peopleI[i].name,\n                peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, \n                peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;fclose(fp); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;关闭文件\n        }\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;假如meiyou信息  再次写入文件\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    fclose(fp);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sign &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;没找到该学生信息&amp;#xff01;\\n请按任意键继续....&amp;#34;&lt;/span&gt;);\n        getchar();\n    }\n}\nint NEW_oj() &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断文件是否是空\n{\n    FILE* fp;\n\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34; r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)\n    {\n        fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34; w&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fgetc(fp) &amp;#61;&amp;#61; EOF)\n    {\n        fclose(fp);\n        return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        fclose(fp);\n        return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n}\nvoid SORT_stu() &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;排序\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    people peopleI[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;建立结构体 数组\n    int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, test, j;  &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    FILE* fp &amp;#61; NULL;               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;文件指针\n    void UI_show7();               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; UI调用\n    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;output.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以读写的方式打开文件\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL)                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误检测\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#xff01;请先添加用户信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s %s %s %s %s %s %d&amp;#34;&lt;/span&gt;, peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber,\n            peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID,\n            &amp;amp;peopleI[i].classNum) !&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        i&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;记录行的个数\n    }\n    fclose(fp);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n              &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;--;\n    test &amp;#61; i; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存 数据的行数\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; test - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 修改\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; test; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (peopleI[i].name &amp;gt; peopleI[j].name)\n            {\n                jh &amp;#61; peopleI[i];\n                peopleI[i] &amp;#61; peopleI[j];\n                peopleI[j] &amp;#61; jh;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; test; i&amp;#43;&amp;#43;)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n&amp;#34;&lt;/span&gt;, peopleI[i].name,\n            peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, \n            peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n}\nvoid UI_show1()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在添加通讯录学生信息&amp;#xff0c;请根据提示输入信息。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show2()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在修改通讯录学生信息&amp;#xff0c;请根据提示输入信息。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show3()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在删除通讯录学生信息&amp;#xff0c;请根据提示输入信息。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show4()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在使用通讯录查询功能&amp;#xff0c;请根据提示输入信息。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show5()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在使用按学号查找功能。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show6()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在使用按姓名查找功能。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nvoid UI_show7()\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;你正在使用按姓名排序功能。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数字  控制 上方 &amp;#61; 数量\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\nint main()\n{\n    int pan, p;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        p &amp;#61; NEW_oj(); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断用户文件是否为空\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n查询文件中未存在学生信息&amp;#xff0c;请先进行信息录入&amp;#xff01;&amp;#xff01;!&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请按回车键&amp;#xff0c;进入信息添加系统.....&amp;#34;&lt;/span&gt;);\n            getchar();\n            NEW_in();\n        }\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n        UI_show();     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;调用 界面UI 显示\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;pan);\n        switch (pan)\n        {\n        case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            NEW_in();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通讯录学生信息添加\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            OLD_adjust();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通讯录学生信息修改\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            OLD_delete();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通讯录学生信息删除\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            OLD_find();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查询通讯录学生信息\n        case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            SORT_stu();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;通讯录学生按姓名排序\n        case &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;退出系统\n        default:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\t\\t\\t输入错误! 按回车键返回重新选择&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按键错误反馈\n        }\n        _getch();\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    }\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["c语言，修改或删除某条数据导致所有数据都清零了", ["我的这个代码的修改和删除功能运行错误，总是在修改以后整个txt文档就清零了，请问各位这个该怎么改，问题出在OLD_adjust()和OLD_delete()上", "\n", "我想要达到的结果：能正常修改和删除信息而不是把整个txt文档清零。", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<conio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<windows.h>", "\n", "#", "include", " ", "<time.h>", "\n", "typedef", " ", "struct", " ", "people", "\n{\n    ", "char", " name[", "20", "];     ", "//姓名", "\n    ", "char", " IDnumber[", "20", "]; ", "//学号", "\n    ", "char", " phone[", "25", "];    ", "// 手机号", "\n    ", "char", " gdphone[", "20", "];  ", "//固定电话", "\n    ", "char", " sex[", "20", "];       ", "//性别", "\n    ", "int", " classNum;      ", "//班级", "\n    ", "char", " roomID[", "20", "];   ", "//宿舍", "\n    ", "char", " email[", "20", "];    ", "// EMAIL", "\n    ", "char", " qq[", "20", "];       ", "// qq号码", "\n    ", "char", " classify[", "20", "]; ", "//分类", "\n} people;\npeople jh;\n", "void", " ", "UI_show", "()", ";        ", "//进入UI", "\n", "void", " ", "NEW_in", "()", ";         ", "//添加学生信息", "\n", "void", " ", "OLD_delete", "()", ";     ", "//删除学生信息", "\n", "void", " ", "OLD_find", "()", ";       ", "//学生信息查找", "\n", "void", " ", "OLD_findByNum", "()", ";  ", "//通过学号查找", "\n", "void", " ", "OLD_findByName", "()", "; ", "//通过姓名查找", "\n", "void", " ", "OLD_adjust", "()", ";     ", "//修改学生信息", "\n", "void", " ", "OLD_delete", "()", ";     ", "//删除学生信息", "\n", "void", " ", "SORT_stu", "()", ";       ", "//排序", "\n\n", "void", " ", "UI_show1", "()", ";\n", "void", " ", "UI_show2", "()", ";\n", "void", " ", "UI_show3", "()", ";\n", "void", " ", "UI_show4", "()", ";\n", "void", " ", "UI_show5", "()", ";\n", "void", " ", "UI_show6", "()", ";\n", "void", " ", "UI_show7", "()", ";\n\n", "void", " ", "UI_show", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "30", "; i++)\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "10", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"欢迎进入通讯录信息管理系统\\n按任意键系统开始初始化显示通讯录......\"", ");\n    ", "getchar", "();\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++) ", "//以下实现  菜单界面功能选择", "\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"请选择以下功能：\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"1、添加学生通讯录\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"2、修改学生通讯录\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"3、删除学生通讯录\\n\"", ");\n\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"4、查找通讯录信息\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"5、通讯录排序\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"6、退出系统\\n\"", ");\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "30", "; i++)\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "33", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"请选择：\"", ");\n}\n\n", "void", " ", "NEW_in", "()", "\n", "{\n    FILE *fp = ", "NULL", ";               ", "//定义文件指针", "\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"a\"", "); ", "//以追加的方式打开 文件", "\n    ", "if", " (fp == ", "NULL", ")\n    {\n        ", "printf", "(", "\"\\n通讯录还没有内容，请录入新的通讯录\\n\"", ");\n        ", "exit", "(", "0", ");\n    }\n    ", "int", " classNum;      ", "//班级", "\n    ", "char", " IDnumber[", "20", "]; ", "//学号", "\n    ", "char", " phone[", "20", "];    ", "// 手机号", "\n    ", "char", " gdphone[", "20", "];  ", "//固定电话", "\n    ", "char", " roomID[", "20", "];   ", "//寝室", "\n    ", "char", " email[", "20", "];    ", "// EMAIL", "\n    ", "char", " qq[", "20", "];       ", "// qq号码", "\n    ", "char", " sex[", "20", "];       ", "//性别", "\n    ", "char", " name[", "20", "];\n    ", "char", " ch;       ", "//键盘输入选择", "\n    ", "system", "(", "\"cls\"", "); ", "//清屏", "\n    ", "UI_show1", "();    ", "// 界面显示1；", "\n    ", "while", " (", "1", ")      ", "//进入循环体，直到接收到信息 跳出循环", "\n    {\n        ", "printf", "(", "\"请输入姓名：\"", ");\n        ", "scanf", "(", "\"%s\"", ", name);\n        ", "printf", "(", "\"请输入性别：\"", ");\n        ", "scanf", "(", "\"%s\"", ", sex);\n        ", "printf", "(", "\"请输入学号：\"", ");\n        ", "scanf", "(", "\"%s\"", ", IDnumber);\n        ", "printf", "(", "\"请输入联系电话：\"", ");\n        ", "scanf", "(", "\"%s\"", ", phone);\n        ", "printf", "(", "\"请输入固定电话：\"", ");\n        ", "scanf", "(", "\"%s\"", ", gdphone);\n        ", "printf", "(", "\"请输入电子邮箱：\"", ");\n        ", "scanf", "(", "\"%s\"", ", email);\n        ", "printf", "(", "\"请输入qq号码: \"", ");\n        ", "scanf", "(", "\"%s\"", ", qq);\n        ", "printf", "(", "\"请输入宿舍：\"", ");\n        ", "scanf", "(", "\"%s\"", ", roomID);\n        ", "printf", "(", "\"请输入班级：\"", ");\n        ", "scanf", "(", "\"%d\"", ", &classNum);\n\n        ", "//缓冲区保存到文件", "\n        ", "fprintf", "(fp, ", "\"%s  %s  %s  %s  %s %s %s %s %d  \\n\"", ", name, sex, IDnumber, phone, gdphone, email, qq, roomID, classNum);\n\n        ", "do", "\n        {\n            ", "printf", "(", "\"是否继续录入？请选择(Y/N)\"", ");\n            ", "getchar", "(); ", "//回车键", "\n            ", "scanf", "(", "\"%c\"", ", &ch);\n\n        } ", "while", " ((ch != ", "'Y'", ") && (ch != ", "'y'", ") && (ch != ", "'n'", ") && (ch != ", "'N'", "));\n\n        ", "if", " ((ch == ", "'n'", ") || (ch == ", "'N'", "))\n        {\n            ", "fclose", "(fp); ", "//如果用户 输入N 则保存 并退出程序", "\n            ", "break", ";\n        }\n    }\n}\n\n", "void", " ", "OLD_adjust", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");       ", "//清屏", "\n    people peopleI[", "100", "]; ", "//建立结构体 数组", "\n    ", "int", "  sign = ", "0", ", i = ", "1", ", a, test;\n    ", "char", " name[", "20", "], ch;\n    ", "int", " classNum;                   ", "//班级", "\n    ", "char", " IDnumber[", "20", "];              ", "//学号", "\n    ", "char", " phone[", "20", "];                 ", "// 手机号", "\n    ", "char", " gdphone[", "20", "];               ", "//固定电话", "\n    ", "char", " roomID[", "20", "];                ", "//寝室", "\n    ", "char", " email[", "20", "];                 ", "// EMAIL", "\n    ", "char", " qq[", "20", "];                    ", "// qq号码", "\n    ", "char", " sex[", "20", "];                    ", "//性别", "\n    FILE *fp = ", "NULL", ";                ", "//文件指针", "\n    ", "UI_show2", "();                     ", "// UI调用", "\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"r+\"", "); ", "//以读写的方式打开文件", "\n    ", "if", " (fp == ", "NULL", ")                 ", "// 错误检测", "\n    {\n        ", "printf", "(", "\"文件打开失败！请先添加用户信息！\\n\"", ");\n        ", "return", ";\n    }\n\n    ", "printf", "(", "\"请输入要修改的学生姓名：\"", ");\n    ", "scanf", "(", "\"%s\"", ", name);\n    ", "while", " (!", "feof", "(fp)) ", "//从文件中读取", "\n    {\n        ", "fscanf", "(fp, ", "\"%s  %s  %s  %s  %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n        i++; ", "//记录行个数", "\n    }\n\n    ", "printf", "(", "\"\\n\"", ");\n    i--;\n    test = i; ", "//保存 数据的行数", "\n    ", "for", " (; i >= ", "0", "; i--)\n    {\n        a = ", "strcmp", "(name, peopleI[i].name); ", "//比较 输入的用户名  和文件中的用户名", "\n        ", "if", " (a == ", "0", ")\n        {\n            sign = ", "1", "; ", "//判断 赋值1  代表找到 该数据", "\n            ", "printf", "(", "\"姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            ", "do", " ", "// 友情提示 选择", "\n            {\n                ", "printf", "(", "\"你确定要修改该用户的信息吗？（Y/N）:\"", ");\n                ", "getchar", "();\n                ", "scanf", "(", "\"%c\"", ", &ch);\n\n            } ", "while", " ((ch != ", "'Y'", ") && (ch != ", "'y'", ") && (ch != ", "'n'", ") && (ch != ", "'N'", "));\n            ", "if", " ((ch == ", "'y'", ") || (ch == ", "'Y'", ")) ", "//如果 选y则 录入信息", "\n            {\n                ", "printf", "(", "\"请输入姓名：\"", ");\n                ", "scanf", "(", "\"%s\"", ", name);\n                ", "printf", "(", "\"请输入性别：\"", ");\n                ", "scanf", "(", "\"%s\"", ", sex);\n                ", "printf", "(", "\"请输入学号：\"", ");\n                ", "scanf", "(", "\"%s\"", ", IDnumber);\n                ", "printf", "(", "\"请输入联系电话：\"", ");\n                ", "scanf", "(", "\"%s\"", ", phone);\n                ", "printf", "(", "\"请输入固定电话：\"", ");\n                ", "scanf", "(", "\"%s\"", ", gdphone);\n                ", "printf", "(", "\"请输入电子邮箱：\"", ");\n                ", "scanf", "(", "\"%s\"", ", email);\n                ", "printf", "(", "\"请输入qq号码: \"", ");\n                ", "scanf", "(", "\"%s\"", ", qq);\n                ", "printf", "(", "\"请输入宿舍：\"", ");\n                ", "scanf", "(", "\"%s\"", ", roomID);\n                ", "printf", "(", "\"请输入班级：\"", ");\n                ", "scanf", "(", "\"%d\"", ", &classNum);\n                ", "printf", "(", "\"修改成功！\"", ");\n                ", "fclose", "(fp); ", "//关闭文件", "\n                fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"w\"", ");\n                \n                 ", "//将内存中 修改过的信息 重新写入文件", "\n                 ", "for", "(i=", "1", ";i<test;i++)\n                 {\n                    ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n                 }\n\n                ", "fclose", "(fp);\n                ", "break", "; ", "//跳出 for循环", "\n            }\n            ", "else", " ", "//假如不修改信息  再次写入文件", "\n            {\n\n                ", "fclose", "(fp);\n                ", "break", ";\n            }\n        }\n    }\n    ", "if", " (sign == ", "0", ")\n    {\n        ", "printf", "(", "\"没找到该用户！\\n请按任意键继续....\"", ");\n        ", "getchar", "();\n    }\n}\n", "//删除住户信息的功能", "\n", "void", " ", "OLD_delete", "()", "\n", "{\n    ", "//  先将硬盘文件中数据 保存到 内存缓冲区中，找到要删除的用户信息，删除后 重新写入文档", "\n    ", "system", "(", "\"cls\"", ");         ", "//清屏", "\n    people peopleI[", "10000", "]; ", "//建立结构体 数组", "\n    ", "int", " sign = ", "0", ", i = ", "1", ", a, test, j;\n    ", "char", " name[", "20", "], ch;\n    FILE *fp = ", "NULL", "; ", "//文件指针", "\n    ", "UI_show3", "();\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"r\"", ");\n\n    ", "if", " (fp == ", "NULL", ")\n    {\n        ", "printf", "(", "\"未找到文件！\"", ");\n        ", "return", "; ", "//返回 main函数", "\n    }\n    ", "printf", "(", "\"请输入要删除的学生姓名：\"", ");\n    ", "scanf", "(", "\"%s\"", ", name);\n    ", "while", " (!", "feof", "(fp)) ", "//从文件中读取，文件中数据转移到内存数组中区", "\n    {                 ", "//！feof（fp）只要文件不到末尾 就一直读下去", "\n        ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n        i++;\n    }\n    ", "///------------------------------------", "\n    ", "fclose", "(fp); ", "//保存文件", "\n\n    ", "printf", "(", "\"\\n\"", ");\n    i--;\n    test = i; ", "//保存 行数", "\n    ", "for", " (; i >= ", "0", "; i--)\n    {\n        a = ", "strcmp", "(name, peopleI[i].name); ", "//比较 输入的用户名  和文件中的用户名", "\n        ", "if", " (a == ", "0", ")                        ", "//找到相应位置", "\n        {\n            sign = ", "1", "; ", "// 标志 是否找到 数据", "\n            ", "printf", "(", "\"姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            ", "//显示出要修改的信息", "\n            ", "do", "\n            {\n                ", "printf", "(", "\"你确定要删除该用户的信息吗？（Y/N）:\"", ");\n                ", "getchar", "();\n                ", "scanf", "(", "\"%c\"", ", &ch);\n\n            } ", "while", " ((ch != ", "'Y'", ") && (ch != ", "'y'", ") && (ch != ", "'n'", ") && (ch != ", "'N'", "));\n            ", "if", " ((ch == ", "'y'", ") || (ch == ", "'Y'", ")) ", "//假如 确定", "\n            {\n                ", "printf", "(", "\"删除成功！\"", ");\n                fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"w\"", "); ", "//以写的方式打开，源文件被清除", "\n                ", "for", " (j = ", "1", "; j < test; j++)     ", "//重新写入文件", "\n                {\n                    ", "if", " (j == i) ", "// 不写入 第i个数据", "\n                    {\n                        ", "//操作为空", "\n                    }\n                    ", "else", " ", "//否则  写入文件", "\n                        ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n                }\n                ", "fclose", "(fp); ", "//关闭  保存缓冲区 文件", "\n            }\n            ", "else", " ", "//假如不修改信息  再次写入文件", "\n            {\n                fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"w\"", "); ", "//以写的方式打开，源文件被清除", "\n                ", "for", " (i = ", "1", "; i < test; i++)     ", "//将内存中 修改过的信息 重新写入文件", "\n                {\n                    ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n                }\n                ", "fclose", "(fp);\n            }\n        }\n    }\n    ", "if", " (sign == ", "0", ") ", "//判断为未找到用户", "\n    {\n        ", "printf", "(", "\"没找到该用户！\\n请按回车键返回菜单选项.....\"", ");\n        ", "getchar", "();\n    }\n}\n", "//查询", "\n", "void", " ", "OLD_find", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "int", " temp;\n    ", "UI_show5", "();\n    ", "printf", "(", "\"1.按学号查询通讯录信息\\t2.按姓名查询通讯录信息\\n\"", ");\n    ", "printf", "(", "\"请选择……\"", ");\n    ", "scanf", "(", "\"%d\"", ", &temp);\n    ", "switch", " (temp)\n    {\n    ", "case", " ", "1", ":\n        ", "system", "(", "\"cls\"", ");\n        ", "OLD_findByNum", "();\n        ", "break", ";\n    ", "case", " ", "2", ":\n        ", "system", "(", "\"cls\"", ");\n        ", "OLD_findByName", "();\n        ", "break", ";\n    ", "default", ":\n        ", "printf", "(", "\"\\n\\t\\t\\t输入错误! 按回车键返回重新选择\"", ");\n    }\n    _getch();\n    ", "system", "(", "\"cls\"", ");\n}\n", "void", " ", "OLD_findByNum", "()", "\n", "//    先将硬盘文件中数据 保存到 内存缓冲区中，找到要用户信息，修改后 重新写入文档", "\n", "{\n    ", "system", "(", "\"cls\"", ");       ", "//清屏", "\n    people peopleI[", "100", "]; ", "//建立结构体 数组", "\n    ", "int", " sign = ", "0", ", i = ", "1", ",test;\n    ", "int", " p;\n    ", "char", " IDnumber[", "20", "];\n    FILE *fp = ", "NULL", ";               ", "//文件指针", "\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"r\"", "); ", "//以读写的方式打开文件", "\n    ", "if", " (fp == ", "NULL", ")                ", "// 错误检测", "\n    {\n        ", "printf", "(", "\"文件打开失败！请先添加用户信息！\\n\"", ");\n        ", "return", ";\n        ", "//    exit(0);", "\n    }\n    ", "printf", "(", "\"请输入要查询的学号：\"", ");\n    ", "scanf", "(", "\"%s\"", ", IDnumber);\n    ", "while", " (!", "feof", "(fp)) ", "//从文件中读取", "\n    {\n        ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n        i++; ", "//记录行的个数", "\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    i--;\n    test = i; ", "//保存 数据的行数", "\n    ", "for", " (; i >= ", "0", "; i--)\n    {\n        ", "//比较 输入的学号  和文件中的学号", "\n        p = ", "strcmp", "(IDnumber, peopleI[i].IDnumber);\n        ", "if", " (p == ", "0", ")\n        {\n            sign = ", "1", "; ", "//判断 赋值1  代表找到 该数据", "\n            ", "printf", "(", "\"姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            ", "printf", "(", "\"\\n\"", ");\n            ", "fclose", "(fp); ", "//关闭文件", "\n        }\n        ", "else", "\n        {\n            ", "fclose", "(fp);\n        }\n    }\n    ", "if", " (sign == ", "0", ")\n    {\n        ", "printf", "(", "\"没找到该学生信息！\\n请按任意键继续....\"", ");\n        ", "getchar", "();\n    }\n}\n", "void", " ", "OLD_findByName", "()", "\n", "//    先将硬盘文件中数据 保存到 内存缓冲区中，找到要用户信息，修改后 重新写入文档", "\n", "{\n    ", "system", "(", "\"cls\"", ");       ", "//清屏", "\n    people peopleI[", "100", "]; ", "//建立结构体 数组", "\n    ", "int", "  sign = ", "0", ", i = ", "1", ", test;\n    ", "int", " p;\n    ", "char", " name[", "10", "];\n    FILE *fp = ", "NULL", ";               ", "//文件指针", "\n    ", "void", " ", "UI_show6", "()", ";               ", "// UI调用", "\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"r\"", "); ", "//以读写的方式打开文件", "\n    ", "if", " (fp == ", "NULL", ")                ", "// 错误检测", "\n    {\n        ", "printf", "(", "\"文件打开失败！请先添加用户信息！\\n\"", ");\n        ", "return", ";\n        ", "//    exit(0);", "\n    }\n    ", "printf", "(", "\"请输入要查询的姓名：\"", ");\n    ", "scanf", "(", "\"%s\"", ", name);\n    ", "while", " (!", "feof", "(fp)) ", "//从文件中读取", "\n    {\n        ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n        i++; ", "//记录行的个数", "\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    i--;\n    test = i; ", "//保存 数据的行数", "\n    ", "for", " (; i >= ", "0", "; i--)\n    {\n        ", "//比较 输入的姓名  和文件中的姓名", "\n        p = ", "strcmp", "(name, peopleI[i].name);\n        ", "if", " (p == ", "0", ")\n        {\n            sign = ", "1", "; ", "//判断 赋值1  代表找到 该数据", "\n            ", "printf", "(", "\"姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n            ", "printf", "(", "\"\\n\"", ");\n            ", "fclose", "(fp); ", "//关闭文件", "\n        }\n        ", "else", " ", "//假如meiyou信息  再次写入文件", "\n        {\n            ", "fclose", "(fp);\n        }\n    }\n    ", "if", " (sign == ", "0", ")\n    {\n        ", "printf", "(", "\"没找到该学生信息！\\n请按任意键继续....\"", ");\n        ", "getchar", "();\n    }\n}\n", "int", " ", "NEW_oj", "()", " ", "//判断文件是否是空", "\n", "{\n    FILE *fp;\n\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\" r\"", ");\n    ", "if", " (fp == ", "NULL", ")\n    {\n        fp = ", "fopen", "(", "\"output.txt\"", ", ", "\" w\"", ");\n    }\n\n    ", "if", " (", "fgetc", "(fp) == EOF)\n    {\n        ", "fclose", "(fp);\n        ", "return", " ", "0", ";\n    }\n    ", "else", "\n    {\n        ", "return", " ", "1", ";\n        ", "fclose", "(fp);\n    }\n}\n", "void", " ", "SORT_stu", "()", " ", "//排序", "\n", "{\n    ", "system", "(", "\"cls\"", ");       ", "//清屏", "\n    people peopleI[", "100", "]; ", "//建立结构体 数组", "\n    ", "int", " i = ", "1", ", test, j;\n    FILE *fp = ", "NULL", ";               ", "//文件指针", "\n    ", "void", " ", "UI_show7", "()", ";               ", "// UI调用", "\n    fp = ", "fopen", "(", "\"output.txt\"", ", ", "\"r\"", "); ", "//以读写的方式打开文件", "\n    ", "if", " (fp == ", "NULL", ")                ", "// 错误检测", "\n    {\n        ", "printf", "(", "\"文件打开失败！请先添加用户信息！\\n\"", ");\n        ", "return", ";\n        ", "//    exit(0);", "\n    }\n    ", "while", " (!", "feof", "(fp)) ", "//从文件中读取", "\n    {\n        ", "fscanf", "(fp, ", "\"%s %s %s %s %s %s %s %s %d\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, &peopleI[i].classNum);\n        i++; ", "//记录行的个数", "\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    i--;\n    test = i; ", "//保存 数据的行数", "\n    ", "for", " (i = ", "0", "; i < test; i++)\n    {\n        ", "for", " (j = i + ", "1", "; j < test; j++)\n        {\n            ", "if", " (peopleI[i].name > peopleI[j].name)\n            {\n                jh = peopleI[i];\n                peopleI[i] = peopleI[j];\n                peopleI[j] = jh;\n            }\n        }\n    }\n    ", "for", " (i = ", "0", "; i < test; i++)\n        ", "printf", "(", "\"姓名%s,性别%s,学号%s,联系电话%s,固定电话%s,电子邮箱%s,qq%s,寝室%s,班级%d\\n\"", ", peopleI[i].name, peopleI[i].sex, peopleI[i].IDnumber, peopleI[i].phone, peopleI[i].gdphone, peopleI[i].email, peopleI[i].qq, peopleI[i].roomID, peopleI[i].classNum);\n}\n", "void", " ", "UI_show1", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在添加通讯录学生信息，请根据提示输入信息。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show2", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在修改通讯录学生信息，请根据提示输入信息。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show3", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在删除通讯录学生信息，请根据提示输入信息。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show4", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在使用通讯录查询功能，请根据提示输入信息。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show5", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在使用按学号查找功能。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show6", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在使用按姓名查找功能。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "void", " ", "UI_show7", "()", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "15", "; i++)\n    {\n        ", "printf", "(", "\" \"", ");\n    }\n    ", "printf", "(", "\"你正在使用按姓名排序功能。\\n\"", ");\n    ", "for", " (i = ", "0", "; i < ", "75", "; i++) ", "//数字  控制 上方 = 数量", "\n    {\n        ", "printf", "(", "\"*\"", ");\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " pan, p;\n    ", "while", " (", "1", ")\n    {\n        p = ", "NEW_oj", "(); ", "//判断用户文件是否为空", "\n        ", "if", " (p == ", "0", ")\n        {\n            ", "printf", "(", "\"\\n\\n查询文件中未存在学生信息，请先进行信息录入！！!\"", ");\n            ", "printf", "(", "\"\\n请按回车键，进入信息添加系统.....\"", ");\n            ", "getchar", "();\n            ", "NEW_in", "();\n        }\n        ", "system", "(", "\"cls\"", "); ", "//清屏", "\n        ", "UI_show", "();     ", "//调用 界面UI 显示", "\n        ", "scanf", "(", "\"%d\"", ", &pan);\n        ", "switch", " (pan)\n        {\n        ", "case", " ", "1", ":\n            ", "NEW_in", "();\n            ", "break", "; ", "//通讯录学生信息添加", "\n        ", "case", " ", "2", ":\n            ", "OLD_adjust", "();\n            ", "break", "; ", "//通讯录学生信息修改", "\n        ", "case", " ", "3", ":\n            ", "OLD_delete", "();\n            ", "break", "; ", "//通讯录学生信息删除", "\n        ", "case", " ", "4", ":\n            ", "OLD_find", "();\n            ", "break", "; ", "//查询通讯录学生信息", "\n        ", "case", " ", "5", ":\n            ", "SORT_stu", "();\n            ", "break", "; ", "//通讯录学生按姓名排序", "\n        ", "case", " ", "6", ":\n            ", "exit", "(", "0", ");\n            ", "break", "; ", "//退出系统", "\n        ", "default", ":\n            ", "printf", "(", "\"\\n\\t\\t\\t输入错误! 按回车键返回重新选择\"", "); ", "//按键错误反馈", "\n        }\n        _getch();\n        ", "system", "(", "\"cls\"", "); ", "//清屏", "\n    }\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "SOA并不是意味着要把所有的内容作服务化，需要根据实际的情况（访问量、发布的频繁程度、系统的复杂程度、开发人员的数量、可靠性的需求约束等）决定如何进行拆分：\r\n\r\n对于问题1：之前采用过一个做法就是将页面的框架部分单独做成一个Jar包，其他War包引入进来，框架部分做成可以配置的（比如头部和尾部风格变更了，直接修改数据库就可以搞定），不是非常理想，但是解决一般性的不是很复杂的问题足够了；\r\n\r\n对于问题2：采用远程访问（dubbo）的方式还是本地API（依赖的内容做成一个Jar包引用起来）各有优缺点：\r\n    。远程：服务之间发布独立、降低Jar包冲突的可能性、管理起来相对复杂；\r\n    。本地API：部署简单、管理容易、Jar包冲突可能性较高、服务之间独立性稍差；\r\n\r\n   一般来说是二者结合的：比如Util之类的包一般是API方式的，而底层系统以独立部署的居多\r\n\r\n最后：按照6个开发人员的规模，以及应用的场景，建议独立部署的服务控制在12个以内。", "Konwledge_Point": "模块化开发", "Question": ["采用SOA后，各个系统如何实现共用部分组件，如头部、底部", ["\n", "       公司的内部办公系统进行了服务化改造，基于阿里的dubbo，最终整套系统运行时包含好多子系统，tomcat之间实现了session共享，通过nginx实现反向代理，使用户看起来还是一个系统。", "\n", " ", "\n", "现在有几个问题一直困惑我：", "\n", "1、", "多个子系统中其实有部分内容是相同的", "\n", "    1.1 ", "典型的就是头部和底部，现在是通过ajax请求来实现，但是这样的用户体验非常不好。", "\n", "    1.2", " 原先在一个系统中可以通过include等方式实现页面的复用，很容易实现如所有页面都要包含一段html的需求。", "\n", "2、", "现在按照一个个业务模块进行的划分，包括基础服务，业务服务，项目非常多，服务关系的管理及部署维护的问题也出来了。个人觉得作为一个公司内部的办公系统，其实只要把诸如邮件，消息，文件，索引，权限等进行服务化，为更高层的业务服务即可，还没到需要把所有的进行拆分。", "\n", "3、", "公司现在有多个子公司，都需要部署OA，所以又要进行改造，以支持多企业，按照目前的情况来说，如果不解决以上问题，继续进行下去失败的风险很高。", "\n", " ", "\n", "注：开发人员不多就6个。", "\n", " ", "\n", "对于以上问题，希望各位给点意见建议，", "谢谢", "！", "\n", " ", "\n"]], "Tag": "程序设计"}
{"Answer": "联系扣扣：973624194", "Konwledge_Point": "模块化开发", "Question": ["软件测试技术--付款找零问题", ["    求助大神，小弟的期末作业。因为平时没怎么去上课，加上期末其他各科也要交作品，没时间再去学了。\n    拜托拜托！！(^人^)\n", "\n\n", "#        要求：", "\n\n", "付款找零问题\n假设商店货品价格(R) 都不大于100元（且为整数），若顾客付款(P)在100元内，现有一个程序能在每位顾客付款后给出找零钱的最佳组合（找给顾客货币张数最少）。 假定此商店的货币面值只包括：50元(N50)、10元(N10)、 5元(N5)、1元(N1) 四种。\n", "\n\n", "一.程序设计采用结构化和面向对象的程序设计思想（10分）", "\n\n", "二.采用黑盒测试技术设计测试用例（25分）", "\n\n", "1．    边界值测试", "\n\n", "（1） 边界值分析", "\n\n", "（2） 边界值测试用例表", "\n\n", "2．    等价类测试", "\n\n", "（1） 等价类划分分析", "\n\n", "（2） 等价类测试用例表", "\n\n", "3．    基于决策表的测试", "\n\n", "（1） 决策表测试分析", "\n\n", "（2） 基于决策表的测试用例表", "\n\n", "三.采用白盒测试技术设计测试用例（25分）", "\n\n", "1．    静态白盒测试", "\n\n", "2．    对判断的测试", "\n\n", "（1） 在六种选取1种判定测试覆盖指标进行分析", "\n\n", "（2） 测试用例表", "\n\n", "3．    对路径的测试", "\n\n", "（1） 程序图", "\n\n", "（2） 环复杂度", "\n\n", "（3） 独立路径的抽取", "\n\n", "（4） 不可行路径的处理", "\n\n", "（5） 测试用例表", "\n\n", "4．    对循环的测试", "\n\n", "5．    对变量的测试", "\n\n", "四.单元测试（20分）", "\n\n", "1.驱动模块与桩模块的开发", "\n\n", "（1）读入一批测试用例，对每个测试用例能够读入基本信息并显示出来", "\n\n", "（2）利用测试用例来驱动（调用）被测试函数", "\n\n", "（3）显示测试用例的实际输出并能与预期输出进行比较，给出判定结果", "\n\n", "## 需要符合书上的要求", "\n\n", "大概这样：", "\n3.  黑盒测试技术测试用例设计", "\n(1) 边界值测试", "\n           Ⅰ.边界值分析: 基本思想：使用输入的最小值，略高于最小值，正常值，略低于最大值，最大值；所以R,P的边界值为0,1,2,50,99,100,101,", "\n           Ⅱ.边界值测试用例表:测试用例数：3*4+1=13个", "\n测试用例编号  输入数据    预期输出    测试结果", "\n\n", "                  R P       \nNO.1               0    100     Beyond 1-100        Beyond 1-100\n\n······\n\nNO.13             100   101   Beyond 1-100      Beyond 1-100\n", "\n\n", "#    我写了代码", "\n\n", "    int R, P, N;\n    Scanner input = new Scanner(System.in);\n    System.out.println(\"Please input Price & Pay:\");\n    String a = input.next();\n    String b = input.next();\n    // 判断输入是否数字\n    if (a.matches(\"\\\\d+\") && b.matches(\"\\\\d+\")) {\n        R = Integer.parseInt(a);\n        P = Integer.parseInt(b);\n        //判断是否在输入范围\n        if(R>0&&R<=100&&P>0&&P<=100){\n            int Num50,Num10,Num5,Num1;\n            N=P-R;\n            if(N>=0){\n                Num50=N/50;\n                N=N-50*Num50;\n                Num10=N/10;\n                N=N-10*Num10;\n                Num5=N/5;\n                N=N-5*Num5;\n                Num1=N;\n                if(Num50==0 && Num10==0 && Num5==0 && Num1==0){\n                    System.out.println(\"No Change\");\n                }else{\n                    System.out.println(\"Change￥50：sheets \"+Num50);\n                    System.out.println(\"Change￥10：sheets \"+Num10);\n                    System.out.println(\"Change￥05：sheets \"+Num5);\n                    System.out.println(\"Change￥01：sheets \"+Num1);\n                    }\n            }else{\n                System.out.println(\"Pay isn't enough!\");\n            }\n        }else{\n            System.out.println(\"Beyond 1-100\");\n        }\n    } else {\n        System.out.println(\"Confirm integer!\");\n    }\n}\n", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "我猜是大小写\r\n   elif event.key==pygame.K_DOWN:\r\n        ship.moving_BOTTOM=True\r\n    elif event.key==pygame.K_UP:\r\n        ship.moving_TOP=True\r\n\t\t\t\t\r\n\t\t\t\tif event.key==pygame.K_DOWN:\r\n        ship.moving_bottom=False\r\n    if event.key==pygame.K_UP:\r\n        ship.moving_top=False\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   if self.moving_right and self.rect.right&lt;self.screen_rect.right:\r\n            self.centerx+=self.ai_settings.ship_speed_factor\r\n        if self.moving_left and self.rect.left&gt;0:\r\n            self.centerx-=self.ai_settings.ship_speed_factor\r\n        if self.moving_top and self.rect.top&lt;self.screen_rect.top:\r\n            self.centery-=self.ai_settings.ship_speed_factor\r\n        if self.moving_bottom and self.rect.bottom&gt;0:\r\n            self.centery+=self.ai_settings.ship_speed_factor", "Konwledge_Point": "模块化开发", "Question": ["求大佬指点！请问python从入门到实践飞船游戏中怎么使飞船上下移动啊？运行时可以左右移动就是不能上下移动。。。", ["ship.py", "\n\n", "import pygame\nclass Ship():\n    def __init__(self,ai_settings,screen):\n        '''初始化飞船'''\n        self.screen=screen\n        self.ai_settings=ai_settings\n\n        #加载飞船\n        self.image=pygame.image.load('images/ship.png')\n        self.rect=self.image.get_rect()#rect表示矩形对象，此处获取了飞船的外接矩形\n        self.screen_rect=screen.get_rect()\n\n        #飞船放中央\n        self.rect.centerx=self.screen_rect.centerx\n        #center,centerx,centery分别表示放在x和y,x,y中央\n        self.rect.centery=self.screen_rect.centery\n\n        #在飞船的属性center中储存小数值\n        self.centerx=float(self.rect.centerx)\n        self.centery=float(self.rect.centery)\n\n        self.moving_right=False\n        self.moving_left=False\n        self.moving_top=False\n        self.moving_bottom=False\n\n    def update(self):\n        \"\"\"根据移动标志调整飞船位置\"\"\"\n\n        #更新飞船的center值，而不是rect\n        if self.moving_right and self.rect.right<self.screen_rect.right:\n            self.centerx+=self.ai_settings.ship_speed_factor\n        if self.moving_left and self.rect.left>0:\n            self.centerx-=self.ai_settings.ship_speed_factor\n        if self.moving_top and self.rect.top<self.screen_rect.top:\n            self.centery-=self.ai_settings.ship_speed_factor\n        if self.moving_bottom and self.rect.bottom>0:\n            self.centery+=self.ai_settings.ship_speed_factor\n\n        #根据self.center更新rect\n        self.rect.centerx=self.centerx\n        self.rect.centery=self.centery\n    def blitme(self):\n        \"\"\"指定位置放飞船\"\"\"\n        self.screen.blit(self.image,self.rect)#绘制这艘船\n", "\n\n", "alien_invasion.py", "\n\n", "import pygame#开发游戏所需功能\n\nfrom settings import Settings\nfrom ship import Ship\nimport game_functions as gf\n\ndef run_game():\n    pygame.init()#初始化背景设置\n    ai_settings=Settings()\n    screen=pygame.display.set_mode(#创建显示窗口\n            (ai_settings.screen_width,ai_settings.screen_height))\n    screen=pygame.display.set_mode((1200,700))#指定游戏尺寸宽和高\n    pygame.display.set_caption(\"Alien Invasion\")\n\n    ship=Ship(ai_settings,screen)\n\n    while True:#检测是否正常运行\n        gf.check_events(ship)\n        ship.update()#飞船位置更新\n        gf.update_screen(ai_settings,screen,ship)\n\n\nrun_game()#初始化游戏并开始循环\n", "\n\n", "game_functions.py", "\n\n", "import sys\n\nimport pygame\n\ndef check_keydown_events(event,ship):\n    \"\"\"响应按键\"\"\"\n    if event.key==pygame.K_RIGHT:#按了右键\n        ship.moving_right=True\n    elif event.key==pygame.K_LEFT:\n        ship.moving_left=True\n    elif event.key==pygame.K_DOWN:\n        ship.moving_BOTTOM=True\n    elif event.key==pygame.K_UP:\n        ship.moving_TOP=True\ndef check_keyup_events(event,ship):\n    \"\"\"响应松开\"\"\"\n    if event.key==pygame.K_RIGHT:\n        ship.moving_right=False\n    if event.key==pygame.K_LEFT:\n        ship.moving_left=False\n    if event.key==pygame.K_DOWN:\n        ship.moving_bottom=False\n    if event.key==pygame.K_UP:\n        ship.moving_top=False\n\ndef check_events(ship):\n    \"相应鼠标按键和事件\"\n    for event in pygame.event.get():\n        if event.type==pygame.QUIT:\n            sys.exit()#退出游戏模块\n        elif event.type==pygame.KEYDOWN:#检测到按了键\n            check_keydown_events(event,ship)\n        elif event.type==pygame.KEYUP:#松开按键\n            check_keyup_events(event,ship)                  \n\ndef update_screen(ai_settings,screen,ship):\n    #重绘屏幕\n    screen.fill(ai_settings.bg_color)\n    ship.blitme()\n\n    #让屏幕可见\n    pygame.display.flip()\n\n", "\n\n", "settings.py", "\n\n", "class Settings():\n    \"储存类\"\n    def __init__(self):\n        \"\"\"初始化游戏设置\"\"\"\n        #屏幕设置\n        self.screen_width=1200\n        self.screen_height=700\n        self.bg_color=(230,230,230)#设置背景色，RGB颜色定义\n        self.ship_speed_factor=0.5\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/21082334182615.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;只保留一个 请采纳&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["windows7运行若依框架启动时报错，求解决，急~~", [" Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationTokenFilter': Unsatisfied dependency expressed through field 'tokenService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tokenService': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'token.header' in value \"${token.header}\"", "\n", "这是application.yml文件内容：", "\n", "# 项目相关配置", "\n", "ruoyi:", "\n  ", "# 名称", "\n  ", "name:", " ", "RuoYi", "\n  ", "# 版本", "\n  ", "version:", " ", "3.6", ".0", "\n  ", "# 版权年份", "\n  ", "copyrightYear:", " ", "2021", "\n  ", "# 实例演示开关", "\n  ", "demoEnabled:", " ", "true", "\n  ", "# 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）", "\n  ", "profile:", " ", "D:/ruoyi/uploadPath", "\n  ", "# 获取ip地址开关", "\n  ", "addressEnabled:", " ", "false", "\n  ", "# 验证码类型 math 数组计算 char 字符验证", "\n  ", "captchaType:", " ", "math", "\n\n", "# 开发环境配置", "\n", "server:", "\n  ", "# 服务器的HTTP端口，默认为8080", "\n  ", "port:", " ", "80", "\n  ", "servlet:", "\n    ", "# 应用的访问路径", "\n    ", "context-path:", " ", "/", "\n  ", "tomcat:", "\n    ", "# tomcat的URI编码", "\n    ", "uri-encoding:", " ", "UTF-8", "\n    ", "# tomcat最大线程数，默认为200", "\n    ", "max-threads:", " ", "800", "\n    ", "# Tomcat启动初始化的线程数，默认值25", "\n    ", "min-spare-threads:", " ", "30", "\n\n", "# 日志配置", "\n", "logging:", "\n  ", "level:", "\n    ", "com.ruoyi:", " ", "debug", "\n    ", "org.springframework:", " ", "warn", "\n\n", "# Spring配置", "\n", "spring:", "\n  ", "# 资源信息", "\n  ", "messages:", "\n    ", "# 国际化资源文件路径", "\n    ", "basename:", " ", "i18n/messages", "\n  ", "profiles:", " \n    ", "active:", " ", "druid", "\n  ", "# 文件上传", "\n  ", "servlet:", "\n     ", "multipart:", "\n       ", "# 单个文件大小", "\n       ", "max-file-size:", "  ", "10MB", "\n       ", "# 设置总上传的文件大小", "\n       ", "max-request-size:", "  ", "20MB", "\n  ", "# 服务模块", "\n  ", "devtools:", "\n    ", "restart:", "\n      ", "# 热部署开关", "\n      ", "enabled:", " ", "true", "\n  ", "# redis 配置", "\n  ", "redis:", "\n    ", "# 地址", "\n    ", "host:", " ", "localhost", "\n    ", "# 端口，默认为6379", "\n    ", "port:", " ", "6379", "\n    ", "# 数据库索引", "\n    ", "database:", " ", "0", "\n    ", "# 密码", "\n    ", "password:", " \n    ", "# 连接超时时间", "\n    ", "timeout:", " ", "10s", "\n    ", "lettuce:", "\n      ", "pool:", "\n        ", "# 连接池中的最小空闲连接", "\n        ", "min-idle:", " ", "0", "\n        ", "# 连接池中的最大空闲连接", "\n        ", "max-idle:", " ", "8", "\n        ", "# 连接池的最大数据库连接数", "\n        ", "max-active:", " ", "8", "\n        ", "# #连接池最大阻塞等待时间（使用负值表示没有限制）", "\n        ", "max-wait:", " ", "-1ms", "\n\n", "# token配置", "\n", "token:", "\n    ", "# 令牌自定义标识", "\n    ", "header:", " ", "Authorization", "\n    ", "# 令牌密钥", "\n    ", "secret:", " ", "abcdefghijklmnopqrstuvwxyz", "\n    ", "# 令牌有效期（默认30分钟）", "\n    ", "expireTime:", " ", "30", "\n  \n", "# MyBatis配置", "\n", "mybatis:", "\n    ", "# 搜索指定包别名", "\n    ", "typeAliasesPackage:", " ", "com.ruoyi.**.domain", "\n    ", "# 配置mapper的扫描，找到所有的mapper.xml映射文件", "\n    ", "mapperLocations:", " ", "classpath*:mapper/**/*Mapper.xml", "\n    ", "# 加载全局的配置文件", "\n    ", "configLocation:", " ", "classpath:mybatis/mybatis-config.xml", "\n\n", "# PageHelper分页插件", "\n", "pagehelper:", " \n  ", "helperDialect:", " ", "mysql", "\n  ", "supportMethodsArguments:", " ", "true", "\n  ", "params:", " ", "count=countSql", " \n\n", "# Swagger配置", "\n", "swagger:", "\n  ", "# 是否开启swagger", "\n  ", "enabled:", " ", "true", "\n  ", "# 请求前缀", "\n  ", "pathMapping:", " ", "/dev-api", "\n\n", "# 防止XSS攻击", "\n", "xss:", " \n  ", "# 过滤开关", "\n  ", "enabled:", " ", "true", "\n  ", "# 排除链接（多个用逗号分隔）", "\n  ", "excludes:", " ", "/system/notice", "\n  ", "# 匹配链接", "\n  ", "urlPatterns:", " ", "/system/*,/monitor/*,/tool/*", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "这是application-druid.yml文件内容：", "\n", "# 数据源配置", "\n", "spring:", "\n    ", "datasource:", "\n        ", "type:", " ", "com.alibaba.druid.pool.DruidDataSource", "\n        ", "driverClassName:", " ", "com.mysql.cj.jdbc.Driver", "\n        ", "druid:", "\n            ", "# 主库数据源", "\n            ", "master:", "\n                ", "url:", " ", "jdbc:mysql://localhost:3306/ry?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8", "\n                ", "username:", " ", "root", "\n                ", "password:", " ", "000000", "\n            ", "# 从库数据源", "\n            ", "slave:", "\n                ", "# 从数据源开关/默认关闭", "\n                ", "enabled:", " ", "false", "\n                ", "url:", " \n                ", "username:", " \n                ", "password:", " \n            ", "# 初始连接数", "\n            ", "initialSize:", " ", "5", "\n            ", "# 最小连接池数量", "\n            ", "minIdle:", " ", "10", "\n            ", "# 最大连接池数量", "\n            ", "maxActive:", " ", "20", "\n            ", "# 配置获取连接等待超时的时间", "\n            ", "maxWait:", " ", "60000", "\n            ", "# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒", "\n            ", "timeBetweenEvictionRunsMillis:", " ", "60000", "\n            ", "# 配置一个连接在池中最小生存的时间，单位是毫秒", "\n            ", "minEvictableIdleTimeMillis:", " ", "300000", "\n            ", "# 配置一个连接在池中最大生存的时间，单位是毫秒", "\n            ", "maxEvictableIdleTimeMillis:", " ", "900000", "\n            ", "# 配置检测连接是否有效", "\n            ", "validationQuery:", " ", "SELECT", " ", "1", " ", "FROM", " ", "DUAL", "\n            ", "testWhileIdle:", " ", "true", "\n            ", "testOnBorrow:", " ", "false", "\n            ", "testOnReturn:", " ", "false", "\n            ", "webStatFilter:", " \n                ", "enabled:", " ", "true", "\n            ", "statViewServlet:", "\n                ", "enabled:", " ", "true", "\n                ", "# 设置白名单，不填则允许所有访问", "\n                ", "allow:", "\n                ", "url-pattern:", " ", "/druid/*", "\n                ", "# 控制台管理用户名和密码", "\n                ", "login-username:", " ", "ruoyi", "\n                ", "login-password:", " ", "123456", "\n            ", "filter:", "\n                ", "stat:", "\n                    ", "enabled:", " ", "true", "\n                    ", "# 慢SQL记录", "\n                    ", "log-slow-sql:", " ", "true", "\n                    ", "slow-sql-millis:", " ", "1000", "\n                    ", "merge-sql:", " ", "true", "\n                ", "wall:", "\n                    ", "config:", "\n                        ", "multi-statement-allow:", " ", "true", "\n\n\n", "\n", "但是target里面都是class没有yml，这是target里面的文件：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;除了索引elif的缩进外&amp;#xff0c;看下120行的break&amp;#xff0c;看下这里你是想跳出的是哪一个循环&amp;#xff0c;原本的位置的是内层for循环执行完之后直接跳出while循环&amp;#xff0c;那while循环就没有必有了。&lt;br /&gt;elif应该对应的是if xz_1 &amp;#61;&amp;#61; &amp;#34;开始游戏&amp;#34;:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;elif xz_1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;游戏说明&amp;#34;&lt;/span&gt;:\n            ts_2 &amp;#61; pyautogui.alert(text&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;正在加班开发中......&amp;#34;&lt;/span&gt;,title&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;警告&amp;#34;&lt;/span&gt;,button&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;好的&amp;#34;&lt;/span&gt;)\n            print(ts_2)\n        elif xz_1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;关于我们&amp;#34;&lt;/span&gt;:\n            ts_3 &amp;#61; pyautogui.alert(text&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;正在加班开发中......&amp;#34;&lt;/span&gt;,title&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;警告&amp;#34;&lt;/span&gt;,button&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;好的&amp;#34;&lt;/span&gt;)\n            print(ts_3)\n        elif xz_1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;退出程序&amp;#34;&lt;/span&gt;:\n            tc1(&lt;span class=\"hljs-string\"&gt;&amp;#34;您确定要退出程序吗&amp;#xff1f;&amp;#34;&lt;/span&gt;)\n        elif xz_1 &amp;#61;&amp;#61; None:\n            sys.&lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这一段缩进全部往前一段&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["pythonfor循环的缩进错误", ["源程序：", "\n", "\n", "#导入各项模块", "\n", "import", " pygame\n", "import", " sys\n", "import", " easygui\n", "import", " random\n", "import", " pyautogui\n\n", "#初始化各项模块", "\npygame.init()   ", "#©", "\n\n", "#定义函数", "\n", "def", " ", "tc1", "(", "x", "):\n    tc = pyautogui.prompt(text=x,title=", "\"提示框-Small Game\"", ",default=", "\"\"", ")\n    ", "print", "(tc)\n    ", "while", " ", "True", ":\n        ", "if", " tc == ", "\"确定\"", " ", "or", " tc == ", "\"是\"", ":\n            pyautogui.alert(text=", "'期待您的下次游玩'", ", title=", "'再见'", ")\n            sys.exit()\n        ", "elif", " tc == ", "\"不确定\"", " ", "or", " tc == ", "\"不退出\"", ":\n            ", "break", "\n        ", "elif", " tc == ", "\"\"", ":\n            ", "break", "\n        ", "else", ":\n            pyautogui.alert(text=", "\"我不了解您的意思，请重新输入\"", ",title=", "\"提示框-Small Game\"", ")\n            easygui.msgbox(", "\"我不了解您的意思，请重新输入\"", ")\n            tc = pyautogui.prompt(text=x,title=", "\"提示框-Small Game\"", ",default=", "\"\"", ")\n            ", "print", "(tc)\n", "def", " ", "b", "(", "x,y", "):\n    screen.blit(x,y)\n    pygame.display.flip()\n\n", "#导入各项素材", "\nbz_1 = pygame.image.load(", "\"bz_1.png\"", ")     ", "#5120*2880", "\nbz_2 = pygame.image.load(", "\"bz_2.png\"", ")     ", "#5120*2880", "\nbz_3 = pygame.image.load(", "\"bz_3.png\"", ")     ", "#5120*2880", "\nbz_4 = pygame.image.load(", "\"bz_4.png\"", ")     ", "#5120*2880", "\nbz_5 = pygame.image.load(", "\"bz_5.png\"", ")     ", "#5120*2880", "\nbz_6 = pygame.image.load(", "\"bz_6.png\"", ")     ", "#5120*2880", "\nbz_7 = pygame.image.load(", "\"bz_7.png\"", ")     ", "#5120*2880", "\nbz_8 = pygame.image.load(", "\"bz_8.png\"", ")     ", "#5120*2880", "\nbz_9 = pygame.image.load(", "\"bz_9.png\"", ")     ", "#5120*2880", "\nbz_10 = pygame.image.load(", "\"bz_10.png\"", ")   ", "#5120*2880", "\nbutton = pygame.image.load(", "\"button.png\"", ") ", "#170#70", "\nbutton_csz = pygame.image.load(", "\"button_csz.png\"", ")  ", "#267*111", "\nx_1 = pygame.transform.scale(bz_1,(", "1800", ",", "980", "))\n\n", "#用户GUI", "\n", "while", " ", "True", ":\n    xz_1 = pyautogui.confirm(text=", "'请选择'", ",title=", "'小游戏-Small Game'", ",buttons=[", "'游戏说明'", ",", "'开始游戏'", ",", "'关于我们'", ",", "'退出程序'", "])\n    ", "print", "(xz_1)\n    ", "if", " xz_1 == ", "\"开始游戏\"", ":\n        screen = pygame.display.set_mode((", "1800", ",", "980", "))\n        b(x_1,(", "0", ",", "0", "))\n        b(button_csz,(", "100", ",", "100", "))\n        pygame.display.set_caption(", "\"游戏选择\"", ")\n        ", "while", " ", "True", ":\n            pygame.init()\n            ", "for", " event ", "in", " pygame.event.get(): \n                ", "if", " event.", "type", " == pygame.QUIT:\n                    pygame.quit()\n                    sys.exit()\n                ", "elif", " event.", "type", " == pygame.MOUSEBUTTONDOWN:\n                    x1 = event.pos[", "0", "]\n                    y1 = event.pos[", "1", "]\n                    ", "if", " ", "100", " <= x1 <= ", "367", " ", "and", " ", "100", " <= y1 <= ", "211", ":\n                        pygame.quit()\n                        k = easygui.enterbox(", "\"是否开始游玩《猜数字》？\"", ")\n                        ", "print", "(k)\n                        ", "if", " k == ", "\"是\"", " ", "or", " k ==", "\"开始\"", ":\n                            x = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为起始值\"", "))\n                            ", "print", "(x)\n                            y = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为结束值\"", "))\n                            ", "print", "(y)\n                            ", "while", " ", "True", ":\n                                ", "if", " x > y:\n                                    easygui.msgbox(", "\"起始值不能大于结束值\"", ")\n                                    x = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                ", "elif", " x == y:\n                                    easygui.msgbox(", "\"起始值不能等于结束值\"", ")\n                                    x = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                ", "elif", " x < ", "0", ":\n                                    easygui.msgbox(", "\"起始值不能为负数\"", ")\n                                    x = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                ", "elif", " y < ", "0", ":\n                                    easygui.msgbox(", "\"结束值不能为负数\"", ")\n                                    x = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.enterbox(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                ", "else", ":\n                                    ", "break", "\n                                ", "break", "\n                            ", "else", ":\n                                ", "break", "\n                        ", "elif", " k == ", "\"否\"", " ", "or", " k == ", "\"不开始\"", ":\n                            tc1(", "\"您确定要退出《猜数字》吗？\"", ")\n                            ", "break", "\n                        ", "elif", " k == ", "None", ":\n                            ", "pass", "\n                        ", "else", ":\n                            easygui.msgbox(", "\"我不了解您的意思，请重新输入\"", ")\n                            k = easygui.enterbox(", "\"是否开始游玩《猜数字》？\"", ")\n                            ", "print", "(k)\n                    ", "else", ":\n                        ", "pass", "\n                    ", "pass", "\n                ", "elif", " event.", "type", " == pygame.KEYDOWN:\n                    ", "if", " event.key == K_ESCAPE:\n                        sys.exit()\n            ", "break", "\n        ", "elif", " xz_1 == ", "\"游戏说明\"", ":\n            ts_2 = pyautogui.alert(text=", "\"正在加班开发中......\"", ",title=", "\"警告\"", ",button=", "\"好的\"", ")\n            ", "print", "(ts_2)\n        ", "elif", " xz_1 == ", "\"关于我们\"", ":\n            ts_3 = pyautogui.alert(text=", "\"正在加班开发中......\"", ",title=", "\"警告\"", ",button=", "\"好的\"", ")\n            ", "print", "(ts_3)\n        ", "elif", " xz_1 == ", "\"退出程序\"", ":\n            tc1(", "\"您确定要退出程序吗？\"", ")\n        ", "elif", " xz_1 == ", "None", ":\n            sys.exit()\n", "#猜数字程序", "\n", "if", " k == ", "\"是\"", " ", "or", " k ==", "\"开始\"", ":\n    xt = random.randint(x,y)\n    x1 = ", "str", "(x)\n    y1 = ", "str", "(y)\n    hd = pyautogui.prompt(text=", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", ",title=", "\"提示框-Small Game\"", ",default=", "\"请输入你的答案\"", ")\n    ", "if", " hd == ", "\"请输入你的答案\"", ":\n         hd = pyautogui.prompt(text=", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", ",title=", "\"提示框-Small Game\"", ",default=", "\"请输入你的答案\"", ")\n    ", "elif", " hd == xt:\n        pyautogui.alert(", "\"恭喜，猜对了！\"", ", title=", "\"结果\"", ")\n    ", "elif", " hd > xt:\n        pyautogui.alert(", "\"您的数字过大，请重新输入。\"", ", title=", "\"结果\"", ")\n        hd = ", "int", "(", "input", "(", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", "))\n    ", "elif", " hd < xt:\n        pyautogui.alert(", "\"您的数字过小，请重新输入。\"", ", title=", "\"结果\"", ")\n        hd = ", "int", "(", "input", "(", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", "))\n    ", "elif", " hd < x:\n        pyautogui.alert(", "\"请不要超出范围，请重新输入。\"", ", title=", "\"结果\"", ")\n        hd = ", "int", "(", "input", "(", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", "))\n    ", "elif", " hd > y:\n        pyautogui.alert(", "\"请不要超出范围，请重新输入。\"", ", title=", "\"结果\"", ")\n        hd = ", "int", "(", "input", "(", "\"请输入\"", "+x1+", "\"-\"", "+y1+", "\"的整数\"", "))\n                \n            \n", "'''sjs = random.randint(x,y)\nhd = int(input(\"请输入1-5的随机整数\"))\n\nwhile True:\n    if hd == sjs:\n        print(\"恭喜，答对了\")\n        hd2 = input(\"是否再玩一遍\")\n        if hd2 == \"是\":\n            sjs = random.randint(x,y)\n            hd = int(input(\"请输入1-5的随机整数\"))\n        elif hd2 == \"否\":\n            break\n    else:\n        if hd > sjs:\n            print(\"\")\n        print(\"你答错了\")\n        hd = int(input(\"请输入1-5的随机整数\"))'''", "\n\n\n", "\n", "问题相关代码", "\n", "\nwhile True:\n    xz_1 = pyautogui.", "confirm", "(text=", "'请选择'", ",title=", "'小游戏-Small Game'", ",buttons=[", "'游戏说明'", ",", "'开始游戏'", ",", "'关于我们'", ",", "'退出程序'", "])\n    ", "print", "(xz_1)\n    if xz_1 == ", "\"开始游戏\"", ":\n        screen = pygame.display.", "set_mode", "((", "1800", ",", "980", "))\n        ", "b", "(x_1,(", "0", ",", "0", "))\n        ", "b", "(button_csz,(", "100", ",", "100", "))\n        pygame.display.", "set_caption", "(", "\"游戏选择\"", ")\n        while True:\n            pygame.", "init", "()\n            for event in pygame.event.", "get", "(): \n                if event.type == pygame.QUIT:\n                    pygame.", "quit", "()\n                    sys.", "exit", "()\n                elif event.type == pygame.MOUSEBUTTONDOWN:\n                    x1 = event.pos[", "0", "]\n                    y1 = event.pos[", "1", "]\n                    if ", "100", " <= x1 <= ", "367", " and ", "100", " <= y1 <= ", "211", ":\n                        pygame.", "quit", "()\n                        k = easygui.", "enterbox", "(", "\"是否开始游玩《猜数字》？\"", ")\n                        ", "print", "(k)\n                        if k == ", "\"是\"", " or k ==", "\"开始\"", ":\n                            x = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为起始值\"", "))\n                            ", "print", "(x)\n                            y = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为结束值\"", "))\n                            ", "print", "(y)\n                            while True:\n                                if x > y:\n                                    easygui.", "msgbox", "(", "\"起始值不能大于结束值\"", ")\n                                    x = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                elif x == y:\n                                    easygui.", "msgbox", "(", "\"起始值不能等于结束值\"", ")\n                                    x = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                elif x < ", "0", ":\n                                    easygui.", "msgbox", "(", "\"起始值不能为负数\"", ")\n                                    x = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                elif y < ", "0", ":\n                                    easygui.", "msgbox", "(", "\"结束值不能为负数\"", ")\n                                    x = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为起始值\"", "))\n                                    ", "print", "(x)\n                                    y = ", "int", "(easygui.", "enterbox", "(", "\"请输入一个整数作为结束值\"", "))\n                                    ", "print", "(y)\n                                else:\n                                    break\n                                break\n                            else:\n                                break\n                        elif k == ", "\"否\"", " or k == ", "\"不开始\"", ":\n                            ", "tc1", "(", "\"您确定要退出《猜数字》吗？\"", ")\n                            break\n                        elif k == None:\n                            pass\n                        else:\n                            easygui.", "msgbox", "(", "\"我不了解您的意思，请重新输入\"", ")\n                            k = easygui.", "enterbox", "(", "\"是否开始游玩《猜数字》？\"", ")\n                            ", "print", "(k)\n                    else:\n                        pass\n                    pass\n                elif event.type == pygame.KEYDOWN:\n                    if event.key == K_ESCAPE:\n                        sys.", "exit", "()\n            break\n        elif xz_1 == ", "\"游戏说明\"", ":\n            ts_2 = pyautogui.", "alert", "(text=", "\"正在加班开发中......\"", ",title=", "\"警告\"", ",button=", "\"好的\"", ")\n            ", "print", "(ts_2)\n        elif xz_1 == ", "\"关于我们\"", ":\n            ts_3 = pyautogui.", "alert", "(text=", "\"正在加班开发中......\"", ",title=", "\"警告\"", ",button=", "\"好的\"", ")\n            ", "print", "(ts_3)\n        elif xz_1 == ", "\"退出程序\"", ":\n            ", "tc1", "(", "\"您确定要退出程序吗？\"", ")\n        elif xz_1 == None:\n            sys.", "exit", "()\n", "\n", "运行结果及报错内容", "\n", "Traceback (most recent ", "call", " ", "last", "):\n  File ", "\"G:\\树人\\BL.py\"", ", ", "line", " ", "120", "\n    elif xz_1 == ", "\"游戏说明\"", ":\n       ^\nSyntaxError: invalid ", "syntax", "\n\n", "\n", "大概内容就是缩进错误"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看看yml文件&amp;#xff0c;token.header是不是有&amp;#xff0c;有的话&amp;#xff0c;检查下target下面是不是yml文件也有这个配置&amp;#xff01;没有就clean一下再跑&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["windows7运行若依框架vue启动时报错", [" Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationTokenFilter': Unsatisfied dependency expressed through field 'tokenService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tokenService': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'token.header' in value \"${token.header}\"", "\n", "这是application.yml文件内容：", "\n", "# 项目相关配置", "\n", "ruoyi:", "\n  ", "# 名称", "\n  ", "name:", " ", "RuoYi", "\n  ", "# 版本", "\n  ", "version:", " ", "3.6", ".0", "\n  ", "# 版权年份", "\n  ", "copyrightYear:", " ", "2021", "\n  ", "# 实例演示开关", "\n  ", "demoEnabled:", " ", "true", "\n  ", "# 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）", "\n  ", "profile:", " ", "D:/ruoyi/uploadPath", "\n  ", "# 获取ip地址开关", "\n  ", "addressEnabled:", " ", "false", "\n  ", "# 验证码类型 math 数组计算 char 字符验证", "\n  ", "captchaType:", " ", "math", "\n\n", "# 开发环境配置", "\n", "server:", "\n  ", "# 服务器的HTTP端口，默认为8080", "\n  ", "port:", " ", "80", "\n  ", "servlet:", "\n    ", "# 应用的访问路径", "\n    ", "context-path:", " ", "/", "\n  ", "tomcat:", "\n    ", "# tomcat的URI编码", "\n    ", "uri-encoding:", " ", "UTF-8", "\n    ", "# tomcat最大线程数，默认为200", "\n    ", "max-threads:", " ", "800", "\n    ", "# Tomcat启动初始化的线程数，默认值25", "\n    ", "min-spare-threads:", " ", "30", "\n\n", "# 日志配置", "\n", "logging:", "\n  ", "level:", "\n    ", "com.ruoyi:", " ", "debug", "\n    ", "org.springframework:", " ", "warn", "\n\n", "# Spring配置", "\n", "spring:", "\n  ", "# 资源信息", "\n  ", "messages:", "\n    ", "# 国际化资源文件路径", "\n    ", "basename:", " ", "i18n/messages", "\n  ", "profiles:", " \n    ", "active:", " ", "druid", "\n  ", "# 文件上传", "\n  ", "servlet:", "\n     ", "multipart:", "\n       ", "# 单个文件大小", "\n       ", "max-file-size:", "  ", "10MB", "\n       ", "# 设置总上传的文件大小", "\n       ", "max-request-size:", "  ", "20MB", "\n  ", "# 服务模块", "\n  ", "devtools:", "\n    ", "restart:", "\n      ", "# 热部署开关", "\n      ", "enabled:", " ", "true", "\n  ", "# redis 配置", "\n  ", "redis:", "\n    ", "# 地址", "\n    ", "host:", " ", "localhost", "\n    ", "# 端口，默认为6379", "\n    ", "port:", " ", "6379", "\n    ", "# 数据库索引", "\n    ", "database:", " ", "0", "\n    ", "# 密码", "\n    ", "password:", " \n    ", "# 连接超时时间", "\n    ", "timeout:", " ", "10s", "\n    ", "lettuce:", "\n      ", "pool:", "\n        ", "# 连接池中的最小空闲连接", "\n        ", "min-idle:", " ", "0", "\n        ", "# 连接池中的最大空闲连接", "\n        ", "max-idle:", " ", "8", "\n        ", "# 连接池的最大数据库连接数", "\n        ", "max-active:", " ", "8", "\n        ", "# #连接池最大阻塞等待时间（使用负值表示没有限制）", "\n        ", "max-wait:", " ", "-1ms", "\n\n", "# token配置", "\n", "token:", "\n    ", "# 令牌自定义标识", "\n    ", "header:", " ", "Authorization", "\n    ", "# 令牌密钥", "\n    ", "secret:", " ", "abcdefghijklmnopqrstuvwxyz", "\n    ", "# 令牌有效期（默认30分钟）", "\n    ", "expireTime:", " ", "30", "\n  \n", "# MyBatis配置", "\n", "mybatis:", "\n    ", "# 搜索指定包别名", "\n    ", "typeAliasesPackage:", " ", "com.ruoyi.**.domain", "\n    ", "# 配置mapper的扫描，找到所有的mapper.xml映射文件", "\n    ", "mapperLocations:", " ", "classpath*:mapper/**/*Mapper.xml", "\n    ", "# 加载全局的配置文件", "\n    ", "configLocation:", " ", "classpath:mybatis/mybatis-config.xml", "\n\n", "# PageHelper分页插件", "\n", "pagehelper:", " \n  ", "helperDialect:", " ", "mysql", "\n  ", "supportMethodsArguments:", " ", "true", "\n  ", "params:", " ", "count=countSql", " \n\n", "# Swagger配置", "\n", "swagger:", "\n  ", "# 是否开启swagger", "\n  ", "enabled:", " ", "true", "\n  ", "# 请求前缀", "\n  ", "pathMapping:", " ", "/dev-api", "\n\n", "# 防止XSS攻击", "\n", "xss:", " \n  ", "# 过滤开关", "\n  ", "enabled:", " ", "true", "\n  ", "# 排除链接（多个用逗号分隔）", "\n  ", "excludes:", " ", "/system/notice", "\n  ", "# 匹配链接", "\n  ", "urlPatterns:", " ", "/system/*,/monitor/*,/tool/*", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "这是application-druid.yml文件内容：", "\n", "# 数据源配置", "\n", "spring:", "\n    ", "datasource:", "\n        ", "type:", " ", "com.alibaba.druid.pool.DruidDataSource", "\n        ", "driverClassName:", " ", "com.mysql.cj.jdbc.Driver", "\n        ", "druid:", "\n            ", "# 主库数据源", "\n            ", "master:", "\n                ", "url:", " ", "jdbc:mysql://localhost:3306/ry?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8", "\n                ", "username:", " ", "root", "\n                ", "password:", " ", "000000", "\n            ", "# 从库数据源", "\n            ", "slave:", "\n                ", "# 从数据源开关/默认关闭", "\n                ", "enabled:", " ", "false", "\n                ", "url:", " \n                ", "username:", " \n                ", "password:", " \n            ", "# 初始连接数", "\n            ", "initialSize:", " ", "5", "\n            ", "# 最小连接池数量", "\n            ", "minIdle:", " ", "10", "\n            ", "# 最大连接池数量", "\n            ", "maxActive:", " ", "20", "\n            ", "# 配置获取连接等待超时的时间", "\n            ", "maxWait:", " ", "60000", "\n            ", "# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒", "\n            ", "timeBetweenEvictionRunsMillis:", " ", "60000", "\n            ", "# 配置一个连接在池中最小生存的时间，单位是毫秒", "\n            ", "minEvictableIdleTimeMillis:", " ", "300000", "\n            ", "# 配置一个连接在池中最大生存的时间，单位是毫秒", "\n            ", "maxEvictableIdleTimeMillis:", " ", "900000", "\n            ", "# 配置检测连接是否有效", "\n            ", "validationQuery:", " ", "SELECT", " ", "1", " ", "FROM", " ", "DUAL", "\n            ", "testWhileIdle:", " ", "true", "\n            ", "testOnBorrow:", " ", "false", "\n            ", "testOnReturn:", " ", "false", "\n            ", "webStatFilter:", " \n                ", "enabled:", " ", "true", "\n            ", "statViewServlet:", "\n                ", "enabled:", " ", "true", "\n                ", "# 设置白名单，不填则允许所有访问", "\n                ", "allow:", "\n                ", "url-pattern:", " ", "/druid/*", "\n                ", "# 控制台管理用户名和密码", "\n                ", "login-username:", " ", "ruoyi", "\n                ", "login-password:", " ", "123456", "\n            ", "filter:", "\n                ", "stat:", "\n                    ", "enabled:", " ", "true", "\n                    ", "# 慢SQL记录", "\n                    ", "log-slow-sql:", " ", "true", "\n                    ", "slow-sql-millis:", " ", "1000", "\n                    ", "merge-sql:", " ", "true", "\n                ", "wall:", "\n                    ", "config:", "\n                        ", "multi-statement-allow:", " ", "true", "\n\n\n", "\n", "但是target里面都是class没有yml，这是target里面的文件：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;程序逻辑问题&lt;br /&gt;或者&lt;br /&gt;电源供电不足问题&lt;/p&gt;\n&lt;p&gt;建议了解一下“有限状态自动机”&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["最近在用单片机做毕设，又遇到了一个难题", ["最近在做毕设，又遇到了很多问题不懂为什么。", "p20-p24是语音模块的io口，对地触发播放语音。我按下按键P12后，灯P11亮起来。只要语音模块一触发灯就灭了，如果不加语音模块就很正常", "\n", "#", "include", " ", "\"STC15.h\"", "\n", "#", "include", " ", "\"STC15F2K60S2.h\"", " ", "\n", "#", "include", "<reg52.h>", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<intrins.h>", "\n", "#", "define", " uchar unsigned char ", "\n", "#", "define", " uint unsigned int", "\nsbit Trig=P0^", "6", ";        ", "//控制端 ", "\nsbit Echo=P0^", "5", ";      ", "//接收端", "\nsbit Beep=P1^", "7", ";      ", "//单片机开发板上的蜂鸣器", "\n\n\nP1M0 = ", "0x00", ";\nP1M1 = ", "0xFF", ";\n\nsbit p00=P0^", "0", ";\nsbit p01=P0^", "1", ";\nsbit p02=P0^", "2", ";\nsbit p03=P0^", "3", ";\nsbit p07=P0^", "7", ";", "//灯", "\n\nsbit p10=P1^", "0", ";", "//BUZZ", "\n\n\nsbit p11=P1^", "1", ";", "//灯", "\nsbit p12=P1^", "2", ";", "//开关", "\n\n\n\nsbit p20=P2^", "0", ";", "//语音：左方有障碍物", "\nsbit p21=P2^", "1", ";", "//语音：右方有障碍物", "\nsbit p22=P2^", "2", ";", "//语音：前方有障碍物", "\nsbit p23=P2^", "3", ";", "//语音：警示灯已打开", "\nsbit p24=P2^", "4", ";", "//语音：警示灯已关闭", "\n\n\n", "void", " ", "delay_ms", "(uchar xms)", ";\n\n", "unsigned", " ", "char", " T0RH=", "0", ";\n", "unsigned", " ", "char", " T0RL=", "0", ";\n\n\n\n", "void", " ", "time_init", "()", "\n", "{\n    EA=", "1", ";\n    TMOD=", "0x11", ";\n    TH0 = ", "0", ";\n    TL0 = ", "0", "; \n} ", "//初始化定时器", "\n", "void", " ", "Delay_us", "(", "unsigned", " ", "char", " t)", "\n", "{\n    ", "while", "(--t);\n}     ", "//大约延时t*2+5us     超声波模块用", "\n\n", "void", " ", "delay_ms", "(uchar xms)", "\n", "{\n    uchar i,j;\n    ", "for", "(i=xms;i>", "0", ";i--)\n        ", "for", "(j=", "110", ";j>", "0", ";j--);\n}\n\n\n", "void", " ", "timer0", "()", "interrupt 1\n", "{\nTH0 = ", "0", ";\nTL0 = ", "0", "; \n} ", "//中断程序 初始化赋值 重新计数 超声波模块用 计算时间", "\n ", "void", " ", "main", "()", "\n ", "{    \n\n    ", "unsigned", " ", "int", " time,distance;\n    ", "int", " key=", "0", ";\n    Trig=", "0", ";\n    Echo=", "1", ";\n    ", "time_init", "();\n    p20=", "1", ";p21=", "1", ";p22=", "1", ";\n    p12=", "0", ";\n  ", "while", "(", "1", ")\n    {\n        Trig=", "1", ";\n        ", "Delay_us", "(", "10", ");\n        Trig=", "0", ";\n        ", "while", "(Echo==", "0", ");\n        TR0=", "1", ";\n        ", "while", "(Echo);\n        TR0=", "0", ";\n        time=TH0*", "256", "+TL0;\n        distance=(", "int", ")(time*", "0.0187", ");               ", "//计算路程 单位为cm", "\n        TH0=", "0", ";\n        TL0=", "0", "; \n        \n\n                         \n\n        ", "if", "(p12==", "1", "&key==", "0", ")", "//开灯    ", "\n        {", "delay_ms", "(", "1000", ");", "if", "(p12==", "1", "&key==", "0", ")\n                                  {p11=", "0", ";key=", "1", ";", "while", "(p12);}}\n      \n        ", "if", "(p12==", "1", "&key==", "1", ")    ", "//关灯", "\n        {", "delay_ms", "(", "1000", ");", "if", "(p12==", "1", "&key==", "1", ")\n                                  {p11=", "1", ";p24=", "0", ";key=", "0", ";", "while", "(p12);}}\n\n\n\n\n        ", "if", "(p02==", "0", ")                             ", "//光电开关", "\n            {p10=", "0", ";p20=", "0", ";", "delay_ms", "(", "1000", ");}        \n        \n\n        ", "if", "(p03==", "0", ")                             ", "//光电开关", "\n            {p10=", "0", ";p21=", "0", ";", "delay_ms", "(", "1000", ");}        \n        \n        \n        ", "if", "(distance<", "40", ")                    ", "//如果距离小于30cm 蜂鸣器响", "\n        {\n            p10=", "0", ";\n            p22=", "0", ";\n            ", "Delay_us", "(", "1000", ");\n\n        }\n          \n     } \n\n", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我把语音模块拔掉 就互不影响", "\n", "我想要达到的结果", "\n", "有物体触发光电开关和超声波模块时，语音会播报，按键可以控制灯的亮灭，切播报语音，开灯和关灯的语音"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;canBlit&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.isFigure() &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; self.isImage() &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; self.isImageList():\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个函数调用的三个函数都返回了False&lt;br /&gt;所有函数都没有满足要求,你检查一下是否传入数据正确&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["为什么isinstance(子类实例，父类）结果是False？", ["问题遇到的现象和发生背景", "\n", "最近开发了一个图形编程模块，叫RollTk，是基于Tkinter的。然后我用一个五子棋游戏程序测试了一下，在检测传入的img参数是不是图片列表时，用到了isinstance(img,ImageList)方法，最后报错（即是返回了False)", "\n", "问题相关代码", "\n", "程序结构图：", "\n", "\n", "五子棋主程序（chess.py）部分源码：", "\n", "......\n# 定义常量\nMATRIX_WIDTH=", "30", "\nBLOCK_WIDTH=", "20", "\nYELLOW=", "0", "\nBLACK=", "1", "\nWHITE=", "2", "\nSPEED=", "0.01", "\nWIN=", "1", "\nLOSE=", "0", "\n\n# 棋子图像列表\n", "class", " ", "ChessImageList(", "image", ".ImageList)", ":\n    def ", "__init__(", "self", ")", ":\n        image.", "ImageList", ".", "__init__", "(", "self,", "[\n            \"R", "ollTk", "/", "P", "hotoBase", "/", "yellow", ".", "gif", "\",\n            \"R", "ollTk", "/", "P", "hotoBase", "/", "black", ".", "gif", "\",\n            \"R", "ollTk", "/", "P", "hotoBase", "/", "white", ".", "gif", "\"]", ")\n\n    def update(self,color):\n        ", "if", " color ", "in", " ", "[YELLOW,BLACK,WHITE]", ":\n            self.sprite.canvas.canvas.itemconfig(self.image,image=self.imageList", "[", "color", "]", ")\n\n", "class", " ", "Chess(", "sprite", ".Sprite)", ":\n    def ", "__init__(", "self", ",", "controller", ",", "coordinate", ",", "color", ")", ":\n        # 出错行\n        super", "()", ".", "__init__(", "controller", ",ChessImageList()", ",coordinate)\n        self.color=color\n\n    def update(self):\n        self.img.update(self.color)\n        self.get", "RealCoords(", "isReturn", "=False)", "\n\n# 棋盘控制器，控制键盘输入输出\n", "class", " ", "ChessController(", "canvas", ".Controller)", ":\n    def ", "__init__(", "self", ",", "canvas", ":", "canvas", ".Canvas)", ":\n        super", "()", ".", "__init__(", "canvas", ")", "\n        self.canvas.canvas.bind", "_all(", "\"<Button-1>\"", ",", "self", ".", "toButton", ")", "\n\n    # 按下鼠标事件\n    def ", "to", "Button(", "self", ",", "event", ")", ":\n        global matrix,turn,realPoint\n        mousePos=point.", "Point(", "event", ".", "x", ",", "event", ".", "y", ")", "\n        mousePos.update(mousePos.x", "//BLOCK_WIDTH,mousePos.y//BLOCK_WIDTH)", "\n        matrix", "[", "mousePos", ".", "x", "]", "[", "mousePos", ".", "y", "]", "=turn\n        ", "if", " turn==BLACK:\n            turn=WHITE\n        ", "else", ":\n            turn=BLACK\n        realPoint=point.", "Point(", "mousePos", ".", "x", ",", "mousePos", ".", "y", ")", "\n\n    # 得到可渲染的棋盘，程序运行时要用这个键盘来渲染图像\n    def get", "ChessRention(", "self", ")", ":\n        global matrix\n        chessRentionList=", "[]", "\n        ", "for", " i ", "in", " range(MATRIX_WIDTH):\n            newList=", "[]", "\n            ", "for", " j ", "in", " range(MATRIX_WIDTH):\n                # 在此行生成Chess棋子对象时出错\n               chess=", "Chess(", "self", ",", "coords", ".Coords(", "i", "*", "BLOCK_WIDTH+1,", "j", "*", "BLOCK_WIDTH+1,(", "i", "+1)", "*BLOCK_WIDTH,(j+", "1", ")*BLOCK_WIDTH),matrix", "[", "i", "]", "[", "j", "]", ")\n               newList.append(chess)\n            chessRentionList.append(newList)\n        return chessRentionList\n......\n", "\n", "精灵类定义文件（sprite.py）部分源码:", "\n", "......\n", "class", " ", "Sprite", ":\n\n    ", "# 初始化精灵", "\n    ", "def", " ", "__init__", "(", "self,controller,img,coordinate,direction=", "90", "):\n        self.canvas=controller.canvas\n        self.controller=controller\n        self.coordinate:coords.Coords=coordinate\n        self.direction=direction\n        self.img=img\n        ", "if", " ", "not", " self.canBlit():\n            ", "raise", " ImageCannotBlitException(", "\"Image can't blit.\"", ")\n        ", "if", " self.isImageList():\n            self.img.bind(self)\n        self.width=self.coordinate.x2-self.coordinate.x1\n        self.height=self.coordinate.y2-self.coordinate.y1\n        self.controller.spriteList.load(self)\n        self.realx=", "0", "\n        self.realy=", "0", "\n        self.current_image=", "0", "\n        self.last_time=time.time()\n\n    ", "# 设定位置：X1,Y1,X2,Y2", "\n    ", "def", " ", "_getx1", "(", "self", "):", "return", " self.coordinate.x1\n    ", "def", " ", "_setx1", "(", "self,x1", "):self.coordinate.x1=x1\n    X1=", "property", "(_getx1,_setx1)\n\n    ", "def", " ", "_gety1", "(", "self", "):", "return", " self.coordinate.y1\n    ", "def", " ", "_sety1", "(", "self,y1", "):self.coordinate.y1=y1\n    Y1=", "property", "(_gety1,_sety1)\n\n    ", "def", " ", "_getx2", "(", "self", "):", "return", " self.coordinate.x2\n    ", "def", " ", "_setx2", "(", "self,x2", "):self.coordinate.x2=x2\n    X2=", "property", "(_getx2,_setx2)\n\n    ", "def", " ", "_gety2", "(", "self", "):", "return", " self.coordinate.y2\n    ", "def", " ", "_sety2", "(", "self,y2", "):self.coordinate.y2=y2\n    Y2=", "property", "(_gety2,_sety2)\n\n    ", "def", " ", "canBlit", "(", "self", "):\n        ", "if", " self.isFigure() ", "or", " self.isImage() ", "or", " self.isImageList():\n            ", "return", " ", "True", "\n        ", "return", " ", "False", "\n\n    ", "def", " ", "isFigure", "(", "self", "):\n        ", "if", " ", "isinstance", "(self.img,image.Figure):\n            ", "return", " ", "True", "\n        ", "return", " ", "False", "\n\n    ", "def", " ", "isImage", "(", "self", "):\n        ", "if", " ", "isinstance", "(self.img,image.Image):\n            ", "return", " ", "True", "\n        ", "return", " ", "False", "\n\n    ", "def", " ", "isImageList", "(", "self", "):\n         ", "# 此行返回False", "\n        ", "if", " ", "isinstance", "(self.img,image.ImageList):\n            ", "return", " ", "True", "\n        ", "return", " ", "False", "\n......\n", "\n", "图像类定义文件（image.py）部分源码：", "\n", "......\n\n", "class", " ", "ImageList", ":\n    ", "def", " ", "__init__", "(", "self,imageList", "):\n        self.imageList=[]\n        ", "for", " i ", "in", " ", "range", "(", "len", "(imageList)):\n            self.imageList.append(PhotoImage(imageList[i]))\n        self.width=self.imageList[", "0", "].width\n        self.height=self.imageList[", "0", "].height\n        self.currentImage=", "0", "\n        self.currentImageAdd=", "1", "\n\n    ", "def", " ", "bind", "(", "self,sprite", "):\n        self.sprite=sprite\n        self.canvas=self.sprite.canvas\n        self.image=self.canvas.canvas.create_image(self.sprite.coordinate.x1,self.sprite.coordinate.y1,anchor=NW,image=self.imageList[", "0", "])\n\n    ", "def", " ", "update", "(", "self,speed=", "0.1", "):\n        ", "if", " self.x!=", "0", " ", "and", " self.y==", "0", ":\n            ", "if", " (time.time()-self.sprite.last_time)>speed:\n                self.sprite.last_time=time.time()\n                self.currentImage+=self.currentImageAdd\n                ", "if", " self.currentImage>=", "2", ":\n                    self.currentImageAdd=-", "1", "\n                ", "if", " self.currentImage<=", "0", ":\n                    self.currentImageAdd=", "1", "\n        self.sprite.canvas.itemconfig(self.image,image=self.imageList[self.currentImage])\n......\n", "\n", "报错内容", "\n", "报错内容：", "\n", "Traceback (most recent call last):\n  File ", "\"e:\\Program\\Python\\chess\\chess.py\"", ", line ", "189", ", ", "in", " <", "module", ">\n    rention=controller.get", "ChessRention()", "\n  File ", "\"e:\\Program\\Python\\chess\\chess.py\"", ", line ", "61", ", ", "in", " getChessRention\n    chess=", "Chess(", "self", ",", "coords", ".Coords(", "i", "*", "BLOCK_WIDTH+1,", "j", "*", "BLOCK_WIDTH+1,(", "i", "+1)", "*BLOCK_WIDTH,(j+", "1", ")*BLOCK_WIDTH),matrix", "[", "i", "]", "[", "j", "]", ")\n  File ", "\"e:\\Program\\Python\\chess\\chess.py\"", ", line ", "29", ", ", "in", " __init__\n    super", "()", ".", "__init__(", "controller", ",ChessImageList()", ",coordinate)\n  File ", "\"e:\\Program\\Python\\chess\\RollTk\\standard\\sprite.py\"", ", line ", "16", ", ", "in", " __init__\n    raise ", "ImageCannotBlitException(", "\"Image can't blit.\"", ")", "\n", "RollTk", ".", "standard.image.ImageCannotBlitException: Image can't blit.\n"]], "Tag": "程序设计"}
{"Answer": "struts配置文件result路径错误", "Konwledge_Point": "模块化开发", "Question": ["ssh中 no result defined for action and result error", ["\n\n", " <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN\"\n    \"http://struts.apache.org/dtds/struts-2.3.dtd\">\n\n<struts>\n\n    <package name=\"swork\" extends=\"struts-default\" namespace=\"\">\n\n        <!-- 全局异常 -->\n        <global-exception-mappings>\n            <!-- result 会取找全局视图的名称 -->\n            <exception-mapping result=\"null\" exception=\"java.lang.NullPointerException\"></exception-mapping>\n            <exception-mapping result=\"error\" exception=\"java.lang.Exception\"></exception-mapping>\n        </global-exception-mappings>\n\n\n        <!-- Action实例交给spring容器创建 -->\n\n        <!-- 招聘信息Action -->\n        <action name=\"swork_*\" class=\"searchworkAction\" method=\"{1}\">\n\n            <!-- 招聘列表展示 -->\n            <result name=\"sworkList\">/WEB-INF/list.jsp</result>\n            <result name=\"error\">/WEB-INF/list.jsp</result>\n            <!-- 跳转到添加页面 -->\n            <result name=\"sworkAdd\">/WEB-INF/sworkadd.jsp</result>\n            <!-- 添加成功，进入列表 (防止刷新就多一条记录问题，所以用重定向) -->\n            <result name=\"sworklistAction\" type=\"redirectAction\">swork_list</result>\n            <!-- 进入修改页面 -->\n            <result name=\"edit\">/WEB-INF/sworkedit.jsp</result>\n\n        </action>\n    </package>\n\n</struts>\n\n", "\n\n", "action", "\n\n", "import java.util.List;\nimport java.util.Map;\n\nimport org.apache.struts2.interceptor.RequestAware;\n\n\nimport com.zx.entity.Searchwork;\nimport com.zx.service.ISearchworkService;\n\nimport com.opensymphony.xwork2.ActionContext;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.ModelDriven;\nimport com.opensymphony.xwork2.util.ValueStack;\n\n/**\n * 新闻模块控制器开发：\n * 1.招聘列表展示\n * 2. 添加招聘信息\n * 3. 修改招聘信息\n * 5. 删除新闻\n * @author zhang x\n *\n */\npublic class SearchworkAction extends ActionSupport implements ModelDriven<Searchwork>, RequestAware{\n\n\n\n\n    /**\n     * \n     */\n    private static final long serialVersionUID = 1L;\n    /*******一、封装数据********/\n    private Searchwork swork = new Searchwork();   // 【模型驱动】\n    // 封装请求的部门id(下拉列表的实际的值)\n    public void setSearchwork(Searchwork swork) {\n        this.swork = swork;\n    }\n    public Searchwork getSearchwork() {\n        return swork;\n    }\n\n\n    public Searchwork getModel() {\n        return swork;   // 返回实例化后的对象\n    }\n\n\n    /*******二、注入招聘信息Service********/\n    private ISearchworkService searchworkService;\n    public void setSearchworkService(ISearchworkService searchworkService) {\n        this.searchworkService = searchworkService;\n    }\n\n\n    /**\n     * 1. 招聘信息列表展示\n     */\n    public String sworkList() {\n        // 查询所有员工\n        List<Searchwork> listSwork = searchworkService.getAll();\n        // 保存到request\n        request.put(\"listSwork\", listSwork);\n        return \"sworkList\";\n    }\n\n    /**\n     * 2. 进入到添加招聘信息页面\n     */\n    public String viewAdd(){\n        return \"sworkAdd\";\n    }\n\n    /**\n     * 2. 添加员工 - 添加招聘信息数据\n     */\n    public String save(){\n\n        // 调用Service，保存信息\n        searchworkService.save(swork);\n        return \"sworklistAction\";  // 重定向到Action\n    }\n\n    /**\n     *  3. 修改招聘信息 - 进入修改视图\n     */\n    public String viewUpdate(){\n        // 获取要修改的记录的id\n        int id = swork.getId();\n\n        // 1. 根据招聘信息的主键查询  (lazy=\"false\")\n        Searchwork swork = searchworkService.findById(id);  // 已经有部门信息\n\n        // 数据回显\n        ValueStack vs = ActionContext.getContext().getValueStack();\n        vs.pop();// 移除栈顶元素\n        vs.push(swork); // 入栈   \n        return \"sworkEdit\";\n    }\n\n    /**\n     *  4. 修改招聘信息 - 确认修改\n     */\n    public String update() {        \n        //1. 更新招聘信息\n        searchworkService.update(swork);\n\n        return \"sworklistAction\";  // 重定向到列表\n    }\n\n    /**\n     *  5. 修改招聘信息 - 删除\n     */\n    public String delete(){\n        // 获取要删除招聘信息的主键\n        int sworkId = swork.getId();\n        // 调用service删除\n        searchworkService.delete(sworkId);\n        return \"sworklistAction\";\n    }\n\n\n\n\n\n\n    // 接收框架运行时候传入的代表request对象的map\n    private Map<String, Object> request;\n    public void setRequest(Map<String, Object> request) {\n        this.request = request;\n    }\n}\n\n", "\n\n", " %@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\" %>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <title>招聘列表展示</title>\n    <meta http-equiv=\"pragma\" content=\"no-cache\">\n    <meta http-equiv=\"cache-control\" content=\"no-cache\">\n    <meta http-equiv=\"expires\" content=\"0\">    \n  </head>\n\n  <body>\n     <div align=\"center\" style=\"width:80% \">\n        <s:a href=\"swork_viewAdd\">添加招聘信息</s:a>\n    </div>      \n\n     <table border=\"1\" align=\"center\" width=\"80%\" cellpadding=\"5\" cellspacing=\"0\">\n        <tr>\n            <th>序号</th>\n            <th>工作名称</th>\n            <th>工作地点</th>\n            <th>薪水</th>\n            <th>操作</th>\n        </tr>\n        <s:if test=\"#request.listSwork != null\">\n            <s:iterator var=\"swork\" value=\"#request.listSwork\" status=\"st\">\n                <tr>\n                    <td> <s:property value=\"#st.count\"/> </td>\n                    <td> <s:property value=\"#swork.id\"/> </td>\n                    <td> <s:property value=\"#swork.jobName\"/> </td>\n                    <td> <s:property value=\"#swork.workPlace\"/> </td>\n                    <td> <s:property value=\"#swork.income\"/> </td>\n                    <td> \n                        <s:a href=\"swork_viewUpdate?id=%{#swork.id}\">修改</s:a>\n\n                        <s:a href=\"swork_delete?id=%{#swork.id}\">删除</s:a>\n                    </td>\n                </tr>\n            </s:iterator>\n        </s:if>\n        <s:else>\n            <tr>\n                <td colspan=\"5\">对不起，没有你要找的数据！请先录入。</td>\n            </tr>\n        </s:else>\n\n     </table>\n  </body>\n</html>\n", "\n\n", "初学者求大神告知哪里出错，为什么用浏览器打开jsp会报错no result defined for action and result error"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;conio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;dos.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w1 &amp;#61; &lt;span class=\"hljs-number\"&gt;2.07&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w2 &amp;#61; &lt;span class=\"hljs-number\"&gt;4.07&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w3 &amp;#61; &lt;span class=\"hljs-number\"&gt;6.07&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1.57&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1.07&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; p &amp;#61; &lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;person&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; number[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];     &lt;span class=\"hljs-comment\"&gt;//用户编号&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];        &lt;span class=\"hljs-comment\"&gt;// 姓名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; water_1;       &lt;span class=\"hljs-comment\"&gt;//自来水用水量&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; water_2;       &lt;span class=\"hljs-comment\"&gt;//自备井用水量&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; balance;         &lt;span class=\"hljs-comment\"&gt;//存款&amp;#xff0c;初始值为0&lt;/span&gt;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;person&lt;/span&gt; info[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];  &lt;span class=\"hljs-comment\"&gt;//利用结构体数组&amp;#xff0c;创建100个用户&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;             &lt;span class=\"hljs-comment\"&gt;//输入用户信息&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;search&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;            &lt;span class=\"hljs-comment\"&gt;//输入用户编号可以查询该用户&amp;#xff0c;并显示该户人家的水费明细&amp;#xff08;水费计算等过程包括在其中&amp;#xff09;&amp;#xff0c;已用水量到下一档的剩余额度。&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;balance&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;           &lt;span class=\"hljs-comment\"&gt;//余额管理&amp;#xff0c;能够进行扣费运算&amp;#xff0c;能够充值。&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;recharge&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;          &lt;span class=\"hljs-comment\"&gt;//充值&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;deduction&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;         &lt;span class=\"hljs-comment\"&gt;//扣费&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;       &lt;span class=\"hljs-comment\"&gt;//主菜单&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;assi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;              &lt;span class=\"hljs-comment\"&gt;//对用户余额赋初始值&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;               &lt;span class=\"hljs-comment\"&gt;//水价设置&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//主菜单&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------------主界面-------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********************************\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********1 添加用户信息**********\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********2    查  询   **********\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********3   余额管理  **********\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********4    设  置   **********\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********5    退  出   **********\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;**********************************\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择&amp;#xff08;1-4&amp;#xff09;:&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-comment\"&gt;//子菜单&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print_1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;//输入相关数据&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;y&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;是否输入(Y/N):&amp;#34;);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;,ch);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(ch,&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;||&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(ch,&lt;span class=\"hljs-string\"&gt;&amp;#34;y&amp;#34;&lt;/span&gt;)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;用户编号:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;info[count].number);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;info[count].name);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;自来水用水量(立方米):&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;info[count].water_1);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;自备井用水量(立方米):&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;info[count].water_2);\n        info[count].balance &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        count&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续输入(Y/N):&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ch);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入完成&amp;#xff01;\\n按任意键返回&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-comment\"&gt;//查询操作&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;search&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; n[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入查询的用户编号:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; count &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(info[i].number,n)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;&lt;span class=\"hljs-comment\"&gt;//x为查询选项&lt;/span&gt;\n            &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;  y,s,m1,m2,m3,e,z,a;\n            &lt;span class=\"hljs-comment\"&gt;//y为该住户用水量&amp;#xff0c;s为居民本月总水费&amp;#xff0c;m1为水费&amp;#xff0c;m2为水资源费&amp;#xff0c;m3为污水处理费.e为到下一档的额度,z为账户余额&amp;#xff0c;a为充值金额&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择查询项目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n            &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(x)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;//功能1为自来水用户查询&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入该用户用水量&amp;#xff1a;输入账户余额&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f%f&amp;#34;&lt;/span&gt;,&amp;amp;y,&amp;amp;z);\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (y&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;2.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.57&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        e&amp;#61;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;-y;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度&amp;#xff1a;%.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,e,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y&amp;gt;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;&amp;amp;&amp;amp;y&amp;lt;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;7.0&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;4.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.57&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        e&amp;#61;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;-y;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度&amp;#xff1a;%.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,e,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;9.0&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;6.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.57&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费: %.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//功能2为自备井用户查询&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入该用户用水量&amp;#xff1a;输入账户余额&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f%f&amp;#34;&lt;/span&gt;,&amp;amp;y,&amp;amp;z);\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;4.5&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;2.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.07&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        e&amp;#61;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;-y;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度&amp;#xff1a;%.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,e,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y&amp;gt;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;&amp;amp;&amp;amp;y&amp;lt;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;6.5&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;4.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.07&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        e&amp;#61;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;-y;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度&amp;#xff1a;%.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,e,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;260&lt;/span&gt;)\n                    {\n                        s&amp;#61;y*&lt;span class=\"hljs-number\"&gt;8.5&lt;/span&gt;;\n                        m1&amp;#61;y*&lt;span class=\"hljs-number\"&gt;6.07&lt;/span&gt;;\n                        m2&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.07&lt;/span&gt;;\n                        m3&amp;#61;y*&lt;span class=\"hljs-number\"&gt;1.36&lt;/span&gt;;\n                        z&amp;#61;z-s;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总水费&amp;#xff1a;%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费: %.2f\\n账户余额%.2f\\n&amp;#34;&lt;/span&gt;,s,m1,m2,m3,z);\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//功能3为余额充值&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入账户余额&amp;#xff1a;  输入充值金额&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f%.2f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;z);\n                    z&amp;#61;a&amp;#43;z;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;您的账户余额为&amp;#xff1a;%.2f\\n&amp;#34;&lt;/span&gt;,z);\n            }\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; passw[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; test[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//用来记录登录次数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (count &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入密码-&amp;gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &amp;amp;test);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(passw, test) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;登陆成功\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sel&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(sel)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n                &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;sel);\n                &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(sel)\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                        &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;();\n                        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                        &lt;span class=\"hljs-built_in\"&gt;search&lt;/span&gt;();\n                        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                        sel&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;密码错误\\n&amp;#34;&lt;/span&gt;);\n            count&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; count)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;退出程序\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["关于#ci#的问题，如何解决？", ["使用函数进行模块化设计，将程序结构优化，合理划分模块,并将两部分程序写为一份程序", "\n", "\n\n ", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "include", "<dos.h>", "\n", "double", " w1 = ", "2.07", ";\n", "double", " w2 = ", "4.07", ";\n", "double", " w3 = ", "6.07", ";\n", "double", " s1 = ", "1.57", ";\n", "double", " s2 = ", "1.07", ";\n", "double", " p = ", "1.36", ";\n", "static", " ", "int", " count = ", "0", ";\n", "struct", " ", "person", "\n{\n ", "char", " number[", "100", "];     ", "//用户编号", "\n ", "char", " name[", "20", "];        ", "// 姓名", "\n ", "double", " water_1;       ", "//自来水用水量", "\n ", "double", " water_2;       ", "//自备井用水量", "\n ", "double", " balance;         ", "//存款，初始值为0", "\n};\n", "struct", " ", "person", " info[", "100", "];  ", "//利用结构体数组，创建100个用户", "\n", "void", " ", "input", "()", ";             ", "//输入用户信息", "\n", "void", " ", "search", "()", ";            ", "//输入用户编号可以查询该用户，并显示该户人家的水费明细（水费计算等过程包括在其中），已用水量到下一档的剩余额度。", "\n", "void", " ", "balance", "()", ";           ", "//余额管理，能够进行扣费运算，能够充值。", "\n", "void", " ", "recharge", "()", ";          ", "//充值", "\n", "void", " ", "deduction", "()", ";         ", "//扣费", "\n", "void", " ", "print", "()", ";       ", "//主菜单", "\n", "void", " ", "assi", "()", ";              ", "//对用户余额赋初始值", "\n", "void", " ", "set", "()", ";               ", "//水价设置", "\n", "//主菜单", "\n", "void", " ", "print", "()", "{\n ", "system", "(", "\"cls\"", ");\n ", "printf", "(", "\"---------------主界面-------------\\n\"", ");\n ", "printf", "(", "\"**********************************\\n\"", ");\n ", "printf", "(", "\"**********1 添加用户信息**********\\n\"", ");\n ", "printf", "(", "\"**********2    查  询   **********\\n\"", ");\n ", "printf", "(", "\"**********3   余额管理  **********\\n\"", ");\n ", "printf", "(", "\"**********4    设  置   **********\\n\"", ");\n ", "printf", "(", "\"**********5    退  出   **********\\n\"", ");\n ", "printf", "(", "\"**********************************\\n\"", ");\n ", "printf", "(", "\"请选择（1-4）:\"", ");\n}\n", "//子菜单", "\n", "void", " ", "print_1", "()", "{\n}\n", "void", " ", "input", "()", "    ", "//输入相关数据", "\n", "{\n  ", "system", "(", "\"cls\"", ");\n  ", "int", " i;\n  ", "char", " ch[", "2", "]=", "\"y\"", ";\n  ", "//printf(\"是否输入(Y/N):\");", "\n  ", "//scanf(\"%s\",ch);", "\n  ", "while", "(", "strcmp", "(ch,", "\"Y\"", ")==", "0", "||", "strcmp", "(ch,", "\"y\"", ")==", "0", "){\n  ", "system", "(", "\"cls\"", ");\n  ", "printf", "(", "\"用户编号:\"", ");\n  ", "scanf", "(", "\"%s\"", ",&info[count].number);\n  ", "printf", "(", "\"姓名:\"", ");\n  ", "scanf", "(", "\"%s\"", ",&info[count].name);\n  ", "printf", "(", "\"自来水用水量(立方米):\"", ");\n  ", "scanf", "(", "\"%lf\"", ",&info[count].water_1);\n  ", "printf", "(", "\"自备井用水量(立方米):\"", ");\n  ", "scanf", "(", "\"%lf\"", ",&info[count].water_2);\n  info[count].balance = ", "0", ";\n  count++;\n  ", "printf", "(", "\"是否继续输入(Y/N):\"", ");\n  ", "scanf", "(", "\"%s\"", ",ch);\n }\n ", "printf", "(", "\"输入完成！\\n按任意键返回\"", ");\n}\n", "//查询操作", "\n", "void", " ", "search", "()", "{\n ", "system", "(", "\"cls\"", ");\n ", "int", " i;\n ", "char", " n[", "100", "];\n ", "printf", "(", "\"请输入查询的用户编号:\"", ");\n ", "scanf", "(", "\"%s\"", ",&n);\n ", "for", "(i = ", "0", ";i < count + ", "1", ";i++){\n  ", "if", "(", "strcmp", "(info[i].number,n)==", "0", "){\n    ", "int", " x;", "//x为查询选项", "\n    ", "float", "  y,s,m1,m2,m3,e,z,a;\n    ", "//y为该住户用水量，s为居民本月总水费，m1为水费，m2为水资源费，m3为污水处理费.e为到下一档的额度,z为账户余额，a为充值金额", "\n    ", "printf", "(", "\"请选择查询项目：\"", ");\n    ", "scanf", "(", "\"%d\"", ",&x);\n    ", "switch", "(x)\n    {\n        ", "case", " ", "1", ": ", "//功能1为自来水用户查询", "\n        ", "printf", "(", "\"输入该用户用水量：输入账户余额：\\n\"", ");\n        ", "scanf", "(", "\"%f%f\"", ",&y,&z);\n        ", "if", " (y<=", "180", ")\n        {\n        s=y*", "5.0", ";m1=y*", "2.07", ";m2=y*", "1.57", ";m3=y*", "1.36", ";e=", "180", "-y;z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度：%.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,e,z);\n        }\n        ", "else", " ", "if", "(y>", "180", "&&y<", "260", ")\n        {\n        s=y*", "7.0", ";m1=y*", "4.07", ";m2=y*", "1.57", ";m3=y*", "1.36", ";e=", "260", "-y;z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度：%.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,e,z);\n         }\n        ", "else", " ", "if", "(y>=", "260", ")\n        {\n        s=y*", "9.0", ";m1=y*", "6.07", ";m2=y*", "1.57", ";m3=y*", "1.36", ";z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费: %.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,z);\n        }\n        ", "break", ";\n        ", "case", " ", "2", ":", "//功能2为自备井用户查询", "\n        ", "printf", "(", "\"输入该用户用水量：输入账户余额：\\n\"", ");\n        ", "scanf", "(", "\"%f%f\"", ",&y,&z);\n        ", "if", "(y<=", "180", ")\n        {\n        s=y*", "4.5", ";m1=y*", "2.07", ";m2=y*", "1.07", ";m3=y*", "1.36", ";e=", "180", "-y;z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度：%.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,e,z);\n        }\n        ", "else", " ", "if", "(y>", "180", "&&y<", "260", ")\n        {\n        s=y*", "6.5", ";m1=y*", "4.07", ";m2=y*", "1.07", ";m3=y*", "1.36", ";e=", "260", "-y;z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费:  %.2f\\n到下一档额度：%.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,e,z);\n        }\n        ", "else", " ", "if", "(y>=", "260", ")\n        {\n        s=y*", "8.5", ";m1=y*", "6.07", ";m2=y*", "1.07", ";m3=y*", "1.36", ";z=z-s;\n        ", "printf", "(", "\"总水费：%.2f\\n水费 %.2f\\n水资源费:  %.2f\\n污水处理费: %.2f\\n账户余额%.2f\\n\"", ",s,m1,m2,m3,z);\n        }\n        ", "break", ";\n        ", "case", " ", "3", ":", "//功能3为余额充值", "\n        ", "printf", "(", "\"请输入账户余额：  输入充值金额：\\n\"", ");\n        ", "scanf", "(", "\"%.2f%.2f\"", ",&a,&z);\n        z=a+z;\n        ", "printf", "(", "\"您的账户余额为：%.2f\\n\"", ",z);\n    }\n  }\n }\n}\n", "int", " ", "main", "()", "\n", "{\n   ", "int", " sel=", "1", ";\n   ", "while", "(sel)\n   {\n       ", "print", "();\n       ", "scanf", "(", "\"%d\"", ",&sel);\n       ", "switch", "(sel){\n             ", "case", " ", "1", ":", "input", "();\n                    ", "break", ";\n             ", "case", " ", "2", ":", "search", "();\n                    ", "break", ";\n             ", "case", " ", "5", ":sel=", "0", ";\n                    ", "break", ";\n             ", "default", ":", "break", ";\n       }\n   }\n   ", "return", " ", "0", ";\n}\n \n\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n\n", "//编写代码实现，模拟用户登录情景，并且只能登录三次。", "\n", "//（只允许输入三次密码，如果密码正确则提示登录成，如果三次均输入错误，则退出程序。)", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " passw[] = ", "\"12345\"", ";\n    ", "char", " test[", "20", "] = ", "\"0\"", ";\n    ", "int", " count = ", "0", ";", "//用来记录登录次数", "\n    \n    ", "while", " (count < ", "3", ")\n    {\n        ", "printf", "(", "\"请输入密码->\"", ");\n        ", "scanf", "(", "\"%s\"", ", &test);\n        ", "if", " (", "strcmp", "(passw, test) == ", "0", ")\n        {\n            ", "printf", "(", "\"登陆成功\\n\"", ");\n            ", "break", ";\n        }\n        ", "else", "\n        {\n            ", "printf", "(", "\"密码错误\\n\"", ");\n            count++;\n        }\n        \n    }\n    ", "if", " (", "3", " == count)\n    {\n        ", "printf", "(", "\"退出程序\\n\"", ");\n    }\n    ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;rst 整反了&amp;#xff0c;激励文件和模块代码不一致&lt;br /&gt;tb代码&amp;#xff0c;19,20行改为&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;     #5 rst &amp;#61; 0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;     #20 rst &amp;#61; 1;&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["编写序列检测器检测“111”，仿真得不到想要的输出", ["问题遇到的现象和发生背景", "\n", "本人使用quartusII编写111序列检测的模块，用modelsim进行仿真，得到了想要的激励，但是输出结果不对，输入存在连续的111的时候，输出还是为0，且一直为0，到底是哪里错了？", "\n", "问题相关代码", "\n", "模块代码：", "\n", "//序列检测器，检测111，采用Mealy型FSM", "\n", "module", " seq_tec1(in, clk, rst, out);\n    ", "input", " in, clk, rst;\n    ", "output", " out;\n    ", "reg", " out;", "//输出必须有指定类型", "\n    \n    ", "parameter", " [", "3", ":", "0", "] S0=", "4'b0001", ", S1=", "4'b0010", ", \n                              S2=", "4'b0100", ", S3=", "4'b1000", ";   ", "//状态编码，采用独热one hot码。", "\n    ", "//状态寄存器", "\n    ", "reg", " [", "3", ":", "0", "] S;           ", "//S当前状态", "\n    ", "reg", " [", "3", ":", "0", "] Snext;   ", "//Snext下一时刻状态", "\n    \n    ", "//状态转移方程,根据状态转移表可写出状态转移关系", "\n    ", "always", " @(in ", "or", " S)\n    ", "begin", " \n       ", "case", "(S)\n       S0: Snext = (in==", "1'b1", ")? S1 : S0;\n       S1: Snext = (in==", "1'b1", ")? S2 : S0;\n       S2: Snext = (in==", "1'b1", ")? S3 : S0;\n       S3: Snext = (in==", "1'b1", ")? S3 : S0;\n       ", "default", ": Snext = S0;\n       ", "endcase", "\n    ", "end", "\n    \n    ", "//rst功能和clk功能", "\n    ", "always", " @(", "negedge", " rst ", "or", " ", "posedge", " clk)\n    ", "begin", "\n       ", "if", "(~rst)\n          S <= S0;\n       ", "else", "\n          S <= Snext;\n    ", "end", "\n    \n    ", "//输出方程", "\n    ", "always", " @(", "negedge", " rst ", "or", " ", "posedge", " clk)\n    ", "begin", "\n       ", "if", "(~rst)    ", "//按下复位键", "\n          out <= ", "1'b0", ";\n       ", "else", "\n          ", "case", "(S)\n             S0 , S1: out <= ", "1'b0", ";\n             S2 , S3: out <= (in == ", "1'b1", ") ? ", "1'b1", " : ", "1'b0", ";\n             ", "default", ": out <= ", "1'b0", ";\n          ", "endcase", "\n    ", "end", "\n    \n    ", "endmodule", " \n", "\n", "tb代码：", "\n", "`", "timescale", " 1 ps/ 1 ps", "\n", "module", " seq_tec1_vlg_tst();\n", "reg", " clk, rst;\n", "wire", " in, out;\n", "reg", " [", "23", " : ", "0", "] data; ", "//定义一个24位的寄存器用于存放待测数据码", "\n\n", "parameter", " PERIOD = ", "20", ";\n", "//==========模块例化====================//                            ", "\nseq_tec1 i1 (\n    ", ".clk", "(clk),\n    ", ".in", "(in),\n    ", ".out", "(out),\n    ", ".rst", "(rst)\n);\n", "//==========产生初始信号=================//    ", "\n", "initial", "                                                \n", "begin", "                                       \n    clk = ", "0", ";  rst = ", "0", ";\n     #", "5", " rst = ", "1", ";\n     #", "20", " rst = ", "0", "; \n    data = ", "24'b0011_1111_1111_0000_1001_0100", ";\n     ", "//#(PERIOD * 100)  $stop; //执行100个时钟周期", "\n    ", "$display", "(", "\"Running testbench\"", ");   \n", "end", " \n", "//==========产生时钟信号================//       ", "\n", "always", "      ", "#(PERIOD/2)", " clk = ~clk;          \n", "//========循环移位产生输入数据============//       ", "\n", "always", " @(", "posedge", " clk) \n    #", "5", " data = {data[", "22", " : ", "0", "], data[", "23", "]};  ", "//循环左移", "\n    ", "assign", " in = data[", "23", "]; ", "//将最高位输入到序列检测器中  ", "\n", "endmodule", "\n", "\n", "运行结果及", "\n", "\n", "我想要达到的结果", "\n", "通过quartusII自带的VWF仿真得到的："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不知道题主是不是用的pycharm,它运行完程序后会在安装盘产生大量缓存文件&amp;#xff0c;如果是删除C:\\Users\\15839\\AppData\\Local\\JetBrains\\PyCharm2020.2\\caches\\content.dat.storageData就可以了&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["Python运行中磁盘空间变小", ["Python运行中磁盘空间变小", "\n", "运行Python代码，运行后发现D盘空间变小，早上还有9G，晚上就只有1G了。但是关机再开机，D盘大小又恢复正常。Python装在D盘，代码分成三个文件，都在D盘。", "\n", "代码如下（非专业人士，写的不好请见谅）", "main.py（运行时执行的主程序）", "\n", "\"\"\"保护符：Python之神保护以下代码不出BUG\"\"\"", "\n", "# 导入需要的模块", "\n", "import", " pygame ", "as", " p\n", "import", " os, sys\n", "from", " pygame ", "import", " time\n", "from", " NaCl工具 ", "import", " *\n", "import", " Class\n\nos.chdir(sys.path[", "0", "])  ", "# 将工作目录改为当前目录，方便使用相对路径", "\np.init()  ", "# 初始化pygame", "\nscreen = 窗口((", "900", ", ", "900", "), ", "\"飞机大战\"", ")\n背景色 = (", "0", ", ", "255", ", ", "255", ")\n", "# 精灵相关", "\n总精灵组 = p.sprite.RenderUpdates()  ", "# 存储所有当前需要的精灵的精灵组", "\n自机 = Class.自机(", "\"./Data/歼击机.png\"", ", 尺寸=(", "128", ", ", "128", "), 旋转角度=", "90", ")\n总精灵组.add(自机)\n自机.rect.center = (", "450", ", ", "450", ")\nscreen.fill(背景色)\np.display.flip()\n", "# 设置帧率，即FPS", "\nclock = time.Clock()\nFPS = ", "30", "\n", "# 固定代码段，实现点击\"X\"号退出界面的功能，几乎所有的pygame都会使用该段代码", "\n", "while", " ", "True", ":\n    clock.tick(FPS)\n    ", "# 循环获取事件，监听事件状态", "\n    ", "for", " event ", "in", " p.event.get():\n        screen.fill(背景色)\n        总精灵组.update(event, screen,self)\n        总精灵组.draw(screen)\n        ", "# 判断用户是否点了\"X\"关闭按钮,并执行if代码段", "\n        ", "if", " event.", "type", " == p.QUIT:\n            ", "# 卸载所有模块", "\n            p.quit()\n            ", "# 终止程序，确保退出程序", "\n            sys.exit()\n    p.display.update()  ", "# 更新屏幕内容", "\n", "\n", "class.py（存放类）", "\n", "# 导入需要的模块", "\n", "import", " enum\n\n", "import", " pygame ", "as", " p\n", "from", " pygame ", "import", " sprite\n", "from", " ", "NaCl", "工具 ", "import", " *\n\n", "os", ".chdir(sys.path[", "0", "])  # 将工作目录改为当前目录，方便使用相对路径\n", "p", ".init()  # 初始化pygame\n", "\n\n", "class", " 自机(精灵):\n    def __init__(", "self", ",\n                 图片路径: ", "str", ",\n                 ", "key", ": ", "Tuple", "[", "int", ", ", "int", ", ", "int", "] = (0, 255, 0),\n                 尺寸: ", "Tuple", "[int, int] = (0, 0),\n                 旋转角度: int = 0\n                 ) -> ", "None", ":\n        super().__init__(图片路径, ", "key", ", 尺寸, 旋转角度)\n\n    def 跟随鼠标移动(", "self", ", ", "event", ": ", "e", ".", "Event", ") -> ", "None", ":\n        if event.type == p.", "MOUSEMOTION", ":\n            self.rect.center = event.pos\n\n    def update(", "self", ",\n               ", "event", ": ", "e", ".", "Event", ",\n               ", "screen", ": ", "p", ".", "Surface", ",\n               ", "group", ": ", "sprite", ".", "Group", ",\n               调试: ", "bool", " = ", "False", "\n               ) -> ", "None", ":\n        \"\"\"更新自机的位置和行为，并传入一个", "Rect", "表来制作脏矩形动画\"\"\"\n        self.跟随鼠标移动(", "event", ")\n        if 调试:\n            self.调试(", "screen", ")\n        if event.type == p.", "MOUSEBUTTONDOWN", ":\n            自机子弹 = 自机子弹类('", "Data", "/子弹.", "png'", ")\n            group.add(自机子弹)\n\n\n", "class", " 自机子弹类(精灵):\n    def __init__(", "self", ",\n                 图片路径: ", "str", ",\n                 ", "key", ": ", "Tuple", "[", "int", ", ", "int", ", ", "int", "] = (0, 255, 0),\n                 尺寸: ", "Tuple", "[int, int] = (0, 0),\n                 旋转角度: int = 0\n                 ) -> ", "None", ":\n        super().__init__(图片路径, ", "key", ", 尺寸, 旋转角度)\n\n    def update(", "self", ") -> ", "None", ":\n        self.前进(-10, 0)", "\n", "\n", "# 导入需要的模块", "\n", "import", " pygame as p\n", "import", " os\n", "import", " sys\nfrom pygame ", "import", " image, sprite, display, transform, Rect, math, draw\nfrom pygame ", "import", " event as e\nfrom typing ", "import", " Tuple, List, Union, Any\n", "import", " abc\n\np.init()", "  # 初始化pygame", "\n\n\n# 资源管理", "\n\n\ndef 窗口(尺寸: Tuple[int, int],\n         title: str\n         ) -> p.Surface:\n    ", "\"\"", "\"生成窗口的函数\"", "\"\"", "\n    screen: p.Surface = display.set_mode(尺寸)\n    display.set_caption(title)\n    ", "return", " screen\n\n\ndef 图片(path: str,\n         key: Tuple[int, int, int] = (", "0", ", ", "255", ", ", "0", "),\n         尺寸: Tuple[int, int] = (", "0", ", ", "0", "),\n         旋转角度: int = ", "0", "\n         ) -> p.Surface:\n    ", "\"\"", "\"加载图片的函数\"", "\"\"", "\n    picture = image.load(path).convert()\n    picture.set_colorkey(key)\n    ", "if", " 尺寸 != (", "0", ", ", "0", "):\n        picture = transform.scale(picture, 尺寸)\n    picture = transform.rotate(picture, 旋转角度)\n    ", "return", " picture\n\n\n", "class", " 精灵(", "sprite", ".", "Sprite", "):", "\n    ", "\"\"", "\"一个优化的精灵类\"", "\"\"", "\n\n    def __init__(", "self", ",\n                 图片路径: str,\n                 key: Tuple[int, int, int] = (", "0", ", ", "255", ", ", "0", "),\n                 尺寸: Tuple[int, int] = (", "0", ", ", "0", "),\n                 旋转角度: int = ", "0", "\n                 ) -> None:\n        sprite.Sprite.__init__(", "self", ")\n        ", "self", ".原图 = ", "self", ".image\n        ", "self", ".image: p.Surface = 图片(图片路径, key, 尺寸, 旋转角度)\n        ", "self", ".rect: Rect = ", "self", ".image.get_rect()\n        ", "self", ".__子rect: Rect = ", "self", ".rect\n        ", "self", ".方向: float = ", "0", "\n        ", "self", ".速度: int = ", "0", "\n\n    def 旋转(", "self", ", 角度: float) -> None:\n        ", "self", ".image = transform.rotate(", "self", ".原图, 角度)\n        ", "self", ".rect = ", "self", ".image.get_rect(center=", "self", ".rect.center)\n\n    def 设置子rect(", "self", ", 宽: float, 高: float) -> None:\n        子矩形left = ", "self", ".rect.left + (", "self", ".rect.width - 宽) / ", "2", "\n        子矩形top = ", "self", ".rect.top + (", "self", ".rect.height - 高) / ", "2", "\n        ", "self", ".__子rect = Rect(子矩形left, 子矩形top, 宽, 高)\n\n    def 子rect碰撞(", "self", ", other: ", "\"精灵\"", ") -> bool:\n        ", "return", " Rect.colliderect(", "self", ".__子rect, other.__子rect)\n\n    def 方向变更(", "self", ", ", "new", ": float) -> None:\n        ", "self", ".方向 = ", "new", "\n\n    def 前进(", "self", ", x: float, y: float) -> None:\n        ", "self", ".rect.move_ip(x, y)\n        ", "self", ".__子rect.move_ip(x, y)\n\n    def 向量前进(", "self", ") -> None:\n        前进向量 = math.Vector2(", "self", ".速度, ", "0", ")\n        前进向量.rotate_ip(", "self", ".方向)\n        x, y = 前进向量\n        ", "self", ".前进(x, y)\n\n    def 调试(", "self", ", screen: p.Surface) -> None:\n        draw.rect(screen, (", "0", ", ", "0", ", ", "0", "), ", "self", ".rect, ", "1", ")\n        draw.rect(screen, (", "255", ", ", "0", ", ", "0", "), ", "self", ".__子rect, ", "1", ")\n\n    @abc.abstractmethod\n    def update(", "self", ", *args: Any, **kwargs: Any) -> None:\n        pass\n", "\n", "NaCl工具.py（自己写的工具集）", "\n", "# 导入需要的模块", "\n", "import", " pygame as p\n", "import", " os\n", "import", " sys\nfrom pygame ", "import", " image, sprite, display, transform, Rect, math, draw\nfrom pygame ", "import", " event as e\nfrom typing ", "import", " Tuple, List, Union, Any\n", "import", " abc\n\np.init()", "  # 初始化pygame", "\n\n\n# 资源管理", "\n\n\ndef 窗口(尺寸: Tuple[int, int],\n         title: str\n         ) -> p.Surface:\n    ", "\"\"", "\"生成窗口的函数\"", "\"\"", "\n    screen: p.Surface = display.set_mode(尺寸)\n    display.set_caption(title)\n    ", "return", " screen\n\n\ndef 图片(path: str,\n         key: Tuple[int, int, int] = (", "0", ", ", "255", ", ", "0", "),\n         尺寸: Tuple[int, int] = (", "0", ", ", "0", "),\n         旋转角度: int = ", "0", "\n         ) -> p.Surface:\n    ", "\"\"", "\"加载图片的函数\"", "\"\"", "\n    picture = image.load(path).convert()\n    picture.set_colorkey(key)\n    ", "if", " 尺寸 != (", "0", ", ", "0", "):\n        picture = transform.scale(picture, 尺寸)\n    picture = transform.rotate(picture, 旋转角度)\n    ", "return", " picture\n\n\n", "class", " 精灵(", "sprite", ".", "Sprite", "):", "\n    ", "\"\"", "\"一个优化的精灵类\"", "\"\"", "\n\n    def __init__(", "self", ",\n                 图片路径: str,\n                 key: Tuple[int, int, int] = (", "0", ", ", "255", ", ", "0", "),\n                 尺寸: Tuple[int, int] = (", "0", ", ", "0", "),\n                 旋转角度: int = ", "0", "\n                 ) -> None:\n        sprite.Sprite.__init__(", "self", ")\n        ", "self", ".原图 = ", "self", ".image\n        ", "self", ".image: p.Surface = 图片(图片路径, key, 尺寸, 旋转角度)\n        ", "self", ".rect: Rect = ", "self", ".image.get_rect()\n        ", "self", ".__子rect: Rect = ", "self", ".rect\n        ", "self", ".方向: float = ", "0", "\n        ", "self", ".速度: int = ", "0", "\n\n    def 旋转(", "self", ", 角度: float) -> None:\n        ", "self", ".image = transform.rotate(", "self", ".原图, 角度)\n        ", "self", ".rect = ", "self", ".image.get_rect(center=", "self", ".rect.center)\n\n    def 设置子rect(", "self", ", 宽: float, 高: float) -> None:\n        子矩形left = ", "self", ".rect.left + (", "self", ".rect.width - 宽) / ", "2", "\n        子矩形top = ", "self", ".rect.top + (", "self", ".rect.height - 高) / ", "2", "\n        ", "self", ".__子rect = Rect(子矩形left, 子矩形top, 宽, 高)\n\n    def 子rect碰撞(", "self", ", other: ", "\"精灵\"", ") -> bool:\n        ", "return", " Rect.colliderect(", "self", ".__子rect, other.__子rect)\n\n    def 方向变更(", "self", ", ", "new", ": float) -> None:\n        ", "self", ".方向 = ", "new", "\n\n    def 前进(", "self", ", x: float, y: float) -> None:\n        ", "self", ".rect.move_ip(x, y)\n        ", "self", ".__子rect.move_ip(x, y)\n\n    def 向量前进(", "self", ") -> None:\n        前进向量 = math.Vector2(", "self", ".速度, ", "0", ")\n        前进向量.rotate_ip(", "self", ".方向)\n        x, y = 前进向量\n        ", "self", ".前进(x, y)\n\n    def 调试(", "self", ", screen: p.Surface) -> None:\n        draw.rect(screen, (", "0", ", ", "0", ", ", "0", "), ", "self", ".rect, ", "1", ")\n        draw.rect(screen, (", "255", ", ", "0", ", ", "0", "), ", "self", ".__子rect, ", "1", ")\n\n    @abc.abstractmethod\n    def update(", "self", ", *args: Any, **kwargs: Any) -> None:\n        pass\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;pygame.mixer.Sound没有pause()函数&amp;#xff0c;只有stop().&lt;br /&gt;pause()是pygame.mixer这个有&amp;#xff0c;pygame.mixer.Channel&amp;#xff0c;pygame.mixer.music也有&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["pygame—mixer错误", ["最近和我亲爱的同学一起搞一个python项目。", "为了帮他改代码，于是学了pygame——mixer（以前是自学python）。", "可是我们遇到了一个一个报错，我没看懂！", "报错提示", "\n", "\n", "AttributeError: 'Sound' object has no attribute 'pause'", "下面是完整报错提示。", "\n", "\n", "Exception ", "in", " thread Thread-2:\nTraceback (most recent call last):\n  ", "File", " ", "\"C:\\Program Files\\Python37\\lib\\threading.py\"", ", ", "line", " 926, ", "in", " _bootstrap_inner\n    self.", "run", "()\n  ", "File", " ", "\"C:\\Program Files\\Python37\\lib\\threading.py\"", ", ", "line", " 870, ", "in", " ", "run", "\n    self._target(*self._args, **self._kwargs)\n  ", "File", " ", "\"C:/Users/段禹珩/Desktop/桌宠2023新年/main.py\"", ", ", "line", " 41, ", "in", " ", "window", "\n    Carrot(Carrot_time=5)   #运行“播放声音”的函数，播放时长：5s\n  ", "File", " ", "\"C:/Users/段禹珩/Desktop/桌宠2023新年/main.py\"", ", ", "line", " 17, ", "in", " Carrot\n    Carrot.", "pause", "()    #停止播放声音“Carrot”\nAttributeError: 'Sound' object has ", "no", " attribute '", "pause", "'\n", "\n", "我用百度翻译了一下", "\n", "\n", "“Sound”对象没有“unpause”属性", "我根本没看懂", "报错的代码", "\n", "\n", "    ", "def", " ", "Carrot", " ", "(Carrot_time)", ":   ", "#将声音代码放入函数里面，既省去了不必要的报错，又省去了不必要的麻烦", "\n        Carrot = pygame.mixer.Sound(", "\"兔子.胡萝卜.mp3\"", ")  ", "# 进入声音，并命名为“Carrot”", "\n        Carrot.play()   ", "#播放声音“Carrot”", "\n        time.sleep(Carrot_time) ", "#设置播放时长（变量：“Carrot_time”）", "\n        Carrot.pause()    ", "#停止播放声音“Carrot”", "\n\n\nCarrot(Carrot_time=", "5", ")   ", "#运行“播放声音”的函数，播放时长：5s", "\n", "\n", "完整代码", "\n", "import", " pygame, sys, time, threading, os, signal    ", "#引库”pygame“、”sys“、”time“、“threading”、“os”、“signal”", "\nfrom pygame.constants ", "import", " *  ", "#引库“pygame——按键检测”的所有部分", "\n\ndef window ():   ", "#创建函数：主程序（为多线程用），命名为“window”", "\n\n    pygame.init()  ", "# 初始化pygame", "\n    pygame.mixer.init() ", "#初始化pygame——mixer", "\n\n    ", "list", " = []  ", "# 创建列表，命名为“list”", "\n    pygame.display.set_caption(", "\"桌面宠物2023春节限定\"", ")  ", "# 设置窗口标题", "\n    ", "screen", " = pygame.display.set_mode((", "300", ", ", "300", "))  ", "# 设置窗口大小", "\n\n    def Carrot (Carrot_time):   ", "#将声音代码放入函数里面，既省去了不必要的报错，又省去了不必要的麻烦", "\n        ", "Carrot", " = pygame.mixer.Sound(", "\"兔子.胡萝卜.mp3\"", ")  ", "# 进入声音，并命名为“Carrot”", "\n        Carrot.play()   ", "#播放声音“Carrot”", "\n        time.sleep(Carrot_time) ", "#设置播放时长（变量：“Carrot_time”）", "\n        Carrot.pause()    ", "#停止播放声音“Carrot”", "\n\n    ", "myfont", " = pygame.font.Font(None, ", "60", ")  ", "# 设置字体大小", "\n\n    ", "bg", " = pygame.image.load(", "\"bg.jpg\"", ")  ", "# 加载图片“bg.jpg“命名为”bg“", "\n    ", "mouth_open", " = pygame.image.load(", "\"mouth_open.png\"", ")  ", "# 加载图片“mouth_open.png”并命名为”mouth_open“", "\n    ", "mouth_close", " = pygame.image.load(", "\"mouth_close.png\"", ")  ", "# 加载图片“mouth_close.png”并命名为”mouth_close“", "\n    screen.blit(bg, (", "0", ", ", "0", "))  ", "# 显示背景图片“bg.jpg”", "\n    screen.blit(mouth_close, (", "0", ", ", "0", "))  ", "# 显示背景图片“mouth_close.png”", "\n    pygame.display.update()  ", "# 更新pygame窗口", "\n\n    while True: ", "#开启循环", "\n\n        for event ", "in", " pygame.event.get():    ", "#开启键盘监测", "\n\n            ", "if", " event.", "type", " == QUIT:   ", "#如果点击窗口的X", "\n                ", "# pygame.quit()   #卸载pygame模块", "\n                os.getpid()  ", "#获取Python自身运行的父进程", "\n                os.kill(os.getpid(), signal.SIGTERM)  ", "#终止自身进程", "\n\n            elif event.", "type", " == KEYDOWN:  ", "#否则如果键盘按下", "\n                ", "if", " event.", "key", " == K_s: ", "#如果按下“S”键", "\n                    screen.blit(mouth_open, (", "0", ", ", "0", ")) ", "#显示图片“mouth_open”", "\n                    ", "# pygame.display.update()   #更新pygame窗口", "\n                    Carrot(", "Carrot_time=5)", "   ", "#运行“播放声音”的函数，播放时长：5s", "\n                    screen.blit(mouth_close, (", "0", ", ", "0", "))    ", "#显示图片“mouth_open”", "\n                    ", "# pygame.display.update()   #更新pygame窗口", "\n\n        ", "# pygame.display.update() #更新pygame窗口", "\n\ndef refresh (): ", "#创建函数：刷新窗口（为多线程用），命名为“refresh”", "\n    pygame.init()  ", "# 初始化pygame", "\n    while True: ", "#开启循环", "\n        pygame.display.update()  ", "#更新pygame窗口", "\n        time.sleep(", "0.1", ") ", "#设置0.1秒刷新一次pygame窗口", "\n        ", "# print(\"刷新成功！\")    告诉我：刷新成功了", "\n\n", "thread1", " = threading.Thread(", "target=", " refresh) ", "#创建多线程，运行函数：“refresh”", "\n", "thread2", " = threading.Thread(", "target=", " window)  ", "#创建多线程，运行函数：“window”", "\n\nthread1.start()   ", "#启动线程1", "\nthread2.start()   ", "#启动线程2", "\n", "\n", "还有一些图片和视频素材，就不上传了（上传不了）。", "这怎么解决啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将函数前的代码也放入函数&amp;#xff0c;将初始化pygame同时放入两个函数中。&lt;br /&gt;使用函数是&amp;#xff0c;记得全局变量&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; pygame, sys, time, threading    &lt;span class=\"hljs-comment\"&gt;#引库”pygame“、”sys“、”time“、“threading”&lt;/span&gt;\nfrom pygame.constants &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; *\n\ndef window ():   &lt;span class=\"hljs-comment\"&gt;#创建函数&amp;#xff1a;主程序&amp;#xff08;为多线程用&amp;#xff09;&amp;#xff0c;命名为“window”&lt;/span&gt;\n\n    pygame.init()  &lt;span class=\"hljs-comment\"&gt;# 初始化pygame&lt;/span&gt;\n\n    &lt;span class=\"hljs-attr\"&gt;list&lt;/span&gt; &amp;#61; []  &lt;span class=\"hljs-comment\"&gt;# 创建列表&amp;#xff0c;命名为“list”&lt;/span&gt;\n    pygame.display.set_caption(&lt;span class=\"hljs-string\"&gt;&amp;#34;桌面宠物2023春节限定&amp;#34;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置窗口标题&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;screen&lt;/span&gt; &amp;#61; pygame.display.set_mode((&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;))  &lt;span class=\"hljs-comment\"&gt;# 设置窗口大小&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;# def playSound(musicFile):   #定义播放音乐&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;#     sound &amp;#61; pygame.mixer.Sound(musicFile)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;#     sound.play()&lt;/span&gt;\n\n    &lt;span class=\"hljs-attr\"&gt;myfont&lt;/span&gt; &amp;#61; pygame.font.Font(None, &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置字体大小&lt;/span&gt;\n\n    &lt;span class=\"hljs-attr\"&gt;bg&lt;/span&gt; &amp;#61; pygame.image.load(&lt;span class=\"hljs-string\"&gt;&amp;#34;bg.jpg&amp;#34;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 加载图片“bg.jpg“命名为”bg“&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;mouth_open&lt;/span&gt; &amp;#61; pygame.image.load(&lt;span class=\"hljs-string\"&gt;&amp;#34;mouth_open.png&amp;#34;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 加载图片“mouth_open.png”并命名为”mouth_open“&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;mouth_close&lt;/span&gt; &amp;#61; pygame.image.load(&lt;span class=\"hljs-string\"&gt;&amp;#34;mouth_close.png&amp;#34;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 加载图片“mouth_close.png”并命名为”mouth_close“&lt;/span&gt;\n    screen.blit(bg, (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;))  &lt;span class=\"hljs-comment\"&gt;# 显示背景图片“bg.jpg”&lt;/span&gt;\n    screen.blit(mouth_close, (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;))  &lt;span class=\"hljs-comment\"&gt;# 显示背景图片“mouth_close.png”&lt;/span&gt;\n    pygame.display.update()  &lt;span class=\"hljs-comment\"&gt;# 更新pygame窗口&lt;/span&gt;\n\n    while True: &lt;span class=\"hljs-comment\"&gt;#开启循环&lt;/span&gt;\n\n        for event &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pygame.event.get():    &lt;span class=\"hljs-comment\"&gt;#开启键盘监测&lt;/span&gt;\n\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event.&lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt; &amp;#61;&amp;#61; QUIT:   &lt;span class=\"hljs-comment\"&gt;#如果点击窗口的X&lt;/span&gt;\n                pygame.quit()   &lt;span class=\"hljs-comment\"&gt;#卸载pygame模块&lt;/span&gt;\n                sys.exit()  &lt;span class=\"hljs-comment\"&gt;#结束程序&lt;/span&gt;\n\n            elif event.&lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt; &amp;#61;&amp;#61; KEYDOWN:  &lt;span class=\"hljs-comment\"&gt;#否则如果键盘按下&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event.&lt;span class=\"hljs-attr\"&gt;key&lt;/span&gt; &amp;#61;&amp;#61; K_s: &lt;span class=\"hljs-comment\"&gt;#如果按下“S”键&lt;/span&gt;\n                    screen.blit(mouth_open, (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;#显示图片“mouth_open”&lt;/span&gt;\n                    &lt;span class=\"hljs-comment\"&gt;# pygame.display.update()   #更新pygame窗口&lt;/span&gt;\n                    time.sleep(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)   &lt;span class=\"hljs-comment\"&gt;#等待3秒&lt;/span&gt;\n                    screen.blit(mouth_close, (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;))    &lt;span class=\"hljs-comment\"&gt;#显示图片“mouth_open”&lt;/span&gt;\n                    &lt;span class=\"hljs-comment\"&gt;# pygame.display.update()   #更新pygame窗口&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;# pygame.display.update() #更新pygame窗口&lt;/span&gt;\n\ndef refresh (): &lt;span class=\"hljs-comment\"&gt;#创建函数&amp;#xff1a;刷新窗口&amp;#xff08;为多线程用&amp;#xff09;&amp;#xff0c;命名为“refresh”&lt;/span&gt;\n    pygame.init()  &lt;span class=\"hljs-comment\"&gt;# 初始化pygame&lt;/span&gt;\n    while True: &lt;span class=\"hljs-comment\"&gt;#开启循环&lt;/span&gt;\n        pygame.display.update()  &lt;span class=\"hljs-comment\"&gt;#更新pygame窗口&lt;/span&gt;\n        time.sleep(&lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#设置0.1秒刷新一次pygame窗口&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# print(&amp;#34;刷新成功&amp;#xff01;&amp;#34;)    告诉我&amp;#xff1a;刷新成功了&lt;/span&gt;\n\n&lt;span class=\"hljs-attr\"&gt;thread1&lt;/span&gt; &amp;#61; threading.Thread(&lt;span class=\"hljs-attr\"&gt;target&amp;#61;&lt;/span&gt; refresh) &lt;span class=\"hljs-comment\"&gt;#创建多线程&amp;#xff0c;运行函数&amp;#xff1a;“refresh”&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;thread2&lt;/span&gt; &amp;#61; threading.Thread(&lt;span class=\"hljs-attr\"&gt;target&amp;#61;&lt;/span&gt; window)  &lt;span class=\"hljs-comment\"&gt;#创建多线程&amp;#xff0c;运行函数&amp;#xff1a;“window”&lt;/span&gt;\n\nthread1.start()   &lt;span class=\"hljs-comment\"&gt;#启动线程1&lt;/span&gt;\nthread2.start()   &lt;span class=\"hljs-comment\"&gt;#启动线程2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "模块化开发", "Question": ["多线程下按键检测用不了", ["大家好", "最近我在和我亲爱的同学编程一个项目", "可是遇到了一些“小”问题——pygame按键检测莫名的用不了了！", "下面是源码（还有一些图片素材就没上传）", "\n", "'''主程序（其他的都是图片素材）'''", "\n", "import", " pygame, sys, time, threading    ", "#引库”pygame“、”sys“、”time“、“threading”", "\n", "from", " pygame.constants ", "import", " * \n\npygame.init()   ", "#初始化pygame", "\n", "list", " = []   ", "#创建列表，命名为“list”", "\npygame.display.set_caption(", "\"桌面宠物2023春节限定\"", ")  ", "#设置窗口标题", "\nscreen = pygame.display.set_mode((", "300", ", ", "300", "))    ", "#设置窗口大小", "\n\n", "# def playSound(musicFile):   #定义播放音乐", "\n", "#     sound = pygame.mixer.Sound(musicFile)", "\n", "#     sound.play()", "\n\nmyfont = pygame.font.Font(", "None", ",", "60", ")    ", "#设置字体大小", "\n", "'''加载图片'''", "\nbg = pygame.image.load(", "\"bg.jpg\"", ")    ", "#加载图片“bg.jpg“命名为”bg“", "\nmouth_open = pygame.image.load(", "\"mouth_open.png\"", ")    ", "#加载图片“mouth_open.png”并命名为”mouth_open“", "\nmouth_close = pygame.image.load(", "\"mouth_close.png\"", ")  ", "#加载图片“mouth_close.png”并命名为”mouth_close“", "\nscreen.blit(bg, (", "0", ", ", "0", ")) ", "#显示背景图片“bg.jpg”", "\nscreen.blit(mouth_close, (", "0", ", ", "0", "))    ", "#显示背景图片“mouth_close.png”", "\npygame.display.update()  ", "# 更新pygame窗口", "\n\n", "def", " ", "refresh", " (): ", "#创建函数：刷新窗口（为多线程用），命名为“refresh”", "\n    ", "while", " ", "True", ": ", "#开启循环", "\n        pygame.display.update()  ", "#更新pygame窗口", "\n        time.sleep(", "1", ") ", "#设置1秒刷新一次pygame窗口", "\n        ", "# print(\"刷新成功！\")    告诉我：刷新成功了", "\n\n", "def", " ", "window", " ():   ", "#创建函数：主程序（为多线程用），命名为“window”", "\n    ", "while", " ", "True", ": ", "#开启循环", "\n\n        ", "for", " event ", "in", " pygame.event.get():    ", "#开启键盘监测", "\n\n            ", "if", " event.", "type", " == QUIT:   ", "#如果点击窗口的X", "\n                pygame.quit()   ", "#卸载pygame模块", "\n                sys.exit()  ", "#结束程序", "\n\n            ", "elif", " event.", "type", " == KEYDOWN:  ", "#否则如果键盘按下", "\n                ", "if", " event.key == K_s: ", "#如果按下“S”键", "\n                    screen.blit(mouth_open, (", "0", ", ", "0", ")) ", "#显示图片“mouth_open”", "\n                    pygame.display.update()   ", "#更新pygame窗口", "\n                    time.sleep(", "3", ")   ", "#等待3秒", "\n                    screen.blit(mouth_close, (", "0", ", ", "0", "))    ", "#显示图片“mouth_open”", "\n                    pygame.display.update()   ", "#更新pygame窗口", "\n\n        pygame.display.update() ", "#更新pygame窗口", "\n\nthread1 = threading.Thread(target= refresh) ", "#创建多线程，运行函数：“refresh”", "\nthread2 = threading.Thread(target= window)  ", "#创建多线程，运行函数：“window”", "\n\n", "# thread1.start()   #启动线程1", "\nthread2.start()   ", "#启动线程2", "\n", "\n", "经过我不懈的努力下，我发现原因是pygame与threading两个库不兼容！（初步断定）", "pygame按键检测在自定义函数下可以正常使用，正常情况下可以使用。", "python版本3.7.8", "多线程库  threading", "pygame版本2.1.2", "在这里提出问题，希望解答，谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;根据你提供的代码&amp;#xff0c;你的问题可能是因为ABC_ref()函数没有调用导致的。&lt;/p&gt;\n&lt;p&gt;在ABC_ref()函数中&amp;#xff0c;你初始化了e_A、e_B、e_C、i_A、i_B和i_C变量。但是&amp;#xff0c;这些变量的值只在ABC_ref()函数中被初始化。如果你在其他函数中使用这些变量&amp;#xff0c;它们将保持它们的初始值&amp;#xff0c;除非你在其他地方重新赋值。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;当你调用formula()函数时&amp;#xff0c;它将使用ABC_ref()函数中的变量的初始值&amp;#xff0c;而不是在ABC_ref()函数中更新的值。&lt;/p&gt;\n&lt;p&gt;解决这个问题的方法是在调用formula()函数之前先调用ABC_ref()函数&amp;#xff0c;以确保变量的值已经被正确地初始化。&lt;br /&gt;你可以在调用formula()函数之前先调用ABC_ref()函数&amp;#xff0c;以确保变量的值已经被正确地初始化。例如&amp;#xff0c;你可以在main函数中先调用ABC_ref()函数&amp;#xff0c;然后再调用formula()函数。以下是示例代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;DSP2833x_Device.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;DSP2833x_Examples.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;init_sin.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;math.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;test1.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; i_A, i_B, i_C;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; e_A, e_B, e_C;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; e_alpha;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; e_beta;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; i_alpha;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; i_beta;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Ttype_ps;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Ttype_qs;\n\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Ep;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Eq;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ABC_ref&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;359&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        e_A &amp;#61; &lt;span class=\"hljs-number\"&gt;311&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*i/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n        e_B &amp;#61; &lt;span class=\"hljs-number\"&gt;311&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*(i&lt;span class=\"hljs-number\"&gt;-120&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n        e_C &amp;#61; &lt;span class=\"hljs-number\"&gt;311&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*(i&amp;#43;&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n \n        i_A &amp;#61; &lt;span class=\"hljs-number\"&gt;6.8&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*i/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n        i_B &amp;#61; &lt;span class=\"hljs-number\"&gt;6.8&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*(i&lt;span class=\"hljs-number\"&gt;-120&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n        i_C &amp;#61; &lt;span class=\"hljs-number\"&gt;6.8&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*M_PI*(i&amp;#43;&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;formula&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    e_alpha &amp;#61; e_A&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;*e_B&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;*e_C;\n    e_beta &amp;#61; &lt;span class=\"hljs-number\"&gt;1.7320508076&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;*e_B&lt;span class=\"hljs-number\"&gt;-1.7320508076&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;*e_C;\n    e_alpha &amp;#61; &lt;span class=\"hljs-number\"&gt;0.6666666667&lt;/span&gt;*e_alpha;\n    e_beta &amp;#61; &lt;span class=\"hljs-number\"&gt;0.6666666667&lt;/span&gt;*e_beta;\n \n    i_alpha &amp;#61; i_A&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;*i_B&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;*i_C;\n    i_beta &amp;#61; &lt;span class=\"hljs-number\"&gt;1.7320508076&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;*i_B&lt;span class=\"hljs-number\"&gt;-1.7320508076&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;*i_C;\n    i_alpha &amp;#61; &lt;span class=\"hljs-number\"&gt;0.6666666667&lt;/span&gt;*i_alpha;\n    i_beta &amp;#61; &lt;span class=\"hljs-number\"&gt;0.6666666667&lt;/span&gt;*i_beta;\n \n    Ttype_ps &amp;#61; e_alpha*i_alpha&amp;#43;e_beta*i_beta;\n    Ttype_qs &amp;#61; e_beta*i_alpha-e_alpha*i_beta;\n    Ttype_ps &amp;#61; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*Ttype_ps;\n    Ttype_qs &amp;#61; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*Ttype_qs;\n \n    Ep &amp;#61; Pref-Ttype_ps;\n    Eq &amp;#61; Qref-Ttype_qs;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;InitSysCtrl&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;InitPieCtrl&lt;/span&gt;();\n    DINT;\n    &lt;span class=\"hljs-built_in\"&gt;InitPieVectTable&lt;/span&gt;();\n \n    &lt;span class=\"hljs-built_in\"&gt;ABC_ref&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//调用ABC_ref()函数&amp;#xff0c;确保变量的值已经被正确地初始化&lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        formula(); &lt;span class=\"hljs-comment\"&gt;//在循环中调用formula()函数&lt;/span&gt;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个示例代码中&amp;#xff0c;我们在main函数中先调用ABC_ref()函数&amp;#xff0c;然后在循环中调用formula()函数。这样可以确保变量的值已经被正确地初始化&amp;#xff0c;而且可以随着时间的推移更新这些变量的值。&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["CCS代码编写问题请教", ["\n", "#", "include", " ", "\"DSP2833x_Device.h\"", "     ", "// DSP2833x Headerfile Include File", "\n", "#", "include", " ", "\"DSP2833x_Examples.h\"", "   ", "// DSP2833x Examples Include File", "\n", "#", "include", " ", "\"init_sin.h\"", "\n", "#", "include", " ", "\"math.h\"", "\n", "#", "include", " ", "\"test1.h\"", "\n", "extern", " ", "float", "   e_A, e_B, e_C;", "//实际电压值", "\n", "extern", " ", "float", "   i_A, i_B, i_C;", "//实际电流值", "\n", "//extern float VAref,VBref,VCref;", "\n", "//extern float Viref,ViBref,ViCref;", "\n\n", "void", " ", "ABC_ref", "(", "void", ")", "    ", "//初始化正弦波数据", "\n", "{\n   ", "int", " i;\n   ", "for", "(i=", "0", ";i<=", "359", ";i++)\n   {\n", "//     e_A = 311*sin(2*PI*i/360)*0.0195789;", "\n", "//     e_B = 311*sin(2*PI*(i-120)/360)*0.019804;", "\n", "//     e_C = 311*sin(2*PI*(i+120)/360)*0.0196121;", "\n", "//", "\n", "//     i_A = 6.8*sin(2*PI*i/360)*0.0039398;", "\n", "//     i_B = 6.8*sin(2*PI*(i-120)/360)*0.0035504;", "\n", "//     i_C = 6.8*sin(2*PI*(i+120)/360)*0.0037290;", "\n       e_A = ", "311", "*", "sin", "(", "2", "*M_PI*i/", "360", ");\n       e_B = ", "311", "*", "sin", "(", "2", "*M_PI*(i", "-120", ")/", "360", ");\n       e_C = ", "311", "*", "sin", "(", "2", "*M_PI*(i+", "120", ")/", "360", ");\n\n       i_A = ", "6.8", "*", "sin", "(", "2", "*M_PI*i/", "360", ");\n       i_B = ", "6.8", "*", "sin", "(", "2", "*M_PI*(i", "-120", ")/", "360", ");\n       i_C = ", "6.8", "*", "sin", "(", "2", "*M_PI*(i+", "120", ")/", "360", ");\n   }\n}\n", "\n", "#", "include", " ", "\"DSP2833x_Device.h\"", "     ", "// DSP2833x Headerfile Include File", "\n", "#", "include", " ", "\"DSP2833x_Examples.h\"", "   ", "// DSP2833x Examples Include File", "\n", "#", "include", " ", "\"test1.h\"", "\n", "#", "include", " ", "\"math.h\"", "\n", "#", "include", " ", "\"init_sin.h\"", "\n\n", "extern", " ", "float", " i_A,i_B,i_C;\n", "extern", " ", "float", " e_A, e_B, e_C;\n", "extern", " ", "float", " e_alpha;\n", "extern", " ", "float", " e_beta;\n", "extern", " ", "float", " i_alpha;\n", "extern", " ", "float", " i_beta;\n", "extern", " ", "float", " Ttype_ps;\n", "extern", " ", "float", " Ttype_qs;\n\n", "extern", " ", "float", " Ep;\n", "extern", " ", "float", " Eq;\n\n", "//extern float u_alpha0;", "\n", "//extern float u_beta0;", "\n", "//extern float center_sector_alpha[6];", "\n", "//extern float center_sector_beta[6];", "\n", "//extern unsigned char N;", "\n", "//Uint16 j=0;", "\n", "//", "\n\n", "void", " ", "formula", "(", "void", ")", "\n", "{\n  e_alpha = e_A", "-0.5", "*e_B", "-0.5", "*e_C;                              ", "//", "\n  e_beta = ", "1.7320508076", "/", "2.0", "*e_B", "-1.7320508076", "/", "2.0", "*e_C;         ", "//", "\n  e_alpha = ", "0.6666666667", "*e_alpha;\n  e_beta = ", "0.6666666667", "*e_beta;\n\n  i_alpha = i_A", "-0.5", "*i_B", "-0.5", "*i_C;                              ", "//", "\n  i_beta = ", "1.7320508076", "/", "2.0", "*i_B", "-1.7320508076", "/", "2.0", "*i_C;         ", "//", "\n  i_alpha = ", "0.6666666667", "*i_alpha;\n  i_beta = ", "0.6666666667", "*i_beta;\n\n  Ttype_ps = e_alpha*i_alpha+e_beta*i_beta;\n  Ttype_qs = e_beta*i_alpha-e_alpha*i_beta;             ", "//瞬时功率理论", "\n  Ttype_ps = ", "1.5", "*Ttype_ps;\n  Ttype_qs = ", "1.5", "*Ttype_qs;\n\n  Ep = Pref-Ttype_ps;\n  Eq = Qref-Ttype_qs;\n}\n\n", "\n", "#include \"DSP2833x_Device.h\"     // DSP2833x Headerfile Include File", "\n", "#include \"DSP2833x_Examples.h\"   // DSP2833x Examples Include File", "\n", "#include \"math.h\"", "\n", "#include \"test1.h\"", "\n", "#include \"init_sin.h\"", "\n\n\nfloat   e_A, e_B, e_C;", "//", "实际电压值\nfloat   i_A, i_B, i_C;", "//", "实际电流值\n", "//", "float Js;\n", "//", "float J_opt;\n\nfloat e_alpha;\nfloat e_beta;\nfloat i_alpha;\nfloat i_beta;\nfloat Ttype_ps;\nfloat Ttype_qs;\nfloat Ep;\nfloat Eq;\nfloat fp;\nfloat fq;\n", "//", "float u_alpha0;\n", "//", "float u_beta0;\n", "//", "float center_sector_alpha[", "6", "];\n", "//", "float center_sector_beta[", "6", "];\n", "//u", "nsigned char N=", "0", ";\n\n\n", "#define JDQ_XH  GpioDataRegs.GPACLEAR.bit.GPIO31 = 1  //继电器吸合", "\n", "#define JDQ_DK  GpioDataRegs.GPASET.bit.GPIO31 = 1    //继电器断开", "\n\nvoid configtestled(void);\nvoid configJDQ(void);\ninterrupt void cpu_timer0_isr(void);\n\n\n\nint main(void)\n{\n    InitSysCtrl();\n\n    configtestled();\n    configJDQ();\n\n    InitXintf();                ", "//", "  配置外部存储器的访问时序\n        DINT;                       ", "//", "禁用CPU中断\n        InitPieCtrl();              ", "//", " 初始化中断控制寄存器，禁用所有PIE中断并清楚标志位\n        IER = ", "0", "x0000;               ", "//", " 关闭总中断\n        IFR = ", "0", "x0000;               ", "//", " 清除中断信号\n        InitPieVectTable();         ", "//", " 初始化中断向量表\n\n        EALLOW;\n              PieVectTable.TINT0 = &cpu_timer0_isr;\n    ", "//", "        PieVectTable.SCIRXINTB = &sci485_isr;\n        EDIS;\n\n", "//", "        EALLOW;\n", "//", "            SysCtrlRegs.PCLKCR0.bit.TBCLKSYNC=", "0", ";    ", "//", "同步PWM时钟信号\n", "//", "        EDIS;\n", "//", "\n", "//", "\n", "//", "\n", "//", "        EALLOW;\n", "//", "            SysCtrlRegs.PCLKCR0.bit.TBCLKSYNC=", "1", ";    ", "//", "同步PWM时钟信号\n", "//", "        EDIS;\n\n        InitCpuTimers();\n    ", "//", "  ConfigCpuTimer(&CpuTimer0, ", "150", ", ", "33.3", "); ", "//", "周期", "10", "us，开关频率", "18", "kHz\n        ConfigCpuTimer(&CpuTimer0, ", "150", ", ", "100", ");    ", "//", "周期", "10", "us，开关频率", "10", "kHz\n        StartCpuTimer0();\n    ", "//", "    Init_sci_485_config();\n\n        IER |= M_INT1;", "//", "使能CPU INT1和INT9\n        IER |= M_INT9;\n        PieCtrlRegs.PIECTRL.bit.ENPIE = ", "1", ";   ", "//", "使能pie模块\n        PieCtrlRegs.PIEIER1.bit.INTx7 = ", "1", ";   ", "//", "Enable TINT0(", "1.7", ")\n        PieCtrlRegs.PIEIER9.bit.INTx3 = ", "1", ";   ", "//", "Enable SCIRXINTB(", "9.3", ")\n       ", "//", "↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑\n\n            EINT;\n            ERTM;\n            CpuTimer0Regs.TCR.bit.TSS = ", "0", "; ", "//", "立即启动定时器", "0", "\n\n            JDQ_XH;\n\n\n        ", "//", "    balance_flag = ", "0", ";\n\n            ", "for", "(;;)\n            {\n                ", "if", "(CpuTimer0Regs.TCR.bit.TIF == ", "0", ")", "//i", "f(current_flag == ", "1", ")     ", "//", " 确保中断已更新全部数据\n                {\n                ;\n                }\n                ", "else", "\n                {;}\n            }\n\n}\n\ninterrupt void cpu_timer0_isr(void)\n{\n", "//", "    semaphore = ", "1", "; ", "//", " 中断服务函数中设置信号量\n     ABC_ref();\n     formula();   ", "//", "在循环中调用formula()函数\n", "//", "    sector_partition();\n\n\n\n    CpuTimer0.InterruptCount = (CpuTimer0.InterruptCount >= ", "18000", ")? ", "0", ":CpuTimer0.InterruptCount+", "1", ";   ", "//", "1", "s\n\n\n    ", "//", " Acknowledge this interrupt to receive more interrupts from group ", "1", "\n    PieCtrlRegs.PIEACK.all |= PIEACK_GROUP1;\n    CpuTimer0Regs.TCR.bit.TIF = ", "1", ";  ", "//", "写", "1", "清除中断标志（该位为", "1", "表明进入中断，该位为", "0", "表明中断函数结束）\n    CpuTimer0Regs.TCR.bit.TRB = ", "1", ";\n}\n\n\n", "\n", "CCS代码问题请教。以上两段代码是我写的两段功能函数，但是运行时第二段代码中的变量不随着第一段代码中的变量变化，如下图所示。中断没有问题。请问这是什么原因呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include &amp;lt;linux/platform_device.h&amp;gt;&lt;br /&gt;是旧3.0时代之前的产物了&amp;#xff0c;有了设备树&amp;#xff0c;就开始避免使用mach了。&lt;br /&gt;而且你这个驱动&amp;#xff0c;也没有用到platform啊&amp;#xff1f;这个头文件不加也行啊&lt;/p&gt;", "Konwledge_Point": "模块化开发", "Question": ["make编译时，头文件找不到", ["问题遇到的现象和发生背景", "\n", "在linux里写led的gpio驱动，", "\n", "make编译时，头文件找不到\n```c\n", "#", "include", " ", "<linux/init.h>", "\n", "#", "include", " ", "<linux/module.h>", "\n", "#", "include", " ", "<linux/cdev.h>", "\n", "#", "include", " ", "<linux/fs.h>", "\n", "#", "include", " ", "<linux/device.h>", "\n", "#", "include", " ", "<asm/uaccess.h>", "\n", "#", "include", " ", "<linux/ioctl.h>", "\n", "#", "include", " ", "<linux/io.h>", "\n", "#", "include", " ", "<mach/platform.h>", "\n\n", "#", "define", " LED0_ON _IO(", "'j'", ",0)", "\n", "#", "define", " LED0_OFF _IO(", "'j'", ",1)", "\n", "#", "define", " LED1_ON _IO(", "'j'", ",2)", "\n", "#", "define", " LED1_OFF _IO(", "'j'", ",3)", "\n", "#", "define", " LED2_ON _IO(", "'j'", ",4)", "\n", "#", "define", " LED2_OFF _IO(", "'j'", ",5)", "\n", "#", "define", " LED3_ON _IO(", "'j'", ",6)", "\n", "#", "define", " LED3_OFF _IO(", "'j'", ",7)", "\n\n", "#", "define", " LED_MINOR 0", "\n\n", "//声明IO内存映射地址", "\n", "void", " __iomem *gpioe_base = ", "NULL", ";\n", "void", " __iomem *gpioc_base = ", "NULL", ";\n\n", "//设备号", "\n", "dev_t", " dev;\n", "//声明cdev", "\n", "struct", " ", "cdev", " led_cdev;\n", "//设备类指针", "\n", "struct", " ", "class", " *led_class;\n", "//设备指针", "\n", "struct", " ", "device", " *led_device;\n\n", "/*\ninode是文件的节点结构，用来存储文件静态信息\n文件创建时，内核中就会有一个inode结构\nfile结构记录的是文件打开的信息\n文件被打开时内核就会创建一个file结构\n*/", "\n", "int", " ", "led_open", "(", "struct", " inode *inode, ", "struct", " file *filp)", "\n", "{\n    ", "printk", "(", "\"enter led_open!\\n\"", ");\n\n    ", "return", " ", "0", ";\n}\n\n", "long", " ", "led_ioctl", "(", "struct", " file *filp, ", "unsigned", " ", "int", " cmd, ", "unsigned", " ", "long", " data)", "\n", "{\n    ", "printk", "(", "\"enter led_ioctl!\\n\"", ");\n\n    ", "//不同的命令对应不同的操作", "\n    ", "switch", "(cmd){\n        ", "case", " LED0_ON:\n            ", "printk", "(", "\"LED0_ON!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioe_base)&~(", "0x1", "<<", "13", "),gpioe_base);\n            ", "break", ";\n        ", "case", " LED0_OFF:\n            ", "printk", "(", "\"LED0_OFF!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioe_base)|(", "0x1", "<<", "13", "),gpioe_base);\n            ", "break", ";\n        ", "case", " LED1_ON:\n            ", "printk", "(", "\"LED1_ON!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)&~(", "0x1", "<<", "17", "),gpioc_base);\n            ", "break", ";\n        ", "case", " LED1_OFF:\n            ", "printk", "(", "\"LED1_OFF!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)|(", "0x1", "<<", "17", "),gpioc_base);\n            ", "break", ";\n        ", "case", " LED2_ON:\n            ", "printk", "(", "\"LED2_ON!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)&~(", "0x1", "<<", "8", "),gpioc_base);\n            ", "break", ";\n        ", "case", " LED2_OFF:\n            ", "printk", "(", "\"LED2_OFF!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)|(", "0x1", "<<", "8", "),gpioc_base);\n            ", "break", ";\n        ", "case", " LED3_ON:\n            ", "printk", "(", "\"LED3_ON!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)&~(", "0x1", "<<", "7", "),gpioc_base);\n            ", "break", ";\n        ", "case", " LED3_OFF:\n            ", "printk", "(", "\"LED3_OFF!\\n\"", ");\n            ", "iowrite32", "(", "ioread32", "(gpioc_base)|(", "0x1", "<<", "7", "),gpioc_base);\n            ", "break", ";\n        ", "default", ":\n            ", "return", " -EINVAL;\n    }\n\n    ", "return", " ", "0", ";\n}\n\n", "int", " ", "led_release", "(", "struct", " inode *inode, ", "struct", " file *filp)", "\n", "{\n    ", "printk", "(", "\"enter led_release!\\n\"", ");\n\n    ", "return", " ", "0", ";\n}\n\n", "//声明操作函数集合", "\n", "struct", " ", "file_operations", " led_fops = {\n    .owner = THIS_MODULE,\n    .open = led_open,\n    .unlocked_ioctl = led_ioctl,", "//ioctl接口", "\n    .release = led_release,", "//对应用户close接口", "\n};\n\n", "//加载函数", "\n", "int", " ", "led_init", "(", "void", ")", "\n", "{\n    ", "int", " ret;\n    ", "// 1.注册字符设备驱动", "\n    ret = ", "register_chrdev", "(", "0", ", ", "\"led_demo\"", ", &led_fops);\n    ", "if", "(ret<", "0", "){\n        ", "printk", "(", "\"register_chrdev failed!\\n\"", ");\n        ", "goto", " failure_register_chrdev;\n    }\n    ", "//构建设备号", "\n    dev = ", "MKDEV", "(ret,LED_MINOR);\n\n    ", "printk", "(", "\"register_chrdev success!\\n\"", ");\n\n    ", "// 2.注册设备类", "\n    ", "/*成功会在/sys/class目录下出现led_class子目录*/", "\n    led_class = ", "class_create", "(THIS_MODULE, ", "\"led_class\"", ");\n    ", "if", "(", "IS_ERR", "(led_class)){\n        ", "printk", "(", "\"class_create failed!\\n\"", ");\n        ret = ", "PTR_ERR", "(led_class);\n        ", "goto", " failure_class_create;\n    }\n\n    ", "// 3.创建设备文件", "\n    led_device = ", "device_create", "(led_class, ", "NULL", ", dev,", "NULL", ", ", "\"led\"", ");\n    ", "if", "(", "IS_ERR", "(led_device)){\n        ", "printk", "(", "\"device_create failed!\\n\"", ");\n        ret = ", "PTR_ERR", "(led_device);\n        ", "goto", " failure_device_create;\n    }\n\n    ", "// 4.IO内存映射", "\n    gpioe_base = ", "ioremap", "(PHY_BASEADDR_GPIOE, SZ_64);\n    ", "if", "(", "IS_ERR_OR_NULL", "(gpioe_base)){", "//失败", "\n        ", "printk", "(", "\"ioremap failed!\\n\"", ");\n        ret = -ENOMEM;\n        ", "goto", " failure_gpioe_ioremap;\n    }\n\n    gpioc_base = ", "ioremap", "(PHY_BASEADDR_GPIOC, SZ_64);\n    ", "if", "(", "IS_ERR_OR_NULL", "(gpioc_base)){", "//失败", "\n        ", "printk", "(", "\"ioremap failed!\\n\"", ");\n        ret = -ENOMEM;\n        ", "goto", " failure_gpioc_ioremap;\n    }\n    \n    ", "//初始化", "\n    ", "//E alt0  26 27位清0   addr:base+0x20", "\n    ", "iowrite32", "(", "ioread32", "(gpioe_base+", "0x20", ")&~(", "0x3", "<<", "26", "),gpioe_base+", "0x20", ");\n    ", "//C alt0 14-17位0101  alt1 2-3位01", "\n    ", "iowrite32", "((", "ioread32", "(gpioc_base+", "0x20", ")&~(", "0xf", "<<", "14", "))|(", "0x5", "<<", "14", "),gpioc_base+", "0x20", ");\n    ", "iowrite32", "((", "ioread32", "(gpioc_base+", "0x24", ")&~(", "0x3", "<<", "2", "))|(", "0x1", "<<", "2", "),gpioc_base+", "0x24", ");\n    \n    ", "//E outenb 13位 置1   addr:base+0x04", "\n    ", "iowrite32", "(", "ioread32", "(gpioe_base+", "0x04", ")|(", "0x1", "<<", "13", "),gpioe_base+", "0x04", ");\n    ", "//C outenb 7,8,17位置1 ", "\n    ", "iowrite32", "(", "ioread32", "(gpioc_base+", "0x04", ")|(", "0x3", "<<", "7", ")|(", "0x1", "<<", "17", "),gpioc_base+", "0x04", ");\n    ", "/*\n    u32 data = ioread32(gpioc_base+0x04);\n    data |= (0x3<<7)|(0x1<<17);\n    iowrite32(data,gpioc_base+0x04);\n    */", "\n    \n    ", "//out      13位 置1   addr:base", "\n    ", "iowrite32", "(", "ioread32", "(gpioe_base)|(", "0x1", "<<", "13", "),gpioe_base);\n    ", "iowrite32", "(", "ioread32", "(gpioc_base)|(", "0x3", "<<", "7", ")|(", "0x1", "<<", "17", "),gpioc_base);\n\n    ", "return", " ", "0", ";\n\nfailure_gpioc_ioremap:\n    ", "iounmap", "(gpioe_base);\nfailure_gpioe_ioremap:\n    ", "device_destroy", "(led_class, dev);\nfailure_device_create:\n    ", "class_destroy", "(led_class);", "// 3", "\nfailure_class_create:\n    ", "unregister_chrdev", "(", "MAJOR", "(dev), ", "\"led_demo\"", ");", "// 2", "\nfailure_register_chrdev:\n    ", "return", " ret;\n}\n\n", "//卸载函数", "\n", "void", " ", "led_exit", "(", "void", ")", "\n", "{\n    ", "//解除IO映射", "\n    ", "iounmap", "(gpioc_base);\n    ", "iounmap", "(gpioe_base);\n    ", "//销毁设备文件", "\n    ", "device_destroy", "(led_class, dev);\n    ", "//注销设备类", "\n    ", "class_destroy", "(led_class);\n    ", "//注销字符设备驱动", "\n    ", "unregister_chrdev", "(", "MAJOR", "(dev), ", "\"led_demo\"", ");\n}\n\n", "//声明为模块的入口和出口", "\n", "module_init", "(led_init);\n", "module_exit", "(led_exit);\n\n\n", "MODULE_LICENSE", "(", "\"GPL\"", ");", "//GPL模块许可证", "\n", "MODULE_AUTHOR", "(", "\"yit\"", ");", "//作者", "\n", "MODULE_VERSION", "(", "\"1.0\"", ");", "//版本", "\n", "MODULE_DESCRIPTION", "(", "\"led driver!\"", ");", "//描述信息", "\n\n", "\n", "###### 遇到的现象和发生背景，请写出第一个错误信息", "\n", "###### 用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n\n```c\n", "#如果已定义KERNELRELEASE，说明是由内核构造系统调用的", "\n", "#可以利用内建语句", "\n\nobj-m:=led_drv.o\n\nKERNELDIR := ", "/home/u", "ser", "/linux/", "rv/kernel\nPWD := $(shell pwd)\n\nCROSS_COMPILE=", "/home/u", "ser", "/linux/", "rv", "/prebuilts/g", "cc", "/linux-x86/", "arm", "/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf/", "bin/arm-linux-gnueabihf-\n\nall: \n        make -C $(KERNELDIR) M=$(PWD) ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE) modules \n\nclean:\n        rm -rf *.ko *.o .t* .m* .*.cmd *.mod.c *.order *.symvers\n\n", "\n", "运行结果及详细报错内容", "\n", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "程序设计"}
