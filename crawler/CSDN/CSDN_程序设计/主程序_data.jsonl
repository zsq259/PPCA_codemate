{"Answer": "&lt;p&gt;这个要查看README.md文档说明&amp;#xff0c;这个每个人入口命名都不一样。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Github上下载的python文件怎么找到主程序", ["如题，有的时候在github上下载的一些项目有大量文件，但是找不到主程序，就不能配置编译器然后运行，想问各位怎么找到主程序。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; isleap(m):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; and m%&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) or m%&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;True&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;False&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nm &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(input())\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n  \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; isleap(m):\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(m)\n        &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    m&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;主程序就是判断和and or的搭配使用。&lt;br /&gt;思路&amp;#xff1a;先是一个可以return true false 的函数&amp;#xff0c;这个用来判断是不是闰年&amp;#xff0c;然后获取输入的年份。对这个年份进行&amp;#43;1 的while循环&amp;#xff0c;同时用另一个变量记录得到的闰年数量&amp;#xff0c;到10就停止循环&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["定义一个函数isLeap(y)，功能为判断参数y是否为闰年。再编写主程序，输入一个年份，输出从这个年份开始的10个闰年。", ["编写主程序，输入一个年份，输出从这个年份开始的10个闰年。", "主程序的公式是什么？设计思路是什么呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;split&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *t1, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *t2)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(*s!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*s&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; *s&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n            *t1&amp;#43;&amp;#43; &amp;#61; *s&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            *t2&amp;#43;&amp;#43; &amp;#61; *s&amp;#43;&amp;#43;;\n        }\n    *t1&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n    *t2&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;], s1[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;], s2[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]; \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个字串&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;(s,s1,s2);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n%s&amp;#34;&lt;/span&gt;,s1,s2);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["写一个函数，该函数从主程序接受一个字符串", ["写一个函数，该函数从主程序接受一个字符串，将字符串中的数字和其它字符分开，形成二个字符串输出"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/504673978.html", "Konwledge_Point": "主程序", "Question": ["怎么才能从用户定义形的函数中调用被调用主程序中使用的变量", ["怎么才能从用户定义形的函数中调用被调用主程序中使用的变量，如果变量名获取得到后，然后下面怎么获取变量的值呢？用代理方式怎么获取？"]], "Tag": "程序设计"}
{"Answer": "将 主程序的对象传给 Dll 中的类里面就好了（引用类型）\r\n\r\n                 主要是 主程序的类与 Dll 的类都需要继承相同的基类才行\r\n\t\t\t\t\t\t\t\t不然 对象传过去也没有办法用对应的类型接收", "Konwledge_Point": "主程序", "Question": ["C# 主程序调用DLL文件之后，点击DLL窗体中的一个按钮，调用主程序中的某个类，然后更新数据？", ["C# 主程序调用DLL文件之后，点击DLL窗体中的一个按钮，调用主程序中的某个类，然后更新数据？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这个需要在主程序最前面声明&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;global&lt;/span&gt; low upp\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;以及紧邻函数的那一行声明&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[fp, f, g]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;opt1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;global&lt;/span&gt; low upp\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助望采纳呢&lt;br /&gt;然后就可以用了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["子程序怎么直接调用主程序计算的数据", ["怎么不改变第一行，在下面将low在主程序中计算的结果赋值给low"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/1834903760616622460.html", "Konwledge_Point": "主程序", "Question": ["因为函数里调用数组，数组定义在主程序里，通过参数传入，所以这个数组还是主程序的数组", ["因为函数里调用数组，数组定义在主程序里，通过参数传入，所以这个数组还是主程序的数组，所以不需要重新分配是不是？怎么实现调用函数的数组和原来的数组分开来存储？"]], "Tag": "程序设计"}
{"Answer": "既然都是C#，就直接用委托好了。\r\n\r\ndll里\r\npublic class A\r\n{\r\npublic void calltwice(Action act)\r\n{\r\nact();\r\nact();\r\n}\r\n}\r\n主程序\r\npublic class Program\r\n{\r\nstatic void MyFunc()\r\n{\r\nConsole.WriteLine(\"hello world!\");\r\n}\r\nstatic void Main()\r\n{\r\nA a = new A();\r\na.calltwice(MyFunc);\r\n}\r\n}", "Konwledge_Point": "主程序", "Question": ["C#DLL如何调用C#主程序的回调函数？", ["网上大多都是，C#委托实现C++ Dll中的回调函数。有没有C#DLL如何调用C#主程序的回调函数？"]], "Tag": "程序设计"}
{"Answer": "你定义成全局变量，作为属性传给控件，控件调用返回", "Konwledge_Point": "主程序", "Question": ["vb编程语言的ocx控件怎么从主程序exe文件的内存中拿到变量？    ", ["vb编程语言的ocx控件怎么从主程序exe文件的内存中拿到变量？怎么实现ocx和exe变量的双向更新呢？"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/168936704.html", "Konwledge_Point": "主程序", "Question": ["vb绕过参数调用用指令的方法调用主程序的变量，可以使用数组传递么？", ["vb绕过参数调用用指令的方法调用主程序的变量，可以使用数组传递么？那么数组怎么传变量的变量名呢？"]], "Tag": "程序设计"}
{"Answer": "http://bbs.csdn.net/topics/390765851", "Konwledge_Point": "主程序", "Question": ["函数里的变量主程序读不到怎么办？怎么直接修改用户自定义型函数的变量？", ["函数里的变量主程序读不到怎么办？怎么直接修改用户自定义型函数的变量？怎么通过跳转语句实现传输变量给函数？"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/1691295538755678348.html", "Konwledge_Point": "主程序", "Question": ["怎么使用代理的方式调用函数，并且把主程序的变量和函数的变量交换？", ["怎么使用代理的方式调用函数，并且把主程序的变量和函数的变量交换？代理的调用方式是什么意思？在vb中怎么实现？"]], "Tag": "程序设计"}
{"Answer": "http://my.oschina.net/u/249511/blog/91999?p=1", "Konwledge_Point": "主程序", "Question": ["动态函数库不同加载方式下对于使用主程序的共享堆的不同方式是怎么实现调用的？", ["动态函数库不同加载方式下对于使用主程序的共享堆的不同方式是怎么实现调用的？什么叫做不同德运行时堆，这是什么意思？"]], "Tag": "程序设计"}
{"Answer": "http://blog.sina.com.cn/s/blog_4ffc4c300102vmif.html", "Konwledge_Point": "主程序", "Question": ["请问VB语言中怎么给一个函数中调用主程序的变量，而不是通过参数的方法拿到值？", ["请问VB语言中怎么给一个函数中调用主程序的变量，而不是通过参数的方法拿到值？怎么从函数外直接给变量的值到函数里呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;from main import *&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["怎么在副程序使用主程序的变量", ["怎么把main的screen调用到fight里面，或者说调用到screen里面去", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; key[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;];\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;encrypt&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n &amp;amp;&amp;amp; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        *(p &amp;#43; i) &amp;#43;&amp;#61; key[i];\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; my_name[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;], ch;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;()) !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n        my_name[len&amp;#43;&amp;#43;] &amp;#61; ch;\n\n    my_name[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        key[i] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    }\n    &lt;span class=\"hljs-built_in\"&gt;encrypt&lt;/span&gt;(my_name, len);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, my_name);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["编写程序并完成上机调试实现以上功能要求。", ["在主程序中以自己的姓名拼音的连续大写英文字母初始化一个my_name[ ]字符数组，作为原码，以自己的9位学号为密钥定义整形数组变量key[9]，编写加密函数void encrypt(char*p，int n)，其中n为名字my_name[ ]字符数组的元素个数，对my_name逐个字符进行加密变换，即my_name[1]=my_name[1]+ key[1],my_name字符超出9个的尾部不做变换，在主程序中调用encrypt函数，并输出加密后的字符数组元素。编写程序并完成上机调试实现以上功能要求。（希望有人可以answer一下me，三克油！♥）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport string\ndef &lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(a):\n    &lt;span class=\"hljs-keyword\"&gt;su&lt;/span&gt; &amp;#61; 0\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; a:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; string.ascii_letters:\n            &lt;span class=\"hljs-keyword\"&gt;su&lt;/span&gt;&amp;#43;&amp;#61;1\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;su&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;()))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["自定义一个函数，使该函数能够统计出传递过来的字符串中英文字母的个数，在主程序中调用该函数，并输出统计结果", ["问题的现象描述有点复杂：明媚的早晨，连早饭都没心情吃的小废物点心，坐在电脑前看着空空如也的输入面板，回忆起过去的点点滴滴，猛然间意识到这是走马灯？！的时候我就明白了，python和我注定无缘。"]], "Tag": "程序设计"}
{"Answer": "子程序没有返回值，在C里面，子程序是特殊的函数，返回直接用return。如果不写，那么程序在执行完子程序最后一行会自动返回。", "Konwledge_Point": "主程序", "Question": ["一个关于子程序的问题，不太懂", ["子程序和函数的区别是什么？子程序返回主程序使用什么语句啊？子程序的作用是什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在已生成基础上再新加表生成&amp;#xff0c;这个可能追加生成了&amp;#xff0c;并没有覆盖掉原来生成的内容。所以每次新增的时候&amp;#xff0c;不要再去新增已经新增过的内容。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["总是报主程序运行失败", ["\n", "之前把逆向生成的全删了重新生成就行 但是我在已生成基础上再新加表生成 运行就又报这种错", "生成的东西少还没事 删了重新生成就行  东西多了谁顶得住啊", "求大佬解决一下"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use uppercase names for the fields. Only uppercase names are visible outside the package.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package something\n\ntype Credentials struct {\n   Key string\n   ResponseType  string\n   Subscription string\n   Locale string\n}\n\ntype WwogcParams struct {\n    Name string\n    Value  string\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In main:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n     \"something\"\n)\n\nfunc main() {\n    param1 := something.WwogcParams {\"q\",\"Delhi\"}\n    wwogc := []something.WwogcParams {param1}\n    credentials := something.Credentials {\n        Key: \"keykeykle\", \n        ResponseType: \"json\",\n        Subscription: \"premium\", \n        Locale: \"EN\"\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=\"https://golang.org/ref/spec#Exported_identifiers\" rel=\"nofollow\"&gt;Exported identifiers&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["我可以在包内部创建结构以在主程序中使用吗", ["\n\n", "I was porting my npm nodule to go package and at one place i need to do this.", "\n\n", "type Credentials struct {\n    key string\n    responseType  string\n    subscription string\n    locale string\n}\n\ntype WwogcParams struct {\n    name string\n    value  string\n}\nfunc main() {\n    param1 := WwogcParams{\"q\",\"Delhi\"}\n    wwogc := []WwogcParams{param1}\n\n    credentials := Credentials{key: \"keykeykle\",responseType: \"json\",subscription: \"premium\",locale: \"EN\"}\n....\n}\n", "\n\n", "The main function here is basically what the user will have to write but what I was thinking if the user can use the struct I have defined inside the package in his main() function.", "\n\n", "Why I can't use the structure outside its package?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//#include&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Class15_1&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; staticV; &lt;span class=\"hljs-comment\"&gt;//声明但未定义&amp;#xff0c;还未分配内存&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n\n        &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a){\n            value&amp;#61;a;\n            staticV&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;show&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            cout&amp;lt;&amp;lt;value&amp;lt;&amp;lt;endl;\n            cout&amp;lt;&amp;lt;staticV&amp;lt;&amp;lt;endl;\n        }\n        ~&lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(){\n            staticV-&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n        }\n};\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Class15_1::staticV &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//静态成员变量&amp;#xff0c;初始化。&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//Class15_1* p &amp;#61; new Class15_1[3];&lt;/span&gt;\n    Class15_1* p1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    Class15_1* p2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;);\n    Class15_1* p3 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n               &lt;span class=\"hljs-comment\"&gt;//p[0]-&amp;gt;Class15_1(5);&lt;/span&gt;\n               &lt;span class=\"hljs-comment\"&gt;//p[1]-&amp;gt;Class15_1(80);&lt;/span&gt;\n               &lt;span class=\"hljs-comment\"&gt;//p[2]-&amp;gt;Class15_1(20);&lt;/span&gt;\n    p1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//p[0]-&amp;gt;show();&lt;/span&gt;\n    p2-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//p[1]-&amp;gt;show();&lt;/span&gt;\n    p3-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//p[2]-&amp;gt;show();&lt;/span&gt;\n\n    cout&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;delete&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p1;\n    p1&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p2;\n    p2&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p3;\n    p3&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n   \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或是这样写&amp;#xff0c;更符合题意&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//#include&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Class15_1&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; staticV; &lt;span class=\"hljs-comment\"&gt;//声明但未定义&amp;#xff0c;还未分配内存&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n\n        &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a){\n            value&amp;#61;a;\n            staticV&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;show&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            cout&amp;lt;&amp;lt;value&amp;lt;&amp;lt;endl;\n            cout&amp;lt;&amp;lt;staticV&amp;lt;&amp;lt;endl;\n        }\n        ~&lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(){\n            staticV-&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n        }\n};\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Class15_1::staticV &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//静态成员变量&amp;#xff0c;初始化。&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//Class15_1* p &amp;#61; new Class15_1[3];&lt;/span&gt;\n    Class15_1* p1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    p1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    Class15_1* p2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;);\n    p2-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    Class15_1* p3 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Class15_1&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n    p3-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    &lt;span class=\"hljs-comment\"&gt;//p[0]-&amp;gt;Class15_1(5);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//p[1]-&amp;gt;Class15_1(80);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//p[2]-&amp;gt;Class15_1(20);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//p[0]-&amp;gt;show();&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//p[1]-&amp;gt;show();&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//p[2]-&amp;gt;show();&lt;/span&gt;\n\n    cout&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;delete&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p1;\n    p1&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p2;\n    p2&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; p3;\n    p3&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["我写的程序哪里出了问题，编译不通过", ["编写一个类Class15_1，声明一个数据成员int value和一个静态数据成员int staticV（初始化为0），让构造函数初始化数据成员value，并让静态数据成员staticV加1，让析构函数把静态数据成员staticV减1。主程序中使用new操作符创建三个堆对象，value值分别为5，80，20。然后显示它们的数据成员和静态数据成员，再依次使用delete操作符析构每个对象，并显示对静态数据成员的影响。", "输入无输出5", "80", "20", "3", "2", "1", "0", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "Class15_1", "{\n    ", "int", " value;\n    ", "int", " ", "static", " staticV;\n    ", "public", ":\n        \n        ", "Class15_1", "(", "int", " a){\n            value=a;\n            staticV+=", "1", ";\n            \n        }\n        ", "void", " ", "show", "()", "{\n            cout<<value<<endl;\n            cout<<staticV<<endl;\n        }\n        ~", "Class15_1", "(){\n            staticV-=", "1", ";\n            \n        }\n}; \n\n", "int", " ", "main", "()", "{\n    Class15_1* p=", "new", " Class15_1[", "3", "];\n    \n    p[", "0", "]->", "Class15_1", "(", "5", ");\n    p[", "1", "]->", "Class15_1", "(", "80", ");\n    p[", "2", "]->", "Class15_1", "(", "20", ");\n    p[", "0", "]->", "show", "();\n    p[", "1", "]->", "show", "();\n    p[", "2", "]->", "show", "();\n    ", "delete", " p;\n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Shape&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;perimeter&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Triangle&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Shape&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; aa,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; bb,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cc)&lt;/span&gt;{\n            a &amp;#61; aa; b &amp;#61; bb; c &amp;#61; cc;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;perimeter&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a&amp;#43;b&amp;#43;c;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n            &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (a&amp;#43;b&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; Math.sqrt(p*(p-a)*(p-b)*(p-c));\n        }\n    }\n    \n    \n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args )&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Triangle&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;tt&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Triangle&lt;/span&gt;();\n        tt.setData(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;周长&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; tt.perimeter() &amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,面积&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; tt.area());\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["定义一个名为Triangle的三角形类，使其继承Shape抽象类，重写Shape类中的抽象方法perimeter()和area()，求周长和面积。编写程序测试Triangle类的使用。", ["定义一个名为Triangle的三角形类，使其继承Shape抽象类，重写Shape类中的抽象方法perimeter()和area()，求周长和面积。编写程序测试Triangle类的使用。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给你改好了&amp;#xff0c;有帮助望采纳&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 3&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[][N])&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;i;j&amp;#43;&amp;#43;)\n       {\n        a[i][j]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n       }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;N;j&amp;#43;&amp;#43;)\n       {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i][j]);\n\n       }\n       &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j, a[N][N]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;};\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;N;j&amp;#43;&amp;#43;)\n       {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;( &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt; ));\n       a[i][j]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; (&lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;()%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n       }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;N;j&amp;#43;&amp;#43;){\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i][j]);\n\n        }&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n       }\n\n &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(a);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/367775111236181.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["定义N×N的二维数组，并在主函数中自动赋值", ["程序定义了N×N的二维数组，并在主函数中自动赋值。请编写函数fun( int a[][N])，", "函数的功能是：使数组左下三角元素中的值全部置成0 。例如：a 数组中的值为", "       | 1 2 3 |                                                       | 0  2  3 |", " a = | 1 2 3 | 则返回主程序后a数组中的值应为 | 0  0  3 |", "       | 1 2 3 |                                                       | 0  0  0 |", "本人能力至此    ", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<time.h>", "\n", "#", "define", " N 3", "\n", "void", " ", "fun", "(", "int", " a[][N])", "\n", "{", "int", " i,j;\n ", "for", "(i=", "0", ";i<N;i++)\n       ", "for", "(j=", "0", ";j<N;j++)\n       {", "srand", "(", "time", "( ", "NULL", " ));\n       a[i][j]=", "1", " + (", "rand", "()%", "10", ");\n       }\n", "for", "(i=", "0", ";i<N;i++)\n       ", "for", "(j=", "0", ";j<N;j++)\n       {\n        ", "printf", "(", "\"%d \"", ",a[i][j]);\n        ", "printf", "(", "\"\\n\"", ");\n       }   \n}\n", "int", " ", "main", "()", "\n", "{", "int", " i,j, a[N][N];\n ", "fun", "(a);\n    ", "for", "(i=", "1", ";i<N;i++)\n       ", "for", "(j=", "0", ";j<N", "-1", ";j++)\n       {\n        a[i][j]=", "0", ";\n       }\n    ", "for", "(i=", "0", ";i<N;i++)\n       ", "for", "(j=", "0", ";j<N;j++)\n       {\n        ", "printf", "(", "\"%d \"", ",a[i][j]);\n        ", "printf", "(", "\"\\n\"", ");\n        ", "return", " ", "0", ";\n       }\n \n}\n\n\n```)\n\n\n![img](https:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/694950011236195.png \"=600 #left\")", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; multi(*args):\n    &lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in args:\n        &lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; *&amp;#61; i\n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; s\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(multi(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(multi(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/065468783736120.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h4 id=\"h4_如果觉得答案对你有帮助请点击下采纳谢谢_1637387874079\"&gt;&lt;code class=\"language-javascript\"&gt;如果觉得答案对你有帮助,请点击下采纳,谢谢~&lt;/code&gt;&lt;/h4&gt;", "Konwledge_Point": "主程序", "Question": ["实现multi()函数，参数个数不限，返回所有参数的乘积", ["实现multi()函数，参数个数不限，返回所有参数的乘积"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;关于你的问题&amp;#xff0c;我也遇到过&amp;#xff0c;在做植物大战僵尸的项目时&amp;#xff0c;我想实现按钮点击后转到对战页面&lt;br /&gt;如果你不想再弄一个屏幕可以调用fill()函数填充整个页面&amp;#xff0c;然后根据需求再在此填充页面上绘制新元素&lt;br /&gt;或者你可以不终止程序&amp;#xff0c;调用pygame.quit()关闭此窗口&amp;#xff0c;然后再次创建新窗口&amp;#xff0c;保证程序不被打断&lt;br /&gt;或者另一个窗口与此窗口分开&amp;#xff0c;按下按钮时用os打开另一个窗口的文件&amp;#xff0c;关闭正在运行的程序&amp;#xff0c;开始新窗口程序&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["在打开一个pygame窗口的情况下，怎样实现点击某一按键使它跳到另一个窗口？", ["\n", "import", " sys\n", "from", " time ", "import", " sleep\n\n", "import", " pygame\n\n", "from", " settings ", "import", " Settings\n", "from", " game_stats ", "import", " GameStats\n", "from", " scoreboard ", "import", " Scoreboard\n", "from", " button ", "import", " Button\n", "from", " ship ", "import", " Ship\n", "from", " bullet ", "import", " Bullet\n", "from", " alien ", "import", " Alien\n\n\n", "class", " ", "AlienInvasion", ":\n    ", "\"\"\"管理游戏资源和行为的类\"\"\"", "\n    \n    ", "def", " __init__(self):\n        ", "\"\"\"初始化游戏并创建游戏资源\"\"\"", "\n        pygame.init()\n        self.settings = Settings()\n            \n        ", "#设置屏幕尺寸", "\n        self.screen = pygame.display.set_mode(\n            (self.settings.screen_width, self.settings.screen_height))\n        pygame.display.set_caption(", "\"Alien Invasion\"", ")\n        \n        ", "#创建一个用于储存游戏统计信息的实例并创建记分牌", "\n        self.stats = GameStats(self)\n        self.sb = Scoreboard(self)\n        \n        self.ship = Ship(self)\n        \n        self.bullets = pygame.sprite.Group()\n        \n        self.aliens = pygame.sprite.Group()\n        self._create_fleet()\n        \n        ", "#创建Play按钮", "\n        self.play_button = Button(self,", "\"Play\"", ")\n    \n    \n    ", "def", " ", "run_game", "(", "self", "):\n        ", "\"\"\"开始游戏主循环\"\"\"", "\n        ", "while", " ", "True", ":\n            self._check_events()\n            \n            ", "if", " self.stats.game_active:\n                self.ship.update()\n                self._update_bullets()\n                self._update_aliens()\n            \n            self._update_screen()\n    \n    \n    ", "def", " ", "drawing_screen", "(", "self", "):\n        ", "\"\"\"创建抽奖页面\"\"\"", "\n        self.d_screen = pygame.display.set_mode((", "1000", ",", "700", "))\n        self.d_bg_color = (", "230", ",", "230", ",", "230", ")\n        pygame.display.set_caption(", "\"Lucky Drawing\"", ")\n    \n    \n    ", "def", " _check_events(self):\n        ", "\"\"\"响应键盘和鼠标事件\"\"\"", "\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", " == pygame.QUIT:\n                sys.exit()\n            ", "elif", " event.", "type", " == pygame.KEYDOWN:\n                self._check_keydown_events(event)\n            ", "elif", " event.", "type", " == pygame.KEYUP:\n                self._check_keyup_events(event)\n            ", "elif", " event.", "type", " == pygame.MOUSEBUTTONDOWN:\n                mouse_pos = pygame.mouse.get_pos()\n                self._check_play_button(mouse_pos)\n    \n    \n    ", "def", " _check_play_button(self,mouse_pos):\n        ", "\"\"\"在玩家单击Play按钮时开始新游戏\"\"\"", "\n        button_clicked = self.play_button.rect.collidepoint(mouse_pos)\n        ", "if", " button_clicked ", "and", " ", "not", " self.stats.game_active:\n            ", "#重置游戏设置", "\n            self.settings.initialize_dynamic_settings()\n            ", "#重置游戏统计信息", "\n            self.stats.reset_stats()\n            self.stats.game_active = ", "True", "\n            self.sb.prep_score()\n            self.sb.prep_level()\n            self.sb.prep_ships()\n            \n            ", "#清空余下的外星人和子弹", "\n            self.aliens.empty()\n            self.bullets.empty()\n            \n            ", "#创建一群新的外星人并让飞船居中", "\n            self._create_fleet()\n            self.ship.center_ship()\n            \n            ", "#隐藏鼠标光标", "\n            pygame.mouse.set_visible(", "False", ")\n    \n    \n    ", "def", " _check_keydown_events(self,event):\n        ", "\"\"\"响应按键\"\"\"", "\n        ", "if", " event.key == pygame.K_RIGHT:\n            self.ship.moving_right = ", "True", "\n        ", "elif", " event.key == pygame.K_LEFT:\n            self.ship.moving_left = ", "True", "\n        ", "elif", " event.key == pygame.K_q:\n            sys.exit()\n        ", "elif", " event.key == pygame.K_SPACE:\n            self._fire_bullet()\n        ", "elif", " event.key == pygame.K_d:\n            self.drawing_screen()\n    \n    \n    ", "def", " _check_keyup_events(self,event):\n        ", "\"\"\"响应松开\"\"\"", "\n        ", "if", " event.key == pygame.K_RIGHT:\n            self.ship.moving_right = ", "False", "\n        ", "elif", " event.key == pygame.K_LEFT:\n            self.ship.moving_left = ", "False", "\n    \n    \n    ", "def", " _fire_bullet(self):\n        ", "\"\"\"创建一颗子弹，并将其加入编组bullets中\"\"\"", "\n        ", "if", " ", "len", "(self.bullets) < self.settings.bullets_allowed:\n            new_bullet = Bullet(self)\n            self.bullets.add(new_bullet)\n    \n    \n    ", "def", " _update_bullets(self):\n        ", "\"\"\"更新子弹位置并删除消失的子弹\"\"\"", "\n        ", "#更新子弹位置", "\n        self.bullets.update()\n        \n        ", "#删除消失的子弹", "\n        ", "for", " bullet ", "in", " self.bullets.copy():\n            ", "if", " bullet.rect.bottom <= ", "0", ":\n                self.bullets.remove(bullet)\n        \n        self._check_bullet_alien_collisions()\n    \n    \n    ", "def", " _check_bullet_alien_collisions(self):\n        ", "\"\"\"响应子弹和外星人碰撞\"\"\"", "\n        ", "#删除发生碰撞的外星人和子弹", "\n        ", "#检查是否有子弹击中了外星人", "\n        ", "#如果是，就删除相应的子弹和外星人", "\n        collisions = pygame.sprite.groupcollide(\n                self.bullets,self.aliens,", "True", ",", "True", ")\n        \n        ", "if", " collisions:\n            ", "for", " aliens ", "in", " collisions.values():\n                self.stats.score += self.settings.alien_points*", "len", "(aliens)\n            self.sb.prep_score()\n            self.sb.check_high_score()\n        \n        ", "if", " ", "not", " self.aliens:\n            ", "#删除现有的子弹并新建一群外星人", "\n            self.bullets.empty()\n            self._create_fleet()\n            self.settings.increase_speed()\n        \n            ", "#提高等级", "\n            self.stats.level += ", "1", "\n            self.sb.prep_level()\n    \n    \n    ", "def", " _check_fleet_edges(self):\n        ", "\"\"\"有外星人到达边缘时采取相应措施\"\"\"", "\n        ", "for", " alien ", "in", " self.aliens.sprites():\n            ", "if", " alien.check_edges():\n                self._change_fleet_direction()\n                ", "break", "\n    \n    \n    ", "def", " _change_fleet_direction(self):\n        ", "\"\"\"将整群外星人向下移动，并改变它们的方向\"\"\"", "\n        ", "for", " alien ", "in", " self.aliens.sprites():\n            alien.rect.y += self.settings.fleet_drop_speed\n        self.settings.fleet_direction *= -", "1", "\n    \n    \n    ", "def", " _update_aliens(self):\n        ", "\"\"\"检查是否有外星人位于屏幕边缘，并更新整群外星人的位置\"\"\"", "\n        self._check_fleet_edges()\n        self.aliens.update()\n        \n        ", "#检测外星人和飞船之间的碰撞", "\n        ", "if", " pygame.sprite.spritecollideany(self.ship,self.aliens):\n            self._ship_hit()\n        \n        ", "#检查是否有外星人到达了屏幕底端", "\n        self._check_aliens_bottom()\n    \n    \n    ", "def", " _create_fleet(self):\n        ", "\"\"\"创建外星人群\"\"\"", "\n        ", "#创建一个外星人并计算一行可容纳多少外星人", "\n        ", "#外星人的间距为外星人宽度", "\n        alien = Alien(self)\n        alien_width,alien_height = alien.rect.size\n        available_space_x = self.settings.screen_width-(", "2", "*alien_width)\n        number_alien_x = available_space_x // (", "2", "*alien_width)\n        \n        ", "#计算屏幕可容纳多少行外星人", "\n        ship_height = self.ship.rect.height\n        available_space_y = (self.settings.screen_height-\n                                (", "3", "*alien_height)-ship_height)\n        number_rows = available_space_y // (", "2", "*alien_height)\n        \n        ", "#创建外星人群", "\n        ", "for", " row_number ", "in", " ", "range", "(number_rows):\n            ", "for", " alien_number ", "in", " ", "range", "(number_alien_x):\n                self._create_alien(alien_number,row_number)\n    \n    \n    ", "def", " _create_alien(self,alien_number,row_number):\n        ", "\"\"\"创建一个外星人并将其放在当前行\"\"\"", "\n        alien = Alien(self)\n        alien_width,alien_height = alien.rect.size\n        alien.x = alien_width+", "2", "*alien_width*alien_number\n        alien.rect.x = alien.x\n        alien.rect.y = alien.rect.height+", "2", "*alien.rect.height*row_number\n        self.aliens.add(alien)\n    \n    \n    ", "def", " _ship_hit(self):\n        ", "\"\"\"响应飞船被外星人撞到\"\"\"", "\n        \n        ", "if", " self.stats.ships_left > ", "0", ":\n            ", "#将ships_left减1并更新记分牌", "\n            self.stats.ships_left -= ", "1", "\n            self.sb.prep_ships()\n            \n            ", "#清空余下的外星人和子弹", "\n            self.aliens.empty()\n            self.bullets.empty()\n            \n            ", "#创建一群新的外星人，并将飞船放到屏幕底端中央", "\n            self._create_fleet()\n            self.ship.center_ship()\n        \n            ", "#暂停", "\n            sleep(", "0.5", ")\n        ", "else", ":\n            self.stats.game_active = ", "False", "\n            pygame.mouse.set_visible(", "True", ")\n    \n    \n    ", "def", " _check_aliens_bottom(self):\n        ", "\"\"\"检查是否有外星人到达了屏幕底端\"\"\"", "\n        screen_rect = self.screen.get_rect()\n        ", "for", " alien ", "in", " self.aliens.sprites():\n            ", "if", " alien.rect.bottom >= screen_rect.bottom:\n                ", "#像飞船被撞到一样处理", "\n                self._ship_hit()\n                ", "break", "\n    \n    \n    ", "def", " _update_screen(self):\n        ", "\"\"\"更新屏幕上的图像，并切换到新屏幕\"\"\"", "\n        self.screen.fill(self.settings.bg_color)\n        self.ship.blitme()\n        ", "for", " bullet ", "in", " self.bullets.sprites():\n            bullet.draw_bullet()\n        self.aliens.draw(self.screen)\n        \n        ", "#显示得分", "\n        self.sb.show_score()\n        \n        ", "#如果游戏处于非活动状态，就绘制Play按钮", "\n        ", "if", " ", "not", " self.stats.game_active:\n            self.play_button.draw_button()\n        \n        pygame.display.flip()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    ", "#创建游戏实例并运行游戏", "\n    ai = AlienInvasion()\n    ai.run_game()\n\n", "\n", "   在原本运行的pygame屏幕的基础上，我想定义drawing_screen创建一个新屏幕。使它运行时在原界面的基础上点击d创建，但是这样做它不会给我一个空白屏幕，而只是将原屏幕缩小，上面的元素都还在。所以我想知道怎样清空新屏幕上的所有元素，或者直接创建一个新的空屏幕？\n"]], "Tag": "程序设计"}
{"Answer": "两个办法，一个是通过全局变量，一个是用属性的方式。", "Konwledge_Point": "主程序", "Question": ["vb编程语言中如何在定义的主窗体中使用ocx传入的内存的变量，动态接收变量？", ["vb编程语言中如何在定义的主窗体中使用ocx传入的内存的变量，动态接收变量？怎么在主程序动态接收ocx变量？"]], "Tag": "程序设计"}
{"Answer": "System.Diagnostics.Process.Start(\"另一个exe的路径文件名.exe\");", "Konwledge_Point": "主程序", "Question": ["wpf应用程序中如何实现点击某个按钮，打开另一个独立的wpf程序", ["如题，需要在一个wpf程序中实现点击按钮，打开另一个独立的WPF程序，wpf程序的地址是已知的，且两个程序间不需要关联操作，只需要打开即可。"]], "Tag": "程序设计"}
{"Answer": "主程序需要同时引用这两个控件，否则无法识别第二个控件内的类型。", "Konwledge_Point": "主程序", "Question": ["请教VB6.0控件调用控件的问题", ["在VB6.0的界面上用控件调用控件，主程序和第二个控件的关系是什么？是否需要添加引用？引用的目的是什么？"]], "Tag": "程序设计"}
{"Answer": "获取父窗口句柄\r\nHWND hWnddlg = AfxGetMainWnd()-&gt;m_hWnd;  //主窗口句柄\r\n或者\r\nHWND hWnddlg = this-&gt;m_hWnd; //主窗口句柄\r\n\r\n获取子窗口句柄\r\n如果子窗口是控件，并有控件ID号， 则如下获取其子窗口句柄\r\nHWND hwnd=::GetDlgItem(hWnddlg,IDC_BUTTON_SETUPBLOCK); //子窗口句柄\r\n\r\n 如果子窗口是窗体，则可以通过其成员变量m_bodyPanel的成员函数GetDlgCtrlID()来获取子窗口的ID 然后通过GetDlgItem来获取其子窗口句柄\r\nHWND hwnd =::GetDlgItem(hWnddlg,m_bodyPanel.GetDlgCtrlID());\r\n\r\n获取子窗口实例句柄\r\nHINSTANCE hInstance =  (HINSTANCE) GetwindowLong(m_hWnd /* 子窗口句柄*/, GWL_HINSTANCE);\r\n\r\n获取窗口句柄还可以通过：\r\nCWnd *pwnd = FindWindow(“ExploreWClass”,NULL); //希望找到资源管理器  \r\n　　HWND hwnd = pwnd-&gt;m_hwnd; //得到它的HWND  \r\n\r\nHWND FindWindow(\r\nLPCTSTR  lpClassName, //Class name\r\nLPCTSTR  lpWindowName //window name\r\n);\r\n获取当前应用程序实例句柄\r\n1 在CMyProjectApp类中\r\n在这个类的源文件中会有一个该类的实例CMyPrjectApp  theApp;\r\n该类继承自CWinApp类， 类中有一个成员m_hInstance即为当前应用程序实例句柄。\r\nMSDN中：可以用全局函数AfxGetInstanceHandle()取得。\r\n \r\n2 WINE32 API   GetWindowLong\r\nHINSTANCE hInstance =  (HINSTANCE) GetwindowLong(m_hWnd /* 窗口句柄*/, GWL_HINSTANCE);\r\n3 AfxGetApp()\r\n全局函数返回一个CWinApp * 指针，再取得成员函数m_hInstance\r\n \r\n3 Example\r\n加在自定义图标（非系统)\r\nm_hIcons[0]=LoadIcon(AfxGetInstanceHandle(),MAKEINTRESOURCE(IDI_ICON1));\r\nm_hIcons[1]=LoadIcon(theApp.m_hInstance,MAKEINTRESOURCE(IDI_ICON2));\r\nm_hIcons[2]=LoadIcon(AfxGetApp()-&gt;m_hInstance,MAKEINTRESOURCE(IDI_ICON3));\r\nm_hIcons[3]=LoadIcon( (HINSTANCE)GetWindowLong(m_hWnd, GWL_HINSTANCE) ,MAKEINTRESOURCE(IDI_ICON4)); \r\nNOTE:如果是加在系统的标准图标，则：LoadIcon(NULL, IDI_XXX);\r\nMAKEINTRESOURCE(WORD para)  根据资源ID返回一个指向该资源的字符指针，见MSDN中::LoadIcon()用法", "Konwledge_Point": "主程序", "Question": ["我用FindWindow获取了一个主窗口的句柄，如何能把它的全部子窗口的名字打印出来", ["LPCWSTR lpc=TEXT(\"计算器\");", "\nHWND hWnd=FindWindow(NULL,lpc);", "\n比如这个，如何能把计算机我获取的这个主窗口的全部子窗口的名字全部显示出来，比如下面菜单栏的查看，帮助这种的名字在控制台上打印出来。", "\n我是在VS2010上cpp文件上写的，求大佬帮帮忙。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用math库直接调用:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import math\ndef gcd_lcm(a:int,b:int):\n    &lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;math.gcd(a,b)\n    &lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt;&amp;#61;math.lcm(a,b)\n    return x,y\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;gcd_lcm(25,35)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t)\n&lt;span class=\"hljs-comment\"&gt;#output:(5, 175)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点采纳。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写一个函数 接受两个正整数作为参数返回一个元组 其中第一个元素为最大公约数 第二个元素为最小公倍数", ["\n", "编写一个函数，接收两个正整数作为参数，返回一个元组，第一个元素为最小公约数，第二个元素为最大公倍数。"]], "Tag": "程序设计"}
{"Answer": "```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Q1069451\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            //在下面两个短线区域范围内，补充代码：\r\n            //1）创建一个长度为5类型为学生Student的一维数组\r\n            //2）键盘输入5个学生信息\r\n            //3）调用Score类中的静态方法GetMax得到成绩最高的学生对象\r\n            //4）通过for循环遍历出一维数组中成绩为最高成绩的所有学\r\n            //生，并调用Score类中的非静态方法ShowStudent显示学生信\r\n            //息\r\n            //-------------------------------------------------\r\n            //创建Student一维数组\r\n            Student[] Stu = new Student[5];\r\n            Console.WriteLine();\r\n            Console.WriteLine(\"欢迎进入成绩录入系统;\" + \"\\n\" + \"--------------------------------------\");\r\n            for (int i = 0; i &lt; Stu.Length; i++)\r\n            {\r\n                //初始化数组，才能调用字段，接收键盘输入；\r\n                Stu[i] = new Student();\r\n                Console.Write(\"请输入第{0}位学生姓名:\", i + 1);\r\n                Stu[i].Name = Console.ReadLine();\r\n                Console.Write(\"请输入第{0}位学生学号:\", i + 1);\r\n                Stu[i].No = Console.ReadLine();\r\n                Console.Write(\"请输入第{0}位学生成绩:\", i + 1);\r\n                Stu[i].Score = Convert.ToDouble(Console.ReadLine());   //数据类型不一致，需要强制转换;\r\n                Console.WriteLine(\"--------------------------------------\");\r\n            }\r\n            //-------------------------------------------------\r\n            var result = Score.GetMax(Stu);\r\n            Console.WriteLine(result.Score);\r\n            for (int i = 0; i &lt; Stu.GetLength(0); i++)\r\n            {\r\n                if (Stu[i].Score == result.Score)\r\n                    new Score().ShowStudent(Stu[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public class Student\r\n    {\r\n        private string no;\r\n        private string name;\r\n        private double score;\r\n        public string No\r\n        {\r\n            get { return no; }\r\n            set { this.no = value; }\r\n        }\r\n        public string Name\r\n        {\r\n            get { return name; }\r\n            set { this.name = value; }\r\n        }\r\n        public double Score\r\n        {\r\n            get { return score; }\r\n            set { this.score = value; }\r\n        }\r\n    }\r\n    //求解成绩问题的类Score定义如下：\r\n    public class Score\r\n    {\r\n        public static Student GetMax(Student[] students)\r\n        {\r\n            //在下面两个短线区域范围内，补充代码：\r\n            //获取students数组中，成绩最高的学生对象\r\n            //-------------------------------------------------\r\n            return students.OrderBy(x =&gt; x.Score).Last();\r\n            //-------------------------------------------------\r\n        }\r\n        public void ShowStudent(Student student)\r\n        {\r\n            //在下面两个短线区域范围内，补充代码： \r\n            //输出学生信息，包括学号，姓名，和成绩\r\n            //-------------------------------------------------\r\n            Console.WriteLine(\"name={0},id={1},score={2}\", student.Name, student.No, student.Score);\r\n            //-------------------------------------------------\r\n        }\r\n    }\r\n}\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["C#方法怎么调用数组啊，求助", ["第三第四怎么写啊，小白一个，谢谢", "\n\n", "using System;", "\nusing System.Collections.Generic;", "\nusing System.Linq;", "\nusing System.Runtime.CompilerServices;", "\nusing System.Text;", "\n\n", "namespace 测试", "\n{", "\n    class Program", "\n    {", "\n        static void Main(string[] args)", "\n        {", "\n                        //在下面两个短线区域范围内，补充代码：", "\n                        //1）创建一个长度为5类型为学生Student的一维数组", "\n                        //2）键盘输入5个学生信息", "\n                        //3）调用Score类中的静态方法GetMax得到成绩最高的学生对象", "\n                        //4）通过for循环遍历出一维数组中成绩为最高成绩的所有学", "\n                                                生，并调用Score类中的非静态方法ShowStudent显示学生信", "\n                                                息", "\n                        //------------------------------------------------- ", "\n\n", "                    //创建Student一维数组\n                    Student[] Stu = new Student[5];\n\n                    Console.WriteLine();\n                    Console.WriteLine(\"欢迎进入成绩录入系统;\"+\"\\n\"+ \"--------------------------------------\");\n                    for (int i = 0; i < Stu.Length; i++)\n                    {\n                        //初始化数组，才能调用字段，接收键盘输入；\n                        Stu[i] = new Student();\n                        Console.Write(\"请输入第{0}位学生姓名:\", i+1);\n                        Stu[i].Name = Console.ReadLine();\n                        Console.Write(\"请输入第{0}位学生学号:\", i+1);\n                        Stu[i].No = Console.ReadLine();\n                        Console.Write(\"请输入第{0}位学生成绩:\", i+1);\n                        Stu[i].Score = Convert.ToDouble(Console.ReadLine());   //数据类型不一致，需要强制转换;\n                        Console.WriteLine(\"--------------------------------------\");\n\n                    }\n                    //-------------------------------------------------\n            }\n        }\n", "\n\n", "}", "\n\n", "//学生类Student定义如下\npublic class Student\n{\n    private string no;\n    private string name;\n    private double score;\n    public string No\n    {\n        get { return no; }\n        set { this.no = value; }\n    }\n    public string Name\n    {\n        get { return name; }\n        set { this.name = value; }\n    }\n    public double Score\n    {\n        get { return score; }\n        set { this.score = value; }\n    }  \n}\n//求解成绩问题的类Score定义如下：\npublic class Score\n{\n    public static Student GetMax(Student[] students)\n    {\n        //在下面两个短线区域范围内，补充代码：\n        //获取students数组中，成绩最高的学生对象\n        Student temp = null;//可以选择删除\n        //-------------------------------------------------\n\n\n        //-------------------------------------------------\n        return temp;////可以选择删除\n    }\n    public void ShowStudent(Student student)\n    {\n        //在下面两个短线区域范围内，补充代码： \n        //输出学生信息，包括学号，姓名，和成绩\n        //-------------------------------------------------\n\n        //-------------------------------------------------\n    }\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个回调函数&amp;#xff0c;及回调注册函数&amp;#xff0c;主程序用注册函数将回调函数传递给DLL&amp;#xff0c;大致框架:&lt;br /&gt;DLL:&lt;br /&gt;   typedef void (_cdecl *DllCallback)(LPCSTR msg);//回调方法声明&lt;br /&gt;  DllCallback doCallBack&amp;#61; NULL;&lt;br /&gt;    /// &lt;/p&gt;&lt;summary&gt;&lt;br /&gt;    /// 注册回调方法的方法&lt;br /&gt;    /// &lt;/summary&gt;&lt;br /&gt;    EXPORT void _cdecl _RegCallback(DllCallback  pCallback)&lt;br /&gt;  {&lt;!-- --&gt;&lt;br /&gt;   doCallBack&amp;#61;pCallback;&lt;br /&gt;  }&lt;br /&gt; func&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;doCallBack(msg);&lt;br /&gt;}&lt;br /&gt;Main:&lt;br /&gt;IMPORT　void _RegCallback(DllCallback  pCallback)&lt;br /&gt; void DoCallBack(LPCSTR msg)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;//todo&lt;br /&gt;}&lt;br /&gt;main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt; _RegCallback&amp;#xff08;DoCallBack&amp;#xff09;&amp;#xff1b;&lt;br /&gt;}&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["如何从dll界面主动调用主程序的功能呢？", ["如何从dll界面主动调用主程序的功能呢？", "如何从dll界面主动调用主程序的功能呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;同学你好&amp;#xff0c;&lt;br /&gt;optimproblem函数是在MATLAB 2017b版本才引入的&amp;#xff0c;而你的MATLAB版本是2016&amp;#xff0c;所以不支持这种用法。&lt;br /&gt;建议升级到2017b以上版本再使用该功能。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/311536971536150.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["MATLAB中调用optimproblem出现未定义函数或变量'optimproblem'", ["这是我照书上写的代码，CSDN上出现的可能问题都检查了，已经安装了optimization tool工具箱，文件路径保存应该没有问题，究竟是什么地方出了问题呢……（刚开始学数模就跪在这儿了）", "\n"]], "Tag": "程序设计"}
{"Answer": "要遵循一个原则，谁申请，谁释放。不同的crt申请释放内存的代码并不兼容，不能dll new，主程序delete\r\n你看windows api，那么多函数，都是调用者申请调用者释放，或者dll申请，dll释放的。", "Konwledge_Point": "主程序", "Question": ["DLL 中new了一个字符串，PostMessage发送给主程序，主程序处理了数据后delete时崩溃", ["DLL 中new了一个字符串，调用PostMessage发送给主程序，主程序处理了数据后delete", "\n\n", "当主程序和dll都用vs2010编译（v100）时，不会崩溃，", "\n当主程序和dll都用vs2017编译（v141）时，也不会崩溃，", "\n当主程序用vs2010编译（v100），dll用vs2017编译（v141）时，就会崩溃，", "\n出错的地方:", "\n_ASSERTE(_CrtIsValidHeapPointer(pUserData));", "\n注释：", "\n\n", "\n", "If this ASSERT fails, a bad pointer has been passed in. It may be", "\n", "totally bogus, or it may have been allocated from another heap.", "\n", "The pointer MUST come from the 'local' heap.", "\n", "好像是说delete的指针不是本地堆内存"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;main.c只需要#include引用.h文件进行编译后就显示在下拉框里了&amp;#xff0c;而对于FWLIB文件夹下需要分为inc和src两个文件夹&amp;#xff0c;分别放入.h文件和.c文件&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["keil在main.c中用＃include添加头文件", ["keil在左边的工具栏中得把.h文件添加到.c里面，点文件夹用右键第三个添加，但就是每次都和.c文件并列了", "\n"]], "Tag": "程序设计"}
{"Answer": "https://www.baidu.com/link?url=sJKTY9sBVCh4oLpera2mAgtX58cq8Bb9oJrA836qjjqteAx04Y3rhuBv8EbeQ9AR_jMtSuSZ5b9qCbKd416vyK&amp;wd=&amp;eqid=de59491e0002ae4d00000005587654d3", "Konwledge_Point": "主程序", "Question": ["vb从函数里返回的数组主程序调用会被放入主程序的内存调用么？    ", ["vb从函数里返回的数组主程序调用会被放入主程序的内存调用么？如果主程序修改数组，会分配新的内存给它么？"]], "Tag": "程序设计"}
{"Answer": "void MainWindow::changeEvent(QEvent *event)\r\n{\r\n    if(event-&gt;type()!=QEvent::WindowStateChange) return;\r\n    setWindowState(Qt::WindowMinimized);\r\n}", "Konwledge_Point": "主程序", "Question": ["Qt 如何让一个窗口始终保持最小化状态", ["如题，Qt程序，想实现让一个 QDialog 一直保持最小化的状态。", "\n点击任务栏图标也不能还原。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def &lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;():\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n    result &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; , n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        result &amp;#43;&amp;#61; i**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(result)\n\n&lt;span class=\"hljs-built_in\"&gt;main&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["怎样学好一门编程语言", ["编写函数1到n的整数平方和，数据的输入和输出在主程序中完成，编写函数1到n的整数平方和，数据的输入和输出在主程序中完成"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不会自动循环&lt;br /&gt;但是X1&amp;#xff0c;PC指针转一圈也会回来&amp;#xff0c;然后现象也会和你while循环类似&amp;#xff0c;&lt;br /&gt;但是X2&amp;#xff0c;仅仅类似还是不一样的&amp;#xff0c;如果未使用的ROM空间有以前烧录的代码或者一些随机指令&amp;#xff0c;那么可能会出现严重后果&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["51单片机里面的主程序会自动循环吗", ["51单片机里面的主程序会自动循环吗？", "\n", "\n", "我一直以为要设一个while循环。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是不是因为webRoot不行啊&amp;#xff0c;改成WebContent试试&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["eclipse打开程序，代码没报错，tomcat也启动成功localhost:+端口也可以，就是进入入口文件失败", ["eclipse打开程序，代码没报错，tomcat也启动成功localhost:+端口也可以，就是进入入口文件失败报错", "HTTP Status 404 – 未找到", "Type Status Report", "\n", "消息 /wgsc/index.htm", "\n", "描述 源服务器未能找到目标资源的表示或者是不愿公开一个已经存在的资源表示。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;错误提示了&amp;#xff1a;min-sdk-version &amp;gt;&amp;#61; 26 (currently 13)&amp;#xff0c;可能 HttpUtils的setParams 方法依赖了高版本26的接口。修改一下build.gradle 的最小版本就好了。如果要兼容26以下的版本&amp;#xff0c;你要&amp;#64;TargetApi 注解一下setParams方法&amp;#xff0c;自己再额外写一个26以下的setParams 方法&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用idea运行安卓程序出现问题 哪位大神帮我解决一下", ["Android Dex: [ChatRobot_circle_cnu3] Uncaught translation error: com.android.dx.cf.code.SimException: ERROR in com.example.utils.HttpUtils.setParams:(Ljava/lang/String;)Ljava/lang/String;: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "首先不建议楼主这样去进行传递，因为这样做的话会使你定义的类和MainWindow类产生紧耦合，这样的代码是最劣等代码，如果楼主只为了达成功能不在意这些的话方法还是有很多的，比如说你的这个类是class A{   }，你在另外一个非UI线程创建了A的一个实例a，然后你想在这个线程内通过a的某个属性或者字段获取MainWindow实例里面一个Textbox输入框的引用，然后你这个类还是先于MainWindow类进行实例化的你可以这样：\r\n首先定义你的类A，有一个公共可访问的属性CurTextBox：\r\npublic class A\r\n{\r\n\t\tpublic TextBox CurTextBox{ get; set;}\r\n\t\t。。。。。\r\n}\r\n然后这样在你的MainWindow类里面重载一个构造函数,并且为实例a的CurTextBox属性添加对当前Window上TextBox的引用：\r\npublic class MainWindow\r\n{\r\n\t\tpublic MainWindow(A a)\r\n\t\t{\r\n\t\t\t\tif(a!== null) \r\n\t\t\t\t{\r\n\t\t\t\t\t\ta.CurTextBox = this.textbox1;\t\r\n\t\t\t\t}\r\n\t\t}\r\n}\r\n然后你要刷新这个TextBox的话需要这样：\r\n由于你是跨线程进行UI控件的调用，所以必须使用Dispatcher类的Invoke()或者BeginInvoke()方法:\r\n\r\n所以整体代码结构应该大概是这样：\r\nusing System.Threading;\r\nnamespace Test{\r\nclass Program\r\n{\r\n\t\tA a = new A();//实例化A\r\n\t\tMainWindow win = new MainWindow(a);//实例化MainWindow\r\n\t\t\r\n\t\t//开启你的刷新线程\r\n\t\tThread td = new Thread(()=&gt;{\r\n\t\t\t\t//定时刷新\r\n\t\t\t\tWhile(true)\r\n\t\t\t\t{\r\n\t\t\t\t\t\t.......\r\n\t\t\t\t\t\t.......\r\n\t\t\t\t\t\tApplication.Current.Dispatcher.Invoke(new Action(()=&gt;{\r\n\t\t\t\t\t\t\t\ta.CurTextBox.Text = \"abc\";//进行刷新\t\t\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t});\r\n\t\ttd.Start();\r\n}\r\n}\r\n 这样的话就可以满足你的要求，但是这种方法真的太low，代码紧紧耦合到一起，以后需求一旦变更，你就等着哭吧，例如我把TextBox改成Label，你就需要改MainWindow构造函数的参数类型，还要改各个实例化赋值等，这样会累死你。所以有更好的方法去做这个事情，拿WPF来说，比较好的一个方法就是用资源Resource类，因为资源是全局可以访问的，不需要传递，代码大概是这样的：\r\n你只需要在MainWindow的构造函数内将资源赋值\r\npublic class MainWindow\r\n{\r\n\t\tpublic MainWindow()\r\n\t\t{\r\n\t\t\t\tApplication.Current.Resource[\"CurTextBox\"] = this.textbox1;//这样就添加了一个全局可以访问的资源\r\n\t\t}\r\n}\r\n接下来是调用：\r\n\r\nusing System.Threading;\r\nnamespace Test{\r\nclass Program\r\n{\r\n\t\tA a = new A();//实例化A（起始此时A根本就没必要了，如果你有其他需要处理的话保存）\r\n\t\tMainWindow win = new MainWindow();//实例化MainWindow\r\n\t\t\r\n\t\t//开启你的刷新线程\r\n\t\tThread td = new Thread(()=&gt;{\r\n\t\t\t\t//定时刷新\r\n\t\t\t\tWhile(true)\r\n\t\t\t\t{\r\n\t\t\t\t\t\t.......\r\n\t\t\t\t\t\t.......\r\n\t\t\t\t\t\tApplication.Current.Dispatcher.Invoke(new Action(()=&gt;{\r\n\t\t\t\t\t\t\t\tTextBox tb = Application.Current.Resource[\"CurTextBox\"] as TextBox;\r\n\t\t\t\t\t\t\t\ttb.Text = \"abc\";//进行刷新\t\t\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t});\r\n\t\ttd.Start();\r\n}\r\n}\r\n这样不仅在这个线程内可以访问到textbox1，而且在整个Application的任何地方都可以随时访问这个textbox1。", "Konwledge_Point": "主程序", "Question": ["c#其他类调用主界面的textbox控件", ["先说明本人水平不高", "\n做一个WPF软件，主界面中有一个TextBox,现在要在一个其他的类中向它中打印。", "\n然后提示，调用线程必须为 STA,因为许多 UI 组件都需要。", "\n现在想知道怎么能让MainWindow向这个类中传递此TextBox。", "\n这个类是定时运行的，非主界面启动的，而且在主界面前加载。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;triangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; z)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,y,z;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;x,&amp;amp;y,&amp;amp;z);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;triangle&lt;/span&gt;(x,y,z));\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;triangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; z)&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s,S;\n s&amp;#61;(x&amp;#43;y&amp;#43;z)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;#43;y&amp;lt;z||x&amp;#43;z&amp;lt;y||y&amp;#43;z&amp;lt;x)\n     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不能构成三角形&amp;#34;&lt;/span&gt;);\n &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n  S&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(s*(s-x)*(s-y)*(s-z));\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; S;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有用请采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["（1）编写函数triangle，参数为三条边长，函数值为三角形的面积。", ["（1）编写函数triangle，参数为三条边长，函数值为三角形的面积。"]], "Tag": "程序设计"}
{"Answer": "没什么函数和主程序的区分，都是在堆上分配的", "Konwledge_Point": "主程序", "Question": ["vbv语言在函数里修改主程序的数组，重新分配内存是主程序的内存还是函数的内存？", ["vbv语言在函数里修改主程序的数组，重新分配内存是主程序的内存还是函数的内存？怎么避免函数内存不被分配？"]], "Tag": "程序设计"}
{"Answer": "在b程序中加个启动参数，b的main函数中判断这个参数，有就显示界面，没有不显示界面就行了。\r\nApplication.Run()就是不显示界面了。\r\n\r\n大致代码如下：\r\nb\r\n\r\n\r\n```\r\n static class Program\r\n    {\r\n        static Form1 mainForm;\r\n\r\n        [STAThread]\r\n        static void Main(string[] paras)\r\n        {\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n            System.Windows.Forms.NotifyIcon nIcon = new NotifyIcon();\r\n            nIcon.Icon = xxx;\r\n            nIcon.Click += nIcon_Click;\r\n\r\n            bool bNoForm = false;\r\n            if (paras != null &amp;&amp; paras.Length &gt; 0)\r\n            {\r\n                foreach (string s in paras)\r\n                {\r\n                    if (s.ToLower() == \"/q\")\r\n                    {\r\n                        bNoForm = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            nIcon.Visible = true;\r\n\r\n            if (!bNoForm)\r\n            {\r\n                mainForm = new Form1();\r\n                mainForm.Show();\r\n            }\r\n            Application.Run();\r\n        }\r\n\r\n        static void nIcon_Click(object sender, EventArgs e)\r\n        {\r\n            if (mainForm == null || mainForm.IsDisposed)\r\n            {\r\n                mainForm = new Form1();\r\n            }\r\n\r\n            mainForm.Show();\r\n        }\r\n    }\r\n```\r\n\r\na程序中调用：\r\n\r\n\r\n```\r\n System.Diagnostics.Process p = new System.Diagnostics.Process();\r\np.StartInfo.FileName = \"b.exe\";\r\np.StartInfo.Arguments = \"/q\";\r\np.Start();\r\n```", "Konwledge_Point": "主程序", "Question": ["C# 实现打开A软件的同时后台打开B软件", ["就是我用A软件调用B软件，每次打开A软件，B软件都会后台打开，这个怎么做到，我的要求就是B软件在后台打开，不要显示窗口，除非用户在托盘打开这个软件", "\n\n", "请大神写个简单的例子，新手，还不怎么会"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;请使用try catch 语句&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 这里谢你运行的语句&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 这里写运行没成功的次数&lt;/span&gt;\ncount &amp;#61; count &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["matlab怎样将将程序循环100次，每次的结果可能会报错，但仍要继续循环", ["我写了一个优化程序，如果最终结果大于初始值，则会报错，小于初始值则正常运行。主想统计一下在100次中，能成功运行多少次？但不知道怎样快速完成这个操作？只能一次一次运行吗？谢谢大家"]], "Tag": "程序设计"}
{"Answer": "虚拟机没有不要紧，检查下虚拟机的硬盘文件还在不在，在的话，重新创建一个虚拟机，把之前的硬盘挂上，直接用", "Konwledge_Point": "主程序", "Question": ["强制关闭Vmware主程序后，再打开Vmware Workstations，正在运行的虚拟机看不见了", ["服务器上运行着多台虚拟机，其中一台虚拟机在关机的时候卡住了，于是就把Vmware Workstations的主程序强制关闭了。再次打开Vmware Workstations发现服务器上其他正常运行的虚拟机在主程序界面看不见了，并且在Vm主程序显示关闭虚拟机电源的任务一直是正在执行。求助有没有能结束关闭虚拟机任务的方法，或者是能在Vm主程序看到其他正常运行虚拟机的办法"]], "Tag": "程序设计"}
{"Answer": "内存变量不区分ocx还是程序的。", "Konwledge_Point": "主程序", "Question": ["调用ocx控件的事件代码，写在主程序的事件中，定义的变量还是算主程序的还是算ocx的？", ["调用ocx控件的事件代码，写在主程序的事件中，定义的变量还是算主程序的还是算ocx的？怎么知道在ocx中是不是已经有变量的定义了？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;查一下中断向量表重映射&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["boot程序跳转到APP进不去systick中断", ["问题遇到的现象和发生背景", "\n", "使用的是STM32G070单片机，APP程序单独运行，正常运行，加入boot程序后，从boot程序跳转到APP程序后，APP程序的systick中断函数进不去，我猜想应该是boot程序的问题", "这是APP程序的systick初始化代码", "\n", "这个是boot代码", "\n", "运行结果及报错内容", "\n", "编译后不报错，但就是进不去APP程序", "\n", "我的解答思路和尝试过的方法", "\n", "试过很多方法，在boot进入APP前关闭总中断，再在APP中开启，还是没用", "\n", "我想要达到的结果", "\n", "各位帮我看看boot程序哪里又问提，或者跟我讲一下仿真调试systick用哪些寄存器，不胜感激！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;div11not3&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;start,stop&lt;/span&gt;):\n    li &amp;#61; [x &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(start,stop&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x % &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; x % &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; li\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(div11not3(&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;88&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(div11not3(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(div11not3(&lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["编写函数可以被11整除但不能被3整除", ["编写一个名为div11not3（start，stop）的函数，该函数接受两个整数参数start和stop，并返回所有整数的列表，这些整数在start和stop之间可以被11整除，但不能被3整除，包括在内。您可以假设start<=stop。", "\n", "例子", "\n", "\n", "\n", "\n", "div11not3(22, 88)", "[22, 44, 55, 77, 88]", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "div11not3(100, 200)", "[110, 121, 143, 154, 176, 187]", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "div11not3(44, 44)", "[44]", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;def isLeap(year):\n    return year % 400 &amp;#61;&amp;#61; 0 or (year % 4 &amp;#61;&amp;#61; 0 and year % 100 !&amp;#61; 0)\n\n\ndef prtLeap(startY, endY):\n    c &amp;#61; 0\n    for i in range(startY, endY&amp;#43;1):\n        if isLeap(i):\n            c &amp;#43;&amp;#61; 1\n            if c % 10 &amp;#61;&amp;#61; 0:\n                print(i, end&amp;#61;&amp;#39;\\t\\n&amp;#39;)\n            else:\n                print(i, end&amp;#61;&amp;#39;\\t&amp;#39;)\n\n\ndef main():\n    prtLeap(1900,2020)\n\n\nmain()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["输出1900年至2020年所有的闰年，控制一行10个闰年，如果是闰年True，否则False。", ["程序运行示例如下：", "\n\n", ">>>", "\n\n", "1904       1908       1912       1916       1920       1924       1928       1932       1936       1940", "\n\n", "1944       1948       1952       1956       1960       1964       1968       1972       1976       1980", "\n\n", "1984       1988       1992       1996       2000       2004       2008       2012       2016       2020", "\n\n", " ", "\n\n", "程序如下所示：", "\n\n", "def isLeap(year):", "\n    return ________________________________", "\n", "\n", "\ndef prtLeap(startY, endY):", "\n    c = 0", "\n    for i in range(________________):", "\n        if ________________:", "\n            c += 1", "\n            if c % 10 == 0:", "\n                print(i, end='\\t\\n')", "\n            _____", "\n                print(i, end='\\t')", "\n", "\n", "\ndef main():", "\n    ________________________", "\n", "\n", "\nmain()"]], "Tag": "程序设计"}
{"Answer": "可以，收到消息的进程和原进程就没有关系了。", "Konwledge_Point": "主程序", "Question": ["发送消息以后主程序如果退出，得到消息的程序还能从消息队列中获得消息么？", ["发送消息以后主程序如果退出，得到消息的程序还能从消息队列中获得消息么？共享内存的一方如果关闭会如何？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.在B机器安装个redis client&amp;#xff0c;测试一下redis到底启没启&lt;br /&gt;2.在A机器上telnet一下网络到底通不通&lt;br /&gt;3.好好看看redis的配置&amp;#xff0c;是不是设置成127.0.0.1了&amp;#xff0c;那样只能本机访问&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于#redis#的问题：局域网内两台机器A跑主程序，B搭redis集群，然后A中主程序通过IP端口连接redis无法连接(语言-java)", ["局域网内两台机器A跑主程序，B搭redis集群，然后A中主程序通过IP端口连接redis无法连接？", "注：防火墙已关闭，另外在A机器上跑redis集群主程序链接正常。redis集群搭建在B上无法访问。皆是win10环境下。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\n\n\na &amp;#61; random.sample(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\nflag &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(a) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        flag &amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt; \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; flag:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]}&lt;/span&gt;与&lt;span class=\"hljs-subst\"&gt;{a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;不互质&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]}&lt;/span&gt;与&lt;span class=\"hljs-subst\"&gt;{a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;互质&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["使用random函数库中的函数产生两个100以内的随机整数，并判断它们是否互质", ["使用random函数库中的函数产生两个100以内的随机整数，并判断它们是否互质"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写好了&amp;#xff0c;你可以参考一下&amp;#xff0c;希望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Complex&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;//定义成员变量实部real、虚部image&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; real;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; image;\n\n    &lt;span class=\"hljs-comment\"&gt;//定义方法setComplex (float r, float i)为成员变量赋值&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setComplex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; i)&lt;/span&gt; &lt;/span&gt;{\n        real &amp;#61; r;\n        image &amp;#61; i;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//定义display()方法&amp;#xff0c;输出复数&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(real &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;#43; image &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//定义方法Complex add(Complex co)实现复数加法&amp;#xff0c;并返回结果&amp;#xff08;Complex类型&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Complex &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex co)&lt;/span&gt;&lt;/span&gt;{\n        real &amp;#43;&amp;#61; co.real;\n        image &amp;#43;&amp;#61; co.image;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Test&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//声明复数c1并实例化&lt;/span&gt;\n        Complex c1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;();\n\n        &lt;span class=\"hljs-comment\"&gt;//用setComplex方法为c1实部虚部设置值&lt;/span&gt;\n        c1.&lt;span class=\"hljs-built_in\"&gt;setComplex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n        &lt;span class=\"hljs-comment\"&gt;//声明复数c2并实例化&lt;/span&gt;\n        Complex c2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;();\n\n        &lt;span class=\"hljs-comment\"&gt;//用setComplex方法为c2实部虚部设置值&lt;/span&gt;\n        c2.&lt;span class=\"hljs-built_in\"&gt;setComplex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n\n        &lt;span class=\"hljs-comment\"&gt;//c1、c2两个复数相加并得到一个复数结果&lt;/span&gt;\n        Complex c3 &amp;#61; c1.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(c2);\n\n        &lt;span class=\"hljs-comment\"&gt;//调用display方法&amp;#xff0c;分别输出c1、c2、加法结果&lt;/span&gt;\n        c1.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n        c2.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n        c3.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/823635020356138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["定义复数类（Complex）", ["请问一下有哪位人才能帮忙解决一下", "\n", "定义一个复数类，完成复数的加法运算，并进行测试。要求：用setComplex方法，为变量成员赋值。例如：(1+2i)+(3+4i)=4+6i", "public class Complex  {", "    //定义成员变量实部real、虚部image", "    //定义方法setComplex (float r, float i)为成员变量赋值", "    //定义display()方法，输出复数", "    //定义方法Complex add(Complex co)实现复数加法，并返回结果（Complex类型）", "}", "class Test {", "    public static void main(String[] args){", "        //声明复数c1并实例化", "        //用setComplex方法为c1实部虚部设置值", "        //声明复数c2并实例化", "        //用setComplex方法为c2实部虚部设置值", "        //c1、c2两个复数相加并得到一个复数结果", "        //调用display方法，分别输出c1、c2、加法结果", "    }", "}  ", "\n", "定义一个复数类，完成复数的加法运算，并进行测试。要求：使用重载构造方法，为变量成员赋值。例如：(1+2i)+(3+4i)=4+6i", "public class Complex  {", "    //定义成员变量实部real、虚部image", "    //定义无参构造方法Complex()", "    //定义方法setComplex (float r, float i)为成员变量赋值", "    //定义带参构造方法Complex(float r,float i)为成员变量赋值", "    //定义display()方法，输出复数", "    //定义方法Complex add(Complex co)实现复数加法，并返回结果（Complex类型）", "}", "class Test {", "    public static void main(String[] args){", "        //用不带参数的构造函数初始化对象c1", "        //用setComplex方法给c1的实部虚部设置值", "        //用带2个参数的构造函数初始化对象c2", "        //c1、c2两个复数相加并得到一个复数结果", "        //调用display方法，分别输出c1、c2、加法结果", "    }", "} "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;void main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  while(1){Traffic_Light();}&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["单片机keil程序缺少主程序", ["我这个程序缺少一个主程序控制，我该怎么编写一个主程序", "#include<reg51.h>", "\n", "#define uchar unsigned char", "\n", "#define uint unsigned int", "\n", "sbit RED_A=P1^0; //东西向灯", "\n", "sbit YELLOW_A=P1^1;", "\n", "sbit GREEN_A=P1^2;", "\n", "sbit RED_B=P1^3; //南北向灯", "\n", "sbit YELLOW_B=P1^4;", "\n", "sbit GREEN_B=P1^5;", "\n", "uchar Flash_Count=0,Operation_Type=1; //闪烁次数，操作类型变量", "\n", "//延时", "\n", "void DelayMS(uint x)", "\n", "{", "\n", "uchar i;", "\n", "while(x--) for(i=0;i<120;i++);", "\n", "}", "\n", "//交通灯切换", "\n", "void Traffic_Light()", "\n", "{", "\n", "switch(Operation_Type)", "\n", "{", "\n", "case 1: //东西向绿灯与南北向红灯亮", "\n", "RED_A=1;YELLOW_A=1;GREEN_A=0;", "\n", "RED_B=0;YELLOW_B=1;GREEN_B=1;", "\n", "DelayMS(600);", "\n", "Operation_Type=2;", "\n", "break;", "\n", "case 2: //东西向黄灯闪烁，绿灯关闭", "\n", "DelayMS(90);", "\n", "YELLOW_A=~YELLOW_A;GREEN_A=1;", "\n", "if(++Flash_Count!=6) return; //闪烁3次", "\n", "Flash_Count=0;", "\n", "Operation_Type=3;", "\n", "break;", "\n", "case 3: //东西向红灯，南北向绿灯亮", "\n", "RED_A=0;YELLOW_A=1;GREEN_A=1;", "\n", "RED_B=1;YELLOW_B=1;GREEN_B=0;", "\n", "DelayMS(600);", "\n", "Operation_Type=4;", "\n", "break;", "\n", "case 4: //南北向黄灯闪烁3次", "\n", "DelayMS(90);", "\n", "YELLOW_B=~YELLOW_B;GREEN_B=1;", "\n", "if(++Flash_Count!=6) return;", "\n", "Flash_Count=0;", "\n", "Operation_Type=1;", "\n", "}", "\n", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "可以试试看定义成object类型，动态调用。", "Konwledge_Point": "主程序", "Question": ["VB中调用函数如何使用代理的方式，因为需要得到主程序中没有作为参数的变量。", ["VB中调用函数如何使用代理的方式，因为需要得到主程序中没有作为参数的变量。具体怎么获取这些变量？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有用请采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import math\n\n\ndef isprim(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;):\n    end &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(math.&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, end):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; False\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; True\n\n\n&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;, n &amp;#61; &lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入m和n&amp;#xff0c; 其中m &amp;lt; n:\\n&amp;#34;&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)))\n\n&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; isprim(i):\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(i, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;()\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["定义函数，输出m~n之间的素数", ["输出m", "n之间的素数（包括m,n)。要求编写自定义函数isprim(x)用于判断整数x是否为素数，如果是返回True,否则返回False。主函数负责输入两个整数m和n(m<n)，通过调用自定义函数判断并输出m", "n之间所有的素数，数据之间用空格间隔，并且要求每行输出5个素数。", "\n", "输入提示", "\"Input m,n(m<n):\""]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAXNMB 100&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_node&lt;/span&gt; \n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; data[MAXNMB];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len;\n}Linklist;\n\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Linklist L;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n,i;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入m&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;m); L.len &amp;#61; m;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个递增的数&amp;#xff1a;&amp;#34;&lt;/span&gt;,m);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;L.data[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要查找的数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;L.len;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(L.data[i]&amp;#61;&amp;#61; n)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;L.len)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,i);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["关于#c语言#的问题：从控制台输入一个整数，在线性表中查找这个整数并返回其在表中的位置", ["有一个存放整数的长度为m的线性表L，其元素单调递增。从控制台输入一个整数，在线性表中查找这个整数并返回其在表中的位置。如果找不到，返回-1。要求：使用顺序存储实现。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每个程序都要导入的&amp;#xff0c;不能省略&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["主程序import自建包，自建包import导入的外部包与主程序重复，如何写比较简便？", ["标题问得啰嗦，直接举例：", "我的主程序调用:", "import pandas as pd", "import myfuc #自建包", "\n", "在myfuc.py中：", "也需要import pandas as pd，这样有必要吗？有没有简便的做法？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;let me suggest something, you can either use the &lt;code&gt;default&lt;/code&gt; case e.g. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;default: \n continue\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which helps you handle cases when there are no incoming values from channel(s) you've specified earlier, so you can simply continue your for loop until something comes down the channel, or you could use a timeout case like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case &amp;lt;-time.After(6 * time.Second):\n continue\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course these 2 cases will allow you to continue cycling through the channels and technically you wont experience a deadlock unless other go-routines stop sending values through the channels.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["Golang频道使程序无限期等待", ["\n\n", "I am working on a program with a manager/worker style setup. It has ", "n", " number of workers that get data from an http source, push the data onto a gameData channel, pull url information off of a urlData channel and repeat. I then have one goroutine that is supposed to be parsing the data from the api that pulls from the channel gameData and pushes urls onto urlData channel.", "\n\n", "My problem is that the second time either goroutine tried to push something onto one of the channels, the goroutines halt and I have to kill the program.", "\n\n", "Here is some of the code and a link to the repo: ", "https://github.com/gaigepr/lolTeams", "\n\n", "EDIT:", "\n\n", "After reading the comments about using buffered channels, the problem is obviously a deadlock. However, making the channels buffered just makes the deadlock take longer to happen.", "\n\n", "At this point is synchronizing the parser and getgames threads the way to go to ensure no deadlocks?", "\n\n", "EDIT2:", "\n\n", "I refactored the program so that now I am using a threadsafe queue to store the summonerID as well as each worker thread now calls the parser function on its own data. This simplified things in a good way. I did this because I was unable to work around the playerChan eventually filling up because of the nature of the data accumulating. unless someone has a reason not to, I will leave this question open to see if someone has an answer that solves to channel problem.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路&amp;#xff1a;&lt;br /&gt;1.先确定好需要哪些接口&amp;#xff1b;&lt;br /&gt;2.确定接口的参数&amp;#xff0c;数据类型及返回值&amp;#xff1b;&lt;br /&gt;3.使用loadlibrary调用&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Linux C 插件框架设计-主程序和插件之前应该如何交互呢？", ["最近在做一个比较大的项目，主要是物联网网关程序开发，但是现在想将一些不重要的功能使用插件加载的方式动态的增减。目前了解是用", "dl", "库来进行动态库的加载和卸载以达到插件管理的目的，但是这个主程序和插件的交互应该怎么设计呢?", "现在是准备主程序加载插件中指定的函数符号，达到可以直接调用插件的某些功能；插件调用主程序资源使用初始化时将主程序的接口API给到插件，但是感觉这样会需要写大量的API，很麻烦，请问各位有什么好的想法和思路么?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.thinbug.com/q/41504942\" id=\"textarea_1659602421423_1659602421450_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.thinbug.com/q/41504942&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["调用外部程序写文件时，如何让主程序不等待？", ["主程序调用外部程序mysqldump备份数据库，代码如下：", "     try:", "            with gzip.open(bakfilname, \"wb\") as f:", "                p1 = subprocess.Popen(mysqldump + \" -h %s --port %s -u %s -p%s %s --databases %s \" % (pol_ip, pol_port, str_user, str_passwd, str_bk_options, str_schemas), stdout=subprocess.PIPE,stderr=subprocess.PIPE, shell=True)", "                f.writelines(p1.stdout)", "            output = p1.stderr.read()", "            if output == '':", "                log(\"OK\")", "            else:", "                log(output)", "                exit(1)", "        except subprocess.CalledProcessError as e:", "            print(\"Error: process exited with status %s\" % e.returncode)", "\n", "期间主程序界面hang住，需要等待备份执行完。如果数据库比较大，等待时间很长。我现在需要不要等待，发出执行命令后，主程序依然可以做其它操作。", "请问这个需求怎么实现？"]], "Tag": "程序设计"}
{"Answer": "http://jingyan.baidu.com/article/6525d4b111cd31ac7c2e945f.html", "Konwledge_Point": "主程序", "Question": ["怎么禁止通过crt+alt+detet关闭程序？怎么防止任务管理器关闭主程序？", ["怎么禁止通过crt+alt+detet关闭程序？怎么防止任务管理器关闭主程序？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;文件的位置可能不对&amp;#xff0c;私信帮你看下。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么主程序里打不开fxml文件？", ["刚开始学javafx，想在主程序里打开fxml文件，代码跟网上教程几乎一样，但是报错开不开，求帮助！", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "import threading\r\ndef pr(i):\r\n    print(i)\r\nthread = []\r\n\r\nfor i in list(range(100)):\r\n    k = threading.Thread(target=pr, args=(i,))\r\n    thread.append(k)\r\n\r\nfor j in thread:\r\n    j.start()\r\nfor k in thread:\r\n    k.join()\r\nprint('已经完成了？')\r\n你测试一下这个代码，‘已经完成了’是在打印0-99之后才显示出来的", "Konwledge_Point": "主程序", "Question": ["python3 多线程执行后再执行主线程的问题", ["python3下如何在所有子线程执行完毕后再运行主线程?", "\n下边是我的代码,再此基础上应该如何修改?", "\n我程序大概意思就是:", "\n先进行for 循环,每次循环创建1个线程,然后都执行func1这个函数,每次循环传递给func1的参数都不同,", "\n我想在所有子线程运行结束后，再执行下边的代码,请高手帮忙，如何在我代码基础上进行修改?", "\n\n"]], "Tag": "程序设计"}
{"Answer": "这个是编译器帮你判断的，如果重复了编译不过去，编译过去就说明不冲突。", "Konwledge_Point": "主程序", "Question": ["定义主程序变量的时候怎么判断这个变量的变量名是不是在ocx的事件定义中被使用了？", ["定义主程序变量的时候怎么判断这个变量的变量名是不是在ocx的事件定义中被使用了，怎么避免出现exe中的变量名和ocx中的变量名重复的问题呢？"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/defias/archive/2013/10/13/3366717.html", "Konwledge_Point": "主程序", "Question": ["主程序分配过内存的数组，在函数中对其进行调用，会涉及二次内存分配么？", ["主程序分配过内存的数组，在函数中对其进行调用，会涉及二次内存分配么？函数修改数组是怎么访问主程序的内存的？"]], "Tag": "程序设计"}
{"Answer": "看你怎么传的值，byref的话，传递的是引用，否则是拷贝了一份在堆栈上", "Konwledge_Point": "主程序", "Question": ["在vb6.0编程中函数体从主程序得到数组并且修改以后，内存定义是不是分配在函数里了？", ["在vb6.0编程中函数体从主程序得到数组并且修改以后，内存定义是不是分配在函数里了？主程序的内存会因此重新分配么？"]], "Tag": "程序设计"}
{"Answer": "Java 自定义线程可直接继承 Thread 类实现的。\r\n建议了解一下线程自定义的基础知识，参考：https://gitbook.cn/gitchat/activity/5d4bce7cdbdeb4514b4b15df", "Konwledge_Point": "主程序", "Question": ["高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数", ["高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数", "\n高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数"]], "Tag": "程序设计"}
{"Answer": "第一种方法：将主程序的窗口句柄传递到DLL中去，通过发送自定义消息传递参数  \r\n第二种方法：主程序启动一个线程去主动获得DLL中的数据。  \r\n第三种方法：创建回调函数，通过该回调函数传递参数。", "Konwledge_Point": "主程序", "Question": ["使用dll消息发送，不通过主程序进行，怎么在对方程序中获得消息发送的顺序？", ["使用dll消息发送，不通过主程序进行，怎么在对方程序中获得消息发送的顺序？能不能按照顺序接受消息呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nfloat add(float x, float y) \n{ \n    return x &amp;#43; y;\n}\n\nint main() \n{ \n    float a,b,c; \n    scanf(&amp;#34;%f%f&amp;#34;,&amp;amp;a,&amp;amp;b); \n    c&amp;#61; add (a,b); \n    printf(&amp;#34;两数的和为%f&amp;#34;,c); \n}\n\n// Output\n1 2\n两数的和为3.000000&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["请写出此题的详细过程", ["已有函数调用语句c=add (a,b);请编写add函数，计算两个实数a和b的和，并返回和值。\n\nfloat add (float x, float y)\n\n{                      \n\n \n\n \n\n \n\n \n\n \n\n}\n\nmain( )\n\n{ float a,b,c;\n\nscanf(“%f%f”,&a,&b);\n\nc= add (a,b);\n\nprintf(“两数的和为%f”,c);\n\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; fun(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *a,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i,&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    *&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n            *&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; a[i];\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;],i,&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61; fun(a,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;奇数个数:%d&amp;#xff0c;总和:%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C语言问题，编写一函数，实现统计任意指定长度的整形数组中奇数的个数及奇数的和。主程序读入 10 个正整数，使用数组名为参数调用上述函数，并输出统计结果", ["编写一函数，实现统计任意指定长度的整形数组中奇数的个数及奇数的和。主程序读入 10 个正整数，使用数组名为参数调用上述函数，并输出统计结果"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/zhoujiaxq/article/details/9794083", "Konwledge_Point": "主程序", "Question": ["动态dll函数中创建消息循环以后消息循环怎么才能转移到主程序里？", ["动态dll函数中创建消息循环以后消息循环怎么才能转移到主程序里？怎么才能实现动态库的连续收消息？"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/jiht594/article/details/43070487", "Konwledge_Point": "主程序", "Question": ["动态链接库中创建的消息循环怎么移交给调用它的主程序？", ["动态链接库中创建的消息循环怎么移交给调用它的主程序？另外每次调用都创建消息循环么？是不是有很多个消息循环？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那你直接输出qx&amp;#61;后面那一串看看。&lt;br /&gt;也就是说&amp;#xff0c;把qx&amp;#61;删掉&amp;#xff0c;然后只留下后面那一串&amp;#xff0c;把最后的分号也去掉&amp;#xff0c;然后运行一遍&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么matlab调用函数出现 主程序中定义过的值显示未定义", ["在主程序中我定义了", "qx=...", "\n", "qx作为我调用函数中的一个中间变量，既不是输入值也不是输出值。", "调用函数时却显示 未定义函数或变量 'qx'", "请教一下为什么啊。"]], "Tag": "程序设计"}
{"Answer": "http://iask.sina.com.cn/b/6761386.html", "Konwledge_Point": "主程序", "Question": ["怎么才能在定义的用户型函数中使用主程序定义的变量？             ", ["怎么才能在定义的用户型函数中使用主程序定义的变量？用户型函数的参数除了写在函数上以外还有什么传递的做法？怎么去传没有定义在函数上的变量？"]], "Tag": "程序设计"}
{"Answer": "发布一个回调事件，或者里面有一个公共事件，所有用的地方去绑定这个事件，就好像他是个按钮，你去绑定点击事件一样", "Konwledge_Point": "主程序", "Question": ["C# 不同项目间委托更新主程序控件文本问题，帮我看看。", ["1.C#相关SerialPort通信解决方案，原来SerialPort和主程序是同一个项目，不同的CS里，我可以直接委托，在接收数据时更新窗口的值。", "\n2.现在要将SerialPort逻辑操作独立一个项目。。我就不知道怎样操作，如果引用主程序时会报一个相互引用的报错。", "\n3.新手求教。。以前同一个项目里时，代码是这样的：  void serial_DataReceived(object sender, SerialDataReceivedEventArgs e)", "\n        {", "\n\n", "             int size = serial.BytesToRead; \n            byte[] list = new byte[size];\n            serial.Read(list, 0, size);\n           builder.Remove(0, builder.Length);//清除字符串构造器的内容\n\n           foreach (byte b  in list)\n            {\n               builder.Append(b.ToString(\"X2\") + \" \");\n            }            \n           string str = builder.ToString();\n\n            if (!\"\".Equals(str) && str.Contains(\"0B\")) {\n\n               //这是以前的写法。。PowerMainForm是主程序，写了一个委托更改两个标签的文本。同一个项目里，不同的cs\n                PowerMainForm.Show(\"准备扫描\", \"Please ready to scan!\"); \n            }\n}\n\n现在都分开两个项目，不能直接引用。。各位指点下，我还能怎样通过SerialPort接收事件来更改主程序的控件文本，全部C币了。。\n"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/world_hello_100/article/details/8066797", "Konwledge_Point": "主程序", "Question": ["(1)编写程序实现执行主程序后产生n个子进程,在代码中利用 printf打印输出表明身份的语句及其进程号,分析画出其亲属关系图,并利用抓取的进程号信息印证家族关系。", ["(1)编写程序实现执行主程序后产生n个子进程,在代码中利用 printf打印输出表明身份的语句及其进程号,分析画出其亲属关系图,并利用抓取的进程号信息印证家族关系。(提示:可用如下的循环结构。", "\nfor (i=0; i< n: i++)｛", "\n       pid=fork（）；", "\n       if (pid==0）｛", "\n           While（1）｛", "\n           ......｝//while", "\n              ｝//if", "\n       if (pid>0)｛", "\n Chldpid[i]=pid; }//if", "\n }//for", "\n do{", "\n ch=getchar();", "\n if (ch=='q’){", "\n              for(i=0: i<n; i++)", "\n kill(chldpid [i], SIGTERM) ;}//if", "\n}while(ch!=’q’);"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Have you tried instead keeping the path of the common package stable? You should probably have that in its own repo (so that both projects can refer to it), or keep it in your app repo, but allow plugins to link to it there.&lt;/p&gt;\n\n&lt;p&gt;So for example say your project lives at:&lt;/p&gt;\n\n&lt;p&gt;github.com/brianwest/myapp&lt;/p&gt;\n\n&lt;p&gt;you could make the import path (for both app and plugins): &lt;/p&gt;\n\n&lt;p&gt;github.com/brianwest/myapp/src/common&lt;/p&gt;\n\n&lt;p&gt;OR &lt;/p&gt;\n\n&lt;p&gt;github.com/brianwest/common&lt;/p&gt;\n\n&lt;p&gt;and keep it stable across the app and plugins, then it should just work and you won't need the script to copy it into gopath, or if you do it can put it at src/github.com/brianwest/common and use that path in both plugins and your app. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["插件和主应用之间的Golang软件包版本", ["\n\n", "I'm not a Go expert, so I may be doing this in a way that is not the ideal approach for Go. Essentially, I have a main application that needs to be able to have plugins written for it. The plugins all adhere to a given format and are built with ", "go build -buildmode=plugin", ". I don't want the end user to need to recompile the main application every time. Ideally, you should be able to drag and drop it to a new computer without issue.", "\n\n", "To pass information between the plugins and the application, I have a third package defined called \"common\" that I treat similar to a C-header file. It only defines interfaces and a few integer constants that both can use. The application generates types that adhere to the interface and can pass them to the plugins to use.", "\n\n", "When I compile, it seems to work fine, and the application can load the plugins using ", "plugin.Open", ". The catch comes when trying to move the location of the ", "common", " package. I built the original application in a local directory and I have a script that installs the application and the copies the ", "common", " package into the ", "GOPATH", " so that it can be found. Now, when I try to create plugins and compile them referencing the global copy of the ", "common", " package, I can't load them in the main application because it sees the two occurrences of the package as being different versions.", "\n\n", "My understanding is that to determine package version, a hash is made of all the Go files in the package at compile time. Is this hash including the location on the server where the package was found as well?", "\n\n", "I know for a fact that the actual versions of the packages are identical. The only different is that I did ", "cp -r src/myapp /usr/local/go/src", ". Is there a better way to accomplish this than my approach that still allows the user to move the main application around to different machines and not need to recompile it?", "\n\n", "Further explanation:", "\n\n", "Here is my directory structure", "\n\n", "./\n   |-- main.go \n   |-- src/myapp/common\n   |      |-- Common.go\n   |-- install.sh\n", "\n\n", "Once I compile this into ", "myapp", ", I copy ", "src/myapp/common", " into the ", "GOPATH", " and then build plugins with ", "go build -buildmode=plugin", " against that package. When loading those plugins from ", "myapp", ", it sees the two versions of ", "myapp/common", " as being different, although the only difference is location on the server.", "\n    "]], "Tag": "程序设计"}
{"Answer": "在哪个定义的，就对应哪个变量，但是最好不要故意混淆变量", "Konwledge_Point": "主程序", "Question": ["ocx里出现同名字的全局变量，会不会覆盖主程序中对应的全局变量名？", ["ocx里出现同名字的全局变量，会不会覆盖主程序中对应的全局变量名？能不能在定义变量的时候得到exe变量的数组？"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/MyLove-Summer/archive/2015/12/22/5034209.html", "Konwledge_Point": "主程序", "Question": ["回调函数调用主程序也是使用堆栈共享的么？和普通调用的区别是什么？", ["关于dll中的回调函数的调用方式，回调函数调用主程序也是使用堆栈共享的么？和普通调用的区别是什么？"]], "Tag": "程序设计"}
{"Answer": "看你是怎么使用的参数，无非分为byref和byval两种，前者是传引用，后者是传值", "Konwledge_Point": "主程序", "Question": ["主程序的事件过程，但是其中用了ocx参数，那么这些ocx参数是如何被exe调用？", ["窗体上拖一个控件双击编写事件是主程序的事件过程，但是其中用了ocx参数，那么这些ocx参数是如何被exe调用？怎么读取全部的ocx的全局变量到程序主存区？"]], "Tag": "程序设计"}
{"Answer": "const static char Buf[] = {\"1231231\"};\r\n\r\n这样定义就无法操作了。。", "Konwledge_Point": "主程序", "Question": ["怎么对函数里调用的主程序定义的数组写保护，只允许读取其中的数字下标？", ["怎么对函数里调用的主程序定义的数组写保护，只允许读取其中的数字下标，不允许用redim修改这个数组？在vb语言中对数组的只读是怎么处理的？"]], "Tag": "程序设计"}
{"Answer": "用菜单或者combo选择的方式进入", "Konwledge_Point": "主程序", "Question": ["怎么在主程序启动总界面显示以前，让屏幕先切换每个分界面的选择，并且从分界面进入", ["怎么在主程序启动总界面显示以前，让屏幕先切换每个分界面的选择，并且从分界面进入？怎么把分界面选择放在主界面显示的前面？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主程序中开了一个 driver&amp;#xff0c;登录方法中也开了一个driver&amp;#xff0c;两个 driver 肯定是不同的吧。&lt;br /&gt;为什么不把 driver 作为参数传给 login_in 方法呢&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写了一个登录方法，已经打开网页，在主程序中selenium提示无法查找该网页的xpath元素", ["\n", "\n", "编写自动化测试脚本。因为不同系统模块每次都需要登陆账号密码，因此想写一个登录的方法，每个模块调用登陆方法就行了。", "\n", "如图在登陆方法中已经打开浏览器和相应网址，并且可以成功登录（通过selenium定位xpath）", "因为在方法中已经打开并进入网页，在主程序中就没重复这个步骤，结果在运行后，提示selenium无法查找到xpath（但是把这些语句放到登录方法后，又不会出现这个问题）", "因此判断是方法导入的问题，是不是因为主程序中selenium查找xpath，无法继承方法里打开的网页。该如何解决这个问题", "\n"]], "Tag": "程序设计"}
{"Answer": "你可以定义一个调度函数，让它实现你这两个函数的切换。", "Konwledge_Point": "主程序", "Question": ["怎么在函数体内实现跳出函数保持函数传入的参数并且让另一个函数接替本函数返回值给主程序", ["怎么在函数体内实现跳出函数保持函数传入的参数并且让另一个函数接替本函数返回值给主程序？怎么实现这样的函数切换呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那就列表不要绑定事件。&lt;br /&gt;按钮事件里取访问 下拉框 的值&amp;#xff0c;再做处理即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; tkinter\nfrom tkinter &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; ttk\nfrom tkinter &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; *\nfrom tkinter &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; messagebox\n\n\ndef go(*args):  &lt;span class=\"hljs-comment\"&gt;# 处理事件&amp;#xff0c;*args表示可变参数&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; comboxlist.get()\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;调用操作&amp;#xff0c;参数&amp;#34;&lt;/span&gt;,k)\n\n\n\n&lt;span class=\"hljs-attr\"&gt;win&lt;/span&gt; &amp;#61; tkinter.Tk()  &lt;span class=\"hljs-comment\"&gt;# 构造窗体&lt;/span&gt;\n\n&lt;span class=\"hljs-attr\"&gt;comvalue&lt;/span&gt; &amp;#61; tkinter.StringVar()  &lt;span class=\"hljs-comment\"&gt;# 窗体自带的文本&amp;#xff0c;新建一个值&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;comboxlist&lt;/span&gt; &amp;#61; ttk.Combobox(win, &lt;span class=\"hljs-attr\"&gt;textvariable&amp;#61;comvalue)&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;# 初始化&lt;/span&gt;\ncomboxlist[&lt;span class=\"hljs-string\"&gt;&amp;#34;values&amp;#34;&lt;/span&gt;] &amp;#61; (&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;)\ncomboxlist.current(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 选择第一个&lt;/span&gt;\ncomboxlist.pack()\n\n&lt;span class=\"hljs-attr\"&gt;btn&lt;/span&gt; &amp;#61; tkinter.Button(win,&lt;span class=\"hljs-attr\"&gt;text&amp;#61;&amp;#34;操作&amp;#34;)&lt;/span&gt;\nbtn.bind(&amp;#39;&amp;lt;Button-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;gt;&amp;#39;,&lt;span class=\"hljs-attr\"&gt;func&amp;#61;go)&lt;/span&gt;\nbtn.pack()\n&lt;span class=\"hljs-comment\"&gt;# comboxlist.bind(&amp;#34;&amp;lt;&amp;lt;ComboboxSelected&amp;gt;&amp;gt;&amp;#34;, go)&lt;/span&gt;\n\nwin.mainloop()  &lt;span class=\"hljs-comment\"&gt;# 进入消息循环&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["tkinter下拉列表选择选项后不让马上执行，要添加一个点击按钮事件再执行，而下拉选择的选项只做一个主程序的一个参数怎么实现", ["问题遇到的现象和发生背景", "\n", "comboxlist.bind代码中选择列表值后马上执行了，想让选择后，在添加一个点击按钮的事件再执行，而列表的选择值作为主程序的一个输入参数，怎么实现，比如下列列表有数字1-10，十个数字，选择1后，在点击一个按钮继续执行程序，相当于1作为主程序某个参数", "\n", "问题相关代码，请勿粘贴截图", "\n", "import", " tkinter\nfrom tkinter ", "import", " ttk\nfrom tkinter ", "import", " *\nfrom tkinter ", "import", " messagebox\ndef go(*args):  ", "# 处理事件，*args表示可变参数", "\n    ", "k", " = comboxlist.get()\n\n", "win", " = tkinter.Tk()  ", "# 构造窗体", "\n\n", "comvalue", " = tkinter.StringVar()  ", "# 窗体自带的文本，新建一个值", "\n", "comboxlist", " = ttk.Combobox(win, ", "textvariable=comvalue)", "  ", "# 初始化", "\ncomboxlist[", "\"values\"", "] = (", "\"1\"", ", ", "\"2\"", ", ", "\"3\"", ", ", "\"4\"", ")\ncomboxlist.current(", "0", ")  ", "# 选择第一个", "\ncomboxlist.bind(", "\"<<ComboboxSelected>>\"", ", go)\ncomboxlist.pack()\nwin.mainloop()  ", "# 进入消息循环", "\n", "\n", "我的臆想：", "下拉列表选择→点击按钮→得出comboxlist.bind结果作为输入→主程序继续执行", "\n", "运行结果及报错内容", "\n", "无", "\n", "我的解答思路和尝试过的方法", "\n", "无，或者有没有其他简单的实现方法", "\n", "我想要达到的结果", "\n", "下拉菜单选择好之后不马上执行，而是再添加一个点击按钮事件再执行，而想要的是comboxlist.bind执行结果作为主程序的输入参数"]], "Tag": "程序设计"}
{"Answer": "可以通过属性传值嘛，在ocx定义属性，主程序赋值", "Konwledge_Point": "主程序", "Question": ["在vb编程环境中怎么根据控件所在的ocx，定义文件名模块可以放入主程序中调用的变量？", ["在vb编程环境中怎么根据控件所在的ocx，定义文件名模块可以放入主程序中调用的变量？怎么在ocx事件中使用标准模块的功能？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的 ReadTxtFile 的readTxt 都没有 返回值&amp;#xff0c;你应该这样写&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; test;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.io.*;\n \n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; ReadTxtFile {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; readTxt(String filePath) {\n          \n          &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;File&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;File&lt;/span&gt;(filePath);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt;.isFile() &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt;.exists()) {\n              InputStreamReader isr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; InputStreamReader(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; FileInputStream(&lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;);\n              BufferedReader br &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; BufferedReader(isr);\n              String lineTxt &amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n              &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((lineTxt &amp;#61; br.readLine()) !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;) {\n                System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(lineTxt);\n              }\n              br.close();\n            } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n              System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no exit&amp;#34;&lt;/span&gt;);\n            }\n          } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (Exception e) {\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;wrong doing&amp;#34;&lt;/span&gt;);\n          }\n          \n      }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["自己定义 了一个ReadTxtFile类，在主程序引用时，显示方法未定义", ["自己定义 了一个ReadTxtFile类，在主程序引用时，显示方法未定义 ，怎么解决呀：", "下面是ReadTxtFile类：", "\n", "package", " test;\n", "import", " java.io.*;\n\n", "public", " ", "class", " ReadTxtFile {\n    ", "public", " readTxt(String filePath) {\n          \n          ", "try", " {\n            ", "File", " ", "file", " = ", "new", " ", "File", "(filePath);\n            ", "if", "(", "file", ".isFile() && ", "file", ".exists()) {\n              InputStreamReader isr = ", "new", " InputStreamReader(", "new", " FileInputStream(", "file", "), ", "\"utf-8\"", ");\n              BufferedReader br = ", "new", " BufferedReader(isr);\n              String lineTxt = ", "null", ";\n              ", "while", " ((lineTxt = br.readLine()) != ", "null", ") {\n                System.out.", "println", "(lineTxt);\n              }\n              br.close();\n            } ", "else", " {\n              System.out.", "println", "(", "\"no exit\"", ");\n            }\n          } ", "catch", " (Exception e) {\n            System.out.", "println", "(", "\"wrong doing\"", ");\n          }\n          \n          }\n}\n", "\n", "下面是主程序 ：", "\n", "\n", "package", " test;\n", "import", " test.ReadTxtFile;\n", "public", " ", "class", " ", "Read", " ", "{\n      ", "public", " ", "static", " void main(", "String", "[] args) {\n            ", "String", " filePath = ", "\"F:\\\\javawork\\\\readtxtfile\\\\mdata.txt\"", ";\n            ReadTxtFile f = ", "new", " ", "ReadTxtFile", "();\n            f.readTxt(filePath);\n          }\n\n}\n\n\n", "\n", "下面是结果 显示：", "\n", "Exception ", "in", " thread ", "\"main\"", " java.lang.", "Error", ": Unresolved compilation problem: \n    The method readTxt(String) is undefined ", "for", " the ", "type", " ReadTxtFile\n\n    at ", "test", "/", "test", ".", "Read", ".main(", "Read", ".java:7)\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "新机器缺少环境。需要安装vcredist_x86", "Konwledge_Point": "主程序", "Question": ["C# 点击登录进入主界面时出现错误，错误信息如下：", ["有关调用实时(JIT)调试而不是此对话框的详细信息，", "\n请参见此消息的结尾。", "\n\n", "************** 异常文本 **************", "\nSystem.IO.FileNotFoundException: 未能加载文件或程序集“CefSharp.Core.dll”或它的某一个依赖项。找不到指定的模块。", "\n文件名:“CefSharp.Core.dll”", "\n   在 InformationSys.FormMain..ctor()", "\n   在 InformationSys.user.UserEnter.button1_Click(Object sender, EventArgs e) 位置 C:\\Users\\lenovo\\Desktop\\Information\\InformationSys\\User\\UserEnter.cs:行号 31", "\n   在 System.Windows.Forms.Control.OnClick(EventArgs e)", "\n   在 System.Windows.Forms.Button.OnClick(EventArgs e)", "\n   在 System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)", "\n   在 System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)", "\n   在 System.Windows.Forms.Control.WndProc(Message& m)", "\n   在 System.Windows.Forms.ButtonBase.WndProc(Message& m)", "\n   在 System.Windows.Forms.Button.WndProc(Message& m)", "\n   在 System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)", "\n   在 System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)", "\n   在 System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)"]], "Tag": "程序设计"}
{"Answer": "其实电脑开机后物理内存的每个字节都是可读写的，从来不会因为所谓的分配、释放而被创建、销毁。除非关闭电脑电源，RAM内存中的数据永远不会丢失，只会被应用程序覆盖为别的值。", "Konwledge_Point": "主程序", "Question": ["汇编语言的中断问题，新手求解答", ["关于中断问题，王爽老师书中说描述的中断过程（1）编写中断程序，并将传到内存（2）设置中断向量（3）遇到中断时执行中断程序", "\n那么是否可以这样理解传入内存中的数据在推出程序后丢失，所以这个中断程序就不可用了？"]], "Tag": "程序设计"}
{"Answer": "```\r\nPowerMainForm pf = new PowerMainForm();//这是主程序的UI界面\r\n```\r\n你都new了一个了，还喝原来的主程序的界面有啥关系。你下面那个setValue是设置到你新建的那个里的label上去的，不是设置到你主程序的label上去的", "Konwledge_Point": "主程序", "Question": ["一个cs里的SerialPort接收事件里，修改主程序label元素属性,不成功。", ["大家好，我是新手。请问，有两个cs,一个是SerialPort.cs,一个是Power.MainForm.cs.问题是在 SerialPort的接收事件里，修改主程序的label元素的属性，为什么不成功。代码如下。", "\n//serialPort.cs", "\nprivate void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)", "\n{  ", "\n\n", "  byte[] list = new byte[size];\n serial.Read(list,0,size);\n foreach(byte b int list)\n{\n builder.Append(b.ToString...)\n }\n string str = builder.ToString();\n if(!\"\".Equals(str) && str.Contains(\"OA\"))\n {\n     PowerMainForm pf = new PowerMainForm();//这是主程序的UI界面\n     pf.setValue(); // 问题就是这里进行执行了，没有效果。？？？？\n }\n", "\n\n", "}", "\n\n", "//PowerMainForm的setValue()方法，是在PowerMainForm.cs里", "\npublic void setValue()", "\n{", "\n  messageshow.show(\"开始显示\");", "\n   label21.text = 'aa';", "\n   label23.visible = true;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据你的需求来进行设置&amp;#xff0c;不了解的话&amp;#xff0c;就选择gdm3&amp;#xff0c;他是gnome系列的图形管理器&amp;#xff0c;就是红帽系列系统的图形化&lt;br /&gt;3个选项的具体情况&amp;#xff0c;可参考如下博文&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_39802884/article/details/123153718\" id=\"textarea_1664153502434_1664153751639_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_39802884/article/details/123153718&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["刚入门Linux安装kali 不知道这三个选项选哪个 有哪位传教一下？", ["新手入门安装kali 不知道选哪个 请教一下各位", "刚入门Linux安装kali 不知道这三个选项选哪个 有哪位传教一下？"]], "Tag": "程序设计"}
{"Answer": "定义事件是在主程序里，因此变量也是在主程序里。", "Konwledge_Point": "主程序", "Question": ["用vb控件的方式写事件在主程序里，是不是可以把ocx的内存的变量放入exe主存中运行了？", ["用vb控件的方式写事件在主程序里，是不是可以把ocx的内存的变量放入exe主存中运行了？怎么判断一个变量是在exe的主存中运行还是放在ocx的内存运行的？具体的变量名？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实可以用nginx反代一下&amp;#xff0c;就可以起到保护内部数据的效果&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Apache 实现主程序index.php不受限制访问被保护的目录，但是不允许用户直接访问被保护文件夹", ["Apache 实现主程序index.php不受限制访问被保护的目录，但是不允许用户直接访问被保护文件夹", "\n", "如图是我站点文件，我不想让用户直接通过地址栏访问到我的数据,所以对TabContents设置了.htaccess保护起来", "\n", "\n", "\n", "确实实现了效果，如图", "\n", "\n", "但是我index.php也会调用TabContents，这样我整个页面也无法正常使用。", "\n", "\n", "请问我该怎么解决？我想有没有类似配置防火墙那样的指令。我只允许index.php访问Tabcontens，禁止其他访问。或者其它方法？修改代码也可以，请帮忙提供一个思路。非常感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Because you are adding 0 to 0 inside the loop, which always results in 0. Therefore the loop will never end as sum will always be 0.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["进程花费了太长时间程序退出：Golang错误[重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "For loop of two variables in Go", "\n                \n                    2 answers\n                \n        ", "\n    ", "\n", "\n\n", "I was playing with for loop in Go via ", "Go tour", " ", "\n\n", "When I ran ", "\n\n", "package main\n\nimport \"fmt\"\n\nfunc main() {\n    sum := 1\n    for sum < 1000 {\n        sum += sum\n    }\n    fmt.Println(sum)\n}\n", "\n\n", "Program runs fine with output 1024", "\n\n", "But when I change ", "sum := 0", "\n\n", "package main\n\nimport \"fmt\"\n\nfunc main() {\n    sum := 0\n    for sum < 1000 {\n        sum += sum\n    }\n    fmt.Println(sum)\n}\n", "\n\n", "It gives error saying ", "\n\n", "process took too long\nProgram exited.\n", "\n\n", "EDIT: I dived myself so deep into Go tour that I could not realise, I am making a logical error :P.", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "私有的变量，哪个模块的就是归哪个模块管", "Konwledge_Point": "主程序", "Question": ["ocx的内存和exe的内存如果变量名相同，那么主程序调这个变量，调用的内存是不是还在exe内存里？", ["ocx的内存和exe的内存如果变量名相同，那么主程序调这个变量，调用的内存是不是还在exe内存里？那么ocx的内存就无法访问到了？如果要访问ocx的内存，用什么语法？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;// 存放输入的字符串&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入字符串&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(s,n)){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是回文&amp;#xff01;&amp;#34;&lt;/span&gt;);\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文&amp;#xff01;&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; j; i&amp;#43;&amp;#43;, j--)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s[i] !&amp;#61; s[j])\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt;&amp;#61; j)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["编写一个函数hw实现判断一个字符串是否为回文，若是则返回1，否则返回0。然后写出调用这个函数的主函数。", ["编写一个函数hw实现判断一个字符串是否为回文，若是则返回1，否则返回0。然后写出调用这个函数的主函数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;硬盘灯会闪吗&amp;#xff1f;电脑会不会死机&amp;#xff1f;前面两个都不会&amp;#xff0c;你等等就是了。可能在装必要的软件包。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["公司电脑上sw2018一直安装不上", ["按网上的教程进行安装，到了30%以后就安装的特别慢，基本上每次到了55%左右就安装不动了，有哪位大佬能够指导一下吗"]], "Tag": "程序设计"}
{"Answer": "可以啊，我试过了\r\n```\r\n        scanf_s(\"%d\", &amp;k);\r\n        if (k &gt; i &amp;&amp; k &lt; bomb) { i = k; printf(\"输入一个%d-%d的数：\", i, j); }\r\n        else if (k &lt; j &amp;&amp; k&gt;bomb) { j = k; printf(\"输入一个%d-%d的数:\", i, j); }\r\n        else if (k == bomb) { printf(\"踩中%d上的炸弹，爆炸\", k); }\r\n        else { printf(\"超出范围请重新输入一个范围内的数：\"); p--; }\r\n```", "Konwledge_Point": "主程序", "Question": ["输入字母循环无法在scanf处停下", ["#include", "\n#include", "\n#include", "\n#include", "\nint main(void) {", "\n    int i = 1, j = 1000, k = 0,bomb,p;", "\n    printf(\"游戏名:数字炸弹\\n\"), printf(\"输入一个1-1000的数:\");", "\n    srand(time(NULL));", "\n    bomb = rand() % (j - i) + i;", "\n    for (p = 0; k != bomb; p++) {", "\n        scanf_s(\"%d\", &k);", "\n        if (k > i && k < bomb) { i = k; printf(\"输入一个%d-%d的数：\", i, j); }", "\n        else if (kbomb) { j = k; printf(\"输入一个%d-%d的数:\", i, j); }", "\n        else if (k == bomb) { printf(\"踩中%d上的炸弹，爆炸\", k); }", "\n        else { printf(\"超出范围请重新输入一个范围内的数：\"); p--; }", "\n    }", "\n    printf(\"\\t共计%d次\", p);", "\n    getchar();", "\n    getchar();", "\n    return 0;", "\n    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在目标函数F2的计算之前计算一下F1并加入即可&amp;#xff0c;即F2&amp;#61;约束条件&amp;#xff08;F1&amp;#xff09;&lt;br /&gt;比如&lt;br /&gt;F1&amp;#61;10&lt;br /&gt;F2的约束条件&amp;#xff1a;X*F1&amp;gt;100&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["matlab优化算法中如何用程序将目标函数作为另外一个目标函数的约束条件嵌入", ["目标函数1 约束条件：1 2 3（约束条件3个）", "目标函数2 约束条件:1 2 3 目标函数1（约束条件里面包括了目标函数1）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;刚好今天做过这道题&amp;#xff0c;有用请采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c,d,e,f,g;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请按从小到大的顺序输入两个整数&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;\n    cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;到&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;之间各位数字之和为7的数有&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(a;a&amp;lt;&amp;#61;b;a&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 每次都要重置e&amp;#xff0c;是因为每一个数字的各位数字之和都需要从0开始&lt;/span&gt;\n        e&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;;d&amp;#61;d*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n        {\n            c&amp;#61;a/d%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            e&amp;#43;&amp;#61;c;\n            &lt;span class=\"hljs-comment\"&gt;// 如果c为0&amp;#xff0c;那么代表已经到最高位了&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-comment\"&gt;// 如果此时e为7就打印&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)\n                {\n                    cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;endl;\n                }\n\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["输入两个正整数（从小到大的顺序），输出这两数之间（含这两个数）各位数字之和为7的所有整数。", ["#没有思路，求解", "#如何转换这串代码", "\n", "c", "=a%10;        \n    ", "d", "=a/10%10;\n    ", "e", "=a/100%10;\n    ", "f", "=a/1000%10;\n    ", "g", "=a/10000%10;\n    ", "if", "(c+d+e+f+", "g", "==7)\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-variable\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;add_dic&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;w&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;e_&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入英文单词(直接按回车结束)&amp;#xff1a;&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;c_&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入中文翻译&amp;#xff1a;&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    \n    &lt;span class=\"hljs-variable\"&gt;worddic&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;e_&lt;/span&gt;] &amp;#61;&lt;span class=\"hljs-variable\"&gt;c_&lt;/span&gt; \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该单词已添加到字典库。&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;search_dic&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;w&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;e_&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的英文单词(直接按回车结束)&amp;#xff1a;&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;{e_}的中文翻译是{worddic.get(e_,&amp;#39;字典中无此单词&amp;#39;)}。&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    \n&lt;span class=\"hljs-variable\"&gt;worddic&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;dict&lt;/span&gt;()&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择功能&amp;#xff1a;\\n1:输入\\n2:查找\\n3:退出&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;()&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;add_dic&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;worddic&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;search_dic&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;worddic&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-variable\"&gt;break&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["请设计程序和相应的数据结构，使小王能记录新学的英文单词和其中文翻译，并能根据英文来查找中文。主程序已给出，请编写两个函数add_dic和search_dic。 （提示：数据结构建议用集合。", ["\n", "\n", "输出结果如图", "三．小王希望用电脑记录他每天掌握的英文单词。请设计程序和相应的数据结构，使小王能记录新学的英文单词和其中文翻译，并能很方便地根据英文来查找中文。主程序已给出，请编写两个函数add_dic和search_dic。", "（提示：数据结构建议用集合。"]], "Tag": "程序设计"}
{"Answer": "int[] a = {1,2,3,4,5};\r\n                 int[] b;\r\n                 b = a; \r\n\r\n[color=blue][b]a=b，是一个引用赋值，结果是a和b都指向的是同一块内存区域，而不是另外拷贝了一个数组。\r\n\r\n\r\n数组是对象，是引用传递的。\r\n\r\n有些工具类可以实现数组的copy，如System等。[/b][/color]", "Konwledge_Point": "主程序", "Question": ["为什么以下代码中的 数组b    能更改   数组a里面的元素", ["public class Array_Test {", "\n\n", "    public static void main(String[] arge){\n             int[] a = {1,2,3,4,5};\n             int[] b;\n             b = a;\n             for(int i = 0; i<b.length; i++)\n                   b[i] = b[i]+1;\n             for(int j = 0;j<a.length;j++)\n                   System.out.println(\"a[\"+j+\"] =\"+a[j]);\n     }\n", "\n\n", "} ", "\n\n", "为什么输出a数组的结果是2，3，4，5，6，而不是之前的1，2，3，4，5，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把返回值类型改为long long类型即可&lt;br /&gt;lab中的sum是long long类型&amp;#xff0c;所以没毛病&amp;#xff0c;但你返回值是int&amp;#xff0c;数据溢出啦&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["test主程序调用，做了一个20的阶乘，call中，sum值输出正常，test中返回的sum值不对，是什么原因？", ["\n", "test主程序调用，做了一个20的阶乘，call中，sum值输出正常，test中返回的sum值不对，是什么原因？", "\n", "\n", "test:", "#include <stdio.h>", "#include <stdbool.h>", "/", "定义两个全局变量", "/", "int x = 1;", "int y = 2;", "long long sum = 1;", "int n = 20;", "int num;", "bool flag;", "int addtwonum();", "int lab();", " int main(void)", "{", "    int result;", "    result = addtwonum();", "    sum=lab();", "    printf(\"result : %d\\n\", result);", "    printf(\"sum : %lld\\n\", sum);", "    return 0;", "}", "\n", "call:", "#include <stdio.h>", "#include <stdbool.h>", "\n", "extern long long sum;", "extern int n, num;", "extern bool flag;", "int lab()", "{", "    int num = n;", "    while (!flag)", "    {", "        sum = sum * (num--);", "        if(num==1)", "        {", "            flag = true;", "        }", "    }", "    printf(\"%d的叠乘值为 %lld\\n\", n, sum);", "    return sum;", "}", "\n", "\n", "20的叠乘值为 2432902008176640000", "result : 3", "sum : -2102132736", "sum返回值与实际不符", "\n", "\n", "怀疑是数据溢出，但是return返回值也有数据范围吗？", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "你的主程序可以把全局变量作为指针传给dll，那么dll就可以读取了。", "Konwledge_Point": "主程序", "Question": ["dll函数内能不能访问调用它的exe上的一个全局变量", ["dll函数内能不能访问调用它的exe上的一个全局变量，这个变量没有办法通过函数参数的方式传进来"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Unfortunately no, you can't recover from a call to os.Exit(). The documentation says that it exits immediately, and not even differed functions are called. I recommend to not use a package if it has an exit in it, as that is a pretty bad design.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["golang-阻止应用退出", ["\n\n", "In Go, with a ", "panic()", " you can use ", "defer", " and ", "recover()", " to ", "prevent an app from exiting", " and continue executing code. ", "\n\n", "However, I'm trying to prevent my app from exiting when getting a ", "dial tcp 192.168.1.1:830: getsockopt: connection refused", ". The application Exits with a status code of 1. It's technically not an error so I can't catch the error. The external package I'm using to make the tcp dial causes the app to Exit when this condition occurs. (In this case, it's because the port is blocked.) ", "\n\n", "So how can I recover the Exit from another package and continue on with my application? Take the below as an example:", "\n\n", "func makeRequest(target string) {\n    // Exits with status code 1, if connection refused \n    res, err := request.NewSession(target)\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "你把界面和下载线程分开就好了，然后通过线程向外面传参数", "Konwledge_Point": "主程序", "Question": ["java线程问题（是否可将部分代码设置在后台运行一段时间)", ["我想要的效果是我在下载文件时显示下载进度条，", "\n并在下载完成后弹出提示框询问是否安装！", "\n实际上是一开始下载时询问的提示框就和进度条一起出现了，", "\n并且进度条显示到30%多的时候会突然降为0，", "\n然后一段时间后再增加，所以进度条总是无法显示到100%"]], "Tag": "程序设计"}
{"Answer": "通过窗口类名去判断窗口是否存在", "Konwledge_Point": "主程序", "Question": ["Delphi 如何通过主程序判断显示调用的DLL已经在运行", ["用D7开发了一个OA办公流程DLL（挂靠在其他项目中使用），又做了一个托盘程序，登陆托盘程序后，Timer控件定时查询需审批的流程。查到流程后，右下角图标闪烁，双击调用OA办公流程DLL。现遇到一个问题，想实现的功能：打开OA流程DLL后，取消闪烁，并停止Timer；关闭DLL后，重新开启Timer（不改动DLL，只通过托盘程序判断）。求教大家有什么办法么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;天马行空&amp;#xff0c;想到个思路&amp;#xff1a;把输入的代码保存到c文件中&amp;#xff0c;然后调用编译器对其编译生成可执行文件&amp;#xff0c;最后直接调用运行这个可执行文件。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["怎么在主程序不停止的情况下，输入一段代码让其执行", ["程序一直运行，在线程中通过stdin输入一段代码（函数），让其主进程去执行这个函数，怎么做"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说的太模糊了&amp;#xff0c;给不了你答案&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["两块非编码的电路板怎么实现声光同步 主程序", ["1.华大MCU HC32110c6pa", "2.定义主从，先上电就仲裁出一个为主后上电的就成为从，跟着主同步闪烁出声", "3 定义 P 34为同步输入，P35为同步输出  有单独的同步电路 3.5输出高电平 拉低同步信号，P34检测低电平", "4.P3.6为光输出引脚，低电平有效，P 1.5为声音输出引脚，PWM输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不要迷信书、考题、老师、回帖&amp;#xff1b;&lt;br /&gt;要迷信CPU、编译器、调试器、运行结果。&lt;br /&gt;并请结合“盲人摸太阳”和“驾船出海时一定只带一个指南针。”加以理解。&lt;br /&gt;任何理论、权威、传说、真理、标准、解释、想象、知识……都比不上摆在眼前的事实&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c程序主程序与调用程序打印顺序问题", ["想请问1:是不是全局变量哪怕在调用函数里都会修改", "2:为什么最后b的值也变成6了", "3:打印顺序问题"]], "Tag": "程序设计"}
{"Answer": "你主程序中找到用户登录窗体，然后添加一个按钮，粘贴进去。", "Konwledge_Point": "主程序", "Question": ["修改密码的模块如何插入主程序？是visual studi", ["conn.Open(); if( txtname .Text==\"\"||txtpassword .Text==\"\") MessageBox.Show (\"请不要遗漏信息！\"); if (rbtnmanager.Checked) { string cstr=\"select * from 用户登录 where 类别='管理员'and 用户名='\"+txtname.Text.Trim ()+\"'and 密码='\"+txtpassword .Text.Trim ()+\"'\"; SqlCommand comm=new SqlCommand (cstr,conn ); SqlDataReader dr=comm.ExecuteReader (); if (dr.Read()) { sn = txtname.Text.Trim(); fr4.Show(); this.Visible = false; } else { MessageBox.Show(\"输入有误，请重新输入！\"); txtname.Text = \"\"; txtpassword.Text = \"\"; } } if (rbtnteacher.Checked) { string cstr = \"select * from 用户登录 where 类别='教师'and 用户名='\" + txtname.Text.Trim() + \"'and 密码='\" + txtpassword.Text.Trim() + \"'\"; SqlCommand comm = new SqlCommand(cstr, conn); SqlDataReader dr = comm.ExecuteReader(); if (dr.Read()) { sn = txtname.Text.Trim(); sub = dr.GetValue(3).ToString (); fr3.Show(); this.Visible = false; } else { MessageBox.Show(\"输入有误，请重新输入！\"); txtname.Text = \"\"; txtpassword.Text = \"\"; } } if (rbtnstudent.Checked) { string cstr = \"select * from 用户登录 where 类别='学生'and 用户名='\" + txtname.Text.Trim() + \"'and 密码='\" + txtpassword.Text.Trim() + \"'\"; SqlCommand comm = new SqlCommand(cstr, conn); SqlDataReader dr = comm.ExecuteReader(); if (dr.Read()) { sn = txtname.Text.Trim();fr2.Show(); this.Visible=false ; } else { MessageBox.Show(\"输入有误，请重新输入！\"); txtname.Text = \"\"; txtpassword.Text = \"\"; } } conn.Close(); conn.Dispose(); } private void button2_Click(object sender, EventArgs e) { Application.Exit(); } private void timer1_Tick(object sender, EventArgs e) { label1.Text = \"当前时间为：\" +DateTime.Now .ToLongDateString() +\" \"+DateTime.Now.ToLongTimeString(); } } }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先使用命令status查看一下他的运行状态  报的什么错  然后再确定下进程和端口是否被杀掉&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["centos 7  nginx 无法重启  reload,      主程序被手工kill掉，重启失败。且 现在nginx 正在运行。", ["报错如下：", "[root@webpublish nginx]# nginx -s reload", "nginx: [error] invalid PID number \"\" in \"/run/nginx.pid\"", "这个文件里面是空的，没有PID。", "\n", "ps", " -aux |grep nginx\n", "root", "      ", "4148", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "112812", "   ", "972", " pts/", "0", "    S+   ", "09", ":", "13", "   ", "0", ":", "00", " grep --color=auto nginx\n", "nginx", "    ", "30028", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123128", "  ", "6612", " ?        S    Jul29   ", "0", ":", "03", " nginx: worker process\n", "nginx", "    ", "30029", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123128", "  ", "6784", " ?        S    Jul29   ", "0", ":", "03", " nginx: worker process\n", "nginx", "    ", "30030", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123128", "  ", "6808", " ?        S    Jul29   ", "0", ":", "06", " nginx: worker process\n", "nginx", "    ", "30031", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123128", "  ", "6780", " ?        S    Jul29   ", "0", ":", "08", " nginx: worker process\n", "nginx", "    ", "30032", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123128", "  ", "6820", " ?        S    Jul29   ", "0", ":", "11", " nginx: worker process\n", "nginx", "    ", "30033", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "133468", " ", "17148", " ?        S    Jul29   ", "0", ":", "20", " nginx: worker process\n", "nginx", "    ", "30034", "  ", "0", ".", "0", "  ", "0", ".", "0", " ", "123224", "  ", "6888", " ?        S    Jul29   ", "0", ":", "20", " nginx: worker process\n", "nginx", "    ", "30035", "  ", "0", ".", "5", "  ", "0", ".", "0", " ", "123420", "  ", "7120", " ?        S    Jul29   ", "5", ":", "15", " nginx: worker process\n\n"]], "Tag": "程序设计"}
{"Answer": "你看一下代码里是不是有什么MassageBox(xxxx,xxxx,xxxx,xxxx)或者Beep(xxxx,xxxx)\r\n\r\n如果没有就说明你的程序有bug而且速度慢或者Runtime Errow了就是数组开小了\r\n\r\n实在不行用devc++试试，因为visual和devc++有一些库不同", "Konwledge_Point": "主程序", "Question": ["C++,主程序return以后听到系统的报错声,但是没有显示错误,且执行窗口没有退出", ["这边开始执行return语句,后面调用析构函数", "\n\n", "在执行MDELETES(mpBlock)这一句之前的析构都能正常执行", "\n\n", "执行完之后程序就出错了,这个窗口没有退出,而且点右上角×之后要过几秒才能关闭", "\n\n", "(有朋友知道怎么解决这个问题么?请告诉我!谢谢!)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一&amp;#xff0c;在电脑上有没有感叹号&amp;#xff1f;&lt;br /&gt;第二&amp;#xff0c;可以先参考别人成熟的设计&amp;#xff0c;因为USB的问题不是简单的问题。&lt;br /&gt;第三&amp;#xff0c;USB的问题不是一两句话就能解决的&amp;#xff0c;影响的因素很多&amp;#xff0c;只能一点点去定位问题点。&lt;br /&gt;第四&amp;#xff0c;你的问题即使是熟悉USB的工程师也不一定知道问题。只能具体到哪个位置那个函数可能有问题。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["通过HIDAPI编写主机程序，USB-HID设备能获取SET_REPORT请求，但是无法获取GET_REPORT请求？", ["问题遇到的现象和发生背景", "\n", "（天啊，跳转出去没保存，又得重新写一次QAQ）", "最近在自学USB-HID协议，公司想把原来需要驱动的USB设备改成HID的，我已经把设备改成HID了，枚举也是成功识别为HID设备。然后用HIDAPI尝试对数据进行收发，在我调用hid_write函数后，设备能正常获取set_report请求，并且也可以获取到主机发送的数据，但是不论怎么调用hid_read函数，设备始终无法收到get_report请求！通过BusHound监测，也无法取得get_report请求，是不是hid_read不会发送get_report请求呢？", "\n", "问题相关代码", "\n", "==================", "主机的测试代码", "==================", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "\"hidapi.h\"", "\n\n", "int", " ", "main", "(", "int", " argc, ", "char", " **argv)", "\n", "{\n    ", "int", " res;\n    ", "unsigned", " ", "char", " buf[", "65", "];            ", "//发送数据的缓存", "\n    ", "unsigned", " ", "char", " read_buf[", "65", "];        ", "//接受数据的缓存", "\n    ", "unsigned", " ", "short", " str[", "32", "] = { ", "0", " };\n    hid_device *handle;                ", "//设备句柄", "\n\n    ", "/* Set up the command buffer. */", "\n    ", "memset", "(buf, ", "0x00", ", ", "sizeof", "(buf));\n\n    ", "/* Open the device. */", "\n    ", "/* 获取设备句柄 */", "\n    handle = ", "hid_open", "(", "0x5448", ", ", "0x0002", ", str);\n    ", "if", " (handle == ", "0", ")\n    {\n        ", "printf", "(", "\"unable to open device\\n\"", ");\n        ", "return", " ", "-1", ";\n    }\n    \n    ", "/* 调用hid_write，向设备发送数据 */", "\n\n    ", "for", " (res = ", "1", "; res < ", "65", "; res++)\n    {\n        buf[res] = res + ", "3", ";\n    }\n\n    res = ", "hid_write", "(handle, buf, ", "65", ");\n    ", "if", " (res < ", "0", ")\n        ", "printf", "(", "\"Unable to write()\\n\"", ");\n\n    ", "/* Read requested state */", "\n    ", "/* 调用hid_read，获取设备发送的数据 */", "\n    res = ", "hid_read", "(handle, read_buf, ", "64", ");\n    ", "if", " (res < ", "0", ")\n        ", "printf", "(", "\"Unable to read()\\n\"", ");\n\n    ", "/* Print out the returned buffer. */", "\n    ", "for", " (", "int", " i = ", "0", "; i < ", "4", "; i++)\n        ", "printf", "(", "\"buf[%d]: %d\\n\"", ", i, buf[i]);\n\n    ", "return", " ", "0", ";\n}\n", "\n", "==================", "配置描述符", "==================", "\n", "const u8 DESCRIPTOR_CONFIG[", "41", "]= \n{\n    ", "//", "USB configuration descriptor\n    ", "0", "x09,                   ", "//", "bLength:", "0", "x09 bytes\n    DT_CONFIGURATION,       ", "//", "bDescriptorType:configuration\n    ", "0", "x29,", "0", "x00,              ", "//", "wTotalLength:total size\n    ", "0", "x01,                   ", "//", "bNumInterface:interface num is ", "1", "\n    ", "0", "x01,                   ", "//i", "ConfigurationValue:", "1", "\n    ", "0", "x00,                   ", "//i", "Configuration:no index of configuration string\n    ", "0", "xa0,                   ", "//", "bmAttributes:D7=", "1", ",D=", "1", "\n    ", "0", "x03,                   ", "//", "bMaxPower:maximum power stream ", "6", "mA\n\n    ", "//", "USB interface descriptor\n    ", "0", "x09,                   ", "//", "bLength:", "0", "x09 bytes\n    DT_INTERFACE,           ", "//", "bDescriptorType:interface\n    ", "0", "x00,                   ", "//", "bInterfaceNumber\n    ", "0", "x00,                   ", "//", "bAlternateSetting\n    ", "0", "x02,                   ", "//", "bNumEndpoints\n    ", "0", "x03,                   ", "//", "bInterfaceClass:HID class ", "0", "x03\n    ", "0", "x00,                   ", "//", "bInterfaceSubClass:custom device\n    ", "0", "x00,                   ", "//", "bInterfaceProtocol\n    ", "0", "x00,                   ", "//i", "Interface:no index of string\n\n    ", "//", "USB-HID descriptor\n    ", "0", "x09,                   ", "//", "bLength:size of USB-HID descriptor\n    DT_HID,                 ", "//", "bDescriptorType:HID\n    ", "0", "x10,", "0", "x01,              ", "//", "bcdHID:version1.", "1", "\n    ", "0", "x00,                   ", "//", "bCountryCode:no supported\n    ", "0", "x01,                   ", "//", "bNumDescriptor:subordinate descriptor num\n    ", "0", "x22,                   ", "//", "bDescriptorType:SubDescriptor is report descriptor\n    ", "0", "x19,", "0", "x00,              ", "//", "wDescriptorLength:size of SubDescriptor\n\n    ", "//", "USB endpoint descriptor\n    ", "0", "x07,                   ", "//", "bLength:", "0", "x07 bytes\n    DT_ENDPOINT,            ", "//", "bDescriptorType:endpoint\n    ", "0", "x81,                   ", "//", "bEndpointAddress:D7=", "1", ",input;endpoint number ", "1", "\n    ", "0", "x03,                   ", "//", "bmAttributes:", "0", "-Control,", "1", "-Isochronous,", "2", "-Bulk,", "3", "-Interrupt\n    ", "0", "x40,", "0", "x00,              ", "//", "wMaxPacktSize:", "64", " bytes\n    ", "0", "x20,                   ", "//", "bInterval\n\n    ", "0", "x07,                   ", "//", "bLength:", "0", "x07 bytes\n    DT_ENDPOINT,            ", "//", "bDescriptorType:endpoint\n    ", "0", "x02,                   ", "//", "bEndpointAddress:D7=", "0", ",output;endpoint number ", "1", "\n    ", "0", "x02,                   ", "//", "bmAttributes:", "0", "-Control,", "1", "-Isochronous,", "2", "-Bulk,", "3", "-Interrupt\n    ", "0", "x40,", "0", "x00,              ", "//", "wMaxPacktSize:", "64", " bytes\n    ", "0", "x20                    ", "//", "bInterval\n};\n", "\n", "==================", "报表描述符", "==================", "\n", "const u8 USB_Report_Descriptor[", "25", "] =  ", "//", "USB报告描述符 ", "25", "个字节\n{\n    ", "0", "x06, ", "0", "x00, ", "0", "xFF,        ", "//", "USAGE_PAGE(Vendor—defined)\n    ", "0", "x09, ", "0", "x00,             ", "//", "USAGE(Undefined)\n    ", "0", "xA1, ", "0", "x01,                ", "//", "COLLECTION(Application)\n        ", "0", "x09, ", "0", "x00,             ", "//", "USAGE(Undefined)\n        ", "0", "x15, ", "0", "x00,             ", "//", "Logical Minimum(", "0", ")\n        ", "0", "x26, ", "0", "xff, ", "0", "x00,       ", "//", "Logical Maximum(", "255", ")\n        ", "0", "x75, ", "0", "x08,             ", "//", "Report Size(", "8", ")\n        ", "0", "x95, REPORT_COUNT,     ", "//", "Report Count\n        ", "0", "x81, ", "0", "x06,             ", "//", "Input(Data,Variable,Absolute)\n        ", "0", "x09, ", "0", "x00,             ", "//", "USAGE(Undefined)\n        ", "0", "x91, ", "0", "x06,             ", "//", "Output(Data,Variable,Absolute)\n    ", "0", "xC0,                   ", "//", "END", " COLLECTION\n};\n", "\n", "运行结果", "\n", "====================", "BusHound监测设备枚举成功", "====================", "\n", "\n", "电脑已经能识别设备为HID了，所以枚举不存在问题。", "\n", "====================", "利用上述测试代码运行结果", "====================", "\n", "\n", "write buf_data success中的第一个数据“00”是报表ID，设备接收到的数据从第二个数据开始（“4”）；", "input report length是我加在hid_read函数里面的，其位置看下面代码：", "\n", "int", " HID_API_EXPORT HID_API_CALL hid", "_read(", "hid_device", " ", "*", "dev", ", ", "unsigned", " ", "char", " ", "*", "data", ", ", "size_t", " ", "length", ")", "\n{\n    return hid", "_read_timeout(", "dev", ", ", "data", ", ", "length", ", (", "dev", "->", "blocking", ")", "? -", "1", ": ", "0", ");\n}\n\n", "int", " HID_API_EXPORT HID_API_CALL hid", "_read_timeout(", "hid_device", " ", "*", "dev", ", ", "unsigned", " ", "char", " ", "*", "data", ", ", "size_t", " ", "length", ", ", "int", " ", "milliseconds", ")", "\n{\n    DWORD bytes_read = ", "0", ";\n    size_t copy_len = ", "0", ";\n    BOOL res = FALSE;\n    BOOL overlapped = FALSE;\n\n    ", "/* Copy the handle for convenience. */", "\n    HANDLE ev = dev->ol.hEvent;\n\n    ", "if", " (!dev->read_pending) {\n        ", "/* Start an Overlapped I/O read. */", "\n        dev->read_pending = TRUE;\n        memset(dev->read_buf, ", "0", ", dev->input_report_length);\n        printf(", "\"input report length:%d\"", ", dev->input_report_length);      ", "//添加printf的位置", "\n        ", "ResetEvent(", "ev", ")", ";\n        res = ", "ReadFile(", "dev", "->", "device_handle", ", ", "dev", "->", "read_buf", ", (DWORD)", " dev->input_report_length, &bytes_read, &dev->ol);\n\n        ", "if", " (!res) {\n            ", "if", " (", "GetLastError()", " != ERROR_IO_PENDING) {\n                ", "/* ReadFile() has failed.\n                   Clean up and return error. */", "\n                ", "CancelIo(", "dev", "->", "device_handle", ")", ";\n                dev->read_pending = FALSE;\n                goto end_of_function;\n            }\n            overlapped = TRUE;\n        }\n    }\n    ", "else", " {\n        overlapped = TRUE;\n    }\n\n    ", "if", " (overlapped) {\n        ", "if", " (milliseconds >= ", "0", ") {\n            ", "/* See if there is any data yet. */", "\n            res = ", "WaitForSingleObject(", "ev", ", ", "milliseconds", ")", ";\n            ", "if", " (res != WAIT_OBJECT_0) {\n                ", "/* There was no data this time. Return zero bytes available,\n                   but leave the Overlapped I/O running. */", "\n                return ", "0", ";\n            }\n        }\n\n        ", "/* Either WaitForSingleObject() told us that ReadFile has completed, or\n           we are in non-blocking mode. Get the number of bytes read. The actual\n           data has been copied to the data[] array which was passed to ReadFile(). */", "\n        res = ", "GetOverlappedResult(", "dev", "->", "device_handle", ", &", "dev", "->", "ol", ", &", "bytes_read", ", TRUE", "/", "*", "wait", "*", "/", ")", ";\n    }\n    ", "/* Set pending back to false, even if GetOverlappedResult() returned error. */", "\n    dev->read_pending = FALSE;\n\n    ", "if", " (res", " && ", "bytes_read > ", "0", ") {\n        ", "if", " (dev->read_buf", "[", "0", "]", " == ", "0x0", ") {\n            ", "/* If report numbers aren't being used, but Windows sticks a report\n               number (0x0) on the beginning of the report anyway. To make this\n               work like the other platforms, and to make it work more like the\n               HID spec, we'll skip over this byte. */", "\n            bytes_read--;\n            copy_len = length > bytes_read ? bytes_read : length;\n            memcpy(data, dev->read_buf+", "1", ", copy_len);\n        }\n        ", "else", " {\n            ", "/* Copy the whole buffer, report number and all. */", "\n            copy_len = length > bytes_read ? bytes_read : length;\n            memcpy(data, dev->read_buf, copy_len);\n        }\n    }\n\n", "\n", "====================", "上述程序运行后BusHound监测的内容", "====================", "\n", "\n", "这里可以看见，设备能正常获取set_report请求，并且完成数据接收，但是看不见get_report请求！", "\n", "====================", "串口调试工具监测设备获取到的主机请求", "====================", "\n", "\n", "其中，", "SETUP_BUFF data", "就是获取到的请求，在最后一个SETUP_BUFF data中可以看见设备获取到了set_report请求（21 09 00 02 00 00 40 00），", "RECV_BUFF", "是获取到的数据，为了不显示那么多，我只显示前10个字节的数据，可见设备能正常获取主机下发的数据，但是这里依然", "没有获取到get_report请求", "！", "\n", "我尝试过的方法", "\n", "====================", "尝试1", "====================", "\n", "首先我想到的是，会不会是hid_write函数影响了hid_read函数（虽然不太可能，但是也尝试了），于是我去除hid_write的调用，再次运行，结果还是没有发生改变", "\n", "====================", "运行结果、BusHound监测、串口工具监测", "====================", "\n", "\n", "\n", "\n", "很明显，不是hid_write函数的问题。", "\n", "====================", "尝试2", "====================", "\n", "接下来我想到的是描述符的问题，HID协议规定我们必须有一个控制端点以及一个中断输入端点IN（中断输出OUT端点是可选的），于是我修改了描述符的相关信息，过程如下：", "1.删除OUT端点描述符，结果：无变化", "2.删除IN端点描述符，结果：无变化", "3.将IN和OUT端点描述符都删除，结果：无变化", "以上修改都修改了配置描述符对应的长度、端点数量等信息，不存在修改漏洞。", "排除描述符的问题。", "\n", "====================", "尝试3（还未开始）", "====================", "再次阅读以及查看相关的历程，发现许多历程都可以收到get_report请求，而不通过get_report请求的方式，就是设备通过中断输入端点IN，通过主机轮询来发出数据，那么我的设备很可能就是用这种形式来收发的，但是在“尝试1中”，无论怎样都还是无法收到get_report请求（去除中断IN端点主机是否会通过get_report获取数据？）。主机通过IN发起轮询，我是能在控制端点监测到还是在中断输入端点IN监测到？", "\n", "我想要达到的结果，以及其他问题", "\n", "我想要的：", "我现在只想要让他", "通过控制端点传输数据", "啊！现在已经能获取set_report了，但是始终", "不能获取到get_report请求", "！我应该怎么做才能获取到get_report？（人麻了）", "\n", "其他问题：", "如果是“尝试3”的那种传输方式，我应该怎么去判断主机发送了IN请求？端点0进行判断还是在中断输入端点IN判断？这块我还不是很明白，求解！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;中断服务函数里还有while循环判断电平&amp;#xff0c;还有延时和显示函数调用。因为不知道你具体的中断初始化如何配置&amp;#xff0c;只能初步怀疑是while循环导致卡死在中断服务函数里了&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["stm32外部中断函数触发后返回不了主程序", ["我在中断程序中加入了延迟函数，会不会是由于这个的原因。而且我中断函数中执行的内容比较多，会不会也与这个有关"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've created the following video &lt;a href=\"https://youtu.be/ko-wKntCLjg\" rel=\"nofollow noreferrer\"&gt;https://youtu.be/ko-wKntCLjg&lt;/a&gt; to better demonstrate how to achieve this.&lt;/p&gt;\n\n&lt;p&gt;There are two options that are also shows in the video:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;the click on the link for adding the ldflags parameter: this is needed for Windows applications in order to allow them to be debugged as well as sometimes in CGO apps (or on OSX) for the same purposes. This is an issue with Go, not the IDE or the the debugger&lt;/li&gt;\n&lt;li&gt;the second option is the one that says Single instance only. I prefer my run configurations as such since they allow me to run them a single time and press the same shortcut to restart them when needed.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Depending on your operating system or application type, the first one might be needed, while the second one is purely functional for various use-cases (and as I've said, personal preference).&lt;/p&gt;\n\n&lt;p&gt;Hope this helps.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["使用gogland在主程序包上运行多个文件，然后运行/调试go应用程序", ["\n\n", "I downloaded latest Gogland in order to run/debug Go 1.8.1 applications.", "\n\n", "I have the exact problem in Latest Intellij Ultimate EAP.", "\n\n", "my project's ", "main", " package contains several files, when I try to run/debug it as a ", "Go Application", ", it acts as a ", "Go Single File", ".", "\n\n", "which means that when I try to run the application while choosing the main go file, it complains about missing variables definitions from other files on that same directory that are in the ", "main", " package as well.", "\n\n", "in the ", "Run Configuration", " when I choose ", "Package", " instead of ", "File", ", I can't choose the ", "main", " package.", "\n\n", "so how do I run/debug my project properly ?", "\n\n", "thanks! :)", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.当然是交换字符啊&amp;#xff0c;交换指针有什么用&amp;#xff1f;你还是对指针不够理解&amp;#xff0c;再复习一下相关概念&lt;br /&gt;2.cin只能读取到空格之前的&amp;#xff0c;算法没有问题&amp;#xff0c;如果想空格也读取&amp;#xff0c;用getline&lt;br /&gt;3.这个问题与运算符优先级有关&amp;#xff0c;看来你还是不够理解相关概念&amp;#xff0c;p&amp;#43;&amp;#43;代表p后移一位&amp;#xff0c;而&lt;em&gt;和&amp;#43;&amp;#43;优先级相同&amp;#xff0c;&lt;/em&gt;是右结合&amp;#xff0c;所以还是先&amp;#43;&amp;#43;&amp;#xff0c;然后再取出&amp;#xff08;p&amp;#43;&amp;#43;&amp;#xff09;这个表达式所指向的内容&amp;#xff0c;相当于*&amp;#xff08;p&amp;#43;&amp;#43;&amp;#xff09;&amp;#xff0c;而你取出内容后又没用&amp;#xff0c;所以效果一样&lt;br /&gt;4.当然输出str了&amp;#xff0c;因为字符串是str&amp;#xff0c;你这个程序只是把第i个和倒数第i和交换&amp;#xff0c;所以最后q并不指向开头&amp;#xff0c;而是中间的位置&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写c++主程序 利用指针将字符串逆序输出遇到的问题", ["\n", "\n", "\n", "\n", "\n", "\n", "除此之外，还有一个小小的疑惑", "为何cout的不可以指针q而一定要是str", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Either use the correct path in your &lt;code&gt;main.go&lt;/code&gt;, which is the proper way or use &lt;a href=\"http://golang.org/pkg/go/build/\" rel=\"nofollow\"&gt;build constraints&lt;/a&gt; to disable that file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// +build local\n\npackage main\n\n//other code\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then to locally build it use &lt;code&gt;go build -tags local&lt;/code&gt; or &lt;code&gt;go run -tags local&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["Go，Golang：主程序出现travis错误，进入get -v", ["\n\n", "In my repo's subdirectory, I have some scripts with ", "package main", " to show some example usage fo my package. But this gives me the following errors when being tested on Travis.", "\n\n", " repo\n\n example-dir\n      sub-dir\n          main.go  // this gives me error like the following\n", "\n\n", "\ngithub.com/~/directory-for-main-program\nThe command \"go get -v ./...\" failed. Retrying, 2 of 3.\n", "\n\n", "I see this error only in Travis , not in local machine with ", "go test", ".", "\n\n", "Is there anyway to separate the main program and still able to pass the Travis testing?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Profiles is one to accomplish this, but you can also specify a 'depth' for the runner:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ goconvey -depth=0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A value of &lt;code&gt;0&lt;/code&gt; limits the runner to the working directory.&lt;/p&gt;\n\n&lt;p&gt;Run &lt;code&gt;goconvey -help&lt;/code&gt; for details.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["使用goconvey明确指定要在golang中运行测试的主程序包", ["\n\n", "How do I explicitly say with my go test command to run only tests for the main package and not others in my source directory.", "\n\n", "At the moment it's working with ", "$go test -v", ". But... I am using goconvey as well and it seems to be running recursively. According to this page ", "https://github.com/smartystreets/goconvey/wiki/Profiles", " I have a file where I can pass arguments into the go test command. I know you can ", "go test -v ./...", " for recursive or ", "go test -c packagename/...", " but how do I just do it for the main?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;When you run &lt;code&gt;go build&lt;/code&gt; or &lt;code&gt;go install&lt;/code&gt; the command expects a list of packages to process. If no import paths are given, the action applies to the package in the current directory. &lt;/p&gt;\n\n&lt;p&gt;So if there is no &lt;code&gt;package main&lt;/code&gt; in your root directory, no executable will be produced.&lt;/p&gt;\n\n&lt;p&gt;The command doesn't look in subdirectories. You may have multiple commands in your &lt;code&gt;cmd&lt;/code&gt; directory. In this case it won't know which one to build. And building all of them every time is wasteful.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["将一个主程序包放在cmd / myapp子目录中可以吗？", ["\n\n", "this is my first Go project and I have had a hard time grasping the different documents on code organization (e.g. I found it somewhat hard to tell which ones have been superceded, or apply to deprecated vendoring tools/approaches). I finally settled on Ben Johnson's ", "Standard Package Layout", ", with a very slim root package (in the root directory of my project) and most code in internal/pkg/...", "\n\n", "However, I've added a cmd/myapp dir and put my main.go file for the executable program in there, since I understood that to be a common pattern.", "\n\n", "So now I have:", "\n\n", "myapp\n|\n+- myapp.go   // \"package myapp\", with only type and interface declarations and no imports\n|\n+- cmd\n|   |\n|   +- main.go // \"package main\", with import gitlab.tld/username/myapp, gitlab.tld/username/myapp/internal/pkg/routing etc.\n|\n+- internal\n    |\n    +- pkg\n        |\n        +- routing\n        |    |\n        |    +- routing.go // \"package routing\"\n        |\n        +- sql \n        |\n        +- etc.\n", "\n\n", "Now, when I go to cmd/myapp and call ", "go build", ", it builds fine and leaves an executable that does what it's supposed to do right there. But when I call ", "go build -v", " from the project's main directory, no executable is produced. In fact, only myapp.go seems to be processed which contains only type definitions. (And of course, ", "go install", " does not produce a binary either. ", "go get -v gitlab.tld/username/myapp", " also does not seem to do anything.)", "\n\n", "So I have the suspicion that this is not how it is meant after all, but I am not even so sure about that. Is there a problem with the project layout, or did I get the usage of go tooling wrong?", "\n\n", "Thanks for any help you might provide to this go newbie,", "\n\n", "Andreas", "\n    "]], "Tag": "程序设计"}
{"Answer": "dll导出UI资源时要设置资源模块切换", "Konwledge_Point": "主程序", "Question": ["用dll封装了richview的功能,但是主程序调用该dll时,richview的功能不起作用?", ["我在使用richview时,把该业务内容封装在了dll中,然后供其他exe程序调用,但是打开后,一些自带的功能不起作用,不知怎么回事?", "\n哪位前辈指点一二,谢谢!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;让它继续运行而不会中途停止&lt;br /&gt;就是使用try except啊。&lt;br /&gt;你这个try我的代码&amp;#xff0c;他会先打印我设置的except语句&amp;#xff0c;再报错&amp;#xff08;不添加try语句时的错误&amp;#xff09;&lt;br /&gt;是个什么意思&amp;#xff1f;&amp;#xff1f;&lt;br /&gt;瞅瞅你try except咋写的&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python调用第三方模块，模块中函数判断报错，怎么在主程序中判断报错的信息", ["我写的一段代码，向模块中传入参数，用循环取得数据。先传入模块中第一个函数里，这个函数再调用第二个函数运算，第二个函数会对数据进行判断，如果我的参数有问题会直接raise报错，程序就停止了。我不想让它停止，我想在我的代码里对这个报错信息进行判断（或者直接修改模块）如果是这个报错信息，我重新给他一个参数让它继续运行而不会中途停止。请问怎么可以做到，我试过try except不行，try我的代码，他会先打印我设置的except语句，再报错（不添加try语句时的错误）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;/span&gt;:\n        &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;__name__&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入n的值&amp;#39;&lt;/span&gt;))))&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/41203979563612.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["使用函数实现斐波那契数列的第n项，并在主程序中调用，用户从键盘输入n的数值，程序打印显示对于的斐波那契数列项", ["提示文本及输出文本要和样例一致，否则会被判错", "提示输入n的值8", "结果：21 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在定时器中断里刷新LED&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于#51单片机#的问题：我在主程序循环里延时1秒,数码管就刷新不动了. 我在串口中断程序里延时,能减少串口输出频率,但不解决根本问题.", ["STC89C51单片机连接2字数码管,每秒增加1. 即01.02.03...60, 再回零循环. 这段没有问题,我知道数码管是不停的刷新形成视觉差显示数字.", "但此时我想把数码管显示的数字,通过串口发送给电脑, 从COM1发送到COM2,接受正常.但是我收到的是每秒几百个01.02.03... 虽然这也是正常的. 但不是我想要的,我只想每增加一次数字,串口仅发送一次数码管等值的数据. 该怎么实现呢?", "\n", "\n", "#include\"reg51.h\"", "\n", "#define uchar unsigned char", "\n", "#define uint unsigned int", "\n\nuchar tab[]={", "0", "xc0,", "0", "xf9,", "0", "xa4,", "0", "xb0,", "0", "x99,", "0", "x92,", "0", "x82,", "0", "xf8,", "0", "x80,", "0", "x90}; ", "//", "LED0-", "9", "对应的管码\n\nuchar data_L,data_H; ", "//", "定义个位和十位数据类型 \nuchar t,a; ", "//", "计数\nunsigned int num;  ", "//", "建立全局变量\n\nvoid delay(uint k) ", "//", "延时", "0.1", "ms函数\n{\n    uint m,n;\n    ", "for", "(m=", "0", ";m<k;m++)\n    {\n        ", "for", "(n=", "0", ";n<", "120", ";n++);\n    }\n}\n\nvoid display (void) ", "//", "显示函数\n{\n    P2=", "0", "x01;                    ", "//", "d7-d0=", "00000001", " ,p2^", "0", "=", "1", " 高电平，数码管不亮。\n    P0=tab[data_H];        ", "//", "十位数字显示，按照tab表的顺序取值。\n    delay(", "1", ");                    ", "//", "延时", "0.1", "ms\n    P2=", "0", "x02;                    ", "//", "d7-d0=", "00000010", "，p2^", "1", "=", "1", " 高电平，数码管不亮。\n    P0=tab[data_L];        ", "//", "个位数字显示，按照tab表的顺序取值。\n    delay(", "1", ");                    ", "//", "延时", "0.1", "ms\n}\n\nvoid Timer0() interrupt ", "1", " ", "//", "T0定时器，方式", "1", " ", "50", "ms 计时\n{\n    t++;                            ", "//", "每t满", "50", "ms，自加\n    TH0=", "0", "x4c;                  ", "//", "TMOD初值\n    TL0=", "0", "x00;                  ", "//", "TMOD初值\n}\nvoid data_tim(void) ", "//", "59", "s 计数\n{\n    ", "if", "(t==", "20", ")                    ", "//", "t自加到t=", "20", "时，累计", "20", "*", "50", "ms=", "1", "s, \n    {\n        a++;                        ", "//", "a自加\n        t=", "0", ";                        ", "//", "t=", "20", "时，累计到", "1", "s,t清零，重新开始累计", "1", "s.\n        ", "if", "(a==", "60", ")                ", "//", "当a=", "60", ",", "59", "s计时计数\n        {\n            a=", "0", ";                    ", "//", "a清零，重新开始累计a.\n        }\n    }\n}\n\nvoid data_in(void)     ", "//", "分割数值到十位和个位\n{\n    data_L=a%", "10", ";            ", "//", "取a除", "10", "的余数，例如", "25", "/", "10", "=", "2", "余", "5", "，个位数就是", "5", ".\n    data_H=a", "/10;            /", "/取a整除10的值，例如25/", "10", "=", "2", "余", "5", "，十位取整就是", "2", ".\n}\n\nvoid T0_init(void) ", "//", "T0定时器初始化\n{\n    TMOD=", "0", "x01;                 ", "//", "T0计时器以方式", "1", "工作\n    TH0=", "0", "x4C;                    ", "//", "50", "ms初值\n    TL0=", "0", "x00;                    ", "//", "50", "ms初值\n    ET0=", "1", ";                         ", "//", "允许T0计时器中断 \n    TR0=", "1", ";                         ", "//", "启动T0计时器\n    EA=", "1", ";                         ", "//", "开启总中断\n}\n\n\n\nvoid UartInit(void)        ", "//", "串口初始化 ", "9600", "bps@", "11.0592", "MHz\n{\n    PCON |= ", "0", "x80;        ", "//", "使能波特率倍速位SMOD\n    SCON = ", "0", "x50;        ", "//", "8", "位数据,可变波特率\n    TMOD &= ", "0", "x0F;        ", "//", "设置定时器模式\n    TMOD |= ", "0", "x20;        ", "//", "设置定时器模式\n    TL1 = ", "0", "xFA;            ", "//", "设置定时初始值\n    TH1 = ", "0", "xFA;            ", "//", "设置定时重载值\n    ET1 = ", "0", ";            ", "//", "禁止定时器中断\n    TR1 = ", "1", ";            ", "//", "定时器", "1", "开始计时\n}\n\n\nvoid Uart_Send_Byte(unsigned char Byte)  ", "//", "串口中断服务函数\n{\n    SBUF = Byte;\n    ", "while", "(TI==", "0", ");\n    TI=", "0", ";\n}\n\n    \nvoid main(void)\n{\n    a=", "0", ";                            ", "//", "计数从", "0", "开始\n    T0_init();                ", "//", "T0计时器初始化\n    UartInit();                ", "//", "串口初始化\n    ", "while", "(", "1", ")                    ", "//", "循环\n    {\n        data_tim();            ", "//", "59", "s计数\n        data_in();            ", "//", "分割十位个位\n        display();            ", "//", "显示        \n        Uart_Send_Byte(a); ", "//", "发送字符\n    }\n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;尝试使用cv.img &amp;#61; ImageTk.PhotoImage(tu)。然后在下面的create_image中用cv.img&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["tkinter canvas按钮绑定的画图方法（picturer）画不出图，但如果不绑定，直接在主程序中执行，如图中被#的部分，则能正常画图，请问如何解决", ["\n\n```python\nfrom tkinter import", " *\n", "from PIL import Image,ImageTk,ImageDraw\n\nroot=", "Tk()", "\nroot.geometry('", "800", "x500')\nframe=", "Frame(", "root", ")", "\nframe.grid(row=", "0", ",column=", "0", ",rowspan=", "10", ")\nhbar=", "Scrollbar(", "frame", ",", "orient", "=HORIZONTAL)", "\nvbar=", "Scrollbar(", "frame", ",", "orient", "=VERTICAL)", "\ncv=", "Canvas(", "frame", ",", "bg", "='", "khaki", "',", "width", "=600,", "height", "=400,", "xscrollcommand", "=", "hbar", ".", "set", ", ", "yscrollcommand", "=", "vbar", ".", "set", ",", "scrollregion", "=(0,0,1600,1200)", ")\n\nhbar.pack(side=BOTTOM,fill=X)\nhbar.config(command=cv.xview)\nvbar.pack(side=RIGHT,fill=Y)\nvbar.config(command=cv.yview)\ncv.pack(side=LEFT,expand=True,fill=BOTH)\n\nimage1 = ", "Image", ".", "open", "(", "\"111.jpg\"", ")\nimg = ImageTk.", "PhotoImage(", "image", "=", "image1", ")", "\nmainImage=cv.create", "_image(0,0,", "anchor", "=NW,", "image", "=", "img", ")", "\ndraw = ImageDraw.", "Draw(", "image1", ")", "\ncv.itemconfig(mainImage,image=img)\n\n# the_t = ", "Image", ".", "open", "(", "\"2.jpg\"", ")\n# img11 = ImageTk.", "PhotoImage(", "the_t", ")", "\n# hh=cv.create", "_image(10,80,", "anchor", "=NW,", "image", "=", "img11", ",", "tags", "=('", "tu", "',)", ")\n\ndef picturer", "()", ":\n    tu = ", "Image", ".", "open", "(", "\"2.jpg\"", ")\n    img = ImageTk.", "PhotoImage(", "tu", ")", "\n    hh=cv.create", "_image(10,80,", "anchor", "=NW,", "image", "=", "img", ",", "tags", "=('", "tu", "',)", ")\n\nbt=", "Button(", "root", ",", "text", "='画图',", "command", "=", "picturer", ")", "\nbt.grid(row=", "0", ",column=", "1", ")\n\nroot.mainloop", "()", "\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码修改如下&amp;#xff0c;如有帮助&amp;#xff0c;请帮忙采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/183383453536171.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; printRectangularareas(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numberOfAreas){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; number1,number2;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            number1 &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;) (Math.random()*&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n            number2 &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;) (Math.random()*&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; !&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(number1*number2&amp;#43; &amp;#34; &amp;#34;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(number1*number2);\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;The area of 100 rectangles is \\n&amp;#34;);\n        printRectangularareas(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["一．编写一个计算矩形面积的方法编写一个计算矩形面积的方法及主程序，并产生100对 （100×2个）两位随机整数，计算并输出100个矩形的面积，按10行输出。", ["Java语言怎么产生100对两位随机数，最后每行10个数输出矩形的面积"]], "Tag": "程序设计"}
{"Answer": "可以使用messagebox，不指定handle参数，那么它就是非模态的，用sendmessage wm_close关闭。", "Konwledge_Point": "主程序", "Question": ["MDGBOX作为子程序显示的时候怎么样者关闭它？", ["MDGBOX作为子程序显示的时候，怎么样能够在它返回以前在主程序调用或者关闭它？"]], "Tag": "程序设计"}
{"Answer": "使用setparent函数设置目标程序作为子程序运行。", "Konwledge_Point": "主程序", "Question": ["嵌入式程序的设计方式，怎么把exe执行放在窗体程序中作为子程序？", ["怎么设计windows嵌入式程序，怎么把程序嵌套在一起主程序将exe作为子程序在窗体内调用？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你将功能定义为函数&amp;#xff0c;通过函数参数和返回值设置即可&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python子程序传参,输入输出问题", ["本人小白一枚，现在需要调用子程序，传入两个list到子程序，输出两个list返回到主程序，有没有哪位好心人告诉我怎么弄???，以下是我用简单数据做的测试程序，输入为x=[1,2,3],y=[2,4,6], 输出为a和b", "\n\n", "主程序 test1:", "\n\n", "import os", "\nimport sys", "\nimport pandas as pd", "\nimport subprocess", "\nfrom subprocess import PIPE,Popen", "\n\n", "\np=subprocess.Popen('F:/模拟/python控制/test2.py',stdin=PIPE,stdout=PIPE,stderr=PIPE,shell=True)", "\nx=[1,2,3]", "\ny=[2,4,6]", "\np.stdin.write([x,y])", "\n[a,b]=p.stdout.readline()", "\np.stdout.flush()", "\nerr=p.stderr.readline()", "\np.stderr.flush()", "\n\n", "子程序 test2:", "\n\n", "import sys", "\nx=sys.stdin.readline()", "\na=[0,0,0]", "\nb=[0,0,0]", "\nfor i in range(3):", "\n    a[i]=x[i]-y[i]", "\n    b[i]=x[i]-y[i]", "\nsys.stdout.write(a,b)", "\nsys.stdout.flush()", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "1、用call语句调用；2、用USR函数调用", "Konwledge_Point": "主程序", "Question": ["汇编语言子程序的调用与返回", ["定义一个子程序：回车换行，主程序：从键盘接收一个字符串，调用子程序，继续从键盘接收一个字符，调用子程序，把输入的字符串用第二次输入的字符截断，显示截断后的结果。"]], "Tag": "程序设计"}
{"Answer": "打开升级程序，让升级程序去关闭驻程序（sendmessage wm_close），删除主程序，下载新程序，启动新程序，自己退出。", "Konwledge_Point": "主程序", "Question": ["delphi 程序升级求思路？", ["在做程序升级的时候，当新升级程序下载完毕后，后面的是怎么处理的呢？", "\n我做的步骤是，下载升级程序，重命名主程序，复制升级程序到主目录，关闭主程序，删除主程序，打开升级程序。", "\n但是只要关闭了主程序，后面的代码就不执行了。怎么破老师。", "\n大家有没有好的思路，或者老师们是怎么解决升级问题的，不想用什么BAT文件。"]], "Tag": "程序设计"}
{"Answer": "把http://www.mamicode.com/info-detail-50277.html 的代码粘贴上去\r\n这篇文章讲解的很详细。", "Konwledge_Point": "主程序", "Question": ["高分悬赏：Java语言编写一个多线程的例子程序给我，要完整，要求如下：", ["高分悬赏：Java语言编写一个多线程的例子程序给我，要完整，要求如下：", "\n（1）分为10个以上的不同的线程，每个做不同的事情", "\n（2）每个线程执行的时间超过10秒钟", "\n（3）主程序触发所有的线程同时执行", "\n（4）线程执行不能卡，需要回报其中的结果到主程序。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;文件找不到&amp;#xff0c;估计是jiequ.png路径不对吧&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pytesseract程序打包后运行报错现象问题解决", ["pyinstaller打包自动识别数字的主程序后，pytesseract程序报错，但未打包主程序之前，程序运行正常，无报错问题。", "\n", "def", " ", "shibie_data", "(", "self", "):\n        ", "'''3、识别图片中的数字'''", "\n        ", "# text = pytesseract.image_to_string(Image.open(\"./save_img/test11.png\",lang=\"eng\")) ", "\n        pytesseract.pytesseract.tesseract_cmd = ", "\"./Tesseract/tesseract.exe\"", "\n        text = pytesseract.image_to_string(Image.", "open", "(", "\"./save_img/jiequ.png\"", ")) \n        ", "print", "(", "\"返回坐标信息:\"", ",text)\n        ", "return", " text\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第6行 str改   str[80]&lt;br /&gt;第10行 str[80] 改str&lt;br /&gt;第16行   *pd &amp;#61; *pc &amp;#61; *pt &amp;#61; 0;&lt;br /&gt;第19行 最中间的  &amp;amp;&amp;amp; 改 ||&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["改正程序中的错误并使程序能够正常运行", ["函数fun完成的是对一个给定字符串，统计其中数字，大小写字母和其他符号的个数功能，在主程序中输入字符串并调用函数fun，接收并输出返回的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果获取GPS需要大量时间的话&amp;#xff0c;你最好跑OS&amp;#xff0c;&lt;br /&gt;虽然你可以把GPS放主程序&amp;#xff0c;把按键检测及处理放定时器&amp;#xff0c;但不推荐&amp;#xff0c;因为这样要是扩展新功能的话会很麻烦&lt;br /&gt;你把GOS放定时器里明显不合适&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于stm32 程序并发的问题", ["做了一个人小程序，主要功能有两个：", "1.扫描按键，当按键按下后打开继电器开关，再次按下，则关闭继电器", "2.定时上传串口重GPS模块中获取的坐标到服务器", "\n", "现在遇到个问题就是：", "1.如果将两个功能都写在主程序中，会出现，按下键很久才会打开继电器，主要是获取GPS占用了太多cpu时间", "2.之后把GPS这段代码放到定时器TIM3中，但是又出现可能获取不到串口数据或者是GPS获取时间太长，反正得不到想要的结果，之后又想了很多办法，发现程序都不稳定", "\n", "初入单片机大门，很多都不是很清楚，有大神或者有这方面经验的朋友给个思路好嘛，万分感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有四舍五入&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fun&lt;/span&gt;():\n    &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;myfile.txt&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f: &lt;span class=\"hljs-comment\"&gt;# 创建myfile.txt&amp;#xff0c;并准备写入&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;# 从10数到30&lt;/span&gt;\n            a &amp;#61; i**&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 对每一个数开平方&amp;#xff0c;默认得到正的平方根&lt;/span&gt;\n            b &amp;#61; -a &lt;span class=\"hljs-comment\"&gt;# 负平方根&lt;/span&gt;\n            f.write(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;的平方根是&lt;span class=\"hljs-subst\"&gt;{a}&lt;/span&gt;和&lt;span class=\"hljs-subst\"&gt;{b}&lt;/span&gt;\\n&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;# 写入myfile.txt&amp;#xff0c;每个数换行&lt;/span&gt;\n            \n    &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;myfile.txt&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f: &lt;span class=\"hljs-comment\"&gt;# 打开myfile.txt&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f.read()) &lt;span class=\"hljs-comment\"&gt;# 把myfile.txt读出的内容打印在控制台&lt;/span&gt;\n\nfun()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["如何用Python写出最简单的代码，并附解释", ["编写函数fun()，将整数10～30及它们的平方根写到名为myfile.txt的文本文件中，然后按顺序读出并显示在屏幕上。在主程序中调用函数fun。"]], "Tag": "程序设计"}
{"Answer": "参考：http://zhidao.baidu.com/link?url=L3_0LQOlle5leQIk1Nhoxc7kl3qjCS4ytx_6jCHAGU2U0VlNlBoa0iJ_GU6CM8vP-A4aXwN6G6nLG5GSAfqlgq", "Konwledge_Point": "主程序", "Question": ["编写程序输入一句话，统计26个字母出现的个数", ["编写程序输入一句话，统计26个字母出现的个数 ", "\n主程序输入一句话，使用一个函数tongji实现"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;huiwen&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(str)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;j)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(str[i] !&amp;#61; str[j])\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        i&amp;#43;&amp;#43;;\n        j--;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(buf);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;huiwen&lt;/span&gt;(buf))\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是回文串&amp;#34;&lt;/span&gt;);\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文串&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["vc++6.0编程教学", ["编写一函数测试一个字符串是否是回文串。在主程序中输入，并调用函数进行判断。", "编写一函数测试一个字符串是否是回文串。在主程序中输入，并调用函数进行判断。", "求解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的问题&amp;#xff0c;应该是在GUI上的操作如何与你的程序相关联&amp;#xff0c;其实就是事件绑定&amp;#xff0c;比如点击某个菜单&amp;#xff0c;需要执行你程序中的某个功能&amp;#xff0c;如何绑定&amp;#xff0c;参考 &lt;a href=\"https://blog.csdn.net/chenghit/article/details/50421090\"&gt;https://blog.csdn.net/chenghit/article/details/50421090&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;若有帮助&amp;#xff0c;望点击我回答右上角【采纳】按钮&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["如何将wxpython写的GUI和我写的程序连接起来？", ["我想给我自己的程序加一个GUI，于是用wxpython写了一个GUI，但是我不清楚如何将我的程序.py和GUI.py这两个文件相连，请教各位？", "\n", "我的主程序是一个循环结构"]], "Tag": "程序设计"}
{"Answer": "cin.clear();\r\ncin.sync();   //或者用cin.ignore();", "Konwledge_Point": "主程序", "Question": ["cin缓冲区清理,主体程序被强制结束循环。", ["在做练习题的时候，准备将两个程序写成函数，再用主程序调用。", "\n通过选择调用函数后，由cin输入字符，完成输出后，缓冲区还存有多余字符（尤其是空字符开头）。", "\n导致主程序调用时判断循环结束，停止程序。", "\n\n", "#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\nvoid p5_8();\nvoid p5_9();\n\nint main()\n{\n    int num;\n    cout << \"code to use: \";\n    cin >> num;\n    while (num != 0)\n    {\n        if (num == 1)\n            p5_8();\n        else if (num == 2)\n            p5_9();\n        cout << \"code to use: \";\n        cin >> num;\n    }\n    return 0;\n}\n\nvoid p5_8()\n{\n    char word[100];\n    int count = 0;\n    cout << \"Enter words (to stop, type the word done):\" << endl;\n    cin >> word;\n\n    while (strcmp(word, \"done\") != 0)\n    {\n        if (bool(cin >> word) == true)\n            count++;\n    }\n\n    cout << endl << \"You entered a total of \" << count << \" words.\" << endl;\n        //cin.sync();\n}\n\nvoid p5_9()\n{\n\n    string word;\n    int count = 0;\n    cout << \"Enter words (to stop, type the word done):\" << endl;\n    cin >> word;\n\n    while (word != \"done\")\n    {\n        if (bool(cin >> word) == true)\n            count++;\n    }\n\n    cout << \"You entered a total of \" << count << \" words.\" << endl;\n        //cin.sync();\n}\n", "\n\n", "\n\n", "尝试使用sync(),clear(),都未成功。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我的思路如下&amp;#xff1a;&lt;br /&gt;1、定义一个全局整数数组key&amp;#xff0c;用于向加密函数cnrypt传入学号。&lt;br /&gt;&lt;br /&gt;2、定义加密函数encrypt&amp;#xff0c; 用一个while循环遍历姓名字符串&amp;#xff0c;当姓名字符串结束或达到第9个字符后停止加密过程&amp;#xff0c;&lt;br /&gt;循环体用于加密姓名字符串的前9个字符&amp;#xff0c;用姓名字符串当前字符加上学号数组相应位置的整数赋值给姓名字符串的相应元素。&lt;br /&gt;&lt;br /&gt;3、mian函数先获取姓名字符串输入&amp;#xff08;可以直接用姓名字符串初始化姓名字符数组&amp;#xff09;&amp;#xff0c;&lt;br /&gt;然后获取学号&amp;#xff0c;把学号每一位分解存储学号数组&amp;#xff08;这里可以直接用学号初始化学号数组&amp;#xff09;&amp;#xff0c;&lt;br /&gt;然后调用加密函数encrypt加密姓名字符串&amp;#xff0c;&lt;br /&gt;最后打印加密后的姓名字符串。&lt;br /&gt;&lt;br /&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//存储学号&amp;#xff0c;这里可以直接初始化为自己的学号&amp;#xff0c;因为encrypt函数没有int指针参数&amp;#xff0c;所以这里定义一个全局int数组&amp;#xff0c;用于把学号传入函数 &lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; key[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;];\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;encrypt&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;n&amp;amp;&amp;amp;i&amp;lt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;){\n        \n        p[i] &amp;#61; p[i]&amp;#43;key[i];\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//p[n]&amp;#61;&amp;#39;\\0&amp;#39;;&lt;/span&gt;\n    \n} \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; my_name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//存储姓名 &amp;#xff0c;这里可以直接初始化为自己的姓名 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请以大写字母形式输入姓名的拼音:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(my_name);  &lt;span class=\"hljs-comment\"&gt;//获取姓名  &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    puts(my_name);&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    while(getchar()!&amp;#61;&amp;#39;\\n&amp;#39;){&lt;!-- --&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//        continue;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    }&lt;/span&gt;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入9位的学号&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;id);  &lt;span class=\"hljs-comment\"&gt;//获取学号&amp;#xff0c;可以在int数组key定义时直接初始化 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(id!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){  &lt;span class=\"hljs-comment\"&gt;//把学号的每一位分解出来赋值给学号数组 &lt;/span&gt;\n        temp&amp;#61; id%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        id/&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        key[i]&amp;#61;temp;\n        i--;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//调用加密函数 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;encrypt&lt;/span&gt;(my_name,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(my_name)); \n    &lt;span class=\"hljs-comment\"&gt;//打印加密后的姓名字符串  &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;加密后的姓名字符串为&amp;#xff1a;%s\\n&amp;#34;&lt;/span&gt;,my_name);  \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/829242159556136.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写程序并完成上机调试实现以上功能要求。", ["在主程序中以自己的姓名拼音的连续大写英文字母初始化一个my_name[ ]字符数组，作为原码，以自己的9位学号为密钥定义整形数组变量key[9]，编写加密函数void encrypt(char*p，int n)，其中n为名字my_name[ ]字符数组的元素个数，对my_name逐个字符进行加密变换，即my_name[1]=my_name[1]+ key[1],my_name字符超出9个的尾部不做变换，在主程序中调用encrypt函数，并输出加密后的字符数组元素。编写程序并完成上机调试实现以上功能要求。（希望有人可以answer一下me，三克油！♥）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include&amp;lt;stdio.h&amp;gt;int main()\n{double sum,inp;int num&amp;#61;0;\nputs(&amp;#34;请输入一系列浮点数&amp;#xff0c;输入任意字母按回车结束^_^&amp;#34;);for(sum&amp;#61;0.0;1&amp;#61;&amp;#61;scanf(&amp;#34;%lf&amp;#34;,&amp;amp;inp);&amp;#43;&amp;#43;num)\nsum&amp;#43;&amp;#61;inp;if (num&amp;#61;&amp;#61;0)\nputs(&amp;#34;你没有输入有效的浮点数^_^&amp;#34;);else\nprintf(&amp;#34;总共输入%d个数&amp;#xff0c;平均值%f&amp;#34;,num,sum/num);return 0;\n}&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["编写c语言程序计算从键盘输入的任意多个浮点数的平均值", ["编写c语言程序计算从键盘输入的任意多个浮点数的平均值，要求：", "\n1. 将所有的待平均数据存储到动态内存分配的内存中；", "\n2. 最终显示平均值,小数点后保留 1 位；", "\n3. 动态内存的申请与操作均在自定义函数中完成，主程序中调用此函数。"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/257856332.html", "Konwledge_Point": "主程序", "Question": ["mdsn外定义的函数都包括在什么程序里，vb能不能使用java控件上的函数呢？", ["mdsn外定义的函数都包括在什么程序里，vb能不能使用java控件上的函数呢？java函数有什么接口让vb的主程序实现调用，以tofix举例？"]], "Tag": "程序设计"}
{"Answer": "double Pline[10000][5000];\r\n这样的局部变量没法传入对话框，需要放在堆上用指针传入\r\n\r\n另外你的代码目前没看到会导致按钮无效的地方。是不是你对话框有大量的计算，在OnInitDialog或者OnDraw里，导致窗体无法响应事件处理。", "Konwledge_Point": "主程序", "Question": ["MFC对话框中菜单栏如何调用子程序（一直等。。）", ["背景：写了个程序是分步完成的。想把程序包装好看点", "\n主要目的：1、 多个菜单栏分别调用新对话框进行分步运算    2、运算的值能否保留或传递", "\n程序平台： VC2008或以上的对话框程序   注意不是单文档程序", "\n具体描述：  程序基本写完，采用几个小的对话框模块软件完成，现在想包装集成一块     主要通过多个菜单栏调用小程序完成。   注意最好不要通过直接调用外部程序的方式实现。    因为我想提高程序的效率，如：模块A运算完的结果Pline[10000][5000]数据继续保存   模块B运算前就可以直接用Pline[10000][5000]数据。", "\n    **** 例：", "\n        //主程序", "\n        void CXXXXDlg::OnBnClickedButton3()", "\n{", "\n    // TODO: Add your control notification handler code here", "\n    CString input;", "\n    CString output;", "\n    double Pline[10000][5000];", "\n}", "\n// 菜单栏响应函数   Cmydlg为自定义的对话框类(也就是要调用的子程序对话框类)", "\n        void CXXXXDlg::On32774()", "\n{", "\n    // TODO: Add your command handler code here****", "\n Cmydlg Fault1;", "\n Fault1.DoModal();    //这个函数只是弹出新的对话框  新对话框里面的button按钮根本点击不了", "\n}", "\n\n", "// 菜单栏弹出对话框  button按钮代码  希望里面可以直接用主程序里面的一些变量值", "\n  void Cmydlg::OnBnClickedButton1()", "\n{", "\n    // TODO: Add your control notification handler code here", "\n    CString input;", "\n    CString output;", "\n    double Pline[10000][5000];", "\n}", "\n 因为对MFC消息处理方面知识不太懂，可能描述不太清楚，如有不清楚的地方我会及时说明  希望有高手可以解答！！！ "]], "Tag": "程序设计"}
{"Answer": "找到Msi安装包对应的注册表的信息，将DisplayName的值置为空在控制面板就不显示了。\r\n比如VMware安装包的注册表是\r\n\r\n\r\n```\r\n \r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\VMware_Workstation\r\n```\r\n\r\n然后将DisplayName的注册表值用代码设置为空就可以了。当然前提是Msi先安装，然后设置这个值。", "Konwledge_Point": "主程序", "Question": ["installshield嵌套msi后，如何让msi软件不显示在控制面板的程序那边？", ["用installshield制作安装包的过程中，有个小功能用了wix制作的msi来实现，嵌套后目前可以静默安装跟卸载，但是由于它会在控制面板中显示，感觉很不友好，我想问问看能不能整合成一个安装包，用户使用时他看到的还是一个程序，同时也避免用户保留installshield主程序而将msi产生的给卸载了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;uint lcd_initial;&lt;br /&gt;这句有问题&amp;#xff0c;这句把lcd_initial声明为一个整形变量&amp;#xff0c;但后面又有个lcd_initial()函数调用&amp;#xff0c;所以编译器提示这个不是函数。&lt;br /&gt;看代码里&amp;#xff0c;你应该没有把这个作为变量用&amp;#xff0c;所以应该是这句声明写错了&amp;#xff0c;把这句改为void lcd_initial();即可&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编译显示call not to a function 怎么解决", ["#include <reg51.h>", "#include <intrins.h>", "#include <string.h>", "#define uint  unsigned int", "#define uchar unsigned char", "\n", "//音阶键盘对应频率的定时器初始值", "uint code Tone_Delay[]={61719,62135,62506,62679,62985,63263,63512,63624,63833,64019,64104,64260,64399,64523,64581,64685};", "\n", "//歌曲《找朋友》", "uchar code Song1[]={11, 12, 11, 12, 11, 12, 11,16,", "          11, 14, 13, 12, 11, 11, 9,16,", "          11, 11, 9,  10, 11, 11, 9,16,", "          8,  10, 9,  8,  7,  8,  7", "          };", "//歌曲《两只老虎》", "uchar code Song2[]={7,  8,  9,  7,", "          7,  8,  9,  7,", "          9,  10, 11,16,", "          9,  10, 11,16,", "          11, 12, 11, 10, 9,16,  7,16,", "          11, 12, 11, 10, 9,16,  7,16,", "          8,  4,  7,16,", "          8,  4,  7", "          };", "//歌曲《新年好》", "uchar code Song3[]={7,17,  7,17,  7,16,  4,16,", "          9,17,  9,17,  9,16,  7,16,", "          7,  9,  11,16, 11,16, 10, 9,  8,16,", "          8,  9,  10,16, 10,16,", "          9,  8,  9,16,  7,16,", "          7,  9,  8,16,  4,16,  6,  8,  7", "          };", "//歌曲《我和我的祖国》", "uchar code Song4[]={11, 12, 11, 10, 9,  8,  7,16,  4,16,", "          7,  9,  14, 13, 12,16, 9,  11,16,", "          12, 13, 12, 11, 9,  8,16,  5,16,", "          6,  5,  4,  11, 7,16,  8,  9,16,", "          11, 12, 11, 10, 9,  8,  7,16,  4,16,", "          7,  9,  14, 13, 15,16, 14, 12,16,", "          14, 13, 12, 11,16,", "          12, 11, 10, 9,16,", "          6,16,  5,  4,16,  8,  7", "          };", "//歌曲《天空之城》", "uchar code Song5[]={5,  6,  7,18,  6,  7,  9,  6,16,", "          2,  5,16,  4,  5,  7,  4,16,", "          2,  3,18,  2,  3,  7,  2,16,", "          7,  6,16,  3,  3,  6,  6,16,", "          5,  6,  7,18,  6,  7,  9,  6,16,", "          2,  2,  5,16,  4,  5,  7,  4,16,", "          2,  3,16,  7,  6,  7,  8,16,  9,  7,16,", "          7,  6,  5,16,  6,16,  4,  5", "          };", "//要写入LCD显示器的字符", "uchar code table1[]=\"Song \";", "uchar code table2[]=\"12345\";", "uchar code table3[]=\"words:\";", "uchar code table4[]=\"0123456789abcdef\";", "\n", "sbit Beed=P2^0;  //扬声器", "sbit key1=P2^1;  //模式选择键", "sbit key2=P2^2;  //上一曲", "sbit key3=P2^3;  //播放/暂停键", "sbit key4=P2^4;  //下一曲", "sbit RS=P2^5;   //LCD1602指令/数据寄存器选择端", "sbit EN=P2^6;   //LCD1602使能端", "\n", "uint Keynum;   //按键号，对应频率表中的位置", "uint Songnum=1;  //歌曲号", "uint sign=1;   //标址符号，用来判断是否需要调用播放子程序", "uint ScanKey();", "uint lcd_initial;", "uint Tone;", "\n", "/", "主程序", "/", "void main()", "{", "     lcd_initial ();//初始化LCD1602", "    IE=0x82;         //开中断", "     TMOD=0x01;         //设置T0为模式1定时器", "     while(1)         //持续运行系统", "     {", "         P1=0xF0;        //设置P1", "          if(key1!=0)        //模式选择为演奏", "          {", "               if(P1!=0xF0)      //有键按下", "               {", "                    ScanKey();      //键扫描", "                    TH0=Tone_Delay[Keynum]/256;  //根据按键给T0赋初值", "                 TL0=Tone_Delay[Keynum]%256;", "                 TR0=1;       //启动T0", "                }", "            else         //无键按下", "            TR0=0;       //关闭T0", "            Delay(200);       //延时", "            sign=1;        //令标志信号为1，使播放功能可以正常使用", "           }", "          else if(key1==0)      //模式选择为播放歌曲", "         {", "               if(key2==0)       //上一曲", "               {", "                Delay(80);      //延时消抖", "                if(key2==0)", "                    {", "                         sign=1;      //令标志信号为1，可以在播放之后重新调用播放子程序", "                         Songnum-=1;     //歌曲号-1", "                         if(Songnum<1)", "                          Songnum=Songnum+5;  //如果歌曲号小于1，则加5，让歌曲可以循环播放", "                    }", "               }", "               if(key4==0)       //下一曲", "               {", "                Delay(80);      //延时消抖", "                if(key4==0)", "                {", "                    sign=1;      //令标志信号为1，可以在播放之后重新调用播放子程序", "                     Songnum+=1;     //歌曲号+1", "                     if(Songnum>5)", "                      Songnum=Songnum-5;  //如果歌曲号大于5，则减5，让歌曲可以循环播放", "                }", "               }", "               if(key3==0)       //播放状态", "               {", "                    if(sign==1)      //标志符号为1，可以调用播放子程序", "                {", "                    sign=0;      //令标志符号为0，防止在播放时持续重新调用播放子程序", "                     PlaySong(Songnum);", "                }", "                else       //标志符号为0，不调用播放子程序，只启动T0", "                {", "                     TR0=1;", "                }", "               }", "               else if(key3!=0)     //暂停状态", "               {", "                    TR0=0;       //关闭T0", "               }", "          }", "     }", "}", "\n", "//延时", "void Delay(uint x)", "{", "     uint i,j;", "     for(i=0;i<=x;i++)", "     for(j=0;j<=120;j++);", "}", "\n", "//给LCD1602写指令", "void write_com(uchar com)", "{", "    RS=0;      //选择指令寄存器", "     P0=com;     //数据送到P0口", "     Delay(5);    //延时，让LCD1602准备接收数据", "     EN=1;", "     EN=0;      //使能端从1到0，完成数据写入", "}", "\n", "//给LCD1602写数据", "void write_date(uchar date)", "{", "    RS=1;", "     P0=date;", "     Delay(5);", "     EN=1;", "     EN=0;", "}", "\n", "//LCD1602初始化", "void lcd_initial ()", "{", "     EN=0;", "     write_com(0x38);", "     write_com(0x0c);", "     write_com(0x06);", "     write_com(0x01);//清屏", "     Delay(1);", "}", "\n", "//键扫描", "void ScanKey()", "{", "     uint temp;", "     P1=0xF0;    //令P1高四位高电平，低四位低电平", "     Delay(80);    //延时消抖", "     temp=P1^0xF0;  //如果有键按下，P1高四位的某位会变成0，通过此式使该位为1，其余位为0", "     switch(temp)", "     {", "          case 16:Keynum=0;break;  //按键在第一行", "          case 32:Keynum=4;break;  //按键在第二行", "          case 64:Keynum=8;break;  //按键在第三行", "          case 128:Keynum=12;break; //按键在第四行", "          default:return;", "     }", "     P1=0x0F;    //令P1高四位低电平，低四位高电平", "     Delay(80);    //延时消抖", "     temp=P1^0x0F;  //如果有键按下，P1低四位的某位会变成0，通过此式使该位为1，其余位为0", "     switch(temp)", "     {", "          case 1:Keynum+=0;break;  //按键在第一列", "          case 2:Keynum+=1;break;  //按键在第二列", "          case 4:Keynum+=2;break;  //按键在第三列", "          case 8:Keynum+=3;break;  //按键在第四列", "          default:return;", "     }", "}", "\n", "//中断", "void Tone() interrupt 1", "{", "     TH0=Tone_Delay[Keynum]/256;  //通过频率表给T0赋初值", "     TL0=Tone_Delay[Keynum]%256;", "    Beed=~Beed;      //扬声器处输出翻转", "    TR0=1;       //启动T0", "}", "\n", "//歌曲播放子程序", "void PlaySong(Songnum)", "{", "     uint SongLength = 0;   //歌曲常长度变量", "     uint k=0;", "     uint x;", "    uchar tap[100];     //定义一个新数组接收歌曲音符信息", "     switch(Songnum)", "     {", "          case 1:memcpy(tap, Song1, sizeof(Song1));SongLength=sizeof(Song1);break; //新数组接收歌曲信息，算得歌曲长度", "          case 2:memcpy(tap, Song2, sizeof(Song2));SongLength=sizeof(Song2);break;", "          case 3:memcpy(tap, Song3, sizeof(Song3));SongLength=sizeof(Song3);break;", "          case 4:memcpy(tap, Song4, sizeof(Song4));SongLength=sizeof(Song4);break;", "          case 5:memcpy(tap, Song5, sizeof(Song5));SongLength=sizeof(Song5);break;", "     }", "\n", " write_com(", "0x85", ");    ", "//往LCD1602写入歌曲信息", "\n ", "for", "(x=", "0", ";x<", "5", ";x++)\n {\n      write_date(table1[x]);\n }\n\n write_com(", "0x8a", ");\n write_date(table2[Songnum-", "1", "]);\n\n write_com(", "0xc0", ");\n ", "for", "(x=", "0", ";x<", "6", ";x++)\n {\n      write_date(table3[x]);\n }\n\nk=", "0", ";\n ", "while", "(k<SongLength)    ", "//按照歌曲音符排列信息播放音乐", "\n {\n      Keynum=tap[k];    ", "//将音符位置赋给Keynum", "\n      ", "if", "(tap[k]==", "16", ")    ", "//歌曲中音符号码为16，17，18处进行不同延时，达到音乐播放效果", "\n     {            \n           ET0=", "0", ";\n           Delay(", "400", ");\n           ET0=", "1", ";\n      }\n      ", "else", " ", "if", "(tap[k]==", "17", ")\n      {\n           ET0=", "0", ";\n           Delay(", "10", ");\n           ET0=", "1", ";\n      }\n\n      ", "else", " ", "if", "(tap[k]==", "18", ")\n      {\n           ET0=", "0", ";\n           Delay(", "200", ");\n           ET0=", "1", ";\n      }\n\n     ", "else", "\n      {\n          TH0=Tone_Delay[Keynum]/", "256", "; ", "//给T0赋初值", "\n          TL0=Tone_Delay[Keynum]%", "256", ";\n          TR0=", "1", ";      ", "//启动T0", "\n          Delay(", "400", ");     ", "//延时", "\n          write_com(", "0xc7", ");   ", "//往LCD1602写入歌词", "\n          write_date(table4[tap[k]]);\n      }\n\n", "while", "(key3!=", "0", ")    ", "//检测到暂停键时", "\n{\n      TR0=", "0", ";     ", "//停止T0", "\n       ", "if", "(key1!=", "0", ")\n           ", "return", ";    ", "//在暂停时，检测到模式转换为演奏，返回主程序，避免一直停留在这里", "\n  }\n  ", "if", "(key2==", "0", " || key4==", "0", ")  ", "//按下切换键时", "\n  {\n       TR0=", "0", ";     ", "//停止T0", "\n       ", "return", ";     ", "//返回主程序", "\n  }\n  ", "if", "(key1!=", "0", ")     ", "//检测到模式转换为演奏，返回主程序", "\n       ", "return", ";\n k+=", "1", ";      ", "//下一个音符", "\n }\n TR0=", "0", ";       ", "//一首歌播放完毕，关闭T0", "\n Delay(", "500", ");      ", "//延时", "\n sign=", "1", ";       ", "//标志符号变为1，可以重新调用播放歌曲子程序", "\n", "return", ";       ", "//返回主程序", "\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "问题1）你所谓的同时工作是指led亮的同时数码管也在显示，是这样的吗？单片机跑的程序都是单线程的，所以函数可能会受到中断的影响\r\n问题2）理论上，位选和段选是不要求顺序的，如果交换顺序会出现不一样的效果，说明你的程序写的有问题，根据你说的现象，我认为你段选和位选没设置好", "Konwledge_Point": "主程序", "Question": ["关于C语言编译C51单片机程序的一点疑问", ["1.为什么两段不相干的代码会互相影响", "\n    在主程序里有一段点亮发光二极管的代码，和一段计数器计数并在数码管上显示的代码。同时工作时，二极管正常点亮，数码管几秒才点亮一回，而且十位显示是闪烁一下就不显示了", "\n2.数码管显示时，位选和段选顺序不能改变吗？", "\n按照书上的方法是先段选再位选，但是点亮的数码管是本来不应该点亮的，段选和位选顺序换了之后就能正常显示了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;threading.Thread(target&amp;#61;func, args&amp;#61;(), daemon&amp;#61;True).start()&lt;/code&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["请问如何让线程随着程序结束而结束", ["我创建了一个线程，这个线程预计应该会花费500s才结束", "我的主程序大概需要45s结束，程序如下图", "\n", "\n", "现在我希望在打印“主程序结束”之后整个代码就结束掉，而不是等着线程运行结束", "\n", "我该怎么做呢？（不能直接去掉线程）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个简单实现&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;stoi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[])&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-comment\"&gt;//把字符串里面的数存放到一个int数组 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(str);i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(str[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;str[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;){\n            temp[j]&amp;#61;k*(str[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n            j&amp;#43;&amp;#43;;\n        }\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//从这个数组拼接出一个整数 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;j;i&amp;#43;&amp;#43;){\n        num&amp;#43;&amp;#61;temp[j-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]*k;\n        k*&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; num;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(str);  &lt;span class=\"hljs-comment\"&gt;//获取一个字符串 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;stoi&lt;/span&gt;(str));  &lt;span class=\"hljs-comment\"&gt;//打印转换结果 &lt;/span&gt;\n\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["这个c语言程序该怎么写？", ["编写函数stoi（char str[ ]），实现如下功能：从字符串str（字符串中不超过10个数字符号）中提取数字符号，并形成对应的整数。编写主程序，测试stoi函数的功能并在主程序中输出结果。例如字符串为：a1b2c3，则得到整数123。 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提问必须写清楚是2个外部中断的二进制加法&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c51单片机外部中断按键按一下加一", ["主程序数码管从0000开始按下k3一次加1，至1111后变为0000继续递加;按下k4,主程序显示2222"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当然可以&amp;#xff0c;让那个函数在一个单独的子线程里执行就可以了&lt;/p&gt;\n&lt;p&gt;下面是一个c&amp;#43;&amp;#43;的例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;thread&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;chrono&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;mutex&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\nmutex out_mutex;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        {\n            &lt;span class=\"hljs-function\"&gt;lock_guard&amp;lt;mutex&amp;gt; &lt;span class=\"hljs-title\"&gt;lock&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(out_mutex)&lt;/span&gt;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;f1():   i&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;\n        }\n        this_thread::&lt;span class=\"hljs-built_in\"&gt;sleep_for&lt;/span&gt;(chrono::&lt;span class=\"hljs-built_in\"&gt;milliseconds&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;));\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        {\n            &lt;span class=\"hljs-function\"&gt;lock_guard&amp;lt;mutex&amp;gt; &lt;span class=\"hljs-title\"&gt;lock&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(out_mutex)&lt;/span&gt;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;f2():   i&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;\n        }\n        this_thread::&lt;span class=\"hljs-built_in\"&gt;sleep_for&lt;/span&gt;(chrono::&lt;span class=\"hljs-built_in\"&gt;milliseconds&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;));\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;thread &lt;span class=\"hljs-title\"&gt;t1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(f1)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;thread &lt;span class=\"hljs-title\"&gt;t2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(f2)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        {\n            &lt;span class=\"hljs-function\"&gt;lock_guard&amp;lt;mutex&amp;gt; &lt;span class=\"hljs-title\"&gt;lock&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(out_mutex)&lt;/span&gt;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;main(): i&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;\n        }\n        this_thread::&lt;span class=\"hljs-built_in\"&gt;sleep_for&lt;/span&gt;(chrono::&lt;span class=\"hljs-built_in\"&gt;milliseconds&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;));\n    }\n    t1.&lt;span class=\"hljs-built_in\"&gt;join&lt;/span&gt;();\n    t2.&lt;span class=\"hljs-built_in\"&gt;join&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;$ g&amp;#43;&amp;#43; -Wall &lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.cpp&lt;/span&gt;\n$ ./&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.out&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;(): i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;(): i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;(): i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;(): i&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;(): i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;f2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:   i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["让c语言延迟功能不要影响整个程序", ["c语言sleep函数只能控制整个程序延时么？能不能只控制其中一个函数延时，主程序照常进行下去？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT&lt;br /&gt;&lt;em&gt;请参考下面的解决方案&amp;#xff0c;如果有帮助&amp;#xff0c;还请点击 “采纳” 感谢支持&amp;#xff01;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;一、以下是TMS320C55X系列DSP的汇编语言实现的1024点自相关的程序设计&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;1.程序设计思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;读取1024个数据点&amp;#xff0c;并存入数组x[]中。&lt;br /&gt;将每个数据点与自身相乘&amp;#xff0c;并累加得到自相关结果。&lt;br /&gt;输出自相关结果。&lt;br /&gt;2.程序清单&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;; Self-correlation of 1024 points&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Input: x[]&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Output: y&lt;/span&gt;\n\n.text\n.global _c_int00\n\n&lt;span class=\"hljs-symbol\"&gt;_c_int00:&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &amp;#64;&lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;, ar0\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#1024, ar1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#x, ar2&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;clr&lt;/span&gt;     &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;jmp&lt;/span&gt;     loop\n\n&lt;span class=\"hljs-symbol\"&gt;loop:&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     *ar2(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;r0&lt;/span&gt;\n    mac     &lt;span class=\"hljs-built_in\"&gt;r0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;r0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;, mpy\n    &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#1, r12&lt;/span&gt;\n    cmp     &lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;, ar1\n    blt     loop\n\n    &lt;span class=\"hljs-comment\"&gt;; Output the result&lt;/span&gt;\n    b      _exit\n\n&lt;span class=\"hljs-symbol\"&gt;y:&lt;/span&gt; .word &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;x:&lt;/span&gt; .word &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ..., &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;; 1024 data points&lt;/span&gt;\n\n.end\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3.注释&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;mov &lt;a type=\"user\" class=\"md_call_user\"&gt;&amp;#64;r12, &lt;/a&gt;ar0&amp;#xff1a;将循环计数器R12的值存入AR0寄存器。&lt;br /&gt;mov #1024, ar1&amp;#xff1a;将数据点的数量存入AR1寄存器。&lt;br /&gt;mov #x, ar2&amp;#xff1a;将数据点数组的首地址存入AR2寄存器。&lt;br /&gt;clr y&amp;#xff1a;初始化自相关结果为0。&lt;br /&gt;loop:&amp;#xff1a;循环体&amp;#xff0c;读取数组中的数据点&amp;#xff0c;并与自身相乘&amp;#xff0c;累加到自相关结果。&lt;br /&gt;mac r0, r0, y, mpy&amp;#xff1a;将当前数据点与自身相乘&amp;#xff0c;并累加到自相关结果。&lt;br /&gt;add #1, r12&amp;#xff1a;将循环计数器加1。&lt;/p&gt;\n&lt;p&gt;、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、&lt;br /&gt;&lt;strong&gt;二、以下是TMS320C55X系列DSP的汇编语言实现的1024点互相关的程序设计&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;1.程序设计思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;读取1024个数据点&amp;#xff0c;并存入数组x[]和y[]中。&lt;br /&gt;将x[]中的每个数据点与y[]中的每个数据点相乘&amp;#xff0c;并累加得到互相关结果。&lt;br /&gt;输出互相关结果。&lt;br /&gt;2.程序清单&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;; Cross-correlation of 1024 points&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Input: x[], y[]&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Output: z&lt;/span&gt;\n\n.text\n.global _c_int00\n\n&lt;span class=\"hljs-symbol\"&gt;_c_int00:&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &amp;#64;&lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;, ar0\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#1024, ar1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#x, ar2&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#y, ar3&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;clr&lt;/span&gt;     &lt;span class=\"hljs-built_in\"&gt;z&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;jmp&lt;/span&gt;     loop\n\n&lt;span class=\"hljs-symbol\"&gt;loop:&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     *ar2(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;r0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;mov&lt;/span&gt;     *ar3(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;\n    mac     &lt;span class=\"hljs-built_in\"&gt;r0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;z&lt;/span&gt;, mpy\n    &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;     &lt;span class=\"hljs-meta\"&gt;#1, r12&lt;/span&gt;\n    cmp     &lt;span class=\"hljs-built_in\"&gt;r12&lt;/span&gt;, ar1\n    blt     loop\n\n    &lt;span class=\"hljs-comment\"&gt;; Output the result&lt;/span&gt;\n    b      _exit\n\n&lt;span class=\"hljs-symbol\"&gt;z:&lt;/span&gt; .word &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;x:&lt;/span&gt; .word &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ..., &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;; 1024 data points&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;y:&lt;/span&gt; .word &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ..., &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;; 1024 data points&lt;/span&gt;\n\n.end\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3.注释&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;mov &lt;a type=\"user\" class=\"md_call_user\"&gt;&amp;#64;r12, &lt;/a&gt;ar0&amp;#xff1a;将循环计数器R12的值存入AR0寄存器。&lt;br /&gt;mov #1024, ar1&amp;#xff1a;将数据点的数量存入AR1寄存器。&lt;br /&gt;mov #x, ar2&amp;#xff1a;将数据点数组x[]的首地址存入AR2寄存器。&lt;br /&gt;mov #y, ar3&amp;#xff1a;将数据点数组y[]的首地址存入AR3寄存器。&lt;br /&gt;clr z&amp;#xff1a;初始化互相关结果为0。&lt;br /&gt;loop:&amp;#xff1a;循环体&amp;#xff0c;读取数组x[]和y[]中的数据点&amp;#xff0c;并将它们相乘&amp;#xff0c;累加&lt;br /&gt;、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;三、以下是TMS320C55X系列DSP的汇编语言实现的2048点FFT&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;1、程序设计思路&amp;#xff1a;&lt;br /&gt;利用硬件FFT加速器&amp;#xff0c;快速进行FFT计算。&lt;br /&gt;可以通过设置加速器参数来控制FFT的长度、窗函数和输入数据的顺序等。&lt;br /&gt;2、程序清单&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;; 2048-point FFT using hardware accelerator&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Input: x[]&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Output: y[]&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;.text&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;.global&lt;/span&gt; _c_int00\n&lt;span class=\"hljs-symbol\"&gt;\n_c_int00:&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;; Initialize hardware accelerator&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_CTL, ar0&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_LENGTH, ar1&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_WINDOW, ar2&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_ORDER, ar3&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_INPUT, ar4&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#FFT_OUTPUT, ar5&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#1, *ar0&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;; Start FFT calculation&lt;/span&gt;\n    mov     &lt;span class=\"hljs-comment\"&gt;#1, *ar0&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;; Wait for FFT calculation to finish&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;wait:\n&lt;/span&gt;    mov     *ar0, r0\n    &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;    r0, &lt;span class=\"hljs-comment\"&gt;#1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;bne &lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;wait\n&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;; Read FFT output&lt;/span&gt;\n    mov     *ar5, y\n\n    &lt;span class=\"hljs-comment\"&gt;; Exit&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;b &lt;/span&gt;     _exit\n\ny: &lt;span class=\"hljs-meta\"&gt;.word&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ..., &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;; 2048 FFT output data points&lt;/span&gt;\nx: &lt;span class=\"hljs-meta\"&gt;.word&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ..., &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;; 2048 input data points&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;.end&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注释&amp;#xff1a;&lt;br /&gt;mov #FFT_CTL, ar0&amp;#xff1a;将FFT控制寄存器的地址存入AR0寄存器。&lt;br /&gt;mov #FFT_LENGTH, ar1&amp;#xff1a;将FFT长度存入AR1寄存器。&lt;br /&gt;mov #FFT_WINDOW, ar2&amp;#xff1a;将FFT窗函数存入AR2寄存器。&lt;br /&gt;mov #FFT_ORDER, ar3&amp;#xff1a;将FFT输入数据的顺序存入AR3寄存器。&lt;br /&gt;mov #FFT_INPUT, ar4&amp;#xff1a;将FFT输入数据的地址存入AR4寄存器。&lt;br /&gt;mov #FFT_OUTPUT, ar5&amp;#xff1a;将FFT输出数据的地址存入AR5寄存器。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["汇编语言探讨懂的来吧", ["懂汇编语言的来！请采用TMS320C55X系列DSP的汇编语言设计如下给出的5个程序之一，需给出程序设计思路、程序清单、注释和CCS的运行结果，主程序可采用汇编语言或C语言设计，子程序必须用汇编语言设计：", "(1)1024点自相关；", "(2)1024点互相关；", "（3）2048点FFT（可纯软件或借助硬件FFT加速器）；", "（4）6阶IIR滤波器；", "（5）64阶系数对称或反对称的FIR滤波器（需采用FIRSADD或FIRSSUB指令实现）。", "3、怎么设计一个具体的DSP应用系统方案15735674708"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我的思路是&amp;#xff1a;&lt;br /&gt;1、字符数组初始化为姓名字符串&lt;br /&gt;2、调用sort函数排序这个字符串&lt;br /&gt;3、sort函数用两个for循环逐一比较字符数组前面的字符和后面字符的ASCII码大小&amp;#xff0c;如果前面的比后面的大&amp;#xff0c;则交换他们的位置&amp;#xff0c;从而达到排序字符数组元素的目的&lt;br /&gt;4、打印结果。&lt;br /&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; temp;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;lt;n;j&amp;#43;&amp;#43;){\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(p&amp;#43;i,p&amp;#43;j)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){  &lt;span class=\"hljs-comment\"&gt;//如果指针前面位置的字符的ASCII码比后面的大&amp;#xff0c;则交换他们 &lt;/span&gt;\n                temp &amp;#61; *(p&amp;#43;i);\n                *(p&amp;#43;i)&amp;#61;*(p&amp;#43;j);\n                *(p&amp;#43;j) &amp;#61; temp;\n            }\n        }\n    }\n    \n} \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; my_name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;xiaohua&amp;#34;&lt;/span&gt;;  \n    \n    &lt;span class=\"hljs-comment\"&gt;//strlen计算字符串的长度 &amp;#xff0c;传入sort函数 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(my_name,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(my_name)); \n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,my_name);\n} \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/192981806556115.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写程序并完成上机调试实现以上功能要求", ["在主程序中以自己的姓名拼音的英文字母初始化一个my _name字符数组，并编写排序函数void sort(char *p，int n)，n为数组元素个数，在主程序中调用sort函数，并输出排序后的数组元素。编写程序并完成上机调试实现以上功能要求。-注:需要程序框图、代码清单、注释。（希望有人可以answer一下me）"]], "Tag": "程序设计"}
{"Answer": "我运行了，可以出来呀。一个计算机 不过后天有问题：告：不能读取 AppletViewer 的属性文件： C:\\Users\\Administrator\\.hotjava\\properties 使用默认值。 erliangban 12-24 10         这句话是什么意思？我不懂，你能再解释一下，方便的话可以截屏看一下吗？", "Konwledge_Point": "主程序", "Question": ["程序问什么运行不出来", ["import java.applet.*;", "\nimport java.awt.*;", "\nimport javax.swing.*; ", "\nimport java.awt.event.*;", "\n//import java.Math.*;", "\npublic class cal extends Applet", "\n{", "\n//定义所有需要使用的全局变量", "\nString str=\"0\";//暂存显示屏数据", "\nString sign=\"null\";//暂存符号数据", "\ndouble num=0;//暂存内部运算数据", "\nboolean change=false;//暂存内部四则运算起用", "\n\n", "GridLayout g0,g1;//定义AWT布局部件", "\nJTextField number; ", "\nButton num_p,num_0,num_1,num_2,num_3,num_4,num_5,num_6,num_7,num_8,num_9;", "\nButton act_add,act_mul,act_div,act_sub;", "\nButton mat_sin,mat_cos,mat_tan;", "\nButton do_ans,do_del;", "\nPanel p0,p1;", "\n\n", "public void init()//主程序部分", "\n{", "\n //定义各个控件的样式", "\n number=new JTextField(20);//显示屏 ", "\n number.setHorizontalAlignment(JTextField.RIGHT); ", "\n number.setEnabled(false); ", "\n number.setText(\"0\"); ", "\n\n", "num_p=new Button(\".\");//小数点的按钮 ", "\n num_p.setForeground(Color.red); ", "\n num_p.addActionListener(new getbt()); ", "\n\n", "num_0=new Button(\"0\");//数字0的按钮 ", "\n num_0.setForeground(Color.red); ", "\n num_0.addActionListener(new getbt()); ", "\n\n", "num_1=new Button(\"1\");//数字1的按钮 ", "\n num_1.setForeground(Color.red); ", "\n num_1.addActionListener(new getbt()); ", "\n\n", "num_2=new Button(\"2\");//数字2的按钮 ", "\n num_2.setForeground(Color.red); ", "\n num_2.addActionListener(new getbt()); ", "\n\n", "num_3=new Button(\"3\");//数字3的按钮 ", "\n num_3.setForeground(Color.red); ", "\n num_3.addActionListener(new getbt()); ", "\n\n", "num_4=new Button(\"4\");//数字4的按钮 ", "\n num_4.setForeground(Color.red); ", "\n num_4.addActionListener(new getbt()); ", "\n\n", "num_5=new Button(\"5\");//数字5的按钮 ", "\n num_5.setForeground(Color.red); ", "\n num_5.addActionListener(new getbt()); ", "\n\n", "num_6=new Button(\"6\");//数字6的按钮 ", "\n num_6.setForeground(Color.red); ", "\n num_6.addActionListener(new getbt()); ", "\n\n", "num_7=new Button(\"7\");//数字7的按钮 ", "\n num_7.setForeground(Color.red); ", "\n num_7.addActionListener(new getbt()); ", "\n\n", "num_8=new Button(\"8\");//数字8的按钮 ", "\n num_8.setForeground(Color.red); ", "\n num_8.addActionListener(new getbt()); ", "\n\n", "num_9=new Button(\"9\");//数字9的按钮 ", "\n num_9.setForeground(Color.red); ", "\n num_9.addActionListener(new getbt()); ", "\n\n", "act_add=new Button(\"+\");//加法的按钮 ", "\n act_add.setForeground(Color.red); ", "\n act_add.addActionListener(new getbt()); ", "\n\n", "act_sub=new Button(\"-\");//减法的按钮 ", "\n act_sub.setForeground(Color.red); ", "\n act_sub.addActionListener(new getbt()); ", "\n\n", "act_mul=new Button(\"*\");//乘法的按钮 ", "\n act_mul.setForeground(Color.red); ", "\n act_mul.addActionListener(new getbt()); ", "\n\n", "act_div=new Button(\"/\");//除法的按钮 ", "\n act_div.setForeground(Color.red); ", "\n act_div.addActionListener(new getbt()); ", "\n\n", "do_ans=new Button(\"=\");//等于的按钮 ", "\n do_ans.setForeground(Color.red);", "\n do_ans.addActionListener(new getbt()); ", "\n\n", "do_del=new Button(\"del\");//删除的按钮 ", "\n do_del.setForeground(Color.red); ", "\n do_del.addActionListener(new getbt()); ", "\n\n", "mat_sin=new Button(\"sin\");//sin的按钮 ", "\n mat_sin.setForeground(Color.red); ", "\n mat_sin.addActionListener(new getbt()); ", "\n\n", "mat_cos=new Button(\"cos\");//cos的按钮 ", "\n mat_cos.setForeground(Color.red); ", "\n mat_cos.addActionListener(new getbt()); ", "\n\n", "mat_tan=new Button(\"tan\");//tan的按钮 ", "\n mat_tan.setForeground(Color.red); ", "\n mat_tan.addActionListener(new getbt()); ", "\n\n", "//布局整个计算器", "\n g0=new GridLayout(1,1,10,10);//布局输入输出大体位置", "\n g1=new GridLayout(4,5,10,10);", "\n\n", "p0=new Panel(); //显示屏的布局", "\n p0.setLayout(g0);", "\n p0.add(number); ", "\n p0.setBounds(0,0,100,50);", "\n\n", "//按纽的布局 ", "\n p1=new Panel();", "\n p1.setLayout(g1);", "\n p1.add(num_1);//第一排按纽", "\n p1.add(num_2);", "\n p1.add(num_3);", "\n p1.add(act_add);", "\n p1.add(act_sub);", "\n\n", "p1.add(num_4);//第二排按纽", "\n p1.add(num_5);", "\n p1.add(num_6);", "\n p1.add(act_mul);", "\n p1.add(act_div);", "\n\n", "p1.add(num_7);//第三排按纽", "\n p1.add(num_8);", "\n p1.add(num_9);", "\n p1.add(mat_sin);", "\n p1.add(mat_cos);", "\n\n", "p1.add(num_0);//第四排按钮", "\n p1.add(num_p);", "\n p1.add(do_ans);", "\n p1.add(do_del);", "\n p1.add(mat_tan);", "\n p1.setBounds(5,60,400,250); ", "\n p1.setBackground(Color.cyan);//设置按钮背景颜色", "\n\n", "setLayout(null); ", "\n add(p0);", "\n add(p1);", "\n\n", "this.setBackground(Color.cyan);//设置背景整体颜色", "\n}", "\n\n", "class getbt implements ActionListener //监听作出反应的类", "\n{", "\n public void actionPerformed(ActionEvent e)//对每个每个按钮做出响应", "\n { ", "\n if(e.getSource()==num_0)", "\n  press0();", "\n else if(e.getSource()==num_1)", "\n  press1();", "\n else if(e.getSource()==num_2)", "\n  press2();", "\n else if(e.getSource()==num_3)", "\n  press3();", "\n else if(e.getSource()==num_4)", "\n  press4();", "\n else if(e.getSource()==num_5)", "\n  press5();", "\n else if(e.getSource()==num_6)", "\n  press6();", "\n else if(e.getSource()==num_7)", "\n  press7();", "\n else if(e.getSource()==num_8)", "\n  press8();", "\n else if(e.getSource()==num_9)", "\n  press9();", "\n else if(e.getSource()==num_p)", "\n  pressp();", "\n else if(e.getSource()==act_add)", "\n  pressadd();", "\n else if(e.getSource()==act_mul)", "\n  pressmul();", "\n else if(e.getSource()==act_div)", "\n  pressdiv();", "\n else if(e.getSource()==act_sub)", "\n  presssub();", "\n else if(e.getSource()==mat_sin)", "\n  presssin();", "\n else if(e.getSource()==mat_tan)", "\n  presstan();", "\n else if(e.getSource()==mat_cos)", "\n  presscos();", "\n else if(e.getSource()==do_ans)", "\n  pressans();", "\n else if (e.getSource()==do_del)", "\n  pressdel();", "\n }", "\n\n", "}", "\npublic void press0()//对按0作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"0\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"0\";", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press1()//对按1作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"1\";", "\n }", "\n else if(str==\"0\"|| sign!=\"null\")", "\n {", "\n  str=\"1\";", "\n  change=false;", "\n } ", "\n number.setText(str);", "\n}", "\n\n", "public void press2()//对按2作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"2\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"2\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press3()//对按3作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"3\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"3\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\npublic void press4()//对按4作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"4\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"4\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press5()//对按5作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"5\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"5\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press6()//对按6作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"6\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"6\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press7()//对按7作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"7\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"7\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press8()//对按8作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"8\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"8\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press9()//对按9作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"9\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"9\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void pressp()//对按.作出反应", "\n{", "\n boolean p=false;", "\n for(int i=0;i<str.length();i++)", "\n  if(str.charAt(i)=='.')", "\n   p=true;", "\n if(str.length()<16 && str!=\"0\" && sign==\"null\" && p==false)", "\n {", "\n  str+=\".\";", "\n }", "\n else if((str==\"0\" || sign!=\"null\")&& p==false)", "\n {", "\n  str=\"0.\";", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void pressadd()//对按+作出反应", "\n{", "\n sign=\"add\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\n\n", "public void presssub()//对按-作出反应", "\n{", "\n sign=\"sub\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void pressmul()//对按*作出反应", "\n{", "\n sign=\"mul\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void pressdiv()//对按/作出反应", "\n{", "\n sign=\"div\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void presssin()//对按sin作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\" && str!=\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.sin(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16);", "\n  num=0;", "\n }", "\n if(str==\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void presstan()//对按tan作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\"&& str!=\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.tan(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16);", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void presscos()//对按cos作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.cos(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16); ", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void pressans()//对按=作出反应", "\n{", "\n if(sign==\"null\")", "\n  number.setText(str);", "\n else if(sign==\"add\")", "\n {", "\n  num+=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"sub\")", "\n {", "\n  num-=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"mul\")", "\n {", "\n  num*=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"div\")", "\n {", "\n  if(num!=0)", "\n  {", "\n   num/=Double.parseDouble(str);", "\n   str=Double.toString(num);", "\n   number.setText(str);", "\n  }", "\n  else", "\n  {", "\n   str=\"0\";", "\n   number.setText(str);", "\n  } ", "\n }", "\n sign=\"null\";", "\n}", "\npublic void pressdel()//对按del作出反应", "\n{", "\n if(str.length()>1)", "\n {", "\n  str=str.substring(0,str.length()-1);", "\n  number.setText(str);", "\n }", "\n    else if(str.length()==1)", "\n    {", "\n     str=\"0\";", "\n     number.setText(str);", "\n    }", "\n}", "\n}"]], "Tag": "程序设计"}
{"Answer": "用shellexecute函数。", "Konwledge_Point": "主程序", "Question": ["在窗体程序中将另一个exe嵌入执行，作为子程序的问题", ["在窗体程序中将另一个exe嵌入执行，主程序窗口内作为一个子窗口来进行调用，请问这个的思路是什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解决了&amp;#xff0c;我没有编译链接rc&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么Win32窗口程序在VS2022下正常，MinGW编译后程序闪退?", ["为什么Win32窗口程序在VS2022下正常，MinGW编译后程序闪退", "(makefile不加-mwindows是闪退，加了根本显示不出来)", "目录", "\n", "WindowsProject3.cpp", "WindowsProject3.rc", "WindowsProject3.ico", "small.ico", "Resource.h", "Makefile", "\n", "\n", "Makefile", "\n", "LFLAGS=-lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32\nWPROJ3:", "WindowsProject3", ".", "cpp ", "Resource", ".", "h\n    g++ -s ", "WindowsProject3", ".", "cpp -o WPROJ3 ", "$(LFLAGS)", " -municode -Wall -m64 -mwindows\n", "\n", "WindowsProject3.cpp", "\n", "\n", "// WindowsProject3.cpp : 定义应用程序的入口点。", "\n", "//", "\n\n", "#", "include", " <Windows.h>", "\n", "#", "include", " <tchar.h>", "\n", "#", "include", " ", "\"resource.h\"", "\n\n", "#", "define", " MAX_LOADSTRING ", "100", "\n\n", "// 全局变量:", "\n", "HINSTANCE", " hInst", ";                                // 当前实例", "\nWCHAR szTitle[MAX_LOADSTRING]", ";                  // 标题栏文本", "\nWCHAR szWindowClass[MAX_LOADSTRING]", ";            // 主窗口类名", "\n\n", "// 此代码模块中包含的函数的前向声明:", "\nATOM                MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")", ";", "\nBOOL                InitInstance(", "HINSTANCE", ", ", "int", ")", ";", "\nLRESULT CALLBACK    WndProc(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\nINT_PTR CALLBACK    About(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\n\n", "int", " APIENTRY wWinMain(_In_ ", "HINSTANCE", " ", "hInstance", ",\n                     _In_opt_ ", "HINSTANCE", " hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ ", "int", "       nCmdShow)\n{\n    UNREFERENCED_PARAMETER(hPrevInstance)", ";", "\n    UNREFERENCED_PARAMETER(lpCmdLine)", ";", "\n\n    ", "// ", "TODO:", " 在此处放置代码。", "\n\n    ", "// 初始化全局字符串", "\n    LoadStringW(", "hInstance", ", IDS_APP_TITLE, szTitle, MAX_LOADSTRING)", ";", "\n    LoadStringW(", "hInstance", ", IDC_WINDOWSPROJECT3, szWindowClass, MAX_LOADSTRING)", ";", "\n    MyRegisterClass(", "hInstance", ")", ";", "\n\n    ", "// 执行应用程序初始化:", "\n    ", "if", " (!InitInstance (", "hInstance", ", nCmdShow))\n    {\n        ", "return", " FALSE", ";", "\n    }\n\n    HACCEL hAccelTable = LoadAccelerators(", "hInstance", ", MAKEINTRESOURCE(IDC_WINDOWSPROJECT3))", ";", "\n\n    MSG msg", ";", "\n\n    ", "// 主消息循环:", "\n    ", "while", " (GetMessage(&msg, nullptr, ", "0", ", ", "0", "))\n    {\n        ", "if", " (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))\n        {\n            TranslateMessage(&msg)", ";", "\n            DispatchMessage(&msg)", ";", "\n        }\n    }\n\n    ", "return", " (", "int", ") msg.wParam", ";", "\n}\n\n\n\n", "//", "\n", "//  函数: MyRegisterClass()", "\n", "//", "\n", "//  目标: 注册窗口类。", "\n", "//", "\nATOM MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")\n{\n    WNDCLASSEXW wcex", ";", "\n\n    wcex.cbSize = sizeof(WNDCLASSEX)", ";", "\n\n    wcex.style          = CS_HREDRAW | CS_VREDRAW", ";", "\n    wcex.lpfnWndProc    = WndProc", ";", "\n    wcex.cbClsExtra     = ", "0", ";", "\n    wcex.cbWndExtra     = ", "0", ";", "\n    wcex.hInstance      = ", "hInstance", ";", "\n    wcex.hIcon          = LoadIcon(", "hInstance", ", MAKEINTRESOURCE(IDI_WINDOWSPROJECT3))", ";", "\n    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW)", ";", "\n    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+", "1", ")", ";", "\n    wcex.lpszMenuName   = MAKEINTRESOURCEW(IDC_WINDOWSPROJECT3)", ";", "\n    wcex.lpszClassName  = szWindowClass", ";", "\n    wcex.hIconSm        = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL))", ";", "\n\n    ", "return", " RegisterClassExW(&wcex)", ";", "\n}\n\n", "//", "\n", "//   函数: InitInstance(HINSTANCE, int)", "\n", "//", "\n", "//   目标: 保存实例句柄并创建主窗口", "\n", "//", "\n", "//   注释:", "\n", "//", "\n", "//        在此函数中，我们在全局变量中保存实例句柄并", "\n", "//        创建和显示主程序窗口。", "\n", "//", "\nBOOL InitInstance(", "HINSTANCE", " ", "hInstance", ", ", "int", " nCmdShow)\n{\n   hInst = ", "hInstance", "; // 将实例句柄存储在全局变量中", "\n\n   ", "HWND", " ", "hWnd", " = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,\n      CW_USEDEFAULT, ", "0", ", CW_USEDEFAULT, ", "0", ", nullptr, nullptr, ", "hInstance", ", nullptr)", ";", "\n\n   ", "if", " (!", "hWnd", ")\n   {\n      ", "return", " FALSE", ";", "\n   }\n\n   ShowWindow(", "hWnd", ", nCmdShow)", ";", "\n   UpdateWindow(", "hWnd", ")", ";", "\n\n   ", "return", " TRUE", ";", "\n}\n\n", "//", "\n", "//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)", "\n", "//", "\n", "//  目标: 处理主窗口的消息。", "\n", "//", "\n", "//  WM_COMMAND  - 处理应用程序菜单", "\n", "//  WM_PAINT    - 绘制主窗口", "\n", "//  WM_DESTROY  - 发送退出消息并返回", "\n", "//", "\n", "//", "\nLRESULT CALLBACK WndProc(", "HWND", " ", "hWnd", ", UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    ", "switch", " (message)\n    {\n    ", "case", " WM_COMMAND:\n        {\n            ", "int", " wmId = LOWORD(", "wParam", ")", ";", "\n            ", "// 分析菜单选择:", "\n            ", "switch", " (wmId)\n            {\n            ", "case", " IDM_ABOUT:\n                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), ", "hWnd", ", About)", ";", "\n                ", "break", ";", "\n            ", "case", " IDM_EXIT:\n                DestroyWindow(", "hWnd", ")", ";", "\n                ", "break", ";", "\n            ", "default", ":\n                ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n            }\n        }\n        ", "break", ";", "\n    ", "case", " WM_PAINT:\n        {\n            PAINTSTRUCT ps", ";", "\n            ", "HDC", " ", "hdc", " = BeginPaint(", "hWnd", ", &ps)", ";", "\n            ", "// ", "TODO:", " 在此处添加使用 hdc 的任何绘图代码...", "\n            EndPaint(", "hWnd", ", &ps)", ";", "\n        }\n        ", "break", ";", "\n    ", "case", " WM_DESTROY:\n        PostQuitMessage(", "0", ")", ";", "\n        ", "break", ";", "\n    ", "default", ":\n        ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n    }\n    \n    ", "return", " ", "0", ";", "\n}\n\n", "// “关于”框的消息处理程序。", "\nINT_PTR CALLBACK About(", "HWND", " hDlg, UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    UNREFERENCED_PARAMETER(", "lParam", ")", ";", "\n    ", "switch", " (message)\n    {\n    ", "case", " WM_INITDIALOG:\n        ", "return", " (INT_PTR)TRUE", ";", "\n\n    ", "case", " WM_COMMAND:\n        ", "if", " (LOWORD(", "wParam", ") == IDOK || LOWORD(", "wParam", ") == IDCANCEL)\n        {\n            EndDialog(hDlg, LOWORD(", "wParam", "))", ";", "\n            ", "return", " (INT_PTR)TRUE", ";", "\n        }\n        ", "break", ";", "\n    }\n    ", "return", " (INT_PTR)FALSE", ";", "\n}\n\n", "\n", "Resource.h", "\n", "//{{NO_DEPENDENCIES}}", "\n", "// Microsoft Visual C++ 生成的包含文件。", "\n", "// 使用者 WindowsProject3.rc", "\n", "#", "pragma", " once", "\n", "#", "define", " IDS_APP_TITLE            103", "\n\n", "#", "define", " IDR_MAINFRAME            128", "\n", "#", "define", " IDD_WINDOWSPROJECT3_DIALOG    102", "\n", "#", "define", " IDD_ABOUTBOX            103", "\n", "#", "define", " IDM_ABOUT                104", "\n", "#", "define", " IDM_EXIT                105", "\n", "#", "define", " IDI_WINDOWSPROJECT3            107", "\n", "#", "define", " IDI_SMALL                108", "\n", "#", "define", " IDC_WINDOWSPROJECT3            109", "\n", "#", "define", " IDC_MYICON                2", "\n", "#", "ifndef", " IDC_STATIC", "\n", "#", "define", " IDC_STATIC                -1", "\n", "#", "endif", "\n", "// 新对象的下一组默认值", "\n", "//", "\n", "#", "ifdef", " APSTUDIO_INVOKED", "\n", "#", "ifndef", " APSTUDIO_READONLY_SYMBOLS", "\n\n", "#", "define", " _APS_NO_MFC                    130", "\n", "#", "define", " _APS_NEXT_RESOURCE_VALUE    129", "\n", "#", "define", " _APS_NEXT_COMMAND_VALUE        32771", "\n", "#", "define", " _APS_NEXT_CONTROL_VALUE        1000", "\n", "#", "define", " _APS_NEXT_SYMED_VALUE        110", "\n", "#", "endif", "\n", "#", "endif", "\n\n\n"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/weixin_42005579/article/details/106147656", "Konwledge_Point": "主程序", "Question": ["C++错误（代码E0312），不存在用户定义的从\"IntBuffer\" 到 \"DoubleBuffer\"的适当转换", ["我的工程下有三个文件，我现在列出来这些文件和文件中的代码：", "\n1、头文件", "\nBuffer.h", "\n\n", "#pragma once\n#include <iostream>\n#include <string>\n#ifndef _BUFFER_H\n#define _BUFFER_H\n\nclass IntBuffer;\nclass DoubleBuffer;\n\nclass IntBuffer\n{\nprivate:\n    int m_value;\npublic:\n    IntBuffer();\n    IntBuffer(const int values);\n    // friend functions\n    inline int get_value() { return m_value; }\n    int IntBufferToInt();\n    double IntBufferToDouble();\n    std::string IntBufferToStdString();\n    DoubleBuffer IntBufferToDoubleBuffer();\n    // TIME\n    friend IntBuffer operator+(IntBuffer object, int time);\n    friend IntBuffer operator+(int time, IntBuffer object);\n    friend IntBuffer operator+(IntBuffer object, IntBuffer object2);\n    // SUF\n    friend IntBuffer operator-(IntBuffer object, int suf);\n    friend IntBuffer operator-(int suf, IntBuffer object);\n    friend IntBuffer operator-(IntBuffer object, IntBuffer object2);\n    // CTEVS\n    friend IntBuffer operator*(IntBuffer object, int ctevs);\n    friend IntBuffer operator*(int ctevs, IntBuffer object);\n    friend IntBuffer operator*(IntBuffer object, IntBuffer object2);\n    // HWAD\n    friend IntBuffer operator/(IntBuffer object, int HWAD);\n    friend IntBuffer operator/(int HWAD, IntBuffer object);\n    friend IntBuffer operator/(IntBuffer object, IntBuffer object2);\n    // FYAT\n    friend IntBuffer operator%(IntBuffer object, int FYAT);\n    friend IntBuffer operator%(int FYAT, IntBuffer object);\n    friend IntBuffer operator%(IntBuffer object, IntBuffer object2);\n    // PRCL\n    friend IntBuffer operator^(IntBuffer object, int PRCL);\n    friend IntBuffer operator^(int PRCL, IntBuffer object);\n    friend IntBuffer operator^(IntBuffer object, IntBuffer object2);\n    // BIGGER AND SMALLER\n    friend bool operator<(IntBuffer object, int number);\n    friend bool operator<(int number, IntBuffer object);\n    friend bool operator<(IntBuffer object, IntBuffer object2);\n    friend bool operator>(IntBuffer object, int number);\n    friend bool operator>(int number, IntBuffer object);\n    friend bool operator>(IntBuffer object, IntBuffer object2);\n    // dengyu\n    friend bool operator==(IntBuffer object, int number);\n    friend bool operator==(int number, IntBuffer object);\n    friend bool operator==(IntBuffer object, IntBuffer object2);\n    // BIGGER AND SMALLER : DENGYU\n    friend bool operator<=(IntBuffer object, int number);\n    friend bool operator<=(int number, IntBuffer object);\n    friend bool operator<=(IntBuffer object, IntBuffer object2);\n    friend bool operator>=(IntBuffer object, int number);\n    friend bool operator>=(int number, IntBuffer object);\n    friend bool operator>=(IntBuffer object, IntBuffer object2);\n    // operator << and >> (ostream and istream)\n    inline friend std::ostream & operator<<(std::ostream & os, IntBuffer object) { return os << object.m_value; }\n    inline friend std::istream & operator>>(std::istream & is, IntBuffer object) { return is >> object; };\n    // other operator\n    inline friend IntBuffer operator++(IntBuffer Object) { return Object.m_value += 1; }\n    inline friend IntBuffer operator--(IntBuffer Object) { return Object.m_value -= 1; }\n    // functions tools\n    IntBuffer GetBits(const int bits);\n    IntBuffer GetInMemorySize();\n};\n\nclass DoubleBuffer\n{\nprivate:\n    mutable long double result;\npublic:\n    DoubleBuffer();\n    DoubleBuffer(const double ones);\n    // 功能大全\n    int DoubleBufferToInt();\n    double DoubleBufferToDouble();\n    std::string DoubleBufferToStdString();\n    IntBuffer DoubleBufferToIntBuffer() { return (IntBuffer)this->result; }\n    size_t GetDoubleBufferLength();\n    long double GetDoubleBufferBits(long int bits);\n    unsigned int GetDoubleBufferInteger();\n    inline double get_value() { return result; }\n    // friend operator functions\n    // TIME\n    friend DoubleBuffer operator+(double one, DoubleBuffer two);\n    friend DoubleBuffer operator+(DoubleBuffer one, double two);\n    friend DoubleBuffer operator+(DoubleBuffer one, DoubleBuffer two);\n        // INTBUFFER\n    friend DoubleBuffer operator+(IntBuffer one, DoubleBuffer two);\n    friend DoubleBuffer operator+(DoubleBuffer one, IntBuffer two);\n    // SUF\n    friend DoubleBuffer operator-(double one, DoubleBuffer two);\n    friend DoubleBuffer operator-(DoubleBuffer one, double two);\n    friend DoubleBuffer operator-(DoubleBuffer one, DoubleBuffer two);\n        // INTBUFFER\n    friend DoubleBuffer operator-(IntBuffer one, DoubleBuffer two);\n    friend DoubleBuffer operator-(DoubleBuffer one, IntBuffer two);\n    // STRC\n    friend DoubleBuffer operator*(double one, DoubleBuffer two);\n    friend DoubleBuffer operator*(DoubleBuffer one, double two);\n    friend DoubleBuffer operator*(DoubleBuffer one, DoubleBuffer two);\n        // INTBUFFER\n    friend DoubleBuffer operator*(IntBuffer one, DoubleBuffer two);\n    friend DoubleBuffer operator*(DoubleBuffer one, IntBuffer two);\n    // PATC\n    friend DoubleBuffer operator/(double one, DoubleBuffer two);\n    friend DoubleBuffer operator/(DoubleBuffer one, double two);\n    friend DoubleBuffer operator/(DoubleBuffer one, DoubleBuffer two);\n        // INTBUFFER\n    friend DoubleBuffer operator/(IntBuffer one, DoubleBuffer two);\n    friend DoubleBuffer operator/(DoubleBuffer one, IntBuffer two);\n    // WHUA\n    friend DoubleBuffer operator^(double one, DoubleBuffer two);\n    friend DoubleBuffer operator^(DoubleBuffer one, double two);\n    friend DoubleBuffer operator^(DoubleBuffer one, DoubleBuffer two);\n        // INT\n    friend DoubleBuffer operator^(DoubleBuffer one, int two);\n    friend DoubleBuffer operator^(int one, DoubleBuffer two);\n        // INTBUFFER\n    friend DoubleBuffer operator^(IntBuffer one, DoubleBuffer two);\n    friend DoubleBuffer operator^(DoubleBuffer one, IntBuffer two);\n    friend DoubleBuffer operator^(double one, IntBuffer two);\n    // Other\n    friend DoubleBuffer operator++(DoubleBuffer);\n    friend DoubleBuffer operator--(DoubleBuffer);\n    operator DoubleBuffer() { return result; }\n    // opeartor << and >>(ostream and istream)\n    inline friend std::ostream & operator<<(std::ostream & o, DoubleBuffer & strs_out) { return o << strs_out.result; }\n    inline friend std::istream & operator>>(std::istream & i, DoubleBuffer & strs_info) { return i >> strs_info.result; }\n};\n\n#endif // _INTBUFFER_H !\n", "\n\n", "2、对应头文件的实现类方法的cpp文件", "\nBuffer_SX.cpp", "\n\n", "#include <iostream>\n#include <string>\n#include <vector>\n#include <iomanip>\n#include <sstream>\n#include \"Buffer.h\"\nDoubleBuffer::DoubleBuffer()\n{\n\n}\n\nDoubleBuffer::DoubleBuffer(const double ones)\n{\n    result = ones;\n}\n\nint DoubleBuffer::DoubleBufferToInt()\n{\n    return (int)this->result;\n}\n\ndouble DoubleBuffer::DoubleBufferToDouble()\n{\n    return (double)this->result;\n}\n\nstd::string DoubleBuffer::DoubleBufferToStdString()\n{\n    char buffer[1024];\n    sprintf_s(buffer, \"%f\", this->result);\n    std::string result_str = buffer;\n    return result_str;\n}\n\nDoubleBuffer operator+(double one, DoubleBuffer two)\n{\n    two.result += one;\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator+(DoubleBuffer one, double two)\n{\n    one.result += two;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator+(DoubleBuffer one, DoubleBuffer two)\n{\n    one.result += two.result;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator+(IntBuffer one, DoubleBuffer two)\n{\n    two.result += one.get_value();\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator+(DoubleBuffer one, IntBuffer two)\n{\n    one.result += two.get_value();\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator-(double one, DoubleBuffer two)\n{\n    two.result = one - two.result;\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator-(DoubleBuffer one, double two)\n{\n    one.result = one.result - two;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator-(DoubleBuffer one, DoubleBuffer two)\n{\n    one.result -= two.result;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator-(IntBuffer one, DoubleBuffer two)\n{\n    two.result += one.get_value();\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator-(DoubleBuffer one, IntBuffer two)\n{\n    one.result += two.get_value();\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator*(double one, DoubleBuffer two)\n{\n    two.result *= one;\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator*(DoubleBuffer one, double two)\n{\n    one.result *= two;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator*(DoubleBuffer one, DoubleBuffer two)\n{\n    one.result *= two.result;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator*(IntBuffer one, DoubleBuffer two)\n{\n    two.result *= one.get_value();\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator*(DoubleBuffer one, IntBuffer two)\n{\n    one.result *= two.get_value();\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator/(double one, DoubleBuffer two)\n{\n    two.result = one / two.result;\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator/(DoubleBuffer one, double two)\n{\n    one.result /= two;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator/(DoubleBuffer one, DoubleBuffer two)\n{\n    one.result /= two.result;\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator/(IntBuffer one, DoubleBuffer two)\n{\n    two.result = one.get_value() / two.result;\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator/(DoubleBuffer one, IntBuffer two)\n{\n    one.result /= two.get_value();\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator^(double one, DoubleBuffer two)\n{\n    for (int i = 1; i <= one; i++)\n    {\n        two.result *= two.result;\n    }\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator^(DoubleBuffer one, double two)\n{\n    for (int i = 1; i <= two; i++)\n    {\n        one.result *= one.result;\n    }\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator^(DoubleBuffer one, DoubleBuffer two)\n{\n    for (int i = 1; i <= two.result; i++)\n    {\n        one.result *= one.result;\n    }\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator^(DoubleBuffer one, int two)\n{\n    for (int i = 1; i <= two; i++)\n    {\n        one.result *= one.result;\n    }\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator^(int one, DoubleBuffer two)\n{\n    for (int i = 1; i <= one; i++)\n    {\n        two.result *= two.result;\n    }\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator^(IntBuffer one, DoubleBuffer two)\n{\n    for (int i = 1; i <= one.get_value(); i++)\n    {\n        two.result *= two.result;\n    }\n    return DoubleBuffer(two.result);\n}\n\nDoubleBuffer operator^(DoubleBuffer one, IntBuffer two)\n{\n    for (int i = 1; i <= two.get_value(); i++)\n    {\n        one.result *= one.result;\n    }\n    return DoubleBuffer(one.result);\n}\n\nDoubleBuffer operator++(DoubleBuffer objects)\n{\n    objects.result += 1;\n    return objects;\n}\n\nDoubleBuffer operator--(DoubleBuffer objects)\n{\n    objects.result -= 1;\n    return objects;\n}\n\nsize_t DoubleBuffer::GetDoubleBufferLength()\n{\n    long double opas = this->result;\n    char buffer[1024];\n    sprintf_s(buffer, \"%f\", opas);\n    std::string str = buffer;\n    std::vector <int> lengths;\n    for (int i = 1; i <= str.length(); i++)\n    {\n        lengths.push_back(i);\n    }\n    size_t DoubleBufferLength = lengths.size();\n    return DoubleBufferLength - 1;\n}\n\nunsigned int DoubleBuffer::GetDoubleBufferInteger()\n{\n    long double xdouble = this->result;\n    unsigned int DoubleBufferBits = (unsigned int)xdouble;\n    return DoubleBufferBits;\n}\n\nlong double DoubleBuffer::GetDoubleBufferBits(long int bits)\n{\n    std::string str = \"1\";\n    for (long int i = 1; i <= bits; i++)\n    {\n        str += '0';\n    }\n    long int cheng_numbers = std::stoi(str);\n    long double xdouble = this->result;\n    long double tempDE = xdouble * cheng_numbers;\n    DoubleBuffer Doubles = tempDE;\n    int news = Doubles.GetDoubleBufferInteger();\n    double data = news * 1.0 / cheng_numbers;\n    return data;\n}\n\n\nIntBuffer::IntBuffer()\n{\n\n}\n\nIntBuffer::IntBuffer(const int values)\n{\n    m_value = values;\n}\n\nint IntBuffer::IntBufferToInt()\n{\n    return (int)this->m_value;\n}\n\ndouble IntBuffer::IntBufferToDouble()\n{\n    return (double)this->m_value;\n}\n\nDoubleBuffer IntBuffer::IntBufferToDoubleBuffer()\n{\n    return (DoubleBuffer)this->m_value;\n}\n\nstd::string IntBuffer::IntBufferToStdString()\n{\n    return std::to_string(this->m_value);\n}\n\nIntBuffer operator+(IntBuffer object, int time)\n{\n    object.m_value += time;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator+(int time, IntBuffer object)\n{\n    object.m_value += time;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator+(IntBuffer object, IntBuffer object2)\n{\n    object.m_value += object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator-(IntBuffer object, int suf)\n{\n    object.m_value -= suf;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator-(int suf, IntBuffer object)\n{\n    object.m_value = suf - object.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator-(IntBuffer object, IntBuffer object2)\n{\n    object.m_value -= object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator*(IntBuffer object, int ctevs)\n{\n    object.m_value *= ctevs;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator*(int ctevs, IntBuffer object)\n{\n    object.m_value *= ctevs;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator*(IntBuffer object, IntBuffer object2)\n{\n    object.m_value *= object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator/(IntBuffer object, int HWAD)\n{\n    object.m_value /= HWAD;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator/(int HWAD, IntBuffer object)\n{\n    object.m_value = HWAD / object.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator/(IntBuffer object, IntBuffer object2)\n{\n    object.m_value /= object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator%(IntBuffer object, int FYAT)\n{\n    object.m_value %= FYAT;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator%(int FYAT, IntBuffer object)\n{\n    object.m_value = FYAT % object.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator%(IntBuffer object, IntBuffer object2)\n{\n    object.m_value %= object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator^(IntBuffer object, int PRCL)\n{\n    object.m_value ^= PRCL;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator^(int PRCL, IntBuffer object)\n{\n    object.m_value ^= PRCL;\n    return IntBuffer(object.m_value);\n}\n\nIntBuffer operator^(IntBuffer object, IntBuffer object2)\n{\n    object.m_value ^= object2.m_value;\n    return IntBuffer(object.m_value);\n}\n\nbool operator<(IntBuffer object, int number)\n{\n    return object.m_value < number ? true : false;\n}\n\nbool operator<(int number, IntBuffer object)\n{\n    return number < object.m_value ? true : false;\n}\n\nbool operator<(IntBuffer object, IntBuffer object2)\n{\n    return object.m_value < object2.m_value ? true : false;\n}\n\nbool operator>(IntBuffer object, int number)\n{\n    return object.m_value > number ? true : false;\n}\n\nbool operator>(int number, IntBuffer object)\n{\n    return number > object.m_value ? true : false;\n}\n\nbool operator>(IntBuffer object, IntBuffer object2)\n{\n    return object.m_value > object2.m_value ? true : false;\n}\n\nbool operator==(IntBuffer object, int number)\n{\n    return object.m_value == number ? true : false;\n}\n\nbool operator==(int number, IntBuffer object)\n{\n    return number == object.m_value ? true : false;\n}\nbool operator==(IntBuffer object, IntBuffer object2)\n{\n    return object.m_value == object2.m_value ? true : false;\n}\n\nbool operator<=(IntBuffer object, int number)\n{\n    return object.m_value <= number ? true : false;\n}\n\nbool operator<=(int number, IntBuffer object)\n{\n    return number <= object.m_value ? true : false;\n}\n\nbool operator<=(IntBuffer object, IntBuffer object2)\n{\n    return object.m_value <= object2.m_value ? true : false;\n}\n\nbool operator>=(IntBuffer object, int number)\n{\n    return object.m_value >= number ? true : false;\n}\n\nbool operator>=(int number, IntBuffer object)\n{\n    return number >= object.m_value ? true : false;\n}\n\nbool operator>=(IntBuffer object, IntBuffer object2)\n{\n    return object.m_value >= object2.m_value ? true : false;\n}\n\nIntBuffer IntBuffer::GetBits(const int bits)\n{\n    const char * str = \"1\";\n    for (long int i = 1; i <= bits; i++)\n    {\n        str += '0';\n    }\n    const IntBuffer CURS = (int)str;\n    IntBuffer result = this->m_value * CURS;\n    return result;\n}\n\nIntBuffer IntBuffer::GetInMemorySize()\n{\n    return sizeof(IntBuffer);\n}\n", "\n\n", "3、主程序", "\n源.cpp", "\n\n", "#include <iostream>\n#include <string>\n#include \"Buffer.h\"\n\nusing std::cout;\nusing std::endl;\nusing std::cin;\n\nint main()\n{\n    IntBuffer age = 12;\n    IntBuffer age_time = 12 + age + age - age;\n    DoubleBuffer PI = 3.14 ^ age;\n    cout << \"Number age: \" << age_time << \", type is \" << typeid(age_time).name() << endl;\n    cout << \"PI (To IntBuffer): \" << PI.DoubleBufferToIntBuffer() << \", type is \" << typeid(PI).name() << endl;\n    cin.get();\n    cin.get();\n    return 0;\n}\n", "\n\n", "其中，源.cpp（主程序）的第13行出了问题：", "\nDoubleBuffer PI = 3.14 ^ age;", "\n报错信息为：", "\n严重性   代码  说明  项目  文件  行 禁止显示状态", "\n错误  C2440   “初始化”: 无法从“IntBuffer”转换为“DoubleBuffer”    IntBufferPro    d:\\c++ pro\\intbufferpro\\intbufferpro\\源.cpp    13", "\n严重性   代码  说明  项目  文件  行 禁止显示状态", "\n错误(活动)  E0312   不存在用户定义的从 \"IntBuffer\" 到 \"DoubleBuffer\" 的适当转换  IntBufferPro    D:\\C++ Pro\\IntBufferPro\\IntBufferPro\\源.cpp    13", "\n还有警告信息：", "\n严重性   代码  说明  项目  文件  行 禁止显示状态", "\n警告  C4244   “参数”: 从“double”转换到“int”，可能丢失数据    IntBufferPro    d:\\c++ pro\\intbufferpro\\intbufferpro\\源.cpp    13", "\n严重性   代码  说明  项目  文件  行 禁止显示状态", "\n警告  C4244   “参数”: 从“long double”转换到“const int”，可能丢失数据 IntBufferPro    d:\\c++ pro\\intbufferpro\\intbufferpro\\buffer.h   87"]], "Tag": "程序设计"}
{"Answer": "1.检查你的文件路径.是否放在windows 下时 是将整个项目的文件夹拿过的，之间的相对路径有没有错误\r\n2.读取文件的时候在linux 下用的是 read(),   write(),   等系统调用，这些函数只能在 linux 下调用", "Konwledge_Point": "主程序", "Question": ["linux下c代码怎么在Windows&VS2017上运行？", ["有个Tools文件夹 ，包含生成图表的chartheader0.txt，", "\n还有Misc文件夹，里面有头文件和库文件。", "\n怎么在本机的vs上运行？", "\n直接运行主程序代码，这一行会报错 ", "\nprintChartHeader(\"./Tools/chartheader0.txt\", pCHART0);"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主你好&lt;br /&gt;两个方法可以选择&lt;br /&gt;1  写一个bat&amp;#xff0c;调用这个程序&amp;#xff0c;使用window自带的定时任务即可定时调用&lt;br /&gt;2  再写一个定时程序来调用这个程序&lt;/p&gt;\n&lt;p&gt;不建议修改这个程序&amp;#xff0c;因为程序代码执行要隔离&amp;#xff0c;各干各的事才是最好的规划。&lt;/p&gt;\n&lt;p&gt;如果您还有什么疑问&amp;#xff0c;可以继续交流&lt;/p&gt;\n&lt;p&gt;修改了程序如下&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;添加了 run_main函数&amp;#xff0c;用于调用main方法&lt;/li&gt;&lt;li&gt;添加了 run函数&amp;#xff0c;用于开启定时器&lt;br /&gt;run(15*60)  表示 15分钟执行一次&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;\nimport json\nimport &lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;\nfrom requests import post\nfrom datetime import datetime, timedelta\nimport pymssql\nimport decimal\nfrom logging import basicConfig, debug, DEBUG\nimport os\nimport sched\n\n&lt;span class=\"hljs-comment\"&gt;##################&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 获取流量数据开始#&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;##################&lt;/span&gt;\nbaseUrl &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*********,#接口用*保密\nheader &amp;#61; {&amp;#39;&lt;/span&gt;Content-Type&lt;span class=\"hljs-string\"&gt;&amp;#39;: &amp;#39;&lt;/span&gt;application/json&lt;span class=\"hljs-string\"&gt;&amp;#39;}\nurl &amp;#61; f&amp;#39;&lt;/span&gt;http:&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;{baseUrl}&lt;/span&gt;/api/water/reservoidFlowOutHour/&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;  # 5分钟出库流量\n\n\n# &amp;#39;&lt;/span&gt;WSPDSLLS00003702&lt;span class=\"hljs-string\"&gt;&amp;#39;\n# &amp;#39;&lt;/span&gt;WSPDPLLS00003702&lt;span class=\"hljs-string\"&gt;&amp;#39;\ndef data_request(url, header, body, key, station):\n    try:\n        r &amp;#61; post(url, headers&amp;#61;header, json&amp;#61;body)\n        datas &amp;#61; r.json()\n        # print(datas)\n        data_lst &amp;#61; []\n        if &amp;#39;&lt;/span&gt;data&lt;span class=\"hljs-string\"&gt;&amp;#39; in datas:\n            data_lst &amp;#61; []\n            for i in range(len(datas[&amp;#39;&lt;/span&gt;data&lt;span class=\"hljs-string\"&gt;&amp;#39;])):\n                # print(datetime.now())\n                if datas[&amp;#39;&lt;/span&gt;data&lt;span class=\"hljs-string\"&gt;&amp;#39;][i][key] &amp;#61;&amp;#61; station:\n                    data_lst.append(datas[&amp;#39;&lt;/span&gt;data&lt;span class=\"hljs-string\"&gt;&amp;#39;][i])\n            return data_lst\n        else:\n            print(&amp;#39;&lt;/span&gt;返回值中无data键&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39;, datas)\n            debug(&amp;#39;&lt;/span&gt;返回值中无data键&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43; str(datas))\n            return []\n    except OSError:\n        print(&amp;#39;&lt;/span&gt;OSError esb 连接失败&amp;#xff01;&amp;#xff01;&lt;span class=\"hljs-string\"&gt;&amp;#39;)\n        debug(&amp;#39;&lt;/span&gt;OSError esb 连接失败&amp;#xff01;&amp;#xff01;&lt;span class=\"hljs-string\"&gt;&amp;#39;)\n        return []\n    except Exception as e:\n        print(&amp;#39;&lt;/span&gt;数据格式有误&amp;#xff0c;post返回值为&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43; str(datas) &amp;#43; &amp;#39;&lt;/span&gt; &amp;#xff0c;错误信息为&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39;, e)\n        debug(&amp;#39;&lt;/span&gt;数据格式有误&amp;#xff0c;post返回值为&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43; str(datas) &amp;#43; &amp;#39;&lt;/span&gt; &amp;#xff0c;错误信息为&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43; str(e))\n        return []\n\n\ndef time_trans(unix):\n    &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;\n    将unix时间转换成北京时间\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\n    if len(str(unix)) &amp;#61;&amp;#61; 13:  # 有毫秒时间\n        return datetime.fromtimestamp(int(unix) / 1000)\n    elif len(str(unix)) &amp;#61;&amp;#61; 10:\n        return datetime.fromtimestamp(int(unix))\n    else:\n        print(&amp;#39;&lt;/span&gt;unix时间长度有误&amp;#xff01;&lt;span class=\"hljs-string\"&gt;&amp;#39;)\n\n\n# pbg_lst &amp;#61; data_request(url,header,body,&amp;#39;&lt;/span&gt;POINT_CODE&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;WSPDPLLS00003702&lt;span class=\"hljs-string\"&gt;&amp;#39;)\n# print(pbg_lst,time_trans(pbg_lst[-1][&amp;#39;&lt;/span&gt;DATA_TIME&lt;span class=\"hljs-string\"&gt;&amp;#39;]))\n##################\n# 获取流量数据结束#\n##################\n################\n# 数据库连接开始#\n################\nsql_cfg &amp;#61; {\n    &amp;#39;&lt;/span&gt;url&lt;span class=\"hljs-string\"&gt;&amp;#39;: &amp;#39;&lt;/span&gt;*********,&lt;span class=\"hljs-comment\"&gt;#接口用*保密&lt;/span&gt;\n           &lt;span class=\"hljs-string\"&gt;&amp;#39;usr&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;U_DB_IF&amp;#39;&lt;/span&gt;,\n                 &lt;span class=\"hljs-string\"&gt;&amp;#39;pwd&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;DB_6789054321_!&amp;#39;&lt;/span&gt;,\n&lt;span class=\"hljs-string\"&gt;&amp;#39;db_name&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;SkyUni_DB_Moni_DataInterFace&amp;#39;&lt;/span&gt;,\n}  &lt;span class=\"hljs-comment\"&gt;# SQL server 查询配置&lt;/span&gt;\ndef insert_value(tables, SCTD, TM, Q):\n    try:\n        conn &amp;#61; pymssql.connect(sql_cfg[&lt;span class=\"hljs-string\"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;], sql_cfg[&lt;span class=\"hljs-string\"&gt;&amp;#39;usr&amp;#39;&lt;/span&gt;], sql_cfg[&lt;span class=\"hljs-string\"&gt;&amp;#39;pwd&amp;#39;&lt;/span&gt;], sql_cfg[&lt;span class=\"hljs-string\"&gt;&amp;#39;db_name&amp;#39;&lt;/span&gt;], tables)\n        cursor &amp;#61; conn.cursor()\n        insert_sql &amp;#61; f&lt;span class=\"hljs-string\"&gt;&amp;#34;INSERT INTO {tables} (STCD,TM,Q) VALUES (&amp;#39;{SCTD}&amp;#39;,&amp;#39;{TM}&amp;#39;,&amp;#39;{Q}&amp;#39;)&amp;#34;&lt;/span&gt;\n        cursor.execute(insert_sql)\n        conn.commit()\n        cursor.close()  &lt;span class=\"hljs-comment\"&gt;# 关闭游标&lt;/span&gt;\n        conn.close()  &lt;span class=\"hljs-comment\"&gt;# 关闭数据库连接&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(tables, SCTD, TM, Q, &lt;span class=\"hljs-string\"&gt;&amp;#39;数据更新成功&amp;#39;&lt;/span&gt;)\n        debug(str(tables) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(SCTD) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(TM) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(Q) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;数据更新成功&amp;#39;&lt;/span&gt;)\n    except pymssql.IntegrityError:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(tables, SCTD, TM, Q, &lt;span class=\"hljs-string\"&gt;&amp;#39;数据已存在&amp;#xff0c;无最新数据&amp;#39;&lt;/span&gt;)\n        debug(str(tables) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(SCTD) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(TM) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; str(Q) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;数据已存在&amp;#xff0c;无最新数据&amp;#39;&lt;/span&gt;)\n    except Exception as e:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据库连接失败&amp;#xff01;失败原因&amp;#xff1a;&amp;#39;&lt;/span&gt;, e)\n        debug(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据库连接失败&amp;#xff01;失败原因&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; str(e))\n\n\n&lt;span class=\"hljs-comment\"&gt;# insert_value(&amp;#39;ST_RIVER_R_PBG&amp;#39;,&amp;#39;511823SWSL084&amp;#39;,datetime.fromtimestamp(1566835200000/1000),2205.0)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;################&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 数据库连接结束#&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;################&lt;/span&gt;\ndef main():\n    try:\n        body &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;startTime&amp;#34;&lt;/span&gt;: str(datetime.now())[:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;] &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39; 00:00:00&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;endTime&amp;#34;&lt;/span&gt;: str(datetime.now())[:&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;]}  &lt;span class=\"hljs-comment\"&gt;# 时间从今天0点到现在&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(body)\n        pbg_lst &amp;#61; data_request(url, header, body, &lt;span class=\"hljs-string\"&gt;&amp;#39;POINT_CODE&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;WSPDPLLS00003702&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; pbg_lst:\n            pbg_data &amp;#61; pbg_lst[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]  &lt;span class=\"hljs-comment\"&gt;# 取今天最新的一条数据&lt;/span&gt;\n            insert_value(&lt;span class=\"hljs-string\"&gt;&amp;#39;ST_RIVER_R_PBG&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;511823SWSL084&amp;#39;&lt;/span&gt;,\n                         datetime.strptime(str(datetime.now()), &lt;span class=\"hljs-string\"&gt;&amp;#34;%Y-%m-%d %H:%M:%S.%f&amp;#34;&lt;/span&gt;).strftime(&lt;span class=\"hljs-string\"&gt;&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;),\n                         pbg_data[&lt;span class=\"hljs-string\"&gt;&amp;#39;DATA_VALUE&amp;#39;&lt;/span&gt;])\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据获取失败&amp;#xff0c;esb返回值为空&amp;#39;&lt;/span&gt;)\n            debug(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据获取失败&amp;#xff0c;esb返回值为空&amp;#39;&lt;/span&gt;)\n        sxg_lst &amp;#61; data_request(url, header, body, &lt;span class=\"hljs-string\"&gt;&amp;#39;POINT_CODE&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;WSPDSLLS00003702&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; sxg_lst:\n            sxg_data &amp;#61; sxg_lst[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n            insert_value(&lt;span class=\"hljs-string\"&gt;&amp;#39;ST_RIVER_R_PBG&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;511823SWSL085&amp;#39;&lt;/span&gt;,\n                         datetime.strptime(str(datetime.now()), &lt;span class=\"hljs-string\"&gt;&amp;#34;%Y-%m-%d %H:%M:%S.%f&amp;#34;&lt;/span&gt;).strftime(&lt;span class=\"hljs-string\"&gt;&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;),\n                         sxg_data[&lt;span class=\"hljs-string\"&gt;&amp;#39;DATA_VALUE&amp;#39;&lt;/span&gt;])\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据获取失败&amp;#xff0c;esb返回值为空&amp;#39;&lt;/span&gt;)\n            debug(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据获取失败&amp;#xff0c;esb返回值为空&amp;#39;&lt;/span&gt;)\n    except Exception as e:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据更新失败&amp;#xff01;失败原因&amp;#xff1a;&amp;#39;&lt;/span&gt;, e)\n        debug(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据更新失败&amp;#xff01;失败原因&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; str(e))\n\n\n&lt;span class=\"hljs-comment\"&gt;# try:&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     time_now &amp;#61; datetime.now()&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     print(&amp;#39;\\n&amp;#39;,&amp;#39;#####################################&amp;#39;,&amp;#39;\\n&amp;#39;,&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#             &amp;#39;#本次更新时间&amp;#xff1a;&amp;#39;,str(time_now)[:19],&amp;#39;#&amp;#39;,&amp;#39;\\n&amp;#39;,&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#             &amp;#39;#####################################&amp;#39;,&amp;#39;\\n&amp;#39;)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     main()&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     print(&amp;#39;\\n&amp;#39;,&amp;#39;################################################&amp;#39;,&amp;#39;\\n&amp;#39;,&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#             &amp;#39;#本次更新结束&amp;#xff0c;请勿关闭程序&amp;#xff01;等待下一次更新...&amp;#39;,&amp;#39;#&amp;#39;,&amp;#39;\\n&amp;#39;,&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#             &amp;#39;################################################&amp;#39;,&amp;#39;\\n&amp;#39;)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# except Exception as e:&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     debug(&amp;#39;主程序运行失败&amp;#xff01;失败原因&amp;#xff1a;&amp;#39;&amp;#43;str(e))&lt;/span&gt;\n\nschedule &amp;#61; sched.scheduler(time.time, time.sleep)\n\ndef run_main(inc):\n    time_now &amp;#61; datetime.now()\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;#####################################&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;,\n          &lt;span class=\"hljs-string\"&gt;&amp;#39;#本次更新时间&amp;#xff1a;&amp;#39;&lt;/span&gt;, str(time_now)[:&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;], &lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;,\n          &lt;span class=\"hljs-string\"&gt;&amp;#39;#####################################&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n    main()\n    schedule.enter(inc, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, run_main, (inc,))\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;################################################&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;,\n          &lt;span class=\"hljs-string\"&gt;&amp;#39;#本次更新结束&amp;#xff0c;请勿关闭程序&amp;#xff01;等待下一次更新...&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;,\n          &lt;span class=\"hljs-string\"&gt;&amp;#39;################################################&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n\ndef run(inc&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;):\n    schedule.enter(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, run_main, (inc,))\n    schedule.run()\n\nrun(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["python 程序定时启动与结束", ["需要将现有程序改为定时每小时的0分钟，15分钟，30分钟，45分钟自动启动通过接口读取数据后写入数据库，然后结束该程序，直到到达下个定时时间。（例：每天00：00该程序自动启动读取数据写入数据库后自动结束直到00：15，然后自动启动读取数据写入数据库后自动结束直到00：30，重复到00：45，01：00，01:15，01：30等）", "\n", "# -*- coding: utf-8 -*-", "\nimport json\nimport ", "time", "\nfrom requests import post\nfrom datetime import datetime, timedelta\nimport pymssql\nimport  decimal\nfrom logging import basicConfig,debug,DEBUG\nimport os\n\n\n", "##################", "\n", "#获取流量数据开始#", "\n", "##################", "\n\nbaseUrl = ", "'*********,#接口用*保密\nheader = {'", "Content-Type", "':'", "application/json", "'}\n\nurl = f'", "http:", "//", "{baseUrl}", "/api/water/reservoidFlowOutHour/", "1.0", "' #5分钟出库流量\n\n\n# '", "WSPDSLLS00003702", "'\n# '", "WSPDPLLS00003702", "'\n\n\ndef data_request(url,header,body,key,station):\n    try:\n        r = post(url, headers = header , json = body)\n        datas = r.json()\n        # print(datas)\n        data_lst = []\n        if '", "data", "' in datas:\n            data_lst = []\n            for i in range(len(datas['", "data", "'])):\n                # print(datetime.now())\n                if datas['", "data", "'][i][key] == station:\n                    data_lst.append(datas['", "data", "'][i])\n            return data_lst\n        else:\n            print('", "返回值中无data键：", "',datas)\n            debug('", "返回值中无data键：", "'+str(datas))\n            return []\n    except OSError:\n        print('", "OSError esb 连接失败！！", "')\n        debug('", "OSError esb 连接失败！！", "')\n        return []\n    except Exception as e:\n        print('", "数据格式有误，post返回值为：", "'+str(datas)+'", " ，错误信息为：", "',e)\n        debug('", "数据格式有误，post返回值为：", "'+str(datas)+'", " ，错误信息为：", "'+str(e))\n        return []\n\n\n\ndef time_trans(unix):\n    '", "''", "\n    将unix时间转换成北京时间\n    ", "''", "'\n    if len(str(unix)) == 13: #有毫秒时间\n        return datetime.fromtimestamp(int(unix)/1000)\n    elif len(str(unix)) == 10:\n        return datetime.fromtimestamp(int(unix))\n    else:\n        print('", "unix时间长度有误！", "')\n\n\n# pbg_lst = data_request(url,header,body,'", "POINT_CODE", "','", "WSPDPLLS00003702", "')\n# print(pbg_lst,time_trans(pbg_lst[-1]['", "DATA_TIME", "']))\n##################\n#获取流量数据结束#\n##################\n\n\n################\n#数据库连接开始#\n################\n\nsql_cfg = {\n          '", "url", "':'", "*********,", "#接口用*保密", "\n          ", "'usr'", ":", "'U_DB_IF'", ",\n          ", "'pwd'", ":", "'DB_6789054321_!'", ",\n          ", "'db_name'", ":", "'SkyUni_DB_Moni_DataInterFace'", ",\n          } ", "#   SQL server 查询配置", "\n\ndef insert_value(tables,SCTD,TM,Q):\n    try:\n        conn = pymssql.connect(sql_cfg[", "'url'", "],sql_cfg[", "'usr'", "],sql_cfg[", "'pwd'", "],sql_cfg[", "'db_name'", "],tables)\n        cursor = conn.cursor() \n        insert_sql = f", "\"INSERT INTO {tables} (STCD,TM,Q) VALUES ('{SCTD}','{TM}','{Q}')\"", "\n        cursor.execute(insert_sql)\n        conn.commit()\n        cursor.close() ", "#关闭游标", "\n        conn.close() ", "#关闭数据库连接", "\n        ", "print", "(tables,SCTD,TM,Q,", "'数据更新成功'", ")\n        debug(str(tables)+", "' '", "+str(SCTD)+", "' '", "+str(TM)+", "' '", "+str(Q)+", "' '", "+", "'数据更新成功'", ")\n    except pymssql.IntegrityError:\n        ", "print", "(tables,SCTD,TM,Q,", "'数据已存在，无最新数据'", ")\n        debug(str(tables)+", "' '", "+str(SCTD)+", "' '", "+str(TM)+", "' '", "+str(Q)+", "' '", "+", "'数据已存在，无最新数据'", ")\n    except Exception as e:\n        ", "print", "(", "'数据库连接失败！失败原因：'", ",e)\n        debug(", "'数据库连接失败！失败原因：'", "+str(e))\n\n\n", "# insert_value('ST_RIVER_R_PBG','511823SWSL084',datetime.fromtimestamp(1566835200000/1000),2205.0)", "\n\n", "################", "\n", "#数据库连接结束#", "\n", "################", "\n\n\ndef main():\n    try:\n        body = {", "\"startTime\"", ":str(datetime.now())[:", "10", "]+", "' 00:00:00'", ",", "\"endTime\"", ":str(datetime.now())[:", "19", "]}  ", "#时间从今天0点到现在", "\n        ", "print", "(body)\n\n        pbg_lst = data_request(url,header,body,", "'POINT_CODE'", ",", "'WSPDPLLS00003702'", ")\n        ", "if", " pbg_lst:\n            pbg_data = pbg_lst[-", "1", "] ", "#取今天最新的一条数据", "\n            insert_value(", "'ST_RIVER_R_PBG'", ",", "'511823SWSL084'", ",datetime.strptime(str(datetime.now()), ", "\"%Y-%m-%d %H:%M:%S.%f\"", ").strftime(", "'%Y-%m-%d %H:%M:%S'", "),pbg_data[", "'DATA_VALUE'", "])\n        ", "else", ":\n            ", "print", "(", "'数据获取失败，esb返回值为空'", ")\n            debug(", "'数据获取失败，esb返回值为空'", ")\n\n        sxg_lst = data_request(url,header,body,", "'POINT_CODE'", ",", "'WSPDSLLS00003702'", ")\n        ", "if", " sxg_lst:\n            sxg_data = sxg_lst[-", "1", "]\n            insert_value(", "'ST_RIVER_R_PBG'", ",", "'511823SWSL085'", ",datetime.strptime(str(datetime.now()), ", "\"%Y-%m-%d %H:%M:%S.%f\"", ").strftime(", "'%Y-%m-%d %H:%M:%S'", "),sxg_data[", "'DATA_VALUE'", "])\n        ", "else", ":\n            ", "print", "(", "'数据获取失败，esb返回值为空'", ")\n            debug(", "'数据获取失败，esb返回值为空'", ")\n    except Exception as e:\n        ", "print", "(", "'数据更新失败！失败原因：'", ",e)\n        debug(", "'数据更新失败！失败原因：'", "+str(e))\n\n\n\n\n    \n", "# try:", "\n", "#     time_now = datetime.now()", "\n", "#     print('\\n','#####################################','\\n',", "\n", "#             '#本次更新时间：',str(time_now)[:19],'#','\\n',", "\n", "#             '#####################################','\\n')", "\n", "#     main()", "\n", "#     print('\\n','################################################','\\n',", "\n", "#             '#本次更新结束，请勿关闭程序！等待下一次更新...','#','\\n',", "\n", "#             '################################################','\\n')", "\n", "# except Exception as e:", "\n", "#     debug('主程序运行失败！失败原因：'+str(e))", "\n        \n\n\n", "if", " __name_", "_", " == ", "'__main__'", ":\n    ", "while", " True:\n        try:\n            time_now = datetime.now()\n            ", "print", "(", "'\\n'", ",", "'#####################################'", ",", "'\\n'", ",\n                    ", "'#本次更新时间：'", ",str(time_now)[:", "19", "],", "'#'", ",", "'\\n'", ",\n                    ", "'#####################################'", ",", "'\\n'", ")\n            main()\n            ", "print", "(", "'\\n'", ",", "'################################################'", ",", "'\\n'", ",\n                    ", "'#本次更新结束，请勿关闭程序！等待下一次更新...'", ",", "'#'", ",", "'\\n'", ",\n                    ", "'################################################'", ",", "'\\n'", ")\n        except:\n            ", "continue", "\n        time.sleep(", "900", ")\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;两个方法&amp;#xff1a;&lt;br /&gt;1.把return True 修改成print(i)&lt;br /&gt;2.在isprime函数里面定义一个列表&amp;#xff0c;把素数加入到列表&amp;#xff0c;返回列表之后在主函数输出列表&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python中函数的程序设计—素数", ["\n", "我想在最后的结果中输出素数，也就是定义在函数内的i，但是主程序内没有i，我应该怎么改好呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;multiprocessing.freeze_support() 放在入口py文件&amp;#xff08;你的主程序&amp;#xff09;的if __name__&amp;#61;&amp;#61;&amp;#34;__main__&amp;#34;:的后面&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python多进程程序打包后，运行出现多个窗口，应该如果解决", ["打包前，在pycharm中直接运行，多进程也是一个窗口。打包后（pyinstaller、NSIS都试过），运行时出现多个窗口，增加的窗口数与进程数量一样，程序好像也不运行了。。。", "\n\n", "怎么解决程序这个问题？因为必须有GUI来输入多进程操作的文件路径和进程数量，用的是pyqt5。", "\n\n", "说明：涉及到部分内容，多线程实现不太方便，所以使用多进程。", "\n\n", "主程序：", "\n\n", "\n", "from test_tart import Ui_MainWindow\nfrom PyQt5 import QtWidgets\nimport main_test\nimport sys\nimport time\n\nclass mywindow(QtWidgets.QMainWindow, Ui_MainWindow):\n\n    def __init__(self):\n        super(mywindow, self).__init__()\n        self.setupUi(self)\n        self.pushButton.clicked.connect(self.mains)\n\n    def mains(self):\n        path = self.lineEdit.text()\n        num = int(self.lineEdit_4.text())\n        t1 = float(time.time())\n        length = main_test.totest(path, num)\n        t2 = float(time.time())\n        t = str((t2-t1)/length)\n        self.lineEdit_2.setText(t)\n        # print((t2-t1)/length)\n\n\nif __name__==\"__main__\":\n\n    app=QtWidgets.QApplication(sys.argv)\n    myshow=mywindow()\n    myshow.show()\n    sys.exit(app.exec_())", "\n\n", "调用程序（多进程实现部分）：", "\n\n", "\n", "def totest(filepathtt, i):\n# if __name__ == '__main__':\n    multiprocessing.freeze_support()\n    Data_filePath = os.listdir(filepathtt)\n    DfilePath = [filepathtt +'\\\\'+ x for x in Data_filePath]\n    # print(time.time())\n    with ProcessPool(processes= i) as pool:\n        pool.map(test, DfilePath)\n        # print(time.time())\n    return len(Data_filePath)"]], "Tag": "程序设计"}
{"Answer": "定义两个变量errorcount和successcount\r\nprivate void btnPing_Click(object sender, EventArgs e)\r\n这个里面所有类似\r\ncatch (Exception)\r\n                {\r\n                    listBox1.Items.Add(\"无法传送报文！\");\r\n                    return;\r\n                }\r\n的地方都加上 errorcount++;\r\n在这个函数最后加上\r\nsuccesscount++;\r\n在 MessageBox.Show(\"    PING结果保存完毕。    \",\"PING程序设计\",MessageBoxButtons.OK); 后面输出，比如\r\n\r\ntextBox1.Text= \"出错\" + errorcount.ToString() + \"次\"", "Konwledge_Point": "主程序", "Question": ["C#网络通信程序设计基于ICMP的活动主机探测程序设计如何在界面上显示PING的统计结果（成功，失败次数）", ["C#网络通信程序设计基于ICMP的活动主机探测程序设计如何在界面上显示PING的统计结果（成功，失败次数）", "\n用的是visual studio 2010", "\n下面是窗体程序", "\n\n", "\n\n", "下面是代码", "\nprogram", "\n\n", "using System;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Text;\nusing System.Net;\nusing System.Net.Sockets;\nnamespace pingProgram\n{\n    public class IcmPacket\n    {\n        private Byte my_type;\n        private Byte my_subCode;\n        private UInt16 my_checkSum;\n        private UInt16 my_identifier;\n        private UInt16 my_sequenceNumber;\n        private Byte[] my_data;\n        public IcmPacket(Byte type, Byte subCode, UInt16 checkSum, UInt16 identifier, UInt16 sequenceNumber, int dataSize)\n        {\n            my_type = type;\n            my_subCode = subCode;\n            my_checkSum = checkSum;\n            my_identifier = identifier;\n            my_sequenceNumber = sequenceNumber;\n            my_data = new Byte[dataSize];\n            for (int i = 0; i < dataSize; i++)\n            {\n                my_data[i] = (byte)'k';\n            }\n        }\n        public UInt16 CheckSum\n        {\n            get\n            {\n                return my_checkSum;\n            }\n            set\n            {\n                my_checkSum=value;\n            }\n        }\n        public int CountByte(Byte[] buffer)\n        {\n            Byte[] b_type = new Byte[1] { my_type };\n            Byte[] b_code = new Byte[1] { my_subCode };\n            Byte[] b_cksum = BitConverter.GetBytes(my_checkSum);\n            Byte[] b_id = BitConverter.GetBytes(my_identifier);\n            Byte[] b_seq = BitConverter.GetBytes(my_sequenceNumber);\n            int i = 0;\n            Array.Copy(b_type, 0, buffer, i, b_type.Length);\n            i += b_type.Length;\n            Array.Copy(b_code, 0, buffer, i, b_code.Length);\n            i += b_code.Length;\n            Array.Copy(b_cksum, 0, buffer, i, b_cksum.Length);\n            i += b_cksum.Length;\n            Array.Copy(b_id, 0, buffer, i, b_id.Length);\n            i += b_id.Length;\n            Array.Copy(b_seq, 0, buffer, i, b_seq.Length);\n            i += b_seq.Length;\n            Array.Copy(my_data, 0, buffer, i, my_data.Length);\n            i += my_data.Length;\n            return i;\n        }\n        public static UInt16 SumOfCheck(UInt16[] buffer)\n        {\n            int cksum = 0;\n            for (int i = 0; i < buffer.Length; i++)\n                cksum += (int)buffer[i];\n            cksum = (cksum >> 16) + (cksum & 0xffff);\n            cksum += (cksum >> 16);\n            return (UInt16)(~cksum);\n        }\n    }\n\n    static class Program\n    {\n        [STAThread]\n        static void Main()\n        {\n           Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n            Application.Run(new Form1());\n        }\n    }\n}\n", "\n\n", "form1", "\n\n", "using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Net;\nusing System.Net.Sockets;\nnamespace pingProgram\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void btnPing_Click(object sender, EventArgs e)\n        {\n            listBox1.Items.Clear();\n            if (textBox1.Text == \"\")\n            {\n                MessageBox.Show(\"IP地址不能为空！\");\n                return;\n            }\n            string Hostclient = textBox1.Text;\n            Socket Socket = new Socket(AddressFamily.InterNetwork, SocketType.Raw, ProtocolType.Icmp);\n            Socket.ReceiveTimeout = 1000;\n            IPHostEntry Hostinfo;\n            try\n            {\n                Hostinfo = Dns.GetHostEntry(Hostclient);\n            }\n            catch (Exception)\n            {\n                listBox1.Items.Add(\"无法辨识主机！\");\n                return;\n            }\n            EndPoint Hostpoint = (EndPoint)new IPEndPoint(Hostinfo.AddressList[0], 0);\n            IPHostEntry Clientinfo;\n            Clientinfo = Dns.GetHostEntry(Hostclient);\n            EndPoint Clientpoint = (EndPoint)new IPEndPoint(Clientinfo.AddressList[0], 0);\n            int DataSize = 4;\n            int PacketSize = DataSize + 8;\n            const int Icmp_echo = 8;\n\n            IcmPacket Packet = new IcmPacket(Icmp_echo, 0, 0, 45, 0, DataSize);\n            Byte[] Buffer = new Byte[PacketSize];\n            int index = Packet.CountByte(Buffer);\n            if (index != PacketSize)\n            {\n                listBox1.Items.Add(\"报文出现错误!\");\n                return;\n            }\n            int Cksum_buffer_length = (int)Math.Ceiling(((Double)index)/2);\n            UInt16[] Cksum_buffer = new UInt16[Cksum_buffer_length];\n            int Icmp_header_buffer_index = 0;\n            for (int I = 0; I < Cksum_buffer_length; I++)\n            {\n                Cksum_buffer[I] = BitConverter.ToUInt16(Buffer, Icmp_header_buffer_index);\n                Icmp_header_buffer_index += 2;\n            }\n            Packet.CheckSum = IcmPacket.SumOfCheck(Cksum_buffer);\n            Byte[] SendData = new Byte[PacketSize];\n            index = Packet.CountByte(SendData);\n            if (index != PacketSize)\n            {\n                listBox1.Items.Add(\"报文出现错误!\");\n                return;\n            }\n\n            int pingNum=4;\n            for (int i = 0; i < 4; i++)\n            {\n                int Nbytes = 0;\n                int startTime = Environment.TickCount;\n                try\n                {\n                    Nbytes = Socket.SendTo(SendData, PacketSize, SocketFlags.None, Hostpoint);\n\n                }\n                catch (Exception)\n                {\n                    listBox1.Items.Add(\"无法传送报文！\");\n                    return;\n                }\n                Byte[] ReceiveData = new Byte[256];\n                Nbytes = 0;\n                int Timeconsume = 0;\n                while (true)\n                {\n                    try\n                    {\n                        Nbytes = Socket.ReceiveFrom(ReceiveData, 256, SocketFlags.None, ref Clientpoint);\n                    }\n                    catch (Exception)\n                    {\n                        listBox1.Items.Add(\"超时无响应！\");\n                        break;\n                    }\n                    if (Nbytes > 0)\n                    {\n                        Timeconsume = System.Environment.TickCount - startTime;\n                        if (Timeconsume < 1)\n                            listBox1.Items.Add(\"reply from: \" + Hostinfo.AddressList[0].ToString() + \" Send: \" + (PacketSize + 20).ToString() + \" time<1ms \" +\n                    \"bytes Received \" + Nbytes.ToString());\n                        else\n                            listBox1.Items.Add(\"reply from: \" + Hostinfo.AddressList[0].ToString() + \" Send: \" + (PacketSize + 20).ToString() + \" In \"\n+ Timeconsume.ToString() + \" ms;bytes Received \" + Nbytes.ToString());\n                        break;\n                    }\n                }\n            }\n            Socket.Close();\n        }\n\n\n        private void btnSave_Click(object sender, EventArgs e)\n        {\n            SaveFileDialog savedlg = new SaveFileDialog();\n            savedlg.Filter = \"文本文件|*.txt\";\n            savedlg.Title = \"保存记录\";\n            savedlg.ShowDialog();\n            if (savedlg.FileName != \"\")\n            {\n                string localFilePath;\n                localFilePath = \"\";\n                localFilePath = savedlg.FileName.ToString();\n                string str = \"\";\n                for (int j = 0; j < listBox1.Items.Count; j++)\n                {\n                    str += listBox1.Items[j].ToString() + \"\\r\\n\";\n                }\n                FileStream fs = new FileStream(localFilePath, FileMode.OpenOrCreate);\n                StreamWriter sw = new StreamWriter(fs);\n                sw.Write(str);\n                sw.Flush();\n                sw.Close();\n                fs.Close();\n                MessageBox.Show(\"    PING结果保存完毕。    \",\"PING程序设计\",MessageBoxButtons.OK); \n            }\n       }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;空白页没用就关闭掉&amp;#xff0c;自动回到上一个页了\ndriver.close()\n如果怕关错了&amp;#xff0c;你再加个判断标签名&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["selenium自动化时点击提交弹出到新窗口。程序被阻止无法就行下一步。", ["在自动化过程中。点击提交按钮。\nselenium自动跳到了空白页。", "\n", "\n程序无法就行到下一步。\n就在那里卡着。\n无法进行下一步。\n我想切换到第一个页面的窗口。点击确认。\ndriver.find_elements_by_css_selector('#btnConfirm')[0].click()  #程序点击。就弹出空白窗口。就卡在这里。也不报错。应该是主程序无法执行下去。\ndriver.switch_to.window(windows[0])  #本来是想切换到第一个窗口---没反应\nprint(windows) #打印出来当前窗口----没反应", "\n", "\n请大神解决。如何回到第一个窗口。去点击确认按钮。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n#include&amp;lt;iostream&amp;gt;\nusing namespace std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Time&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;hour&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;minute&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;second&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setTime&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; h, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; s) { &lt;span class=\"hljs-built_in\"&gt;hour&lt;/span&gt; &amp;#61; h; &lt;span class=\"hljs-built_in\"&gt;minute&lt;/span&gt; &amp;#61; m; &lt;span class=\"hljs-built_in\"&gt;second&lt;/span&gt; &amp;#61; s; }\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;() { cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;hour&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;minute&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;second&lt;/span&gt;; }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setDate&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d) { &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;#61; y; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt; &amp;#61; m; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt; &amp;#61; d; }\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;() { cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;; }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Birthtime&lt;/span&gt; :&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Time, &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Date\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; Childname[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setChildname&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* name)\n    {\n        &lt;span class=\"hljs-title function_\"&gt;strcpy&lt;/span&gt;(Childname, name);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;()\n    {\n        cout &amp;lt;&amp;lt; Childname &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        Date::&lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;();\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        Time::&lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;();\n    }\n};\n\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;()\n{\n    Birthtime b;\n    b.&lt;span class=\"hljs-property\"&gt;setChildname&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ZhangSan&amp;#34;&lt;/span&gt;);\n    b.&lt;span class=\"hljs-property\"&gt;setDate&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2012&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n    b.&lt;span class=\"hljs-property\"&gt;setTime&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;);\n    b.&lt;span class=\"hljs-property\"&gt;show&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["用C++编写相关程序", ["设计三个类Time、Date、Birthtime，", "其中，Time类能够记录setTime(…)和显示时分show()；", "Date类能够记录setDate(…)和显示年月日show()；", "类Birthtime派生自Time和Date，并增加一个数据成员Childname用于表示小孩的名字,自行设计合理的成员函数。", "\n", "同时设计主程序显示一个小孩的出生时间和名字。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码不全吧&amp;#xff1f;id怎么来的&amp;#xff0c;和用户输入的num有什么联系&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python程序设计函数的调用", ["这是我的程序运行后的样子  暂时没有问题", "\n", "这是为调用search函数后的样子 也没有问题", "\n", "然后我想删除一条数据里的内容却显示没有这个会员信息", "\n", "这是我delete代码", "\n", "\n", "这是我主程序的二级菜单", "大家能不能帮我看看  为什么出现这种问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你在主程序169-173行已经定义了一个QApplication对象并运行app.exec_()进入了事件循环。&lt;br /&gt;当你点击login中register按钮是&amp;#xff0c;register_progress.Run.run函数中又定义了一个新的app并运行app.exec_()。其实这里app是多余的&amp;#xff0c;因为app和事件循环已经在之前的主程序里已经有了&amp;#xff0c;此处应删除。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pyqt5:QCoreApplication::exec: The event loop is already running", ["现在有一个注册登录的程序：", "主程序：", "\n", "# -*- coding: utf-", "8", " -*-\n\n# Form implementation generated from reading ui file 'D:\\Desktop\\login.ui'\n#\n# Created by: PyQt5 UI code generator ", "5.15", ".", "4", "\n#\n# WARNING: Any manual changes made ", "to", " this file will be lost ", "when", " pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\nimport sys\nfrom PyQt5.QtWidgets import QApplication\nimport register_progress\n\n", "class", " login(QtWidgets.QMainWindow):\n    def ", "__init__(", "self", ")", ":\n        ", "QtWidgets", ".", "QMainWindow", ".", "__init__", "(", "self)\n        self.setup", "Ui(", "self", ")", "\n        self.retranslate", "Ui(", "self", ")", "\n\n    def setup", "Ui(", "self", ", MainWindow)", ":\n        ", "MainWindow", ".", "set", "ObjectName(", "\"MainWindow\"", ")", "\n        ", "MainWindow", ".", "resize(", "800", ", ", "295", ")\n        self.centralwidget = QtWidgets.", "QWidget(MainWindow)", "\n        self.centralwidget.set", "ObjectName(", "\"centralwidget\"", ")", "\n        self.tabWidget = QtWidgets.", "QTabWidget(", "self", ".", "centralwidget", ")", "\n        self.tabWidget.set", "Geometry(QtCore.QRect(0, 0, 791, 271)", ")\n        self.tabWidget.set", "ObjectName(", "\"tabWidget\"", ")", "\n        self.tab = QtWidgets.", "QWidget()", "\n        self.tab.set", "ObjectName(", "\"tab\"", ")", "\n        self.label_username = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_username.set", "Geometry(QtCore.QRect(10, 40, 51, 16)", ")\n        self.label_username.set", "ObjectName(", "\"label_username\"", ")", "\n        self.label_password = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_password.set", "Geometry(QtCore.QRect(10, 80, 61, 16)", ")\n        self.label_password.set", "ObjectName(", "\"label_password\"", ")", "\n        self.label_phone = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_phone.set", "Geometry(QtCore.QRect(10, 120, 51, 16)", ")\n        self.label_phone.set", "ObjectName(", "\"label_phone\"", ")", "\n        self.label_Email = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_Email.set", "Geometry(QtCore.QRect(10, 150, 31, 16)", ")\n        self.label_Email.set", "ObjectName(", "\"label_Email\"", ")", "\n        self.label_root_password = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_root_password.set", "Geometry(QtCore.QRect(10, 210, 61, 21)", ")\n        self.label_root_password.set", "ObjectName(", "\"label_root_password\"", ")", "\n\n        self.lineEdit_username = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_username.set", "Geometry(QtCore.QRect(150, 40, 113, 21)", ")\n        self.lineEdit_username.set", "ObjectName(", "\"lineEdit_username\"", ")", "\n        self.label_W_Q = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_W_Q.set", "Geometry(QtCore.QRect(10, 180, 81, 16)", ")\n        self.label_W_Q.set", "ObjectName(", "\"label_W_Q\"", ")", "\n        self.lineEdit_password = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_password.set", "Geometry(QtCore.QRect(150, 80, 113, 21)", ")\n        self.lineEdit_password.set", "ObjectName(", "\"lineEdit_password\"", ")", "\n        self.lineEdit_Email = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_Email.set", "Geometry(QtCore.QRect(150, 150, 113, 21)", ")\n        self.lineEdit_Email.set", "ObjectName(", "\"lineEdit_Email\"", ")", "\n        self.lineEdit_phone = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_phone.set", "Geometry(QtCore.QRect(150, 120, 113, 21)", ")\n        self.lineEdit_phone.set", "ObjectName(", "\"lineEdit_phone\"", ")", "\n        self.lineEdit_root_password = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_root_password.set", "Geometry(QtCore.QRect(150, 220, 113, 21)", ")\n        self.lineEdit_root_password.set", "ObjectName(", "\"lineEdit_root_password\"", ")", "\n        self.lineEdit_W_Q = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_W_Q.set", "Geometry(QtCore.QRect(150, 180, 113, 21)", ")\n        self.lineEdit_W_Q.set", "ObjectName(", "\"lineEdit_W_Q\"", ")", "\n\n        self.label_name = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_name.set", "Geometry(QtCore.QRect(300, 50, 31, 16)", ")\n        self.label_name.set", "ObjectName(", "\"label_name\"", ")", "\n        self.lineEdit_name = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_name.set", "Geometry(QtCore.QRect(350, 50, 113, 21)", ")\n        self.lineEdit_name.set", "ObjectName(", "\"lineEdit_name\"", ")", "\n        self.label_signature = QtWidgets.", "QLabel(", "self", ".", "tab", ")", "\n        self.label_signature.set", "Geometry(QtCore.QRect(300, 90, 72, 15)", ")\n        self.label_signature.set", "ObjectName(", "\"label_signature\"", ")", "\n        self.lineEdit_signature = QtWidgets.", "QLineEdit(", "self", ".", "tab", ")", "\n        self.lineEdit_signature.set", "Geometry(QtCore.QRect(300, 120, 341, 121)", ")\n        self.lineEdit_signature.set", "ObjectName(", "\"lineEdit_signature\"", ")", "\n        self.pushButton_register = QtWidgets.", "QPushButton(", "self", ".", "tab", ")", "\n        self.pushButton_register.set", "Geometry(QtCore.QRect(670, 100, 93, 28)", ")\n        self.pushButton_register.set", "ObjectName(", "\"pushButton_register\"", ")", "\n        self.tabWidget.add", "Tab(", "self", ".", "tab", ", ", "\"\"", ")", "\n        self.tab_2 = QtWidgets.", "QWidget()", "\n        self.tab_2.set", "ObjectName(", "\"tab_2\"", ")", "\n        self.label_user_name = QtWidgets.", "QLabel(", "self", ".", "tab_2", ")", "\n        self.label_user_name.set", "Geometry(QtCore.QRect(340, 20, 51, 16)", ")\n        self.label_user_name.set", "ObjectName(", "\"label_user_name\"", ")", "\n        self.lineEdit_9 = QtWidgets.", "QLineEdit(", "self", ".", "tab_2", ")", "\n        self.lineEdit_9.set", "Geometry(QtCore.QRect(310, 60, 113, 21)", ")\n        self.lineEdit_9.set", "ObjectName(", "\"lineEdit_9\"", ")", "\n        self.label_password_2 = QtWidgets.", "QLabel(", "self", ".", "tab_2", ")", "\n        self.label_password_2.set", "Geometry(QtCore.QRect(350, 100, 31, 16)", ")\n        self.label_password_2.set", "ObjectName(", "\"label_password_2\"", ")", "\n        self.lineEdit_10 = QtWidgets.", "QLineEdit(", "self", ".", "tab_2", ")", "\n        self.lineEdit_10.set", "Geometry(QtCore.QRect(310, 130, 113, 21)", ")\n        self.lineEdit_10.set", "ObjectName(", "\"lineEdit_10\"", ")", "\n        self.pushButton_login = QtWidgets.", "QPushButton(", "self", ".", "tab_2", ")", "\n        self.pushButton_login.set", "Geometry(QtCore.QRect(320, 190, 93, 28)", ")\n        self.pushButton_login.set", "ObjectName(", "\"pushButton_login\"", ")", "\n        self.tabWidget.add", "Tab(", "self", ".", "tab_2", ", ", "\"\"", ")", "\n        ", "MainWindow", ".", "set", "CentralWidget(", "self", ".", "centralwidget", ")", "\n        self.statusbar = QtWidgets.", "QStatusBar(MainWindow)", "\n        self.statusbar.set", "ObjectName(", "\"statusbar\"", ")", "\n        ", "MainWindow", ".", "set", "StatusBar(", "self", ".", "statusbar", ")", "\n\n        self.retranslate", "Ui(MainWindow)", "\n        self.tabWidget.set", "CurrentIndex(0)", "\n        ", "QtCore", ".", "QMetaObject", ".", "connect", "SlotsByName(MainWindow)", "\n\n    def retranslate", "Ui(", "self", ", MainWindow)", ":\n        _translate = ", "QtCore", ".", "QCoreApplication", ".", "translate\n        ", "MainWindow", ".", "set", "WindowTitle(", "_translate", "(", "\"MainWindow\"", ", ", "\"MainWindow\"", ")", ")\n        self.label_username.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"用户名\"", ")", ")\n        self.label_password.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"用户密码\"", ")", ")\n        self.label_phone.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"手机号\"", ")", ")\n        self.label_Email.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"邮箱\"", ")", ")\n        self.label_root_password.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"管理密码\"", ")", ")\n        self.label_W_Q.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"weixin/QQ\"", ")", ")\n        self.label_name.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"昵称\"", ")", ")\n        self.label_signature.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"个性签名\"", ")", ")\n        self.pushButton_register.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"注册\"", ")", ")\n        self.tabWidget.set", "TabText(", "self", ".", "tabWidget", ".", "indexOf", "(", "self", ".", "tab", ")", ", ", "_translate(", "\"MainWindow\"", ", ", "\"注册\"", ")", ")\n        self.label_user_name.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"用户名\"", ")", ")\n        self.label_password_2.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"密码\"", ")", ")\n        self.pushButton_login.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"登录\"", ")", ")\n        self.tabWidget.set", "TabText(", "self", ".", "tabWidget", ".", "indexOf", "(", "self", ".", "tab_2", ")", ", ", "_translate(", "\"MainWindow\"", ", ", "\"登录\"", ")", ")\n\n", "class", " register", "_progress(QtWidgets.QMainWindow)", ":\n    def ", "__init__(", "self", ")", ":\n        ", "QtWidgets", ".", "QMainWindow", ".", "__init__", "(", "self)\n        self.setup", "Ui(", "self", ")", "\n        self.retranslate", "Ui(", "self", ")", "\n\n    def setup", "Ui(", "self", ", MainWindow)", ":\n        ", "MainWindow", ".", "set", "ObjectName(", "\"MainWindow\"", ")", "\n        ", "MainWindow", ".", "resize(", "748", ", ", "104", ")\n        self.centralwidget = QtWidgets.", "QWidget(MainWindow)", "\n        self.centralwidget.set", "ObjectName(", "\"centralwidget\"", ")", "\n        self.progressBar = QtWidgets.", "QProgressBar(", "self", ".", "centralwidget", ")", "\n        self.progressBar.set", "Geometry(QtCore.QRect(10, 25, 721, 23)", ")\n        self.progressBar.set", "Property(", "\"value\"", ", 24)", "\n        self.progressBar.set", "ObjectName(", "\"progressBar\"", ")", "\n        self.label = QtWidgets.", "QLabel(", "self", ".", "centralwidget", ")", "\n        self.label.set", "Geometry(QtCore.QRect(10, 70, 711, 20)", ")\n        self.label.set", "ObjectName(", "\"label\"", ")", "\n        ", "MainWindow", ".", "set", "CentralWidget(", "self", ".", "centralwidget", ")", "\n\n        self.retranslate", "Ui(MainWindow)", "\n        ", "QtCore", ".", "QMetaObject", ".", "connect", "SlotsByName(MainWindow)", "\n\n    def retranslate", "Ui(", "self", ", MainWindow)", ":\n        _translate = ", "QtCore", ".", "QCoreApplication", ".", "translate\n        ", "MainWindow", ".", "set", "WindowTitle(", "_translate", "(", "\"MainWindow\"", ", ", "\"MainWindow\"", ")", ")\n        self.label.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "\"正在进行的操作\"", ")", ")\ndef register", "()", ":\n    global ex\n    import register_progress\n    username = ex.lineEdit_username.text", "()", "\n    password = ex.lineEdit_password.text", "()", "\n    Email = ex.lineEdit_Email.text", "()", "\n    phone = ex.lineEdit_phone.text", "()", "\n    root_password = ex.lineEdit_root_password.text", "()", "\n    W_Q = ex.lineEdit_W_Q.text", "()", "\n    R=register_progress.", "Run()", "\n    ", "R", ".", "run(", "10", ",'ss')\napp = ", "QApplication(", "sys", ".", "argv", ")", "\nex = login", "()", "\nex.pushButton_register.clicked.connect(register)\nex.show", "()", "\nsys.exit(app.exec", "_()", ")\n\n\n", "\n", "进度条模块", "\n", "from PyQt5 import QtCore, QtGui, QtWidgets\nimport sys\nfrom PyQt5.QtWidgets import QApplication\n\n", "class", " register", "_progress(QtWidgets.QMainWindow)", ":\n    def ", "__init__(", "self", ",", "operation", ")", ":\n        ", "QtWidgets", ".", "QMainWindow", ".", "__init__", "(", "self)\n        self.setup", "Ui(", "self", ",", "operation", ")", "\n        self.retranslate", "Ui(", "self", ",", "operation", ")", "\n    def setup", "Ui(", "self", ", MainWindow,", "operation", ")", ":\n        ", "MainWindow", ".", "set", "ObjectName(", "\"MainWindow\"", ")", "\n        ", "MainWindow", ".", "resize(", "748", ", ", "104", ")\n        self.centralwidget = QtWidgets.", "QWidget(MainWindow)", "\n        self.centralwidget.set", "ObjectName(", "\"centralwidget\"", ")", "\n        self.progressBar = QtWidgets.", "QProgressBar(", "self", ".", "centralwidget", ")", "\n        self.progressBar.set", "Geometry(QtCore.QRect(10, 25, 721, 23)", ")\n        self.progressBar.set", "Property(", "\"value\"", ", 24)", "\n        self.progressBar.set", "ObjectName(", "\"progressBar\"", ")", "\n        self.label = QtWidgets.", "QLabel(", "self", ".", "centralwidget", ")", "\n        self.label.set", "Geometry(QtCore.QRect(10, 70, 711, 20)", ")\n        self.label.set", "ObjectName(", "\"label\"", ")", "\n        ", "MainWindow", ".", "set", "CentralWidget(", "self", ".", "centralwidget", ")", "\n\n        self.retranslate", "Ui(MainWindow,", "operation", ")", "\n        ", "QtCore", ".", "QMetaObject", ".", "connect", "SlotsByName(MainWindow)", "\n\n    def retranslate", "Ui(", "self", ", MainWindow,", "operation", ")", ":\n        _translate = ", "QtCore", ".", "QCoreApplication", ".", "translate\n        ", "MainWindow", ".", "set", "WindowTitle(", "_translate", "(", "\"MainWindow\"", ", ", "\"MainWindow\"", ")", ")\n        self.label.set", "Text(", "_translate", "(", "\"MainWindow\"", ", ", "operation", ")", ")\n", "class", " ", "Run()", ":\n    def ", "__init__(", "self", ")", ":\n        pass\n    def run(self,num,operation):\n        app = ", "QApplication(", "sys", ".", "argv", ")", "\n        ex = register", "_progress(", "operation", ")", "\n        ex.progressBar.set", "Range(0, 100)", "\n        ex.progressBar.set", "Value(", "num", ")", "\n        ex.show", "()", "\n        sys.exit(app.exec", "_()", ")\n\n\n\n\n", "\n", "想达到的效果是主程序执行", "\n", "import register_progress\n", "R", "=register_progress.Run()\nR.", "run", "(10,", "'ss'", ")\n\n", "\n", "结果为", "\n", "可是现在的结果为", "QCoreApplication::exec: The event loop is already running", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getRoot&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;a, b, c&lt;/span&gt;):\n    x &amp;#61; b ** &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * a * c\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * b &amp;#43; x ** &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;) / (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * a), (-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * b - x ** &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;) / (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * a)\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * b &amp;#43; x ** &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;) / (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * a), (-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * b &amp;#43; x ** &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;) / (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * a)\n        \n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;():\n    a, b, c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;))\n    res &amp;#61; getRoot(a, b, c)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; res:\n        x1, x2 &amp;#61; res\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;x1&amp;#61;%.2f,x2&amp;#61;%.2f&amp;#39;&lt;/span&gt; % (x1, x2))\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;no roots&amp;#39;&lt;/span&gt;)\nmain()\n&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;--result\n&amp;gt;&amp;gt;&amp;gt;1,2,1\nx1&amp;#61;-1.00,x2&amp;#61;-1.00\n&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["求解 python函数的一道程序片段补充题", ["问题描述：", "编写求根函数：对一元二次方程的三个系数（假设a不为零），计算并返回方程的根；如果方程没有根，返回None；如果有实根，返回包含两个根的元组。主程序的代码已给出。", "样例输入：", "1，2，1", "样例输出：", "x1=-1.00，x2=-1.00", "样例说明：", "分别输入a，b，c的值，用逗号间隔", "分别输入两个实根，其中大的根在前，小的根在后，两者之间使用一个逗号间隔，没有空格", "如果没有实根，显示no roots", "上图为主程序的代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你的服务是多示例部署的可以采用分布式锁&amp;#xff0c;具体通过redis或者ZooKeeper或者数据库来实现&amp;#xff0c;可以根据自己的实际情况来。&lt;br /&gt;也可以参考这个博客里面分布式锁的实现 &lt;a href=\"https://blog.csdn.net/m0_67645544/article/details/124768505\" id=\"textarea_1671797404611_1671797584253_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/m0_67645544/article/details/124768505&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["两个不同程序共用一把锁，无法控制？", ["今天在写项目时遇到一个问题，使用springboot的监听器监听数据库的一个字段是否变化，并执行一系列操作。同时主程序运行时也根据这个数据库字段做同样的操作。说是为了防止主程序对数据库操作失败，结果造成的结果是，该操作会执行两次。我想创建一个公共锁，两个程序根据同样的数据拿到一样的锁（锁的类型是string类型，相同数据一样的内容当作锁），这样一个进入，另一个就不会进入，但似乎不支持跨程序锁，有啥方法解决吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;通过降低pynput版本试试。&lt;br /&gt;参考一下这里同样问题的解决办法&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/sj13155158153/article/details/117996613\" id=\"textarea_1656086594233_1656087011313_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/sj13155158153/article/details/117996613&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用Cython转换成pyd后，打包出来的程序运行失败。", ["在用pyinstaller打包一个项目时，先用Cython将主要代码转换成pyd，再新建一个py用于调用pyd，但是打包出来的exe，无法运行。", "转换前一切正常", "\n", "问题相关代码", "\n", "这是主程序AIaimbot.py的内容", "\n", "from", " main ", "import", " *\n", "\n", "文件目录:", "\n", "运行结果及报错内容", "\n", "打包后运行exe出现以下报错", "\n", "File ", "\"C:\\Users\\NicekillersCN\\Desktop\\project\\dist\\AIaimbot\\pynput\\_util\\__init__.py\"", ", line 76, in backend\n    raise ImportError('this platform is", " not ", "supported: {}'.format(\nImportError\n[1660] Failed to", " execute ", "script 'AIaimbot' due to unhandled exception!\n", "\n", "我的解答思路和尝试过的方法", "\n", "我开始怀疑是模块没加载全，所以没加密源码打包一次后，再将没加密打包的依赖直接添加到加密打包里，还是出错.", "\n", "我想要达到的结果", "\n", "程序正常运行"]], "Tag": "程序设计"}
{"Answer": "可以考虑使用线程池\r\nhttp://blog.sina.com.cn/s/blog_418394a90100mw9t.html", "Konwledge_Point": "主程序", "Question": ["关于MFC多线程并发程序的子线程的问题", ["MFC多线程并发的子线程如果出现错误，希望将这个子线程重新执行，但是主程序不重复执行，怎么做？"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;iostream&gt;\r\nclass Score \r\n{\r\npublic :\r\n    void setscore(float score)\r\n    {\r\n        //if (score &lt; 0)\r\n        //    return;\r\n        //if (score &gt; 100)\r\n        //    return;\r\n        english_score = score;\r\n    }\r\n    void printscore()\r\n    {\r\n        std::cout &lt;&lt; \"english score:\" &lt;&lt; english_score &lt;&lt; std::endl;\r\n    }\r\nprivate:\r\n    float english_score;\r\n\r\n};\r\nint main()\r\n{\r\n    Score score1;\r\n    Score score2;\r\n    score1.setscore(85.5);\r\n    score2.setscore(93.5);\r\n\r\n    score1.printscore();\r\n    score2.printscore();\r\n    return 0;\r\n}\r\n```", "Konwledge_Point": "主程序", "Question": ["求助c++程序！谢谢谢谢", ["定义一个类 score, 它含有私有数据成员 english - score (英语分数 )、公有成员函", "\n\n", "数 setscore ( ) 和 printscore ( ) ,其中 setscore( )用来设置 english - score 的值, print-score( ) 用", "\n\n", "来输出 english - score 的值。在主程序中定义类 score 的两个对象 stu1 和 stu2, 其英语成", "\n\n", "绩分别为 85 .5 和 93 .5,输出这两个分数，请编写程序。"]], "Tag": "程序设计"}
{"Answer": "你这个题目设计是用done这个词做结尾，如果不想这样，就得做修改，改规则，如果是输入一行以回车当结尾，这样做：\r\n\r\n```\r\n#include &lt;iostream&gt;\r\n#include &lt;cstring&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\n\r\nvoid p5_8();\r\nvoid p5_9();\r\n\r\nint main()\r\n{\r\n\tint num;\r\n\tcout &lt;&lt; \"code to use: \";\r\n\tcin &gt;&gt; num;\r\n\twhile (num != 0)\r\n\t{\r\n\t\tif (num == 1)\r\n\t\t\tp5_8();\r\n\t\telse if (num == 2)\r\n\t\t\tp5_9();\r\n\t\tcout &lt;&lt; \"code to use: \";\r\n\t\tcin &gt;&gt; num;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nvoid p5_8()\r\n{\r\n\tchar word[100];\r\n\tint count = 0;\r\n\tcout &lt;&lt; \"Enter words (to stop, type the word done):\" &lt;&lt; endl;\r\n\tcin &gt;&gt; word;\r\n\r\n\twhile (strcmp(word, \"done\") != 0)\r\n\t{\r\n\t\tif (bool(cin &gt;&gt; word) == true)\r\n\t\t\tcount++;\r\n\t}\r\n\r\n\tcout &lt;&lt; endl &lt;&lt; \"You entered a total of \" &lt;&lt; count &lt;&lt; \" words.\" &lt;&lt; endl;\r\n\tcin.clear();\r\n\tcin.sync();\r\n}\r\n\r\nvoid p5_9()\r\n{\r\n\r\n\tstring word;\r\n\tint count = 0;\r\n\tcout &lt;&lt; \"Enter words (to stop, type the word done):\" &lt;&lt; endl;\r\n\tcin &gt;&gt; word;\r\n\r\n\twhile (word != \"done\")\r\n\t{\r\n\t\tif (bool(cin &gt;&gt; word) == true)\r\n\t\t\tcount++;\r\n\t}\r\n\r\n\tcout &lt;&lt; \"You entered a total of \" &lt;&lt; count &lt;&lt; \" words.\" &lt;&lt; endl;\r\n\tcin.clear();\r\n\tcin.sync();\r\n}\r\n```", "Konwledge_Point": "主程序", "Question": ["cin缓冲区清理,主体程序被强制结束循环", ["做练习题，每一道小题用函数写，并在主题程序中用循环结构调用。但是两个练习会要求输入字符 并多于需求。", "\ncin缓冲区任然存在遗留的字符开头就是空字符，直接导致主程序结束，或者陷入死循环。", "\n\n", "#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\nint p5_8();\nint p5_9();\n\nint main()\n{\n    int num;\n    cout << \"code to use: \";\n    cin >> num;\n    while (num > 0)\n    {\n        if (num == 1)\n            p5_8();\n        else if (num == 2)\n            p5_9();\n        cout << \"code to use: \";\n        //cin.get();\n        cin >> num;\n    }\n    return 0;\n}\n\nint p5_8()\n{\n    char word[100];\n    int count = 0;\n    cout << \"Enter words (to stop, type the word done):\" << endl;\n    cin >> word;\n\n    while (strcmp(word, \"done\") != 0)\n    {\n        if (bool(cin >> word) == true)\n            count++;\n    }\n\n    cout << endl << \"You entered a total of \" << count << \" words.\" << endl;\n    //cin.sync();\n    return 0;\n}\n\nint p5_9()\n{\n\n    string word;\n    int count = 0;\n    cout << \"Enter words (to stop, type the word done):\" << endl;\n    cin >> word;\n\n    while (word != \"done\")\n    {\n        if (bool(cin >> word) == true)\n            count++;\n    }\n\n    cout << \"You entered a total of \" << count << \" words.\" << endl;\n    //cin.sync();\n    return 0;\n}\n", "\n\n", "\n\n", "尝试使用cin.sync()清理也没有效果。", "\n请问如何解决问题，使主程序能够正常循环"]], "Tag": "程序设计"}
{"Answer": "项目没问题，运行以后以前的功能数据可以取出来，但我新添加的没有在LOGCAT里面没有数据被取出来", "Konwledge_Point": "主程序", "Question": ["求解！android数据传输的问题", ["我的程序已经在真机上连通，数据也都成功从服务器读取，为什么我把程序移植到主程序中以后数据就无法读取了？"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;iostream&gt;\r\nbool isOdd(int x)\r\n{\r\n    return x % 2 == 1;\r\n}\r\nint main()\r\n{\r\n    int x;\r\n\t\tcin &gt;&gt; x;\r\n\t\tcout &lt;&lt; isOdd(x) ? \"奇数\" : \"偶数\";\r\n}\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["C++实现判断一个数是偶数还是奇数", ["从键盘输入一个数", "\n用一个函数 bool isOdd 判断它是否是奇数", "\n在主程序中输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;你需要吧下面代码中if语句中的array替换成Array类中的数组名&amp;#xff0c;或者你把Array.h贴出来&amp;#xff0c;我看看里面的数组名是什么&amp;#xff0c;给你替换一下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;template &amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;Type&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-symbol\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-symbol\"&gt;Type&lt;/span&gt;&amp;gt;::&lt;span class=\"hljs-symbol\"&gt;Count&lt;/span&gt;(&lt;span class=\"hljs-symbol\"&gt;Type&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;x&lt;/span&gt;) {\n    &lt;span class=\"hljs-comment\"&gt;//***********33333**************&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; Length(); i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt;&amp;#61; x)  &lt;span class=\"hljs-comment\"&gt;//这里的array 替换成Array类中的数组名&lt;/span&gt;\n        {\n            cnt&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; cnt;\n    &lt;span class=\"hljs-comment\"&gt;//***********666666**************&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C++考试，请教我一下，", ["使用VC6打开考生文件夹proj3下的工程proj3，其中包含主程序文件main.cpp和用户定义的头文件Array.h整个程序包含有Array类的定义和main主函数的定义。请把主程序文件中的Array类的成员函数 Count(Type x)的定义补充完整，补充的内容填写在\"//", "333", "\"与\"//", "666", "\"两行之间。经修改后运行程序，得到的输出为:", "8553", "注意:只允许在“//", "333", "*和\"//", "666", "\"两行之间填写内容，不允许修改其他任何地方的内容。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;iostream&amp;gt;\nusing namespace std;\nclass Cat\n{\nprivate:\n\tint age;\n\tstatic int HowManyCats;\npublic:\n\tCat(int a){age &amp;#61; a;HowManyCats&amp;#43;&amp;#43;;}\n\t~Cat(){HowManyCats--;cout &amp;lt;&amp;lt; &amp;#34;destructing of the cat!&amp;#34; &amp;lt;&amp;lt; endl;}\n\tstatic int GetHowMany(){return HowManyCats;}\n};\n\nint Cat::HowManyCats &amp;#61; 0;\nvoid creating(Cat* arr[],int n)\n{\n\tint i &amp;#61; 0;\n\tfor (; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t{\n\t\tarr[i] &amp;#61; new Cat(i&amp;#43;1);\n\t}\n}\n//减去m个猫\nvoid outcat(Cat* arr[],int n,int m)\n{\n\tint i ;\n\tfor (i &amp;#61; 0; i &amp;lt; m;i&amp;#43;&amp;#43;)\n\t{\n\t\tdelete arr[n -1-i];\n\t\tarr[n -1-i] &amp;#61; 0;\n\t}\n}\nint main()\n{\n\tCat* arr[5];\n\tcout &amp;lt;&amp;lt; &amp;#34;before the function,the number of the cat is:&amp;#34; &amp;lt;&amp;lt; Cat::GetHowMany() &amp;lt;&amp;lt; endl;\n\tcout &amp;lt;&amp;lt; &amp;#34;before the Cat array is created,the number of the cat is:&amp;#34; &amp;lt;&amp;lt; Cat::GetHowMany() &amp;lt;&amp;lt; endl;\n\tcreating(arr,5);\n\tcout &amp;lt;&amp;lt; &amp;#34;after the Cat array is created,the number of the cat is:&amp;#34;&amp;lt;&amp;lt; Cat::GetHowMany() &amp;lt;&amp;lt; endl;\n\toutcat(arr,5,5);\n\tcout &amp;lt;&amp;lt; &amp;#34;after the function,the number of the cat is:&amp;#34; &amp;lt;&amp;lt; Cat::GetHowMany() &amp;lt;&amp;lt; endl;\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用c++声明一个Cat类", ["声明一个Cat类,使其至少满足以下要求：", "\n\n", "（1）拥有静态数据成员HowManyCats，记录Cat的个体数目。", "\n\n", "（2）声明静态成员函数GetHowMany()，存取HowManyCats。", "\n\n", "（3）能够以年龄作为构造函数参数，建立合理的构造函数", "\n\n", "（4）能够合理实现程序中猫数量的增减。", "\n\n", "（5）设计一个名为creating（）的函数，该函数的主要功能为创建一个含有5个指向猫对象的指针数组，用于动态创建5个猫对象，猫的年龄分别为1，2，3，4，5。并显示数组创建前后情况下猫的数量。函数参数自拟。", "\n\n", "（6）能够合理创建主程序，该主程序能够在调用函数creating()前后显示猫的数量，在体会静态数据成员和静态成员函数的用法。", "\n\n", "【输入形式】该程序无输入，请仔细观察输出", "\n\n", "【输出形式】输出结果如下图；", "\n\n", "before the function,the number of the cat is:0", "\n\n", "before the Cat array is created,the number of the cat is:0", "\n\n", "after the Cat array is created,the number of the cat is:5", "\n\n", "destructing of the cat!", "\n\n", "destructing of the cat!", "\n\n", "destructing of the cat!", "\n\n", "destructing of the cat!", "\n\n", "destructing of the cat!", "\n\n", "after the function,the number of the cat is:0"]], "Tag": "程序设计"}
{"Answer": "参考：http://blog.csdn.net/xiangyong2008/article/details/5331681", "Konwledge_Point": "主程序", "Question": ["AsyncTask安卓下载图片下载不了?", ["用了安卓的AsyncTask，但是怎么通知主程序读取图片？为什么图片加载不了了呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;还是可以用new Thread&amp;#xff0c;只不过在run方法中要通过handler传值给主线程&lt;br /&gt; class Mhandler extends Handler {&lt;!-- --&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-comment\"&gt;// 通过复写handlerMessage() 从而确定更新UI的操作&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;handleMessage&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Message msg&lt;/span&gt;) {\n        &lt;span class=\"hljs-comment\"&gt;// 根据不同线程发送过来的消息&amp;#xff0c;执行不同的UI操作&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 根据 Message对象的what属性 标识不同的消息&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (msg.&lt;span class=\"hljs-property\"&gt;what&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                mTextView.&lt;span class=\"hljs-title function_\"&gt;setText&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;执行了线程1的UI操作&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                mTextView.&lt;span class=\"hljs-title function_\"&gt;setText&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;执行了线程2的UI操作&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  // 此处用2个工作线程展示&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        new Thread() {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            &lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;Override&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            public void run() {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 这里执行http请求&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                  String result &amp;#61; post(url,data);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                // 通过sendMessage&amp;#xff08;&amp;#xff09;发送&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 // a. 定义要发送的消息&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 Message msg &amp;#61; Message.obtain();&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 msg.what &amp;#61; 2; //消息的标识&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 msg.obj &amp;#61;result; // 消息的存放&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 // b. 通过Handler发送消息到其绑定的消息队列&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                 mHandler.sendMessage(msg);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }.start();&lt;/span&gt;\n &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["安卓POST请求怎么放到线程里？", ["最近写了个获取验证码，为减少代码复用，我把post网络请求放在了一个工具类里面", "，当主程序无需获取服务器的返回数据时，只用new Thread这种线程就行了，", "但是当需要获取返回值时，比如获取用户名，验证码等，用new Thread就不行了", "\n", "请问怎么实现在一个有返回值的post请求方法中开创线程？并且主程序还能调用这个return数据？真是刚入坑，自己实现不了，多谢多谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt; &amp;#61; list(&lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(int,input().&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;()))\navg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;)/len(&lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;)\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;li&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(v-avg) &amp;lt; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(n-avg):\n        n &amp;#61; v\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "主程序", "Question": ["Python练习训练测试", ["自定义一个简单的函数求数值列表中的最接近平均值的数并返回。构造相应的主程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以把判断是否是回文数放入一个函数&amp;#xff0c;判断输入是否正确放入主函数&amp;#xff0c;下面是一个简单的实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;palindromeNumber&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;hui&lt;/span&gt;):\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(hui)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(hui)&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(hui[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]&amp;#43;hui[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&amp;#43;hui[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&amp;#43;hui[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#43;hui[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;这是一个回文数&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; :\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;这不是一个回文数&amp;#34;&lt;/span&gt;)\n\n        \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:\n    hui &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个五位数或用e退出:&amp;#34;&lt;/span&gt;)\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; hui[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;]:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(hui)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            palindromeNumber(hui)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;您的输入有误&amp;#34;&lt;/span&gt;)\n        hui &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个五位数或用e退出:&amp;#34;&lt;/span&gt;)    \n    \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/635913820966198.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["怎么用自定义改编函数判断回文数", ["怎么用自定义函数改编以上程序啊？并且要将input（“请输入一个五位数或用e退出：”）用于主程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;希望可以帮上你,对你有启发&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/739469875666154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;from&lt;/span&gt; selenium import webdriver\n&lt;span class=\"hljs-selector-tag\"&gt;from&lt;/span&gt; lxml import etree\nimport numpy as np\n\n\ndef arr_size(arr, size):\n    s &amp;#61; []\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(arr)) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, size):\n        c &amp;#61; arr[i:i &amp;#43; size]\n        s.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(c)\n    newlist &amp;#61; [x for x in s if x]\n    return newlist\n\n\nbrowser &amp;#61; webdriver.&lt;span class=\"hljs-built_in\"&gt;Chrome&lt;/span&gt;()  # 这里改成了有界面模式&amp;#xff0c;方便调试代码\nurl &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;http://www.cwl.gov.cn/ygkj/wqkjgg/&amp;#39;&lt;/span&gt;\nbrowser.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(url)\ndata &amp;#61; browser.page_source\nbrowser.&lt;span class=\"hljs-built_in\"&gt;quit&lt;/span&gt;()\nhtml &amp;#61; etree.&lt;span class=\"hljs-built_in\"&gt;HTML&lt;/span&gt;(data, parser&amp;#61;etree.&lt;span class=\"hljs-built_in\"&gt;HTMLParser&lt;/span&gt;(encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;))\nqishu &amp;#61; html.&lt;span class=\"hljs-built_in\"&gt;xpath&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;/html/body/div[2]/div/div/div[2]/div/div/div[2]/table/tbody/tr/td[1]/text()&amp;#39;&lt;/span&gt;)\ncode &amp;#61; html.&lt;span class=\"hljs-built_in\"&gt;xpath&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;/html/body/div[2]/div/div/div[2]/div/div/div[2]/table/tbody/tr/td[3]/div/div/text()&amp;#39;&lt;/span&gt;)\ncode &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;join&lt;/span&gt;(i) for i in &lt;span class=\"hljs-built_in\"&gt;arr_size&lt;/span&gt;(code, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)]\nresult &amp;#61; &lt;span class=\"hljs-built_in\"&gt;dict&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(qishu, code))\nfor key, value in result.&lt;span class=\"hljs-built_in\"&gt;items&lt;/span&gt;():\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;期数:{},中奖号码:{}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(key, value))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["如何使用这个python程序", ["代码如下", "\n", "\n", "import", " json\n", "import", " requests\n", "from", " scrapy.crawler ", "import", " logger\n\n\n", "def", " ", "get_rbballData", "(", "self, dayStart, dayEnd", "):\n    ", "\"\"\"\n    爬虫主程序\n    \"\"\"", "\n    pageNo = ", "1", "\n    session = self._get_session()\n\n    ", "while", " pageNo <= self.pageNum:\n      ", "# 循环抓取数据", "\n      url = self._get_url(dayStart, dayEnd, pageNo)\n      res_text = self._send_request(session, url)\n      ", "if", " res_text != ", "None", ":\n        ret = self._parseText_toData(res_text)\n\n      pageNo = pageNo + ", "1", "\n\n    count = self._save_rbballData()\n    ", "return", " count\n\n", "def", " ", "_get_url", "(", "self, dayStart, dayEnd, pageNo", "):\n    ", "\"\"\"\n    构造抓取的url\n    \"\"\"", "\n    url = ", "\"http://www.cwl.gov.cn/cwl_admin/kjxx/findDrawNotice?name=ssq&issueCount=&issueStart=&issueEnd=&dayStart={}&dayEnd={}&pageNo={}\"", "\n    url = url.", "format", "(dayStart,dayEnd,pageNo)\n    ", "return", " url\n\n\n", "def", " ", "_get_session", "(", "self", "):\n    ", "\"\"\"\n    构造session\n    \"\"\"", "\n    headers = {", "\"Accept\"", ":", "\"application/json, text/javascript, */*; q=0.01\"", ",\n      ", "\"User-Agent\"", ":", "\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36\"", ",\n      ", "\"X-Requested-With\"", ":", "\"XMLHttpRequest\"", ",\n      ", "\"Accept-Encoding\"", ":", "\"gzip, deflate\"", ",\n      ", "\"Referer\"", ": ", "\"http://www.cwl.gov.cn/kjxx/ssq/kjgg/\"", ",\n      ", "\"Accept-Language\"", ":", "\"zh-CN,zh;q=0.9\"", "}\n    session = requests.Session()\n    session.headers.update(headers)\n    ", "return", " session\n\n\n", "def", " ", "_send_request", "(", "self, session, url", "):\n    ", "\"\"\"\n    发送请求，并返回响应文本，\n    return:请求成功返回文本，请求失败，返回None\n    \"\"\"", "\n    res = session.get(url)\n    ", "if", " res.status_code != ", "200", ":\n      res = ", "None", "\n      logger.info(", "\"请求url失败，url=[{}]\"", ".", "format", "(url))\n    ", "return", " res.text\n\n\n", "def", " ", "_parseText_toData", "(", "self, text", "):\n    ", "\"\"\"\n    获取一页双色球开奖结果，\n    return:获取成功返回，未成功返回-1\n    \"\"\"", "\n    ", "try", ":\n      text = json.loads(text)\n      ", "if", " text[", "\"state\"", "] != ", "0", ":\n        ", "# 查询失败", "\n        logger.info(", "\"查询返回失败，返回结果：[{}]\"", ".", "format", "(text))\n        text = ", "None", "\n        ", "return", " -", "1", "\n    ", "except", " Exception ", "as", " e:\n      logger.info(", "\"文本转换json失败，文本：【{}】\"", ".", "format", "(text))\n      logger.info(", "\"异常信息：{}\"", ".", "format", "(", "str", "(e)))\n      text = ", "None", "\n      ", "return", "  -", "1", "\n    ", "#text[\"result\"]本身是个dict,需将其逐个写入rbballData", "\n    ", "for", " t ", "in", " text[", "\"result\"", "]:\n      self.rbballData.append(t)\n\n    self.pageNum = text[", "\"pageCount\"", "]\n    ", "return", " ", "0", "\n\n\n", "def", " ", "_save_rbballData", "(", "self", "):\n    ", "\"\"\"\n    将抓取到的数据保存到rbball_data.txt文件中\n    reture: 返回双色球总期数\n    \"\"\"", "\n    self.rbballData.reverse()\n    ", "print", "(self.rbballData[", "0", "][", "\"code\"", "])\n    count = ", "len", "(self.rbballData)\n    ", "if", " count > ", "0", ":\n      ", "with", " ", "open", "(", "\"rbball_data.txt\"", ", ", "'w'", ", encoding=", "\"utf-8\"", ") ", "as", " f:\n        f.write(", "str", "(self.rbballData))\n    ", "else", ":\n      logger.info(", "\"未获取到双色球数据！！！\"", ")\n    ", "return", " count\n\n", "\n", "我想使用这个代码", "\n", "我写了个这个", "\n", "\n", "if", " __name__==", "'__main__'", ":\n    get_rbballData(", "self", ", ", "\"2021-01-01\"", ", ", "\"2021-01-31\"", ")\n", "\n", "但是报错", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种情况打包时打包成debug模式,在控制台查看程序报错或不能正常启动原因,之后返回打包配置文件修改&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["PYQT ThreadPoolExecutor 程序打包", ["PYQT ThreadPoolExecutor 程序打包", "在pychram中能正常打开，打包后能正常进入UI界面，但无法运行主程序，系统也没有报错。单独测试过控件能正常触发。", "\n", "import os\nimport sys\nimport threading\n", "from", " concurrent", ".futures", " import ThreadPoolExecutor, wait, ALL_COMPLETED\n", "from", " ", "time", " import sleep\nimport pandas as pd\nimport win32api\nimport win32con\n", "from", " PyQt5", ".QtCore", " import QSettings, QThread\n", "from", " PyQt5", ".QtWidgets", " import QMainWindow, QApplication\n\n\n", "from", " untitled import Ui_MainWindow\n\n\nclass Thread_1(QThread):  # 线程", "1", "\n    def ", "__init__", "(self):\n        ", "super", "().", "__init__", "()\n\n    def ", "run", "(self):\n        AccountLogin.", "begin", "()\n\n\nclass ", "CUi_MainWindow", "(QMainWindow, Ui_MainWindow):  # 继承于UI父类\n    def ", "__init__", "(self, parent=None):\n        ", "super", "(CUi_MainWindow, self).", "__init__", "(parent)\n        self.", "setupUi", "(self)\n        self.", "init_login_info", "()\n        self.pushButton.clicked.", "connect", "(self.start)\n        self.pushButton_2.clicked.", "connect", "(self.pause)\n\n    def ", "save", "(self):\n        settings = ", "QSettings", "(", "\"config.ini\"", ", QSettings.IniFormat)\n        settings.", "setValue", "(", "\"excl_path\"", ", self.lineEdit.", "text", "())\n        settings.", "setValue", "(", "\"share_path\"", ", self.lineEdit_2.", "text", "())\n        settings.", "setValue", "(", "\"ld_path\"", ", self.lineEdit_3.", "text", "())\n        settings.", "setValue", "(", "\"thread\"", ", self.lineEdit_4.", "text", "())\n\n\n    def ", "init_login_info", "(self):\n        settings = ", "QSettings", "(", "\"config.ini\"", ", QSettings.IniFormat)\n        ld_path = settings.", "value", "(", "\"ld_path\"", ")\n        share_path = settings.", "value", "(", "\"share_path\"", ")\n        excl_path = settings.", "value", "(", "\"excl_path\"", ")\n        pause = settings.", "value", "(", "\"pause\"", ")\n        thread=settings.", "value", "(", "\"thread\"", ")\n        if ", "str", "(pause) == ", "\"恢复\"", ":\n            self.pushButton_2.", "setText", "(", "\"暂停\"", ")\n        elif ", "str", "(pause) == ", "\"暂停\"", ":\n            settings.", "setValue", "(", "\"pause\"", ", ", "\"恢复\"", ")\n            self.pushButton_2.", "setText", "(", "\"暂停\"", ")\n        self.lineEdit.", "setText", "(excl_path)\n        self.lineEdit_2.", "setText", "(share_path)\n        self.lineEdit_3.", "setText", "(ld_path)\n        self.lineEdit_4.", "setText", "(thread)\n\n\n    def ", "start", "(self):\n        self.", "save", "()\n        self.thread_1 = ", "Thread_1", "()  # 创建线程\n        self.thread_1.", "start", "()  # 开始线程\n\n\n\n    def ", "pause", "(self):\n        settings = ", "QSettings", "(", "\"config.ini\"", ", QSettings.IniFormat)\n        text = self.pushButton_2.", "text", "()\n        if ", "str", "(text) == ", "\"暂停\"", ":\n            self.pushButton_2.", "setText", "(", "\"恢复\"", ")\n            settings.", "setValue", "(", "\"pause\"", ", ", "\"暂停\"", ")\n        elif ", "str", "(text) == ", "\"恢复\"", ":\n            self.pushButton_2.", "setText", "(", "\"暂停\"", ")\n            settings.", "setValue", "(", "\"pause\"", ", ", "\"恢复\"", ")\n\n\nclass Dnconsole:\n    # 请根据自己电脑配置\n    settings = ", "QSettings", "(", "\"config.ini\"", ", QSettings.IniFormat)\n    ld_path = ", "str", "(settings.", "value", "(", "\"ld_path\"", ")).", "replace", "(", "\"\\\\\"", ", ", "\"/\"", ")\n    SharePath = ", "str", "(settings.", "value", "(", "\"share_path\"", ")).", "replace", "(", "\"\\\\\"", ", ", "\"/\"", ")\n    console = ld_path + ", "'/ldconsole.exe '", "\n    ld = ld_path + ", "'/ld.exe '", "\n    share_path = SharePath\n\n    @staticmethod\n    def ", "get_list", "():\n        cmd = os.", "popen", "(Dnconsole.console + ", "'list2'", ")\n        text = cmd.", "read", "()\n        cmd.", "close", "()\n        info = text.", "split", "(", "'\\n'", ")\n        result = ", "list", "()\n        for line in info:\n            if ", "len", "(line) > ", "1", ":\n                dnplayer = line.", "split", "(", "','", ")\n                result.", "append", "(dnplayer)\n        return result\n\n    @staticmethod\n    def ", "invokeapp", "(index: int, package: str):\n        cmd = Dnconsole.console + \\\n              ", "'runapp --index %d --packagename %s'", " % (index, package)\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        ", "print", "(result)\n        return result\n\n    @staticmethod\n    def ", "input_text", "(index: int, text: str):\n        cmd = Dnconsole.console + \\\n              ", "'action --index %d --key call.input --value %s'", " % (index, text)\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        return result\n\n    @staticmethod\n    def ", "launch", "(index: int):\n        cmd = Dnconsole.console + ", "'launch --index '", " + ", "str", "(index)\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        return result\n\n    @staticmethod\n    def ", "quit", "(index: int):\n        cmd = Dnconsole.console + ", "'quit --index '", " + ", "str", "(index)\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        return result\n\n    @staticmethod\n    def ", "install", "(index: int):  # path: str\n        # shutil.", "copy", "(path, Dnconsole.share_path + ", "'/update.apk'", ")\n        ", "sleep", "(", "1", ")\n        Dnconsole.", "dnld", "(index, ", "'pm install /sdcard/Pictures/update.apk'", ")\n\n    # 卸载apk 指定模拟器必须已经启动\n\n    @staticmethod\n    def ", "uninstall", "(index: int, package: str):\n        cmd = Dnconsole.console + \\\n              ", "'uninstallapp --index %d --packagename %s'", " % (index, package)\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        return result\n\n    @staticmethod\n    def ", "dnld", "(index: int, command: str, silence: bool = False):\n        cmd = Dnconsole.ld + ", "'-s %d %s'", " % (index, command)\n        if silence:\n            os.", "system", "(cmd)\n            return ", "''", "\n        process = os.", "popen", "(cmd)\n        result = process.", "read", "()\n        process.", "close", "()\n        return result\n\n\nclass AccountLogin:\n    settings = ", "QSettings", "(", "\"config.ini\"", ", QSettings.IniFormat)\n    lock = threading.", "Lock", "()\n\n    @staticmethod\n    def ", "Window_arrangement", "():\n        cmd = Dnconsole.console + ", "'sortWnd'", "\n        process = os.", "popen", "(cmd)\n        process.", "close", "()\n\n    @staticmethod\n    def ", "doClick", "(bind, x, y):  # 点击坐标\n        AccountLogin.lock.", "acquire", "()\n        cx=x*", "2", "\n        cy=y*", "2", "\n        long_position = win32api.", "MAKELONG", "(cx, cy)  # 模拟鼠标指针 传送到指定坐标\n        win32api.", "SendMessage", "(bind, win32con.WM_LBUTTONDOWN, win32con.MK_LBUTTON, long_position)  # 模拟鼠标按下\n        ", "sleep", "(", "0.1", ")\n        win32api.", "SendMessage", "(bind, win32con.WM_LBUTTONUP, win32con.MK_LBUTTON, long_position)  # 模拟鼠标弹起\n        ", "sleep", "(", "0.5", ")\n        AccountLogin.lock.", "release", "()\n\n    @staticmethod\n    def ", "accountLogin", "(i):\n        excl_path = ", "str", "(AccountLogin.settings.", "value", "(", "\"excl_path\"", ")).", "replace", "(", "'\\\\'", ", ", "'/'", ")\n        excl_path1 = excl_path + ", "\"/enroll.xlsx\"", "\n        table = AccountLogin.settings.", "value", "(", "\"table\"", ")\n        df = pd.", "read_excel", "(excl_path1, ", "int", "(table))  # 读取项目名称列,不要列名\n        df_li = df.values.", "tolist", "()\n        index = ", "int", "(i[", "0", "])\n        Dnconsole.", "launch", "(index)\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "20", ")\n        AccountLogin.", "Window_arrangement", "()\n        AccountLogin.", "pause", "()\n        lis1 = Dnconsole.", "get_list", "()\n        bind = lis1[index][", "3", "]\n        lis2 = df_li[index]\n        AccountLogin.", "pause", "()\n        Dnconsole.", "uninstall", "(index, ", "'com.instagram.android'", ")\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "2", ")\n        Dnconsole.", "install", "(index)\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "2", ")\n        Dnconsole.", "invokeapp", "(index, ", "'in.zhaoj.shadowsocksrr'", ")\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "5", ")\n        AccountLogin.", "ClickWait", "(bind, ", "126", ", ", "23", ", ", "5", ")\n        Dnconsole.", "invokeapp", "(index, ", "'com.instagram.android'", ")\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "20", ")\n        AccountLogin.", "ClickWait", "(bind, ", "69", ", ", "132", ", ", "2", ")\n        AccountLogin.", "ClickWait", "(bind, ", "50", ", ", "88", ", ", "2", ")\n        Dnconsole.", "input_text", "(index, lis2[", "0", "])\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "2", ")\n        AccountLogin.", "ClickWait", "(bind, ", "65", ", ", "108", ", ", "2", ")\n        Dnconsole.", "input_text", "(index, lis2[", "1", "])\n        AccountLogin.", "pause", "()\n        ", "sleep", "(", "2", ")\n        AccountLogin.", "ClickWait", "(bind, ", "72", ", ", "126", ", ", "5", ")\n        Dnconsole.", "quit", "(index)\n\n    @staticmethod\n    def ", "ClickWait", "(bind, x, y, time):\n        AccountLogin.", "doClick", "(bind, x, y)\n        AccountLogin.", "pause", "()\n        ", "sleep", "(time)\n\n    @staticmethod\n    def ", "pause", "():\n        while True:\n            pause1 = AccountLogin.settings.", "value", "(", "\"pause\"", ")\n            if ", "str", "(pause1) == ", "\"恢复\"", ":\n                break\n            elif ", "str", "(pause1) == ", "\"暂停\"", ":\n                ", "print", "(", "\"程序暂停中\"", ")\n                ", "sleep", "(", "1", ")\n                continue\n\n    @staticmethod\n    def ", "begin", "():\n        lis = Dnconsole.", "get_list", "()\n        thread = AccountLogin.settings.", "value", "(", "\"thread\"", ")\n        executor = ", "ThreadPoolExecutor", "(max_workers=", "int", "(thread))\n        all_task = []\n        for i in lis:\n            executor.", "submit", "(AccountLogin.accountLogin, i)\n            ", "sleep", "(", "3", ")\n        ", "wait", "(all_task, return_when=ALL_COMPLETED)\n\n\nif __name__ == ", "\"__main__\"", ":\n    app = ", "QApplication", "(sys.argv)\n    mainWindow = ", "CUi_MainWindow", "()\n    mainWindow.", "show", "()\n    sys.", "exit", "(app.", "exec", "())\n\n\n", "\n", "回答的时候麻烦提供下思路和参考代码"]], "Tag": "程序设计"}
{"Answer": "控制台程序哪里来的对话框？用MFC吧。\r\nhttp://download.csdn.net/detail/muhammadking/3952761", "Konwledge_Point": "主程序", "Question": ["学生成绩管理系统用c++", ["用C++编写学生成绩管理系统(用控制台应用程序)，最后的结果要是exe,主程序和消息对话框已写好，但是输出的主界面不会编写，求大神帮忙！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;子程序里面加一行代码&amp;#xff0c;切换执行目录到本文件所在目录&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&amp;#64;&lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; off\n&lt;span class=\"hljs-built_in\"&gt;pushd&lt;/span&gt; %~dp0\n&lt;span class=\"hljs-built_in\"&gt;del&lt;/span&gt; /q &lt;span class=\"hljs-variable\"&gt;%cd%&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["写了个批处理脚本，但不知道问题出在哪里", ["主程序部分：", "copy %cd% C:\\Users%username%\\Desktop\\111", "::进入宿主某文件夹后把自己和主程序复制到目标文件夹里", "start C:\\Users%username%\\Desktop\\111\\a1.bat", "::运行已经被复制进目标文件夹的子程序", "timeout/t -1", "\n", "子程序部分：", "@echo ", "off", "del/q %cd%", "::删除目标文件夹所有文件", "\n", "症状描述：运行主程序之后复制是复制过去了，但是竟然把自己原来所在文件夹里的内容删光了，而目标文件夹只是被复制了程序，我猜是子程序没有在目标文件夹运行，但不知道怎么解决", "\n", "不懂就问~"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;溢出了&lt;br /&gt;看你代码的企图&amp;#xff0c;你的第二层循环写错了&lt;br /&gt;应该是for(j&amp;#61;0;j&amp;lt;Row-1;j&amp;#43;&amp;#43;)&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于#c语言#的问题：读取位置 0x000000cc 时发生访问冲突", ["函数在主程序中不运行，调试时出现0xC0000005: 读取位置 0x000000cc 时发生访问冲突，求解答", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有两种方法实现&amp;#xff0c;有帮助望采纳&amp;#xff1a;&lt;br /&gt;方法1&amp;#xff1a;在fun1的多次循环间隙中直接调用fun2&amp;#xff1b;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;Public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Function&lt;/span&gt; Fun1()\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; Color &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;\n              &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;\n                    Color&amp;#61;Picture1.Point(i,j)\n              &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;call&lt;/span&gt; fun2\n        &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;方法2&amp;#xff1a;通过定时器等在闲暇时间执行fun2.可以加一个定时器&amp;#xff0c;在定时器事件中&lt;br /&gt;call fun2&lt;br /&gt;然后在fun1中加入消息处理&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;Public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Function&lt;/span&gt; Fun1()\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; Color &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;\n              &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;\n                    Color&amp;#61;Picture1.Point(i,j)\n              &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n              doevents\n        &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["VB6.0能不能实现程序的等待和挂起（怎样做）", [" 执行Visual Basic程序能不能实现程序的等待和挂起。\n 就是这样的场景：\n ", "Public", " ", "Function", "  MainFun()\n \n     ", "Call", " Fun1\n      \n     ", "Call", " Fun2\n ", "End", " ", "Function", "\n\n  ", "Public", " ", "Function", " Fun1()\n        ", "Dim", " Color ", "As", " ", "Long", "\n        ", "For", " i=", "0", " ", "to", " ", "3000", "\n              ", "For", " j=", "0", " ", "to", " ", "3000", "\n                    Color=Picture1.Point(i,j)\n              ", "Next", "\n        ", "Next", "\n   ", "End", " ", "Function", "\n\n    ", "Public", " ", "Function", " Fun2()\n          Form1.Print  ", "\"显示信息。\"", "\n    ", "End", " ", "Function", " \n\n     就是我有什么办法，设置主程序MainFun()，让代码实现以下的效果：\n     一、由于调用的第一个函数Fun1较复杂，运行的时间较多，怎样让Fun1程序转到后台执行，不影响我继续运行Fun2。也就是在Fun1在后台运行的时候，我们运行了Fun2，并且在Fun1运行过程中就运行完了Fun2。\n     二、能不能将Fun1先挂起，先执行完较易执行Fun2，然后让Fun1继续执行。\n     答案最好在一个窗体内实现。最好不要让程序无响应、死机。\n     请帮忙解答以下，能给现金的。\n"]], "Tag": "程序设计"}
{"Answer": "你这是什么编辑器啊。连作用域都不分，我把变量名都改了，代码如下：\r\n\r\n\r\n```\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\n#define MAX_NUMBER_LEN 1024\r\n\r\nbool isGreaterThan(const int* pNum1, const int* pNum2)\r\n{\r\n\tif (pNum1 == NULL || pNum2 == NULL)\r\n\t{\r\n\t\tcout &lt;&lt; \"您输入的数字有误\" &lt;&lt; endl;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfor(int nIndx = 0; nIndx &lt; MAX_NUMBER_LEN; ++nIndx)\r\n\t{\r\n\t\tif (pNum1[nIndx] &gt; pNum2[nIndx])\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n\tchar szNum1[1024] = {0};\r\n\tchar szNum2[1024] = {0};\r\n\tint arNumber1[1024] = {0};\r\n\tint arNumber2[1024] = {0};\r\n\r\n\tcout &lt;&lt; \"请输入两个小数(小数位数不要超过500位)，空格分隔：\" &lt;&lt; endl;\r\n\r\n\tcin &gt;&gt; szNum1;\r\n\tcin &gt;&gt; szNum2;\r\n\r\n\r\n\t// 把第一个字符串转化成数组\r\n\tint nCount = 0;\r\n\tint nNumLen = strlen(szNum1);\r\n\tbool bFindDot = false;\r\n\tfor (int nIndex = 0, pos = nIndex + 1; nIndex &lt; nNumLen; ++nIndex)\r\n\t{\r\n\t\tif (szNum1[nIndex] == '.')\r\n\t\t{\r\n\t\t\tbFindDot = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(szNum1[nIndex] &lt; '0' || szNum1[nIndex] &gt; '9')\r\n\t\t\t{\r\n\t\t\t\tcout &lt;&lt; \"请输入不是正确的数字\" &lt;&lt; endl;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\t\r\n\t\t\t\tarNumber1[pos] = szNum1[nIndex] - '0';\r\n\t\t\t}\r\n\t\t\tpos++;\r\n\r\n\t\t}\r\n\r\n\t\tif (!bFindDot)\r\n\t\t\tnCount++;\r\n\t}\r\n\tarNumber1[0] = nCount;\r\n\r\n\r\n\r\n\r\n\t// 把第二个字符串转化成数组\r\n\tnCount = 0;\r\n\tnNumLen = strlen(szNum2);\r\n\tbFindDot = false;\r\n\tfor (int nIndex1 = 0, pos = nIndex1 + 1; nIndex1 &lt; nNumLen; ++nIndex1)\r\n\t{\r\n\t\tif (szNum2[nIndex1] == '.')\r\n\t\t{\r\n\t\t\tbFindDot = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(szNum2[nIndex1] &lt; '0' || szNum2[nIndex1] &gt; '9')\r\n\t\t\t{\r\n\t\t\t\tcout &lt;&lt; \"请输入不是正确的数字\" &lt;&lt; endl;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\t\r\n\t\t\t\tarNumber2[pos] = szNum2[nIndex1] - '0';\r\n\t\t\t}\r\n\t\t\tpos++;\r\n\r\n\t\t}\r\n\r\n\t\tif (!bFindDot)\r\n\t\t\tnCount++;\r\n\t}\r\n\tarNumber2[0] = nCount;\r\n\r\n\r\n\tbool isGreater = isGreaterThan(arNumber1, arNumber2);\r\n\t// 比较小数前的位数\r\n\tif (arNumber1[0] != arNumber2[0])\r\n\t{\r\n\r\n\t\tint nshift = abs(arNumber1[0] - arNumber2[0]);\r\n\t\tint *pNum;\r\n\t\tint nTotal;\r\n\r\n\t\tif(isGreater)\r\n\t\t{\r\n\t\t\tpNum = arNumber2;\r\n\t\t\tnTotal = strstr(szNum2, \".\") ? strlen(szNum2) - 1 : strlen(szNum2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpNum = arNumber1;\r\n\t\t\tnTotal = strstr(szNum1, \".\") ? strlen(szNum1) - 1 : strlen(szNum1);\r\n\t\t}\r\n\r\n\t\tfor(int nIndex2 = nTotal; nIndex2 &gt;= 0; --nIndex2)\r\n\t\t{\r\n\t\t\tpNum[nIndex2 + nshift] = pNum[nIndex2];\r\n\t\t}\r\n\r\n\t\tfor(int nIndex2 = nshift; nIndex2 &gt;= 1; --nIndex2)\r\n\t\t{\r\n\t\t\tpNum[nIndex2] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 做简单减法\r\n\tint nlen1 = strstr(szNum1, \".\") ? strlen(szNum1) - 1 : strlen(szNum1);\r\n\tint nlen2 = strstr(szNum2, \".\") ? strlen(szNum2) - 1 : strlen(szNum2);\r\n\tint forcount= nlen1 &gt; nlen2 ?nlen1 : nlen2;\r\n\tif (isGreater)\r\n\t{\r\n\t\tfor (int nIndex3 = 1; nIndex3 &lt;= forcount; nIndex3++)\r\n\t\t{\r\n\t\t\tarNumber1[nIndex3] = arNumber1[nIndex3] - arNumber2[nIndex3];\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (int nIndex4 = 1; nIndex4 &lt;= forcount; nIndex4++)\r\n\t\t{\r\n\t\t\tarNumber1[nIndex4] = arNumber2[nIndex4] - arNumber1[nIndex4];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// 处理减法中的负数\r\n\tarNumber1[0]  = arNumber1[0] &gt; arNumber2[0] ? arNumber1[0] : arNumber2[0];\r\n\r\n\tfor ( int nIndex5 = forcount; nIndex5 &gt; 0; --nIndex5)\r\n\t{\r\n\t\tif (arNumber1[nIndex5] &lt; 0)\r\n\t\t{\r\n\t\t\tarNumber1[nIndex5] += 10;\r\n\t\t\tarNumber1[nIndex5 - 1] -= 1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcout &lt;&lt; \"结果为\" &lt;&lt; endl;\r\n\tif (!isGreater)\r\n\t\tcout &lt;&lt; \"-\";\r\n\r\n\r\n\t//输出结果\r\n\tbool zerooutpput = false;\r\n\tbool putpucount = 0;\r\n\tfor( int nIndex6 = 1; nIndex6 &lt;= forcount; nIndex6++ )\r\n\t{\r\n\t\tif (arNumber1[nIndex6] != 0 || nIndex6 &gt; arNumber1[0])\r\n\t\t{\r\n\t\t\tzerooutpput = true;\r\n\t\t\tcout &lt;&lt; arNumber1[nIndex6];\r\n\t\t\tputpucount++;\r\n\t\t}\r\n\t\telse if (zerooutpput)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; arNumber1[nIndex6];\r\n\t\t\tputpucount++;\r\n\t\t}\r\n\r\n\t\tif (nIndex6 == arNumber1[0])\r\n\t\t{\r\n\t\t\tif (putpucount == 0)\r\n\t\t\t\tcout &lt;&lt; \"0\";\r\n\r\n\t\t\tif (nIndex6 != forcount)\r\n\t\t\t\tcout &lt;&lt; '.';\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsystem(\"pause\");\r\n\r\n\treturn 0;\r\n} \r\n```", "Konwledge_Point": "主程序", "Question": ["c++高精度小数减法问题", ["程序主要要求 主程序读入两个字符串类型的大数(小数)，通过函数实现小数的高精度减法。求完整的代码和注释，比较急，谢谢"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/550829228.html", "Konwledge_Point": "主程序", "Question": ["数组当作参数传函数的时候，能不能用变量名给数组赋值呢？           ", ["数组当作参数传函数的时候，能不能用变量名给数组赋值呢？怎么通过数组将主程序的变量传给对应的子程序呢？"]], "Tag": "程序设计"}
{"Answer": "pthread_setname_np", "Konwledge_Point": "主程序", "Question": ["linux c 修改线程名。", ["pthread_create()一个子线程，该子线程和主线程程序名相同，请问如何修改子线程名字，使其有别于主程序名。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;![](&lt;a href=\"https://img-blog.csdnimg.cn/f5f82a9b6e794c4ebfce038cc7ad3fd9.png#pic_center\" id=\"textarea_1644378129450_1644378145390_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdnimg.cn/f5f82a9b6e794c4ebfce038cc7ad3fd9.png#pic_center&lt;/span&gt;&lt;/a&gt; &amp;#61;800x)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#999000\" id=\"textarea_1644378129450_1644378145390_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#999000&lt;/span&gt;&lt;/a&gt; 对于嵌入式系统&amp;#xff0c;如果没有运行RTOS&amp;#xff0c;那么程序开发中的 主函数&amp;#xff08;main()&amp;#xff09;需要通过某种机制使其永远愉快的运行下去&amp;#xff0c;它没有终点。如果想从main函数中退出&amp;#xff0c;具体干什么是由所使用的C语言编译器决定的。&lt;br /&gt;&lt;br /&gt;&lt;font face=\"宋体\" color=\"slateblue\"&gt;&lt;strong&gt;&lt;code class=\"language-javascript\"&gt;关键词&lt;/code&gt;&lt;strong&gt;&amp;#xff1a;&lt;/strong&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;strong&gt; &lt;strong&gt;C51&lt;/strong&gt;&amp;#xff0c;&lt;/strong&gt;main&lt;/strong&gt;&amp;#xff0c;&lt;strong&gt;程序退出&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre&gt;&lt;code class=\"language-mermaid\"&gt;graph LR\nA&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;([问题提出])&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; A&lt;span class=\"hljs-comment\"&gt;((目  录Contents)&lt;/span&gt;)\nstyle A fill:&lt;span class=\"hljs-attr\"&gt;#63&lt;/span&gt;f,stroke:&lt;span class=\"hljs-attr\"&gt;#ccc,stroke-width:5&lt;/span&gt;px,color:&lt;span class=\"hljs-attr\"&gt;#FFF\nstyle A1&lt;/span&gt; fill:&lt;span class=\"hljs-attr\"&gt;#9&lt;/span&gt;f&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,stroke:&lt;span class=\"hljs-attr\"&gt;#3&lt;/span&gt;a&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,stroke-width:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;px\nA&lt;span class=\"hljs-comment\"&gt;((目  录Contents)&lt;/span&gt;) &amp;#61;&amp;#61;&amp;#61; A&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(程序去哪儿了?)&lt;/span&gt;\nstyle A&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; fill:&lt;span class=\"hljs-attr\"&gt;#9&lt;/span&gt;f&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,stroke:&lt;span class=\"hljs-attr\"&gt;#3&lt;/span&gt;a&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,stroke-width:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;px\nA&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; --- B&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;([盘古开天辟地])&lt;/span&gt;\nA&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; --- B&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(世界尽头)&lt;/span&gt;\nA&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;([总    结 ])&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; A&lt;span class=\"hljs-comment\"&gt;((目  录&amp;lt;br&amp;gt;Contents)&lt;/span&gt;)\nstyle A&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; fill:&lt;span class=\"hljs-attr\"&gt;#36&lt;/span&gt;f,stroke:&lt;span class=\"hljs-attr\"&gt;#ccc,stroke-width:3&lt;/span&gt;px,color:&lt;span class=\"hljs-attr\"&gt;#FFF&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; &lt;/p&gt;\n&lt;h1 id=\"h1_§01-问题提出_1644378145115\"&gt;&lt;center&gt;&lt;font size=\"6\" color=\"slateblue\" face=\"黑体\"&gt;§&lt;u&gt;01&lt;/u&gt; &lt;font color=\"red\"&gt;问&lt;/font&gt;题提出&lt;/font&gt;&lt;/center&gt;&lt;/h1&gt;\n&lt;hr /&gt;\n&lt;p&gt;  &lt;font size=\"5\" color=\"black\"&gt;今&lt;/font&gt;天在CSDN的  &lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec\" id=\"textarea_1644378129450_1644378145390_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec&lt;/span&gt;&lt;/a&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  中看到一个有趣的问题。&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;  一个简单的C51程序如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;REGX51.H&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;) {\n    &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-variable\"&gt;P2_0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-variable\"&gt;P2_1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;) {\n    &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;  程序执行完之后&amp;#xff0c;可以看到实验板上的有两个LED被点亮&amp;#xff0c;另外六个居然&lt;strong&gt;微微发亮&lt;/strong&gt;。&lt;/p&gt;\n&lt;p&gt;&lt;span id=\"987000\"&gt;&lt;/span&gt;![▲ 图1.1 实验板上的未点亮的LED居然微微发亮](&lt;a href=\"https://img-blog.csdnimg.cn/05d64f1a7a2a4d1f8cda4e217f3f4b9a.png#pic_center\" id=\"textarea_1644378129450_1644378145390_3\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdnimg.cn/05d64f1a7a2a4d1f8cda4e217f3f4b9a.png#pic_center&lt;/span&gt;&lt;/a&gt; &amp;#61;560x)&lt;/p&gt;&lt;center&gt;&lt;code class=\"language-javascript\"&gt;▲ 图1.1 实验板上的未点亮的LED居然微微发亮&lt;/code&gt;&lt;/center&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;  如果在主程序中&amp;#xff0c;增加一个无限循环&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;while(1);&lt;/code&gt; &amp;#xff0c;则电路板上的就不再会出现“&lt;strong&gt;微微点亮&lt;/strong&gt;”的现象了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;REGX51.H&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;) {\n    &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-variable\"&gt;P2_0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-variable\"&gt;P2_1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;) {\n    &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;span id=\"987001\"&gt;&lt;/span&gt;![▲ 图1.2 实验板上后面六个LED就不再点亮了](&lt;a href=\"https://img-blog.csdnimg.cn/7d255289d7d84795abdd6408a5cfbddd.png#pic_center\" id=\"textarea_1644378129450_1644378145390_4\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdnimg.cn/7d255289d7d84795abdd6408a5cfbddd.png#pic_center&lt;/span&gt;&lt;/a&gt; &amp;#61;560x)&lt;/p&gt;&lt;center&gt;&lt;code class=\"language-javascript\"&gt;▲ 图1.2 实验板上后面六个LED就不再点亮了&lt;/code&gt;&lt;/center&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;  上面两种情况的区别&amp;#xff0c;在于第二个程序中 主循环 &lt;code class=\"language-javascript\"&gt;main()&lt;/code&gt; 函数始终没有退出&amp;#xff0c;而第一个程序&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;main()&lt;/code&gt; 函数退出了。似乎前面LED &lt;strong&gt;微微点亮&lt;/strong&gt; 应该与 主函数 退出之后&amp;#xff0c;单片机都干了些啥有关系。&lt;/p&gt;\n&lt;p&gt;  那么就剩下一个问题&amp;#xff1a; &lt;strong&gt;&lt;code class=\"language-javascript\"&gt;对于普通的嵌入式系统&amp;#xff0c;C语言编程中 main()函数退出之后&amp;#xff0c;程序去哪儿了&amp;#xff1f;&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n&lt;p&gt; &lt;/p&gt;\n&lt;h1 id=\"h1_§02-程序去哪儿了&amp;#xff1f;_1644378145173\"&gt;&lt;center&gt;&lt;font size=\"6\" color=\"slateblue\" face=\"黑体\"&gt;§&lt;u&gt;02&lt;/u&gt; &lt;font color=\"red\"&gt;程&lt;/font&gt;序去哪儿了&amp;#xff1f;&lt;/font&gt;&lt;/center&gt;&lt;/h1&gt;\n&lt;hr /&gt;\n&lt;p&gt;  &lt;font size=\"5\" color=\"black\"&gt;从&lt;/font&gt;上面提问者书写的代码来看&amp;#xff0c;应该是一位C51的爱好者&amp;#xff0c;使用的是C51的编译器&amp;#xff0c;在一款C51开发板上愉快的进行实验。他一开始没有安装嵌入式程序开发的&lt;strong&gt;惯例&lt;/strong&gt; 在主程序&lt;code class=\"language-javascript\"&gt;void main(void)&lt;/code&gt; 中利用无限循环将程序控制在主程序函数中&amp;#xff0c;就出现了前面实验结果中令人迷惑的情况。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;注&amp;#xff1a; 佩服他是一个胆大心细的人&amp;#xff0c;观察还挺仔细的。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;h2 id=\"h2_21-盘古开天辟地_1644378145173\"&gt;&lt;font color=\"#7a37ab\"&gt;2.1 盘古开天辟地&lt;/font&gt;&lt;/h2&gt;\n&lt;p&gt;  对于C语言编程来说&amp;#xff0c;所有的用户程序世界是从主程序 &lt;code class=\"language-javascript\"&gt;main()&lt;/code&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  开始的。给用户程序&lt;/span&gt;&lt;strong&gt;开天辟地&lt;/strong&gt;的任务是由 一小段 &lt;strong&gt;盘古代码&lt;/strong&gt; &lt;code class=\"language-javascript\"&gt;STARTUP.A51&lt;/code&gt;。&lt;/p&gt;\n&lt;p&gt;  关于C51是如何启动的&amp;#xff0c; 在如下两篇博文中也被测试说明&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt; &lt;a href=\"https://blog.csdn.net/ChenGuiGan/article/details/88769619\" id=\"textarea_1644378129450_1644378145390_5\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/ChenGuiGan/article/details/88769619&lt;/span&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;  下面截取了 &lt;strong&gt;STARTUP.A51&lt;/strong&gt; 代码的一段&amp;#xff0c;可以看到&lt;strong&gt;盘古&lt;/strong&gt;在单片机 RESET 之后做了点准备工作&amp;#xff08;初始化全局变量、堆栈指针&amp;#xff09;之后&amp;#xff0c;就直接跳转至&amp;#xff1a;**?C_START**&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;$NOMOD51\n&lt;span class=\"hljs-comment\"&gt;;------------------------------------------------------------------------------&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;  This file is part of the C51 Compiler package&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;  Version 8.01&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;  *** &amp;lt;&amp;lt;&amp;lt; Use Configuration Wizard in Context Menu &amp;gt;&amp;gt;&amp;gt; ***&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;------------------------------------------------------------------------------&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;  STARTUP.A51:  This code is executed after processor reset.&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;  To translate this file use A51 with the following invocation:&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;     A51 STARTUP.A51&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;  To link the modified STARTUP.OBJ file to your application use the following&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;  Lx51 invocation:&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;     Lx51 your object file list, STARTUP.OBJ  controls&lt;/span&gt;\n;\n&lt;span class=\"hljs-comment\"&gt;;------------------------------------------------------------------------------&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; Standard SFR Symbols &lt;/span&gt;\nACC     DATA    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;E0H\n&lt;span class=\"hljs-keyword\"&gt;B &lt;/span&gt;      DATA    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;F0H\n&lt;span class=\"hljs-built_in\"&gt;SP&lt;/span&gt;      DATA    &lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;H\nDPL     DATA    &lt;span class=\"hljs-number\"&gt;82&lt;/span&gt;H\nDPH     DATA    &lt;span class=\"hljs-number\"&gt;83&lt;/span&gt;H\n\n                NAME    ?C_STARTUP\n\n?C_C51STARTUP   SEGMENT   CODE\n?STACK          SEGMENT   IDATA\n\n                RSEG    ?STACK\n                DS      &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n                &lt;span class=\"hljs-keyword\"&gt;EXTRN &lt;/span&gt;CODE (?C_START)\n                PUBLIC  ?C_STARTUP\n\n                CSEG    &lt;span class=\"hljs-built_in\"&gt;AT&lt;/span&gt;      &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n?C_STARTUP:     LJMP    STARTUP1\n\n                RSEG    ?C_C51STARTUP\n&lt;span class=\"hljs-symbol\"&gt;\nSTARTUP1:&lt;/span&gt;\n\nIF IDATALEN &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                MOV     R0,&lt;span class=\"hljs-comment\"&gt;#IDATALEN - 1&lt;/span&gt;\n                CLR     A\n&lt;span class=\"hljs-symbol\"&gt;IDATALOOP:&lt;/span&gt;      MOV     &amp;#64;R0,A\n                DJNZ    R0,IDATALOOP\nENDIF\n\nIF XDATALEN &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                MOV     DPTR,&lt;span class=\"hljs-comment\"&gt;#XDATASTART&lt;/span&gt;\n                MOV     R7,&lt;span class=\"hljs-comment\"&gt;#LOW (XDATALEN)&lt;/span&gt;\n  IF (LOW (XDATALEN)) &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                MOV     R6,&lt;span class=\"hljs-comment\"&gt;#(HIGH (XDATALEN)) &amp;#43;1&lt;/span&gt;\n  ELSE\n                MOV     R6,&lt;span class=\"hljs-comment\"&gt;#HIGH (XDATALEN)&lt;/span&gt;\n  ENDIF\n                CLR     A\n&lt;span class=\"hljs-symbol\"&gt;XDATALOOP:&lt;/span&gt;      MOVX    &amp;#64;DPTR,A\n                INC     DPTR\n                DJNZ    R7,XDATALOOP\n                DJNZ    R6,XDATALOOP\nENDIF\n\nIF PPAGEENABLE &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                MOV     PPAGE_SFR,&lt;span class=\"hljs-comment\"&gt;#PPAGE&lt;/span&gt;\nENDIF\n\nIF PDATALEN &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                MOV     R0,&lt;span class=\"hljs-comment\"&gt;#LOW (PDATASTART)&lt;/span&gt;\n                MOV     R7,&lt;span class=\"hljs-comment\"&gt;#LOW (PDATALEN)&lt;/span&gt;\n                CLR     A\n&lt;span class=\"hljs-symbol\"&gt;PDATALOOP:&lt;/span&gt;      MOVX    &amp;#64;R0,A\n                INC     R0\n                DJNZ    R7,PDATALOOP\nENDIF\n\nIF IBPSTACK &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;EXTRN &lt;/span&gt;DATA (?C_IBP)\n\n                MOV     ?C_IBP,&lt;span class=\"hljs-comment\"&gt;#LOW IBPSTACKTOP&lt;/span&gt;\nENDIF\n\nIF XBPSTACK &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;EXTRN &lt;/span&gt;DATA (?C_XBP)\n\n                MOV     ?C_XBP,&lt;span class=\"hljs-comment\"&gt;#HIGH XBPSTACKTOP&lt;/span&gt;\n                MOV     ?C_XBP&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-comment\"&gt;#LOW XBPSTACKTOP&lt;/span&gt;\nENDIF\n\nIF PBPSTACK &amp;lt;&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;EXTRN &lt;/span&gt;DATA (?C_PBP)\n                MOV     ?C_PBP,&lt;span class=\"hljs-comment\"&gt;#LOW PBPSTACKTOP&lt;/span&gt;\nENDIF\n\n                MOV     &lt;span class=\"hljs-built_in\"&gt;SP&lt;/span&gt;,&lt;span class=\"hljs-comment\"&gt;#?STACK-1&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;; This code is required if you use L51_BANK.A51 with Banking Mode 4&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;&amp;lt;h&amp;gt; Code Banking&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;; &amp;lt;q&amp;gt; Select Bank 0 for L51_BANK.A51 Mode 4&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#if 0   &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;     &amp;lt;i&amp;gt; Initialize bank mechanism to code bank 0 when using L51_BANK.A51 with Banking Mode 4.&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;EXTRN &lt;/span&gt;CODE (?&lt;span class=\"hljs-keyword\"&gt;B_SWITCH0)\n&lt;/span&gt;                CALL    ?&lt;span class=\"hljs-keyword\"&gt;B_SWITCH0 &lt;/span&gt;     &lt;span class=\"hljs-comment\"&gt;; init bank mechanism to code bank 0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#endif&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;;&amp;lt;/h&amp;gt;&lt;/span&gt;\n                LJMP    ?C_START\n\n                END\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;  上面的代码也被博文  &lt;a href=\"https://blog.csdn.net/tangsun999/article/details/45604507\" id=\"textarea_1644378129450_1644378145390_6\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/tangsun999/article/details/45604507&lt;/span&gt;&lt;/a&gt; 中进行逐步调试跟踪验证过&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;span id=\"987002\"&gt;&lt;/span&gt;![▲ 图2.1.1  显示LJMP C_START 就是进入 main() 程序](&lt;a href=\"https://img-blog.csdn.net/20130605111957140#pic_center\" id=\"textarea_1644378129450_1644378145390_7\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdn.net/20130605111957140#pic_center&lt;/span&gt;&lt;/a&gt; &amp;#61;560x )&lt;/p&gt;&lt;center&gt;&lt;code class=\"language-javascript\"&gt;▲ 图2.1.1  显示LJMP C_START 就是进入 main() 程序&lt;/code&gt;&lt;/center&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=\"h2_22-世界尽头_1644378145361\"&gt;&lt;font color=\"#7a37ab\"&gt;2.2 世界尽头&lt;/font&gt;&lt;/h2&gt;\n&lt;p&gt;  由于进入main() 函数是长跳转&amp;#xff0c;所以main函数是不会正常返回到启动程序 STARTUP.A51&amp;#xff0c;那么程序去哪了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;  在博文 &lt;a href=\"https://blog.csdn.net/acai1123/article/details/16890933?locationNum&amp;#61;9&amp;amp;fps&amp;#61;1&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-8.pc_relevant_paycolumn_v3&amp;amp;spm&amp;#61;1001.2101.3001.4242.5&amp;amp;utm_relevant_index&amp;#61;11\" id=\"textarea_1644378129450_1644378145390_8\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/acai1123/article/details/16890933?locationNum&amp;#61;9&amp;amp;fps&amp;#61;1&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-8.pc_relevant_paycolumn_v3&amp;amp;spm&amp;#61;1001.2101.3001.4242.5&amp;amp;utm_relevant_index&amp;#61;11&lt;/span&gt;&lt;/a&gt; 中作者对于 KEIL编译器和PIC的 MAPLAB编译器对于main函数的最后时光进行了反汇编查看。&lt;/p&gt;\n&lt;h3 id=\"h3_221-keil编译器_1644378145361\"&gt;&lt;font color=\"#008090\"&gt;2.2.1 Keil编译器&lt;/font&gt;&lt;/h3&gt;\n&lt;p&gt;  在main函数的最后&amp;#xff0c;程序增加了一下几行代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;MOV&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;R0&lt;/span&gt;, &lt;span class=\"hljs-meta\"&gt;#0x7F&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;CLR&lt;/span&gt; A\n&lt;span class=\"hljs-keyword\"&gt;MOV&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-built_in\"&gt;R0&lt;/span&gt;, A\nDJNZ &lt;span class=\"hljs-built_in\"&gt;R0&lt;/span&gt;, (&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;MOV&lt;/span&gt; SP, &lt;span class=\"hljs-meta\"&gt;#0x0C&lt;/span&gt;\nLJMP main\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;  这几条语句&amp;#xff0c;前4条&amp;#xff0c;是将我们单片机的内存的前128个地址清零&amp;#xff0c;第5条&amp;#xff0c;是定义堆栈&amp;#xff0c;第6条&amp;#xff0c;是将程序重新跳转到main函数的首行进行执行。&lt;/p&gt;\n&lt;h3 id=\"h3_222-maplab编译器_1644378145381\"&gt;&lt;font color=\"#008090\"&gt;2.2.2 MAPLAB编译器&lt;/font&gt;&lt;/h3&gt;\n&lt;p&gt;  PIC 单片机语言程序进行跟踪&amp;#xff0c;发现main() 函数最后一条语句为 &lt;code class=\"language-javascript\"&gt;reset&lt;/code&gt;&amp;#xff0c;也就是单片机直接复位&amp;#xff0c;这是 MAPLAB编译器根据 PIC 单片机特点增加的复位语句。&lt;/p&gt;\n&lt;p&gt; &lt;/p&gt;\n&lt;h1 id=\"h1_-总结-_1644378145381\"&gt;&lt;center&gt;&lt;font size=\"6\" color=\"slateblue\" face=\"黑体\"&gt;※ &lt;font color=\"red\"&gt;总&lt;/font&gt;  结 ※&lt;/font&gt;&lt;/center&gt;&lt;/h1&gt;\n&lt;hr /&gt;\n&lt;p&gt;  &lt;font size=\"5\" color=\"black\"&gt;对&lt;/font&gt;于嵌入式系统&amp;#xff0c;如果没有运行RTOS&amp;#xff0c;那么程序开发中的 主函数&amp;#xff08;main()&amp;#xff09;需要通过某种机制使其永远愉快的运行下去&amp;#xff0c;它没有终点。&lt;/p&gt;\n&lt;p&gt;  如果想从main函数中退出&amp;#xff0c;具体干什么是由所使用的C语言编译器决定的。&lt;/p&gt;\n&lt;p&gt;&lt;span id=\"999000\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;&lt;font color=\"gray\" face=\"宋体\"&gt;&lt;strong&gt;■ 相关文献链接:&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;input type=\"checkbox\" disabled=\"\" checked=\"\" /&gt; &lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec\" id=\"textarea_1644378129450_1644378145390_9\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;input type=\"checkbox\" disabled=\"\" checked=\"\" /&gt; &lt;a href=\"https://blog.csdn.net/ChenGuiGan/article/details/88769619\" id=\"textarea_1644378129450_1644378145390_10\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/ChenGuiGan/article/details/88769619&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;input type=\"checkbox\" disabled=\"\" checked=\"\" /&gt; &lt;a href=\"https://blog.csdn.net/tangsun999/article/details/45604507\" id=\"textarea_1644378129450_1644378145390_11\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/tangsun999/article/details/45604507&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;input type=\"checkbox\" disabled=\"\" checked=\"\" /&gt; &lt;a href=\"https://blog.csdn.net/acai1123/article/details/16890933?locationNum&amp;#61;9&amp;amp;fps&amp;#61;1&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-8.pc_relevant_paycolumn_v3&amp;amp;spm&amp;#61;1001.2101.3001.4242.5&amp;amp;utm_relevant_index&amp;#61;11\" id=\"textarea_1644378129450_1644378145390_12\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/acai1123/article/details/16890933?locationNum&amp;#61;9&amp;amp;fps&amp;#61;1&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-8.pc_relevant_paycolumn_v3&amp;amp;spm&amp;#61;1001.2101.3001.4242.5&amp;amp;utm_relevant_index&amp;#61;11&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;font color=\"gray\" face=\"宋体\"&gt;&lt;strong&gt;● 相关图表链接:&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987000\" id=\"textarea_1644378129450_1644378145390_13\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987000&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987001\" id=\"textarea_1644378129450_1644378145390_14\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987001&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987002\" id=\"textarea_1644378129450_1644378145390_15\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7640604?utm_medium&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrecdepth_1-utm_source&amp;#61;distribute.pc_feed_v2.none-task-ask-ask_personrec_tag-3.pc_personrec#987002&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "主程序", "Question": ["单片机led模块定义函数的问题", ["\n", "请问下为什么除了1，2亮之外，别的灯也会有弱光，在主程序里加while循环后，又正常了。", "\n"]], "Tag": "程序设计"}
{"Answer": "用common dialog控件，调用showopen方法打开标准的对话框，用filename属性获得文件名。", "Konwledge_Point": "主程序", "Question": ["一个关于VB6文件打开调用的问题，求解", ["VB6.0怎么样在用户选择文件并且打开的时候获得这个调用，并且在主程序中显示打开的文件？"]], "Tag": "程序设计"}
{"Answer": "定义成byref\r\nfunction xch(byval x as long, byval y as long)\r\ndim z as long\r\nz = x\r\nx = y\r\ny = x\r\nend function", "Konwledge_Point": "主程序", "Question": ["VB用函数怎么将传入的两个数组交换？", ["VB用函数怎么将传入的两个数组交换，并且要在调用它的主程序里也实现数组的交换？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先了解fun函数的作用&amp;#xff0c;fun的作用是交换地址&amp;#xff0c;而不是交换值&lt;br /&gt;其次int &lt;em&gt;p &amp;#61; &amp;amp;x 表示p为&amp;amp;x&amp;#xff0c;也就是p为x的地址&amp;#xff0c;&lt;/em&gt;p表示x的值&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/955054114066134.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;接着第一次调用fun是传值调用&amp;#xff0c;并&lt;strong&gt;不会改变x&amp;#xff0c;y对应的地址&amp;#xff0c;fun改变的只是x&amp;#xff0c;y副本的地址&lt;/strong&gt;&lt;br /&gt;所以第一次输出35&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/72033701406614.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;接着是第二次fun函数调用&amp;#xff0c;这次是指针传递&amp;#xff0c;x&amp;#xff0c;y的地址确实被改变&amp;#xff0c;但是值得注意的是&lt;strong&gt;虽然x&amp;#xff0c;y的地址交换了但是指针指向不变&lt;/strong&gt;&amp;#xff0c;也就是所&lt;em&gt;p在x&amp;#xff0c;y的地址交换后仍指向值为3的地址&amp;#xff0c;&lt;/em&gt;q同理&lt;br /&gt;所以第二次printf输出35&lt;br /&gt;回答不易&amp;#xff0c;有用请采纳下&amp;#x1f920;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么指针*p是x的值？", ["\n", "我认为在主程序中x把地址赋予了指针", "P，那么指针", "p的值应该是X的地址而不是X的值"]], "Tag": "程序设计"}
{"Answer": "你的“MFC自动缩放类代码”是哪里的代码，请贴出来。", "Konwledge_Point": "主程序", "Question": ["关于MFC自动缩放类代码的使用", ["关于MFC自动缩放类代码的使用，使用这个代码，头文件需要插入哪个目录，在主程序里怎么调用？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.Color;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.Dimension;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.Font;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.Graphics;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionEvent;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionListener;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.KeyAdapter;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.KeyEvent;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Random;\n \n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JPanel;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.Timer;\n \n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;GamePanel&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JPanel&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ActionListener&lt;/span&gt;{\n \n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;final&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; SCREEN_WIDTH&amp;#61;&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;final&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; SCREEN_HEIGHT&amp;#61;&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;final&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; UNIT_SIZE&amp;#61;&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; GAMA_GROUND&amp;#61;(SCREEN_WIDTH*SCREEN_HEIGHT)/UNIT_SIZE;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;final&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; DELAY&amp;#61;&lt;span class=\"hljs-number\"&gt;140&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x[]&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;int&lt;/span&gt;[GAMA_GROUND];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y[]&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;int&lt;/span&gt; [GAMA_GROUND];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; snake&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; applesEaten;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; appleX;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; appleY;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; running&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    Timer timer;\n    Random random;\n    \n    GamePanel(){\n        init();\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;init&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n        x &amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;int&lt;/span&gt;[GAMA_GROUND];\n        y &amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;int&lt;/span&gt; [GAMA_GROUND];\n        snake&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n        applesEaten &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        appleX &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        appleY &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;;\n        running&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.setPreferredSize(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Dimension&lt;/span&gt;(SCREEN_WIDTH,SCREEN_HEIGHT));\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.setFocusable(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.addKeyListener(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;KAdapter&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.setBackground(Color.black);\n        random&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Random&lt;/span&gt;();\n        gameStart();\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;paintComponent&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Graphics g)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;.paintComponent(g);\n        draw(g);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;draw&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Graphics g)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(running) {\n            &lt;span class=\"hljs-comment\"&gt;//Draw apple&lt;/span&gt;\n            g.setColor(Color.white);\n            g.fillOval(appleX, appleY, UNIT_SIZE, UNIT_SIZE);\n            \n            &lt;span class=\"hljs-comment\"&gt;//Draw Snake&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;snake;i&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-comment\"&gt;//Head of Snake&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                    g.setColor(Color.white);\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\n                }\n                &lt;span class=\"hljs-comment\"&gt;//Body of Snake&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    g.setColor(Color.gray);\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            gameEnd(g);\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;gameStart&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        running&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        createApple();\n        timer&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Timer&lt;/span&gt;(DELAY,&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        timer.start();\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;createApple&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;//Set apple random location&lt;/span&gt;\n        appleX&amp;#61;random.nextInt((&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)(SCREEN_WIDTH/UNIT_SIZE))*UNIT_SIZE;\n        appleY&amp;#61;random.nextInt((&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)(SCREEN_HEIGHT/UNIT_SIZE))*UNIT_SIZE;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;checkApple&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;//Make apple Edible&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;appleX)&amp;amp;&amp;amp;(y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;appleY)){\n            snake&amp;#43;&amp;#43;;\n            applesEaten&amp;#43;&amp;#43;;\n            createApple();\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;move&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n     &lt;span class=\"hljs-comment\"&gt;//借助char变量“direction”进行方向判断和移动&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;snake;i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--) {\n            x[i]&amp;#61;x[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            y[i]&amp;#61;y[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        }\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(direction) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;U&amp;#39;&lt;/span&gt;:\n            y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]-UNIT_SIZE;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:\n            y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;UNIT_SIZE;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;:\n            x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]-UNIT_SIZE;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;:\n            x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;UNIT_SIZE;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;checkCollision&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;snake;i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--) {\n            &lt;span class=\"hljs-comment\"&gt;//Game end when head touching body&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;x[i])&amp;amp;&amp;amp;(y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;y[i])){\n                running&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-comment\"&gt;//Game end when head spanned the game field&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)||(x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;gt;SCREEN_WIDTH)||(y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)||(y[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;gt;SCREEN_HEIGHT)) {\n                running&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;gameEnd&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Graphics g)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.setBackground(Color.gray);\n        g.setColor(Color.black);\n        &lt;span class=\"hljs-comment\"&gt;//&amp;#34;Greedy Snake&amp;#34;&lt;/span&gt;\n        g.setFont(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Font&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Impact&amp;#34;&lt;/span&gt;,Font.BOLD,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;));\n        g.drawString(&lt;span class=\"hljs-string\"&gt;&amp;#34;Greedy Snake&amp;#34;&lt;/span&gt;&amp;#43;applesEaten,SCREEN_WIDTH/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, g.getFont().getSize());\n        &lt;span class=\"hljs-comment\"&gt;//&amp;#34;Score - &amp;#34;&lt;/span&gt;\n        g.setFont(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Font&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;,Font.BOLD,&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;));\n        g.drawString(&lt;span class=\"hljs-string\"&gt;&amp;#34;Score - &amp;#34;&lt;/span&gt;&amp;#43;applesEaten,SCREEN_WIDTH/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n \n        g.setFont(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Font&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;,Font.ROMAN_BASELINE,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;));\n        g.drawString(&lt;span class=\"hljs-string\"&gt;&amp;#34;press &amp;#39;R&amp;#39; to restart &amp;#34;&lt;/span&gt;, SCREEN_WIDTH/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;170&lt;/span&gt;);\n        g.drawString(&lt;span class=\"hljs-string\"&gt;&amp;#34;press &amp;#39;ESC&amp;#39; to quit &amp;#34;&lt;/span&gt;, SCREEN_WIDTH/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;195&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(timer !&amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;) {\n            timer.stop();\n            timer &amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;;\n        }\n    }\n    \n \n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;actionPerformed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(ActionEvent e)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(running) {\n            move();\n            checkApple();\n            checkCollision();\n        }\n        repaint();\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;KAdapter&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;KeyAdapter&lt;/span&gt;{\n        &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;keyPressed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(KeyEvent e)&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(e.getKeyCode()) {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_LEFT:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(direction!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;) {\n                        direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_RIGHT:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(direction!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;) {\n                        direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_UP:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(direction!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;) {\n                        direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;U&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_DOWN:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(direction!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;U&amp;#39;&lt;/span&gt;) {\n                        direction&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_R:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!running) {\n                        init();\n                    }\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; KeyEvent.VK_ESCAPE:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!running) {\n                        System.exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n                    }\n            }\n        }\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["java贪吃蛇程序的问题", ["？未解决：", "全部代码在下，如何实现在gameover时候(running=false)按R键可以重开游戏", "\n", "\n-----------------------------------\n", "//主程序", "\n", "public", " ", "class", " ", "Main", " ", "extends", " ", "GamePanel", "{\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "new", " ", "GameFrame", "();\n    }\n\n}\n-----------------------------------\n", "//在新的GameFrame中创建GamePanel ", "\n", "import", " javax.swing.JFrame;\n", "public", " ", "class", " ", "GameFrame", " ", "extends", " ", "JFrame", "{\n    GameFrame(){\n        \n        ", "this", ".add(", "new", " ", "GamePanel", "());\n        ", "this", ".setTitle(", "\"Snake Game\"", ");\n        ", "this", ".setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        ", "this", ".setResizable(", "false", ");\n        ", "this", ".pack();\n        ", "this", ".setVisible(", "true", ");\n        ", "this", ".setLocationRelativeTo(", "null", ");\n    }\n}\n-----------------------------------\n", "//图像绘制，游戏操作代码", "\n", "import", " java.awt.Color;\n", "import", " java.awt.Dimension;\n", "import", " java.awt.Font;\n", "import", " java.awt.Graphics;\n", "import", " java.awt.event.ActionEvent;\n", "import", " java.awt.event.ActionListener;\n", "import", " java.awt.event.KeyAdapter;\n", "import", " java.awt.event.KeyEvent;\n", "import", " java.util.Random;\n\n", "import", " javax.swing.JPanel;\n", "import", " javax.swing.Timer;\n\n", "public", " ", "class", " ", "GamePanel", " ", "extends", " ", "JPanel", " ", "implements", " ", "ActionListener", "{\n\n    ", "static", " ", "final", " ", "int", " SCREEN_WIDTH=", "600", ";\n    ", "static", " ", "final", " ", "int", " SCREEN_HEIGHT=", "600", ";\n    ", "static", " ", "final", " ", "int", " UNIT_SIZE=", "25", ";\n    ", "static", " ", "int", " GAMA_GROUND=(SCREEN_WIDTH*SCREEN_HEIGHT)/UNIT_SIZE;\n    ", "static", " ", "final", " ", "int", " DELAY=", "140", ";\n    ", "final", " ", "int", " x[]=", "new", " ", "int", "[GAMA_GROUND];\n    ", "final", " ", "int", " y[]=", "new", " ", "int", " [GAMA_GROUND];\n    ", "int", " snake=", "5", ";\n    ", "int", " applesEaten;\n    ", "int", " appleX;\n    ", "int", " appleY;\n    ", "char", " direction=", "'R'", ";\n    ", "public", " ", "boolean", " running=", "false", ";\n    Timer timer;\n    Random random;\n    \n    GamePanel(){\n        ", "this", ".setPreferredSize(", "new", " ", "Dimension", "(SCREEN_WIDTH,SCREEN_HEIGHT));\n        ", "this", ".setFocusable(", "true", ");\n        ", "this", ".addKeyListener(", "new", " ", "KAdapter", "());\n        ", "this", ".setBackground(Color.black);\n        random=", "new", " ", "Random", "();\n        gameStart();\n    }\n    \n    ", "public", " ", "void", " ", "paintComponent", "(Graphics g)", " {\n        ", "super", ".paintComponent(g);\n        draw(g);\n    }\n    \n    ", "public", " ", "void", " ", "draw", "(Graphics g)", " {\n        ", "if", "(running) {\n            ", "//Draw apple", "\n            g.setColor(Color.white);\n            g.fillOval(appleX, appleY, UNIT_SIZE, UNIT_SIZE);\n            \n            ", "//Draw Snake", "\n            ", "for", "(", "int", " i=", "0", ";i<snake;i++) {\n                ", "//Head of Snake", "\n                ", "if", "(i==", "0", ") {\n                    g.setColor(Color.white);\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\n                }\n                ", "//Body of Snake", "\n                ", "else", " {\n                    g.setColor(Color.gray);\n                    g.fillRect(x[i], y[i], UNIT_SIZE, UNIT_SIZE);\n                }\n            }\n        }\n        ", "else", " {\n            gameEnd(g);\n        }\n    }\n    \n    ", "public", " ", "void", " ", "gameStart", "()", " {\n        running=", "true", ";\n        createApple();\n        timer=", "new", " ", "Timer", "(DELAY,", "this", ");\n        timer.start();\n    }\n    \n    ", "public", " ", "void", " ", "createApple", "()", " {\n        ", "//Set apple random location", "\n        appleX=random.nextInt((", "int", ")(SCREEN_WIDTH/UNIT_SIZE))*UNIT_SIZE;\n        appleY=random.nextInt((", "int", ")(SCREEN_HEIGHT/UNIT_SIZE))*UNIT_SIZE;\n    }\n    \n    ", "public", " ", "void", " ", "checkApple", "()", " {\n        ", "//Make apple Edible", "\n        ", "if", "((x[", "0", "]==appleX)&&(y[", "0", "]==appleY)){\n            snake++;\n            applesEaten++;\n            createApple();\n        }\n    }\n    \n    ", "public", " ", "void", " ", "move", "()", " {\n     ", "//借助char变量“direction”进行方向判断和移动", "\n        ", "for", "(", "int", " i=snake;i>", "0", ";i--) {\n            x[i]=x[i-", "1", "];\n            y[i]=y[i-", "1", "];\n        }\n        ", "switch", "(direction) {\n        ", "case", " ", "'U'", ":\n            y[", "0", "]=y[", "0", "]-UNIT_SIZE;\n            ", "break", ";\n        ", "case", " ", "'D'", ":\n            y[", "0", "]=y[", "0", "]+UNIT_SIZE;\n            ", "break", ";\n        ", "case", " ", "'L'", ":\n            x[", "0", "]=x[", "0", "]-UNIT_SIZE;\n            ", "break", ";\n        ", "case", " ", "'R'", ":\n            x[", "0", "]=x[", "0", "]+UNIT_SIZE;\n            ", "break", ";\n        }\n    }\n    \n    ", "public", " ", "void", " ", "checkCollision", "()", " {\n        ", "for", "(", "int", " i=snake;i>", "0", ";i--) {\n            ", "//Game end when head touching body", "\n            ", "if", "((x[", "0", "]==x[i])&&(y[", "0", "]==y[i])){\n                running=", "false", ";\n            }\n            ", "//Game end when head spanned the game field", "\n            ", "if", "((x[", "0", "]<", "0", ")||(x[", "0", "]>SCREEN_WIDTH)||(y[", "0", "]<", "0", ")||(y[", "0", "]>SCREEN_HEIGHT)) {\n                running=", "false", ";\n            }\n        }\n    }\n    \n    ", "private", " ", "void", " ", "gameEnd", "(Graphics g)", " {\n        \n        ", "this", ".setBackground(Color.gray);\n        g.setColor(Color.black);\n        ", "//\"Greedy Snake\"", "\n        g.setFont(", "new", " ", "Font", "(", "\"Impact\"", ",Font.BOLD,", "30", "));\n        g.drawString(", "\"Greedy Snake\"", "+applesEaten,SCREEN_WIDTH/", "3", ", g.getFont().getSize());\n        ", "//\"Score - \"", "\n        g.setFont(", "new", " ", "Font", "(", "null", ",Font.BOLD,", "25", "));\n        g.drawString(", "\"Score - \"", "+applesEaten,SCREEN_WIDTH/", "6", ", ", "100", ");\n\n        g.setFont(", "new", " ", "Font", "(", "null", ",Font.ROMAN_BASELINE,", "15", "));\n        g.drawString(", "\"press 'R' to restart \"", ", SCREEN_WIDTH/", "6", ", ", "170", ");\n        g.drawString(", "\"press 'ESC' to quit \"", ", SCREEN_WIDTH/", "6", ",", "195", ");\n    }\n    \n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent e)", " {\n        ", "if", "(running) {move();checkApple();checkCollision();}\n        repaint();\n    }\n    \n    ", "public", " ", "class", " ", "KAdapter", " ", "extends", " ", "KeyAdapter", "{\n        ", "@Override", "\n        ", "public", " ", "void", " ", "keyPressed", "(KeyEvent e)", " {\n            ", "switch", "(e.getKeyCode()) {\n                ", "case", " KeyEvent.VK_LEFT:\n                    ", "if", "(direction!=", "'R'", ") {\n                        direction=", "'L'", ";\n                    }\n                    ", "break", ";\n                ", "case", " KeyEvent.VK_RIGHT:\n                    ", "if", "(direction!=", "'L'", ") {\n                        direction=", "'R'", ";\n                    }\n                    ", "break", ";\n                ", "case", " KeyEvent.VK_UP:\n                    ", "if", "(direction!=", "'D'", ") {\n                        direction=", "'U'", ";\n                    }\n                    ", "break", ";\n                ", "case", " KeyEvent.VK_DOWN:\n                    ", "if", "(direction!=", "'U'", ") {\n                        direction=", "'D'", ";\n                    }\n                    ", "break", ";\n                ", "case", " KeyEvent.VK_R:\n                    ", "if", "(!running) {\n                              ", "//需要解决的地方.实现按R键重开游戏", "\n                    }\n                ", "case", " KeyEvent.VK_ESCAPE:\n                    ", "if", "(!running) {\n                        System.exit(", "0", ");\n                    }\n            }\n        }\n    }\n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "参考：http://blog.csdn.net/tigertianx/article/details/17436291", "Konwledge_Point": "主程序", "Question": ["MFC多线程函数暂停计算以及恢复计算", ["线程能不能在主程序中暂停，主线程用什么函数控制子线程暂停，子线程暂停后怎么恢复计算？"]], "Tag": "程序设计"}
{"Answer": "那就在调用execl前   检查文件是否存在咯", "Konwledge_Point": "主程序", "Question": ["c++ execl函数执行不存在的文件段错误退出", ["如题，execl执行可执行文件，文件不存在或执行失败时，导致主程序段错误退出，怎么处理这个问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;B窗口你是怎么把主窗口的变量和B窗口的控件绑定的呢&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;回复&amp;#xff1a;&lt;br /&gt;不行啊&amp;#xff0c;B窗口的父窗口现在是A窗口了啊&amp;#xff0c;GetParent()得到的是A窗口指针&lt;br /&gt;照现在的逻辑&amp;#xff0c;需要再GetParent()一次&lt;br /&gt;((CMiracleDlg*)(GetParent()-&amp;gt;GetParent())-&amp;gt;P1_Min)&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["子窗口与主窗口的参数传递问题?", ["在主程序下设置了A 、B两个勾选框，勾选则弹出子窗口，通过指针的形式进行参数传递。", "如：DDX_Text(pDX, IDC_EDIT1, ((CMiracleDlg*)GetParent())->H1_1Min);", "\n", "我想把B做成A的下一级子窗口，而不是和A平行的窗口：即主界面先勾选A，弹出A；在A窗口中再勾选B，弹出B.", "因为菜鸟级别的水平，实验了同样的指针形式，结果在B窗编辑后，主窗口的对应参数没有变化，说明B窗的参数传递失败了！实在不明白什么原因，所以请大虾指点一下，怎样实现二级子窗口的设计。", "\n", "工程文件可传，请专家费心。谢谢"]], "Tag": "程序设计"}
{"Answer": "http://www.zybang.com/question/727bd0ad171df9ed6642b0b94183da7c.html", "Konwledge_Point": "主程序", "Question": ["将矩阵按照对角线的数据累加，并且把结果的一边转换为一个三角形矩阵", ["将矩阵按照对角线的数据累加，并且把结果的一边转换为一个三角形矩阵，在主程序调用怎么实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/619924220636156.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["刚刚自学C++在vs里面写的程序，biggies的定义被当成了重载，具体如下", ["biggies（）函数在主程序同一个文件内定义的话会被当成重载，而elimDups（）函数则不会，难道是因为elimDups（）函数没有在主程序中调用吗？同时如果将biggies（）函数放到另一个文件中定义就不会出现上面的问题。", "\n", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<vector>", "\n", "#", "include", " ", "<string>", "\n", "#", "include", " ", "<algorithm>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "elimDups", "(vector<string>& words)", ";\n", "void", " ", "biggies", "(vector <string>& words, vector<string>::size_type sz)", ";\n\n", "int", " ", "main", "(", "void", ")", " \n", "{\n    vector<string> words = { ", "\"the\"", ",", "\"quick\"", ",", "\"red\"", ",", "\"fox\"", ",", "\"jumps\"", ",", "\"over\"", ",", "\"the\"", ",", "\"slow\"", ",", "\"red\"", ",", "\"turtle\"", " };\n    ", "auto", " sz = ", "4", ";\n    ", "biggies", "(words,sz);\n\n    ", "return", " ", "0", ";\n}\n\n", "void", " ", "biggies", "(vector<string> words, vector<string>::size_type sz)", "\n", "{\n    ", "elimDups", "(words);\n    ", "stable_sort", "(words.", "begin", "(), words.", "end", "(), [](", "const", " string& a, ", "const", " string& b) {", "return", " a.", "size", "() < b.", "size", "(); });\n    ", "auto", " wc = ", "find_if", "(words.", "begin", "(), words.", "end", "(), [sz](", "const", " string &a) {", "return", " a.", "size", "() >= sz; });\n    for_each(wc, words.", "end", "(), [](", "const", " string& s) {cout << s << ", "\" \"", "; });\n    cout << endl;\n}\n\n", "void", " ", "elimDups", "(vector<string>& words)", " \n", "{\n    ", "sort", "(words.", "begin", "(), words.", "end", "());\n    ", "auto", " unique_end = ", "unique", "(words.", "begin", "(), words.", "end", "());\n    words.", "erase", "(unique_end, words.", "end", "());\n}\n"]], "Tag": "程序设计"}
{"Answer": "当一个请求访问jsp文件时，web服务器会把jsp翻译成servlet的java文件，再由编译器把servlet编译成class文件，最后由解释器解释执行。所以笼统的说：jsp文件会生成.java和.class文件。你既然已经编译了生成.class和.java文件那这个.jsp文件就几乎没什么用了，当然你也可以留着以便以后误删.class和.java文件时再用.jsp文件编译一下。", "Konwledge_Point": "主程序", "Question": ["Java 建立数组对象并调用生成.jsp文件是干什么的？", ["编写了两个源程序，主程序调用次程序中封装的方法（函数）模块，在主程序中将次程序中的类", "\n对象化， 调用结束后生成“次程序.jsp”文件，这个是干嘛的？打开发现里面只有一个初始化的helloworld的主函数。", "\n图片如下：", "\n数组对象建立是跟着黑马程序员的教学视屏敲的，他生成的.class。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般来讲,响应中断后,有硬件清标志和软件清标志两种.(如果硬件不能清标志,说明书会说明).&lt;/p&gt;\n&lt;p&gt;单片机要靠查询中断标志来判断是否要进入中断&amp;#xff0c;如果你不清除中断标志&amp;#xff0c;本次中断退出&amp;#xff0c;单片机又会检测到中断标志&amp;#xff0c;因此重复进入中断。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于51单片机的串口中断问题", ["51单片机如果不清除串口中断标志", "到底是一直在中断函数里面", "还是执行一次中断后，退回到主程序，检测到中断标志后，再进入中断"]], "Tag": "程序设计"}
{"Answer": "http://zhidao.baidu.com/link?url=bNfhYx_CpNbzhihs6Ms-PfvXo7jgT8rDC4KuLqx6AnXK6I0yXOZb7tXl_8BU_yPsM8RJjFT2wPeECSnkZxFVda", "Konwledge_Point": "主程序", "Question": ["怎么样通过函数比较两个数组        ", ["怎么样通过函数比较两个数组，输出第二个数组在第一个数组里存在的位置，返回对应下标给主程序？"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/haithink/article/details/18600309", "Konwledge_Point": "主程序", "Question": ["关于在动态库中使用消息循环的问题         ", ["关于在动态库中使用消息循环的问题，动态库中创建的消息循环的过程怎么才能传递给调用它的主程序呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def PI(number):\n    sn &amp;#61; 1\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(2,number&amp;#43;1):\n        n&amp;#61;(i-1)/(2*i-1)\n        sn*&amp;#61;n\n    return sn\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;0.0000001\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-attribute\"&gt;sum&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; x&amp;gt;a:\n    i&amp;#43;&amp;#61;1\n    &lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;PI(i)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(x)\n    sum &amp;#43;&amp;#61; x\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(sum&lt;span class=\"hljs-number\"&gt;*2&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;利用函数来求解π的值&amp;#xff0c;运行结果3.141592479958223&amp;#xff0c;随着a值变小&amp;#xff0c;结果越精确&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;sn&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-attribute\"&gt;sum&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(2,1000):\n    n&amp;#61;(i-1)/(2*i-1)\n    &lt;span class=\"hljs-attribute\"&gt;sn&lt;/span&gt;&amp;#61;n*sn\n    sum&amp;#43;&amp;#61;sn\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(sum&lt;span class=\"hljs-number\"&gt;*2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;利用循环来解决&amp;#xff0c;求得π的值为3.1415926535897922&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用Python求解π的值", ["根据下列公式求π的值。", "\n", "\n", "每一项的值用一个单独的函数完成，然后在主程序中调用。", "可以由用户设置求解精度，当项的值小于设定值时，程序停止计算，并输出π值。"]], "Tag": "程序设计"}
{"Answer": "函数的调用本来就和界面没有关系，可以用callbyname这个函数，传入函数名动态调用", "Konwledge_Point": "主程序", "Question": ["请问怎么在vb编程语言中实现不通过界面就可以切换调用的函数名？", ["请问怎么在vb编程语言中实现不通过界面就可以切换调用的函数名？主程序判断函数传入的是函数名，怎么切换？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在第二张图片的代码里第9行改成: self.image&amp;#61;pygame.image.load(image_name)试试&amp;#xff0c;load函数是image模块下的函数。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["解决 module 'pygame.image' has no attribute 'load'", ["看着网上的教学视频一步一步下来，当建立敌机的精灵后，在程序中调用这个精灵时就会报错，单独运行精灵程序时不会报错，在网上也找了相关的资料，但类似的好像也不对；", "\n\n", "主程序代码如下：", "\n\n", "\n\n", "调用的精灵程序如下：", "\n\n", "\n\n", "运行后报如下的错误:", "\n\n", "\n\n", "请各位大佬帮忙看看哪里不对"]], "Tag": "程序设计"}
{"Answer": "在Object.h，你定义的Callback是，不限制参数个数\r\n\r\n\r\n```\r\ntypedef void(Object::*CallBack)(...);\r\n```\r\n但是在实际调用的时候，你给的函数是App::onCall.App::inCall 的定义是\r\n\r\n\r\n```\r\n void App::onCall(Derive* d)\r\n```\r\n因此这里是有矛盾的。传递的函数指针的结构不一样。\r\n因此我把Object.h里面的CallBack定义改为：\r\n\r\n\r\n```\r\n typedef void(Object::*CallBack)(void *p);\r\n```\r\n并且随后的两个宏业修改了\r\n\r\n\r\n```\r\n #define EV_CB(_obj,_func) EventHandler{_obj,(CallBack)&amp;_func}\r\n#define EV_INVOKE(_cb,p) do{ \\\r\n\t\tif(_cb.object &amp;&amp; _cb.method) {\\\r\n\t\t\t(_cb.object-&gt;*_cb.method)(p);\\\r\n\t\t\t\t\t\t\t}\\\r\n\t}while(0)\r\n```\r\n\r\n\r\n\r\n运行可以通过，但是不知道是不是符合你的要求。", "Konwledge_Point": "主程序", "Question": ["c++通过成员函数指针 跨DLL回调的问题", ["最近写了个项目，里面遇到了一个函数跨模块回调的问题，由于项目本身比较复杂，所以简化了一下，但是还是能反映问题的。", "\n\n", "问题大致是这样：", "\n我从主程序(exe)中调用一个DLL(称为D)中的类，这个类又调用另一个DLL(称为B)中的类，在每一级的调用之前都已经传入了一个函数指针， 在B执行完之后通过回调返回到上一个DLL(D)，然后再通过回调最后返回到主程序。但是在从B返回到D之后，D的数据好像变了，导致D最终无法返回主程序。", "\n\n", "更具体一点：", "\nD是依赖于B的，而主程序对B和D都依赖。", "\n回调我是通过类的成员函数指针：", "\n\n", "typedef void(Object::*CallBack)(...);\n\n", "\n\n", "通过一个结构体来保存函数指针和该函数所属的对象。", "\n\n", "typedef struct \n{\n    Object* object;\n    CallBack method;\n} EventHandler;\n\n", "\n\n", "代码片段在这里：", "https://code.csdn.net/snippets/693435", "\n项目地址：", "https://code.csdn.net/jomoonrain2/c-lab", "\n\n", "我觉得最有问题是我定义的这个函数指针。", "\n但是问题是如果我没有跨DLL的话，貌似这样是没问题的。我知道跨模块调用应该挺复杂，虽然可以想其他的办法，但是这个问题如果搞不明白，吃饭都不香。。。", "\n\n", "希望各路高手不嫌弃我这仅有的60币，不吝赐教。"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/heyutao007/article/details/49738887", "Konwledge_Point": "主程序", "Question": ["请教VB里什么叫函数的代理方式的调用，怎么调用才能实现代理方式？", ["请教VB里什么叫函数的代理方式的调用，怎么调用才能实现代理方式？怎么使用函数的代理方式实现调用主程序的私有变量？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt;\ndef co(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt;.ascii_letters:\n            &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-literal\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;\nprint(co(input()))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["Python函数问题，望解答❤", ["问题：自定义一个函数，使该函数能够统计出传递过来的字符串中英文字母的个数，在主程序中调用该函数并输出统计结果。"]], "Tag": "程序设计"}
{"Answer": "这个需自己封装代码，更新操作记录下来才能实现", "Konwledge_Point": "主程序", "Question": ["如何从一个控件的定义中找到对应的事件里所有被更新的变量？        ", ["如何从一个控件的定义中找到对应的事件里所有被更新的变量？怎么自动根据这些变量更新位于exe主程序的对应的变量？"]], "Tag": "程序设计"}
{"Answer": "foreach (string s in File.ReadAllLines(\"c:\\\\1.txt\"))\r\n    listBox1.Items.Add(s);", "Konwledge_Point": "主程序", "Question": ["C#如何把txt里面的数据写入comboBox的Items集合里", ["Items里面我用来包含的元素是用户的账户。", "\n我想做的是，用户在登陆过软件并**关闭**后再次登陆的时候可以在comboBox的下拉列表（也即Items的元素）里选择曾经登陆过的账户。", "\n我的具体做法是，把comboBox输入的Text的值写入一个文档HistoryID.txt。在主程序中将txt文件内的数据读出来赋值给items，这样再次登录的时候就可以从下拉列表里面看到曾经登陆过的账号"]], "Tag": "程序设计"}
{"Answer": "http://www.zybang.com/question/8d7172ad35df6dcfad63391f41deaceb.html", "Konwledge_Point": "主程序", "Question": ["vb语言怎么通过函数跳转的方式代替call语句实现函数调用？               ", ["vb语言怎么通过函数跳转的方式代替call语句实现函数调用？能不能不通过函数名的方式传参数而是直接把主程序的变量送入函数？"]], "Tag": "程序设计"}
{"Answer": "小文件一下就压缩完成了, 所以可以, 但是文件大了, winrar会输出压缩的百分比信息, 需要将这些信息读取出来, 否则输出流阻塞了, winrar处于等待状态...\r\n\r\npublic static void RARFile(String RARCMD, String fileName, String RARRealpath) throws Exception {\r\n\r\n  if (fileName == null) {\r\n    return;\r\n  }\r\n  fileName = fileName.trim();\r\n\r\n  if (fileName.equals(\"\")) {\r\n    return;\r\n  }\r\n\r\n  String exec = RARCMD + \" \" + RARRealpath + \" \" + fileName;\r\n  Runtime rt = Runtime.getRuntime();\r\n  Process p = rt.exec(exec);\r\n  BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream(), \"gbk\"));\r\n  String line;\r\n  while ((line = br.readLine()) != null) {\r\n    //System.out.println(line);\r\n  }\r\n\r\n  br = new BufferedReader(new InputStreamReader(p.getErrorStream(), \"gbk\"));\r\n  while ((line = br.readLine()) != null) {\r\n    //System.err.println(line);\r\n  }\r\n  // 当前线程等待该process结束，既挂起主线程  \r\n  p.waitFor();\r\n}", "Konwledge_Point": "主程序", "Question": ["关于java调用winRAR命令行生成压缩包不能正常退出的问题", ["小弟菜鸟，现在在给客户做一个java程序调用winRAR命令行，生成一个压缩包，供用户下载的功能。现在这个功能倒是完成了，但是有个问题，那就是如果需要添加进压缩包的附件比较大，比如说超过了5M，则winrar程序一直在运行，不能正常退出，导致java主程序一直被挂起，用户打包下载rar压缩包失败。", "\n\n", "代码如下：", "\n[code=\"java\"]", "\n    /**", "\n     * 每次只是添加一个文件进压缩包，这样做没出现过问题", "\n     * @param RARCMD winrar进行压缩的命令行，格式为 D:\\Program Files\\WinRAR\\Rar.exe a -ep", "\n     * @param fileName 需要压缩的文件名(必须包含路径) ，如果该参数为null或者为空字符串，则直接返回，不做任何事", "\n     * @param RARRealpath 压缩后的压缩文件存放路径，包含文件名", "\n     * @throws Exception", "\n     */", "\n    public static void RARFile(String RARCMD, String fileName, String RARRealpath) throws Exception {", "\n\n", "    if (fileName == null) {\n        return;\n    }\n    fileName = fileName.trim();\n\n    if (fileName.equals(\"\")) {\n        return;\n    }\n\n    String exec = RARCMD + \" \" + RARRealpath + \" \" + fileName;\n    Runtime rt = Runtime.getRuntime();\n    Process p = rt.exec(exec);\n\n    // 当前线程等待该process结束，既挂起主线程\n    p.waitFor();\n}\n", "\n\n", "[/code]", "\n\n", "如果我这么调用：", "\n[code=\"java\"]", "\nRARFile(\"D:\\Program Files\\WinRAR\\Rar.exe a -ep\", \"d:\\字符串2\", \"d:\\download.rar\");", "\n[/code]", "\n其中待添加进压缩包“d:\\download.rar”的文件\"d:\\字符串2\"，如果文件\"d:\\字符串2\"，超过5M（没有精确测试多大，但是超过5M肯定就不行了），那么，程序执行到", "\n[code=\"java\"]p.waitFor();[/code]", "\n就不动弹了，打开任务管理器，可以看到Rar.exe一直在运行，不会自行结束。这样的话，java当前的线程一直被挂起，导致用户下载rar压缩包失败。", "\n但是相同的winRAR命令行，比如说：", "\n[code=\"java\"]", "\nD:\\Program Files\\WinRAR\\Rar.exe a -ep d:\\download.rar d:\\字符串2", "\n[/code]", "\n在cmd下执行，却任何问题没有，不用几秒就压缩完毕，打开任务管理器，Rar.exe也正常退出，在D盘根目录下，也正确的生成了“download.rar”压缩包。", "\n\n", "现在的问题就是，在cmd下执行rar命令行，和在java里执行相同的命令行，Rar.exe有不同的反应，如果需要压缩的文件比较大（超过5M），则在java里就不行。请教各位高手，这个问题应该怎么解决？", "\n\n", "对了，winRAR的版本是3.92"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;grade 分配的长度不对 后面要乘以n  上面只分了一个区间&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["（结构体）设一个班有若干学生(如10人)，请定义学生结构包含以下信息：学生学号、学生姓名、高级语言程序课的成绩，请写程序完成以下功能：", ["问题遇到的现象和发生背景", "\n", "（结构体） 设一个班有若干学生(如10人)，请定义学生结构包含以下信息：学生学号、学生姓名、高级语言程序课的成绩，请写程序完成以下功能：", "(1)定义函数以学生结构指针(指向学生数组)为参数，逐个录入该班集的学生信息；", "(2)定义函数以学生结构指针(指向学生数组)为参数，求出该班高级语言程序课的排名第一的学生，并输出该第一名学生的学号、姓名及高级语言程序课成绩。", "(3)在主程序中完成测试。", "我感觉我写的程序没有什么问题，但是没办法运行", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "struct", " ", "student", "\n{\n    ", "int", " number;\n    ", "char", " name[", "100", "];\n    ", "int", " score;\n};\n", "int", " ", "main", "()", "\n", "{\n    ", "struct", " ", "student", "* grade;\n    grade = (", "struct", " student*)", "malloc", "(", "sizeof", "(", "struct", " student));\n    ", "struct", " ", "student", " max;\n    ", "int", " n;\n    ", "scanf_s", "(", "\"%d\"", ", &n);\n    ", "for", " (", "int", " i = ", "1", "; i <= n; i++)\n    {\n        ", "scanf_s", "(", "\"%d\"", ", &grade[i].number);\n        ", "gets", "(grade[i].name);\n        ", "scanf_s", "(", "\"%d\"", ", &grade[i].score);\n    }\n    max = grade[", "1", "];\n    ", "for", " (", "int", " i = ", "1", "; i <= n; i++)\n    {\n        ", "if", " ((grade->score) > max.score)\n        {\n            max = grade[i];\n        }\n    }\n    ", "printf", "(", "\"%d\"", ", max.number);\n    ", "puts", "(max.name);\n    ", "printf", "(", "\"%d\"", ", max.score);\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "\n", "输入到这里没有办法输入了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码格式混乱&amp;#xff0c;不易排错。&lt;br /&gt;大概浏览了一下&amp;#xff0c;你的外部函数又创建了一个Tk根窗口&amp;#xff0c;这通常会带来很多问题&amp;#xff0c;组件的指向会发生混乱&amp;#xff0c;所以可能会造成一些变量的值与预期不同。一般都建议使用toplevel来创建子窗口。&lt;br /&gt;不过代码格式太混乱了&amp;#xff0c;没法帮你调试。所以仅供参考。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["如何在自定义函数中引用外部自定义函数时发生了问题？(语言-python)", ["问题遇到的现象和发生背景", "\n", "我在编一段类似于阅读器的程序时，在函数中引用外部自定义函数时发生了问题（与我想象的结果不同）。我发现即使把外部自定义函数的代码放入也不能解决问题，但是代码放入后如果在主程序中直接使用函数就没有问题。求解决办法，谢谢。", "\n", "问题相关代码，请勿粘贴截图", "\n", "程序模块", "\n", "import tkinter as tk", "import tkinter.messagebox as tkm", "import os", "import sys", "sys.path.append(r'C:\\Users\\Administrator\\Desktop\\Python\\自定义函数库')", "import 小说截取章节", "import 文件选择窗口", "import delete_dir", "top = tk.Tk()", "E1 = tk.Entry(top)", "def next_cha():  #下一章", "    global cha_choose,cha_list", "    if cha_choose<len(cha_list):", "        cha_choose+=1", "        get_text(cha_choose)", "def last_cha(): #上一章", "    global cha_choose,cha_list", "    if cha_choose>1:", "        cha_choose-=1", "        get_text(cha_choose)", "    else:", "        pass", "def get_text(cha_choose):   #获取章节内容", "    global cha_text,cha_path,cha_list", "    cha_name_have=cha_list[int(cha_choose)-1]", "    cha_name=cha_name_have[:-1]", "    w['text']=cha_name", "    with open (cha_path+'//'+str(int(cha_choose)-1)+'.txt',mode='r') as f:", "        text=f.read()", "    t.delete(0.0,'end')", "    t.pack() #让t可以瞬间反应", "    t.insert(0.0,text)", "    top.mainloop()", "def choose_text():  #阅读界面初始化", "    global top,cha_choose,cha_list,back", "    cha_choose_str=E1.get()", "    if not back:", "        if not cha_choose_str.isdigit():", "            tkm.showwarning('','请输入阿拉伯数字')", "            return", "        else:", "            if not 1<= int(cha_choose_str) <= len(cha_list):", "                tkm.showwarning('','请输入有效数字')", "                return", "    back=True", "    cha_choose=int(cha_choose_str)", "    E1.delete(0)", "    E1.pack_forget()", "    B['text']='返回章节列表'", "    B['command']=choose_cha_ini", "    B2.pack_forget()", "    B_last.pack()", "    B_next.pack()", "    get_text(cha_choose)", "    top.mainloop()", "\n", "def get_new():  #写入新书", "    global add", "    cha_have=''", "    new_path=E_path.get()", "    new_name=E_name.get()", "    text_list=小说截取章节.jiequ(new_path)", "    dir_path='C:/Users/Administrator/Desktop/Python/pykindle/'+new_name", "    if not os.path.exists(dir_path):", "        os.makedirs(dir_path)", "    else:", "        delete_dir.delete_dir(dir_path)", "        os.makedirs(dir_path)", "        name_str=''", "        with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='r',encoding='utf-8') as f:", "            name_list=f.readlines()", "            for x in name_list:", "                if x != new_name:", "                    name_str_have=name_str+x+'\\n'", "        name_str=name_str[:-1]", "        with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='w',encoding='utf-8') as f:", "            f.write(name_str)", "    for x in range(len(text_list[1])):", "        cha_have+=text_list[0][x]+'\\n'", "        text=text_list[1][x]", "        cha_path=dir_path+'/'+str(x)+'.txt'", "        with open(cha_path,mode='w') as f:", "            f.write(text)", "    cha=cha_have[:-1]", "    with open(dir_path+r'/章节列表.txt',mode='w') as f:", "        f.write(cha)", "    with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='a',encoding='utf-8') as f:", "        f.write(new_name+'\\n')", "    add.destroy()", "    book_choose_ini()", "def add_new():  #添加新书界面", "    global E_path,E_name,add", "    add=tk.Tk()", "    E_path = tk.Entry(add)", "    E_name = tk.Entry(add)", "    w_path=tk.Label(add, text='new path?')", "    w_name=tk.Label(add, text='new name?')", "    b_browse=tk.Button(add,text='browse',command=choose_browse)", "    b_new_finish=tk.Button(add, text='finish', command=get_new)", "    E_path.insert(0,'C://Users//Administrator//Desktop//')", "    w_path.pack()", "    E_path.pack()", "    b_browse.pack()", "    w_name.pack()", "    E_name.pack()", "    b_new_finish.pack()", "    add.mainloop()", "def choose_browse():", "    global add", "    path=文件选择窗口.main()", "    E_path.delete(0.0)", "    E_path.insert(0.0,path)", "def choose_cha_ini(): #章节选择界面初始化", "    global cha_list,cha_path,t,cha_text,book_choice,top,B2,book_title,book_list,back", "    if not back:", "        book_choice=E1.get()", "        if not book_choice.isdigit():", "            tkm.showwarning('','请输入阿拉伯数字')", "            return", "        else:", "            if not 1<= int(book_choice) <= len(book_list):", "                tkm.showwarning('','请输入有效数字')", "                return", "    back=True", "    B_next.pack_forget()", "    B_last.pack_forget()", "    book_name=book_list[int(book_choice)-1]        #获取书名", "    cha_path='C://Users//Administrator//Desktop//Python//pykindle//'+book_name[:-1]", "    with open(cha_path+'//章节列表.txt',mode='r') as f:", "        cha_text=f.read()", "        f.seek(0,0)", "        cha_list=f.readlines()   #获取章节列表", "    B2['text']='返回书目列表'", "    B2['command']=book_choose_ini", "    E1.delete(0)", "    t.pack_forget()", "    B.pack_forget()", "    B3.pack_forget()", "    E1.pack()", "    B2.pack()", "    B.pack()", "    t.pack()", "    w['text']='章节列表'", "    B['text']='选择'", "    B['command']=choose_text", "    t.delete(0.0,'end')", "    t.insert(0.0,'请输入阿拉伯数字\\n'+cha_text)", "    sc.pack(side=\"right\",fill='y')", "    t.pack(side=\"left\")", "    sc.config(command=t.yview)", "    top.mainloop()", "def booktitlelist():    #获取书目列表", "    y=0", "    title_str=''", "    with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='r',encoding='utf-8',errors='ignore') as f:", "        title=f.readlines()", "    for x in title:", "        y+=1", "        title_str=title_str+str(y)+':'+x", "    return title_str", "def book_choose_ini():  #书目选择界面初始化", "    global book_title,top,back,book_list", "    book_title=booktitlelist()", "    with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='r',encoding='utf-8',errors='ignore') as f:", "        book_list=f.readlines()", "    back=False", "    w['text']='书目列表'", "    B['command']=choose_cha_ini", "    B['text']='选择'", "    B2['text']='添加'", "    B2['command']=add_new", "    t.delete(0.0,'end')", "    t.insert(0.0,'请输入阿拉伯数字\\n'+book_title)", "    B2.pack_forget()", "    t.pack_forget()", "    w.pack_forget()", "    E1.pack_forget()", "    B.pack_forget()", "    B3.pack_forget()", "    w.pack()", "    E1.pack()", "    B.pack()", "    B2.pack()", "    B3.pack()", "    t.pack()", "    top.mainloop()", "def book_delete_ini():", "    global top,E1,book_list", "    delete_choose=E1.get()", "    E1.delete(0)", "    if not delete_choose.isdigit():", "        tkm.showwarning('','请输入阿拉伯数字')", "        return", "    else:", "        if not 1<= int(delete_choose) <= len(book_list):", "            tkm.showwarning('','请输入有效数字')", "            return", "    book_name=book_list[int(delete_choose)-1]", "    book_path='C://Users//Administrator//Desktop//Python//pykindle//'+book_name[:-1]", "    delete_dir.delete_dir(book_path)", "    name_str=''", "    with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='r',encoding='utf-8',errors='ignore') as f:", "        name_list=f.readlines()", "        for x in name_list:", "            if x != book_name:", "                name_str=name_str+x+'\\n'", "    name_str=name_str[:-1]", "    with open(r'C:\\Users\\Administrator\\Desktop\\Python\\pykindle\\书目列表.txt',mode='w',encoding='utf-8',errors='ignore') as f:", "        f.write(name_str)", "    book_choose_ini()", "#初始设置", "#top = tk.Tk()", "sc=tk.Scrollbar(top)", "sc.pack(side=\"right\",fill='y')", "t =tk.Text(top,yscrollcommand=sc.set,font=(24))", "t.pack(side=\"left\")", "t.pack_forget()", "sc.pack_forget()", "B2=tk.Button(top)", "B_last=tk.Button(top,anchor='nw',text='上一章',command=last_cha)", "B_next=tk.Button(top,anchor='ne',text='下一章',command=next_cha)", "B3=tk.Button(top,text='删除',command=book_delete_ini)", "B3.pack_forget()", "B_next.pack_forget()", "B_last.pack_forget()", "w = tk.Label(top)", "E1 = tk.Entry(top)", "B = tk.Button(top)", "E1.pack_forget()", "w.pack_forget()", "B.pack_forget()", "#开始", "book_choose_ini()", "\n", "外部自定义函数（文件选择窗口.py）", "\n", "import tkinter as tk", "import os", "import re", "import tkinter.messagebox as tkm", "\n", "def choose():", "    global root,v,path1", "    root=tk.Tk()", "    B_l=tk.Button(root,text='返回',command=back)", "    B_l.pack()", "    v = tk.StringVar()", "    dir_list=[]", "    dir_list=os.listdir(path1)", "    for x in dir_list:", "        b=tk.Radiobutton(root,text=x,variable=v,value=x,indicatoron=False,command=alpha)", "        b.pack(anchor='w')", "    root.mainloop()", "def alpha():", "    global root,v,path1,last_path,result", "    ", "name=v.get()", "    print(name)", "    path1+='", "\\'+name", "    root.destroy()", "    if os.path.isfile(path1):", "\n", "    ", "result", "=", "path1", "\n", "else", ":\n    ", "choose", "()", "\n", "\n", "def back():", "    global path1,root", "    print('3')", "    patt1=re.compile(r'", "\\[^\\]*$')", "    m=re.search(patt1,path1)", "    try:", "        path1=path1[:m.start()]", "    except:", "        pass", "    else:", "        root.destroy()", "        choose()", "def main():", "    global result,last_path,path1", "    path1=r'C:\\Users\\Administrator\\Desktop'", "    last_path=''", "    result=''", "    choose()", "    print(result)", "    return result", "\n", "运行结果及报错内容", "\n", "\n", "我点选按钮后还是这个界面，它本应关闭后不再出现，但它在关闭后又出现了 ", "\n", "文件选择窗口中print(name)是调试作用，但在主程序里，我选择文件后，name本应该等于文件名，但我发现它等于空格，于是出现了问题", "\n", "我的解答思路和尝试过的方法", "\n", "我本来以为是v作用域的问题，但我尝试后发现好像不是这个问题", "\n", "我想要达到的结果", "\n", "解决问题"]], "Tag": "程序设计"}
{"Answer": "不要用doModal，用create创建\r\n//百度一下。。。\r\n首先你要在资源面板添加一个对话框，假设ID为IDD_DIALOG1，类为CTestDlg\r\n则可以用指针的方式创建：\r\nCTestDlg* dlg;\r\ndlg = new CTestDlg;\r\ndlg-&gt;Create(IDD_DIALOG1); //非模态对话框ID号\r\ndlg-&gt;ShowWindow(SW_SHOW);", "Konwledge_Point": "主程序", "Question": ["MFC中的对话框可不可以两个对话框同时存在并且工作？", ["我需要编写一个程序，打开一个子对话框后，子对话框上的控件能正常工作，同时，母对话框（也就是主程序）上的控件同样正常工作？", "\n但是我调用子程序的Domodal()函数以后，母对话框总是挂起的，我该怎么办？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.如果是程序要独立部署的话&amp;#xff0c;可以定义一个环境变量&amp;#xff0c;通过获取环境变量&amp;#43;文件名的方式获取该文件。&lt;br /&gt;2.如果只是测试程序&amp;#xff0c;加入你要读取的文件&amp;#xff08;假设是a.cpp&amp;#xff09;也在assignment1目录下&amp;#xff0c;直接按你代码中的写就可以了&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ifstream infile(&lt;span class=\"hljs-string\"&gt;&amp;#34;a.cpp&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;或者 ifstream infile(&lt;span class=\"hljs-string\"&gt;&amp;#34;./a.cpp&amp;#34;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果a.cpp在assignment1的上一层目录&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ifstream infile(&lt;span class=\"hljs-string\"&gt;&amp;#34;../a.cpp&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果a.cpp在assignment1目录下的text文件夹下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ifstream infile(&lt;span class=\"hljs-string\"&gt;&amp;#34;./text/a.cpp&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["qt环境下c++如何用相对路径打开文件", ["如图是我的程序架构，assignment1是我的主程序，我在assignment1里想要打开一个文件，并调用用banish letter里的函数更改一些文件里的内容，我的问题就是如何用相对路径打开文件，文件应该存放在哪里才能被我的程序找到呢？", "\n", "上图是我打开文件的程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把输出星期几后面的内容写在一个函数里&amp;#xff0c;然后在main里调用它&amp;#xff0c;要不然后面 return week没有用。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["该怎么修改都是星期一，不知道错在哪里", ["问题：根据参数year、month和day显示是星期几，并在主程序里输入今天的日期进行验证。", "\n", "哪一天都是周一 不知道哪里有问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是之前学习的时写的。&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdlib.h&amp;#34;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-regexp\"&gt;/*预定义常量和类型*/&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;/*函数结果状态码*/&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     TRUE    1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     FALSE   0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     OK      1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     ERROR       0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     INFEASIBLE  -1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define     OVERFLOW    -2&lt;/span&gt;\n\n&lt;span class=\"hljs-regexp\"&gt;/*Status 是函数的类型&amp;#xff0c;其值是函数结果状态代码*/&lt;/span&gt;\n    \ntypedef int Status;\ntypedef char ElemType;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;单个元素类型\n\n&lt;span class=\"hljs-comment\"&gt;#define     MAXSIZE     100&lt;/span&gt;\n\ntypedef struct \n{\n    ElemType *elem; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数组指针elem指示顺序表的基地址\n    int length;\n}SqList;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;结构体类型名 &amp;#xff1a; SqList\n\n&lt;span class=\"hljs-regexp\"&gt;/*1、构造一个空的顺序表L*/&lt;/span&gt;  \nStatus InitList_Sq(SqList *L)     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;结构体指针变量作为形参 \n{     \n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;L.elem&amp;#61;new ElemType[MAXSIZE];   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;为顺序表分配空间\n    (*L).elem &amp;#61;(ElemType *)malloc(sizeof(ElemType)*MAXSIZE); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(*L).elem &amp;#61; L-&amp;gt;elem\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!L-&amp;gt;elem) &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(OVERFLOW);     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;异常处理&amp;#xff0c;存储分配失败\n    L-&amp;gt;length&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;空表长度为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    return OK; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;OK&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;/*2、销毁线性表L */&lt;/span&gt;\nvoid DestroyList(SqList *L) \n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L-&amp;gt;elem)\n    {\n        free(L-&amp;gt;elem); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;释放存储空间\n    }          \n}\n\n&lt;span class=\"hljs-regexp\"&gt;/*3、清空线性表L*/&lt;/span&gt;\nvoid ClearList(SqList *L) \n{\n    L-&amp;gt;length&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将线性表的长度置为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;/*4、求线性表L的长度*/&lt;/span&gt;\nint GetLength(SqList *L)\n{\n    return (L-&amp;gt;length); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;/*5、判断线性表L是否为空*/&lt;/span&gt;\nint IsEmpty(SqList *L)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L-&amp;gt;length&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) \n        return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n        return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-regexp\"&gt;/*6、顺序表的取值(根据位置i 获取相应位置数据元素的内容)*/&lt;/span&gt;\nint GetElem(SqList *L,int i,ElemType *e)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || i&amp;gt; L-&amp;gt;length)\n    return ERROR;          &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断i值是否合理&amp;#xff0c;若不合理&amp;#xff0c;返回ERROR\n    *e&amp;#61;L-&amp;gt;elem[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;第i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; 的单元存储着第i个数据\n    return OK;\n}\n&lt;span class=\"hljs-regexp\"&gt;/*7、顺序表的查找*/&lt;/span&gt;\nint LocateELem(SqList *L,ElemType e)\n{\n    int i;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;在线性表L中查找值为e的数据元素&amp;#xff0c;返回其序号(是第几个元素)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt; L-&amp;gt;length;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L-&amp;gt;elem[i]&amp;#61;&amp;#61;e) \n        return i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查找成功&amp;#xff0c;返回序号\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查找失败&amp;#xff0c;返回&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n}\n  \n&lt;span class=\"hljs-regexp\"&gt;/*8、顺序表的插入*/&lt;/span&gt;\nStatus ListInsert_Sq(SqList *L,int i ,ElemType e)\n{\n    int j;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || i&amp;gt;L-&amp;gt;length&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) return ERROR;             &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;值不合法\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(L-&amp;gt;length&amp;#61;&amp;#61;MAXSIZE) return ERROR;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;当前存储空间已满     \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;L-&amp;gt;length-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;gt;&amp;#61;i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j--) \n       L-&amp;gt;elem[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;L-&amp;gt;elem[j];    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;插入位置及之后的元素后移\n    L-&amp;gt;elem[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;e;                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将新元素e放入第i个位置\n    L-&amp;gt;length &amp;#43;&amp;#43;;                 &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;表长增&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    return OK;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;/*9、顺序表元素的删除*/&lt;/span&gt;\nStatus ListDelete_Sq(SqList *L,int Del_Loc)\n{\n    int j;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((Del_Loc &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)||(Del_Loc &amp;gt; L-&amp;gt;length)) return ERROR;     &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;值不合法\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61; Del_Loc; j &amp;lt;&amp;#61; L-&amp;gt;length-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)                   \n        L-&amp;gt;elem[j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; L-&amp;gt;elem[j];       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;被删除元素之后的元素前移  \n    --L-&amp;gt;length;                         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;表长减&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    return OK;\n}\nvoid ListInput(SqList *L, int n) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;顺序表数据的输入\n{\n    int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    L-&amp;gt;length &amp;#61; n;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;L-&amp;gt;length &amp;#61;%d&amp;#34;&lt;/span&gt;,L-&amp;gt;length);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;)\n    {\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;L-&amp;gt;elem[i]);\n    }\n    \n}\n\nvoid PrintSqList(SqList *L)   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;顺序表的元素输出\n{\n    int i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; L-&amp;gt;length;i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,L-&amp;gt;elem[i]);\n    }\n    putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-regexp\"&gt;/***************************************************/&lt;/span&gt;\nint main(int argc, char const *argv[])\n{\n    int length;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;顺序表的长度    \n    int i;\n    SqList L1;                &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 声明了结构体变量L \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (InitList_Sq(&amp;amp;L1))    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 结构体变量地址作为实参 \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;0 初始化顺序表成功&amp;#xff01;&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;1 请输入顺序表的长度&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;length);\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;2 请输入数据&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    ListInput(&amp;amp;L1, length);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;顺序表数据的输入\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;3 顺序表L1为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    PrintSqList(&amp;amp;L1);\n    \n    &lt;span class=\"hljs-regexp\"&gt;/*4、求线性表L的长度*/&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;4 L1.length &amp;#61; %d\\n&amp;#34;&lt;/span&gt;,GetLength(&amp;amp;L1));\n    \n    &lt;span class=\"hljs-regexp\"&gt;/*5、判断线性表L是否为空*/&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;5 断线性表L1是否为空 %d\\n&amp;#34;&lt;/span&gt;,IsEmpty(&amp;amp;L1));\n    \n    &lt;span class=\"hljs-regexp\"&gt;/*6、顺序表的取值(根据位置i 获取相应位置数据元素的内容)*/&lt;/span&gt;\n    ElemType a,*e&amp;#61;&amp;amp;a;\n    GetElem(&amp;amp;L1,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,e);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;6 L1的第2个元素是&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,*e);\n    \n    &lt;span class=\"hljs-regexp\"&gt;/*7、顺序表的查找*/&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;7 3是在L1中的位置&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,LocateELem(&amp;amp;L1,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));\n\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["顺序表如何既插入整数又插入字符？", ["程序功能：", "1． (菜单)主程序；", "2． 表的建立及初始化；", "3． 表的数据插入（插入的数据可是整数或字母）；", "4． 表的数据删除；", "5． 表的数据输出；"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ndef insertList(lst, &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;):\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(lst)\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n):\n        if lst[i] &amp;gt;&amp;#61; a:\n            lst.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(i,a)\n    if &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(lst) &amp;#61;&amp;#61; n:\n        lst.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(a)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["用Python编程实现这个问题", ["主程序中已有一个排好序的列表，请编写函数insertList，将从键盘接收的整数按原来从小到大的排序规律插入到该列表中。"]], "Tag": "程序设计"}
{"Answer": "需要的，不然主程序怎么获得控件内包含的类型呢？", "Konwledge_Point": "主程序", "Question": ["Visula Basic关于控件嵌套的问题", ["想自己定义一个用户控件，在控件里面动态加载一个OCX，作为窗体界面的控件，主程序需要加载这个OCX么？如果不加载怎么判断呢？"]], "Tag": "程序设计"}
{"Answer": "两种方法：\r\n1.用 strncpy_s函数代替strncpy函数\r\n2.右键你的工程名，选择属性-&gt;c/c++-&gt;预处理器-&gt;预处理器定义中加入_CRT_SECURE_NO_WARNINGS", "Konwledge_Point": "主程序", "Question": ["为什么不让我用strncpy？这报错是什么意思?这程序该怎么写？", ["\n/* 2.cpp .2. 编写一个函数，", "\n把字符串中所有的字符都前移一个位置，", "\n而串中的第一个字符移到最后。并编写主程序进行测试。*/", "\n\n", "\n#include <iostream>\n#include <string.h>\n#include <cstring>\nusing namespace std;\n//#1.返回前移后的字符串\n/*\nstring move(string s)\n{\n\n}\n*/\n//#2.字符串数组作为函数参数\nvoid move(char* s)\n{\n    int n = strlen(s);\n    char* str = new char[n];\n    strncpy(str, s, n - 1);\n    strncpy(str, s, 1);\n    strncpy(s, str, n);\n    delete[]str;\n}\n/*string转换成char的方法\nconst char* pstr=str.c_str();\n*/\nint main()\n{\n    string s;\n    cin >> s;\n    const char *str = s.c_str();\n    move(str);\n    cout << str << endl;\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳!谢谢&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def &lt;span class=\"hljs-title function_\"&gt;runnian&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;):\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; and &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) or &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}是闰年&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;format&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}不是闰年&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;format&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;))\n        \n&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title function_\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-title function_\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-title function_\"&gt;runnian&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["调用函数判断闰年与否", ["编写函数runnian，根据“四年闰百年不闰，四百年又闰”判断是否闰年。在主程序输入一个年份，调用runnian函数判断其是否为闰年，并输出判断结果。", "注意：缩进格式正确输入。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;类实例化以后&amp;#xff0c;不论你怎么都可以调用类的控件&amp;#xff0c;函数里面你可以传参啊&lt;br /&gt;如果不使用类&amp;#xff0c;ui还是一个类&amp;#xff0c;实例化以后&amp;#xff0c;直接调用就行。&lt;br /&gt;面向对象编程&amp;#xff0c;代码多了&amp;#xff0c;最好是分文件的。所以最后实际上很少会再单独写一个函数去调用主界面的控件&amp;#xff0c;都是写成类的形式。&lt;br /&gt;self.setupUi(self)就是对界面初始化&lt;br /&gt;单独Ui文件(ui_form.py)&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Ui_Widget&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;object&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setupUi&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, Widget&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; Widget.objectName():\n            Widget.setObjectName(&lt;span class=\"hljs-string\"&gt;u&amp;#34;Widget&amp;#34;&lt;/span&gt;)\n        Widget.resize(&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;)\n        self.frame &amp;#61; QFrame(Widget)\n        self.frame.setObjectName(&lt;span class=\"hljs-string\"&gt;u&amp;#34;frame&amp;#34;&lt;/span&gt;)\n        self.frame.setGeometry(QRect(&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;641&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;351&lt;/span&gt;))\n        self.frame.setFrameShape(QFrame.StyledPanel)\n        self.frame.setFrameShadow(QFrame.Raised)\n        self.tsb &amp;#61; QPushButton(self.frame)\n        self.tsb.setObjectName(&lt;span class=\"hljs-string\"&gt;u&amp;#34;tsb&amp;#34;&lt;/span&gt;)\n        self.tsb.setGeometry(QRect(&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;82&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;))\n        self.info &amp;#61; QTextBrowser(self.frame)\n        self.info.setObjectName(&lt;span class=\"hljs-string\"&gt;u&amp;#34;info&amp;#34;&lt;/span&gt;)\n        self.info.setGeometry(QRect(&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;192&lt;/span&gt;))\n\n        self.retranslateUi(Widget)\n\n        QMetaObject.connectSlotsByName(Widget)\n    &lt;span class=\"hljs-comment\"&gt;# setupUi&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;retranslateUi&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, Widget&lt;/span&gt;):\n        Widget.setWindowTitle(QCoreApplication.translate(&lt;span class=\"hljs-string\"&gt;&amp;#34;Widget&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;u&amp;#34;Widget&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;))\n        self.tsb.setText(QCoreApplication.translate(&lt;span class=\"hljs-string\"&gt;&amp;#34;Widget&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;u&amp;#34;PushButton&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;主程序&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# This Python file uses the following encoding: utf-8&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; sys\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; time\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide6.QtWidgets &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QApplication, QWidget,QHBoxLayout\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide6.QtCore &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QThread\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; thread &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; TestSpeed\n&lt;span class=\"hljs-comment\"&gt;# Important:&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# You need to run the following command to generate the ui_form.py file&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     pyside6-uic form.ui -o ui_form.py, or&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     pyside2-uic form.ui -o ui_form.py&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; ui_form &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_Widget\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Widget&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;QWidget&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, parent&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;().__init__(parent)\n        self.ui &amp;#61; Ui_Widget()\n        self.ui.setupUi(self)\n        main_layout&amp;#61;QHBoxLayout()\n        self.ui.frame.setLayout(main_layout)\n        main_layout.addWidget(self.ui.tsb)\n        main_layout.addWidget(self.ui.info)\n        self.ui.tsb.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;测速&amp;#34;&lt;/span&gt;)\n        self.ui.tsb.clicked.connect(self.speed)\n        &lt;span class=\"hljs-comment\"&gt;#线程初始化&amp;#xff0c;子线程完成测试后&amp;#xff0c;发信号给主界面。&lt;/span&gt;\n        self.thread &amp;#61; QThread()\n        self.test_thread&amp;#61;TestSpeed(self)\n        self.test_thread.moveToThread(self.thread)\n        self.test_thread._signal.connect(self.reflash)\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;speed&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.ui.tsb.setEnabled(&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)\n        self.ui.info.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;测速中。。。&amp;#39;&lt;/span&gt;)\n        self.test_thread.start()\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;reflash&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.ui.info.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;测速完毕&amp;#39;&lt;/span&gt;)\n        self.ui.tsb.setEnabled(&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setText&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Widget&lt;/span&gt;):\n    Widget.ui.info.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;准备测速&amp;#34;&lt;/span&gt;)\n    Widget.ui.tsb.setEnabled(&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:\n    app &amp;#61; QApplication(sys.argv)\n    widget &amp;#61; Widget()\n    setText(widget)\n    widget.show()\n    sys.exit(app.&lt;span class=\"hljs-built_in\"&gt;exec&lt;/span&gt;())\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;子线程&amp;#xff1a;(thread.py)&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide6.QtCore &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Signal,QThread\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; time\n&lt;span class=\"hljs-comment\"&gt;#import datetime&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;TestSpeed&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;QThread&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;#  通过类成员对象定义信号对象&lt;/span&gt;\n    _signal &amp;#61; Signal()\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,parent&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(TestSpeed, self).__init__()\n        self.parent&amp;#61;parent\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__del__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.wait()\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;run&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        time.sleep(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;):\n\n            self.parent.ui.info.append(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}&lt;/span&gt;秒&amp;#34;&lt;/span&gt;)\n            time.sleep(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        self._signal.emit()\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;最终效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/492356557376193.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/795688277376128.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/362498277376158.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于python图形化界面pyside6的UI问题", ["我使用pyside6的QT Designer制作了图形界面，并且转换成了py文件，在主程序中使用“类”可以正常工作，但我不想把整个程序都写到这一个类里面，如果写外部函数又调用不了类里面的按钮，文本框等（比如禁用按钮，设置文本显示）。", "我的问题是：", "1如何不使用“类”来实现 按钮连接函数 和 窗口的正常显示与工作，请给出简明的示例代码。", "2如果用“类”，那么如何用外部函数来设置按钮禁用和文本内容显示，请给出简明示例代码。", "3主程序中的self.setupUi(self)是什么意思？（为什么要写这句）", "十分感谢！", "\n", "主程序", "\n", "class", " ", "Widget", "(QWidget, Ui_Form):\n    ", "def", " ", "__init__", "(", "self", "):  \n        ", "super", "().__init__()  \n        self.setupUi(self)\n        self.tsb.clicked.connect(self.testspeed)  \n\n    ", "def", " ", "speed", "(", "self", "):\n        self.cs.setText(", "\"测速中\"", ") \n        self.cs.setEnabled(", "False", ")  \n        self.info.setText(", "'测速中。。。'", ")\n        self.sccs_thread = Thread(target=self.sccs)  ", "# 建立线程实例", "\n        self.sccs_thread.start()  ", "# 开启线程", "\n        \n", "\n", "界面文件", "\n", "class", " ", "Ui_Form", "(", "object", "):\n    ", "def", " ", "setupUi", "(", "self, Form", "):\n        ", "if", " ", "not", " Form.objectName():\n            Form.setObjectName(", "u\"Form\"", ")\n        Form.resize(", "989", ", ", "997", ")\n        ", "#测速按钮", "\n        self.tsb = QPushButton(Form)\n        self.tsb.setObjectName(", "u\"cs\"", ")\n        self.tsb.setFont(font)\n        ", "#信息显示窗口", "\n        self.info = QTextBrowser(Form)\n        self.info.setObjectName(", "u\"info\"", ")\n        self.info.setFont(font)\n\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n public class paopao\r\n{\r\npublic int[] strToInt(string[] arr)\r\n{\r\nreturn arr.Select(x =&gt; int.Parse(x)).ToArray();\r\n}\r\n\r\npublic int[] maopao(int[] arr1)\r\n{\r\n    int[] arr = arr1.ToArray();\r\n\t\tfor (int j = 0; j &lt; arr.Length - 1; j++)\r\n\t\t{\r\n    for (int i = j; i &lt; arr.Length - 1; i++)\r\n    {\r\n        if (arr[i] &gt; arr[i + 1])\r\n        {\r\n            int k = arr[i];\r\n            arr[i] = arr[i + 1];\r\n            arr[i + 1] = k;\r\n        }\r\n    }\r\n\t\t}\r\n\t\treturn arr;\r\n}\r\n\r\n调用\r\n\r\nstring strArr = shuzu.Text;\r\n    string[] strarr = strArr.Split(',');\r\n    paopao arr = new paopao();\r\n    int[] intArr = arr.strToInt(strarr);\r\nint[] result = arr,maopao(intArr);\r\nresult.Text = \"result:\" + string.Join(\",\" , result.Select(x =&gt; x.ToString()));\r\n```", "Konwledge_Point": "主程序", "Question": ["c#冒泡程序用到public class的时候，怎么返回整个数组？", ["我用的vs2012，代码如下，可能还会有其他问题。。。", "\n\n", "    ///下面是自定义类\n        public class paopao\n", "\n\n", "{", "\n    public int[] strToInt(string[] arr)", "\n    {", "\n        int[] output = new int[arr.Length];", "\n        for (int i = 0; i < arr.Length; i++)", "\n        {", "\n            output[i] = int.Parse(arr[i]);", "\n        }", "\n        return output;", "\n    }", "\n\n", "public int maopao(int[] arr)\n{\n    for (int i = 0; i < arr.Length - 1; i++)\n    {\n        if (arr[i] > arr[i + 1])\n        {\n            int k = arr[i];\n            arr[i] = arr[i + 1];\n            arr[i + 1] = k;\n        }\n    }\n", "\n\n", "///此处缺少return语句，需要return冒泡排序后的数组，不知道怎么弄", "\n\n", "///下为主程序", "\npublic partial class paixv : System.Web.UI.Page", "\n{", "\n    protected void Page_Load(object sender, EventArgs e)", "\n    {", "\n\n", "}\nprotected void maopao_Click(object sender, EventArgs e)\n{\n    string strArr = shuzu.Text;\n    string[] strarr = strArr.Split(',');\n    paopao arr = new paopao();\n    int[] intArr = arr.strToInt(strarr);\n", "\n\n", "///上面那一句也有报过错，现在不知道对不对", "\n       result.Text = \"result:\" + arr.ToString();", "\n\n", "}\n", "\n\n", "}", "\n\n", "}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您可以尝试调用系统函数&amp;#xff0c;把matlibplot的窗口作为C&amp;#43;&amp;#43;窗口的子窗口&amp;#xff0c;然后再后续操作。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用c++调用python脚本，python脚本生成的界面能集成到c++的界面上吗？", ["主程序是：c++  vs2010 mfc工程", "python脚本实现一个算法，会使用matlibplot生成一个界面。", "\n", "我想将python生成的界面集成到mfc工程中，不知道有没有方法？"]], "Tag": "程序设计"}
{"Answer": "通常你描述的情况，是因为你点击的按键的事件方法没有执行完，程序没有从方法里返回，所以主界面操作不了。\r\n而你的这个button2_Click 事件响应方法里面有很多sql的操作，你可以添加一些断点判断程序卡在哪个地方了。", "Konwledge_Point": "主程序", "Question": ["c# 写的windows 窗体应用程序 运行后 界面卡主不动 程序照样运行", ["    本人小白菜菜鸟，刚学会c# 不久，用vs2015写了几个程序，大致内容：循环读取文件夹内word信息，\n    界面两个按钮，开始和停止。点开始后，程序运行，然后界面就卡主不动了，点停止没反应，点窗体上的叉叉也没反应，只能任务管理器结束进程。请问这是为什么？\n    Ps:代码里面没有timer类的控件。\n    部分代码如下：\n", "\n\n", "其中的doc和app是全局变量", "\n                private static Word.Application app = new Word.Application(); ", "\n        private static Word.Document doc = null;", "\n\n", " private void button2_Click(object sender, EventArgs e)\n        {\n            var files = Directory.GetFiles(wordPath, \"*.doc\");\n            foreach (var file in files)\n            {\n                button2.Text = \"进行中。。。\";\n                wordName = file.Replace(textBox2.Text, \"\");\n                textBox1.Text = wordName;\n                textBox1.Refresh();\n                string paperName = wordName.Replace(\".doc\", \"\");\n                if (Sql.existsExam(paperName) > 0) {\n                    listBox2.Items.Add ( \"此试卷已存在！\"+ file.ToString());\n                    listBox2.Refresh();\n                    continue;\n                }\n                try\n                {\n                    exam_id=Sql.getExamId();\n                    wordNameSave = wordName.Substring(0, wordName.IndexOf(\".\"));\n                    String path = @\"d:\\word/img_hy/\" + exam_id;\n                    BaseClass.createFile(path);\n                    BaseClass.writeFile(\"d:\\\\word\\\\log.txt\", \"**********************************************************************\", 0, 1);\n                    string log = file+\"         \"+ DateTime.Now.ToString();\n                    BaseClass.writeFile(\"d:\\\\word\\\\log.txt\",log, 0, 1);\n                    doc = app.Documents.Open(file);   //一会要记录word打开的文档\n                    string strContent = ReadWordMian.readWordMain(app, doc, path, wordNameSave);\n                    Sql.insertExam(ReadWordMian.paperHead,exam_id, grade_id, subject_id);\n                    cutExercises(strContent);\n                    log = \"we have a finish !   \" + wordNameSave + \"   \" + DateTime.Now.ToString();\n                    //Console.WriteLine(DateTime.Now.ToString());\n                    BaseClass.writeFile(\"d:\\\\word\\\\log.txt\", log, 0, 1);\n                }\n                catch (Exception err) {\n                    button2.Text = \"批量入库\";\n                    //listBox2.Items.Add(\"异常：\"+\"此文件读取异常\"+ file+\"  \"+err);\n                    BaseClass.writeFile(\"d:\\\\word\\\\log.txt\", \"异常：\" + \"此文件读取异常\" + file + \"  \" + err, 0, 1);\n                }\n            }\n            // listBox2.Items.Add(error_string);\n            doc.Close();\n            System.Runtime.InteropServices.Marshal.ReleaseComObject(doc);\n            app.Quit();\n            System.Runtime.InteropServices.Marshal.ReleaseComObject(app);\n            button2.Text = \"批量入库\";\n        }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;只是按下左键&amp;#xff0c;并不点击任何按钮是吗&amp;#xff0c;你可以搜一搜&amp;#xff1a;鼠标钩子、全局鼠标钩子&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["C++桌面应用程序如何自定义消息？", ["我有一个函数F，假如想要实现【如果用户按下鼠标左键，那么执行函数F】，那么我该怎么做？", "我搜索【C++桌面应用程序 事件】，发现C++中事件称为消息。", "我搜索【C++如何自定义消息】，搜到了一些文章，但是没看懂。", "我搜索【WndProc用法】，没搜到有帮助的信息。", "因此我来提问了。", "我希望回答者能直接告诉我如何修改代码。", "以下是VS2019新建C++桌面程序自带的代码：", "\n", "// WindowsProject6.cpp : 定义应用程序的入口点。", "\n", "//", "\n\n", "#", "include", " ", "\"framework.h\"", "\n", "#", "include", " ", "\"WindowsProject6.h\"", "\n\n", "#", "define", " MAX_LOADSTRING ", "100", "\n\n", "// 全局变量:", "\n", "HINSTANCE", " hInst", ";                                // 当前实例", "\nWCHAR szTitle[MAX_LOADSTRING]", ";                  // 标题栏文本", "\nWCHAR szWindowClass[MAX_LOADSTRING]", ";            // 主窗口类名", "\n\n", "// 此代码模块中包含的函数的前向声明:", "\nATOM                MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")", ";", "\nBOOL                InitInstance(", "HINSTANCE", ", ", "int", ")", ";", "\nLRESULT CALLBACK    WndProc(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\nINT_PTR CALLBACK    About(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\n\n", "int", " APIENTRY wWinMain(_In_ ", "HINSTANCE", " ", "hInstance", ",\n                     _In_opt_ ", "HINSTANCE", " hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ ", "int", "       nCmdShow)\n{\n    UNREFERENCED_PARAMETER(hPrevInstance)", ";", "\n    UNREFERENCED_PARAMETER(lpCmdLine)", ";", "\n\n    ", "// ", "TODO:", " 在此处放置代码。", "\n\n    ", "// 初始化全局字符串", "\n    LoadStringW(", "hInstance", ", IDS_APP_TITLE, szTitle, MAX_LOADSTRING)", ";", "\n    LoadStringW(", "hInstance", ", IDC_WINDOWSPROJECT6, szWindowClass, MAX_LOADSTRING)", ";", "\n    MyRegisterClass(", "hInstance", ")", ";", "\n\n    ", "// 执行应用程序初始化:", "\n    ", "if", " (!InitInstance (", "hInstance", ", nCmdShow))\n    {\n        ", "return", " FALSE", ";", "\n    }\n\n    HACCEL hAccelTable = LoadAccelerators(", "hInstance", ", MAKEINTRESOURCE(IDC_WINDOWSPROJECT6))", ";", "\n\n    MSG msg", ";", "\n\n    ", "// 主消息循环:", "\n    ", "while", " (GetMessage(&msg, nullptr, ", "0", ", ", "0", "))\n    {\n        ", "if", " (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))\n        {\n            TranslateMessage(&msg)", ";", "\n            DispatchMessage(&msg)", ";", "\n        }\n    }\n\n    ", "return", " (", "int", ") msg.wParam", ";", "\n}\n\n\n\n", "//", "\n", "//  函数: MyRegisterClass()", "\n", "//", "\n", "//  目标: 注册窗口类。", "\n", "//", "\nATOM MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")\n{\n    WNDCLASSEXW wcex", ";", "\n\n    wcex.cbSize = sizeof(WNDCLASSEX)", ";", "\n\n    wcex.style          = CS_HREDRAW | CS_VREDRAW", ";", "\n    wcex.lpfnWndProc    = WndProc", ";", "\n    wcex.cbClsExtra     = ", "0", ";", "\n    wcex.cbWndExtra     = ", "0", ";", "\n    wcex.hInstance      = ", "hInstance", ";", "\n    wcex.hIcon          = LoadIcon(", "hInstance", ", MAKEINTRESOURCE(IDI_WINDOWSPROJECT6))", ";", "\n    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW)", ";", "\n    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+", "1", ")", ";", "\n    wcex.lpszMenuName   = MAKEINTRESOURCEW(IDC_WINDOWSPROJECT6)", ";", "\n    wcex.lpszClassName  = szWindowClass", ";", "\n    wcex.hIconSm        = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL))", ";", "\n\n    ", "return", " RegisterClassExW(&wcex)", ";", "\n}\n\n", "//", "\n", "//   函数: InitInstance(HINSTANCE, int)", "\n", "//", "\n", "//   目标: 保存实例句柄并创建主窗口", "\n", "//", "\n", "//   注释:", "\n", "//", "\n", "//        在此函数中，我们在全局变量中保存实例句柄并", "\n", "//        创建和显示主程序窗口。", "\n", "//", "\nBOOL InitInstance(", "HINSTANCE", " ", "hInstance", ", ", "int", " nCmdShow)\n{\n   hInst = ", "hInstance", "; // 将实例句柄存储在全局变量中", "\n\n   ", "HWND", " ", "hWnd", " = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,\n      CW_USEDEFAULT, ", "0", ", CW_USEDEFAULT, ", "0", ", nullptr, nullptr, ", "hInstance", ", nullptr)", ";", "\n\n   ", "if", " (!", "hWnd", ")\n   {\n      ", "return", " FALSE", ";", "\n   }\n\n   ShowWindow(", "hWnd", ", nCmdShow)", ";", "\n   UpdateWindow(", "hWnd", ")", ";", "\n\n   ", "return", " TRUE", ";", "\n}\n\n", "//", "\n", "//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)", "\n", "//", "\n", "//  目标: 处理主窗口的消息。", "\n", "//", "\n", "//  WM_COMMAND  - 处理应用程序菜单", "\n", "//  WM_PAINT    - 绘制主窗口", "\n", "//  WM_DESTROY  - 发送退出消息并返回", "\n", "//", "\n", "//", "\nLRESULT CALLBACK WndProc(", "HWND", " ", "hWnd", ", UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    ", "switch", " (message)\n    {\n    ", "case", " WM_COMMAND:\n        {\n            ", "int", " wmId = LOWORD(", "wParam", ")", ";", "\n            ", "// 分析菜单选择:", "\n            ", "switch", " (wmId)\n            {\n            ", "case", " IDM_ABOUT:\n                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), ", "hWnd", ", About)", ";", "\n                ", "break", ";", "\n            ", "case", " IDM_EXIT:\n                DestroyWindow(", "hWnd", ")", ";", "\n                ", "break", ";", "\n            ", "default", ":\n                ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n            }\n        }\n        ", "break", ";", "\n    ", "case", " WM_PAINT:\n        {\n            PAINTSTRUCT ps", ";", "\n            ", "HDC", " ", "hdc", " = BeginPaint(", "hWnd", ", &ps)", ";", "\n            ", "// ", "TODO:", " 在此处添加使用 hdc 的任何绘图代码...", "\n            EndPaint(", "hWnd", ", &ps)", ";", "\n        }\n        ", "break", ";", "\n    ", "case", " WM_DESTROY:\n        PostQuitMessage(", "0", ")", ";", "\n        ", "break", ";", "\n    ", "default", ":\n        ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n    }\n    ", "return", " ", "0", ";", "\n}\n\n", "// “关于”框的消息处理程序。", "\nINT_PTR CALLBACK About(", "HWND", " hDlg, UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    UNREFERENCED_PARAMETER(", "lParam", ")", ";", "\n    ", "switch", " (message)\n    {\n    ", "case", " WM_INITDIALOG:\n        ", "return", " (INT_PTR)TRUE", ";", "\n\n    ", "case", " WM_COMMAND:\n        ", "if", " (LOWORD(", "wParam", ") == IDOK || LOWORD(", "wParam", ") == IDCANCEL)\n        {\n            EndDialog(hDlg, LOWORD(", "wParam", "))", ";", "\n            ", "return", " (INT_PTR)TRUE", ";", "\n        }\n        ", "break", ";", "\n    }\n    ", "return", " (INT_PTR)FALSE", ";", "\n}\n", "\n", "我希望新增【如果用户按下鼠标左键，那么执行函数F】这一功能。我该如何修改上述代码？", "如果你嫌麻烦、不想修改代码，那么你可以用文字大致描述一下都有哪些地方需要修改，比如是否需要引入新的头文件、除了WndProc函数之外是否还有其他地方需要修改。"]], "Tag": "程序设计"}
{"Answer": "如果楼主是用scrapy框架爬的话，可以在settings.py加上User-Agent信息，这样应该就可以了", "Konwledge_Point": "主程序", "Question": ["scrapy爬虫出现 DEBUG: Crawled (404)", ["为什么会出现解析页面错误呢？", "\n\n", "2019-04-17 16:14:46 [scrapy.core.engine] DEBUG: Crawled (404) <GET http://www.xxx.xx/xxgk/xwzx/zwdt/None> (referer: http://www.xxx.xx/xxgk/xwzx/zwdt/index_1.htm)\n2019-04-17 16:14:46 [scrapy.core.engine] DEBUG: Crawled (404) <GET http://www.xxx.xx/xxgk/xwzx/zwdt/None> (referer: http://www.xxx.xx/xxgk/xwzx/zwdt/index_1.htm)\n2019-04-17 16:14:46 [scrapy.core.engine] DEBUG: Crawled (404) <GET http://www.xxx.xx/xxgk/xwzx/zwdt/None> (referer: http://www.xxx.xx/xxgk/xwzx/zwdt/index_1.htm)\n2019-04-17 16:14:46 [scrapy.core.engine] DEBUG: Crawled (404) <GET http://www.xxx.xx/xxgk/xwzx/zwdt/None> (referer: http://www.xxx.xx/xxgk/xwzx/zwdt/index_1.htm)\n2019-04-17 16:14:46 [scrapy.core.engine] DEBUG: Crawled (404) <GET http://www.xxx.xx/xxgk/xwzx/zwdt/None> (referer: http://www.xxx.xx/xxgk/xwzx/zwdt/index_1.htm)\n\n", "\n\n", "代码在上边，解析一个页面为什么返回了 页面的None，？是网站监测到爬虫了吗？scrapy需要再哪更改headers呢 我尝试了在主程序里更改 然后yield 然而失败了", "\n谢谢各位"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nclass List\r\n{\r\nprivate:\r\n\tint * arr;\r\n\tint length;\r\n\tint arrsize;\r\npublic:\r\n\tList()\r\n\t{\r\n\t\tarrsize = 10;\r\n\t\tarr = new int[arrsize];\r\n\t}\r\n\tvoid Add(int value)\r\n\t{\r\n\t\tif (length == arrsize)\r\n\t\t{\r\n\t\t\tint oldsize = arrsize;\r\n\t\t\tint * oldarr = arr;\r\n\t\t\tarrsize += 10;\r\n\t\t\tarr = new int[arrsize];\r\n\t\t\tmemset(arr, 0, arrsize);\r\n\t\t\tmemcpy_s(arr, arrsize * sizeof(int), oldarr, oldsize * sizeof(int));\r\n\t\t\tdelete[](oldarr);\r\n\t\t}\r\n\t\tlength++;\r\n\t\tarr[length - 1] = value;\r\n\t}\r\n\tint GetLength()\r\n\t{\r\n\t\treturn length;\r\n\t}\r\n\tint IndexOf(int index)\r\n\t{\r\n\t\treturn arr[index];\r\n\t}\r\n};\r\n\r\nint main(int argc, _TCHAR* argv[])\r\n{\r\n\tList list = List();\r\n\tfor (int i = 0; i &lt; 35; i++)\r\n\t{\r\n\t\tlist.Add(i);\r\n\t}\r\n\tfor (int i = 0; i &lt; list.GetLength(); i++)\r\n\t\tcout &lt;&lt; list.IndexOf(i) &lt;&lt; endl;\r\n\treturn 0;\r\n}\r\n\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["使用VC++语言用数组实现集合怎么做？", ["提示，定义一个数组，定义Add IndexOf GetLength三个函数。当数组容纳不下的时候，要求能够扩充数组。编写一个主程序调用如上功能，并且实现对数组的遍历。"]], "Tag": "程序设计"}
{"Answer": "a是一个对象，是Arr[]类型，a[0]也是一个对象。是Arr类型\r\n前者实例化了一个Arr[]对象，后者实例化了一个Arr对象。", "Konwledge_Point": "主程序", "Question": ["请问C#这样定义从什么时候开始分配内存", ["class Arr{", "\nArr()", "\n{}", "\n}", "\n\n", "主程序：", "\nArr[] a;", "\na=new Arr[1];//此处是分配引用内存？", "\na[0]=new Arr;//此处分配内存？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;dispose();&lt;br /&gt;new 打字游戏();&lt;br /&gt;&lt;strong&gt;给你参考一下吧&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionEvent;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionListener;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JButton;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JFrame;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.SwingUtilities;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;StartupWindow&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JFrame&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ActionListener&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; JButton btn;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;StartupWindow&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Simple GUI&amp;#34;&lt;/span&gt;);\n        setSize(&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;);\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        btn &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Open the other JFrame!&amp;#34;&lt;/span&gt;);\n        btn.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn.setActionCommand(&lt;span class=\"hljs-string\"&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;);\n        add(btn);\n        pack();\n    }\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;actionPerformed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(ActionEvent e)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;cmd&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; e.getActionCommand();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(cmd.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;))\n        {\n            dispose();\n            &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AnotherJFrame&lt;/span&gt;();\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt;\n    {\n        SwingUtilities.invokeLater(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Runnable&lt;/span&gt;(){\n            &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;run&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;StartupWindow&lt;/span&gt;().setVisible(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n            }\n        });\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.&lt;span class=\"hljs-type\"&gt;JFrame&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.&lt;span class=\"hljs-type\"&gt;JLabel&lt;/span&gt;;\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;AnotherJFrame&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;JFrame&lt;/span&gt;&lt;/span&gt;\n{\n    public &lt;span class=\"hljs-type\"&gt;AnotherJFrame&lt;/span&gt;()\n    {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Another GUI&amp;#34;&lt;/span&gt;);\n        setSize(&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;);\n        setDefaultCloseOperation(&lt;span class=\"hljs-type\"&gt;JFrame&lt;/span&gt;.&lt;span class=\"hljs-type\"&gt;EXIT_ON_CLOSE&lt;/span&gt;);\n        add(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;JLabel&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Empty JFrame&amp;#34;&lt;/span&gt;));\n        pack();\n        setVisible(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["java如何打开另外一个程序的窗口？", [" 这个是主程序的JButton按钮，想通过点击按钮打开并运行另一个程序", "\n", "\n", "另一个程序：", "\n", "import", " java.awt.Color;\n", "import", " java.awt.Graphics;\n", "import", " java.awt.event.KeyEvent;\n", "import", " java.awt.event.KeyListener;\n\n", "import", " javax.swing.JFrame;\n", "import", " javax.swing.JPanel;\n", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        JFrame w=", "new", " ", "JFrame", "();\n        w.setSize(", "500", ",", "400", ");\n        Mypanel6 mp=", "new", " ", "Mypanel6", "();\n        mp.init();\n        w.add(mp);\n        w.addKeyListener(mp);\n        w.setVisible(", "true", ");\n        w.setVisible(", "true", ");\n        mp.go();\n    }\n\n}\n", "class", " ", "Mypanel6", " ", "extends", " ", "JPanel", " ", "implements", " ", "KeyListener", "{\n    ", "int", " x[]=", "new", " ", "int", "[", "10", "];\n    ", "int", " y[]=", "new", " ", "int", "[", "10", "];\n    ", "char", " c[]=", "new", " ", "char", "[", "10", "];\n    ", "int", " score=", "1000", ";\n    ", "public", " ", "void", " ", "init", "()", " {\n        ", "for", "(", "int", " i=", "0", ";i<", "10", ";i++) {\n            x[i]=i*", "50", ";\n            y[i]=", "0", ";\n            c[i]=(", "char", ")(Math.random()*", "26", "+", "97", ");\n        }\n    }\n    ", "public", " ", "void", " ", "paint", "(Graphics g)", " {\n        g.setColor(Color.WHITE);\n        g.fillRect(", "0", ",", "0", ",", "this", ".getWidth(),", "this", ".getHeight());\n        g.setColor(Color.BLACK);\n        ", "for", "(", "int", " i=", "0", ";i<", "10", ";i++) {\n            g.drawString(", "new", " ", "Character", "(c[i]).toString(),x[i],y[i]);\n        }\n        g.setColor(Color.RED);\n        g.drawString(", "\"你的成绩是：\"", "+score,", "5", ",", "15", ");\n    }\n    ", "public", " ", "void", " ", "go", "()", " {\n        ", "while", "(", "true", ") {\n            ", "for", "(", "int", " i=", "0", ";i<", "10", ";i++) {\n                y[i]++;\n                ", "if", "(y[i]>", "400", ") {\n                    y[i]=", "0", ";\n                    x[i]=i*", "50", ";\n                    c[i]=(", "char", ")(Math.random()*", "26", "+", "97", ");\n                    score-=", "10", ";\n                }\n            }\n            ", "try", " {\n                Thread.sleep(", "100", ");\n            }", "catch", " (Exception e) {}\n                repaint();\n            }\n        }\n        ", "public", " ", "void", " ", "keyPressed", "(KeyEvent arg0)", " {\n            ", "char", " keyc=arg0.getKeyChar();\n            ", "int", " ", "hitIndex", " ", "=", "-", "1", ";\n            ", "for", "(", "int", " i=", "0", ";i<", "10", ";i++){\n                ", "if", "(keyc == c[i]) {\n                    hitIndex=i;\n                }\n            }\n            ", "if", "(hitIndex!=-", "1", ") {\n                y[hitIndex]=", "0", ";\n                x[hitIndex]=hitIndex*", "50", ";\n                c[hitIndex]=(", "char", ")(Math.random()*", "26", "+", "97", ");\n                score+=", "10", ";\n            }", "else", " {\n                score-=", "10", ";\n            }\n        }\n        ", "public", " ", "void", " ", "keyReleased", "(KeyEvent arg0)", " {\n        }\n        ", "public", " ", "void", " ", "keyTyped", "(KeyEvent arg0)", " {\n        }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在单元测试时&amp;#xff0c;有两个文件&amp;#xff0c;一个是源文件&amp;#xff0c;一个是测试文件&amp;#xff0c;测试文件到将源文件导入&amp;#xff0c;然后对其测试&amp;#xff0c;&lt;br /&gt;这种情况下&amp;#xff0c;不希望源文件的程序马上执行&amp;#xff0c;而是在测试用例中按需调用&lt;br /&gt;这意味着&amp;#xff0c;源程序需要有两种执行模型&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;执行执行&lt;/li&gt;&lt;li&gt;被其他文件导入&amp;#xff0c;执行&lt;/li&gt;&lt;/ul&gt;\n&lt;hr /&gt;\n&lt;p&gt;&lt;code class=\"language-javascript\"&gt;__name__&lt;/code&gt; 是特殊变量&amp;#xff0c;会根据执行的情况动态发送变化:&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;如果本文件是被作为脚本执行时&amp;#xff0c;值为&lt;code class=\"language-javascript\"&gt;__main__&lt;/code&gt;&lt;/li&gt;&lt;li&gt;如果本文件是被作为模块导入时&amp;#xff0c;值为本文件的模块名&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;反过来说&amp;#xff0c;如果&lt;code class=\"language-javascript\"&gt;__name_  &amp;#61;&amp;#61; &amp;#34;__main__&amp;#34;&lt;/code&gt;为真时&amp;#xff0c;说明是被作为脚本执行的&amp;#xff0c; 就执行if 下面的那行代码&amp;#xff0c;&lt;br /&gt;反之&amp;#xff0c;这可能被其他模块导入&amp;#xff08;比如测试&amp;#xff09;&amp;#xff0c;那就不执行&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于python测试函数中的语法问题", ["测试函数中这两句该如何理解？", "书上说的是检查特殊变量__name__如果这个文件作为主程序执行，变量__name__将被设置为'main'", "有点不理解"]], "Tag": "程序设计"}
{"Answer": "不用担心，所有的程序中的变量，都会被自动加载到进程里的。", "Konwledge_Point": "主程序", "Question": ["数组如果从ocx获取，那么数组的下标对应的内存还是连续的还是分离的？", ["主程序的控件里编写的事件的过程，使用数组形的全局变量，数组如果从ocx获取，那么数组的下标对应的内存还是连续的还是分离的？是ocx内主动分配的还是exe获取的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以参考一下&amp;#xff0c;希望采纳支持一下博主&lt;br /&gt;头文件 area.h&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-selector-id\"&gt;#pragma&lt;/span&gt; once\n&lt;span class=\"hljs-selector-id\"&gt;#include&lt;/span&gt; &amp;lt;math&lt;span class=\"hljs-selector-class\"&gt;.h&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-selector-id\"&gt;#define&lt;/span&gt; getArea(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;, c) sqrt((&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * ((&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;) * ((&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;) * ((&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - c))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;main函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;area.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形的三边&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;三角形面积是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;getArea&lt;/span&gt;(a, b, c) &amp;lt;&amp;lt; endl;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/043543213356189.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/613253213356121.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["谁会这个c++的题，希望哪个ds写一下。我目前主要没环境，所以就得完整一点。", ["编写自定义的头文件，在头文件中实现带参数的宏，其功能为求三角形面积。将头文件包含到自己的主程序中，并在主函数中实现三边的输入、宏的调用及输出其三角形面积的功能。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样&amp;#xff1f;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~有其他问题可以继续交流~&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/607390065236149.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;;\n&lt;span class=\"hljs-variable\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Text&lt;/span&gt;;\n&lt;span class=\"hljs-variable\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Collections&lt;/span&gt;;\n&lt;span class=\"hljs-variable\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;QueueMachine&lt;/span&gt;\n{\n    &lt;span class=\"hljs-comment\"&gt;//设计一个叫号机程序&amp;#xff0c;输入1表示有人进队&amp;#xff0c;输入2表示有人离开队列接受服务&amp;#xff0c;3表示列出队列的成员和成员数目&amp;#xff0c;0表示退出程序。&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//已给定主程序&amp;#xff0c;要求将三个函数补充完整&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;addQueue&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Queue&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;q&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//要求输入一个名字&amp;#xff0c;将此人加入到队列中&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;ReadLine&lt;/span&gt;();\n            &lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Enqueue&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt;);\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;加入队列成功&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;leaveQueue&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Queue&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;q&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//要求从队列中出来一个人&amp;#xff0c;比如接受服务&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Dequeue&lt;/span&gt;();\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;》接受服务&amp;#34;&lt;/span&gt;);\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;listQueue&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Queue&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;q&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//输出队列中一共有多少人&amp;#xff0c;并输出每个人名字&lt;/span&gt;\n            &lt;span class=\"hljs-title function_\"&gt;foreach&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;) &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt;);\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;string&lt;/span&gt;[] &lt;span class=\"hljs-variable\"&gt;args&lt;/span&gt;)\n        {\n            int &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-title class_\"&gt;Queue&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Queue&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;This is a queue machine.&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;You can type the following digits: &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;1 for entering the queue, &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;2 for leaving the queue, &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;3 for listing the members in the queue,&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;0 for exiting:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;do&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Convert&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;ToInt32&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;ReadLine&lt;/span&gt;());\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-title function_\"&gt;addQueue&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-title function_\"&gt;leaveQueue&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-title function_\"&gt;listQueue&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;q&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;wrong input&amp;#34;&lt;/span&gt;);\n            } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["一个叫号机程序C#，不知道函数怎么写对C#不是很懂", ["using System.Text;", "\n", "namespace QueueMachine", "{", "\n", "//设计一个叫号机程序，输入1表示有人进队，输入2表示有人离开队列接受服务，3表示列出队列的成员和成员数目，0表示退出程序。", "\n", "//已给定主程序，要求将三个函数补充完整", "\n", "class", " ", "Program", "\n{\n\n    ", "static", " ", "void", " ", "addQueue", "(", "Queue", " ", "q", ")\n    {\n        ", "//要求输入一个名字，将此人加入到队列中", "\n    \n    }\n\n    ", "static", " ", "void", " ", "leaveQueue", "(", "Queue", " ", "q", ")\n    {\n        ", "//要求从队列中出来一个人，比如接受服务", "\n\n    }\n\n\n    ", "static", " ", "void", " ", "listQueue", "(", "Queue", " ", "q", ")\n    {\n        ", "//输出队列中一共有多少人，并输出每个人名字", "\n    }\n\n\n    ", "static", " ", "void", " ", "Main", "(", "string", "[] ", "args", ")\n    {\n        int ", "i", "=", "0", ";\n        ", "Queue", " ", "q", " ", "=", " ", "new", " ", "Queue", "(", "50", ");\n\n        ", "Console", ".", "WriteLine", "(", "\"This is a queue machine.\"", "+", "\n            ", "\"You can type the following digits: ", "\\n", "\"", "+", "\n            ", "\"", "\\t", "1 for entering the queue, ", "\\n", "\"", "+", "\n            ", "\"", "\\t", "2 for leaving the queue, ", "\\n", "\"", "+", "\n            ", "\"", "\\t", "3 for listing the members in the queue,", "\\n", "\"", "+", "\n            ", "\"", "\\t", "0 for exiting:\"", ");\n        ", "do", "\n        {\n            ", "i", " ", "=", " ", "Convert", ".", "ToInt32", "(", "Console", ".", "ReadLine", "());\n            ", "if", " (", "i", " ", "==", " ", "1", ")\n            {\n                ", "addQueue", "(", "q", ");\n            }\n            ", "else", " ", "if", " (", "i", " ", "==", " ", "2", ")\n            {\n                ", "leaveQueue", "(", "q", ");\n            }\n            ", "else", " ", "if", " (", "i", " ", "==", " ", "3", ")\n            {\n                ", "listQueue", "(", "q", ");\n            }\n            ", "else", " ", "if", "(", "i", "==", "0", ")\n            {\n                 ", "break", ";\n            }\n            ", "else", " \n                ", "Console", ".", "WriteLine", "(", "\"wrong input\"", ");\n\n        } ", "while", " (", "true", ");\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你的主程序是静态加载的dll&amp;#xff0c;或者动态加载了dll但是并不释放&amp;#xff0c;那当然也会崩溃&lt;br /&gt;dll占用的内存就是你电脑的物理内存&amp;#xff0c;它并没有单独的内存&lt;br /&gt;你电脑内存满了&amp;#xff0c;别说主程序了&amp;#xff0c;整个电脑都会死机&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["dll的中的内存问题", ["dll出现内存泄漏最后崩溃会导致主进程也出现内存越来越大，最后崩溃的问题吗？(我现在有个程序，运行了一晚上莫名其妙崩掉了，怀疑是内存泄漏，但是主程序是c#写的有内存回收，因该不会是它的问题，但是它加载了一个c++写的dll，可能是dll出问题了。)"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;用flash做标记不是很可靠的方式&amp;#xff0c;因为写flash的操作可靠性就不太好。\n我之前用过一套比较成熟的流程你可以试试&amp;#xff1a;\n一&amp;#xff0c;主程序在特定位置的ram写一个标志&amp;#xff08;几个字节&amp;#xff09;&amp;#xff0c;然后重启进入&lt;span class=\"hljs-keyword\"&gt;bootloader&amp;#xff0c;通知bootloader进入升级模式\n&lt;/span&gt;二&amp;#xff0c;&lt;span class=\"hljs-keyword\"&gt;bootloader进入升级模式有3种情况&amp;#xff1a;\n&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff0c;检查到要求升级的标志\n   &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#xff0c;发现主程序校验信息错误\n   &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#xff0c;检测到用户强制升级命令&amp;#xff08;比如在启动的时候按下某个按钮&amp;#xff0c;串口输入某个指令&amp;#xff09;\n三&amp;#xff0c;升级的用户程序&amp;#xff0c;前面加上一段信息&amp;#xff0c;比如版本&amp;#xff0c;长度&amp;#xff0c;适用硬件平台&amp;#xff0c;校验等信息&amp;#xff0c;这段信息同时也写入flash&amp;#xff0c;便于&lt;span class=\"hljs-keyword\"&gt;bootloader判断是否可以用于升级&amp;#xff0c;以及第二步里提到的检查程序是否错误。\n&lt;/span&gt;四&amp;#xff0c;升级完成后&amp;#xff0c;抹掉升级标志。\n五&amp;#xff0c;再次检查写入文件校验是否正确&amp;#xff0c;正确则直接进入&amp;#xff0c;不必重启。\n\n如果单片机能外挂一个存储器则更好&amp;#xff0c;可以在主程序里就先下载到外部存储器&amp;#xff0c;因为主程序更大&amp;#xff0c;支持更复杂的传输方式&amp;#xff0c;而且传输出错的话&amp;#xff0c;就不会升级&amp;#xff0c;下一次还能正常进入系统&amp;#xff0c;而不必强制进入升级模式。\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["单片机通过RS485进行软件升级", ["大家好！有个问题要请教下：", "\n", "我要使用RS485方式对PIC18F45K80系列单片机进行在线升级（官方有介绍使用MMC这个工具生成的Bootloader方式进行升级），官方的文档只介绍了使用串口，先将Bootloader程序烧写在Flash指定的区域，例如：地址0x00-0x2FF，从0x300开始的地址用于存储主应用 程序，如果我使用RS4585这样可行吗？主程序正常运行时是有RS485通信的，用于和上位机的交互，我就是觉得单片机重启后RS485功能都没有了（通过 RS485控制芯片来进行发送/接收），怎么来接收升级包呢？", "\n", "我的思路是这样的：", "\n", "1、单片机程序在运行时，通过RS485收到上位机发送的升级指令后，改写单片机Flash存储器的最后一个字节，标识要重启，单片机重启；", "2、重启后Bootloader运行，检测Flash存储器的最后一个字节，如果未被改写则检测是否有有效的程序可以运行，如果有则将控制权交给主程序，如果没有则继续留在Bootloader等待用户发送升级包；", "3、当把升级包成功写入Flash并校验后，Bootloader改写Flash存储器的最后一个字节，标识为已升级成功；", "4、重启单片机，Bootloader检测到有效的应用程序，那么运行升级后的程序。", "\n", "不知这样可不可行，还望大家指教一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以下是使用函数返回值返回开方结果的 C 语言代码示例&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;// 定义开方函数&amp;#xff0c;返回值为 float&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sqrt_by_return&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x);  &lt;span class=\"hljs-comment\"&gt;// 调用 math.h 中的 sqrt 函数进行开方&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n\n    &lt;span class=\"hljs-comment\"&gt;// 循环输入数字&amp;#xff0c;直到输入 0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;x);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;// 如果输入 0&amp;#xff0c;则退出循环&lt;/span&gt;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 调用 sqrt_by_return 函数进行开方&amp;#xff0c;并将结果打印出来&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f 的开方结果为 %f\\n&amp;#34;&lt;/span&gt;, x, &lt;span class=\"hljs-built_in\"&gt;sqrt_by_return&lt;/span&gt;(x));\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["关于#float#的问题，如何解决？", ["定义一个函数，要求在函数中实现开方的操作。 在主程序中，输入任意的 float 数 x，调用该函数后，能够得到 x 开方的结果并打印。要求用以下两种方式实现:", "\n", "通过函数返回值返回开方的结果", "通过形参返回开方的结果", "可以循环输入，并打印结果。直到遇到输入 0，则退出程序"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; collections &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; deque\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BTNode&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#二叉链中结点类&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,d&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#构造方法&lt;/span&gt;\n            self.data&amp;#61;d &lt;span class=\"hljs-comment\"&gt;#结点值&lt;/span&gt;\n            self.lchild&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#左hai子指针&lt;/span&gt;\n            self.rchild&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#右hai子指针&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BTree&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#二叉树类&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,d&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#构造方法&lt;/span&gt;\n            self.b&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#根结点指针&lt;/span&gt;\n    \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;DispBTree&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                            &lt;span class=\"hljs-comment\"&gt;#返回二叉链的括号表示串&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self._DispBTree1(self.b)\n         \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_DispBTree1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,t&lt;/span&gt;):                        &lt;span class=\"hljs-comment\"&gt;#被DispBTree方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:                                 &lt;span class=\"hljs-comment\"&gt;#空树返回空串&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                bstr&amp;#61;t.data                                &lt;span class=\"hljs-comment\"&gt;#输出根结点值&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t.lchild!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; t.rchild!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                    bstr&amp;#43;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;(&amp;#34;&lt;/span&gt;                            &lt;span class=\"hljs-comment\"&gt;#有hai子结点时输出&amp;#34;(&amp;#34;&lt;/span&gt;\n                    bstr&amp;#43;&amp;#61;self._DispBTree1(t.lchild)    &lt;span class=\"hljs-comment\"&gt;#递归输出左子树&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t.rchild!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                        bstr&amp;#43;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;                        &lt;span class=\"hljs-comment\"&gt;#有右hai子结点时输出&amp;#34;,&amp;#34;&lt;/span&gt;\n                    bstr&amp;#43;&amp;#61;self._DispBTree1(t.rchild)    &lt;span class=\"hljs-comment\"&gt;#递归输出右子树&lt;/span&gt;\n                    bstr&amp;#43;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt;                            &lt;span class=\"hljs-comment\"&gt;#输出&amp;#34;)&amp;#34;&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; bstr\n         \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;FindNode&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,x&lt;/span&gt;):                            &lt;span class=\"hljs-comment\"&gt;#查找值为x的结点算法&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self._FindNode1(self.b,x)\n         \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_FindNode1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,t,x&lt;/span&gt;):                       &lt;span class=\"hljs-comment\"&gt;#被FindNode方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;: \n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;                                &lt;span class=\"hljs-comment\"&gt;#t为空时返回null&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; t.data&amp;#61;&amp;#61;x: \n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; t                                &lt;span class=\"hljs-comment\"&gt;#t所指结点值为x时返回t&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                p&amp;#61;self._FindNode1(t.lchild,x)            &lt;span class=\"hljs-comment\"&gt;#在左子树中查找&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;: \n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p                            &lt;span class=\"hljs-comment\"&gt;#在左子树中找到p结点&amp;#xff0c;返回p&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self._FindNode1(t.rchild,x)    &lt;span class=\"hljs-comment\"&gt;#返回在右子树中查找结果&lt;/span&gt;\n         \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Height&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                &lt;span class=\"hljs-comment\"&gt;#求二叉树高度的算法&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self._Height1(self.b)\n         \n        &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_Height1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,t&lt;/span&gt;):                            &lt;span class=\"hljs-comment\"&gt;#被Height方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;                                &lt;span class=\"hljs-comment\"&gt;#空树的高度为0&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                lh&amp;#61;self._Height1(t.lchild)                &lt;span class=\"hljs-comment\"&gt;#求左子树高度lchildh&lt;/span&gt;\n                rh&amp;#61;self._Height1(t.rchild)                &lt;span class=\"hljs-comment\"&gt;#求右子树高度rchildh&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(lh,rh)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;PreOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;bt&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#先序遍历的递归算法&lt;/span&gt;\n            _PreOrder(bt.b)\n            \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_PreOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#被PreOrder方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t.data,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#访问根结点&lt;/span&gt;\n                _PreOrder(t.lchild) &lt;span class=\"hljs-comment\"&gt;#先序遍历左子树&lt;/span&gt;\n                _PreOrder(t.rchild) &lt;span class=\"hljs-comment\"&gt;#先序遍历右子树&lt;/span&gt;\n        \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;InOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;bt&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#中序遍历的递归算法&lt;/span&gt;\n            _InOrder(bt.b)\n        \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_InOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#被InOrder方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                _InOrder(t.lchild) &lt;span class=\"hljs-comment\"&gt;#中序遍历左子树&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t.data,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#访问根结点&lt;/span&gt;\n                _InOrder(t.rchild) &lt;span class=\"hljs-comment\"&gt;#中序遍历右子树&lt;/span&gt;\n        \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;PostOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;bt&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#后序遍历的递归算法&lt;/span&gt;\n            _PostOrder(bt.b)\n        \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_PostOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#被PostOrder方法调用&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; t!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                _PostOrder(t.lchild) &lt;span class=\"hljs-comment\"&gt;#后序遍历左子树&lt;/span&gt;\n                _PostOrder(t.rchild) &lt;span class=\"hljs-comment\"&gt;#后序遍历右子树&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t.data,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#访问根结点&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;LevelOrder&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;bt&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#层次遍历的算法&lt;/span&gt;\n            qu&amp;#61;deque() &lt;span class=\"hljs-comment\"&gt;#将双端队列作为普通队列qu&lt;/span&gt;\n            qu.append(bt.b) &lt;span class=\"hljs-comment\"&gt;#根结点进队&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(qu)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#队不空循环&lt;/span&gt;\n                p&amp;#61;qu.popleft() &lt;span class=\"hljs-comment\"&gt;#出队一个结点&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(p.data,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#访问p结点&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; p.lchild!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#有左hai子时将其进队&lt;/span&gt;\n                    qu.append(p.lchild)\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; p.rchild!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#有右hai子时将其进队&lt;/span&gt;\n                    qu.append(p.rchild)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;CreateBTree2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;posts,ins&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#由后序序列posts和中序序列ins构造二叉链&lt;/span&gt;\n            bt&amp;#61;BTree()\n            bt.b&amp;#61;_CreateBTree2(posts,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,ins,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(posts))\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; bt\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;_CreateBTree2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;posts,i,ins,j,n&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;\n            d&amp;#61;posts[i&amp;#43;n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-comment\"&gt;#取后序序列尾元素d&lt;/span&gt;\n            t&amp;#61;BTNode(d) &lt;span class=\"hljs-comment\"&gt;#创建根结点(结点值为d)&lt;/span&gt;\n            p&amp;#61;ins.index(d) &lt;span class=\"hljs-comment\"&gt;#在ins中找到根结点的索引&lt;/span&gt;\n            k&amp;#61;p-j &lt;span class=\"hljs-comment\"&gt;#确定左子树中结点个数k&lt;/span&gt;\n            t.lchild&amp;#61;_CreateBTree2(posts,i,ins,j,k) &lt;span class=\"hljs-comment\"&gt;#递归构造左子树&lt;/span&gt;\n            t.rchild&amp;#61;_CreateBTree2(posts,i&amp;#43;k,ins,p&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n-k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#递归构造右子树&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; t\n\n&lt;span class=\"hljs-comment\"&gt;#主程序&lt;/span&gt;\nins&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;]\nposts&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 中序:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(ins)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 后序:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(posts)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 构造二叉树bt&amp;#34;&lt;/span&gt;)\nbt&amp;#61;BTree()\nbt&amp;#61;CreateBTree2(posts,ins)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; bt:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(bt.DispBTree())\n\n\nx&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;\np&amp;#61;bt.FindNode(x)\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; bt中存在&amp;#34;&lt;/span&gt;&amp;#43;x)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; bt中不存在&amp;#34;&lt;/span&gt;&amp;#43;x)\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; bt的高度&amp;#61;%d&amp;#34;&lt;/span&gt; %( bt.Height() ))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 先序序列:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);PreOrder(bt);&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 中序序列:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);InOrder(bt);&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 后序序列:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);PostOrder(bt);&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 层次序列:&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);LevelOrder(bt);&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-type\"&gt;#result&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;\n 中序&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n 后序&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n 构造二叉树&lt;span class=\"hljs-variable\"&gt;bt&lt;/span&gt;\n &lt;span class=\"hljs-variable\"&gt;bt&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n &lt;span class=\"hljs-variable\"&gt;bt&lt;/span&gt;中不存在&lt;span class=\"hljs-variable\"&gt;X&lt;/span&gt;\n &lt;span class=\"hljs-variable\"&gt;bt&lt;/span&gt;的高度&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n 先序序列&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt; \n 中序序列&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt; \n 后序序列&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt; \n 层次序列&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;B&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;C&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;D&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;E&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;F&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;G&lt;/span&gt; \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["二叉树的中序序列和后序序列构造二叉树，实现查找，求高度，先序、中序、后序和层次遍历，用相关数据进行测试", [" from collections import deque", "class BTNode:                                        #二叉链中结点类", "    def ", "init", "(self,d=None):                         #构造方法", "        self.data=d                                    #结点值", "        self.lchild=None                            #左hai子指针", "        self.rchild=None                            #右hai子指针", "\n", "class BTree:                                        #二叉树类", "    def ", "init", "(self,d=None):                         #构造方法", "        self.b=None                                 #根结点指针", "\n", "def", " ", "DispBTree", "(", "self", "):                            ", "#返回二叉链的括号表示串", "\n    ", "return", " self._DispBTree1(self.b)\n\n", "def", " ", "_DispBTree1", "(", "self,t", "):                        ", "#被DispBTree方法调用", "\n    ", "if", " t==", "None", ":                                 ", "#空树返回空串", "\n        ", "return", " ", "\"\"", "\n    ", "else", ":\n        bstr=t.data                                ", "#输出根结点值", "\n        ", "if", " t.lchild!=", "None", " ", "or", " t.rchild!=", "None", ":\n            bstr+=", "\"(\"", "                            ", "#有hai子结点时输出\"(\"", "\n            bstr+=self._DispBTree1(t.lchild)    ", "#递归输出左子树", "\n            ", "if", " t.rchild!=", "None", ":\n                bstr+=", "\",\"", "                        ", "#有右hai子结点时输出\",\"", "\n            bstr+=self._DispBTree1(t.rchild)    ", "#递归输出右子树", "\n            bstr+=", "\")\"", "                            ", "#输出\")\"", "\n        ", "return", " bstr\n\n", "def", " ", "FindNode", "(", "self,x", "):                            ", "#查找值为x的结点算法", "\n    ", "return", " self._FindNode1(self.b,x)\n\n", "def", " ", "_FindNode1", "(", "self,t,x", "):                       ", "#被FindNode方法调用", "\n    ", "if", " t==", "None", ": \n        ", "return", " ", "None", "                                ", "#t为空时返回null", "\n    ", "elif", " t.data==x: \n        ", "return", " t                                ", "#t所指结点值为x时返回t", "\n    ", "else", ":\n        p=self._FindNode1(t.lchild,x)            ", "#在左子树中查找", "\n        ", "if", " p!=", "None", ": \n            ", "return", " p                            ", "#在左子树中找到p结点，返回p", "\n        ", "else", ":\n            ", "return", " self._FindNode1(t.rchild,x)    ", "#返回在右子树中查找结果", "\n\n", "def", " ", "Height", "(", "self", "):                                ", "#求二叉树高度的算法", "\n    ", "return", " self._Height1(self.b)\n\n", "def", " ", "_Height1", "(", "self,t", "):                            ", "#被Height方法调用", "\n    ", "if", " t==", "None", ":\n        ", "return", " ", "0", "                                ", "#空树的高度为0", "\n    ", "else", ":\n        lh=self._Height1(t.lchild)                ", "#求左子树高度lchildh", "\n        rh=self._Height1(t.rchild)                ", "#求右子树高度rchildh", "\n        ", "return", " ", "max", "(lh,rh)+", "1", "\n", "\n", "def PreOrder(bt):                                    #先序遍历的递归算法", "    _PreOrder(bt.b)", "def _PreOrder(t):                                   #被PreOrder方法调用", "    if t!=None:", "        print(t.data,end=' ')                        #访问根结点", "        _PreOrder(t.lchild)                            #先序遍历左子树", "        _PreOrder(t.rchild)                            #先序遍历右子树", "def InOrder(bt):                                       #中序遍历的递归算法", "    _InOrder(bt.b)", "def _InOrder(t):                                     #被InOrder方法调用", "    if t!=None:", "        _InOrder(t.lchild)                            #中序遍历左子树", "        print(t.data,end=' ')                        #访问根结点", "        _InOrder(t.rchild)                            #中序遍历右子树", "def PostOrder(bt):                                   #后序遍历的递归算法", "    _PostOrder(bt.b)", "def _PostOrder(t):                                  #被PostOrder方法调用", "    if t!=None:", "        _PostOrder(t.lchild)                        #后序遍历左子树", "        _PostOrder(t.rchild)                        #后序遍历右子树", "        print(t.data,end=' ')                        #访问根结点", "\n", "def LevelOrder(bt):                                 #层次遍历的算法", "    qu=deque()                                      #将双端队列作为普通队列qu", "    qu.append(bt.b)                                    #根结点进队", "    while len(qu)>0:                                #队不空循环", "        p=qu.popleft()                                #出队一个结点", "        print(p.data,end=' ')                        #访问p结点", "        if p.lchild!=None:                            #有左hai子时将其进队", "            qu.append(p.lchild)", "        if p.rchild!=None:                            #有右hai子时将其进队", "            qu.append(p.rchild)", "\n", "def CreateBTree2(posts,ins):                        #由后序序列posts和中序序列ins构造二叉链", "    bt=BTree()", "    bt.b=_CreateBTree2(posts,0,ins,0,len(posts))", "    return bt", "\n", "def _CreateBTree2(posts,i,ins,j,n):", "    if n<=0: return None", "    d=posts[i+n-1]                                    #取后序序列尾元素d", "    t=BTNode(d)                                     #创建根结点(结点值为d)", "    p=ins.index(d)                                  #在ins中找到根结点的索引", "    k=p-j                                            #确定左子树中结点个数k", "    t.lchild=_CreateBTree2(posts,i,ins,j,k)            #递归构造左子树", "    t.rchild=_CreateBTree2(posts,i+k,ins,p+1,n-k-1)    #递归构造右子树", "    return t", "\n", "#主程序", "ins=['D','G','B','A','E','C','F']", "posts=['G','D','B','E','F','C','A']", "print()", "print(\"  中序:\",end=' '); print(ins)", "print(\"  后序:\",end=' '); print(posts)", "print(\"  构造二叉树bt\")", "bt=BTree()", "bt=CreateBTree2(posts,ins)", "print(\"  bt:\",end=' '); print(bt.DispBTree())", "x='X'", "（请填补代码）", "if p!=None: print(\"  bt中存在\"+x)", "else: print(\"  bt中不存在\"+x)", "print(\"  bt的高度=%d\" %(（请填补代码）))", "print(\"  先序序列:\",end=' ');PreOrder(bt);print()", "print(\"  中序序列:\",end=' ');（请填补代码）;print()", "print(\"  后序序列:\",end=' '); （请填补代码）;print()", "print(\"  层次序列:\",end=' '); （请填补代码）;print()"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;ReadListIntegers&lt;/span&gt;():\n    nums &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n        a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个正整数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;您输入了非正整数&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            nums.append(a)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; nums\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;ReadListReelsBorders&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;bmin&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, bmax&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&lt;/span&gt;):\n    nums &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n        a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个实数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a &amp;lt; bmin &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; a &amp;gt;&amp;#61; bmax:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;您输入了不在有效区间的数&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            nums.append(a)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; nums\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;MMSList&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;numList: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;inf&amp;#39;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;#默认正无穷&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;-inf&amp;#39;&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;#默认负无穷&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; numList:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; i\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt; &amp;#61; i\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; i\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;ReadListReelsTerms&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ReadListReelsBorders(&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    nums &amp;#61; ReadListIntegers()\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(nums)\n    nums2 &amp;#61; ReadListReelsBorders(-&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(nums2)\n    &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; MMSList(ReadListReelsTerms(-&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最小值&amp;#xff1a;%f 最大值&amp;#xff1a;%f和&amp;#xff1a;%f&amp;#34;&lt;/span&gt; % (&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["python基础题，希望用基础方法解决", ["编写一个不带参数的ReadListIntegers函数，它允许您读取键盘上输入的正整数或零整数。当您输入负数时，条目停止。该函数返回输入的整数列表。", "\n", "编写主程序，该程序允许您调用该函数，然后显示使用打印函数获得的列表。", "\n", "提供带有两个可选参数bmin和bmax的ReadListReelsBorders函数，它允许您读取键盘上输入的实数。当用户输入的值超出区间[ bmin  ; 最大] 。默认情况下，min 和 max 的值分别设置为 0 和 100。该函数应该返回一个列表。", "\n", "定义一个MMSList函数，它将一个列表作为参数，并返回列表的最小值、最大值和总和。", "您的函数必须使用while或for循环，并且不得使用Python 中预定义的max、min和sum 函数。", "\n", "通过使用ReadListReelsTerms在键盘和MMSList上输入实数列表以获取输入值的最小值、最大值和总和来完成您的主程序 。显示在控制台获得的3个值。 "]], "Tag": "程序设计"}
{"Answer": "http://codepad.org/lTwqgCbo\r\n\r\n```\r\n #include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\n\r\nclass Member\r\n{\r\n    public:\r\n    int age;\r\n    string name;\r\n    Member() { age = 0; name=\"\"; }\r\n    Member(string n, int a)\r\n    {\r\n        name=n;\r\n        age=a;\r\n    }\r\n    friend ostream&amp; operator &lt;&lt; (ostream&amp; output, Member&amp; m)\r\n    {\r\n       if (m.age == 0) \r\n           output&lt;&lt;\"???\"&lt;&lt;endl;\r\n       else\r\n           output&lt;&lt;m.name&lt;&lt;\" \"&lt;&lt;m.age&lt;&lt;endl;\r\n       return output;\r\n    }\r\n};\r\nint main()\r\n{\r\nMember newCommers[5] = { Member( \"Zhang San\", 22),\r\nMember( \"Li Si\", 19),\r\nMember( \"Wang Wu\", 18),\r\nMember( \"Zhao Liu\", 24) };\r\nfor ( int i=0; i&lt;5; i++)\r\ncout &lt;&lt; newCommers[i] &lt;&lt; endl;\r\nreturn 0;\r\n}\r\n```\r\nZhang San 22\r\n\r\nLi Si 19\r\n\r\nWang Wu 18\r\n\r\nZhao Liu 24\r\n\r\n???", "Konwledge_Point": "主程序", "Question": ["一道简单的OOP题目……不会做……求源程序 半小时内速求……", ["有个虚拟足球俱乐部的球队经济人又新招了5名队员，他写了下面的代码，为新队员建了", "\n一个数组，并输出数组的所有元素。其中字符串是队员的名字，而数字则是队员的年龄。", "\n不过有个队员的名字他竟不记得了（他的名字只好用\"???\"表示，年龄为0）。", "\n（1）请你为``队员\"这种对象定义一个类（队员信息的输出格式自定），使程序能编译通", "\n过（不应通过修改main()函数来完成此要求）。要求每个队员的姓名和年龄都是常量。", "\nint main ( )", "\n{", "\n Member newCommers[5] = { Member( \"Zhang San\", 22),", "\n Member(  \"Li Si\", 19),", "\n Member( \"Wang Wu\", 18),", "\n Member ( \"Zhao Liu\", 24) };", "\n for ( int i=0; i<5; i++)", "\n cout << newCommers[i] << endl;", "\n return 0;", "\n}", "\n（2）经济人在主程序中增加了下面的语句，想通过姓名的拼写来查询队员年龄。请你继", "\n续他的工作，完成程序其他部分。", "\nstring name[5] = { \"Zhang San\", \"Li Si\",", "\n \"Wang Wu\", \"Zhao Liu\",", "\n \"Pin Yin\" };", "\nMemberList list(newCommers , 5);", "\nfor (i=0; i<5; i++)", "\n cout << list[name[i]] << endl;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的Students类没有无参的构造方法呀&amp;#xff0c;加一个无参的构造方法     public Students(){}&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/379610687666152.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["java测试代码出错，不会改", ["要求是设计一个类Students， 包括姓名、学号和总成绩 ，按照总成绩从高到低的顺序输出姓名、学号和总成绩信息，第一张图是主程序代码，第二张图是测试代码，测试代码出现问题", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用open函数分别打开两个文件读取文件内容&amp;#xff0c;然后直接判断相等即可&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python比较文件内容并调用函数", ["Python：编写一个函数 compare( filel file2),比较两个文本文件内容是否相同,如果内", "容相同返回True.否则返回 False.在主程序中输入两个要比较的两文件名,然后调用以上", "函数,文件内容相同则输出“ No difference!”;否则,输出从第几个字符开始不相同。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"hljs language-cpp\"&gt;int fun(char n)\n{\n\tstatic int num &amp;#61; 0;\n\tif (n &amp;#61;&amp;#61; &amp;#39; &amp;#39;)\n\t\treturn 0;\n\treturn &amp;#43;&amp;#43;num;\n}\nint main()\n{\n\tchar n;\n\tscanf_s(&amp;#34;%c&amp;#34;, &amp;amp;n,1);\n\tgetchar();\n\tint num &amp;#61; fun(n);\n\twhile (num !&amp;#61; 0)  //假设按空格键表示结束统计\n\t{\n\t\tprintf(&amp;#34;当前按键%d次\\n&amp;#34;, num);\n\t\tscanf_s(&amp;#34;%c&amp;#34;, &amp;amp;n,1);\n\t\tgetchar();\n\t\tnum &amp;#61; fun(n);\n\t\t\n\t}\n \n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["利用静态变量实现一个计数模块", ["利用静态变量实现一个计数模块，按下任意键一次计数一次，主程序中输出计数结果，要求此变量不能定义为全局变量。"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\n#define ARRSIZE 5\r\n\r\nclass Queue\r\n{\r\nprivate:\r\n\tint * arr;\r\n\tint * start;\r\n\tint * end;\r\n\tint length;\r\npublic:\r\n\tQueue()\r\n\t{\r\n\t\tarr = new int[ARRSIZE];\r\n\t\tstart = end = arr;\r\n\t\tlength = 0;\r\n\t}\r\n\tvoid enqueue(int x)\r\n\t{\r\n\t\tif (length == ARRSIZE)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; \"full\" &lt;&lt; endl;\r\n\t\t\tthrow \"error\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t*start = x;\r\n\t\t\t*start--;\r\n\t\t\tlength++;\r\n\t\t\tif (start &lt; arr) start = &amp;arr[ARRSIZE - 1];\r\n\t\t}\r\n\t}\r\n\tint dequeue()\r\n\t{\r\n\t\tif (!length)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; \"empty\" &lt;&lt; endl;\r\n\t\t\tthrow \"error\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint result = *end;\r\n\t\t\t*end--;\r\n\t\t\tlength--;\r\n\t\t\tif (end &lt; arr) end = &amp;arr[ARRSIZE - 1];\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\nint main(int argc, _TCHAR* argv[])\r\n{\r\n\tQueue q = Queue();\r\n\tq.enqueue(1);\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tq.enqueue(2);\r\n\tq.enqueue(3);\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tq.enqueue(4);\r\n\tq.enqueue(5);\r\n\tq.enqueue(6);\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tq.enqueue(7);\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\tq.enqueue(8);\r\n\tcout &lt;&lt; q.dequeue() &lt;&lt; endl;\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "主程序", "Question": ["求C++语言用数组实现一个队列的数据结构的完整代码", ["提示：定义一个数组，用两个指针表示队列的首尾位置，编写两个函数代表出队入队操作。当队列长度超过数组长度时，提示队列超长，当队列空时，提示队列为空。主程序实现对队列的调用，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出值没法调用&lt;br /&gt;你想用&amp;#xff0c;函数要有返回值啊&amp;#xff0c;不要直接print&lt;br /&gt;举个例子&amp;#xff1a;&lt;br /&gt;就比如一个最简单的hello world程序吧&lt;br /&gt;def helloWorld():&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    print(&amp;#39;hello world&amp;#39;) #你这样直接打印&amp;#xff0c;那么这个函数就是个无返回值的函数&amp;#xff0c;调用一次就直接打印一次&lt;/span&gt;&lt;br /&gt;-&amp;#61;-&amp;#61;-&amp;#61;&lt;br /&gt;def helloWorld():&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return &amp;#39;hello world&amp;#39; #这样他就有返回值了&lt;/span&gt;&lt;br /&gt;print(helloWorld()) #你就可以在其他地方调用它&amp;#xff0c;获取它的返回值&amp;#xff0c;处理后再打印&amp;#xff0c;而不是直接打印&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python定义的模块输出怎么调用", ["遇到了这样一个问题，我定义一个time模块，输出为当前时间，格式20220531151852，然后我在主程序里引用这个模块后，想创建一个question20220531151852的目录，怎么调用模块输出的值，使用变量赋值显示类型为nonetype"]], "Tag": "程序设计"}
{"Answer": "第一步，获取已经读取的长度\r\n第二步，调用skip(long n) 跳过已经读过的内容", "Konwledge_Point": "主程序", "Question": ["关于java的文件读写", ["[size=medium]我想写一个文件读写类,然后让主程序调用它来读写文件,貌似缓冲区不能定义太大,所以想请问当读写一个较大的文件(如上100MB的文件)的时候如何实现?[/size]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用malloc动态申请内存&amp;#xff0c;如果超出&amp;#xff0c;再用realloc扩容。C语言运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/849947635276112.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bubbleSort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; t;\n    &lt;span class=\"hljs-comment\"&gt;//冒泡排序&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j] &amp;gt; a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]) &lt;span class=\"hljs-comment\"&gt;//从小到大排序&amp;#xff0c;排序完成后&amp;#xff0c;a[0]就是最小值&amp;#xff0c;a[n-1]就是最大值&lt;/span&gt;\n            {\n                t &amp;#61; a[j];\n                a[j] &amp;#61; a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//计算数据的总和&lt;/span&gt;\n    t &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        t &amp;#43;&amp;#61; a[i];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大值&amp;#xff1a;%g\\n&amp;#34;&lt;/span&gt;, a[n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最小值&amp;#xff1a;%g\\n&amp;#34;&lt;/span&gt;, a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均值&amp;#xff1a;%g\\n&amp;#34;&lt;/span&gt;, t / n);&lt;span class=\"hljs-comment\"&gt;//输出平均值&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序结果&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g &amp;#34;&lt;/span&gt;, a[i]);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p &amp;#61; (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;) * size);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一组数据&amp;#xff0c;以回车结束&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;p[n]);\n        n&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; size)\n        {\n            size &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n            p &amp;#61; (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;realloc&lt;/span&gt;(p, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;) * size);&lt;span class=\"hljs-comment\"&gt;//扩容&lt;/span&gt;\n        }\n        ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;bubbleSort&lt;/span&gt;(p, n); &lt;span class=\"hljs-comment\"&gt;//调用函数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//释放内存&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p);\n    p &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["关于#c语言#的问题：并通过 scanf 输入数组中每个元素的值，打印该数组的最大值、最小值、平均值和排序结果", ["要求定义一个函数实现对任意长度数组的排序的操作， 并计算最大值、最小值、平 均值。 在主程序中，定义一个数组，并通过 scanf 输入数组中每个元素的值，调用 该函数后，打印该数组的最大值、最小值、平均值和排序结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;当setticks&amp;#xff08;&amp;#xff09;函数指定的记号位置的数量与提供的标签数量不匹配时&amp;#xff0c;就会出现错误。要解决此问题&amp;#xff0c;请确保记号位置和标签的数量相同&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pytorch混淆矩阵使用有报错", ["这个咋解决啊", "报错问题是：", "ValueError: The number of FixedLocator locations (4), usually from a call to set_ticks, does not match the number of labels (40).", "\n", "这个是主程序混淆矩阵部分的代码和debug", "\n", "\n", "这个是报错和报错行代码", "\n", "\n", "这是我在GitHub上找的源代码", "\n"]], "Tag": "程序设计"}
{"Answer": "我觉你的这个问题的原因是：b的值在上一次按键按下后就是一个固定的值了，比如你按下0xee之后，在按下第二个键之前，b的值就一直都是1，\r\n所以while循环里会一直发送1.所以你需要在没有按键按下的时候，让keyscan()返回一个while的switch中没有的值，也就是执行default。\r\n\r\nswitch ( x )\r\n\r\n{ \r\ncase 0xee: key=1; break;\r\ncase 0xde: key=2; break;\r\ncase 0xbe: key=3; break;\r\ncase 0x7e: key=4; break;\r\ncase 0xed: key=5; break;\r\ncase 0xdd: key=6; break;\r\ncase 0xbd: key=7; break;\r\ncase 0x7d: key=8; break;\r\ncase 0xeb: key=9; break; \r\ncase 0xdb: key=0; break;\r\ncase 0xbb: key=11; break; \r\ncase 0x7b: key=12; break;\r\ncase 0xe7: key=13; break;\r\ncase 0xd7: key=14; break;\r\ncase 0xb7: key=15; break;\r\ncase 0x77: key=16; break;\r\n}\r\n\r\n在这个switch中加一个default：key=0;break;\r\n\r\nswitch ( x )\r\n\r\n{ \r\ncase 0xee: key=1; break;\r\ncase 0xde: key=2; break;\r\ncase 0xbe: key=3; break;\r\ncase 0x7e: key=4; break;\r\ncase 0xed: key=5; break;\r\ncase 0xdd: key=6; break;\r\ncase 0xbd: key=7; break;\r\ncase 0x7d: key=8; break;\r\ncase 0xeb: key=9; break; \r\ncase 0xdb: key=0; break;\r\ncase 0xbb: key=11; break; \r\ncase 0x7b: key=12; break;\r\ncase 0xe7: key=13; break;\r\ncase 0xd7: key=14; break;\r\ncase 0xb7: key=15; break;\r\ncase 0x77: key=16; break;\r\ndefault:key=0;break;\r\n}", "Konwledge_Point": "主程序", "Question": ["单片机向串口发送键盘指令，串口助手在同一个指令上一直不停的跑 代码如下 哪位大神帮帮忙", ["#include", "\n#include", "\n#define uchar unsigned char", "\n#define uint unsigned int", "\nuchar key_scan();  uchar    key;", "\nvoid SendOneByte(unsigned char c)", "\n{", "\n    SBUF = c; ", "\n    while(TI==0);", "\n    TI = 0;", "\n } ", "\nvoid delay(uint k) //延时程序", "\n{", "\nuint i,j;", "\nfor(i=k;i>0;i--)", "\nfor(j=110;j>0;j--);", "\n} ", "\n\n", "void main() //主程序", "\n{   uchar b;", "\n    TMOD = 0x20; //定时器T1的工作方式2,8位数据自动重装", "\n    SCON = 0x50; //串行口的方式1,8位异步收发，波特率可变。", "\n    TH1 = 0xfd; // 装定时器1初值.", "\n    TL1 = 0xfd;", "\n    PCON = 0x00;", "\n    EA = 1; //开总中断", "\n    ES = 1; //串行口中断源允许", "\n    TR1 = 1; //开定时器1", "\n    while(1) //循环开始", "\n    {  ", "\n\n", "    b=key_scan();       \n    switch(b)\n    {\n    case 1: SendOneByte('1');  break;\n    case 2: SendOneByte('2');  break;\n    case 3: SendOneByte('3');  break;\n    case 4: SendOneByte('4');  break;\n    case 5: SendOneByte('5');  break;\n    case 6: SendOneByte('6');  break;\n    case 7: SendOneByte('7');  break;\n    case 8: SendOneByte('8');  break;\n    case 9: SendOneByte('9');  break;\n    case 0: SendOneByte('0');  break;\n    case 11:SendOneByte('U');  break;\n    case 12:SendOneByte('Y');  break;\n    case 13:SendOneByte('N');  break;\n    case 14:SendOneByte('L');  break;\n    case 15:SendOneByte('D');  break;\n    case 16:SendOneByte('R');  break;\n   default :break;  \n    }\n", "\n\n", "}", "\n}", "\nuchar key_scan()", "\n{", "\n uchar cord_h,cord_l,x;//行列值", "\n P1=0xf0;            //行线输出全为0", "\n cord_h=P1&0xf0;     //读入列线值", "\n if(cord_h!=0xf0)    //先检测有无按键按下", "\n {", "\n  delay(80);        //去抖", "\n  if(cord_h!=0xf0)", "\n  {", "\n    cord_h=P1&0xf0;  //读入列线值", "\n    P1=cord_h|0x0f;  //输出当前列线值", "\n    cord_l=P1&0x0f;  //读入行线值", "\n    x=cord_h+cord_l;//键盘最后组合码值", "\n    switch ( x )", "\n    { ", "\n        case 0xee: key=1;   break;", "\n        case 0xde: key=2;   break;", "\n        case 0xbe: key=3;   break;", "\n        case 0x7e: key=4;   break;", "\n        case 0xed: key=5;   break;", "\n        case 0xdd: key=6;   break;", "\n        case 0xbd: key=7;   break;", "\n        case 0x7d: key=8;   break;", "\n        case 0xeb: key=9;   break; ", "\n        case 0xdb: key=0;   break;", "\n        case 0xbb: key=11;  break; ", "\n        case 0x7b: key=12;  break;", "\n        case 0xe7: key=13;  break;", "\n        case 0xd7: key=14;  break;", "\n        case 0xb7: key=15;  break;", "\n        case 0x77: key=16;  break;", "\n    }", "\n    } ", "\n} ", "\n\n", "return key;\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改完善如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string&amp;gt;\n/*定义医生结构体*/\nstruct Doctor\n{\n     char ID[50];       //医生编号\n     char Name[50];     //姓名\n     char Keshi[11];     //科室\n     char Room[11];     //诊室\n};\n/*声明医生数组及医生数量*/\nstruct Doctor Doctors[100];\nint num&amp;#61;0;\n/*通过医生编号返回数组下标*/\nint Doctor_SearchByIndex(char id[])\n{\n    int i;\n    for (i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;)\n    {\n        if (strcmp(Doctors[i].ID,id)&amp;#61;&amp;#61;0)\n        {\n            return i;\n        }\n    }\n    return -1;\n}\n/*通过姓名返回数组下标*/\nint Doctor_SearchByName(char name[])\n{\n    int i;\n    for (i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;)\n    {\n        if (strcmp(Doctors[i].Name,name)&amp;#61;&amp;#61;0)\n        {\n            return i;\n        }\n    }  \n    return -1;  \n}  \n/*显示单条医生记录*/  \nvoid Doctor_DisplaySingle(int index)\n{\n    printf(&amp;#34;%10s%10s%10s%8s\\n&amp;#34;,&amp;#34;医生编号&amp;#34;,&amp;#34;姓名&amp;#34;,&amp;#34;科室&amp;#34;,&amp;#34;诊室&amp;#34;);  \n    printf(&amp;#34;-------------------------------------------------------------\\n&amp;#34;);  \n    printf(&amp;#34;%10s%10s%10s%8s\\n&amp;#34;,Doctors[index].ID,Doctors[index].Name,Doctors[index].Keshi,\n                                                                     Doctors[index].Room);\n}  \n/****1、增加医生记录*****/\nvoid Doctor_Insert()\n{  \n    while(1)  \n    {\n        printf(&amp;#34;请输入医生编号:&amp;#34;);\n                                        //scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[index].Room);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,Doctors[num].ID);    //scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[num].ID);\n                                        //getchar();\n        printf(&amp;#34;请输入姓名:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,Doctors[num].Name);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[num].Name);\n                                       //getchar();\n        printf(&amp;#34;请输入科室:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,Doctors[num].Keshi);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[num].Keshi);\n                                       //getchar();\n        printf(&amp;#34;请输入诊室:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,Doctors[num].Room);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[num].Room);\n                                      //getchar();\n        num&amp;#43;&amp;#43;;\n        printf(&amp;#34;是否继续?(Y/N)&amp;#xff0c;继续请按任意键&amp;#xff0c;否则输入N:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        if ((getchar())&amp;#61;&amp;#61;&amp;#39;N&amp;#39;)\n        {  \n            break;\n        }\n     }  \n}\n/******2、修改医生信息**********/  \nvoid Doctor_Modify()  \n{  \n    while(1) \n    {  \n        char id[50];\n        int index; \n        printf(&amp;#34;请输入要修改的医生的医生编号:&amp;#34;);\n        scanf(&amp;#34;%s&amp;#34;,id);  //scanf(&amp;#34;%s&amp;#34;,&amp;amp;id);\n        getchar();  \n        index&amp;#61;Doctor_SearchByIndex(id);\n        if (index&amp;#61;&amp;#61;-1)\n        {  \n            printf(&amp;#34;该医生不存在!\\n&amp;#34;); \n         }\n        else  \n        {  \n            printf(&amp;#34;你要修改的医生信息为:\\n&amp;#34;);\n            Doctor_DisplaySingle(index);\n            printf(&amp;#34;-- 请输入新值--\\n&amp;#34;); \n            printf(&amp;#34;请输入医生编号:&amp;#34;);\n            fflush(stdout);rewind(stdin);\n            scanf(&amp;#34;%s&amp;#34;,Doctors[index].ID);  //scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[index].ID);\n                                            //getchar();\n            printf(&amp;#34;请输入姓名:&amp;#34;);\n            fflush(stdout);rewind(stdin);\n            scanf(&amp;#34;%s&amp;#34;,Doctors[index].Name);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[index].Name);\n                                            //getchar();\n            printf(&amp;#34;请输入科室:&amp;#34;);\n            fflush(stdout);rewind(stdin);\n            scanf(&amp;#34;%s&amp;#34;,Doctors[index].Keshi);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[index].Keshi);\n                                            //getchar();\n            printf(&amp;#34;请输入诊室:&amp;#34;);\n            fflush(stdout);rewind(stdin);\n            scanf(&amp;#34;%s&amp;#34;,Doctors[index].Room);//scanf(&amp;#34;%s&amp;#34;,&amp;amp;Doctors[index].Room);\n                                           //getchar();\n         }\n         printf(&amp;#34;是否继续?(Y/N)&amp;#xff0c;继续请按任意键&amp;#xff0c;否则输入N:&amp;#34;);\n         fflush(stdout);rewind(stdin);\n         if ((getchar())&amp;#61;&amp;#61;&amp;#39;N&amp;#39;)\n         {\n            break;\n         }\n     }\n} \n/****3、删除医生信息****/  \nvoid Doctor_Delete()  \n{\n    int i;  \n    while(1)  \n    {  \n        char id[50];  \n        int index;  \n        printf(&amp;#34;请输入要删除的医生的医生编号:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,id);                 // scanf(&amp;#34;%s&amp;#34;,&amp;amp;id);\n                                        //getchar();\n        index&amp;#61;Doctor_SearchByIndex(id);\n        if (index&amp;#61;&amp;#61;-1)  \n        {\n            printf(&amp;#34;医生不存在!\\n&amp;#34;);  \n        }  \n        else  \n        {  \n            printf(&amp;#34;你要删除的医生信息为:\\n&amp;#34;); \n            Doctor_DisplaySingle(index);\n            printf(&amp;#34;是否真的要删除?(Y/N)&amp;#34;);  \n            if ((getchar())&amp;#61;&amp;#61;&amp;#39;Y&amp;#39;)\n            {  \n                for (i&amp;#61;index;i&amp;lt;num-1;i&amp;#43;&amp;#43;)  \n                {  \n                    Doctors[i]&amp;#61;Doctors[i&amp;#43;1];//把后边的对象都向前移动\n                } \n                num--;  \n             }  \n            getchar();\n            printf(&amp;#34;已删除\\n&amp;#34;);\n         }\n         printf(&amp;#34;是否继续删除?(Y/N)&amp;#xff0c;继续请按任意键&amp;#xff0c;否则输入N:&amp;#34;);\n         fflush(stdout);rewind(stdin);\n         if ((getchar())&amp;#61;&amp;#61;&amp;#39;N&amp;#39;)\n         {  \n            break;\n         }\n     }  \n}  \n \n/****4、按姓名查询******/  \nvoid Doctor_Select()  \n{\n    while(1)  \n    {  \n        char name[50];  \n        int index;  \n        printf(&amp;#34;请输入要查询的医生的姓名:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        scanf(&amp;#34;%s&amp;#34;,name); //scanf(&amp;#34;%s&amp;#34;,&amp;amp;name);\n                          //getchar();\n        index&amp;#61;Doctor_SearchByName(name);\n        if (index&amp;#61;&amp;#61;-1) \n        {  \n            printf(&amp;#34;医生不存在!\\n&amp;#34;);\n        } \n        else  \n        {  \n            printf(&amp;#34;你要查询的医生信息为:\\n&amp;#34;); \n            Doctor_DisplaySingle(index);  \n        }\n        printf(&amp;#34;是否继续?(Y/N)&amp;#xff0c;继续请按任意键&amp;#xff0c;否则输入N:&amp;#34;);\n        fflush(stdout);rewind(stdin);\n        if ((getchar())&amp;#61;&amp;#61;&amp;#39;N&amp;#39;)\n        {  \n            break;\n        }\n     }\n}  \n \n \n/*显示医生信息*/  \nvoid Doctor_Display()\n{  \n    int i;  \n    printf(&amp;#34;%10s%10s%10s%8s\\n&amp;#34;,&amp;#34;医生编号&amp;#34;,&amp;#34;姓名&amp;#34;,&amp;#34;科室&amp;#34;,&amp;#34;诊室&amp;#34;);  \n    printf(&amp;#34;-------------------------------------------------------------\\n&amp;#34;);  \n    for (i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;)  \n    {\n        printf(&amp;#34;%10s%10s%10s%8f\\n&amp;#34;,Doctors[i].ID,Doctors[i].Name,Doctors[i].Keshi,\n                                                                 Doctors[i].Room);\n    }  \n}  \n/*将医生信息从文件&amp;#xff08;Database.txt&amp;#xff09;中读出*/  \nvoid IO_ReadInfo()\n{ \n    FILE *fp;  \n    int i;  \n    if ((fp&amp;#61;fopen(&amp;#34;Database.txt&amp;#34;,&amp;#34;rb&amp;#34;))&amp;#61;&amp;#61;NULL)  \n    {  \n        printf(&amp;#34;不能打开文件!\\n&amp;#34;);\n        return;  \n    }\n    if (fread(&amp;amp;num,sizeof(int),1,fp)!&amp;#61;1)  \n    {  \n        num&amp;#61;-1;  \n    }\n    else  \n    {  \n        for(i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;)  \n        {  \n            fread(&amp;amp;Doctors[i],sizeof(struct Doctor),1,fp);  \n        }\n    } \n    fclose(fp);  \n} \n/*将医生信息写入文件&amp;#xff08;Database.txt&amp;#xff09;*/  \nvoid IO_WriteInfo()\n{\n    FILE *fp; \n    int i;  \n    if ((fp&amp;#61;fopen(&amp;#34;Database.txt&amp;#34;,&amp;#34;wb&amp;#34;))&amp;#61;&amp;#61;NULL)  \n    {  \n        printf(&amp;#34;不能打开文件!\\n&amp;#34;);  \n        return;\n    }  \n    if (fwrite(&amp;amp;num,sizeof(int),1,fp)!&amp;#61;1)\n    {  \n        printf(&amp;#34;写入文件错误!\\n&amp;#34;);  \n    }  \n    for (i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;)\n    {  \n        if (fwrite(&amp;amp;Doctors[i],sizeof(struct Doctor),1,fp)!&amp;#61;1)  \n        {  \n            printf(&amp;#34;写入文件错误!\\n&amp;#34;);  \n        }  \n    }\n    fclose(fp);  \n} \n/***********主程序*********/ \nvoid main()  \n{ \n    int choice;\n    IO_ReadInfo();          //读取文件\n    while(1)  \n    {  \n        /*主菜单*/  \n        printf(&amp;#34;\\n------ 医生预约系统------\\n&amp;#34;);  \n        printf(&amp;#34;1. 增加医生记录\\n&amp;#34;);\n        printf(&amp;#34;2. 修改医生记录\\n&amp;#34;);  \n        printf(&amp;#34;3. 删除医生记录\\n&amp;#34;);  \n        printf(&amp;#34;4. 按姓名查询医生记录\\n&amp;#34;);  \n        printf(&amp;#34;5. 按诊室排序\\n&amp;#34;);  \n        printf(&amp;#34;6. 保存并退出\\n&amp;#34;);  \n        printf(&amp;#34;请选择(1-6):&amp;#34;);\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;choice);  \n        getchar();  \n        switch(choice)  \n        { \n        case 1:  \n            Doctor_Insert();\n            break; \n        case 2: \n            Doctor_Modify(); \n            break;  \n        case 3:  \n            Doctor_Delete();\n            break;  \n        case 4:  \n            Doctor_Select();\n            break;  \n        case 5:  \n            break;\n        case 6:\n            IO_WriteInfo();\n            exit(0);\n            //break;\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["C++代码可以运行，但是保存不了文件，怎么解决？谢谢！！！", ["\n", "#include \"stdio.h\"  \n#include \"string\"\n\n/*定义医生结构体*/  \nstruct Doctor\n{\n     char ID[50];       //医生编号\n     char Name[50];     //姓名\n     char Keshi[11];     //科室\n     char Room[11];     //诊室\n};\n\n/*声明医生数组及医生数量*/  \nstruct Doctor Doctors[100];  \nint num=0;  \n\n/*通过医生编号返回数组下标*/   \nint Doctor_SearchByIndex(char id[])  \n{\n    int i;  \n    for (i=0;i<num;i++)  \n    {\n        if (strcmp(Doctors[i].ID,id)==0)  \n        {\n            return i;  \n        }  \n    }  \n    return -1;   \n}\n\n/*通过姓名返回数组下标*/\nint Doctor_SearchByName(char name[])  \n{\n    int i;  \n    for (i=0;i<num;i++)  \n    { \n        if (strcmp(Doctors[i].Name,name)==0)\n        { \n            return i;\n        }  \n    }  \n    return -1;  \n}  \n\n/*显示单条医生记录*/  \nvoid Doctor_DisplaySingle(int index)   \n{\n    printf(\"%10s%10s%10s%8s\\n\",\"医生编号\",\"姓名\",\"科室\",\"诊室\");  \n    printf(\"-------------------------------------------------------------\\n\");  \n    printf(\"%10s%10s%10s%8s\\n\",Doctors[index].ID,Doctors[index].Name,Doctors[index].Keshi,Doctors[index].Room);  \n}  \n\n/****1、增加医生记录*****/  \nvoid Doctor_Insert()  \n{  \n    while(1)  \n    {\n        printf(\"请输入医生编号:\");  \n        scanf(\"%s\",&Doctors[num].ID);  \n        getchar();  \n        printf(\"请输入姓名:\");  \n        scanf(\"%s\",&Doctors[num].Name);  \n        getchar(); \n\t\tprintf(\"请输入科室:\");  \n        scanf(\"%s\",&Doctors[num].Keshi);  \n        getchar();\n        printf(\"请输入诊室:\");  \n        scanf(\"%s\",&Doctors[num].Room);  \n        getchar(); \n    \n\n        printf(\"是否继续?(Y/N)，继续请按任意键，否则输入N:\"); \n        if (getchar()=='N')  \n        {  \n            break;\n        }  \n     }  \n}     \n\n/******2、修改医生信息**********/  \nvoid Doctor_Modify()  \n{  \n    while(1) \n    {  \n        char id[50]; \n        int index; \n        printf(\"请输入要修改的医生的医生编号:\"); \n        scanf(\"%s\",&id);  \n        getchar();  \n        index=Doctor_SearchByIndex(id);  \n        if (index==-1)  \n        {  \n            printf(\"该医生不存在!\\n\"); \n         }\n        else  \n        {  \n            printf(\"你要修改的医生信息为:\\n\"); \n            Doctor_DisplaySingle(index);  \n            printf(\"-- 请输入新值--\\n\"); \n            printf(\"请输入医生编号:\");  \n            scanf(\"%s\",&Doctors[index].ID);  \n            getchar();  \n            printf(\"请输入姓名:\");  \n            scanf(\"%s\",&Doctors[index].Name);  \n            getchar();\n            printf(\"请输入科室:\");  \n            scanf(\"%s\",&Doctors[index].Keshi);  \n            getchar();    \n            printf(\"请输入诊室:\");  \n            scanf(\"%s\",&Doctors[index].Room);  \n            getchar();  \n\n         }  \n\n         printf(\"是否继续?(Y/N)，继续请按任意键，否则输入N:\"); \n         if (getchar()=='N')  \n         {  \n            break;\n         }  \n\n     }  \n\n} \n\n/****3、删除医生信息****/  \nvoid Doctor_Delete()  \n{ \n    int i;  \n    while(1)  \n    {  \n        char id[50];  \n        int index;  \n        printf(\"请输入要删除的医生的医生编号:\");  \n        scanf(\"%s\",&id);  \n        getchar();  \n        index=Doctor_SearchByIndex(id);  \n        if (index==-1)  \n        {  \n            printf(\"医生不存在!\\n\");  \n        }  \n        else  \n        {  \n            printf(\"你要删除的医生信息为:\\n\"); \n            Doctor_DisplaySingle(index);  \n            printf(\"是否真的要删除?(Y/N)\");  \n            if (getchar()=='Y')  \n            {  \n                for (i=index;i<num-1;i++)  \n                {  \n                    Doctors[i]=Doctors[i+1];//把后边的对象都向前移动  \n                } \n                num--;  \n             }  \n            getchar();  \n            printf(\"已删除\\n\");\n         }  \n\n         printf(\"是否继续删除?(Y/N)，继续请按任意键，否则输入N:\"); \n         if (getchar()=='N')  \n         {  \n            break;\n         }  \n     }  \n}  \n\n\n/****4、按姓名查询******/  \nvoid Doctor_Select()  \n{  \n    while(1)  \n    {  \n        char name[50];  \n        int index;  \n\n        printf(\"请输入要查询的医生的姓名:\");  \n        scanf(\"%s\",&name); \n        getchar();  \n        index=Doctor_SearchByName(name);  \n\n        if (index==-1) \n        {  \n            printf(\"医生不存在!\\n\"); \n        } \n        else  \n        {  \n            printf(\"你要查询的医生信息为:\\n\"); \n            Doctor_DisplaySingle(index);  \n        }  \n\n        printf(\"是否继续?(Y/N)，继续请按任意键，否则输入N:\"); \n        if (getchar()=='N')  \n        {  \n            break;\n        } \n\n     }\n}  \n\n\n\n\n\n/*显示医生信息*/  \nvoid Doctor_Display()  \n{  \n    int i;  \n    printf(\"%10s%10s%10s%8s\\n\",\"医生编号\",\"姓名\",\"科室\",\"诊室\");  \n    printf(\"-------------------------------------------------------------\\n\");  \n\n    for (i=0;i<num;i++)  \n    {  \n        printf(\"%10s%10s%10s%8f\\n\",Doctors[i].ID,Doctors[i].Name,Doctors[i].Keshi,Doctors[i].Room);  \n    }  \n\n}  \n\n/*将医生信息从文件（Database.txt）中读出*/  \nvoid IO_ReadInfo()  \n{ \n    FILE *fp;  \n    int i;  \n\n    if ((fp=fopen(\"Database.txt\",\"rb\"))==NULL)  \n    {  \n        printf(\"不能打开文件!\\n\");  \n        return;  \n    }\n\n    if (fread(&num,sizeof(int),1,fp)!=1)  \n    {  \n        num=-1;  \n    } \n    else  \n    {  \n        for(i=0;i<num;i++)  \n        {  \n            fread(&Doctors[i],sizeof(struct Doctor),1,fp);  \n        }  \n    } \n\n    fclose(fp);  \n} \n\n/*将医生信息写入文件（Database.txt）*/  \nvoid IO_WriteInfo()\n{  \n    FILE *fp; \n    int i;  \n    if ((fp=fopen(\"Database.txt\",\"wb\"))==NULL)  \n    {  \n        printf(\"不能打开文件!\\n\");  \n        return;  \n    }  \n    if (fwrite(&num,sizeof(int),1,fp)!=1)  \n    {  \n        printf(\"写入文件错误!\\n\");  \n    }  \n    for (i=0;i<num;i++)  \n    {  \n        if (fwrite(&Doctors[i],sizeof(struct Doctor),1,fp)!=1)  \n        {  \n            printf(\"写入文件错误!\\n\");  \n        }  \n    }  \n    fclose(fp);  \n} \n\n/***********主程序*********/ \nvoid main()  \n{ \n    int choice;  \n\n    IO_ReadInfo();          //读取文件\n\n    while(1)  \n    {  \n        /*主菜单*/  \n        printf(\"\\n------ 医生预约系统------\\n\");  \n        printf(\"1. 增加医生记录\\n\");  \n        printf(\"2. 修改医生记录\\n\");  \n        printf(\"3. 删除医生记录\\n\");  \n        printf(\"4. 按姓名查询医生记录\\n\");  \n        printf(\"5. 按诊室排序\\n\");  \n        printf(\"6. 退出\\n\");  \n        printf(\"请选择(1-6):\");  \n\n        scanf(\"%d\",&choice);  \n        getchar();  \n\n        switch(choice)  \n        { \n        case 1:  \n            Doctor_Insert();  \n            break; \n\n        case 2: \n            Doctor_Modify(); \n            break;  \n\n        case 3:  \n            Doctor_Delete(); \n            break;  \n\n        case 4:  \n            Doctor_Select();\n            break;  \n\n        case 5:  \n\n            break;  \n\n        case 6: \n            exit(0);  \n            break;  \n        } \n        IO_WriteInfo();  \n\n    } \n}  \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;嵌入式的问题需要结合电路图才能看懂程序。以后提与硬件结合紧密问题时要附上电路图。&lt;br /&gt;我猜测&amp;#xff0c;这个代码对应的电路应该是6个数码管&amp;#xff0c;p0接共阴极。p2接数码管的数据线。&lt;br /&gt;代码是通过p0的赋值去顺序选通对应的数码管。p2的赋值是决定数码管显示什么数据。&lt;br /&gt;没猜错的话&amp;#xff0c;数码管应该显示1234.5&lt;br /&gt;p0&amp;#61;0xfe 是选通第一个数码管&lt;br /&gt;p0&amp;#61;0xfd 是选通第二个数码管&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["解释一下主函数P0=0Xfe;", ["#include<reg51.h>", "#define uchar unsigned char", "void delay(uchar x)", "{", "    uchar i;", "    while(x--)", "    {", "        for(i=0;i<120;i++);", "    }", "}", "\n", "void main()        //", "主程序", "{", "    while(1)", "    {", "    P0=0Xfe;", "    P2=0X06;", "    delay(1);", "\n", "P0", "=", "0", "Xfd", ";    ", "\n", "P2", "=", "0", "X5b", ";", "\ndelay(", "1", ")", ";", "\n\n", "P0", "=", "0", "Xfb", ";    ", "\n", "P2", "=", "0", "X4f", ";", "\ndelay(", "1", ")", ";", "\n\n", "P0", "=", "0", "Xf7", ";    ", "\n", "P2", "=", "0", "X66", ";", "\ndelay(", "1", ")", ";", "\n\n", "P0", "=", "0", "Xef", ";    ", "\n", "P2", "=", "0", "X80", ";", "\ndelay(", "1", ")", ";", "\n\n", "P0", "=", "0", "Xdf", ";    ", "\n", "P2", "=", "0", "X6d", ";", "\ndelay(", "1", ")", ";", "\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;排序函数参数用指针就可以。使用动态内存存储数组元素。&lt;br /&gt;下面的代码通过malloc和realloc动态申请内存。读取数组元素时&amp;#xff0c;以输入回车符结束。&lt;br /&gt;排序采用冒泡排序算法。&lt;br /&gt;运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/67975313537613.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bubbleSort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p[j] &amp;gt; p[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n            {\n                t &amp;#61; p[j];\n                p[j] &amp;#61; p[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                p[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61; t;\n            }\n        }\n    }\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//数组元素个数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; ave&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    p &amp;#61; (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)*size);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;#61;&amp;#61; size)\n        {\n            size &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//大小扩充10&lt;/span&gt;\n            p &amp;#61; (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;realloc&lt;/span&gt;(p,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)*size);&lt;span class=\"hljs-comment\"&gt;//重新分配内存&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;p[n]);\n        ave &amp;#43;&amp;#61; p[n]; &lt;span class=\"hljs-comment\"&gt;//累加&lt;/span&gt;\n        n&amp;#43;&amp;#43;;\n        \n        ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//输入回车符结束&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;bubbleSort&lt;/span&gt;(p,n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大值:%g\\n&amp;#34;&lt;/span&gt;,p[n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最小值:%g\\n&amp;#34;&lt;/span&gt;,p[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均值:%g\\n&amp;#34;&lt;/span&gt;,ave/n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后的结果&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g &amp;#34;&lt;/span&gt;,p[i]);\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p);\n    p &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["关于c语言的问题函数", ["要求定义一个函数实现对任意长度数组的排序的操作， 并计算最大值、最小值、平", "均值。 在主程序中，定义一个数组，并通过 scanf 输入数组中每个元素的值，调用", "该函数后，打印该数组的最大值、最小值、平均值和排序结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;感觉很多是输入的错误呢,你用的是VS几?没有词汇联想功能吗?&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["二叉排序树，程序报错，错误原因和如何修改", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "define", " TRUE 1", "\n", "#", "define", " FALSE 0", "\n", "#", "define", " OK 1", "\n", "#", "define", " ERROR 0", "\n", "#", "define", " OVERFLOW -2", "\n\n", "typedef", " ", "struct", " ", "BSTNode", " {\n    ", "int", " data;\n    ", "struct", " ", "BSTNode", " *lchild;\n    ", "struct", " ", "BSTNode", " *rchild;\n} BSTNode, *BSTree;\n\n", "//动态查找算法：查找插入位置", "\n", "Status ", "searchBSTForInsert", "(BSTree T, ", "int", " key, BSTree &q)", " ", "{\n    BSTree p, f;\n    p = T;\n    f = ", "NULL", ";\n    ", "if", " (p == ", "NULL", ")\n        ", "return", " FALSE;\n    ", "while", " (p) {\n        ", "if", " (key == p->data) {\n            p = q;\n            ", "return", " TRUE;\n            }", "else", " ", "if", " (key, p->data) {\n                f = p;\n                p = p->lchild;\n            } \n            ", "else", " {\n                f = p;\n                p = p->rchild;\n            }\n        }\n        q = f;\n        ", "return", " FALSE;\n    }\n", "//创建二叉树", "\n    ", "void", " ", "createBSTree", "(BSTree & T)", " ", "{\n        DataType e;\n        BSTNode *q,*p;\n        T=", "NULL", ";\n        ", "scanf", "(", "\"%d\"", ",&e);\n        ", "while", "(!e!=", "0", ")\n        {", "if", "(!", "searchBSTForInsert", "(T,e.key,q))\n            {    p=(BSTree)", "malloc", "(", "sizeof", "(BSTNode));\n            p->data=e;\n            p->lchild=p->rchild=", "NULL", ";\n            ", "if", "(!p)T=p;\n            ", "else", " ", "if", "(e.key<q->data.key)q->lchild=p;\n            ", "else", " q->rchild=p;\n            }\n            ", "inputElem", "(e);\n        }\n    }\n", "//中序输出", "\n    ", "void", " ", "inorderOutput", "(BSTree T)", " ", "{\n        ", "if", " (T) {\n            ", "inorderOutput", "(T->lchild);\n            ", "int", "(T->data);\n            ", "inorderOutput", "(T->rchld);\n        }\n    }\n", "//静态查找", "\n    ", "BSTNode *", "searchBST", "(BSTree T, ", "int", " key)", " ", "{\n    BSTNode *p=T;\n    ", "while", "(p)\n    {\n        ", "if", "(key==p->data)", "return", " p;\n        ", "else", " ", "if", "(key<p->data)p=p->lchild;\n        ", "else", " p=->rchild;\n    }\n    ", "return", " ", "NULL", ";\n    }\n", "//测试主程序", "\n    ", "int", " ", "main", "()", " ", "{\n        BSTree T;\n        ", "printf", "(", "\"输入数据序列（以零结束），创建BST：\\n\"", ");\n        ", "createBSTree", "(T);\n        ", "printf", "(", "\"BST的中序序列：\\n\"", ");\n        ", "inorderOutput", "(T);\n        ", "printf", "(", "\"\\n\"", ");\n        ", "int", " key;\n        ", "printf", "(", "\"********BST上查找测试*******\\n\"", ");\n        ", "printf", "(", "\"\\n输入关键字查找（0结束查找）\"", ");\n        ", "scanf", "(", "\"%d\"", ", &key);\n        ", "while", " (key != ", "0", ") {\n            BSTNode *p = ", "searchBST", "(T, key);\n            ", "if", " (p)\n                ", "printf", "(", "\"查找成功，其值为：%d\\n\"", ", p->data);\n            ", "else", "\n                ", "printf", "(", "\"值为%d的结点不存在！\\n\"", ", key);\n            ", "printf", "(", "\"输入关键字值（0结束查找）\"", ");\n            ", "scanf", "(", "\"%d\"", ", &key);\n        }\n        ", "return", " ", "0", ";\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-cpp\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;s&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*a*a&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(a);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sq&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(a&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;tri&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*a*a*a;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(a)&amp;#43;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;judge&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;gt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;s&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;lt;a&amp;amp;&amp;amp;a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sq&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;&amp;lt;a&amp;amp;&amp;amp;a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;tri&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;c&lt;/span&gt;(a);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    cin&amp;gt;&amp;gt;x;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;judge&lt;/span&gt;(x);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["无法编写，主要是四个函数", ["编写程序，键盘输入 x 值，按下面表达式约束输出 y 值，要求", "对应 x 的四段定义域编写四个函数，针对键盘输入的 x 值在主程序中", "调用函数求出 y 值。结果输出到屏幕查看。还有一个图，打不出来", "y=2x平方+3sinx x>6", "y=根号下x+2 0<x<=6", "y=3x立方 -3<x<=0", "y=cosx+5 x<-3"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组是double型&amp;#xff0c;所以&lt;br /&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;dArray[i]);&lt;br /&gt;改为&lt;br /&gt;scanf(&amp;#34;%lf&amp;#34;,&amp;amp;dArray[i]);&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["调用子函数中的数组，但是最后结果都是零", [" 题目是：自定义函数double polyfunc(double dArray[], int item, double x)，实现一个求由数组dArray表示的多项式的值的函数，其中item为多项式的项数，并在主程序中测试该函数。", "然后我写出的程序不管输入多少多项式计算结果都是零，是我这个程序哪里没调用对函数吗？请您帮忙康康", "#include<stdio.h>", "double polyfunc(double dArray[],int item,double x)", "{", "    double sum=0.0;", "    int n=0,i,t;", "    printf(\"请依次输入系数：\");", "    for(i=0;i<item;i++)", "      scanf(\"%d\",&dArray[i]);", "\n", "for(", "t", "=", "1.0", ",i=", "1", ";i<=item;++i)\n{\n    ", "t", "*=x;\n    ", "sum", "+=", "t", "*dArray[item];\n}\nreturn ", "sum", ";\n", "\n", "}", "int main()", "{", "    int a;", "    double x,result;", "    printf(\"请输入多项式项数：\");", "    scanf(\"%d\",&a);", "\n", "printf", "(", "\"请输入x的值:\"", ");\nscanf(", "\"%d\"", ",&", "x", ");\n \n", "int", " dArray[a];\n\n\n\nresult=polyfunc(dArray,a,", "x", ");\n", "printf", "(", "\"%lf\"", ",result);\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "main方法中c变量没有看到有赋值，\r\n\r\n```\r\n        System.out.println(\"第三条边\");\r\n        if(scan.hasNextDouble()) {\r\n        a = scan.nextDouble();\r\n        }\r\n\t\t\t\t这里a = scan.nextDouble();应该改成c = scan.nextDouble();吧\r\n\t\t\t\t\r\n```", "Konwledge_Point": "主程序", "Question": ["本人初学java，哪位大佬能帮忙看看这个计算三角形面积的程序哪里错了吗？", ["海伦公式求三角形面积：", "\n\n", "public class Arith {\n    public void  arith(double a, double b,double c) {\n\n        if((a + b > c)&&(a + c > b)&&(b + c > a)&&(a - b < c)&&(\n                a - c < b)&&(b - c < a)) {\n            double z;\n              double p =(a + b + c);\n             z = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n             System.out.print(z);\n        } \n    }\n}\n\n\n", "\n\n", "主程序：", "\n\n", "import java.util.*;\npublic class Main {\n    static double a;\n    static double b;\n    static double c;\n\n    public static void main(String[] args) {\n        Arith brith = new Arith();\n        NewScanner newscanner =new NewScanner();\n        Scanner scan = new Scanner(System.in);\n        System.out.println(\"输入三角形三边\");\n        if(scan.hasNextDouble()) {\n        a = scan.nextDouble();\n        }\n\n        System.out.println(\"第二条边\");\n        if(scan.hasNextDouble()) {\n        b = scan.nextDouble();\n        }\n\n        System.out.println(\"第三条边\");\n        if(scan.hasNextDouble()) {\n        a = scan.nextDouble();\n        }\n\n        brith.arith(a, b, c);\n        // TODO Auto-generated method stub\n\n    }\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "MD5(\"软件名称和版本号\"+\"软件合法使用的时间和地点信息\"+\"软件作者的身份证号\"+\"软件卖出的价格\"+\"使用者的身份证号\"+\"使用者的手机号\"+\"一个只有软件作者知道的密码\")\r\nVB code\r\nOption Explicit\r\nPrivate Declare Function CryptAcquireContext Lib \"advapi32.dll\" Alias \"CryptAcquireContextA\" (ByRef phProv As Long, ByVal pszContainer As String, ByVal pszProvider As String, ByVal dwProvType As Long, ByVal dwFlags As Long) As Long\r\nPrivate Declare Function CryptReleaseContext Lib \"advapi32.dll\" (ByVal hProv As Long, ByVal dwFlags As Long) As Long\r\nPrivate Declare Function CryptCreateHash Lib \"advapi32.dll\" (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, ByRef phHash As Long) As Long\r\nPrivate Declare Function CryptDestroyHash Lib \"advapi32.dll\" (ByVal hHash As Long) As Long\r\nPrivate Declare Function CryptHashData Lib \"advapi32.dll\" (ByVal hHash As Long, pbData As Any, ByVal dwDataLen As Long, ByVal dwFlags As Long) As Long\r\nPrivate Declare Function CryptGetHashParam Lib \"advapi32.dll\" (ByVal hHash As Long, ByVal dwParam As Long, pbData As Any, pdwDataLen As Long, ByVal dwFlags As Long) As Long\r\nPrivate Const HP_HASHVAL = 2\r\nPrivate Const HP_HASHSIZE = 4\r\nPrivate Const PROV_RSA_FULL = 1\r\nPrivate Const CRYPT_NEWKEYSET = &amp;H8\r\nPrivate Const ALG_CLASS_HASH = 32768\r\nPrivate Const ALG_TYPE_ANY = 0\r\nPrivate Const ALG_SID_MD2 = 1\r\nPrivate Const ALG_SID_MD4 = 2\r\nPrivate Const ALG_SID_MD5 = 3\r\nPrivate Const ALG_SID_SHA1 = 4\r\nEnum HashAlgorithm\r\n    MD2 = ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD2\r\n    MD4 = ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD4\r\n    MD5 = ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD5\r\n    SHA1 = ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA1\r\nEnd Enum\r\n\r\nPublic Function HashString(ByVal Str As String, Optional ByVal Algorithm As HashAlgorithm = MD5) As String\r\n    Dim hCtx As Long\r\n    Dim hHash As Long\r\n    Dim lRes As Long\r\n    Dim lLen As Long\r\n    Dim lIdx As Long\r\n    Dim abData() As Byte\r\n\r\n   lRes = CryptAcquireContext(hCtx, vbNullString, vbNullString, PROV_RSA_FULL, 0)\r\n   If lRes &lt;&gt; 0 Then\r\n      lRes = CryptCreateHash(hCtx, Algorithm, 0, 0, hHash)\r\n      If lRes &lt;&gt; 0 Then\r\n         lRes = CryptHashData(hHash, ByVal Str, Len(Str), 0)\r\n         If lRes &lt;&gt; 0 Then\r\n            lRes = CryptGetHashParam(hHash, HP_HASHSIZE, lLen, 4, 0)\r\n            If lRes &lt;&gt; 0 Then\r\n                ReDim abData(0 To lLen - 1)\r\n                lRes = CryptGetHashParam(hHash, HP_HASHVAL, abData(0), lLen, 0)\r\n                If lRes &lt;&gt; 0 Then\r\n                    For lIdx = 0 To UBound(abData)\r\n                        HashString = HashString &amp; Right$(\"0\" &amp; Hex$(abData(lIdx)), 2)\r\n                    Next\r\n                End If\r\n            End If\r\n         End If\r\n         CryptDestroyHash hHash\r\n      End If\r\n   End If\r\n   CryptReleaseContext hCtx, 0\r\n   If lRes = 0 Then Err.Raise Err.LastDllError\r\nEnd Function\r\n【转载】", "Konwledge_Point": "主程序", "Question": ["一个关于VB设计注册机的问题", ["\n照其他资料写了分别为：”获取计算机某码“、”利用计算机某码生成注册码“、”利用注册码登录主程序“这三个程序，那么，下面怎么做？如何写一个主机端，主机端可以为注册码：“设置时间限制”、“给注册码加时间”、“通过我的主机端能看到客户端注册码使用信息“这三类？", "\n求师傅指点迷津    【提供一下思路也可以】"]], "Tag": "程序设计"}
{"Answer": "public void update(Object o){\r\nSession session=this.getSession();\r\nTransaction tx = session.beginTransaction();\r\nsession.update(o);\r\ntx.commit();\r\nthis.closeSession(session);\r\n}\r\npublic void closeSession(){\r\ntry\r\n{\r\nif(session!=null){\r\n\tsession.close();\r\n\tsession=null;\r\n}\r\n}catch(Exception ex)\r\n{\r\nex.printStackTrace();\r\n}\t\t\r\n}\r\n你这么写试试\r\n\r\nTransaction tx = this.getSession().beginTransaction(); \r\nthis.getSession().delete(entity); \r\ntx.commit(); \r\nthis.getSession().close(); \r\n\r\n你这个问题，首先this.getSession().beginTransaction(); 和this.getSession().delete(entity); 所获得的 Session对象不是一个对象，执行DELETE方法的那个session没有执行事务，所以运行不成功", "Konwledge_Point": "主程序", "Question": ["springside 删除数据库的记录的疑义", ["在研究SpingSide  Hibernate  DAO层。对数据的操作时发现了一个非常奇怪的问题。", "我通过一个java 的主程序 main() 方法 去调用HibernateDao（）里的删除方法。console 控制台只有查询出对象的操作，没有输出删除的操作。程序这样操作的。", "主程序 main（） 方法这样定义 ", "SessionFactory sf2 = new Configuration().configure().buildSessionFactory(); ", "HibernateDao hd = new HibernateDao(sf2,Test.class); ", "hd.delete(6); //6 是test 表里的id主键。", "在HibernateDao 继承了SimpleHibernateDao类，在simpleHibernateDAO中 delete（）方法抵用get（id） 获取这个对象，然后传入delete（final T entity）对象的删除操作。这个删除的方法是这样定义的。", "Assert.notNull(entity, \"entity不能为空\"); ", "Transaction tx = this.getSession().beginTransaction(); ", "this.getSession().delete(entity); ", "tx.commit(); ", "this.getSession().close(); ", "logger.debug(\"delete entity: {}\", entity);", "程序运行控制台不报错误。但是却没有输出Hibernate的删除的sql语句。", "我把出现的问题放到getSession() 中获得的session 是否是主程序传递过来的SessionFactory。", "getSeesion的方法是这样定义的。", "this.session=this.sessionFactory.openSession(); ", "return this.session;", "测试sessionFactory 就是主程序 SessionFactory sf2 = new Configuration().configure().buildSessionFactory(); 就是传递过来的sessionFactory。", "查看simpleHibernateDAO的构造函数 ", "public SimpleHibernateDao(SessionFactory sessionFactory, final Class entityClass) { ", "this.sessionFactory = sessionFactory; ", "this.entityClass = entityClass; ", "//this.session =sessionFactory.openSession(); ", "}", "也很正常，没有错误。", "于是我在SimpleHibernateDao构造函数中最后一行加入this.session =sessionFactory.openSession();  不用getSession（） 方法获取session，就可以执行删除操作了。", "很奇怪，为什么这样就能删除对象呢。详细测试程序在附件中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;您提到的问题可能是因为代码中的应力更新部分存在问题。以下是一些可能的原因&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;在更新应力之前&amp;#xff0c;需要首先将节点力转换为单元力。如果这个步骤出了问题&amp;#xff0c;可能会导致应力没有正确地更新。请检查这个部分是否正确。&lt;/li&gt;&lt;li&gt;您提到使用了一个 do 循环来更新应力。请确保您的循环是正确的&amp;#xff0c;并且能够更新所有需要更新的节点和单元。如果循环有问题&amp;#xff0c;可能会导致只有某些节点或单元的应力被正确更新&amp;#xff0c;而其他的则没有更新。&lt;/li&gt;&lt;li&gt;您可能需要检查应力更新公式是否正确。请检查一下计算应力的公式是否正确&amp;#xff0c;并且是否考虑到了所有的力和变形情况。&lt;/li&gt;&lt;li&gt;另外&amp;#xff0c;检查一下应力更新的时间步长是否正确。如果时间步长过大或过小&amp;#xff0c;可能会导致应力更新不正确。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;针对您的具体问题&amp;#xff0c;建议您仔细检查一下代码中应力更新的部分&amp;#xff0c;确保代码没有问题。如果仍然无法解决问题&amp;#xff0c;建议您使用调试工具逐步排查问题。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["abaqus子程序相关", ["自己编的子程序，提交是可以进行计算的，但是计算完看不成云图，提示“选定的主变量在当前帧中对于当前显示组中的任何元素都不可用”，查看.log文件输出的数据发现应力没有更新，虽然用do循环更新了应力(stress(k1)=stress(k1)+dstress(k1))，dstress是有数值的，但是应力没有更新，一直都等于dstress的值，不加不减。请问这是怎么回事呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; person:\n    def &lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;mingzi&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;nianlin&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xingbie&lt;/span&gt;)&lt;/span&gt;:\n        self.mingzi &amp;#61; mingzi\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;lt; nianlin &amp;lt; &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;:\n            self.nianlin &amp;#61; nianlin\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            print(&lt;span class=\"hljs-string\"&gt;&amp;#34;年龄超出范围&amp;#34;&lt;/span&gt;, nianlin)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; xingbie &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;女&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; xingbie:\n            self.xingbie &amp;#61; xingbie\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            print(&lt;span class=\"hljs-string\"&gt;&amp;#34;性别超出范围&amp;#xff1a;&amp;#34;&lt;/span&gt;, xingbie)\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; student(person):\n    def &lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;mingzi&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;nianlin&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xingbie&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xuehao&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;banji&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;fengshu&lt;/span&gt;)&lt;/span&gt;:\n        super&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;.&lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;mingzi&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;nianlin&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xingbie&lt;/span&gt;)&lt;/span&gt;\n        self.xuehao &amp;#61; xuehao\n        self.banji &amp;#61; banji\n        self.fengshu &amp;#61; fengshu\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; teacher(person):\n    def &lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;mingzi&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;nianlin&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xingbie&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;gonghao&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xibei&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;gongzi&lt;/span&gt;)&lt;/span&gt;:\n        super&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;.&lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;mingzi&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;nianlin&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;xingbie&lt;/span&gt;)&lt;/span&gt;\n        self.gonghao &amp;#61; gonghao\n        self.xibei &amp;#61; xibei\n        self.gongzi &amp;#61; gongzi\n\n# 实例化学生类\ng &amp;#61; student(&amp;#39;aaa&amp;#39;, &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;007&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;大一班&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\nprint(f&amp;#39;mingzi:{g.mingzi}, nianlin:{g.nianlin}: xingbie:{g.xingbie}, xuehao:{g.xuehao}, fengshu:{g.fengshu}&amp;#39;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/579519557536123.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;教师类的实例化你按照上面的实例化过程就行了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["简单的信息管理系统制作", ["简单的信息管理系统 定义公民类，实例成员变量有身份 证号、姓名、年龄和性别。定义公民类的派生类;学生类和教师类。学 生类增加实例成员变量学号、班级和分数教币类增加实例变量工号、系别和工资。编写主程序，定义 类的对象，设置对象的实例属性，显示对象的信息 使用super0方法调用父类的构造方法 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[h,k]&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title\"&gt;myplot&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(a,h,k)&lt;/span&gt;&lt;/span&gt;\nf &amp;#61; &amp;#64;(x) a*(x-h).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;k;\nfplot(f,[h-h,h&amp;#43;h],&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on\nxline(h);\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(h,k,&lt;span class=\"hljs-string\"&gt;&amp;#39;ro&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;markerfacecolor&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;调用&lt;br /&gt;[h,k] &amp;#61; myplot(1,2,3)&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["不知道二次函数的对称轴和输出顶点横纵坐标，怎么写？用大学第5章的知识救命救命😭", ["①编写自定义M函数，绘制二次函数的图像，并在绘制曲线的坐标系中用不同颜色画出曲线的对称轴，同时标记出曲线的顶点，M函数的输出为曲线顶点的横纵坐标。", "②在主程序中调用①中的自定义函数，对三组不同的输入参数a, h, k, 绘制出相应的图像，每幅图像在不同的figure窗口中显示"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; PI(n&amp;#61;&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; , flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(n):\n        &lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; &amp;#43;&amp;#61; flag * &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; / (i * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-attribute\"&gt;flag&lt;/span&gt; *&amp;#61; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        \n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; s\n\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; int(input(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * PI())\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * PI(n))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["大学python题 作业题 基础题", ["写函数 pi，该函数有一个参数 n 正整数（该参数的默认值为 10000），功能是计算并返回 数列：1 - 1/3 + 1/5 - 1/7...的前 n 项的和。主程序从键盘读入一个整数，分别以普通参数以及 默认值来调用该函数进行测试，打印 4 倍该函数的和。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目是说给这个三角形类设置三个私有的Point类成员&lt;br /&gt;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;Triangle&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    Point a,b,c;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["我不太理解怎么把这个点类的私有成员带入到这个三角形类中，我只需要如何带入私有成员进三角形类中", ["(1)定义一个点类Point，包含两个double型私有成员变量x，y表示平面坐标，一个设置坐标的函数（公有）声明为void setpos(int x,int y);，两个返回x和y坐标的函数（公有）声明为double getx();和double gety();。", "(2)定义一个三角形类Triangle，包含三个Point类私有成员a，b，c表示三角形三个顶点坐标，一个从键盘输入三角形三个顶点坐标的函数（公有）声明为void setTrianglePos();，一个计算三角形面积的函数（公有）声明为double area();。", "(3)给两个类设计合适不带参数的构造函数，在主程序中，创建一个Triangle类的对象cyl并采用默认值初始化，通过调用成员函数area得到面积并输出。", "(4)给两个类设计合适带参数的构造函数，在主程序中，创建一个Triangle类的对象cyl并给予合适的初始化，通过调用成员函数area得到面积并输出；然后通过调用setTrianglePos重新设定三角形三个顶点坐标，再一次调用成员函数area得到面积并输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给个例子参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fact1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;用循环求阶乘的计算结果:&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        m &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            m &amp;#61; m*j\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;  &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#43;m\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i&amp;lt;n:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;!&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;!的值为&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fact2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n,n1,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;用递归求阶乘的计算结果:&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n1):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;!&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#43;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n1}&lt;/span&gt;!的值为&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        m &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            m &amp;#61; m*j\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; m\n        fact2(n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n1,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;)\n\n\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个正整数&amp;#39;&lt;/span&gt;))\nfact1(n)\nfact2(n,n,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/279186707056164.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python编程问题", ["要求将求阶乘定义为函数（使用两种方案实现），主程序中分别调用两个函数实现计算，最后输出对比结果。", "（1）函数fact1用循环实现求阶乘。", "（2）函数fact2用递归实现求阶乘。", "\n", "第一问不是很清楚，第二问我自己试了一下代码，感觉不太对，有没有人能帮一下忙？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码没贴全&amp;#xff0c;报错也没截图&amp;#xff0c;只能猜&lt;br /&gt;按你描述的错误&amp;#xff0c;导入pygame.sprite了吗&amp;#xff1f;&lt;br /&gt;多半是因为在bullet里少了一句&lt;br /&gt;from pygame.sprite import Sprite&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python中的外星人入侵游戏相关问题：函数的调用", ["本人python初学，在跟着《python变成从入门到实践第2版》教材做外星人大战这款游戏的时候，完全按照书上的代码敲的，遇到了“类 'Sprite' 的未解析的特性引用 'draw_bullet'”这个问题", "\n", "我按照书中的做法，已经在bullet类中已经定义了draw_bullet()函数，为什么在主程序中调用此函数会发生错误呢？", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是因为原本书上本就没有设置上下移动&amp;#xff0c;你自己添加了上下移动&amp;#xff0c;所以要多一个y轴的中心位置信息。还有就是你的代码&amp;#xff0c;center_ship那里虽然更新self&amp;#xff0c;但没有更新x和y的位置信息&amp;#xff0c;所以碰到飞船就会回到原位。&lt;br /&gt;总的来说就是少了两个位置信息&amp;#xff0c;要改的话就在center_ship那里加:&lt;br /&gt;self.x &amp;#61; float(self.rect.x)&lt;br /&gt; self.y &amp;#61; float(self.rect.y)&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["《外星人入侵项目》飞船碰撞外星人后不在底部生成，而是在原位置的问题", ["\n\n", "我按照书上写的代码，运行游戏的时候发现飞船碰撞到外星人以后，是在原位置刷新，不会在屏幕底部刷新，不清楚为什么。", "\n主程序：", "\n\n", "import pygame\n\nfrom settings import Settings\n\nfrom game_stats import GameStats\n\nfrom button import Button\n\nfrom ship import Ship\n\nfrom pygame.sprite import Group\n\nimport game_functions as gf\n\nfrom alien import Alien\n\ndef run_game():\n    \"\"\"初始化游戏，设置屏幕对象\"\"\"\n    pygame.init()    # 初始化所有导入的pygame模块\n    ai_settings = Settings()    # 用ai_settings代替Settings()\n\n    screen = pygame.display.set_mode(\n        (ai_settings.screen_width, ai_settings.screen_height))    # 设置屏幕的长宽， pygame.display.set_mode((width, height))\n\n    pygame.display.set_caption(\"Alien Invasion\")    # 设置当前窗口的标题\n\n    # 创建Play按钮\n    play_button = Button(ai_settings, screen, \"Play\")\n\n    # 创建一个用于存储游戏统计信息的实例\n    stats = GameStats(ai_settings)\n\n    ship = Ship(ai_settings, screen)    # 将设置好的屏幕参数传给Ship里面，然后用ship代替Ship类\n\n    bullets = Group()    # 创建一个用于储存子弹的编组，回头会存储bullet模块新建的子弹，Group类用于保存和管理多个Sprite对象的容器类\n\n    # 创建一个用于储存外星人的编组\n    aliens = Group()\n\n    # 创建一个外星人群\n    gf.create_fleet(ai_settings, screen, ship, aliens)\n\n    # 开始游戏的主循环\n    while True:\n\n        # 监视键盘和鼠标事件\n        gf.check_events(ai_settings, screen, stats, play_button, ship, aliens, bullets)    # 返回ship是由于gf需要ship的返回值，用于调用ship中update函数 \n\n        if stats.game_active:\n            ship.update()    # 移动飞船, 更新飞船的位置      \n            gf.update_bullets(ai_settings, screen, ship, aliens, bullets)    # 更新子弹位置\n            gf.update_aliens(ai_settings, stats, screen, ship, aliens, bullets)    # 更新外星人位置\n\n        # 每次循环时都会重新绘制屏幕，让最近绘制的屏幕可见    \n        gf.update_screen(ai_settings, screen, stats, ship, aliens, bullets, play_button)     \n\n\nrun_game()\n", "\n\n", "游戏功能程序：", "\n\n", "import sys\n\nfrom time import sleep\n\nimport pygame\n\nfrom bullet import Bullet\n\nfrom alien import Alien\n\ndef check_keydown_events(event, ai_settings, screen, ship, bullets):\n    \"\"\"响应按键\"\"\"\n    if event.key == pygame.K_RIGHT:    # 我们读取属性event.key，查看它是否是键盘右键\n        ship.moving_right = True    # 是的话就向右移动飞船\n    elif event.key == pygame.K_LEFT:    # 我们读取属性event.key，查看它是否是键盘左键\n        ship.moving_left = True    # 是的话就向左移动飞船\n    elif event.key == pygame.K_UP:    # 我们读取属性event.key，查看它是否是键盘上键\n        ship.moving_up = True    # 是的话就向上移动飞船\n    elif event.key == pygame.K_DOWN:    # 我们读取属性event.key，查看它是否是键盘下键\n        ship.moving_down = True    # 是的话就向下移动飞船\n    elif event.key == pygame.K_SPACE:    # 我们读取属性event.key，查看它是否是键盘空格键\n        fire_bullet(ai_settings, screen, ship, bullets)    # 是的话我们将运行函数fire_bullet\n    elif event.key == pygame.K_q:\n            sys.exit()     \n\ndef check_keyup_events(event, ship):\n    \"\"\"响应松开\"\"\"\n    if event.key == pygame.K_RIGHT:    # 当event按键属性key遇到右键的KEYUP事件时就会让移动标志变成False\n        ship.moving_right = False \n    elif event.key == pygame.K_LEFT:    # 当event按键属性key遇到左键的KEYUP事件时就会让移动标志变成False\n        ship.moving_left = False\n    elif event.key == pygame.K_UP:\n        ship.moving_up = False\n    elif event.key == pygame.K_DOWN:\n        ship.moving_down = False\n\ndef check_events(ai_settings, screen, stats, play_button, ship, aliens, bullets):\n    \"\"\"响应按键和鼠标事件\"\"\"\n    for event in pygame.event.get():    # 获得事件储存到event里面\n        if event.type == pygame.QUIT:    # 检查event事件的类型是不是鼠标点×\n                sys.exit()    # 是的话就退出游戏      \n        elif event.type == pygame.KEYDOWN:    # 检测event事件是不是KEYDOWN事件\n            check_keydown_events(event, ai_settings, screen, ship, bullets)     # 如果发生按键事件，将各种参数带入到check_keydown_events()\n        elif event.type == pygame.KEYUP:      # 我们添加了一个新的elif模块，用于响应KEYUP事件，让事件type类型知道是按键key\n            check_keyup_events(event, ship)\n        elif event.type == pygame.MOUSEBUTTONDOWN:    # 检测鼠标按下的事件\n            mouse_x, mouse_y, = pygame.mouse.get_pos()    # 它返回一个元组，其中包含玩家单击时鼠标的x和y的坐标\n            check_play_button(ai_settings, screen, stats, play_button, ship, \n                aliens, bullets, mouse_x, mouse_y) \n\ndef check_play_button(ai_settings, screen, stats, play_button, ship, aliens, \n    bullets, mouse_x, mouse_y):\n    \"\"\"在玩家单机Play按钮时开始新的游戏\"\"\"\n    if play_button.rect.collidepoint(mouse_x, mouse_y):    # 使用collidepoint()检查鼠标单击的位置是否在Play按钮的rect内\n        # 重置游戏统计信息\n        stats.reset_stats()\n        stats.game_active = True\n\n        # 清空外星人列表和子弹列表\n        aliens.empty()\n        bullets.empty()\n\n        # 创建一群新的外星人，并让飞船居中\n        create_fleet(ai_settings, screen, ship, aliens)\n        ship.center_ship()\n\ndef fire_bullet(ai_settings, screen, ship, bullets):\n    \"\"\"创建一颗子弹，并将其加入到编组bullets中\"\"\"\n    if len(bullets) < ai_settings.bullets_allowed:    # 限制子弹数量在10以内\n        new_bullet = Bullet(ai_settings,  screen,  ship)    # 新建一个子弹\n        bullets.add(new_bullet)    # 在bullets中再添加一个new_bullet\n\ndef update_bullets(ai_settings, screen, ship, aliens, bullets):\n    \"\"\"更新子弹的位置，并删除已经消失的子弹\"\"\"\n    # 更新子弹的位置\n    bullets.update()    # 通过执行这个函数来让我们绘制的东西显示在屏幕上\n\n    # 删除已消失的子弹\n    for bullet in bullets.copy():    # 为了不从列表和编组中删除条目，我们遍历编组的副本\n        if bullet.rect.bottom <= 0:     # 如果子弹飞出屏幕\n            bullets.remove(bullet)    # 将子弹从bullets中删除\n\n    check_bullet_alien_collisions(ai_settings, screen, ship, aliens, bullets)\n\ndef check_bullet_alien_collisions(ai_settings, screen, ship, aliens, bullets):\n    # 检查是否有子弹击中了外星人\n    # 如果是这样就删除外星人和子弹\n    collisions = pygame.sprite.groupcollide(bullets, aliens, True, True)\n\n    if len(aliens) == 0:\n        # 删除现有的子弹并且新建一群外星人\n        bullets.empty()\n        create_fleet(ai_settings, screen, ship, aliens)\n\ndef create_fleet(ai_settings, screen, ship, aliens):\n    \"\"\"创建外星人群\"\"\"\n    # 创建一个外星人，并计算一行可容纳多少个外星人\n    alien = Alien(ai_settings, screen)\n    number_aliens_x = get_number_aliens_x(ai_settings, alien.rect.width)\n    number_rows = get_number_rows(ai_settings, ship.rect.height, \n        alien.rect.height)\n\n    # 设置一个for循环，创建相应行数的外星人\n    for row_number in range(number_rows):\n        # 创建第一行外星人\n        for alien_number in range(number_aliens_x):\n            create_alien(ai_settings, screen, aliens, alien_number, \n                row_number)\n\ndef get_number_aliens_x(ai_settings, alien_width):\n    \"\"\"计算每行可容纳多少个外星人\"\"\"\n    available_space_x = ai_settings.screen_width - 2 * alien_width\n    number_aliens_x = int(available_space_x / (2 * alien_width))\n    return number_aliens_x\n\ndef get_number_rows(ai_settings, ship_height, alien_height):\n    \"\"\"计算屏幕可以容纳多少行外星人\"\"\"\n    available_space_y = (ai_settings.screen_height - \n                            (3 * alien_height) - ship_height)    # 计算屏幕的空白高度\n    number_rows = int(available_space_y / (2 * alien_height))    # 得到空白部分能够放多少行外星人\n    return number_rows\n\ndef create_alien(ai_settings, screen, aliens, alien_number, row_number):\n    \"\"\"创建一个外星人并将其放在当前行\"\"\"\n    alien = Alien(ai_settings, screen)    # 创建一个外星人\n    alien_width = alien.rect.width    # 获得外星人宽度\n    alien.x = alien_width + 2 * alien_width * alien_number    # 设置每个外星人在当前行的位置\n    alien.rect.x = alien.x    # rect.x和rect.y是分别自动等于rect.left和rect.top的\n    alien.rect.y = alien.rect.height + 2 * alien.rect.height * row_number    # 这相当于将外星人依次下放到各行\n    aliens.add(alien)\n\ndef check_fleet_edges(ai_settings, aliens):\n    \"\"\"有外星人到达边缘时采取相应的措施\"\"\"\n    for alien in aliens.sprites():    # 这里的aliens.sprites()返回一个列表包含所有精灵\n        if alien.check_edges():    # 如果alien里面的check_edges函数返回是Ture，就执行下面的\n            change_fleet_direction(ai_settings, aliens)    # 下移外星人并改变方向\n            break\n\ndef change_fleet_direction(ai_settings, aliens):\n    \"\"\"将整群外星人下移，并改变它们的方向\"\"\"            \n    for alien in aliens.sprites():\n        alien.rect.y += ai_settings.fleet_drop_speed\n    ai_settings.fleet_direction *= -1\n\ndef ship_hit(ai_settings, stats, screen, ship, aliens, bullets):\n    \"\"\"响应被外星人撞到的飞船\"\"\"\n    if stats.ships_left > 0:\n        # 将ships_left减1\n        stats.ships_left -= 1\n\n        # 清空外星人列表和子弹列表\n        aliens.empty()\n        bullets.empty()\n\n        # 创建一群新的外星人，并将飞船放到屏幕底端中央\n        create_fleet(ai_settings, screen, ship, aliens)\n        ship.center_ship()\n    else:\n        stats.game_active = False\n\n    # 暂停\n    sleep(0.5)\n\ndef check_aliens_bottom(ai_settings, stats, screen, ship, aliens, bullets):\n    \"\"\"检查是否有外星人到达了屏幕底端\"\"\"\n    screen_rect = screen.get_rect()\n    for alien in aliens.sprites():\n        if alien.rect.bottom >= screen_rect.bottom:\n            # 像飞船被撞到一样进行处理\n            ship_hit(ai_settings, stats, screen, ship, aliens, bullets)\n            break\n\ndef update_aliens(ai_settings, stats, screen, ship, aliens, bullets):\n    \"\"\"检查是否有外星人位于屏幕边缘，更新外星人群中所有外星人的位置\"\"\"\n    check_fleet_edges(ai_settings, aliens)\n    aliens.update()\n\n    # 检测外星人和飞船之间的碰撞\n    if pygame.sprite.spritecollideany(ship, aliens):\n        ship_hit(ai_settings, stats, screen, ship, aliens, bullets)\n    #检查是否有外星人到达屏幕底端\n    check_aliens_bottom(ai_settings, stats, screen, ship, aliens, bullets)\n\ndef update_screen(ai_settings, screen, stats, ship, aliens, bullets, play_button):\n    \"\"\"更新屏幕上的图像，并切换到新屏幕上\"\"\"\n    # 每次循环时都重绘屏幕\n    screen.fill(ai_settings.bg_color)\n    # 在飞船和外星人后面重绘所有子弹\n    for bullet in bullets.sprites():    # 这里的bullets.sprites()返回一个列表包含所有精灵\n        bullet.draw_bullet()    # 将遍历的精灵都调用draw_bullet函数\n    ship.blitme()    # 绘制飞船\n    aliens.draw(screen)    # 绘制外星人\n\n    # 如果游戏处于非活动状态，就绘制Play按钮\n    if not stats.game_active:\n        play_button.draw_button()\n\n    # 让最近绘制的屏幕可见\n    pygame.display.flip()\n", "\n\n", "ship设置程序：", "\n\n", "# Ship主要是获取飞船外形，然后\n\nimport pygame\n\nclass Ship():\n\n    def __init__(self, ai_settings, screen):    # 形参列表中添加screen让飞船能够获取屏幕设置，添加ai_settings获取速度设置\n        \"\"\"初始化飞船并设置其初始位置\"\"\"\n        self.screen = screen    # 我们将形参screen存储在一个属性中，以便能够在update()中使用它\n        self.ai_settings = ai_settings    # 我们将形参ai_settings存储在一个属性中，以便能够在update()中使用它\n\n        # 加载飞船图像并获取其外接矩形\n        self.image = pygame.image.load('images/ship.bmp')    # 从文件中加载图片，并存储在self.image里面\n        self.rect = self.image.get_rect()    # get_rect()是处理矩形图形的方法，返回值包含矩形的居中属性center centerx centery\n                                             # 给这个属性赋值到self.rect中去\n        self.screen_rect = screen.get_rect()    # self.screen也是获得了rect属性，返回值也是矩形的居中属性\n\n        # 将每艘船的新飞船放在屏幕底部中央\n        self.rect.centerx = self.screen_rect.centerx    # self.rect代表的是加载图形的rect属性，将它的x坐标\n        self.rect.centery = self.screen_rect.centery                                                # 和背景图的x坐标居中属性相等, 意味着加载图片在背景图的中心位置\n        self.rect.bottom = self.screen_rect.bottom     # 加载图片底部和背景图底部相等       \n\n        # 在飞船的属性center中存储小数值\n        self.center1 = float(self.rect.centerx)\n        self.center2 = float(self.rect.centery)\n        \"\"\"其他关于矩形操作的位置关键词有：top,  left,  bottom,  right\n                                           topleft,  bottomleft,  topright,  bottomright\n                                           midtop,  midleft,  midbottom,  midright\n                                           center,  centerx,  centery\n                                           size,  width,  height\"\"\"\n        # 移动标志\n        self.moving_right = False\n        self.moving_left = False\n        self.moving_up = False\n        self.moving_down = False\n\n    def update(self):    \n        \"\"\"根据移动标志调整飞船的位置\"\"\"\n        # 更新飞船的center值，而不是rect\n        if self.moving_right and self.rect.right < self.screen_rect.right:\n            self.center1 += self.ai_settings.ship_speed_factor\n        if self.moving_left and self.rect.left > 0:    # 0代表背景的左侧\n            self.center1 -= self.ai_settings.ship_speed_factor\n        if self.moving_up and self.rect.top > 0:\n            self.center2 -= self.ai_settings.ship_speed_factor\n        if self.moving_down and self.rect.bottom < self.screen_rect.bottom:\n            self.center2 += self.ai_settings.ship_speed_factor\n\n        # 根据self.center更新rect对象\n        self.rect.centerx = self.center1\n        self.rect.centery = self.center2\n\n    def blitme(self):\n        \"\"\"在指定位置绘制飞船\"\"\"\n        self.screen.blit(self.image, self.rect)\n\n    def center_ship(self):\n        \"\"\"让飞船在屏幕上居中\"\"\"\n        self.center = self.screen_rect.centerx\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAddress)&lt;br /&gt;很明显第三参数是要写入的数据的地址&amp;#xff0c;而不是要写入的数据&amp;#xff0c;所以要用&lt;br /&gt;if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, Flash_Add, &amp;amp;Flash_data) !&amp;#61; HAL_OK)&lt;/p&gt;\n&lt;p&gt;但是我看我这里的HAL库&amp;#xff0c;已经是直接写数据的了&amp;#xff0c;可能版本不同&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;HAL_StatusTypeDef &lt;span class=\"hljs-constructor\"&gt;HAL_FLASH_Program(&lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt; TypeProgram, &lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt; Address, &lt;span class=\"hljs-params\"&gt;uint64_t&lt;/span&gt; Data)&lt;/span&gt;\n{\n  HAL_StatusTypeDef status &amp;#61; HAL_ERROR;\n  \n  &lt;span class=\"hljs-comment\"&gt;/* Process Locked */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;__HAL_LOCK(&amp;amp;&lt;span class=\"hljs-params\"&gt;pFlash&lt;/span&gt;)&lt;/span&gt;;\n  \n  &lt;span class=\"hljs-comment\"&gt;/* Check the parameters */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;_param(IS_FLASH_TYPEPROGRAM(TypeProgram)&lt;/span&gt;);\n  \n  &lt;span class=\"hljs-comment\"&gt;/* Wait for last operation to be completed */&lt;/span&gt;\n  status &amp;#61; &lt;span class=\"hljs-constructor\"&gt;FLASH_WaitForLastOperation((&lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt;)&lt;/span&gt;FLASH_TIMEOUT_VALUE);\n  \n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(status&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;HAL_OK)\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(TypeProgram&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;FLASH_TYPEPROGRAM_BYTE)\n    {\n      &lt;span class=\"hljs-comment\"&gt;/*Program byte (8-bit) at a specified address.*/&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FLASH_Program_Byte(Address, (&lt;span class=\"hljs-params\"&gt;uint8_t&lt;/span&gt;)&lt;/span&gt; Data);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(TypeProgram&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;FLASH_TYPEPROGRAM_HALFWORD)\n    {\n      &lt;span class=\"hljs-comment\"&gt;/*Program halfword (16-bit) at a specified address.*/&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FLASH_Program_HalfWord(Address, (&lt;span class=\"hljs-params\"&gt;uint16_t&lt;/span&gt;)&lt;/span&gt; Data);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(TypeProgram&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;FLASH_TYPEPROGRAM_WORD)\n    {\n      &lt;span class=\"hljs-comment\"&gt;/*Program word (32-bit) at a specified address.*/&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FLASH_Program_Word(Address, (&lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt;)&lt;/span&gt; Data);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n      &lt;span class=\"hljs-comment\"&gt;/*Program double word (64-bit) at a specified address.*/&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FLASH_Program_DoubleWord(Address, Data)&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;/* Wait for last operation to be completed */&lt;/span&gt;\n    status &amp;#61; &lt;span class=\"hljs-constructor\"&gt;FLASH_WaitForLastOperation((&lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt;)&lt;/span&gt;FLASH_TIMEOUT_VALUE);\n    \n    &lt;span class=\"hljs-comment\"&gt;/* If the program operation is completed, disable the PG Bit */&lt;/span&gt;\n    FLASH-&amp;gt;CR &amp;amp;&amp;#61; (~FLASH_CR_PG);  \n  }\n  \n  &lt;span class=\"hljs-comment\"&gt;/* Process Unlocked */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;__HAL_UNLOCK(&amp;amp;&lt;span class=\"hljs-params\"&gt;pFlash&lt;/span&gt;)&lt;/span&gt;;\n  \n  return status;\n}\n\nstatic void &lt;span class=\"hljs-constructor\"&gt;FLASH_Program_Byte(&lt;span class=\"hljs-params\"&gt;uint32_t&lt;/span&gt; Address, &lt;span class=\"hljs-params\"&gt;uint8_t&lt;/span&gt; Data)&lt;/span&gt;\n{\n  &lt;span class=\"hljs-comment\"&gt;/* Check the parameters */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;_param(IS_FLASH_ADDRESS(Address)&lt;/span&gt;);\n  \n  &lt;span class=\"hljs-comment\"&gt;/* If the previous operation is completed, proceed to program the new data */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;CLEAR_BIT(FLASH-&amp;gt;CR, FLASH_CR_PSIZE)&lt;/span&gt;;\n  FLASH-&amp;gt;CR &lt;span class=\"hljs-pattern-match\"&gt;|&amp;#61; &lt;span class=\"hljs-constructor\"&gt;FLASH_PSIZE_BYTE&lt;/span&gt;;\n  &lt;span class=\"hljs-constructor\"&gt;FLASH&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-constructor\"&gt;CR&lt;/span&gt; |&amp;#61; &lt;span class=\"hljs-constructor\"&gt;FLASH_CR_PG&lt;/span&gt;;\n\n  &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;__IO&lt;/span&gt; uint8&lt;span class=\"hljs-constructor\"&gt;_t&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;)&lt;span class=\"hljs-constructor\"&gt;Address&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Data&lt;/span&gt;;\n}\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["基于HAL库在STM32H7写入flash时死机，进入default_Handler卡死", ["STM32H7写入flash时死机，进入default_Handler卡死", "\n", "想实现把一个变量最后的运行结果存入flash,掉电后初始化把该flash地址的值赋给该变量", "\n", "以下是自己封装的flash读写函数  flash为2M 有两个bank 已确认代码长度 定义要写入的地址Flash_Add= 0x081E1000 不会影响到程序代码 主程序调用Flash_Write(ZERO)  ZERO是一个 uint32_t的全局变量", "\n", "void ", "Flash_Erase(", "void", ")", "\n{      \n    EraseInitStruct.TypeErase   = FLASH_TYPEERASE_SECTORS;\n      EraseInitStruct.Banks=FLASH_BANK_2;\n      EraseInitStruct.Sector=", "7", ";\n    EraseInitStruct.NbSectors= ", "1", ";\n      EraseInitStruct.VoltageRange=FLASH_VOLTAGE_RANGE_3;\n    \n     ", "if", " (", "HAL_FLASHEx_Erase(&EraseInitStruct, &SectorError)", " != HAL_OK)  \n     {\n         ", "HAL_FLASH_Lock()", ";  \n         printf(", "\" Error...1\\r\\n\"", ");\n         ", "Error_Handler()", ";\n     }\n}\nvoid ", "Flash_Write(", "u32", " Flash_data)", "\n{\n\n    ", "HAL_FLASH_Unlock()", ";        ", "//解锁", "\n    ", "Flash_Erase( )", ";         ", "//先擦除", "\n                            ", "//再写入", "\n", "//       printf(\" 擦除完成，准备写入......\\r\\n\");", "\n     \n    ", "if", " (", "HAL_FLASH_Program(FLASH_TYPEPROGRAM_FLASHWORD, Flash_Add, Flash_data)", " != HAL_OK)\n        {\n          \n     \n            printf(", "\" Error...2\\r\\n\"", "); \n            ", "Error_Handler( )", ";            \n          }\n   \n    ", "HAL_FLASH_Lock()", ";   ", "//上锁", "\n \n}\n\n", "\n", "调用的hal库函数", "\n", "HAL_StatusTypeDef ", "HAL_FLASH_Program", "(", "uint32_t", " TypeProgram, ", "uint32_t", " FlashAddress, ", "uint32_t", " DataAddress)", "\n", "{\n  HAL_StatusTypeDef status;\n  __IO ", "uint32_t", " *dest_addr = (__IO ", "uint32_t", " *)FlashAddress;\n  __IO ", "uint32_t", " *src_addr = (__IO ", "uint32_t", "*)DataAddress;\n  ", "uint32_t", " bank;\n  ", "uint8_t", " row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;\n\n  ", "/* Check the parameters */", "\n  ", "assert_param", "(", "IS_FLASH_TYPEPROGRAM", "(TypeProgram));\n  ", "assert_param", "(", "IS_FLASH_PROGRAM_ADDRESS", "(FlashAddress));\n\n  ", "/* Process Locked */", "\n  __HAL_LOCK(&pFlash);\n\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n  ", "if", "((", "IS_FLASH_PROGRAM_ADDRESS_BANK1", "(FlashAddress)) || (", "IS_FLASH_PROGRAM_ADDRESS_OTP", "(FlashAddress)))\n", "#", "else", "\n  ", "if", "(", "IS_FLASH_PROGRAM_ADDRESS_BANK1", "(FlashAddress))\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n  {\n    bank = FLASH_BANK_1;\n  }\n", "#", "if", " defined (DUAL_BANK)", "\n  ", "else", " ", "if", "(", "IS_FLASH_PROGRAM_ADDRESS_BANK2", "(FlashAddress))\n  {\n    bank = FLASH_BANK_2;\n  }\n", "#", "endif", " ", "/* DUAL_BANK */", "\n  ", "else", "\n  {\n    ", "return", " HAL_ERROR;\n  }\n\n  ", "/* Reset error code */", "\n  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;\n\n  ", "/* Wait for last operation to be completed */", "\n  status = ", "FLASH_WaitForLastOperation", "((", "uint32_t", ")FLASH_TIMEOUT_VALUE, bank);\n\n  ", "if", "(status == HAL_OK)\n  {\n", "#", "if", " defined (DUAL_BANK)", "\n    ", "if", "(bank == FLASH_BANK_1)\n    {\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n      ", "if", " (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)\n      {\n        ", "/* Set OTP_PG bit */", "\n        ", "SET_BIT", "(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);\n      }\n      ", "else", "\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n      {\n        ", "/* Set PG bit */", "\n        ", "SET_BIT", "(FLASH->CR1, FLASH_CR_PG);\n      }\n    }\n    ", "else", "\n    {\n      ", "/* Set PG bit */", "\n      ", "SET_BIT", "(FLASH->CR2, FLASH_CR_PG);\n    }\n", "#", "else", " ", "/* Single Bank */", "\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n      ", "if", " (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)\n      {\n        ", "/* Set OTP_PG bit */", "\n        ", "SET_BIT", "(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);\n      }\n      ", "else", "\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n      {\n        ", "/* Set PG bit */", "\n        ", "SET_BIT", "(FLASH->CR1, FLASH_CR_PG);\n      }\n", "#", "endif", " ", "/* DUAL_BANK */", "\n\n    __ISB();\n    __DSB();\n\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n    ", "if", " (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)\n    {\n      ", "/* Program an OTP word (16 bits) */", "\n      *(__IO ", "uint16_t", " *)FlashAddress = *(__IO ", "uint16_t", "*)DataAddress;\n    }\n    ", "else", "\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n    {\n      ", "/* Program the flash word */", "\n      ", "do", "\n      {\n        *dest_addr = *src_addr;\n        dest_addr++;\n        src_addr++;\n        row_index--;\n     } ", "while", " (row_index != ", "0U", ");\n    }\n\n    __ISB();\n    __DSB();\n\n    ", "/* Wait for last operation to be completed */", "\n    status = ", "FLASH_WaitForLastOperation", "((", "uint32_t", ")FLASH_TIMEOUT_VALUE, bank);\n\n", "#", "if", " defined (DUAL_BANK)", "\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n    ", "if", " (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)\n    {\n      ", "/* If the program operation is completed, disable the OTP_PG */", "\n      ", "CLEAR_BIT", "(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);\n    }\n    ", "else", "\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n    {\n      ", "if", "(bank == FLASH_BANK_1)\n      {\n        ", "/* If the program operation is completed, disable the PG */", "\n        ", "CLEAR_BIT", "(FLASH->CR1, FLASH_CR_PG);\n      }\n      ", "else", "\n      {\n        ", "/* If the program operation is completed, disable the PG */", "\n        ", "CLEAR_BIT", "(FLASH->CR2, FLASH_CR_PG);\n      }\n    }\n", "#", "else", " ", "/* Single Bank */", "\n", "#", "if", " defined (FLASH_OPTCR_PG_OTP)", "\n    ", "if", " (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)\n    {\n      ", "/* If the program operation is completed, disable the OTP_PG */", "\n      ", "CLEAR_BIT", "(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);\n    }\n    ", "else", "\n", "#", "endif", " ", "/* FLASH_OPTCR_PG_OTP */", "\n    {\n      ", "/* If the program operation is completed, disable the PG */", "\n      ", "CLEAR_BIT", "(FLASH->CR1, FLASH_CR_PG);\n    }\n", "#", "endif", " ", "/* DUAL_BANK */", "\n  }\n\n  ", "/* Process Unlocked */", "\n  __HAL_UNLOCK(&pFlash);\n\n  ", "return", " status;\n}\n\n", "\n", "我单步调试，发现运行到 *dest_addr = *src_addr;这一句时就会死机，进入default_Handler，本身对这句所在的while循环我也不太能理解，直接用的这个hal库函数，为什么前面 __IO uint32_t ", "src_addr = (__IO uint32_t", ")DataAddress;DataAddress难道不是我要写入的数据ZERO的值吗", "\n", "求大家给看看，不知道咋解决了，排查了很久，都不知道"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有用望采纳&lt;br /&gt;首先&amp;#xff0c;代码中存在一个小错误&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.type&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.KEYDOWN&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_RIGHT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_right&lt;/span&gt; &amp;#61;&amp;#61; True\n                elif event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_LEFT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_left&lt;/span&gt; &amp;#61;&amp;#61; True\n            elif event&lt;span class=\"hljs-selector-class\"&gt;.type&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.KEYUP&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.type&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_RIGHT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_right&lt;/span&gt; &amp;#61;&amp;#61; False\n                elif event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_LEFT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_left&lt;/span&gt; &amp;#61;&amp;#61; False\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;self.hj_image.move_right &amp;#61;&amp;#61; True 和 self.hj_image.move_left &amp;#61;&amp;#61; False 应该使用赋值语句 &amp;#61; 而不是比较语句 &amp;#61;&amp;#61;。&lt;/p&gt;\n&lt;p&gt;代码修正后应该是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.type&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.KEYDOWN&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_RIGHT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_right&lt;/span&gt; &amp;#61; True\n                elif event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_LEFT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_left&lt;/span&gt; &amp;#61; True\n            elif event&lt;span class=\"hljs-selector-class\"&gt;.type&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.KEYUP&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_RIGHT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_right&lt;/span&gt; &amp;#61; False\n                elif event&lt;span class=\"hljs-selector-class\"&gt;.key&lt;/span&gt; &amp;#61;&amp;#61; pygame&lt;span class=\"hljs-selector-class\"&gt;.K_LEFT&lt;/span&gt;:\n                    self&lt;span class=\"hljs-selector-class\"&gt;.hj_image&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.move_left&lt;/span&gt; &amp;#61; False\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["刚学习Python，编写的程序能正常运行，但火箭不能左右移动，如何解决？", ["刚学习Python，编写的程序能正常运行，但火箭不能左右移动，", "\n", "\n", "#主程序", "\n", "import", " sys\n", "import", " pygame\n", "from", " hj_image ", "import", " Hj_image\n\n", "class", " ", "Move_huojian", ":\n\n    ", "def", " ", "__init__", "(", "self", "):\n        pygame.init()\n\n        self.screen=pygame.display.set_mode((", "1200", ",", "600", "))\n        self.screen_name=pygame.display.set_caption(", "\"移动火箭\"", ")\n        self.bj_color=(", "90", ",", "150", ",", "190", ")\n        self.hj_image = Hj_image(self)\n        ", "#self.hj_speed=0.5", "\n\n    ", "def", " ", "_update_screen", "(", "self", "):\n        self.screen.fill(self.bj_color)\n        self.hj_image.draw_hj()\n        pygame.display.flip()\n\n    ", "def", " ", "_event_key", "(", "self", "):\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", "==pygame.QUIT:\n                sys.exit()\n            ", "elif", " event.", "type", " == pygame.KEYDOWN:\n                ", "if", " event.key == pygame.K_RIGHT:\n                    self.hj_image.move_right == ", "True", "\n                ", "elif", " event.key == pygame.K_LEFT:\n                    self.hj_image.move_left == ", "True", "\n            ", "elif", " event.", "type", " == pygame.KEYUP:\n                ", "if", " event.", "type", " == pygame.K_RIGHT:\n                    self.hj_image.move_right == ", "False", "\n                ", "elif", " event.key == pygame.K_LEFT:\n                    self.hj_image.move_left == ", "False", "\n\n    ", "def", " ", "run_game", "(", "self", "):\n        ", "while", " ", "True", ":\n            self._event_key()\n            self.hj_image.gengxin()\n            self._update_screen()\n\n\n\n\n", "if", " __name__==", "\"__main__\"", ":\n    a=Move_huojian()\n\n\n", "#火箭图片模块", "\n", "import", " pygame\n\n\n", "class", " ", "Hj_image", ":\n\n    ", "def", " ", "__init__", "(", "self,hj", "):\n        self.screen=hj.screen\n        self.screen_rect=hj.screen.get_rect()\n\n        self.image=pygame.image.load(", "\"C:/Users/xcz000/Desktop/My Python/images/arm.bmp\"", ")\n        self.image_rect=self.image.get_rect()\n\n        ", "#self.x = float(self.image_rect.x)", "\n\n        self.image_rect.midbottom=self.screen_rect.midbottom\n\n        self.move_right = ", "False", "\n        self.move_left = ", "False", "\n\n    ", "def", " ", "gengxin", "(", "self", "):\n        ", "if", " self.move_right:\n            self.image_rect.x+=", "1", "\n        ", "if", " self.move_left:\n            self.image_rect.x-=", "1", "\n\n    ", "def", " ", "draw_hj", "(", "self", "):\n        self.screen.blit(self.image,self.image_rect)\n\n"]], "Tag": "程序设计"}
{"Answer": "可以把当前运行的程序改名或者在同驱动器移动，这是不限制的。然后就可以下载你的软件，启动它，再关闭自身，让新程序删除老程序完成升级。", "Konwledge_Point": "主程序", "Question": ["java 有没有能运行一次后，删除自身的方法。为什么好多人说删除自身就是在写病毒...", ["我希望做一个能自动获得服务器上新版本并自我更新的程序。当检测到有新版本就用", "\n新版本替换自身。程序是个jar文件，目前的问题是，如何替换。", "\n\n", "我能想到的方法:主程序名为a.jar,因为正在运行的程序不能被删除替换,", "\n所以先将新版本下载，名为aTemp.jar,运行aTemp.jar。a.jar关闭自身，aTemp.jar删除", "\na.jar,复制aTemp.jar并名为a.jar。最后，删除自身。即aTemp.jar只运行一次。", "\n\n", "当然，一定有更好的方法，望有人指点。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用到是ec-canvas吗?&lt;br /&gt;可考虑使用微信小程序的分包策略&lt;br /&gt;&lt;a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/independent.html\" id=\"textarea_1650764124061_1650764267971_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/independent.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序 echarts 文件过大怎么解决呢？", ["用的是最简单的柱状图，", "\n      \n        ", "\n        \n      ", "\n      ", "\n      ", "\n        ", "\n          ", "https://echarts.apache.org/examples/zh/editor.html?c=dataset-simple0", "\n        ", "\n      ", "正常使用echarts没问题，但由于文件过大，下载了自定义版本就会报错。。下载了好多版本都不行", "\n", "\n        chart.", "clear", "()", "\n        chart.", "set", "Option", "(option)", ";\n\n", "\n", "Cannot read property 'clear' of null", "Cannot read property 'setOption' of null"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你找要求写子类就好了啊&amp;#xff0c;哪一步有困难&amp;#xff1f;&lt;br /&gt;参考一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; PI 3.1415926&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;container&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;container&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius1);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;suface_area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;valume&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n};\n\ncontainer::&lt;span class=\"hljs-built_in\"&gt;container&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius1)\n{\n    radius &amp;#61; radius1;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cube&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; container\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;cube&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius1) : &lt;span class=\"hljs-built_in\"&gt;container&lt;/span&gt;(radius1) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;suface_area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;*radius*radius;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;valume&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; radius * radius *radius;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;sphere&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; container\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;sphere&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius1) : &lt;span class=\"hljs-built_in\"&gt;container&lt;/span&gt;(radius1) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;suface_area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*PI*radius*radius;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;valume&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*PI*radius*radius*radius;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cylinder&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; container\n{\n&lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; height;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;cylinder&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; radius1,&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; height1) : &lt;span class=\"hljs-built_in\"&gt;container&lt;/span&gt;(radius1),&lt;span class=\"hljs-built_in\"&gt;height&lt;/span&gt;(height1) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;suface_area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*PI*radius*radius &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*PI*radius*height;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;valume&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; PI*radius*radius * height;\n    }\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    container *p &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;cube&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;6.0&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;suface_area&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;valume&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    p &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sphere&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;suface_area&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;valume&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    p &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;cylinder&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6.0&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;suface_area&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;valume&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["c++多态性相关问题", ["给出下面的抽象基类container:", "\n", "要求建立3个继承container的派生类cube、sphere与cylinder，让每一个派生类都包含虚函数surface_area()和volume()，分别用来计算正方体、球体和圆柱体的表面积及体积。要求写出主程序，应用C++的多态性，分别计算边长为6.0的正方体、半径为5.0的球体，以及半径为5.0和高为6.0的圆柱体的表面积和体积。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先你得定义多套样式&amp;#xff0c;比如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-css\"&gt;&lt;span class=\"hljs-selector-class\"&gt;.red&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;background&lt;/span&gt;: red;}\n&lt;span class=\"hljs-selector-class\"&gt;.green&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;background&lt;/span&gt;: green;}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;人后在页面里通过变量去控制&amp;#xff0c;页面根节点的类名&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&amp;lt;div :&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt;&amp;#61;&amp;#34;[&lt;span class=\"hljs-symbol\"&gt;bgClass&lt;/span&gt;]&amp;#34;&amp;gt;\n  &lt;span class=\"hljs-symbol\"&gt;123&lt;/span&gt;\n&amp;lt;/&lt;span class=\"hljs-symbol\"&gt;div&lt;/span&gt;&amp;gt;\n&amp;lt;&lt;span class=\"hljs-symbol\"&gt;button&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-symbol\"&gt;click&lt;/span&gt;&amp;#61;&amp;#34;&lt;span class=\"hljs-symbol\"&gt;bgClass&lt;/span&gt; &amp;#61; &amp;#39;&lt;span class=\"hljs-symbol\"&gt;red&lt;/span&gt;&amp;#39;&amp;#34;&amp;gt;&lt;span class=\"hljs-symbol\"&gt;red&lt;/span&gt;&amp;lt;/&lt;span class=\"hljs-symbol\"&gt;button&lt;/span&gt;&amp;gt;\n&amp;lt;&lt;span class=\"hljs-symbol\"&gt;button&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-symbol\"&gt;click&lt;/span&gt;&amp;#61;&amp;#34;&lt;span class=\"hljs-symbol\"&gt;bgClass&lt;/span&gt; &amp;#61; &amp;#39;&lt;span class=\"hljs-symbol\"&gt;green&lt;/span&gt;&amp;#39;&amp;#34;&amp;gt;&lt;span class=\"hljs-symbol\"&gt;green&lt;/span&gt;&amp;lt;/&lt;span class=\"hljs-symbol\"&gt;button&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;() {\n  &lt;span class=\"hljs-title\"&gt;return&lt;/span&gt; {\n    &lt;span class=\"hljs-title\"&gt;bgClass&lt;/span&gt;: &amp;#34;&lt;span class=\"hljs-title\"&gt;red&lt;/span&gt;&amp;#34;\n  };&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["如何实现微信小程序按钮改变全局颜色可js控制（外部样式）", ["如何实现wxml不使用内联样式，通过修改page的变量达到改色的效果？或者有更好的方法？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Circle_Area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s,j&amp;#61;&lt;span class=\"hljs-number\"&gt;3.14&lt;/span&gt;;\n    s&amp;#61;j*r*r;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆的面积&amp;#61;%f\\n&amp;#34;&lt;/span&gt;,s);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Trapezoid_Area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; b, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; h)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s;\n    s&amp;#61;(a&amp;#43;b)*h*&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;梯形的面积&amp;#61;%f&amp;#34;&lt;/span&gt;,s);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; style;\n   &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r; &lt;span class=\"hljs-comment\"&gt;// 圆的半径&lt;/span&gt;\n\n   &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b,h; &lt;span class=\"hljs-comment\"&gt;//梯形上底(a)&amp;#xff0c;下底(b)&amp;#xff0c; 高(h)的值&lt;/span&gt;\n\n    loop:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择图形类型: \\n 1.计算圆的面积&amp;#xff0c;请输入1&amp;#xff0c;空格后输入圆半径r的值\\n 例如1 r\\n 2.计算梯形面积&amp;#xff0c;请输入2&amp;#xff0c;空格后依次输入.上底(a)&amp;#xff0c;下底(b), 高(h)的值\\n 例如2 a b h\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %g %g %g&amp;#34;&lt;/span&gt;,&amp;amp;style,&amp;amp;r,&amp;amp;b,&amp;amp;h); &lt;span class=\"hljs-comment\"&gt;//输入选择的类型和得到输入的参数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(style&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;Circle_Area&lt;/span&gt;(r);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(style&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;Trapezoid_Area&lt;/span&gt;(r,b,h);    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;图形类型选择错误,请重新选择\\n&amp;#34;&lt;/span&gt;);\n }\n\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C语言编写自定义函数求圆和梯形的面积", ["编写自定义函数，实现求圆的面积、梯形面积，其中计算圆面积函数为Circle_ Area () ;梯形 面积函数Trapezoid_ Area(),并在主程序中实现调用。", "\n", "#", "include", "<stdio.h>", "\n", "void", " ", "Circle_Area", "()", "\n", "{\n    ", "float", " r,s,j=", "3.14", ";\n    ", "printf", "(", "\"请输入圆的半径r=\\n\"", ");\n    ", "scanf", "(", "\"%f\"", ",&r);\n    s=j*r*r;\n    ", "printf", "(", "\"圆的面积=%f\\n\"", ",s);\n}\n", "void", " ", "Trapezoid_Area", "()", "\n", "{\n    ", "float", " a,b,h,s;\n    ", "printf", "(", "\"请输入梯形的上底a= 下底b= 高h=\\n\"", ");\n    ", "scanf", "(", "\"%f%f%f\"", ",&a,&b,&h);\n    s=(a+b)*h*", "0.5", ";\n    ", "printf", "(", "\"梯形的面积=%f\"", ",s);\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " style;\n    loop:", "printf", "(", "\"请选择图形类型: \\n 1.计算圆的面积，请输入1\\n 2.计算梯形面积，请输入2\\n\"", ");\n    ", "scanf", "(", "\"%d\"", ",&style);\n    ", "if", "(style==", "1", ")\n    {\n        ", "Circle_Area", "();\n    }\n    ", "else", " ", "if", "(style==", "2", ")\n    {\n        ", "Trapezoid_Area", "();    \n    }\n    ", "else", "\n    {\n     ", "printf", "(", "\"图形类型选择错误,请重新选择\\n\"", ");\n }\n ", "goto", " loop;\n", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;goods&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; brand[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; price;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printGood&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; goods *t)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;goods&lt;/span&gt; t1, t2;\n    &lt;span class=\"hljs-type\"&gt;errno_t&lt;/span&gt; err;\n    FILE *&lt;span class=\"hljs-built_in\"&gt;File&lt;/span&gt;;\n    err &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen_s&lt;/span&gt;(&amp;amp;&lt;span class=\"hljs-built_in\"&gt;File&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;test.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (err !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;File&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d%s%s%f&amp;#34;&lt;/span&gt;, &amp;amp;t1.id, t1.name, t1.brand, &amp;amp;t1.price);\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;File&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d%s%s%f&amp;#34;&lt;/span&gt;, &amp;amp;t2.id, t2.name, t2.brand, &amp;amp;t2.price);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printGood&lt;/span&gt;(&amp;amp;t1);\n    &lt;span class=\"hljs-built_in\"&gt;printGood&lt;/span&gt;(&amp;amp;t2);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printGood&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; goods *t)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;商品编号&amp;#xff1a;%d\\n商品名称&amp;#xff1a;%s\\n生产厂商&amp;#xff1a;%s\\n价格&amp;#xff1a;%.2f\\n&amp;#34;&lt;/span&gt;, t-&amp;gt;id, t-&amp;gt;name, t-&amp;gt;brand, t-&amp;gt;price);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["看看这个问题如何整好啊", ["手工创建一个文本文件，里面包含两条商品的信息，内容如下：", "210001 电动平衡车 Phoenix 859", "210002 三层保暖卫衣 雅鹿 149.9", "根据商品信息，设计结构体类型，在主程序中创建两个结构体变量，从文件把商品信息读入两个变量。设计一个函数可以用如下格式输出一件商品的信息：", "商品编号：210001", "商品名称：电动平衡车", "生产厂商：Phoenix", "价格：859.00", "在主函数中输出两个结构体变量中商品的信息。"]], "Tag": "程序设计"}
{"Answer": "在app2的AndroidManifest.xml中配置你指定Activity的Intentfilter的action，如&lt;action android:name=\"ddd\"&gt;，intent中set这个action就可以了；\r\n另外该指定Activity还需添加一个属性：android:exported=\"true\"；", "Konwledge_Point": "主程序", "Question": ["Android怎么跳转到第三方应用的指定界面", ["如题，我现在要在自己的app1中跳转到另一个app2的聊天界面。现在能够实现跳转到那个app2，但是是它的主程序界面，怎么才能跳入指定界面呢？", "\nIntent intent = new Intent();", "\n                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);", "\n                        intent.setAction(Intent.ACTION_VIEW);", "\n                        intent.addCategory(Intent.CATEGORY_DEFAULT);// 应用过滤条件", "\n                        intent.setData(Uri.parse(\"lync://\"));", "\n                        context.startActivity(intent);// 现在只能跳转到APP2的入口界面"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;map默认是使用key排序的&amp;#xff0c;因为mathScore是value中的值&amp;#xff0c;需要借助vector和sort函数来实现对map的排序。&lt;br /&gt;调用add函数&amp;#xff0c;在map中添加数据及排序后的运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/876089436936185.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Stu&lt;/span&gt; \n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    string name;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    string sex;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; type;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; mathscore;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; engscore;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; cppscore;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Stu&lt;/span&gt;(){}\n    &lt;span class=\"hljs-built_in\"&gt;Stu&lt;/span&gt;(string n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,string s,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; math,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; eng,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; cpp):&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;(n),&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;(i),&lt;span class=\"hljs-built_in\"&gt;sex&lt;/span&gt;(s),&lt;span class=\"hljs-built_in\"&gt;mathscore&lt;/span&gt;(math),&lt;span class=\"hljs-built_in\"&gt;engscore&lt;/span&gt;(eng),&lt;span class=\"hljs-built_in\"&gt;cppscore&lt;/span&gt;(cpp){}\n    ~&lt;span class=\"hljs-built_in\"&gt;Stu&lt;/span&gt;(){}\n    &lt;span class=\"hljs-comment\"&gt;//暂时写这几个&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;string &lt;span class=\"hljs-title\"&gt;getname&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; name;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;get_id&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; id;};\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getmathscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; mathscore;}  &lt;span class=\"hljs-comment\"&gt;//不要漏了这里的const 否则cmp函数会报错&lt;/span&gt;\n\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;get_type&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; type;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set_type&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t)&lt;/span&gt;&lt;/span&gt;{type &amp;#61; t;}\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;change_id&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d)&lt;/span&gt;&lt;/span&gt;{id &amp;#61; d;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;change_name&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* nn)&lt;/span&gt;&lt;/span&gt;{name &amp;#61; nn;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;change_sex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* sx)&lt;/span&gt;&lt;/span&gt;{sex &amp;#61; sx;}\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set_mathscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f)&lt;/span&gt;&lt;/span&gt;{mathscore &amp;#61; f;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set_engscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f)&lt;/span&gt;&lt;/span&gt;{engscore &amp;#61; f;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set_cppscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f)&lt;/span&gt;&lt;/span&gt;{cppscore &amp;#61; f;}\n};\n\nmap&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt;Stu_map;  &lt;span class=\"hljs-comment\"&gt;//声明全局变量&amp;#xff0c;因为add函数中没有参数&amp;#xff0c;所以把这个作为全局变量&lt;/span&gt;\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;cmp&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt; p1,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt; p2)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//要用常数&amp;#xff0c;不然编译错误 &lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p1.second.&lt;span class=\"hljs-built_in\"&gt;getmathscore&lt;/span&gt;() &amp;gt; p2.second.&lt;span class=\"hljs-built_in\"&gt;getmathscore&lt;/span&gt;();\n}\n\nistream &amp;amp;&lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;gt;&amp;gt;(istream &amp;amp;is,Stu &amp;amp;stu)\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; temp[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; te;\n    is.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(temp,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    is.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(temp,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n    stu.&lt;span class=\"hljs-built_in\"&gt;change_id&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(temp)); \n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl; \n    is.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(temp,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n    stu.&lt;span class=\"hljs-built_in\"&gt;change_name&lt;/span&gt;(temp);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    is.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(temp,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(temp,&lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt;)||!&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(temp,&lt;span class=\"hljs-string\"&gt;&amp;#34;女&amp;#34;&lt;/span&gt;))\n    {\n        stu.&lt;span class=\"hljs-built_in\"&gt;change_sex&lt;/span&gt;(temp);\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;性别输入错误  Σ( ° △ °|||)︴&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    }\n\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;科目成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数学成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;te;\n    stu.&lt;span class=\"hljs-built_in\"&gt;set_mathscore&lt;/span&gt;(te);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入英语成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;te;\n    stu.&lt;span class=\"hljs-built_in\"&gt;set_engscore&lt;/span&gt;(te);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入C&amp;#43;&amp;#43;成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;te;\n    stu.&lt;span class=\"hljs-built_in\"&gt;set_cppscore&lt;/span&gt;(te);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;add_stu&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choice&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    Stu stu;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;1.添加大一学生&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;2.添加大二学生&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的选择&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;choice;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (choice) \n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: \n        {\n            cin &amp;gt;&amp;gt; stu;\n            stu.&lt;span class=\"hljs-built_in\"&gt;set_type&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            Stu_map.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(map&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;, Stu&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;value_type&lt;/span&gt;(stu.&lt;span class=\"hljs-built_in\"&gt;get_id&lt;/span&gt;(), stu));\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;添加成功&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: \n        {\n\n            cin &amp;gt;&amp;gt; stu;\n            stu.&lt;span class=\"hljs-built_in\"&gt;set_type&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n            Stu_map.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(map&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;, Stu&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;value_type&lt;/span&gt;(stu.&lt;span class=\"hljs-built_in\"&gt;get_id&lt;/span&gt;(), stu));\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;添加成功&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n\n\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//调用函数添加4个数据&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;add_stu&lt;/span&gt;();\n    map&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt;::iterator it &amp;#61; Stu_map.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;();\n    vector&amp;lt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt; &amp;gt; arr;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; it !&amp;#61; Stu_map.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;(); it&amp;#43;&amp;#43;)\n    {\n        arr.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;make_pair&lt;/span&gt;(it-&amp;gt;first,it-&amp;gt;second) );\n    }\n    &lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(arr.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;(),arr.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;(),cmp);\n    &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    vector&amp;lt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,Stu&amp;gt; &amp;gt;::iterator is &amp;#61; arr.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; is !&amp;#61; arr.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;(); is&amp;#43;&amp;#43;)\n    {\n        cout &amp;lt;&amp;lt; is-&amp;gt;first &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; is-&amp;gt;second.&lt;span class=\"hljs-built_in\"&gt;getname&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; is-&amp;gt;second.&lt;span class=\"hljs-built_in\"&gt;getmathscore&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["如何自定义map模板排序", ["我先定义了一个Stu类：", "\n", "class", " Stu {\n", "private", ":\n    ", "string", " name;\n    ", "int", " id;\n    ", "string", " sex;\n    ", "int", " ", "type", ";\n    ", "float", " mathscore;\n    ", "float", " engscore;\n    ", "float", " cppscore;\npublic:\n    ", "Stu()", "=default;\n    ", "Stu(", "string", " ", "n", ",", "int", " ", "i", ",", "string", " ", "s", ",", "float", " ", "math", ",", "float", " ", "eng", ",", "float", " ", "cpp", ")", ":name(n),id(i),sex(s),mathscore(math),engscore(eng),cppscore(cpp){};\n    ~", "Stu()", ";\n\n", "\n", "主程序中定义了map<int,Stu>Stu_map;", "默认是按id排序，如何实现按mathscore（数学成绩）排序并输出？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不能foreach&amp;#xff0c;可以用for&amp;#xff0c;调用List类的remove或者removeAt可以从队列中移除对象。&lt;br /&gt;直接替换的话也不能用foreach&amp;#xff0c;也是for&amp;#xff0c;然后直接更改对应下标的OperationBean 对象就行&amp;#xff0c;逻辑大概如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void x(CalculateTransferBean obj, &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;OperationBean&amp;gt; obj1)\n        {\n            &lt;span class=\"hljs-meta\"&gt;#region  读取参数&lt;/span&gt;\n            string &lt;span class=\"hljs-variable\"&gt;_DrawingItemNumber&lt;/span&gt; &amp;#61; obj.DrawingItemNumber;\n            string &lt;span class=\"hljs-variable\"&gt;_TemplateNo&lt;/span&gt; &amp;#61; obj.TemplateNo;\n            string &lt;span class=\"hljs-variable\"&gt;_ConfigurationParameter&lt;/span&gt; &amp;#61; obj.ConfigurationParameter;\n            string &lt;span class=\"hljs-variable\"&gt;_RingTemplateNo&lt;/span&gt; &amp;#61; obj.RingTemplateNo;\n\n            &lt;span class=\"hljs-meta\"&gt;#endregion&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;OperationBean&amp;gt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList&lt;/span&gt; &amp;#61; obj.OperationBeanList;&lt;span class=\"hljs-comment\"&gt;// _OperationBeanList.Remove&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;_OperationBeanList&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (OperationBean b0 &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;OperationBean&amp;gt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList0&lt;/span&gt; &amp;#61; b0.OperBeanList;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;_OperationBeanList0&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    {\n                        &lt;span class=\"hljs-comment\"&gt;//要删除或者更换列表对象不能用foreach&amp;#xff0c;迭代变量不能直接替换&amp;#xff0c;但是可以修改内部属性值&lt;/span&gt;\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (var i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList0&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt;;i&amp;#43;&amp;#43;)\n                        {\n                            var b1 &amp;#61; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList0&lt;/span&gt;[i];\n                            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b1.OperCalculationRules.Length &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                            {\n                                b1 &amp;#61; new OperationBean();\n                                &lt;span class=\"hljs-comment\"&gt;//对新的b1属性进行赋值或者计算&lt;/span&gt;\n                                &lt;span class=\"hljs-variable\"&gt;_OperationBeanList0&lt;/span&gt;[i] &amp;#61; b1;&lt;span class=\"hljs-comment\"&gt;///////////更新这个下标的对象为新的OperationBean&lt;/span&gt;\n                            }\n                            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                            {\n                                &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;OperationBean&amp;gt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList1&lt;/span&gt; &amp;#61; b1.OperBeanList;\n                                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;_OperationBeanList1&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                                {\n                                    &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (OperationBean b2 &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;_OperationBeanList1&lt;/span&gt;)\n                                    {\n\n                                    }\n                                }\n                            }\n                        }\n                        &lt;span class=\"hljs-comment\"&gt;/*foreach (OperationBean b1 in _OperationBeanList0)\n                        {\n                            if (b1.OperCalculationRules.Length &amp;gt; 0)   //假如存在计算规则\n                            {\n                                //删除b1\n                                //需要用obj1替换b1 ,其中obj1是类似于b1的OperationBean组\n                            }\n                            else\n                            {\n                                List&amp;lt;OperationBean&amp;gt; _OperationBeanList1 &amp;#61; b1.OperBeanList;\n                                if (_OperationBeanList1.Count &amp;gt; 0)\n                                {\n                                    foreach (OperationBean b2 in _OperationBeanList1)\n                                    {\n\n                                    }\n                                }\n                            }\n                        }*/&lt;/span&gt;\n                    }\n                }\n            }\n        }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C#如何实现复杂嵌套JSON数据的增删改", ["问题遇到的现象和发生背景", "\n", "我在学习中需要根据某条件对嵌套JSON中的实体类进行增删改处理，例如下面的主程序中，如果某一层的OperCalculationRules.Length > 0，我就需要删除这一层的OperationBean，然后添加新的OperationBean来代替，并且新的OperationBean可能是一个OperationBean组（即不止一个OperationBean），其内部嵌套的长度不等。", "\n", "我想请教的是这种情况下代码如何写？即需要在主程序中实现以下功能：", "\"//删除b1\"", "\"//需要用obj1替换b1 ,其中obj1是类似于b1的OperationBean组\"", "\n", "问题相关代码，请勿粘贴截图", "\n", "//主程序", "\n ", "private", " ", "void", " ", "x", "(", "CalculateTransferBean obj, List<OperationBean> obj1", ")", "\n        {\n            ", "#", "region", "  读取参数", "\n            ", "string", " _DrawingItemNumber = obj.DrawingItemNumber;\n            ", "string", " _TemplateNo = obj.TemplateNo;\n            ", "string", " _ConfigurationParameter = obj.ConfigurationParameter;\n            ", "string", " _RingTemplateNo = obj.RingTemplateNo;\n            ", "#", "endregion", "\n            List<OperationBean> _OperationBeanList = obj.OperationBeanList;\n            ", "if", " (_OperationBeanList.Count > ", "0", ")\n            {\n                ", "foreach", " (OperationBean b0 ", "in", " _OperationBeanList)   \n                {\n                    List<OperationBean> _OperationBeanList0 = b0.OperBeanList;\n                        ", "if", " (_OperationBeanList0.Count > ", "0", ")\n                        {\n                            ", "foreach", " (OperationBean b1 ", "in", " _OperationBeanList0) \n                            {\n                            ", "if", " (b1.OperCalculationRules.Length > ", "0", ")   ", "//假如存在计算规则", "\n                            {\n                                ", "//删除b1", "\n                                ", "//需要用obj1替换b1 ,其中obj1是类似于b1的OperationBean组", "\n                            }\n                            ", "else", "\n                            {\n                                List<OperationBean> _OperationBeanList1 = b1.OperBeanList;\n                                ", "if", " (_OperationBeanList1.Count > ", "0", ")\n                                {\n                                    ", "foreach", " (OperationBean b2 ", "in", " _OperationBeanList1) \n                                    {\n\n\n                                    }\n                                }\n                            }\n                            }\n                        }\n                }\n            }\n        }\n\n", "//实体类", "\n", "public", " ", "class", " ", "CalculateTransferBean", "\n    {\n        ", "public", " String MPMProcessNumber { ", "set", "; ", "get", "; }\n        ", "public", " String TemplateNo { ", "set", "; ", "get", "; }\n        ", "public", " List<OperationBean> OperationBeanList { ", "set", "; ", "get", "; }", "// 工序集合", "\n    }\n\n", "//实体类", "\n", "public", " ", "class", " ", "OperationBean", "\n    {\n        ", "public", " String OperNumber { ", "set", "; ", "get", "; }", "// 操作编号", "\n        ", "public", " String OperName { ", "set", "; ", "get", "; }", "// 操作名称", "\n        ", "public", " String OperType { ", "set", "; ", "get", "; }", "// 操作类型", "\n        ", "public", " String OperSymble { ", "set", "; ", "get", "; }", "// 操作代号", "\n        ", "public", " String OperLabel { ", "set", "; ", "get", "; }", "// 操作标签编号", "\n        ", "public", " String OperCalculationRules { ", "set", "; ", "get", "; }", "// 计算规则", "\n        ", "public", " String OperModifyFlag { ", "set", "; ", "get", "; }", "// 是否修改", "\n        ", "public", " String OperDescription { ", "set", "; ", "get", "; }", "// 操作详细说明（返回信息）", "\n        ", "public", " String OperTexingFuhao { ", "set", "; ", "get", "; }", "// 操作特性符号（返回信息）", "\n        ", "public", " List<OperationBean> OperBeanList { ", "set", "; ", "get", "; }", "// 参数集合", "\n    }\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "b1.OperDescription = \"XX\";", "b1.OperSymble = \"AA\";", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的readTxt方法都没有返回值&amp;#xff0c;编译不报错吗&amp;#xff1f;  修改下方法&amp;#xff0c;可以是void&amp;#xff0c;可以有返回值。  然后重新编译就ok了。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["引用自己写的类，显示类方法", ["定义了一个读取文件 的类ReadTxtFile，主类是Read，在主程序中引用类ReadTxtFile,但是说类的方法未定义 ，怎么解决？", "下面这个是ReadTxtFile的定义 ：", "\n", "package", " test;\n", "import", " java.io.*;\n\n", "public", " ", "class", " ReadTxtFile {\n    ", "public", " readTxt(String filePath) {\n          \n          ", "try", " {\n            ", "File", " ", "file", " = ", "new", " ", "File", "(filePath);\n            ", "if", "(", "file", ".isFile() && ", "file", ".exists()) {\n              InputStreamReader isr = ", "new", " InputStreamReader(", "new", " FileInputStream(", "file", "), ", "\"utf-8\"", ");\n              BufferedReader br = ", "new", " BufferedReader(isr);\n              String lineTxt = ", "null", ";\n              ", "while", " ((lineTxt = br.readLine()) != ", "null", ") {\n                System.out.", "println", "(lineTxt);\n              }\n              br.close();\n            } ", "else", " {\n              System.out.", "println", "(", "\"no exit\"", ");\n            }\n          } ", "catch", " (Exception e) {\n            System.out.", "println", "(", "\"wrong doing\"", ");\n          }\n          \n          }\n}\n\n下面是主程序：\n```java\n", "package", " test;\n", "import", " test.ReadTxtFile;\n", "public", " ", "class", " ", "Read", " {\n      ", "public", " ", "static", " ", "void", " main(String[] args) {\n            String filePath = ", "\"F:\\\\javawork\\\\readtxtfile\\\\mdata.txt\"", ";\n            ReadTxtFile f = ", "new", " ReadTxtFile();\n            f.readTxt(filePath);\n          }\n\n}\n\n\n", "\n", "下面是运行结果：", "\n", "Exception ", "in", " thread ", "\"main\"", " java.lang.", "Error", ": Unresolved compilation problem: \n    The method readTxt(String) is undefined ", "for", " the ", "type", " ReadTxtFile\n\n    at ", "test", "/", "test", ".", "Read", ".main(", "Read", ".java:7)\n\n", "\n", "求解："]], "Tag": "程序设计"}
{"Answer": "&lt;mx:DateChooser  change=\"date1_changeHandler(DateChooser(event.target).selectedDate\" /&gt;  \r\n\r\nDateChooser(event.target) 这句改成 (event.target as DateChooser).selectedDate;\r\n\r\n试一下", "Konwledge_Point": "主程序", "Question": ["flex中datachooser没属性怎么回事", ["主程序：", "\n[code=\"java\"]", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n                backgroundGradientAlphas=\"[0x000000,0x00ffff]\"", "\n                xmlns:dataEntryContorls=\"com.flexCoreComponents.uiContorls.dataEntryContorls.*\" xmlns:local=\"*\">", "\n\n", "<dataEntryContorls:DateChooser />\n", "\n\n", "/mx:Application", "\n[/code]", "\n\n", "CheckBox_flex3引用代码", "\n[code=\"java\"]", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n\n", "<mx:Script>\n    <![CDATA[\n\n        protected function date1_changeHandler(date:Date):void\n        {\n            label_1.text = \"date:\" + date.getFullYear();\n        }\n\n    ]]>\n</mx:Script>\n\n<mx:VBox>\n<mx:DateChooser  change=\"date1_changeHandler(DateChooser(event.target).selectedDate\" />\n    <mx:Label id=\"label_1\" text=\"date:\" />\n</mx:VBox>\n", "\n\n", "/mx:Canvas", "\n[/code]", "\n问题是date1_changeHandler(DateChooser(event.target).selectedDate中的[color=red]selectedDate[/color]属性没有，这是为什么啊？我把这个DateChooser的组件放在主程序中则能够点出selectedDate这个属性。求解决！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;换了函数顺序就报错&amp;#xff0c;可能的原因是某个函数没有初始化就使用。&lt;br /&gt;比如当函数func1在main函数前定义时main函数可以直接调用的&amp;#xff0c;但是当func1在main后定义那么main不初始化就调用fun1就会报错&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["程序发生错误,Dev-C++,非VS Code！", ["2022年7月，我在Dev-C++6.3-Beta2上编了一个Blackjack，原来的代码在《C++游戏：编程入门(第4版) - [美]Michael Dowson》第300页。可是我只换了函数的顺序就出错了。我的代码如下：", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "#", "include", " ", "<vector>", "\n", "#", "include", " ", "<algorithm>", "\n", "#", "include", " ", "<ctime>", "\n", "#", "include", " ", "<windows.h>", "\n", "#", "include", " ", "<ostream>", "\n", "#", "include", " ", "<bits/stdc++.h>", "\n", "#", "include", " ", "<time.h>", "\n", "using", " ", "namespace", " std;\n", "//类区 ", "\n", "class", " ", "Card", "\n{\n    ", "public", ":\n        ", "enum", " ", "rank", "{ACE=", "1", ",TWO,THREE,FOUR,SIX,SEVEN,EIGHT,NINE,TEN,JACK,QUEEN,KING};\n        ", "enum", " ", "suit", "{CLUBS,DIAMONDS,HEARTS,SPADES};\n        ", "friend", " ostream& ", "operator", "<<(ostream& os,", "const", " Card& aCard);\n        ", "Card", "(rank r=ACE,suit s=SPADES,", "bool", " ifu=", "true", ");\n        ", "int", " ", "GetValue", "()", " ", "const", ";\n        ", "void", " ", "Flip", "()", ";\n    ", "private", ":\n        rank m_Rank;\n        suit m_Suit;\n        ", "bool", " m_IsFaceUp;\n};\n", "class", " ", "Hand", "\n{\n    ", "public", ":\n        ", "Hand", "();\n        ", "virtual", " ~", "Hand", "();\n        ", "void", " ", "Add", "(Card* pCard)", ";\n        ", "void", " ", "Clear", "()", ";\n        ", "int", " ", "GetTotal", "()", " ", "const", ";\n    ", "protected", ":\n        vector<Card*>m_Cards;\n};\n", "class", " ", "GenericPlayer", ":", "public", " Hand{\n    ", "friend", " ostream& ", "operator", "<<(ostream& os,", "const", " GenericPlayer& aGenericPlayer);\n    ", "public", ":\n        ", "GenericPlayer", "(", "const", " string& name=", "\"\"", ");\n        ", "virtual", " ~", "GenericPlayer", "();\n        ", "virtual", " ", "bool", " ", "IsHitting", "()", "const", "=", "0", ";\n        ", "bool", " ", "IsBusted", "()", "const", ";\n        ", "void", " ", "Bust", "()", "const", ";\n    ", "protected", ":\n        string m_name;\n};\n", "class", " ", "Player", ":", "public", " GenericPlayer{\n    ", "public", ":\n        ", "Player", "(", "const", " string& name=", "\"\"", ");\n        ", "virtual", " ~", "Player", "();\n        ", "virtual", " ", "bool", " ", "IsHitting", "()", "const", ";\n        ", "void", " ", "win", "()", "const", ";\n        ", "void", " ", "lose", "()", "const", ";\n        ", "void", " ", "push", "()", "const", ";\n};\n", "class", " ", "House", ":", "public", " GenericPlayer{\n    ", "public", ":\n        ", "House", "(", "const", " string& name=", "\"House\"", ");\n        ", "virtual", " ~", "House", "();\n        ", "virtual", " ", "bool", " ", "IsHitting", "()", "const", ";\n        ", "void", " ", "FlipFirstCard", "()", ";\n};\n", "class", " ", "Deck", ":", "public", " Hand{\n    ", "public", ":\n        ", "Deck", "();\n        ", "virtual", " ~", "Deck", "();\n        ", "void", " ", "Pop", "()", ";\n        ", "void", " ", "Shuff", "()", ";\n        ", "void", " ", "Deal", "(Hand& aHand)", ";\n        ", "void", " ", "AdditionCards", "(GenericPlayer& aGenericPlayer)", ";\n};\n", "class", " ", "Game", "{\n    ", "public", ":\n        ", "Game", "(", "const", " vector<string>& names);\n        ~", "Game", "();\n        ", "void", " ", "Play", "()", ";\n    ", "private", ":\n        Deck m_Deck;\n        House m_House;\n        vector<Player> m_Players;\n};\n", "//Card代码区 ", "\nCard::", "Card", "(rank r,suit s,", "bool", " ifu):", "m_Rank", "(r),", "m_Suit", "(s),", "m_IsFaceUp", "(ifu)\n{}\n", "int", " ", "Card::GetValue", "()", " ", "const", "{\n    ", "int", " value=", "0", ";\n    ", "if", "(m_IsFaceUp){\n        value=m_Rank;\n        ", "if", "(value>", "10", "){\n            value=", "10", ";\n        }\n    }\n    ", "return", " value;\n}\n", "void", " ", "Card::Flip", "()", "{\n    m_IsFaceUp=!(m_IsFaceUp);\n}\n", "//Hand代码区 ", "\nHand::", "Hand", "(){\n    m_Cards.", "reserve", "(", "7", ");\n}\nHand::~", "Hand", "(){\n    ", "Clear", "();\n}\n", "void", " ", "Hand::Add", "(Card* pCard)", "{\n    m_Cards.", "push_back", "(pCard);\n}\n", "void", " ", "Hand::Clear", "()", "{\n    vector<Card*>::iterator iter=m_Cards.", "begin", "();\n    ", "for", "(iter=m_Cards.", "begin", "();iter!=m_Cards.", "end", "();++iter){\n        ", "delete", " *iter;\n        *iter=", "0", ";\n    }\n    m_Cards.", "clear", "();\n}\n", "int", " ", "Hand::GetTotal", "()", "const", "{\n    ", "if", "(m_Cards.", "empty", "()){\n        ", "return", " ", "0", ";\n    }\n    ", "if", "(m_Cards[", "0", "]->", "GetValue", "()==", "0", "){\n        ", "return", " ", "0", ";\n    }\n    ", "int", " total=", "0", ";\n    vector<Card*>::const_iterator iter;\n    ", "for", "(iter=m_Cards.", "begin", "();iter!=m_Cards.", "end", "();++iter){\n        total+=(*iter)->", "GetValue", "();\n    }\n    ", "bool", " containsAce=", "false", ";\n    ", "for", "(iter=m_Cards.", "begin", "();iter!=m_Cards.", "end", "();++iter){\n        ", "if", "((*iter)->", "GetValue", "()==Card::ACE){\n            containsAce=", "true", ";\n        }\n    }\n    ", "if", "(containsAce ", "and", " total<=", "11", "){\n        total+=", "10", ";\n    }\n    ", "return", " total;\n}\n", "//GenericPlayer代码区", "\nGenericPlayer::", "GenericPlayer", "(", "const", " string& name):\n    ", "m_name", "(name)\n{}\nGenericPlayer::~", "GenericPlayer", "()\n{}\n", "bool", " ", "GenericPlayer::IsBusted", "()", "const", "{\n    ", "return", " (", "GetTotal", "()>", "21", ");\n}\n", "void", " ", "GenericPlayer::Bust", "()", "const", "{\n    cout<<m_name<<", "\"降级了\\n\"", ";\n}\n", "//Player代码区", "\nPlayer::", "Player", "(", "const", " string& name):\n    ", "GenericPlayer", "(name)\n{}\nPlayer::~", "Player", "()\n{}\n", "bool", " ", "Player::IsHitting", "()", "const", "{\n    cout<<m_name<<", "\",你想攻击吗?(y/n):\"", ";\n    ", "char", " resP;\n    cin>>resP;\n    ", "return", " (resP==", "'y'", " ", "or", " resP==", "'Y'", "); \n}\n", "void", " ", "Player::win", "()", "const", "{\n    cout<<m_name<<", "\"赢了\\n\"", ";\n}\n", "void", " ", "Player::lose", "()", "const", "{\n    cout<<m_name<<", "\"输了\\n\"", ";\n}\n", "void", " ", "Player::push", "()", "const", "{\n    cout<<m_name<<", "\"打平\\n\"", ";\n}\n", "//House代码区", "\nHouse::", "House", "(", "const", " string& name):\n    ", "GenericPlayer", "(name)\n{}\nHouse::~", "House", "()\n{}\n", "bool", " ", "House::IsHitting", "()", "const", "{\n    ", "return", " (", "GetTotal", "()<=", "16", ");\n}\n", "void", " ", "House::FlipFirstCard", "()", "{\n    ", "if", "(!(m_Cards.", "empty", "())){\n        m_Cards[", "0", "]->", "Flip", "();\n    }", "else", "{\n        cout<<", "\"没有牌需要翻!\\n\"", ";\n    }\n}\n", "//Deck代码区", "\nDeck::", "Deck", "(){\n    m_Cards.", "reserve", "(", "52", ");\n    ", "Pop", "();\n}\nDeck::~", "Deck", "()\n{}\n", "void", " ", "Deck::Pop", "()", "{\n    ", "Clear", "();\n    ", "for", "(", "int", " s=Card::CLUBS;s<=Card::SPADES;++s){\n        ", "for", "(", "int", " r=Card::ACE;r<=Card::ACE;++r){\n            ", "Add", "(", "new", " ", "Card", "(", "static_cast", "<Card::rank>(r),", "static_cast", "<Card::suit>(s)));\n        }\n    }\n}\n", "void", " ", "Deck::Shuff", "()", "{\n    ", "random_shuffle", "(m_Cards.", "begin", "(),m_Cards.", "end", "());\n}\n", "void", " ", "Deck::Deal", "(Hand& aHand)", "{\n    ", "if", "(!m_Cards.", "empty", "()){\n        aHand.", "Add", "(m_Cards.", "back", "());\n        m_Cards.", "pop_back", "();\n    }", "else", "{\n        cout<<", "\"没牌了,无法成交\\n\"", ";\n    }\n}\n", "void", " ", "Deck::AdditionCards", "(GenericPlayer& aGenericPlayer)", "{\n    cout<<", "\"\\n\"", ";\n    ", "while", "(!(aGenericPlayer.", "IsBusted", "()) ", "and", " aGenericPlayer.", "IsHitting", "()){\n        ", "Deal", "(aGenericPlayer);\n        cout<<aGenericPlayer<<endl;\n        ", "if", "(aGenericPlayer.", "IsBusted", "()){\n            aGenericPlayer.", "Bust", "();\n        }\n    }\n}\n", "//Game代码区", "\nGame::", "Game", "(", "const", " vector<string>& names){\n    vector<string>::const_iterator pName;\n    ", "for", "(pName=names.", "begin", "();pName!=names.", "end", "();++pName){\n        m_Players.", "push_back", "(", "Player", "(*pName));\n    }\n    ", "srand", "(", "static_cast", "<", "unsigned", " ", "int", ">(", "time", "(", "0", ")));\n    m_Deck.", "Pop", "();\n    m_Deck.", "Shuff", "();\n}\nGame::~", "Game", "()\n{}\n", "void", " ", "Game::Play", "()", "{\n    vector<Player>::iterator pPl;\n    ", "for", "(", "int", " i=", "0", ";i<", "2", ";++i){\n        ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n            m_Deck.", "Deal", "(*pPl);\n        }\n        m_Deck.", "Deal", "(m_House);\n    }\n    m_House.", "FlipFirstCard", "();\n    ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n            cout<<*pPl<<", "\"\\n\"", ";\n    }\n    cout<<m_House;\n    ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n        m_Deck.", "AdditionCards", "(*pPl);\n    }\n    m_House.", "FlipFirstCard", "();\n    cout<<endl<<m_House;\n    m_Deck.", "AdditionCards", "(m_House);\n    ", "if", "(m_House.", "IsBusted", "()){\n        ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n            ", "if", "(!(pPl->", "IsBusted", "())){\n                pPl->", "win", "();\n            }\n        }\n    }", "else", "{\n        ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n            ", "if", "(!(pPl->", "IsBusted", "())){\n                ", "if", "(pPl->", "GetTotal", "()>m_House.", "GetTotal", "()){\n                    pPl->", "win", "();\n                }", "else", " ", "if", "(pPl->", "GetTotal", "()<m_House.", "GetTotal", "()){\n                    pPl->", "lose", "();\n                }", "else", "{\n                    pPl->", "push", "();\n                }\n            }\n        }\n    }\n    ", "for", "(pPl=m_Players.", "begin", "();pPl!=m_Players.", "end", "();++pPl){\n        pPl->", "Clear", "();\n    }\n    m_House.", "Clear", "();\n}\n", "//main主程序", "\nostream& ", "operator", "<<(ostream& os,", "const", " Card& aCard);\nostream& ", "operator", "<<(ostream& os,", "const", " GenericPlayer& aGenericPlayer);\n", "int", " ", "main", "()", "{\n    cout<<", "\"打牌\\nVersion 1.16.5\"", ";\n    ", "Sleep", "(", "3000", ");\n    ", "system", "(", "\"cls\"", ");\n    cout<<", "\"\\t\\t欢迎来到打牌游戏!\\n\\n\"", ";\n    ", "int", " numP=", "0", ";\n    ", "while", "(numP<", "1", " ", "or", " numP>", "7", "){\n        cout<<", "\"有多少玩家?(1-7)\"", ";\n        cin>>numP;\n    }\n    vector<string> names;\n    string name;\n    ", "for", "(", "int", " i=", "0", ";i<numP;++i){\n        cout<<", "\"输入玩家名称:\"", ";\n        cin>>name;\n        names.", "push_back", "(name);\n    }\n    cout<<", "\"\\n\"", ";\n    ", "Game ", "aGame", "(names)", ";\n    ", "char", " ag=", "'y'", ";\n    ", "while", "(ag!=", "'n'", " ", "and", " ag!=", "'N'", " ", "and", " ag!=", "'c'", " ", "and", " ag!=", "'C'", "){\n        aGame.", "Play", "();\n        cout<<", "\"\\n按\\\"c\\\"查看源代码\\n你想重玩吗?(y/n/c):\"", ";\n        cin>>ag;\n    }\n    ", "if", "(ag==", "'c'", "){\n        ", "//system(\"start http://\");", "\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "报错内容：", "\n", " ", "\n", "求帮助！"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201707/28/1501232275_377474.png)\r\n 在这个目录下创建你的自定义的drawable文件 ![图片说明](https://img-ask.csdn.net/upload/201707/28/1501232417_585203.png)\r\n \r\n 选择你要创建的具体是什么类型的drawable![图片说明](https://img-ask.csdn.net/upload/201707/28/1501232477_816051.png)\r\n 比如选择shape \r\n 那么你创建出来的就是一个shape类型的drawable 了  具体参数百度一下就好了.\r\n 在布局中如果想用这个shape 那么就可以直接@drawable/你定义的文件名   就可以了", "Konwledge_Point": "主程序", "Question": ["drawable 错误新手求安卓大神解答", ["title xml", "\n\n", "activity_main.xml", "\n主程序", "\nlogcat", "\n\n", "求解答"]], "Tag": "程序设计"}
{"Answer": "用URL试一试，我这儿有一段部分代码，是打开一个URL流，然后写至服务器本机的   \r\n    \r\n  java.io.BufferedInputStream   in=new   java.io.BufferedInputStream(new   java.net.URL(file).openConnection().getInputStream());   \r\n  java.io.FileOutputStream   ou=new   java.io.FileOutputStream(newFile);   \r\n  int   i;   \r\n  while((i=in.read())!=-1)ou.write(i);   \r\n  in.close();   \r\n  ou.close();", "Konwledge_Point": "主程序", "Question": ["文件上传问题（JAVA）", ["需求跟大家说下 ：", "\n    我现在有3台服务器A,B,C  主程序在A服务器下，现在需要做到的是：一个客户端通过A服务上的程序访问到了B服务器，然后B服务器向C服务器上传文件。B,C服务器都可以架设程序。问题是我怎么让B服务器向C服务器传文件，（IP都已知）。NEW FILE（里面不能 写IP） ，现在摸不到北了，求各位高手帮助~！", "\n请说的 具体点。谢谢了 ~~~~~~ ", "\n在次谢谢~~~~~~~~~~~~", "\n其实说白了就是2个服务器之间怎样进行文件传递，不能建网络驱动器，通过客户端来操作2个服务器之间的文件传递"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;\nusing &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;std&lt;/span&gt;;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Student&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; tel;\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; sex;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; id;\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; name;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        Student() {}\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; getTel() {&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; tel;}\n        &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; getSex() {&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sex;}\n        &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; setTel(&lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; t) {tel &amp;#61; t;}\n        &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; setSex(&lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; s) {sex &amp;#61; s;}\n        &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; OutputInfo();  \n};\n\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; Student::OutputInfo()\n{\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;学号:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;id&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;姓名:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;\\t&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;性别:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;sex&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;\\t&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;电话:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;tel&amp;lt;&amp;lt;endl;\n}\n\nStudent s[100];\nint sn &amp;#61; 0;\n\nvoid add()\n{\n       int n;\n       cin&amp;gt;&amp;gt;n;\n        string id,name,sex,tel;\n      for(int i&amp;#61;0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n      {\n            cin&amp;gt;&amp;gt;id&amp;gt;&amp;gt;name&amp;gt;&amp;gt;sex&amp;gt;&amp;gt;tel;\n            s[sn].id &amp;#61; id;\n            s[sn].name &amp;#61; name;\n            s[sn].setSex(sex);\n            s[sn].setTel(tel);\n            sn&amp;#43;&amp;#43;;\n      }\n}\n\nvoid update()\n{\n      string id,name,sex,tel;\n      cin&amp;gt;&amp;gt;id&amp;gt;&amp;gt;name&amp;gt;&amp;gt;sex&amp;gt;&amp;gt;tel;\n      for(int i&amp;#61;0;i&amp;lt;sn;i&amp;#43;&amp;#43;)\n      {\n            if(s[i].id &amp;#61;&amp;#61; id)\n            {\n                  s[i].name &amp;#61; name;\n                  s[i].setSex(sex);\n                  s[i].setTel(tel);\n                  break;\n            }\n      } \n}\n\nvoid del()\n{\n      string id;\n      cin&amp;gt;&amp;gt;id;\n      for(int i&amp;#61;0;i&amp;lt;sn;i&amp;#43;&amp;#43;)\n      {\n            if(s[i].id &amp;#61;&amp;#61; id)\n            {\n                  for(int j&amp;#61;i;j&amp;lt;sn-1;j&amp;#43;&amp;#43;)\n                        s[j] &amp;#61; s[j&amp;#43;1];\n                  sn--;\n            }\n      }\n}\n\nvoid find()\n{\n      string id;\n      cin&amp;gt;&amp;gt;id;\n      for(int i&amp;#61;0;i&amp;lt;sn;i&amp;#43;&amp;#43;)\n      {\n            if(s[i].id &amp;#61;&amp;#61; id)\n            {\n                  cout&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;学号:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;s[i].id&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;\\t&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;姓名:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s[i].name&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;性别:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s[i].getSex()&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;电话:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s[i].getTel()&amp;lt;&amp;lt;endl;\n                  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n      } \n}\n\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;()\n{\n      &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;sn;i&amp;#43;&amp;#43;)\n      {\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;学号:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s[i].id&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;姓名:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;s[i].name&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;\\t&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;性别:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;s[i].getSex()&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;\\t&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;电话:&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;&amp;lt;s[i].getTel()&amp;lt;&amp;lt;endl;\n      }\n}\nint main()\n{\n    add();\n    print();\n    update();\n    print();\n    del();\n    print();\n    find();\n    return 0;\n}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["求哥哥们看看这道题怎么做", ["设计一个学生基本信息类 Student ,学生的", "基本信息有公有属性:学号、姓名,保护属性:性别,私有属性:联系电话。成员函数有设置联系电话 SetTel 和获取联系电话 GetTel ,设置性别 SetSex 和获取性别 GetSex ,输出学生所有基本信息 Outputlnfo ,这些函数都是公有成员函数, Outputlnfo 数在类外定义,其他函数在类内定义。", "编写主程序对一个班的学生信息进行管理(班级学生总数不超过100人),需要的功能有:增加、修改、删除和查找,每个功能用一个函数来实现。"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\n#include &lt;cstring&gt;\r\nusing namespace std;\r\n\r\nvoid fun(char* str)\r\n{\r\n    char ch = str[0];\r\n\tif (ch == 0) return;\r\n\tint i = 1;\r\n\twhile (str[i])\r\n\t{\r\n\t\tstr[i-1]=str[i];\r\n\t\ti++;\r\n\t}\r\n\tstr[i-1]=ch;\r\n}\r\n\r\nint main()\r\n{\r\n    string s;\r\n    cin &gt;&gt; s;\r\n    int n = s.length();\r\n    const char* str = s.c_str();\r\n\tchar str1[1000];\r\n\tstrcpy(str1, str);\r\n\tfun(str1);\r\n\tcout &lt;&lt; str1;\r\n    return 0;\r\n}\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["如果想拿数组作为函数参数，函数应该怎么写？", ["\n/* 2.cpp .2. 编写一个函数，", "\n把字符串中所有的字符都前移一个位置，", "\n而串中的第一个字符移到最后。并编写主程序进行测试。*/", "\n\n", "\n#include <iostream>\n#include <string.h>\n#include <cstring>\nusing namespace std;\nint movespace(int i,int n)\n{\n    if (i == (n - 1))\n        return 0;\n    else\n        return i + 1;\n}\nint main()\n{\n    string s;\n    cin >> s;\n    int n = s.length();\n    const char* str = s.c_str();\n    for (int i = 0; i < n; i++)\n    {\n        cout << str[movespace(i,n)];\n    }\n    return 0;\n}\n", "\n\n", "//将数组str作为函数参数", "\n\n", "void fun(char* str)\n{\n       ???\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给个方案参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;def &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n)&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        print(&lt;span class=\"hljs-string\"&gt;&amp;#34; 递归出口:fun(1)&amp;#61;1&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        print(&lt;span class=\"hljs-string\"&gt;&amp;#34; 分解:fun(%d)&amp;#61;fun(%d)%d&amp;#34;&lt;/span&gt; %(n,n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n))\n        m &amp;#61; n*&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n        print(&lt;span class=\"hljs-string\"&gt;&amp;#34; 求值:fun(%d)&amp;#61;fun(%d)%d&amp;#61;%d&amp;#34;&lt;/span&gt; %(n,n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n,m))\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; m\n\n#主程序\nprint()\nf&amp;#61;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#34; 最后结果:fun(5)&amp;#61;%d&amp;#34;&lt;/span&gt; %(f))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["在N！的递归算法中，显示分解和求值过程。", ["def fun(n):", "if n==1:", "print(\" 递归出口:fun(1)=1\")", "（请补代码7）", "else:", "print(\" 分解:fun(%d)=fun(%d)%d\" %(n,n-1,n))", "（请补代码8）", "print(\" 求值:fun(%d)=fun(%d)%d=%d\" %(n,n-1,n,m))", "return m", "\n", "#主程序", "print()", "f=fun(5)", "print(\" 最后结果:fun(5)=%d\" %(f))"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;编译带包的java文件&amp;#xff0c;用如下命令&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 编译\njavac -d . *.java\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 运行\njava test.Read\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["java在eclipse可以运行，在文本编辑器里不行", ["java引用自己编写的一个类，在eclipse里可以正常运行，在文本编辑器里（我用的sublimetext,文本编辑器是调试好了的，可以正常运行helloworld,)却显示错误：找不到符号 ，主程序和ReadTxtFile类均在test同一个文件夹下：", "这是主程序：", "\n", "package", " test;\n", "import", " test.ReadTxtFile;\n", "public", " ", "class", " ", "Read", " ", "{\n      ", "public", " ", "static", " void main(", "String", "[] args) {\n            ", "String", " filePath = ", "\"F:\\\\javawork\\\\readtxtfile\\\\mdata.txt\"", ";\n            ReadTxtFile f = ", "new", " ", "ReadTxtFile", "();\n            f.readTxt(filePath);\n          }\n\n}\n\n", "\n", "这是一个读文件 类：", "package test;", "import java.io.*;", "\n", "public class ReadTxtFile {", "    public void readTxt(String filePath) {", "\n", "      ", "try", " {\n        ", "File", " ", "file", " = ", "new", " ", "File", "(filePath);\n        ", "if", "(", "file", ".isFile() && ", "file", ".exists()) {\n          InputStreamReader isr = ", "new", " InputStreamReader(", "new", " FileInputStream(", "file", "), ", "\"utf-8\"", ");\n          BufferedReader br = ", "new", " BufferedReader(isr);\n          String lineTxt = ", "null", ";\n          ", "while", " ((lineTxt = br.readLine()) != ", "null", ") {\n            System.out.", "println", "(lineTxt);\n          }\n          br.close();\n        } ", "else", " {\n          System.out.", "println", "(", "\"no exit\"", ");\n        }\n      } ", "catch", " (Exception e) {\n        System.out.", "println", "(", "\"wrong doing\"", ");\n      }\n      \n      }\n", "\n", "}", "eclipse正常运行，但是文本编辑器显示：", "\n", "Read", ".java:", "2", ": 错误: 找不到符号\n", "import", " test.ReadTxtFile;\n           ^\n  符号:   类 ReadTxtFile\n  位置: 程序包 test\n", "Read", ".java:", "6", ": 错误: 找不到符号\n        ReadTxtFile f = ", "new", " ReadTxtFile();\n        ^\n  符号:   类 ReadTxtFile\n  位置: 类 ", "Read", "\n", "Read", ".java:", "6", ": 错误: 找不到符号\n        ReadTxtFile f = ", "new", " ReadTxtFile();\n                            ^\n  符号:   类 ReadTxtFile\n  位置: 类 ", "Read", "\n", "3", " 个错误\n[Finished in ", "737", "ms]\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议你下次预览一下你的问答,这个样子很难看啊兄弟.&lt;br /&gt;SpringBoot项目启动类的主函数里面写什么?SpringBootApplication.run(MainApplication.class,args);?不是SpringApplication.run(MainApplication.class,args);吗?&lt;br /&gt;嗯,我以前也犯过这样的错误.所以以后写的时候启动类不要复制,尽量手写.&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Cannot resolve method 'run(java.lang.Class<com.atguigu.boot.MainApplication>, java.lang.String[])'", ["问题遇到的现象和发生背景", "\n", "前几天电脑的固态硬盘坏了，然后换了固态硬盘，重装了系统，jdk那些环境变量没有了，我重新配置了，我看教程，测试了也是成功的，但是我使用idea，看学习视频，跟着做了两步就报错，我不理解是哪里出了问题。", "\n", "问题相关代码，请勿粘贴截图", "\n", "//pom.xml", "    ", "4.0.0", "\n", "<", "groupId", ">", "com.atguigu", "</", "groupId", ">", "\n", "<", "artifactId", ">", "boot-01-helloword", "</", "artifactId", ">", "\n", "<", "version", ">", "1.0-SNAPSHOT", "</", "version", ">", "\n\n", "<", "parent", ">", "\n     ", "<", "groupId", ">", "org.springframework.boot", "</", "groupId", ">", "\n     ", "<", "artifactId", ">", "spring-boot-starter-parent", "</", "artifactId", ">", "\n     ", "<", "version", ">", "2.3.4.RELEASE", "</", "version", ">", "\n", "</", "parent", ">", "\n\n", "<", "dependencies", ">", "\n    ", "<", "dependency", ">", "\n        ", "<", "groupId", ">", "org.springframework.boot", "</", "groupId", ">", "\n        ", "<", "artifactId", ">", "spring-boot-starter-web", "</", "artifactId", ">", "\n    ", "</", "dependency", ">", "\n", "</", "dependencies", ">", "\n", "\n\n\n", "//MainApplication.java", "package com.atguigu.boot;", "\n", "import org.springframework.boot.autoconfigure.SpringBootApplication;", "\n", "//主程序类（所有启动类的入口）", "//", "@SpringBootApplication:这是一个springboot应用", "@SpringBootApplication", "public class MainApplication {", "    public static void main(String[] args) {", "        SpringBootApplication.run(MainApplication.class,args);", "    }", "}", "\n", "运行结果及报错内容", "\n", "SpringBootApplication.run(MainApplication.class,args);这个run这里是红色的，然后我看提示是Cannot resolve method 'run(java.lang.Class<com.atguigu.boot.MainApplication>, java.lang.String[])'，运行了一下，下面是这样的Error:(10, 30) java: 找不到符号", "  符号:   方法 run(java.lang.Class<com.atguigu.boot.MainApplication>,java.lang.String[])", "  位置: ", "@interface ", "org.springframework.boot.autoconfigure.SpringBootApplication", "\n", "我的解答思路和尝试过的方法", "\n", "我之前是怀疑jdk没装好，但是我测试了也没有问题，我也不知道哪里出了问题，maven还有gradle，tomcat我都有，不知道怎么了", "\n", "我想要达到的结果", "\n", "就是不要爆红了"]], "Tag": "程序设计"}
{"Answer": "看下这篇博客&amp;#xff0c;也许你就懂了&amp;#xff0c;链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_36607894/article/details/104794052\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;C&amp;#43;&amp;#43;编译报错&amp;#xff1a;||error: ld returned 1 exit status|&lt;/font&gt;&lt;/a&gt;", "Konwledge_Point": "主程序", "Question": ["c++中出现error: ld returned 1 exit status", ["问题遇到的现象和发生背景", "\n", "第一次c++使用自定义头文件和源文件时出现：error: ld returned 1 exit status", "\n", "问题相关代码，请勿粘贴截图", "\n", "/", "主程序", "/", "#include", "using namespace std;", "#include\"swap.h\"", "\n", "int main(){", "\n", "int", " a = ", "10", " , b = ", "20", ";\n", "cout", " << ", "\"a = \"", " << a << endl;\n", "cout", " << ", "\"b = \"", " << b << endl;\n\n", "swap", "(a,b);\n\n", "system", "(", "\"pause\"", ");\n", "return", " ", "0", ";\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "已经在配置中添加", "\n", "\n", "\n", "\n", "我想要达到的结果", "\n", "请问一下怎么修改可以让它运行?"]], "Tag": "程序设计"}
{"Answer": "楼主的疑惑，实际上是把getClass()方法特殊化了 。 \r\n\r\n说白了，getClass也不过是个重载的方法：父类employ中有一个getClass方法，输出employ，子类manager中重写了父类的getClass方法，\r\n输出manager.\r\n\r\n而强制转换，可以看做是新建一个父类对象，然后把子类重写的方法覆盖该对象的方法。 这样执行的时候就是使用的子类的方法。 \r\n\r\n当然，在JVM中不会新建一个父类对象，而是会用父类去编译方法是否能够被父类的发放执行，执行的时候还是内存中的子类对象在执行！", "Konwledge_Point": "主程序", "Question": ["java对象类型转换导致对象类类型改变的疑问", ["再写java继承的练习时，我写了一个Employee类，然后再写了一Manger类继承Employee类。主程序写了如下代码：", "\n\n", "    Manger boss = new Manger();\n        Employee employee = new Employee();\n        System.out.println(employee.getClass());\n        employee = boss;\n        System.out.println(employee.getClass());\n", "\n\n", "执行结果如图：", "\n我的疑惑在于：为什么employee的类类型在执行了employee = boss后改变了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般不需要componentscan呢&amp;#xff0c;你这样的话都扫描不到controller&amp;#xff0c;改成使用mapperscan呢&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["springboot项目启动正常，但是访问controller的任意一个都报404错误", ["问题遇到的现象和发生背景", "\n", "springboot项目启动正常，但是访问controller的任意一个都报404错误", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "// 主程序", "\n", "@SpringBootApplication", "\n", "@ComponentScan", "(basePackages = ", "\"com.oli.blog_server.mapper\"", ")\npublic class BlogServerApplication {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args) {\n        ", "SpringApplication", ".run", "(BlogServerApplication.class, args);\n    }\n}\n", "\n", "//controller层", "\n", "@RestController", "\n", "@Slf4j", "\n", "public", " ", "class", " ", "HelloController", " {\n    ", "@RequestMapping", "(", "\"/\"", ")\n    ", "public", " ", "String", " ", "index", "(", "){\n        ", "return", " ", "\"index\"", ";\n    }\n\n    ", "@GetMapping", "(", "\"/get\"", ")\n    ", "public", " ", "String", " ", "getMsg", "(", "){\n        ", "return", " ", "\"index\"", ";\n    }\n}\n", "\n", "运行结果及报错内容", "\n", "项目结构：", "\n", "运行截图：", "\n", "\n", "运行效果：", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "我想一个线程就搞定了，你搞个Map(key-value),kye中是工人的ip,value中是工人的内容，后台接收到信息现判断，如果不是“保存”,就添加到map中，如果是的话，就保存key-value到数据库，", "Konwledge_Point": "主程序", "Question": ["关于串口的问题，请求大家帮忙", ["目前，我们公司在做一个流水线管理系统。终端使用的是带显示屏的数字键盘。工人们在终端键盘输入数字，按确认按钮后 ，信息保存到数据库。\n项目要求：工人每输入一个数字，就显示在显示屏，按保存后数字保存到数据库。\n例如工人要输入102这个数量。工人输入1，显示屏显示1，再输入0，显示屏显示10，再输入2，显示屏显示102，点击确定按钮，102保存到数据库中。\n终端的技术是：每输入一个数字，就发送一条指令到主机。例如工人要输入102这个数量，终端要发送三条指令到主机。主机也要返回三条指令到终端。\n现在的问题是 我如何在主机程序中 保留输入的数字信息？ 是不是我要给每个终端开启一个新线程？\n", "\n\n", "[b]问题补充：[/b]", "\n哦，我先试试再说"]], "Tag": "程序设计"}
{"Answer": "self.rect = pygame.image.get_rect() \r\n改成\r\nself.rect = self.image.get_rect()", "Konwledge_Point": "主程序", "Question": ["新人使用pycharm运行飞机大战项目报如下错误：AttributeError: module 'pygame.image' has no attribute 'get_rect'", ["看着网上的教学视频一步一步下来，当建立敌机的精灵后，在程序中调用这个精灵时就会报错，单独运行精灵程序时不会报错，在网上也找了相关的资料，但类似的好像也不对；", "\n\n", "主程序代码如下：", "\n\n", "import pygame\nfrom plane_sprites import *\n\npygame.init()\n\n#创建游戏窗口 480*700\nscreen = pygame.display.set_mode((480,700))\n\n#绘制背景图像\nbg = pygame.image.load(\"./images/background.png\")\nscreen.blit(bg,(0,0))\n\n#绘制英雄的飞机\nhero = pygame.image.load(\"./images/me1.png\")\nscreen.blit(hero,(150,400))\n\n#可以在所有绘制工作结束后，统一调度update方法啊\npygame.display.update()\n\n#创建时钟对象\nclock = pygame.time.Clock()\n\n#1.定义rect记录飞机的初始位置\nhero_rect = pygame.Rect(150,400,102,126)\n\n#创建敌机的精灵\nenemy = GameSprite(\"./images/enemy1.png\")\nenemy1 = GameSprite(\"./images/enemy1.png\",2)\n#创建敌机的精灵组\nenemy_group = pygame.sprite.Group(enemy,enemy1)\n\n#游戏循环>意味着游戏正式开始\nwhile True:\n    #1.可以指定循环体内部的代码执行的频率\n    clock.tick(60)\n    \"\"\"\n    #捕获事件\n    event_list = pygame.event.get()\n    if len(event_list) > 0:\n        print(event_list)\n    \"\"\"\n    #事件监听\n    for event in pygame.event.get():\n\n        #判断用户是否点击了关闭按钮\n        if event.type == pygame.QUIT:\n            print('退出游戏！')\n\n            pygame.quit()\n\n            #直接退出系统\n            exit()\n\n    #2.修改飞机的位置\n    hero_rect.y -= 1\n\n    #判读飞机的位置\n    if hero_rect.y <= -126:\n        hero_rect.y = 700\n\n    #3.调用blit方法绘制图像\n    screen.blit(bg,(0,0))\n    screen.blit(hero,hero_rect)\n\n    #让精灵族调用两个方法\n    #update - 让组中的所有精灵都更新位置\n    enemy_group.update()\n\n    #draw - 在screen上显示所有的精灵\n    enemy_group.draw(screen)\n\n    #4.使用update方法更新显示\n    pygame.display.update()\n\npygame.quit()\n", "\n\n", "调用的精灵程序如下：", "\n\n", "import pygame\n\nclass GameSprite(pygame.sprite.Sprite):\n    \"\"\"飞机大战精灵\"\"\"\n\n    def __init__(self, image_name, speed=1):\n\n        #调用父类的初始化方法\n        super().__init__()\n\n        #定义对象的属性\n        self.image = pygame.image.load(image_name)\n        self.rect = pygame.image.get_rect()\n        self.speed = speed\n\n    def update(self):\n\n        #在屏幕的垂直方向移动\n        self.rect.y += self.speed\n", "\n\n", "运行后报如下的错误：", "\nAttributeError: module 'pygame.image' has no attribute 'get_rect'", "\n\n", "\n\n", "还请各位大佬有时间能帮忙看下这个问题我出错在哪里了，谢谢哈"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样试试 &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; sys\n&lt;span class=\"hljs-title\"&gt;sys&lt;/span&gt;.path.insert(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#39;E:/python程序学习/pythonProject25&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; tanke20\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["用python内命令引入外部模块出错", ["问题遇到的现象和发生背景", "\n", "引入外部模块总是出问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "import", " ", "sys", "\n", "result", " = ", "sys.path", "\n", "result", ".append", "(", "'E:/python程序学习/pythonProject25/tanke20.py'", ")\n", "for", " ", "tempPath", " ", "in", " ", "result", ":\n    ", "print", "(", "tempPath", ")", "\n\n", "\n", "运行结果及报错内容", "\n", "Traceback (most recent ", "call", " last):\n  ", "File", " ", "\"E:\\python程序学习\\pythonProject26\\main.py\"", ", line ", "20", ", ", "in", " <", "module", ">\n    ", "import", " tanke20\nModuleNotFoundError: No ", "module", " ", "named", " ", "'tanke20'", "\n\n", "\n", "路径没问题，模块名称没问题。就是引入不进去。。", "\n", "我的解答思路和尝试过的方法", "\n", "重新装载、卸载好几次，无法解决。试着更新python版本和pip版本，也不行。", "目前我的解决方法就是暴力复制粘贴，直接把模块复制到主程序目录中。可以解决问题。", "\n", "我想要达到的结果", "\n", "正常使用python内部命令解决问题。是否是我的程序缺少了东西？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义抽象类&amp;#xff0c;Bus类和Truck类继承抽象类&amp;#xff0c;子类中实现具体的方法。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["汽车（vehical）燃料问题", ["  设计并完成抽象Vehicle类的定义。", "  按照如下方式实现从Vehicle继承的类Bus。", "a.定义一个实例变量numberOfPassengers（乘客数量）(1到80)。", "b.实现fuelEfficiency()方法。", "c.实现toString()方法，返回所有属性的字符串表示形式，包括继承的属性。", "按照如下方式实现从Vehicle继承的类Truck", "a.定义一个名为towingCapacity(整数)的实例变量。", "b.实现fuelEfficiency()方法。计算卡车燃料效率(每加仑英里)的公式是:fuelEfficiency = 4000/towingCapacity/马力", "c.实现toString()方法，返回所有属性的字符串表示，包括继承的属性。", " 实现测试类及其方法的主程序。\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已解决。&lt;/p&gt;\n&lt;p&gt;由于程序庞大以及本人马蜂不太好&amp;#xff0c;因此在自己编写的自定义库中有些时候会习惯性的写上import tkinter &amp;#xff0c;以便使用GUI。这本没什么问题&amp;#xff0c;但是在最终的主控制程序中我把这些自定义库都给调用了&amp;#xff0c;也就是说这些自定义库所调用的库也被主程序调用了。这就造成了 tkinter 库在同一个程序&amp;#xff08;主程序&amp;#xff09;被多次调用的情况&amp;#xff0c;因此在产生 tk窗口的时候就发生了错误&amp;#xff0c;从而延伸为了线程错误。&lt;/p&gt;\n&lt;p&gt;警钟敲烂&amp;#xff0c;像 tkinter 这种奇怪的库在任何程序内只能被直接或间接的调用一次&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python tkinter与多线程相关问题", ["如果内容违规了提醒我自删谢谢。", "\n", "利用 pygame 写了一个窗口，里面使用了一个开启新线程，调用HELP模块用于打开一个 tkinter 窗口并用text控件展示图片的功能。", "\n", "HELP模块单独运行一切正常，但是放在主程序中，当执行到打开新线程并调用HELP.h的时候，却报错 ：", "\n", "RuntimeError: main thread is not in main loop", "\n", "C:\\Users\\Administrator\\.virtualenvs\\MathVisualization-7GIzdkmF\\Scripts\\python.exe C:\\Users\\Administrator\\Desktop\\MathVisualization\\math_visualization.py \npygame ", "2.1", ".2", " (SDL ", "2.0", ".18", ", Python ", "3.8", ".0", ")\nHello ", "from", " the pygame community. https://www.pygame.org/contribute.html\nException ", "in", " thread Thread-", "1", ":\nTraceback (most recent call last):\n  File ", "\"f:\\sai\\python3.8.0\\lib\\threading.py\"", ", line ", "932", ", ", "in", " _bootstrap_inner\n    self.run()\n  File ", "\"f:\\sai\\python3.8.0\\lib\\threading.py\"", ", line ", "870", ", ", "in", " run\n    self._target(*self._args, **self._kwargs)\n  File ", "\"C:\\Users\\Administrator\\Desktop\\MathVisualization\\HELP.py\"", ", line ", "13", ", ", "in", " h\n    help1=tk.PhotoImage(file=resurce_path(", "r\"resourses\\help.gif\"", "))    ", "#传入教程图片", "\n  File ", "\"f:\\sai\\python3.8.0\\lib\\tkinter\\__init__.py\"", ", line ", "4061", ", ", "in", " __init__\n    Image.__init__(self, ", "'photo'", ", name, cnf, master, **kw)\n  File ", "\"f:\\sai\\python3.8.0\\lib\\tkinter\\__init__.py\"", ", line ", "4006", ", ", "in", " __init__\n    self.tk.call((", "'image'", ", ", "'create'", ", imgtype, name,) + options)\nRuntimeError: main thread ", "is", " ", "not", " ", "in", " main loop\n\n进程已结束,退出代码", "0", "\n", "\n", "这是主程序（内涵注释，如果看不懂可以评论告诉我）（其中 key_help 是本人写得一个在窗口显示按键的类，他与本次报错没有关系，大家可以略过）", "\n", "import", " sys\n", "from", " init ", "import", " *    ", "# 一个属于按键的类Key就定义在里面", "\n", "from", " HELP ", "import", " h    ", "# 要用分支线程打开的函数", "\n", "import", " os\n", "import", " pygame\n", "from", " threading ", "import", " Thread\n", "import", " extend_input\npygame.init()\n\nscreen=pygame.display.set_mode((", "800", ",", "800", "))\n\nkey_help=Key(screen,", "r\"resourses\\key\"", ",", "500", ",", "64", ",font_mufferaw[", "45", "],WHITE,", "\"help\"", ")  ", "#定义help按键外观", "\nkey_help.setCenter()\nkey_help.moving(", "0", ",", "20", ")\nkey_help.nameCenter()\n", "# 确定按键放置位置", "\n\n\nrun=", "True", "\n", "while", " run:\n    ", "for", " event ", "in", " pygame.event.get():\n        ", "if", " event.", "type", "==pygame.QUIT:\n            sys.exit()\n        ", "if", " event.", "type", "==pygame.MOUSEBUTTONDOWN:\n            ", "if", " key_help.state:\n                key_help.click()\n                H=Thread(target=h,daemon=", "True", ")     ", "# 定义一个分支守护线程，实现打开 h 函数且不暂停运行主程序，两个线程同时进行，主程序结束 守护子线程也结束", "\n                H.start()\n    screen.fill(BLACK)\n    key_help.update(pygame.mouse.get_pos())\n    key_help.draw()\n    pygame.display.flip()\n\n\n", "\n", "这是需要用新线程打开的HELP文件：", "\n", "import", " tkinter ", "as", " tk\n", "import", " sys\n", "from", " os ", "import", " path\n", "def", " ", "resurce_path", "(", "relative_path", "):\n    base_path=", "getattr", "(sys,", "'_MEIPASS'", ",path.dirname(path.abspath(__file__)))\n    ", "return", " path.join(base_path,relative_path)\n\n", "#  在一个tkinter窗口使用text控件展示一张图片", "\n\n", "def", " ", "h", "():\n    ", "help", " = tk.Tk()\n    ", "help", ".geometry(", "\"800x800\"", ")\n    helptext =tk.Text(", "help", ",width=", "120", ", height=", "70", ")   ", "#创建文本框", "\n    helptext.place(x=", "0", ",y=", "0", ")\n\n    help1=tk.PhotoImage(file=resurce_path(", "r\"resourses\\help.gif\"", "))    ", "#传入图片", "\n    helptext.image_create(tk.INSERT,image=help1)      ", "#在文本框中插入图片", "\n\n    ", "help", ".mainloop()  ", "#显示窗口", "\n\n", "if", " __name__==", "'__main__'", ":\n    h()\n", "\n", "本人经过调试发现，问题主要出在HELP文件中的函数h中，传入和插入图片的那两句话，把那两句话去掉程序正常运行，但是加上就会报错。", "\n", "希望各位可以帮我分析一下，谢谢！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; length &amp;#61; sizeof(R) / sizeof(int);&lt;br /&gt;这行是错的&amp;#xff0c;在函数里的sizeof(R)实际是得到指针的长度&amp;#xff0c;不是数组的长度&amp;#xff0c;你应该将数组的长度作为参数传递进来&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void &lt;span class=\"hljs-constructor\"&gt;QuickSort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;R,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-constructor\"&gt;QSort(R, 1, &lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;-1)&lt;/span&gt;;    \n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["关于一维数组地址传入函数但是值并没有改变的问题", ["今天遇到一个问题，很是头疼。描述如下：", "写快速排序算法时，最后调用了函数", "\n", "void", " ", "QuickSort", "(", "int", " *R", ")", "\n{\n    ", "int", " length;\n    length = ", "sizeof", "(R) / ", "sizeof", "(", "int", ");\n    QSort(R, ", "1", ", length", "-1", ");     ", "//对R[ 1 ] 到R[ length-1 ] 之间的元素进行快速排序", "\n}\n\n", "\n", "其中参数中的R是一维数组的首元素地址，即R[ 10 ]中的R。然后运行之后，输出发现R并没有被排序。但是如果把QuickSort()函数中的内容放在主程序中运行，又能够排序了。请问一下大家，这是个什么情况。"]], "Tag": "程序设计"}
{"Answer": "xdv dxv bcfbcfb fvnbfvn fv ngvtnjgn gvtnj", "Konwledge_Point": "主程序", "Question": ["多activity还是单activity的选择？", ["大家在开发APP的时候是用多个activity(例如一个页面一个activity)，还是整个程序只用了一个activity(页面用view来呈现)？", "\n\n", "它们的优点和缺点各是什么呢？", "\n\n", "小弟不才，特来求解。", "\n\n", "我自己做的APP除了登陆用一个activity，整个主程序只用了一个activity，页面跳转用viewflipper来实现，每个页面都是一个view，所有的页面都继承自自定义的一个抽象类BaseView，里面实现了页面之间的数据传递和一些共用的方法。", "\n\n", "主要我觉得每个activity都有自己的生命周期，而且每次需要AndroidManifest中注册一遍感觉好麻烦，就自己想了这个办法，具体哪个好其实我自己也说不上来，哪位大神给小弟解释一下？"]], "Tag": "程序设计"}
{"Answer": "因为你的OnCancel函数只是退出了登录界面的Dialog，然而在你的主函数中应该没有没有对登录界面的退出方式进行判断，而是在登录界面关闭后直接执行了主界面。所以有两种方法：1.在登录界面的取消按钮响应函数中加入代码，直接退出整个程序，而不是仅登录界面，这个上一个人已经回答了。2.在主函数中对登录界面关闭的原因进行判断，如果是通过取消按钮方式关闭的，则退出整个程序。二选一即可", "Konwledge_Point": "主程序", "Question": ["vc++2010MFC登录界面上点取消，为什么不退出程序而是跳转到程序主界面上？", ["void CLoginDlg::OnCancel()", "\n{", "\n    // TODO: 在此添加专用代码和/或调用基类", "\n    CDialog::OnCancel();", "\n    //DestroyWindow();//直接销毁窗口，销毁窗口当前窗口没有了，但程序并没有退出", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;h2 id=\"h2_一_1652533573841\"&gt;一&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; distance &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0f&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; height &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; bounce &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0f&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        distance &amp;#43;&amp;#61; height;\n        height /&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n            distance &amp;#43;&amp;#61; height; &lt;span class=\"hljs-comment\"&gt;// 加上反弹高度&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            bounce &amp;#61; height;    &lt;span class=\"hljs-comment\"&gt;// 第五次的反弹高度&lt;/span&gt;\n    }\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;第五次落地时&amp;#xff0c;共经过&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; distance &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;米&amp;#xff0c; 反弹&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; bounce &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;米&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;std::endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/550553615256154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=\"h2_二_1652533573878\"&gt;二&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; id[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;// 学号&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;// 姓名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; phone[&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;// 手机&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; yw_score;    &lt;span class=\"hljs-comment\"&gt;// 语文成绩&lt;/span&gt;\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; students[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生%d信息\\n&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, students[i].id);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, students[i].name);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入手机号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, students[i].phone);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入语文成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;students[i].yw_score);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学生%d学号&amp;#xff1a;%s&amp;#xff0c;姓名&amp;#xff1a;%s&amp;#xff0c;手机号&amp;#xff1a;%s&amp;#xff0c;语文成绩&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,\n            i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, students[i].id, students[i].name, students[i].phone, students[i].yw_score);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/095182615256196.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=\"h2_三_1652533573924\"&gt;三&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;box&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;box&lt;/span&gt;() : &lt;span class=\"hljs-built_in\"&gt;box&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {}\n    &lt;span class=\"hljs-built_in\"&gt;box&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; l, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; h) : &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(l), &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt;(w), &lt;span class=\"hljs-built_in\"&gt;height&lt;/span&gt;(h) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;vol&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; length * width * height; }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getLength&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; length; }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getWidth&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; width; }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getHeight&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; height; }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; length;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; width;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; height;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    box b1;                &lt;span class=\"hljs-comment\"&gt;// 调用构造函数 box()&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;box &lt;span class=\"hljs-title\"&gt;b2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 调用构造函数 box(double, double, double)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// 显示对象体积&lt;/span&gt;\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b1的长宽高是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b1.&lt;span class=\"hljs-built_in\"&gt;getLength&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b1.&lt;span class=\"hljs-built_in\"&gt;getWidth&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b1.&lt;span class=\"hljs-built_in\"&gt;getHeight&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b1的体积是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b1.&lt;span class=\"hljs-built_in\"&gt;vol&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b2的长宽高是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b2.&lt;span class=\"hljs-built_in\"&gt;getLength&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b2.&lt;span class=\"hljs-built_in\"&gt;getWidth&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b2.&lt;span class=\"hljs-built_in\"&gt;getHeight&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b2的体积是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; b2.&lt;span class=\"hljs-built_in\"&gt;vol&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/822677615256139.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h2 id=\"h2_四_1652533573970\"&gt;四&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;score&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; e &amp;#61; &lt;span class=\"hljs-number\"&gt;100.0&lt;/span&gt;)&lt;/span&gt;\n    &lt;/span&gt;{\n        english &amp;#61; e;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        std::cout &amp;lt;&amp;lt; english;\n    }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; english;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    score stu1, stu2;\n    stu1.&lt;span class=\"hljs-built_in\"&gt;setscore&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;85.5&lt;/span&gt;);\n    stu2.&lt;span class=\"hljs-built_in\"&gt;setscore&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;93.5&lt;/span&gt;);\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stu1的英语分数是&amp;#34;&lt;/span&gt;;\n    stu1.&lt;span class=\"hljs-built_in\"&gt;printscore&lt;/span&gt;();\n    std::cout &amp;lt;&amp;lt; std::endl;\n\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stu2的英语分数是&amp;#34;&lt;/span&gt;;\n    stu2.&lt;span class=\"hljs-built_in\"&gt;printscore&lt;/span&gt;();\n    std::cout &amp;lt;&amp;lt; std::endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/583980715256156.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c++题，不太懂，请兄弟姐妹们看看", ["（1）用C++基础中的语法编写：一球从100米高度自由落下，每次落地后反跳回原高度的一半，再落下。求它在第5次落地时，共经过了多少米？第5次反弹多高？", "（2）用C语言中的结构体编写：输入并显示五个学生的学号、姓名、手机号、语文成绩。", "3.编写代码：建立长方体盒子类box，设计2个重载构造函数来为长方体对象进行初始化，设计类的成员函数vol（）计算立方体的体积，并存储在一个double变量中。在主函数中，定义box类的2个对象，分别调用不同的构造函数，并显示这个对象的体积。", "4、编写代码：定义一个类score， 它含有私有数据成员english(英语分数)、公有成员函数setscore ( )（和printscore( )，其中setscore( ) 可用带默认参数的方式来设置english的值，printscore( )用来输出english的值。在主程序中定义类score的两个对象stu1和stu2，其英语85.5和93.5，然后输出这两个分数。", "\n", "最好有详细步骤哈，谢谢啦！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;肯定你的文件格式不对&amp;#xff0c;sound类可以播放wav格式的&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pytho:Invalid RVA mode. (code 12)", ["我在Python中用pygame做了一个程序，代码如下：", "\n", "\n", "import", " pygame\n", "import", " sys\n", "import", " time\n", "from", " pygame.", "locals", " ", "import", " *\n\npygame.init()\nDISPLAYSURF=pygame.display.set_mode((", "400", ",", "300", "))\npygame.display.set_caption(", "' '", ")\n\n", "# 设置", "\nmusic_bb_ok=", "True", "\n\n", "# 颜色", "\n", "#                R  G  B", "\nTHE_HIND_COLOR=(", "39", ",", "39", ",", "39", ")\n\n", "# 窗口设置", "\nDISPLAYSURF.fill(THE_HIND_COLOR)\n\n", "# 函数", "\n", "def", " ", "music_1", "():\n    soun=pygame.mixer.Sound(", "'./music/plane_bbs_ok.wav'", ")\n    soun.play()\n    time.sleep(", "0.68", ")\n    soun.stop()\n            \n", "while", " ", "True", ":     ", "# 主程序", "\n    ", "for", " event ", "in", " pygame.event.get():\n        ", "if", " event.", "type", " == QUIT:\n            pygame.quit()\n            sys.exit()\n        ", "elif", " music_bb_ok:\n            music_1()\n    pygame.display.update()\n\n", "\n", "报错：pytho:Invalid RVA mode. (code 12)", "怎么解决？"]], "Tag": "程序设计"}
{"Answer": "看下你的getdata吧，可能是地址无法访问", "Konwledge_Point": "主程序", "Question": ["用c++ vector储存指针，迭代时数据消失", ["我在一个类里加了一个vector容器，然后在这个类的一个成员函数里用for循环迭代，但是代码一运行到for，容器的内容就没了，然后出错，如图", "\n补充：", "\n在任意成员函数里一运行到begin()，size()等vector操作就会这样，在主程序里不会，", "\n我存指针是为了跟踪另一个类的成员变化，", "\nwin32程序", "\n代码过长没放，如果需要更多信息请在评论里说下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;如有帮助望采纳。点击我回答右上角的【采纳】按钮。&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;public class Student {\n    private String name;\n    private String sno;\n    private String classname;\n\n    public Student(){}\n    public Student(String name, String sno, String classname) {\n        this.name &amp;#61; name;\n        this.sno &amp;#61; sno;\n        this.classname &amp;#61; classname;\n    }\n\n    public String show(){\n        return &amp;#34;姓名&amp;#xff1a;&amp;#34;&amp;#43;name&amp;#43;&amp;#34;,学号&amp;#xff1a;&amp;#34;&amp;#43;sno&amp;#43;&amp;#34;,班级&amp;#xff1a;&amp;#34;&amp;#43;classname;\n    }\n\n    public boolean isMyself(Student stu){\n        if (this.name.equals(stu.name)&amp;amp;&amp;amp;this.sno.equals(stu.sno)&amp;amp;&amp;amp;this.classname.equals(stu.classname)){\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n\n\npublic interface Scholarship {\n    public abstract boolean isShip();\n}\n\n\n\n\n\npublic class UniversityStudent extends Student implements Scholarship{\n    private int spot;\n    private double avg;\n\n    public UniversityStudent(String name, String sno, String classname, int spot, double avg) {\n        super(name, sno, classname);\n        this.spot &amp;#61; spot;\n        this.avg &amp;#61; avg;\n    }\n\n    &amp;#64;Override\n    public boolean isShip() {\n        if (this.avg&amp;gt;95 &amp;amp;&amp;amp; spot&amp;gt;9){\n            return true;\n        }\n        return false;\n    }\n\n    public String show(){\n        return super.show()&amp;#43;&amp;#34;,绩点&amp;#xff1a;&amp;#34;&amp;#43;this.spot&amp;#43;&amp;#34;,平均分&amp;#xff1a;&amp;#34;&amp;#43;this.avg;\n    }\n}\n\n\n\n\npublic class Test {\n    public static void main(String[] args) {\n        Student s1&amp;#61;new Student(&amp;#34;小白&amp;#34;,&amp;#34;1001&amp;#34;,&amp;#34;计算机&amp;#34;);\n        Student s2&amp;#61;new Student(&amp;#34;小白&amp;#34;,&amp;#34;1001&amp;#34;,&amp;#34;计算机&amp;#34;);\n        boolean flag&amp;#61;s1.isMyself(s2);\n        if (flag){\n            System.out.println(&amp;#34;是同一个人&amp;#34;);\n        }else{\n            System.out.println(&amp;#34;不是同一个人&amp;#34;);\n        }\n        UniversityStudent uStudent&amp;#61;new UniversityStudent(&amp;#34;小黑&amp;#34;,&amp;#34;10002&amp;#34;,&amp;#34;通信&amp;#34;,10,98.5);\n        System.out.println(uStudent.show());\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["继承与接口类的编程题", ["1、编写一个程序，该程序由一个主程序、一个接口和2个类组成。", "\n\n", "1）Student类", "\n\n", "有姓名、学号、班级3个成员，构造方法对3个成员赋值，一个方法输出成员的值，一个方法比较2个Student对象的姓名、学号、班级是否一致。", "\n\n", "2）接口", "\n\n", "有一个抽象方法，用于判断学生是否符合获得奖学金的条件。", "\n\n", "3）UniversityStudent类", "\n\n", "继承自Student类并实现了接口，新增绩点、平均分2个成员。构造方法对所有成员赋值；一个方法输出所有成员的值。", "\n\n", "4）主程序main方法", "\n\n", "创建2个Student对象，分别输出他们的姓名、学号、班级等信息；根据这些信息判断是否为同一个人。", "\n\n", "创建1个UniversityStudent对象，要求输出对象的姓名、学号、班级、绩点、平均分等信息；"]], "Tag": "程序设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;建议你看下这篇博客&amp;#x1f449; &amp;#xff1a;&lt;a href=\"https://blog.csdn.net/programnovice/article/details/111828027\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;顺序表实现并集、交集运算&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 写成博客, 将相关链接放在评论区, 以帮助更多的人 ^-^", "Konwledge_Point": "主程序", "Question": ["顺序堆栈可视化实现、", ["输入完成栈的各个操作，实现顺序栈的可视化show函数（最好能在单链表可视化中能画出链表之间的箭头），并依次在主程序中调用：", "StackInitiate(&s);", "show();", "getch();", "StackPush(&s,11);", "show();", "getch();", "StackPush(&s,13);", "show();", "getch();", "StackPush(&s,7);", "show();", "getch();", "\n", "DataType d;", "StackPop(&s,&d);", "show();", "getch();", "StackPop(&s,&d);", "show();", "getch();", "StackPop(&s,&d);", "show();", "getch();"]], "Tag": "程序设计"}
{"Answer": "&lt;h3 id=\"h3_codepy_1667530142291\"&gt;code.py&lt;/h3&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\ndef codeGenerate(n,sep):\n  key_words &amp;#61; &lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#34;&lt;/span&gt;)\n  words &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(np.random.choice(key_words, n))\n  trems &amp;#61; []\n  every_str &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; val in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n):\n    every_str &amp;#43;&amp;#61; words[val]\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; val%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n      trems.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(every_str)\n      every_str &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;{sep}&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(trems)\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:\n  &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; codeGenerate(&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#64;&amp;#39;&lt;/span&gt;)\n  &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3 id=\"h3_sy04py_1667530142346\"&gt;sy04.py&lt;/h3&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; code\n\ntasks_str &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入任务&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-comment\"&gt;# 去掉开始和结束的()&lt;/span&gt;\ntasks_str &amp;#61; tasks_str.strip(&lt;span class=\"hljs-string\"&gt;&amp;#34;()&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-comment\"&gt;# 以),(分割任务&lt;/span&gt;\ntasks &amp;#61; tasks_str.split(&lt;span class=\"hljs-string\"&gt;&amp;#34;),(&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 循环完成任务&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; task &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; tasks:\n  [task_num, task_n, task_sep] &amp;#61; task.split(&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(task_num, task_n, task_sep)\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; _ &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(task_num)):\n    res &amp;#61; code.codeGenerate(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(task_n),task_sep)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(res)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/666170035766162.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python数据处理类问题", ["1.编写函数，可以接收任意多整数型成绩，返回：最高分，最低分，平均数分，总分，90分以上个数，60分以下人数。在主程序中调用并测试该函数。", "2.在名为code.py文件内，编写名为名为codeGenerate(n,sep)的函数，实现生成并返回1个n位、分隔符为sep的VIP会员激活码，例如：“XXXX-XXXX-XXXX-XXXX”，X的取值范围是[a…z，A…Z，0-9]，n位只包含X的个数，sep为短横线。在sy04.py文件中用import……或from……import……方法导入并调用上述函数功能，分别生成1个16位、分隔符为", "@，3个类32个、分隔符为$，5个64位、分隔符为- ", "的激活码，输出效果如下图。【参考代码行数：10行】", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;光是定义一个叫delay的函数不代表你怎么写它都干delay的事&amp;#xff0c;你这个函数只判断了计数值有没有到定时时长&amp;#xff0c;没有处理如果没到的话要怎么处理。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;void delay(x10ms)                 //延时函数\n{\n    num &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    TMOD&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x01&lt;span class=\"hljs-comment\"&gt;;                    //16位计时器&lt;/span&gt;\n    TH0&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;9216&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;        //10ms计时的高位&lt;/span&gt;\n    TL0&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;9216&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;        //10ms计时的低位&lt;/span&gt;\n    EA&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;                        //开始中断总开关&lt;/span&gt;\n    ET0&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;                        //开启计时器0&lt;/span&gt;\n    TR0&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;                        //计时器0开始计时&lt;/span&gt;\n    \n   while(num&amp;lt;x10ms)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这种定时可以有主动或被动两种写法&amp;#xff0c;上面这种就是主动判断是否到时间。被动的话就是回调的方式去处理&amp;#xff0c;定时器到了去执行你期待的函数。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["51单片机计时器中断延时函数", ["我写了一个用计时器中断延时的函数，希望能在主程序中直接调用，让LED灯循环点亮1s关闭1s,但结果却是常亮，请老手帮我看看问题出在哪里，代码如下：", "\n", "\n", "#", "include", " ", "<reg52.h>", "\n", "unsigned", " ", "int", " num;                ", "//计时器中断的循环次数", "\n", "unsigned", " ", "int", " x10ms;                ", "//延时函数的参数，参数倍的10ms", "\n\nsbit LED=P1^", "4", ";                    ", "//定义了一个led灯管脚", "\n\n", "void", " ", "delay", "(x10ms)", "                 ", "//延时函数", "\n", "{\n    ", "if", "(num<x10ms)                 ", "//循环次数小于指定参数的话", "\n    {\n    TMOD=", "0x01", ";                    ", "//16位计时器", "\n    TH0=(", "65536", "-9216", ")/", "256", ";        ", "//10ms计时的高位", "\n    TL0=(", "65536", "-9216", ")%", "256", ";        ", "//10ms计时的低位", "\n    EA=", "1", ";                        ", "//开始中断总开关", "\n    ET0=", "1", ";                        ", "//开启计时器0", "\n    TR0=", "1", ";                        ", "//计时器0开始计时", "\n    \n    }\n    \n}\n\n", "void", " ", "T0_int", "()", " interrupt 1        ", "//计时器0中断", "\n", "{\n    TH0=(", "65536", "-9216", ")/", "256", ";        ", "//重装计时器高位", "\n    TL0=(", "65536", "-9216", ")%", "256", ";        ", "//重装计时器低位", "\n    num++;                        ", "//循环次数自加一", "\n    \n}\n\n", "void", " ", "main", "()", "                        ", "//主函数", "\n", "{\n    ", "while", "(", "1", ")\n    {\n        num=", "0", ";                    ", "//初始化循环次数", "\n        LED=~LED;                ", "//LED灯开、关", "\n        ", "delay", "(", "100", ");                ", "//调用延时函数，100倍的10ms，延时1s", "\n    \n    }\n}\n\n", "\n", "运行后，LED灯没按预想的1秒间隔闪烁，而是常亮", "\n", "试过改用for语句循环，没能解决问题。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是内存溢出了&amp;#xff0c;找下代码里是不是存在死循环&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序taro运行报错", ["为什么刚刚下的taro项目开始编译项目 myApp运行起来会报这个错误？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;blockquote&gt;\n&lt;p&gt;回答不易&amp;#xff0c;求求您采纳点赞哦&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;你可以尝试调整布局文件中TabLayout和ViewPager的高度值&amp;#xff0c;确保它们在手机上能够正常显示。你可以尝试使用特定的尺寸单位&amp;#xff08;如dp或sp&amp;#xff09;来调整高度&amp;#xff0c;以便在不同的屏幕上都能正常显示。同时确保你的布局文件里的高度和宽度设置适配不同的屏幕尺寸。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;另外&amp;#xff0c;你可以考虑在布局文件中使用LinearLayout或ConstraintLayout来管理TabLayout和ViewPager的位置&amp;#xff0c;这样可以更好地控制它们的显示效果。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果你的手机和模拟器的系统版本不同的话&amp;#xff0c;还需要确保你的代码兼容性。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;总之&amp;#xff0c;这个问题可能是由于布局文件中高度设置不当导致的&amp;#xff0c;你可以通过调整高度值和布局管理器来解决这个问题。&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "主程序", "Question": ["模拟器和手机上运行的显示不一样，代码怎样改？", ["各们帮我看看，我在IDE软件里写的代码在模拟器里显示的底部标签和顶部标签显示的很完整的，没有问题，可是一连接手机上显示的不行了底部标签显示的那么高了，我把高度的数字不管怎样改都不行，activity_main.xml 是主程序的布局显示的是ViewPager+TabLayout的底部标签，activity_homepage.xml是点击底部首页的标签显示的是顶部一行的TabLayout标签+ViewPager的，build.gradle代码的compileSdkVersion和targetSdkVersion和dependencies下面的都是写的是27，模拟器运行的Nexus 5X API 30(Android 11,API 30)显示的是完整的没有问题的，我手机是Red mi  Android 12  API-31的运行后就显示不完整了。懂行的帮我看看应该怎样改？", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;//包含必要的头文件&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-comment\"&gt;//添加代码定义常量PI&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; PI &amp;#61; &lt;span class=\"hljs-number\"&gt;3.1415&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//添加代码定义类CAngle&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;CAngle&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SetValue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; n)&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;value &amp;#61; n;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;GetCos&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;((&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;value/&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*PI);\n    }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; value;\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//添加代码定义一个Cangle类的对象deg&lt;/span&gt;\n    CAngle deg;\n    &lt;span class=\"hljs-comment\"&gt;//在下面的程序中适当位置补充代码 调用成员函数根据用户输入的角度设置对象deg角度&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//最后调用成员函数计算并输出deg的余弦&amp;#xff0c;然后输出回车符。&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; n;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入角度&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; n;\n    deg.&lt;span class=\"hljs-built_in\"&gt;SetValue&lt;/span&gt;(n);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;角度的余弦为&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; deg.&lt;span class=\"hljs-built_in\"&gt;GetCos&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["定义一个描述角度的类CAngle", ["定义一个描述角度的类CAngle，包含的内容如下：", "(1)私有成员变量value，表示角度，类型为double；", "(2)公有成员函数SetValue，实现功能是使用形参为value赋值。 声明为：void SetValue（double）；", "(3)公有成员函数GetCos，实现功能计算余弦值，并作为返回值返回。 声明为 double GetCos（void）；", "二、编写主程序实现如下功能：定义一个CAngle类的对象deg，调用成员函数根据用户输入的角度设置对象deg角度，最后调用成员函数计算并输出deg的余弦值。（π取3.1415", "输入输出样例：", "输入角度：30", "角度的余弦为0.866033", "\n", "参考程序模板：", "\n", "#", "include", " ", "<iostream>", "\n ", "//包含必要的头文件", "\n", "using", " ", "namespace", " std;\n   ", "//添加代码定义常量PI", "\n\n   ", "//添加代码定义类CAngle", "\n\n\n", "int", " ", "main", "()", "{\n    ", "//添加代码定义一个Cangle类的对象deg", "\n\n    ", "//在下面的程序中适当位置补充代码 调用成员函数根据用户输入的角度设置对象deg角度", "\n    ", "//最后调用成员函数计算并输出deg的余弦，然后输出回车符。", "\n\n    cout<<", "\"输入角度：\"", ";\n\n    cout<<", "\"角度的余弦为\"", ";\n\n    ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 你用我这段代码试下看看&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;if __name__ &amp;#61;&amp;#61; &amp;#39;__main__&amp;#39;:\n    s &amp;#61; input(&amp;#39;qing shuru&amp;#39;)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"595\" src=\"https://img-ask.csdnimg.cn/upload/1622124894769.png\" width=\"1521\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;一个python文件通常有两种使用方法&amp;#xff0c;if &lt;strong&gt;name&lt;/strong&gt; &amp;#61;&amp;#61; &amp;#39;&lt;strong&gt;main&lt;/strong&gt;&amp;#39;: 的作用就是控制这两种情况执行代码的过程&lt;/p&gt;\n\n&lt;ul&gt;&lt;li&gt;第一是作为脚本直接执行&amp;#xff1b;此时 &lt;strong&gt;会运行&lt;/strong&gt;if &lt;strong&gt;name&lt;/strong&gt; &amp;#61;&amp;#61; &amp;#39;&lt;strong&gt;main&lt;/strong&gt;&amp;#39;:下的代码&lt;/li&gt;&lt;li&gt;第二是 import 到其他的 python 脚本中被调用&amp;#xff08;模块重用&amp;#xff09;执行。此时&lt;strong&gt;不会运行&lt;/strong&gt;if &lt;strong&gt;name&lt;/strong&gt; &amp;#61;&amp;#61; &amp;#39;&lt;strong&gt;main&lt;/strong&gt;&amp;#39;:&lt;/li&gt;&lt;/ul&gt;\n\n&lt;p&gt;一、直接执行(脚本执行)&lt;/p&gt;\n\n&lt;p&gt;在 test1.py 中写入如下代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"743\" src=\"https://img-ask.csdnimg.cn/upload/1622125010601.webp\" width=\"653\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" src=\"https://upload-images.jianshu.io/upload_images/8904450-80e7740e0b5317f6.png?imageMogr2/auto-orient/strip|imageView2/2/w/653/format/webp\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;image.png&lt;/p&gt;\n\n&lt;p&gt;二、import 执行&lt;/p&gt;\n\n&lt;p&gt;在同一文件夹新建名称为 test2.py 的脚本&amp;#xff0c;输入如下代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" src=\"https://upload-images.jianshu.io/upload_images/8904450-57b0d88c538906bd.png?imageMogr2/auto-orient/strip|imageView2/2/w/718/format/webp\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;image.png&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"701\" src=\"https://img-ask.csdnimg.cn/upload/1622125034505.webp\" width=\"718\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["if __name__=='_main_': 要怎么用？", ["\n", "if __name__=='_main_':\n    s=input('qing shuru')", "\n\n", "我直接运行ceshi.py，没有任何东西输出啊，这个东西不应该是相当于主程序入口，只有被其他模块调用才省略掉下面的函数吗？", "\n\n", "（用的是Pycharm）", "\n\n", "\n", "C:\\alien_invasion\\venv\\Scripts\\python.exe C:/alien_invasion/ceshi.py\n\n进程已结束，退出代码为 0", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;觉得你median函数有问题&amp;#xff0c;如果只有一个元素&amp;#xff0c;那你right-1不就越界了吗;还有要考虑是否low,high是否传入的参数越界&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;stdlib.h&amp;gt;\n&lt;span class=\"hljs-comment\"&gt;//中位数选基准值&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Median3(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//递归主程序&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;Quick_sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//面向用户接口&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;QuickSort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//交换程序&lt;/span&gt;\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *a,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *b);\n \n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Median3(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; centre &amp;#61; (left &amp;#43; right)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt; &amp;gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;centre&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt;,&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;centre&lt;/span&gt;]&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt; &amp;gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;right&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt;,&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;right&lt;/span&gt;]&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;centre&lt;/span&gt;]&lt;/span&gt; &amp;gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;right&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;centre&lt;/span&gt;]&lt;/span&gt;,&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;right&lt;/span&gt;]&lt;/span&gt;);\n    &lt;span class=\"hljs-comment\"&gt;//swap(&amp;amp;a[centre],&amp;amp;a[right-1]); //出于主程序的考虑使用这个技巧&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//return a[right-1];&lt;/span&gt;\n    return a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;centre&lt;/span&gt;]&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;Quick_sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (left&amp;gt;&amp;#61;right) return;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; left-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,j &amp;#61; right&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; pivot &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Median3(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//left一定小于pivot而right一定大于pivot&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(j&amp;gt;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt; &amp;lt; pivot);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[--&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;gt; pivot);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; j)\n            swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;,&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n    }    \n    &lt;span class=\"hljs-constructor\"&gt;Quick_sort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=\"hljs-constructor\"&gt;Quick_sort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;&amp;#43;1,&lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;QuickSort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=\"hljs-constructor\"&gt;Quick_sort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,0,&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;-1)&lt;/span&gt;;\n}\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *a,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *b){\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; t;\n    t &amp;#61; *a;\n    *a &amp;#61; *b;\n    *b &amp;#61; t;\n}\n \n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;]&lt;/span&gt; &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;};\n    &lt;span class=\"hljs-constructor\"&gt;QuickSort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,7)&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//Median3(a,0,6);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;);\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/900583827736153.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["这个快速排序哪里错了？", ["问题遇到的现象和发生背景", "\n", "不知道哪里错了，排序后数组的数据都变了", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " <stdio.h>\n\n", "//中位数选基准值", "\n", "int", " ", "Median3(", "int", " ", "a", "[],", "int", " ", "left", ",", "int", " ", "right", ")", ";\n\n", "//递归主程序", "\nvoid ", "Quick_sort(", "int", " ", "a", "[],", "int", " ", "left", ",", "int", " ", "right", ")", ";\n\n", "//面向用户接口", "\nvoid ", "QuickSort(", "int", " ", "a", "[],", "int", " ", "n", ")", ";\n\n", "//交换程序", "\nvoid swap(", "int", " *a,", "int", " *b);\n\n", "\n", "#", "include", " ", "\"QuickSort.h\"", "\n\n", "int", " ", "Median3(", "int", " ", "a", "[],", "int", " ", "left", ",", "int", " ", "right", ")", "{\n    ", "int", " centre = (left + right)/", "2", ";\n    ", "if", " (a", "[", "left", "]", " > a", "[", "centre", "]", ") swap(&a", "[", "left", "]", ",&a", "[", "centre", "]", ");\n    ", "if", " (a", "[", "left", "]", " > a", "[", "right", "]", ") swap(&a", "[", "left", "]", ",&a", "[", "right", "]", ");\n    ", "if", " (a", "[", "centre", "]", " > a", "[", "right", "]", ") swap(&a", "[", "centre", "]", ",&a", "[", "right", "]", ");\n\n    swap(&a", "[", "centre", "]", ",&a", "[", "right", "-", "1", "]", "); ", "//出于主程序的考虑使用这个技巧", "\n    return a", "[", "right", "-", "1", "]", ";\n}\n\nvoid ", "Quick_sort(", "int", " ", "a", "[],", "int", " ", "left", ",", "int", " ", "right", ")", "{\n    ", "int", " i = left,j = right - ", "1", ",pivot = ", "Median3(", "a", ",", "left", ",", "right", ")", "; ", "//left一定小于pivot而right一定大于pivot", "\n    ", "if", " ((right - left) >= ", "1", ")\n    {\n        ", "while", "(", "1", ")\n        {\n            ", "while", " (a", "[", "++", "i", "]", " < pivot);\n            ", "while", " (a", "[--", "j", "]", " > pivot);\n\n            ", "if", " (i < j)\n                swap(&a", "[", "i", "]", ",&a", "[", "j", "]", ");\n            ", "else", " \n                break;\n        }\n        swap(&a", "[", "right", " - ", "1", "]", ",&a", "[", "i", "]", ");\n        ", "Quick_sort(", "a", ",", "left", ",", "i", "-1)", ";\n        ", "Quick_sort(", "a", ",", "i", "+1,", "right", ")", ";\n    }\n\n}\n\nvoid ", "QuickSort(", "int", " ", "a", "[],", "int", " ", "n", ")", "{\n    ", "Quick_sort(", "a", ",0,", "n", "-1)", ";\n}\n\nvoid swap(", "int", " *a,", "int", " *b){\n    ", "int", " t;\n    t = *a;\n    *a = *b;\n    *b = t;\n}\n\n\n", "int", " main", "()", "{\n    ", "int", " a", "[", "7", "]", " = {", "2", ",", "5", ",", "3", ",", "7", ",", "5", ",", "8", ",", "2", "};\n    ", "QuickSort(", "a", ",7)", ";\n    ", "//Median3(a,0,6);", "\n    ", "for", " (", "int", " i = ", "0", "; i < ", "7", "; i++)\n        printf(", "\"%d\"", ",a", "[", "i", "]", ");\n    ", "while", "(", "1", ");\n    return ", "0", ";\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是函数声明&amp;#xff0c;三个文件。一个文件定义面积&amp;#xff0c;一个定义长方形面积 一个主程序调用。用文件包含即可&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["vs_community如何自定义头文件？", ["大学生学C++，用vs_community2019写C++文件，一个源文件放的是算圆面积算法，另一个放计算长方形的算法，最后主程序调用，在看老师给的PPT的时候还有一个myarea.h的头文件，应该是自己写自己放的，可是不知道怎么做，求大佬解答", "\n\n", " ", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n\nint computerwahl(void) {\n    static int last;\n    int value;\n    do {\n        value &amp;#61; rand() % 4;\n    }     while (last &amp;#61;&amp;#61; value);\n    printf(&amp;#34;电脑选择&amp;#xff1a;%d\\n&amp;#34;,value);\n    return value;\n}\n\nint user(void) {\n    int input;\n    while (true)\n    {\n        printf(&amp;#34;0枪、1石头、2剪刀、3布输入选择&amp;#xff1a;&amp;#34;);\n        scanf_s(&amp;#34;%d&amp;#34;, &amp;amp;input);\n        if (input&amp;gt;3)\n        {\n            printf(&amp;#34;输入有误&amp;#xff0c;重新输入\\n&amp;#34;);\n        }\n        else\n        {\n            break;\n        }\n    }\n    return input;\n}\n\nint winner(int symbolPlayer1, int symbolPlayer2) {\n    \n    if (symbolPlayer1 &amp;#61;&amp;#61; symbolPlayer2)\n    {\n        return 0;\n    }\n    if (symbolPlayer1 &amp;#61;&amp;#61; 0 &amp;amp;&amp;amp; (symbolPlayer2 &amp;#61;&amp;#61; 1 || symbolPlayer2 &amp;#61;&amp;#61; 2))\n    {\n        return 1;\n    }\n    if (symbolPlayer1 &amp;#61;&amp;#61; 1 &amp;amp;&amp;amp; symbolPlayer2 &amp;#61;&amp;#61; 2)\n    {\n        return 1;\n    }\n    if (symbolPlayer1 &amp;#61;&amp;#61; 2 &amp;amp;&amp;amp; symbolPlayer2 &amp;#61;&amp;#61; 3)\n    {\n        return 1;\n    }\n    if (symbolPlayer1 &amp;#61;&amp;#61; 3 &amp;amp;&amp;amp; symbolPlayer2 &amp;#61;&amp;#61; 1)\n    {\n        return 1;\n    }\n    if (symbolPlayer1 &amp;#61;&amp;#61; 0 &amp;amp;&amp;amp; symbolPlayer2 &amp;#61;&amp;#61; 3)\n    {\n        return 2;\n    }\n\n    if (symbolPlayer2 &amp;#61;&amp;#61; 0 &amp;amp;&amp;amp; (symbolPlayer1 &amp;#61;&amp;#61; 1 || symbolPlayer1 &amp;#61;&amp;#61; 2))\n    {\n        return 2;\n    }\n    if (symbolPlayer2 &amp;#61;&amp;#61; 1 &amp;amp;&amp;amp; symbolPlayer1 &amp;#61;&amp;#61; 2)\n    {\n        return 2;\n    }\n    if (symbolPlayer2 &amp;#61;&amp;#61; 2 &amp;amp;&amp;amp; symbolPlayer1 &amp;#61;&amp;#61; 3)\n    {\n        return 2;\n    }\n    if (symbolPlayer2 &amp;#61;&amp;#61; 3 &amp;amp;&amp;amp; symbolPlayer1 &amp;#61;&amp;#61; 1)\n    {\n        return 2;\n    }\n    if (symbolPlayer2 &amp;#61;&amp;#61; 0 &amp;amp;&amp;amp; symbolPlayer1 &amp;#61;&amp;#61; 3)\n    {\n        return 1;\n    }\n    return 0;\n}\n\nint main()\n{\n    int computer_value&amp;#61;0,user_value&amp;#61;0;\n    while (computer_value&amp;lt;10 &amp;amp;&amp;amp; user_value&amp;lt;10)\n    {\n        switch (winner(computerwahl(), user()))\n        {\n        case 1:\n            computer_value&amp;#43;&amp;#43;;\n            printf(&amp;#34;电脑得一分\\n&amp;#34;);\n            break;\n        case 2:\n            user_value&amp;#43;&amp;#43;;\n            printf(&amp;#34;玩家得一分\\n&amp;#34;);\n            break;\n        default:\n            printf(&amp;#34;平局\\n&amp;#34;);\n            break;\n        }\n        printf(&amp;#34;电脑分数%d,玩家分数%d\\n-------------------\\n&amp;#34;,computer_value,user_value);\n    }\n    if (computer_value&amp;#61;&amp;#61;10)\n    {\n        printf(&amp;#34;电脑赢了\\n&amp;#34;);\n    }\n    if (user_value&amp;#61;&amp;#61;10)\n    {\n        printf(&amp;#34;玩家赢了\\n&amp;#34;);\n    }\n    printf(&amp;#34;按任意键退出\\n&amp;#34;);\n    scanf_s(&amp;#34;&amp;#34;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"447\" src=\"https://img-ask.csdnimg.cn/upload/1623891081895.png\" width=\"464\" /&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["<C语言>大佬们求代码！！急急急", ["以下是题目：", "\n\n", "编一个枪，石头，剪刀，布的游戏，", "\n\n", "枪赢剪刀和石头，", "\n\n", "枪赢不了布，", "\n\n", "剪刀输石头，", "\n\n", "剪刀赢布，", "\n\n", "石头输布，", "\n\n", "获胜者每人获得一分。如果两个玩家都选择了相同的符号，则为平局，并且双方都不会得到一 分。为此，首先实现以下功能：", "\n\n", "int computerwahl(void)  (1 = 枪, 2 = 剪刀, 3 = 石头, 4 = 布) 计算器永远不会重复上次的情况", "\n\n", "int 用户选择", "\n\n", "int 赢者 (int symbolPlayer1, int symbolPlayer2)", "\n\n", "如果玩家 1 的符号赢了，则函数返回 1，如果玩家 2 赢了，则返回 2，如果是平局， 则返回 0。", "\n\n", "在主程序中调用这些函数是为了让用户与计算机对战，直到两者之一赢得 10 分为止。", "\n\n", "必须使用到自定义函数，并创建单独的项目！", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个只是函数定义&amp;#xff0c;你还需要在main方法中调用&amp;#xff0c;或者直接调用&amp;#xff0c;put()&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写输入列表元素的函数", ["做大计基的题，题目是：“分别编写输入列表元素（用列输入和行输入）和输出列表元素（用列输入和行输入）的函数，并用主程序验证。”完全没思路啊，不知道函数怎么写；同时也不知道这种需要在终端输入值的函数怎么调用。", "\n", "看了一个同学的，知道了eval函数但不会用，然后她的代码也运行不了，自己也不知道怎么写。", "\n", "以下是我看的同学的代码", "def put():", "    ls=[]", "    ls.append([eval(x) for x in input().split()])", "    print(ls[0])", "\n", "PS C:\\Users\\86185\\Desktop\\大计基>（啥也没，因为这是需要自己在终端输入值的函数，不会调用）", "\n", "我觉得也应该是利用eval函数输入列表元素，但是怎么表达呢？eval的具体用法也不清楚。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能使用到的jar版本不一致&amp;#xff1a;&lt;br /&gt;参考一下:&lt;a href=\"https://blog.csdn.net/wu_ri_san_xing/article/details/72900199\"&gt;https://blog.csdn.net/wu_ri_san_xing/article/details/72900199&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["mybati逆向工程报错Column 'IS_GENERATEDCOLUMN' not found.", ["我的mybatis-generation的xml文件（名字叫mbg.xml）是这样的：", "\n", "<!DOCTYPE ", "generatorConfiguration", " ", "PUBLIC", "\n        ", "\"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"", "\n        ", "\"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"", ">", "\n", "<", "generatorConfiguration", ">", "\n    ", "<", "context", " ", "id", "=", "\"DB2Tables\"", " ", "targetRuntime", "=", "\"MyBatis3\"", ">", "\n        ", "<!-- 生成的pojo，将implements Serializable-->", "\n        ", "<", "plugin", " ", "type", "=", "\"org.mybatis.generator.plugins.SerializablePlugin\"", ">", "</", "plugin", ">", "\n        ", "<!--        数据源-->", "\n        ", "<", "jdbcConnection", " ", "driverClass", "=", "\"com.mysql.jdbc.Driver\"", "\n                        ", "connectionURL", "=", "\"jdbc:mysql://localhost:3306/ssm_crud?useUnicode=true", "&amp;", "characterEncoding=utf-8\"", "\n                        ", "userId", "=", "\"root\"", " ", "password", "=", "\"123456\"", "/>", "\n", "<!--        异常信息的处理-->", "\n        ", "<", "javaTypeResolver", ">", "\n            ", "<", "property", " ", "name", "=", "\"forceBigDecimals\"", " ", "value", "=", "\"false\"", "/>", "\n        ", "</", "javaTypeResolver", ">", "\n", "<!--        指定Javabean生成的位置-->", "\n        ", "<", "javaModelGenerator", " ", "targetPackage", "=", "\"com.huishao.beans\"", " ", "targetProject", "=", "\".\\src\\main\\java\"", ">", "\n            ", "<", "property", " ", "name", "=", "\"enableSubPackages\"", " ", "value", "=", "\"true\"", "/>", "\n            ", "<", "property", " ", "name", "=", "\"trimStrings\"", " ", "value", "=", "\"true\"", "/>", "\n        ", "</", "javaModelGenerator", ">", "\n", "<!--指定映射文件的位置-->", "\n        ", "<", "sqlMapGenerator", " ", "targetPackage", "=", "\"mapper\"", " ", "targetProject", "=", "\".\\src\\main\\resources\"", ">", "\n            ", "<", "property", " ", "name", "=", "\"enableSubPackages\"", " ", "value", "=", "\"true\"", "/>", "\n        ", "</", "sqlMapGenerator", ">", "\n", "<!--指定dao接口生成的位置-->", "\n        ", "<", "javaClientGenerator", " ", "type", "=", "\"XMLMAPPER\"", " ", "targetPackage", "=", "\"com.huishao.dao\"", " ", "targetProject", "=", "\".\\src\\main\\java\"", ">", "\n            ", "<", "property", " ", "name", "=", "\"enableSubPackages\"", " ", "value", "=", "\"true\"", "/>", "\n        ", "</", "javaClientGenerator", ">", "\n\n        ", "<", "table", " ", "tableName", "=", "\"tbl_emp\"", " ", "domainObjectName", "=", "\"Employee\"", " />", "\n        ", "<", "table", " ", "tableName", "=", "\"tbl_dept\"", " ", "domainObjectName", "=", "\"Department\"", "/>", "\n\n    ", "</", "context", ">", "\n", "</", "generatorConfiguration", ">", "\n", "\n", "我的主程序：", "\n", "public", " ", "class", " ", "Test1", " ", "{\n    ", "public", " ", "static", " void main(", "String", "[] args) throws Exception {\n        List<", "String", "> warnings = ", "new", " ", "ArrayList", "<", "String", ">();\n        boolean overwrite = ", "true", ";\n        File configFile = ", "new", " ", "File", "(", "\"D:\\\\disk1\\\\softdata\\\\idea-workspace\\\\SSM\\\\ssm-crud\\\\mbg.xml\"", ");\n        ConfigurationParser cp = ", "new", " ", "ConfigurationParser", "(warnings);\n        Configuration config = cp.parseConfiguration(configFile);\n        DefaultShellCallback callback = ", "new", " ", "DefaultShellCallback", "(overwrite);\n        MyBatisGenerator myBatisGenerator = ", "new", " ", "MyBatisGenerator", "(config, callback, warnings);\n        myBatisGenerator.generate(", "null", ");\n    }\n}\n\n", "\n", "补充：主程序之前在写File configFile = new File()的时候只写的mbg.xml没有写绝对路径，因为我的mbg.xml在工程根目录下，以为程序会找到这个文件，结果就报找不到mbg.xml文件的异常，然后才改成上面的绝对路径。改完之后就报了这个异常：Exception in thread \"main\" java.sql.SQLException: Column 'IS_GENERATEDCOLUMN' not found.", "\n", "希望有大神朋友指导，谢谢。"]], "Tag": "程序设计"}
{"Answer": "1.你需要用引用传参的方式才能在input函数里修改main函数里的a和length\r\n2.必须为数组分配空间\r\n```\r\n #include \"stdafx.h\"\r\n#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid input(float *&amp;v,int &amp;length)\r\n{\r\n\tcout&lt;&lt;\"请输入数组长度及对应长度数组：\";\r\n\tcin&gt;&gt;length;\r\n\tv = new float[length];\r\n\tfor(int i=0;i&lt;length;i++)\r\n\t\tcin&gt;&gt;v[i];\r\n\r\n}\r\n\r\nvoid display(float*v,int length)\r\n{\r\n\tint i=0;\r\n\tfor(i=0;i&lt;length;++i)\r\n\t\tcout&lt;&lt;v[i]&lt;&lt;\"\\t\";\r\n\tcout&lt;&lt;endl;\r\n}\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n\tint length;\r\n\tfloat *a = NULL;\r\n\tinput(a,length);\r\n\tdisplay(a,length);\r\n\tsystem (\"pause\");\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201605/31/1464700999_82059.png)", "Konwledge_Point": "主程序", "Question": ["C++ 关于数组输出的一个简单问题", ["/*写了两个函数代替数组在主程序里的输入与输出，但是好像不能display数组a,为什么呢，改怎么改才能display我input的数组呢？*/", "\n    #include \"stdafx.h\"", "\n    #include", "\n    using namespace std;", "\n\n", "void input(float*v,int length)\n{\n    cout<<\"请输入数组长度及对应长度数组：\";\n    cin>>length;\n    for(int i=0;i<length;i++)\n    cin>>v[i];\n\n}\n\nvoid display(float*v,int length)\n{\n int i=0;\n for(i=0;i<length;++i)\n    cout<<v[i]<<\"\\t\";\n cout<<endl;\n}\n\nint main(int argc, char* argv[])\n{\n    int length;\n    float*a;\n    input(a,length);\n    display(a,length);\n system (\"pause\");\n return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "public synchronized void Go(Thread a,int b) throws InterruptedException    {//这个方法是设定线程锁的 \r\n          while(b==0) \r\n          { \r\n                    a.wait();     \r\n          } \r\n          vf.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.push_in1)); \r\n           vf.setOutAnimation(AnimationUtils.loadAnimation(this,                    R.anim.push_out1)); \r\n           num=0; \r\n           notify(); \r\n    } \r\n\r\n这个函数，有问题。\r\n首先 a.wait() 要能正常运行，必须要这样\r\nsynchronized (a) {  a.wait();  } ，\r\n你这里语义有问题， a.wait() 的意思不是让a对应的线程等待，调用 Go 函数的线程才会等待。\r\n\r\n你这样写并不得到你预期的结果。\r\n\r\n－－－－－－－－－－－－－－－－－－－－－－－－\r\n\r\n可以通过如下方式实现你要的结果。\r\n\r\n\r\n在 a Thread 的run方法中，作如下判断：\r\n\r\nwhile(b==0) {  //前提，你必须要正确获得 b 的真正引用，这里是示例，你要根据实际情况修改。\r\n    synchronized (this) {\r\n        wait(); \r\n    }\r\n}\r\n\r\n\r\n\r\nGo 可以这样实现：\r\n    public synchronized void Go(Thread a,int b) throws InterruptedException    {//这个方法是设定线程锁的 \r\n/*\r\n          while(b==0) \r\n          { \r\n                    a.wait();     \r\n          } \r\n */\r\n          vf.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.push_in1)); \r\n           vf.setOutAnimation(AnimationUtils.loadAnimation(this,                    R.anim.push_out1)); \r\n           num=0; \r\n        if (b != 0) {\r\n            synchronized (a) {\r\n                a.notify();\r\n            }\r\n        } \r\n    }", "Konwledge_Point": "主程序", "Question": ["关于同步锁的问题，请教各位大牛··（急~~）", ["小弟在做一个一个程序的时候，希望主程序执行到一定代码时，启动一个线程，并等待主程序的一个标识符变化时唤醒，进而执行之后的代码，程序代码如下： ", "\n出现的问题是系统提示我没有上锁，这是为什么呢？请教各位大牛··· ", "\n\n", "public class TimerTest extends Activity implements Runnable{ ", "\n\n", "int num=0; \n Thread read=new Thread(this); \n int[] timerlenth={5000,6000,2000,4000}; \n int[] number={1,2,3,4}; \n Handler handler; \n             TimerTask task; \n ViewFlipper vf; \n Timer timer = new Timer(); \n  /** Called when the activity is first created. */ \n\npublic Handler createHandle() \n { \n Handler handler = new Handler(){    \n public void handleMessage(Message msg) {    \n switch (msg.what) { \n      case 1:  \n\n          vf=(ViewFlipper)findViewById(R.id.ViewFlipper01); \n          num=1; \n\n   break;            \n\n      super.handleMessage(msg);    \n  }    \n\n }; \nreturn handler; } \n\n public TimerTask createTimerTask(final int i,final Handler handler) \n{ \n TimerTask task = new TimerTask(){    \n\n      public void run() {    \n            Message message = new Message();        \n             message.what = i;        \n             handler.sendMessage(message);      \n         }    \n\n     }; \nreturn task; \n} \n @Override \n public void onCreate(Bundle savedInstanceState) { \n    super.onCreate(savedInstanceState); \n    setContentView(R.layout.main); \n    //timer.schedule(task, 5000); \n    //for(int i=0;i<timerlenth.length;i++) \n    //{     \n\n    handler=createHandle(); \n       task= createTimerTask(number[0], handler); \n    timer.schedule(task,timerlenth[0]); \n     try { \n        Go(read,num); \n    } catch (InterruptedException e1) { \n        // TODO Auto-generated catch block \n        e1.printStackTrace(); \n    } \n        //vf=(ViewFlipper)findViewById(R.id.ViewFlipper01); \n\n        /**/ \n        vf.startFlipping(); \n        try { \n            Thread.sleep(10); \n        } catch (InterruptedException e) { \n            // TODO Auto-generated catch block \n            e.printStackTrace(); \n        } \n        vf.stopFlipping(); \n\n\n   // } \n\n} \n@Override \npublic  void run() { \n    // TODO Auto-generated method stub       \n} \npublic synchronized void Go(Thread a,int b) throws InterruptedException    {//这个方法是设定线程锁的 \n      while(b==0) \n      { \n                a.wait();     \n      } \n      vf.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.push_in1)); \n       vf.setOutAnimation(AnimationUtils.loadAnimation(this,                    R.anim.push_out1)); \n       num=0; \n       notify(); \n} \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给你一个例子供你参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt; {\n  std::string name;\n  std::string subject;\n  std::string className;\n  &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n  &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; gpa;\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  std::vector&amp;lt;Student&amp;gt; students;\n  Student s;\n  &lt;span class=\"hljs-function\"&gt;std::ifstream &lt;span class=\"hljs-title\"&gt;file&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;students.txt&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (file &amp;gt;&amp;gt; s.name &amp;gt;&amp;gt; s.className &amp;gt;&amp;gt; s.subject &amp;gt;&amp;gt; s.score &amp;gt;&amp;gt; s.gpa)\n    students.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(s);\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["多项数据文件输入到类的成员", ["问题遇到的现象和发生背景", "\n", "想把txt文件的数据输入到一个有多项成员的类中", "\n", "问题相关代码，请勿粘贴截图", "\n", "大概是一个这样的类", "class xinxi", "{", "public:", "    xinxi() { count++; }", "    ~xinxi() { count--; }", "private:", "    char name[20];//姓名", "    char subject[10];", "    char clas[20];//班级", "    float score，jidian;", "    static int count;", "};", "数据文件格式如下", "Alex 1 math 90 3.6", "Alex 1 english 100 4.0", "Alex 1 physics 80 3.6", "Peter 1 math 90 3.6", "Peter 1 english 70 3.2", "Charlie 2 english 80 3.2", "Charlie 2 chemistry 100 4.0", "David 2 math 60 3.0", "David 2 physics 80 3.6", "David 2 chemistry 60 3.0", "Bob 3 physics 80 3.6", "Bob 3 english 90 3.6", "Niko 3 math 100 4.0", "Niko 3 physics 80 3.2", "Niko 3 chemistry 100 4.0", "\n\n\n", "我想要达到的结果", "\n", "主程序有若干xinxi实例，想依次将数据赋值给xinxi实例"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/qq_26684469/article/details/81475432", "Konwledge_Point": "主程序", "Question": ["spring boot项目打成war包并且部署访问时该网页无法正常运作", ["项目启动时不报错，就是无法访问", "\n\n", "访问的时候服务器也没有日志，我打的是war包，详情看代码", "\n\n", "POM.XML", "\n\n", " <dependency>\n            <groupId>org.apache.tomcat</groupId>\n            <artifactId>tomcat-servlet-api</artifactId>\n            <version>8.0.39</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <!-- 去除内嵌tomcat-->\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n", "\n\n", " @EnableTransactionManagement\n@SpringBootApplication\n@MapperScan(\"com.vrqzd.dao\")\npublic class VrqzdApplication  extends SpringBootServletInitializer implements CommandLineRunner {\n    private final static Logger logger = LoggerFactory.getLogger(VrqzdApplication.class);\n\n    public static void main(String[] args) {\n        SpringApplication.run(VrqzdApplication.class, args);\n    }\n\n    @Override\n    public void run(String... args) throws Exception {\n        logger.info(\"主程序启动----------------->>启动完毕\");\n    }\n}\n\n", "\n\n", " @EnableTransactionManagement\n@SpringBootApplication\n@MapperScan(\"com.vrqzd.dao\")\npublic class SpringBootStartApplication extends SpringBootServletInitializer {\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        // 注意这里要指向原先用main方法执行的Application启动类\n        return builder.sources(VrqzdApplication.class);\n    }\n\n}\n\n", "\n\n", "     /**\n     * 登录页面载入\n     * @param response\n     * @return\n     */\n    @RequestMapping(value =\"login\",method = RequestMethod.GET)\n    public String login(HttpServletResponse response, HttpSession session, HttpServletRequest request){\n     //   return \"page/login\";\n        logger.info(\"==============登录发起==========\");\n        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\n        if (session.getAttribute(\"ret\")!=null){\n            request.setAttribute(\"ret\", session.getAttribute(\"ret\"));\n            session.removeAttribute(\"ret\");\n        }\n        if(auth instanceof AnonymousAuthenticationToken){\n            return \"page/login\";\n        }else{\n            return \"redirect:/user\";\n        }\n    }\n", "\n\n", "发起这个登录的时候后台没有任何日志，就给我一个该网页无法正常运作，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;帮你调试好了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d, c, t;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;];\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* p1, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* p2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* p3)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input a string:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(str);\n    &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(str, &amp;amp;d, &amp;amp;c, &amp;amp;t);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;str&amp;#61;%s digit&amp;#61;%d char&amp;#61;%d other&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, str, d, c, t);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* pd, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* pc, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* pt)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k;\n    *pd &amp;#61; *pc &amp;#61; *pt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; ch[k] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;; k&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((ch[k] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; ch[k] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) || (ch[k] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; ch[k] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;))\n            (*pc)&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ch[k] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; ch[k] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) \n            (*pd)&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n            (*pt)&amp;#43;&amp;#43;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C语言指针问题，请各位看看", ["函数fun完成的是对一个给定的字符串，统计其中数字、大小写字母及其他符号的个数的功能，在主程序中输入字符串并调用函数fun，接收并输出返回的结果。", "如下就是完成这个题目的程序，但其中有一些错误，请调试通过并将错误的语句改正填写在表格中。", "#include <stdio.h>", " void main()", " {", " ", "int", " d,c,t;\n ", "char", " ", "str", "[", "80", "];\n ", "void", " fun(", "char", " s[],", "int", " *p1,", "int", " *p2,", "int", " *p3);\n printf(", "\"input a string:\"", ");\n gets(", "str", ");\n fun(", "str", "[", "80", "],d,c,t);\n printf(", "\"str=%s  digit=%d  char=%d  other=%d\\n\"", ",", "str", ",d,c,t);\n", "\n }", " void fun(char ch[ ], int *pd,int *pc,int *pt)", " {", " int k;\n pd=pc=pt=0;\n for (k=0;ch[k]!=", "'\\0'", ";k++)\n {\n     ", "if", " ((ch[k]>=", "'A'", "&&ch", "[k]<=", "'Z'", ")", "&&", "(ch[k]>=", "'a'", "&&ch", "[k]<=", "'z'", "))  (", "*pc)++;", "\n     ", "else", " ", "if", " (ch[k]>=", "'0'", "&&ch", "[k]<=", "'9'", ")                      (", "*pd)++;", "\n     ", "else", "                                             (", "*pt)++;", "\n }\n", "\n }"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def transform(list1, list2, &lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;):\n    res &amp;#61; list2 &amp;#43; list1[&lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;][::&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]\n    list1[&lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;] &amp;#61; []\n    return res\n\nlist1 &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]\nlist2 &amp;#61; [&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;]\n&lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\nr &amp;#61; transform(list1, list2, &lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;)\nprint(list1, r)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["如何用list和相关函数解决问题", ["It is oftentimes advantageous to be able to transfer data between multiple lists while rearranging their order. For instance, say that list1 = [1,2,3,4,5,6,7,8,9] and you wish to add the numbers in the index range 4:7 of list1 to another list, list2, in reverse order while simultaneously removing them from list1. If list2 = [100,200], the result will be list2 = [100,200,7,6,5]. Write a function named transform that takes as arguments list1, list2, r1, and r2, that removes items from list1 in the slice r1:r2, appends them onto list2 in reverse order, and returns the resulting list. For example, in this case, the function call will be as the following:", "\n", "transform(list1, list2, 4,7).", "\n", "请按功能描述实现transform函数，并设计合适的主程序调用该函数。"]], "Tag": "程序设计"}
{"Answer": "# &lt;- 如果问题得到解决，请点我回答左上角的采纳和向上的箭头，谢谢\r\n```\r\n//派生类\r\nclass CH01_02 extends BMW_Serial {\r\n//构造函数\r\npublic CH01_02(String name) {\r\nmodelName = name;\r\n}\r\n//主程序区块\r\npublic static void main(String args[]) {\r\n//实现对象\r\nCH01_02 BMW318 = new CH01_02(\"BMW 318i\");\r\nBMW318.ShowData();\r\n}\r\n}\r\n\r\nclass BMW_Serial{\r\n//成员数据\r\nprivate int carLength,engCC,maxSpeed;\r\nprotected String modelName;\r\n//类方法\r\npublic void ShowData() {\r\ncarLength = 423;\r\nengCC = 3000;\r\nmaxSpeed = 250;\r\nSystem.out.println(modelName + \"基本数据\");\r\nSystem.out.println(\"车身长度：\" + carLength );\r\nSystem.out.println(\"气缸cc数：\" + engCC);\r\nSystem.out.println(\"最高车速：\" + maxSpeed);\r\n}\r\n}\r\n\r\n```\r\n运行结果\r\nBMW 318i基本数据\r\n车身长度：423\r\n气缸cc数：3000\r\n最高车速：250", "Konwledge_Point": "主程序", "Question": ["关于java继承时main函数的一个问题", ["那个派生类中我加了一个main函数是不允许的吗？还是我少掉了哪一步？", "\n求大佬指导~如果由个大概的修改意见就更棒了。", "\n//类的继承", "\nclass BMW_Serial{", "\n    //成员数据", "\n    private int carLength,engCC,maxSpeed;", "\n    private String modelName;", "\n    //类方法", "\n    public void ShowData() {", "\n        carLength = 423;", "\n        engCC = 3000;", "\n        maxSpeed = 250;", "\n        System.out.println(modelName + \"基本数据\");", "\n        System.out.println(\"车身长度：\" + carLength );", "\n        System.out.println(\"气缸cc数：\" + engCC);", "\n        System.out.println(\"最高车速：\" + maxSpeed);", "\n    }", "\n\n", "//派生类", "\npublic class CH01_02 extends BMW_Serial {", "\n    //构造函数", "\n    public CH01_02(String name) {", "\n        modelName = name;", "\n    }", "\n    //主程序区块", "\n    public static void main(String args[]) {", "\n        //实现对象", "\n        CH01_02 BMW318 = new CH01_02(\"BMW 318i\");", "\n        BMW318.ShowData();", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改为print(加法.jf(x,y))&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python代码，不能进行单元测试", ["编写一个测试加法结果的单元测试，第一段是主程序，", "\n", "\n", "import unittest", "from black import main", "from 加法 import jf", "x=float(input('输入一个值:'))", "y=float(input('输入一个值:'))", "\n", "print(jf(x,y))", "\n", "class myjf(unittest.TestCase):", "    def test_jf1(self):", "        #z= jf(x,y)", "        self.assertEqual(jf(x,y),5)", "    def test_jf2(self):", "        # z=jf(x,y)", "        self.assertEqual(jf(x,y),9)", "    def test_jf3(self):", "        # z=jf(x,y)", "        self.assertEqual(jf(x,y),11)    ", "\n", "if ", "name", "=='", "name", "':", "    unittest.main()", "\n", "#这一段是实现加法的函数", "\n", "def jf(x,y):", "     return x+y", "\n", "为什么不执行测试呢？", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\nint main() {\n    int a[4][4]&amp;#61;{0},i,j;\n    for(i&amp;#61;0;i&amp;lt;4;i&amp;#43;&amp;#43;) a[i][i]&amp;#61;1;\n    for(i&amp;#61;0;i&amp;lt;4;i&amp;#43;&amp;#43;) {\n        for(j&amp;#61;0;j&amp;lt;4;j&amp;#43;&amp;#43;)\n            printf(&amp;#34;%d &amp;#34;,a[i][j]);\n        printf(&amp;#34;\\n&amp;#34;);\n    }\n    return 1;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"212\" src=\"https://img-ask.csdnimg.cn/upload/1619169793588.png\" width=\"398\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["将4×4矩阵中主对角线元素的值置为1，其余元素的值置为0。\r\n程序代码：\n#include\"stdi", ["将4×4矩阵中主对角线元素的值置为1，其余元素的值置为0。\r\n程序代码：\n#include\"stdio.h\"\r\nvoid main()\r\n{    int a[4][4]={0},i;\r\n     for(i=0;i<4;i++)\r\n\t  a[i][i]=1;\r\n\t for(i=0;i<4;i++)\r\n\t  printf(\"%d\",a[4][4]);\r\n}\n\n\n为什么输入不出来[face]emoji:002.png[/face][face]emoji:002.png[/face][face]emoji:002.png[/face]"]], "Tag": "程序设计"}
{"Answer": "endsWith(\".\"+extent)，然后你传入过滤器字符串也就是extent是mp4\r\n就是检测文件名是否是\".mp4\"结尾，函数类型是boolean，\r\n即判断文件格式是否是mp4，是的话返回true\r\n\r\n\r\n帮到你的话采纳一下", "Konwledge_Point": "主程序", "Question": ["大佬们，本人初学java，能帮忙看一下这个代码中的accept方法在Helloworld中起到了什么作用吗？", ["文件过滤器", "\n\n", "import java.io.File;\nimport java.io.FilenameFilter;\npublic class Filter implements FilenameFilter{\n    String extent;\n    Filter(String extent){\n        this.extent = extent;\n\n    }\n    @Override\n    public boolean accept(File dir,String name) {\n        return name.endsWith(\".\"+extent);\n    }\n}\n", "\n\n", "主程序", "\n\n", "import java.io.File;\nimport java.io.FilenameFilter;\n\npublic class HelloWorld {\n    public static void main(String[]args) {\n        File dir = new File(\"./TestDir\");\n        Filter filter = new Filter(\"mp4\");\n        System.out.println(\"mp4文件:\"+dir);\n        String files[] = dir.list(filter);\n        for(String filename : files) {\n            File f = new File(dir,filename);\n            if(f.isFile()) {\n                System.out.println(\"文件名\"+f.getName());\n                System.out.println(\"绝对路径\"+f.getAbsolutePath());\n                System.out.println(\"文件目录\"+f.getPath());\n            } else {\n                System.out.println(\"子目录\"+f);\n            }\n        }\n\n    }\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "是不是服务器程序已经挂住了。比如资源用完了。出问题的时候看看服务器进程的信息。proc下的信息。", "Konwledge_Point": "主程序", "Question": ["python通过http传输文件及数据", ["一个检测系统，三台树莓派采集环境变量及拍照后将环境变量数据和照片发送至服务器，正常运行了半个多月后服务器忽然收不到数据了，调试后发现是因为树莓派无法正常发送照片，重新启动服务器上接收照片的程序后又正常了，不知道问题产生的原因是什么", "\n以下是服务器上接收照片的程序", "\n#--coding:utf8--", "\nfrom BaseHTTPServer import BaseHTTPRequestHandler", "\nimport mysql.connector", "\nimport cgi", "\n\n", "class   PostHandler(BaseHTTPRequestHandler):", "\n    def do_POST(self):", "\n\n", "    form = cgi.FieldStorage(\n        fp=self.rfile,\n        headers=self.headers,\n        environ={'REQUEST_METHOD':'POST',\n                 'CONTENT_TYPE':self.headers['Content-Type'],\n                 }\n    )\n    self.send_response(200)\n    self.end_headers()\n    self.wfile.write('Client: %sn ' % str(self.client_address) )\n    self.wfile.write('User-agent: %sn' % str(self.headers['user-agent']))\n    self.wfile.write('Path: %sn'%self.path)\n    self.wfile.write('Form data:n')\n    for field in form.keys():\n        field_item = form[field]\n        filename = field_item.filename\n        filevalue  = field_item.value\n        filesize = len(filevalue)#文件大小(字节)\n        print len(filevalue)\n        with open(filename.decode('utf-8'),'wb') as f:\n            f.write(filevalue)\n    return\n", "\n\n", "if ", "name", "=='__main__':", "\n    from BaseHTTPServer import HTTPServer", "\n    sever = HTTPServer(('0.0.0.0',8002),PostHandler)", "\n    print 'Starting server, use  to stop'", "\n    sever.serve_forever()", "\n\n", "以下是树莓派发送图片的程序，树莓派上运行的主程序通过调用postpic来发送照片", "\n#coding=utf-8", "\nimport requests", "\n\n", "#hello函数用于测试模块调用是否成功", "\ndef pichello():", "\n    print \"hello pic\"", "\n\n", "def postpic(path):", "\n    url='http://......:8002'", "\n    files={'file':open(path,'rb')}", "\n    try:", "\n        r=requests.post(url,files=files)", "\n        return 1", "\n    except:", "\n        return 0", "\n\n", "if ", "name", "==\"__main__\":", "\n    path = '/home/pi/LowVoltageRoom/PythonHTTPPic/test.jpg'", "\n    postpic(path)", "\n\n", "我猜想可能是多台设备同时发送照片导致数据阻塞引起的，我尝试在一台设备发送照片未结束时另一台同时发送，结果都成功了。现在系统运行正常，不知道什么时候会再出问题，求各路大神帮忙分析一下问题出现的原因"]], "Tag": "程序设计"}
{"Answer": "LO.onclick=say();这段在初始化的时候被加载了，改成LO.onclick=function(){ say();}就可以了", "Konwledge_Point": "主程序", "Question": ["JavaScript事件问题，还没有点击就像是alert中的信息", ["以下为主程序，期望是第一张图片点击之后就会把LightOff图片换成LightOn图片，第二张是点击之后会alert(\"again?\")。但是用谷歌浏览器发现第一张图片的功能是对的，第二张图片一开始还没点击就显示again", "\n\n", "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Title</title>\n    </head>\n    <body>\n        <img id=\"LightOff\" src=\"LightOff.jpg\" onclick=\"changeImg()\">\n        <img id=\"LightOff2\" src=\"LightOff.jpg\">\n    </body>\n    <script>\n        function changeImg() {\n            LightOff.src=\"LightOn.jpg\";\n        }\n        function say() {\n            // LightOff2.src=\"LightOn.jpg\";\n            alert(\"again?\");\n        }\n        var LO=document.getElementById(\"LightOff2\");\n        LO.onclick=say();\n    </script>\n</html>\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你主包页面引用分包页面没?还有,可以放弃使用echarts转用ucharts,虽然样式少一点&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["uniapp小程序分包后主包没有变小", ["我这个项目是这样的。", "主包pages内有四个tabBar页面和一个登录页。还没写啥呢。", "然后我在里面加了一个页面，开始写，发现插件市场我下载了一个echarts插件和一个uview组件库加上一些自己写的组件和公共方法的。这就主包过大了，变成了4MB附近了。", "我就准备分包一下，因为听说分包后，主包只留tabBar几个页面，因为我tabBar几个页面根本没有引入过uview和echarts组件，所以按道理应该不会过大的。但是我分包后，一点作用没有啊。分包是有了，但是只是把我写的页面分过去了，分包大小也只有80kb。我发现uni_modoules内的插件都还是算在主包大小内的。这是为什么呢。明明我主包都没有用过这些插件，不是打包的时候应该不会算在主包里吗。等我打开分包的时候引入才会下载分包的资源吗。", "请问这种情况要如何处理呢。还是说我需要把uni_modoules内的插件也是一起移到分包里找个文件夹放着才行？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接赋值对象就是引用&amp;#xff0c;通过构造函数传参就可以了。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Java 编程怎么进行引用啊", ["\n\n", "这是我的几个类，我想在main Fram里头用QQ", "\n\n", "\n\n", "这是QQ，我想在下面这个主程序里头用", "\n\n", "\n\n", "这样写的，他运行出来不报错，但是就是不显示我想要显示的那个label", "\n\n", "快救救孩子吧", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "可能数据库文件之前就已经存在了，但不包含image表\r\n```\r\n   if not os.path.exists('./static/imagedata1'):\r\n\t     self.createDB()\r\n```", "Konwledge_Point": "主程序", "Question": ["python 初始化数据库,没能创建表..sqlite..", ["写了一个类,将sqlite查询语句封装在里面...放在另外一个文件里", "\n\n", "在单文件测试创建文件的时候没有问题.", "\n\n", "但是从主程序里就出现问题了..", "\n报  ", "sqlite3.OperationalError: no such table: image", " 错误", "\n\n", "数据库是已经创建了..但是表没创建..", "\n\n", "\n\n", "代码如下..", "\n\n", "class DBmall(object):\n    '''封装一个查询..避免老是少写cursor .. commit'''\n    def __init__(self):\n        self.conn = sqlite3.connect('./static/imagedata1')\n        # 有数据库文件 跳过 createDB()\n        if not os.path.exists('./static/imagedata1'):\n            self.createDB()\n\n    # 创建表\n    def createDB(self):\n        cursor = self.conn.cursor()\n        try:\n            CREATE_image = '''CREATE TABLE image(imageMD5   TEXT............, );'''\n            cursor.execute(CREATE_image)\n            self.conn.commit()\n            # 关闭 游标\n            cursor.close()\n        except Exception as e:\n            print('数据库错误', e)\n\n\n    # 查第一条\n    def findone(self, sql, values=None):\n        cursor = self.conn.cursor()\n        # 执行 查询语句\n        if values:\n            cursor.execute(sql, values)\n        else:\n            cursor.execute(sql)\n        # 获取数据，数据格式为元组(tuple)\n        results = cursor.fetchone()\n        # 提交事务: 只是查询select 不用也行\n        self.conn.commit()\n        # 关闭 游标\n        cursor.close()\n        return results\n", "\n\n", "主文件, 使用的代码", "\n\n", "DB = DBmall()\n\nfrist=DB.findone('select * from image')  #这行报错..\n\n", "\n\n", "后来分析下..感觉应该是  数据表还没创建完成..就开始执行查询语句了..", "\n\n", "请问是什么问题呢?", "\n谢谢  大神!!!"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\n\r\nvoid SortStr(string s[],int n)\r\n{\r\n\tint i,j;\r\n\tstring t;\r\n\tfor(i=0;i&lt;n-1;i++) {\r\n\t\tfor(j=0;j&lt;n-1-i;j++) {\r\n\t\t\tif(s[j]&gt;s[j+1])\r\n\t\t\t{\r\n\t\t\t\tt=s[j];\r\n\t\t\t\ts[j]=s[j+1];\r\n\t\t\t\ts[j+1]=t;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main(int argc,char*argv[])\r\n{\r\n\tint i,n;\r\n\tstring s[5];\r\n\tn=5;\r\n\tfor(i=0;i&lt;n;i++){\r\n\t  getline(cin,s[i]);\r\n\t}\r\n\tSortStr(s,5);\r\n\tfor(i=0;i&lt;n;i++)\r\n\t{\r\n\t\tcout&lt;&lt;s[i]&lt;&lt;endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "主程序", "Question": ["c++编程排序问题，不知道错在哪无法正常排序，无显示。", ["编写一个字符串排序函数SortStr(string s[], int n)，对输入的n个字符串按从小到大进行排序。编写主程序，输入5个字符串，调用SortStr进行排序后输出排序结果。", "\n实现提示：getline(cin,str) 函数可以从cin输入带空格的字符串。", "\n\n", "#include \"iostream\"", "\n#include \"string\"", "\nusing namespace std;", "\n\n", "void SortStr(string s[],int n)", "\n{", "\n    int i,j;", "\n    string t;", "\n    for(i=0;i\n    {", "\n        for(j=i;j\n        {", "\n            if(s[i]>s[j+1])", "\n            {", "\n                t=s[i];", "\n                s[i]=s[j+1];", "\n                s[j+1]=t;", "\n            }", "\n        }", "\n    }", "\n}", "\nint main(int argc,char*argv[])", "\n{", "\n    int i,n;", "\n    string s;", "\n    n=5;", "\n    for(i=0;i<n;i++){", "\n    getline(cin,s);", "\n    }", "\n    SortStr(&s,5);", "\n    for(i=0;i<n;i++)", "\n    {", "\n        cout<<s[i]<<endl;", "\n    }", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "```\r\n protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(paint_layout);//paint_layout的布局在哪定义的呢，这里只是初始化了一下，但没有给paint_layout赋值\r\n\t\t改成\r\n\t\tsetContentView(R.layout.paint_layout);\r\n```", "Konwledge_Point": "主程序", "Question": ["Android怎样完成两个activity之间的切换", ["我在主程序中把两个XML声明成view形式，并且做了如下的调用", "\n\n", "```private LayoutInflater layoutInflater;", "\n    private View activity_main;", "\n    private View paint_layout;", "\n\n", "@SuppressLint(\"InflateParams\")\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    layoutInflater = LayoutInflater.from(this);\n    activity_main = layoutInflater.inflate(R.layout.activity_main, null);\n    paint_layout = layoutInflater.inflate(R.layout.paint_layout, null);\n\n    setContentView(activity_main);\n", "\n\n", "我自己写的切换activity语句是这样的\n\n\n```     Intent intent = new Intent();\n        intent.setClass(MainActivity.this, MyPaint.class);\n        //finish();\n        startActivity(intent);\n\n", "\n\n", "在MyPaint里我是这样写的", "\n\n", "``` private View paint_layout;", "\n\n", "@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(paint_layout);\n", "\n\n", "\nMyPaint和paint_layout都只是一个空架子，没填什么东西，现在运行的情况是MainActivity完全正常，但是每次选择切换到MyPaint程序都会卡死直接强退。\n这是为什么啊，LZ乃Android编程入门小白，求教大神！\nPS：小弟初登CSDN，暂时没有C币无法悬赏，大神们谅解，给寄好吃的行不行！\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;int Class15_1::staticV &amp;#61; 0;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;    Class15_1() &amp;#61; default;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;    p[0] &amp;#61; Class15_1(5);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code&gt;    delete[] p;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;四个问题&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;第一&amp;#xff0c;非const静态类staticV在类外部是声明和赋值&amp;#xff0c;不能少int&lt;/p&gt;\n\n&lt;p&gt;第二&amp;#xff0c;当声明一个非默认构造函数&amp;#xff0c;如果不继续声明默认构造函数&amp;#xff0c;就禁用默认构造函数&amp;#xff0c;没有默认构造函数就不能new类的数组&amp;#xff0c;因为无法初始化。&lt;/p&gt;\n\n&lt;p&gt;第三&amp;#xff0c;没有Class15_1.Class15_1(int n)这种用法&amp;#xff0c;但可以赋值。&lt;/p&gt;\n\n&lt;p&gt;第四&amp;#xff0c;delete数组要加 [ ]&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于静态成员的练习，我的代码哪里错了", ["编写一个类Class15_1，声明一个数据成员int value和一个静态数据成员int staticV（初始化为0），让构造函数初始化数据成员value，并让静态数据成员staticV加1，让析构函数把静态数据成员staticV减1。主程序中使用new操作符创建三个堆对象，value值分别为5，80，20。然后显示它们的数据成员和静态数据成员，再依次使用delete操作符析构每个对象，并显示对静态数据成员的影响。", "输入无输出5", "80", "20", "3", "2", "1", "0", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "Class15_1", "{\n    ", "int", " value;\n\n    \n    ", "public", ":\n        ", "static", " ", "int", " staticV;\n        ", "Class15_1", "(", "int", " a){\n            value=a;\n            staticV+=", "1", ";\n            \n        }\n        ", "void", " ", "show", "()", "{\n            cout<<value<<endl;\n            cout<<staticV<<endl;\n        }\n        ~", "Class15_1", "(){\n            staticV-=", "1", ";\n            \n        }\n}; \nClass15_1::staticV=", "0", ";\n\n", "int", " ", "main", "()", "{\n    \n    Class15_1* p=", "new", " Class15_1[", "3", "];\n    \n    p[", "0", "].", "Class15_1", "(", "5", ");\n    p[", "1", "].", "Class15_1", "(", "80", ");\n    p[", "2", "].", "Class15_1", "(", "20", ");\n    p[", "0", "].", "show", "();\n    p[", "1", "].", "show", "();\n    p[", "2", "].", "show", "();\n    ", "delete", " p;\n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;下面是没有使用线程来同步监控时间的办法&amp;#xff08;采用线程来监控时间&amp;#xff0c;因为while循环因为要获取输入后才判断时间&amp;#xff0c;所以时间误差度和不使用线程应该也差不多&amp;#xff0c;但可能也有更好的实现&amp;#xff0c;个人理解&amp;#xff09;&amp;#xff0c;仅在while循环前和获取输入和判断结果后简单统计使用时间来判断游戏时间是否没有超过指定时间&amp;#xff0c;所以时间判断上稍有出入。&lt;br /&gt;参考链接&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/m0_51371693/article/details/121589590\" id=\"textarea_1656503054606_1656503100034_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;C&amp;#43;&amp;#43;计时器&amp;#xff08;用于计算算法运行时间等&amp;#xff09;_KiraFenvy的博客-CSDN博客_c&amp;#43;&amp;#43;计时器&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;ctime&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-comment\"&gt;//https://blog.csdn.net/m0_51371693/article/details/121589590&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;((&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;));\n    &lt;span class=\"hljs-type\"&gt;clock_t&lt;/span&gt; begin, end;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; usetime ;\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100随机数&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;please input a number (1-100):&amp;#34;&lt;/span&gt;;\n    begin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;clock&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n !&amp;#61; num&amp;amp;&amp;amp;usetime&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//如果没有猜正数字以及游戏时间没有超过10秒 &lt;/span&gt;\n    {\n        \n        cin &amp;gt;&amp;gt; n;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;gt; num)\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;too big&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n            \n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;num)\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;to small&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        }\n        end &amp;#61; &lt;span class=\"hljs-built_in\"&gt;clock&lt;/span&gt;();\n        usetime &amp;#61; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;(end - begin) / CLOCKS_PER_SEC ;\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;game use &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;usetime&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; seconds, time left &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;-usetime&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; seconds.&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    }\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;the number is &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;num&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/780925205656121.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["C++ 小程序 主进程和计时器如何同时运行", ["制作了一个猜数字的小程序，我想要用循环和sleep(1000)增加一个倒计时的功能  这个功能是输入一个单位位秒的时间 然后进行倒计时，倒计时结束后游戏自动停止", "但是发现按游戏进程和倒计时进程无法同时进行", "所以这个该怎么改", "下面是我的写的小游戏进程代码", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", "<cstdlib>", "\n", "#", "include", "<ctime>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{\n    ", "srand", "((", "unsigned", " ", "int", ")", "time", "(", "NULL", "));\n    ", "int", " n=", "0", ";\n    ", "int", " num = ", "rand", "() % ", "100", " + ", "1", "; ", "//生成1-100随机数", "\n    cout << ", "\"please input a number (1-100):\"", ";\n    ", "while", " (n != num)\n    {\n        cin >> n;\n        ", "if", " (n > num)\n        {\n            cout << ", "\"too big\"", " << endl;\n        }\n        ", "else", " ", "if", "(n<num)\n        {\n            cout << ", "\"to small\"", " << endl;\n        }\n    }\n    cout<<", "\"the number is \"", "<<num<<endl;\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第4行改成&lt;br /&gt;unsigned int cun;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["单片机静态显示仿真遇到疑惑", ["在做单片机静态显示的时候想显示520，但是无法完成，看程序也没问题啊", "这是我的主程序：", "\n", "#include<reg51.H>", "\nsbit ", "P3_7", "=P3^7;\nunsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};\nunsigned char cun;\nvoid delay(unsigned int time){\nunsigned int ", "j", "=0;\n", "for", " (;time>0;time--)\n", "for", " (", "j", "=0;j<125;j++);\n}\nvoid main (void){\n", "cun", "=257;\n", "P0", "=table[cun/100];\n", "P2", "=table[cun/10%10];\n", "P1", "=table[cun%10];\n", "while", "(1){\n", "if", "(", "P3_7", "==0){\ndelay(10);\n", "if", "(", "P3_7", "==0){\ncun++;\n", "if", "(", "cun", "==100)\n", "cun", "=0;\n", "P0", "=table[cun/100];\n", "P2", "=table[cun/10%10];\n", "P1", "=table[cun%10];\n", "while", "(", "P3_7", "==0);}}}}\n", "\n", "可以排除是电脑原因，我用室友电脑试了一下结果一样", "在仿真时发现三位数码显示最多只能打到255，再按就会归零", "包括直接在程序里设置cun的初始值也最多只能设置到255，设置256仿真结果就会变0", "搞不懂什么原因"]], "Tag": "程序设计"}
{"Answer": "定义一个结构体，包含一个vector和2个bool变量，对应你的界面上的内容，定义4个这个类型的结构体变量，对应你的4个标签页，在切换的时候，保存当前界面到数据结构，并且将界面设置为要切换的那个。", "Konwledge_Point": "主程序", "Question": ["MFC多标签切换，如何保证不同标签的设置不冲突？？", ["\n\n", "MFC新手。", "\n现在要做如上图的多标签功能。", "\n标签1 控件“开路checkbox”“短路checkbox”“数据显示 ctrllist”", "\n标签2，3,4 的控件和1相同。", "\n\n", "当前在主程序的对话框Main中，添加了一个新的对话框Sub1，Sub1对话框中包含以上提到的控件。   ", "\n\n", "想要实现：", "\n1> 切换标签时，标签所在对话框的控件位置保持不变，显示数据不同；", "\n2> 切换标签时，对前一个选中的标签的设置（对“开路”“短路”的设置）保持不变，对当前选中标签的开路、短路设置不影响前一个选中标签的设置。", "\n\n", "问题：", "\n1> 当前只设置了一个Sub1 对话框，如果我要实现以上功能，是否需要建立Sub2,Sub3,Sub4对话框，复制Sub1控件的局。【】", "\n我觉得这种方法是能够实现的，但是感觉太复杂了，而且控件位置有微小不同，切换时也会很明显。", "\n2> 如果一个Sub1 对话框可以实现以上功能，那么怎么能避免不同控件设置的冲突。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单排查一下吧&lt;br /&gt;&lt;strong&gt;排查步骤&amp;#xff1a;&lt;/strong&gt;&lt;br /&gt;1、先明确Pyqt运行的主程序中&amp;#xff0c;点击事件是否生效&amp;#xff0c;&lt;/p&gt;\n&lt;p&gt;点击函数修改如下所示&amp;#xff1a;&amp;#xff08;当然你直接用编辑器debug也行&amp;#xff09;&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;Click(&lt;span class=\"hljs-params\"&gt;bind&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;cx&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;cy&lt;/span&gt;)&lt;/span&gt;:  # 点击坐标\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;AccountLogin&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;lock.acquire&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;)\n    long_position &amp;#61; win32api.&lt;span class=\"hljs-constructor\"&gt;MAKELONG(&lt;span class=\"hljs-params\"&gt;cx&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;cy&lt;/span&gt;)&lt;/span&gt;  # 模拟鼠标指针 传送到指定坐标\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;)\n    win32api.&lt;span class=\"hljs-constructor\"&gt;SendMessage(&lt;span class=\"hljs-params\"&gt;bind&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;win32con&lt;/span&gt;.WM_LBUTTONDOWN, &lt;span class=\"hljs-params\"&gt;win32con&lt;/span&gt;.MK_LBUTTON, &lt;span class=\"hljs-params\"&gt;long_position&lt;/span&gt;)&lt;/span&gt;  # 模拟鼠标按下\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;)\n    sleep(&lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;)\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;)\n    win32api.&lt;span class=\"hljs-constructor\"&gt;SendMessage(&lt;span class=\"hljs-params\"&gt;bind&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;win32con&lt;/span&gt;.WM_LBUTTONUP, &lt;span class=\"hljs-params\"&gt;win32con&lt;/span&gt;.MK_LBUTTON, &lt;span class=\"hljs-params\"&gt;long_position&lt;/span&gt;)&lt;/span&gt;  # 模拟鼠标弹起\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;5&amp;#34;&lt;/span&gt;)\n    sleep(&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;)\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;6&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;AccountLogin&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;lock.release&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;7&amp;#34;&lt;/span&gt;)\n    print(&amp;#39;点击&amp;#39;, bind, cx, cy, &amp;#39;坐标&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2、看下点击事件函数是否响应 以及响应到了哪一步停止了&amp;#xff0c;&lt;br /&gt;将结果输出来分析接着讨论下一步。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["一样的代码和环境，代码失效(标签-QT|关键词-Thread)", ["后台点击代码无法实现点击效果", "\n", "class", " ", "Thread_1(QThread)", ":  # 线程", "1", "\n    def ", "__init__(", "self", ")", ":\n        super", "()", ".", "__init__()", "\n\n    def run(self):\n        ", "AccountLogin", ".", "begin", "()", "\n\n\n", "class", " ", "CUi_MainWindow(QMainWindow, Ui_MainWindow)", ":  # 继承于UI父类\n    def ", "__init__(", "self", ", ", "parent", "=None)", ":\n        super(CUi_MainWindow, self).", "__init__(", "parent", ")", "\n        self.setup", "Ui(", "self", ")", "\n        self.init", "_login_info()", "\n        self.pushButton.clicked.connect(self.start)\n        self.pushButton_2.clicked.connect(self.pause)\n\n    def save(self):\n        settings = ", "QSettings(", "\"config.ini\"", ", QSettings.IniFormat)", "\n        settings.set", "Value(", "\"excl_path\"", ", ", "self", ".", "lineEdit", ".", "text", "()", ")\n        settings.set", "Value(", "\"share_path\"", ", ", "self", ".", "lineEdit_2", ".", "text", "()", ")\n        settings.set", "Value(", "\"ld_path\"", ", ", "self", ".", "lineEdit_3", ".", "text", "()", ")\n        settings.set", "Value(", "\"thread\"", ", ", "self", ".", "comboBox", ".", "currentIndex", "()", ")\n        settings.set", "Value(", "\"table\"", ", ", "self", ".", "comboBox_2", ".", "currentIndex", "()", ")\n\n    def init", "_login_info(", "self", ")", ":\n        settings = ", "QSettings(", "\"config.ini\"", ", QSettings.IniFormat)", "\n        ld_path = settings.value(", "\"ld_path\"", ")\n        share_path = settings.value(", "\"share_path\"", ")\n        excl_path = settings.value(", "\"excl_path\"", ")\n        thread = settings.value(", "\"thread\"", ")\n        table = settings.value(", "\"table\"", ")\n        pause = settings.value(", "\"pause\"", ")\n        ", "if", " str(pause)", " == ", "\"恢复\"", ":\n            self.pushButton_2.set", "Text(", "\"暂停\"", ")", "\n        elif str(pause)", " == ", "\"暂停\"", ":\n            settings.set", "Value(", "\"pause\"", ", ", "\"恢复\"", ")", "\n            self.pushButton_2.set", "Text(", "\"暂停\"", ")", "\n        self.lineEdit.set", "Text(", "excl_path", ")", "\n        self.lineEdit_2.set", "Text(", "share_path", ")", "\n        self.lineEdit_3.set", "Text(", "ld_path", ")", "\n        self.comboBox_2.set", "CurrentIndex(", "int", "(", "table", ")", ")\n        self.comboBox.set", "CurrentIndex(", "int", "(", "thread", ")", ")\n\n    def start(self):\n        self.save", "()", "\n        self.thread_1 = ", "Thread_1()", "  # 创建线程\n        self.thread_1.start", "()", "  # 开始线程\n\n——————————————————————————————————\n    def ", "do", "Click(", "bind", ", ", "cx", ", ", "cy", ")", ":  # 点击坐标\n        ", "AccountLogin", ".", "lock.acquire", "()", "\n        long_position = win32api.", "MAKELONG(", "cx", ", ", "cy", ")", "  # 模拟鼠标指针 传送到指定坐标\n        win32api.", "SendMessage(", "bind", ", ", "win32con", ".WM_LBUTTONDOWN, ", "win32con", ".MK_LBUTTON, ", "long_position", ")", "  # 模拟鼠标按下\n        sleep(", "0.1", ")\n        win32api.", "SendMessage(", "bind", ", ", "win32con", ".WM_LBUTTONUP, ", "win32con", ".MK_LBUTTON, ", "long_position", ")", "  # 模拟鼠标弹起\n        sleep(", "0.5", ")\n        ", "AccountLogin", ".", "lock.release", "()", "\n        print('点击', bind, cx, cy, '坐标')\n\n", "\n", "想做一个雷电模拟器账号登录的脚本，其中有一段利用win32实现后台点击的代码，独立运行的情况下，一切都正常，但是一旦通过PYQT运行主程序，该代码段依然能跑通，但是无法实现点击效果。系统也没有报错，检查过所有的参数都是正确的。整个主程序能全部跑通，系统无报错，界面点击事件也是正常的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就是补全代码啊&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;iostream&amp;gt;\nusing namespace std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Time &lt;span class=\"hljs-comment\"&gt;//声明Time类&lt;/span&gt;\n{\npublic:\n    &lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &amp;#61; 0, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &amp;#61; 0, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &amp;#61; 0)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 带默认参数的构造函数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// set functions&lt;/span&gt;\n    void set&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 设置hour, minute, second&lt;/span&gt;\n    void set&lt;span class=\"hljs-constructor\"&gt;Hour(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 设置hour (确保数据在合理范围)&lt;/span&gt;\n    void set&lt;span class=\"hljs-constructor\"&gt;Minute(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 设置minute (确保数据在合理范围)&lt;/span&gt;\n    void set&lt;span class=\"hljs-constructor\"&gt;Second(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 设置second (确保数据在合理范围)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// get functions&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; get&lt;span class=\"hljs-constructor\"&gt;Hour()&lt;/span&gt;;        &lt;span class=\"hljs-comment\"&gt;// 返回 hour&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; get&lt;span class=\"hljs-constructor\"&gt;Minute()&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 返回 minute&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; get&lt;span class=\"hljs-constructor\"&gt;Second()&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 返回 second&lt;/span&gt;\n\n    void print&lt;span class=\"hljs-constructor\"&gt;Universal()&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 按24小时格式输出时间&amp;#xff1a;23:56:12     &lt;/span&gt;\n    void print&lt;span class=\"hljs-constructor\"&gt;Standard()&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 按12小时格式输出时间&amp;#xff1a;11:56:12 (PM) 或 9:23:55(AM)&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; hour; &lt;span class=\"hljs-comment\"&gt;// 0 - 23 (24小时格式)&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; minute; &lt;span class=\"hljs-comment\"&gt;// 0 - 59&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; second; &lt;span class=\"hljs-comment\"&gt;// 0 - 59&lt;/span&gt;\n}; &lt;span class=\"hljs-comment\"&gt;// Timel类定义结束&lt;/span&gt;\n\nTime::&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt; { hour &amp;#61; h; minute &amp;#61; m; second &amp;#61; s; }\nvoid Time::set&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;{ hour &amp;#61; h; minute &amp;#61; m; second &amp;#61; s; }\nvoid Time::set&lt;span class=\"hljs-constructor\"&gt;Hour(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;)&lt;/span&gt; { hour &amp;#61; h; }\nvoid Time::set&lt;span class=\"hljs-constructor\"&gt;Minute(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;)&lt;/span&gt; { minute &amp;#61; m; }\nvoid Time::set&lt;span class=\"hljs-constructor\"&gt;Second(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt; { second &amp;#61; s; }\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; Time::get&lt;span class=\"hljs-constructor\"&gt;Hour()&lt;/span&gt; { return hour; }\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; Time::get&lt;span class=\"hljs-constructor\"&gt;Minute()&lt;/span&gt; { return minute; }\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; Time::get&lt;span class=\"hljs-constructor\"&gt;Second()&lt;/span&gt; { return second; }\n\nvoid Time::print&lt;span class=\"hljs-constructor\"&gt;Universal()&lt;/span&gt; { cout &amp;lt;&amp;lt; hour &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; minute &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; second&amp;lt;&amp;lt;endl; }\nvoid Time::print&lt;span class=\"hljs-constructor\"&gt;Standard()&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (hour &amp;gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;)\n        cout &amp;lt;&amp;lt; (hour - &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; minute &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; second &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(PM)&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        cout &amp;lt;&amp;lt; hour &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; minute &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; second &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(AM)&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    Time* t &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Time()&lt;/span&gt;;\n    t-&amp;gt;set&lt;span class=\"hljs-constructor\"&gt;Time(13, 22, 22)&lt;/span&gt;;\n    t-&amp;gt;print&lt;span class=\"hljs-constructor\"&gt;Standard()&lt;/span&gt;;\n    t-&amp;gt;print&lt;span class=\"hljs-constructor\"&gt;Universal()&lt;/span&gt;;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C++类与对象实验.", ["Time类的框架定义如下：", "class Time        //声明Time类", "{", "public:", " ", "Time", "( ", "int", " = ", "0", ", ", "int", " = ", "0", ", ", "int", " = ", "0", " ); ", "// 带默认参数的构造函数", "\n\n ", "// set functions", "\n ", "void", " ", "setTime", "( ", "int", ", ", "int", ", ", "int", " )", ";    ", "// 设置hour, minute, second", "\n", "\n void setHour( int );            // 设置hour (确保数据在合理范围)", " void setMinute( int );        // 设置minute (确保数据在合理范围)", " void setSecond( int );        // 设置second (确保数据在合理范围)", "\n", "// get functions", "\n", "int", " ", "getHour", "()", ";        ", "// 返回 hour", "\n", "int", " ", "getMinute", "()", ";    ", "// 返回 minute", "\n", "int", " ", "getSecond", "()", ";    ", "// 返回 second", "\n\n", "void", " ", "printUniversal", "()", ";    ", "// 按24小时格式输出时间：23:56:12     ", "\n    ", "void", " ", "printStandard", "()", ";    ", "// 按12小时格式输出时间：11:56:12 (PM) 或 9:23:55(AM)", "\n", "\n", "private:", "    int hour;    // 0 - 23 (24小时格式)", "        int minute; // 0 - 59", "        int second; // 0 - 59", "}; // Timel类定义结束", "（1）    按照注释的要求完成所有成员函数的定义；", "（2）    在主程序中定义Time类对象，通过对象指针或引用调用上述成员函数以测试其正确性"]], "Tag": "程序设计"}
{"Answer": "1.你的move 刚好跟系统的函数重名，调用了是系统的而不是你的move（你可以在函数添加打印验证）；\r\n2.你可以改成mymove，然后你可能会发现你的程序报错，而且运行结果也是不对的\r\n\r\n更新：\r\n\r\n```\r\n#include &lt;iostream&gt;\r\n#include &lt;string.h&gt;\r\n#include &lt;cstring&gt;\r\nusing namespace std;\r\n//#1.返回前移后的字符串\r\n/*\r\nstring move(string s)\r\n{\r\n\r\n}\r\n*/\r\n//#2.字符串数组作为函数参数\r\nvoid mymove(char *dest,char* s)\r\n{\r\n    int i,n = strlen(s);\r\n    for(i=0;i&lt;(n-1);i++)\r\n        dest[i] = s[i+1];\r\n    dest[i++] = s[0];\r\n    dest[i] = '\\0';\r\n}\r\n/*string转换成char的方法\r\nconst char* pstr=str.c_str();\r\n*/\r\nint main()\r\n{\r\n    string s;\r\n    cin &gt;&gt; s;\r\n    const char *str = s.c_str();\r\n    char *dest = new char[s.size()+1];\r\n    memset(dest,0x0,s.size()+1);\r\n    mymove(dest,(char *)str);\r\n    cout &lt;&lt; dest &lt;&lt; endl;\r\n    return 0;\r\n}\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["为什么这函数没有一点作用？", ["\n\n", "/* 2.cpp .2. 编写一个函数，\n把字符串中所有的字符都前移一个位置，\n而串中的第一个字符移到最后。并编写主程序进行测试。*/\n#include <iostream>\n#include <string.h>\n#include <cstring>\nusing namespace std;\n//#1.返回前移后的字符串\n/*\nstring move(string s)\n{\n\n}\n*/\n//#2.字符串数组作为函数参数\nvoid move(char* s)\n{\n    int n = strlen(s);\n    char* str = new char[n];\n    strncpy_s(str,n, s, n - 1);\n    strncpy_s(str,n, s, 1);\n    strncpy_s(s,n, str, n);\n    //cout << str << endl;z\n    delete[]str;\n}\n/*string转换成char的方法\nconst char* pstr=str.c_str();\n*/\nint main()\n{\n    string s;\n    cin >> s;\n    const char *str = s.c_str();\n    move(str);\n    cout << str << endl;\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Professional&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; name,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; age,&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; gender&lt;/span&gt;)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._name &amp;#61; Name;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._age &amp;#61; Age;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._gender &amp;#61; Gender;\n        }\n改为\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Professional&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; name,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; age,&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; gender&lt;/span&gt;)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._name &amp;#61; name;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._age &amp;#61; age;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;._gender &amp;#61; gender;\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["vs2019  c# 类的继承出现问题", ["//这个是父类", "\n", "public", " ", "class", " ", "Professional", "\n    {\n        ", "public", " ", "Professional", "(", "string", " name,", "int", " age,", "char", " gender", ")", "\n        {\n            ", "this", "._name = Name;\n            ", "this", "._age = Age;\n            ", "this", "._gender = Gender;\n        }\n        ", "private", " ", "string", " _name;\n\n        ", "public", " ", "string", " Name\n        {\n            ", "set", " { _name = ", "value", "; }\n            ", "get", " { ", "return", " _name; }\n        }\n        ", "private", " ", "int", " _age;\n\n        ", "public", " ", "int", " Age\n        {\n            ", "get", " { ", "return", " _age; }\n            ", "set", " { _age = ", "value", "; }\n        }\n        ", "private", " ", "char", " _gender;\n\n        ", "public", " ", "char", " Gender\n        {\n            ", "get", " { ", "return", " _gender; }\n            ", "set", " { _gender = ", "value", "; }\n        }\n    }\n\n", "//这个是子类", "\n", "class", " ", "Reporteer", " : ", "Professional", "\n    {\n        ", "public", " ", "Reporteer", "(", "string", " name,", "int", " age,", "char", " gender ", ") \n            : ", "base", "(", "name, age, gender", ")", "\n        {\n\n        }\n        ", "public", " ", "void", " ", "Hobby", "(", ")", "\n        {\n            Console.WriteLine(", "\"我是{0}，我的爱好是偷拍，我的年龄是{1}岁，我是一个{2}狗仔\"", ", ", "this", ".Name, ", "this", ".Age, ", "this", ".Gender);\n        }\n    }\n", "//这个是主程序", "\n", "class", " ", "Program", "\n    {\n        ", "static", " ", "void", " ", "Main", "(", "string", "[] args", ")", "\n        {\n            Reporteer rep = ", "new", " Reporteer(", "\"小张\"", ", ", "34", ", ", "'男'", ");\n            rep.Hobby();\n            Console.ReadKey();\n        }\n    }\n\n", "\n", " ", "//", "结果\n参数没有传进去，不知道哪里错了\n"]], "Tag": "程序设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/v_spit2017/article/details/100624173\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;记一次服务器内存报警的解决&lt;/font&gt;&lt;/a&gt; 也许有你想要的答案&amp;#xff0c;你可以看看&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 写成博客, 将相关链接放在评论区, 以帮助更多的人 ^-^", "Konwledge_Point": "主程序", "Question": ["用链表实现一个简单的内存管理机制，不知道怎么定义一个内存节点的结构体链表", ["用链表实现一个简单的内存管理机制", "\n\n", "1、定义一个内存节点的结构体链表，这个节点是一个内存空余空间节点，应该包括节点首地址，节点大小，节点状态（占用还是空闲），下个节点指针等；", "\n\n", "2、初始化首个节点（如果由空节点做头指针，空节点不算首个节点），给首个节点申请一片大的内存空间（1M以上）；", "\n\n", "3、实现申请内存操作：申请内存，跟库函数malloc功能相似，从首节点开始，判断空余节点空间是否大于申请空间，如果是，就从空余节点空间分割出一个申请空间的节点，将此节点设为占用，余下空间设为空余另成一个节点。申请空间就是找到满足大小要求的空闲节点，一分为二，一占用一空闲。也可以设定空闲空闲小于一个常量，就不再分了，全部占用。", "\n\n", "4、实现释放内存操作：释放内存，跟库函数free类似，就是将占用节点的状态设为空闲，但是，需要判断前后节点是否也是空闲，如果前后节点是空闲，则需要合并节点。释放内存，就存在多合一的操作。", "\n\n", "5、编写一个主程序，用菜单实现内存操作的演示，动态展示当前内存空余多少，占用多少。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;同学&amp;#xff0c;你把你的优化的目标函数和约束条件都说一下&amp;#xff0c;目前来看你的这些代码比较凌乱&amp;#xff0c;看不出具体在优化什么&amp;#xff0c;以及约束什么&amp;#xff0c;还有sym变量&amp;#xff0c;非常忌讳的东西。&lt;br /&gt;全局找最小&amp;#xff0c;不用优化&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 这个是全局找最小\n[X,Y] &amp;#61; meshgrid(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;);\n&lt;span class=\"hljs-attr\"&gt;F&lt;/span&gt; &amp;#61; X.*Y;\n&lt;span class=\"hljs-attr\"&gt;C&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;(size(X));\nfor &lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)\n    &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; X(i);\n    &lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(i);\n    &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    for &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n        &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; c&amp;#43; (&lt;span class=\"hljs-number\"&gt;184900&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/...\n            (&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;249600&lt;/span&gt;);\n    end\n    C(i) &amp;#61; &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;-c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nend\n&lt;span class=\"hljs-attr\"&gt;minf&lt;/span&gt; &amp;#61; min(F(C));\n&lt;span class=\"hljs-attr\"&gt;I&lt;/span&gt; &amp;#61; find(&lt;span class=\"hljs-attr\"&gt;minf&amp;#61;&amp;#61;F&amp;amp;C);&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; X(I)\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(I)\n&lt;span class=\"hljs-attr\"&gt;fmin&lt;/span&gt; &amp;#61; x*y\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;最后结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;fmin&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;优化的代码在评论区&amp;#xff0c;只是fmincon只能找到局部最优&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["matlab求多元非线性，求和里面的m也是变量吗", ["目标函数：", "function y=myfun(k)", "y=x(1)*x(2)", "约束条件：", "\n", "function [", "c", ",", "ceq]", "=", "cons(", "x", ")\n", "eq", "=", "symsum((", "400", "^", "2", "+", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")/(", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")", ",", "m", ",", "2", ",", "x", ")", ";", "\n", "c", "=", "-", "double", "(", "eq", ")", "-6", ";", "\nceq", "=", "[]", ";\n\n", "\n", "\n", "主程序：", "\n", ">> syms x y m\nceq=[];\n", "A", "=[];\nb=[];\n", "Aeq", "=[];\nbeq=[];\nx(", "1", ")=", "6", ",x(", "2", ")=", "8", ";\nk0=[x(", "1", "),x(", "2", ")];\nlb=[", "6", ",", "8", "];\nub=[", "12", ",", "16", "];\n[x,fval,exitflag,output]=fmincon(@fun,k0,", "A", ",b,[],[],[],[],@cons);\ndisp(", "'x(1)、x(2)、y值'", ")\n \nx =\n \n", "6", "\n \n错误使用 fmincon (line ", "224", ")\n", "FMINCON", " requires the following inputs to be of data type double: ", "'X0'", ".\n \n![img](https://img-mid.csdnimg.cn/release/static/image/mid/ask/", "19219581353612.", "png ", "\"=600 #left\"", ")\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;iostream&amp;gt;\nusing namespace std;\n\nclass Person \n{\n\tchar name[20]; \n\tchar gender; \n\tint age; \npublic: \n\tPerson(){memset(name,0,20);gender &amp;#61; &amp;#39;f&amp;#39;;age &amp;#61; 0;}\n\tPerson(char* Name,char Gender,char Age) \n\t{\n\t\tcout&amp;lt;&amp;lt;&amp;#34;Constructing &amp;#34;&amp;lt;&amp;lt;endl;\n\t\tmemset(name,0,20);\n\t\tmemcpy(name,Name,strlen(Name)&amp;lt;20?strlen(Name):20);\n\t\tgender &amp;#61; Gender;\n\t\tage &amp;#61; Age;\n\t}\n\t//输入学生或教师的姓名、性别和年龄&amp;#xff1b;显示输出函数 \n\tvoid input()\n\t{\n\t\tcout &amp;lt;&amp;lt; &amp;#34;请输入姓名、性别和年龄&amp;#xff1a;&amp;#34; ;\n\t\tcin &amp;gt;&amp;gt; name;\n\t\tcin &amp;gt;&amp;gt; gender;\n\t\tcin &amp;gt;&amp;gt; age;\n\t}\n\t//显示\n\tvoid display()\n\t{\n\t\tcout &amp;lt;&amp;lt; &amp;#34;姓名&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; name &amp;lt;&amp;lt;&amp;#34;&amp;#xff1b;性别&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; gender &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;年龄&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; age &amp;lt;&amp;lt; endl;\n\t}\n\n};\n\nclass student :public Person\n{\n\tint xuehao;   //学号\n\tchar name[20]; \n\tchar gender; \n\tint age; \n\tint banji;    //班级号\n\tfloat score;  //总分\npublic:\n\tstudent(int xh,char* nm,char gend,int ag,int bj,float sc):Person(nm,gend,ag)\n\t{\n\t\txuehao &amp;#61; xh;\n\t\tbanji &amp;#61; bj;\n\t\tscore &amp;#61; sc;\n\t\tmemset(name,0,20);\n\t\tmemcpy(name,nm,strlen(nm)&amp;lt;20?strlen(nm):20);\n\t\tgender &amp;#61; gend;\n\t\tage &amp;#61; ag;\n\t}\n\tvoid displayStudent()\n\t{\n\t\tcout &amp;lt;&amp;lt; &amp;#34;学号&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; xuehao &amp;lt;&amp;lt; &amp;#34; &amp;#xff1b;&amp;#34;;\n\t\tcout &amp;lt;&amp;lt; &amp;#34;姓名&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; name &amp;lt;&amp;lt;&amp;#34;&amp;#xff1b;性别&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; gender &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;年龄&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; age ;\n\t\tcout &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;班级号&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; banji &amp;lt;&amp;lt; &amp;#34;总分&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; score &amp;lt;&amp;lt; endl;\n\t}\n};\n\nclass teacher :public Person\n{\n\tint zhigonghao;  //职工号\n\tchar name[20]; \n\tchar gender; \n\tint age; \n\tchar zhicheng[20];//职称\n\tchar xibie[20];   //系别\npublic:\n\tteacher(int id,char* nm,char gend,int ag,char* p,char* xb):Person(nm,gend,ag)\n\t{\n\t\tzhigonghao &amp;#61; id;\n\t\tmemset(zhicheng,0,20);\n\t\tmemcpy(zhicheng,p,strlen(p)&amp;gt;20?20:strlen(p));\n\t\tmemset(xibie,0,20);\n\t\tmemcpy(xibie,xb,strlen(xb)&amp;gt;20?20:strlen(xb));\n\t\tmemset(name,0,20);\n\t\tmemcpy(name,nm,strlen(nm)&amp;lt;20?strlen(nm):20);\n\t\tgender &amp;#61; gend;\n\t\tage &amp;#61; ag;\n\t}\n\tvoid displayTeacher()\n\t{\n\t\tcout &amp;lt;&amp;lt; &amp;#34;职工号&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; zhigonghao &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;&amp;#34;;\n\t\tcout &amp;lt;&amp;lt; &amp;#34;姓名&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; name &amp;lt;&amp;lt;&amp;#34;&amp;#xff1b;性别&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; gender &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;年龄&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; age ;\n\t\tcout &amp;lt;&amp;lt;&amp;#34;&amp;#xff1b;职称&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; zhicheng &amp;lt;&amp;lt; &amp;#34;&amp;#xff1b;系别&amp;#xff1a;&amp;#34; &amp;lt;&amp;lt; xibie &amp;lt;&amp;lt; endl;\n\t}\n};\n\n\nint main()\n{\n\tstudent stu(123,&amp;#34;张三&amp;#34;,&amp;#39;m&amp;#39;,22,2,89.2);\n\tteacher tea(111,&amp;#34;李老师&amp;#34;,&amp;#39;f&amp;#39;,44,&amp;#34;教授&amp;#34;,&amp;#34;物理系&amp;#34;);\n\n\tstu.display();\n\tstu.displayStudent();\n\ttea.display();\n\ttea.displayTeacher();\n\t//getchar();\n\t//getchar();\n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["给出代码，能运行就行", ["(1)编写一个学生和教师相关数据输入和显示程序。设计三个类 person, student 和 teacher 类，其中 student 和 teacher 是由 person 类派生出来的。学生（student）数据有学号、姓名、性别、年龄、班级号和期末三门功课总分；教师(teacher)数据有职工号、姓名、性别、年龄、职称和系别。在主程序中，定义两个学生和两个教师，从键盘输入他们相关的数据，并将输入数据输出显示在屏幕上。（提示：person 类有两个公有成员函数：void input();输入学生或教师的姓名、性别和年龄；显示输出函数 void display()；显示学生和教师的姓名、性别和年龄。该类中有三个私有数据成员：姓名 char name[20]、性别和年龄。Person 类定义已经给出，请设计其他两个类和主函数。\nclass Person\n{ char name[20];\nchar gender;\nint age;\npublic:\nPerson() {}\nPerson(char* Name,char Gender,char Age)\n{ cout<<\"Constructing \"<"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码贴完整&amp;#xff0c;程序退出时&amp;#xff0c;有资源没释放完&amp;#xff0c;看看析构&amp;#xff0c;重点看new和delete&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["QT中关闭主窗口时提示主进程还在运行", ["问题遇到的现象和发生背景", "\n", "ui线程点击右上角x 关闭时，会提示这个bug", "\n", "底下报这个", "ASSERT failure in MyWidget: \"Called object is not of the correct type (class destructor may have already run)\", file D:\\QT6\\6.3.1\\msvc2019_64\\include\\QtCore/qobjectdefs_impl.h, line 156", "\n", "问题相关代码，请勿粘贴截图", "\n", "connect(this, &MyWidget::destroyed, this, &MyWidget::dealclose);", "\n", "void MyWidget::dealclose()", "{", "   on_pushButtonstop_clicked();", "\n", "delete myT", ";", "\n", "\n", "}", "\n", "void MyWidget::on_pushButtonstop_clicked()", "{", "    if(thread->isRunning() == false)", "       {", "           return;", "       }", "\n", "myT", "->", "setFlag(", "true", ");\n\n", "thread", "->", "quit();\n   ", "thread", "->", "wait();\n", "\n", "}", "\n", "但是我已经处理过关闭时的信号了，不知道为什么还会报这个错！", "\n", "之前子线程会报这个，但通过设置标志位退出循环解决了。主线程为什么也会提示这个bug？"]], "Tag": "程序设计"}
{"Answer": "无奈自己结帖，其实原因很简单，项目中之前用到过libcurl，之前的版本和现在的版本冲突了才导致请求不成功", "Konwledge_Point": "主程序", "Question": ["libcurl 进行HTTPS进行双向认证返回CURLE_SSL_CONNECT_ERROR失败", ["最近公司项目需要SSL双向认证，我就用libcurl来实现，但是在做Demo的时候请求是没问题的，可是吧代码放到主程序（windows下 Unicode字符集）里面，返回的总是      CURLE_SSL_CONNECT_ERROR不知道是哪里出问题了，下面是源码", "\nint CUrlHttp::Request(std::string strRequestType, ", "\n                      std::string strUrl, ", "\n                      std::string &strReport, ", "\n                      std::string &strRetHeader,", "\n                      std::vector", "std::string", " vecHeader, ", "\n                      std::string strParam/* =\"\" ", "/, ", "\n                      std::string strCookie/", " =\"\" ", "/, ", "\n                      std::string strCaPath/", " =\"\" ", "/, ", "\n                      int nTimeOut/", " =0 */)", "\n{", "\n    strUrl = \"", "https://192.168.5.176:4433/ipass00/http/localhost/welcome", "\";", "\n    CURL * curl;", "\n    curl = curl_easy_init();", "\n    curl_easy_setopt(curl, CURLOPT_URL, strUrl.c_str());", "\n\n", "if ( strRequestType.compare(\"post\")==0 || strRequestType.compare(\"POST\") == 0 )\n{\n    curl_easy_setopt(curl, CURLOPT_POST, 1);\n    curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(strParam.c_str()));//post内容长度\n    curl_easy_setopt(curl, CURLOPT_POSTFIELDS, strParam.c_str());\n}\nelse\n{\n    curl_easy_setopt(curl, CURLOPT_POST, 0);//get请求\n}\n\n//设置http头\ncurl_slist * headers = NULL;\nfor ( int i=0; i<vecHeader.size(); i++ )\n{\n    if (!vecHeader.at(i).empty())\n    {\n        headers = curl_slist_append(headers, vecHeader.at(i).c_str());\n    }\n}\nif (headers != NULL)\n{\n    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);\n}\n\ncurl_easy_setopt(curl,CURLOPT_SSLVERSION,1);\n\n//判断是否有证书\nif(!strCaPath.empty())\n{\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, false);\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, false);\n}\nelse\n{\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, true);\n    curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, true);\n    curl_easy_setopt(curl,CURLOPT_CAINFO,\"C:/ssl/cacert.pem\");\n\n    curl_easy_setopt(curl,CURLOPT_SSLCERT,\"C:/ssl/client.pem\");  \n    curl_easy_setopt(curl,CURLOPT_SSLCERTPASSWD,\"11111111\");  \n    curl_easy_setopt(curl,CURLOPT_SSLCERTTYPE,\"PEM\");  \n    curl_easy_setopt(curl,CURLOPT_SSLKEY,\"C:/ssl/clientkey.pem\");  \n    curl_easy_setopt(curl,CURLOPT_SSLKEYPASSWD,\"11111111\");  \n    curl_easy_setopt(curl,CURLOPT_SSLKEYTYPE,\"PEM\");\n\n\n}\n\n//Web服务器一般会重定向链接，比如访问http:/xxx/x1.do自动转到http:/xxx/x2.do  \n//所以一定要设置CURLOPT_FOLLOWLOCATION为1,否则重定向后的数据不会返回。  \ncurl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION,1); \n\ncurl_easy_setopt(curl, CURLOPT_VERBOSE, 1);     //可以看到调试信息\n\ncurl_easy_setopt(curl,CURLOPT_HEADERFUNCTION,_CURL_::write_data);\ncurl_easy_setopt(curl, CURLOPT_WRITEHEADER, &strRetHeader);\ncurl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, _CURL_::write_data);\ncurl_easy_setopt(curl, CURLOPT_WRITEDATA, &strReport); \nif ( nTimeOut > 0  )\n{\n    curl_easy_setopt(curl, CURLOPT_CONNECTTIMEOUT, nTimeOut);\n    curl_easy_setopt(curl, CURLOPT_TIMEOUT, nTimeOut);\n}\n\nif (!strCookie.empty())\n{\n\n    curl_easy_setopt(curl, CURLOPT_COOKIEFILE, strCookie.c_str());\n}\n\nCURLcode code = curl_easy_perform(curl);\nif(code != CURLE_OK){  \n\n    printf(\"curl_wasy_perform error = %s\",curl_easy_strerror(code));  \n}  \nif ( headers != NULL )\n{\n    curl_slist_free_all(headers);\n}\ncurl_easy_cleanup(curl);\n//打印出来\n", "\n\n", "//  std::string strReportData;", "\n//  strReportData.append(strReportHeader);", "\n//  strReportData.append(strReport);", "\n//  TRACE(\"request:%s  url:%s report:%s\", strRequestType.c_str(), strUrl.c_str(), strReportData.c_str());", "\n    return code;", "\n}"]], "Tag": "程序设计"}
{"Answer": "输入double类型时scanf格式是lf，使用f字节数不对，具体的原因我就不清楚了，我c也不行~~\r\n```C\r\n for(int i=0;i&lt;3;i++) \r\n    {\r\n        scanf(\"%d%s%f\",&amp;(p+i)-&gt;number,&amp;(p+i)-&gt;name,&amp;(p+i)-&gt;scores); \r\n    }\r\n```\r\nscanf(\"%d%s%lf\",...)后面就不写了  \r\n你试一下，我用printf输出调试出来的  \r\n另外，数组名就是地址，那后边的&amp;(p+i)-&gt;name是不是应该去掉前面的&amp; ？我们讨论一下", "Konwledge_Point": "主程序", "Question": ["关于C语言结构体的问题", [" //4. 设一个班有若干学生(如10人)，请定义学生结构包含以下信息：学生学号、学生姓名、高级语言程序课的成绩，请写程序完成以下功能：\n//(1)定义函数以学生结构指针(指向学生数组)为参数，逐个录入该班集的学生信息；\n//(2)定义函数以学生结构指针(指向学生数组)为参数，求出该班高级语言程序课的排名第一的学生，并输出该第一名学生的学号、姓名及高级语言程序课成绩。\n//(3)在主程序中完成测试。\n#include<stdio.h>\nstruct Student \n{\n    int number;\n    char name[20];\n    double scores;\n};\nvoid StuInfo(struct Student *p);\nvoid Rank(struct Student *p);\n\nint main()\n{\n    struct Student stus[3];\n    struct Student *p;\n    p=stus;\n    StuInfo(p);\n    Rank(p);\n    return 0;\n}\n\nvoid StuInfo(struct Student *p) \n{\n    printf(\"请输入学生的学号，姓名，以及成绩：\"); \n    for(int i=0;i<3;i++) \n    {\n        scanf(\"%d%s%f\",&(p+i)->number,&(p+i)->name,&(p+i)->scores); \n    }\n\n}\n\nvoid Rank(struct Student *p)\n{\n    struct Student *q;\n    q=p; \n    for(int i=0;i<2;i++)\n    {\n        if(q->scores<(p+i+1)->scores)\n        {\n            q=p+i+1;\n        }\n    }\n    printf(\"成绩最好的学生学号%d,姓名%s,成绩%f\",q->number,q->name,q->scores);\n}\n\n", "\n\n", "请问为什么最后输出的scores总是0.000000？很是疑惑。"]], "Tag": "程序设计"}
{"Answer": "下载慢的话，试试国内的镜像，百度一下就有", "Konwledge_Point": "主程序", "Question": ["android工程无法运行，单独可以启动avd", ["一直是这样子，我之前也搭过环境什么的，原来没遇到过什么问题就能跑起来，这次死活就弄不起来了，启动的过程中也没有报任何错误，就是卡在这里过不去。", "\n这是目前sdk中5.1.1中已经下载的下载", "\n这两个avd单独点击start都是可以顺利启动的", "\n\n", "\n\n", "\n\n", "\n如果target sdk和compilesdk都是5.1.1的话，那么新建的程序没有主程序，如上图", "\n\n", "\n\n", "我就只有5.1.1和4.3两个版本的sdk，因为得翻墙下载比较慢，就没下载那么多，是不是要下载全了才行？假如只有一个5.1.1可以跑起来吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;strrindex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; t[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; lens &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s),lent &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(t);\n    i &amp;#61; lens - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    j &amp;#61; lent - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; t[j]){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; i;\n            }\n            i --;\n            j --;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            j &amp;#61; lent - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            i --;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;1010&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; t[&lt;span class=\"hljs-number\"&gt;1010&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s), &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(t);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;strrindex&lt;/span&gt;(s, t));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["找位置 能帮我看看错哪里了吗", ["问题描述", "编写函数strrindex(s, t)，它返回字符串t在s中最右边出现的位置。如果s中不包含t，则返回-1。 设计一个合适的主程序测试你编写的函数。字符串的长度不超过1000。", "\n", "输入", "输入数据有两行，第一行是字符串s，第二行是字符串t。", "\n", "输出", "如果字符串s中包含字符串t，则输出t在s中最右边出现的位置，否则输出-1。", "\n", "输入样列", "I am a student.", "am", "输出样例", "2", "输入样例", "The Internet developers wanted to make a networking protocol that had serious longevity, so they had to define a large enough IP address space to last well beyond the foreseeable future.", "the", "输出样例", "163", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n", "int", " ", "strrindex", "(", "char", " s[],", "char", " t[])", "\n", "{\n    ", "int", " i,j,k;\n    ", "int", " len=", "strlen", "(s);\n    ", "for", "(i=len", "-1", ";i>=", "0", ";i--){\n        ", "for", "(j=i,k=", "0", ";t[k]!=", "0", " && s[j]==t[k];j++,k++){\n            ", "if", "(k>", "0", " && t[k]==", "'\\0'", ") \n                ", "return", " i;\n        }\n    }\n    ", "return", " ", "-1", ";\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " s[", "1010", "];\n    ", "char", " t[", "1010", "];\n    ", "gets", "(s),", "gets", "(t);\n    ", "printf", "(", "\"%d\\n\"", ",", "strrindex", "(s,t));\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;按叉关闭的问题加一句pygame.quit&lt;br /&gt;由于先更新了屏幕后更新位置导致显示不出来&lt;/p&gt;\n&lt;p&gt;game_function.py改为:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; sys\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pygame\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;check_events&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;ship&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; event &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pygame.event.get():\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event &amp;#61;&amp;#61; pygame.QUIT:\n            pygame.quit()\n            sys.exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; event.&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt; &amp;#61;&amp;#61; pygame.KEYDOWN:&lt;span class=\"hljs-comment\"&gt;#event.get():获取每一次事件&amp;#xff0c;event的属性type&amp;#xff0c;如果是键盘输入KEYDOWN&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event.key &amp;#61;&amp;#61; pygame.K_RIGHT:&lt;span class=\"hljs-comment\"&gt;#方向右键--&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;#ship.rect.centerx &amp;#43;&amp;#61; 1#这里用到了形参ship&amp;#xff0c;所以要在函数的括号内加上形参ship&lt;/span&gt;\n                ship.moving_right &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; event.key &amp;#61;&amp;#61; pygame.K_LEFT:\n                ship.moving_left &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; event.&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt; &amp;#61;&amp;#61; pygame.KEYUP:&lt;span class=\"hljs-comment\"&gt;#抬起键盘&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; event.key &amp;#61;&amp;#61; pygame.K_RIGHT:\n                ship.moving_right &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; event.key &amp;#61;&amp;#61; pygame.K_LEFT:\n                ship.moving_left &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n \n \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;update_screen&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;ai_settings,screen,ship&lt;/span&gt;):\n    screen.fill(ai_settings.bg_color)\n    ship.blitme()       \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后ship.py改为:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pygame\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Ship&lt;/span&gt;():\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,screen&lt;/span&gt;):\n        self.screen &amp;#61; screen\n        self.image &amp;#61; pygame.image.load(&lt;span class=\"hljs-string\"&gt;&amp;#39;images/ship.png&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#加载图片&lt;/span&gt;\n        self.rect &amp;#61; self.image.get_rect()   &lt;span class=\"hljs-comment\"&gt;#获取surface的rect属性&lt;/span&gt;\n        self.screen_rect &amp;#61; screen.get_rect()\n \n        self.rect.centerx &amp;#61; self.screen_rect.centerx&lt;span class=\"hljs-comment\"&gt;#设置rect的位置&lt;/span&gt;\n        self.rect.bottom &amp;#61; self.screen_rect.bottom\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;center top bottom left right属性 加上xy坐标可实现位置的设置\n        注意&amp;#xff1a;左上角的坐标为&amp;#xff08;0&amp;#xff0c;0&amp;#xff09;&amp;#xff0c;往右下增大&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n        self.moving_right &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        self.moving_left &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;update&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.moving_right &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n            self.rect.centerx &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            pygame.display.update()\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; self.moving_left &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n            self.rect.centerx -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            pygame.display.update()\n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;blitme&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.screen.blit(self.image,self.rect)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["py教材里pygame外星人游戏无法正确运行", ["这个是主程序", "\n", "import pygame\nfrom settings import Settings\nfrom ship import Ship\nimport game_function ", "as", " gf\ndef run", "_game()", ":\n    pygame.init", "()", "                           \n    ai_settings = ", "Settings()", "\n    screen = pygame.display.set", "_mode((", "ai_settings", ".", "screen_width", ", ", "ai_settings", ".", "screen_height", ")", ")\n    pygame.display.set", "_caption(", "\"Allien Invasion\"", ")", "\n    ship = ", "Ship(", "screen", ")", "\n    ", "while", " True:\n        gf.check", "_events(", "ship", ")", "\n        ship.update", "()", "\n        gf.update", "_screen(", "ai_settings", ",", "screen", ",", "ship", ")", "\nrun", "_game()", "\n\n", "\n", "game_function.py", "\n", "import", " sys\n", "import", " pygame\n", "def", " ", "check_events", "(", "ship", "):\n    ", "for", " event ", "in", " pygame.event.get():\n        ", "if", " event == pygame.QUIT:\n            sys.exit()\n        ", "elif", " event.", "type", " == pygame.KEYDOWN:", "#event.get():获取每一次事件，event的属性type，如果是键盘输入KEYDOWN", "\n            ", "if", " event.key == pygame.K_RIGHT:", "#方向右键-->", "\n                ", "#ship.rect.centerx += 1#这里用到了形参ship，所以要在函数的括号内加上形参ship", "\n                ship.moving_right == ", "True", "\n            ", "elif", " event.key == pygame.K_LEFT:\n                ship.moving_left == ", "True", "\n        ", "elif", " event.", "type", " == pygame.KEYUP:", "#抬起键盘", "\n            ", "if", " event.key == pygame.K_RIGHT:\n                ship.moving_right == ", "False", "\n            ", "elif", " event.key == pygame.K_LEFT:\n                ship.moving_left == ", "False", "\n\n\n", "def", " ", "update_screen", "(", "ai_settings,screen,ship", "):\n    screen.fill(ai_settings.bg_color)\n    ship.blitme()       \n    pygame.display.flip()\n\n", "\n", "ship.py", "\n", "\n", "import", " pygame\n", "class", " ", "Ship", "():\n    ", "def", " ", "__init__", "(", "self,screen", "):\n        self.screen = screen\n        self.image = pygame.image.load(", "'images/ship.png'", ")", "#加载图片", "\n        self.rect = self.image.get_rect()   ", "#获取surface的rect属性", "\n        self.screen_rect = screen.get_rect()\n\n        self.rect.centerx = self.screen_rect.centerx", "#设置rect的位置", "\n        self.rect.bottom = self.screen_rect.bottom\n        ", "'''center top bottom left right属性 加上xy坐标可实现位置的设置\n        注意：左上角的坐标为（0，0），往右下增大'''", "\n        self.moving_right = ", "False", "\n        self.moving_left = ", "False", "\n    \n    ", "def", " ", "update", "(", "self", "):\n        ", "if", " self.moving_right == ", "True", ":\n            self.rect.centerx += ", "1", "\n        ", "elif", " self.moving_left == ", "True", ":\n            self.rect.centerx -= ", "1", "\n\n    ", "def", " ", "blitme", "(", "self", "):\n        self.screen.blit(self.image,self.rect)\n        ", "#c.blit（a,b)根据指定位置将a:image按照b:rect的位置（相当于粘贴覆盖）绘制到c:screen上,即显示出来", "\n\n", "\n", "这个是《从入门到实践》的第一个例子，然后目前就是让飞船通过键盘左右移动。可是并不成功。", "\n", "一个是不能通过右上的叉关闭。一开始是可以的，就是把 if event.type == pygame.QUIT:    sys.exit()   写在主程序里的时候，后来放在function里面再导入就不能用了", "还有就是左右移动的功能也根本不能用，而且有时候按左右方向键还会闪退。", "我对比了一下，代码应该没有错呀，pygame也是安装好了，可以看到那个飞碟，实在不知道是什么问题了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是想索引重0开始吗&amp;#xff0c;既然想遵从索引重零开始&amp;#xff0c;那上面的减1就不要了&amp;#xff0c;这样代码索引就是从零开始了&amp;#xff0c;你加1&amp;#xff0c;就比如&amp;#xff0c;代码默认从零开始&amp;#xff0c;你输入0本来就挺好&amp;#xff0c;你让人家输入1然后再减1&amp;#xff0c;这样达到从0开始的效果&amp;#xff0c;不就不对了嘛&amp;#xff0c;所以索引想要从零开始&amp;#xff0c;就不用管-1了&amp;#xff0c;改好了&amp;#xff0c;望采纳&amp;#xff0c;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-C&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* &lt;span class=\"hljs-title\"&gt;insert&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s1, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s1);&lt;span class=\"hljs-comment\"&gt;//s1字符串的长度&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; q &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s2);&lt;span class=\"hljs-comment\"&gt;//s2字符串长度&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; n &amp;#43; p;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n; i &amp;lt; k; i&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//空出n个位置&lt;/span&gt;\n    {\n        s1[i &amp;#43; q] &amp;#61; s1[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; q; i&amp;#43;&amp;#43;)\n    {\n        s1[n &amp;#43; i] &amp;#61; s2[i];&lt;span class=\"hljs-comment\"&gt;//将s2插入s1&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s1;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;abcdefg&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s2[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;插入前&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; s1 &amp;lt;&amp;lt; endl;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入要插入的位置&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cin &amp;gt;&amp;gt; c;\n    &lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(s1, s2, c);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;插入后&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; s1 &amp;lt;&amp;lt; endl;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/697121526256175.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["达不到效果问题出在哪", ["\n", "字符串问题：设计一个通用函数char *insert(char *s1,char *s2,int n)实现在字符串s1中从第m个字符开始插入字符串s2，在主程序中对该函数进行测试。", "      初始状态：s1： abcdefg", "                 s2 ： 1234", "      输入插入字符串的位置3", "      目标状态 ：s1： ab1234cdefg", "                 s2： 1234", "\n", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "using", " ", "namespace", " std;\n", "char", "* ", "insert", "(", "char", "* s1, ", "char", "* s2, ", "int", " n)", "\n", "{\n    ", "int", " p = ", "strlen", "(s1);", "//s1字符串的长度", "\n    ", "int", " q = ", "strlen", "(s2);", "//s2字符串长度", "\n    ", "int", " k = (n - ", "1", ") + p ;\n    ", "for", " (", "int", " i = n - ", "1", "; i < k; i++)", "//空出n个位置", "\n    {\n        s1[i+q] = s1[i];\n    }\n    ", "for", " (", "int", " i = ", "0", "; i < q; i++)\n    {\n        s1[n - ", "1", " + i] = s2[i];", "//将s2插入s1", "\n    }\n    ", "return", " s1;\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " s1[", "100", "] = ", "\"abcdefg\"", ";\n    ", "char", " s2[", "100", "] = ", "\"1234\"", ";\n    cout << ", "\"插入前：\"", " << endl;\n    cout << s1 << endl;;\n    ", "int", " c;\n    cout << ", "\"输入要插入的位置：\"", " << endl;\n    cin >> c;\n    ", "insert", "(s1, s2, c);\n    cout << ", "\"插入后：\"", " << endl;\n    cout << s1 << endl;\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;调用函数是传参&amp;#xff0c;不是把声明重写一遍&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["链表报错 ，帮助理解结构体调用", ["问题遇到的现象和发生背景", "\n", "dev_C++软件", "看网课学习，但是代码缺少，没有主程序；", "理解方法中的指针调用，但是无法写出主程序；", "在mian{", "多写注释来帮助理解，谢谢", "}", "其他都是按着网课来的；", "\n", "/*\n要求\n四、    实验内容及步骤（对重要过程和结果需要抓图）\n", "1", ".实验内容\n（", "1", "）用头插法或者尾插法建立包含若干元素的单链表；\n（", "2", "）对已建立的链表表实现插入、删除、查找等基本操作。\n具体要求如下：\n（", "1", "） 初始化链表L（元素类型为char型）\n（", "2", "） 依次采用尾插法插入a, b, c, d, e元素\n（", "3", "） 输出链表L\n\n（", "4", "） ", "//", "输出链表L的长度\n（", "5", "） 判断链表L是否为空\n（", "6", "） 输出链表L的第", "3", "个元素\n（", "7", "） 输出元素", "'a'", " 的位置\n（", "8", "） 在第", "4", "个元素位置上插入", "'f'", "元素\n（", "9", "） 输出链表L\n（", "10", "） 删除链表L的第", "3", "个元素\n（", "11", "） 输出链表\n（", "12", "） 释放链表\n \n", "2", ".实验步骤\n（", "1", "）    建立单链表的数据结构\n参考（C语言）\ntypedef char ElemType;\n \ntypedef struct LNode{\n    ElemType data;\n    struct LNode *", "next", ";\n}LinkList;\n\n（", "2", "）    定义单链表的操作\nvoid InitList(LinkList *&L);", "//", "初始化链表 \nvoid CreateListR(LinkList *&L,ElemType a[],int n);", "//", "尾插法插入元素\nbool ListEmpty(LinkList *L);", "//", "判断是否为空表\nint ListLength(LinkList *L);", "//", "求单链表长度\nvoid DispList(LinkList *L);", "//", "输出单链表元素 \nbool GetElem(LinkList *L,int i,ElemType &e);", "//", "查找第i个节点的元素 \nint LocateList(LinkList *L,ElemType e);", "//", "按元素值查找\nbool ListInsert(LinkList *&L,int i,ElemType e);", "//", "插入数据元素\nbool ListDelete(LinkList *&L,int i,ElemType &e);", "//", "删除数组元素\nvoid DestroryList(LinkList *&L);", "//", "销毁单链表\n\n（", "3", "）    实现上述操作（推荐使用带头结点）\n\n（", "4", "）    输入数据进行测试（要求附截图）\n\n\n*/\n\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "typedef", " ", "char", " ElemType;\n \n", "typedef", " ", "struct", " ", "LNode", "{", "//声明  结点类型和指向结点的指针类型 ", "\n    ElemType data;", "//结点数据域 ", "\n    ", "struct", " ", "LNode", " *next;", "//节点指针域 //存地址 ", "\n}LNode,*LinkList;", "//LNode  指针 ，linklist  数据 //结构类型", "\n  \n", "/* linklist  是指向结构体linklistLNode 的指针类型； \nLinkList;类型的指针；\nLNode .data; \n\n*/", "\n", "void", " ", "ClearList", "(LinkList &L)", ";  ", "//清空； ", "\n", "void", " ", "InitList", "(LinkList &L)", ";  ", "//初始化链表 1111111", "\n", "void", " ", "CreateListR", "(LinkList &L,ElemType a[],", "int", " n)", ";", "//尾插法插入元素", "\n", "bool", " ", "ListEmpty", "(LinkList L)", ";  ", "//判断是否为空表", "\n", "int", " ", "ListLength", "(LinkList L)", ";", "//求单链表长度", "\n  ", "void", " ", "DispList", "(LinkList L)", ";", "//输出单链表元素 ", "\n", "bool", " ", "GetElem", "(LinkList L,", "int", " i,ElemType &e)", ";", "//查找第i个节点的元素 ", "\n", "int", " ", "LocateList", "(LinkList L,ElemType e)", ";", "//按元素值查找", "\n", "bool", " ", "ListInsert", "(LinkList &L,", "int", " i,ElemType e)", ";", "//插入数据元素", "\n", "bool", " ", "ListDelete", "(LinkList &L,", "int", " i,ElemType &e)", ";", "//删除数组元素", "\n", "void", " ", "DestroryList", "(LinkList &L)", ";", "//销毁单链表", "\n", "void", " ", "InitList", "(LinkList &L)", "{\n    L=", "new", " LNode; \n    L->next=", "NULL", ";\n    \n}\n", "bool", " ", "ListEmpty", "(LinkList L)", "{\n    ", "if", "(L->next)\n    ", "return", " ", "0", ";\n    ", "else", "\n    ", "return", " ", "1", ";\n    \n    \n}\n", "void", " ", "DestroryList", "(LinkList &L)", "{\n    LNode *p;\n    ", "while", "(L){\n        p=L;\n        L=L->next;\n        ", "delete", " p;\n    }\n\n}\n", "void", " ", "ClearList", "(LinkList &L)", "{\n    LNode *p,*q;\n    p=L->next;\n    ", "while", "(p){    \n    ", "delete", " p;\n    p=q;\n  }\n  L->next=", "NULL", ";\n\n}\n", "int", " ", "ListLength", "(LinkList L)", "{\n    LinkList p;\n    p=L->next;\n    ", "int", " i=", "0", ";\n    ", "while", "(p){\n        i++;\n        p=p->next;\n    }\n    ", "printf", "(", "\"Length:%d\\n\"", ",i);\n    ", "return", " i;\n}\n", "bool", " ", "GetElem", "(LinkList L,", "int", " i,ElemType &e)", "{\n    LinkList p;\n    p=L->next;\n    ", "int", " j=", "1", ";", "while", "(p&&j<i){\n        p=p->next;\n        ++j;\n    }\n    ", "if", "(!p||j>i)\n    ", "return", " ", "0", ";\n    e=p->data;\n    ", "return", " ", "1", ";\n    }\n", "int", " ", "LocateList", "(LinkList L,ElemType e)", "{\n    LinkList p=L->next;\n    ", "int", " j=", "1", ";\n    ", "while", "(p&&p->data!=e){\n        p=p->next;\n        j++;\n    }\n    ", "if", "(p)\n    ", "return", " j;\n    ", "else", "\n    ", "return", " ", "0", ";\n}\n", "bool", " ", "ListInsert", "(LinkList &L,", "int", " i,ElemType e)", "{\n    LinkList p=L;\n    ", "int", " j=", "0", ";\n    ", "while", "(p&&j<i", "-1", "){\n        p=p->next;\n        ++j;\n    }\n    ", "if", "(!p||j>i", "-1", ")\n    ", "return", " ", "0", ";\n    LinkList s=", "new", " LNode;", "//s是什么类型？？？？？？？？？？？？？ ", "\n    s->data=e;\n    s->next=p->next;\n    p->next=s;\n    ", "return", " ", "1", ";\n}\n", "bool", " ", "ListDelete", "(LinkList &L,", "int", " i,ElemType &e)", "{\n     LinkList p=L;\n     ", "int", " j=", "0", ";\n    ", "while", "(p->next&&j<i", "-1", "){\n        p=p->next;\n        ++j;\n        \n    }\n    ", "if", "(!(p->next)||j>i", "-1", ")\n    ", "return", " ", "0", ";\n    LinkList q=p->next;\n    p->next=q->next;\n    e=q->data;\n    ", "delete", " q;\n    ", "return", " ", "1", ";\n    \n    \n}\n", "//头插", "\n\n", "void", " ", "CreateListH", "(LinkList &L,ElemType a[],", "int", " n)", "{\n    L=", "new", " LNode;", "//头结点指控 ", "\n    L->next=", "NULL", ";", "//建立带头结点 ", "\n    ", "for", "(", "int", " i=n;i>", "0", ";i--){\n        LinkList p=", "new", " LNode;\n        ", "scanf", "(&p->data);", "//cin>>p->data;", "\n        p->next=L->next;\n        L->next=p;\n    }\n}\n", "//尾插 ", "\n", "void", " ", "CreateListR", "(LinkList &L,ElemType a[],", "int", " n)", "{", "//R  代表rear 尾结点 ", "\n    L=", "new", " LNode;", "//头结点指控 ", "\n    L->next=", "NULL", ";", "//建立带头结点 ", "\n    LinkList r=L;", "//", "\n    ", "for", "(", "int", " i=", "0", ";i<n;i++){\n        LinkList p=", "new", " LNode;\n        ", "scanf", "(&p->data);", "//cin>>p->data;", "\n        p->next=", "NULL", ";\n        r->next=p;\n        \n    }\n    \n}\n ", "void", " ", "DispList", "(LinkList L)", "{\n     ", "printf", "(", "\"L链表；\"", ");\n     ", "while", "(L->next!=", "NULL", "){\n         L=L->next;\n         ", "printf", "(", "\"%c\\t \"", ",L->data); \n     } \n     ", "printf", "(", "\"\\n\"", ");\n     \n     \n }\n ", "int", " ", "main", "(", "void", ")", "{\n     LinkList L = ", "NULL", ";\n     ", "InitList", "(LinkList &L);\n     ", "//初始化链表L（元素类型为char型）", "\n     ", "printf", "(", "\"依次采用尾插法插入a, b, c, d, e元素\"", ");\n \n    ", "CreateListR", "(LinkList &L,ElemType a[],", "int", " n=", "5", ");\n    \n\n    ", "InsertLinkList", "(&L);\n    ", "DispList", "(LinkList L);", "//输出链表L", "\n    ", "ListLength", "(LinkList L);", "//输出链表L的长度", "\n    ", "ListEmpty", "(LinkList L);", "//判断链表L是否为空", "\n     ", "GetElem", "(LinkList L,", "int", " i,ElemType &e);", "//输出链表L的第3个元素", "\n     ", "return", " ", "0", ";\n }\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "c语言基础差，写不出主程序，无法正确调动方法", "没有主程序，老是报错，不知道如何调试，", "\n", "我想要达到的结果", "\n", "完成实验报告，", "大部分程序不改动，适当修改程序；", "在mian{", "多写注释来帮助理解，谢谢", "}", "其"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这写的挺乱&lt;br /&gt;char name改为char name[20]&lt;br /&gt; if(strcmp(a[0].name,b)&amp;#61;0) 这句就太混乱了&amp;#xff0c;你到底要比较什麽呢&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;&lt;br /&gt;这里b应该是定义成字符串啊&amp;#xff0c;因为你输入的是同学名字&amp;#xff0c;定义为char b[20]&amp;#xff0c;然后用scanf(&amp;#34;%s&amp;#34;,b);进行输入&amp;#xff0c;比较语句改为&amp;#xff1a;&lt;br /&gt;if(strcmp(a[0].name,b) &amp;#61;&amp;#61; 0)&amp;#xff0c;不能用&amp;#61;&amp;#xff0c;要用&amp;#61;&amp;#61;&amp;#xff0c;这才是判断是否相等&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["结构体问题 编译通过不了 不知道怎么改", ["完成一个对候选人得票的统计程序。假设有", "3", "个候选人，名字分别为", "Li", "，Zhang和Fun。使用结构体存储每一个候选人的名字和得票数。记录每一张选票的得票人名，输出每个候选人最终的得票数。在主程序", "main", "()中，输入总票数n，以后的n行中每行输入一个字符串为一个人名，表明对应的得票人。保证每个人名都是", "Li", "，Zhang和Fun其中的一个。\n", "\n", "Sample Input", "10", "Li", "Zhang", "Fun", "Zhang", "Zhang", "Zhang", "Li", "Li", "Zhang", "Fun", "Sample Output", "Li: 3 tickets", "Zhang: 5 tickets", "Fun: 2 tickets", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "struct", " ", "student", "{\n    ", "char", " name;\n    ", "int", " m;\n};\n", "int", " ", "main", "()", "{\n    ", "char", " b[", "100", "];\n    ", "struct", " ", "student", " a[", "3", "]={{", "\"Li\"", ",", "0", "},{", "\"Zhang\"", ",", "0", "},{", "\"Fun\"", ",", "0", "}};", "//结构体初始化 ", "\n    ", "printf", "(", "\"请输入总票数\"", ");\n    ", "int", " n,i;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "printf", "(", "\"请输入每一票投给的同学\"", ");\n    ", "for", "(i=", "0", ";i<n;i++){\n        ", "scanf", "(", "\"%d\"", ",b);\n        ", "if", "(", "strcmp", "(a[", "0", "].name,b)=", "0", ")\n        a[", "0", "].m++;\n        ", "if", "(", "strcmp", "(a[", "0", "].name,b)=", "0", ")\n        a[", "1", "].m++;\n        ", "if", "(", "strcmp", "(a[", "0", "].name,b)=", "0", ")\n        a[", "2", "].m++;\n    }\n    ", "for", "(i=", "0", ";i<", "3", ";i++){\n        ", "printf", "(", "\"%s %d tickets\"", ",a[i].name,a[i].m);\n    }\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;CEmployee(const char *n,const char *s,int ag,const char *dep,float sal) :CPerson(n,s,ag) {}&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;CPerson&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; sex[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;CPerson&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *name_,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *sex_,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age_){cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Person 构造&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(name,name_);&lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(sex,sex_);age&amp;#61;age_;}\n        ~&lt;span class=\"hljs-built_in\"&gt;CPerson&lt;/span&gt;() {cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Person 析构&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;}\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;endl;\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;性别&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;sex&amp;lt;&amp;lt;endl;\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;年龄&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;age&amp;lt;&amp;lt;endl; \n        }\n};\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;CEmployee&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; CPerson{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; department[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; salary;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;CEmployee&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *n,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ag,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *dep,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; sal) : &lt;span class=\"hljs-built_in\"&gt;CPerson&lt;/span&gt;(n,s,ag)\n        {\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Employee 构造&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n            salary &amp;#61; sal;\n            &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(department,dep);\n        }\n          &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n          &lt;/span&gt;{\n            CPerson::&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;部门&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;department&amp;lt;&amp;lt;endl;\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;薪水&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;salary&amp;lt;&amp;lt;endl; \n        }\n          ~&lt;span class=\"hljs-built_in\"&gt;CEmployee&lt;/span&gt;() {cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Employee 析构&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;}\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    CEmployee *pC &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;CEmployee&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;wanng&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Girl&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;SCT&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8000&lt;/span&gt;);\n    C1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; pC;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["一个继承与派生的问题 编译不通过 显式调用（要求4 5 6  7）也不会实现 想知道怎么改", ["（1）定义名为CPerson的类，该类拥有属性：name、sex和age；", "(2)为CPerson类设计相应的构造函数、析构函数和成员函数，能通过成员函数设置和获取数据成员；", "(3)由类CPerson派生出子类CEmployee，为该类增加两个新的数据成员，分别用于表示部门(department)和薪水(salary)；", "(4)要求派生类CEmployee的构造函数显式调用基类CPerson的构造函数；", "(5)为派生类CEmployee增加需要的成员函数；", "(6)在主程序中定义CEmployee的对象，观察构造函数与析构函数的调用顺序；", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "CPerson", "{\n    ", "protected", ":\n        ", "char", " *name;\n        ", "char", " *sex;\n        ", "int", " age;\n    ", "public", ":\n        ", "CPerson", "(", "const", " ", "char", " *name_,", "const", " ", "char", " *sex_,", "int", " age_){", "strcpy", "(name,name_);", "strcpy", "(sex,sex_);age=age_;}\n        ~", "CPerson", "();\n        ", "void", " ", "print", "()", "{\n            cout<<", "\"姓名：\"", "<<name<<endl;\n            cout<<", "\"性别：\"", "<<sex<<endl;\n            cout<<", "\"年龄：\"", "<<age<<endl; \n        }\n};\n", "class", " ", "CEmployee", ": ", "public", " CPerson{\n    ", "private", ":\n        ", "char", " *department;\n        ", "float", " salary;\n    ", "public", ":\n        ", "CEmployee", "(", "const", " ", "char", " *n,", "const", " ", "char", " *s,", "int", " ag,", "const", " ", "char", " *dep,", "float", " sal){", "//???", "\n          ", "void", " ", "print", "()", "{\n            CPerson::", "print", "();\n            cout<<", "\"部门：\"", "<<department<<endl;\n            cout<<", "\"薪水：\"", "<<salary<<endl; \n        }\n        }\n};\n", "int", " ", "main", "()", "{\n    ", "CEmployee ", "C1", "(", "\"wanng\"", ",", "\"Girl\"", ",", "19", ",", "\"SCT\"", ",", "8000", ")", ";\n    C1.", "print", "();\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "那个是复制粘贴的，修改一下名称", "Konwledge_Point": "主程序", "Question": ["用vs2010 打包程序的时候 主输出创建不了快捷方式", ["如题  如图", "\n\n", "\n\n", "为什么创建不了快捷方式", "\n\n", "我是用 vs2010 开发的QT 程序", "\n我参考了 网上的文档 但是不知道为什么 这里创建不了快捷方式", "\n\n", "当我帮生成的.exe文件 放进去后 可以创建快捷方式", "\n而主输出不可以", "\n\n", "还有 打包的 时候如果我不像生成 msi 文件 而只生成一个 exe文件的话我该怎么操作啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;keepalived&amp;#43;nginx主要是通过检测服务健康状态再利用虚IP漂移实现高可用&lt;br /&gt;redis基本上是利用自身的哨兵机制监测主节点运行状态实现的高科用&amp;#xff0c;redis也可以和keepalived组合使用&amp;#xff0c;但是感觉没什么必要&lt;br /&gt;redis哨兵机制的稳定集群至少需要三个节点&amp;#xff0c;两个节点也不是不行&amp;#xff0c;可能会出现主观下线的情况&amp;#xff0c;还是不够稳定。&lt;/p&gt;\n&lt;p&gt;综合你的需求一主一从的话建议使用keepalived&amp;#43;nginx方案&amp;#xff0c;够用&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["如何实现主服务器程序和备用服务器程序自动切换？", ["目前有一个服务器程序在接收客户端上传的数据，客户端通过服务器的外网IP和端口连接，为了提高可用性，想用两个服务器各跑同样的服务器程序，一主一从。当主服务器的程序崩溃后，短时间内无法恢复时，客户端自动连接到备用服务器程序并上传数据，当主服务器的程序恢复后，再连接回主服务器程序。", "\n", "根据网上的了解，redis方案和nginx+keepalived方案能实现，请问这两者有什么区别？哪种比较合适？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你飞船图片放哪了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["按理它运行完之后应该是一个pygame窗口里出现一个飞船，但却不行，为什么？", ["\n", "import pygame\n\nclass Ship:\n\t\"\"\"管理飞船\"\"\"\n\t\n\tdef __init__(self,ai_game):\n\t\t\"\"\"初始化飞船并设置其初始位置\"\"\"\n\t\tself.screen = ai_game.screen\n\t\tself.screen_rect = ai_game.screen.get_rect()\n\t\t\n\t\t#加载飞船图像并获取其外接矩形\n\t\tself.image = pygame.image.load('images/ship.bmp')\n\t\tself.rect = self.image.get_rect()\n\t\t\n\t\t#对于每艘新飞船，都将其放在屏幕底部中央\n\t\tself.rect.midbottom = self.screen_rect.midbottom\n\t\t\n\tdef blitme(self):\n\t\t\"\"\"在指定位置绘制飞船\"\"\"\n\t\tself.screen.blit(self.image,self.rect)\n", "\n\n", "上面的是飞船代码", "\n\n", "\n", "import sys\nimport pygame\nfrom settings import Settings\nfrom ship import Ship\n\nclass AlienInvasion:\n\t\"\"\"管理游戏资源和行为的类\"\"\"\n\t\n\tdef __init__(self):\n\t\t\"\"\"初始化游戏并创建游戏资源\"\"\"\n\t\tpygame.init()\n\t\tself.settings = Settings()\n\t\t\n\t\t#设置屏幕尺寸\n\t\tself.screen = pygame.display.set_mode(\n\t\t\t(self.settings.screen_width, self.settings.screen_height))\n\t\tpygame.display.set_caption(\"Alien Invasion\")\n\t\t\n\t\tself.ship = Ship(self)\n\t\t\n\tdef run_game(self):\n\t\t\"\"\"开始游戏主循环\"\"\"\n\t\twhile True:\n\t\t\t#监视键盘和鼠标事件\n\t\t\tfor event in pygame.event.get():\n\t\t\t\tif event.type == pygame.QUIT:\n\t\t\t\t\tsys.exit()\n\t\t\t\n\t\t\t#每次循环时都重绘屏幕\n\t\t\tself.screen.fill(self.settings.bg_color)\n\t\t\tself.ship.blitme()\n\t\t\t\n\t\t\t#显示最近绘制的屏幕\n\t\t\tpygame.display.flip()\n\nif __name__ == '__main__':\n\t#创建游戏实例并运行游戏\n\tai = AlienInvasion()\n\tai.run_game()\n", "\n\n", "这是主程序代码，setting.py是游戏里面设置的代码，下面的是问题", "\n\n", "\n\n", "下面的是文件：", "\n\n", "\n\n", "请问问题出在哪里？"]], "Tag": "程序设计"}
{"Answer": "加锁是需要的，那么你崩溃的地方是什么错误，你要再具体分析，比如先把number 加上volatile属性", "Konwledge_Point": "主程序", "Question": ["使用ACE互斥锁进行线程同步，编译都没有问题，不加锁跑起来线程不同步很正常，加了锁，运行时崩溃", ["参数类：", "\nclass Args", "\n{", "\npublic:", "\nArgs(int iterations):mutex_(), iterations_(iterations){} //初始化列表", "\nACE_Thread_Mutex  mutex_; //锁对象", "\nint  iterations_; ", "\n};", "\n\n", "worker函数", "\nvoid* worker (void * arguments) ", "\n{", "\n//这里我没有用 iterations_，用全局变量number做了一个简单循环", "\nArgs ", "arg= (Args", ") arguments; ", "\nwhile (::number>0)", "\n{", "\nLOG_INFO(\"yes i can\" << number);", "\narg->mutex_.acquire(); //不加这个锁，number会错乱，加了锁，运行时崩溃", "\nnumber -= 10;", "\narg->mutex_.release(); ", "\n}", "\nreturn NULL;", "\n} ", "\n\n", "主程序", "\nint n_threads = 3;", "\n//定义即将新建的线程的线程ID和句柄", "\nACE_thread_t *threadID = new ACE_thread_t[n_threads+1];", "\nACE_hthread_t *threadHandles = new ACE_hthread_t[n_threads+1];", "\n//启动线程组", "\nif(ACE_Thread::spawn_n(", "\nthreadID, //线程ID", "\nn_threads, //线程数", "\n(ACE_THR_FUNC)worker, //线程执行的函数worker", "\n0, //worker函数参数", "\nTHR_JOINABLE | THR_NEW_LWP, //flags", "\nACE_DEFAULT_THREAD_PRIORITY,", "\n0, 0, threadHandles)==-1)", "\nACE_DEBUG((LM_DEBUG,\"Error in spawning thread/n\"));", "\n//等待所有线程运行结束", "\nfor(int i=0; i < n_threads; i++)", "\n｛", "\nACE_Thread::join(threadHandles[i]);", "\n｝"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;onClose不是有reason吗&amp;#xff1f;打印出来看看&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Android app开发建立Websocket 为什么不输出message？", ["主程序按下面写：", "\n", " ", "@Override", "    protected void onCreate(Bundle savedInstanceState) {", "        super.onCreate(savedInstanceState);", "        setContentView(R.layout.activity_main);", "\n", "    ", "//timer.schedule(task, 0, 200);", "\n    URI uri = ", "URI", ".", "create(", "\"ws://sq-test.icv-cloud.com:5000/。。。。。。。。\"", ");\n    ", "System", ".", "out.println(uri.", "to", "String()", ");\n    MyWebSocketClient myClient = ", "new", " ", "MyWebSocketClient(", "uri", ")", "{\n       @Override\n          public void on", "Message(String ", "message", ")", " {\n            ", "Log", ".", "e(", "\"MyWebClientService\"", ", message);     ", "//message就是接收到的消息", "\n          }\n    };\n\n    ", "try", " {\n         myClient.connect", "Blocking()", ";\n    } catch (InterruptedException e) {\n         e.print", "StackTrace()", ";\n      }\n\n    ", "if", " (myClient != null", " && ", "myClient.is", "Open()", ") {\n        myClient.send(", "\"123\"", ");\n    }\n}\n", "\n", "另建一个类按如下：", "\n", "public class MyWebSocketClient extends WebSocketClient {", "   public MyWebSocketClient(URI serverUri) {", "       super(serverUri,new Draft_6455());}", "\n", "@Override", "\n", "public", " ", "void", " ", "onOpen", "(", "ServerHandshake handshakedata", ") {\n    ", "Log", ".", "e", "(", "\"MyWebSocketClient\"", ", ", "\"onOpen()\"", ");\n    }\n\n", "@Override", "\n", "public", " ", "void", " ", "onMessage", "(", "String", " message", ") {\n    ", "Log", ".", "e", "(", "\"MyWebSocketClient\"", ", ", "\"onMessage()\"", ");\n}\n\n", "@Override", "\n", "public", " ", "void", " ", "onClose", "(", "int code, ", "String", " reason, ", "boolean", " remote", ") {\n    ", "Log", ".", "e", "(", "\"MyWebSocketClient\"", ", ", "\"onClose()\"", ");\n}\n\n", "@Override", "\n", "public", " ", "void", " ", "onError", "(", "Exception ex", ") {\n    ", "Log", ".", "e", "(", "\"MyWebSocketClient\"", ", ", "\"onError()\"", ");\n}\n", "\n", "打印出来的日志如下：", "\n", "E/MyWebSocketClient: onClose()", "\n", "按道理能打印出来：具体的messa的内容的？", "\n", "是Websocket没有通吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的Init方法打错了&amp;#xff0c;是__init__不是__int__&amp;#xff0c;看line10&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python 飞机大战，调用GameSprite提示Expected type 'AbstractGroup', got 'str' instead", ["问题描述", "\n", "问题相关代码，请勿粘贴截图", "\n", "#**plane_sprite__**", "\n", "import", " pygame\n\n\n", "class", " ", "GameSprite", "(pygame.sprite.Sprite):\n    ", "\"\"\"\n    飞机游戏精灵\n    \"\"\"", "\n\n    ", "def", " ", "__int__", "(", "self, image_name, speed=", "1", "):\n        ", "# 调用父类方法", "\n        ", "super", "().__init__()\n\n        ", "# 定义对象属性", "\n        self.image = pygame.image.load(image_name)\n        self.rect = self.image.get_rect()\n        self.speed = speed\n\n    ", "def", " ", "update", "(", "self", "):\n        self.rect.y += self.speed\n\n\n", "#**主程序**", "\n", "import", " pygame\n", "from", " plane_sprites ", "import", " *\n\npygame.init()\n\n", "# 创建游戏窗口", "\nscreen = pygame.display.set_mode((", "480", ", ", "700", "))\n\n", "# 绘背景图像", "\n", "# 1.加载图像数据", "\nbg = pygame.image.load(", "\"./images/background.png\"", ")\n", "# 2.blit绘制图像", "\nscreen.blit(bg, (", "0", ", ", "0", "))\n", "# 3。update更新屏幕显示", "\n", "# pygame.display.update()", "\n\n\n", "# 绘制英雄飞机", "\nhero = pygame.image.load(", "\"./images/me1.png\"", ")\n\nscreen.blit(hero, (", "200", ", ", "500", "))\n\npygame.display.update()\n\n", "# 创建时钟对象", "\nclock = pygame.time.Clock()\n\n", "# 1.定义rect记录飞机初始位置", "\nhero_rect = pygame.Rect(", "200", ", ", "500", ", ", "102", ", ", "126", ")\n\n", "# 创建敌机的精灵", "\n\nenemy = GameSprite(", "\"./images/enemy1.png\"", ")\nenemy1 = GameSprite(", "\"./images/enemy1.png\"", ",", "2", ")\n\n\n\nenemy_group = pygame.sprite.Group(enemy, enemy1)\n\n\n", "# 游戏循环，意味着游戏开始了", "\n", "while", " ", "True", ":\n\n    ", "# 指定游戏循环频率", "\n    clock.tick(", "60", ")\n\n    ", "# 事件监听", "\n    ", "for", " event ", "in", " pygame.event.get():\n        ", "# 判断是否为退出事件", "\n        ", "if", " event.", "type", " == pygame.QUIT:\n            ", "print", "(", "\"退出游戏\"", ")\n            ", "# quit 卸载所有模块", "\n            pygame.quit()\n\n            ", "# exit() 终止程序", "\n            exit()\n\n    ", "# 捕获事件", "\n    event = pygame.event.get()\n\n    ", "# 2.修改飞机的位置", "\n    hero_rect.y -= ", "5", "\n\n    ", "# 判断飞机的位置", "\n    ", "if", " hero_rect.y <= ", "0", ":\n        hero_rect.y = ", "700", "\n\n    ", "# 3.调用blit绘制飞机的位置图像", "\n    screen.blit(bg, (", "0", ", ", "0", "))\n    screen.blit(hero, hero_rect)\n\n    ", "# 4.调用update更新显示", "\n\n    pygame.display.update()\n    ", "pass", "\n\npygame.quit()\n\n", "\n", "运行结果及报错内容", "\n", "File \"/home/april/Desktop/planewar/listen_quit.py\", ", "line", " ", "33", ", ", "in", " <module>\n    enemy = GameSprite(\"./images/enemy1.png\")\n  File \"/usr/local/lib/python3.9/dist-packages/pygame/sprite.py\", ", "line", " ", "116", ", ", "in", " __init__\n    self.", "add", "(*", "groups", ")\n  File \"/usr/local/lib/python3.9/dist-packages/pygame/sprite.py\", ", "line", " ", "134", ", ", "in", " ", "add", "\n    self.", "add", "(*", "group", ")\n  File \"/usr/local/lib/python3.9/dist-packages/pygame/sprite.py\", ", "line", " ", "134", ", ", "in", " ", "add", "\n    self.", "add", "(*", "group", ")\n  File \"/usr/local/lib/python3.9/dist-packages/pygame/sprite.py\", ", "line", " ", "134", ", ", "in", " ", "add", "\n    self.", "add", "(*", "group", ")\n  [Previous ", "line", " repeated ", "993", " more times]\n  File \"/usr/local/lib/python3.9/dist-packages/pygame/sprite.py\", ", "line", " ", "129", ", ", "in", " ", "add", "\n    ", "if", " hasattr(", "group", ", \"_spritegroup\"):\nRecursionError: maximum recursion depth exceeded ", "while", " calling a Python ", "object", "\n\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "调用GameSprite的时候。提示传入", "groups: AbstractGroup，并没有我重写的image_name参数提示，我尝试在update内传入", "args也无效", "\n", "我想要达到的结果", "\n", "GamesSprite类能调用并传入图片"]], "Tag": "程序设计"}
{"Answer": "if Application.Messagebox('确认是否继续！', '提示',MB_Iconinformation+MB_OKCANCEL) = ID_Cancel then\r\nbegin\r\n// Close;\r\n  Application.Terminate;   //这句是退出程序，Close只是关闭窗体。\r\nend;", "Konwledge_Point": "主程序", "Question": ["Delphi点取消按钮退出程序", ["在窗体创建时就弹框提示", "\n\n", "点确定之后程序继续执行，进入到主窗体，若点击取消则程序不再执行，直接退出程序；附现代码", "\n\n", "procedure TForm1.FormCreate(Sender: TObject);\nbegin\n if Application.Messagebox('确认是否继续！', '提示',MB_Iconinformation+MB_OKCANCEL) = ID_Cancel then\nbegin\n Close;\nend;\n\nend;\n", "\n\n", "目前的问题就是点取消之后没有退出程序，也进入到了主窗体", "\n\n", "请各位大佬指教，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;更改存储图像的特定文件夹的权限。&lt;br /&gt;属性 &amp;gt; 安全 &amp;gt; 编辑 &amp;gt; 添加 - 选择“所有人”并选中允许“完全控制”&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": [".Net 图片保存不成功 system.runtime.interopservices.externalexception (0x80004005)错误", ["在winform开发中，主程序调用一个Form把图片保存到磁盘目录中，保存的函数如下所示：", "\n", "\n```c", "#", "\n", "private", " ", "void", " ", "buttonSaveFile_Click", "(", "object", " sender, EventArgs e", ")", "\n        {\n            ", "string", " pictureName = ", "\"\"", ";\n            ", "switch", " (", "this", ".wpType)\n            {\n                ", "case", " ", "1", ":  ", "// 点 ", "\n                    pictureName = saveFileDialog1.InitialDirectory + ", "this", ".selectedWp + ", "\"_p.jpg\"", ";\n                    ", "break", ";\n                ", "case", " ", "2", ":  ", "//边", "\n                    pictureName = saveFileDialog1.InitialDirectory + ", "this", ".selectedWp + ", "\"_e.jpg\"", ";\n                    ", "break", ";\n                ", "case", " ", "3", ": ", "//扫描节点", "\n                    pictureName = saveFileDialog1.InitialDirectory + ", "this", ".selectedWp + ", "\"_s.jpg\"", ";\n                    ", "break", ";\n            }\n             ", "//图片另存", "\n            ", "using", " (MemoryStream mem = ", "new", " MemoryStream())\n            {\n                ", "try", "\n                {\n                    Bitmap bmp = ", "new", " Bitmap(pictureBox1.Image);\n                    ", "//保存到磁盘文件", "\n                    bmp.Save(@pictureName, pictureBox1.Image.RawFormat);\n                    bmp.Dispose();\n                    MessageBox.Show(", "\"图片保存成功！\"", ", ", "\"注意\"", ", MessageBoxButtons.OK, MessageBoxIcon.Information);\n                   \n                    ", "switch", " (", "this", ".wpType)\n                    {\n                        ", "case", " ", "1", ":  ", "// 点 ", "\n                            ", "if", " (f1 != ", "null", ")\n                            {\n                                f1(pictureName);\n                            }\n                            ", "break", ";\n                        ", "case", " ", "2", ":  ", "//边", "\n                            ", "if", " (f2 != ", "null", ")\n                            {\n                                f2(pictureName);\n                            }\n                            ", "break", ";\n                        ", "case", " ", "3", ": ", "//扫描节点", "\n                            ", "if", " (f3 != ", "null", ")\n                            {\n                                f3(pictureName);\n                            }\n                            ", "break", ";\n                    }\n                }\n                ", "catch", " (Exception err)\n                {\n                    MessageBox.Show(", "\"图片保存不成功！\\r\\n\"", " + err.ToString(), ", "\"警告\"", ", MessageBoxButtons.OK, MessageBoxIcon.Warning);\n                }\n                ", "finally", "\n                {\n\n                }\n            }\n\n", "\n", "保存的是Form上的一个pictureBox里的图片,\n\n```c#\n", "private", " void button", "OpenFile_Click(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n        {\n            DialogResult result = openFileDialog1.", "ShowDialog()", ";", "//显示对话框接返回值", "\n            ", "if", " (result", " == ", "DialogResult.OK)\n            {\n                pictureBox1.Image = System.Drawing.Image.", "FromFile(", "openFileDialog1", ".FileName)", ";\n            }\n        }\n\n", "\n", "当我第一次打开文件然后保存是没有报错的，但是当再次打开文件保存就报这个错误，", "错误之处在程序的", "\n", "bmp", ".Save", "(", "@pictureName", ", pictureBox1.Image.RawFormat);\n\n", "\n", "这句话上，图片的权限没有问题。", "请问到底是哪里出错了，导致的这个问题？谢谢了！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/972097028356160.png\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_31860973/article/details/118562842\" id=\"textarea_1653820776380_1653820850116_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;计算机设备问题代码43,设备管理器错误代码&amp;#xff08;代码43&amp;#xff09;的六种解决方法_柴犬小管家的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;内容一、“由于此设备存在问题&amp;#xff0c;Windows已将其停止(代码4 3)”)&amp;#xff0c;这是问题的原因原因分析&amp;#xff1a;代码43错误是多个设备管理器错误代码之一。当设备管理器停止硬件设备时&amp;#xff0c;会生成此错误&amp;#xff0c;这可能是由硬件设备或设备驱动程序故障引起的。设备管理器错误代码(代码4 3)的详细信息可以在设备属性的&amp;#96;&amp;#96;设备状态&amp;#39;&amp;#39;区域中找到。引起问题的设备将在设备中用感叹号标记)设备管理器&amp;#xff0c;如下图所示&amp;#xff1a;有关如何解决此问题的信息&amp;#xff0c;...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_31860973/article/details/118562842&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["电脑设备管理器中AMD USB 3.1可扩展主机控制器-1.10（Microsoft）一直显示黄色感叹号，删了也没用，u盘插上电脑，弹一下就没有了", ["电脑设备管理器中AMD USB 3.1可扩展主机控制器-1.10（Microsoft）一直显示黄色感叹号，删了也没用，u盘插上电脑，弹一下就没有了，想问问各位怎么弄啊？？", "\n"]], "Tag": "程序设计"}
{"Answer": "是代码问题，不是浏览器兼容问题。错在var xmlobj;这个全局变量。你的ajax调用应该使用回调函数的方式处理服务端响应。采用全局变量，变量名虽然一样，但是由于并发的原因，其引用的对象可能不同时间能指向不同的对象，导致“错乱”。", "Konwledge_Point": "主程序", "Question": ["javascript中的一个小问题（浏览器问题）", ["求助 javascript中的一个小问题", "\n<", "\n\n", "html>", "\n\n", "<", "\nhead>", "\n\n", "<", "\ntitle>Ajax 简单的服务器请求", "\n\n", "<", "\nscript type=\"text/javascript\">", "\n\n", "var xmlobj;", "\n\n", "function CreateXMLHttpRequest()", "\n\n", "{", "\n\n", "if(window.ActiveXObject)                 //如果当前浏览器支持ActiveXObject则创建ActiveXObject对象", "\n\n", "{", "\n\n", "xmlobj = new ActiveXObject(\"Microsoft.XMLHTTP\");", "\n\n", "} ", "\n\n", "else if(window.XMLHttpRequest)     //如果当前浏览器支持XMLHttpRequest则创建XMLHttpRequest对象", "\n\n", "{", "\n\n", " xmlobj = new XMLHttpRequest();\n", "\n\n", "}", "\n\n", "}", "\n\n", "function Req(q)                    //主程序函数", "\n\n", "{", "\n\n", " CreateXMLHttpRequest();                    //创建对象\n\nxmlobj.onreadystatechange = StatHandler;        //判断URL调用的状态值并处理\n\nxmlobj.open(\"GET\", \"text.php\", true);                //text.php是累加程序 \n", "\n\n", "xmlobj.send(null);             //设置不发送给服务器任何数据", "\n\n", "function StatHandler()", "\n\n", "{", "\n\n", " if(xmlobj.readyState == 4 && xmlobj.status == 200)        //如果URL成功使用警告框输出文本内容\n\n{\n\n         b=xmlobj.responseText;\n\n         //alert(b);\n\n         //alert(xmlobj.a);\n\n         q.innerHTML=b;\n\n         //b=null;      //这里去掉注释还是不行\n\n}\n", "\n\n", "};", "\n\n", "}", "\n\n", "<", "\n/script>", "\n\n", "\n\n", "<", "\nbody>", "\n\n", "<", "\nform action=\"\">", "\n\n", "<", "\ndiv id='f1' onClick=\"Req(this);\">点击1", "\n\n", "<", "\ndiv id='f2' onClick=\"Req(this);\">点击2", "\n\n", "<", "\ndiv id='f3' onClick=\"Req(this);\">点击3", "\n\n", "<", "\ndiv id='f4' onClick=\"Req(this);\">点击4", "\n\n", "<", "\ndiv id='f5' onClick=\"Req(this);\">点击5", "\n\n", "<", "\nbr>", "\n\n", "<", "\nbr>", "\n\n", "<", "\nbr>", "\n\n", "<", "\nbr>", "\n\n", "在IE浏览器中不能累加   ，在其他浏览器中就没有问题  ，求解决！！！   ", "\n\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;c.show();函数要带括号&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["语句无法解析重载高数的地址怎么解决", ["#include", "using namespace std;", "\n", "class Point{", "    int x,y;", "public:", "Point(int x0=0,int y0=0):x(x0),y(y0){}", "double getx(){return x;}", "double gety(){return y;}", "}; ", "\n", "class Rectangle{", "    Point c1;", "    int length,width;", "public:", "    Rectangle(){}", "    Rectangle(int x,int y,int x1,int y1,int x2,int y2):c1(x,y),length(x2-x1),width(y2-y1){}", "    int area(const Rectangle &a);", "    void display(){", "        cout<<\"矩形坐标：\"<<\"(\"<<c1.getx()<<\",\"<<c1.gety()<<\")\"<<endl;", "        cout<<length<<\" \"<<width<<endl;", "    }", "}; ", "\n", "class Circle{", "    Point c2;", "    int r;", "public:", "    Circle(){}", "    Circle(int x,int y,int i):c2(x,y),r(i){}", "};", "int Rectangle::area(const Rectangle &a){", "    int i;", "    i=length*width;", "    return i;", " }", "\n", "class Cuboid:public Rectangle,Circle{", "    Rectangle b;", "    int high,volume;", "public:", "    Cuboid(Rectangle &Rec,int h,int v):b(Rec),high(h),volume(v){}", "    void Vol(const Cuboid &a);", "    void show();", "};", "void Cuboid::Vol(const Cuboid &a){", "    volume=high*area(b);", "}", "void Cuboid::show(){", "    Rectangle::display();", "    cout<<high<<volume<<endl;", "}", "\n", "int main(){", "    Rectangle a(10,10,10,20,30,30);", "    Cuboid c(a,10,10);", "    c.show;", "    return 0;", " }", "主程序中的c.show无法解析重载函数的地址，该如何解决"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-kotlin\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*\n\n&lt;span class=\"hljs-keyword\"&gt;object&lt;/span&gt; Main {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(args: &lt;span class=\"hljs-type\"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;&amp;gt;)&lt;/span&gt;&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt; mercedes &amp;#61; Mercedes()\n        &lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt; ferrari &amp;#61; Ferrari()\n        &lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt; bmw &amp;#61; BMW()\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;) {\n            mercedes.go(Random().nextInt(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;))\n            ferrari.go(Random().nextInt(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;))\n            bmw.go(Random().nextInt(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;))\n            println(mercedes.name &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;#43; mercedes.position)\n            println(ferrari.name &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;#43; ferrari.position)\n            println(bmw.name &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;#43; bmw.position)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mercedes.position &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;) {\n                println(&lt;span class=\"hljs-string\"&gt;&amp;#34;The winner is:&amp;#34;&lt;/span&gt; &amp;#43; mercedes.name)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ferrari.position &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;) {\n                println(&lt;span class=\"hljs-string\"&gt;&amp;#34;The winner is:&amp;#34;&lt;/span&gt; &amp;#43; ferrari.name)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (bmw.position &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;) {\n                println(&lt;span class=\"hljs-string\"&gt;&amp;#34;The winner is:&amp;#34;&lt;/span&gt; &amp;#43; bmw.name)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n            }\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;internal&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;RacingCar&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; position &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;internal&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;interface&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Run&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;go&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(distance: &lt;span class=\"hljs-type\"&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;internal&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Mercedes&lt;/span&gt; : &lt;span class=\"hljs-type\"&gt;RacingCar&lt;/span&gt;&lt;/span&gt;(), Run {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Mercedes&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;override&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;go&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(distance: &lt;span class=\"hljs-type\"&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {\n            position &amp;#43;&amp;#61; distance\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;internal&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Ferrari&lt;/span&gt; : &lt;span class=\"hljs-type\"&gt;RacingCar&lt;/span&gt;&lt;/span&gt;(), Run {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Ferrari&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;override&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;go&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(distance: &lt;span class=\"hljs-type\"&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {\n            position &amp;#43;&amp;#61; distance\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;internal&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;BMW&lt;/span&gt; : &lt;span class=\"hljs-type\"&gt;RacingCar&lt;/span&gt;&lt;/span&gt;(), Run {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;override&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;fun&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;go&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(distance: &lt;span class=\"hljs-type\"&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {\n            position &amp;#43;&amp;#61; distance\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["【Android Studio】用Kotlin语言编写模拟 F1 方程式赛车的程序", ["问题：", "\n", "   程序包含 1 个主函式、1 个 赛车(RacingCar)类、1 个 Mercedes 类、1 个 Ferrari 类、1 个BMW类与1个跑(Run)接口。RacingCar类有位置(position)属性，用来纪录实例目前的位置，Run 接口有跑(go)方法须实现。Mercedes 类、Ferrari 类与 BMW 类须继承 RacingCar类，并实现跑接口。3 类中都有名称(name)属性，用以暂存赛车实例名称，而实例调用跑方法，将改变实例的位置。在主函式中分别创建 3 种赛车的实例，在模拟赛车的循环中，轮流调用实例的 go 方法，用随机数random方法改变赛车实例的位置(每次的位移量不宜过大)，3 个实例移动完后，分别打印出各车辆当前的位置，并检查是否有赛车实例已移动超过 200 公里，若有，则该实例获胜，退出模拟赛车循环，打印出获胜车辆的名称，程序结束。", "\n", "程序运行的过程与结果如下图所示", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;input_text1 重复了  再定义一个input_text2&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么用户名输入框不见了", ["\n", "为什么用户名输入框不见了？", "我把它分开写用户名输入框就不见了", "把代码写在一个main函里面就不会出问题", "\n", "\n\n", "package", " 登录界面;\n", "import", " javax.swing.*;\n", "import", " java.awt.*;\n", "//shift+f6批量修改变量名或者类名", "\n", "public", " ", "class", " ", "Main", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "new", " ", "MyFrame", "();\n    }\n}\n", "class", " ", "MyFrame", " ", "extends", " ", "JFrame", "{\n    JLabel label1,label2;\n    JTextField input_text1;\n    JPasswordField input_password;\n    JButton button1,button2;\n    ", "public", " ", "MyFrame", "()", "{\n        init();\n        addPanel1();\n        addPanel2();\n", "//        validate();", "\n    }\n    ", "public", " ", "void", " ", "init", "()", "{\n        ", "this", ".setTitle(", "\"主程序\"", ");\n", "//        JButton jButton = new JButton(\"set\");", "\n        ", "this", ".setBounds((Toolkit.getDefaultToolkit().getScreenSize().width-", "500", ")/", "2", ",(Toolkit.getDefaultToolkit().getScreenSize().height-", "500", "-", "500", ")/", "2", ",", "500", ",", "500", ");\n        ", "this", ".setVisible(", "true", ");\n        ", "this", ".setLayout(", "new", " ", "FlowLayout", "());\n        ", "this", ".setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n    }\n    ", "public", " ", "void", " ", "addPanel1", "()", "{\n        ", "JPanel", " ", "jPanel1", " ", "=", " ", "new", " ", "JPanel", "();\n", "//        jPanel1.setLayout(new FlowLayout());", "\n        label1=", "new", " ", "JLabel", "(", "\"用户名: \"", ");\n        input_text1=", "new", " ", "JTextField", "(", "10", ");\n        jPanel1.add(label1);\n        jPanel1.add(input_text1);\n        ", "this", ".add(jPanel1);\n    }\n    ", "public", " ", "void", " ", "addPanel2", "()", "{\n        ", "JPanel", " ", "panel2", " ", "=", " ", "new", " ", "JPanel", "();\n", "//        panel2.setLayout(new FlowLayout());", "\n        label2=", "new", " ", "JLabel", "(", "\"密码: \"", ");\n        input_password=", "new", " ", "JPasswordField", "(", "10", ");\n        input_password.setEchoChar(", "'*'", ");\n        panel2.add(label2);\n        panel2.add(input_text1);\n        ", "this", ".add(panel2);\n    }\n\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的代码 gcc 9.2 vs2019都输出正常的&lt;br /&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/54886392672612.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["单链表中的插入一个元素问题", ["怎么把输入16 7 8 12 输出变为什么16 7 8 12", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<assert.h>", "\n\n", "struct", " ", "node", " {\n    ", "struct", " ", "node", " *next;\n    ", "int", "          data;\n};\n\n", "struct", " ", "node", " *", "insert_tail", "(", "int", " value, ", "struct", " node *head);\n", "struct", " ", "node", " *", "strings_to_list", "(", "int", " len, ", "char", " *strings[]);\n", "void", " ", "print_list", "(", "struct", " node *head)", ";\n\n", "// 主程序", "\n\n", "int", " ", "main", "(", "int", " argc, ", "char", " *argv[])", " ", "{\n    ", "int", " value;\n    ", "scanf", "(", "\"%d\"", ", &value);\n    ", "// create linked list from command line arguments", "\n    ", "struct", " ", "node", " *head = ", "NULL", ";\n    ", "if", " (argc > ", "1", ") {\n        ", "// list has elements", "\n        head = ", "strings_to_list", "(argc - ", "1", ", &argv[", "1", "]);\n    }\n\n    ", "struct", " ", "node", " *new_head = ", "insert_tail", "(value, head);\n    ", "print_list", "(new_head);\n\n    ", "return", " ", "0", ";\n}\n\n\n", "// 改这个struct", "\n", "struct", " ", "node", " *", "insert_tail", "(", "int", " value, ", "struct", " node *head) {\n    ", "struct", " ", "node", " *p = ", "malloc", "(", "sizeof", " (", "struct", " node));\n    p->data = value;\n    p->next = head;\n    ", "return", " p;\n}\n\n", "// ", "\n", "//", "\n", "struct", " ", "node", " *", "strings_to_list", "(", "int", " len, ", "char", " *strings[]) {\n    ", "struct", " ", "node", " *head = ", "NULL", ";\n    ", "int", " i = len - ", "1", ";\n    ", "while", " (i >= ", "0", ") {\n        ", "struct", " ", "node", " *n = ", "malloc", "(", "sizeof", " (", "struct", " node));\n        ", "assert", "(n != ", "NULL", ");\n        n->next = head;\n        n->data = ", "atoi", "(strings[i]);\n        head = n;\n        i -= ", "1", ";\n    }   \n    ", "return", " head;\n}\n\n\n", "// ", "\n", "void", " ", "print_list", "(", "struct", " node *head)", " ", "{\n    ", "printf", "(", "\"[\"", ");    \n    ", "struct", " ", "node", " *n = head;\n    ", "while", " (n != ", "NULL", ") {\n        ", "// If you're getting an error here,", "\n        ", "// you have returned an invalid list", "\n        ", "printf", "(", "\"%d\"", ", n->data);\n        ", "if", " (n->next != ", "NULL", ") {\n            ", "printf", "(", "\", \"", ");\n        }\n        n = n->next;\n    }\n    ", "printf", "(", "\"]\\n\"", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n \r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\n#define MAXSIZE 10\r\nclass Entry\r\n{\r\npublic:\r\n\tint row;\r\n\tint column;\r\n\tdouble value;\r\n};\r\nclass Matrix\r\n{\r\n\r\npublic:\r\n\tvirtual int size(int dimension) const = 0;\r\n\tvirtual void set(int row, int column,\r\n\t\tdouble value) = 0;\r\n\r\n\tvirtual double get(int row, int column)\r\n\t\tconst = 0;\r\n\r\n\tvirtual void print() = 0;\r\n}; \r\n\r\nclass Sparse :public Matrix\r\n{\r\nprivate:\r\n\tint _row;\r\n\tint _column;\r\n\tEntry _data[MAXSIZE];\r\n\tint _h = 0;\r\npublic:\r\n\tint length(){ return _h; }\r\n\tSparse(int row, int column)\r\n\t{\r\n\t\t_row = row;\r\n\t\t_column = column;\r\n\t}\r\n\tvirtual int size(int dimension) const\r\n\t{\r\n\t\tif (dimension == 0)\r\n\t\t\treturn _row;\r\n\t\telse if (dimension == 1)\r\n\t\t\treturn _column;\r\n\t\telse\r\n\t\t\treturn 1;\r\n\t}\r\n\tvirtual void set(int row, int column, double value)\r\n\t{\r\n\t\tbool done = false;\r\n\t\tfor (int i = 0; i &lt; _h; i++)\r\n\t\t{\r\n\t\t\tif (_data[i].row == row &amp;&amp; _data[i].column == column)\r\n\t\t\t{\r\n\t\t\t\t_data[i].value = value;\r\n\t\t\t\tdone = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!done)\r\n\t\t{\r\n\t\t\tif (_h &lt; MAXSIZE)\r\n\t\t\t{\r\n\t\t\t\t_data[_h].row = row;\r\n\t\t\t\t_data[_h].column = column;\r\n\t\t\t\t_data[_h].value = value;\r\n\t\t\t\t_h++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthrow;\r\n\t\t}\r\n\t}\r\n\tvirtual double get(int row, int column) const\r\n\t{\r\n\t\tfor (int i = 0; i &lt; _h; i++)\r\n\t\t{\r\n\t\t\tif (_data[i].row == row &amp;&amp; _data[i].column == column)\r\n\t\t\t{\r\n\t\t\t\treturn _data[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0; }\r\n\tvirtual void print()\r\n\t{\r\n\t\tfor (int i = 0; i &lt; _h; i++)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; \"(\" &lt;&lt; _data[i].row &lt;&lt; \",\" &lt;&lt; _data[i].column &lt;&lt; \",\" &lt;&lt; _data[i].value &lt;&lt; \")\" &lt;&lt; endl;\r\n\t\t}\r\n\t}\r\n\tSparse operator +(Sparse another)\r\n\t{\r\n\t\tfor (int i = 0; i &lt; another._h; i++)\r\n\t\t{\r\n\t\t\tdouble v = get(another._data[i].row, another._data[i].column);\r\n\t\t\tset(another._data[i].row, another._data[i].column, another._data[i].value + v);\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n};\r\n\r\n```", "Konwledge_Point": "主程序", "Question": ["关于稀疏矩阵的问题（#include \"source\"是要自己写的地方）", ["Design a class Sparse that implements interface Matrix: Sparse should has the following public object functions in addition:", "\nA constructor Sparse(int rows, int column), which initializes all elements in the matrix to 0's.", "\nA function Sparse Sparse::operator + (Sparse & sparse2), which returns the pair-wise sum of two sparse matrixes.", "\nEXAMPLE INPUT", "\n1000000 1000000", "\n\n", "1 1 10", "\n1 1000000 50", "\n1000000 1000000 20", "\n\n", "1 1000000 30", "\n1000000 1 40", "\n1 1 -10", "\nEXAMPLE OUTPUT", "\n(1,1000000,80)", "\n(1000000,1,40)", "\n(1000000,1000000,20)", "\n\n", "主程序", "\n 1 ", "\n 2 ", "\n 3 ", "\n 4 ", "\n 5 ", "\n 6 ", "\n 7 ", "\n 8 ", "\n 9 ", "\n10 ", "\n11 ", "\n12 ", "\n13 ", "\n14 ", "\n15 ", "\n16 ", "\n17 ", "\n18 ", "\n19 ", "\n20 ", "\n21 ", "\n22 ", "\n23 ", "\n24 ", "\n25 ", "\n26 ", "\n27 ", "\n28 ", "\n29 ", "\n30 ", "\n31 ", "\n32 ", "\n33 ", "\n34 ", "\n35 ", "\n36 ", "\n37 ", "\n38 ", "\n39 ", "\n40 ", "\n41 ", "\n42 ", "\n43 ", "\n44 ", "\n45 ", "\n46 ", "\n47 ", "\n48 ", "\n49 ", "\n50 ", "\n51 ", "\n52 ", "\n53 ", "\n54 ", "\n55 ", "\n56 ", "\n57 ", "\n58 ", "\n59 ", "\n60 ", "\nclass Entry ", "\n{ ", "\npublic: ", "\n    int row; ", "\n    int column; ", "\n    double value; ", "\n}; ", "\n\n", "class Matrix ", "\n{", "\npublic: ", "\n    virtual int size(int dimension) const = 0; ", "\n\n", "virtual void set(int row, int column,  \ndouble value) = 0; \n\nvirtual double get(int row, int column)  \nconst = 0; \n\nvirtual void print() = 0; \n", "\n\n", "}; ", "\n\n", "#include \"source\" ", "\n\n", "#include ", "\nusing namespace std; ", "\n\n", "void print(Matrix & matrix) { ", "\n    matrix.print(); ", "\n} ", "\n\n", "void readAndSetElement(Matrix & matrix) { ", "\n    int row; ", "\n    int column; ", "\n    double value; ", "\n    cin >> row >> column >> value; ", "\n    matrix.set(row, column, value); ", "\n} ", "\n\n", "void readAndSetMultipleElements(Matrix & matrix, int count) { ", "\n    for (int i = 0; i < count; ++ i) { ", "\n        readAndSetElement(matrix); ", "\n    } ", "\n} ", "\n\n", "int main() { ", "\n    int rows; ", "\n    int columns; ", "\n    cin >> rows >> columns; ", "\n\n", "Sparse sparse1(rows, columns); \nreadAndSetMultipleElements(sparse1, 3); \n\nSparse sparse2(rows, columns); \nreadAndSetMultipleElements(sparse2, 3); \n\nSparse sparse3 = sparse1 + sparse2; \nprint(sparse3); \n", "\n\n", "} "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路&amp;#xff1a;既然x存的是bt的根节点&amp;#xff0c;那么我们就顺着根节点往下遍历&amp;#xff0c;直到找出比当前key还要大&amp;#xff0c;或者比当前key还要小的叶子节点&amp;#xff0c;所以需要一个while循环&amp;#xff0c;用y来临时保存当前遍历到哪个节点了&amp;#xff0c;防止有可能遍历的叶子节点可能是空的&amp;#xff0c;反而找不到空叶子节点对应的父节点&amp;#xff0c;&lt;br /&gt;一旦跳出while循环了说明我们找到了需要插入的叶子节点的位置了&amp;#xff0c;我们再给他赋值&amp;#xff0c;看是往左叶子还是右叶子节点加即可。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\nvoid bst_insert(bst* bt, int key) {\n    bstnode* newnode &amp;#61; (bstnode*)malloc(sizeof(bstnode));\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;newnode&lt;/span&gt;-&amp;gt;&lt;/span&gt;key &amp;#61; key;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;newnode&lt;/span&gt;-&amp;gt;&lt;/span&gt;left &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;newnode&lt;/span&gt;-&amp;gt;&lt;/span&gt;right &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;newnode&lt;/span&gt;-&amp;gt;&lt;/span&gt;parent &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;pbstnode&lt;/span&gt; x &amp;#61; bt-&amp;gt;&lt;/span&gt;root;\n    pbstnode y &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;// TODO! Your implementation here!&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x !&amp;#61; NULL) {\n        y &amp;#61; x;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (key &amp;lt; x-&amp;gt;&lt;/span&gt;key)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; x-&amp;gt;&lt;/span&gt;left;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; x-&amp;gt;&lt;/span&gt;right;\n        }\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;newnode&lt;/span&gt;-&amp;gt;&lt;/span&gt;parent &amp;#61; y;\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (y &amp;#61;&amp;#61; NULL) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;bt&lt;/span&gt;-&amp;gt;&lt;/span&gt;root &amp;#61; newnode;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key &amp;lt; y-&amp;gt;&lt;/span&gt;key) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;-&amp;gt;&lt;/span&gt;left &amp;#61; newnode;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;-&amp;gt;&lt;/span&gt;right &amp;#61; newnode;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["c语言，二叉搜索树，完成bst.c中未完成的insert函数", ["主函数用不同的键调用插入，然后通过对二叉搜索树的顺序遍历，按顺序打印插入的键。最终运行确保在电脑终端上可运行。", "一个主程序文件，叫做btree.c， 主要的程序代码，无任何错误，不需要任何更改", "\n", "// DSA Programming 4.1 - Binary search tree", "\n", "// You do not need to change anything here", "\n\n#", "include", " <stdio.h>\n#", "include", " <stdlib.h>\n#", "include", " ", "\"bst.h\"", "\n\n\n\n", "int", " main", "()", "{\n    \n    bst tree;\n    tree.root = ", "0", "; \n   \n    bst", "_insert(&", "tree", ", 50)", ";\n    bst", "_insert(&", "tree", ", 20)", ";\n    bst", "_insert(&", "tree", ", 80)", ";\n    bst", "_insert(&", "tree", ", 30)", ";\n    bst", "_insert(&", "tree", ", 70)", ";\n    bst", "_insert(&", "tree", ", 40)", ";\n\n    print", "_tree_inorder(", "tree", ")", ";\n    printf(", "\"\\n\"", ");\n    \n    ", "// Free memory", "\n    bst", "_delete(", "tree", ".", "root", ")", ";\n\n    return ", "0", ";\n}\n", "\n", "头文件bst.h, 无任何错误，不需要更改", "\n", "// DSA Programming 4.1 - Binary search tree", "\n", "// You do not need to change anything here", "\n\n", "#", "ifndef", " BST_H_INCLUDED", "\n", "#", "define", " BST_H_INCLUDED", "\n\n", "// Defines node and its pointer", "\n", "typedef", " ", "struct", " ", "bstnd", " {\n    ", "int", " key;\n    ", "struct", " ", "bstnd", "* parent;\n    ", "struct", " ", "bstnd", "* left;\n    ", "struct", " ", "bstnd", "* right;\n} bstnode, *pbstnode;\n\n", "// Defines the tree", "\n", "typedef", " ", "struct", " ", "bt", " {\n    pbstnode root;\n} bst;\n\n", "// Inserts key in the tree", "\n", "void", " ", "bst_insert", "(bst *bt, ", "int", " key)", ";\n\n", "// Prints node", "\n", "void", " ", "print_node", "(pbstnode n)", ";\n\n", "// Prints the tree", "\n", "void", " ", "print_tree_inorder", "(bst bt)", ";\n\n", "// Deletes a tree whose root is node", "\n", "void", " ", "bst_delete", "(pbstnode node)", ";\n\n", "#", "endif", "\n", "\n", "bst.c 包含二叉搜索树的实现，但是insert 函数未完成，这是一个将节点插入到二叉搜索树中的函数，从TODO开始的地方开始完善", "\n", "// DSA Programming 4.1 - Binary search tree", "\n", "// You work at the place where TODO is", "\n\n#", "include", " <stdio.h>\n#", "include", " <stdlib.h>\n#", "include", " ", "\"bst.h\"", "\n\n", "// Prints a node", "\nvoid print", "_node(", "pbstnode", " ", "n", ")", "{\n    ", "if", "(n != ", "0", "){\n        printf(", "\"%d \"", ",(n->key));\n    }\n}\n\n", "// Calls the printing of a node in inorder traversal", "\nvoid print", "_inorder(", "pbstnode", " ", "pnode", ")", "{\n    ", "if", " (pnode != ", "0", ") {\n        print", "_inorder(", "pnode", "->", "left", ")", ";\n        print", "_node(", "pnode", ")", ";\n        print", "_inorder(", "pnode", "->", "right", ")", ";\n    }\n}\n\n", "// Prints the whole tree inorder", "\nvoid print", "_tree_inorder(", "bst", " ", "bt", ")", "{\n    print", "_inorder(", "bt", ".", "root", ")", ";\n}\n\n", "/*\n   Allocates a node with key as data\n   and inserts it in the tree\n*/", "\n\nvoid bst", "_insert(", "bst", " ", "*", "bt", ", ", "int", " ", "key", ")", "{\n    bstnode *newnode = (bstnode *)malloc(sizeof(bstnode));\n    newnode->key = key;\n    newnode->left = ", "0", ";\n    newnode->right = ", "0", ";\n    newnode->parent = ", "0", ";\n    \n    pbstnode x = bt->root;\n    pbstnode y=", "0", ";\n\n    ", "// TODO! Your implementation here!", "\n\n}\n\n", "// Delete the whole tree to free the memory", "\nvoid bst", "_delete(", "pbstnode", " ", "node", ")", "{\n    ", "if", "(node != ", "0", ") {\n        bst", "_delete(", "node", "->", "left", ")", ";\n        bst", "_delete(", "node", "->", "right", ")", ";\n        free(node);\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/921152674866186.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;你这里使用了&lt;code class=\"language-javascript\"&gt;^&lt;/code&gt;字符&amp;#xff0c;这个表示从字符开头开始匹配&amp;#xff0c;所以开头不是&lt;code class=\"language-javascript\"&gt;1[3-9]&lt;/code&gt;的都匹配不上&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python正则表达式匹配中文字符后面手机号码问题", [" 在一个txt文档中，需要用正则表达式把身份证号码和手机号码提取出来。结果是：部分手机号码提取出来，紧跟在中文后面的手机号码无法提取。", "\n", "python\n", "import", " codecs\n", "# -*- coding: UTF-8 -*-", "\n", "import", " os\n", "import", " re\n       \n", "def", " ", "txtreg", "(", "filename", "):\n    fr = codecs.", "open", "(filename,", "'r'", ",", "'utf-8'", ")\n    ", "for", " line ", "in", " fr:\n        flag = ", "0", "\n        line = line.strip()\n        line = line.split()\n        ", "for", " j ", "in", " ", "range", "(", "len", "(line)):\n            result_id = re.match(id_pattern,line[j].encode(", "'utf-8'", ").decode(", "'utf-8'", ",", "'ignore'", "))\n            result_ph = re.match(phone_pattern,line[j].encode(", "'utf-8'", ").decode(", "'utf-8'", ",", "'ignore'", "))\n            ", "if", " result_id:\n                flag = ", "1", "\n                ", "print", "(result_id.group(),end=", "'   '", ")\n            ", "if", " result_ph:\n                flag = ", "1", "\n                ", "print", "(result_ph.group(),end=", "'   '", ")\n        ", "if", " flag:\n            ", "print", "()\n", "#主程序", "\n", "if", " __name__==", "'__main__'", ":\n    logfilename = ", "r\"x:/jz/log.txt\"", "\n    f = ", "open", "(logfilename,", "'w'", ")\n    phone_pattern = re.", "compile", "(", "u'^1[3-9]\\d{9}(?!\\d)'", ",re.I)\n    id_pattern = re.", "compile", "(", "u'\\d{6}[1-2]\\d{10}[X\\d](?!d)'", ",re.I)\n    txtreg(", "'x:/jz/test.txt'", ")\n    f.close()\n", "\n", "部分手机号码提取出来，紧跟在中文后面的手机号码和身份证号码无法匹配。", "\n", "尝试的思路：包括在正则表达式前＋r或者u,把要匹配的字符串编码和解码encode('utf-8').decode('utf-8','ignore')", "\n", "我想要把手机号码和身份证号码都提取出来。"]], "Tag": "程序设计"}
{"Answer": "while(*(str+i)!='\\0')\r\n -&gt;\r\n while(*(str-&gt;c_str()+i)!='\\0')\r\n别的类似\r\n# 之前的问题如果解决的话，已经有很多了，麻烦采纳下\r\n# https://ask.csdn.net/my", "Konwledge_Point": "主程序", "Question": ["string类里面不是对！=进行重载了吗？为什么调用不了？", ["/*C++ P249 6-21.编写一个函数，统计一句英文句子中字母的个数，在主程序中输入输出*/", "\n\n", "#include <iostream>\n#include <string>\n#include <algorithm>\n#include \"ctype.h\"//大小写转换的函数 \nusing namespace std; \n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint Statistic(string *str)\n{\n    int i=0,j=0;\n\n    int a[26]={0};\n        int *p=a;\n    while(*(str+i)!='\\0')\n    {\n        if((int)*(str+i)>=97&&(int)*(str+i)<=123)\n        {\n            *(str+i)=toupper(*(str+i));\n        }\n        i++;\n    }\n    i=0;\n    while(*(str+i)!='\\0')\n    {\n        if(*(str+i)!=' ')\n            a[(int)(*(str+i)-'A')]++;\n        i++;\n    }\n    return *p;\n } \nint main(int argc, char** argv) {\n    string str;\n    cin>>str;\n    int *a;\n    a=Statistic(str);\n    int max=max(a);\n    for(int i=0;i<26;i++)\n    {\n        int s+=a[i];\n    }\n    cout<<\"字母总个数为\"<<s<<endl;\n    cout<<\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"<<endl;\n    cout<<\"---------------------------------------------------\"<<endl;\n    for(int i=0;i<max;i++)\n    {\n        for(int j=0;j<26;j++)\n        {\n            if(a[j])\n            {\n                cout<<\"*\"<<\" \";\n                a[j]--;\n            }\n        }\n        cout<<endl;\n     } \n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里重复了&amp;#xff0c;把第一个usingComponents&amp;#xff08;下面标红框&amp;#xff09;去了&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/630453980146160.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序中为什么在index.json中报错", ["为什么这段代码在index.json中报错，大佬捞一下孩子吧", "![img](", "https://img-mid.csdnimg.cn/release/static/image/mid/ask/386925580146111.png", " \"#left\"", "{", "  \"usingComponents\": {", "      //引入vant组件", "    \"van-progress\": \"", "@vant/weapp/progress/index\",", "    \"van-divider\": \"", "@vant/weapp/divider\",", "    \"van-tag\": \"", "@vant/weapp/tag/index\",", "    \"van-collapse\": \"", "@vant/weapp/collapse/index\",", "    \"van-collapse-item\": \"", "@vant/weapp/collapse-item/index\",", "    \"van-panel\": \"", "@vant/weapp/panel/index\",", "    \"van-toast\": \"", "@vant/weapp/toast/index\"", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "这个是类型转换异常。。。。", "Konwledge_Point": "主程序", "Question": ["关于安卓zxing项目的使用问题", ["用了两份zxing模块，一份保留了完整功能作为依赖库，一份是精简版放在主程序模块中，我的构想是主界面有扫码识别、历史记录、分享等功能，还有个跳转的次界面的功能是个数据库的增删查改，使用精简版zxing用于扫码直接输出结果到一个EditView框中方便操作。", "\n代码基本实现,build没有问题，但是run就出问题了，虚拟安卓设备一直显示xx已停止运行，run的错误如下：", "\n\n", " E/AndroidRuntime: FATAL EXCEPTION: main\n                  Process: com.example.zxingdemo, PID: 1969\n                  java.lang.RuntimeException: Unable to resume activity {com.example.zxingdemo/com.google.zxing.client.android.CaptureActivity}: java.lang.ClassCastException: com.karics.library.zxing.view.ViewfinderView cannot be cast to com.google.zxing.client.android.ViewfinderView\n                      at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3645)\n                      at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3685)\n                      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2898)\n                      at android.app.ActivityThread.-wrap11(Unknown Source:0)\n                      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593)\n                      at android.os.Handler.dispatchMessage(Handler.java:105)\n                      at android.os.Looper.loop(Looper.java:164)\n                      at android.app.ActivityThread.main(ActivityThread.java:6541)\n                      at java.lang.reflect.Method.invoke(Native Method)\n                      at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\n                   Caused by: java.lang.ClassCastException: com.karics.library.zxing.view.ViewfinderView cannot be cast to com.google.zxing.client.android.ViewfinderView\n                      at com.google.zxing.client.android.CaptureActivity.onResume(CaptureActivity.java:162)\n                      at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1354)\n                      at android.app.Activity.performResume(Activity.java:7079)\n                      at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3620)\n                      at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3685) \n                      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2898) \n                      at android.app.ActivityThread.-wrap11(Unknown Source:0) \n                      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593) \n                      at android.os.Handler.dispatchMessage(Handler.java:105) \n                      at android.os.Looper.loop(Looper.java:164) \n                      at android.app.ActivityThread.main(ActivityThread.java:6541) \n                      at java.lang.reflect.Method.invoke(Native Method) \n                      at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240) \n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767) \nI/InactivityTimer: Finishing activity due to inactivity\nApplication terminated.\n", "\n\n", "萌新求解，，，"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\n#define min(a,b) (a&amp;lt;b?a:b)\nint main(){\n    int n,m;\n    scanf(&amp;#34;%d %d&amp;#34;,&amp;amp;n,&amp;amp;m);\n    for(int i&amp;#61;1;i&amp;lt;&amp;#61;min(n,m);i&amp;#43;&amp;#43;){ //分成i组依次判断\n        if (n%i&amp;#61;&amp;#61;0 &amp;amp;&amp;amp; m%i&amp;#61;&amp;#61;0) printf(&amp;#34;组数:%d 组内1班人数:%d 组内2班人数:%d\\n&amp;#34;,i,n/i,m/i);\n    }\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c语言程序设计实际应用", ["将1班45名学生和2班40名学生重新分组参加学校体育活动，要求每组学生人数一样多，组内的1班学生个数和2班学生个数都是固定的，问最多能分几个组？组内分别由1班、2班多少人？（1、2班学生人数从键盘输入）。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;vehicle&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; weight;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; wheel;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; we, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; wh)&lt;/span&gt; &lt;/span&gt;{\n        weight &amp;#61; we; wheel &amp;#61; wh;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The weight is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; weight &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The wheel is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; wheel &amp;lt;&amp;lt; endl;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;car&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; vehicle {\n&lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; busload;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; we, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; wh, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m)&lt;/span&gt; &lt;/span&gt;{ busload &amp;#61; m; &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(we, wh); }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The weight is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; weight &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The wheel is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; wheel &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The busload is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; busload &amp;lt;&amp;lt; endl;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;truck&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; vehicle {\n&lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; deadweight;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;set2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; we, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; wh, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m)&lt;/span&gt; &lt;/span&gt;{ deadweight &amp;#61; m; &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(we, wh); }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The weight is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; weight &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The wheel is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; wheel &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The deadweight is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; deadweight &amp;lt;&amp;lt; endl;\n    }\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    vehicle v1;\n    car car1;\n    truck truck1;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; weight, wheel, busload, deadweight;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Input the weight:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; weight;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Input the wheel:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; wheel;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Input the the busload:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; busload;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Input the deadweight:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; deadweight;\n    v1.&lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(weight, wheel);\n    car1.&lt;span class=\"hljs-built_in\"&gt;set1&lt;/span&gt;(weight, wheel, busload);\n    truck1.&lt;span class=\"hljs-built_in\"&gt;set2&lt;/span&gt;(weight, wheel, deadweight);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The vehicle:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    v1.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The car:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    car1.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The truck:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    truck1.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;望采纳&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["设计一个不同的交通工具类族", ["一个汽车类vehicle，包含保护类型数据成员重量weight和车轮数量wheel，包含公有成员函数void set(int we,int wh)分别设置重量和车轮数量，公有成员函数void display()输出汽车的重量和车轮数量。", "由类vehicle派生出类car和类truck，类Car增加保护类型数据成员载客数量busload，增加公有成员函数void set1(int m)设置载客数量,重定义公有成员函数void display()显示轿车的重量、车轮数量和载客数量。", "类truck增加保护类型数据成员载重量deadweight，增加公有成员函数void set2(int m)设置载重量，定义公有成员函数void display()显示卡车的重量、车轮数量和载重量。然后编写主程序测试这些类。以上所有数据均是整数。", "输入输出样例：", "Input the weight:2", "Input the wheel:4", "Input the the busload:40", "Input the deadweight:10", "The vehicle:", "The weight is 2", "The wheel is 4", "The car:", "The weight is 2", "The wheel is 4", "The busload is 40", "The truck:", "The weight is 2", "The wheel is 4", "The deadweight is 10", "\n", "参考程序模板", "\n", "#", "include", " ", "<iostream>", "\nusing namespace std;\n\n", "//补充代实现类vehicle  的定义", "\n\n        cout << ", "\"The weight is \"", " << weight << ", "endl", ";\n        cout << ", "\"The wheel is \"", " << wheel << ", "endl", ";\n\n", "//补充代码实现类car 的定义", "\n        cout << ", "\"The weight is \"", " << weight << ", "endl", ";\n        cout << ", "\"The wheel is \"", " << wheel << ", "endl", ";\n        cout << ", "\"The busload is \"", " << busload << ", "endl", ";\n\n    ", "//补充代码实现类truck 的定义", "\n\n        cout << ", "\"The weight is \"", " << weight << ", "endl", ";\n        cout << ", "\"The wheel is \"", " << wheel << ", "endl", ";\n        cout << ", "\"The deadweight is \"", " << deadweight << ", "endl", ";\n\nint main(){\n    ", "vehicle", " v1;\n    car car1;\n    truck truck1;\n    int weight, wheel, busload, deadweight;\n    cout << ", "\"Input the weight:\"", " ;\n    cin >> weight;\n    cout << ", "\"Input the wheel:\"", " ;\n    cin >> wheel;\n    cout << ", "\"Input the the busload:\"", " ;\n    cin >> busload;\n    cout << ", "\"Input the deadweight:\"", " ;\n    cin >> deadweight;\n    v1.", "set", "(weight, wheel);\n    car1.set1(weight, wheel, busload);\n    truck1.set2(weight, wheel, deadweight);\n    cout<<", "\"The vehicle:\"", "<<", "endl", ";\n    v1.display();\n    cout<<", "\"The car:\"", "<<", "endl", ";\n    car1.display();\n    cout<<", "\"The truck:\"", "<<", "endl", ";\n    truck1.display();\n    return ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;报错的地方截个图看看&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["【Android编程】在引入其他包后，报错“Cannot resolve symbol 'R'”", ["我的主程序是在", "\n", "package", " ", "com.example.myapplication;", "\n", "\n", "下写的，然后引入了一个", "\n", "package", " ", "com.uuzuche.lib_zxing.activity;", "\n", "\n", "这个包。在这个新包下的所有R均报错Cannot resolve symbol 'R，例如：", "\n", "set", "ContentView(R.", "layout", ".", "camera", ")", ";\n", "\n", "但是我在项目里是有camera这个文件的，camera.xml内容如下：", "\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n", "<", "LinearLayout", " ", "xmlns:android", "=", "\"http://schemas.android.com/apk/res/android\"", "\n    ", "xmlns:app", "=", "\"http://schemas.android.com/apk/res-auto\"", "\n    ", "android:orientation", "=", "\"vertical\"", " ", "android:layout_width", "=", "\"match_parent\"", "\n    ", "android:layout_height", "=", "\"match_parent\"", ">", "\n\n    ", "<", "LinearLayout", "\n        ", "android:layout_width", "=", "\"match_parent\"", "\n        ", "android:layout_height", "=", "\"50dp\"", "\n        ", "android:background", "=", "\"#00B8EB\"", "\n        ", "android:orientation", "=", "\"horizontal\"", ">", "\n\n        ", "<", "ImageButton", "\n            ", "android:id", "=", "\"@+id/imageButton3\"", "\n            ", "android:layout_width", "=", "\"0dp\"", "\n            ", "android:layout_height", "=", "\"wrap_content\"", "\n            ", "android:layout_weight", "=", "\"1\"", "\n            ", "android:contentDescription", "=", "\"@string/empty\"", "\n            ", "android:padding", "=", "\"0dp\"", "\n            ", "android:paddingStart", "=", "\"0dp\"", "\n            ", "android:paddingLeft", "=", "\"0dp\"", "\n            ", "android:paddingTop", "=", "\"0dp\"", "\n            ", "android:paddingEnd", "=", "\"0dp\"", "\n            ", "android:paddingRight", "=", "\"0dp\"", "\n            ", "android:paddingBottom", "=", "\"0dp\"", "\n            ", "android:scaleType", "=", "\"centerCrop\"", "\n            ", "android:scaleX", "=", "\"0.7\"", "\n            ", "android:scaleY", "=", "\"0.7\"", "\n            ", "app:srcCompat", "=", "\"@drawable/fanhui\"", " />", "\n\n        ", "<", "View", "\n            ", "android:id", "=", "\"@+id/view\"", "\n            ", "android:layout_width", "=", "\"10dp\"", "\n            ", "android:layout_height", "=", "\"wrap_content\"", "\n            ", "android:layout_weight", "=", "\"1\"", " />", "\n\n        ", "<", "TextView", "\n            ", "android:id", "=", "\"@+id/textView2\"", "\n            ", "android:layout_width", "=", "\"150dp\"", "\n            ", "android:layout_height", "=", "\"50dp\"", "\n            ", "android:layout_weight", "=", "\"1\"", "\n            ", "android:gravity", "=", "\"center|start\"", "\n            ", "android:text", "=", "\"@string/erweima\"", "\n            ", "android:textColor", "=", "\"#ffffff\"", "\n            ", "android:textSize", "=", "\"20sp\"", " />", "\n    ", "</", "LinearLayout", ">", "\n\n    ", "<", "FrameLayout", "\n        ", "android:id", "=", "\"@+id/fl_zxing_container\"", "\n        ", "android:layout_width", "=", "\"match_parent\"", "\n        ", "android:layout_height", "=", "\"match_parent\"", ">", "\n    ", "</", "FrameLayout", ">", "\n\n", "</", "LinearLayout", ">", "\n", "\n", "这个文件也只有2k，也不存在网上说的过大问题，请问各位这是什么回事呢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Solution is to add&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;KillMode=process\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to the service block. Default value is &lt;code&gt;control-group&lt;/code&gt; which means systemd cleans up any child processes.&lt;/p&gt;\n\n&lt;p&gt;From &lt;a href=\"http://www.freedesktop.org/software/systemd/man/systemd.kill.html\" rel=\"noreferrer\"&gt;man systemd.kill&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;KillMode= Specifies how processes of this unit shall be killed. One of\n  control-group, process, mixed, none.&lt;/p&gt;\n  \n  &lt;p&gt;If set to control-group, all remaining processes in the control group\n  of this unit will be killed on unit stop (for services: after the stop\n  command is executed, as configured with ExecStop=). If set to process,\n  only the main process itself is killed. If set to mixed, the SIGTERM\n  signal (see below) is sent to the main process while the subsequent\n  SIGKILL signal (see below) is sent to all remaining processes of the\n  unit's control group. If set to none, no process is killed. In this\n  case, only the stop command will be executed on unit stop, but no\n  process be killed otherwise. Processes remaining alive after stop are\n  left in their control group and the control group continues to exist\n  after stop unless it is empty.&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["从systemd启动主进程时无法分离子进程", ["\n\n", "I want to spawn long-running child processes that survive when the main process restarts/dies. This works fine when running from the terminal:", "\n\n", "$ cat exectest.go\npackage main\n\nimport (\n        \"log\"\n        \"os\"\n        \"os/exec\"\n        \"syscall\"\n        \"time\"\n)\n\nfunc main() {\n        if len(os.Args) == 2 && os.Args[1] == \"child\" {\n                for {   \n                        time.Sleep(time.Second)\n                }\n        } else {\n                cmd := exec.Command(os.Args[0], \"child\")\n                cmd.SysProcAttr = &syscall.SysProcAttr{Setsid: true}\n                log.Printf(\"child exited: %v\", cmd.Run())\n        }\n}\n$ go build\n$ ./exectest\n^Z\n[1]+  Stopped                 ./exectest\n$ bg\n[1]+ ./exectest &\n$ ps -ef | grep exectest | grep -v grep | grep -v vim\nsnowm     7914  5650  0 23:44 pts/7    00:00:00 ./exectest\nsnowm     7916  7914  0 23:44 ?        00:00:00 ./exectest child\n$ kill -INT 7914 # kill parent process\n[1]+  Exit 2                  ./exectest\n$ ps -ef | grep exectest | grep -v grep | grep -v vim\nsnowm     7916     1  0 23:44 ?        00:00:00 ./exectest child\n", "\n\n", "Note that the child process is still alive after parent process was killed. However, if I start the main process from systemd like this...", "\n\n", "[snowm@localhost exectest]$ cat /etc/systemd/system/exectest.service \n[Unit]\nDescription=ExecTest\n\n[Service]                        \nType=simple\nExecStart=/home/snowm/src/exectest/exectest\nUser=snowm\n\n[Install]\nWantedBy=multi-user.target\n$ sudo systemctl enable exectest\nln -s '/etc/systemd/system/exectest.service' '/etc/systemd/system/multi-user.target.wants/exectest.service'\n$ sudo systemctl start exectest\n", "\n\n", "... then the child also dies when I kill the main process:", "\n\n", "$ ps -ef | grep exectest | grep -v grep | grep -v vim\nsnowm     8132     1  0 23:55 ?        00:00:00 /home/snowm/src/exectest/exectest\nsnowm     8134  8132  0 23:55 ?        00:00:00 /home/snowm/src/exectest/exectest child\n$ kill -INT 8132\n$ ps -ef | grep exectest | grep -v grep | grep -v vim\n$\n", "\n\n", "How can I make the child survive?", "\n\n", "Running go version go1.4.2 linux/amd64 under CentOS Linux release 7.1.1503 (Core).", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;iostream&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;&amp;gt;\nusing namespace std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Staff\n{\nprotected:\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; name;  &lt;span class=\"hljs-comment\"&gt;//姓名&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; age; &lt;span class=\"hljs-comment\"&gt;//年龄&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; sex; &lt;span class=\"hljs-comment\"&gt;//性别&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; addr;\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; tel;\n\npublic:\n    void input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; name;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入年龄:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; age;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; sex;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入地址:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; addr;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入电话:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; tel;\n    }\n    void output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;姓名:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;年龄:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; age &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;性别:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; sex &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;地址:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; addr &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;电话:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; tel &amp;lt;&amp;lt; endl;\n    }\n};\n\n\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Teacher : public &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; Staff\n{\nprotected:\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; title; &lt;span class=\"hljs-comment\"&gt;//职称&lt;/span&gt;\npublic:\n    &lt;span class=\"hljs-constructor\"&gt;Teacher(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;addr1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;title1&lt;/span&gt;)&lt;/span&gt;\n    {\n        name &amp;#61; name1;\n        age &amp;#61; age1;\n        sex &amp;#61; sex1;\n        title &amp;#61; title1;\n        addr &amp;#61; addr1;\n        tel &amp;#61; tel1;\n    }\n    void output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n    void input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n\n};\n\nvoid Teacher::input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; name;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入年龄:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; age;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; sex;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入职称&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; title;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入地址:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; addr;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入电话:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; tel;\n}\nvoid Teacher::output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;姓名:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;年龄:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; age &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;性别:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; sex &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;职称:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; title &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;地址:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; addr &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;电话:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; tel &amp;lt;&amp;lt; endl;\n}\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Cadre :public &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; Staff\n{\nprotected:\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; post; &lt;span class=\"hljs-comment\"&gt;//职务&lt;/span&gt;\npublic:\n    &lt;span class=\"hljs-constructor\"&gt;Cadre(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;addr1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;post1&lt;/span&gt;)&lt;/span&gt;;\n    void display&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n    void input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n\n};\n\nCadre::&lt;span class=\"hljs-constructor\"&gt;Cadre(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;addr1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;post1&lt;/span&gt;)&lt;/span&gt;\n{\n    name &amp;#61; name1;\n    age &amp;#61; age1;\n    sex &amp;#61; sex1;\n    addr &amp;#61; addr1;\n    tel &amp;#61; tel1;\n    post &amp;#61; post1;\n}\n\nvoid Cadre::input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; name;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入年龄:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; age;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; sex;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入职务&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; post;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入地址:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; addr;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入电话:&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; tel;\n}\n\n\nvoid Cadre::display&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;姓名:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;年龄:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; age &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;性别:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; sex &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;职务:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; post &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;地址:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; addr &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;电话:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; tel &amp;lt;&amp;lt; endl;\n}\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Teacher_Cader :public Teacher, public Cadre\n{\npublic:\n    &lt;span class=\"hljs-constructor\"&gt;Teacher_Cader(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt; &amp;#61; 0, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;title1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;post1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;address1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;wages1&lt;/span&gt; &amp;#61; 0)&lt;/span&gt;;\n    void input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    {\n        Teacher::input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入职务:&amp;#34;&lt;/span&gt;; \n        cin &amp;gt;&amp;gt; post;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入工资:&amp;#34;&lt;/span&gt;;\n        cin&amp;gt;&amp;gt; wages;\n    }\n    void output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    {\n        Teacher::output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;职务&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; post &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;工资&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; wages &amp;lt;&amp;lt; endl;\n    }\nprotected:\n    &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt; wages;\n};\n\nTeacher_Cader::&lt;span class=\"hljs-constructor\"&gt;Teacher_Cader(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;title1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;post1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;address1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;wages1&lt;/span&gt;)&lt;/span&gt; :&lt;span class=\"hljs-constructor\"&gt;Teacher(&lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;title1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;address1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;)&lt;/span&gt;, &lt;span class=\"hljs-constructor\"&gt;Cadre(&lt;span class=\"hljs-params\"&gt;name1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;age1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;sex1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;post1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;address1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;tel1&lt;/span&gt;)&lt;/span&gt;, wages(wages1)\n{\n\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    Teacher_Cader person1;\n    person1.input&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//输入数据&lt;/span&gt;\n    person1.output&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["构造一个Staff员工类为虚基类，多重派生继承问题", ["如下图所示，构造一个Staff员工类为虚基类含有数据成员姓名、年龄、性别、地址、电话，派生出教师类Teacher增加数据成员职称和干部类Cader增加数据成员职务，派生出教师干部类Teacher_Cader增加数据成员工资，要求：", "（1）在类中设计void input()和void output()函数实现数据的录入和输出。", "（2）设计主程序显示教师干部信息。", "\n", "\n", "已有部分代码，请按题修改一下", "\n", "#", "include", "<iostream>\n#", "include", "<", "string", ">\nusing namespace std;\n", "class", " Teacher\n{\n    public:\n        ", "Teacher(", "string", " ", "name1", ",", "int", " ", "age1", ",", "string", " ", "sex1", ",", "string", " ", "title1", ",", "string", " ", "addr1", ",", "string", " ", "tel1", ")", "\n        {\n            name=name1;\n            age=age1;\n            sex=sex1;\n            title=title1;\n            addr=addr1;\n            tel=tel1;\n        }\n        void display", "()", ";\n        protected:\n            ", "string", " name;\n            ", "int", " age;\n            ", "string", " sex;\n            ", "string", " title,addr,tel;\n};\nvoid Teacher::display", "()", "\n{\n    cout<<", "\"姓名:\"", "<<name<<endl;\n    cout<<", "\"年龄:\"", "<<age<<endl;\n    cout<<", "\"性别:\"", "<<sex<<endl;\n    cout<<", "\"职称:\"", "<<title<<endl;\n    cout<<", "\"地址:\"", "<<addr<<endl;\n    cout<<", "\"电话:\"", "<<tel<<endl;\n}\n", "class", " Cadre\n{\n    public:\n        ", "Cadre(", "string", " ", "name1", ",", "int", " ", "age1", ",", "string", " ", "sex1", ",", "string", " ", "post1", ",", "string", " ", "addr1", ",", "string", " ", "tel1", ")", ";\n        void display", "()", ";\n    protected:\n        ", "string", " name;\n        ", "int", " age;\n        ", "string", " sex;\n        ", "string", " post;\n        ", "string", " addr;\n        ", "string", " tel;\n};\n\nCadre::", "Cadre(", "string", " ", "name1", ",", "int", " ", "age1", ",", "string", " ", "sex1", ",", "string", " ", "post1", ",", "string", " ", "addr1", ",", "string", " ", "tel1", ")", ":name(name1),age(age1),sex(sex1),post(post1),addr(addr1),tel(tel1)\n{\n    \n}\n\nvoid Cadre::display", "()", "\n{\n    cout<<", "\"姓名:\"", "<<name<<endl;\n    cout<<", "\"年龄:\"", "<<age<<endl;\n    cout<<", "\"性别:\"", "<<sex<<endl;\n    cout<<", "\"职务:\"", "<<post<<endl;\n    cout<<", "\"地址:\"", "<<addr<<endl;\n    cout<<", "\"电话:\"", "<<tel<<endl;\n}\n", "class", " Person:public Teacher,public Cadre\n{\n    public:\n        ", "Person(", "string", " ", "name1", ",", "int", " ", "age1", ",", "string", " ", "sex1", ",", "string", " ", "title1", ",", "string", " ", "post1", ",", "string", " ", "address1", ",", "string", " ", "tel1", ",", "float", " ", "wages1", ")", ";\n        void show", "()", "\n        {\n            Teacher::display", "()", ";\n            cout<<", "\"职务:\"", "<<Cadre::post<<endl;\n            cout<<", "\"工资:\"", "<<wages<<endl;\n        }\n        protected:\n            ", "float", " wages;\n};\n\nPerson::", "Person(", "string", " ", "name1", ",", "int", " ", "age1", ",", "string", " ", "sex1", ",", "string", " ", "title1", ",", "string", " ", "post1", ",", "string", " ", "address1", ",", "string", " ", "tel1", ",", "float", " ", "wages1", ")", ":", "Teacher(", "name1", ",", "age1", ",", "sex1", ",", "title1", ",", "address1", ",", "tel1", ")", ",", "Cadre(", "name1", ",", "age1", ",", "sex1", ",", "post1", ",", "address1", ",", "tel1", ")", ",wages(wages1)\n{\n    \n}\n\n", "int", " main", "()", "\n{\n    Person person1(", "\"小明\"", ",", "18", ",", "\"男\"", ",", "\"教授\"", ",", "\"部长\"", ",", "\"资阳\"", ",", "\"18080594922\"", ",", "950000", ");\n    person1.show", "()", ";\n    system(", "\"pause\"", ");\n    return ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;发送英文测试一下&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["单片机与sim900a实现发送中文短信不成功的问题", ["\n", "#include<reg52.h>\n#define uchar unsigned char\n#define uint unsigned int\ncode char str1[]=\"AT+CSQ\\r\\n\";\ncode char str2[]=\"AT+CSCS=\\\"UCS2\\\"\\r\\n\";\ncode char str3[]=\"AT+CMGF=1\\r\\n\";\ncode char str4[]=\"AT+CSMP=17,167,2,25\";\ncode char str5[]=\"AT+CMGS=\\\"00310037003800330032003100370032003000380033\\\"\\r\\n\";\ncode char str6[]=\"8B66544AFF0179EF6C348D859650\";\ncode char str7[]=\"AT+CMGD=1\";\nvoid DelaySec(int sec)\n{\n\tuint i,j=0;\n\n\tfor(i=0;i<sec;i++)\n\t{\n\t\tfor(j=0;j<65535;j++)\n\t\t{\t\n\t\t}\n\t}\n}\nvoid uart_init(void)\n{\n\tTMOD=0x20;\n\tSCON=0x40;\n\tTH1=0xfd;\n\tTL1=0xfd;\n\tTR1=1;\n\tES=1;\n\tEA=1;\n}\nvoid sendonebyte(uint c)\n{\n\tES=0;\n\tSBUF=c;\n\twhile(!TI);\n\tTI=0;\n\tES=1;\n}\n\nvoid main(void)\n{\n\tuint i=0;\n\tuart_init();\n\twhile(str1[i]!='\\0')\n\t{\n\t\tsendonebyte(str1[i++]);\n\t}\n\tDelaySec(1);\n\ti=0;\n\t\twhile(str2[i]!='\\0')\n\t{\n\t\tsendonebyte(str2[i++]);\n\t}\n\tDelaySec(1);\n\ti=0;\n\t\twhile(str3[i]!='\\0')\n\t{\n\t\tsendonebyte(str3[i++]);\n\t}\n\tDelaySec(1);\n\ti=0;\n\t\twhile(str4[i]!='\\0')\n\t{\n\t\tsendonebyte(str4[i++]);\n\t}\n\t\tDelaySec(1);\n\ti=0;\n\n\tDelaySec(5);\n\t\twhile(str5[i]!='\\0')\n\t{\n\t\tsendonebyte(str5[i++]);\n\t}\n\t\tDelaySec(1);\n\ti=0;\n\t\twhile(str6[i]!='\\0')\n\t{\n\t\tsendonebyte(str6[i++]);\n\t}\n\t\tDelaySec(1);\n\ti=0;\n\tsendonebyte(0x1A);\n\t\twhile(str7[i]!='\\0')\n\t{\n\t\tsendonebyte(str7[i++]);\n\t}\n\t\tDelaySec(1);\n\ti=0;\t\n\twhile(1);\n\t\n}\nvoid uart_isr(void) interrupt 4\n{\n\tif(RI)\n\t{\n\t\tRI=0;\n\t\t\n\t}\n\telse\n\tTI=0;\n}", "\n\n", "上面是单独写的一个只发中文短信的，语句改成发送英文短信的后经过单片机测试可以发送，但是中文的AT指令就不行了。", "\n\n", "\n", "#include\"SIM900A.h\"\n#include<reg52.h>\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\n//注意，无论接收到信号还是发送完信号，都会进中断服务程序的\n/*初始化程序（必须使用，否则无法收发），次程序将会使用定时器1*/\nvoid SerialInti(void)//初始化程序（必须使用，否则无法收发）\n{\n\tTMOD=0x21;//定时器1操作模式2:8位自动重载定时器\n\tTH1=0xfd;//装入初值，波特率9600\n\tTL1=0xfd;\n\tTR1=1;//打开定时器\n\tSM0=0;//设置串行通讯工作模式，（10为一部发送，波特率可变，由定时器1的溢出率控制）\n\tSM1=1;//(同上)在此模式下，定时器溢出一次就发送一个位的数据\n\tREN=1;//串行接收允许位（要先设置sm0sm1再开串行允许）\n\tEA=1;//开总中断\n\tES=1;//开串行口中断\t\n}\nvoid Uart1BYTE(uchar temp)\n{\n\t\tSBUF=temp;\n\t\twhile(!TI);//等待发送完成信号（TI=1）出现\n\t\tTI=0;\n\n}\n//串行口连续发送char型数组，遇到终止号/0将停止\nvoid Uart1Sends(uchar *str)\n{\n\twhile(*str!='\\0')\n\t{\n\t\twhile(!TI);//等待发送完成信号（TI=1）出现\n\t\tTI=0;\n\t\tstr++;\n\t}\n}\n\n//延时函数大概是1s钟\nvoid DelaySec(int sec)\n{\n\tuint i,j=0;\n\n\tfor(i=0;i<sec;i++)\n\t{\n\t\tfor(j=0;j<65535;j++)\n\t\t{\t\n\t\t}\n\t}\n}\n\n\n\nvoid SIM900A(void)\n{\n\n\n\t\tUart1Sends(\"AT+CSQ\\r\\n\");\n\t\tDelaySec(1);//延时1秒\n\t\tUart1Sends(\"AT+CMGF=1\\r\\n\");//文本模式\n\t\tDelaySec(1);//延时1秒\n\t\tUart1Sends(\"AT+CSMP=17,167,2,25\\r\\n\");//设置在工作模式\n\t\tDelaySec(1);//延时1秒\n\t\tUart1Sends(\"AT+CSCS=\\\"UCS2\\\"\");//UCS2编码字集\n\t\tDelaySec(1);\n\t\tUart1Sends(\"AT+CMGS=\\\"00310037003800330032003100370032003000380033\\\"\");//unicode电话号码\n\t\tDelaySec(3);\n\t\tUart1Sends(\"8B66544AFF0179EF6C348D859650\");//内容unicode码\n\t\tDelaySec(3);//延时3秒\n\t      Uart1BYTE(0x1A);\n}", "\n\n", "这个是另一种，不清楚有没有问题的，反正编译没问题", "\n\n", "但是调用到主程序后（以下是主程序，做的简陋的涵洞积水预警系统）", "\n\n", "\n", "#include\"ds18b20.h\"\n#include\"csb.h\"\n#include\"lcd.h\"\n#include<reg52.h>\n#include\"main.h\"\n#include\"SIM900A.h\"\n\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\n\nuint temp1[3];\nuchar count = 0;\n\n\nuint a1=0,Threshold1=15,Threshold2=20;\n//已用端口p0.0，p0.1，p0.2，p0.3，p0.4，p0.5，p0.6，p0.7，p2.7，p2.6\n//p0.0，p0.1（超声波）p0.2~p0.5（LCD）p2.0-2.3（按键）p0.6（DS18b20）\n\nvoid main(void)\n{\t\n\t\tinitc();//超声波初始化\n\t\tinit(); //lcd初始化\n\t\tSerialInti();\n\t\t\n\t\t\n\twhile(1)\n\t{\n\t\tswitch(P2)\n\t\t{\n\t\tcase 0xfe:{Threshold1=Threshold1+1;display1();break;}\n\t\tcase 0xfd:{Threshold1=Threshold1-1;display1();break;}\n\t\tcase 0xfb:{Threshold2=Threshold2+1;display2();break;}\n\t\tcase 0xf7:{Threshold2=Threshold2-1;display2();break;}\n\t\tdefault:break;\n\t\t}\n\t\twhile(count < 3)\n\t\t{\n\t\t\ttemp1[count]=loop();\n\t\t\tcount++;\t\t\n\t\t}\t\t\t\n\t\ta1 = (uint)(temp1[0] + temp1[1] + temp1[2]) / 3;\n\t\ta1=400-a1;\n\t\tcount = 0;\n\t\tif(a1>Threshold2)\n\t\t{\n\t\t\tSIM900A();\n\t\t\tdisplay();\n\t\t}\n\t\telse if(a1>Threshold1)\n\t\t{\n\t\t\tdisplay();//lcd显示程序\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdisplay();\n\t\t}\n\t\tdelay(3000);\n\t}\n}\t\t\t //0:加，1：减\nvoid Serial_interrupt() interrupt 4//串口中断 \n{\n\tif(RI)\n\tRI=0;//接收中断信号清零，表示将继续接收\n\tif(TI)\n\tTI=0;\n}\n", "\n\n", "就会导致超声波传感器运行异常，lcd也什么都不显示了，只因为调用了SIM900A()这个函数，是不是频繁进入中断影响了超声波传感器的运行？？？", "\n\n", "总之，求大佬给一个SIM900A发送中文短信的正确程序（用的是52单片机），并考虑加到我那个涵洞积水系统也可以正常发中文短信的。", "\n\n", "以下是其他部分的.c和.h程序（怕大佬分析时有需求，特意附上，别因为感觉多就。。。），没加sim900a.c前其他程序已经在单片机跑过了的。", "\n\n", "\n", "#include<reg52.h>\n#include<intrins.h>\n#include\"ds18b20.h\"\n#include\"csb.h\"\n#include\"lcd.h\"\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\n/*定时器0初始化*/\nvoid initc(void)\n{\n\tTMOD=0x21;//，定时器0工作在模式一。00000001\n\tTH0=0;\n\tTL0=0;\n\tET0=1;\t\n\tEA=1;\n\tTR0 = 0;\n}\nvoid trigger(void)    //单片机输入切换电平启动\n{\n\tTRIGGER=0;\n\tTRIGGER=1;\n\t_nop_();_nop_();_nop_();_nop_();\n\t_nop_();_nop_();_nop_();_nop_();\n\t_nop_();_nop_();_nop_();_nop_();\n\t_nop_();_nop_();_nop_();_nop_();\n\tTRIGGER=0;\n\n} \n\nuint get_distance()\n{\n\tuint time = TH0*256+TL0;\n\tfloat distance;\n\tif(read_temperature() <= 10)\n\t{\n\t\tdistance = time * (330.45 * 100) / 2000000; \n\t}\n\telse if(read_temperature() <= 30)\n\t{\n\t\tdistance = time * (342.62 * 100) / 2000000;\n\t}\n\telse\n\t{\n\t\tdistance = time * (354.85 * 100) / 2000000;\n\t}\n\tTH0 = TL0 = 0;\n\treturn (uint)distance;\n}\n\t\nuint loop(void)\n{\n\ttrigger();\n\twhile(!ECH0);\n\tTR0=1;\n\twhile(ECH0);  \n\tTR0=0;\n \tdelay(200);//延时（大于200ms)\n\treturn get_distance();\n}\n\n\n\n\n\n/*超声波*/", "\n\n", "\n", "#include <reg52.h>\n#include \"ds18b20.h\"\n\nvoid delay_18B20(unsigned int i)\n{\n\tfor(;i>0;i--);\n}\n\n\n//DS18B20芯片初始化\nvoid Init_DS18B20(void) \t\n{\n  unsigned char x=0;\n  DQ = 1;          //DQ拉高\n  delay_18B20(8);  //稍作延时\n  DQ = 0;          //DQ拉低\n  delay_18B20(80); //延时大于480us\n  DQ = 1;          //拉高总线\n  delay_18B20(14);\n  x=DQ;            //若x=0初始化成功，若x=1初始化失败\n  delay_18B20(20);\n}\n\n\n//通过单总线向DS18B20写一个字节\nvoid WriteOneChar(unsigned char dat)\n{\n  unsigned char i=0;\n  for (i=8;i>0;i--)\n  {\n   DQ=0;\n   DQ=dat&0x01;\n   if(DQ)\n\t{\n\t\tdelay_18B20(1);\n\t\tDQ=1;\n\t}\n\telse\n\t{\n\t\tdelay_18B20(5);\n\t\tDQ=1;\n\t}\n   dat>>=1;\t //算术右移\n   }\n}\n\n//从DS18B20读取一个字节\nunsigned char ReadOneChar(void) //给DQ 0，1切换信号后便会得到1位的数据反馈到DQ上\n  {\n    unsigned char i=0;\n    unsigned char dat=0;\n    for (i=8;i>0;i--)\n    {\n\t\tDQ=0; //拉低总线\n\t\tdat>>=1;//每读取移位向右移移位\n\t\tDQ=1; //拉高总线\n\t\tif(DQ)\n\t\tdat|=0x80;\t\t  //当DQ为1信号，软件将1赋给那一位\n\t\tdelay_18B20(4);\n    }\n     return(dat);\n  }\n\n\nunsigned char read_temperature(void)\n{\t\t\t\t\t\t\t \n unsigned char a = 0,b = 0,temp = 0;\n Init_DS18B20();\n WriteOneChar(0xCC);  // 跳过读序列号操作\n WriteOneChar(0x44);  // 启动温度转换\n delay_18B20(100);    // \n Init_DS18B20();\n WriteOneChar(0xCC);  //跳过读序列号操作\n WriteOneChar(0xBE);  //读取温度寄存器\n delay_18B20(100);\n a = ReadOneChar();     //读温度低位\n b = ReadOneChar();     //读温度高位\n temp = b;              // 以下部分和你的是一样的\n temp <<= 8;\n temp |= a;\n if(temp < 0x8000)      \n {\n\ttemp = ((b * 256 + a) >> 4);  // 完成的是十六进制转为10进制\t，右移4位去掉小数部分，精度12位\n }\t \n else\n {\n\ttemp = -((b * 256 + a) >> 4);\n }\n return(temp);\n}\n\n\n/*温度传感器*/", "\n\n", "\n", "#include<reg52.h>\n#include<intrins.h>\n#include\"lcd.h\"\n#include\"main.h\"\n#include\"ds18b20.h\"\ntypedef unsigned char uchar;\ntypedef unsigned int uint;                                    \nuchar code hanzi1[]={\"当前积\\xfd水深度为:\"};\nuchar code hanzi2[]={\"谨慎通行!\"};\nuchar code Temp[]={\"温度:\"};\nuchar code Threshold_A[]={\"阈值A:\"};\nuchar code Threshold_B[]={\"阈值B:\"};\nvoid delay(uint y)                                //单位：1ms\n{\tuint z;\n\tuchar x;\n\tfor(z=0;z<y;z++)\n\t{\n\t\tfor(x=0;x<120;x++);\n\t}\n}\nvoid write_command(uchar command_data)                  //写指令\n{\n\tuchar i,temp,temp1,temp2;\n\ttemp=0xf8;\n\tdelay(10);\n\tCS=1;\n\tSCLK=0;\n\tfor(i=0;i<8;i++)\n\t{\n\t\tSID=(bit)(temp&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp=(temp<<1);\n\t}\t\t\t\t\t\t \t\t\t\t\n\ttemp1=command_data;\n\ttemp1=(temp1&0xf0);\n\tfor(i=0;i<8;i++)\n\t{\n\t\tSID=(bit)(temp1&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp1=(temp1<<1);\n\t}\n\ttemp2=command_data;\n\ttemp2=(temp2<<4);\n\tfor(i=0;i<8;i++)\n\t{\n\t\tSID=(bit)(temp2&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp2=(temp2<<1);\n\t}\n\tCS=0;\n}\nvoid write_data(uchar command_data)                      //写数据\n{\n\tuchar temp,temp1,temp2,i;\t\n\ttemp=0xfa;\n\tdelay(10);\n\tCS=1;\n\tfor(i=0;i<8;i++)\t\n\t{\n\t\tSID=(bit)(temp&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp=(temp<<1);\n\t}\n\ttemp1=command_data;\n\ttemp1=(temp1&0xf0);\n\tfor(i=0;i<8;i++)\n\t{\n\t\tSID=(bit)(temp1&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp1=(temp1<<1);\n\t}\n\ttemp2=command_data;\n\ttemp2=(temp2<<4);\n\tfor(i=0;i<8;i++)\n\t{\n\t\tSID=(bit)(temp2&0x80);\n\t\tSCLK=0;\n\t\tSCLK=1;\n\t\ttemp2=(temp2<<1);\n\t}\n\tCS=0;\n}\nvoid init(void)                 //初始化\n{\n\tPSB=0;\n\tdelay(100);\n\twrite_command(0x30);      //  功能设置：一次送8位数据，,基本指令集。\n\twrite_command(0x04);      //  点设定：显示字符/光标从左到右移位，DDRAM地址加1。\n\twrite_command(0x0c);      //  显示设定:开显示,关光标，当前关闭反白闪动。\t\t\t\n\twrite_command(0x01);      //  清DDRAM\n\twrite_command(0x02);      //  DDRAM地址归位\n\twrite_command(0x80);      //  把显示地址设为0X80，即为第一行的首位。\t\n}\nvoid display(void)\n{\n\tuchar temp[2];\n\tuchar j,i;\n\tuint temperature=(int)read_temperature();\n\tinit();\n\twrite_command(0x80);                        //第一行显示\n\tfor(j=0;j<16;j++)\n\t{\n\t\twrite_data(hanzi1[j]);\n\t}\n\twrite_command(0x90);\n\twrite_data(a1/100+0x30);\n\twrite_data(a1%100/10+0x30);\n\twrite_data(a1%10+0x30);\n\twrite_data('c');\n\twrite_data('m');\n\tif(a1>Threshold1)\n\t{\n\t\twrite_command(0x88);\n\t\tfor(j=0;j<9;j++)\n\t\t{\n\t\t\twrite_data(hanzi2[j]);\n\t\t}\n\t}\n\twrite_command(0x98);\n\tfor(i=0;i<6;i++)\n\t{\n\t\twrite_data(Temp[i]);   // 显示温度提示\n\t}\n\ttemp[0]=temperature/10+0x30;\n\ttemp[1]=temperature%10+0x30;\n\twrite_command(0x98+5);       // 显示温度值\n\tfor(i=0;i<2;i++)\n\t{\n\t\twrite_data(temp[i]);\n\t}\n}\nvoid display1(void)\n{\n\tuchar i;\n\tinit();\n\twrite_command(0x98);\n\tfor(i=0;i<6;i++)\n\t{\n\t\twrite_data(Threshold_A[i]);\n\t}\n\twrite_data(Threshold1/10+0x30);\n\twrite_data(Threshold1%10+0x30);\n\n}\nvoid display2(void)\n{\n\tuchar i;\n\tinit();\n\twrite_command(0x98);\n\tfor(i=0;i<6;i++)\n\t{\n\t\twrite_data(Threshold_B[i]);\n\t}\t\t\t     \n\twrite_data(Threshold2/10+0x30);\n\twrite_data(Threshold2%10+0x30);\n}\n\n\t/*lcd12864*/", "\n\n", "\n "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;猜你想要的是多个返回值&amp;#xff0c;不改变现有返回值类型的话&amp;#xff0c;只能动函数参数&amp;#xff0c;至少有两种办法&amp;#xff0c;一种是使用 out 参数。&lt;/p&gt;\n\n&lt;p&gt;使用 C# 的 out 关键字&amp;#xff0c;加一个参数 &amp;#96;out string numble &amp;#96;&amp;#xff0c;函数内部赋值它&amp;#xff0c;外部就可以用。&lt;/p&gt;\n\n&lt;p&gt;另一种方式是你可以传入一个回调函数来处理额外的数据。&lt;/p&gt;\n\n&lt;p&gt;参考&amp;#xff1a;&lt;a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier\"&gt;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["C#如何实现传递bool类型的指针参数？", ["有没有办法这一句MessageBox.Show(Http.numble);放到主函数中去，并且不去改变方法Get_Check（）的类型 ", "\n\n", "部分代码如下：", "\n\n", " 这是封装好的一个类里面的方法  （这里面的 Http.Get是从网页上获取数据的一个方法）", "\n\n", "unsafe public static bool Get_Check(string url, Dictionary<string, string> UseFor)", "\n\n", "{", "\n           ", "\n            Http.rel = Http.Get(url, UseFor);", "\n            Http.numble = Http.rel.Substring(73, Http.rel.Length - 82);//从获取的文本数据中摘出自己想要的，通过了就会有PASS,没有通过就会有NG;", "\n            if (Http.numble.Contains(\"NG\") == true)", "\n            {", "\n                n = false;", "\n                MessageBox.Show(Http.numble);", "\n            } ", "\n            else", "\n                n = true;", "\n            return n ;           ", "\n }", "\n\n", "这是主程序的调用这个方法", "\n\n", "        private unsafe void Button2_Click(object sender, EventArgs e)", "\n        {", "\n            string url1 = \"http://10.11.2.8:86/NPI.asmx/Sync_CheckStation\";", "\n            Dictionary<string, string> UseFor = new Dictionary<string, string> {", "\n                {\"sn\",textBox1.Text},{\"station\",textBox2.Text},{\"type\",\"BZ\"}", "\n            };", "\n            if(Http.Get_Check(url1, UseFor)==true)", "\n            {", "\n                MessageBox.Show(\"PASS\");", "\n            }", "\n        }"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/lansky54/article/details/45357729'&gt;Java输出数组的内容&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/chszs/article/details/8216142'&gt;Java输出数组的内容&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/u011220611/article/details/49664115'&gt;Java输出数组的内容&lt;/a&gt;&lt;br/&gt;----------------------同志你好，我是CSDN问答机器人小N，奉组织之命为你提供参考答案，编程尚未成功，同志仍需努力！", "Konwledge_Point": "主程序", "Question": ["java算法中 数组内容交换", ["选择排序中：到了交换的方法exch（）时，明明debug的时候看到数组被交换，回到主程序，发现又回到没有交换前\n测试数组：2112 输出1212     中间过程会有2112-1212-1122-1212\n自己搜了一下，看到讲解都是数组传到方法中传递的是数组首地址，觉得没什么问题，而且我编写其他排序如插入排序，用这个exch（）也是没有问题，自己现在找不出原因，求大神指教。\n\n我已经自己找到答案了，是因为选择排序的min=i，应该放在第二个循环里，每一次比较都是和a【i】比较\n\nimport java.util.Scanner;\n", "\n\n", "public class Selection {", "\n\n", "    public static void sort(Comparable[] a){\n        int N=a.length;\n        for(int i=0;i<N;i++)\n        {\n            int min=i;\n            for(int j=i+1;j<N;j++)\n            {\n                if(less(a[j],a[min])) \n                    min=j;\n                exch(a,i,min);\n            }\n\n        }\n    }\n\n    private static boolean less(Comparable v,Comparable w){\n        return v.compareTo(w)<0;\n    }\n    private static void exch(Comparable[] a,int i,int j){\n        Comparable t=a[i]; a[i]=a[j];a[j]=t;\n    }\n    private static void show(Comparable[] a){\n        //在单行中打印数组\n        for(int i=0; i<a.length;i++)\n            System.out.print(a[i]+\"\");\n        System.out.println();\n\n    }\n\n    public static boolean isSorted(Comparable[] a){\n        //测试数组是否有序\n        for(int i=1;i<a.length;i++)\n            if(less(a[i],a[i-1])) return false;\n        return true;\n    }\n    public static void main(String[] args){\n        //从标准输入读取字符串，将它们排序并输出\n         System.out.print(\"输入\");\n         Scanner s = new Scanner(System.in);\n         String line=s.nextLine();\n         System.out.println(\"输入的是\"+line);                \n\n        char [] charArr =line.toCharArray();    \n        String[] strArr = new String[charArr.length];\n\n        for(int i = 0; i < strArr.length; i++) {\n            strArr[i] = String.valueOf(charArr[i]);\n        }\n\n        sort(strArr);\n        assert isSorted(strArr);\n        show(strArr);\n    }\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cr&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["单片机问题需要快点解决", ["你好，我有一个c51的代码不是自己写的但是我看不懂，需要有个人来帮忙写一下代码注释，要超详细的那种，希望可以帮帮忙.", "虽然有注释了但是她说不够全面，需要再改。如果可以的话你可以给我讲，价格15.", "\n", "#include <reg52.h>", "\n", "#include <intrins.h>", "\n", "#define uchar unsigned char", "\n", "#define uint unsigned int", "\nuchar code table[", "16", "]={", "0", "xc0,", "0", "xf9,", "0", "xa4,", "0", "xb0,", "0", "x99,", "0", "x92,", "0", "x82,", "0", "xf8,", "0", "x80,", "0", "x90,", "0", "x88,", "0", "x83,", "0", "xc6,", "0", "xa1,", "0", "x86,", "0", "x8e};", "//", "共阳数码管编码\n\nint Temperature, Humidity;    ", "//", "定义温湿度\n\n", "//", "数码管的位选\nsbit S1=P2^", "0", ";\nsbit S2=P2^", "1", ";\nsbit S3=P2^", "2", ";\nsbit S4=P2^", "3", ";\n\n", "//", "DHT11引脚 \nsbit DATA = P3^", "4", ";\n\n\nuchar  U8FLAG,k;\nuchar  U8count,U8temp;\nuchar  U8T_data_H,U8T_data_L,U8RH_data_H,U8RH_data_L,U8checkdata;\nuchar  U8T_data_H_temp,U8T_data_L_temp,U8RH_data_H_temp,U8RH_data_L_temp,U8checkdata_temp;\nuchar  U8comdata;\nuchar  count, count_r=", "0", ";\n\nuchar Read_Time=", "0", ";    ", "//", "读取的时间\nuchar SET_Time=", "10", ";    ", "//", "设定的时间默认是", "10", "\n\nuchar set_flag=", "0", ";\nvoid Delay(uint j)\n{\n  uchar i;\n  ", "for", "(;j>", "0", ";j--)\n  {     \n    ", "for", "(i=", "0", ";i<", "27", ";i++);\n  }\n}\n\nvoid  Delay_10us(void)\n{\n  uchar i;\n  i--;\n  i--;\n  i--;\n  i--;\n  i--;\n  i--;\n}\nvoid  COM(void)\n{\n  uchar i;\n  ", "for", "(i=", "0", ";i<", "8", ";i++)       \n  {\n    U8FLAG=", "2", ";\n    ", "while", "((!DATA)&&U8FLAG++);\n    Delay_10us();\n    Delay_10us();\n    Delay_10us();\n    U8temp=", "0", ";\n    ", "if", "(DATA)U8temp=", "1", ";\n    U8FLAG=", "2", ";\n    ", "while", "((DATA)&&U8FLAG++);\n    ", "//", "超时则跳出", "for", "循环          \n    ", "if", "(U8FLAG==", "1", ")", "break", ";\n    ", "//", "判断数据位是", "0", "还是", "1", "     \n    \n    ", "//", " 如果高电平高过预定", "0", "高电平值则数据位为 ", "1", " \n    \n    U8comdata<<=", "1", ";\n    U8comdata|=U8temp;        ", "//", "0", "\n  }", "//", "rof\n}\n\n", "//", "温湿度读取子程序\nuchar Read_RH(void)\n{\n  ", "//", "主机拉低", "18", "ms \n  DATA=", "0", ";\n  Delay(", "200", ");  ", "//", "原来为", "5", "\n  DATA=", "1", ";\n  ", "//", "总线由上拉电阻拉高 主机延时", "20", "us\n  Delay_10us();\n  Delay_10us();\n  Delay_10us();\n  Delay_10us();\n  ", "//", "主机设为输入 判断从机响应信号 \n  DATA=", "1", ";\n  ", "//", "判断从机是否有低电平响应信号 如不响应则跳出，响应则向下运行      \n  ", "if", "(!DATA)         ", "//", "T !      \n  {\n    U8FLAG=", "2", ";\n    ", "//", "判断从机是否发出 ", "80", "us 的低电平响应信号是否结束     \n    ", "while", "((!DATA)&&U8FLAG++);\n    U8FLAG=", "2", ";\n    ", "//", "判断从机是否发出 ", "80", "us 的高电平，如发出则进入数据接收状态\n    ", "while", "((DATA)&&U8FLAG++);\n    ", "//", "数据接收状态         \n    COM();\n    U8RH_data_H_temp=U8comdata;\n    COM();\n    U8RH_data_L_temp=U8comdata;\n    COM();\n    U8T_data_H_temp=U8comdata;\n    COM();\n    U8T_data_L_temp=U8comdata;\n    COM();\n    U8checkdata_temp=U8comdata;\n    DATA=", "1", ";\n    ", "//", "数据校验 \n    U8temp=(U8T_data_H_temp+U8T_data_L_temp+U8RH_data_H_temp+U8RH_data_L_temp);\n    ", "if", "(U8temp==U8checkdata_temp)\n    {\n      U8RH_data_H=U8RH_data_H_temp;\n      U8RH_data_L=U8RH_data_L_temp;\n      U8T_data_H=U8T_data_H_temp;\n      U8T_data_L=U8T_data_L_temp;\n      U8checkdata=U8checkdata_temp;\n    }", "//", "fi\n    return ", "1", ";\n  }", "//", "fi\n  ", "else", "   ", "//", "传感器不响应\n  {\n    return ", "0", ";\n  }\n}\n", "//", "读取温湿度\nvoid Get_TH()\n{\n  uint temp;\n  temp = Read_RH();\n  ", "//", "读出温湿度，只取整数部分\n  Humidity = U8RH_data_H;\n  Temperature = U8T_data_H;\n}\n\n", "//", "刷新数码管显示\nvoid Show(uchar num1,uchar num2)\n{\n  static uchar t=", "0", ";\n\n  P0=", "0", "xff;   ", "//", "关闭显示\n  switch(t)\n  {\n  case ", "0", ":\n    S1=", "1", ";S2=", "0", ";S3=", "0", ";S4=", "0", ";\n    P0=table[num1/", "10", "];\n    t++;\n    ", "break", ";\n  case ", "1", ":\n    S1=", "0", ";S2=", "1", ";S3=", "0", ";S4=", "0", ";\n    P0=table[num1%", "10", "];\n    t++;\n    ", "break", ";\n  case ", "2", ":\n    S1=", "0", ";S2=", "0", ";S3=", "1", ";S4=", "0", ";\n    P0=table[num2/", "10", "];\n    t++;\n    ", "break", ";\n  case ", "3", ":\n    S1=", "0", ";S2=", "0", ";S3=", "0", ";S4=", "1", ";\n    P0=table[num2%", "10", "];\n    t=", "0", ";\n    ", "break", ";\n  }\n}\n\n\n", "/*主程序：*/", "\nvoid main()\n{\n  uchar time=", "0", ";\n  ", "while", " (", "1", ")\n  {\n      ", "if", "(++time>", "200", ")", "//", "延时\n      {\n         time=", "0", ";\n        Get_TH();      ", "//", "读取温湿度\n      }\n      Show(Temperature,Humidity);    ", "//", "显示温湿度\n      Delay(", "1", ") ;\n  }\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、你怎么打开的这个侧边栏&amp;#xff0c;就怎么关闭&amp;#xff0c;但是关闭的时候参数需要改为相反&amp;#xff0c;比如&amp;#xff0c;你在主页点击了某个东西&amp;#xff0c;让这个侧边栏展示出来的&amp;#xff0c;就在里面找&amp;#xff1b;&lt;br /&gt;2、你点击这个 ss  的时候&amp;#xff0c; 记录鼠标点击目标&amp;#xff0c;以及目标参数&amp;#xff0c;缓存在页面某个变量中&amp;#xff0c;同时关闭侧边栏&lt;br /&gt;3、在你想要展示的页面&amp;#xff0c;把缓存的变量值赋予目标元素&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序侧边抽屉选中信息后如何隐藏", ["微信小程序侧边抽屉，如何实现点击这个view(ss)之后就隐藏侧边抽屉，然后去主页面渲染view(ss)呢", "\n", "图1", "\n", "图2", "\n", "\n", "直接把确定按钮去掉，不需要考虑按钮", "\n", "注：这是用的组件(colorui)", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/wxf1995/article/details/5937988", "Konwledge_Point": "主程序", "Question": ["一道关于数列的题目，Pascal，求大神帮忙", ["一道关于数列的题目，我用了Pascal语言，但运行结果总是一个定值，毫无变化，我怀疑主程序的循环有问题，但又找不出来，求大神帮忙找错，谢谢了。", "数列", "\n\n", "（sequence.pas/c/cpp）", "\n\n", "【问题描述】", "\n给定一个正整数k(3≤k≤15),把所有k的方幂及所有有限个互不相等的k的方幂之和构成一个递增的序列，例如，当k=3时，这个序列是：", "\n1，3，4，9，10，12，13，…", "\n（该序列实际上就是：30，31，30+31，32，30+32，31+32，30+31+32，…）", "\n请你求出这个序列的第N项的值（用10进制数表示）。", "\n例如，对于k=3，N=100，正确答案应该是981。", "\n【输入文件】", "\n输入文件sequence.in 只有1行，为2个正整数，用一个空格隔开：", "\nk N", "\n（k、N的含义与上述的问题描述一致，且3≤k≤15，10≤N≤1000）。", "\n【输出文件】", "\n输出文件sequence.out 为计算结果，是一个正整数（在所有的测试数据中，结果均不超过2.1*109）。（整数前不要有空格和其他符号）。", "\n【输入样例】", "\n3 100", "\n【输出样例】", "\n981", "\nvar i,i2,g,sum,n:longint;", "\n    k:shortint;", "\n    bit:array[1..100]of shortint;//记录数的二次方的每个数位", "\nfunction fang(a,b:longint):longint; //求a的b次方", "\nvar a2:longint;", "\nbegin", "\n  a2:=a;", "\n  for i:=1 to b do", "\n   a:=a*a2;", "\n  exit(a);", "\nend;", "\nprocedure er(c:longint); //求c的二进制(倒序的)", "\nbegin", "\n  g:=0;//record times", "\n  while c<>0 do", "\n  begin", "\n    inc(g);", "\n    bit[g]:=c mod 2;", "\n    c:=c div 2;", "\n  end;", "\nend;", "\nbegin", "\n  read(k,n);", "\n  er(n);", "\n  sum:=1;", "\n  i2:=0;", "\n  for i:=g downto 1 do//倒序处理bit", "\n  begin", "\n    inc(i2);", "\n    if bit[i]=1 then begin", "\n                       if i2=1 then continue;//已将sum赋值1，所以无需计算0次方了", "\n                       sum:=fang(k,i2)+sum;", "\n                     end;", "\n  end;", "\n  write(sum);", "\nend.", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "[url]可以在一个Servlet里执行ant脚本在服务器本地执行 ----小弟用ANT不久,能否详解?[/url]\r\n在Servlet调用\r\nRuntime.getRuntime().exec(antcommand);//ant command string", "Konwledge_Point": "主程序", "Question": ["ant远程重启tomcat疑问", ["有没有ant远程重启tomcat的方法啊..网上找到的都是本地启动tomcat方法...", "\n希望各位大虾指导哈....", "\n[b]问题补充：[/b]", "\nbohemia:", "\n我是说重起远程的TOMCAT,不是重起TOMCAT下的某个应用啊... ", "\n[b]问题补充：[/b]", "\n各位大虾 这个能不能实现啊..如果不能实现 ,,能不能提示哈我啊..我也不用白费时间去网上搜索了..", "\n[b]问题补充：[/b]", "\n貌似说ANT的telent能行..但是还没找到具体怎么用,不知道哪位用过", "\n[b]问题补充：[/b]", "\nlewhwa:", "\n你给的方法,应该是启动本地的吧.如果我要远程重启服务器的tomcat该如何,请指教", "\n[b]问题补充：[/b]", "\n可以在一个Servlet里执行ant脚本在服务器本地执行 ----小弟用ANT不久,能否详解?", "\n[b]问题补充：[/b]", "\n把问题补充完整哈:", "\n1.写了个ANT实现把本地代码打成*war然后替换服务器上正在运行的项目.小弟思路是先undeploy服务器上项目,然后再deploy新的,昨天在各位大虾帮助下终于达到目的.", "\n2.还没来得及高兴,如果在本地执行一次ANT,成功后又继续执行一才ANT,这样5次左右,服务器的TOMCAT会报:java.lang.OutOfMemoryError: PermGen 错误,上网查询知道解决问题方法是增大服务器的TOMCAT内存.", "\n3.但是有个问题就疑问了:即使我增大了服务器的TOMCAT内存,也许我连续5次不会报错了,但是我也许10次或者更多次,会不会报错? ", "\n4.网上说:\"Class在被Loader时就会被放到PermGen space中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误\"", "\n5.所以小弟就认为执行每次ANT的时候可以通过重启tomcat来解决,小弟疑问是:像我这种情况,在每次ANT后,服务器的PermGen space加载class,[color=red]在不重起tomcat情况下[/color],我下次使用ANT的时候,PermGen space会不会实现累计加载,就像本来100个地方,第一次用了20个地方,第2次用了20个地方,所以说第5次就出错.", "\n望各位大虾给我上一课啊..."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;循环条件有误&amp;#xff0c;应为while(n--)&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c 按等级统计学生成绩 输出错误", ["返回的不及格人数不对。", "\n", "题目主要：", "\n", "实现接口    int set_grade( struct student *p, int n );", "\n", "\n", "主程序", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "define", " MAXN 10", "\n\n", "struct", " ", "student", "{\n    ", "int", " num;\n    ", "char", " name[", "20", "];\n    ", "int", " score;\n    ", "char", " grade;\n};\n\n", "int", " ", "set_grade", "( ", "struct", " student *p, ", "int", " n )", ";\n\n", "int", " ", "main", "()", "\n", "{   ", "struct", " ", "student", " stu[MAXN], *ptr;\n    ", "int", " n, i, count;\n\n    ptr = stu;\n    ", "scanf", "(", "\"%d\\n\"", ", &n);\n    ", "for", "(i = ", "0", "; i < n; i++){\n       ", "scanf", "(", "\"%d%s%d\"", ", &stu[i].num, stu[i].name, &stu[i].score);\n    } \n   count = ", "set_grade", "(ptr, n);\n   ", "printf", "(", "\"The count for failed (<60): %d\\n\"", ", count);\n   ", "printf", "(", "\"The grades:\\n\"", "); \n   ", "for", "(i = ", "0", "; i < n; i++)\n       ", "printf", "(", "\"%d %s %c\\n\"", ", stu[i].num, stu[i].name, stu[i].grade);\n    ", "return", " ", "0", ";\n}\n\n", "/* 你的代码将被嵌在这里 */", "\n", "\n", "功能函数：", "\n", "int set_grade( struct student *p, int n ){\n    int ", "count", "=0;\n    ", "while", "((*p).num!=0){\n        ", "if", "((*p).score<=59&&(*p).score>=0){\n            (*p).", "grade", "=", "'D'", ";\n            count++;\n        }", "else", " ", "if", "((*p).score>=60&&(*p).score<=69){\n            (*p).", "grade", "=", "'C'", ";\n        }", "else", " ", "if", "((*p).score>=70&&(*p).score<=84){\n            (*p).", "grade", "=", "'B'", ";\n        }", "else", " ", "if", "((*p).score>=85&&(*p).score<=100){\n            (*p).", "grade", "=", "'A'", ";\n        }\n        p++;\n    }\n    return count;\n}\n\n", "\n", "测试用例：", "10", "31001 annie 85", "31002 bonny 75", "31003 carol 70", "31004 dan 84", "31005 susan 90", "31006 paul 69", "31007 pam 60", "31008 apple 50", "31009 nancy 100", "31010 bob 78", "\n", "预期输出：", "The count for failed (<60): 1", "The grades:", "31001 annie A", "31002 bonny B", "31003 carol B", "31004 dan B", "31005 susan A", "31006 paul C", "31007 pam C", "31008 apple D", "31009 nancy A", "31010 bob B", "\n", "实际输出：", "The count for failed (<60): 2", "The grades:", "31001 annie A", "31002 bonny B", "31003 carol B", "31004 dan B", "31005 susan A", "31006 paul C", "31007 pam C", "31008 apple D", "31009 nancy A", "31010 bob B"]], "Tag": "程序设计"}
{"Answer": "```\r\n for (int i1 = 0; i1 &lt; 17; i1++) {\r\n            P.add(A.get(i1));\r\n            A.remove(i1);\r\n        }\r\n\r\n```\r\n这里一边遍历 A 一边 remove 。那么 A 最终里面的长度就不会是 17 的，当然会越界了。", "Konwledge_Point": "主程序", "Question": ["ArrayList集合索引越界异常", ["在做斗地主发牌案例时  我先定义了54张牌，存储到一个集合里", "\n\n", "ArrayList<String>Pai=new ArrayList<>();\n    ArrayList<String>HuaSe=new ArrayList<>();\n    ArrayList<String>DaXiao=new ArrayList<>();\n    public ArrayList<String> maiPai(){\n        HuaSe.add(\"♥\");\n        HuaSe.add(\"♠\");\n        HuaSe.add(\"♦\");\n        HuaSe.add(\"♣\");\n        DaXiao.add(\"2\");\n        DaXiao.add(\"3\");\n        DaXiao.add(\"4\");\n        DaXiao.add(\"5\");\n        DaXiao.add(\"6\");\n        DaXiao.add(\"7\");\n        DaXiao.add(\"8\");\n        DaXiao.add(\"9\");\n        DaXiao.add(\"10\");\n        DaXiao.add(\"J\");\n        DaXiao.add(\"Q\");\n        DaXiao.add(\"K\");\n        DaXiao.add(\"A\");\n        for (int i = 0; i < 4; i++) {\n            for (int k = 0; k < 13; k++) {\n                Pai.add(HuaSe.get(i)+DaXiao.get(k));\n            }\n\n        }\n\n        Pai.add(\"小王\");\n        Pai.add(\"大王\");\n        return Pai;\n\n    }\n\n\n\n", "\n\n", "然后写了洗牌和发牌的代码   每个人一共发十七张  最后留三张底牌用叫地主的代码实现", "\n\n", " public void xiPai(ArrayList<String> list){\n        Collections.shuffle(list);\n    }\n\n\n public ArrayList<String> faPai(ArrayList<String> A){\n        ArrayList<String> P =new ArrayList<>();\n        for (int i1 = 0; i1 < 17; i1++) {\n            P.add(A.get(i1));\n            A.remove(i1);\n        }\n        return P;\n    }\n    public ArrayList<String> jiaoDiZhu(ArrayList<String>A){\n        ArrayList<String>Q=new ArrayList<>();\n        for (int i = 0; i < 3; i++) {\n            Q.add(A.get(i));\n            A.remove(i);\n\n        }\n        return Q;\n\n    }\n\n", "\n\n", "上面的代码 我都写在一个Poker类里", "\n并在主程序中new了一个DuChang；", "\n\n", "然后程序运行   定义了三个ArrayList进行接收扑克；", "\n\n", " public static void main(String[] args) {\n        Poker DuChang = new Poker();\n        ArrayList<String> lbs = new ArrayList<>();\n        ArrayList<String> zsy = new ArrayList<>();\n        ArrayList<String> lzq = new ArrayList<>();\n        ArrayList<String> XiYang = DuChang.maiPai();\n        DuChang.xiPai(XiYang);\n\n        lbs = DuChang.faPai(XiYang);\n        System.out.println(lbs);\n\n\n        lzq = DuChang.faPai(XiYang);\n        System.out.println(lzq);\n\n\n        zsy=DuChang.faPai(XiYang);\n        System.out.println(zsy);\n", "\n\n", "然后告诉我在最后一个人发牌的时候索引越界异常", "\n\n", "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index 10 out of bounds for length 10\n\n    at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\nat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\nat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\nat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\n    at java.base/java.util.ArrayList.get(ArrayList.java:458)\n\n    at cn.cm.DouDiZhu.Poker.faPai(Poker.java:46)\n\nat cn.cm.DouDiZhu.YouXi.main(YouXi.java:24)\n", "\n\n", "可是最后一个人发牌的时候还有20张牌在Pai的集合里啊   我只发17张，怎么会越界异常呢   而且在给前两个人发牌的时候为什么没有出现越界异常呢    后来我吧发17 张牌改成发13张   异常消失  想了两个小时  是在想不出来为什么了  求大神解惑"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c#\"&gt;&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Citizen&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string ID;\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string Name;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string Gender;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string Age;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string Birthplace;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; string Familyaddress;\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Citizen&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{ }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your id:&amp;#34;&lt;/span&gt;);\n        ID &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your name:&amp;#34;&lt;/span&gt;);\n        Name &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your gender:&amp;#34;&lt;/span&gt;);\n        Gender &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your age:&amp;#34;&lt;/span&gt;);\n        Age &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your birthplace:&amp;#34;&lt;/span&gt;);\n        Birthplace &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input your familyaddress:&amp;#34;&lt;/span&gt;);\n        Familyaddress &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        string info &amp;#61; string.&lt;span class=\"hljs-built_in\"&gt;Format&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ID:{0}\\r\\nName:{1}\\r\\nGender:{2}\\r\\nAge:{3}\\r\\nBirthplace:{4}\\r\\nFamilyaddress:{5}&amp;#34;&lt;/span&gt;,\n            ID, Name, Gender, Age, Birthplace, Familyaddress);\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(info);\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string[] args)&lt;/span&gt;\n    &lt;/span&gt;{\n        Citizen citizen &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Citizen&lt;/span&gt;();\n        citizen.&lt;span class=\"hljs-built_in\"&gt;Input&lt;/span&gt;();\n        citizen.&lt;span class=\"hljs-built_in\"&gt;Print&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["请问此题如何将我输入的结果打印在屏幕上(语言-c#)", ["问题遇到的现象和发生背景", "将对象初始化之后可以输入但输出结果不正确", "问题相关代码", "using System;", "\n", "namespace _5", "{", "    class Program", "    {", "        static void Main(string[] args)", "        {", "            Citizen s = new Citizen();", "            s.Input();", "            s.Print();", "        }", "    }", "}", "\n", "using System;", "using System.Collections.Generic;", "using System.Text;", "\n", "namespace _5", "{", "    class Citizen", "    {", "        public string name;", "        public string Name", "        {", "            get", "            {", "                return name;", "            }", "        }", "        public string gender;", "        public string Gender", "        {", "            get", "            {", "                return gender;", "            }", "        }", "        public string age;", "        public string Age", "        {", "            get", "            {", "                return age;", "            }", "        }", "        public string birthplace;", "        public string BirthPlace", "        {", "            get", "            {", "                return birthplace;", "            }", "        }", "        public string id;", "        public string Id", "        {", "            get", "            {", "                return id;", "            }", "        }", "        public string familyaddress;", "        public string FamilyAddress", "        {", "            get", "            {", "                return familyaddress;", "            }", "        }", "        public Citizen()", "        {", "            name = \"David\";", "            gender = \"Male\";", "            age = \"20\";", "            birthplace = \"Nanyang,Henan\";", "            id = \"1000\";", "            familyaddress = \"0000\";", "        }", "        public void Input()", "        {", "            Console.WriteLine(\"Please input your name:\");", "            string a = Console.ReadLine();", "            Console.WriteLine(\"Please input your gender:\");", "            string b = Console.ReadLine();", "            Console.WriteLine(\"Please input your age:\");", "            string c = Console.ReadLine();", "            Console.WriteLine(\"Please input your birthplace:\");", "            string d = Console.ReadLine();", "            Console.WriteLine(\"Please input your id:\");", "            string e = Console.ReadLine();", "            Console.WriteLine(\"Please input your familyaddress:\");", "            string f = Console.ReadLine();", "        }", "        public void Print()", "        {", "            Console.WriteLine(\"Your name is:{0}\",\"a\");", "            Console.WriteLine();", "            Console.WriteLine(\"Your gender is:{0}\",\"b\");", "            Console.WriteLine();", "            Console.WriteLine(\"Your age is:{0}\",\"c\");", "            Console.WriteLine();", "            Console.WriteLine(\"Your birthplace is:{0}\",\"d\");", "            Console.WriteLine();", "            Console.WriteLine(\"Your id is:{0}\",\"e\");", "            Console.WriteLine();", "            Console.WriteLine(\"Your familyaddress is:{0}\",\"f\");", "            Console.WriteLine();", "        }", "    }", "}", "运行结果及报错内容", "Please input your name:", "1", "Please input your gender:", "2", "Please input your age:", "3", "Please input your birthplace:", "4", "Please input your id:", "5", "Please input your familyaddress:", "6", "Your name is:a", "\n", "Your gender is:b", "\n", "Your age is:c", "\n", "Your birthplace is:d", "\n", "Your id is:e", "\n", "Your familyaddress is:f", "我想要达到的结果", "在主程序中调用s.Print 输出s. Input 中输入的值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把#include_netx 这行注释掉  或者改成#include 试试&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/041899237646115.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["vs（c++）错误，c1021", ["错误代码为：", "\n", "\n\n```c++\n/\n\n\n", "#", "ifndef", " _SSP_STRING_H", "\n", "#", "define", " _SSP_STRING_H 1", "\n#include_netx ", "\"string.h\"", "\n\n", "#", "if", " __SSP_FORTIFY_LEVEL > 0", "\n\n", "#", "undef", " memcpy", "\n", "#", "undef", " memmove", "\n", "#", "undef", " memset", "\n", "#", "undef", " strcat", "\n", "#", "undef", " strcpy", "\n", "#", "undef", " strncat", "\n", "#", "undef", " strncpy", "\n", "#", "undef", " mempcpy", "\n", "#", "undef", " stpcpy", "\n", "#", "undef", " bcopy", "\n", "#", "undef", " bzero", "\n\n", "#", "define", " memcpy(dest, src, len) \\\n  ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___memcpy_chk (dest, src, len, __ssp_bos0 (dest))        \\\n   : __memcpy_ichk (dest, src, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "void", " *\n__memcpy_ichk (", "void", " *__restrict__ __dest, ", "const", " ", "void", " *__restrict__ __src,\n           ", "size_t", " __len)\n{\n  ", "return", " __builtin___memcpy_chk (__dest, __src, __len, __ssp_bos0 (__dest));\n}\n\n\n", "#", "define", " memmove(dest, src, len) \\\n  ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___memmove_chk (dest, src, len, __ssp_bos0 (dest))        \\\n   : __memmove_ichk (dest, src, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "void", " *\n__memmove_ichk (", "void", " *__dest, ", "const", " ", "void", " *__src, ", "size_t", " __len)\n{\n  ", "return", " __builtin___memmove_chk (__dest, __src, __len, __ssp_bos0 (__dest));\n}\n\n\n", "#", "define", " mempcpy(dest, src, len) \\\n  ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___mempcpy_chk (dest, src, len, __ssp_bos0 (dest))    \\\n   : __mempcpy_ichk (dest, src, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "void", " *\n__mempcpy_ichk (", "void", " *__restrict__ __dest, ", "const", " ", "void", " *__restrict__ __src,\n        ", "size_t", " __len)\n{\n  ", "return", " __builtin___mempcpy_chk (__dest, __src, __len, __ssp_bos0 (__dest));\n}\n\n\n", "#", "define", " memset(dest, ch, len) \\\n  ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___memset_chk (dest, ch, len, __ssp_bos0 (dest))        \\\n   : __memset_ichk (dest, ch, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "void", " *\n__memset_ichk (", "void", " *__dest, ", "int", " __ch, ", "size_t", " __len)\n{\n  ", "return", " __builtin___memset_chk (__dest, __ch, __len, __ssp_bos0 (__dest));\n}\n\n", "#", "define", " bcopy(src, dest, len) ((void) \\\n ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___memmove_chk (dest, src, len, __ssp_bos0 (dest))    \\\n   : __memmove_ichk (dest, src, len)))", "\n", "#", "define", " bzero(dest, len) ((void) \\\n  ((__ssp_bos0 (dest) != (size_t) -1)                    \\\n   ? __builtin___memset_chk (dest, ", "'\\0'", ", len, __ssp_bos0 (dest))    \\\n   : __memset_ichk (dest, ", "'\\0'", ", len)))", "\n\n\n", "#", "define", " strcpy(dest, src) \\\n  ((__ssp_bos (dest) != (size_t) -1)                    \\\n   ? __builtin___strcpy_chk (dest, src, __ssp_bos (dest))        \\\n   : __strcpy_ichk (dest, src))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "char", " *\n__strcpy_ichk (", "char", " *__restrict__ __dest, ", "const", " ", "char", " *__restrict__ __src)\n{\n  ", "return", " __builtin___strcpy_chk (__dest, __src, __ssp_bos (__dest));\n}\n\n\n", "#", "define", " stpcpy(dest, src) \\\n  ((__ssp_bos (dest) != (size_t) -1)                    \\\n   ? __builtin___stpcpy_chk (dest, src, __ssp_bos (dest))        \\\n   : __stpcpy_ichk (dest, src))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "char", " *\n__stpcpy_ichk (", "char", " *__restrict__ __dest, ", "const", " ", "char", " *__restrict__ __src)\n{\n  ", "return", " __builtin___stpcpy_chk (__dest, __src, __ssp_bos (__dest));\n}\n\n\n", "#", "define", " strncpy(dest, src, len) \\\n  ((__ssp_bos (dest) != (size_t) -1)                    \\\n   ? __builtin___strncpy_chk (dest, src, len, __ssp_bos (dest))        \\\n   : __strncpy_ichk (dest, src, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "char", " *\n__strncpy_ichk (", "char", " *__restrict__ __dest, ", "const", " ", "char", " *__restrict__ __src,\n        ", "size_t", " __len)\n{\n  ", "return", " __builtin___strncpy_chk (__dest, __src, __len, __ssp_bos (__dest));\n}\n\n\n", "#", "define", " strcat(dest, src) \\\n  ((__ssp_bos (dest) != (size_t) -1)                    \\\n   ? __builtin___strcat_chk (dest, src, __ssp_bos (dest))        \\\n   : __strcat_ichk (dest, src))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "char", " *\n__strcat_ichk (", "char", " *__restrict__ __dest, ", "const", " ", "char", " *__restrict__ __src)\n{\n  ", "return", " __builtin___strcat_chk (__dest, __src, __ssp_bos (__dest));\n}\n\n\n", "#", "define", " strncat(dest, src, len) \\\n  ((__ssp_bos (dest) != (size_t) -1)                    \\\n   ? __builtin___strncat_chk (dest, src, len, __ssp_bos (dest))        \\\n   : __strncat_ichk (dest, src, len))", "\n", "static", " ", "inline", " __attribute__((__always_inline__)) ", "char", " *\n__strncat_ichk (", "char", " *__restrict__ __dest, ", "const", " ", "char", " *__restrict__ __src,\n        ", "size_t", " __len)\n{\n  ", "return", " __builtin___strncat_chk (__dest, __src, __len, __ssp_bos (__dest));\n}\n\n", "#", "endif", " ", "/* __SSP_FORTIFY_LEVEL > 0 */", "\n", "#", "endif", " ", "/* _SSP_STRING_H */", "\n\n", "\n", "\n这是一个头文件文件在使用过程中出现了c1021的错误（非vs原头文件）这是DEV—c++的头文件，不知道为什么被VS2022拿来用了\n错误    ：C1021    无效的预处理器命令“include_netx”    \n为支持的程序：\n\n```c++\n", "// 游戏.cpp : 定义应用程序的入口点。", "\n", "//", "\n\n", "#", "include", " ", "\"framework.h\"", "\n", "#", "include", " ", "\"游戏.h\"", "\n\n", "#", "define", " MAX_LOADSTRING ", "100", "\n\n", "// 全局变量:", "\n", "HINSTANCE", " hInst", ";                                // 当前实例", "\nWCHAR szTitle[MAX_LOADSTRING]", ";                  // 标题栏文本", "\nWCHAR szWindowClass[MAX_LOADSTRING]", ";            // 主窗口类名", "\n\n", "// 此代码模块中包含的函数的前向声明:", "\nATOM                MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")", ";", "\nBOOL                InitInstance(", "HINSTANCE", ", ", "int", ")", ";", "\nLRESULT CALLBACK    WndProc(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\nINT_PTR CALLBACK    About(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\n\n", "int", " APIENTRY wWinMain(_In_ ", "HINSTANCE", " ", "hInstance", ",\n                     _In_opt_ ", "HINSTANCE", " hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ ", "int", "       nCmdShow)\n{\n    UNREFERENCED_PARAMETER(hPrevInstance)", ";", "\n    UNREFERENCED_PARAMETER(lpCmdLine)", ";", "\n\n    ", "// ", "TODO:", " 在此处放置代码。", "\n\n    ", "// 初始化全局字符串", "\n    LoadStringW(", "hInstance", ", IDS_APP_TITLE, szTitle, MAX_LOADSTRING)", ";", "\n    LoadStringW(", "hInstance", ", IDC_MY, szWindowClass, MAX_LOADSTRING)", ";", "\n    MyRegisterClass(", "hInstance", ")", ";", "\n\n    ", "// 执行应用程序初始化:", "\n    ", "if", " (!InitInstance (", "hInstance", ", nCmdShow))\n    {\n        ", "return", " FALSE", ";", "\n    }\n\n    HACCEL hAccelTable = LoadAccelerators(", "hInstance", ", MAKEINTRESOURCE(IDC_MY))", ";", "\n\n    MSG msg", ";", "\n\n    ", "// 主消息循环:", "\n    ", "while", " (GetMessage(&msg, nullptr, ", "0", ", ", "0", "))\n    {\n        ", "if", " (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))\n        {\n            TranslateMessage(&msg)", ";", "\n            DispatchMessage(&msg)", ";", "\n        }\n    }\n\n    ", "return", " (", "int", ") msg.wParam", ";", "\n}\n\n\n\n", "//", "\n", "//  函数: MyRegisterClass()", "\n", "//", "\n", "//  目标: 注册窗口类。", "\n", "//", "\nATOM MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")\n{\n    WNDCLASSEXW wcex", ";", "\n\n    wcex.cbSize = sizeof(WNDCLASSEX)", ";", "\n\n    wcex.style          = CS_HREDRAW | CS_VREDRAW", ";", "\n    wcex.lpfnWndProc    = WndProc", ";", "\n    wcex.cbClsExtra     = ", "0", ";", "\n    wcex.cbWndExtra     = ", "0", ";", "\n    wcex.hInstance      = ", "hInstance", ";", "\n    wcex.hIcon          = LoadIcon(", "hInstance", ", MAKEINTRESOURCE(IDI_MY))", ";", "\n    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW)", ";", "\n    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+", "1", ")", ";", "\n    wcex.lpszMenuName   = MAKEINTRESOURCEW(IDC_MY)", ";", "\n    wcex.lpszClassName  = szWindowClass", ";", "\n    wcex.hIconSm        = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL))", ";", "\n\n    ", "return", " RegisterClassExW(&wcex)", ";", "\n}\n\n", "//", "\n", "//   函数: InitInstance(HINSTANCE, int)", "\n", "//", "\n", "//   目标: 保存实例句柄并创建主窗口", "\n", "//", "\n", "//   注释:", "\n", "//", "\n", "//        在此函数中，我们在全局变量中保存实例句柄并", "\n", "//        创建和显示主程序窗口。", "\n", "//", "\nBOOL InitInstance(", "HINSTANCE", " ", "hInstance", ", ", "int", " nCmdShow)\n{\n   hInst = ", "hInstance", "; // 将实例句柄存储在全局变量中", "\n\n   ", "HWND", " ", "hWnd", " = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,\n      CW_USEDEFAULT, ", "0", ", CW_USEDEFAULT, ", "0", ", nullptr, nullptr, ", "hInstance", ", nullptr)", ";", "\n\n   ", "if", " (!", "hWnd", ")\n   {\n      ", "return", " FALSE", ";", "\n   }\n\n   ShowWindow(", "hWnd", ", nCmdShow)", ";", "\n   UpdateWindow(", "hWnd", ")", ";", "\n\n   ", "return", " TRUE", ";", "\n}\n\n", "//", "\n", "//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)", "\n", "//", "\n", "//  目标: 处理主窗口的消息。", "\n", "//", "\n", "//  WM_COMMAND  - 处理应用程序菜单", "\n", "//  WM_PAINT    - 绘制主窗口", "\n", "//  WM_DESTROY  - 发送退出消息并返回", "\n", "//", "\n", "//", "\nLRESULT CALLBACK WndProc(", "HWND", " ", "hWnd", ", UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    ", "switch", " (message)\n    {\n    ", "case", " WM_COMMAND:\n        {\n            ", "int", " wmId = LOWORD(", "wParam", ")", ";", "\n            ", "// 分析菜单选择:", "\n            ", "switch", " (wmId)\n            {\n            ", "case", " IDM_ABOUT:\n                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), ", "hWnd", ", About)", ";", "\n                ", "break", ";", "\n            ", "case", " IDM_EXIT:\n                DestroyWindow(", "hWnd", ")", ";", "\n                ", "break", ";", "\n            ", "default", ":\n                ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n            }\n        }\n        ", "break", ";", "\n    ", "case", " WM_PAINT:\n        {\n            PAINTSTRUCT ps", ";", "\n            ", "HDC", " ", "hdc", " = BeginPaint(", "hWnd", ", &ps)", ";", "\n            ", "// ", "TODO:", " 在此处添加使用 hdc 的任何绘图代码...", "\n            EndPaint(", "hWnd", ", &ps)", ";", "\n        }\n        ", "break", ";", "\n    ", "case", " WM_DESTROY:\n        PostQuitMessage(", "0", ")", ";", "\n        ", "break", ";", "\n    ", "default", ":\n        ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n    }\n    ", "return", " ", "0", ";", "\n}\n\n", "// “关于”框的消息处理程序。", "\nINT_PTR CALLBACK About(", "HWND", " hDlg, UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    UNREFERENCED_PARAMETER(", "lParam", ")", ";", "\n    ", "switch", " (message)\n    {\n    ", "case", " WM_INITDIALOG:\n        ", "return", " (INT_PTR)TRUE", ";", "\n\n    ", "case", " WM_COMMAND:\n        ", "if", " (LOWORD(", "wParam", ") == IDOK || LOWORD(", "wParam", ") == IDCANCEL)\n        {\n            EndDialog(hDlg, LOWORD(", "wParam", "))", ";", "\n            ", "return", " (INT_PTR)TRUE", ";", "\n        }\n        ", "break", ";", "\n    }\n    ", "return", " (INT_PTR)FALSE", ";", "\n}\n\n", "\n", "这个文件未出错", "\n", "有人知道错处在哪里嘛？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你先设置断点&amp;#xff0c;或者print&amp;#xff0c;看看函数到底执行了没有&amp;#xff0c;是因为你写错参数了导致函数根本没有走进去&amp;#xff08;没有匹配到elif&amp;#xff09;&lt;br /&gt;还是函数执行了&amp;#xff0c;但是因为写错了&amp;#xff0c;导致界面上没有反应&lt;br /&gt;写代码不自己调试&amp;#xff0c;全靠猜&amp;#xff0c;那你上哪猜那么准每次都能猜对呀&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pygame 飞机大战 遇到问题", ["问题遇到的现象和发生背景", "\n", "如图所示，本意是按空格飞机能够射击，但实际并没有", "\n", "问题相关代码，请勿粘贴截图", "\n", "# 这个是主程序", "\n\n ", "import", " pygame\n", "from", " plane_sprites ", "import", " *\n\n", "class", " ", "PlaneGame", "(", "object", "):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "# 创建游戏窗口", "\n        pygame.init()\n        self.screen = pygame.display.set_mode(SCREEN_RECT.size)\n        ", "# background = pygame.image.load(\"./images/background.png\")", "\n        ", "# screen.blit(background, (0, 0))", "\n\n        ", "# 创建游戏时钟", "\n        self.clock = pygame.time.Clock()\n        ", "# 调用私有方法 精灵和精灵组的创建", "\n        self.__creat__sprites()\n        ", "# 设置定时器事件 - 创建敌机", "\n        pygame.time.set_timer(CREATE_ENEMY_EVENT, ", "1000", ")\n\n    ", "def", " ", "__creat__sprites", "(", "self", "):\n        bg1 = Background()\n        bg2 = Background(", "True", ")\n        ", "# bg2.rect.y = -bg2.rect.height", "\n        self.back_group = pygame.sprite.Group(bg1, bg2)\n        self.enemy_group = pygame.sprite.Group()\n        self.hero = HeroPlane()\n        self.hero_group = pygame.sprite.Group(self.hero)\n\n\n\n    ", "def", " ", "start_game", "(", "self", "):\n        ", "while", " ", "True", ":\n            ", "# 设置刷新帧率", "\n            self.clock.tick(CLOCK_RATE)\n\n            ", "# 事件监听", "\n            self.__event_handler()\n            ", "# 碰撞检测", "\n            ", "# 更新/绘制精灵组", "\n            self.__update_sprites()\n            ", "# 更新显示", "\n            pygame.display.update()\n\n\n\n    ", "def", " ", "__event_handler", "(", "self", "):\n\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", " == pygame.QUIT:\n                ", "# 调用静态方法 __game_over()", "\n                PlaneGame.__game_over()\n\n            ", "elif", " event.", "type", " == CREATE_ENEMY_EVENT:\n            ", "# 定时执行代码", "\n\n                ", "# 创建敌机精灵", "\n                enemy = Enemy()\n                ", "# 添加敌机精灵", "\n                self.enemy_group.add(enemy)\n\n        ", "# 按下方向键和空格键能进行操作", "\n        key_pressed = pygame.key.get_pressed()\n        ", "# 上下左右", "\n        ", "if", " key_pressed[pygame.K_RIGHT]:\n            self.hero.speed = ", "2", "\n        ", "elif", " key_pressed[pygame.K_LEFT]:\n            self.hero.speed = -", "2", "\n        ", "elif", " key_pressed[pygame.K_UP]:\n            self.hero.yspeed =-", "2", "\n        ", "elif", " key_pressed[pygame.K_DOWN]:\n            self.hero.yspeed = ", "2", "\n        ", "# 空格射击", "\n        ", "elif", " key_pressed[pygame.K_SPACE]:\n            self.hero.fire()\n\n        ", "else", ":\n            ", "# 这样英雄不会一直飞", "\n            self.hero.speed = ", "0", "\n            self.hero.yspeed = ", "0", "\n\n\n    ", "def", " ", "__check_collide", "(", "self", "):\n        ", "pass", "\n\n    ", "def", " ", "__update_sprites", "(", "self", "):\n            self.back_group.update()\n            self.back_group.draw(self.screen)\n            self.enemy_group.update()\n            self.enemy_group.draw(self.screen)\n            self.hero_group.update()\n            self.hero_group.draw(self.screen)\n            self.hero.bullet_group.update()\n            self.hero.bullet_group.draw(self.screen)\n\n\n", "    @staticmethod", "\n    ", "def", " ", "__game_over", "():\n        ", "print", "(", "\"游戏结束\"", ")\n        pygame.quit()\n        exit()\n\n", "if", " __name__ == ", "\"__main__\"", ":\n    ", "\"\"\"\"飞机大战主程序\"\"\"", "\n\n    ", "# 创建游戏对象", "\n    game = PlaneGame()\n    ", "# 启动游戏", "\n    game.start_game()\n\n\n", "#这个是工具模块", "\n\n", "import", " pygame\n", "import", " random\n\n", "#常量要全部大写 屏幕大小常量", "\nSCREEN_RECT = pygame.Rect(", "0", ", ", "0", ", ", "480", ", ", "700", ")\n", "# 刷新帧率常量", "\nCLOCK_RATE = ", "60", "\n", "# 创建敌机定时器常量", "\nCREATE_ENEMY_EVENT = pygame.USEREVENT\n\n\n", "class", " ", "GameSprite", "(pygame.sprite.Sprite):\n    ", "\"\"\"\"飞机大战游戏精灵\"\"\"", "\n    ", "def", " ", "__init__", "(", "self, image_name, speed = ", "1", "):\n        ", "# 调用父类的初始化方法", "\n        ", "super", "().__init__()\n        self.image = pygame.image.load(image_name)\n        self.rect = self.image.get_rect()\n        self.speed = speed\n\n    ", "def", " ", "update", "(", "self", "):\n        self.rect.y += self.speed\n\n", "class", " ", "Background", "(", "GameSprite", "):\n    ", "\"\"\"游戏背景\"\"\"", "\n    ", "def", " ", "__init__", "(", "self, is_alt = ", "False", "):\n        ", "super", "().__init__(", "\"./images/background.png\"", ")\n        ", "if", " is_alt:\n            self.rect.y = -self.rect.height\n        ", "# else:", "\n        ", "#     self.rect.y = 0", "\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "# 1.调用父类方法实现", "\n        ", "super", "().update()\n        ", "# 2.判断图像是否移出屏幕，如果移出屏幕，将图像移到屏幕上方", "\n        ", "if", " self.rect.y >= SCREEN_RECT.height:\n            self.rect.y = -self.rect.height\n\n\n\n", "class", " ", "Enemy", "(", "GameSprite", "):\n    ", "# 敌机精灵", "\n\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "().__init__(", "\"./images/enemy1.png\"", ")\n        ", "# 随机指定敌机初始速度", "\n        self.speed = random.randint(", "2", ",", "5", ")\n\n        self.rect.bottom = ", "0", "\n\n        ", "# 随机指定敌机初始位置", "\n        self.rect.x = random.randint(", "0", ",SCREEN_RECT.width - self.rect.width)\n\n\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "# 调用父类方法实现", "\n        ", "super", "().update()\n        ", "# 判断敌机是否飞出屏幕，如果是，从精灵组删除敌机", "\n        ", "if", " self.rect.y >= SCREEN_RECT.height:\n            ", "# kill方法可以将精灵从所有精灵组中移出", "\n            self.kill()\n\n\n", "class", " ", "Bullet", "(", "GameSprite", "):\n    ", "# 定义子弹精灵", "\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "# 调用父类方法", "\n        ", "super", "().__init__(", "\"./images/bullet1.png\"", ", speed = -", "2", ")\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "# 调用父类方法，让子弹沿垂直方向向上飞行", "\n        ", "super", "().update()\n        ", "# 判断是否飞出屏幕，如果是，从精灵组删除", "\n        ", "if", " self.rect.bottom <= SCREEN_RECT.bottom:\n            self.kill()\n\n\n", "class", " ", "HeroPlane", "(", "GameSprite", "):\n    ", "#定义英雄精灵", "\n\n    ", "def", " ", "__init__", "(", "self, yspeed = ", "0", "):\n        ", "#英雄上下飞的速度", "\n        self.yspeed = yspeed\n        ", "super", "().__init__(", "\"./images/me1.png\"", ", speed = ", "0", ")\n        ", "#指定英雄初始位置", "\n        self.rect.centerx = SCREEN_RECT.centerx\n        self.rect.bottom = SCREEN_RECT.bottom - ", "120", "\n        self.bullet_group = pygame.sprite.Group()\n\n    ", "def", " ", "update", "(", "self", "):\n\n        ", "# for i in range(SCREEN_RECT.x, SCREEN_RECT.width - self.rect.width):", "\n        self.rect.x += self.speed\n        ", "# 控制英雄不能离开屏幕", "\n        ", "if", " self.rect.x < SCREEN_RECT.x:\n            self.rect.x = SCREEN_RECT.x\n        ", "elif", " self.rect.right > SCREEN_RECT.right:\n            self.rect.right = SCREEN_RECT.right\n\n        ", "# for m in range(SCREEN_RECT.y, SCREEN_RECT.height):", "\n        self.rect.y += self.yspeed\n        ", "if", " self.rect.y < SCREEN_RECT.y:\n            self.rect.y = SCREEN_RECT.y\n        ", "elif", " self.rect.bottom > SCREEN_RECT.bottom:\n            self.rect.bottom = SCREEN_RECT.bottom\n\n    ", "# 用子弹射击", "\n    ", "def", " ", "fire", "(", "self", "):\n        ", "# 创建子弹精灵", "\n        bullet = Bullet()\n        ", "#设置子弹精灵位置", "\n        bullet.rect.centerx = self.rect.centerx\n        bullet.rect.bottom = self.rect.y - ", "20", "\n        ", "# 创建子弹精灵组", "\n        self.bullet_group.add(bullet)\n", "\n", "运行结果及报错内容", "\n", "调试了一番发现fire函数没有调用", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;随便找一个支持屏幕取色的开源软件参考其相关源代码片段&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["win32窗口 设置透明窗口  WM_PAINT中分析透明窗口中的颜色，发现还是白色！", ["问题遇到的现象和发生背景", "\n", "刚学编程一个月，怕听不懂，麻烦解答详细些，谢谢！", "做个分析别的窗口图像颜色并画线的程序，win32窗口， 设置透明窗口，  鼠标键盘都穿透，WM_PAINT中分析透明窗口中别的窗口中的颜色，发现分析还是Win32窗口的白色背景色！", "\n", "问题相关代码，请勿粘贴截图", "\n", "代码如下：", "\n", "// Win32Project2.cpp : 定义应用程序的入口点。", "\n", "//", "\n\n", "#", "include", " ", "\"stdafx.h\"", "\n", "#", "include", " ", "\"Win32Project2.h\"", "\n", "#", "include", " <iostream>", "\n", "#", "include", " <cmath>", "\n\n\n", "#", "define", " MAX_LOADSTRING ", "100", "\n\n\n", "// 全局变量: ", "\n", "HINSTANCE", " hInst", ";                                // 当前实例", "\nWCHAR szTitle[MAX_LOADSTRING]", ";                  // 标题栏文本", "\nWCHAR szWindowClass[MAX_LOADSTRING]", ";            // 主窗口类名", "\n\n\n\n\n", "// 此代码模块中包含的函数的前向声明: ", "\nATOM                MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")", ";", "\nBOOL                InitInstance(", "HINSTANCE", ", ", "int", ")", ";", "\nLRESULT CALLBACK    WndProc(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\nINT_PTR CALLBACK    About(", "HWND", ", UINT, ", "WPARAM", ", ", "LPARAM", ")", ";", "\n\n", "int", " APIENTRY wWinMain(_In_ ", "HINSTANCE", " ", "hInstance", ",\n                     _In_opt_ ", "HINSTANCE", " hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ ", "int", "       nCmdShow)\n{\n    UNREFERENCED_PARAMETER(hPrevInstance)", ";", "\n    UNREFERENCED_PARAMETER(lpCmdLine)", ";", "\n\n    ", "// ", "TODO:", " 在此放置代码。", "\n\n    ", "// 初始化全局字符串", "\n    LoadStringW(", "hInstance", ", IDS_APP_TITLE, szTitle, MAX_LOADSTRING)", ";", "\n    LoadStringW(", "hInstance", ", IDC_WIN32PROJECT2, szWindowClass, MAX_LOADSTRING)", ";", "\n    MyRegisterClass(", "hInstance", ")", ";", "\n\n    ", "// 执行应用程序初始化: ", "\n    ", "if", " (!InitInstance (", "hInstance", ", nCmdShow))\n    {\n        ", "return", " FALSE", ";", "\n    }\n\n    HACCEL hAccelTable = LoadAccelerators(", "hInstance", ", MAKEINTRESOURCE(IDC_WIN32PROJECT2))", ";", "\n\n    MSG msg", ";", "\n\n    ", "// 主消息循环: ", "\n    ", "while", " (GetMessage(&msg, nullptr, ", "0", ", ", "0", "))\n    {\n        ", "if", " (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))\n        {\n            TranslateMessage(&msg)", ";", "\n            DispatchMessage(&msg)", ";", "\n        }\n    }\n\n    ", "return", " (", "int", ") msg.wParam", ";", "\n}\n\n\n\n", "//", "\n", "//  函数: MyRegisterClass()", "\n", "//", "\n", "//  目的: 注册窗口类。", "\n", "//", "\nATOM MyRegisterClass(", "HINSTANCE", " ", "hInstance", ")\n{\n    WNDCLASSEXW wcex", ";", "\n\n    wcex.cbSize = sizeof(WNDCLASSEX)", ";", "\n\n    wcex.style          = CS_HREDRAW | CS_VREDRAW", ";", "\n    wcex.lpfnWndProc    = WndProc", ";", "\n    wcex.cbClsExtra     = ", "0", ";", "\n    wcex.cbWndExtra     = ", "0", ";", "\n    wcex.hInstance      = ", "hInstance", ";", "\n    wcex.hIcon          = LoadIcon(", "hInstance", ", MAKEINTRESOURCE(IDI_WIN32PROJECT2))", ";", "\n    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW)", ";", "\n    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW + ", "1", ")", ";", "\n    wcex.lpszMenuName   = MAKEINTRESOURCEW(IDC_WIN32PROJECT2)", ";", "\n    wcex.lpszClassName  = szWindowClass", ";", "\n    wcex.hIconSm        = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL))", ";", "\n\n    ", "return", " RegisterClassExW(&wcex)", ";", "\n}\n\n", "//", "\n", "//   函数: InitInstance(HINSTANCE, int)", "\n", "//", "\n", "//   目的: 保存实例句柄并创建主窗口", "\n", "//", "\n", "//   注释: ", "\n", "//", "\n", "//        在此函数中，我们在全局变量中保存实例句柄并", "\n", "//        创建和显示主程序窗口。", "\n", "//", "\nBOOL InitInstance(", "HINSTANCE", " ", "hInstance", ", ", "int", " nCmdShow)\n{\n   hInst = ", "hInstance", "; // 将实例句柄存储在全局变量中", "\n\n   ", "HWND", " ", "hWnd", " = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,\n      CW_USEDEFAULT, ", "0", ", CW_USEDEFAULT, ", "0", ", nullptr, nullptr, ", "hInstance", ", nullptr)", ";", "\n\n   ", "if", " (!", "hWnd", ")\n   {\n      ", "return", " FALSE", ";", "\n   }\n   ShowWindow(", "hWnd", ", nCmdShow=", "3", ")", ";", "\n   UpdateWindow(", "hWnd", ")", ";", "\n\n   ", "return", " TRUE", ";", "\n}\n\n\n\n\n\n\n", "//", "\n", "//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)", "\n", "//", "\n", "//  目的:    处理主窗口的消息。", "\n", "//", "\n", "//  WM_COMMAND  - 处理应用程序菜单", "\n", "//  WM_PAINT    - 绘制主窗口", "\n", "//  WM_DESTROY  - 发送退出消息并返回", "\n", "//", "\n", "//", "\nLRESULT CALLBACK WndProc(", "HWND", " ", "hWnd", ", UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n", "//获取TQ句柄；", "\n\n\n    ", "switch", " (message)\n    {\n    ", "case", " WM_CREATE:\n    {\n        SetWindowLong(", "hWnd", ", GWL_EXSTYLE, GetWindowLong(", "hWnd", ", GWL_EXSTYLE) | WS_EX_LAYERED)", ";", "\n        SetLayeredWindowAttributes(", "hWnd", ", RGB(", "255", ", ", "255", ", ", "255", "), ", "255", ", LWA_ALPHA | LWA_COLORKEY)", ";", "\n    }\n    ", "case", " WM_COMMAND:\n        {\n            ", "int", " wmId = LOWORD(", "wParam", ")", ";", "\n            ", "// 分析菜单选择: ", "\n            ", "switch", " (wmId)\n            {\n            ", "case", " IDM_ABOUT:\n                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), ", "hWnd", ", About)", ";", "\n                ", "break", ";", "\n            ", "case", " IDM_EXIT:\n                DestroyWindow(", "hWnd", ")", ";", "\n                ", "break", ";", "\n            ", "default", ":\n                ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n            }\n        }\n        ", "break", ";", "\n    ", "case", " WM_PAINT:\n    {\n\n        PAINTSTRUCT ps", ";", "\n        ", "HDC", " ", "hdc", " = BeginPaint(", "hWnd", ", &ps)", ";", "\n\n\n\n        ::MoveToEx(", "hdc", ", ", "20", ", ", "20", ", NULL)", ";", "\n        ::LineTo(", "hdc", ", ", "200", ", ", "200", ")", ";", "\n        COLORREF cdian", ";", "\n        cdian = GetPixel(", "hdc", ", ", "800", ", ", "600", ")", ";", "\n        ", "if", " (cdian == RGB(", "255", ", ", "255", ", ", "255", "))\n        {\n            SetPixel(", "hdc", ", ", "100", ", ", "120", ", RGB(", "238", ", ", "238", ", ", "238", "))", ";", "\n            SetPixel(", "hdc", ", ", "100", ", ", "121", ", RGB(", "238", ", ", "238", ", ", "238", "))", ";", "\n            SetPixel(", "hdc", ", ", "101", ", ", "120", ", RGB(", "238", ", ", "238", ", ", "238", "))", ";", "\n            SetPixel(", "hdc", ", ", "101", ", ", "121", ", RGB(", "238", ", ", "238", ", ", "238", "))", ";", "\n        }\n\n\n            EndPaint(", "hWnd", ", &ps)", ";", "\n        }\n\n        ", "break", ";", "\n    ", "case", " WM_DESTROY:\n        PostQuitMessage(", "0", ")", ";", "\n        ", "break", ";", "\n    ", "default", ":\n        ", "return", " DefWindowProc(", "hWnd", ", message, ", "wParam", ", ", "lParam", ")", ";", "\n    }\n    ", "return", " ", "0", ";", "\n}\n\n\n\n", "// “关于”框的消息处理程序。", "\nINT_PTR CALLBACK About(", "HWND", " hDlg, UINT message, ", "WPARAM", " ", "wParam", ", ", "LPARAM", " ", "lParam", ")\n{\n    UNREFERENCED_PARAMETER(", "lParam", ")", ";", "\n    ", "switch", " (message)\n    {\n    ", "case", " WM_INITDIALOG:\n        ", "return", " (INT_PTR)TRUE", ";", "\n\n    ", "case", " WM_COMMAND:\n        ", "if", " (LOWORD(", "wParam", ") == IDOK || LOWORD(", "wParam", ") == IDCANCEL)\n        {\n            EndDialog(hDlg, LOWORD(", "wParam", "))", ";", "\n            ", "return", " (INT_PTR)TRUE", ";", "\n        }\n        ", "break", ";", "\n    }\n    ", "return", " (INT_PTR)FALSE", ";", "\n}\n\n\n\n", "\n", "运行结果及报错内容", "\n", "运行结果就是透明窗口，加一条线，但无法分析透明窗口内的像素颜色。", "\n", "我的解答思路和尝试过的方法", "\n", "试过贴图，到窗口，但窗口就不透明了", "试过获取另一个窗口的句柄，获取到了，可不会用。", "试过把窗口背景改透明，不会。", "想过贴图之前，在内存中分析位图，也不会。", "钩子。更不会。", "\n", "我想要达到的结果", "\n", "怎样才能分析处理透明窗口内的屏幕显示的像素颜色？", "\n", "请指一条明路吧~~谢谢！"]], "Tag": "程序设计"}
{"Answer": "function GetForm(ClassName: PChar; DM: TDataModule1): TFormClass; stdcall;\r\nbegin\r\n  DataModule1 := DM;\r\n  Result:=TFormClass(FindClass(ClassName));\r\nend;\r\n\r\nprocedure InitDLL(DM: TDataModule1); stdcall;\r\nbegin\r\n  DataModule1:=DM;\r\nend;\r\n\r\n传递了对象，是不可取的。必成传递TADOConnection的连接字符，就可以了。", "Konwledge_Point": "主程序", "Question": ["delphi DLL数据及窗体调用", ["DLL工程文件代码：", "\n\n", "library DLLUSERS;\nuses\n  Windows,\n  ADODB,\n  Dialogs,\n  Forms,\n  SysUtils,\n  Classes,\n  U_DataModule in 'U_DataModule.pas' {DataModule1: TDataModule},\n  U_Users in 'U_Users.pas' {Frm_Users},\n  U_Initialize in 'U_Initialize.pas';\n{$R *.res}\nfunction GetForm(ClassName: PChar; DM: TDataModule1): TFormClass; stdcall;\nbegin\n  DataModule1 := DM;\n  Result:=TFormClass(FindClass(ClassName));\nend;\n\nprocedure InitDLL(DM: TDataModule1); stdcall;\nbegin\n  DataModule1:=DM;\nend;\n\nexports\n  GetForm,InitDLL,SetUseName;\nbegin\nend. \n", "\n\n", "DLL公共单元代码：", "\n\n", "unit U_Initialize;\n{DLL公共单元UNIT}\ninterface\n\n  function GetUseName: PChar; stdcall;\n  procedure SetUseName(SName: PChar); stdcall;\n\nvar\n  StrName: PChar;\n\nimplementation\n\nuses\n  U_DataModule, ActiveX;\n\nfunction GetUseName: PChar; stdcall;\nbegin\n  Result:=StrName;\nend;\n\nprocedure SetUseName(SName: PChar); stdcall;\nbegin\n  StrName:=SName;\nend;\n\ninitialization\n  CoInitialize(nil);\n  DataModule1 := TDataModule1.Create(nil);\nfinalization\n  DataModule1.Free;\n  CoUninitialize;\n\nend. \n", "\n\n", "DLL数据模块代码：", "\n\n", " unit U_DataModule;\n{数据模块}\ninterface\n\nuses\n  SysUtils, Classes, DB, ADODB;\n\ntype\n  TDataModule1 = class(TDataModule)\n    ADOCNT: TADOConnection;\n  private\n    { Private declarations }\n  public\n    { Public declarations }\n  end;\n\nvar\n  DataModule1: TDataModule1;\n\nimplementation\n\n{$R *.dfm}\n\nend.\n", "\n\n", "DLL内部窗体代码：", "\n\n", " unit U_Users;\n{DLL内部窗体}\ninterface\n\nuses\n  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,\n  Dialogs, DBGridEhGrouping, ComCtrls, GridsEh, DBGridEh, ExtCtrls,\n  RzPanel, Menus, ADODB, DB, EhlibCDS, EhlibADO, Comobj, DBGridEhImpExp,\n  U_DataModule;\n\ntype\n  TFrm_Users = class(TForm)\n    MainMenu1: TMainMenu;\n    mmAdd: TMenuItem;\n    mmEdit: TMenuItem;\n    mmDelete: TMenuItem;\n    mmRight: TMenuItem;\n    mmFind: TMenuItem;\n    mmDataOut: TMenuItem;\n    mmClose: TMenuItem;\n    RzGroupBox1: TRzGroupBox;\n    DBGridEhUsers: TDBGridEh;\n    StatusBar1: TStatusBar;\n    SaveDialog1: TSaveDialog;\n    procedure FormCreate(Sender: TObject);\n    procedure FormShow(Sender: TObject);\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\n  private\n    { Private declarations }\n  public\n    ADOUsers,ADODelete:TADOQuery;\n    DSUsers: TDataSource;\n    { Public declarations }\n  end;\n\nvar\n  Frm_Users: TFrm_Users;\n\nimplementation\n\nuses\n  U_Initialize;\n\n{$R *.dfm}\n\nprocedure TFrm_Users.FormCreate(Sender: TObject);\nbegin\n  Font.Name:='Arial';\n  ADOUsers:=TADOQuery.Create(nil);\n  ADODelete:=TADOQuery.Create(nil);\n  DSUsers:=TDataSource.Create(nil);\n  ADOUsers.Connection:=DataModule1.ADOCNT;\n  ADODelete.Connection:=DataModule1.ADOCNT;\n  //设置文件类型列表和默认文件类型\n  SaveDialog1.Filter:='Text files (*.txt)|*.TXT|Comma separated values (*.csv)|*.CSV|HTML file (*.htm)|*.HTM|Rich Text Format (*.rtf)|*.RTF|Microsoft Excel Workbook (*.xls)|*.XLS';\n  SaveDialog1.FilterIndex:=0;\nend;\n\nprocedure TFrm_Users.FormShow(Sender: TObject);\nbegin\n  StrName:=GetUseName;\n  with  ADOUsers  do\n  begin\n    Close;\n    SQL.Clear;\n    if String(StrName)='alsaby' then\n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+\n            'order by a.User_Name') else\n    if String(StrName)='admin' then\n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+\n            'where a.User_Name<>''alsaby'' order by a.User_Name') else   \n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+\n            'where a.User_Name<>''alsaby'' and a.User_Name<>''admin'' order by a.User_Name');\n    Open;\n  end;\n  DSUsers.DataSet:=ADOUsers;\n  DBGridEhUsers.DataSource:=DSUsers;\n  StatusBar1.Panels[1].Text:=IntToStr(ADOUsers.RecordCount) +' 条数据。';\nend;\n\nprocedure TFrm_Users.FormClose(Sender: TObject; var Action: TCloseAction);\nbegin\n  ADOUsers.Close;\n  ADOUsers.Destroy;\n  ADODelete.Close;\n  ADODelete.Destroy;\n  DSUsers.Destroy;\n  Action:=caFree;\nend;\n\ninitialization\n  RegisterClass(TFrm_Users);\nfinalization\n  UnRegisterClass(TFrm_Users);\nend.\n", "\n\n", "主程序调用代码：", "\n\n", " unit U_Main;\n\ninterface\n\nuses\n  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,\n  Dialogs, Menus, ImgList, ComCtrls, ADODB, DB, jpeg, ExtCtrls, RzPanel,\n  RzSplit, RzTreeVw, U_DataModule;\n\ntype\n  TInitDLL = procedure(DM: TFrm_DataModule); stdcall;\n  TSetUseName = procedure(SName: PChar); stdcall;\n  TGetForm = function(ClassName: PChar; DM: TFrm_DataModule): TFormClass; stdcall;\n  TFrm_Main = class(TForm)\n    MainMenu1: TMainMenu;\n    mmSysFlies: TMenuItem;\n    mmUserChange: TMenuItem;\n    N2: TMenuItem;\n    mmExit: TMenuItem;\n    N1: TMenuItem;\n    mmBakRecover: TMenuItem;\n    mmSysUser: TMenuItem;\n    N5: TMenuItem;\n    StatusBar1: TStatusBar;\n    OpenDialog1: TOpenDialog;\n    ImageList1: TImageList;\n    procedure FormCreate(Sender: TObject);\n    procedure mmSysUserClick(Sender: TObject);\n  private\n    { Private declarations }\n  public\n    UName: String;\n    { Public declarations }\n  end;\n\nvar\n  Frm_Main: TFrm_Main;\nimplementation\n\nuses\n  U_Public;\n\n{$R *.dfm}\n\nprocedure TFrm_Main.FormCreate(Sender: TObject);\nbegin\n  Font.Name:='Arial';\n  UName:=Frm_DataModule.ADO_User.FieldByName('User_Name').AsString;\nend;\n\nprocedure TFrm_Main.mmSysUserClick(Sender: TObject);\nvar\n  DLLName: String;\n  DLLHandle: THandle;\n  FarProc: TFarProc;\n  Form: TForm;\n  SetUseName: TSetUseName;\n  GetForm: TGetForm;\n  InitDLL: TInitDLL;\nbegin\n  GetDir(0,DLLName);\n  DLLName := DLLName + '\\DLLUSERS.dll';\n  DLLHandle:= SafeLoadLibrary(DLLName);\n  if DLLHandle > 0 then\n    Try\n      FarProc := GetProcAddress(DLLHandle, 'InitDLL');\n      if FarProc<>nil then\n      begin\n        InitDLL := TInitDLL(FarProc);\n        InitDLL(Frm_DataModule);\n      end;\n\n      FarProc := GetProcAddress(DLLHandle, 'SetUseName');\n      if FarProc<>nil then\n      begin\n        SetUseName := TSetUseName(FarProc);\n        SetUseName(PChar(Trim(UName)));\n      end;\n\n      FarProc := GetProcAddress(DLLHandle, 'GetForm');\n      if FarProc<>nil then\n      begin\n        GetForm := TGetForm(FarProc);\n        Form := GetForm('TFrm_Users', Frm_DataModule).Create(nil);\n        Form.ShowModal;\n        FreeAndNil(Form);\n      end;\n    Finally\n      FreeLibrary(DLLHandle);\n    End\n  else\n  ShowMessage(DLLName+'文件不存在！');  \nend;\n\nend.\n", "\n\n", "以上在运行程序时没有错误，数据也正常显示，但是关闭调用的DLL内部窗体后，再次通过主程序调用就出现了Read of Address 00000008错误，请高手指点这是咋回事？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这只放效果截图&amp;#xff0c;不放代码不方便看。根据空指针的异常&amp;#xff0c;应该就是 records 这个字段没有初始化导致的&amp;#xff0c;应该是个 List&amp;#xff0c;你给他初始化下 records &amp;#61; new ArrayList();&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Java中从一个界面跳转到另一个界面", ["显示", "我想要的结果", "意图是一个登录界面成功后跳转到查询界面，查询界面是单独的一个类，我把这个类new在了登录按钮的监听器里头。单独运行可以成功，但是整体运行就会报错，报错提醒java.lang.NullPointerException: Cannot invoke \"java.util.List.clear()\" because \"this.records\" is null。", "\n", "部分主界面", "import java.awt.Color;", "\n", "import java.awt.FlowLayout;", "import java.awt.event.ActionEvent;", "import java.awt.event.ActionListener;", "import java.sql.SQLException;", "\n", "import javax.swing.JButton;", "import javax.swing.JFrame;", "import javax.swing.JLabel;", "import javax.swing.JOptionPane;", "import javax.swing.JPanel;", "import javax.swing.JPasswordField;", "import javax.swing.JTextField;", "\n", "import java.util.ArrayList;", "\n", "public class Login_Register extends JFrame{    ", "\n", "Login_Register()", " {\n    init", "()", ";\n}\n\n", "//登录界面初始化", "\npublic void init", "()", " {\nJFrame frame = ", "new", " ", "JFrame(", "\"学生管理系统\"", ")", ";\n    frame.set", "Layout(", "null", ")", ";\n    \n    JLabel nameStr = ", "new", " ", "JLabel(", "\"账号:\"", ")", ";\n    nameStr.set", "Bounds(250, 200, 100, 25)", ";\n    frame.add(nameStr);\n    \n    JLabel passwordStr = ", "new", " ", "JLabel(", "\"密码:\"", ")", ";\n    passwordStr.set", "Bounds(250, 250, 100, 25)", ";\n    frame.add(passwordStr);  \n    \n    JTextField userID = ", "new", " ", "JTextField()", ";\n    userID.set", "Bounds(300, 200, 150, 25)", ";\n    frame.add(userID);\n    \n    JTextField password = ", "new", " ", "JTextField()", ";\n    password.set", "Bounds(300, 250, 150, 25)", ";\n    frame.add(password);\n    \n    JButton buttonlogin = ", "new", " ", "JButton(", "\"登录\"", ")", ";\n    buttonlogin.set", "Bounds(275, 300, 70, 25)", ";\n    frame.add(buttonlogin);\n    \n    JButton buttonregister = ", "new", " ", "JButton(", "\"注册\"", ")", ";\n    buttonregister.set", "Bounds(375, 300, 70, 25)", ";\n    frame.add(buttonregister);  \n    \n    frame.set", "Bounds(400, 100, 800, 640)", ";\n    frame.set", "DefaultCloseOperation(JFrame.EXIT_ON_CLOSE)", ";\n    frame.set", "Visible(", "true", ")", ";\n    \n    ", "//为登录按钮添加监听器", "\n     buttonlogin.add", "ActionListener(", "new", " ActionListener()", " {  \n        public void action", "Performed(ActionEvent ", "e", ")", " {\n            String ID = userID.get", "Text()", ";\n            String pass=password.get", "Text()", ";", "//把输入框中的用户名密码和提出来", "\n              \n            Admin admin = ", "new", " ", "Admin()", "; ", "//创建一个用户", "\n            admin.set", "ID(ID)", ";\n            admin.set", "Password(", "pass", ")", ";\n            \n            ", "//登录", "\n            Login login = ", "new", " ", "Login()", ";\n            login.set", "Admin(", "admin", ")", ";\n      \n            ", "if", "(login.", "JudgeAdmin()", "==", "0", ") {\n                ", "//弹出账号或密码错误的窗口", "\n                ", "JOptionPane", ".", "show", "MessageDialog(", "null", ", ", "\"账号或密码错误\"", ", ", "\"账号或密码错误\"", ", JOptionPane.WARNING_MESSAGE)", ";\n                ", "//清除密码框中的信息", "\n                password.set", "Text(", "\"\"", ")", ";\n                ", "//清除账号框中的信息", "\n                userID.set", "Text(", "\"\"", ")", ";\n                \n                ", "//System.out.println(\"登陆失败\");", "\n            } ", "else", " {\n                ", "//弹出登录成功的窗口", "\n                ", "JOptionPane", ".", "show", "MessageDialog(", "null", ", ", "\"登陆成功\"", ", ", "\"登陆成功\"", ", JOptionPane.NO_OPTION)", ";\n                ", "//点击确定后会跳转到主窗口", "\n                frame.set", "Visible(", "false", ")", ";\n                ", "//登录成功跳到查询界面", "\n                ", "new", " ", "SelectTable()", ";\n        \n            }   \n        }\n    });\n     \n     ", "//为注册按钮添加监听器", "\n     buttonregister.add", "ActionListener(", "new", " ActionListener()", " {\n         public void action", "Performed(ActionEvent ", "e", ")", " {\n             ", "//注册页面", "\n             frame.set", "Visible(", "false", ")", ";\n             AdminRegister ar = ", "new", " ", "AdminRegister()", "; \n         }\n     });\n}\n\npublic static void main(String ", "[]", "args) { \n   ", "//主程序", "\n   ", "//登录窗口", "\n    Login_Register login_register = ", "new", " ", "Login_Register()", ";\n\n}\n", "\n", "}", "查询界面", "import java.awt.", ";", "import java.awt.List;", "import java.awt.event.", ";", "import javax.swing.", ";", "import java.sql.", ";", "import java.util.", ";", "import javax.swing.table.", ";", " class SelectTable extends JFrame{", "\n", " JTextField txtQuery=", "new", " JTextField(", "10", ");\n JButton btnQuery=", "new", " JButton(\"按学号查询\");\n JTable table=", "new", " JTable();\n AbstractTableModel tm;\n String titles[];\n ", "Class", "<? >colClasses[];\n java.util.List<java.util.List<", "Object", ">>records;\n \n ", "public", " SelectTable() {\n  //设置界面\n JPanel pnl=", "new", " JPanel();\n pnl.", "add", "(txtQuery);\n pnl.", "add", "(btnQuery);\n getContentPane().", "add", "(pnl,BorderLayout.NORTH);\n \n //设置表格\n ", "table", ".setToolTipText(\"显示结果\");\n ", "table", ".setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n ", "table", ".setCellSelectionEnabled(", "false", ");\n ", "table", ".setShowVerticalLines(", "true", ");\n ", "table", ".setShowHorizontalLines(", "true", ");\n \n JScrollPane scrollpane=", "new", " JScrollPane(", "table", ");\n getContentPane().", "add", "(scrollpane,BorderLayout.CENTER);\n \n //事件处理\n btnQuery.addActionListener(e->{\n     try {\n         showData();\n     }catch (", "Exception", " ex) {\n         ex.printStackTrace();\n     }\n         \n});\n setSize(", "400", ",", "300", ");\n setTitle(\"成绩查询\");\n setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n this.setLocationRelativeTo(", "null", ");\n setVisible(", "true", ");\n }\n \n ", "public", " ", "void", " showData()throws SQLException,ClassNotFoundException{\n//加载驱动程序\n     ", "Class", ".forName(\"com.mysql.cj.jdbc.Driver\");\n     //连接数据库\n     String connString=\"jdbc:mysql://localhost:3306/manage?\"\n                + \"useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8\";\n     String ", "user", " = \"root\";\n        String ", "password", " = \"zcydnx\";\n     ", "Connection", " ", "connection", "=DriverManager.getConnection(connString,", "user", ",", "password", "); \n     //执行查询\n     \n     String sql1=\"select* from grade where sno like?;\";\n     PreparedStatement stmt=", "connection", ".prepareStatement(sql1);\n     stmt.setString(", "1", ",\"%\"+txtQuery.getText().trim()+\"%\");\n     ResultSet rs=stmt.executeQuery();\n     ResultSetMetaData meta=rs.getMetaData();\n     //显示结果\n     ", "int", " colCnt=meta.getColumnCount();\n     ", "System", ".", "out", ".println(colCnt);\n     titles=", "new", " String[colCnt];\n     colClasses=", "new", " ", "Class", "[colCnt];\n     ", "for", "(", "int", " i=", "0", ";i<colCnt;i++){\n        \n        titles[i]=meta.getColumnName(i+", "1", ");\n         String className=meta.getColumnClassName(i+", "1", ");\n         ", "Class", "<? >clz=String.", "class", ";\n         ", "if", "(className!=", "null", ")\n             try {\n                 clz=", "Class", ".forName(className);\n             }catch (", "Exception", " ex) {\n                 ex.printStackTrace();\n             }\n         colClasses[i]=clz;\n     }\n records.clear();\n ", "while", "(rs.next()) {\n     java.util.List<", "Object", ">one_record=", "new", " ArrayList<>();\n     //从结果集中取数据放入记录中\n     ", "for", "(", "int", " i=", "0", ";i<titles.length;i++) {\n         ", "Object", " obj=rs.getObject(i+", "1", ");\n         ", "System", ".", "out", ".print(obj+\";\");\n         one_record.", "add", "(obj==", "null", "?", "null", ":obj.toString());\n     }\n     records.", "add", "(one_record);\n     ", "System", ".", "out", ".println();\n }\n", "table", ".setModel(tm);\ntm.fireTableStructureChanged();\n }\n \n ", "public", " ", "void", " initTableModel() {\n     records=", "new", " ArrayList<>();\n     tm=", "new", " AbstractTableModel() {\n         ", "public", " ", "int", " getColumnCount() {\n             ", "return", " titles.length;\n         }\n         ", "public", " ", "int", " getRowCount() {\n             ", "return", " records.size();\n         }\n         ", "public", " ", "Object", " getValueAt(", "int", " ", "row", ",", "int", " ", "column", ") {\n             ", "if", "(!records.isEmpty())\n                 ", "return", "(records.", "get", "(", "row", ")).", "get", "(", "column", ");\n             ", "else", "\n                 ", "return", " ", "null", ";\n         }\n         ", "public", " String getColumnName(", "int", " ", "column", ") {\n             ", "return", " titles[", "column", "];\n         }\n         ", "public", " ", "Class", "<? >getColumnClass(", "int", " ", "column", "){\n             ", "return", " colClasses[", "column", "];\n         }\n         ", "public", " ", "void", " setValueAt(", "Object", " ", "value", ",", "int", " ", "row", ",", "int", " ", "column", ") {\n             //数据模型不可编辑。该方法设置为空\n         }\n         ", "public", " ", "boolean", " isCellEditable(", "int", " ", "row", ",", "int", " ", "column", ") {\n             ", "return", " ", "false", ";\n         }\n     };\n     \n }\n ", "public", " static ", "void", " main(String[]args) {\n     SwingUtilities.invokeLater(()->{\n         SelectTable frame=", "new", " SelectTable();\n         frame.initTableModel();\n         try {\n             frame.showData();\n         }catch (", "Exception", " e) {\n             e.printStackTrace();\n         }\n     });\n }}\n \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;回答不易&amp;#xff0c;望采纳&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;这一行代码报错了&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/934802576776119.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;应该是连页面内容都没有爬下来&amp;#xff0c;后边更别谈格式化处理了。&lt;/p&gt;\n&lt;p&gt;检查一下你的 cookie 是不是过期了吧&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["用python爬虫无法导出数据", ["用python做爬虫，代码调来调去一直这样报错，麻烦有没有人看看是怎么回事呀", "\n", "import", " urllib.parse\n", "import", " random\n", "import", " requests\n", "from", " lxml ", "import", " etree\n", "import", " re\n", "import", " json\n", "import", " time\n", "import", " xlwt\n\n\n", "class", " ", "QianChengWuYouSpider", "(", "object", "):\n    ", "# 初始化", "\n    ", "def", " ", "__init__", "(", "self, city_id, job_type, pages", "):\n        ", "# url模板", "\n        self.url = ", "'https://search.51job.com/list/{},000000,0000,00,9,99,{},2,{}.html'", "\n        ", "# UA池", "\n        self.UApool = [\n            ", "\"Mozilla/5.0 (Windows NT 6.0; rv:2.0) Gecko/20100101 Firefox/4.0 Opera 12.14\"", ",\n            ", "\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14\"", ",\n            ", "'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:68.0) Gecko/20100101 Firefox/68.0'", ",\n            ", "'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:75.0) Gecko/20100101 Firefox/75.0'", ",\n            ", "'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:83.0) Gecko/20100101 Firefox/83.0'", ",\n            ", "'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0; Touch; MASMJS)'", ",\n            ", "'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; Hot Lingo 2.0)'", ",\n            ", "\"Opera/12.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.02\"", ",\n            ", "\"Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00\"", ",\n            ", "\"Opera/9.80 (Windows NT 5.1; U; zh-sg) Presto/2.9.181 Version/12.00\"", ",\n        ]\n\n        ", "# 请求头", "\n        self.headers = {\n            ", "'User-Agent'", ": random.choice(self.UApool),\n            ", "'referer'", ":", "'https://blog.csdn.net/EricNTH/article/details/104840887'", ",\n            ", "# 注意加上自己的Cookie", "\n            ", "'Cookie'", ": ", "'guid=5fe585588fded74cf3a82a228c6d9a05; nsearch=jobarea%3D%26%7C%26ord_field%3D%26%7C%26recentSearch0%3D%26%7C%26recentSearch1%3D%26%7C%26recentSearch2%3D%26%7C%26recentSearch3%3D%26%7C%26recentSearch4%3D%26%7C%26collapse_expansion%3D; search=jobarea%7E%60%7C%21recentSearch0%7E%60000000%A1%FB%A1%FA000000%A1%FB%A1%FA0000%A1%FB%A1%FA00%A1%FB%A1%FA99%A1%FB%A1%FA%A1%FB%A1%FA99%A1%FB%A1%FA99%A1%FB%A1%FA99%A1%FB%A1%FA99%A1%FB%A1%FA9%A1%FB%A1%FA99%A1%FB%A1%FA%A1%FB%A1%FA0%A1%FB%A1%FA%CA%FD%BE%DD%B7%D6%CE%F6%A1%FB%A1%FA2%A1%FB%A1%FA1%7C%21; ps=needv%3D0; 51job=cuid%3D222881165%26%7C%26cusername%3Dr1iIYNbsPNRfcePxJ5NnZgEj5wBOs3Lekgry9sYJYfs%253D%26%7C%26cpassword%3D%26%7C%26cname%3D%26%7C%26cemail%3D%26%7C%26cemailstatus%3D0%26%7C%26cnickname%3D%26%7C%26ccry%3D.0wsHycnvu2wI%26%7C%26cconfirmkey%3D%25241%2524G2r4TO2.%25240IZIc4jYqAIuNUJTameNb0%26%7C%26cautologin%3D1%26%7C%26cenglish%3D0%26%7C%26sex%3D%26%7C%26cnamekey%3D%25241%2524fbxj8Rqp%2524c40fEtLHks8SAV1.ooCtW%252F%26%7C%26to%3Ddfb0153b79106f4855f2546b250424b463fd81e5%26%7C%26; sensor=createDate%3D2023-02-28%26%7C%26identityType%3D1; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%22222881165%22%2C%22first_id%22%3A%2218696373a9a28f-0fa9aef36da24f-74525470-1395396-18696373a9b1537%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E8%87%AA%E7%84%B6%E6%90%9C%E7%B4%A2%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC%22%2C%22%24latest_referrer%22%3A%22https%3A%2F%2Fcn.bing.com%2F%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMTg2OTYzNzNhOWEyOGYtMGZhOWFlZjM2ZGEyNGYtNzQ1MjU0NzAtMTM5NTM5Ni0xODY5NjM3M2E5YjE1MzciLCIkaWRlbnRpdHlfbG9naW5faWQiOiIyMjI4ODExNjUifQ%3D%3D%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%24identity_login_id%22%2C%22value%22%3A%22222881165%22%7D%2C%22%24device_id%22%3A%2218696373a9a28f-0fa9aef36da24f-74525470-1395396-18696373a9b1537%22%7D; ssxmod_itna=YuD=0KBIqfgGCzDX3G7maa+x0xDqH2Tapve0QIaDla2YxA5D8D6DQeGTbnPsbqzK0DW+aqNhrWhaNt6j+RaCKC8p5L7mDB3DEx06Tq0Ci4GG0xBYDQxAYDGDDpRD84DrD72=ZSUxYPG0DGQD3qGyl4tDA8tDb2=nDiUVDDtOB4G2D7tyfwdY5lbDAMmSY2=DjdTD/+xaZ06oH6aNRLtboh2aiL04xBQD7kiyDYoXUeDH+kNKVOoqm0mxBi4K8gm3BBh4lBmq3DPPfBxttYjXNohxRYh4mIjdWx8DG8GoWrD=; ssxmod_itna2=YuD=0KBIqfgGCzDX3G7maa+x0xDqH2Tapve0QzD6EK40HaRo03PvquXvCnD6eTwm57vlcOFQHyIZL0jeUj2j45maC205xmidt64Rq0C9dA7sGESSyQNuKC8=UnqMhkU7MXqXI9CAp=TiDRi=lcuquCDHLrbtQSKkvWDWGEyDUmBNUpeaTgWb0=c+OBRDrIxwqjA1ExcfQ13sEeMGIfgF1I0vYaG3DQ9iDjKD+ghDD===; partner=sem_pcsogouqg_16633; privacy=1677640570; Hm_lvt_1370a11171bd6f2d9b1fe98951541941=1677557447,1677640568; Hm_lpvt_1370a11171bd6f2d9b1fe98951541941=1677640568; slife=lastlogindate%3D20230301%26%7C%26securetime%3DUGxTZlAxBWZVMQA6CjEPYQczVmI%253D'", ",\n        }\n\n        ", "# 请求参数", "\n        self.params = {\n            ", "\"lang\"", ": ", "\"c\"", ",\n            ", "\"postchannel\"", ": ", "0000", ",\n            ", "\"workyear\"", ": ", "99", ",\n            ", "\"cotype\"", ": ", "99", ",\n            ", "\"degreefrom\"", ": ", "99", ",\n            ", "\"jobterm\"", ": ", "99", ",\n            ", "\"companysize\"", ": ", "99", ",\n            ", "\"ord_field\"", ": ", "0", ",\n            ", "\"dibiaoid\"", ": ", "0", ",\n            ", "\"line\"", ": ", "''", ",\n            ", "\"welfare\"", ": ", "''", "\n        }\n\n        ", "# 保存的文件名", "\n        self.filename = ", "\"前程无忧网\"", " + job_type + ", "\"职位信息.xls\"", "\n\n        ", "# 城市编号", "\n        self.city_id = city_id\n\n        ", "# 职位名称 【转为urlencode编码】", "\n        self.job_type = urllib.parse.quote(job_type)\n\n        ", "# 页数", "\n        self.pages = pages\n\n        ", "# 临时存储容器", "\n        self.words = []\n\n    ", "# 请求网页", "\n    ", "def", " ", "parse", "(", "self, url", "):\n        response = requests.get(url=url, headers=self.headers, params=self.params)\n\n        ", "# 设置编码格式为gbk", "\n        response.encoding = ", "'gbk'", "\n\n        ", "# 网页源代码", "\n        ", "return", " response.text\n\n    ", "# 数据提取", "\n    ", "def", " ", "get_job", "(", "self, page_text", "):\n        ", "# xpath", "\n        tree = etree.HTML(page_text)\n        job_label = tree.xpath(", "'//script[@type=\"text/javascript\"]'", ")\n\n        ", "# 正则表达式", "\n        job_str = re.findall(", "'\"engine_jds\":(.*\"adid\":\"\"}]),'", ", ", "str", "(job_label))\n\n        ", "# 转换为json类型", "\n        data = json.loads(", "str", "(job_str).replace(", "\"'\"", ", ", "\"\\\"\"", "))\n\n        ", "# 数据提取", "\n        ", "for", " item ", "in", " data:\n            ", "# 职位名称", "\n            job_name = item[", "'job_name'", "]\n\n            ", "# 职位链接", "\n            job_href = item[", "'job_href'", "]\n\n            ", "# 公司名称", "\n            company_name = item[", "'company_name'", "]\n\n            ", "# 公司链接", "\n            company_href = item[", "'company_href'", "]\n\n            ", "# 月薪范围", "\n            salary = item[", "'providesalary_text'", "]\n\n            ", "# 工作地点", "\n            address = item[", "'workarea_text'", "]\n\n            ", "# 其他信息", "\n            info_list = item[", "'attribute_text'", "]\n\n            ", "# 有个别数据不完整, 直接跳过", "\n            ", "if", " ", "len", "(info_list) < ", "3", ":\n                ", "continue", "\n\n            ", "# 经验要求", "\n            experience = info_list[", "1", "]\n\n            ", "# 学历要求", "\n            education = info_list[", "2", "]\n\n            ", "# 发布日期", "\n            update_date = item[", "'updatedate'", "]\n\n            ", "# 公司性质", "\n            company_type = item[", "'companytype_text'", "]\n\n            ", "# 公司福利", "\n            job_welf = item[", "'jobwelf'", "]\n\n            ", "# 公司行业", "\n            company_status = item[", "'companyind_text'", "]\n\n            ", "# 公司规模", "\n            company_size = item[", "'companysize_text'", "]\n\n            self.words.append({\n                ", "\"职位名称\"", ": job_name,\n                ", "\"公司名称\"", ": company_name,\n                ", "\"月薪范围\"", ": salary,\n                ", "\"工作地点\"", ": address,\n                ", "\"经验要求\"", ": experience,\n                ", "\"学历要求\"", ": education,\n                ", "\"发布日期\"", ": update_date,\n                ", "\"公司性质\"", ": company_type,\n                ", "\"公司福利\"", ": job_welf,\n                ", "\"公司行业\"", ": company_status,\n                ", "\"公司规模\"", ": company_size,\n                ", "\"职位链接\"", ": job_href,\n                ", "\"公司链接\"", ": company_href,\n            })\n\n        ", "print", "(", "\"该页爬取完成\"", ")\n\n    ", "# 数据保存", "\n    ", "def", " ", "save", "(", "self, words, filename, sheet_name=", "'sheet1'", "):\n        ", "try", ":\n            ", "# 1、创建工作薄", "\n            work_book = xlwt.Workbook(encoding=", "\"utf-8\"", ")\n            ", "# 2、创建sheet表单", "\n            sheet = work_book.add_sheet(sheet_name)\n            ", "# 3、写表头", "\n            head = []\n            ", "for", " k ", "in", " words[", "0", "].keys():\n                head.append(k)\n\n            ", "for", " i ", "in", " ", "range", "(", "len", "(head)):\n                sheet.write(", "0", ", i, head[i])\n            ", "# 4、添加内容", "\n            ", "# 行号", "\n            i = ", "1", "\n            ", "for", " item ", "in", " words:\n                ", "for", " j ", "in", " ", "range", "(", "len", "(head)):\n                    sheet.write(i, j, item[head[j]])\n                ", "# 写完一行，将行号+1", "\n                i += ", "1", "\n            ", "# 保存", "\n            work_book.save(filename)\n            ", "print", "(", "'数据保存成功'", ")\n\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(", "'数据保存失败'", ", e)\n\n    ", "# 主程序", "\n    ", "def", " ", "run", "(", "self", "):\n        ", "for", " page ", "in", " ", "range", "(", "1", ", self.pages + ", "1", "):\n            ", "# 拼接每页url", "\n            url = self.url.", "format", "(self.city_id, self.job_type, page)\n\n            ", "# 请求网页", "\n            page_text = self.parse(url)\n\n            ", "# 数据提取", "\n            self.get_job(page_text)\n\n            ", "# 防止爬取过快", "\n            time.sleep(random.randint(", "1", ", ", "2", "))\n\n        self.save(words=self.words, filename=self.filename)\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    ", "# 实例化爬虫对象 全国爬虫职位信息", "\n    ", "# city_id：城市编号（上表）", "\n    ", "# job_type：职位名称 （尽量精准，爬取到的数据会更贴切）", "\n    ", "# pages：页数（自己指定，注意不要超过总页数）", "\n    spider = QianChengWuYouSpider(city_id=", "000000", ", job_type=", "\"数据分析\"", ", pages=", "2", ")\n\n    ", "# 运行主程序", "\n    spider.run()\n\n\n", "\n", "报的错误是这样的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;属性 x y z 没有赋值&lt;/p&gt;\n&lt;p&gt;Result() 方法中的&lt;br /&gt;double x &amp;#61; Convert.ToDouble(Convert.ToInt32(m));&lt;/p&gt;\n&lt;p&gt;double y &amp;#61; Convert.ToDouble(Convert.ToInt32(n));&lt;/p&gt;\n&lt;p&gt;double z &amp;#61; Convert.ToDouble(Convert.ToInt32(p));&lt;br /&gt;改为&lt;br /&gt; x &amp;#61; Convert.ToDouble(Convert.ToInt32(m));&lt;/p&gt;\n&lt;p&gt; y &amp;#61; Convert.ToDouble(Convert.ToInt32(n));&lt;/p&gt;\n&lt;p&gt; z &amp;#61; Convert.ToDouble(Convert.ToInt32(p));&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["关于c#的问题，如何解决？", ["\n", "问题遇到的现象和发生背景", "\n", "程序输入一些值运行结果不正确，面积结果算出来总是等于0", "\n", "问题相关代码", "\n", "主程序", "using System;", "\n", "namespace _6", "{", "    class Program", "    {", "        static void Main(string[] args)", "        {", "            Triangle a=new Triangle();", "            a.Result();", "            a.GetArea();", "            a.Justify();", "        }", "    }", "}", "Triangle类", "using System;", "using System.Collections.Generic;", "using System.Text;", "\n", "namespace _6", "{", "    class Triangle", "    {", "        double x;", "        double y;", "        double z;", "        double s;", "        double l;", "        public void Result()", "        {", "            Console.WriteLine(\"Please input x,y,z:\");", "            string m = Console.ReadLine();", "            double x = Convert.ToDouble(Convert.ToInt32(m));", "            string n = Console.ReadLine();", "            double y = Convert.ToDouble(Convert.ToInt32(n));", "            string p = Console.ReadLine();", "            double z = Convert.ToDouble(Convert.ToInt32(p));", "            if (x > 0 && y > 0 && z > 0 && x + y > z && x + z > y && y + z > x)", "            {", "                Console.WriteLine(\"可以构成三角形!\");", "            }", "            else", "            {", "                Console.WriteLine(\"Error data!\");", "            }", "        }", "        public void GetArea()", "        {", "            s = (x + y + z)/2;", "            l = s * (s - x) * (s - y) * (s - z);", "            Console.WriteLine(\"三角形的面积为:{0}\", Math.Sqrt(l));", "        }", "        public void Justify()", "        {", "            if (Math.Pow(x, 2) + Math.Pow(y, 2) < Math.Pow(z, 2) && Math.Pow(x, 2) + Math.Pow(z, 2) < Math.Pow(y, 2) && Math.Pow(y, 2) + Math.Pow(z, 2) < Math.Pow(x, 2))", "            {", "                Console.WriteLine(\"三角形为锐角三角形！\");", "            }", "            else if (Math.Pow(x, 2) + Math.Pow(y, 2) > Math.Pow(z, 2) && Math.Pow(x, 2) + Math.Pow(z, 2) > Math.Pow(y, 2) && Math.Pow(y, 2) + Math.Pow(z, 2) > Math.Pow(x, 2))", "            {", "                Console.WriteLine(\"三角形为钝角三角形！\");", "            }", "            else if (Math.Pow(x, 2) + Math.Pow(y, 2) == Math.Pow(z, 2) && Math.Pow(x, 2) + Math.Pow(z, 2) == Math.Pow(y, 2) && Math.Pow(y, 2) + Math.Pow(z, 2) == Math.Pow(x, 2))", "            {", "                Console.WriteLine(\"三角形为直角三角形！\");", "            }", "            else", "            {", "                Console.WriteLine(\"Error Data!\");", "            }", "        }", "    }", "}", "\n", "运行结果及报错内容", "\n", "Please input x,y,z:", "1", "6", "7", "Error data!", "三角形的面积为:0", "三角形为直角三角形！", "\n", "我想要达到的结果", "\n", "如果符合构成三角形的条件，就继续计算三角形的面积并判断三角形的形状，如果不符合构成三角形的条件，就只输出“Error Data！”"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;else&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            b[i] &amp;#61; (a[i - 1] &amp;#43; a[i] &amp;#43; a[i &amp;#43; 1]) / 3;&lt;/span&gt;&lt;br /&gt;a[i&amp;#43;1]越界&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["b[0]溢出了问题在哪？", ["\n", "15", "、由一个已知一维数组派生出另一个一维数组的派生规则如下：新数组的每一元素等于原始数组的对应元素及其相邻两元素的平均值。其中第", "0", "个元素的左邻元素约定为最后一个元素，最后一个元素的右邻元素约定为第", "0", "个元素。假设原始数组为a[", "10", "]，则b[", "0", "]=(a[", "9", "]+a[", "0", "]+a[", "1", "])/", "3", "，b[", "1", "]=(a[", "0", "]+a[", "1", "]+a[", "2", "])/", "3", "，b[", "2", "]=(a[", "1", "]+a[", "2", "]+a[", "3", "])/", "3", "，，b[", "9", "]=(a[", "8", "]+a[", "9", "]+a[", "0", "])/", "3", "。试建立一个实现此功能的类", "ARRAY", "。具体要求如下：\n（", "1", "）私有数据成员\n    float a[", "10", "],b[", "10", "]；a存放原始数组，b存放派生数组。\n（", "2", "）公有成员函数\n    ", "ARRAY", "(float t[", "10", "])：构造函数，初始化成员数组a；\n    void process()：由数组a根据上述派生规则，用循环语句计算数组b的各元素；\n    void print()：屏幕显示数组a和b。\n（", "3", "）在主程序中对该类进行测试。使用测试数据{", "0", ",", "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", ",", "27", "}。\n\n#include <iostream>\nusing namespace std;\nclass ", "ARRAY", "\n{\nprivate:\n    float a[", "10", "], b[", "10", "];\npublic:\n    ", "ARRAY", "(float t[", "10", "]);\n    void process();\n    void print();\n};\n", "ARRAY", "::", "ARRAY", "(float t[", "10", "])\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        a[i] = t[i];\n    }\n}\nvoid ", "ARRAY", "::process()\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        if (i == ", "0", ")\n        {\n            b[", "0", "] = (a[", "9", "] + a[", "0", "] + a[", "1", "]) / ", "3", ";\n        }\n        if (i == ", "9", ")\n        {\n            b[", "9", "] = (a[", "8", "] + a[", "9", "] + a[", "0", "]) / ", "3", ";\n        }\n        else\n            b[i] = (a[i - ", "1", "] + a[i] + a[i + ", "1", "]) / ", "3", ";\n    }\n}\nvoid ", "ARRAY", "::print()\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        cout << a[i] << ", "'\\t'", ";\n    }\n    cout << endl;\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        cout << b[i] << ", "'\\t'", ";\n    }\n    cout << endl;\n}\nint main()\n{\n    float m[", "10", "] = { ", "0", ",", "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", ",", "27", " };\n    ", "ARRAY", " arr(m);\n    arr.process();\n    arr.print();\n\n\n    system(", "\"pause\"", ");\n    return ", "0", ";\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "不能将 socket=serverSocket.accept() 写在runnable中的run方法中，\r\nserverSocket.accept() 是服务器接收到客户端连接，如果写在runnable中的run方法中，那意思就是——每一个子线程运行run方法时们都会serverSocket.accept()尝试去监听8888端口，", "Konwledge_Point": "主程序", "Question": ["【小白求教】JAVA多线程跑ServerSocket内存逐渐爆满死机", ["第一个是教材上正确的代码，可以正常多线程运行的", "\n主程序：", "\npackage com.server;", "\nimport java.io.*;", "\nimport java.util.*;", "\nimport java.net.*;", "\nimport com.bean.*;", "\nimport com.biz.ServerBiz;", "\npublic class MainServer {", "\n            private ServerSocket serverSocket;", "\n            private Socket socket;", "\n            private InputStream in;", "\n            private OutputStream out;", "\n\n", "public MainServer() {\n    //创建服务器的套接字\n    try {\n        serverSocket=new ServerSocket(8888);\n\n        System.out.println(\"服务器已经启动.....\");\n        while(true){\n            socket=serverSocket.accept();//监听并且接收客户端请求\n\n            ServerBiz serverBiz=new ServerBiz(socket);\n\n            Thread td=new Thread(serverBiz);//将serverBiz设置到线程中,每开一个客户端，会创建一个新的线程处理客户端的数据\n            td.start();//开始\n        }\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } \n}\n\n\n\n/**\n * @param args\n */\npublic static void main(String[] args) {\n    new MainServer();\n\n}\n", "\n\n", "}", "\n\n", "package com.biz;", "\nimport java.io.*;", "\nimport java.util.*;", "\nimport java.net.*;", "\nimport com.bean.*;", "\n\n", "public class ServerBiz implements Runnable {", "\n            private Socket socket;", "\n            private InputStream in;", "\n            private OutputStream out;", "\n\n", "public ServerBiz(Socket socket) {\n    this.socket=socket;\n    try {\n        in=socket.getInputStream();\n        out=socket.getOutputStream();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n}\n\n\n\n@Override\npublic void run() {\n    try {\n        /************接收***************************************/\n        in=socket.getInputStream();\n        ObjectInputStream objin=new ObjectInputStream(in);\n        Users us=(Users) objin.readObject();\n        int code=0;//状态码\n        if(us!=null){\n            if(us.getUname()!=null&&!us.getUname().trim().equals(\"\")\n                    &&us.getPasswd()!=null&&!us.getPasswd().trim().equals(\"\")){\n                System.out.println(\"账号:\"+us.getUname());\n                System.out.println(\"密码:\"+us.getPasswd());\n                code=1;//登陆成功！\n            }\n        }\n        socket.shutdownInput();//结束接收\n        /******************************************************/\n\n        /*****向客户端发送响应***************************************/\n        out=socket.getOutputStream();\n        out.write(code);//向客户端发送状态码\n        out.flush();\n        socket.shutdownOutput();//结束输出\n        /******************************************************/\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (ClassNotFoundException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n\n}\n", "\n\n", "}", "\n\n", "\n\n", "以上是教材正确的代码，", "\n我奇怪为什么不能将  socket=serverSocket.accept()  写在runnable中的run方法中，于是我修改成了下面的代码，可是这个是不能正常运行的。", "\n先打开任务管理器，再运行这个程序，可以看到内存在很短的时间内逐渐爆满，从而导致电脑无法使用", "\n\n", "主程序：", "\npackage com.server;", "\n\n", "import java.net.*;", "\nimport java.io.*;", "\n\n", "import com.bean.Users;", "\nimport com.biz.ServerBiz;", "\n\n", "public class MainServer {", "\n    private ServerSocket ss;", "\n\n", "public MainServer() {\n\n        try {\n            ss = new ServerSocket(8888);\n            System.out.println(\"服务器已经启动......\");\n            /************************ 客户端发送来的消息 **************************/\n            while (true) {\n\n                ServerBiz sb=new ServerBiz(ss);\n                Thread t=new Thread(sb);\n                t.start();\n            }\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n\n}\n\npublic static void main(String[] args) {\n    new MainServer();\n}\n", "\n\n", "}", "\n\n", "下面是设置的Runnable", "\npackage com.biz;", "\nimport java.net.*;", "\nimport java.io.*;", "\n\n", "import com.bean.Users;", "\n\n", "public class ServerBiz implements Runnable {", "\n    private ServerSocket ss;", "\n\n", "public ServerBiz(ServerSocket ss) {\n\n    this.ss = ss;\n}\n\n\n@Override\npublic void run() {\n    try {\n        Socket sk = ss.accept();\n        InputStream ips = sk.getInputStream();\n        ObjectInputStream objectin = new ObjectInputStream(ips);\n        Users user = new Users();\n        user = (Users) objectin.readObject();\n        int code = 0;\n        if (user != null && user.getPassword() != null\n                && user.getUname() != null\n                && !user.getPassword().trim().equals(\"\")\n                &&!user.getUname().trim().equals(\"\")) {\n            System.out.println(\"用户名：\" + user.getUname());\n            System.out.println(\"密码：\" + user.getPassword());\n            code = 1;\n        }\n        sk.shutdownInput();\n        /**************************************************************/\n\n        /************************ 向客户端发送的消息 **************************/\n        OutputStream ops = sk.getOutputStream();\n        ops.write(code);\n        ops.flush();\n        sk.shutdownOutput();\n        /**************************************************************/\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (ClassNotFoundException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n}\n", "\n\n", "}", "\n\n", "（本来还有个client端，这里忽略）", "\n\n", "求大神指点什么将 socket=serverSocket.accept() 写在Runnable中 ，运行后就死机啊，非常感谢啊！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;b[0]&amp;#61;(27&amp;#43;0&amp;#43;3)/3&amp;#61;10&lt;br /&gt;b[1]&amp;#61;(0&amp;#43;3&amp;#43;6)/3&amp;#61;3&lt;br /&gt;没看出有啥问题&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["建立新数组达不到效果怎么改", ["\n", "15", "、由一个已知一维数组派生出另一个一维数组的派生规则如下：新数组的每一元素等于原始数组的对应元素及其相邻两元素的平均值。其中第", "0", "个元素的左邻元素约定为最后一个元素，最后一个元素的右邻元素约定为第", "0", "个元素。假设原始数组为a[", "10", "]，则b[", "0", "]=(a[", "9", "]+a[", "0", "]+a[", "1", "])/", "3", "，b[", "1", "]=(a[", "0", "]+a[", "1", "]+a[", "2", "])/", "3", "，b[", "2", "]=(a[", "1", "]+a[", "2", "]+a[", "3", "])/", "3", "，，b[", "9", "]=(a[", "8", "]+a[", "9", "]+a[", "0", "])/", "3", "。试建立一个实现此功能的类", "ARRAY", "。具体要求如下：\n（", "1", "）私有数据成员\n    float a[", "10", "],b[", "10", "]；a存放原始数组，b存放派生数组。\n（", "2", "）公有成员函数\n    ", "ARRAY", "(float t[", "10", "])：构造函数，初始化成员数组a；\n    void process()：由数组a根据上述派生规则，用循环语句计算数组b的各元素；\n    void print()：屏幕显示数组a和b。\n（", "3", "）在主程序中对该类进行测试。使用测试数据{", "0", ",", "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", ",", "27", "}。\n#include <iostream>\nusing namespace std;\nclass ", "ARRAY", "\n{\nprivate:\n    float a[", "10", "], b[", "10", "];\npublic:\n    ", "ARRAY", "(float t[", "10", "]);\n    void process();\n    void print();\n};\n", "ARRAY", "::", "ARRAY", "(float t[", "10", "])\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        a[i] = t[i];\n    }\n}\nvoid ", "ARRAY", "::process()\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        if (i == ", "0", ")\n        {\n            b[", "0", "] = (a[", "9", "] + a[", "0", "] + a[", "1", "]) / ", "3", ";\n        }\n        else if (i == ", "9", ")\n        {\n            b[", "9", "] = (a[", "8", "] + a[", "9", "] + a[", "0", "]) / ", "3", ";\n        }\n        else\n            b[i] = (a[i - ", "1", "] + a[i] + a[i + ", "1", "]) / ", "3", ";\n    }\n}\nvoid ", "ARRAY", "::print()\n{\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        cout << a[i] << ", "'\\t'", ";\n    }\n    cout << endl;\n    for (int i = ", "0", "; i < ", "10", "; i++)\n    {\n        cout << b[i] << ", "'\\t'", ";\n    }\n    cout << endl;\n}\nint main()\n{\n    float m[", "10", "] = { ", "0", ",", "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", ",", "27", " };\n    ", "ARRAY", " arr(m);\n    arr.process();\n    arr.print();\n\n\n    system(", "\"pause\"", ");\n    return ", "0", ";\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for(i &amp;#61; x - 1;i &amp;lt;&amp;#61; x &amp;#43; 1;i&amp;#43;&amp;#43;)  这里改变了最顶层的i。换个变量名&lt;br /&gt;3*3区域内地雷的个数&amp;#xff0c;还需要判断是不是在边界&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c语言，主函数中的变量怎么传给子函数啊……", ["主函数中输入的变量q好像没有传给子函数，导致可以询问无限次……", "请问怎么在只改动子函数的条件下对代码进行改动啊……", "\n", "#", "include", "<stdio.h>", "\n", "void", " ", "work", "(", "int", " mp[][", "210", "],", "int", " q)", ";\n", "int", " ", "main", "()", "{\n    ", "int", " mp[", "210", "][", "210", "];\n    ", "int", " n,m,q,i,j;\n    ", "scanf", "(", "\"%d%d\"", ",&n,&m);\n    ", "for", "(i=", "1", ";i<=n;i++){\n        ", "for", "(j=", "1", ";j<=m;j++){\n            ", "scanf", "(", "\"%d\"", ",&mp[i][j]);\n        }\n    }\n    ", "scanf", "(", "\"%d\"", ",&q);\n    ", "work", "(mp,q);\n}\n", "void", " ", "work", "(", "int", " mp[][", "210", "],", "int", " q)", "\n", "{\n    ", "int", " count = ", "0", ",i,j,x,y;\n    ", "for", "(i = ", "1", ";i < q;i++)\n    {\n        count = ", "0", ";\n            ", "scanf", "(", "\"%d %d\"", ",&x,&y);\n            ", "if", "(mp[x][y] == ", "1", ")\n            {\n                ", "printf", "(", "\"Boom!\\n\"", ");\n            }\n            ", "if", "(mp[x][y] != ", "1", ")\n            {\n                ", "for", "(i = x - ", "1", ";i <= x + ", "1", ";i++)\n                {\n                    ", "for", "(j = y - ", "1", ";j <= y + ", "1", ";j++)\n                    {\n                        ", "if", "(mp[i][j] == ", "1", ")\n                        count++;\n                    }\n                }\n                ", "printf", "(", "\"%d\\n\"", ",count);\n            }\n    }\n}\n\n\n", "\n", "给出一个n∗m大小的网格，坐标从（1，1）开始，在这个网格中每个格子会有一个数字0或者1。0代表这是一个安全区域，1代表这个位置存在一个地雷，接下来我们给出q次询问，每次询问一个坐标（x，y），如果这个位置是一个地雷，那么输出Boom!,如果是一个安全区域，请你输出以他为中心的一个3*3区域内地雷的个数", "\n", "下方主程序已经编写完成，请参照主函数，编写无返回值的work函数，C语言提交时仅提交work函数", "\n", "#include<stdio.h>", "void work(int mp[][210],int q);", "int main(){", "    int mp[210][210];", "    int n,m,q,i,j;", "    scanf(\"%d%d\",&n,&m);", "    for(i=1;i<=n;i++){", "        for(j=1;j<=m;j++){", "            scanf(\"%d\",&mp[i][j]);", "        }", "    }", "    scanf(\"%d\",&q);", "    work(mp,q);", "}", "\n", "输入格式:", "\n", "第一行输出n，m（0<n,m<=200）代表网格的大小", "接下来n行，每一行输入m个数字，代表这个格子内的状态", "接下来输入一个q（0<q<=1000）代表q次询问", "\n", "接下来q行每一行输入两个数字 x，y（0<x<=n,0<y<=m）代表查询的位置", "输出格式:", "\n", "对于每次询问输出Boom!或者周围地雷数量", "输入样例:", "\n", "3 3", "1 0 1", "0 1 0", "1 0 1", "9", "1 1", "1 2", "1 3", "2 1", "2 2", "2 3", "3 1", "3 2", "3 3", "\n", "输出样例:", "\n", "Boom!", "3", "Boom!", "3", "Boom!", "3", "Boom!", "3", "Boom!"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint fun(int a[][3],int n)\n{\n    /*********Begin*********/\n    int i,sum&amp;#61;0;\n    for(i&amp;#61;0; i&amp;lt;3; i&amp;#43;&amp;#43;)\n        sum&amp;#43;&amp;#61;a[i][i]*a[i][i];\n    return sum;\n    /**********End**********/\n}\nint main()\n{\n    int s,a[3][3]&amp;#61; {1,2,3,4,5,6,7,8,9};\n\n    s&amp;#61;fun(a,3);\n    printf(&amp;#34;s&amp;#61;%d\\n&amp;#34;,s);\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"238\" src=\"https://img-ask.csdnimg.cn/upload/1623661851547.png\" width=\"539\" /&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["【程序设计】编写fun()函数， 其功能为计算矩阵主对角线元素的平方和并作为函数值返回。", ["\n\n", "【程序设计】编写fun()函数， 其功能为计算矩阵主对角线元素的平方和并作为函数值返回。", "\n", "\n注意:请勿改动主函数main和其他函数中的任何内容，仅在函数中Begin与End间填入你编写的若干语句。", "\n", "\n#include <stdio.h>", "\n", "\nint fun(int a[][3],int n)", "\n{", "\n/*********Begin*********/", "\n", "\n/**********End**********/", "\n", "\nint main()", "\n", "\nint s,a[3][3]={1,2,3,4,5,6,7,8,9};", "\n\n", "s=fun(a,3);", "\nprintf(\"s=%d\\n\",s);", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;這段代碼可以修改為&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;run_game&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;运行游戏&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        self._create_enemy()\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n            self._check_event()\n            self._update_screen()\n            self.ship.update()\n            self._update_bullet()\n            &lt;span class=\"hljs-comment\"&gt;# self._create_enemy()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;self._create_enemy() 一開始呼叫一次就好。&lt;br /&gt;否則會一直消耗記憶。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python飞机大战：\nFatal Python error: (pygame parachute) Segmentation Fault", ["python飞机大战运行时总会抛出：", "Fatal Python error: (pygame parachute) Segmentation Fault", "Python runtime state: initialized", "在程序运行不到半分钟就报错，而且在此期间每一次游戏运行越来越慢", "不知为何，求解", "\n", "Alien.py\n", "import", " pygame\n", "import", " sys\n", "import", " ship\n", "import", " settings\n", "from", " enemy ", "import", " Enemy\n", "from", " Bullet ", "import", " Bullet\n\n\n", "class", " ", "Alien_invasion", ":\n    ", "\"\"\"游戏主程序\"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "\"\"\"初始化\"\"\"", "\n\n        pygame.init()\n\n        self.settings = settings.Settings()\n\n        ", "# self.screen = pygame.display.set_mode((0, 0), pygame.FULLSCREEN)", "\n        ", "# self.settings.screen_width = self.screen.get_rect().width", "\n        ", "# self.settings.screen_height = self.screen.get_rect().height", "\n        self.screen = pygame.display.set_mode((self.settings.screen_width, self.settings.screen_height))\n\n        pygame.display.set_caption(", "'Alien_invasion'", ")\n\n        self.ship = ship.Ship(self)\n\n        self.bullets = pygame.sprite.Group()\n        self.enemies = pygame.sprite.Group()\n\n    ", "def", " ", "run_game", "(", "self", "):\n        ", "\"\"\"运行游戏\"\"\"", "\n        ", "while", " ", "True", ":\n            self._check_event()\n            self._update_screen()\n            self.ship.update()\n            self._update_bullet()\n            self._create_enemy()\n\n    ", "def", " ", "_check_event", "(", "self", "):\n        ", "\"\"\"检索事件\"\"\"", "\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", " == pygame.QUIT:\n                sys.exit()\n\n            ", "elif", " event.", "type", " == pygame.KEYDOWN:\n                self._check_keydown_events(event)\n            ", "elif", " event.", "type", " == pygame.KEYUP:\n                self._check_keyup_events(event)\n\n    ", "def", " ", "_check_keydown_events", "(", "self, event", "):  ", "# 传入参数event供访问event.key 属性", "\n        ", "\"\"\"响应按键\"\"\"", "\n        ", "if", " event.key == pygame.K_RIGHT:\n            self.ship.moving_right = ", "True", "\n        ", "if", " event.key == pygame.K_LEFT:\n            self.ship.moving_left = ", "True", "\n        ", "if", " event.key == pygame.K_q:\n            sys.exit()\n        ", "if", " event.key == pygame.K_SPACE:\n            self._fire_bullet()\n\n    ", "def", " ", "_check_keyup_events", "(", "self, event", "):  ", "# 传入参数event供访问event.key 属性", "\n        ", "\"\"\"响应按键\"\"\"", "\n        ", "if", " event.key == pygame.K_RIGHT:\n            self.ship.moving_right = ", "False", "\n        ", "if", " event.key == pygame.K_LEFT:\n            self.ship.moving_left = ", "False", "\n\n    ", "def", " ", "_fire_bullet", "(", "self", "):\n        new_bullet = Bullet(self)\n        self.bullets.add(new_bullet)\n\n    ", "def", " ", "_update_bullet", "(", "self", "):\n        self.bullets.update()\n        ", "for", " bullet ", "in", " self.bullets.copy():\n            ", "if", " bullet.rect.bottom <= ", "0", ":\n                self.bullets.remove(bullet)\n\n    ", "def", " ", "_create_enemy", "(", "self", "):\n        enemy = Enemy(self)\n        enemy_width = enemy.rect.width\n        availzble_space_x = self.settings.screen_width - (", "2", " * enemy_width)\n        number_enemy_x = availzble_space_x // (", "2", " * enemy_width)\n\n        ", "for", " enemy_number ", "in", " ", "range", "(number_enemy_x):\n            enemy = Enemy(self)\n            enemy.x = enemy_width + ", "2", " * enemy_width * enemy_number\n            enemy.rect.x = enemy.x\n            self.enemies.add(enemy)\n\n    ", "def", " ", "_update_screen", "(", "self", "):\n        ", "\"\"\"翻新屏幕\"\"\"", "\n        self.screen.fill(self.settings.bg_color)\n        self.ship.blitme()\n        ", "for", " bullet ", "in", " self.bullets.sprites():\n            bullet.draw_bullets()\n        self.enemies.draw(self.screen)\n        pygame.display.flip()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    ai = Alien_invasion()\n    ai.run_game()\n\n", "############ship.py#############", "\n", "import", " pygame\n\n\n", "class", " ", "Ship", ":\n    ", "def", " ", "__init__", "(", "self, ai_game", "):\n        self.screen = ai_game.screen\n        self.screen_rect = ai_game.screen.get_rect()\n\n        self.image = pygame.image.load(", "'images/Ship_right.bmp'", ")  ", "# 加载飞船图片", "\n        self.rect = self.image.get_rect()\n\n        self.rect.midbottom = self.screen_rect.midbottom\n\n        self.settings = ai_game.settings\n        self.x = ", "float", "(self.rect.x)\n\n        ", "# 移动标志", "\n        self.moving_left = ", "False", "\n        self.moving_right = ", "False", "\n        self.moving_up = ", "False", "\n        self.moving_down = ", "False", "\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "\"\"\"根据移动标志移动飞船\"\"\"", "\n        ", "if", " self.moving_right ", "and", " self.rect.right < self.screen_rect.right:\n            self.x += self.settings.ship_speed\n        ", "if", " self.moving_left ", "and", " self.rect.left > ", "0", ":\n            self.x -= self.settings.ship_speed\n\n        self.rect.x = self.x\n\n    ", "def", " ", "blitme", "(", "self", "):\n        ", "\"\"\"构建飞船图像\"\"\"", "\n        self.screen.blit(self.image, self.rect)\n\n", "###############Bullet.py#################", "\n", "import", " pygame\n", "from", " pygame.sprite ", "import", " Sprite\n\n\n", "class", " ", "Bullet", "(", "Sprite", "):\n    ", "\"\"\"管理飞船所发射子弹的类\"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self, ai_game", "):\n        ", "\"\"\"在飞船当前位置传建一个子弹对象\"\"\"", "\n        ", "super", "().__init__()\n        self.screen = ai_game.screen\n        self.settings = ai_game.settings\n        self.color = self.settings.bullet_color\n\n        ", "# 在(0,0)处创建一个表示子弹的矩形，再设置正确的位置", "\n        self.rect = pygame.Rect(", "0", ", ", "0", ", self.settings.bullet_width,\n                                self.settings.bullet_height)\n        self.rect.midtop = ai_game.ship.rect.midtop\n\n        ", "# 储存用小数表示的子弹的位置", "\n        self.y = ", "float", "(self.rect.y)\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "\"\"\"向上移动子弹\"\"\"", "\n        ", "# 更新表示子弹位置的小数值", "\n        self.y -= self.settings.bullet_speed\n        ", "# 更新表示子弹的rect位置", "\n        self.rect.y = self.y\n\n    ", "def", " ", "draw_bullets", "(", "self", "):\n        ", "\"\"\"在屏幕上绘制子弹\"\"\"", "\n        pygame.draw.rect(self.screen, self.color, self.rect)\n\n", "##########Enemy.py##########", "\n", "import", " pygame\n", "from", " pygame.sprite ", "import", " Sprite\n\n\n", "class", " ", "Enemy", "(", "Sprite", "):\n    ", "def", " ", "__init__", "(", "self, game", "):\n        ", "super", "().__init__()\n\n        self.screen = game.screen\n        self.screen_rect = game.screen.get_rect()\n\n        self.image = pygame.image.load(", "'images/enemy_ship.bmp'", ")\n        self.rect = self.image.get_rect()\n\n        self.rect.x = self.rect.width\n        self.rect.y = self.rect.height\n\n        self.x = ", "float", "(self.rect.x)\n\n\n", "###########settings.py##########", "\n", "class", " ", "Settings", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        self.screen_width = ", "1200", "\n        self.screen_height = ", "800", "\n        self.bg_color = (", "230", ",", "230", ",", "230", ")\n        self.ship_speed = ", "3.3", "\n\n        self.bullet_speed = ", "3.5", "\n        self.bullet_width = ", "3", "\n        self.bullet_height = ", "15", "\n        self.bullet_color = (", "60", ",", "60", ",", "60", ")\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当前页提取列表数据超出索引&amp;#xff0c;这也不是什么报错&amp;#xff0c;当你列表里面没东西或者索引值超过了列表元素的时候就会出现这个问题&amp;#xff0c;&lt;br /&gt;&lt;strong&gt;就是你爬到的这页&amp;#xff0c;抓取的这个列表值&amp;#xff0c;里面没东西或者东西太少。所以报错了。&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;建议你换个网站爬取那个年份的内容或者就忽略掉它&amp;#xff0c;看看这个网站331页的结构&amp;#xff0c;重新编写爬虫程序。&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python爬虫爬到331页无法继续", ["\n", "from", " selenium import webdriver\n", "from", " selenium", ".webdriver", " import ActionChains\n", "from", " selenium", ".webdriver", ".common", ".by", " import By\n", "from", " lxml import etree\n", "from", " ", "time", " import sleep\nimport pandas as pd\n", "from", " bs4 import BeautifulSoup\n\n\ndef get_row(", "li", "):\n    list1 = []\n    l1_1 = li.", "find_all", "(", "'a'", ", limit=", "2", ")\n    l1_2 = li.", "find_all", "(", "'th'", ")\n    for x in l1_1:\n        list1.", "append", "(x.string)\n    for y in l1_2:\n        list1.", "append", "(y.string)\n    return list1\n\n\n# 实例化一个浏览器对象\nwd = webdriver.", "Chrome", "(executable_path=", "'./chromedriver'", ")\n# 让浏览器发起一个指定url的请求\nwd.", "get", "(", "'http://vip.stock.finance.sina.com.cn/fund_center/index.html#hbphall'", ")\n# 设置隐式等待时间\nwd.", "implicitly_wait", "(", "20", ")\n# 获取浏览器当前界面的动态页面源码数据\npage_text = wd.page_source\n# 解析企业名称\nsoup = ", "BeautifulSoup", "(page_text, ", "\"html.parser\"", ")\n\n# 建立空列表\nlist_ji = []\n\n### 最大页码\nmax_page = wd.", "find_element", "(By.XPATH,", "'//*[@id=\"pHBPH\"]/a[3]'", ").text\n\n### 检测测数据是否加载完成\ndef ", "data_exsist", "():\n    # 获取浏览器当前界面的动态页面源码数据\n    page_text = wd.page_source\n    # 解析企业名称\n    soup = ", "BeautifulSoup", "(page_text, ", "\"html.parser\"", ")\n\n    if soup.", "find_all", "(", "'tr'", ",class_=", "'red'", ") :\n        global list_ji\n        l1 =soup.", "find_all", "(", "'tr'", ",class_ = ", "'red'", ")\n        for j in ", "range", "(", "0", ",", "40", ") :\n            list_ji.", "append", "(", "get_row", "(l1[j]))\n    else:\n        time.", "sleep", "(", "10", ")\n        if soup.", "fin_all", "(", "'tr'", ", class_=", "'red'", "):\n            l1 = soup.", "find_all", "(", "'tr'", ", class_=", "'red'", ")\n            for j in ", "range", "(", "0", ", ", "40", ", ", "1", "):\n                list_ji.", "append", "(", "get_row", "(l1[j]))\n        else:\n            wd.", "refresh", "()\n            time.", "sleep", "(", "5", ")\n            ", "data_exsits", "()\n\n### 主程序\ndef ", "get_all_data", "() :\n    global wd,list_ji    ###声明全局变量\n    for i in ", "range", "(", "1", ",", "int", "(max_page)+", "1", ") :\n        if i != ", "int", "(max_page)-", "1", " :\n            ", "data_exsist", "()\n            ", "print", "(f", "'当前第{i}页'", ")\n            wd.", "find_element", "(By.LINK_TEXT, ", "'下一页'", ").", "click", "()\n        else :\n            l1 = soup.", "find_all", "(", "'tr'", ", class_=", "'red'", ")\n            for line in (", "0", ",", "40", ") :\n                try :\n                    list_ji.", "append", "(", "get_row", "(l1[j]))\n                except Exception :\n                    break\n                    ###报错就说明所有数据都拿完了，直接退出即可\n\n", "get_all_data", "()\ncolumn = [", "\"基金代码\"", ", ", "\"基金名称\"", ", ", "\"单位净值\"", ", ", "\"累计净值\"", ", ", "\"近三个月(%)\"", ", ", "\"近六个月(%)\"", ", ", "\"近一年(%)\"", ",\n          ", "\"今年以来(%)\"", ", ", "\"成立以来(%)\"", "]\nresult = pd.", "DataFrame", "(list_ji, columns=column)\npd.", "set_option", "(", "'display.max_rows'", ", None)  # 显示pandas所有行\n# result.columns = [", "\"基金代码\"", ", ", "\"基金名称\"", ", ", "\"单位净值\"", ", ", "\"累计净值\"", ", ", "\"近三个月(%)\"", ", ", "\"近六个月(%)\"", ", ", "\"近一年(%)\"", ", ", "\"今年以来(%)\"", ", ", "\"成立以来(%)\"", "]\n", "print", "(result)\nwd.", "quit", "()\n", "\n", "总是爬取到331页就没法继续了，请求帮助。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种错误一般是输入指针问题。&lt;br /&gt;44行scanf(&amp;#34;%d&amp;#34;, p1-&amp;gt;S[i]); 缺&amp;amp;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["一个stdio.h的错误0x00007FFB452ED646 (ucrtbased.dll)处", ["要写一个职工工资管理系统；", "\n", "1． 职工工资项目信息的基本结构如下：", "char *ITEM[MAXI] //职工工资项目数组，存放工资项目名称。（字符串数组）", "说明：工资项目可包括：基本工资、职务工资、岗位津贴、医疗保险、公积金、", "奖金、住房补贴等。工资项目可以按需要增加、修改和删除，不固定。工资项目", "最多 50 项, 0~49。", "2．系统基本功能：提供工资项目信息的录入、修改和删除；职工工资信息的录", "入、修改、查询和统计等，工资项目及职工工资信息可保存在文件中，系统启动", "时打开文件可新增职工工资信息并保存。", "\n", "结构体：", "\n", "typedef", " ", "struct", " ", "staff", " {\n    ", "int", " num;            ", "/* 职工编号 */", "\n    ", "char", " name[", "20", "];        ", "/* 姓名 */", "\n    ", "char", " dept[", "50", "];        ", "/* 所属部门 */", "\n    ", "double", " S[MAXI];         ", "/* 工资项目数组，与数组 ITEM[MAXI]的标号对应，0~49*/", "\n    ", "double", " total;        ", "/* 工资合计 */", "\n    ", "struct", " ", "stuff", " *next;\n}EMPLOYEE;\n", "\n", "主程序中全局变量：", "\n", "EMPLOYEE* head = ", "NULL", ", * tail = ", "NULL", ";\n", "char", " ITEM[MAXI][", "20", "];\n", "int", " count1 = ", "-1", ";        ", "/*项目数量计数*/", " ", "/*count1 +1 是真实的项目数量*/", "\n", "int", " count_staffnum = ", "0", ";        ", "/*职工数量统计*/", "\n", "\n", "相关函数：", "\n", "extern", " EMPLOYEE* head;\n", "extern", " ", "int", " count1;\n", "extern", " ", "char", " ITEM[MAXI][", "20", "];\n", "int", " ", "fun31", "()", "\n", "{\n    ", "int", " num;\n    ", "int", " cnt=", "0", ";\n    ", "char", " re[", "10", "];\n\n    EMPLOYEE* p1=", "NULL", ";\n    ", "if", " (head == ", "NULL", ")     ", "/*职工信息为空*/", "\n    {\n        ", "printf", "(", "\"职工信息记录为空，请先添加职工信息\\n\"", ");\n        ", "printf", "(", "\"请按任意键返回上一级\\n\"", ");\n        ", "printf", "(", "\">>\"", ");\n        ", "getch", "(re);\n        ", "return", " ", "NULL", ";\n    }\n    ", "else", "{\n        ", "printf", "(", "\"请输入要新增工资项目的职工编号\\n\"", ");\n        ", "printf", "(", "\">>\"", ");\n        ", "scanf", "(", "\"%d\"", ", &num);\n        p1 = (EMPLOYEE*)", "malloc", "(", "sizeof", "(EMPLOYEE*));\n        p1 = head;\n        ", "while", " (p1 != ", "NULL", ")    ", "/*判断是否存在该职工*/", "\n        {\n            ", "if", " (p1->num == num)\n            {\n                cnt++;\n                ", "break", ";\n            }\n            p1 = p1->next;\n        }\n        ", "if", " (cnt == ", "1", ") \n        {\n            ", "printf", "(", "\"以下是已有的工资项目，请按顺序填入，按空格输入下一项\\n\"", ");\n            ", "for", " (", "int", " i = ", "0", "; i < count1 + ", "1", "; i++)\n            {\n                ", "printf", "(", "\"%s   \"", ", ITEM[i]);\n            }\n            ", "printf", "(", "\"\\n\"", ");\n            ", "for", " (", "int", " i = ", "0", "; i < count1 + ", "1", "; i++)\n            {\n                ", "scanf", "(", "\"%d\"", ", p1->S[i]);\n            }\n            ", "printf", "(", "\"添加成功！\\n\"", ");\n            ", "printf", "(", "\"请按任意键返回上一级\\n\"", ");\n            ", "printf", "(", "\">>\"", ");\n            ", "getch", "(re);\n            ", "return", " ", "NULL", ";\n        }\n        ", "else", "\n        {\n            ", "printf", "(", "\"该职工信息不存在，添加失败！\\n\"", ");\n            ", "printf", "(", "\"请按任意键返回上一级\\n\"", ");\n            ", "printf", "(", "\">>\"", ");\n            ", "getch", "(re);\n            ", "return", " ", "NULL", ";\n        }\n    }\n}\n", "\n", "建立链表用于储存职工的ID、姓名、部门、工资项目等；", "我想通过指针p1来寻找到链表里面想要添加工资项目的职工，从而可以将工资输入到该职工的信息中，但是出现如下错误：", "\n", "请教一下各位，这个怎么解决？"]], "Tag": "程序设计"}
{"Answer": "把下面的代码：\r\np=la;\r\nwhile(p-&gt;next)\r\n{ \r\nif(strcmp(p-&gt;next-&gt;data.carnum,carnum1)==0)\r\n{\r\nq=p-&gt;next ;\r\np-&gt;next=q-&gt;next ;\r\n\r\n//printf(\"%s,%s\\n\",q-&gt;data.carnum,q-&gt;data.time);\r\nfree(q) ;\r\nreturn 1;\r\n}\r\np=p-&gt;next;\r\n}\r\n修改为：\r\np=la-&gt;next;\r\nq=la;\r\nwhile(p)\r\n{ \r\nif(strcmp(p-&gt;data.carnum,carnum1)==0)\r\n{\r\nq-&gt;next=p-&gt;next ;\r\n\r\n//printf(\"%s,%s\\n\",p-&gt;data.carnum,p-&gt;data.time);\r\nfree(p) ;\r\nreturn 1;\r\n}\r\nq=p;\r\np=p-&gt;next;\r\n}", "Konwledge_Point": "主程序", "Question": ["我的代码没有办法删除节点，有大神可以给看一下吗？", ["/*停车场有100个车位，", "\n当未停满100辆车时，允许车辆进入，车辆进入时记录车牌号和进入时间；", "\n停满100辆车后，不允许车辆进入。", "\n车辆开出时，显示车辆车牌号和车辆进入的时间。", "\n*/", "\n#include", "\n#include", "\n#include", "\n#include", "\n\n", "typedef struct", "\n{", "\n    char carnum[10];", "\n    char time[10];", "\n}elemtype;", "\n\n", "typedef struct node", "\n{", "\n    elemtype data;", "\n    struct node *next;", "\n}node,*linklist;", "\n\n", "int init_link(linklist &la)//构造一个空的线性表", "\n{", "\n    la=(node *)malloc(sizeof(node));", "\n    if(la==NULL) exit(-1);", "\n    la->next=NULL;", "\n    return 1;", "\n}", "\n\n", "int arrival(linklist &la,elemtype e)//车辆到达", "\n{", "\n    linklist p,s;", "\n    p=la ;", "\n    while(p->next)", "\n        p=p->next ; ", "\n    s=(linklist)malloc(sizeof(node));", "\n    if(!s) return 0;", "\n    s->data=e ;", "\n    s->next=p->next ;", "\n    p->next=s ;", "\n    return 1 ;", "\n}", "\n\n", "int leave(linklist &la,char *carnum1)//车辆离开", "\n{", "\n    linklist p,q;", "\n    p=la;", "\n    while(p->next)", "\n    { ", "\n        if(strcmp(p->next->data.carnum,carnum1)==0)", "\n        {", "\n            q=p->next ;", "\n            p->next=q->next ;", "\n            //printf(\"%s,%s\\n\",q->data.carnum,q->data.time);", "\n            free(q) ;", "\n            return 1;", "\n        }", "\n        p=p->next;", "\n    }", "\n    return 0;", "\n}", "\n\n", "void list(linklist &la)//车辆信息", "\n{", "\n    linklist p;", "\n    p=la->next;", "\n    while(p)", "\n    {", "\n        printf(\"%s %s\\n\",p->data.carnum,p->data.time);", "\n        p=p->next;", "\n    }", "\n}", "\n\n", "int main()", "\n{", "\n    linklist adr;", "\n    init_link(adr);", "\n    elemtype x;", "\n    int t=0;", "\n    char ch,carnum[10];", "\n    do", "\n    {", "\n        printf(\"1.车辆到达 \\n\");", "\n        printf(\"2.车辆离开 \\n\");", "\n        printf(\"3.车辆信息 \\n\");", "\n        printf(\"4.退出程序 \\n\");", "\n        printf(\"请选择:\\n\");", "\n        scanf(\"%c\",&ch);", "\n        switch(ch)", "\n        {", "\n        case '1'://车辆到达", "\n            if(t\n            {", "\n                printf(\"输入车牌号和时间\\n\");", "\n                scanf(\"%s,%s\",x.carnum,x.time);", "\n                if(arrival(adr,x)==1)", "\n                {", "\n                    t=t+1;", "\n                    printf(\"成功进入停车场\\n\");", "\n                }", "\n                else", "\n                    printf(\"进入停车场失败\\n\");", "\n            }", "\n            else", "\n                printf(\"停车场已满\\n\");", "\n            break;", "\n        case '2'://车辆离开", "\n            if(t>0)", "\n            {", "\n                printf(\"输入车牌号\\n\");", "\n                scanf(\"%s\",carnum);", "\n                if(leave(adr,carnum))", "\n                {", "\n                    printf(\"车辆成功开出\\n\");", "\n                    t=t-1;", "\n                }", "\n                else", "\n                {", "\n                    printf(\"车辆没有成功开出，请重试!\\n\");", "\n                }", "\n            }", "\n            else", "\n                printf(\"停车场内没有车\\n\");", "\n            break;", "\n        case '3'://车辆信息", "\n            list(adr);", "\n            printf(\"%d\\n\",t);", "\n            break;", "\n        case '4'://退出主程序", "\n            return 0;", "\n        default:printf(\"没有该选项，请重新选择!\\n\");", "\n        }", "\n    }while(1);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你的布局是这样子&lt;br /&gt;你的读取存在问题&amp;#xff0c;回车会读进去&amp;#xff0c;还有加和时&amp;#xff0c;会溢出&amp;#xff0c;比如 a[-1][1]就明显溢出了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n#include&amp;lt;stdio.h&amp;gt;\n//#include&amp;lt;stdlib.h&amp;gt;\nint a[&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;}; //一张地图&amp;#xff0c;有雷为一&amp;#xff0c;无雷为零\nint main() {\n    //memset(a, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sizeof(a));//地图最开始清空\n    //int b[&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;];//一张地图&amp;#xff0c;有雷为一&amp;#xff0c;无雷为零\n    int n, m;\n    char tmp[&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;m, &amp;amp;n);\n    setbuf(stdin, &lt;span class=\"hljs-symbol\"&gt;NULL&lt;/span&gt;);\n    for (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) { //读入地图\n        for (int j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            do {\n                //&lt;span class=\"hljs-symbol\"&gt;TODO&lt;/span&gt;\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;tmp[i][j]);\n            } while ( tmp[i][j] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; tmp[i][j] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;  );\n\n            if (tmp[i][j] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;) {\n                a[i][j] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;//如果是地雷就将这个点设为一\n            }\n        }\n    }\n    for (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) {\n        for (int j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            if (a[i][j] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;); //如果是地雷不用输出数字\n            else {\n                int up &amp;#61; i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n                int down &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt; n ? i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n                int lift &amp;#61; j - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? j - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n                int right &amp;#61; j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt; n ? j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n                int num  &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                if ( up !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ) {\n                    if ( lift !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ) {\n                        num &amp;#43;&amp;#61; a[up][lift];\n                    }\n                    num &amp;#43;&amp;#61; a[up][j];\n                    if ( right !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ) {\n                        num &amp;#43;&amp;#61; a[up][right];\n                    }\n                }\n                if (down !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) {\n                    if ( lift !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ) {\n                        num &amp;#43;&amp;#61; a[down][lift];\n                    }\n                    num &amp;#43;&amp;#61; a[down][j];\n                    if ( right !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ) {\n                        num &amp;#43;&amp;#61; a[down][right];\n                    }\n                }\n                if( lift !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ){\n                    num&amp;#43;&amp;#61;a[i][lift];\n                }\n                if( right !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ){\n                    num&amp;#43;&amp;#61;a[i][right];\n                }\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, num);\n                //将旁边的雷加起来输出 (旁边的雷直接变成&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff09;\n            }\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;//愉快的结束了主程序\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["（扫雷）我用测试样例做对了，为什么评测过不了", ["问题遇到的现象和发生背景", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#include<stdio.h>\nint main()\n{\n    int m, n;\n    char a", "[100]", "[100]", ";\n    int count", "[100]", "[100]", ";\n    scanf(", "\"%d%d\"", ", &m, &n);\n    setbuf(stdin, NULL);\n    /*fflush(stdin);*/\n    for (int i =1; i <=m; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            scanf(", "\"%c\"", ", &a", "[i]", "[j]", ");\n        }\n        setbuf(stdin, NULL);\n        /*fflush(stdin);*/\n    }\n    for (int i =1; i <= m; i++)\n    {\n        for (int j =1; j <= n; j++)\n        {\n            if (i > 0) {\n                if (a", "[i - 1]", "[j]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i - 1]", "[j - 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i - 1]", "[j + 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i]", "[j - 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i]", "[j + 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i + 1]", "[j]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i + 1]", "[j - 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n                if (a", "[i + 1]", "[j + 1]", " == '*')\n                    count", "[i]", "[j]", "++;\n            }\n        }\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            if (a", "[i]", "[j]", " == '?')\n                a", "[i]", "[j]", " = '0' + count", "[i]", "[j]", ";\n        }\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            printf(", "\"%c\"", ", a", "[i]", "[j]", ");\n        }\n        printf(", "\"\\n\"", ");\n    }\n    return 0;\n}\n\n\n```#include<stdio.h>\n//#include<stdlib.h>\nint a", "[105]", "[105]", "={0};//一张地图，有雷为一，无雷为零 \nint main()\n{\n    //memset(a, 0, sizeof(a));//地图最开始清空 \n    //int b", "[105]", "[105]", ";//一张地图，有雷为一，无雷为零 \n    int n, m;\n    char tmp", "[105]", "[105]", ";\n    scanf(", "\"%d%d\"", ", &m, &n);\n    /*setbuf(stdin, NULL);*/\n    for (int i = 1; i <=m; i++)//读入地图\n    {\n        for (int j = 1; j <=n; j++)\n        {\n            scanf(", "\"%c\"", ",&tmp", "[i]", "[j]", ");\n            if (tmp", "[i]", "[j]", " == '*') \n                a", "[i]", "[j]", " = 1;//如果是地雷就将这个点设为一 \n        }\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            if (a", "[i]", "[j]", " == 1) printf(", "\"*\"", "); //如果是地雷不用输出数字 \n            else\n            {\n                printf(", "\"%d\"", ", a", "[i + 1]", "[j + 1]", " + a", "[i + 1]", "[j - 1]", " + a", "[i + 1]", "[j]", " + a", "[i]", "[j + 1]", " + a", "[i]", "[j - 1]", " + a", "[i - 1]", "[j + 1]", " + a", "[i - 1]", "[j]", " + a", "[i - 1]", "[j - 1]", ");\n                //将旁边的雷加起来输出 (旁边的雷直接变成1）\n            }\n        }\n        printf(", "\"\\n\"", ");\n    }\n    return 0;//愉快的结束了主程序 \n}\n我换了一种解法还是过不了\n\n```c\n\n\n", "\n", "\n", "运行结果及报错内容", "\n", "但是我自己输入时都对啊", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;getMax()重复定义&lt;br /&gt;&amp;#xff08;2&amp;#xff09;student类没有重载&amp;lt;&amp;lt;运算符&lt;br /&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt;  &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt;  std;\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;  &amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt;  ElemType&amp;gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt;  &lt;span class=\"hljs-title class_\"&gt;myArrayList&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  mSize;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  mLen;\n    ElemType* mpArr;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  n);\n    &lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(ElemType* a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  n);\n    &lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(myArrayList&amp;lt;ElemType&amp;gt;&amp;amp; other);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;show&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;ElemType  &lt;span class=\"hljs-title\"&gt;getMax&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//ostream&amp;amp; operator&amp;lt;&amp;lt;(ElemType&amp;amp; a);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//*************************&lt;/span&gt;\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt; ElemType&amp;gt;\nmyArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(ElemType* a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) :&lt;span class=\"hljs-built_in\"&gt;mpArr&lt;/span&gt;(a), &lt;span class=\"hljs-built_in\"&gt;mSize&lt;/span&gt;(n) {\n    mLen &amp;#61; mSize;\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt;  ElemType&amp;gt;\nmyArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(myArrayList&amp;lt;ElemType&amp;gt;&amp;amp; other)\n \n{\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mLen &amp;#61; other.mLen;\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mSize &amp;#61; other.mSize;\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mpArr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;  ElemType[&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mLen];\n \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mLen; i&amp;#43;&amp;#43;)\n \n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mpArr[i] &amp;#61; other.mpArr[i];\n \n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt;  ElemType&amp;gt;\nmyArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;myArrayList&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  n)\n \n{\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mSize &amp;#61; n;\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mLen &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n \n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;mpArr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;  ElemType[mSize];\n \n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;  &amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt;  ElemType&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;  myArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;()\n \n{\n \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;)\n \n        cout &amp;lt;&amp;lt; mpArr[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;      &amp;#34;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//三个空格&lt;/span&gt;\n \n    cout &amp;lt;&amp;lt; endl;\n \n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;  &amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt;  ElemType&amp;gt;\nElemType  myArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;getMax&lt;/span&gt;()\n{\n    ElemType    max;\n    max &amp;#61; mpArr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max &amp;lt; mpArr[i])\n            max &amp;#61; mpArr[i];\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  max;\n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt; ElemType&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; myArrayList&amp;lt;ElemType&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;() {\n    ElemType n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;) {\n        t &amp;#61; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; mLen; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mpArr[t] &amp;gt; mpArr[j]) {\n                t &amp;#61; j;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; t) {\n            n &amp;#61; mpArr[i];\n            mpArr[i] &amp;#61; mpArr[t];\n            mpArr[t] &amp;#61; n;\n        }\n    }\n}\n \n&lt;span class=\"hljs-comment\"&gt;//template&amp;lt;typename  ElemType&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//ostream&amp;amp; myArrayList&amp;lt;ElemType&amp;gt;::operator&amp;lt;&amp;lt;(ElemType&amp;amp; a) {&lt;!-- --&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    cout &amp;lt;&amp;lt; a;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    return cout;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Student.h&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt;  &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  mId;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;  height;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  score;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;  h &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) :&lt;span class=\"hljs-built_in\"&gt;height&lt;/span&gt;(h), &lt;span class=\"hljs-built_in\"&gt;mId&lt;/span&gt;(id), &lt;span class=\"hljs-built_in\"&gt;score&lt;/span&gt;(s){}\n\n    \n    &lt;span class=\"hljs-comment\"&gt;/*Student(Student&amp;amp; c):mId(c.mId),height(c.height),score(c.score) {}\n    Student()*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;myArrayList&lt;/span&gt;&amp;lt;Student&amp;gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream &amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;( ostream &amp;amp; os,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student &amp;amp; c);&lt;span class=\"hljs-comment\"&gt;//修改 重载&amp;lt;&amp;lt;运算符&lt;/span&gt;\n};\n\nostream &amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;( ostream &amp;amp; os,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student &amp;amp; c)\n{\n    os &amp;lt;&amp;lt; c.mId&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;   &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;c.height&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;   &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;c.score&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &amp;lt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; myArrayList&amp;lt;Student&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;() {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;) {\n        cout &amp;lt;&amp;lt; mpArr[i].mId &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;      &amp;#34;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//三个空格&lt;/span&gt;\n        cout &amp;lt;&amp;lt; mpArr[i].height &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;      &amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; mpArr[i].score &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;      &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;  &amp;lt;&amp;gt;\nStudent myArrayList&amp;lt;Student&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;getMax&lt;/span&gt;()\n{\n    Student   max;\n    max &amp;#61; mpArr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max.score &amp;lt; mpArr[i].score)\n            max.score &amp;#61; mpArr[i].score;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  max;\n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &amp;lt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; myArrayList&amp;lt;Student&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;() {\n    Student n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; mLen; i&amp;#43;&amp;#43;) {\n        t &amp;#61; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; mLen; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mpArr[t].score &amp;gt; mpArr[j].score) {\n                t &amp;#61; j;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; t) {\n            n &amp;#61; mpArr[i];\n            mpArr[i] &amp;#61; mpArr[t];\n            mpArr[t] &amp;#61; n;\n        }\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//修改&amp;#xff0c;重复定义&amp;#xff0c;注释掉&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;/*template  &amp;lt;&amp;gt;\nStudent  myArrayList&amp;lt;Student&amp;gt;::getMax()\n{\n    Student  max;\n    max &amp;#61; mpArr[0];\n    for (int i &amp;#61; 1; i &amp;lt; mLen; i&amp;#43;&amp;#43;)\n        if (max.score &amp;lt; mpArr[i].score)\n            max &amp;#61; mpArr[i];\n    return  max;\n}*/&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//template  &amp;lt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//ostream&amp;amp; myArrayList&amp;lt;Student&amp;gt;::operator&amp;lt;&amp;lt;(Student &amp;amp;a) {&lt;!-- --&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    cout &amp;lt;&amp;lt; a.score;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    return cout;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//主程序&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  a[] &amp;#61; { &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; };\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;    b[] &amp;#61; { &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;2.5&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;3.6&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;12.8&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; };\n    myArrayList  &amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt;  &lt;span class=\"hljs-built_in\"&gt;list1&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;);\n    list1.&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;();\n    list1.&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;max&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; list1.&lt;span class=\"hljs-built_in\"&gt;getMax&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n    myArrayList  &amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;  &lt;span class=\"hljs-built_in\"&gt;list2&lt;/span&gt;(b, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;);\n    list2.&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;();\n    list2.&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;max&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; list2.&lt;span class=\"hljs-built_in\"&gt;getMax&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n    Student  s[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;175&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;),  &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;178&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;),  &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;195&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;83&lt;/span&gt;) }, s1;\n    myArrayList  &amp;lt;Student&amp;gt;  &lt;span class=\"hljs-built_in\"&gt;list3&lt;/span&gt;(s, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    list3.&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;();\n    list3.&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;max&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; list3.&lt;span class=\"hljs-built_in\"&gt;getMax&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["模板的参数变为另一个类后，cout<<没有匹配了", ["\n", "#", "include", "  ", "<iostream>", "\n", "#", "include", "  ", "<iomanip>", "\n", "using", "  ", "namespace", "  std;\n", "template", "  <", "typename", "  ElemType>\n", "class", "  ", "myArrayList", "\n{\n", "private", ":\n    ", "int", "  mSize;\n    ", "int", "  mLen;\n    ElemType* mpArr;\n", "public", ":\n    ", "myArrayList", "(", "int", "  n);\n    ", "myArrayList", "(ElemType* a, ", "int", "  n);\n    ", "myArrayList", "(myArrayList<ElemType>& other);\n    ", "void", "  ", "show", "()", ";\n    ", "ElemType  ", "getMax", "()", ";\n    ", "void", "  ", "sort", "()", ";\n    ", "//ostream& operator<<(ElemType& a);", "\n    ", "//*************************", "\n};\n", "template", "<", "typename", " ElemType>\nmyArrayList<ElemType>::", "myArrayList", "(ElemType* a, ", "int", " n) :", "mpArr", "(a), ", "mSize", "(n) {\n    mLen = mSize;\n};\n", "template", "<", "typename", "  ElemType>\nmyArrayList<ElemType>::", "myArrayList", "(myArrayList<ElemType>& other)\n\n{\n\n    ", "this", "->mLen = other.mLen;\n\n    ", "this", "->mSize = other.mSize;\n\n    ", "this", "->mpArr = ", "new", "  ElemType[", "this", "->mLen];\n\n    ", "for", " (", "int", " i = ", "0", "; i < ", "this", "->mLen; i++)\n\n        ", "this", "->mpArr[i] = other.mpArr[i];\n\n}\n", "template", "<", "typename", "  ElemType>\nmyArrayList<ElemType>::", "myArrayList", "(", "int", "  n)\n\n{\n\n    ", "this", "->mSize = n;\n\n    ", "this", "->mLen = ", "0", ";\n\n    ", "this", "->mpArr = ", "new", "  ElemType[mSize];\n\n}\n", "template", "  <", "typename", "  ElemType>\n", "void", "  myArrayList<ElemType>::", "show", "()\n\n{\n\n    ", "for", " (", "int", " i = ", "0", "; i < mLen; i++)\n\n        cout << mpArr[i] << ", "\"      \"", ";", "//三个空格", "\n\n    cout << endl;\n\n}\n", "template", "  <", "typename", "  ElemType>\nElemType  myArrayList<ElemType>::", "getMax", "()\n{\n    ElemType    max;\n    max = mpArr[", "0", "];\n    ", "for", " (", "int", " i = ", "1", "; i < mLen; i++)\n        ", "if", " (max < mpArr[i])\n            max = mpArr[i];\n    ", "return", "  max;\n}\n", "template", " <", "typename", " ElemType>\n", "void", " myArrayList<ElemType>::", "sort", "() {\n    ElemType n;\n    ", "int", " t;\n    ", "for", " (", "int", " i = ", "0", "; i < mLen; i++) {\n        t = i;\n        ", "for", " (", "int", " j = i + ", "1", "; j < mLen; j++) {\n            ", "if", " (mpArr[t] > mpArr[j]) {\n                t = j;\n            }\n        }\n        ", "if", " (i != t) {\n            n = mpArr[i];\n            mpArr[i] = mpArr[t];\n            mpArr[t] = n;\n        }\n    }\n}\n\n", "//template<typename  ElemType>", "\n", "//ostream& myArrayList<ElemType>::operator<<(ElemType& a) {", "\n", "//    cout << a;", "\n", "//    return cout;", "\n", "//}", "\n", "//Student.h", "\n\n", "class", "  ", "Student", "\n{\n", "private", ":\n    ", "int", "  mId;\n    ", "float", "  height;\n    ", "int", "  score;\n", "public", ":\n    ", "Student", "(", "int", "  id = ", "0", ", ", "float", "  h = ", "0", ", ", "int", "  s = ", "0", ") :", "height", "(h), ", "mId", "(id), ", "score", "(s){}\n    ", "/*Student(Student& c):mId(c.mId),height(c.height),score(c.score) {}\n    Student()*/", "\n    ", "friend", " ", "class", " ", "myArrayList", "<Student>;\n};\n", "template", " <>\n", "void", " myArrayList<Student>::", "show", "() {\n    ", "for", " (", "int", " i = ", "0", "; i < mLen; i++) {\n        cout << mpArr[i].mId << ", "\"      \"", ";", "//三个空格", "\n        cout << mpArr[i].height << ", "\"      \"", ";\n        cout << mpArr[i].score << ", "\"      \"", "<<endl;\n    }\n}\n", "template", "  <>\nStudent myArrayList<Student>::", "getMax", "()\n{\n    Student   max;\n    max = mpArr[", "0", "];\n    ", "for", " (", "int", " i = ", "1", "; i < mLen; i++)\n        ", "if", " (max.score < mpArr[i].score)\n            max.score = mpArr[i].score;\n    ", "return", "  max;\n}\n", "template", " <>\n", "void", " myArrayList<Student>::", "sort", "() {\n    Student n;\n    ", "int", " t;\n    ", "for", " (", "int", " i = ", "0", "; i < mLen; i++) {\n        t = i;\n        ", "for", " (", "int", " j = i + ", "1", "; j < mLen; j++) {\n            ", "if", " (mpArr[t].score > mpArr[j].score) {\n                t = j;\n            }\n        }\n        ", "if", " (i != t) {\n            n = mpArr[i];\n            mpArr[i] = mpArr[t];\n            mpArr[t] = n;\n        }\n    }\n}\n", "template", "  <>\nStudent  myArrayList<Student>::", "getMax", "()\n{\n    Student  max;\n    max = mpArr[", "0", "];\n    ", "for", " (", "int", " i = ", "1", "; i < mLen; i++)\n        ", "if", " (max.score < mpArr[i].score)\n            max = mpArr[i];\n    ", "return", "  max;\n}\n", "//template  <>", "\n", "//ostream& myArrayList<Student>::operator<<(Student &a) {", "\n", "//    cout << a.score;", "\n", "//    return cout;", "\n", "//}", "\n", "//主程序", "\n\n", "int", "  ", "main", "()", "\n", "{\n    ", "int", "  a[] = { ", "1", ",  ", "2", ",  ", "3", ",  ", "5", ",  ", "7", ",  ", "9", ",  ", "12", ",  ", "8", " };\n    ", "double", "    b[] = { ", "1", ",  ", "2.5", ",  ", "3.6", ",  ", "5", ",  ", "7", ",  ", "9", ",  ", "12.8", ",  ", "8", " };\n    myArrayList  <", "int", ">  ", "list1", "(a, ", "8", ");\n    list1.", "sort", "();\n    list1.", "show", "();\n    cout << ", "\"max=\"", " << list1.", "getMax", "() << endl;\n    myArrayList  <", "double", ">  ", "list2", "(b, ", "8", ");\n    list2.", "sort", "();\n    list2.", "show", "();\n    cout << ", "\"max=\"", " << list2.", "getMax", "() << endl;\n    Student  s[", "3", "] = { ", "Student", "(", "1", ",  ", "175", ",  ", "80", "),  ", "Student", "(", "2", ",  ", "178", ",  ", "90", "),  ", "Student", "(", "3", ",  ", "195", ",  ", "83", ") }, s1;\n    myArrayList  <Student>  ", "list3", "(s, ", "3", ");\n    list3.", "sort", "();\n    list3.", "show", "();\n    cout << ", "\"max=\"", " << list3.", "getMax", "() << endl;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我加了一个&lt;code class=\"language-javascript\"&gt;git&lt;/code&gt;&amp;#xff0c;用他重做一遍^_^&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pygame.sprite.Group().update()参数报错问题", ["问题遇到的现象和发生背景", "\n", "我在编写《python编程：从入门到实践（第二版）》的项目一<外星人入侵>（用pygame开发）第12.8.3小节时，要求将子弹添加进一个编组中，并且用", "pygame.sprite.Group().update()", "方法更新编组。", "\n", "问题相关代码，请勿粘贴截图", "\n", "主程序：（alien_invasion.py）", "\n", "import", " pygame\n", "import", " pygame.display\n", "import", " pygame.event\n\n", "from", " .settings ", "import", " Settings\n", "from", " .ship ", "import", " Ship\n", "from", " .bullet ", "import", " Bullet\n", "import", " sys\n\n\n\n", "class", " ", "AlienInvasion", ":\n    ", "\"\"\"\n    Game main\n    \"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self", "):\n        pygame.init()\n        self.settings = Settings()\n        self.screen = pygame.display.set_mode(\n            (self.settings.screen_width, self.settings.screen_height)\n        )\n        pygame.display.set_caption(", "\"Alien Invasion\"", ")\n\n        self.bg_color = (", "180", ", ", "200", ", ", "200", ")\n\n        self.ship = Ship(self)\n        self.bullets = pygame.sprite.Group\n\n\n    ", "def", " ", "run_game", "(", "self", "):\n        ", "\"\"\"\n        Game's main While\n        \"\"\"", "\n        ", "while", " ", "True", ":\n            self._check_events()\n            self.ship.update()\n            self.bullets.update()   ", "#这里报错", "\n            self._update_screen()\n\n    ", "def", " ", "_check_events", "(", "self", "):\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", " == pygame.QUIT:\n                sys.exit()\n\n            ", "elif", " event.", "type", " == pygame.KEYDOWN:  ", "# Key Down", "\n                ", "if", " event.key == pygame.K_RIGHT:\n                    self.ship.moving_right = ", "True", "\n                ", "if", " event.key == pygame.K_LEFT:\n                    self.ship.moving_left = ", "True", "\n\n                ", "if", " event.key == pygame.K_SPACE:\n                    self._fire_bullet()\n\n            ", "elif", " event.", "type", " == pygame.KEYUP:\n                ", "if", " event.key == pygame.K_RIGHT:\n                    self.ship.moving_right = ", "False", "\n                ", "if", " event.key == pygame.K_LEFT:\n                    self.ship.moving_left = ", "False", "\n\n    ", "def", " ", "_fire_bullet", "(", "self", "):\n        new_bullet = Bullet(self)\n        self.bullets.add(new_bullet)\n\n    ", "def", " ", "_update_screen", "(", "self", "):\n        self.screen.fill(self.settings.bg_color)\n\n        self.ship.blitme()\n        ", "for", " bullet ", "in", " self.bullets.sprites():\n            bullet.draw_bullet()\n\n        pygame.display.flip()\n", "\n", "子弹：（bullet.py）", "\n", "import", " pygame\n", "from", " pygame.sprite ", "import", " Sprite\n\n\n", "class", " ", "Bullet", "(", "Sprite", "):\n\n    ", "def", " ", "__init__", "(", "self, ai_game", "):\n        ", "super", ".__init__()\n        self.screen = ai_game.screen\n        self.settings = ai_game.settings\n        self.color = ai_game.bullet_color\n\n        self.rect = pygame.Rect(", "0", ", ", "0", ", self.settings.bullet_width,\n                                self.settings.bullet_height)\n        self.rect.midtop = ai_game.ship.midtop\n\n        self.y = ", "float", "(self.rect.y)\n\n    ", "def", " ", "update", "(", "self", "):\n        self.y -= self.settings.bullet_speed\n\n        self.rect.y = self.y\n\n    ", "def", " ", "draw_bullet", "(", "self", "):\n        pygame.draw.rect(self.screen, self.color, self.rect)\n", "\n", "其他源文件我放在了", "\n", "\n      \n        ", "星圆 / Alien Invasion ·  GitCode", "\n        \n      ", "GitCode——开源代码托管平台，独立第三方开源社区，Git/Github/Gitlab", "\n      ", "\n      ", "\n        ", "\n          ", "https://gitcode.net/XingYuan/Alien_invasion/", "\n        ", "\n      ", "\n", "，先看 README.md。", "\n", "运行结果及报错内容", "\n", "Traceback (most recent ", "call", " ", "last", "):\n  File ", "\"D:/py_proj/Ailen_Invasion/Alien_invasion.py\"", ", ", "line", " ", "4", ", in ", "<module>", "\n    ai.run_game()\n  File ", "\"D:\\py_proj\\Ailen_Invasion\\codes\\ailen_invasion.py\"", ", ", "line", " ", "38", ", in run_game\n    self.bullets.", "update", "()\nTypeError: ", "update", "() missing ", "1", " required positional ", "argument", ": ", "'self'", "\n", "\n", "也就是", "\n", "def", " ", "run_game", "(", "self", "):\n    ", "\"\"\"\n    Game's main While\n    \"\"\"", "\n    ", "while", " ", "True", ":\n        --snip--\n        self.bullets.update()   ", "#这里报错", "\n        \n", "\n", "告诉我", "update()", "需要一个参数", "self", "，但是书上、网上说这个方法没有参数啊，还说self应该是", "pygame.sprite .AbstractGroup", "类的。", "\n", "事实上应该在alien_invasion.py的第70行", "\n", " ", "def", " ", "_update_screen(self):", "\n        --", "snip", "--\n        ", "for", " ", "bullet", " ", "in", " ", "self", ".", "bullets", ".", "sprites():", "\n            ", "bullet", ".", "draw_bullet()", "\n\n        --", "snip", "--\n", "\n", "也有错，其他地方可能也有。", "\n", "我的解答思路和尝试过的方法", "\n", "哪里也没有出现AbstractGroup类，于是我把AbstractGroup放到括号里，Pycharm给我红了，也报错：", "\n", "TypeError: sprites() missing 1 required positional argument: 'self'", "\n", "我把Sprite类也放里，结果", "AttributeError: type object 'Sprite' has no attribute 'sprites'", "\n", "应该是子弹没有正确存到编组里。", "\n", "我想要达到的结果", "\n", "让子弹存储到编组里，能发射出去。"]], "Tag": "程序设计"}
{"Answer": "[quote]也就是说 我现在应该从应用上找问题? 如果是这样,请指导哈方法..[/quote]\r\n要得，不过你先用一个empty Web Application多做一下Deploy和unploy试验试试看。\r\n另外可以用JConsole（JDK自带），和JProfile来监视。", "Konwledge_Point": "主程序", "Question": ["jvm 疑惑", ["写了个ANT实现把本地代码打成*war然后替换服务器上正在运行的项目.小弟思路是先undeploy服务器上项目,然后再deploy新的,终于达到目的. 但是如果在本地执行一次ANT,成功后又继续执行一才ANT,这样5次左右,服务器的TOMCAT会报:java.lang.OutOfMemoryError: PermGen 错误,上网查询知道解决问题方法是：JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128M -XX:MaxPermSize=512m “Class在被Loader时就会被放到PermGen space中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误”", "\n但是有个问题就疑问了:即使我增大了PermSize,也许我连续5次不会报错了,但是我也许10次或者更多次,会不会报错？", "\n像我这种情况,在每次ANT后,服务器的PermGen space加载class,在不重启动tomcat情况下,我下次使用ANT的时候,PermGen space会不会实现累计加载,就像本来100个地方,第一次用了20个地方,第2次用了20个地方,所以说第5次就出错. ", "\n望大虾帮我解惑！如果有方法在ANT下解决这个问题,请指导", "\n\n", "[b]问题补充：[/b]", "\nlewhwa:", "\n我可不可以这样理解你的话:就是说如果TOMCAT不关闭,我每ANT一次,classloader会增加PermGen space里的class数量,所以说,如果我在我不停止tomcat的情况下,继续ANT的话,就会出现:java.lang.OutOfMemoryError: PermGen  ?请指导,我就想知道到底是怎么回事", "\n[b]问题补充：[/b]", "\nlewhwa:", "\n我用的是tomcat5.5...", "http://wiki.apache.org/tomcat/FAQ/Deployment", " 刚刚看到这个 觉得好象有点懂了,但是同样又出问题了,是不是除了重启tomcat才能根本解决这个问题?因为我根本不知道我在第几次ANT的时候 会出现问题...   还有你刚说的\"Ant进行部署和构建采用的JVM，Tomcat有自己的JVM\" 这个麻烦给个连接让我了解哈...", "\n[b]问题补充：[/b]", "\nbohemia:", "\n我刚刚还在查ant的undeploy能不能释放\"PermGen space\"里的class?但是一直没找到.. 请指导哈", "\n[b]问题补充：[/b]", "\nlewhwa:", "\n你的意思是不是说:ant的undeploy能释放\"PermGen space\"里的class,这样再次deploy时候不会让\"PermGen space\" 累加?如果出错的话,肯定是因为应用本身的问题?", "\n[b]问题补充：[/b]", "\nlewhwa:", "\n我现在又重新测试了哈,在第4次ANT后,服务器的tomcat,又出现这种问题:java.lang.OutOfMemoryError: PermGen  ,", "\n我在Tomcat Wiki 下找到这样的话:", "\nWhy does the memory usage increase when I redeploy a web application? ", "\n\n", "Because the Classloader (and the Class objects it loaded) cannot be recycled. They are stored in the permanent heap generation by the JVM, and when you redepoy a new class loader is created, which loads another copy of all these classes. This can cause OufOfMemoryErrors eventually. ", "\n-----按我的理解它的意思跟你的看法有些不一样..不知道是我理解错误,还是....请指导", "\n[b]问题补充：[/b]", "\nlewhwa: ", "\n也就是说 我现在应该从应用上找问题? 如果是这样,请指导哈方法.."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;stdio.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;stdlib.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.h&amp;gt;\ntypedef &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; BiTNode\n{\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; BiTNode *lchild,*rchild;\n}BiTNode,*BiTree;\nvoid &lt;span class=\"hljs-constructor\"&gt;PreOrderTraverse(BiTree T)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//二叉树的先序遍历&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(T&amp;#61;&amp;#61;NULL)\n        return ;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c &amp;#34;&lt;/span&gt;,T-&amp;gt;data);\n    &lt;span class=\"hljs-constructor\"&gt;PreOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=\"hljs-constructor\"&gt;PreOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;)&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;InOrderTraverse(BiTree T)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//二叉树的中序遍历&lt;/span&gt;\n{\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(T&amp;#61;&amp;#61;NULL)\n       return ;\n   &lt;span class=\"hljs-constructor\"&gt;InOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c &amp;#34;&lt;/span&gt;,T-&amp;gt;data);\n   &lt;span class=\"hljs-constructor\"&gt;InOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;)&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;PostOrderTraverse(BiTree T)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//后序遍历&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(T&amp;#61;&amp;#61;NULL)\n        return;\n    &lt;span class=\"hljs-constructor\"&gt;PostOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=\"hljs-constructor\"&gt;PostOrderTraverse(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c &amp;#34;&lt;/span&gt;,T-&amp;gt;data);\n}\n&lt;span class=\"hljs-comment\"&gt;//求树的深度&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;TreeDeep(BiTree T)&lt;/span&gt;\n {\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; deep &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T !&amp;#61; NULL)\n     {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; leftDeep &amp;#61; &lt;span class=\"hljs-constructor\"&gt;TreeDeep(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; rightDeep &amp;#61; &lt;span class=\"hljs-constructor\"&gt;TreeDeep(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;)&lt;/span&gt;;\n        deep &amp;#61; leftDeep &amp;gt;&amp;#61; rightDeep ? leftDeep &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : rightDeep &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    return deep;\n}\n&lt;span class=\"hljs-comment\"&gt;//求树叶的个数&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;LeafCount(BiTree T, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &amp;amp;&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T-&amp;gt;lchild&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;NULL&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;T-&amp;gt;rchild&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;NULL)\n         {\n            num&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-constructor\"&gt;LeafCount(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-constructor\"&gt;LeafCount(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;;\n    }\n    return num;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;CreateBiTree(BiTree &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;T)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; ch;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;ch);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch&amp;#61;&amp;#61;&lt;span class=\"hljs-character\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;)\n        *T&amp;#61;NULL;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        *T&amp;#61;(BiTree  )malloc(sizeof(BiTNode));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!*T)\n            exit&lt;span class=\"hljs-number\"&gt;(-1)&lt;/span&gt;;\n        (*T)-&amp;gt;data&amp;#61;ch;\n        &lt;span class=\"hljs-constructor\"&gt;CreateBiTree(&amp;amp;(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;T)&lt;/span&gt;-&amp;gt;lchild);\n        &lt;span class=\"hljs-constructor\"&gt;CreateBiTree(&amp;amp;(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;T)&lt;/span&gt;-&amp;gt;rchild);\n    }\n}\n\n\nvoid &lt;span class=\"hljs-constructor\"&gt;PreInOd(&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;preod&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;inod&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,BiTree &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;)&lt;/span&gt;\n{\n    *t&amp;#61;(BiTNode *)malloc(sizeof(BiTNode));\n    (*t)-&amp;gt;data&amp;#61;preod&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; m&amp;#61;k;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(inod&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt;]&lt;/span&gt;!&amp;#61;preod&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;)\n        m&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(m&amp;#61;&amp;#61;k)\n        (*t)-&amp;gt;lchild&amp;#61;NULL;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-constructor\"&gt;PreInOd(&lt;span class=\"hljs-params\"&gt;preod&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;inod&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&amp;#43;1,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;-1,&amp;amp;(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;)&lt;/span&gt;-&amp;gt;lchild);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(m&amp;#61;&amp;#61;h)\n        (*t)-&amp;gt;rchild&amp;#61;NULL;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n       &lt;span class=\"hljs-constructor\"&gt;PreInOd(&lt;span class=\"hljs-params\"&gt;preod&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;inod&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;&amp;#43;1,&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;&amp;#43;1,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&amp;amp;(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;)&lt;/span&gt;-&amp;gt;rchild);\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;ReBiTree(&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;preod&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;inod&lt;/span&gt;[],&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;,BiTree &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;root&lt;/span&gt;)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;/*恢复函数*/&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        root&amp;#61;NULL;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-constructor\"&gt;PreInOd(&lt;span class=\"hljs-params\"&gt;preod&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;inod&lt;/span&gt;,0,&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;-1,0,&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;-1,&lt;span class=\"hljs-params\"&gt;root&lt;/span&gt;)&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    BiTree T;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; s1&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; s2&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]&lt;/span&gt;;\n    gets(s1);\n    gets(s2);\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n &amp;#61; strlen(s1);\n    &lt;span class=\"hljs-constructor\"&gt;ReBiTree(&lt;span class=\"hljs-params\"&gt;s1&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;s2&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;,&amp;amp;T)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;先序遍历&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    PreOrderTraverse (T);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n中序遍历&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-constructor\"&gt;InOrderTraverse(T)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n后序遍历&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-constructor\"&gt;PostOrderTraverse(T)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n该二叉树的深度为:&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-constructor\"&gt;TreeDeep(T)&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n该二叉树的叶子结点个数为:&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-constructor\"&gt;LeafCount(T, &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/337065210246115.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "主程序", "Question": ["C语言实现先序中序还原二叉树", ["问题遇到的现象和发生背景", "\n", "C语言实现先序中序还原二叉树", "\n", "问题相关代码，请勿粘贴截图", "\n", "这是我写的关于二叉树的建立和遍历，但是对于先序和中序还原一窍不通，希望能给出详细代码和注释\n\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "typedef", " ", "struct", " ", "BiTNode", "\n{\n    ", "char", " data;\n    ", "struct", " ", "BiTNode", " *lchild,*rchild;\n}BiTNode,*BiTree;\n", "void", " ", "PreOrderTraverse", "(BiTree T)", "//二叉树的先序遍历", "\n", "{\n    ", "if", "(T==", "NULL", ")\n        ", "return", " ;\n    ", "printf", "(", "\"%c \"", ",T->data);\n    ", "PreOrderTraverse", "(T->lchild);\n    ", "PreOrderTraverse", "(T->rchild);\n}\n", "void", " ", "InOrderTraverse", "(BiTree T)", "//二叉树的中序遍历", "\n", "{\n   ", "if", "(T==", "NULL", ")\n       ", "return", " ;\n   ", "InOrderTraverse", "(T->lchild);\n    ", "printf", "(", "\"%c \"", ",T->data);\n   ", "InOrderTraverse", "(T->rchild);\n}\n", "void", " ", "PostOrderTraverse", "(BiTree T)", "//后序遍历", "\n", "{\n    ", "if", "(T==", "NULL", ")\n        ", "return", ";\n    ", "PostOrderTraverse", "(T->lchild);\n    ", "PostOrderTraverse", "(T->rchild);\n    ", "printf", "(", "\"%c \"", ",T->data);\n}\n", "//求树的深度", "\n", "int", " ", "TreeDeep", "(BiTree T)", "\n ", "{\n    ", "int", " deep = ", "0", ";\n    ", "if", " (T != ", "NULL", ")\n     {\n        ", "int", " leftDeep = ", "TreeDeep", "(T->lchild);\n        ", "int", " rightDeep = ", "TreeDeep", "(T->rchild);\n        deep = leftDeep >= rightDeep ? leftDeep + ", "1", " : rightDeep + ", "1", ";\n    }\n    ", "return", " deep;\n}\n", "//求树叶的个数", "\n", "int", " ", "LeafCount", "(BiTree T, ", "int", " &num)", " \n", "{\n    ", "if", " (T) \n    {\n        ", "if", " (T->lchild == ", "NULL", " && T->rchild == ", "NULL", ")\n         {\n            num++;\n        }\n        ", "LeafCount", "(T->lchild, num);\n        ", "LeafCount", "(T->rchild, num);\n    }\n    ", "return", " num;\n}\n", "void", " ", "CreateBiTree", "(BiTree *T)", "\n", "{\n    ", "char", " ch;\n    ", "scanf", "(", "\"%c\"", ",&ch);\n    ", "if", "(ch==", "'#'", ")\n        *T=", "NULL", ";\n    ", "else", "\n    {\n        *T=(BiTree  )", "malloc", "(", "sizeof", "(BiTNode));\n        ", "if", "(!*T)\n            ", "exit", "(", "-1", ");\n        (*T)->data=ch;\n        ", "CreateBiTree", "(&(*T)->lchild);\n        ", "CreateBiTree", "(&(*T)->rchild);\n    }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    BiTree T;\n    ", "int", " num=", "0", ";\n    ", "printf", "(", "\"建立二叉树：\\n\"", ");\n    ", "CreateBiTree", "(&T);\n    ", "printf", "(", "\"先序遍历：\\n\"", "); \n    ", "PreOrderTraverse", " (T);\n    ", "printf", "(", "\"\\n中序遍历：\\n\"", "); \n    ", "InOrderTraverse", "(T);\n    ", "printf", "(", "\"\\n后序遍历：\\n\"", ");\n    ", "PostOrderTraverse", "(T);\n    ", "printf", "(", "\"\\n该二叉树的深度为:\"", ");\n    ", "printf", "(", "\"%d\\n\"", ", ", "TreeDeep", "(T));\n    ", "printf", "(", "\"\\n该二叉树的叶子结点个数为:\"", ");\n    ", "printf", "(", "\"%d\\n\"", ", ", "LeafCount", "(T, num));\n    ", "return", " ", "0", ";\n}\n假定\n先序序列：", "\"ABDGHCEIF\"", ";\n中序序列：", "\"GDHBAEICF\"", "; \n如何还原\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "这是我们书上关于还原的算法，但是看不懂，不知道在主程序中怎么用", " 比如  printf(\"先序遍历：\\n\");", "    PreOrderTraverse (T);", "可以在主函数中调用，但是还原的函数怎么用呢？", "\n", "void ", "ReBiTree(", "char", " ", "preod", "[],", "char", " ", "inod", "[],", "int", " ", "n", ",BiTree ", "root", ")", "/*恢复函数*/", " \n{\n    ", "if", "(n<=", "0", ")\n    root=NULL;\n    ", "else", "\n    ", "PreInOd(", "preod", ",", "inod", ",1,", "n", ",1,", "n", ",&", "root", ")", ";\n}\nvoid ", "PreInOd(", "char", " ", "preod", "[],", "char", " ", "inod", "[],", "int", " ", "i", ",", "int", " ", "j", ",", "int", " ", "k", ",", "int", " ", "h", ",BiTree ", "*", "t", ")", "\n{\n    *t=(BiTNode *)malloc(sizeof(BiTNode));\n    *t->data=preod", "[", "i", "]", ";\n    m=k;\n    ", "while", "(inod", "[", "m", "]", "!=preod", "[", "i", "]", ")\n    m++;    \n    ", "if", "(m==k)\n    *t->lchild=NULL\n    ", "else", "\n    ", "PreInOd(", "preod", ",", "inod", ",", "i", "+1,", "i", "+", "m", "-", "k", ",", "k", ",", "m", "-1,&", "t", "->", "lchild", ")", ";\n    ", "if", "(m==h)\n    *t->rchild=NULL\n    ", "else", "\n    ", "PreInOd(", "preod", ",", "inod", ",", "i", "+", "m", "-", "k", "+1,", "j", ",", "m", "+1,", "h", ",&", "t", "->", "rchild", ")", ";\n}\n", "\n", "我想要达到的结果", "\n", "希望能完成还原的功能要求，需要尽快给出！也可以不用我上面给的还原代码，但是麻烦能让你给的代码在我给的第一个代码上能运行，多谢！完成后可给报酬！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主要是你取出的值哪儿没分割对&amp;#xff0c;导致取出的值有换行&amp;#xff0c;下面是我改了一下的代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nstudent1 &amp;#61; []\nheadline &amp;#61; []\ndef load_info():\n    fr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C:/Users/suoer/Desktop/1.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;utf_8&amp;#34;&lt;/span&gt;) ##这个文档是这样的 在结尾\n    head &amp;#61; fr.readline()\n    headline.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(head)\n    fr.seek(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    lines &amp;#61; fr.readlines()\n    lines.&lt;span class=\"hljs-keyword\"&gt;pop&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; eachline in lines:\n        t &amp;#61; eachline.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n        t&amp;#61;[i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in t.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)]\n        card_dict &amp;#61; {\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;xuehao&amp;#39;&lt;/span&gt;: t[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: t[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;bkxx&amp;#39;&lt;/span&gt;: t[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;bx&amp;#39;&lt;/span&gt;: t[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;xb&amp;#39;&lt;/span&gt;: t[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],\n        }\n        student1.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(card_dict)\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;学生信息导入成功&amp;#39;&lt;/span&gt;)\n    fr.&lt;span class=\"hljs-keyword\"&gt;close&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(headline)\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(student1)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["显示 IndexError: list index out of range  但是我一直搞不懂在哪里出了问题 下面是代码", ["我这个是做一个简单的信息系统 前面需要把文档变成字典然后插入到列表中进行操作的，但是就是一直搞不定前面这个", "student1 = []", "headline = []", "def load_info():", "    fr = open(\"D:", "\\student.txt\", 'r', encoding=\"utf_8\")    ##这个文档是这样的 在结尾", "    head = fr.readline()", "    headline.append(head)", "    fr.seek(0, 0)", "    lines = fr.readlines()", "    field = lines.pop(0).split(',')", "    for eachline in lines:", "        t = eachline.split('\\t')", "        t[4] = t[4].strip('\\n')", "        card_dict = {", "            'xuehao': 't[0]',", "            'name': 't[1]',", "            'bkxx': 't[2]',", "            'bx': 't[3]',", "            'xb': 't[4]',", "        }", "        student1.append(card_dict)", "    print('学生信息导入成功')", "    fr.close()", "\n", "页面", "\n", "def menu():", "    print('-' * 30)", "    print(\"欢迎来到学生管理系统\")", "    print(\"1.输入学号查询成绩\")", "    print(\"2.添加考研学生信息\")", "    print(\"3.删除考研学生信息\")", "    print(\"4.所有考研学生信息\")", "    print(\"5.修改考研学生信息\")", "    print(\"6.保存学生信息到指定文件\")", "    print(\"7.根据考研专业生成词云图\")", "    print(\"8.根据生源地生成词云图\")", "    print(\"9.考研率和考研成功率对比图\")", "    print(\"0.退出系统\")", "    print(\"-\" * 30)", "\n", "打印信息", "\n", "def lookup():", "    sid = int(input(\"输入查询学号:\")) - 1  # 学号", "    if sid > len(student1) - 1:", "        print(\"输入错误，返回菜单\")", "    else:", "        print(student1[sid])  # 输出信息", "    input(\"按回车键继续\")", "\n", "添加信息", "\n", "def append():", "    newsid = eval(input('输入新同学学号(从4开始)：'))", "    newname = eval(input('输入新同学姓名:'))", "    newage = eval(input('输入新同学年龄：'))", "    newsocer = eval(input('输入新同学成绩：'))", "    newstudent1 = {}", "    newstudent1[newsid] = newname  # 添加 学号、姓名", "    newstudent1['age'] = newage  # 添加年龄", "    newstudent1['socer'] = newsocer  # 添加成绩", "    student1.append(newstudent1)  # 加入列表", "    input(\"按回车键继续\")", "\n", "删除信息", "\n", "def delete():", "    did = int(input(\"输入需要删除的成绩对应的学号：\")) - 1", "    del student1[did]  # 删除指定信息", "    input(\"按回车键继续\")", "\n", "##输出所有学生信息", "def allinformation():", "    print(\"所有信息如下：\")", "    i = 1", "    for show in student1:", "        print(\"{}\".format(show))  # 打印学生信息", "        i += 1", "    input(\"按回车键继续\")", "\n", "##修改信息", "def revise():", "    resid = int(input(\"输入要修改的学生学号：\")) - 1", "    r = input(\"要修改的对象(1.年龄；2.成绩;否则，都修改)：\")", "    if r == '1':", "        newage = input(\"修改后的年龄\")", "        student1[resid]['age'] = newage", "    elif r == '2':", "        newsocer = input(\"修改后的成绩\")", "        student1[resid]['socer'] = newsocer", "    else:", "        newage = input(\"修改后的年龄\")", "        newsocer = input(\"修改后的成绩\")", "        student1[resid]['socer'] = newsocer", "        student1[resid]['age'] = newage", "    input(\"按回车键继续\")", "\n", "##保存学生信息", "def save():", "    f = open('student.txt', 'w')  # 打开文件", "    f.write(str(student1))  # 写入文件", "    f.close()  # 关闭文件", "    input(\"保存成功按回车键继续\")", "    ##词云图", "\n", "##主程序\n", "\n", "load_info()", "print(\"学生信息导入\")", "while True:", "        menu()", "        key = input(\"输入选项数字 查询/输入 信息：\")", "        if key == '1':", "            lookup()  # 打印指定学生信息", "        elif key == '2':", "            append()  # 添加新的学生信息", "        elif key == '3':", "            delete()  # 删除指定学生信息", "        elif key == '4':", "            allinformation()  # 打印所有信息", "        elif key == '5':", "            revise()  # 修改指定学生信息", "        elif key == '6':", "            save()  # 保存信息", "        elif key == '0':", "            print(\"确定退出？\")", "            exit = input(\"输入yes退出：\")", "            if exit == 'yes':", "                break", "            else:", "                print(\"输入错误，返回 \")", "\n", "学号，姓名，报考学校，本科学校，性别", "2,b,B,北京大学,女", "3,c,C,河南大学,男", "4,d,D,安徽大学,女", "5,a,E,西安大学,男", "6,b,A,河北大学,女", "7,c,B,重庆大学,男", "8,d,C,四川大学,女", "9,a,D,福建大学,男", "10,b,E,上海大学,女", "11,c,A,清华大学,男", "12,d,B,北京大学,女", "13,a,C,河南大学,男", "14,b,D,安徽大学,女", "15,c,E,西安大学,男", "16,d,A,河北大学,女", "17,a,B,重庆大学,男", "\n", "就是这种形式 我写成了一个文档"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;查了好多&amp;#xff0c;终于参考这位博主的文章&amp;#xff0c;已解决。谢谢&amp;#xff0c;各位&amp;#xff01;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a id=\"textarea_1678867415401_1678867454430_0\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://t.csdn.cn/ChY9L&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;但还是不太明白&amp;#xff0c;为什么自定义函数传入参数要有双斜杠&amp;#xff1f;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    dir_path &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:/PyCharm_Projects/lab/imgfile/&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;files&lt;/span&gt; &amp;#61; os.listdir(dir_path)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;file&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;files&lt;/span&gt;:\n        print(&lt;span class=\"hljs-built_in\"&gt;file&lt;/span&gt;)\n        &lt;span class=\"hljs-comment\"&gt;# 调用自定义函数&lt;/span&gt;\n        process_image(dir_path &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\\\&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;file&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["python 遍历文件夹里的图片", ["python 主程序遍历文件夹里的图片后，调用自定义的 process_image()方法，进入后运行到图像灰度化时，提示image为空None，想不明白，是遍历的结果有错，还是参数传递有错，或是什么？这里好像传入的图片列表路径，而我正真要的是图片路径下的图片数据。请教教我，或请您给看看哪里有写的不对的地方，谢谢各位大老诗", "\n", "下面是python代码", "\n", "import", " cv2\n", "import", " os\n\n\ndef process_image(image_path):\n    ", "# 读取图片", "\n    ", "img", " = cv2.imread(image_path)\n    ", "# 获取前景部分", "\n    ", "gray", " = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    ret, ", "thresh", " = cv2.threshold(gray, ", "0", ", ", "255", ", cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)\n    contours, ", "hierarchy", " = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n    ", "cnt", " = max(contours, ", "key=cv2.contourArea)", "\n    x, y, w, ", "h", " = cv2.boundingRect(cnt)\n    ", "foreground", " = img[y:y + h, x:x + w]\n    ", "# 统一改变背景颜色为黑色", "\n    ", "background", " = cv2.imread('black.jpg')\n    ", "background", " = cv2.resize(background, (w, h))\n    ", "foreground", " = cv2.resize(foreground, (w, h))\n    ", "mask", " = cv2.cvtColor(foreground, cv2.COLOR_BGR2GRAY)\n    ret, ", "thresh", " = cv2.threshold(mask, ", "10", ", ", "255", ", cv2.THRESH_BINARY)\n    ", "mask_inv", " = cv2.bitwise_not(thresh)\n    ", "img1_bg", " = cv2.bitwise_and(background, background, ", "mask=thresh)", "\n    ", "img2_fg", " = cv2.bitwise_and(foreground, foreground, ", "mask=mask_inv)", "\n    ", "dst", " = cv2.add(img1_bg, img2_fg)\n    ", "# 统一改变图片分辨率为24*24", "\n    ", "dst", " = cv2.resize(dst, (", "24", ", ", "24", "))\n    ", "# 返回处理后的图片", "\n    return dst\n\n    ", "# 读取文件目录中的每一个文件", "\n    ", "path", " = 'image_folder/'\n    for filename ", "in", " os.listdir(path):\n        ", "if", " filename.endswith('.jpg'):\n            ", "image_path", " = os.path.join(path, filename)\n            ", "# 处理图片", "\n            ", "processed_image", " = process_image(image_path)\n            ", "# 保存处理后的图片", "\n            cv2.imwrite(os.path.join(path, 'processed_' + filename), processed_image)\n\n\n", "if", " ", "__name__", " == '__main__':\n    ", "# 读取文件夹中的所有文件", "\n    ", "folder_path", " = 'D:/PyCharm_Projects/lab/imagefile'  ", "# 给相对路径下的文件夹赋值一个变量名", "\n    ", "file_list", " = os.listdir(folder_path)  ", "# 将文件夹变量名及内部文件转为python列表的格式", "\n\n    ", "# 遍历文件列表", "\n    for i, fileNames ", "in", " enumerate(file_list):\n        ", "# 调用获取图片前景部分，并统一改变背景颜色为黑色，和统一改变图片分辨率为24*24的函数", "\n        process_image(fileNames)\n\n", "\n", "报错：", "\n", "PyDev console: starting.\nPython ", "3.7", ".", "9", " (", "tags", "/v3.", "7.9", ":", "13", "c94747c7, Aug ", "17", " ", "2020", ", ", "18", ":", "58", ":", "18", ") [MSC v.", "1900", " ", "64", " bit (AMD64)] ", "on", " win32\nrunfile(", "'D:/PyCharm_Projects/lab/heoll.py'", ", wdir=", "'D:/PyCharm_Projects/lab'", ")\nNone\nTraceback (most recent ", "call", " ", "last", "):\n  File ", "\"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python37\\lib\\code.py\"", ", ", "line", " ", "90", ", in runcode\n    exec(code, self.locals)\n  File ", "\"<input>\"", ", ", "line", " ", "1", ", in ", "<module>", "\n  File ", "\"D:\\PyCharm2021.3\\PyCharm 2021.3\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_umd.py\"", ", ", "line", " ", "198", ", in runfile\n    pydev_imports.execfile(filename, global_vars, local_vars)  # ", "execute", " the script\n  File ", "\"D:\\PyCharm2021.3\\PyCharm 2021.3\\plugins\\python\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\"", ", ", "line", " ", "18", ", in execfile\n    exec(compile(contents+", "\"\\n\"", ", ", "file", ", ", "'exec'", "), ", "glob", ", ", "loc", ")\n  File ", "\"D:/PyCharm_Projects/lab/heoll.py\"", ", ", "line", " ", "48", ", in ", "<module>", "\n    process_image(fileNames)\n  File ", "\"D:/PyCharm_Projects/lab/heoll.py\"", ", ", "line", " ", "10", ", in process_image\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ncv2.error: OpenCV(", "3.4", ".", "8", ") C:\\projects\\opencv-", "python", "\\opencv\\modules\\imgproc\\src\\color.cpp:", "182", ": error: (-", "215", ":Assertion failed) !_src.", "empty", "() in ", "function", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.你的理解是正确的&amp;#xff0c;就是在search_card()中调用deal_card()函数&amp;#xff0c;并且传入了card_dict参数&amp;#xff0c;从而实现了deal_card()函数中的操作&lt;br /&gt;2.一般只有传入索引操作时才会用到[]&amp;#xff0c;函数传参都是用()&amp;#xff0c;这就是固定用法&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python中由字典元素组成的列表，使用remove进行删除的问题", ["问题遇到的现象和发生背景", "\n", "针对功能函数代码倒数第二行，删除列表中的字典使用的 card_list.remove(find_dict)      (黑马python从入门到精通第321集)", "\n", "问题相关代码，请勿粘贴截图", "\n", "\"\"\"", "cards_tools.py", "功能函数代码", "\"\"\"", "\n", "记录所有的名片字典", "\n", "card_list = []", "\n", "def show_menu():", "\n", "\"\"", "\"显示菜单\"", "\"\"", "\n", "print", "(", "\"*\"", " * ", "50", ")", "\n", "print", "(", "\"欢迎使用【名片管理系统】V 1.0\"", ")", "\n", "print", "(", "\"\"", ")", "\n", "print", "(", "\"1. 新增名片\"", ")", "\n", "print", "(", "\"2. 显示全部\"", ")", "\n", "print", "(", "\"3. 搜索名片\"", ")", "\n", "print", "(", "\"\"", ")", "\n", "print", "(", "\"0. 退出系统\"", ")", "\n", "print", "(", "\"*\"", " * ", "50", ")", "\n", "\n", "def new_card():", "\n", "\"\"\"新增名片\"\"\"", "\n", "print", "(", "\"-\"", " * ", "50", ")\n", "print", "(", "\"新增名片\"", ")\n\n", "# 1. 提示用户输入名片的详细信息", "\nname_str = ", "input", "(", "\"请输入姓名：\"", ")\nphone_str = ", "input", "(", "\"请输入电话：\"", ")\nqq_str = ", "input", "(", "\"请输入QQ：\"", ")\nemail_str = ", "input", "(", "\"请输入邮箱：\"", ")\n\n", "# 2. 使用用户输入的信息建立一个名片字典", "\ncard_dict = {", "\"name\"", ": name_str,\n             ", "\"phone\"", ": phone_str,\n             ", "\"qq\"", ": qq_str,\n             ", "\"email\"", ": email_str}\n\n", "# 3. 将名片字典添加到列表中", "\ncard_list.append(card_dict)\n\n", "print", "(card_list)\n\n", "# 4. 提示用户添加成功", "\n", "print", "(", "\"添加 %s 的名片成功！\"", " % name_str)\n", "\n", "def show_all():", "\n", "\"\"\"显示所有名片\"\"\"", "\n", "print", "(", "\"-\"", " * ", "50", ")\n", "print", "(", "\"显示所有名片\"", ")\n\n", "# 判断是否存在名片记录，如果没有，提示用户并且返回", "\n", "if", " ", "len", "(card_list) == ", "0", ":\n\n    ", "print", "(", "\"当前没有任何的名片记录，请使用新增功能添加名片！\"", ")\n\n    ", "# return 可以返回一个函数的执行结果", "\n    ", "# 下方的代码不会被执行", "\n    ", "# 如果 return 后面没有任何的内容，表示会返回到调用函数的位置", "\n    ", "# 并且不返回任何的结果", "\n    ", "return", "\n\n", "# 打印表头", "\n", "for", " name ", "in", " [", "\"姓名\"", ", ", "\"电话\"", ", ", "\"QQ\"", ", ", "\"邮箱\"", "]:\n    ", "print", "(name, end=", "\"\\t\\t\"", ")\n\n", "print", "(", "\"\"", ")\n\n", "# 打印分隔线", "\n", "print", "(", "\"=\"", " * ", "50", ")\n\n", "# 遍历名片列表依次输出字典信息", "\n", "for", " card_dict ", "in", " card_list:\n\n    ", "print", "(", "\"%s\\t\\t%s\\t\\t%s\\t\\t%s\"", " % (card_dict[", "\"name\"", "],\n                                    card_dict[", "\"phone\"", "],\n                                    card_dict[", "\"qq\"", "],\n                                    card_dict[", "\"email\"", "]))\n", "\n", "def search_card():", "\n", "\"\"\"搜索名片\"\"\"", "\n", "print", "(", "\"-\"", " * ", "50", ")\n", "print", "(", "\"搜索名片\"", ")\n\n", "# 1. 提示用户输入要搜索的姓名", "\nfind_name = ", "input", "(", "\"请输入要搜索的姓名：\"", ")\n\n", "# 2. 遍历名片列表，查询要搜索的姓名，如果没有找到，需要提示用户", "\n", "for", " card_dict ", "in", " card_list:\n\n    ", "if", " card_dict[", "\"name\"", "] == find_name:\n\n        ", "print", "(", "\"姓名\\t\\t电话\\t\\tQQ\\t\\t邮箱\"", ")\n        ", "print", "(", "\"=\"", " * ", "50", ")\n        ", "print", "(", "\"%s\\t\\t%s\\t\\t%s\\t\\t%s\"", " % (card_dict[", "\"name\"", "],\n                                        card_dict[", "\"phone\"", "],\n                                        card_dict[", "\"qq\"", "],\n                                        card_dict[", "\"email\"", "]))\n\n        ", "# TODO 针对找到的名片记录执行修改和删除的操作", "\n        deal_card(card_dict)\n\n        ", "break", "\n\n", "else", ":\n\n    ", "print", "(", "\"抱歉，没有找到 %s\"", " % find_name)\n", "\n", "def deal_card(find_dict):", "\n", "print", "(", "find_dict", ")", "\n\n", "action_str", " = ", "input", "(", "\"请选择要执行的操作 \"", "\n                   ", "\"[1] 修改 [2] 删除 [0] 返回上级菜单\"", ")", "\n\n", "if", " ", "action_str", " == ", "\"1\"", ":\n\n    ", "print", "(", "\"修改名片\"", ")", "\n", "elif", " ", "action_str", " == ", "\"2\"", ":\n\n    ", "card_list.remove", "(", "find_dict", ")\n\n    ", "print", "(", "\"删除名片成功！\"", ")", "\n", "\n", "\"\"\"", "cards_main.py", "主程序代码", "\"\"\"", "import cards_tools", "\n", "无限循环，由用户主动决定什么时候退出循环！", "\n", "while True:", "\n", "# 显示功能菜单", "\ncards_tools.show_menu()\n\naction_str = ", "input", "(", "\"请选择希望执行的操作：\"", ")\n", "print", "(", "\"您选择的操作是【%s】\"", " % action_str)\n\n", "# 1,2,3 针对名片的操作", "\n", "if", " action_str ", "in", " [", "\"1\"", ", ", "\"2\"", ", ", "\"3\"", "]:\n\n    ", "# 新增名片", "\n    ", "if", " action_str == ", "\"1\"", ":\n        cards_tools.new_card()\n    ", "# 显示全部", "\n    ", "elif", " action_str == ", "\"2\"", ":\n        cards_tools.show_all()\n    ", "# 查询名片", "\n    ", "elif", " action_str == ", "\"3\"", ":\n        cards_tools.search_card()\n\n", "# 0 退出系统", "\n", "elif", " action_str == ", "\"0\"", ":\n\n    ", "print", "(", "\"欢迎再次使用【名片管理系统】\"", ")\n\n    ", "break", "\n    ", "# 如果在开发程序时，不希望立刻编写分支内部的代码", "\n    ", "# 可以使用 pass 关键字，表示一个占位符，能够保证程序的代码结构正确！", "\n    ", "# 程序运行时，pass 关键字不会执行任何的操作！", "\n    ", "# pass", "\n", "# 其他内容输入错误，需要提示用户", "\n", "else", ":\n    ", "print", "(", "\"您输入的不正确，请重新选择\"", ")\n", "\n", "运行结果及报错内容", "\n", "针对功能函数代码部分的倒数第二行，运行后确实把列表中对应的字典删除了，但不理解此处的参数传递", "\n", "我的解答思路和尝试过的方法", "\n", "我的理解是：①前面程序遍历的某个card_dict实参传递给了find_dict形参，然后形参find_dict形参相当于一个存有信息的字典变量；调用 .remove()命令时用这个存有信息的字典变量里key的值，与列表card_list中的每个字典key的值进行比对，如果比对一致就进行删除？（remove命令的删除作用是基于比对原理吗）。又或者说我这个理解是错的，只是进行了参数的传递从而达成了删除操作，但是此处参数是怎么传递的，从第124行的find_dict传到哪一行的哪个参数呢？②还有一个，remove删除列表后面为什么不是中括号[ ]？", "\n", "我想要达到的结果", "\n", "请解释remove删除列表内容的原理？或描述一下以上问题的参数传递过程？"]], "Tag": "程序设计"}
{"Answer": "初始化时你的listMsg没有传到MsgAdapter 里面", "Konwledge_Point": "主程序", "Question": ["listview无法显示，求大神解决", ["适配器", "\nclass MsgAdapter extends BaseAdapter {", "\n\n", "    private List<Msg> listMsg = new ArrayList<Msg>();\n\n    private Context cxt;\n    private LayoutInflater inflater;\n\n    public MsgAdapter(ChatActivity ChatActivity) {\n            this.cxt = ChatActivity;\n    }\n\n\n\n    @Override\n    public int getCount() {\n            return listMsg.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n            return listMsg.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n            return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n\n            if(listMsg.get(position).from.equals(\"IN\")){\n                    this.inflater = (LayoutInflater) this.cxt.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                    convertView = this.inflater.inflate(R.layout.msg_left, null);\n            }else{\n                    convertView = this.inflater.inflate(R.layout.msg_right, null);\n            }\n            TextView useridView = (TextView) convertView.findViewById(R.id.userid);\n            TextView dateView = (TextView) convertView.findViewById(R.id.date);\n            TextView msgView = (TextView) convertView.findViewById(R.id.msg);\n            useridView.setText(listMsg.get(position).userid);\n            dateView.setText(listMsg.get(position).date);\n            msgView.setText(listMsg.get(position).msg);\n            return convertView;\n    }\n", "\n\n", "}", "\n\n", "消息类", "\npublic class Msg {", "\n        String userid;", "\n        String msg;", "\n        String date;", "\n        String from;", "\n\n", "    public Msg(String userid, String msg, String date, String from) {\n            this.userid = userid;\n            this.msg = msg;\n            this.date = date;\n            this.from = from;\n    }\n", "\n\n", "}", "\n\n", "主程序", "\npublic class ChatActivity extends Activity{", "\n\n", "    private ListView msgListView;\n    private EditText inputText;\n    private MsgAdapter adapter;\n    private Button send;\n    private List<Msg> listMsg=new ArrayList<Msg>();\n    private String pUSERID=\"用户\";\n    String strFirendName = \"医生\";\n    String user = \"test1\";\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState){\n            super.onCreate(savedInstanceState);\n            requestWindowFeature(Window.FEATURE_NO_TITLE);\n    setContentView(R.layout.chat);\n\n    //initMsgs();\n\n    inputText=(EditText)findViewById(R.id.chat_edit);\n    send=(Button)findViewById(R.id.send);\n    adapter = new MsgAdapter(this);\n    msgListView=(ListView)findViewById(R.id.listview);\n\n    msgListView.setAdapter(adapter);\n    ChatManager cm = connect.getConnection().getChatManager();\n            cm.addChatListener(new ChatManagerListener() {\n                    @Override\n                    public void chatCreated(Chat chat, boolean able) {\n                            chat.addMessageListener(new MessageListener() {\n                                    @Override\n                                    public void processMessage(Chat chat2, Message message) {\n                                            //message from user [test2@hp-pc]\n                                                    String[] args = new String[] {strFirendName , message.getBody(), TimeRender.getDate(), \"IN\" };\n                                                    android.os.Message msg = handler.obtainMessage();\n\n                                                    msg.obj = args;\n                                                    msg.sendToTarget();\n                                                    System.out.println(message.getBody());\n                                                    // orther user / group / admin of the openfire\n                                                    // do work...\n                                    }\n                            });\n                    }\n            });\n    //发送\n\n            final Chat newchat = cm.createChat( user + \"@hp-pc\", null);\n    send.setOnClickListener(new OnClickListener() {\n\n                    @Override\n                    public void onClick(View v) {\n\n                            String msg = inputText.getText().toString();\n                            if(msg.length() > 0){\n\n                                    listMsg.add(new Msg(pUSERID, msg, TimeRender.getDate(), \"OUT\"));\n                                    Log.e(\"ChatActivity\",\"addmsg\");\n                                    adapter.notifyDataSetChanged();\n                                    Log.e(\"ChatActivity\",\"change\");\n                                    try {\n                                            newchat.sendMessage(msg);\n                                    } catch (XMPPException e) {\n                                            e.printStackTrace();\n                                    }\n                            }\n                            inputText.setText(\"\");\n                    }\n            });\n\n\n            }\n\n    private Handler handler = new Handler() {\n            public void handleMessage(android.os.Message msg) {\n\n                            String[] args = (String[]) msg.obj;\n                            listMsg.add(new Msg(args[0], args[1], args[2], args[3]));\n                            //动态刷新\n                            adapter.notifyDataSetChanged();\n\n                    }\n            };\n    };\n", "\n\n", "是一个聊天界面的listview，测试的时候用spark收得到消息，但是自己的界面就收发都不显示，不知道为什么，网上查了也不知道问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用gamemode_print函数输出&amp;#xff0c;修改的地方比较多&amp;#xff0c;你对照看一下。&lt;/p&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/09322332062611.png\" /&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-comment\"&gt;//这个是主程序&lt;/span&gt;\n\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdlib.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;time.h&amp;gt;\n\n&lt;span class=\"hljs-comment\"&gt;// 格子的定义&lt;/span&gt;\n#define VISIBLE_SAFE &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n#define HIDDEN_SAFE &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n#define HIDDEN_MINE &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//地图尺寸&lt;/span&gt;\n#define SIZE &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//下面是其他的function&lt;/span&gt;\ntypedef &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; _point\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y;\n} Point;\n\nvoid first&lt;span class=\"hljs-constructor\"&gt;_is_1(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;, Point &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;[], &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;;\nvoid first&lt;span class=\"hljs-constructor\"&gt;_is_2(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;, Point &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;[], &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;;\nvoid first&lt;span class=\"hljs-constructor\"&gt;_is_3(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;, Point &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;[], &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE])&lt;/span&gt;;\nvoid init&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE], Point &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;[], &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;;\nvoid print&lt;span class=\"hljs-constructor\"&gt;_minefield(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE])&lt;/span&gt;;\nvoid gamemode(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; minefield&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;, Point point&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;);\nvoid debugmode(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; minefield&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;, Point point&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;);\nvoid gamemode&lt;span class=\"hljs-constructor\"&gt;_print(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE])&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//输出游戏界面&lt;/span&gt;\n\nvoid init&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE], Point &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;[], &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; SIZE)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt; SIZE)\n        {\n            minefield&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;#61; HIDDEN_SAFE;\n            j&amp;#43;&amp;#43;;\n        }\n        i&amp;#43;&amp;#43;;\n    }\n    i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; number)\n    {\n        &lt;span class=\"hljs-comment\"&gt;//if (point[i].y &amp;lt; SIZE &amp;amp;&amp;amp; point[i].x &amp;lt; SIZE &amp;amp;&amp;amp; point[i].x &amp;gt;&amp;#61; 0 &amp;amp;&amp;amp; point[i].y &amp;gt;&amp;#61; 0)&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//{&lt;!-- --&gt;&lt;/span&gt;\n        minefield&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;point&lt;/span&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.y]&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;point&lt;/span&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.x] &amp;#61; HIDDEN_MINE;\n        &lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n        i&amp;#43;&amp;#43;;\n    }\n}\nvoid print&lt;span class=\"hljs-constructor\"&gt;_minefield(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE])&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; SIZE)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt; SIZE)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d &amp;#34;&lt;/span&gt;, minefield&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n            j&amp;#43;&amp;#43;;\n        }\n        i&amp;#43;&amp;#43;;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//随机生成num个雷&amp;#xff0c;重复则重新生成&lt;/span&gt;\nvoid init&lt;span class=\"hljs-constructor\"&gt;_mine(Point &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;\n{\n    srand((unsigned &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)time(NULL));\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, isHave &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; num)\n    {\n        (p &amp;#43; i)-&amp;gt;x &amp;#61; rand&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; % SIZE;\n        (p &amp;#43; i)-&amp;gt;y &amp;#61; rand&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; % SIZE;\n        isHave &amp;#61; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt; i)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((p &amp;#43; i)-&amp;gt;x&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;(p &amp;#43; j)-&amp;gt;x&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;(p &amp;#43; i)-&amp;gt;y&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;(p &amp;#43; j)-&amp;gt;x)\n            {\n                isHave &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                break;\n            }\n            j&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!isHave)\n        {\n            i&amp;#43;&amp;#43;;\n        }\n    }\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(void)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; minefield&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; number;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Welcome to minesweeper!\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;How many mines? &amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;number);\n    &lt;span class=\"hljs-comment\"&gt;//根据输入动态生成数组&lt;/span&gt;\n    Point *point &amp;#61; (Point *)calloc(number, sizeof(Point)); &lt;span class=\"hljs-comment\"&gt;//Point point[SIZE];&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (point&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;NULL)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;memory wrong!\\n&amp;#34;&lt;/span&gt;);\n        return -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-comment\"&gt;/*\n    printf(&amp;#34;Enter pairs:\\n&amp;#34;);\n    int i &amp;#61; 0;\n    while (number &amp;gt; i)\n    {\n\n        scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;point[i].y, &amp;amp;point[i].x);\n        i&amp;#43;&amp;#43;;\n    }\n    */&lt;/span&gt;\n    init&lt;span class=\"hljs-constructor\"&gt;_mine(&lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;;\n\n    init&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;point&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;)&lt;/span&gt;;\n\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Game Started\\n&amp;#34;&lt;/span&gt;);\n    print&lt;span class=\"hljs-constructor\"&gt;_minefield(&lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;)&lt;/span&gt;;\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a, b, c, d;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; z &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a) !&amp;#61; EOF)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; || &lt;/span&gt;a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;r &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        {\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;, &amp;amp;b, &amp;amp;c, &amp;amp;d);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Help already used\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;, &amp;amp;b, &amp;amp;c, &amp;amp;d);\n            &lt;span class=\"hljs-comment\"&gt;//first_is_1(b, c, d, point, number);&lt;/span&gt;\n            r&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;, &amp;amp;b, &amp;amp;c, &amp;amp;d);\n            &lt;span class=\"hljs-comment\"&gt;//first_is_2(b, c, d, point, number);&lt;/span&gt;\n            r&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        {\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;b, &amp;amp;c);\n            &lt;span class=\"hljs-comment\"&gt;//first_is_3(b, c, point, number, minefield);&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (z % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Gameplay mode activated\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;. .\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\\\/\\n&amp;#34;&lt;/span&gt;);\n                gamemode&lt;span class=\"hljs-constructor\"&gt;_print(&lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;)&lt;/span&gt;;\n                &lt;span class=\"hljs-comment\"&gt;//gamemode(minefield, point);&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (z % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Debug mode activated\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-comment\"&gt;//debugmode();&lt;/span&gt;\n            }\n            z&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; || &lt;/span&gt;a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; || &lt;/span&gt;(z % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;))\n        {\n            print&lt;span class=\"hljs-constructor\"&gt;_minefield(&lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;)&lt;/span&gt;;\n        }\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\nvoid gamemode(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; minefield&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;, Point point&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;)\n{\n\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\ninput x,y:\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    gamemode&lt;span class=\"hljs-constructor\"&gt;_print(&lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;)&lt;/span&gt;;\n}\n\nenum mineStatu &lt;span class=\"hljs-comment\"&gt;//用来表示当前位置的状态&lt;/span&gt;\n{\n    SAFE &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n    VIEW &amp;#61; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n    MINE &amp;#61; -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n};\n\ninline &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;mineStatu&lt;/span&gt;)&lt;/span&gt;\n{\n    return mineStatu&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;HIDDEN_MINE ? &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//返回i,j坐标处周围有几个雷&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; getstatus(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; mine&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[SIZE]&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mine&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;HIDDEN_MINE)\n        return MINE;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//处理四角的特殊情况&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;SIZE - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;SIZE - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;SIZE - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;SIZE - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            sum &amp;#61; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; - 1])&lt;/span&gt; &amp;#43; getxy&lt;span class=\"hljs-constructor\"&gt;Mine(&lt;span class=\"hljs-params\"&gt;mine&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1][&lt;span class=\"hljs-params\"&gt;j&lt;/span&gt; &amp;#43; 1])&lt;/span&gt;;\n        }\n    }\n\n    return sum;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//这个是要创建的游戏界面的function。&lt;/span&gt;\nvoid gamemode&lt;span class=\"hljs-constructor\"&gt;_print(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;minefield&lt;/span&gt;[][SIZE])&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j, s;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; SIZE; j&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%02d &amp;#34;&lt;/span&gt;, j);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n    -----------------------\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; SIZE; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%02d |&amp;#34;&lt;/span&gt;, i);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; SIZE; j&amp;#43;&amp;#43;)\n        {\n            s &amp;#61; getstatus(minefield, i, j);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;MINE)\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;()&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;SAFE)\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;##&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%02d &amp;#34;&lt;/span&gt;, s);\n        }\n\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;|\\n&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    -----------------------\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["求帮我编个扫雷的游戏模式", ["调试模式我编完了，但是编游戏模式我就卡住了。", "\n", "只用帮我编第一个 gamemode 的function就行了。", "编完后应该是这样的。", "\n", "这个4是输入进去的。", "\n", "‘（）’代表 雷。", "‘ 01，02 ’ 是代表周围一圈有几个雷，如果一片空白就是周围没有雷。", "‘ ## ’就代表不知道是不是雷。", "\n", "\n", "\n", "编个大概就行。", "我编到这里就不会了。", "\n", "//这个是要创建的游戏界面的function。", "\n\n", "void", " ", "gamemode", "(", "int", " minefield[][SIZE], Point point[])", " \n", "{\n    ", "int", " i = ", "0", ";\n    ", "while", " (i < ", "10", ")\n    {\n        ", "int", " j = ", "0", ";\n        ", "while", " (j < ", "10", ")\n        {\n            ", "if", " (j == ", "1", " || j == ", "10", ") {\n                ", "printf", "(", "\"-------------------------\"", ");\n            }\n            ", "if", " (i > ", "1", " && j == ", "1", ") {\n                ", "printf", "(", "\" |\"", ");\n            }\n            ", "if", " (i > ", "1", " && j == ", "10", ") {\n                ", "printf", "(", "\"| \"", ");\n            }\n            ", "if", " (i == ", "0", ") {\n                ", "printf", "(", "\"0%d\"", ",j);\n            }\n            ", "if", " (j == ", "0", ") {\n                ", "printf", "(", "\"0%d\"", ",i);\n            }\n}\n", "\n", "//这个是主程序", "\n", "int", " main(void)\n{\n    ", "int", " minefield", "[SIZE]", "[SIZE]", ";\n    ", "int", " number;\n    printf(", "\"Welcome to minesweeper!\\n\"", ");\n    printf(", "\"How many mines? \"", ");\n    scanf(", "\"%d\"", ", &number);\n \n    Point point", "[SIZE]", ";\n    printf(", "\"Enter pairs:\\n\"", ");\n    ", "int", " i = ", "0", ";\n    ", "while", " (number > i)\n    {\n        scanf(", "\"%d%d\"", ", &point", "[", "i", "]", ".y, &point", "[", "i", "]", ".x);\n        i++;\n    }\n \n    init", "_field(", "minefield", ", ", "point", ", ", "number", ")", ";\n \n    printf(", "\"Game Started\\n\"", ");\n    print", "_minefield(", "minefield", ")", ";\n    ", "int", " a,b,c,d;\n    ", "int", " r = ", "0", ";\n    ", "int", " z = ", "0", ";\n    ", "while", " (scanf(", "\"%d\"", ",&a) != EOF) {\n        ", "if", " ((a", " == ", "1", " || ", "a", " == ", "2", ")", " && ", "r >= ", "3", ") {\n            scanf(", "\"%d%d%d\"", ",&b,&c,&d);\n            printf(", "\"Help already used\\n\"", ");\n        } ", "else", " ", "if", " (a", " == ", "1", ") {\n            scanf(", "\"%d%d%d\"", ",&b,&c,&d);\n            first", "_is_1(", "b", ",", "c", ",", "d", ",", "point", ",", "number", ")", ";\n            r++;\n        } ", "else", " ", "if", " (a", " == ", "2", ") {\n            scanf(", "\"%d%d%d\"", ",&b,&c,&d);\n            first", "_is_2(", "b", ",", "c", ",", "d", ",", "point", ",", "number", ")", ";\n            r++;\n        }\n        ", "if", " (a", " == ", "3", ") {\n            scanf(", "\"%d%d\"", ",&b,&c);\n            first", "_is_3(", "b", ",", "c", ",", "point", ",", "number", ",", "minefield", ")", ";\n        }\n        ", "if", " (a", " == ", "4", "){\n            ", "if", " (z%", "2", " == ", "0", "){\n            printf(", "\"Gameplay mode activated\\n\"", ");\n            printf(", "\". .\\n\"", ");\n            printf(", "\"\\/\\n\"", ");\n            gamemode(minefield, point);\n        }\n            ", "if", " (z%", "2", " == ", "1", "){\n              printf(", "\"Debug mode activated\\n\"", ");\n              debugmode", "()", ";\n            }\n            z++;\n            }\n        ", "if", " (a", " == ", "1", " || ", "a", " == ", "2", " || ", "(z%", "2", " == ", "1", " && ", "a", " == ", "3", ")) {\n            print", "_minefield(", "minefield", ")", ";\n        }\n    }\n \n    return ", "0", ";\n}\n", "\n", "下面是其他代码。", "\n", "#include <stdio.h>", "\n", "#include <stdlib.h>", "\n// 格子的定义\n", "#define VISIBLE_SAFE    0", "\n", "#define HIDDEN_SAFE     1", "\n", "#define HIDDEN_MINE     2", "\n\n//地图尺寸\n", "#define SIZE              8", "\n\n、、下面是其他的", "function", "\ntypedef struct _point\n{\n    ", "int", " x;\n    ", "int", " y;\n} ", "Point", ";\n", "void", " first_is_1(", "int", " b,", "int", " c,", "int", " d,", "Point", " ", "point", "[],", "int", " number);\n", "void", " first_is_2(", "int", " b,", "int", " c,", "int", " d,", "Point", " ", "point", "[],", "int", " number);\n", "void", " first_is_3(", "int", " b,", "int", " c,", "Point", " ", "point", "[],", "int", " number,", "int", " minefield[][SIZE]);\n", "void", " init_field(", "int", " minefield[][SIZE], ", "Point", " ", "point", "[], ", "int", " number);\n", "void", " print_minefield(", "int", " minefield[][SIZE]);\n", "void", " gamemode(", "int", " minefield[][SIZE], ", "Point", " ", "point", "[]);\n", "void", " debugmode(", "int", " minefield[][SIZE], ", "Point", " ", "point", "[]);\n\n\n", "void", " init_field(", "int", " minefield[][SIZE], ", "Point", " ", "point", "[], ", "int", " number) \n{\n    ", "int", " i = ", "0", ";\n    ", "while", " (i < SIZE)\n    {\n        ", "int", " j = ", "0", ";\n        ", "while", " (j < SIZE)\n        {\n            minefield[i][j] = HIDDEN_SAFE;\n            j++;\n        }\n        i++;\n    }\n    i = ", "0", ";\n    ", "while", " (i < number)\n    {\n        ", "if", " (", "point", "[i].y < SIZE && ", "point", "[i].x < SIZE && ", "point", "[i].x >= ", "0", " && ", "point", "[i].y >= ", "0", ") {\n            minefield[", "point", "[i].y][", "point", "[i].x] = HIDDEN_MINE;}\n            i++;\n    }\n\n}\n \n", "void", " print_minefield(", "int", " minefield[][SIZE])\n{\n    ", "int", " i = ", "0", ";\n    ", "while", " (i < SIZE)\n    {\n        ", "int", " j = ", "0", ";\n        ", "while", " (j < SIZE)\n        {\n            printf(\"%d \", minefield[i][j]);\n            j++;\n        }\n            i++;\n        printf(\"\\n\");\n    }\n}\n \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;system(pause);放在return之前&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["vs错误 但代码正确这个问题怎么解决？(标签-windows|关键词-#include)", ["\n", "// 逃跑吧！少年.cpp : 定义应用程序的入口点。", "\n", "//", "\n\n", "#", "include", " ", "\"framework.h\"", "\n", "#", "include", " ", "\"逃跑吧！少年.h\"", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<string>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", "<windows.h>", "\n", "#", "include", "<graphics.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<time.h>", "\n", "#", "include", " ", "<math.h>", "\n", "using", " ", "namespace", " std;\n", "int", "  wanjiaduanwei = ", "1", ";\n", "char", "* wanjiarenwu = ", "\"失忆者\"", ";\n", "char", " wanjianame[", "20", "];\n", "void", " ", "welcome", "()", ";\n", "void", " ", "dingyi", "()", ";\n", "void", " ", "youxi", "()", ";\n", "#", "define", " MAX_LOADSTRING 100", "\n\n", "// 全局变量:", "\nHINSTANCE hInst;                                ", "// 当前实例", "\nWCHAR szTitle[MAX_LOADSTRING];                  ", "// 标题栏文本", "\nWCHAR szWindowClass[MAX_LOADSTRING];            ", "// 主窗口类名", "\n\n", "// 此代码模块中包含的函数的前向声明:", "\n", "ATOM                ", "MyRegisterClass", "(HINSTANCE hInstance)", ";\n", "BOOL                ", "InitInstance", "(HINSTANCE, ", "int", ")", ";\n", "LRESULT CALLBACK    ", "WndProc", "(HWND, UINT, WPARAM, LPARAM)", ";\n", "INT_PTR CALLBACK    ", "About", "(HWND, UINT, WPARAM, LPARAM)", ";\n\n", "int", " APIENTRY ", "wWinMain", "(_In_ HINSTANCE hInstance,\n                     _In_opt_ HINSTANCE hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ ", "int", "       nCmdShow)", "\n", "{\n    ", "UNREFERENCED_PARAMETER", "(hPrevInstance);\n    ", "UNREFERENCED_PARAMETER", "(lpCmdLine);\n\n    ", "// ", "TODO:", " 在此处放置代码。", "\n    ", "const", " ", "int", " A = ", "20110616", ", B = ", "20110616", ";\n    ", "int", " a, b;\n    ", "int", " c;\n    cout << ", "\"请输入账号：\"", ";\n    cin >> a;\n    cout << ", "\"请输入密码\"", ";\n    cin >> b;\n    ", "system", "(", "\"cls\"", ");\n    cout << ", "\"请稍等\"", ";\n    ", "Sleep", "(", "500", ");\n    cout << ", "\".\"", ";\n    ", "Sleep", "(", "500", ");\n    cout << ", "\".\"", ";\n    ", "Sleep", "(", "500", ");\n    cout << ", "\".\"", ";\n    ", "system", "(", "\"cls\"", ");\n    ", "if", " (a == A && b == B)\n    {\n        cout << ", "\"登录成功\"", ";\n        ", "Sleep", "(", "2000", ");\n        ", "system", "(", "\"cls\"", ");\n        cout << ", "\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n                             森林大挑战\"", ";\n        ", "Sleep", "(", "2000", ");\n        ", "system", "(", "\"cls\"", ");\n        cout << ", "\"\\n                             加载中\\n\\n\\n\\n\\n\\n\\n\\n                 名字输入EVA初号机有惊喜！\\n\\n              ■■■\"", ";\n        ", "Sleep", "(", "1000", ");\n        cout << ", "\"■■■\"", ";\n        ", "Sleep", "(", "2000", ");\n        cout << ", "\"■■\"", ";\n        ", "Sleep", "(", "1000", ");\n        cout << ", "\"■\"", ";\n        ", "Sleep", "(", "3000", ");\n        cout << ", "\"■■\"", ";\n        ", "Sleep", "(", "1000", ");\n        cout << ", "\"■\"", ";\n        ", "Sleep", "(", "1500", ");\n        cout << ", "\"■■\"", ";\n        ", "Sleep", "(", "1000", ");\n        cout << ", "\"■\"", ";\n        ", "Sleep", "(", "1000", ");\n        ", "system", "(", "\"cls\"", ");\n        cout << ", "\"1.开始游戏 0.关闭\\n\"", ";\n        cout << ", "\"        *         *\\n\"", ";\n        cout << ", "\"       * *      *  *\\n\"", ";\n        cout << ", "\"      *   *    *    *\\n\"", ";\n        cout << ", "\" *   *      * *      *\\n\"", ";\n        cout << ", "\"***   *      *      *\\n\"", ";\n        cout << ", "\" *     *           *\\n\"", ";\n        cout << ", "\" *      *         *\\n\"", ";\n        cout << ", "\"* *      *       *\\n\"", ";\n        cout << ", "\"          *     *\\n\"", ";\n        cout << ", "\"           *   *\\n\"", ";\n        cout << ", "\"            * *\\n\"", ";\n        cout << ", "\"             *\\n\"", ";\n        cin >> c;\n        ", "if", " (c == ", "1", ")\n        {\n            ", "dingyi", "();\n        }\n        ", "else", "\n            ", "if", " (c == ", "0", ")\n            {\n                ", "system", "(", "\"cls\"", ");\n                cout << ", "\"我允许你不玩了吗？\"", ";\n                ", "Sleep", "(", "2000", ");\n                ", "system", "(", "\"cls\"", ");\n                cout << ", "\"鬼！\"", ";\n                ", "int", " i, j;\n                ", "int", " x = ", "0", ";\n                ", "int", " y = ", "5", ";\n                ", "int", " velocity_x = ", "1", ";\n                ", "int", " velocity_y = ", "1", ";\n                ", "int", " left = ", "0", ";\n                ", "int", " right = ", "20", ";\n                ", "int", " top = ", "0", ";\n                ", "int", " bottom = ", "10", ";\n                ", "while", " (", "1", ")\n                {\n                    x = x + velocity_x;\n                    y = y + velocity_y;\n                    ", "system", "(", "\"cls\"", ");   ", "// 清屏函数", "\n                    ", "// 输出小球前的空行", "\n                    ", "for", " (i = ", "0", "; i < x; i++)\n                        ", "printf", "(", "\"\\n\"", ");\n                    ", "for", " (j = ", "0", "; j < y; j++)\n                        ", "printf", "(", "\" \"", ");\n                    ", "printf", "(", "\"sb\"", ");  ", "// 输出小球o", "\n                    ", "printf", "(", "\"\\n\"", ");\n                    ", "Sleep", "(", "50", ");  ", "// 等待若干毫秒", "\n                    ", "if", " ((x == top) || (x == bottom))\n                        velocity_x = -velocity_x;\n                    ", "if", " ((y == left) || (y == right))\n                        velocity_y = -velocity_y;\n                }\n            }\n    }", "//到此为止； ", "\n    ", "else", "\n    {\n        cout << ", "\"看什么看！\"", ";\n        ", "Sleep", "(", "1500", ");\n        cout << ", "\"帐号或密码错误!\"", ";\n        ", "return", " ", "0", ";\n    }\n    ", "// 初始化全局字符串", "\n    ", "LoadStringW", "(hInstance, IDS_APP_TITLE, szTitle, MAX_LOADSTRING);\n    ", "LoadStringW", "(hInstance, IDC_MY, szWindowClass, MAX_LOADSTRING);\n    ", "MyRegisterClass", "(hInstance);\n\n    ", "// 执行应用程序初始化:", "\n    ", "if", " (!", "InitInstance", " (hInstance, nCmdShow))\n    {\n        ", "return", " FALSE;\n    }\n\n    HACCEL hAccelTable = ", "LoadAccelerators", "(hInstance, ", "MAKEINTRESOURCE", "(IDC_MY));\n\n    MSG msg;\n\n    ", "// 主消息循环:", "\n    ", "while", " (", "GetMessage", "(&msg, ", "nullptr", ", ", "0", ", ", "0", "))\n    {\n        ", "if", " (!", "TranslateAccelerator", "(msg.hwnd, hAccelTable, &msg))\n        {\n            ", "TranslateMessage", "(&msg);\n            ", "DispatchMessage", "(&msg);\n        }\n    }\n\n    ", "return", " (", "int", ") msg.wParam;\n}\n\n\n\n", "//", "\n", "//  函数: MyRegisterClass()", "\n", "//", "\n", "//  目标: 注册窗口类。", "\n", "//", "\n", "ATOM ", "MyRegisterClass", "(HINSTANCE hInstance)", "\n", "{\n    WNDCLASSEXW wcex;\n\n    wcex.cbSize = ", "sizeof", "(WNDCLASSEX);\n\n    wcex.style          = CS_HREDRAW | CS_VREDRAW;\n    wcex.lpfnWndProc    = WndProc;\n    wcex.cbClsExtra     = ", "0", ";\n    wcex.cbWndExtra     = ", "0", ";\n    wcex.hInstance      = hInstance;\n    wcex.hIcon          = ", "LoadIcon", "(hInstance, ", "MAKEINTRESOURCE", "(IDI_MY));\n    wcex.hCursor        = ", "LoadCursor", "(", "nullptr", ", IDC_ARROW);\n    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+", "1", ");\n    wcex.lpszMenuName   = ", "MAKEINTRESOURCEW", "(IDC_MY);\n    wcex.lpszClassName  = szWindowClass;\n    wcex.hIconSm        = ", "LoadIcon", "(wcex.hInstance, ", "MAKEINTRESOURCE", "(IDI_SMALL));\n\n    ", "return", " ", "RegisterClassExW", "(&wcex);\n}\n\n", "//", "\n", "//   函数: InitInstance(HINSTANCE, int)", "\n", "//", "\n", "//   目标: 保存实例句柄并创建主窗口", "\n", "//", "\n", "//   注释:", "\n", "//", "\n", "//        在此函数中，我们在全局变量中保存实例句柄并", "\n", "//        创建和显示主程序窗口。", "\n", "//", "\n", "BOOL ", "InitInstance", "(HINSTANCE hInstance, ", "int", " nCmdShow)", "\n", "{\n   hInst = hInstance; ", "// 将实例句柄存储在全局变量中", "\n\n   HWND hWnd = ", "CreateWindowW", "(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,\n      CW_USEDEFAULT, ", "0", ", CW_USEDEFAULT, ", "0", ", ", "nullptr", ", ", "nullptr", ", hInstance, ", "nullptr", ");\n\n   ", "if", " (!hWnd)\n   {\n      ", "return", " FALSE;\n   }\n\n   ", "ShowWindow", "(hWnd, nCmdShow);\n   ", "UpdateWindow", "(hWnd);\n\n   ", "return", " TRUE;\n}\n\n", "//", "\n", "//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)", "\n", "//", "\n", "//  目标: 处理主窗口的消息。", "\n", "//", "\n", "//  WM_COMMAND  - 处理应用程序菜单", "\n", "//  WM_PAINT    - 绘制主窗口", "\n", "//  WM_DESTROY  - 发送退出消息并返回", "\n", "//", "\n", "//", "\n", "LRESULT CALLBACK ", "WndProc", "(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)", "\n", "{\n    ", "switch", " (message)\n    {\n    ", "case", " WM_COMMAND:\n        {\n            ", "int", " wmId = ", "LOWORD", "(wParam);\n            ", "// 分析菜单选择:", "\n            ", "switch", " (wmId)\n            {\n            ", "case", " IDM_ABOUT:\n                ", "DialogBox", "(hInst, ", "MAKEINTRESOURCE", "(IDD_ABOUTBOX), hWnd, About);\n                ", "break", ";\n            ", "case", " IDM_EXIT:\n                ", "DestroyWindow", "(hWnd);\n                ", "break", ";\n            ", "default", ":\n                ", "return", " ", "DefWindowProc", "(hWnd, message, wParam, lParam);\n            }\n        }\n        ", "break", ";\n    ", "case", " WM_PAINT:\n        {\n            PAINTSTRUCT ps;\n            HDC hdc = ", "BeginPaint", "(hWnd, &ps);\n            ", "// ", "TODO:", " 在此处添加使用 hdc 的任何绘图代码...", "\n            ", "EndPaint", "(hWnd, &ps);\n        }\n        ", "break", ";\n    ", "case", " WM_DESTROY:\n        ", "PostQuitMessage", "(", "0", ");\n        ", "break", ";\n    ", "default", ":\n        ", "return", " ", "DefWindowProc", "(hWnd, message, wParam, lParam);\n    }\n    ", "return", " ", "0", ";\n}\n\n", "// “关于”框的消息处理程序。", "\n", "INT_PTR CALLBACK ", "About", "(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)", "\n", "{\n    ", "UNREFERENCED_PARAMETER", "(lParam);\n    ", "switch", " (message)\n    {\n    ", "case", " WM_INITDIALOG:\n        ", "return", " (INT_PTR)TRUE;\n\n    ", "case", " WM_COMMAND:\n        ", "if", " (", "LOWORD", "(wParam) == IDOK || ", "LOWORD", "(wParam) == IDCANCEL)\n        {\n            ", "EndDialog", "(hDlg, ", "LOWORD", "(wParam));\n            ", "return", " (INT_PTR)TRUE;\n        }\n        ", "break", ";\n    }\n    ", "return", " (INT_PTR)FALSE;\n}\n", "void", " ", "dingyi", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    cout << ", "\"输入名字（英文，中文出错）：\"", ";\n    cin >> wanjianame;\n    ", "welcome", "();\n}\n", "void", " ", "welcome", "()", "\n", "{\n    ", "int", " a;\n    ", "while", " (", "true", ")\n    {\n        ", "system", "(", "\"cls\"", ");\n        cout << wanjianame << ", "\" 段位：\"", " << wanjiaduanwei;\n        cout << ", "\"人物\"", " << wanjiarenwu;\n        cout << ", "\"\\n1.选择人物 2.开始游戏\"", ";\n        cin >> a;\n        ", "if", " (a == ", "1", ")\n        {\n            cout << ", "\"1.失忆者 2.小骇客\"", ";\n            cin >> a;\n            ", "if", " (a == ", "1", ")\n            {\n                wanjiarenwu = ", "\"失忆者\"", ";\n            }\n            ", "else", "\n            {\n                wanjiarenwu = ", "\"小骇客\"", ";\n            }\n        }\n        ", "else", "\n        {\n            ", "youxi", "();\n            ", "return", ";\n        }\n    }\n}\n", "void", " ", "youxi", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "initgraph", "(", "1280", ", ", "800", ");\n    IMAGE img;\n    ", "loadimage", "(&img, _T(", "\"E://庞陈阳的程序//c++//图片//beijing2.jpg\"", "), ", "1280", ", ", "800", ");", "//L+绝对路径+图片名+图片大小", "\n    ", "putimage", "(", "0", ", ", "0", ", &img);", "//显示图片 0,0代表位置，左上", "\n    ", "setfont", "(", "80", ", ", "0", ", _T(", "\"黑体\"", "));\n    ", "setbkmode", "(TRANSPARENT);\n    ", "outtextxy", "(", "10", ", ", "10", ", _T(", "\"嘿嘿，敬请期待\"", "));\n    ", "return", ";\n}\n", "\n", "这是代码，运行系统是是win7，编程环境是vs2022，创建的事应用台程序", "错误列表没有警告错误提示", "执行后弹出了两个只出现了1秒的exe窗口，之后就结束了？", "好几次都是这样", "这个问题怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;return后报的错误&amp;#xff0c;说明是在函数内部资源回收的时候出现了错误。检查一下函数中的数组是否有越界写入的嫌疑吧&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["嵌入式C语言错误 segmentation fault", ["我在嵌入式板子上跑C语言程序。报错segmentation fault。", "查了资料说和内存有关，", "没办法gdb，就用printf定位出错位置。", "\n", "程序时这样的：", "\n", "主程序", "\n", "。。。\nprintf(", "\"send start\\r\\n\"", ");\nfd=send", "OtherFrame(", "ethPacket", ",", "interfaceB", ",", "pkthdr", "->", "len", ")", ";\nprintf(", "\"send start\\r\\n\"", ");\n。。。\n\n", "\n", "子函数：", "\n", "\nint sendOtherFrame(union ETHDataPacket ipDataPacket,char *interface,int len)\n{\n    int i, datalen,frame_length, sd, bytes;\n    ", "//", " char *interface=", "\"enp4s0\"", ";;\n    uint8_t data[IP_MAXPACKET];\n    uint8_t src_mac[", "6", "];\n    uint8_t dst_mac[", "6", "];;\n    uint8_t ether_frame[IP_MAXPACKET];\n    struct sockaddr_ll device;\n    struct ifreq ifr;\n\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 1\\r\\r\"", ");\n\n    ", "//", " Find interface index from interface name and store index ", "in", "\n    ", "//", " struct sockaddr_ll device, which will be used as an argument of sendto().\n    memset (&device, ", "0", ", sizeof (device));\n    ", "if", " ((device.sll_ifindex = if_nametoindex (interface)) == ", "0", ") {\n        perror (", "\"if_nametoindex() failed to obtain interface index \"", ");close (sd);\n        ", "exit", " (EXIT_FAILURE);\n    }\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 2\\r\\r\"", ");\n    ", "//", " printf (", "\"Index for interface %s is %i\\n\"", ", interface, device.sll_ifindex);\n\n    ", "//", " ", "2", ", 设置源MAC地址\n    ", "for", "(i=", "0", ";i<", "6", ";i++){\n        src_mac[i]=ipDataPacket.ethPacket.ethHeader.ether_shost[i];\n    }\n    ", "//", " ", "1", ", 设置目标MAC地址\n    ", "for", "(i=", "0", ";i<", "6", ";i++){\n        dst_mac[i]=ipDataPacket.ethPacket.ethHeader.ether_dhost[i];\n    }\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 3\\r\\r\"", ");\n    ", "//", " Fill out sockaddr_ll.\n    device.sll_family = AF_PACKET;\n    memcpy (device.sll_addr, src_mac, ", "6", ");\n    device.sll_halen = htons (", "6", ");\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 4\\r\\r\"", ");\n    ", "#define IPHEADER ipDataPacket.ethPacket.ethData.ipPacket.ipHeader", "\n    ", "#define IPPACKET ipDataPacket.ethPacket.ethData.ipPacket", "\n    ", "#define ETHDATA ipDataPacket.ethPacket.ethData", "\n    datalen = len-ETH_HEADER_LEN_BYTE;        ", "//", "len of ip frame : ipheader+data\n    ", "//", "Frame data\n    ", "for", "(i=", "0", ";i<(len-ETH_HEADER_LEN_BYTE);i++){\n        data[i]=ETHDATA.data[i];\n    }\n\n    ", "//", " Fill out ethernet frame header.\n    frame_length = ", "6", " + ", "6", " + ", "2", "   + datalen;\n    ", "//", " Destination and Source MAC addresses\n    memcpy (ether_frame, dst_mac, ", "6", ");\n    memcpy (ether_frame + ", "6", ", src_mac, ", "6", ");\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 5\\r\\r\"", ");\n    ", "//", " ", "3", ", 这里有点迷？？？-这个看得明白，但是实际显示不是这么回事，这是咋回事呢？原因是类型不一样\n    ", "//", " int -- uint16\n    ether_frame[", "12", "] = ipDataPacket.ethPacket.ethHeader.ether_type % ", "256", ";\n    ether_frame[", "13", "] = ipDataPacket.ethPacket.ethHeader.ether_type / ", "256", ";\n    ", "//", " ether_frame[", "13", "] = ipDataPacket.ethPacket.ethHeader.ether_type / ", "256", " ;\n    ", "//", " printf(", "\"%02d,\"", ",ether_frame[", "12", "]);\n    ", "//", " printf(", "\"%02d,\\r\\n\"", ",ether_frame[", "13", "]);\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 6\\r\\r\"", ");\n    ", "//", " data\n    memcpy (ether_frame + ", "14", " , data, datalen);\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 7\\r\\r\"", ");\n    ", "//", " Submit request ", "for", " a raw socket descriptor.\n    ", "if", " ((sd = socket (PF_PACKET, SOCK_RAW, htons (ETH_P_ALL))) < ", "0", ") {", "//", "创建正真发送的socket\n        perror (", "\"socket() failed \"", ");close (sd);\n        ", "exit", " (EXIT_FAILURE);\n    }\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 8\\r\\r\"", ");\n    ", "//", " Send ethernet frame to socket.\n    ", "if", " ((bytes = sendto (sd, ether_frame, frame_length, ", "0", ", (struct sockaddr *) &device, sizeof (device))) <= ", "0", ") {\n        perror (", "\"sendto() failed\"", ");close (sd);\n        ", "exit", " (EXIT_FAILURE);\n    }\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 9\\r\\r\"", ");\n    ", "//", " printf (", "\"send num=%d,read num=%d\\n\"", ",frame_length,bytes);     \n    ", "//", " Close socket descriptor.\n    close (sd);\n    printf(", "\"\\r\\nFunction sendOtherFrame(): 10\\r\\r\"", ");\n    return (EXIT_SUCCESS);\n}\n", "\n", "运行结果", "\n", "\n", "有知道怎么回事吗？给点建议吧"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不知道你说的虚拟机不是在本地&lt;br /&gt;你如果是本地的话&amp;#xff0c;可以用apache配置一个虚拟域名&amp;#xff0c;然后前端代码通过域名调用后端接口就可以了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序如何把后端代码上传至虚拟机php并连接前端微信开发者工具", ["前端是微信开发者工具，后端有php，阿帕奇，MySQL，不会将代码上传并连接前后端，求帮忙"]], "Tag": "程序设计"}
{"Answer": "頂一下,Android的没试过，pc端工具这两种没区别，只有usb转串口的驱动装好了就行", "Konwledge_Point": "主程序", "Question": ["串口和串口轉usb的區別", ["圖一：", "\n\n", "圖二：", "\n\n", "提問：圖一圖二可不可以都用下面的代碼獲取數據：（圖二可以用下面的代碼獲取數據，但是圖一不知道行不行，請各位大佬路過看看）", "\n\n", "package com.lyf.test2;\n\nimport java.awt.Button;\nimport java.awt.Color;\nimport java.awt.Font;\nimport java.awt.Frame;\nimport java.awt.Graphics;\nimport java.awt.Image;\nimport java.awt.Label;\nimport java.awt.Toolkit;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\n\nimport javax.swing.JOptionPane;\n\nimport com.lyf.test2.SerialTool;\n\nimport gnu.io.SerialPort;\nimport gnu.io.SerialPortEvent;\nimport gnu.io.SerialPortEventListener;\nimport serialException.ExceptionWriter;\nimport serialException.NoSuchPort;\nimport serialException.NotASerialPort;\nimport serialException.PortInUse;\nimport serialException.ReadDataFromSerialPortFailure;\nimport serialException.SendDataToSerialPortFailure;\nimport serialException.SerialPortInputStreamCloseFailure;\nimport serialException.SerialPortOutputStreamCloseFailure;\nimport serialException.SerialPortParameterFailure;\nimport serialException.TooManyListeners;\n\n/**\n * 主程序\n * @author zhong\n *\n */\npublic class Client extends Frame{\n\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * 程序界面宽度\n     */\n    public static final int WIDTH = 800;\n\n    /**\n     * 程序界面高度\n     */\n    public static final int HEIGHT = 620;\n\n    /**\n     * 程序界面出现位置（横坐标）\n     */\n    public static final int LOC_X = 200;\n\n    /**\n     * 程序界面出现位置（纵坐标）\n     */\n    public static final int LOC_Y = 70;\n\n    private static SerialPort serialPort = null;    //保存串口对象\n\n    private Font font = new Font(\"微软雅黑\", Font.BOLD, 25);//文本框字體\n\n    private Label weight = new Label(\"暫無數據\", Label.CENTER); //重量\n\n    private Button saveButton = new Button(\"保存\");//设置button按钮\n\n    Image offScreen = null; //用于双缓冲\n\n    //设置window的icon（这里我自定义了一下Windows窗口的icon图标，因为实在觉得哪个小咖啡图标不好看 = =）\n    Toolkit toolKit = getToolkit();//返回此窗体的工具包\n    Image icon = toolKit.getImage(Client.class.getResource(\"computer.png\"));//獲取當前類所在的包下面的圖片\n\n    /**\n     * 主方法\n     * @param args  \n     * @throws SerialPortOutputStreamCloseFailure \n     * @throws SendDataToSerialPortFailure \n     * @throws PortInUse \n     * @throws NoSuchPort \n     * @throws NotASerialPort \n     * @throws SerialPortParameterFailure \n     */\n    public static void main(String[] args) throws SendDataToSerialPortFailure, SerialPortOutputStreamCloseFailure, SerialPortParameterFailure, NotASerialPort, NoSuchPort, PortInUse {\n        new Client().launchFrame(); \n    }\n\n    /**\n     * 主菜单窗口显示；\n     * 添加Label、按钮、下拉条及相关事件监听；\n     */\n    public void launchFrame() {\n        this.setBounds(LOC_X, LOC_Y, WIDTH, HEIGHT);\n        this.setTitle(\"CDIO工程项目\");\n        this.setIconImage(icon);\n        this.setBackground(Color.white);\n        this.setLayout(null);\n\n        //改變按鈕的事件监听\n        this.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent arg0) {\n                if (serialPort != null) {\n                    //程序退出时关闭串口释放资源\n                    SerialTool.closePort(serialPort);\n                }\n                System.exit(0);\n            }\n        });\n\n        //设置文本框位置、背景颜色、是否粗体、字体颜色\n        weight.setBounds(140, 103, 225, 50);\n        weight.setBackground(Color.black);\n        weight.setFont(font);\n        weight.setForeground(Color.white);\n        add(weight);\n\n        //添加保存按钮\n        saveButton.setBounds(250, 490, 300, 50);\n        saveButton.setBackground(Color.lightGray);\n        saveButton.setFont(new Font(\"微软雅黑\", Font.BOLD, 20));\n        saveButton.setForeground(Color.darkGray);\n        add(saveButton);\n\n        //添加打开串口按钮的事件监听\n        try {\n            //指定端口名及波特率的串口对象\n            serialPort = SerialTool.openPort(\"COM1\", 4800);\n\n            //在该串口对象上添加监听器\n            SerialTool.addListener(serialPort, new SerialListener());\n        } catch (SerialPortParameterFailure | NotASerialPort | NoSuchPort | PortInUse | TooManyListeners e1) {\n            //发生错误时使用一个Dialog提示具体的错误信息\n            JOptionPane.showMessageDialog(null, e1, \"错误\", JOptionPane.INFORMATION_MESSAGE);\n        }\n\n        this.setResizable(false);//设置此框架是否可由用户调整大小。\n        this.setVisible(true);  //显示窗口\n\n        new Thread(new RepaintThread()).start();    //启动重画线程\n    }\n\n    /**\n     * 画出主界面组件元素\n     * 设置button的字体颜色、设置字体样式  是否粗体  字体大小、文本、位置\n     */\n    public void paint(Graphics g) {\n        g.setColor(Color.black);\n        g.setFont(new Font(\"微软雅黑\", Font.BOLD, 25));\n        g.drawString(\" 重量： \", 45, 130);\n    }\n\n    /**\n     * 双缓冲方式重画界面各元素组件\n     */\n    public void update(Graphics g) {\n        if (offScreen == null)  offScreen = this.createImage(WIDTH, HEIGHT);\n        Graphics gOffScreen = offScreen.getGraphics();\n        Color c = gOffScreen.getColor();\n        gOffScreen.setColor(Color.white);\n        gOffScreen.fillRect(0, 0, WIDTH, HEIGHT);   //重画背景画布\n        this.paint(gOffScreen); //重画界面元素\n        gOffScreen.setColor(c);\n        g.drawImage(offScreen, 0, 0, null); //将新画好的画布“贴”在原画布上\n    }\n\n    /**\n     * 以内部类形式创建一个串口监听类\n     * @author zhong\n     *\n     */\n    private class SerialListener implements SerialPortEventListener {\n        /**\n         * 处理监控到的串口事件\n         */\n        public void serialEvent(SerialPortEvent serialPortEvent) {\n            try {\n                // 等待1秒钟让串口把数据全部接收后在处理\n                Thread.sleep(200);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            switch (serialPortEvent.getEventType()) {\n                case SerialPortEvent.BI: // 10 通讯中断\n                    JOptionPane.showMessageDialog(null, \"与串口设备通讯中断\", \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                    break;\n                case SerialPortEvent.OE: // 7 溢位（溢出）错误\n\n                case SerialPortEvent.FE: // 9 帧错误\n\n                case SerialPortEvent.PE: // 8 奇偶校验错误\n\n                case SerialPortEvent.CD: // 6 载波检测\n\n                case SerialPortEvent.CTS: // 3 清除待发送数据\n\n                case SerialPortEvent.DSR: // 4 待发送数据准备好了\n\n                case SerialPortEvent.RI: // 5 振铃指示\n\n                case SerialPortEvent.OUTPUT_BUFFER_EMPTY: // 2 输出缓冲区已清空\n                    break;\n\n                case SerialPortEvent.DATA_AVAILABLE: // 1 串口存在可用数据\n                    byte[] data = null;\n                    try {\n\n                        if (serialPort == null) {//判断串口对象是否为空\n                            JOptionPane.showMessageDialog(null, \"串口对象为空！监听失败！\", \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                        }else {\n                            data = SerialTool.readFromPort(serialPort); //读取数据，存入字节数组\n                            //System.out.println(new String(data));\n                            //自定义解析过程\n                            if (data != null && data.length > 1) {  //检查数据是否读取正确\n                                try {\n                                    weight.setText(new String(data) + \" g\");\n                                } catch (ArrayIndexOutOfBoundsException e) {\n                                    JOptionPane.showMessageDialog(null, \"数据解析过程出错，更新界面数据失败！请检查设备或程序！\", \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                                    System.exit(0);\n                                }\n                            }else {\n                                JOptionPane.showMessageDialog(null, \"读取数据过程中未获取到有效数据！请检查设备或程序！\", \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                                System.exit(0);\n                            }\n                        }   \n                    } catch (ReadDataFromSerialPortFailure | SerialPortInputStreamCloseFailure e) {\n                        JOptionPane.showMessageDialog(null, e, \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                        System.exit(0); //发生读取错误时显示错误信息后退出系统\n                    }   \n                    break;\n            }\n        }\n    }\n\n    /**\n     * 重画线程（每隔30毫秒重画一次）\n     */\n    private class RepaintThread implements Runnable {\n        public void run() {\n            while(true) {\n                //调用重画方法\n                repaint();\n                try {\n                    Thread.sleep(30);\n                } catch (InterruptedException e) {\n                    String err = ExceptionWriter.getErrorInfoFromException(e);\n                    JOptionPane.showMessageDialog(null, err, \"错误\", JOptionPane.INFORMATION_MESSAGE);\n                    System.exit(0);\n                }\n            }\n        }\n\n    }\n\n}\n\n", "\n\n", " package com.lyf.test2;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.TooManyListenersException;\n\nimport gnu.io.CommPort;\nimport gnu.io.CommPortIdentifier;\nimport gnu.io.NoSuchPortException;\nimport gnu.io.PortInUseException;\nimport gnu.io.SerialPort;\nimport gnu.io.SerialPortEventListener;\nimport gnu.io.UnsupportedCommOperationException;\nimport serialException.*;\n\n/**\n * 串口服务类，提供打开、关闭串口，读取、发送串口数据等服务（采用单例设计模式）\n * @author zhong\n *\n */\npublic class SerialTool {\n\n    private static SerialTool serialTool = null;\n\n    static {\n        //在该类被ClassLoader加载时就初始化一个SerialTool对象\n        if (serialTool == null) {\n            serialTool = new SerialTool();\n        }\n    }\n\n    //私有化SerialTool类的构造方法，不允许其他类生成SerialTool对象\n    private SerialTool() {} \n\n    /**\n     * 获取提供服务的SerialTool对象\n     * @return serialTool\n     */\n    public static SerialTool getSerialTool() {\n        if (serialTool == null) {\n            serialTool = new SerialTool();\n        }\n        return serialTool;\n    }\n\n    /**\n     * 打开串口\n     * @param portName 端口名称\n     * @param baudrate 波特率\n     * @return 串口对象\n     * @throws SerialPortParameterFailure 设置串口参数失败\n     * @throws NotASerialPort 端口指向设备不是串口类型\n     * @throws NoSuchPort 没有该端口对应的串口设备\n     * @throws PortInUse 端口已被占用\n     */\n    public static final SerialPort openPort(String portName, int baudrate) throws SerialPortParameterFailure, NotASerialPort, NoSuchPort, PortInUse {\n\n        try {\n            //通过端口名识别端口\n            CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(portName);\n\n            //打开端口，并给端口名字和一个timeout（打开操作的超时时间）\n            CommPort commPort = portIdentifier.open(portName, 2000);\n\n            //判断是不是串口\n            if (commPort instanceof SerialPort) {\n\n                SerialPort serialPort = (SerialPort) commPort;\n\n                try {                       \n                    //设置一下串口的波特率等参数\n                    serialPort.setSerialPortParams(baudrate, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);                              \n                } catch (UnsupportedCommOperationException e) {  \n                    throw new SerialPortParameterFailure();\n                }\n\n                //System.out.println(\"Open \" + portName + \" sucessfully !\");\n                return serialPort;\n\n            } else {\n                //不是串口\n                throw new NotASerialPort();\n            }\n        } catch (NoSuchPortException e1) {\n          throw new NoSuchPort();\n        } catch (PortInUseException e2) {\n            throw new PortInUse();\n        }\n    }\n\n    /**\n     * 关闭串口\n     * @param serialport 待关闭的串口对象\n     */\n    public static void closePort(SerialPort serialPort) {\n        if (serialPort != null) {\n            serialPort.close();\n            serialPort = null;\n        }\n    }\n\n    /**\n     * 从串口读取数据\n     * @param serialPort 当前已建立连接的SerialPort对象\n     * @return 读取到的数据\n     * @throws ReadDataFromSerialPortFailure 从串口读取数据时出错\n     * @throws SerialPortInputStreamCloseFailure 关闭串口对象输入流出错\n     */\n    public static byte[] readFromPort(SerialPort serialPort) throws ReadDataFromSerialPortFailure, SerialPortInputStreamCloseFailure {\n\n        InputStream in = null;\n        byte[] bytes = null;\n\n        try {\n            in = serialPort.getInputStream();//取入数据\n            int bufflenth = in.available();     //获取buffer里的数据长度\n\n            while (bufflenth != 0) {                             \n                bytes = new byte[bufflenth];    //初始化byte数组为buffer中数据的长度\n                in.read(bytes);\n                bufflenth = in.available();\n            } \n        } catch (IOException e) {\n            throw new ReadDataFromSerialPortFailure();\n        } finally {\n            try {\n                if (in != null) {\n                    in.close();\n                    in = null;\n                }\n            } catch(IOException e) {\n                throw new SerialPortInputStreamCloseFailure();\n            }\n        }\n\n        return bytes;\n\n    }\n\n    /**\n     * 添加监听器\n     * @param port     串口对象\n     * @param listener 串口监听器\n     * @throws TooManyListeners 监听类对象过多\n     */\n    public static void addListener(SerialPort port, SerialPortEventListener listener) throws TooManyListeners {\n        try {\n            //给串口添加监听器\n            port.addEventListener(listener);\n            //设置当有数据到达时唤醒监听接收线程\n            port.notifyOnDataAvailable(true);\n          //设置当通信中断时唤醒中断线程\n            port.notifyOnBreakInterrupt(true);\n\n        } catch (TooManyListenersException e) {\n            throw new TooManyListeners();\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "public void keyPressed(KeyEvent e) {\r\n#         if(e.getKeyCode()==KeyEvent.VK_W);{\r\n            hero.setDirect(0);\r\n            hero.moveUp();\r\n            System.out.println(\"按下  \"+e.getKeyChar());\r\n            System.out.println(\"x -\"+hero.x+\"y-\"+hero.y);\r\n        }\r\n\t\t\t\t\r\n# \t\t\t\t这里多了一个分号，所以无论你按什么键，分号后面的代码都会被执行。", "Konwledge_Point": "主程序", "Question": ["Java做的坦克大战游戏（未完成），方向控制遇到问题，左右键（AD）走斜线，下（s）不管用", ["如题，怎么解决？尽量不要粘贴代码，说明原因即可。其他错误不用管，谢谢", "\n\n", " package Tank;\nimport java.awt.*;\nimport java.awt.event.*;\nimport javax.swing.*;\n//主程序\npublic class Game extends JFrame{\n    public static void main(String[] args) {\n        Game game=new Game();\n    }\n    Game(){\n        MyPanel mp=new MyPanel();\n        this.add(mp);\n        mp.setBackground(Color.BLACK);\n        this.setBounds(100,100,400,300);\n        this.setVisible(true);\n        this.addKeyListener(mp);\n        this.addWindowListener(new WindowAdapter(){\n            public void windowClosing(WindowEvent e) {\n                Game.this.setVisible(false);\n                System.exit(0);\n            }\n        });\n    }\n}\n//面板区域\nclass MyPanel extends JPanel implements KeyListener{\n    Hero hero=null;\n    MyPanel(){\n        hero=new Hero(150,200);\n    }\n    public void paint(Graphics g){\n        super.paint(g);\n        this.drawTank(hero.getX(), hero.getY(), g, 0, 0);\n    }\n    public void drawTank(int x,int y,Graphics g,int direct,int type){\n        switch(type){\n        case 0:\n            g.setColor(Color.YELLOW);\n            break;\n        case 1:\n            g.setColor(Color.CYAN);\n            break;\n        }\n        switch(direct){\n        case 0:\n            g.fillRect(x, y, 5, 30);\n            g.fill3DRect(x+15, y, 5, 30,false);\n            g.fill3DRect(x+5,y+5, 10, 20,false);\n            g.fillOval(x+5, y+10, 10, 10);\n            g.drawLine(x+10, y+17, x+10, y);\n            break;\n        case 1:\n            /*g.fillRect(x, y, 5, 30);\n            g.fill3DRect(x+15, y, 5, 30,false);\n            g.fill3DRect(x+5,y+5, 10, 20,false);\n            g.fillOval(x+5, y+10, 10, 10);\n            g.drawLine(x+10, y+17, x+10, y);\n            break;\n        case 2:\n            g.fillRect(x, y, 5, 30);\n            g.fill3DRect(x+15, y, 5, 30,false);\n            g.fill3DRect(x+5,y+5, 10, 20,false);\n            g.fillOval(x+5, y+10, 10, 10);\n            g.drawLine(x+10, y+17, x+10, y);\n            break;\n        case 3:\n            g.fillRect(x, y, 5, 30);\n            g.fill3DRect(x+15, y, 5, 30,false);\n            g.fill3DRect(x+5,y+5, 10, 20,false);\n            g.fillOval(x+5, y+10, 10, 10);\n            g.drawLine(x+10, y+17, x+10, y);\n            break;*/\n        }\n    }\n    //键盘处理\n    @Override\n    public void keyTyped(KeyEvent e) {}\n    @Override\n    public void keyPressed(KeyEvent e) {\n        if(e.getKeyCode()==KeyEvent.VK_W);{\n            hero.setDirect(0);\n            hero.moveUp();\n            System.out.println(\"按下  \"+e.getKeyChar());\n            System.out.println(\"x -\"+hero.x+\"y-\"+hero.y);\n        }\n        if(e.getKeyCode()==KeyEvent.VK_D){\n            hero.setDirect(1);\n            hero.moveRight();\n            System.out.println(\"按下  \"+e.getKeyChar());\n            System.out.println(\"x -\"+hero.x+\"y-\"+hero.y);\n        }\n        if(e.getKeyCode()==KeyEvent.VK_S){\n            hero.setDirect(2);\n            hero.moveDown();;\n            System.out.println(\"按下  \"+e.getKeyChar());\n            System.out.println(\"x -\"+hero.x+\"y-\"+hero.y);\n        }\n        if(e.getKeyCode()==KeyEvent.VK_A){\n            hero.setDirect(3);\n            hero.moveLeft();;\n            System.out.println(\"按下  \"+e.getKeyChar());\n            System.out.println(\"x -\"+hero.x+\"y-\"+hero.y);\n        }\n        this.repaint();\n    }\n    @Override\n    public void keyReleased(KeyEvent e) {}\n}\n//坦克\nclass Tank{\n    int direct;\n    int speed=1;\n    public int getSpeed() {\n        return speed;\n    }\n    public void setSpeed(int speed) {\n        this.speed = speed;\n    }\n    public int getDirect() {\n        return direct;\n    }\n    public void setDirect(int direct) {\n        this.direct = direct;\n    }\n    int x=0;\n    int y=0;\n    public int getX() {\n        return x;\n    }\n    public void setX(int x) {\n        this.x = x;\n    }\n    public int getY() {\n        return y;\n    }\n    public void setY(int y) {\n        this.y = y;\n    }\n    Tank(int x,int y){\n        this.x=x;\n        this.y=y;\n    }\n    public void moveUp(){\n        y-=speed;\n    }\n    public void moveRight(){\n        x+=speed;\n    }\n    public void moveDown(){\n        y+=speed;\n    }\n    public void moveLeft(){\n        x-=speed;\n    }\n}\n//我的坦克\nclass Hero extends Tank{\n    Hero(int x,int y){\n        super(x,y);\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "这是我写的18B20底层驱动，你可以参考一下。本来说QQ发给你整个工程的，却被管理员给删除了.....", "Konwledge_Point": "主程序", "Question": ["proteus 仿真 ds18b20 温度始终显示27.9 然后我的按钮也失灵，求能教我怎么做", ["我尝试了并行三个温度传感器  但是温度一直显示不对，然后试了下只编程一个 也是27.9不知道为什么  然后我自己做的按钮，编程好像也有点问题，求会做的教我，追加悬赏80", "\n\n", "/*******************************************", "\n函数名称：DS18B20_Reset", "\n功    能：对DS18B20进行复位初始化操作", "\n参    数：无", "\n返回值  ：初始化状态标志：0--失败，1--成功", "\n********************************************/", "\nuchar DS18B20_Reset(void)", "\n{", "\n    uchar Error=0;", "\n    P1DIR = 0xff;", "\n    _DINT();", "\n    P1OUT = 0x00;", "\n    DelayNus(500);", "\n    P1OUT = 0xff;", "\n    DelayNus(55);", "\n    P1DIR = 0x00;", "\n    _NOP();", "\n    if(P1IN == 0x00)", "\n    {", "\n        Error = 1;           //初始化成功", "\n    }", "\n    else", "\n    {", "\n        Error = 0;           //初始化失败", "\n    }", "\n    P1DIR = 0xff;            //设置为输出，并MCU给出高电平", "\n    P1OUT = 0xff;", "\n    _EINT();", "\n    DelayNus(400);", "\n    return Error;", "\n}", "\n\n", "//总线读取一个数据位", "\nuchar DS18B20_ReadDQ(void)", "\n{", "\nuchar DQ_S=0;", "\nP1OUT = 0x00; //8个DQ 线全部设置为低电平", "\nDelayNus(6);", "\nP1OUT = 0xff;", "\nDelayNus(8);", "\nP1DIR = 0x00; //准备读取", "\n_NOP();       //延时待总线准备好数据", "\nDQ_S = P1IN; //一次性读取8条DQ线的数据状态", "\nDelayNus(45);", "\nP1DIR = 0xff;", "\nP1OUT = 0xff; //恢复端口电平", "\nDelayNus(10); //延时", "\nreturn DQ_S; //返回读取的值", "\n\n", "}", "\n\n", "//写数据", "\nvoid DS18B20_WriteByte(uchar Com)", "\n{", "\n  uchar i;", "\n  _DINT(); ", "\n  for(i=0;i\n  {", "\n    P1DIR = 0xff;", "\n    P1OUT = 0x00;", "\n    DelayNus(6);", "\n    if (Com&0x01)", "\n    {", "\n      P1OUT = 0xff;", "\n    }", "\n    else", "\n    {", "\n      P1OUT = 0x00;", "\n    }", "\n    Com = Com>>1;", "\n    DelayNus(50);", "\n    P1OUT = 0xff;", "\n    DelayNus(10);", "\n  }", "\n  _EINT();", "\n}", "\n// 录入两位数据", "\nvoid DS18B20_Read2Byte(void)", "\n{", "\n  uint i;", "\n  for(i=0;i<16;i++)", "\n  {", "\n    Read_buf_8ch[i]=DS18B20_ReadDQ();", "\n  }", "\n}", "\n\n", "//启动温度转换", "\nvoid DS18B20_Conver(void)", "\n{", "\nDS18B20_WriteByte(0xcc); ", "\nDS18B20_WriteByte(0x44); ", "\n}", "\n\n", "//读取温度值", "\nvoid DS18B20_ReadTemp(void)", "\n{", "\n  uchar i;", "\n  char j,k;", "\n  uchar Mask;", "\n  do", "\n    {", "\n        i = DS18B20_Reset();", "\n    }", "\n  while(i);", "\n  DS18B20_Conver();", "\n  DelayNus(60000);", "\n  do", "\n    {", "\n        i = DS18B20_Reset();", "\n    }", "\n  while(i);", "\n  DS18B20_WriteByte(0xcc);", "\n  DS18B20_WriteByte(0xbe); ", "\n  DS18B20_Read2Byte();", "\n  for(j=16;j>0;j--)", "\n  {", "\n    Mask=0x01;", "\n    for(k=0;k<3;k++)", "\n    {", "\n      uiData[k] = uiData[k]<<1;", "\n      if(Read_buf_8ch[j-1]&Mask) uiData[k]++;", "\n      Mask = Mask<<1;", "\n    }", "\n  }", "\n}", "\n\n", "//将十一位二进制数转换成六位整形数据", "\n\n", "void Disp_Numb(uint temper)", "\n{", "\n    uchar i;", "\n    for(i = 0;i < 6;i++) dN[i] = 0; ", "\n\n", "if(temper & BIT0) \n{\n    dN[0] = 5;\n    dN[1] = 2;\n    dN[2] = 6;\n}\nif(temper&BIT1)     \n{\n    dN[1] += 5;\n    dN[2] += 2;\n    dN[3] += 1;\n}\nif(temper & BIT2)     \n{\n    dN[2] += 5;\n    dN[3] += 2;\n    if(dN[2] >= 10)\n    {\n        dN[2] -= 10;\n        dN[3] += 1;\n    }\n}\nif(temper&BIT3)     \n{\n    dN[3] += 5;\n}\nif(temper & BIT4)\n{\n    dN[4] += 1;\n}\nif(temper & BIT5)     \n{\n    dN[4] += 2;\n}\nif(temper & BIT6)\n{\n    dN[4] += 4;\n}\nif(temper & BIT7)     \n{\n    dN[4] += 8;\n    if(dN[4] >= 10)\n    {\n        dN[4] -= 10;\n        dN[5] += 1;\n    }\n}\nif(temper & BIT8)\n{\n    dN[4] += 6;\n    dN[5] += 1;\n    if(dN[4] >= 10)\n    {\n        dN[4] -= 10;\n        dN[5] += 1;\n    }\n}\nif(temper & BIT9)\n{\n    dN[4] += 2;\n    dN[5] += 3;\n    if(dN[4] >= 10)\n    {\n        dN[4] -= 10;\n        dN[5] += 1;\n    }\n}\nif(temper & BITA)\n{\n    dN[4] += 4;\n    dN[5] += 6;\n    if(dN[4] >= 10)\n    {\n        dN[4] -= 10;\n        dN[5] += 1;\n    }\n    if(dN[5] >= 10)\n    {\n        dN[5] -= 10;\n    }\n}\n", "\n\n", "}", "\n\n", "//显示当前温度", "\n\n", "void Disp_TEM(void)", "\n{", "\n    char  Bai,Shi,Ge;    //定义变量", "\n    Disp_Numb(Cur_TMP1);", "\n    Bai=dN[5];", "\n    Shi=dN[4];", "\n    Ge =dN[3];", "\n    Disp_EN(1,6,table1[Bai]);", "\n    Disp_EN(1,7,table1[Shi]);", "\n    Disp_EN(1,8,table1[11]);", "\n    Disp_EN(1,9,table1[Ge]);", "\n    DelayNus(100);", "\n    Disp_Numb(Cur_TMP2);", "\n    Bai=dN[5];", "\n    Shi=dN[4];", "\n    Ge =dN[3];", "\n    Disp_EN(2,6,table1[Bai]);", "\n    Disp_EN(2,7,table1[Shi]);", "\n    Disp_EN(2,8,table1[11]);", "\n    Disp_EN(2,9,table1[Ge]);", "\n    DelayNus(100);", "\n    Disp_Numb(Cur_TMP3);", "\n    Bai=dN[5];", "\n    Shi=dN[4];", "\n    Ge =dN[3];", "\n    Disp_EN(3,8,table1[Bai]);", "\n    Disp_EN(3,9,table1[Shi]);", "\n    Disp_EN(3,10,table1[11]);", "\n    Disp_EN(3,11,table1[Ge]);", "\n    DelayNus(100);", "\n}", "\n\n", "//按键检测", "\n\n", "uchar Keyscan()", "\n{", "\n    uchar temp,key;", "\n    P2DIR=0x00;", "\n    temp=P2IN;", "\n    if (temp==0x01)", "\n    {", "\n           DelayNus(10);", "\n          if (temp==0x01) key=1;", "\n    }", "\n    if (temp==0x02)", "\n    {", "\n           DelayNus(10);", "\n           if (temp==0x02) key=2;", "\n    }", "\n    if (temp==0x04)", "\n    {", "\n           DelayNus(10);", "\n           if (temp==0x03) key=3;", "\n    }", "\n    else", "\n    {", "\n            DelayNus(10);", "\n    }", "\n    return key;", "\n}", "\n\n", "//主程序", "\n int main(void)", "\n{", "\n    WDTCTL=WDTPW+WDTHOLD;", "\n\n", "BCSCTL1 &= ~XT2OFF;                            \n_EINT();//打开全局中断\nTACTL |= TASSEL_2 + ID_3;   \nIni_Lcd();             \n\nwhile(1)\n{\n    GDWZ();\n    DS18B20_ReadTemp();\n    Cur_TMP1=uiData[0];\n    Cur_TMP2=uiData[1]; \n    Cur_TMP3=uiData[2];\n    Disp_TEM();\nkey_number=Keyscan();\nif (key_number==1)\n{\n    if(Cur_TMP1<=10)\n    {\n                    P3DIR = 0x05;\n                    P3OUT = BIT0+BIT2;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[10]);\n\n    }\n    if(Cur_TMP1>10&&Cur_TMP1<20)\n    {\n                    P3DIR = 0x01;\n                    P3OUT = BIT0;\n        Disp_HZ(4,4,table2[11]);\n        Disp_HZ(4,5,table2[12]);\n    }\n    else\n    {\n                    P3DIR = 0x03;\n                    P3OUT = BIT0+BIT1;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[9]);\n    }\n}\nif(key_number==2)\n{\n    if(Cur_TMP1<=20)\n    {\n                    P3DIR = 0x05;\n                    P3OUT = BIT0+BIT2;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[10]);\n    }\n    if(Cur_TMP1>20&&Cur_TMP1<30)\n    {\n                    P3DIR = 0x01;\n                    P3OUT = BIT0;\n        Disp_HZ(4,4,table2[11]);\n        Disp_HZ(4,5,table2[12]);\n    }\n    else\n    {\n                    P3DIR = 0x03;\n                    P3OUT = BIT0+BIT1;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[9]);\n    }\n}\nif (key_number==3)\n{\n    if(Cur_TMP1<=30)\n    {\n                    P3DIR = 0x05;\n                    P3OUT = BIT0+BIT2;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[10]);\n    }\n    if(Cur_TMP1>30&&Cur_TMP1<40)\n    {\n                    P3DIR = 0x01;\n                    P3OUT = BIT0;\n        Disp_HZ(4,4,table2[11]);\n        Disp_HZ(4,5,table2[12]);\n    }\n    else\n    {\n                    P3DIR = 0x03;\n                    P3OUT = BIT0+BIT1;\n        Disp_HZ(4,4,table2[8]);\n        Disp_HZ(4,5,table2[9]);\n    }\n}\nelse\n    {\n             P3DIR = 0x01;\n             P3OUT = BIT0;\n             Disp_HZ(4,4,table2[11]);\n         Disp_HZ(4,5,table2[12]);\n    }\n    Delay_Nms(1000);\n    Clear_LCD();\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "在VC++中，没有random()和randomize()函数，只有rand()和srand()函数。", "Konwledge_Point": "主程序", "Question": ["C语言中random和time函数的问题", ["color=#FFFF00][color=#FFCC00]C语言中的一个数据查找的实验", "\n程序可以编译通过，但是连接的时候就会出bug，小白表示不知道怎么改了，请大神赐教", "\n附连接时代码：[/color]", "\n--------------------Configuration: schtb - Win32 Debug--------------------", "\nLinking...", "\nschtb.obj : error LNK2001: unresolved external symbol \"int __cdecl random(int)\" (?random@@YAHH@Z)", "\nschtb.obj : error LNK2001: unresolved external symbol \"int __cdecl random(int)\" (?random@@YAHH@Z)", "\nschtb.obj : error LNK2001: unresolved external symbol \"int __cdecl random(int)\" (?random@@YAHH@Z)", "\nnafxcwd.lib(thrdcore.obj) : error LNK2001: unresolved external symbol __endthreadex", "\nnafxcwd.lib(thrdcore.obj) : error LNK2001: unresolved external symbol __beginthreadex", "\nDebug/schtb.exe : fatal error LNK1120: 3 unresolved externals", "\n执行 link.exe 时出错.", "\n\n", "schtb.cpp中的代码", "\n\n", "#include ", "\n#include ", "\n#include ", "\n#include \"schtb.h\"", "\n//创建查找表操作", "\nvoid CreatSchTb(SeqList R)", "\n{", "\n   int i ;", "\n   int random(int sum);", "\n   //randomize() ;", "\n   srand(n) ; //以相同的种子值，初始化随机数发生器", "\n   for(i=1; i<=n; i++)", "\n      R[i].key = random(n*10) ;//产生随机数", "\n}", "\n//排序查找表，采用简单选择排序", "\nvoid SortSchTb(SeqList R)", "\n{", "\n   int i, j, k ;", "\n   for(i=1; i\n      k = i ;", "\n      for(j=i+1; j\n if (R[k].key>R[j].key) k = j ;", "\n      if (k!=i) {", "\n R[0] = R[i] ;", "\n R[i] = R[k] ;", "\n R[k] = R[0] ;", "\n      }", "\n   }", "\n}", "\n//顺序查找操作", "\nint SeqSearch(SeqList R, KeyType K)", "\n{", "\n   int i ;", "\n   R[0].key = K ;", "\n   for(i=n; R[i].key!=K; i--) ;", "\n   return i ;", "\n}", "\n//折半查找操作", "\nint BinSearch(SeqList R, KeyType K)", "\n{", "\n   int low = 1, high = n, mid ;", "\n   while(low <= high) {", "\n      mid= (low + high) / 2 ;", "\n      if (R[mid].key < K) low = mid + 1 ;", "\n      else if (R[mid].key == K) return mid ;", "\n      else high = mid - 1 ;", "\n   }", "\n   return 0 ;", "\n}", "\n//输出查找表数据", "\nvoid PrtSchTb(SeqList R)", "\n{", "\n   int i ;", "\n   for (i=1; i<=n; i++)", "\n      printf(\"%4d\", R[i].key) ;", "\n   printf(\"\\n\") ;", "\n}", "\n\n", "//二叉排序树的插入操作", "\nvoid InsertBST(BSTree *BT, KeyType key)", "\n{", "\n   BSTNode *f, *p = *BT ;//f指向要插入的双亲结点", "\n   while(p) {", "\n      if (p->key == key) return ; //有相同关键字，不插入", "\n      f = p ;", "\n      p = (keykey) ? p->lchild : p->rchild ;", "\n   }", "\n   p = (BSTNode *)malloc(sizeof(BSTNode)) ;", "\n   p->key = key ;", "\n   p->lchild = p->rchild = NULL ;", "\n   if (*BT == NULL)  *BT = p ; //如果二叉排序树为空，则为根结点", "\n   else", "\n      if (keykey) f->lchild = p ;", "\n      else f->rchild = p ;", "\n}", "\n//创建二叉排序树操作", "\nvoid CreatBST(BSTree *TP)", "\n{", "\n   int random(int sum);", "\n   int i ;", "\n   *TP = NULL ;", "\n   srand(n) ;", "\n   for (i=1; i<=n; i++)", "\n      InsertBST(TP, random(n*10)) ;", "\n}", "\n//二叉排序树的查找操作", "\nBSTNode *SearchBST(BSTree BT, KeyType key )", "\n{", "\n   if (BT==NULL||BT->key==key) return BT ;", "\n   if (BT->key>key) return SearchBST(BT->lchild, key) ;", "\n   else return SearchBST(BT->rchild, key) ;", "\n}", "\n//输出二叉排序树结点的值操作，以中序遍历输出", "\nvoid PrtBST(BSTree BT)", "\n{", "\n   if (BT) {", "\n      PrtBST(BT->lchild) ;", "\n      printf(\"%4d\", BT->key) ;", "\n      PrtBST(BT->rchild) ;", "\n   }", "\n}", "\n//取得当前系统时间操作", "\ndouble GetTime(void)", "\n{", "\ndouble T;", "\nCTime t = CTime::GetCurrentTime();", "\n    int h=t.GetHour(); //获取当前为几时", "\n    int mm=t.GetMinute(); //获取当前分钟", "\n    int s=t.GetSecond(); //获取当前秒", "\n    int w=t.GetDayOfWeek(); //获取星期几，注意1为星期天，7为星期六", "\ndouble hund=s/100;", "\n   //struct time;", "\n   //struct t;", "\n   //gettime(&t);", "\n   T = ((h*60+mm)*60+s)*100+hund ;", "\n   return 0 ;", "\n}", "\n\n", "//主程序", "\nvoid main(void)", "\n{", "\n   SeqList SR, BR ;", "\n   BSTree BT ;", "\n   KeyType k[m] ;", "\n   int i ;", "\n   double t1, t2 ;", "\n   int random(int sum);", "\n\n", "//randomize() ; 该用法在VC环境下不能使用，需要使用下面的用法", "\n   srand(time(0));", "\n   //产生待查找的数据", "\n   for(i=0; i<m; i++)", "\n      k[i] = random(n*10) ;", "\n   //顺序查找算法", "\n   printf(\"顺序查找算法的时间为：\\n\") ;", "\n   CreatSchTb(SR) ;", "\n   t1 = GetTime() ;", "\n   for(i=0; i<m; i++)", "\n      SeqSearch(SR, k[i]) ;", "\n   t2 = GetTime() ;", "\n   printf(\"%d毫秒\\n\", (int)(t2-t1)) ;", "\n   //折半查找算法", "\n   printf(\"顺序查找算法的时间为：\\n\") ;", "\n   CreatSchTb(BR) ;", "\n   SortSchTb(BR) ;", "\n   t1 = GetTime() ;", "\n   for(i=0; i<m; i++)", "\n      BinSearch(BR, k[i]) ;", "\n   t2 = GetTime() ;", "\n   printf(\"%d毫秒\\n\", (int)(t2-t1)) ;", "\n   //二叉排序树查找算法", "\n   printf(\"二叉排序树查找算法的时间为：\\n\") ;", "\n   CreatBST(&BT) ;", "\n   t1 = GetTime() ;", "\n   for(i=0; i<m; i++)", "\n      SearchBST(BT, k[i]) ;", "\n   t2 = GetTime() ;", "\n   printf(\"%d毫秒\\n\", (int)(t2-t1)) ;", "\n   //PrtBST(BT) ;", "\n}", "\n\n", "schtb.h中的代码", "\n//以下是schtb.h的头文件内容。", "\n//以下用于顺序查找和折半查找", "\n#define n 1000 //定义查找表长度", "\n#define m 500  //定义待查找数据个数", "\ntypedef int KeyType ; //定义关键字类型", "\ntypedef struct node {  //定义查找结点结构", "\n   KeyType key ;", "\n   //如果查找表的结点包含其它信息，在此加入", "\n   //InfoType otherinfo ;", "\n} NodeType ;", "\ntypedef NodeType SeqList[n+1] ;//定义查找表，含有监视哨", "\n\n", "//以下用于二叉排序树的查找", "\ntypedef struct treenode { //定义二叉排序树结点", "\n   KeyType key ;", "\n   //InfoType otherinfo ; //结点的其它信息", "\n   //二叉链表结点的左右孩子指针", "\n   struct treenode *lchild, *rchild ;", "\n} BSTNode ;", "\ntypedef BSTNode *BSTree ; //定义二叉排序树"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;242行  scanf(&amp;#34;%d\\n&amp;#34;,&amp;amp;elect); 中的 \\n删除掉。这会要求你输入1或2后&amp;#xff0c;回车两次才能输出“请输入学生学号或姓名”提示信息&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["学生成绩管理系统，入录学生信息之后，进行学号或姓名查询时，输入完1或2，并未跳转到“请输入学生学号或姓名”，但是直接输入姓名或学号可以得到学生信息，如何改错呢？", ["\n", "#include<stdio.h>", "\n", "#include<stdlib.h>", "\n", "#include<string.h>", "\nstruct Student{   ", "//", "每个学生对应一个结构体 \n char ID[", "20", "];", "//", "学号 \n char Name[", "10", "];", "//", "姓名 \n float Mark1;", "//", "语文成绩 \n float Mark2;", "//", "数学成绩 \n float Mark3;", "//", "英语成绩 \n float Mark4;", "//", "计算机成绩 \n float All; ", "//", "总分 \n float Average;", "//", "平均成绩 \n}students[", "1000", "];\n", "int", " num=", "0", "; ", "//", "计数器\nvoid Copy(struct Student *arr,", "int", " i,", "int", " j)\n{\n strcpy(arr[i].ID,arr[j].ID);\n strcpy(arr[i].Name,arr[j].Name);\n arr[i].Mark1 = arr[j].Mark1;\n arr[i].Mark2 = arr[j].Mark2;\n arr[i].Mark3 = arr[j].Mark3;\n arr[i].Mark4 = arr[j].Mark4;\n arr[i].All = arr[j].All;\n arr[i].Average = arr[j].Average;\n}\n", "int", " Student_SearchByName(char name[])//通过姓名来检索学生\n{\n     ", "int", " i;\n     ", "for", " (i=", "0", ";i<num;i++)\n     {\n         ", "if", " (strcmp(students[i].Name,name)==", "0", ")  //通过strcmp函数来对比学生姓名，找到返回在数组的位置 \n         {\n              ", "return", " i;\n       }\n     }\n     ", "return", " -", "1", ";    ", "//", "未找到返回 -", "1", " \n}\n", "int", " Student_SearchByIndex(char id[])//通过学号来检索学生信息\n{\n     ", "int", " i;\n     ", "for", " (i=", "0", ";i<num;i++)\n     {\n         ", "if", " (strcmp(students[i].ID,id)==", "0", ")  //通过strcmp函数来对比学生id，找到返回位置 \n         {\n              ", "return", " i;\n         }  \n     }\n     ", "return", " -", "1", ";   ", "//", "未找到返回 -", "1", " \n}\nvoid Student_DisplaySingle(", "int", " ", "index", ")//输出表头\n{\n     ", "printf", "(", "\"%10s%10s%8s%8s%8s%10s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"语文\"", ",", "\"数学\"", ",", "\"英语\"", ",", "\"计算机\"", ",", "\"总成绩\"", ",", "\"平均成绩\"", ");\n     ", "printf", "(", "\"-------------------------------------------------------------\\n\"", ");\n     ", "printf", "(", "\"%10s%10s%8.2f%8.2f%8.2f%8.2f\\n\"", ",students[", "index", "].ID,students[", "index", "].Name,\n              students[", "index", "].Mark1,students[", "index", "].Mark2,students[", "index", "].Mark3,students[", "index", "].Mark4);\n}\nvoid inputt()//利用循环录入学生信息\n{\n     ", "while", "(", "1", ")\n     {\n         ", "printf", "(", "\"请输入学号:\"", ");\n         scanf(", "\"%s\"", ",&students[num].ID);\n         getchar();\n         ", "printf", "(", "\"请输入姓名:\"", ");\n         scanf(", "\"%s\"", ",&students[num].Name);\n         getchar();\n         ", "printf", "(", "\"请输入成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[num].Mark1);\n         getchar();\n         ", "printf", "(", "\"请输入成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[num].Mark2);\n         getchar();\n         ", "printf", "(", "\"请输入成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[num].Mark3);\n         getchar();\n         ", "printf", "(", "\"请输入成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[num].Mark4);   ", "//", "依次输入各项数据 \n         getchar();\n         ", "if", "(Student_SearchByIndex(students[num].ID) ==-", "1", ")//修改的位置", "000000", " \n         {\n          num++;  ", "//", "移向下一个位置 \n   }\n   ", "else", "\n   {\n    ", "printf", "(", "\"学号重复，输入数据无效 !!!\\n\"", ");\n   }\n   \n    ", "printf", "(", "\"是否继续?(y/n)\"", ");\n         ", "if", " (getchar()==", "'n'", ")\n         {\n              ", "break", ";\n         }\n     }\n}\nvoid modify()//修改成绩\n{\n   ", "while", "(", "1", ")\n     {\n         char id[", "20", "];\n         ", "int", " ", "index", ";\n         ", "printf", "(", "\"请输入要修改的学生的学号:\"", ");\n         scanf(", "\"%s\"", ",&id);\n         getchar();\n         ", "index", "=Student_SearchByIndex(id);  ", "//", "调用搜查id函数，根据其返回值确定位置 \n         ", "if", " (", "index", "==-", "1", ")\n         {\n              ", "printf", "(", "\"学生不存在!\\n\"", ");\n         }\n         ", "else", "\n         {\n              ", "printf", "(", "\"你要修改的学生信息为:\\n\"", ");\n              Student_DisplaySingle(", "index", ");\n              ", "printf", "(", "\"-- 请输入新值--\\n\"", ");\n              ", "printf", "(", "\"请输入学号:\"", ");\n              scanf(", "\"%s\"", ",&students[", "index", "].ID);\n              getchar();\n              ", "printf", "(", "\"请输入姓名:\"", ");\n              scanf(", "\"%s\"", ",&students[", "index", "].Name);\n              getchar();\n              ", "printf", "(", "\"请输入语文成绩:\"", ");\n              scanf(", "\"%f\"", ",&students[", "index", "].Mark1);\n      getchar();\n              ", "printf", "(", "\"请输入数学成绩:\"", ");\n              scanf(", "\"%f\"", ",&students[", "index", "].Mark2);\n              getchar();\n              ", "printf", "(", "\"请输入英语成绩:\"", ");\n              scanf(", "\"%f\"", ",&students[", "index", "].Mark3);\n              getchar();\n              ", "printf", "(", "\"请输入计算机成绩:\"", ");\n              scanf(", "\"%f\"", ",&students[", "index", "].Mark4);  ", "//", "重新录入一套新的数据替代 \n              getchar();\n              students[", "index", "].All=students[", "index", "].Mark1+students[", "index", "].Mark2+students[", "index", "].Mark3+students[", "index", "].Mark4;\n           students[", "index", "].Average=(students[", "index", "].Mark1+students[", "index", "].Mark2+students[", "index", "].Mark3+students[", "index", "].Mark4)/", "4", ";   \n         }\n         ", "printf", "(", "\"是否继续?(y/n)\"", ");\n         ", "if", " (getchar()==", "'n'", ")\n         {\n              ", "break", ";\n         }\n     }\n}\nvoid deletee()//删除学生信息\n{\n   ", "int", " i;\n     ", "while", "(", "1", ")\n     {\n         char id[", "20", "];\n         ", "int", " ", "index", ";\n         ", "printf", "(", "\"请输入要删除的学生的学号:\"", ");\n         scanf(", "\"%s\"", ",&id);\n         getchar();\n         ", "index", "=Student_SearchByIndex(id);   ", "//", "调用搜查id函数，根据其返回值确定位置 \n         ", "if", " (", "index", "==-", "1", ")\n         {\n              ", "printf", "(", "\"学生不存在!\\n\"", ");\n         }\n         ", "else", "\n         {\n              ", "printf", "(", "\"你要删除的学生信息为:\\n\"", ");\n              Student_DisplaySingle(", "index", ");\n              ", "printf", "(", "\"是否真的要删除?(y/n)\"", ");\n              ", "if", " (getchar()==", "'y'", ")\n              {\n                   ", "for", " (i=", "index", ";i<num-", "1", ";i++)\n                   {\n                       Copy(students,i,i+", "1", ");\n                       ", "//s", "tudents[i]=students[i+", "1", "];    ", "//", "把后边的对象都向前移动\n                   }\n                   num--;\n              }\n             getchar();\n         }\n         ", "printf", "(", "\"是否继续?(y/n)\"", ");\n         ", "if", " (getchar()==", "'n'", ")\n         {\n              ", "break", ";\n         }\n     }\n}\nvoid display()//打印已录入的学生信息\n{\n  ", "int", " a;\n     ", "printf", "(", "\"%10s%10s%8s%8s%8s%8s%10s%10s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"语文\"", ",", "\"数学\"", ",", "\"英语\"", ",", "\"计算机\"", ",", "\"总成绩\"", ",", "\"平均成绩\"", ");\n     ", "printf", "(", "\"-------------------------------------------------------------\\n\"", ");\n     ", "for", " (a=", "0", ";a<num;a++)\n     {\n         ", "printf", "(", "\"%10s%10s%8.2f%8.2f%8.2f%8.2f%10.2f%10.2f\\n\"", ",students[a].ID,students[a].Name,\n              students[a].Mark1,students[a].Mark2,students[a].Mark3,students[a].Mark4,students[a].All,students[a].Average);\n     }\n}\nvoid insert()//指定位置插入学生信息\n{\n  ", "int", " a,b,c;\n  ", "printf", "(", "\"请输入你要插入的位置\"", ");\n  scanf(", "\"%d\"", ",&a);\n  ", "if", "(a>num) {\n  ", "printf", "(", "\"输入的位置有误，请重新输入,当前共%d条数据\\n\"", ",num); \n  scanf(", "\"%d\"", ",&a);}\n \n      b=num-", "1", ";\n      ", "for", "(;b>=a-", "1", ";b--)\n      {\n       ", "//s", "trcpy(students[b+", "1", "].ID,students[b].ID);\n       ", "//s", "trcpy(students[b+", "1", "].Name,students[b].Name);\n       ", "//s", "tudents[b+", "1", "].Mark1=students[b].Mark1;\n       ", "//s", "tudents[b+", "1", "].Mark2=students[b].Mark2;\n       ", "//s", "tudents[b+", "1", "].Mark3=students[b].Mark3;\n       ", "//s", "tudents[b+", "1", "].Mark4=students[b].Mark4;\n       ", "//s", "tudents[b+", "1", "].All=students[b].All;\n       ", "//s", "tudents[b+", "1", "].Average=students[b].Average;  \n   Copy(students,b+", "1", ",b); ", "//", "根据其输入的位置，将其及以后的数据向后移动一个位置 \n       \n   }\n   num++;\n         ", "printf", "(", "\"请输入学号:\"", ");\n         scanf(", "\"%s\"", ",&students[a-", "1", "].ID);\n         getchar();\n         ", "printf", "(", "\"请输入姓名:\"", ");\n         scanf(", "\"%s\"", ",&students[a-", "1", "].Name);\n         getchar();\n         ", "printf", "(", "\"请输入语文成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[a-", "1", "].Mark1);\n         getchar();\n         ", "printf", "(", "\"请输入数学成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[a-", "1", "].Mark2);\n         getchar();\n         ", "printf", "(", "\"请输入英语成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[a-", "1", "].Mark3);\n         getchar();\n         ", "printf", "(", "\"请输入计算机成绩:\"", ");\n         scanf(", "\"%f\"", ",&students[a-", "1", "].Mark4);  ", "//", "输入新数据 \n         getchar();  \n         students[a-", "1", "].All=students[a-", "1", "].Mark1+students[a-", "1", "].Mark2+students[a-", "1", "].Mark3+students[a-", "1", "].Mark4;\n         students[a-", "1", "].Average=(students[a-", "1", "].Mark1+students[a-", "1", "].Mark2+students[a-", "1", "].Mark3+students[a-", "1", "].Mark4)/", "4", ";\n \n}\nvoid search()//查询学生信息\n{\n    ", "int", " elect=", "0", ";\n    ", "printf", "(", "\"输入1姓名查询，输入2学号查询\\n\"", ");\n    scanf(", "\"%d\\n\"", ",&elect);\n    ", "if", "(elect==", "1", "){\n    \n  ", "while", "(", "1", ")\n     {\n         char name[", "20", "];\n         ", "int", " ", "index", ";\n         ", "printf", "(", "\"请输入要查询的学生的姓名:\"", ");\n         scanf(", "\"%s\"", ",&name);\n         getchar();\n         ", "index", "=Student_SearchByName(name);   ", "//", "调用搜查name函数，根据其返回值确定位置 \n         ", "if", " (", "index", "==-", "1", ")\n         {\n              ", "printf", "(", "\"学生不存在!\\n\"", ");\n         }\n         ", "else", "\n         {\n              ", "printf", "(", "\"你要查询的学生信息为:\\n\"", ");\n              Student_DisplaySingle(", "index", ");\n         }\n         ", "printf", "(", "\"是否继续?(y/n)\"", ");\n         ", "if", " (getchar()==", "'n'", ")\n         {\n              ", "break", ";\n         }\n     }\n}\n    ", "else", "\n {\n  ", "while", "(", "1", ")\n     {\n         char id[", "20", "];\n         ", "int", " ", "index", ";\n         ", "printf", "(", "\"请输入要查询的学生的学号:\"", ");\n         scanf(", "\"%s\"", ",&id);\n         getchar();\n         ", "index", "=Student_SearchByIndex(id);   ", "//", "调用搜查id函数，根据其返回值确定位置 \n         ", "if", " (", "index", "==-", "1", ")\n         {\n              ", "printf", "(", "\"学生不存在!\\n\"", ");\n         }\n         ", "else", "\n         {\n              ", "printf", "(", "\"你要查询的学生信息为:\\n\"", ");\n              Student_DisplaySingle(", "index", ");\n         }\n         ", "printf", "(", "\"是否继续?(y/n)\"", ");\n         ", "if", " (getchar()==", "'n'", ")\n         {\n              ", "break", ";\n         }\n     }\n }\n} \nvoid ", "sort", "()//根据平均分排序\n{\n  ", "int", " i,j;\n  ", "//s", "truct students tmp;\n     ", "for", " (i=", "0", ";i<num;i++)\n     {\n      students[i].Average=(students[i].Mark1+students[i].Mark2+students[i].Mark3+students[i].Mark4)/", "4", ";\n     }\n     ", "for", " (i=", "0", ";i<num;i++)\n     {\n         ", "for", " (j=", "1", ";j<num-i;j++)\n         {\n              ", "if", " (students[j-", "1", "].Average<students[j].Average)\n              {\n                  \n       Copy(students,num,j-", "1", ");\n       Copy(students,j-", "1", ",j);\n       Copy(students,j,num); \n       ", "//", "tmp=students[j-", "1", "];\n                   ", "//s", "tudents[j-", "1", "]=students[j];\n                   ", "//s", "tudents[j]=tmp;      ", "//", "冒泡排序 \n            }  \n         }\n     }\n     ", "int", " a;\n     ", "printf", "(", "\"%10s%10s%8s%8s%8s%10s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"语文\"", ",", "\"数学\"", ",", "\"英语\"", ",", "\"计算机\"", ",", "\"总成绩\"", ",", "\"平均成绩\"", ");\n     ", "printf", "(", "\"-------------------------------------------------------------\\n\"", ");\n     ", "for", " (a=", "0", ";a<num;a++)\n     {\n         ", "printf", "(", "\"%10s%10s%8.2f%8.2f%8.2f%8.2f%10.2f%10.2f\\n\"", ",students[a].ID,students[a].Name,\n              students[a].Mark1,students[a].Mark2,students[a].Mark3,students[a].Mark4,students[a].All,students[a].Average);\n     }\n} \n \n \nvoid SearchLow()//搜索不及格的并输出 \n{\n ", "int", " a;\n ", "printf", "(", "\"           语文不及格的有%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"语文\"", "); \n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark1<", "60", ")\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark1);    ", "//", "从头搜索到尾，若小于", "60", "就输出 \n  } \n  \n ", "printf", "(", "\"           数学不及格的有%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"数学\"", "); \n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark2<", "60", ")\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark2);\n  } \n  \n  ", "printf", "(", "\"           英语不及格的有%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"英语\"", ");\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark3<", "60", ")\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark3);\n  } \n  \n  ", "printf", "(", "\"           计算机不及格的有%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"计算机\"", ");\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark4<", "60", ")\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark4);\n  } \n  ", "system", "(", "\"pause\"", ");\n}\n \nvoid SearchHigh()//搜索成绩最高者输出 \n{\n ", "int", " a;\n ", "int", " max ;\n ", "printf", "(", "\"           语文最高分为%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"语文\"", "); \n max=students[", "0", "].Mark1;\n ", "for", "(a=", "1", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark1>max)\n  max=students[a].Mark1;\n }\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(max==students[a].Mark1)\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark1);\n }\n \n ", "printf", "(", "\"           数学最高分为%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"数学\"", "); \n max=students[", "0", "].Mark2;\n ", "for", "(a=", "1", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark2>max)\n  max=students[a].Mark2;\n }\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(max==students[a].Mark2)\n  ", "printf", "(", "\"%10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark2);\n }\n \n ", "printf", "(", "\"           英语最高分为%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"英语\"", "); \n max=students[", "0", "].Mark3;\n ", "for", "(a=", "1", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark3>max)\n  max=students[a].Mark3;\n }\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(max==students[a].Mark3)\n  ", "printf", "(", "\"           %10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark3);\n }\n \n ", "printf", "(", "\"           计算机最高分为%10s%10s%8s\\n\"", ",", "\"学号\"", ",", "\"姓名\"", ",", "\"计算机\"", "); \n max=students[", "0", "].Mark4;\n ", "for", "(a=", "1", ";a<num;a++)\n { \n  ", "if", "(students[a].Mark4>max)\n  max=students[a].Mark4;\n }\n ", "for", "(a=", "0", ";a<num;a++)\n { \n  ", "if", "(max==students[a].Mark4)\n  ", "printf", "(", "\"           %10s%10s%8.2f\\n\"", ",students[a].Name,students[a].ID,students[a].Mark4);\n }\n  ", "system", "(", "\"pause\"", ");\n}\nvoid Save()\n{\n FILE*fp = fopen(", "\"temp.txt\"", ",", "\"w+\"", ");\n fprintf(fp,", "\"%d\\n\"", ",num);\n ", "for", "(", "int", " i = ", "0", " ; i< num ;i++)\n {\n  fprintf(fp,", "\"%s %s %f %f %f %f %f %f\\n\"", ",students[i].ID,students[i].Name,students[i].Mark1,students[i].Mark2,students[i].Mark3,students[i].Mark4,students[i].All,students[i].Average);\n }\n fclose(fp);\n}\nvoid Load()\n{\n FILE*fp = fopen(", "\"temp.txt\"", ",", "\"r\"", ");\n fscanf(fp,", "\"%d\"", ",&num);\n ", "for", "(", "int", " i = ", "0", " ; i< num ;i++)\n {\n  fscanf(fp,", "\"%s %s %f %f %f %f %f %f\\n\"", ",students[i].ID,students[i].Name,&students[i].Mark1,&students[i].Mark2,&students[i].Mark3,&students[i].Mark4,&students[i].All,&students[i].Average);\n }\n fclose(fp);\n} \n//主程序 \n", "int", " main(){\n ", "int", " i;\n ", "while", "(", "1", "){\n   Load();", "//", "避免代码重复 \n   ", "printf", "(", "\"\\t\\t\\t\\t\\t-------- 学生成绩管理系统-------\\n\\n\\n\\n\"", ");     ", "//", "菜单 \n         ", "printf", "(", "\"\\t\\t\\t\\t\\t1. 输入学生成绩\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t2. 修改学生记录\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t3. 删除学生记录\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t4. 插入学生记录\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t5. 显示所有记录\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t6. 查询学生记录\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t7. 按平均成绩排序\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t8. 输出各科目不及格学生\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t9. 输出各科目最高分\\n\\n\"", ");\n         ", "printf", "(", "\"\\t\\t\\t\\t\\t0. 退出\\n\\n\\n\"", ");\n         ", "printf", "(", "\"请选择(0-9):\"", ");\n    scanf(", "\"%d\"", ",&i);\n   switch(i){\n   case ", "1", ":inputt();", "break", ";\n   case ", "2", ":modify();", "break", ";\n    case ", "3", ":deletee();", "break", ";\n    case ", "4", ":insert();", "break", ";\n    case ", "5", ":display();", "break", ";\n   case ", "6", ":search();", "break", ";\n   case ", "7", ":", "sort", "();", "break", ";\n   case ", "8", ":SearchLow();", "break", ";\n   case ", "9", ":SearchHigh();", "break", ";\n   case ", "0", ":", "exit", "(", "0", ");\n   default:  ;\n }\n}\n  ", "return", " ", "0", "; \n} \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;pg.clock.schedule_interval(self.steve.lmove, 1/60, )&lt;br /&gt;这是啥代码&amp;#xff0c;你按下A键&amp;#xff0c;就创建个clock一直往左边走吗&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Python pyglet精灵一直动", ["问题遇到的现象和发生背景", "\n", "我想要用python+pyglet编写一个二维《Minecraft》，目前刚刚添加Steve，能动，不能操作方块", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "当我按D的时候，Steve一直向右移动，即使松开也如此，再按A会逐渐减慢，停止。向左移动也如此。", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "主程序 XyCraft.py", "\n", "import", " pyglet ", "as", " pg\n", "from", " random ", "import", " random\n", "from", " block ", "import", " Block, blocks\n", "from", " steve ", "import", " Steve\n\n\n", "class", " ", "XyCraft", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        self.win = pg.window.Window(\n            width=", "768", ",\n            height=", "512", "\n        )\n        self.steve = Steve()\n        self.world_blocks = [  ", "# 方块列表", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=0", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=1", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=2", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=3", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=4", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=5", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=6", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=7", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=8", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=9", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=10", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=11", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=12", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=13", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=14", "\n            [_ ", "for", " _ ", "in", " ", "range", "(", "24", ")],  ", "# y=15", "\n        ]  ", "# 这些奇怪的循环是占位符", "\n\n        ", "# 加载资源", "\n        pg.resource.path = [", "r'.\\res'", "]\n        pg.resource.reindex()\n        self.sky = pg.resource.image(", "r\"sky.png\"", ")\n\n        self.create_world()\n\n", "        @self.win.event", "\n        ", "def", " ", "on_draw", "():\n            self.win.clear()\n            self.sky.blit(", "0", ", ", "0", ")\n            ", "for", " block ", "in", " blocks:\n                block.draw()\n            self.steve.draw()\n\n\n", "        @self.win.event", "\n        ", "def", " ", "on_key_press", "(", "symbol, modifiers", "):\n            self.on_key_press(symbol, modifiers)\n\n", "        @self.win.event", "\n        ", "def", " ", "on_text", "(", "text", "):\n            self.on_text(text)\n\n    ", "def", " ", "create_world", "(", "self", "):\n        ", "# 地形生成", "\n\n        ", "# 地下基层岩石生成", "\n        ", "for", " y ", "in", " ", "range", "(", "6", "):\n            ", "for", " x ", "in", " ", "range", "(", "24", "):\n                self.world_blocks[y][x] = Block(x, y, ", "'stone'", ", self.win)\n\n        ", "# 地表地形生成", "\n        ", "for", " y ", "in", " ", "range", "(", "6", ", ", "14", "):\n            ", "for", " x ", "in", " ", "range", "(", "24", "):\n                ", "if", " ", "not", " self.create_grass(x, y):\n                    self.create_stone(x, y)\n\n    ", "def", " ", "create_grass", "(", "self, x, y", "):\n        ", "# 生成草块", "\n        is_grass_probability = y / ", "25", "  ", "# 是草块的概率随着高度增加而增加", "\n        ", "try", ":\n            ", "if", " self.is_air(x + ", "1", ", y):\n                is_grass_probability += ", "1", " / ", "15", "\n            ", "if", " self.is_air(x + ", "1", ", y):\n                is_grass_probability += ", "1", " / ", "15", "\n                ", "if", " self.is_air(x + ", "1", ", y):\n                    is_grass_probability += ", "1", " / ", "15", "\n        ", "except", " IndexError:\n            ...\n\n        ", "if", " (", "isinstance", "(\n                self.world_blocks[y - ", "1", "][x], ", "type", "(", "0", "))):  ", "# 如果它的下面是空气", "\n            is_grass_probability = ", "0", "  ", "# 概率为0", "\n        ", "elif", " (self.world_blocks[y - ", "1", "][x].name == ", "'grass'", "):  ", "# 如果它的下面是草块", "\n            is_grass_probability /= ", "10", "  ", "# 则概率除以10", "\n\n        ", "if", " random() < is_grass_probability:\n            self.world_blocks[y][x] = Block(x, y, ", "'grass'", ", self.win)\n            ", "return", " ", "True", "\n        ", "else", ":\n            ", "return", " ", "False", "\n\n    ", "def", " ", "create_stone", "(", "self, x, y", "):\n        is_grass_probability = ", "10", " / y  ", "# 是除特殊情况，永远是石头：", "\n        ", "if", " (", "isinstance", "(\n                self.world_blocks[y - ", "1", "][x], ", "type", "(", "0", "))):  ", "# 如果它的下面是空气", "\n            is_grass_probability = ", "0", "  ", "# 概率为0", "\n        ", "elif", " (self.world_blocks[y - ", "1", "][x].name == ", "'grass'", "):  ", "# 如果它的下面是草块", "\n            is_grass_probability = ", "0", "  ", "# 概率为0", "\n        ", "if", " (random() < is_grass_probability):\n            self.world_blocks[y][x] = Block(\n                x, y, ", "'stone'", ", self.win)\n\n    ", "def", " ", "is_air", "(", "self, x, y", "):\n        ", "return", " ", "isinstance", "(self.world_blocks[y][x], ", "type", "(", "0", "))\n\n    ", "def", " ", "on_key_press", "(", "self, symbol, modifiers", "):\n        ", "if", " symbol == pg.window.key.A:\n            pg.clock.schedule_interval(self.steve.lmove, ", "1", "/", "60", ", )\n        ", "if", " symbol == pg.window.key.D:\n            pg.clock.schedule_interval(self.steve.rmove, ", "1", "/", "60", ", )\n\n    ", "def", " ", "on_text", "(", "self, text", "):\n        ...\n\ncraft = XyCraft()\npg.app.run()\n", "\n", "管理Steve的模块steve.py", "\n", "import", " pyglet ", "as", " pg\n\n\n", "class", " ", "Steve", ":\n    ", "def", " ", "__init__", "(", "self, img=", "'steve.png'", "):\n        pg.resource.path = [", "r'.\\res'", "]\n        pg.resource.reindex()\n        self.img = pg.resource.image(img)\n        self.sprite = pg.sprite.Sprite(img=self.img)\n\n    ", "def", " ", "draw", "(", "self", "):\n        self.sprite.draw()\n\n    ", "def", " ", "rmove", "(", "self, dt=", "1", "/", "120", "):\n        ", "if", " self.sprite.x < ", "768", "-", "15", ":\n            self.sprite.x += ", "15", " * dt\n\n    ", "def", " ", "lmove", "(", "self, dt=", "1", "/", "120", "):\n        ", "if", " self.sprite.x > ", "0", ":\n            self.sprite.x += -", "15", " * dt\n\n", "\n", "管理方块的模块block.py", "\n", "\n```python\n\n\n", "import", " pyglet ", "as", " pg\n\n\nblocks = []\n\n", "class", " ", "Block", ":\n    ", "def", " ", "__init__", "(", "self, x, y, name, win: pg.window.Window", "):\n        ", "global", " blocks\n        blocks.append(self)\n        self.x = x * ", "32", "\n        self.y = y * ", "32", "\n        self.name = name\n        self.win = win\n        pg.resource.path = [", "r'.\\res'", "]\n        pg.resource.reindex()\n        self.img = pg.resource.image(", "fr\"", "{name}", ".png\"", ")\n\n\n    ", "def", " ", "draw", "(", "self", "):\n        self.img.blit(self.x, self.y)\n\n    ", "def", " ", "__bool__", "(", "self", "):\n        ", "return", " ", "True", "\n\n\n", "\n", "运行结果及详细报错内容", "\n", "当我按D的时候，他不是像其他游戏那样按下移动，松开停止，而是按下一直动，松开接着动，直到我按A向反方向移动，才被迫停止。", "\n", "我想要达到的结果", "\n", "GitHub存储库", "我想按下移动，松开停止", "\n", "[]([]())\n\n"]], "Tag": "程序设计"}
{"Answer": "问题1：\r\nInetAddress localhost = InetAddress.getLocalHost();\r\nInetSocketAddress isa = new InetSocketAddress(localhost, this.port); \r\n这段代码只是绑定在localhost上，可能会导致无法连接，最好这样写：\r\nInetSocketAddress isa = new InetSocketAddress(this.port); \r\n\r\n问题2：\r\nkey.isWritable()这个分支里面不要输出内容了，因为连接上以后空闲时间都是writable的，这样写客户端会不停的收到\"This is from server!\"\r\n\r\n问题3：\r\nSocketChannel和socket是默认绑定在一起的，key.channel可以得到socketchannel，进一步地得到socket，不需要你人为地去绑定。\r\n\r\n问题4：\r\n接收数据的readFromChannel这个函数，要根据nbyte来判断下是否读到内容。\r\n\r\nif(nbytes &lt;=0){\t\t\t\t\r\n  return;\r\n}\r\n\r\n\r\n问题5：\r\n你写的客户端不完整，只有写，没有读， 不方便调试。\r\n建议使用telnet ip port方式调试。\r\n\r\n如何写出更好的nio程序，自己慢慢学习摸索，世上无难事，高阶以后可以欣赏mina框架代码。", "Konwledge_Point": "主程序", "Question": ["关于java 实现socket的异步通信", ["我在网上也找到一个例子，但是没有客户端，我自己写了一个用ServerSocket连的客户端，但是连接上后不能写也不能读，不知道怎么回事，请高手解决。最好能给一个简单异步编程的例子。", "\n下面是代码：", "\npackage org.scorpion.scoket;", "\n/**", "\n\n", "\n", "\n", "@author chenjd\n*/\nimport java.io.IOException;\nimport java.net.InetAddress;\nimport java.net.InetSocketAddress;\nimport java.net.Socket;\nimport java.nio.ByteBuffer;\nimport java.nio.CharBuffer;\nimport java.nio.channels.SelectableChannel;\nimport java.nio.channels.SelectionKey;\nimport java.nio.channels.Selector;\nimport java.nio.channels.ServerSocketChannel;\nimport java.nio.channels.SocketChannel;\nimport java.nio.charset.CharacterCodingException;\nimport java.nio.charset.Charset;\nimport java.nio.charset.CharsetDecoder;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Set;", "\n", "public class NBServer {", "\n    int port = 8090;", "\n    int BUFFERSIZE = 1024;", "\n    Selector selector = null;", "\n    ServerSocketChannel serverChannel = null;", "\n    HashMap clientChannelMap = null;// 用来存放每一个客户连接对应的套接字和通道", "\n\n", "public NBServer(int port) {\n    this.clientChannelMap = new HashMap();\n    this.port = port; \n}\n\npublic void initialize() throws IOException {\n    // 初始化，分别实例化一个选择器，一个服务器端可选择通道\n    this.selector = Selector.open();\n    this.serverChannel = ServerSocketChannel.open();\n    this.serverChannel.configureBlocking(false);\n    InetAddress localhost = InetAddress.getLocalHost();\n    InetSocketAddress isa = new InetSocketAddress(localhost, this.port);\n    this.serverChannel.socket().bind(isa);// 将该套接字绑定到服务器某一可用端口\n}\n\n// 结束时释放资源\npublic void finalize() throws IOException {\n    this.serverChannel.close();\n    this.selector.close();\n}\n\n// 将读入字节缓冲的信息解码\npublic String decode(ByteBuffer byteBuffer) throws CharacterCodingException {\n    Charset charset = Charset.forName(\"ISO-8859-1\");\n    CharsetDecoder decoder = charset.newDecoder();\n    CharBuffer charBuffer = decoder.decode(byteBuffer);\n    String result = charBuffer.toString();\n    return result;\n}\n\n// 监听端口，当通道准备好时进行相应操作\npublic void portListening(String data) throws IOException, InterruptedException {\n    // 服务器端通道注册OP_ACCEPT事件\n    SelectionKey acceptKey = this.serverChannel.register(this.selector,\n            SelectionKey.OP_ACCEPT);\n    // 当有已注册的事件发生时,select()返回值将大于0\n    while (acceptKey.selector().select() > 0) {\n        System.out.println(\"event happened\");\n        // 取得所有已经准备好的所有选择键\n        Set readyKeys = this.selector.selectedKeys();\n        // 使用迭代器对选择键进行轮询\n        Iterator i = readyKeys.iterator();\n        while (i.hasNext()) {\n            SelectionKey key = (SelectionKey) i.next();\n            i.remove();// 删除当前将要处理的选择键\n            if (key.isAcceptable()) {// 如果是有客户端连接请求\n                System.out.println(\"more client connect in!\");\n                ServerSocketChannel nextReady = (ServerSocketChannel) key\n                        .channel();\n                // 获取客户端套接字\n                Socket s = nextReady.accept().socket();\n                // 设置对应的通道为异步方式并注册感兴趣事件\n                s.getChannel().configureBlocking(false);\n                SelectionKey readWriteKey = s.getChannel().register(\n                        this.selector,\n                        SelectionKey.OP_READ | SelectionKey.OP_WRITE);\n                // 将注册的事件与该套接字联系起来\n                readWriteKey.attach(s);\n                // 将当前建立连接的客户端套接字及对应的通道存放在哈希表//clientChannelMap中\n                this.clientChannelMap.put(s, new ClientChInstance(s\n                        .getChannel()));\n            } else if (key.isReadable()) {// 如果是通道读准备好事件\n                System.out.println(\"Readable\");\n                // 取得选择键对应的通道和套接字\n                SelectableChannel nextReady = (SelectableChannel) key\n                        .channel();\n                Socket socket = (Socket) key.attachment();\n                // 处理该事件，处理方法已封装在类ClientChInstance中\n                this.readFromChannel(socket.getChannel(),\n                        (ClientChInstance) this.clientChannelMap\n                                .get(socket));\n            } else if (key.isWritable()) {// 如果是通道写准备好事件\n                System.out.println(\"writeable\");\n                // 取得套接字后处理，方法同上\n                Socket socket = (Socket) key.attachment();\n                SocketChannel channel = (SocketChannel) socket.getChannel();\n", "\n\n", "//                  this.writeToChannel(channel, \"This is from server!\");", "\n                    this.writeToChannel(channel, data);", "\n                }", "\n            }", "\n        }", "\n    }", "\n\n", "// 对通道的写操作\npublic void writeToChannel(SocketChannel channel, String message)\n        throws IOException {\n    ByteBuffer buf = ByteBuffer.wrap(message.getBytes());\n    int nbytes = channel.write(buf);\n}\n\n// 对通道的读操作\npublic void readFromChannel(SocketChannel channel,\n        ClientChInstance clientInstance) throws IOException,\n        InterruptedException {\n    ByteBuffer byteBuffer = null;\n    try{\n        byteBuffer = ByteBuffer.allocate(BUFFERSIZE);\n        int nbytes = channel.read(byteBuffer);\n    }catch(Exception e){\n        clientChannelMap.remove(channel.socket());\n        channel.close();\n        e=null;\n        return;\n    }\n    byteBuffer.flip();\n    String result = this.decode(byteBuffer);\n    // 当客户端发出”@exit”退出命令时，关闭其通道\n    if (result.indexOf(\"@exit\") >= 0||result.indexOf(\"q\")>=0) {\n        channel.close();\n    }\n", "\n\n", "//      else if(result.indexOf(\"@close\") >= 0){//关闭服务", "\n//          channel.close();", "\n//          this.finalize();", "\n//      }", "\n        else {", "\n            clientInstance.append(result.toString());", "\n            // 读入一行完毕，执行相应操作", "\n            if (result.indexOf(\"\\n\") >= 0) {", "\n                System.out.println(\"client input\" + result);", "\n                clientInstance.execute();", "\n            }", "\n        }", "\n    }", "\n\n", "// 该类封装了怎样对客户端的通道进行操作，具体实现可以通过重载execute()方法\npublic class ClientChInstance {\n    SocketChannel channel;\n    StringBuffer buffer = new StringBuffer();\n\n    public ClientChInstance(SocketChannel channel) {\n        this.channel = channel;\n    }\n\n    public void execute() throws IOException {\n        String message = \"This is response after reading from channel!\";\n        writeToChannel(this.channel, message);\n        buffer = new StringBuffer();\n    }\n\n    // 当一行没有结束时，将当前字窜置于缓冲尾\n    public void append(String values) {\n        buffer.append(values);\n    }\n}\n\n// 主程序\npublic static void main(String[] args) {\n    NBServer nbServer = new NBServer(8090);\n    try {\n        nbServer.initialize();\n    } catch (Exception e) {\n        e.printStackTrace();\n        System.exit(-1);\n    }\n    try {\n        nbServer.portListening(\"This is from server!\");\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n", "\n\n", "}", "\n\n", "我写的客户端：", "\n\n", "package org.scorpion.scoket;", "\n\n", "import java.io.OutputStream;", "\nimport java.net.Socket;", "\n\n", "public class TCPClient {", "\n    public static void main(String[] args) throws Exception {", "\n        Socket s = new Socket(\"172.22.71.146\", 8000);", "\n        OutputStream os = s.getOutputStream();", "\n        byte[] by=\"ksfsksjfklsdjflsdj\".getBytes();", "\n        os.write(by);", "\n        s.close();", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "使用 subprocess 模块的 Popen 调用外部程序，如果 stdout 或 stderr 参数是 pipe，并且程序输出超过操作系统的 pipe size时，如果使用 Popen.wait() 方式等待程序结束获取返回值，会导致死锁，程序卡在 wait() 调用上。\r\nulimit -a 看到的 pipe size 是 4KB，那只是每页的大小，查询得知 linux 默认的 pipe size 是 64KB。\r\n\r\nhttp://blog.csdn.net/carolzhang8406/article/details/22286913", "Konwledge_Point": "主程序", "Question": ["python 用subprocess调用外部程序卡死", ["用subprocess.Pope()方法中stderr, stdout,参数指定为subprocess.PIPE时，程序会卡死。（具体原因还不知道）", "\n代码大致流程：", "\npipe = subprocess.Popen(args， stderr=subprocess.PIPE, stdout=subprocess.PIPE)", "\npipe.wait()", "\n\n", "已知args调用的外部程序有终止的。这里我调用g++来编译一段C/C++代码。", "\n程序到pipe.wait()卡住了。", "\n\n", "是何原因？"]], "Tag": "程序设计"}
{"Answer": "function GetForm(ClassName: PChar; DM: TDataModule1): TFormClass; stdcall;\r\n begin\r\n DataModule1 := DM;\r\n Result:=TFormClass(FindClass(ClassName));\r\n end;\r\n\r\nprocedure InitDLL(DM: TDataModule1); stdcall;\r\n begin\r\n DataModule1:=DM;\r\n end;\r\n\r\n传递了对象，是不可取的。改成传递TADOConnection的连接字符 ConnectionString，就可以了。", "Konwledge_Point": "主程序", "Question": ["Delphi DLL数据及窗体调用", ["DLL工程相关代码如下：", "\nlibrary DLLUSERS;", "\nuses", "\n  Windows,", "\n  ADODB,", "\n  Dialogs,", "\n  Forms,", "\n  SysUtils,", "\n  Classes,", "\n  U_DataModule in 'U_DataModule.pas' {DataModule1: TDataModule},", "\n  U_Users in 'U_Users.pas' {Frm_Users},", "\n  U_Initialize in 'U_Initialize.pas';", "\n{$R *.res}", "\n\n", "function GetForm(ClassName: PChar; DM: TDataModule1): TFormClass; stdcall;", "\nbegin", "\n  DataModule1 := DM;", "\n  Result:=TFormClass(FindClass(ClassName));", "\nend;", "\n\n", "procedure InitDLL(DM: TDataModule1); stdcall;", "\nbegin", "\n  DataModule1:=DM;", "\nend;", "\n\n", "exports", "\n  GetForm,InitDLL,SetUseName;", "\nbegin", "\nend.", "\n\n", "DLL公共单元代码如下：", "\nunit U_Initialize;", "\n{DLL公共单元UNIT}", "\ninterface", "\n\n", "function GetUseName: PChar; stdcall;", "\n  procedure SetUseName(SName: PChar); stdcall;", "\n\n", "var", "\n  StrName: PChar;", "\n\n", "implementation", "\n\n", "uses", "\n  U_DataModule, ActiveX;", "\n\n", "function GetUseName: PChar; stdcall;", "\nbegin", "\n  Result:=StrName;", "\nend;", "\n\n", "procedure SetUseName(SName: PChar); stdcall;", "\nbegin", "\n  StrName:=SName;", "\nend;", "\n\n", "initialization", "\n  CoInitialize(nil);", "\n  DataModule1 := TDataModule1.Create(nil);", "\nfinalization", "\n  DataModule1.Free;", "\n  CoUninitialize;", "\n\n", "end.", "\n\n", "DLL数据模块代码：", "\nunit U_DataModule;", "\n{数据模块}", "\ninterface", "\n\n", "uses", "\n  SysUtils, Classes, DB, ADODB;", "\n\n", "type", "\n  TDataModule1 = class(TDataModule)", "\n    ADOCNT: TADOConnection;", "\n  private", "\n    { Private declarations }", "\n  public", "\n    { Public declarations }", "\n  end;", "\n\n", "var", "\n  DataModule1: TDataModule1;", "\n\n", "implementation", "\n\n", "{$R *.dfm}", "\n\n", "end.", "\n\n", "DLL内部窗体代码：", "\nunit U_Users;", "\n{DLL内部窗体}", "\ninterface", "\n\n", "uses", "\n  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,", "\n  Dialogs, DBGridEhGrouping, ComCtrls, GridsEh, DBGridEh, ExtCtrls,", "\n  RzPanel, Menus, ADODB, DB, EhlibCDS, EhlibADO, Comobj, DBGridEhImpExp,", "\n  U_DataModule;", "\n\n", "type", "\n  TFrm_Users = class(TForm)", "\n    MainMenu1: TMainMenu;", "\n    mmAdd: TMenuItem;", "\n    mmEdit: TMenuItem;", "\n    mmDelete: TMenuItem;", "\n    mmRight: TMenuItem;", "\n    mmFind: TMenuItem;", "\n    mmDataOut: TMenuItem;", "\n    mmClose: TMenuItem;", "\n    RzGroupBox1: TRzGroupBox;", "\n    DBGridEhUsers: TDBGridEh;", "\n    StatusBar1: TStatusBar;", "\n    SaveDialog1: TSaveDialog;", "\n    procedure FormCreate(Sender: TObject);", "\n    procedure FormShow(Sender: TObject);", "\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);", "\n  private", "\n    { Private declarations }", "\n  public", "\n    ADOUsers,ADODelete:TADOQuery;", "\n    DSUsers: TDataSource;", "\n    { Public declarations }", "\n  end;", "\n\n", "var", "\n  Frm_Users: TFrm_Users;", "\n\n", "implementation", "\n\n", "uses", "\n  U_Initialize;", "\n\n", "{$R *.dfm}", "\n\n", "procedure TFrm_Users.FormCreate(Sender: TObject);", "\nbegin", "\n  Font.Name:='Arial';", "\n  ADOUsers:=TADOQuery.Create(nil);", "\n  ADODelete:=TADOQuery.Create(nil);", "\n  DSUsers:=TDataSource.Create(nil);", "\n  ADOUsers.Connection:=DataModule1.ADOCNT;", "\n  ADODelete.Connection:=DataModule1.ADOCNT;", "\n  //设置文件类型列表和默认文件类型", "\n  SaveDialog1.Filter:='Text files (*.txt)|*.TXT|Comma separated values (*.csv)|*.CSV|HTML file (*.htm)|*.HTM|Rich Text Format (*.rtf)|*.RTF|Microsoft Excel Workbook (*.xls)|*.XLS';", "\n  SaveDialog1.FilterIndex:=0;", "\nend;", "\n\n", "procedure TFrm_Users.FormShow(Sender: TObject);", "\nbegin", "\n  StrName:=GetUseName;", "\n  with  ADOUsers  do", "\n  begin", "\n    Close;", "\n    SQL.Clear;", "\n    if String(StrName)='alsaby' then", "\n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+", "\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+", "\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+", "\n            'order by a.User_Name') else", "\n    if String(StrName)='admin' then", "\n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+", "\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+", "\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+", "\n            'where a.User_Name<>''alsaby'' order by a.User_Name') else", "\n    SQL.Add('select a.*,b.Person_Name,c.Partment_Name from t_User a '+", "\n            'left join t_Person b on a.User_PersonId=b.Person_Id '+", "\n            'left join t_Partment c on a.User_PartmentId=c.Partment_Id '+", "\n            'where a.User_Name<>''alsaby'' and a.User_Name<>''admin'' order by a.User_Name');", "\n    Open;", "\n  end;", "\n  DSUsers.DataSet:=ADOUsers;", "\n  DBGridEhUsers.DataSource:=DSUsers;", "\n  StatusBar1.Panels[1].Text:=IntToStr(ADOUsers.RecordCount) +' 条数据。';", "\nend;", "\n\n", "procedure TFrm_Users.FormClose(Sender: TObject; var Action: TCloseAction);", "\nbegin", "\n  ADOUsers.Close;", "\n  ADOUsers.Destroy;", "\n  ADODelete.Close;", "\n  ADODelete.Destroy;", "\n  DSUsers.Destroy;", "\n  Action:=caFree;", "\nend;", "\n\n", "initialization", "\n  RegisterClass(TFrm_Users);", "\nfinalization", "\n  UnRegisterClass(TFrm_Users);", "\nend.", "\n\n", "主程序调用DLL代码：", "\nunit U_Main;", "\n\n", "interface", "\n\n", "uses", "\n  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,", "\n  Dialogs, Menus, ImgList, ComCtrls, ADODB, DB, jpeg, ExtCtrls, RzPanel,", "\n  RzSplit, RzTreeVw, U_DataModule;", "\n\n", "type", "\n  TInitDLL = procedure(DM: TFrm_DataModule); stdcall;", "\n  TSetUseName = procedure(SName: PChar); stdcall;", "\n  TGetForm = function(ClassName: PChar; DM: TFrm_DataModule): TFormClass; stdcall;", "\n  TFrm_Main = class(TForm)", "\n    MainMenu1: TMainMenu;", "\n    mmSysFlies: TMenuItem;", "\n    mmUserChange: TMenuItem;", "\n    N2: TMenuItem;", "\n    mmExit: TMenuItem;", "\n    N1: TMenuItem;", "\n    mmBakRecover: TMenuItem;", "\n    mmSysUser: TMenuItem;", "\n    N5: TMenuItem;", "\n    StatusBar1: TStatusBar;", "\n    OpenDialog1: TOpenDialog;", "\n    ImageList1: TImageList;", "\n    procedure FormCreate(Sender: TObject);", "\n    procedure mmSysUserClick(Sender: TObject);", "\n  private", "\n    { Private declarations }", "\n  public", "\n    UName: String;", "\n    { Public declarations }", "\n  end;", "\n\n", "var", "\n  Frm_Main: TFrm_Main;", "\nimplementation", "\n\n", "uses", "\n  U_Public;", "\n\n", "{$R *.dfm}", "\n\n", "procedure TFrm_Main.FormCreate(Sender: TObject);", "\nbegin", "\n  Font.Name:='Arial';", "\n  UName:=Frm_DataModule.ADO_User.FieldByName('User_Name').AsString;", "\nend;", "\n\n", "procedure TFrm_Main.mmSysUserClick(Sender: TObject);", "\nvar", "\n  DLLName: String;", "\n  DLLHandle: THandle;", "\n  FarProc: TFarProc;", "\n  Form: TForm;", "\n  SetUseName: TSetUseName;", "\n  GetForm: TGetForm;", "\n  InitDLL: TInitDLL;", "\nbegin", "\n  GetDir(0,DLLName);", "\n  DLLName := DLLName + '\\DLLUSERS.dll';", "\n  DLLHandle:= SafeLoadLibrary(DLLName);", "\n  if DLLHandle > 0 then", "\n    Try", "\n      FarProc := GetProcAddress(DLLHandle, 'InitDLL');", "\n      if FarProc<>nil then", "\n      begin", "\n        InitDLL := TInitDLL(FarProc);", "\n        InitDLL(Frm_DataModule);", "\n      end;", "\n\n", "  FarProc := GetProcAddress(DLLHandle, 'SetUseName');\n  if FarProc<>nil then\n  begin\n    SetUseName := TSetUseName(FarProc);\n    SetUseName(PChar(Trim(UName)));\n  end;\n\n  FarProc := GetProcAddress(DLLHandle, 'GetForm');\n  if FarProc<>nil then\n  begin\n    GetForm := TGetForm(FarProc);\n    Form := GetForm('TFrm_Users', Frm_DataModule).Create(nil);\n    Form.ShowModal;\n    FreeAndNil(Form);\n  end;\nFinally\n  FreeLibrary(DLLHandle);\nEnd\n", "\n\n", "else", "\n  ShowMessage(DLLName+'文件不存在！');", "\nend;", "\n\n", "end.", "\n\n", "\n", "\n\n", "以上第一次运行数据都是可以正确显示的，可是关闭调用出来的DLL内部窗体后，再次调用就出现错误了，错误提示为Read of address 00000008,这是为什么呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/474965433246158.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这个地方要不返回了null要不抛了异常&amp;#xff0c;打断点看看&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Java中关于时间间隔的计算，起始时间和截止时间怎么用EditText的内容进行填充", ["布局", "\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n", "<", "androidx.constraintlayout.widget.ConstraintLayout", " ", "xmlns:android", "=", "\"http://schemas.android.com/apk/res/android\"", "\n    ", "xmlns:app", "=", "\"http://schemas.android.com/apk/res-auto\"", "\n    ", "xmlns:tools", "=", "\"http://schemas.android.com/tools\"", "\n    ", "android:id", "=", "\"@+id/rv\"", "\n    ", "android:layout_width", "=", "\"match_parent\"", "\n    ", "android:layout_height", "=", "\"match_parent\"", "\n    ", "tools:context", "=", "\".MainActivity\"", ">", "\n\n    ", "<", "EditText", "\n        ", "android:id", "=", "\"@+id/et_start\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginStart", "=", "\"40dp\"", "\n        ", "android:layout_marginTop", "=", "\"84dp\"", "\n        ", "android:ems", "=", "\"10\"", "\n        ", "android:hint", "=", "\"开始时间\"", "\n        ", "android:inputType", "=", "\"textPersonName\"", "\n        ", "app:layout_constraintStart_toStartOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"parent\"", " />", "\n\n    ", "<", "EditText", "\n        ", "android:id", "=", "\"@+id/et_end\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginStart", "=", "\"40dp\"", "\n        ", "android:layout_marginTop", "=", "\"28dp\"", "\n        ", "android:ems", "=", "\"10\"", "\n        ", "android:hint", "=", "\"结束时间\"", "\n        ", "android:inputType", "=", "\"textPersonName\"", "\n        ", "app:layout_constraintStart_toStartOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline\"", " />", "\n\n    ", "<", "TextView", "\n        ", "android:id", "=", "\"@+id/tv_start\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginTop", "=", "\"92dp\"", "\n        ", "android:layout_marginEnd", "=", "\"56dp\"", "\n        ", "android:text", "=", "\"开始时间\"", "\n        ", "app:layout_constraintEnd_toEndOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"parent\"", " />", "\n\n    ", "<", "TextView", "\n        ", "android:id", "=", "\"@+id/tv_end\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginTop", "=", "\"36dp\"", "\n        ", "android:layout_marginEnd", "=", "\"56dp\"", "\n        ", "android:text", "=", "\"结束时间\"", "\n        ", "app:layout_constraintEnd_toEndOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline\"", " />", "\n\n    ", "<", "androidx.constraintlayout.widget.Guideline", "\n        ", "android:id", "=", "\"@+id/guideline\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:orientation", "=", "\"horizontal\"", "\n        ", "app:layout_constraintGuide_begin", "=", "\"157dp\"", " />", "\n\n    ", "<", "androidx.constraintlayout.widget.Guideline", "\n        ", "android:id", "=", "\"@+id/guideline2\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:orientation", "=", "\"horizontal\"", "\n        ", "app:layout_constraintGuide_begin", "=", "\"263dp\"", " />", "\n\n    ", "<", "Button", "\n        ", "android:id", "=", "\"@+id/bt_IntervalTime\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginStart", "=", "\"156dp\"", "\n        ", "android:layout_marginTop", "=", "\"20dp\"", "\n        ", "android:text", "=", "\"计算间隔时间\"", "\n        ", "app:layout_constraintStart_toStartOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline3\"", " />", "\n\n    ", "<", "androidx.constraintlayout.widget.Guideline", "\n        ", "android:id", "=", "\"@+id/guideline3\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:orientation", "=", "\"horizontal\"", "\n        ", "app:layout_constraintGuide_begin", "=", "\"333dp\"", " />", "\n\n    ", "<", "TextView", "\n        ", "android:id", "=", "\"@+id/textView4\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginTop", "=", "\"24dp\"", "\n        ", "android:layout_marginEnd", "=", "\"64dp\"", "\n        ", "android:text", "=", "\"间隔时间\"", "\n        ", "app:layout_constraintEnd_toEndOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline2\"", " />", "\n\n    ", "<", "androidx.constraintlayout.widget.Guideline", "\n        ", "android:id", "=", "\"@+id/guideline4\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:orientation", "=", "\"horizontal\"", "\n        ", "app:layout_constraintGuide_begin", "=", "\"416dp\"", " />", "\n\n    ", "<", "TextView", "\n        ", "android:id", "=", "\"@+id/tv_12_chazhi\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginStart", "=", "\"84dp\"", "\n        ", "android:layout_marginTop", "=", "\"40dp\"", "\n        ", "app:layout_constraintStart_toStartOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline4\"", "\n        ", "tools:text", "=", "\"0\"", " />", "\n\n    ", "<", "TextView", "\n        ", "android:id", "=", "\"@+id/textView6\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginTop", "=", "\"40dp\"", "\n        ", "android:layout_marginEnd", "=", "\"28dp\"", "\n        ", "android:text", "=", "\"与12小时的差值\"", "\n        ", "app:layout_constraintEnd_toEndOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline4\"", " />", "\n\n    ", "<", "EditText", "\n        ", "android:id", "=", "\"@+id/et_IntervalTime\"", "\n        ", "android:layout_width", "=", "\"wrap_content\"", "\n        ", "android:layout_height", "=", "\"wrap_content\"", "\n        ", "android:layout_marginStart", "=", "\"32dp\"", "\n        ", "android:layout_marginTop", "=", "\"12dp\"", "\n        ", "android:ems", "=", "\"10\"", "\n        ", "android:inputType", "=", "\"textPersonName\"", "\n        ", "app:layout_constraintStart_toStartOf", "=", "\"parent\"", "\n        ", "app:layout_constraintTop_toTopOf", "=", "\"@+id/guideline2\"", " />", "\n", "</", "androidx.constraintlayout.widget.ConstraintLayout", ">", "\n", "\n", "主程序", "\n", "package com.example.test1;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\n\npublic ", "class", " MainActivity extends AppCompatActivity {\n    public EditText et_StartTime;\n    public EditText et_EndTime;\n    public EditText et_IntervalTime;\n    public TextView tv_12_chazhi;\n    public Button bt_IntervalTime;\n\n\n    @Override\n    protected void on", "Create(Bundle ", "savedInstanceState", ")", " {\n        super.on", "Create(", "savedInstanceState", ")", ";\n        set", "ContentView(R.", "layout", ".", "activity_main", ")", ";\n        et_StartTime=find", "ViewById(R.", "id", ".", "et_start", ")", ";\n        et_EndTime=find", "ViewById(R.", "id", ".", "et_end", ")", ";\n        tv_12_chazhi=find", "ViewById(R.", "id", ".", "tv_12_chazhi", ")", ";\n        et_IntervalTime=find", "ViewById(R.", "id", ".", "et_IntervalTime", ")", ";\n        bt_IntervalTime=find", "ViewById(R.", "id", ".", "bt_IntervalTime", ")", ";\n        String StartTimeET=  et_StartTime.get", "Text()", ".", "to", "String()", ";\n        String EndTimeET=  et_EndTime.get", "Text()", ".", "to", "String()", ";\n        SimpleDateFormat dfs = ", "new", " ", "SimpleDateFormat(", "\"yyyy-MM-dd HH:mm:ss\"", ")", ";\n        java.util.Date ", "begin", "= null;\n        ", "try", " {\n            ", "begin", " = dfs.parse(StartTimeET);\n        } catch (ParseException e) {\n            e.print", "StackTrace()", ";\n        }\n        java.util.Date ", "end", " = null;\n        ", "try", " {\n            ", "end", " = dfs.parse(EndTimeET);\n        } catch (ParseException e) {\n            e.print", "StackTrace()", ";\n        }\n\n        long between=(", "end", ".get", "Time()", "-", "begin", ".get", "Time()", ")/", "1000", ";", "//除以1000是为了转换成秒", "\n        long day1=between/(", "24", "*", "3600", ");\n        long hour1=between%(", "24", "*", "3600", ")/", "3600", ";\n        long minute1=between%", "3600", "/", "60", ";\n        long second1=between%", "60", "/", "60", ";\n        ", "Toast", ".", "make", "Text(", "this", ", ", "day1", "+", "\"天\"", "+", "hour1", "+", "\"小时\"", "+", "minute1", "+", "\"分\"", "+", "second1", "+", "\"秒\"", ", Toast.LENGTH_SHORT)", ".show", "()", ";\n\n    }\n}\n", "\n", "报错", " java.lang.RuntimeException: Unable to start activity ComponentInfo{com.example.test1/com.example.test1.MainActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'long java.util.Date.getTime()' on a null object reference", "\n", "源码", "链接：", "https://pan.baidu.com/s/10FlH5EZV1L72KXMe0i6KUA", "提取码：dwjs", "--来自百度网盘超级会员V1的分享"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;对应电路图&lt;span class=\"hljs-number\"&gt;245&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;修改了程序&amp;#xff0c;数码管选-CC不是-CA的仿真这点要注意&amp;#xff0c;电路图左边是CC右边是CA。\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;REG52.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; code smgduan[]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0x3f&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x06&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x5b&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x4f&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x66&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x6d&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x7d&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x07&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x7f&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x6f&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x77&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x7c&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x39&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x5e&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x79&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x71&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;}; &lt;span class=\"hljs-comment\"&gt;//共阴0~F消隐减号&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; Js&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, miao&amp;#61;&lt;span class=\"hljs-number\"&gt;34&lt;/span&gt;, fen&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//中断计时 秒 分 时 毫秒&lt;/span&gt;\nbit Mb&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//12/24切换 秒表&lt;/span&gt;\nsbit k0&amp;#61;P1^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nsbit k1&amp;#61;P1^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nsbit k2&amp;#61;P1^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nsbit da&amp;#61;P2^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nsbit db&amp;#61;P2^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\nsbit dc&amp;#61;P2^&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;smxs&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; mz, &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; w)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; Xd&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    P0&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    P0&amp;#61;smgduan[mz];\n    P2&amp;#61;w;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&amp;#43;&amp;#43;Xd);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ZhongDuanSheZhi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    TH0&amp;#43;&amp;#61;(&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-9216&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;/*定时器赋初值&amp;#xff0c;定时50ms触发中断&amp;#xff0c;自动补偿方式*/&lt;/span&gt;\n    TL0&amp;#43;&amp;#61;(&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-9216&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;; \n    TMOD&amp;#61;&lt;span class=\"hljs-number\"&gt;0X01&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//16位定时器/计数器&lt;/span&gt;\n    TR0&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//启动定时器T0。&lt;/span&gt;\n    ET0&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//开启定时器&lt;/span&gt;\n    EA&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//全局中断开关&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; Xd&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,qh&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,ss&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; shu&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;ZhongDuanSheZhi&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k0&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&amp;#43;&amp;#43;qh&amp;gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)qh&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k0&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(qh&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&amp;#43;&amp;#43;ss&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(fen/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(fen%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;);}&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;);}\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&amp;#43;&amp;#43;fen&amp;gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)fen&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(--fen&amp;gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)fen&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(qh&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&amp;#43;&amp;#43;ss&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(miao/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(miao%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;);}&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;);}\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&amp;#43;&amp;#43;miao&amp;gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)miao&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(--miao&amp;gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)miao&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(fen/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(fen%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(miao/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;smxs&lt;/span&gt;(miao%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){TR0&amp;#61;~TR0;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;&amp;#43;&amp;#43;Xd&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){TR0&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(k2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);}&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Js&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n        {\n            Js&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(--miao&amp;gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;&amp;amp;&amp;amp;fen&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                miao&amp;#61;&lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;;\n                --fen;\n            }\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ZhongDuan&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; interrupt 1\n&lt;/span&gt;{\n    &amp;#43;&amp;#43;Js;\n    TH0&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;0X4c&lt;/span&gt;;\n    TL0&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;0X00&lt;/span&gt;;        \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/252230721656172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["51单片机倒计时程序", ["这篇文章是为了昨天一位博主准备的，因为我结题了，十分抱歉，今天重发以下", "\n", "这是代码要求，附上原理图", "\n", "\n", "\n", "\n", "以下是我写的代码，功能没有完全实现：", "\n", "\n", "#", "include", "<reg52.h>", "\n\n", "#", "define", " KeyPort P3", "\n", "typedef", "  ", "unsigned", " ", "char", " u8;\n", "typedef", "  ", "unsigned", " ", "int", "  u16;\n\nsbit LSA=P2^", "2", ";\nsbit LSB=P2^", "3", ";\nsbit LSC=P2^", "4", ";\n\nsbit k1=P3^", "1", ";\nsbit k2=P3^", "0", ";\nsbit k3=P3^", "2", ";\nsbit k4=P3^", "3", ";\n\nu8 minute,second;                                                                     ", "//定义分秒", "\nu8 count = ", "0", ";\n\nbit UpdateTimeFlag;                                                                                                                                        ", "//定义读时间标志", "\n\nu8 code smg[", "10", "]= {", "0x3f", ",", "0x06", ",", "0x5b", ",", "0x4f", ",", "0x66", ",", "0x6d", ",", "0x7d", ",", "0x07", ",", "0x7f", ",", "0x6f", "};                            ", "// 显示段码值0~9", "\n\n", "unsigned", " ", "char", " TempData[", "8", "],Key_Num;\n\n", "void", " ", "delay", "(u8 i)", ";\n", "void", " ", "display", "()", ";                                                                                                                                        ", "//数码管显示函数", "\n", "void", " ", "KeyScan", "()", ";                                                                                                                                                ", "//按键扫描", "\n", "void", " ", "Init_Timer0", "(", "void", ")", ";", "//定时器初始化", "\n\n", "void", " ", "main", " ", "(", "void", ")", "\n", "{\n\n    ", "Init_Timer0", "();\n\n    ", "while", " (", "1", ") {\n        ", "KeyScan", "();\n        ", "if", "(count==", "1", ") {\n            ", "switch", "(Key_Num) {\n            ", "case", " ", "2", ":\n                minute++;\n                ", "if", "(minute==", "60", ")minute=", "0", ";\n                Key_Num=", "0", ";\n                ", "break", ";\n            ", "case", " ", "3", ":\n                minute--;\n                ", "if", "(minute==", "255", ")minute=", "59", ";\n                Key_Num=", "0", ";\n                ", "break", ";\n            ", "default", ":\n                ", "break", ";\n            }\n        }\n        ", "if", "(count==", "2", ") {\n            ", "switch", "(Key_Num) {\n            ", "case", " ", "2", ":\n                second++;\n                ", "if", "(second==", "60", ")second=", "0", ";\n                Key_Num=", "0", ";\n                ", "break", ";\n            ", "case", " ", "3", ":\n                second--;\n                ", "if", "(second==", "255", ")second=", "59", ";\n                Key_Num=", "0", ";\n                ", "break", ";\n            ", "default", ":\n                ", "break", ";\n            }\n        }\n\n        TempData[", "0", "]=smg[minute/", "10", "];", "//分", "\n        TempData[", "1", "]=smg[minute%", "10", "];\n        TempData[", "2", "]=smg[second/", "10", "];", "//秒", "\n        TempData[", "3", "]=smg[second%", "10", "];\n        ", "display", "();\n    }\n}\n\n", "void", " ", "delay", "(u8 i)", " ", "{\n    ", "while", "(i--);\n}\n\n\n", "void", " ", "display", "()", "\n", "{\n    u8 i=", "0", ";\n    ", "for", "(i=", "0", "; i<", "8", "; i++)\n    {\n        ", "switch", "(i)     ", "//位选，选择点亮的数码管，", "\n        {\n        ", "case", "(", "7", "):\n            LSA=", "0", ";\n            LSB=", "0", ";\n            LSC=", "0", ";\n            ", "break", ";", "//显示第0位", "\n        ", "case", "(", "6", "):\n            LSA=", "1", ";\n            LSB=", "0", ";\n            LSC=", "0", ";\n            ", "break", ";", "//显示第1位", "\n        ", "case", "(", "5", "):\n            LSA=", "0", ";\n            LSB=", "1", ";\n            LSC=", "0", ";\n            ", "break", ";", "//显示第2位", "\n        ", "case", "(", "4", "):\n            LSA=", "1", ";\n            LSB=", "1", ";\n            LSC=", "0", ";\n            ", "break", ";", "//显示第3位", "\n        ", "case", "(", "3", "):\n            LSA=", "0", ";\n            LSB=", "0", ";\n            LSC=", "1", ";\n            ", "break", ";", "//显示第4位", "\n        ", "case", "(", "2", "):\n            LSA=", "1", ";\n            LSB=", "0", ";\n            LSC=", "1", ";\n            ", "break", ";", "//显示第5位", "\n        ", "case", "(", "1", "):\n            LSA=", "0", ";\n            LSB=", "1", ";\n            LSC=", "1", ";\n            ", "break", ";", "//显示第6位", "\n        ", "case", "(", "0", "):\n            LSA=", "1", ";\n            LSB=", "1", ";\n            LSC=", "1", ";\n            ", "break", ";", "//显示第7位", "\n        }\n        P0=TempData[i];                                                ", "//发送段码", "\n        ", "delay", "(", "100", ");                                                     ", "//间隔一段时间扫描", "\n        P0=", "0x00", ";                                                            ", "//消隐", "\n        ", "///delay(1000);", "\n    }\n}\n\n", "void", " ", "Init_Timer0", "(", "void", ")", "\n", "{\n    TMOD |= ", "0x01", ";                                                          ", "//使用模式1，16位定时器", "\n    EA=", "1", ";                                                                ", "//总中断打开", "\n    ET0=", "1", ";                                                               ", "//定时器中断打开", "\n    TR0=", "1", ";                                                               ", "//定时器开关打开", "\n}\n\n", "void", " ", "Timer0_isr", "(", "void", ")", " interrupt 1\n", "{\n    ", "static", " ", "unsigned", " ", "int", " num,i;\n    u8 j;\n    TH0=(", "65536", "-2000", ")/", "256", ";                            ", "//赋值 2ms", "\n    TL0=(", "65536", "-2000", ")%", "256", ";\n\n\n    i++;\n    ", "if", "(i==", "10", ")                                             ", "//20ms更新一次", "\n    {\n        i=", "0", ";\n        UpdateTimeFlag=", "1", ";                            ", "//更新时间志位置1", "\n    }\n    num++;\n    ", "if", "(num==", "500", ")                                        ", "//1s", "\n    {\n        num=", "0", ";\n        ", "if", "(count==", "0", ") {\n            ", "if", "(minute!=", "0", "||second!=", "0", ") {\n                ", "if", "(minute!=", "0", "&&second==", "0", ") {\n                                        second--;\n                                    ", "if", "(second==", "255", "){\n                                        second=", "59", ";\n                    minute--;\n                                    }                    \n                    second--;\n                    j++;\n                    ", "if", "(j==", "60", ") {\n                        j=", "0", ";\n                        ", "if", "(minute > ", "0", ") {\n                            minute--;\n                        }\n                    }\n                }\n                ", "if", "(minute==", "0", "&&second!=", "0", ") {\n                    second--;\n                }\n                ", "if", "(minute!=", "0", "&&second!=", "0", ") {\n                    second--;\n                    ", "if", "(second==", "255", ") {\n                        minute--;\n                        second=", "59", ";\n                    }\n                                        second--;\n                    j++;\n                    ", "if", "(j==", "60", ") {\n                        ", "if", "(minute > ", "0", ") {\n                            minute--;\n                        }\n                    }\n\n                }\n            }\n\n        }\n    }\n}\n\n", "void", " ", "KeyScan", "()", "\n", "{\n\n    ", "if", "(k1==", "0", ")                                                                              ", "//检测按键K1是否按下", "\n    {\n        ", "delay", "(", "1000", ");                                                               ", "//消除抖动 一般大约10ms", "\n        ", "if", "(k1==", "0", ")                                                                         ", "//再次判断按键是否按下", "\n        {\n            Key_Num=", "1", ";\n        }\n        ", "while", "(!k1);                                                                     ", "//检测按键是否松开", "\n        count++;\n    }\n    ", "if", "(count==", "3", ")count=", "0", ";                                                        ", "//复位操作数字", "\n    ", "if", "(k2==", "0", ")\n    {\n        ", "delay", "(", "1000", ");\n        ", "if", "(k2==", "0", ")\n        {\n            Key_Num=", "2", ";\n        }\n        ", "while", "(!k2);\n    }\n\n    ", "if", "(k3==", "0", ")\n    {\n        ", "delay", "(", "1000", ");\n        ", "if", "(k3==", "0", ")\n        {\n            Key_Num=", "3", ";\n        }\n        ", "while", "(!k3);\n    }\n\n    ", "if", "(k4==", "0", ")\n    {\n        ", "delay", "(", "1000", ");\n        ", "if", "(k4==", "0", ")\n        {\n            Key_Num=", "4", ";\n        }\n        ", "while", "(!k4);\n    }\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/629606317092337364.html", "Konwledge_Point": "主程序", "Question": ["怎么把做成界面间跳转,谢谢给位大佬，最好是可以一步一步教的那种！！！", ["因为是实训，老师要我们做controller和界面间跳转，就只要一个主程序类，但是我昨天做了一下午都没有弄好，不知道怎么去做。这个是用window builder做的界面。", "\n\n", "package view;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.border.EmptyBorder;\n\nimport util.StringUtil;\n\nimport javax.swing.GroupLayout;\nimport javax.swing.GroupLayout.Alignment;\nimport javax.swing.JLabel;\nimport javax.swing.JOptionPane;\nimport javax.swing.ImageIcon;\nimport java.awt.Font;\nimport javax.swing.LayoutStyle.ComponentPlacement;\nimport javax.swing.JTextField;\nimport javax.swing.JPasswordField;\nimport javax.swing.JButton;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ActionEvent;\n\npublic class Login  extends JFrame  {\n    private JPanel contentPane;\n    private JTextField userNameTxt;\n    private JPasswordField passwordTxt;\n\n    /**\n     * Launch the application.\n//   */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    Login frame = new Login();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public Login() {\n        setTitle(\"\\u7BA1\\u7406\\u5458\\u767B\\u5F55\");\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 568, 438);\n        contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n\n        JLabel lblNewLabel = new JLabel(\"\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF\");\n        lblNewLabel.setFont(new Font(\"宋体\", Font.BOLD, 23));\n        lblNewLabel.setIcon(new ImageIcon(Login.class.getResource(\"/images/resizeApi.png\")));\n\n        JLabel lblNewLabel_1 = new JLabel(\"\\u7528\\u6237\\u540D\\uFF1A\");\n        lblNewLabel_1.setIcon(new ImageIcon(Login.class.getResource(\"/images/\\u7528\\u6237.png\")));\n\n        JLabel lblNewLabel_2 = new JLabel(\"\\u5BC6  \\u7801\\uFF1A\");\n        lblNewLabel_2.setIcon(new ImageIcon(Login.class.getResource(\"/images/\\u5BC6\\u7801.png\")));\n\n        userNameTxt = new JTextField();\n        userNameTxt.setColumns(10);\n\n        passwordTxt = new JPasswordField();\n\n        JButton btnNewButton = new JButton(\"\\u767B\\u5F55\");\n        btnNewButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                loginActionPerformed(e);\n            }\n        });\n        btnNewButton.setIcon(new ImageIcon(Login.class.getResource(\"/images/\\u767B\\u5F55.png\")));\n\n        JButton btnNewButton_1 = new JButton(\"\\u91CD\\u7F6E\");\n        btnNewButton_1.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                resetValueActionPerformed(e);\n            }\n        });\n        btnNewButton_1.setIcon(new ImageIcon(Login.class.getResource(\"/images/\\u91CD\\u7F6E.png\")));\n        GroupLayout gl_contentPane = new GroupLayout(contentPane);\n        gl_contentPane.setHorizontalGroup(\n            gl_contentPane.createParallelGroup(Alignment.TRAILING)\n                .addGroup(gl_contentPane.createSequentialGroup()\n                    .addContainerGap(142, Short.MAX_VALUE)\n                    .addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 308, GroupLayout.PREFERRED_SIZE)\n                    .addGap(90))\n                .addGroup(Alignment.LEADING, gl_contentPane.createSequentialGroup()\n                    .addGap(73)\n                    .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)\n                        .addGroup(gl_contentPane.createSequentialGroup()\n                            .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)\n                                .addComponent(lblNewLabel_2)\n                                .addComponent(lblNewLabel_1))\n                            .addGap(39)\n                            .addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING, false)\n                                .addComponent(passwordTxt)\n                                .addComponent(userNameTxt, GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))\n                            .addContainerGap(158, Short.MAX_VALUE))\n                        .addGroup(gl_contentPane.createSequentialGroup()\n                            .addComponent(btnNewButton)\n                            .addPreferredGap(ComponentPlacement.RELATED, 177, Short.MAX_VALUE)\n                            .addComponent(btnNewButton_1)\n                            .addGap(114))))\n        );\n        gl_contentPane.setVerticalGroup(\n            gl_contentPane.createParallelGroup(Alignment.LEADING)\n                .addGroup(gl_contentPane.createSequentialGroup()\n                    .addGap(39)\n                    .addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 127, GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(ComponentPlacement.RELATED)\n                    .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)\n                        .addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)\n                        .addComponent(userNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                    .addGap(50)\n                    .addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)\n                        .addComponent(lblNewLabel_2)\n                        .addComponent(passwordTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                    .addPreferredGap(ComponentPlacement.RELATED, 38, Short.MAX_VALUE)\n                    .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)\n                        .addComponent(btnNewButton)\n                        .addComponent(btnNewButton_1))\n                    .addGap(28))\n        );\n        contentPane.setLayout(gl_contentPane);\n    }\n/**\n *重置事件处理\n */\n    private void resetValueActionPerformed(ActionEvent e) {\n        this.userNameTxt.setText(\"\");\n        this.passwordTxt.setText(\"\");\n\n    }\n/**\n * 登录事件处理\n *\n */\n    private void loginActionPerformed(ActionEvent e) {\n        String userName=this.userNameTxt.getText();\n        String password=new String(this.passwordTxt.getPassword());\n        if(StringUtil.isEmpty(userName)) {\n            JOptionPane.showMessageDialog(null, \"用户名不能为空！\");\n            return;\n        }\n        if(StringUtil.isEmpty(password)) {\n            JOptionPane.showMessageDialog(null, \"密码不能为空！\");\n            return;\n        }\n\n    }\n}\n", "\n\n", "package view;\n\nimport java.awt.BorderLayout;\nimport java.awt.EventQueue;\n\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.border.EmptyBorder;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuItem;\nimport javax.swing.JOptionPane;\nimport javax.swing.ImageIcon;\nimport javax.swing.GroupLayout;\nimport javax.swing.GroupLayout.Alignment;\nimport javax.swing.JDesktopPane;\nimport java.awt.Color;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ActionEvent;\n\npublic class MainFrame  extends JFrame {\n\n    private JPanel contentPane;\n    private JDesktopPane table=null;\n    /**\n     * Launch the application.\n//   */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    MainFrame frame = new MainFrame();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public MainFrame() {\n        setTitle(\"\\u56FE\\u4E66\\u7BA1\\u7406\\u4E3B\\u754C\\u9762\");\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setBounds(100, 100, 637, 510);\n\n        JMenuBar menuBar = new JMenuBar();\n        setJMenuBar(menuBar);\n\n        JMenu mnNewMenu = new JMenu(\"\\u57FA\\u672C\\u6570\\u636E\\u7EF4\\u62A4\");\n        mnNewMenu.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u7EF4\\u62A4.png\")));\n        menuBar.add(mnNewMenu);\n\n        JMenu mnNewMenu_2 = new JMenu(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u7BA1\\u7406\");\n        mnNewMenu_2.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u7BA1\\u7406.png\")));\n        mnNewMenu.add(mnNewMenu_2);\n\n        JMenuItem mntmNewMenuItem_1 = new JMenuItem(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u6DFB\\u52A0\");\n        mntmNewMenuItem_1.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n            BookTypeAddInternalFrm bookTypeAddInternalFrm =new BookTypeAddInternalFrm ();\n            bookTypeAddInternalFrm.setVisible(true);\n            table.add(bookTypeAddInternalFrm );\n            }\n        });\n        mntmNewMenuItem_1.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u6DFB\\u52A0.png\")));\n        mnNewMenu_2.add(mntmNewMenuItem_1);\n\n        JMenuItem mntmNewMenuItem_2 = new JMenuItem(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u7EF4\\u62A4\");\n        mntmNewMenuItem_2.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u7EF4\\u62A41.png\")));\n        mnNewMenu_2.add(mntmNewMenuItem_2);\n\n        JMenu mnNewMenu_3 = new JMenu(\"\\u56FE\\u4E66\\u7BA1\\u7406\");\n        mnNewMenu_3.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u7BA1\\u7406.png\")));\n        mnNewMenu.add(mnNewMenu_3);\n\n        JMenuItem mntmNewMenuItem_3 = new JMenuItem(\"\\u56FE\\u4E66\\u6DFB\\u52A0\");\n        mntmNewMenuItem_3.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                BookAddInterFrm bookAddInterFrm =new BookAddInterFrm ();\n                bookAddInterFrm.setVisible(true);\n                table.add(bookAddInterFrm );    \n            }\n        });\n        mntmNewMenuItem_3.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u6DFB\\u52A0.png\")));\n        mnNewMenu_3.add(mntmNewMenuItem_3);\n\n        JMenuItem mntmNewMenuItem_4 = new JMenuItem(\"\\u56FE\\u4E66\\u7EF4\\u62A4\");\n        mntmNewMenuItem_4.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u7EF4\\u62A4.png\")));\n        mnNewMenu_3.add(mntmNewMenuItem_4);\n\n        JMenuItem mntmNewMenuItem_5 = new JMenuItem(\"\\u5B89\\u5168\\u9000\\u51FA\");\n        mntmNewMenuItem_5.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n                int result=JOptionPane.showConfirmDialog(null, \"是否退出系统\");\n            if(result==0) {\n                dispose();\n            }\n            }\n        });\n        mntmNewMenuItem_5.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u9000\\u51FA.png\")));\n        mnNewMenu.add(mntmNewMenuItem_5);\n\n        JMenu mnNewMenu_1 = new JMenu(\"\\u5173\\u4E8E\\u6211\\u4EEC\");\n        mnNewMenu_1.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u6211.png\")));\n        menuBar.add(mnNewMenu_1);\n\n        JMenuItem mntmNewMenuItem = new JMenuItem(\"\\u5173\\u4E8E\\u4F5C\\u8005\");\n        mntmNewMenuItem.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n              userInternalFrame  userInternalFrame =new  userInternalFrame();\n              userInternalFrame.setVisible(true);\n              table.add(userInternalFrame);\n            }\n        });\n        mntmNewMenuItem.setIcon(new ImageIcon(MainFrame.class.getResource(\"/images/\\u6211.png\")));\n        mnNewMenu_1.add(mntmNewMenuItem);\n        contentPane = new JPanel();\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n        setContentPane(contentPane);\n        contentPane.setLayout(new BorderLayout(0, 0));\n\n     table = new JDesktopPane();\n        table.setBackground(Color.LIGHT_GRAY);\n        contentPane.add(table, BorderLayout.CENTER);\n    }}\n", "\n\n", "package view;\n\nimport java.awt.EventQueue;\n\nimport javax.swing.JInternalFrame;\nimport javax.swing.JLabel;\nimport java.awt.BorderLayout;\nimport java.awt.Font;\nimport javax.swing.SwingConstants;\nimport java.awt.Color;\n\npublic class userInternalFrame extends JInternalFrame {\n\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    userInternalFrame frame = new userInternalFrame();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public userInternalFrame() {\n        setClosable(true);\n        setIconifiable(true);\n        setTitle(\"\\u5173\\u4E8E\\u4F5C\\u8005\");\n        setBounds(100, 100, 516, 379);\n\n        JLabel lblNewLabel = new JLabel(\"\\u6B22\\u8FCE\\u70B9\\u8FDB\\u6765\\uFF01\\uFF01\\uFF01\");\n        lblNewLabel.setForeground(Color.BLUE);\n        lblNewLabel.setFont(new Font(\"宋体\", Font.BOLD, 33));\n        getContentPane().add(lblNewLabel, BorderLayout.CENTER);\n\n    }\n\n}\n", "\n\n", "```package view;", "\n\n", "import java.awt.EventQueue;", "\n\n", "import javax.swing.JInternalFrame;", "\nimport javax.swing.GroupLayout;", "\nimport javax.swing.GroupLayout.Alignment;", "\nimport javax.swing.JLabel;", "\nimport javax.swing.JTextField;", "\nimport javax.swing.JRadioButton;", "\nimport javax.swing.ButtonGroup;", "\nimport javax.swing.JTextArea;", "\nimport javax.swing.LayoutStyle.ComponentPlacement;", "\nimport javax.swing.JComboBox;", "\nimport javax.swing.JButton;", "\nimport javax.swing.ImageIcon;", "\n\n", "public class BookAddInterFrm extends JInternalFrame {", "\n    private JTextField bookNameTxt;", "\n    private final ButtonGroup buttonGroup = new ButtonGroup();", "\n    private JTextField authorTxt;", "\n    private JTextField priceTxt;", "\n\n", "/**\n * Launch the application.\n */\npublic static void main(String[] args) {\n    EventQueue.invokeLater(new Runnable() {\n        public void run() {\n            try {\n                BookAddInterFrm frame = new BookAddInterFrm();\n                frame.setVisible(true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    });\n}\n\n/**\n * Create the frame.\n */\npublic BookAddInterFrm() {\n    setIconifiable(true);\n    setTitle(\"\\u56FE\\u4E66\\u6DFB\\u52A0\");\n    setClosable(true);\n    setBounds(100, 100, 619, 590);\n\n    JLabel lblNewLabel = new JLabel(\"\\u56FE\\u4E66\\u540D\\u79F0\\uFF1A\");\n\n    bookNameTxt = new JTextField();\n    bookNameTxt.setColumns(10);\n\n    JLabel lblNewLabel_1 = new JLabel(\"\\u56FE\\u4E66\\u4F5C\\u8005\\uFF1A\");\n\n    JLabel lblNewLabel_2 = new JLabel(\"\\u4F5C\\u8005\\u6027\\u522B\\uFF1A\");\n\n    JRadioButton manJrb = new JRadioButton(\"\\u7537\");\n    buttonGroup.add(manJrb);\n\n    JRadioButton womanJrb = new JRadioButton(\"\\u5973\");\n    buttonGroup.add(womanJrb);\n\n    JLabel lblNewLabel_3 = new JLabel(\"\\u56FE\\u4E66\\u4EF7\\u683C\\uFF1A\");\n\n    JLabel lblNewLabel_4 = new JLabel(\"\\u56FE\\u4E66\\u63CF\\u8FF0\\uFF1A\");\n\n    JTextArea bookDacTxt = new JTextArea();\n\n    authorTxt = new JTextField();\n    authorTxt.setColumns(10);\n\n    priceTxt = new JTextField();\n    priceTxt.setColumns(10);\n\n    JLabel lblNewLabel_5 = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\uFF1A\\r\\n\");\n\n    JComboBox bookTypeJcb = new JComboBox();\n\n    JButton btnNewButton = new JButton(\"\\u6DFB\\u52A0\");\n    btnNewButton.setIcon(new ImageIcon(BookAddInterFrm.class.getResource(\"/images/\\u6DFB\\u52A0.png\")));\n\n    JButton btnNewButton_1 = new JButton(\"\\u91CD\\u7F6E\");\n    btnNewButton_1.setIcon(new ImageIcon(BookAddInterFrm.class.getResource(\"/images/\\u91CD\\u7F6E.png\")));\n    GroupLayout groupLayout = new GroupLayout(getContentPane());\n    groupLayout.setHorizontalGroup(\n        groupLayout.createParallelGroup(Alignment.LEADING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(42)\n                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)\n                    .addComponent(lblNewLabel_5)\n                    .addGroup(groupLayout.createSequentialGroup()\n                        .addComponent(lblNewLabel)\n                        .addGap(18)\n                        .addComponent(bookNameTxt, GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE))\n                    .addGroup(groupLayout.createSequentialGroup()\n                        .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)\n                            .addComponent(lblNewLabel_4)\n                            .addComponent(lblNewLabel_2))\n                        .addGap(18)\n                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)\n                            .addComponent(bookDacTxt, GroupLayout.PREFERRED_SIZE, 415, GroupLayout.PREFERRED_SIZE)\n                            .addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()\n                                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)\n                                    .addComponent(lblNewLabel_1)\n                                    .addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()\n                                        .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING, false)\n                                            .addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()\n                                                .addGap(6)\n                                                .addComponent(bookTypeJcb, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                                            .addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()\n                                                .addComponent(manJrb)\n                                                .addGap(28)\n                                                .addComponent(womanJrb)))\n                                        .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                        .addComponent(lblNewLabel_3)))\n                                .addPreferredGap(ComponentPlacement.UNRELATED)\n                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)\n                                    .addComponent(authorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                                    .addComponent(priceTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))))\n                .addContainerGap(53, Short.MAX_VALUE))\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(78)\n                .addComponent(btnNewButton)\n                .addPreferredGap(ComponentPlacement.RELATED, 225, Short.MAX_VALUE)\n                .addComponent(btnNewButton_1)\n                .addGap(74))\n    );\n    groupLayout.setVerticalGroup(\n        groupLayout.createParallelGroup(Alignment.LEADING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(31)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel)\n                    .addComponent(bookNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_1)\n                    .addComponent(authorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                .addGap(43)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel_2)\n                    .addComponent(manJrb)\n                    .addComponent(womanJrb)\n                    .addComponent(lblNewLabel_3)\n                    .addComponent(priceTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                .addGap(45)\n                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)\n                    .addComponent(lblNewLabel_5)\n                    .addComponent(bookTypeJcb, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                .addGap(60)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel_4)\n                    .addComponent(bookDacTxt, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(ComponentPlacement.RELATED, 45, Short.MAX_VALUE)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(btnNewButton)\n                    .addComponent(btnNewButton_1))\n                .addGap(62))\n    );\n    getContentPane().setLayout(groupLayout);\n\n}\n", "\n\n", "}", "\n\n", "\n", "\n\n", "package view;", "\n\n", "import java.awt.EventQueue;", "\n\n", "import javax.swing.JInternalFrame;", "\nimport javax.swing.GroupLayout;", "\nimport javax.swing.GroupLayout.Alignment;", "\nimport javax.swing.JScrollPane;", "\nimport javax.swing.JTable;", "\nimport javax.swing.table.DefaultTableModel;", "\nimport javax.swing.JPanel;", "\nimport javax.swing.border.TitledBorder;", "\nimport javax.swing.JLabel;", "\nimport javax.swing.JTextField;", "\nimport javax.swing.LayoutStyle.ComponentPlacement;", "\nimport javax.swing.JComboBox;", "\nimport javax.swing.JButton;", "\nimport java.awt.event.ActionListener;", "\nimport java.awt.event.ActionEvent;", "\nimport javax.swing.ImageIcon;", "\nimport javax.swing.JRadioButton;", "\nimport javax.swing.ButtonGroup;", "\nimport javax.swing.JTextArea;", "\n\n", "public class BookMangeInterFrm extends JInternalFrame {", "\n    private JTable table;", "\n    private JTextField s_bookNameTxt;", "\n    private JTextField s_authorTxt;", "\n    private JTextField textField;", "\n    private JTextField textField_1;", "\n    private final ButtonGroup buttonGroup = new ButtonGroup();", "\n    private JTextField textField_2;", "\n    private JTextField textField_3;", "\n\n", "/**\n * Launch the application.\n */\npublic static void main(String[] args) {\n    EventQueue.invokeLater(new Runnable() {\n        public void run() {\n            try {\n                BookMangeInterFrm frame = new BookMangeInterFrm();\n                frame.setVisible(true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    });\n}\n\n/**\n * Create the frame.\n */\npublic BookMangeInterFrm() {\n    setIconifiable(true);\n    setTitle(\"\\u56FE\\u4E66\\u7BA1\\u7406\");\n    setClosable(true);\n    setBounds(100, 100, 803, 593);\n\n    JScrollPane scrollPane = new JScrollPane();\n\n    JPanel panel = new JPanel();\n    panel.setBorder(new TitledBorder(null, \"\\u641C\\u7D22\\u6761\\u4EF6\", TitledBorder.LEADING, TitledBorder.TOP, null, null));\n\n    JPanel panel_1 = new JPanel();\n    panel_1.setBorder(new TitledBorder(null, \"\\u8868\\u5355\\u64CD\\u4F5C\", TitledBorder.LEADING, TitledBorder.TOP, null, null));\n\n    JButton btnNewButton_1 = new JButton(\"\\u4FEE\\u6539\");\n    btnNewButton_1.setIcon(new ImageIcon(BookMangeInterFrm.class.getResource(\"/images/\\u4FEE\\u6539.png\")));\n\n    JButton btnNewButton_2 = new JButton(\"\\u5220\\u9664\");\n    btnNewButton_2.setIcon(new ImageIcon(BookMangeInterFrm.class.getResource(\"/images/\\u5220\\u9664.png\")));\n    GroupLayout groupLayout = new GroupLayout(getContentPane());\n    groupLayout.setHorizontalGroup(\n        groupLayout.createParallelGroup(Alignment.LEADING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)\n                    .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)\n                    .addComponent(panel, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 596, Short.MAX_VALUE)\n                    .addComponent(panel_1, GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE))\n                .addContainerGap())\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(75)\n                .addComponent(btnNewButton_1)\n                .addPreferredGap(ComponentPlacement.RELATED, 410, Short.MAX_VALUE)\n                .addComponent(btnNewButton_2)\n                .addGap(126))\n    );\n    groupLayout.setVerticalGroup(\n        groupLayout.createParallelGroup(Alignment.LEADING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(22)\n                .addComponent(panel, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)\n                .addGap(33)\n                .addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 139, GroupLayout.PREFERRED_SIZE)\n                .addGap(29)\n                .addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(ComponentPlacement.UNRELATED)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(btnNewButton_1)\n                    .addComponent(btnNewButton_2))\n                .addContainerGap(15, Short.MAX_VALUE))\n    );\n\n    JLabel lblNewLabel_3 = new JLabel(\"\\u7F16\\u53F7\\uFF1A\");\n\n    textField = new JTextField();\n    textField.setEditable(false);\n    textField.setColumns(10);\n\n    JLabel lblNewLabel_4 = new JLabel(\"\\u56FE\\u4E66\\u540D\\u79F0\\uFF1A\");\n\n    textField_1 = new JTextField();\n    textField_1.setColumns(10);\n\n    JLabel lblNewLabel_5 = new JLabel(\"\\u4F5C\\u8005\\u6027\\u522B\\uFF1A\");\n\n    JRadioButton rdbtnNewRadioButton = new JRadioButton(\"\\u7537\");\n    buttonGroup.add(rdbtnNewRadioButton);\n\n    JRadioButton rdbtnNewRadioButton_1 = new JRadioButton(\"\\u5973\");\n    buttonGroup.add(rdbtnNewRadioButton_1);\n\n    JLabel lblNewLabel_6 = new JLabel(\"\\u4EF7\\u683C\\uFF1A\");\n\n    textField_2 = new JTextField();\n    textField_2.setColumns(10);\n\n    JLabel lblNewLabel_7 = new JLabel(\"\\u56FE\\u4E66\\u4F5C\\u8005\\uFF1A\");\n\n    textField_3 = new JTextField();\n    textField_3.setColumns(10);\n\n    JLabel lblNewLabel_8 = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\uFF1A\");\n\n    JComboBox comboBox = new JComboBox();\n\n    JLabel lblNewLabel_9 = new JLabel(\"\\u56FE\\u4E66\\u63CF\\u8FF0\\uFF1A\");\n\n    JTextArea textArea = new JTextArea();\n    GroupLayout gl_panel_1 = new GroupLayout(panel_1);\n    gl_panel_1.setHorizontalGroup(\n        gl_panel_1.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel_1.createSequentialGroup()\n                .addGroup(gl_panel_1.createParallelGroup(Alignment.LEADING)\n                    .addGroup(gl_panel_1.createSequentialGroup()\n                        .addContainerGap()\n                        .addGroup(gl_panel_1.createParallelGroup(Alignment.LEADING, false)\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_3)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(textField, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE))\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_6)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(textField_2)))\n                        .addGap(88)\n                        .addGroup(gl_panel_1.createParallelGroup(Alignment.LEADING, false)\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_4)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(textField_1, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE))\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_7)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(textField_3)))\n                        .addGap(30)\n                        .addGroup(gl_panel_1.createParallelGroup(Alignment.LEADING, false)\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_5)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(rdbtnNewRadioButton)\n                                .addGap(18)\n                                .addComponent(rdbtnNewRadioButton_1))\n                            .addGroup(gl_panel_1.createSequentialGroup()\n                                .addComponent(lblNewLabel_8)\n                                .addGap(18)\n                                .addComponent(comboBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))\n                    .addGroup(gl_panel_1.createSequentialGroup()\n                        .addComponent(lblNewLabel_9)\n                        .addGap(6)\n                        .addComponent(textArea, GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)))\n                .addContainerGap())\n    );\n    gl_panel_1.setVerticalGroup(\n        gl_panel_1.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel_1.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(gl_panel_1.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel_3)\n                    .addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_4)\n                    .addComponent(textField_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_5)\n                    .addComponent(rdbtnNewRadioButton)\n                    .addComponent(rdbtnNewRadioButton_1))\n                .addGap(26)\n                .addGroup(gl_panel_1.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel_6)\n                    .addComponent(textField_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_7)\n                    .addComponent(textField_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_8)\n                    .addComponent(comboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                .addGroup(gl_panel_1.createParallelGroup(Alignment.LEADING)\n                    .addGroup(gl_panel_1.createSequentialGroup()\n                        .addGap(28)\n                        .addComponent(lblNewLabel_9))\n                    .addGroup(gl_panel_1.createSequentialGroup()\n                        .addGap(18)\n                        .addComponent(textArea, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n    );\n    panel_1.setLayout(gl_panel_1);\n\n    JLabel lblNewLabel = new JLabel(\"\\u56FE\\u4E66\\u540D\\u79F0\\uFF1A\");\n\n    s_bookNameTxt = new JTextField();\n    s_bookNameTxt.setColumns(10);\n\n    JLabel lblNewLabel_1 = new JLabel(\"\\u56FE\\u4E66\\u4F5C\\u8005\\uFF1A\");\n\n    s_authorTxt = new JTextField();\n    s_authorTxt.setColumns(10);\n\n    JComboBox s_bookTypeJcb = new JComboBox();\n\n    JLabel lblNewLabel_2 = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\uFF1A\");\n\n    JButton btnNewButton = new JButton(\"\\u67E5\\u8BE2\");\n    btnNewButton.setSelectedIcon(new ImageIcon(BookMangeInterFrm.class.getResource(\"/images/\\u67E5\\u8BE2.png\")));\n    btnNewButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        }\n    });\n    GroupLayout gl_panel = new GroupLayout(panel);\n    gl_panel.setHorizontalGroup(\n        gl_panel.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel.createSequentialGroup()\n                .addComponent(lblNewLabel)\n                .addPreferredGap(ComponentPlacement.UNRELATED)\n                .addComponent(s_bookNameTxt, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE)\n                .addGap(28)\n                .addComponent(lblNewLabel_1)\n                .addPreferredGap(ComponentPlacement.UNRELATED)\n                .addComponent(s_authorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                .addGap(30)\n                .addComponent(lblNewLabel_2)\n                .addPreferredGap(ComponentPlacement.RELATED)\n                .addComponent(s_bookTypeJcb, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(ComponentPlacement.RELATED, 26, Short.MAX_VALUE)\n                .addComponent(btnNewButton, GroupLayout.PREFERRED_SIZE, 75, GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n    );\n    gl_panel.setVerticalGroup(\n        gl_panel.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel.createSequentialGroup()\n                .addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel)\n                    .addComponent(s_bookNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(s_authorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(s_bookTypeJcb, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_1)\n                    .addComponent(lblNewLabel_2)\n                    .addComponent(btnNewButton))\n                .addContainerGap(30, Short.MAX_VALUE))\n    );\n    panel.setLayout(gl_panel);\n\n    table = new JTable();\n    table.setModel(new DefaultTableModel(\n        new Object[][] {\n            {null, null, null, null, null, null, null},\n            {null, null, null, null, null, null, null},\n            {null, null, null, null, null, null, null},\n        },\n        new String[] {\n            \"\\u7F16\\u53F7\", \"\\u56FE\\u4E66\\u540D\\u79F0\", \"\\u56FE\\u4E66\\u4F5C\\u8005\", \"\\u4F5C\\u8005\\u6027\\u522B\", \"\\u56FE\\u4E66\\u4EF7\\u683C\", \"\\u56FE\\u4E66\\u6982\\u8FF0\", \"\\u56FE\\u4E66\\u7C7B\\u522B\"\n        }\n    ));\n    scrollPane.setViewportView(table);\n    getContentPane().setLayout(groupLayout);\n\n}\n", "\n\n", "}", "\n\n", "\n```package view;\n\nimport java.awt.EventQueue;\n\nimport javax.swing.JInternalFrame;\nimport javax.swing.GroupLayout;\nimport javax.swing.GroupLayout.Alignment;\nimport javax.swing.JLabel;\nimport javax.swing.JTextField;\nimport javax.swing.JTextArea;\nimport javax.swing.JButton;\nimport javax.swing.LayoutStyle.ComponentPlacement;\nimport javax.swing.ImageIcon;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ActionEvent;\n\npublic class BookTypeAddInternalFrm extends JInternalFrame {\n    private JTextField bookTypeNameTxt;\nprivate JTextArea bookTypeDecscTxt;\n    /**\n     * Launch the application.\n     */\n    public static void main(String[] args) {\n        EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                try {\n                    BookTypeAddInternalFrm frame = new BookTypeAddInternalFrm();\n                    frame.setVisible(true);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    /**\n     * Create the frame.\n     */\n    public BookTypeAddInternalFrm() {\n        setClosable(true);\n        setIconifiable(true);\n        setTitle(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u6DFB\\u52A0\");\n        setBounds(100, 100, 513, 388);\n\n        JLabel lblNewLabel = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u540D\\u79F0\\uFF1A\");\n\n        JLabel lblNewLabel_1 = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u63CF\\u8FF0\");\n\n        bookTypeNameTxt = new JTextField();\n        bookTypeNameTxt.setColumns(10);\n\n        JTextArea bookTypeDecscTxt = new JTextArea();\n\n        JButton btnNewButton = new JButton(\"\\u6DFB\\u52A0\");\n        btnNewButton.setIcon(new ImageIcon(BookTypeAddInternalFrm.class.getResource(\"/images/\\u6DFB\\u52A0.png\")));\n\n        JButton btnNewButton_1 = new JButton(\"\\u91CD\\u7F6E\");\n        btnNewButton_1.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n        resetValueActionPerformed(e);\n            }\n        });\n        btnNewButton_1.setIcon(new ImageIcon(BookTypeAddInternalFrm.class.getResource(\"/images/\\u91CD\\u7F6E.png\")));\n        GroupLayout groupLayout = new GroupLayout(getContentPane());\n        groupLayout.setHorizontalGroup(\n            groupLayout.createParallelGroup(Alignment.LEADING)\n                .addGroup(groupLayout.createSequentialGroup()\n                    .addGap(85)\n                    .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)\n                        .addComponent(lblNewLabel)\n                        .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)\n                            .addComponent(btnNewButton)\n                            .addComponent(lblNewLabel_1)))\n                    .addGap(18)\n                    .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)\n                        .addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)\n                            .addComponent(bookTypeNameTxt)\n                            .addComponent(bookTypeDecscTxt, GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))\n                        .addComponent(btnNewButton_1))\n                    .addContainerGap(75, Short.MAX_VALUE))\n        );\n        groupLayout.setVerticalGroup(\n            groupLayout.createParallelGroup(Alignment.LEADING)\n                .addGroup(groupLayout.createSequentialGroup()\n                    .addGap(84)\n                    .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                        .addComponent(lblNewLabel)\n                        .addComponent(bookTypeNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                    .addGap(46)\n                    .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                        .addComponent(lblNewLabel_1)\n                        .addComponent(bookTypeDecscTxt, GroupLayout.PREFERRED_SIZE, 135, GroupLayout.PREFERRED_SIZE))\n                    .addPreferredGap(ComponentPlacement.RELATED)\n                    .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                        .addComponent(btnNewButton)\n                        .addComponent(btnNewButton_1))\n                    .addContainerGap(21, Short.MAX_VALUE))\n        );\n        getContentPane().setLayout(groupLayout);\n\n\n    }\n    private void resetValueActionPerformed(ActionEvent e) {\n        this.resetValue();\n\n    }\n\n    private void resetValue() {\n        this.bookTypeNameTxt.setText(\"\");\n        this.bookTypeDecscTxt.setText(\"\");\n    }\n\n", "\n\n", "```package view;", "\n\n", "import java.awt.EventQueue;", "\n\n", "import javax.swing.JInternalFrame;", "\nimport javax.swing.GroupLayout;", "\nimport javax.swing.GroupLayout.Alignment;", "\nimport javax.swing.JScrollPane;", "\nimport javax.swing.JTable;", "\nimport javax.swing.table.DefaultTableModel;", "\nimport javax.swing.JLabel;", "\nimport javax.swing.JTextField;", "\nimport javax.swing.JButton;", "\nimport javax.swing.LayoutStyle.ComponentPlacement;", "\nimport javax.swing.ImageIcon;", "\nimport java.awt.event.ActionListener;", "\nimport java.awt.event.ActionEvent;", "\nimport javax.swing.JPanel;", "\nimport javax.swing.border.TitledBorder;", "\nimport javax.swing.JTextArea;", "\n\n", "public class BookTypeMangerInternalFrm extends JInternalFrame {", "\n    private JTable BookTypeTable;", "\n    private JTextField textField;", "\n    private JTextField idTxt;", "\n    private JTextField bookTypeTxt;", "\n\n", "/**\n * Launch the application.\n */\npublic static void main(String[] args) {\n    EventQueue.invokeLater(new Runnable() {\n        public void run() {\n            try {\n                BookTypeMangerInternalFrm frame = new BookTypeMangerInternalFrm();\n                frame.setVisible(true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    });\n}\n\n/**\n * Create the frame.\n */\npublic BookTypeMangerInternalFrm() {\n    setIconifiable(true);\n    setTitle(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u7BA1\\u7406\");\n    setClosable(true);\n    setBounds(100, 100, 606, 639);\n\n    JScrollPane scrollPane = new JScrollPane();\n\n    JLabel lblNewLabel = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u67E5\\u8BE2\\uFF1A\");\n\n    textField = new JTextField();\n    textField.setColumns(10);\n\n    JButton button = new JButton(\"\\u67E5\\u8BE2\");\n    button.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        }\n    });\n    button.setIcon(new ImageIcon(BookTypeMangerInternalFrm.class.getResource(\"/images/\\u67E5\\u8BE2.png\")));\n\n    JPanel panel = new JPanel();\n    panel.setBorder(new TitledBorder(null, \"\\u8868\\u5355\\u64CD\\u4F5C\", TitledBorder.LEADING, TitledBorder.TOP, null, null));\n    GroupLayout groupLayout = new GroupLayout(getContentPane());\n    groupLayout.setHorizontalGroup(\n        groupLayout.createParallelGroup(Alignment.TRAILING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)\n                .addContainerGap())\n            .addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()\n                .addGap(66)\n                .addComponent(lblNewLabel)\n                .addGap(43)\n                .addComponent(textField, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(ComponentPlacement.RELATED, 74, Short.MAX_VALUE)\n                .addComponent(button)\n                .addGap(23))\n            .addGroup(Alignment.LEADING, groupLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(panel, GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)\n                .addContainerGap())\n    );\n    groupLayout.setVerticalGroup(\n        groupLayout.createParallelGroup(Alignment.LEADING)\n            .addGroup(groupLayout.createSequentialGroup()\n                .addGap(52)\n                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel)\n                    .addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(button))\n                .addGap(41)\n                .addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 204, GroupLayout.PREFERRED_SIZE)\n                .addGap(26)\n                .addComponent(panel, GroupLayout.PREFERRED_SIZE, 225, GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(28, Short.MAX_VALUE))\n    );\n\n    JLabel lblNewLabel_1 = new JLabel(\"\\u7F16\\u53F7\\uFF1A\");\n\n    idTxt = new JTextField();\n    idTxt.setColumns(10);\n\n    JLabel lblNewLabel_2 = new JLabel(\"\\u56FE\\u4E66\\u7C7B\\u522B\\u540D\\u79F0\\uFF1A\");\n\n    bookTypeTxt = new JTextField();\n    bookTypeTxt.setColumns(10);\n\n    JLabel lblNewLabel_3 = new JLabel(\"\\u63CF\\u8FF0\\uFF1A\");\n\n    JTextArea bookTypeDescTxt = new JTextArea();\n\n    JButton btnNewButton = new JButton(\"\\u4FEE\\u6539\");\n    btnNewButton.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        }\n    });\n    btnNewButton.setIcon(new ImageIcon(BookTypeMangerInternalFrm.class.getResource(\"/images/\\u4FEE\\u6539.png\")));\n\n    JButton btnNewButton_1 = new JButton(\"\\u5220\\u9664\");\n    btnNewButton_1.addActionListener(new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n        }\n    });\n    btnNewButton_1.setIcon(new ImageIcon(BookTypeMangerInternalFrm.class.getResource(\"/images/\\u5220\\u9664.png\")));\n    GroupLayout gl_panel = new GroupLayout(panel);\n    gl_panel.setHorizontalGroup(\n        gl_panel.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel.createSequentialGroup()\n                .addGap(38)\n                .addGroup(gl_panel.createParallelGroup(Alignment.LEADING, false)\n                    .addComponent(lblNewLabel_3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(lblNewLabel_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(32)\n                .addGroup(gl_panel.createParallelGroup(Alignment.LEADING)\n                    .addGroup(gl_panel.createSequentialGroup()\n                        .addGroup(gl_panel.createParallelGroup(Alignment.LEADING)\n                            .addGroup(gl_panel.createSequentialGroup()\n                                .addComponent(idTxt, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)\n                                .addGap(56)\n                                .addComponent(lblNewLabel_2)\n                                .addPreferredGap(ComponentPlacement.RELATED)\n                                .addComponent(bookTypeTxt, GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))\n                            .addComponent(bookTypeDescTxt, GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))\n                        .addContainerGap())\n                    .addGroup(Alignment.TRAILING, gl_panel.createSequentialGroup()\n                        .addComponent(btnNewButton)\n                        .addPreferredGap(ComponentPlacement.RELATED, 194, Short.MAX_VALUE)\n                        .addComponent(btnNewButton_1)\n                        .addGap(75))))\n    );\n    gl_panel.setVerticalGroup(\n        gl_panel.createParallelGroup(Alignment.LEADING)\n            .addGroup(gl_panel.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)\n                    .addComponent(lblNewLabel_1)\n                    .addComponent(idTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_2)\n                    .addComponent(bookTypeTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))\n                .addGap(18)\n                .addGroup(gl_panel.createParallelGroup(Alignment.LEADING)\n                    .addComponent(bookTypeDescTxt, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)\n                    .addComponent(lblNewLabel_3))\n                .addPreferredGap(ComponentPlacement.UNRELATED)\n                .addGroup(gl_panel.createParallelGroup(Alignment.LEADING)\n                    .addComponent(btnNewButton_1)\n                    .addComponent(btnNewButton))\n                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n    );\n    panel.setLayout(gl_panel);\n\n    BookTypeTable = new JTable();\n    BookTypeTable.setModel(new DefaultTableModel(\n        new Object[][] {\n            {null, null, null},\n            {null, null, null},\n        },\n        new String[] {\n            \"\\u7F16\\u53F7\", \"\\u56FE\\u4E66\\u7C7B\\u522B\\u540D\\u79F0\", \"\\u56FE\\u4E66\\u7C7B\\u522B\\u63CF\\u8FF0\"\n        }\n    ));\n    scrollPane.setViewportView(BookTypeTable);\n    getContentPane().setLayout(groupLayout);\n\n}\n", "\n\n", "}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "你试试path = QFileDialog.getOpenFileName(filter='Python (*.py)')\r\n\r\n如果不行，你试下try来检查错误，不会直接退出\r\n\r\n```\r\ndef loadFile(self):\r\n\t\ttry:\r\n\t\t\t\t\tpath = QFileDialog.getOpenFileName(filter='Python (*.py)')\r\n\t\t\t\t\tf = open(path[0],'r+',encoding='UTF-8')\r\n\t\t\t\t\twith f:\r\n\t\t\t\t\t\t\tself.data = \"\".join(f.readlines())\r\n\t\t\t\t\t\t\tself.textEdit.setText(self.data)\r\n\t\texcept Exception as e:\r\n           print(e)\r\n```\r\n这样就应该不会报错了\r\n```\r\npath = QFileDialog.getOpenFileName(filter='Python (*.py)')\r\nif path!=\"\":\r\n\tf = open(path[0],'r+',encoding='UTF-8')\r\n\twith f:\r\n\t\tself.data = \"\".join(f.readlines())\r\n\t\tself.textEdit.setText(self.data)\r\n```", "Konwledge_Point": "主程序", "Question": ["[PyQT5] QFileDialog窗口关闭时主窗口也关闭", ["新手，在尝试写一个pyqt5的小软件。", "\n\n", "现在是要点击button后，出现QFileDialog文件对话框，打开文件或保存文件", "\n\n", "但是debug时点击button，打开对话框，点击关掉对话框或取消选择时，整个界面都会退出，只有Process finished with exit code 1的提示", "\n\n", "我希望关闭窗口时，主窗口不能被影响，请问哪里出错？", "\n\n", "以下是相关代码", "\n\n", "    def __init__(self,parent=None):\n\n        #button clicked\n        self.loadFileButton.clicked.connect(self.loadFile)\n        self.generateButton.clicked.connect(self.generateFile)\n\n\n\n\n    #loadFileButton 加载配置文件到textEdit\n    def loadFile(self):\n        path = QFileDialog.getOpenFileName(self,\n                                                '加载配置文件',\n                                                '',\n                                                'Python (*.py)')\n        f = open(path[0],'r+',encoding='UTF-8')\n        with f:\n            self.data = \"\".join(f.readlines())\n            self.textEdit.setText(self.data)\n\n    #generateButton 保存配置文件\n    def generateFile(self):\n        self.data = self.textEdit.toPlainText()\n        path = QFileDialog.getSaveFileName(self,\n                                               \"保存配置文件\",\n                                               '',\n                                               'Python (*.py)')\n        with open(path[0],'w',encoding='UTF-8') as f:\n            f.write(self.data)\n"]], "Tag": "程序设计"}
{"Answer": "解决办法： 通过窗口标题或者主窗体类名，调用API FindWindow()来获取窗口句柄，可以成功！包括托盘的隐藏窗口", "Konwledge_Point": "主程序", "Question": ["C#获取指定进程的主窗口句柄", ["方法一：", "\n            通过在C#获取根据进程名获取进程Process，然后得到句柄 process.MainWindowHandle   (获取关联进程主窗口的窗口句柄)", "\n\n", "方法二：", "\n            通过调用windows底层API来获取指定进程的窗口句柄：主要用到两个", "\n            EnumWindows", "\n            GetWindowThreadProcessId", "\n\n", "这两种方式对于大部分windows窗体都能获取到句柄；但是有些窗口，比如飞秋，获取到窗口句柄始终为0；", "\n\n", "求各位大神赐教啊！！！！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把这个写在缓存里&amp;#xff0c;如果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;:[{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;主灯照明控制1&amp;#39;&lt;/span&gt;,statu:&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;},\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;主灯照明控制2&amp;#39;&lt;/span&gt;,statu:&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;},\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;主灯照明控制3&amp;#39;&lt;/span&gt;,statu:&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;},\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;主灯照明控制4&amp;#39;&lt;/span&gt;,statu:&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;},\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;name&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;主灯照明控制5&amp;#39;&lt;/span&gt;,statu:&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;}\n  ]\n\n&lt;span class=\"hljs-comment\"&gt;// 把list写入缓存‘list’里&lt;/span&gt;\nwx.setStorageSync(&lt;span class=\"hljs-string\"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;);\n\n&lt;span class=\"hljs-comment\"&gt;// 每次打开页面读取list 缓存&lt;/span&gt;\nvar &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;&amp;#61; wx.getStorageSync(&lt;span class=\"hljs-string\"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序switch状态不保持", ["就是进入页面打开switch，然后回退之后再进入这个页面又变成都是关的了，想知道怎么保持打开状态", "\n", "<", "view", " ", "wx:for", "=", "\"", "{{", "list", "}}", "\"", " ", "class", "=", "\"father-list\"", " ", "data-index", "=", "\"", "{{", "index", "}}", "\"", " ", "bindtap", "=", "\"getTrueFalse\"", ">", "\n", "<", "view", " ", "class", "=", "\"text\"", ">", "{{", "item.name", "}}", "</", "view", ">", "\n", "<", "switch", "  ", "class", "=", "\"son-item\"", " ", "bindchange", "=", "\"transfer\"", " ", "checked", "=", "\"", "{{", "statu", "}}", "\"", ">", "</", "switch", ">", "\n", "</", "view", ">", "\n", "\n", "\n", "var", " app=", "getApp", "();\n", "var", " value;\n \n", "//直接调用上一个页面的 setData() 方法，把数据存到上一个页面中去", "\n\n", "Page", "({\n  ", "data", ": {\n    ", "list", ":[{", "name", ":", "'主灯照明控制1'", ",", "statu", ":", "''", "},\n    {", "name", ":", "'主灯照明控制2'", ",", "statu", ":", "''", "},\n    {", "name", ":", "'主灯照明控制3'", ",", "statu", ":", "''", "},\n    {", "name", ":", "'主灯照明控制4'", ",", "statu", ":", "''", "},\n    {", "name", ":", "'主灯照明控制5'", ",", "statu", ":", "''", "}\n  ]\n  },\n", "transfer", ":", "function", "(", "e", "){\n  value=e.", "detail", ".", "value", ";\n},\n", "getTrueFalse", ":", "function", "(", "e", "){\n  ", "var", " list=", "this", ".", "data", ".", "list", ";\n  ", "var", " index=e.", "currentTarget", ".", "dataset", ".", "index", ";\n  ", "this", ".", "setData", "({\n    [", "`list[", "${index}", "].statu`", "]:value", "//修改数组中某个对象的某个属性，写法复杂，value是全局变量，transfer给的值", "\n  })\n})\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "看看别人是怎样解决的\r\n[url]http://rainytooo.iteye.com/blog/617765[/url]", "Konwledge_Point": "主程序", "Question": ["Ext treepanel  tabpanel 结合问题", ["    现在从menu.json文件中读取菜单，点击左侧的树形菜单，右侧该如何动态加载相关模块的信息？  请各位指教 谢谢~", "\n\n", " ", "\n\n", " ", "\n\n", "    menu.json:", "\n\n", "  ", "\n\n", "{\n\"code\":\"11\",\n\"name\":\"信息维护\",\n\"href\":\"\",\n\"iconCls\":\"information\",\n\"parentcode\":\"\"\n},{\n\"code\":\"1101\",\n\"name\":\"机构维护\",\n\"href\":\"agency\",\n\"iconCls\":\"building\",\n\"parentcode\":\"11\"\n},{\n\"code\":\"110101\",\n\"name\":\"三级菜单\",\n\"parentcode\":\"1101\"\n}", "\n\n", "AccordinTreePanel.js代码", "\n\n", " ", "\n\n", "Ext.ns(\"QM.ui\");\n\nQM.ui.MenuPanel = Ext.extend(Ext.Panel, {\n    /**\n     * @cfg(url) 发送请求的地址\n     */\n    /**\n     * @cfg(root) json数组的根字符串\n     */\n    constructor: function(config){\n        QM.ui.MenuPanel.superclass.constructor.call(this, Ext.apply({ \n            maxSize: 240,\n            minSize: 210,\n         //   collapseMode: 'mini',\n            collapsible : true, \n          //  animCollapse: false,\n            id: 'menuPanel',\n            width: 210,\n            header: true,\n            split: true,\n            layout: 'accordion',\n            layoutConfig : {\n                // 展开折叠是否有动画效果\n                animate : true\n            },\n            region: 'west',           \n            autoScroll: true,\n            margins:'0 0 0 5',\n            cmargins: '0 0 0 0',\n            ref: 'menuPanel'\n            \n        }, config || {}));\n    },\n    initComponent: function(){\n        QM.ui.MenuPanel.superclass.initComponent.call(this);\n        this.addEvents(        /**\n         * @event itemclick  树结点被点击时触发  参数：node 当前结点对象，record 当前结点对应record对象\n         */\n        'click',        /**\n         * @event afterload 菜单项加载完毕后触发\n         */\n        'afterload');\n        if (!this.store) {\n            this.store = new Ext.data.JsonStore({\n                url: this.url,\n                root: this.root,\n                fields: ['code', 'name', 'parentcode', 'iconCls', 'href']\n            });\n        }\n        this.store.load({\n            callback: this.loadTrees,\n            scope: this\n        });\n    },\n    loadTrees: function(records, o, s){\n        var pnodes, trees = [], tree;\n        this.store.sort('code');\n        for (var i = 0; i < records.length; i++) {\n            var record = records[i];\n            if (!record.get('parentcode')) {\n                tree = this.creatTreeConfig(record);\n                trees.push(tree);\n                pnodes = [];\n                pnodes.push(tree.root);\n            }\n            else {\n                var next_record = records[i + 1];\n                var isLeaf = !next_record || next_record.get('parentcode') != record.get('code');\n                this.addTreeNode(pnodes, record, isLeaf);\n            }\n        }\n        Ext.each(trees, function(tree){\n            this.add(tree);\n        }, this);\n        this.mon(this.el, 'click', this.onClick, this);\n        this.doLayout();\n        this.store.destroy();\n        this.fireEvent('afterload', this);\n    },\n    //@public 根据结点id找到结点对象\n    getNodeById: function(id){\n        var node, trees = this.findByType('treepanel', true);\n        Ext.each(trees, function(tree){\n            node = tree.getNodeById(id);\n            return !node;//找到的话返回false\n        });\n        return node;\n    },\n    onClick: function(e, t, o){\n        if (Ext.fly(t).hasClass('x-tree-ec-icon')) {//点击伸展按钮时无视\n            return;\n        }\n        var el, id, node;\n        if (el = e.getTarget('.x-tree-node-el', 3, true)) {\n            e.stopEvent();\n            id = el.getAttributeNS('ext', 'tree-node-id');\n            node = this.getNodeById(id);\n            var workPanel = this.ownerCt.workPanel;\n            workPanel.showTab(node);\n            this.fireEvent('click', this, node);\n        }\n    },\n    creatTreeConfig: function(record){\n        var config = {\n            xtype: 'treepanel',\n            autoScroll: true,\n            rootVisible: false,\n          //  useArrows:true,  Vista-style的箭头\n            lines: true,\n            title: record.get('name'),\n            iconCls: record.get('iconCls'),\n            border:false,\n            root: {\n                nodeType: 'async',\n                expanded: true,\n                id: record.get('code'),\n                children: []\n            },\n            listeners: {\n                'deactivate': function(tree){\n                    tree.getSelectionModel().clearSelections(true);\n                }\n            }\n        };\n        return config;\n    },\n    addTreeNode: function(pnodes, record, isLeaf){\n        var len = pnodes.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (pnodes[i].id != record.get('parentcode')) {\n                pnodes.pop();\n            }\n            else {\n                var parent = pnodes[i].children;\n                var node = {\n                    text: record.get('name'),\n                    id: record.get('code'),\n                    iconCls: record.get('iconCls'),\n                    href: record.get('href'),\n                    leaf: isLeaf\n                };\n                if (!isLeaf) {\n                    node.children = [];\n                    pnodes.push(node);\n                }\n                parent.push(node);\n                return;\n            }\n        }\n    },\n    \n    //@public根据node对象/id显示结点所在tree并选中\n    selectNode: function(node){\n        var tree;\n        if (Ext.isString(node)) {\n            node = this.getNodeById(node);\n        }\n        tree = node.getOwnerTree();\n        this.getLayout().setActiveItem(tree.getId());\n        tree.expandPath(node.getPath());\n        tree.getSelectionModel().select(node);\n    }\n});\n\n\n//showTab用于显示子组件，loadChild用于子组件的加载\nQM.ui.WorkPanel = Ext.extend(Ext.TabPanel, {\n    ref: 'workPanel',\n    region: 'center',\n    resizeTabs: true,\n    minTabWidth: 135,\n    tabWidth: 135,\n    plugins: new Ext.ux.TabCloseMenu(),\n    enableTabScroll: true,\n    activeTab: 0,\n    beforeInit: Ext.emptyFn,\n    loadChild: Ext.emptyFn,\n    initComponent: function(){\n        QM.ui.WorkPanel.superclass.initComponent.call(this);\n        this.on('tabchange', this.onChange);\n    },\n    onChange: function(tp, tab){\n        var menuPanel = this.ownerCt.menuPanel;\n        var tree;\n        if (tab.itemId) {\n            menuPanel.selectNode(tab.itemId);\n        }\n        else //选择主页时清空当前树的选择项\n             if (tree = menuPanel.getLayout().activeItem) {\n                tree.getSelectionModel().clearSelections(true);\n            }\n    },\n    //@public根据node或id显示对象panel没有的话创建\n    showTab: function(node){\n        var menuPanel = this.ownerCt.menuPanel;//找到菜单面板\n        if (Ext.isString(node)) {\n            node = menuPanel.getNodeById(node);\n            if (!node) {\n                return;\n            }\n        }\n        var tab, attrs = node.attributes;\n        //只有没有下级的才能显示在右侧  \n        if(attrs.leaf){\n          if (!this.getItem(attrs.id)) {\n            tab = this.add({\n                itemId: attrs.id,\n                title: attrs.text,\n                iconCls: attrs.iconCls,\n                closable: true,\n                layout: 'fit'\n            })\n            var child = this.loadChild(tab, node);\n            tab.add(child || {});\n            this.doLayout();\n         }\n        this.setActiveTab(attrs.id);\n        }\n    }\n})", "\n\n", "login.jsp 页面", "\n\n", " ", "\n\n", " ", "\n\n", "<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>web管理登录</title>\n  <!-- 自定义Css样式 -->\n  <link href=\"<%=request.getContextPath() %>/mycss/houfei-loading.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <link href=\"<%=request.getContextPath() %>/mycss/houfei-icon.css\" rel=\"stylesheet\" type=\"text/css\" />\n <link rel=\"stylesheet\" type=\"text/css\" href=\"<%=request.getContextPath() %>/css/CssStyle.css\"/>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"<%=request.getContextPath() %>/css/themes.css\"/>\n  <!-- Ext 所需的Js和 Css 文件 -->\n  <link href=\"<%=request.getContextPath() %>/ext-3.2.1/resources/css/ext-all.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/ext-3.2.1/ext-base.js\"></script>\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/ext-3.2.1/ext-all.js\"></script>\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/ext-3.2.1/ext-lang-zh_CN.js\" charset=\"utf-8\"></script>\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/js/TabCloseMenu.js\"></script>\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/js/FileUploadField.js\"></script>\n  <!--  自定义工具类 -->\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/js/GridPanelUtils.js\"></script>\n  <!-- 主页 -->\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/myjs/AccordinTreePanel.js\" charset=\"utf-8\"></script>\n  <!-- 各分模块 -->\n <!-- 用户角色 -->\n <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/myjs/userrole/AddUserRoleWindow.js\" charset=\"utf-8\"></script>\n <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/myjs/userrole/EditUserRoleWindow.js\" charset=\"utf-8\"></script>\n <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/myjs/userrole/UserRoleForm.js.js\" charset=\"utf-8\"></script>\n  <script type=\"text/javascript\" src=\"<%=request.getContextPath() %>/myjs/userrole/UserRoleGridPanel.js\" charset=\"utf-8\"></script>\n <!-- 主程序 -->\n  <script type=\"text/javascript\">\n            Ext.ns('App');\n            //菜单面板\n            App.MenuPanel = QM.ui.MenuPanel.extend({\n                root: 'menus',\n                ref: 'menuPanel',\n                url: '/sdcdmp_czfs/myjs/menu.json',\n                title:'导航菜单',\n                iconCls:'houfei-icon-plugin',\n              //  tbar:[{}],\n                listeners: {\n                    'click': Ext.emptyFn\n                }\n            });\n            \n            //工作区面板\n            App.WorkPanel = QM.ui.WorkPanel.extend({\n                constructor: function(config){\n                    config = config || {};\n                    Ext.applyIf(config, {\n                        items: [{\n                            title: '首页',\n                            iconCls:'houfei-homeTabIcon',\n                            html: '工作平台'\n                        }]\n                    })\n                    App.WorkPanel.superclass.constructor.call(this, config);\n                },\n                //tab：子组件 node：树节点 返回待添加组件\n                loadChild: function(tab, node){\n                        var attrs=node.attributes;\n                       // alert(\"加载子组件:\"+tab.itemId+\"===\"+attrs.id+\"href:\"+attrs.href);\n                }\n            });\n            //负责直连工作区\n            App.afterLoad = function(viewport){\n                var qstr = window.location.href.split('?')[1];\n                if (qstr) {\n                    var ps = Ext.urlDecode(qstr);\n                    var code = ps['code'];\n                    viewport.menuPanel.on('afterload', function(){\n                        viewport.workPanel.showTab(code);\n                        viewport.doLayout();\n                    }, null, {\n                        single: true\n                    });\n                }\n            }\n            \n            Ext.onReady(function(){\n                Ext.QuickTips.init();\n                Ext.BLANK_IMAGE_URL = '/sdcdmp_czfs/ext-3.2.1/resources/images/default/tree/s.gif';\n             //   ThemeManager.init('header');\n                var menupanel = new App.MenuPanel();\n                var workpanel = new App.WorkPanel();\n                var view = new Ext.Viewport({\n                    layout: 'border',\n                    items: [{\n                        cls: 'docs-header',\n                        height: 30,\n                        region: 'north',\n                        xtype: 'box',\n                        el: 'header',\n                        border: false\n                    }, {\n                        region: 'south',\n                        xtype: 'box',\n                        el: 'bottom'\n                    }, menupanel, workpanel]\n                });\n              \n                App.afterLoad(view);\n            });\n        </script>\n</head>\n \n<body>\n    <div id=\"header\">\n            <div class=\"api-title\">\n                      web管理\n            </div>\n        </div>\n        <div id=\"bottom\">\n        </div>\n</body>\n</html>", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以换个版本试试, 我之前m1用5.14.2运行没反应, 和你一样界面都出不来.&lt;br /&gt;换了个5.15.2就正常了, 更加新的我记得也可以, 不过我要用的串口库被Qt删了, 5.15还有&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Mac版QT运行项目的程序未响应，怎么办？", ["我是M1Mac，求助！！！", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/444462526176116.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a&amp;#43;b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;score&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);}\n     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);}\n      &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);}\n       &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);}\n       &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);}\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,a,b,c;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n{\n    c&amp;#61;a&amp;#43;b;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,c);\n    a&amp;#61;b;\n    b&amp;#61;c;\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n    a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1 &amp;#34;&lt;/span&gt;);\n}\n}\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;biao&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;lt;&amp;#61; i)&lt;span class=\"hljs-comment\"&gt;//防止输出两遍&lt;/span&gt;\n            {\n                sum &amp;#61; i * j;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;, i, j, sum);\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-----------小程序锦集----------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1、两数求和\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2、成绩等级判断\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3、输出非波拉契数列的前N项\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4、输出99乘法表\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0、Bye-Bye\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n,result&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b,s;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(;;)\n    {\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的选择&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (i)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个数&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;结果是&amp;#xff1a;%.2f\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(a,b));\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的成绩&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;s);\n        &lt;span class=\"hljs-built_in\"&gt;score&lt;/span&gt;(s);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入N的值&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;fib&lt;/span&gt;(n);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;biao&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n    result&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;非法输入&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(result&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n}\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n    \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["编写一个简单的c语言程序", ["1.编写一个C语言程序，可以在主界面选择各种功能，界面可以参考下图", "2.程序应包括但不限于以下功能①输入两个数，输出这两个数的和②根据输入的成绩，输出相应等级③输出斐波拉契数列的前N项，N由用户输入④输出九九乘法表⑤自选项目，功能数量不能少于5个。", "3.所有子功能必须以自定义函数的形式定义和使用。"]], "Tag": "程序设计"}
{"Answer": "http://blog.sina.com.cn/s/blog_53061af00100mirh.html", "Konwledge_Point": "主程序", "Question": ["程序启动的时候显示一个进度条窗口，当主窗体加载后，自动消失怎么实现？", ["程序启动的时候显示一个进度条窗口，当主窗体加载后，自动消失怎么实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The subprocess should continue to run after your process ends, as long as it ends cleanly, which won't happen if you hit &lt;code&gt;^C&lt;/code&gt;.\nWhat you can do is intercept the signals sent to your process so you can end cleanly.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sigchan := make(chan os.Signal, 1)\nsignal.Notify(sigchan,\n    syscall.SIGINT,\n    syscall.SIGKILL,\n    syscall.SIGTERM,\n    syscall.SIGQUIT)\ngo func() {\n    s := &amp;lt;-sigchan\n    // do anything you need to end program cleanly\n}()\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["在golang中程序退出后如何保持子进程运行？", ["\n\n", "i noticed that subprocesses created using ", "Start()", " will be terminated after program exit, for example:\n", "\n\n", "package main\n\nimport \"os/exec\"\n\nfunc main() {\n    cmd := exec.Command(\"sh\", \"test.sh\")\n    cmd.Start()\n}\n", "\n\n", "when ", "main()", " exits, ", "test.sh", " will stop running", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;小程序把页面设置为组件的是时候&amp;#xff0c;生命周期函数onLoad&amp;#xff0c;onShow等需要改变为组件的什么周期来执行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;Component({\n  lifetimes: {\n    attached: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;() {\n      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 在组件实例进入页面节点树时执行\n    },\n    detached: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;() {\n      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 在组件实例被从页面节点树移除时执行\n    },\n  },\n  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 以下是旧式的定义方式&amp;#xff0c;可以保持对 &amp;lt;&lt;span class=\"hljs-number\"&gt;2.2&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; 版本基础库的兼容\n  attached: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;() {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 在组件实例进入页面节点树时执行\n  },\n  detached: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;() {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 在组件实例被从页面节点树移除时执行\n  },\n  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; ...\n})\n&amp;#96;&amp;#96;&amp;#96;javascript\n\n可见官方组件通信及组件生命周期函数&amp;#xff0c;\nhttps:&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;developers.weixin.qq.com&lt;span class=\"hljs-regexp\"&gt;/miniprogram/&lt;/span&gt;dev&lt;span class=\"hljs-regexp\"&gt;/framework/&lt;/span&gt;custom-component/\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序组件components不触发onLoad，在哪里进行加载页面的赋值？", ["微信小程序开发中，通过“usingComponents”把页面变成了组件，需要在这个组件中获取时间，编写的new Date（）来获取，放在了onLoad（）生命周期函数中，加载时并发现不访问该函数。", "请问在一个组件中，如何获取时间（难道必须在主页面获取再传递过去？组件中我还要更改时间呢，不能直接获取太麻烦），或者在哪里给参数赋值（有哪个生命周期函数可以用来获取时间之类的数值）？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint add(int **p,int n)\n{\n\tint sum &amp;#61; 0;\n\tfor(int i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t{\n\t\tsum &amp;#43;&amp;#61; p[i][i];\n\t\tsum &amp;#43;&amp;#61; p[i][n-1-i];\n\t}\n\t\n\treturn sum;\n\t\n}\n\nvoid fun(int **p,int n)\n{\n\tint k;\n\tfor(int i&amp;#61;0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n\t\tfor(int j&amp;#61;i&amp;#43;1;j&amp;lt;n;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tk &amp;#61; p[i][j];\n\t\t\tp[i][j] &amp;#61; p[j][i];\n\t\t\tp[j][i] &amp;#61; k;\n\t\t}\n}\nvoid main()\n{\n\tint n &amp;#61; 4;\n\tint **p &amp;#61; new int*[n];\n\tfor(int i&amp;#61;0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n\t{\n\t\tp[i] &amp;#61; new int[n];\n\t\tfor(int j&amp;#61;0;j&amp;lt;n;j&amp;#43;&amp;#43;)\n\t\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;p[i][j]);\n\t}\n\n\n\tint sum &amp;#61; add(p,n);\n\tprintf(&amp;#34;主副对角线之和&amp;#61;%d\\n&amp;#34;,sum);\n\n\tfun(p,n);\n\tfor (int i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (int j &amp;#61; 0;j &amp;lt; n;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tprintf(&amp;#34;%d &amp;#34;,p[i][j]);\n\t\t}\n\t\tprintf(&amp;#34;\\n&amp;#34;);\n\t}\n\tgetchar();\n\tgetchar();\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["C语言 用函数Add（）函数求一个4*4二维数组的主副对角元素之和，函数fun（）求该二维数组的转置", ["C语言 用函数Add（）函数求一个4*4二维数组的主副对角元素之和，函数fun（）求该二维数组的转置--二维数组"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;主机和从机的程序都做好了&amp;#xff0c;还有proteus仿真文件。请采纳&amp;#xff0c;采纳后私信发你。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["求一个多机通信的单片机程序？", ["设置1个主机和2个从机，从机向主机发送数据；", "\n", "每个从机各有一个按键和一个数码管，每按动一次按键，向主机发送一位16进制数据，同时数码管显示所发送的数据；", "\n", "主机有两个数码管，分别用来显示从不同从机发过来的数据。", "希望得到一个完整的程序"]], "Tag": "程序设计"}
{"Answer": "你创建的是空工程，肯定无法运行，根据你描述你应该是要做一个mfc工程，那么创建个对话框即可。", "Konwledge_Point": "主程序", "Question": ["Opengl小程序 VS2019  fatal error C1107: 未能找到程序集“platform.winmd”: 请使用 /AI 或通过设置 LIBPATH 环境变量指定程序集搜索路径", ["操作系统：WIN10", "\n\n", "平台:VS 2019 Community", "\n\n", "工程类型：C++空程序", "\n\n", "目标程序：Opengl小程序", "\n\n", "原博客网址：", "https://blog.csdn.net/Jennifer_Love_Frank/article/details/85012774", "\n\n", "因为博主不予回答指导，故在此进行请教各位大佬们，只要能够在本机上正常运行即可", "\n这里由于题主是一名小白，在网上查询的水平不足，也没有找到确实能用的解决方法", "\n麻烦各位大佬，细讲一下（包含不限于：驱动下载啊，文件路径如何设置，项目属性设置，等等很入门等级的问题），感谢大佬们", "\n如果哪位大佬可以在 自己电脑上 以 上述环境 成功运行的话，请务必私聊指导一下,感谢！", "\n\n", "(以下附一些图)(该题所采纳的回答是不对的，请各位注意)（有想法的可以在底底下回复一下，我们私下交流）", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"hljs\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string&amp;gt;\n//判断是否是素数\nbool isSushu(int n)\n{\n\tif(n &amp;lt;2) return false;\n\tfor (int i &amp;#61; 2; i &amp;lt; n; i&amp;#43;&amp;#43;)\n\t{\n\t\tif (n %i &amp;#61;&amp;#61; 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n//求大于n的最小素数\nint sushu(int n)\n{\n\tint d &amp;#61; n&amp;#43;1;\n\twhile(true)\n\t{\n\t\tint i &amp;#61; 2;\n\t\tfor (; i &amp;lt; d; i&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tif (d %i &amp;#61;&amp;#61; 0)\n\t\t\t{\n\t\t\t\td&amp;#43;&amp;#43;;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (i &amp;#61;&amp;#61; d)\n\t\t{\n\t\t\treturn d;\n\t\t}\n\t}\n}\n\n\nint main()\n{\n\tint a[4][4] &amp;#61; {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n\tfor (int i &amp;#61; 0; i &amp;lt; 4;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor(int j &amp;#61; i; j &amp;lt; 4; j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tif (isSushu(a[i][j]))\n\t\t\t{\n\t\t\t\ta[i][j] &amp;#61; sushu(a[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (int i &amp;#61;0; i &amp;lt; 4;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (int j &amp;#61; 0; j &amp;lt; 4;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tprintf(&amp;#34;%d &amp;#34;,a[i][j]);\n\t\t}\n\t\tprintf(&amp;#34;\\n&amp;#34;);\n\t}\n\t\n\tgetchar();\n\tgetchar();\n\treturn 0;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["有一道c++的编程题 有大神会嘛", ["【题目】编写程序,将4×4矩阵包括主对角线在内的右上三角区域内的数组元素做如\n下判断和变换:如果该数是素数则用大于该数的最小素数替换;否则保持原数不变,同时\n统计包括主对角线在内的右上三角区域内的元素中素数的个数\n程序的输出结果为:\n变换前的数组a\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n变换后的数组a\n1 3 5 4\n5 6 11 8\n9 10 13 12\n13 14 15 16 \n素数个数:4"]], "Tag": "程序设计"}
{"Answer": "这说明服务器本身开着，web服务器可以运转，但是你的程序出错，检查下是否有库或者文件丢失，或者数据库、服务器配置有问题。\r\n再不行和主机商联系下。", "Konwledge_Point": "主程序", "Question": ["无法访问虚拟主机上的Perl程序", ["我将本地写好Perl程序上传到虚拟主机上public_html目录，权限也设置了，", "\n但是就是无法访问，提示：", "\nInternal Server Error", "\n\n", "The server encountered an internal error or misconfiguration and was unable to complete your request.", "\n\n", "Please contact the server administrator, ", "webmaster@zxd.com.au", " and inform them of the time the error occurred, and anything you might have done that may have caused the error.", "\n\n", "More information about this error may be available in the server error log.", "\n\n", "Additionally, a 404 Not Found error was encountered while trying to use an ErrorDocument to handle the request.", "\n\n", "Apache/2.2.29 (Unix) mod_ssl/2.2.29 OpenSSL/1.0.1e-fips mod_bwlimited/1.4 Server", "\n虚拟主机是www.crazydomains.com.au上买的，第一次搞，求教"]], "Tag": "程序设计"}
{"Answer": "这个功能叫面包屑导航， 网站上用得较多。\r\n\r\n那你得定义单向链表类似的类， 并在各个窗体之间传递这个东西。\r\n不过说实话， 没啥用， 原本是网站的功能， 强行弄到窗体上来. \r\n网站上点链接可以随意跳转， 你窗体要做到何其之难！", "Konwledge_Point": "主程序", "Question": ["C#窗体应用程序当前位置功能的实现", ["C#窗体应用程序，如何实现当前位置这一功能，比如“登录界面》主界面》子界面”，谢谢"]], "Tag": "程序设计"}
{"Answer": "这个简单，访问控制数量上减一，没有了就跳转就行了，php代码 http://www.58nin.com 换成你要的网址就可以了：\r\n\r\n```\r\n &lt;?php\r\n $counter_fname='counter.txt';//动态获取需要统计的页面，并进行命名\r\n if(!file_exists($counter_fname)){\r\n\t file_put_contents($counter_fname,\"300\");\r\n\t }\r\n $counter=file_get_contents($counter_fname);  //将文件的内容读入到一个字符串中\r\n $counter-=0;\r\n if($counter==0){header(\"Localtion:http://www.58nin.com\");}\r\n $counter--;\r\n  if($fp=fopen($counter_fname,'w')){\r\n \tfputs($fp,$counter);//输出统计数据\r\n\tfclose($fp);\r\n  }\r\n  echo \"document.write('$counter');\";\r\n  \r\n/*  \r\n下面一句话就可以了：\r\n还有次可以&lt;font color=\"#FF0000\"&gt;&lt;script type=\"text/javascript\" src=\"count.php\"&gt;&lt;/script&gt;&lt;/font&gt;访问本页面*/\r\n?&gt;\r\n```", "Konwledge_Point": "主程序", "Question": ["求访问量限制的后台源程序", ["一个页面总共可以访问300次，第一个人访问了，就剩下299次。总访问人数超过300就跳到第二个页面。有没有这样的后台源程序？最好是可以放到虚拟主机上的php或者Asp"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看一下数据结构&amp;#xff1f;C有个大概的了解与使用就可以了吧&amp;#xff0c;后面主要看你想往哪方面发展&amp;#xff0c;再去专门的学习相关语言比如java、C&amp;#43;&amp;#43;/C#、js或者更深入的学习C。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["学习完c语言程序设计基础该学什么", ["各位大佬好，本人非计算机专业的学生。学习c语言有段时间了，懂得了一些基础。本来想着跟着csdn的博主学，但是没有博主提到过有一点基础该往那个方向学的，自己也很迷茫。", "了解过一点发展方向，比较感兴趣前端开发，但是不知道学习的方向了。求各位大佬指点迷津"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题找到了不用麻烦大家了&amp;#xff0c;我是这个写错了&lt;br /&gt;if &lt;strong&gt;name&lt;/strong&gt; &amp;#61;&amp;#61; &amp;#39;&lt;strong&gt;main&lt;/strong&gt;&amp;#39;:&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["使用python来设计应用程序界面设计使用的是pyqt5", ["UI界面通过pyqt5设计了一个简单的界面通过pyqt5预览没有问题", "同时也通过pyCharm将UI文件转换为了py文件", "\n", "\n", "UI转换py的文件截图如下", "\n", "\n", "python的代码如下", "\n", "import sys\nimport MainWin\nfrom PyQt5.QtWidgets import QApplication,QMainWindow\n", "if", " __name__ ==", "'_main_'", ":\n    ", "#窗口对象app", "\n    app=QApplication(sys.argv)\n    ", "#创建窗口1", "\n    mainWindow = QMainWindow()\n    ", "#调用自动化生成的窗口类代码", "\n    ui = MainWin.Ui_MainWindow()\n    ", "#向主窗口1添加控件", "\n    ui.setupUi(mainWindow)\n    ", "#显示主窗口", "\n    mainWindow.show()\n    ", "#正常退出", "\n    sys.", "exit", "(app.exec_())\n", "\n", "运行结果也没有报错但是程序并没有打开我设计的界面", "这是视频教程的代码", "\n", "\n", "这是教程演示结果", "\n", "\n", "教程的代码可以直接打开因为只有视频教程所以我也不知道问题在哪，求指教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实是被home.json里的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n  &lt;span class=\"hljs-attr\"&gt;&amp;#34;navigationBarTitleText&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;\n  &lt;span class=\"hljs-attr\"&gt;&amp;#34;enablePullDownRefresh&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;false&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;\n  &lt;span class=\"hljs-attr\"&gt;&amp;#34;usingComponents&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;覆盖了 我大意了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序中navigationBarTitleText 无法正常显示", ["问题：", "并非跳转子页面后文字无法显示，一开始在主页面就无法显示，路径都已经配置好了，但是还是不行，谢谢指点", "代码如下：", "\n", "  ", "\"window\"", ": {\n    ", "\"navigationBarTitleText\"", ": ", "\"风人店\"", ",\n    ", "\"navigationBarTextStyle\"", ": ", "\"white\"", ",\n    ", "\"navigationBarBackgroundColor\"", ": ", "\"#007AFF\"", ",\n    ", "\"backgroundColor\"", ": ", "\"", "#c00000", "\"", "\n  },\n", "\n"]], "Tag": "程序设计"}
{"Answer": "ㄜ....\r\n\r\n我這邊根據你提供samplecode 下執行後，在Release 執行.exe 只可以點擊執行一次，因為你已經用Mutex 保護該Process執行，\r\n所以你能夠執行多次實屬怪異...\r\n你確定你執行.exe檔 是一樣的嗎??", "Konwledge_Point": "主程序", "Question": ["关于Mutex限制应用程序重复启动的问题", ["大伙帮忙看看以下代码，整个程序按Release编译通过，但点击运行bin\\Release目录下的应用程序EXE文件，居然可以连续启动3个，第4个开始弹出消息“本程序已经启动了，不能再重复运行！”，啥原因？困惑中。。。", "\n\n", " static class Program\n    {\n        /// <summary>\n        /// 应用程序的主入口点。\n        /// </summary>\n        [STAThread]\n        static void Main()\n        {\n            bool flag = false;\n            Mutex mutex = new Mutex(true, System.Diagnostics.Process.GetCurrentProcess().ProcessName, out flag);\n            if (flag)\n            {\n                Application.EnableVisualStyles();\n                Application.SetCompatibleTextRenderingDefault(false);\n                Application.Run(new FormStockTrading());\n            }\n            else\n            {\n                MessageBox.Show(\"本程序已经启动了，不能再重复运行！\");\n                Environment.Exit(1);\n            }\n        }\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-objectivec\"&gt;#include&amp;lt;stdio.h&amp;gt;\n\nint ph(int a[4][4])\n{\n    int y,s,min&amp;#61;999999;\n    for (y &amp;#61; 0; y &amp;lt; 4; y&amp;#43;&amp;#43;)\n    {\n        s &amp;#61; a[y][y];\n        if (s&amp;lt;min)\n            min &amp;#61; s;\n        s &amp;#61; a[y][3-y];\n        if (s&amp;lt;min)\n            min &amp;#61; s;\n    }\n    return min;\n}\nint main()\n{\n    int a[4][4] &amp;#61; {\n        8,7,4,5,\n        5,6,3,5,\n        9,5,1,4,\n        8,3,6,7\n    };\n    printf(&amp;#34;%d\\n&amp;#34;,ph(a));\n    return 0;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["C语言编程函数，求矩阵主对角线元素最小值", ["编写函数，求4*4 矩阵主对角线元素的最小值，并在主函数中调用它。要求数组元素的值在程序内赋值，不通过键盘输入。"]], "Tag": "程序设计"}
{"Answer": "ThreadPool.QueueUserWorkItem(a =&gt;\r\n            {\r\n                //t2.Resume();\r\n                if (DialogResult.Yes == MessageBox.Show(\"检查尚未完成，是否确认停止检查\", \"提示\", MessageBoxButtons.YesNo))\r\n                {\r\n                   \r\n                }\r\n            }, null);\r\n\t\t\t\t\t\t加了这个好了，但是不明白原因", "Konwledge_Point": "主程序", "Question": ["c# 线程挂起后messagebox.show造成程序卡死", ["  //t2.Resume();\n            if (DialogResult.Yes == MessageBox.Show(\"检查尚未完成，是否确认停止检查\", \"提示\", MessageBoxButtons.YesNo))\n            {\n\n                t2.Abort();// 用于终止当前线程  \n                timer1.Enabled = false;\n                MessageBox.Show(\"一键检查完成\");\n                button3.Visible = false;\n                button1.Text = \"重新检查\";\n            }\n", "\n\n", "messagebox.show无法弹出，直接卡死，怎么解决？"]], "Tag": "程序设计"}
{"Answer": "如果你是学习，在自己的电脑上发布，最简单的是文件系统。直接拷贝到iis下就可以了。", "Konwledge_Point": "主程序", "Question": ["asp.net发布web应用程序问题", ["刚开始学asp.net，我用vs2012做了个web应用程序，已安装了web platform 5.0、IIS7、web Deploy", "\n想问一下发布一个应用程序的详细步骤是怎么样的？还有，发布方法中的FTP、文件系统、web Deploy", "\n分别有什么区别？我想发布成任何主机都能访问的网站，应该选用哪种？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;void main(){\n    int n;\n    printf(&amp;#34;请输入一个n:&amp;#34;);\n    scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n    printf(&amp;#34;结果是&amp;#xff1a;%.2f&amp;#34;,n*(n&amp;#43;1)*(n&amp;#43;2)/3.0);\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这个问题只要用一些输入输出函数即可&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["编写一个程序求n（n+1）（n+2）/3的值", ["编写一个程序求n（n+1）（n+2）/3的值"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\nnohup python -u test.py &amp;gt;/dev/null 1&amp;gt;&amp;gt;info.log  2&amp;gt;&amp;gt;error.log &amp;amp;&lt;/pre&gt;\n\n&lt;p&gt;test.py 换成你需要的就行&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["本机关闭，远程服务器继续运行python程序", ["本人使用Xshell连接远端服务器，对pycharm做了相应的远程服务器配置，由于实验代码的运行时间较长，怎么才能使得当本机关机时，远端服务器仍然在跑相应代码。", "\n\n", "系统为【windows】-【windows】"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;服务器的防火墙&amp;#xff0c;虚拟机的防火墙&amp;#xff0c;都放开对应端口了么&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["同一网段下的主机访问不了服务器Linux发布的web项目", ["我在服务器中做了一个虚拟机，然后做了个Linux系统，在里面用tomcat发布了一个web项目，但是发布后开放端口只有服务器的浏览器和Linux的浏览器访问的了，其他的主机访问不了，请问应该怎么解决，谢谢各位大佬", "\n\n", "这个是已知条件：1、主机ping的通虚拟机的ip，telnet不通。2、虚拟机和服务器均ping不通主机。3，在同一网段下的主机用tomcat发布项目，服务器访问不了，但是服务器上的Linux可以访问"]], "Tag": "程序设计"}
{"Answer": "close()关闭当前窗口。但是如果还有别的窗口是隐藏的，而那个窗口没有关闭，则程序还在运行。基于此，有程序实现主程序关闭，但是任务栏托盘显示一个图标，程序保持后台运行。", "Konwledge_Point": "主程序", "Question": ["为什么不一定使程序退出，是哪种情况？", ["书上说“那个close()槽，它不一定使程序退出，只有当剩下最后一个主界面（就是没有", "\n父窗口的界面）时调用close()槽，程序才会退出；其他情况下界面只是隐藏起来了，并", "\n有被销毁”这句话什么意思，那两个退出按钮只要我按了其中一个，程序就退出了，显", "\n示exited with code 0不就是代表退出吗？书上怎么还说不一定，是哪种情况？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改最后几行&lt;code class=\"language-javascript\"&gt;run&amp;#61;tk.Button()&lt;/code&gt; 的run变量名, 因为此时run变量指向的是这个按钮, 而不是函数。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-params\"&gt;--snip--&lt;/span&gt;\nrun2 &amp;#61; tk.Button&lt;span class=\"hljs-params\"&gt;(root,&lt;span class=\"hljs-attr\"&gt;text&lt;/span&gt;&amp;#61;&amp;#39;查找&amp;#39;,&lt;span class=\"hljs-attr\"&gt;command&lt;/span&gt;&amp;#61;look)&lt;/span&gt;\nrun2.grid&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-attr\"&gt;row&lt;/span&gt;&amp;#61;0,&lt;span class=\"hljs-attr\"&gt;column&lt;/span&gt;&amp;#61;1)&lt;/span&gt;\nroot.mainloop&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["主窗口上的按钮正常，但子窗口按钮无法创建新窗口，如何解决？", ["主窗口上的按钮可以正常使用，但是创建出来的子窗口上的按钮却无法再创建一个窗口。", "以下是源代码", "\n", "\n​\nimport tkinter as tk\nimport tkinter.font as tf\nimport os,sys\n\n\ndef ", "run", "():\n    global there\n    global novel\n    global root_look\n    global a\n    ", "run", " = tk.Toplevel()\n    run.title(", "'你的文件'", ")\n    bookname = tk.Label(run,", "text", "=a)\n    bookname.pack()\n    run.mainloop()\n    #这里的函数无法运行\ndef look():\n    root_look = tk.Toplevel()\n    root_look.title(", "'选择'", ")\n    root_look.geometry(", "\"225x100\"", ")\n    root_look.configure(", "bg", "=", "'grey'", ")\n    say = tk.Label(root_look,", "text", "=", "'请输入文件名:'", ",bg='grey')\n    say.grid(", "row", "=0)\n    ok = tk.Button(root_look,", "text", "=", "'确定'", ",command=run)\n    #这是出现问题的按钮\n    ok.grid(", "row", "=1)\n    novel = tk.Entry(root_look,", "bg", "=", "'grey'", ")\n    novel.grid(", "row", "=0, ", "column", "=1)\n    a = novel.", "get", "()\n    root_look.mainloop()\n    #问题界面的代码\nthere = sys.path[0]\nroot = tk.Tk(", "className", "=", "'编辑器'", ")\nroot.geometry(", "\"450x300\"", ")\nroot.configure(", "bg", "=", "'grey'", ")\nwelcome = tk.Label(root, ", "text", "=", "'编辑器'", ", ", "bg", "=", "'grey'", ")\nwelcome.grid(", "row", "=0)\nWfont = tf.Font(", "family", "=", "'微软雅黑'", ",size=30)\nwelcome.config(", "font", "=Wfont)\n", "run", " = tk.Button(root,", "text", "=", "'查找'", ",command=look)\nrun.grid(", "row", "=0,column=1)\nroot.mainloop()\n\n\n​\n", "\n", "我期望达成的效果，是所有按钮均可生效。", "如图，按下按钮后，未产生新的窗口。"]], "Tag": "程序设计"}
{"Answer": "http://zhidao.baidu.com/link?url=pF5eTsQhcLDm3XHmjZcAQr099Xkj61iQhZMAysmG_jdDJK20I8umG9qR-DVCeIICnsvUct53EARqSS6fI90sBa", "Konwledge_Point": "主程序", "Question": ["MDI程序窗口，在主界面上怎么得到哪个窗口正在输入文字", ["MDI程序窗口，在主界面上怎么得到哪个窗口正在输入文字？关于MDI输入文字在哪个窗口的问题？"]], "Tag": "程序设计"}
{"Answer": "为什么你在xp下编译的文件要放在win8/10上运行？建议你在本系统下再编译一下", "Konwledge_Point": "主程序", "Question": ["关于mfc应用程序的问题", ["我电脑里装了一个xp系统的虚拟机，在里面用vc6.0写了一个可以跟mysql数据库连接的软件，当我把生成的exe文件放到主机时候一运行就出问题了，如下，怎么破。。在线等"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你的filters是字符串类型&amp;#xff0c;把他转换成浮点类型&amp;#xff0c;或者整型再调用 toFixed()就不会报错了&lt;br /&gt;注意 &amp;#xff1a; 用了.toFixed(2)  &amp;#xff0c;这时候的  filters  已经变成的字符串 , typeof filters得出来的是 string &amp;#xff0c;得用  parseFloat(filters)  转回 数字类型&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;alert&lt;/span&gt;(parseFloat(&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;44644&lt;/span&gt;).toFixed(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)); \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["微信小程序保留两位小数的报错怎么解决呢", ["\n", "在根据一位博主的教学后，虽然在页面上显示了保留两位小数，但是报了如图二的错误，求解答"]], "Tag": "程序设计"}
{"Answer": "不是,你说的意思，应该是数据的凑巧性，你的for循环的功能是累加每年的天数，而当碰到非闰年的时候，你就直接把total赋值成了365，当i=2013时，total=365，也就说你的循环等效成了一个赋值语句，total=365，显然没有实现天数的累加，", "Konwledge_Point": "主程序", "Question": ["java新手，程序能正常运行，但结果不对", ["输入年份、月份，打印出月历的小程序。源代码全是照着教程打上去的，程序能正常运行，但结果不对。输入2015年8月，月历是对的；输入2014年1月，正确的结果1号应该是星期三，但是显示的结果却是星期四。", "\nimport java.util.Scanner;", "\npublic class PrintCalendar {", "\n\n", "/**\n * @param args the command line arguments\n */\npublic static void main(String[] args) {\n    Scanner input =new Scanner(System.in);\n    System.out.print(\"请输入年份（格式如2001）：\");\n    int year = input.nextInt();\n\n    System.out.print(\"请输入月份（格式1-12）：\");\n    int month = input.nextInt();\n    printMonth(year,month);\n}\n\npublic static void printMonth(int year,int month){  //主方法\n    printMonthTitle(year,month);\n    printMonthBody(year,month);\n}\n\npublic static void printMonthTitle(int year,int month){  //打印排头\n    String MonthName=getMonthName(month);\n    System.out.println(\"          \"+ year +\" 年 \" + MonthName);\n    System.out.println(\"   日  一  二  三  四  五  六\");\n}\n\npublic static void printMonthBody(int year,int month){  //打印表格主体\n    int startDay=getStartDay(year,month);\n    int numberofDaysInMonth=getNumberofDaysInMonth(year,month);\n    int i=0;\n    for(i=0;i<startDay;i++)\n        System.out.print(\"    \");\n    for(i=1;i<=numberofDaysInMonth;i++){\n        System.out.printf(\"%4d\",i);\n        if((i+startDay)%7==0)\n            System.out.println();\n    }\n}\n\npublic static String getMonthName(int month){  //得到月份名\n    String s=\"\";\n    switch(month){\n        case 1:s=\"1 月\";break;\n        case 2:s=\"2 月\";break;\n        case 3:s=\"3 月\";break;\n        case 4:s=\"4 月\";break;\n        case 5:s=\"5 月\";break;\n        case 6:s=\"6 月\";break;\n        case 7:s=\"7 月\";break;\n        case 8:s=\"8 月\";break;\n        case 9:s=\"9 月\";break;\n        case 10:s=\"10 月\";break;\n        case 11:s=\"11 月\";break;\n        case 12:s=\"12 月\";\n    }\n    return s;\n}\n\n\n\npublic static int getStartDay(int year,int month){  //得到开始天数(一号是星期几）\n    final int START_DAY_FOR_JAN_1_1800 = 3;  //设置一个常量1800年1月1日是星期3\n    int TotalNumberofDays =getTotalNumberofDays(year,month);\n    return (TotalNumberofDays+START_DAY_FOR_JAN_1_1800) % 7; \n    //如果不+3，返回值=0时是星期三\n}\n\npublic static int getTotalNumberofDays(int year,int month){  //得到总天数\n    int total=0;\n    for(int i=1800;i<year;i++){   //累加每年的天数\n        if(isLeapYear(i)) \n            total=total+366;\n        else total=total=365;\n    }\n    for(int i=1;i<month;i++){   //累加当年的月总天数\n        total=total+getNumberofDaysInMonth(year,i);\n    }\n    return total;\n\n}\n\npublic static int getNumberofDaysInMonth(int year,int month){  //得到当月天数\n    if(month==1 ||month==3 ||month==5 ||month==7 ||month==8 ||month==10 ||month==12)\n        return 31;\n    if(month==4 ||month==6 ||month==9 ||month==11)\n        return 30;\n    if(month==2) return isLeapYear(year)?29:28;\n    return 0;//如果输入的月份值有问题\n}\n\npublic static boolean isLeapYear(int year){  //是否是闰年\n    /*  如果能被4整除,且不能被100整除,则为闰年\n        如果能被100整除,且能被400整除,则为闰年\n    */\n    return year %400==0 || (year %4 == 0 && year % 100 != 0);\n}\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/huwei2003/article/details/117512114?spm&amp;#61;1001.2101.3001.6650.5&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-117512114-blog-122001478.pc_relevant_multi_platform_whitelistv1_exp2&amp;amp;depth_1-utm_source&amp;#61;distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-117512114-blog-122001478.pc_relevant_multi_platform_whitelistv1_exp2&amp;amp;utm_relevant_index&amp;#61;6\" id=\"textarea_1657782070863_1657782260743_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/huwei2003/article/details/117512114?spm&amp;#61;1001.2101.3001.6650.5&amp;amp;utm_medium&amp;#61;distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-117512114-blog-122001478.pc_relevant_multi_platform_whitelistv1_exp2&amp;amp;depth_1-utm_source&amp;#61;distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-117512114-blog-122001478.pc_relevant_multi_platform_whitelistv1_exp2&amp;amp;utm_relevant_index&amp;#61;6&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;这个里找到了答案&amp;#xff1b;试了　也解决了&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Mybatis-Plus 创建的deviceMapper 查询会卡死，程序不往下执行", ["使用Springboot和mybatis-plus ,创建一个DeviceMapper,但是某一个实体类内使用时程序卡死，不往下执行，也没报错，我理解即使查不到也不应该卡死才对：", "\n", "在DeviceController 类里面使用“Device dev = this.deviceMapper.selectById(deviceId);” 是可以正常执行；不知道为啥在上面截图的类中使用不行；", "是Mapper的使用有什么要求么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;连接数据库错误&amp;#xff0c;主要是你犯了下面其中之一&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;1.账号密码错误&lt;/p&gt;\n\n&lt;p&gt;2.端口号错误&amp;#xff0c;mysql默认端口号是3306&amp;#xff0c;你有没有改成3360&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt;3.确定你的mysql版本是8.0或者以上&amp;#xff0c;否则驱动不能写com.mysql.cj.jdbc.Driver&amp;#xff0c;而是com.mysql.jdbc.Driver&lt;/p&gt;\n\n&lt;p&gt;4.链接驱动jar包要和你安装的mysql版本一致&lt;/p&gt;\n\n&lt;p&gt;5.上面都没错的情况下&amp;#xff0c;你的链接信息后面加上这个&lt;/p&gt;\n\n&lt;pre&gt;\n?useUnicode&amp;#61;true&amp;amp;characterEncoding&amp;#61;utf8&lt;/pre&gt;\n\n&lt;p&gt;第七行代码这样写&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;Connection connection &amp;#61; DriverManager.getConnection(&amp;#34;jdbc:mysql://127.0.0.1:3360/test?useUnicode&amp;#61;true&amp;amp;characterEncoding&amp;#61;utf8&amp;#34;, &amp;#34;root&amp;#34;, &amp;#34;root8888&amp;#34;);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["请问为啥这段java程序报错呢？", ["\n", "import java.sql.*;\n\npublic class Gradation {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//创建类\n\t//连接数据库方法\n\tpublic Connection getConnection() throws ClassNotFoundException, SQLException {\n\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n\t\tConnection connection = DriverManager.getConnection(\"jdbc:mysql://127.0.0.1:3360/test\", \"root\", \"root8888\");\n\t\treturn connection;\t\t\t\t\t\t\t\t\t\t\t\t\t//返回Connection对象\n\t}\n\n\tpublic static void main(String[] args) {\t\t\t\t\t\t\t\t//主方法\n\t\tGradation gradation = new Gradation();\t\t\t\t//创建本类对象\n\t\tConnection connection = null;\t\t\t\t\t\t//声明connection对象\n\t\tStatement statement = null;\t\t\t\t\t\t\t//声 明Statement对象\n\t\tResultSet result = null;\t\t\t\t\t\t\t\t//声明ResultSet对象\n\t\ttry {\n\t\t\tconnection = gradation.getConnection();\t\t\t\t//与数据库建立连接\n\t\t\tstatement = (Statement) connection.createStatement();\t\t\t//实例话Statement对象\n\t\t\tresult = statement.executeQuery(\"select * from tb_stu\");\t\t\t\t//执行SQL语句，返回结果集\n\t\t\twhile (result.next()) {\t\t\t\t\t\t//如果当前语句不是最后一条则进入循环\n\t\t\t\tString idString = result.getString(\"id\");\n\t\t\t\tString nameString = result.getString(\"name\");\n\t\t\t\tString sexString = result.getString(\"sex\");\n\t\t\t\t//获取列名是birthday的字段值\n\t\t\t\tString birthdayString = result.getString(\"birthday\");\n\t\t\t\tSystem.out.println(\"编号：\" + idString);\n\t\t\t\tSystem.out.println(\"姓名：\" + nameString);\n\t\t\t\tSystem.out.println(\"性别：\" + sexString);\n\t\t\t\tSystem.out.println(\"生日：\" + birthdayString);\n\t\t\t}\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\t\t\t\t\t\t//依次关闭数据库资源\n\t\t\tif (result != null) {\n\t\t\t\ttry {\n\t\t\t\t\tresult.close();\n\t\t\t\t} catch (SQLException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (statement != null) {\n\t\t\t\ttry {\n\t\t\t\t\t((Connection) statement).close();\n\t\t\t\t} catch (SQLException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (connection != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconnection.close();\n\t\t\t\t} catch (SQLException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "\n\n", " ", "\n\n", "\n", "com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n\tat java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)\n\tat java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)\n\tat Gradation.getConnection(Gradation.java:7)\n\tat Gradation.main(Gradation.java:17)\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.NativeSession.connect(NativeSession.java:144)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:953)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)\n\t... 7 more\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\n\tat java.base/sun.nio.ch.Net.connect(Net.java:576)\n\tat java.base/sun.nio.ch.Net.connect(Net.java:565)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)\n\tat java.base/java.net.Socket.connect(Socket.java:645)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)\n\tat mysql.connector.java@8.0.24/com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)\n\t... 10 more"]], "Tag": "程序设计"}
{"Answer": "new mainview().setVisible(true); //打开主界面\r\nthis.dispose();  //关闭登陆界面", "Konwledge_Point": "主程序", "Question": ["netbeans  开发java 应用程序 登陆界面如何与项目的主界面绑定", ["netbeans  开发java 应用程序  登陆界面如何与项目的主界面绑定，login.java  弹出界面用户账号、密码   点击登陆验证通过， 转到主页面 关闭登陆界面 mainview.java   失败返回login.java 代码如何实现的。。。。。。谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;ol&gt;\n&lt;li&gt;You can use process.Release to detach the child process from the parent one and make it survive after parent death&lt;/li&gt;\n&lt;li&gt;Look at the definition of *os.ProcAttr.Sys.Credentials attribute :  it looks like using the attribute you can set process user and group ID.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Here is a working version of your example (I did not check if process ID's where actually the one set )&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\nimport \"os\"\nimport \"syscall\"\n\nconst (\n    UID = 501\n    GUID = 100\n    )\n\n\nfunc main() {\n    // The Credential fields are used to set UID, GID and attitional GIDS of the process\n    // You need to run the program as  root to do this\n        var cred =  &amp;amp;syscall.Credential{ UID, GUID, []uint32{} }\n    // the Noctty flag is used to detach the process from parent tty\n    var sysproc = &amp;amp;syscall.SysProcAttr{  Credential:cred, Noctty:true }\n    var attr = os.ProcAttr{\n        Dir: \".\",\n        Env: os.Environ(),\n        Files: []*os.File{\n            os.Stdin,\n            nil,\n            nil,\n        },\n            Sys:sysproc,\n\n    }\n    process, err := os.StartProcess(\"/bin/sleep\", []string{\"/bin/sleep\", \"100\"}, &amp;amp;attr)\n    if err == nil {\n\n        // It is not clear from docs, but Realease actually detaches the process\n        err = process.Release();\n        if err != nil {\n            fmt.Println(err.Error())\n        }\n\n    } else {\n        fmt.Println(err.Error())\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["在Go中启动一个流程并从中分离", ["\n\n", "I need to start a new process in Go with the following requirements:", "\n\n", "\n", "The starting process should run even after the Go process is terminated", "\n", "I need to be able to set the Unix user/group that's running it", "\n", "I need to be able to set the environment variables inherited", "\n", "I need control over std in/out/err", "\n", "\n", "Here is an attempt:", "\n\n", "var attr = os.ProcAttr {\nDir: \"/bin\",\nEnv: os.Environ(),\nFiles: []*os.File{\n    os.Stdin,\n    \"stdout.log\",\n    \"stderr.log\",\n  },\n}\nprocess, err := os.StartProcess(\"sleep\", []string{\"1\"}, &attr)\n", "\n\n", "This works fine but has the following shortcomings from the requirements:", "\n\n", "\n", "No way to set Unix user/group", "\n", "The started process ends when the Go process (parent) stops", "\n", "\n", "This needs to run on Linux only if that simplifies things.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个不行是指什么不行&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["翁恺老师的《面向对象程序设计——JAVA》课程的第二周作业按照别的答主写的也不能运行", ["也找过论坛上其他答主的代码来运行，还是不行，不知道是什么原因，以为自己不打算交作业，所以没按照作业规范写在一个文件里。", "\n\n", "\n", "//文件1：\npackage Main;\n\npublic class Clock {\n\tprivate Display hour=new Display(24);\n\tprivate Display minute=new Display(60);\n\tprivate Display second=new Display(60);\n\npublic Clock(int hour, int minute, int second) \n{\t\n\tthis.hour.value=hour;//这里的hour是指从main函数传入Clock构造函数的hour值，而this是用来指向Display hour这个对象的\n\tthis.minute.value=minute;\n\tthis.second.value=second;}\npublic void tick() \n{\n\twhile(true) \n\t{\tsecond.increase();\n\t\tif(second.getValue()==0) {\n\t\t\tminute.increase();\n\t\t\n\t\t\tif(minute.getValue()==0) {\n\t\t\t\thour.increase();\n\t\t\t}\n\t\t}\n\t}\n}\npublic String toString()\n{\t\n\t\n\treturn String.format(\"%02d:%02d:%02d\\n\",hour,minute,second);\n}\n\n\n}\n//文件2：\npackage Main;\n\npublic class Display {\n\tint value=0;\n\tprivate int limit=0;\n\tpublic Display(int limit) {\n\t\tthis.limit=limit;\n\t}\n\tpublic void increase() {\n\t\tvalue++;\n\t\tif(value==limit) {\n\t\t\tvalue=0;\n\t\t}\n\t}\n\tpublic int getValue() {\n\t\treturn value;\n\t}\npublic static void main(String[] args) {\n\tDisplay d=new Display(23);\n\tfor(;;) \n\t{\n\t\td.increase();\n\t\tSystem.out.println(d.getValue());\n\t}\n}\n}\n//文件3：\npackage Main;\n\npublic class Main{\n\npublic static void main(String[] args) {\n\njava.util.Scanner in = new java.util.Scanner(System.in);\n\nClock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());\n\nclock.tick();\n\nSystem.out.println(clock);\n\nin.close();\n\n}\n}"]], "Tag": "程序设计"}
{"Answer": "你没写端口吧，明显通讯拥挤", "Konwledge_Point": "主程序", "Question": ["Python socket 聊天器", ["用python做一个多用户的聊天器。就是指一个服务器，然后不同的电脑上开启客户端，都能连接，还可以互相传递消息。但是现在的问题是都能连接上，但相互之间不能通信。一个连接上后就把原来连接的挤掉了。该怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意创建接收线程的时候&amp;#xff0c;发送&amp;#xff0c;接受的端口要互换。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["Qt实现的UDP协议套接字局域网在线聊天程序，本该是两个主机关系完全对等，但是两者发信息时数据不对等", ["\n", "qt实现的程序打包成的exe文件，方便程序的测试。", "在两个实际电脑上也出现相同的问题，这里用虚拟机来模拟当时的情况。", "问题如图所示：两个打开的电脑在相同局域网，打开一个相同的程序，在我的电脑上，可以监听到对方的上线下线消息，可以看到对方发送的消息，可是我发送的消息，在对方电脑上无法显示，对方也监听不到我的上线和下线消息。", "请回答我的问题：虽然是单方面接收到了消息，但是也说明实现了远程传输信息，可是，UDP协议是实现的服务端和客户端一体的模式，并且我和对方电脑的程序是一模一样的，应该是级别对等的关系，为什么只有我这边能接收到信息，对方接收不到？因该如何解决，实现双向信息发送和接收？"]], "Tag": "程序设计"}
{"Answer": "https://www.jianshu.com/p/699d6098d37f", "Konwledge_Point": "主程序", "Question": ["微信转化跟踪-小程序广告接入", ["在对接微信的转为跟踪 小程序广告接入  已经按照文档接入成功   返回值没有问题  但是为什么公众号广告主的线索管理无任何数据  创建的行为数据源也有相应的数据增加  请问有没有对接过这个的大佬解释一下  周末人工不上班  是按照", "https://ad.weixin.qq.com/guide/457这个流程调试", " "]], "Tag": "程序设计"}
{"Answer": "可以通过委托和事件来实现", "Konwledge_Point": "主程序", "Question": ["C# 如何在其他类中通知主窗口刷新界面？", ["我写了一个程序，用UDP接受一串数据，根据协议解析之后把各个数值放到一个类中，然后需要这个带有数据的类通知winform主界面刷新显示数据。这个需要怎么实现呢？", "\n\n", " ![图片说明](https://img-ask.csdn.net/upload/201912/13/1576209160_95036.png)\n", "\n\n", "主要难点在于不知道怎么通知主窗口现在应该刷新数据了。"]], "Tag": "程序设计"}
{"Answer": "先ping目标主机，然后察看arp表，该方法不受操作系统类型的限制\r\nping 192.168.1.100\r\narp -a 192.168.1.100\r\nProcess p = Runtime.getRuntime().exec(\"ping \" + ip);//执行DOS命令\r\np = Runtime.getRuntime().exec(\"arp -a \" + ip);//执行DOS命令\r\n\r\n   InputStreamReader ir = new InputStreamReader(p.getInputStream());//获取返回结果的流\r\n自己解析吧", "Konwledge_Point": "主程序", "Question": ["在如何获得另一台主机的网卡的MAC", ["请教如何写这样一个java程序:", "\n\n", "2台在同一网段的主机(A和B),相互能够ping到.程序在主机A上执行,以主机B的IP为参数,执行后的返回结果是主机B网卡的MAC地址.", "\n还要一个要求是A和B的操作系统不能有限制,也就是无论在Windows或Linux系统下都能执行.", "\n\n", "请教各位,有没有办法实现的?"]], "Tag": "程序设计"}
{"Answer": "在OnSize里GetWindowRect得到改变大小后的尺寸，再调用 m_pictureBox-&gt;MoveWindow", "Konwledge_Point": "主程序", "Question": ["mfc如何实现子对话框完美嵌入主对话框", ["在一个程序，两个对话框类中，如何实现在主对话框添加piture control控件后，让子对话框根据pic控件变化大小，不会出现子对话框过大则在pic控件中只会显示部分，对话框过小则显示在主对话框控件的左上角。感谢指点，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你一句轻松带过的“除了性能方面的问题”&amp;#xff0c;那才是主要问题&amp;#xff0c;拖动个窗口CPU都会飙升到将近100%的系统&amp;#xff0c;就算真能运行QQ微信&amp;#xff0c;你会想用吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["树莓派烧录windows系统，除了性能方面的问题可以和主机一样安装qq，游戏等应用程序吗", ["树莓派烧录windows系统，和普通的主机有什么区别，除了性能方面的问题", "可以和主机一样安装qq，微信，游戏等应用程序吗"]], "Tag": "程序设计"}
{"Answer": "在你的DLL主函数中创建对话框。", "Konwledge_Point": "主程序", "Question": ["如何在 基于 MFC 的 regular DLL 中 指定某个对话框为主对话框呢？", ["        我要在 一个基于 MFC 的 regular DLL 中封装一个对话框程序。 以前做基于对话框的应用程序的时候，  MFC 向导会自动生成主对话框， 但是在创建基于 MFC 的 DLL 时， MFC 向导不会自动生成主对话框。 我该如何指定新创建的某个对话框为主对话框呢？\n        我的主要目的是为了把一些全局变量或函数定义在主对话框类中，这样在程序的任何地方都可以使用 ((CXXX_dllApp*)AfxGetApp())->m_pMainWnd  获得主对话框的指针并访问这些变量或函数。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/435963203156125.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;ClassNotFoundException:检查一下你的jdbc&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["java程序运行过程出现问题", ["java运行出现这个问题，不知道这个要怎么解决，麻烦大家帮帮忙解决一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说明你算错了()&lt;br /&gt;19-9-4-2-1-0,其中0不会进入输出,所以首先输出1%2,然后是2%2,4%2,9%2,19%2,结果为10011&lt;br /&gt;注意只是递归调用n/2,不是将n赋值为n/2&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["c语言读程序题，请博主看一下", ["这一题我算出来是01001，答案是10011，不应该是fun(9) fun(4) fun(2) fun(1) fun(0) 倒着输出吗，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看描述&amp;#xff0c;应该是需要小程序端和后台的&lt;br /&gt;小程序端使用微信官方的api以及样式即可&amp;#xff0c;当然可能也有样式需自己编写&amp;#xff0c;那么就需要了解html&amp;#43;css了&lt;br /&gt;后台的话&amp;#xff0c;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;可以使用云开发这样就直接通过云开发api即可&amp;#xff0c;&lt;/li&gt;&lt;li&gt;如果不使用云开发&amp;#xff0c;那么就需要自己开发后台&amp;#xff0c;使用php或者java&amp;#43;mysql都可&amp;#xff0c;然后购买服务器&amp;#xff0c;将项目部署到服务器上&amp;#xff0c;就可以使用了&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;如果对你有帮助&amp;#xff0c;请点击采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["这样的社团微信小程序应该如何开发？", ["本人正在为自己社团，准备开发一款微信小程序应用，但遇到一些问题需要解决：", "\n", "在小程序里实现，以下功能：", "\n", "主页面：前台一个帖子展示区域，后台发布帖子的功能", "社卡页面：注册绑定社卡的页面，后台设置积分的功能", "  往下滑：社团周边礼物区域 - 包括积分兑换礼物功能 后台：收到反馈", "赞助商页面：社卡赞助商家的列表，以及对商家的评论", "辩论赛事页面：视频播放器功能", "联系我们页面：发邮件，发信息功能", "\n", "请问这些页面的实现，应该怎么去开发呢？需要掌握什么技术？"]], "Tag": "程序设计"}
{"Answer": "我知道了,终于一步步调试出来了,包裹函数Bind写错了", "Konwledge_Point": "主程序", "Question": ["网络编程。为什么为什么netstat -a检测不到server程序调用的监听套接字?", ["套接字第5章服务器回复程序: 图5-2 tcpcliserv/tcpserv01.c", "\n书上说:\"首先,我们在主机上后台启动服务器 ./tcpserv01 &, 会看到一个 address为9877的套接字处于listen状态:\"", "\n\n", "但是我用 netstat -a并没有发现address 为9877的套接字", "\n\n", "然后调用图 5-4 tcp回射客户程序 tcpcliserv/tcpcli01.c ,会发现, 客户程序在运行到", "\nConnect()时出错了, 我猜肯定是服务器程序有问题, 但是问题在哪里?", "\n\n", " 1  #include        \"unp.h\"\n 2  \n 3  int\n 4  main(int argc, char **argv)\n 5  {\n 6          int                                     listenfd, connfd;\n 7          pid_t                           childpid;\n 8          socklen_t                       clilen;\n 9          struct sockaddr_in      cliaddr, servaddr;\n10  \n11          listenfd = Socket(AF_INET, SOCK_STREAM, 0);\n12  \n13          bzero(&servaddr, sizeof(servaddr));\n14          servaddr.sin_family      = AF_INET;\n15          servaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n16          servaddr.sin_port        = htons(SERV_PORT);\n17  \n18          Bind(listenfd, (SA *) &servaddr, sizeof(servaddr));\n19  \n20          Listen(listenfd, LISTENQ);\n21  \n22          for ( ; ; ) {\n23                  clilen = sizeof(cliaddr);\n24                  connfd = Accept(listenfd, (SA *) &cliaddr, &clilen);\n25  \n26                  if ( (childpid = Fork()) == 0) {        /* child process */\n27                          Close(listenfd);        /* close listening socket */\n28                          str_echo(connfd);       /* process the request */\n29                          exit(0);\n30                  }\n31                  Close(connfd);                  /* parent closes connected socket */\n32          }\n33  }\n    ![图片说明](https://img-ask.csdn.net/upload/201509/10/1441851012_179041.png)![图片说明](https://img-ask.csdn.net/upload/201509/16/1442393246_433240.png)\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在edit的change响应事件里面去判断处理&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["窗体应用程序中完成登录窗口后怎么直接进入主窗口", ["在『记事本程序』中打开『登录窗口』输入正确密码后直接进入『记事本』，现在输入密码后『登录窗口』不关闭，而且要点击『ok』后才能进入，该如何修改代码？", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "首先php和php-fpm是两个东西，php是PHP语音的执行器，php-fpm是一个php的进程管理器，用来处理网络请求比较方便，但所有的php文件最后还是通过php来处理的。php当然可以执行本地的PHP脚本", "Konwledge_Point": "主程序", "Question": ["关闭php-fpm为什么服务端仍然可以执行PHP程序？", ["centos系统下nginx+php-fpm+php7 配置完之后做测试， 关闭php-fpm之后网页无法打开，但是为什么在服务端（putty）仍然可以执行php程序文件？", "\nphp-fpm关闭之后PHP文件不是都不能执行吗？"]], "Tag": "程序设计"}
{"Answer": "var p = Process.Start(@\"..\\..\\..\\app\\temp.exe\");\r\np.WaitForExit();\r\n//结束\r\n\r\n另外还可以\r\nProcess[] arr = Process.GetProcesses();\r\nif (arr.Any(x =&gt; x.Name == 进程名))\r\n没有结束\r\nelse\r\n结束", "Konwledge_Point": "主程序", "Question": ["C#如何监控进程是否结束？", ["Process.Start(@\"..\\..\\..\\app\\temp.exe\");\n", "\n\n", "打开一个exe之后，如何持续监控这个进程是否结束呢？"]], "Tag": "程序设计"}
{"Answer": "那就看主线程有没有join返回，子线程更行界面的时候，可能也是用的主线程来更新的，而这个时候主线程join死锁了。\r\n你主线程就不应该join等待，可以让子线程在结束以后通过代理直接调用主线程的方法来绘制波形。", "Konwledge_Point": "主程序", "Question": ["线程中使用了代理进度条窗体（模态），主UI线程等待线程结束，程序死锁", ["在写示波器程序时，上传数据功能在子线程中实现，上传过程较长，采用进度条显示，所以子线程中通过代理方法模态显示进度条。而主UI线程要等待子线程结束才好绘制波形，使用Join方法后，发现程序锁死。请问原因？"]], "Tag": "程序设计"}
{"Answer": "单击widget   说明你的activity没有运行或者在background  说实话你的本意只想运行onlyToast这个方法？  那样的话你可以在一个broadcastreceiver中调用这个方法   需要把这个方法复制到broadcastreceiver那里   然后传递一个context  不要用this    单击widget的按钮的时候发送一个广播即可触发", "Konwledge_Point": "主程序", "Question": ["点击widget时，如何在主activity中调用一个程序", ["在activity（MainForm.java）中有一个程序来显示toast。下面是代码：", "\n\n", "package com.application.TestingWidget3;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.widget.Toast;\n\npublic class MainForm extends Activity {\n    /** Called when the activity is first created. */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n\n        onlyToast();\n    }\n\n    public void onlyToast()\n    {\n        Toast.makeText(this, \"Only Showing Toast\", 1).show();\n    }\n}\n", "\n\n", "当点击widget时，如何在HelloWidget.java上调用onlyToast()程序？", "\n附加 HelloWidget code:", "\n\n", "package com.application.TestingWidget3;\nimport android.appwidget.AppWidgetProvider;\n\npublic class HelloWidget extends AppWidgetProvider {\n    // What should i do here??\n}\n", "\n\n", "感谢大家能给我帮助。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改如下 &amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# include&amp;lt;malloc.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n \nstruct Student\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age;\n    char name[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    float score;\n};\n \nvoid &lt;span class=\"hljs-keyword\"&gt;sort&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; len, struct Student ** s)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j;\n    struct Student t;  \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;len-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &amp;#43;&amp;#43;i)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;len-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-i; &amp;#43;&amp;#43;j)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((*s)[j].score &amp;lt; (*s)[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score)\n            {\n                t &amp;#61; (*s)[j];\n                (*s)[j] &amp;#61; (*s)[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                (*s)[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n}\n \nvoid Input(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; len, struct Student ** p)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i;    \n    *p &amp;#61; (struct Student*)malloc(len * sizeof(struct Student)); \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;len; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d名学生信息\\n&amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;name &amp;#61; &amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, (*p)[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;age &amp;#61; &amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;(*p)[i].age);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;score &amp;#61; &amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;(*p)[i].score);    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n \n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main(void)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; len;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i;\n    struct Student * &lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt; &amp;#61; NULL;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生人数&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;len &amp;#61; &amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;len);\n    Input (len, &amp;amp;&lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;sort&lt;/span&gt; (len, &amp;amp;&lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;len; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第%d名学生的信息&amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;name &amp;#61; %s\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;q[i]&lt;/span&gt;.name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;age &amp;#61; %d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;q[i]&lt;/span&gt;.age);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;score &amp;#61; %f\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;q[i]&lt;/span&gt;.score);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "主程序", "Question": ["c语言程序，建立函数调用失败。", ["题目：", "建立学生信息档案，自建input（数据录入）和sort（数据排序）函数完成数据处理。", "遇到的问题：", "自建函数调用失败直接跳过了，原因不明。", "\n", "# ", "include", "<malloc.h>", "\n", "# ", "include", "<stdio.h>", "\n\n\n", "struct", " ", "Student", "\n{\n    ", "int", " age;\n    ", "char", " name[", "100", "];\n    ", "float", " score;\n};\n\n\n", "void", " ", "sort", "(", "int", " * lon, ", "struct", " Student ** s)", "\n", "{\n    ", "int", " i;\n    ", "int", " j;\n    ", "struct", " ", "Student", " t;\n\n    lon = (", "int", " *)", "malloc", "((*lon) * ", "sizeof", "(", "struct", " Student));\n    * s = (", "struct", " Student *)", "malloc", "((*lon)* ", "sizeof", "(", "struct", " Student));    \n    \n    ", "for", "(i=", "0", "; i<(*lon)", "-1", "; ++i)\n        ", "for", "(j=", "0", "; j<(*lon)", "-1", "-i; ++j)\n            ", "if", "((*s)[j].score < (*s)[j+", "1", "].score)\n            {\n                t = (*s)[j];\n                (*s)[j] = (*s)[j+", "1", "];\n                (*s)[j+", "1", "] = t;\n            }\n}\n\n\n", "void", " ", "Input", "(", "int", " *len, ", "struct", " Student ** p)", "\n", "{\n    ", "int", " i;\n    len = (", "int", " *)", "malloc", "((*len) * ", "sizeof", "(", "struct", " Student));\n    * p = (", "struct", " Student *)", "malloc", "((*len) * ", "sizeof", "(", "struct", " Student));        \n\n    ", "for", "(i=", "0", "; i<(*len); ++i)\n    {\n        ", "printf", "(", "\"请输入第%d名学生信息\\n\"", ", i+", "1", ");\n        ", "printf", "(", "\"name = \"", ");\n        ", "scanf", "(", "\"%s\"", ", (*p)[i].name);\n        ", "printf", "(", "\"age = \"", ");\n        ", "scanf", "(", "\"%d\"", ", &(*p)[i].age);\n        ", "printf", "(", "\"score = \"", ");\n        ", "scanf", "(", "\"%f\"", ", &(*p)[i].score);    \n    }\n    ", "return", ";\n}\n\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " len;\n    ", "int", " i;\n    ", "struct", " ", "Student", " * q;\n    \n    ", "printf", "(", "\"请输入学生人数：\\n\"", ");\n    ", "printf", "(", "\"len = \"", ");\n    ", "scanf", "(", "\"%d\"", ", &len);\n\n    ", "Input", " (&len, &q);\n    ", "sort", " (&len, &q);\n\n    ", "for", "( i=", "0", "; i<len; ++i)\n    {\n        ", "printf", "(", "\"第%d名学生的信息\"", ", i+", "1", ");\n        ", "printf", "(", "\"name = %s\\n\"", ", q[i].name);\n        ", "printf", "(", "\"age = %d\\n\"", ", q[i].age);\n        ", "printf", "(", "\"score = %f\\n\"", ", q[i].score);\n    }\n    ", "return", " ", "0", ";    \n}\n\n\n", "\n", "以下是执行结果：", "\n", "请输入学生人数：", "len = 3    （仅“3”为手动输入。）", "第1名学生的信息Press any key to continue"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;WIFI模块可以拆下来焊个USB头当无线网卡用&amp;#xff0c;其它部分没多大用&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["这两个电路板能不能重新烧录程序呀在哪里烧录，从监控摄像头上拆下来的", ["从监控摄像头拆下来的主板是否还有再利用的价值，有Wi-Fi模组，和摄像头，想要重新利用一下", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/qq_33281417/article/details/53282205", "Konwledge_Point": "主程序", "Question": ["小程序 絕對定位 上拉加載 非常困難 頂不到導致有缺陷", ["我的問題 之前有調整過 當時候 正常 今天改了 一下 上拉加載非常的困難", "\n\n", "我使用了fixed 這個定位 我在右邊的view ab 麻煩看一下 我的css ", "\n\n", "page {", "\n  background: #f5f5f5;", "\n}", "\n\n", "/*总体主盒子*/", "\n\n", "#container {", "\n  position: relative;", "\n  width: 100%;", "\n  height: 100%;", "\n  background-color: #fff;", "\n  color: #939393;", "\n}", "\n\n", "/*左侧栏主盒子*/", "\n\n", ".nav_left {", "\n  /*设置行内块级元素（没使用定位）*/", "\n  position: fixed;", "\n  width: 25%;", "\n  height:100%;", "\n  /*主盒子设置背景色为灰色*/", "\n  background: #f5f5f5;", "\n  text-align: center;", "\n\n", "}", "\n\n", "/*左侧栏list的item*/", "\n\n", ".nav_left .nav_left_items {", "\n  /*每个高30px*/", "\n  height: 30px;", "\n  /*垂直居中*/", "\n  line-height: 30px;", "\n  /*再设上下padding增加高度，总高42px*/", "\n  padding: 6px 0;", "\n  font-size: 16px;", "\n}", "\n/*左侧栏list的item被选中时*/", "\n.nav_left .nav_left_items.active {", "\n  /*背景色变成白色*/", "\n  background: #fff;", "\n  display: flex;", "\n  justify-content: space-between;", "\n}", "\n.nav_left .nav_left_items.active view:nth-child(1){", "\n  background: #fff000;", "\n  padding: 10rpx 5rpx;", "\n}", "\n.nav_left .nav_left_items.active view:nth-child(2){", "\n  font-size: 17px;", "\n  color: #000000; ", "\n}", "\n/*右侧栏主盒子*/", "\n\n", ".nav_right {", "\n  /*右侧盒子使用了绝对定位*/", "\n  position: absolute;", "\n  top: 0;", "\n  right: 0;", "\n  /*宽度75%，高度占满，并使用百分比布局*/", "\n  width: 75%;", "\n  box-sizing: border-box;", "\n  background: #fff;", "\n\n", "}", "\n\n", ".hot-poster {", "\n  display: flex;", "\n  flex-direction: column;", "\n  height: 84px;", "\n  border-bottom: 1px solid #dedede;", "\n}", "\n\n", ".hot-intro {", "\n  display: flex;", "\n  flex-direction: row;", "\n}", "\n\n", ".hot-img {", "\n  width: 40%;", "\n  margin: 10rpx;", "\n}", "\n\n", ".hot-img image {", "\n  width: 108px;", "\n  height:72px;", "\n}", "\n\n", ".hot-title {", "\n display: flex;", "\n flex-direction: column;", "\n justify-content: space-between;", "\n width:58%;", "\n margin: 15rpx 0; ", "\n\n", "}", "\n\n", ".hot-title view:nth-child(1) {", "\n  font-size: 14px;", "\n  color: #000000; ", "\n  align-self: flex-start;", "\n}", "\n\n", ".hot-title view:nth-child(2) {", "\n  font-size: 12px;", "\n  color: #999;", "\n  align-self: flex-start;", "\n}", "\n\n", "/* 右側上方導航盒*/", "\n\n", ".nav_rigth_Nav{", "\n  position: fixed;", "\n  top: 0;", "\n  right: 0;", "\n  /*宽度75%，高度占满，并使用百分比布局*/", "\n  width: 75%;", "\n  padding: 9px 15px 9px 9px;", "\n  box-sizing: border-box;", "\n  display: flex;", "\n  justify-content: space-between;", "\n  background: #fff;", "\n  font-size: 16px;", "\n  z-index: 99;", "\n  border-bottom: 1px solid #dedede;", "\n}", "\n.nav_riget_personal{ ", "\n    align-self: center;", "\n    color:#242424;", "\n}", "\n\n", ".nav_riget_box{", "\n    position: relative;", "\n    text-align: right;", "\n\n", "}", "\n.nav_select{", "\n    margin-top:41px;", "\n    z-index: 100;", "\n    position: fixed;", "\n    top: 0;", "\n    left: 188rpx;", "\n    text-align: right;", "\n    background: #FFFFFF;", "\n    width: 94%;", "\n\n", "}", "\n.nav_one{", "\n    height: 30px;", "\n    font-size: 16px;", "\n    padding: 6px 15px 6px 0;", "\n    background: #FFFFFF;", "\n    margin-right: 100rpx;", "\n    text-align: right;", "\n    line-height: 30px;", "\n    width: 75%;", "\n    display: flex;", "\n    justify-content: flex-end;", "\n    color:#242424;", "\n    border-bottom: 1px solid #dedede;", "\n}"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/weidade3621/article/details/3639402", "Konwledge_Point": "主程序", "Question": ["怎么得到目标程序进程地址里的dll导入表？用readprocessmemory api函数怎么实现？", ["怎么得到目标程序进程地址里的dll导入表？用readprocessmemory api函数怎么实现？"]], "Tag": "程序设计"}
{"Answer": "一体机Windows，单主机Linux，用远程控制软件就行啊。\r\n[Windows远程桌面控制Linux](http://www.gz-benet.com.cn/study/HTML/study_11116.html \"\")\r\n[Windows系统远程控制Linux系统的详细图文方法介绍](http://www.jb51.net/os/windows/44597.html \"\")", "Konwledge_Point": "主程序", "Question": ["求助，关于双主机的可行性", ["我打算用给家里的一体机外再加一个主机，一个装windows系统另一个装linus系统，不知道这样是否可行？另外是否需要一些另外的程序关联，"]], "Tag": "程序设计"}
{"Answer": "Creatchart1方法改成静态的public的试试看", "Konwledge_Point": "主程序", "Question": ["C#中主窗口调用子窗口的方法", ["主窗口为Form1，子窗口为w1", "\nForm1下程序", "\n\n", "Win1 w1; w1 = new Win1();\n  private void toolStripButton1_Click(object sender, EventArgs e)\n        {\n            this.panel1.Controls.Clear();  // 清空原有的控件\n            w1.TopLevel = false;  // 非顶级窗口\n            w1.FormBorderStyle = FormBorderStyle.None;  // 不显示标题栏\n            w1.Dock = System.Windows.Forms.DockStyle.Fill;  // 填充panel\n            this.panel1.Controls.Add(w1);  // 添加w1窗体\n            w1.Show();\n        }\n                 private void button1_Click(object sender, EventArgs e)\n        {\n            if (flag == true && flag1 == true && flag2 == true)\n            {\n                w1.Creatchart1();\n\n            }\n        }\n", "\n\n", "下面是子窗口Win1的其中的一个chart的程序", "\n\n", "private void Creatchart1()\n        {\n            string a = ((Form1)this.Owner).comboBox1.Text;\n            string b = ((Form1)this.Owner).comboBox2.Text;\n            string c = ((Form1)this.Owner).comboBox3.Text;\n            string wax = a + b + c;\n            string dbPath = @\"D:\\历年高考分数.db\";\n            string sq = @\"Data Source=\" + dbPath;\n            m = new SQLiteConnection(sq);\n            m.Open();\n            SQLiteDataAdapter mAdapter = new SQLiteDataAdapter(\"select \" + wax + \",yxlc from 表2\", m);\n            DataSet ds = new DataSet();\n            mAdapter.Fill(ds);\n            DataTable dt = ds.Tables[0];\n            Series Series1 = new Series();\n            chart1.DataSource = dt;\n            Series1.IsValueShownAsLabel = false;//是否显示图例\n            chart1.Series.Add(Series1);\n            chart1.Series[\"Series1\"].ChartType = SeriesChartType.Spline;//形状\n            chart1.Series[0].XValueMember = \"yxlc\";//X轴数据成员列\n            chart1.Series[0].YValueMembers = wax;\n            chart1.Series[0].IsValueShownAsLabel = true;//显示坐标\n            chart1.DataBind();\n            chart1.BringToFront();\n            m.Close();\n        }\n", "\n\n", "w1.TopLevel = false; 这里改成true时，显示顶级子窗口不能添加到容器控件里", "\n程序启动时this.panel1.Controls.Add(w1); // 添加w1窗体这里显示：非顶级窗体不能显示为模式对话框。在调用 Show 之前应从所有父窗体中移除该窗体"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大概率是glibc库版本不一致的问题&lt;br /&gt;我以前弄过&amp;#xff0c;安装qtcreator高版本&amp;#xff0c;他依赖的glibc版本高&amp;#xff0c;这时就会有问题&amp;#xff0c;你需要在你虚拟机里提升glibc&amp;#xff1b;或者你的程序编译用麒麟里的环境&amp;#xff1b;还有就是升级麒麟里的glibc版本&amp;#xff0c;不过这个最好在线升级&amp;#xff0c;一些lib还是有相关依赖的&amp;#xff0c;麒麟系统很烦的&lt;/p&gt;\n&lt;p&gt;下面是我找的一些链接&lt;br /&gt;&lt;a href=\"https://www.linuxquestions.org/questions/linux-general-1/glibc-backward-compatibility-4175445005/\" id=\"textarea_1648888406658_1648888496277_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.linuxquestions.org/questions/linux-general-1/glibc-backward-compatibility-4175445005/&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://stackoverflow.com/questions/40932215/error-while-using-a-newer-version-of-glibc\" id=\"textarea_1648888406658_1648888496277_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://stackoverflow.com/questions/40932215/error-while-using-a-newer-version-of-glibc&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["麒麟系统下在虚拟机里运行编译好的程序时终端报错，如何解决？", ["我在虚拟机里运行编译好的程序时，终端报了个这样的错误：", "./程序名: error while loading shared libraries:  __kernel_gettimeofday: invalid mode for dlopen(): invalid argument", "这是哪个库的问题吗，我在原来的主机里运行没有问题，虚拟机是布在阿里云上的"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/weibo1230123/article/details/79116016", "Konwledge_Point": "主程序", "Question": ["QT5 通过按钮从子窗体返回主窗体", ["从已创建的子窗体中返回主窗体，百度了各种方法尝试都不行", "\n 学生小白跪求大佬回答"]], "Tag": "程序设计"}
{"Answer": "之前请教的问题已经解决了，现在在这里说一下，希望能帮到同样需要解决这个问题的小白菜们。\r\n之前我一直在纠结怎样直接使用cgi命令跳转,但后来有人告诉我：cgi命令的根目录是cgi-bin，是不能直接访问到HTML文件所在目录的。\r\n虽然也有人能够承成功的使用命令跳转，但他们会在其他的一些配置目录中将IP地址打开，在启动服务器时会先将这些配置文件打开，这样就能够直接进行之前的location定位，直接跳转。但这样的方法并不是适合所有人群。还有一种方法就是在cgi编写的页面中将你想要跳转的页面嵌套进去，从而达到跳转的目的。这种方法我没有去试，但从理论上来说应该是可行的。\r\n我使用的方法还是使用js,之前在没接触js之前，总感觉会很麻烦，但当你把思路整理清楚后就会知道其实使用到的js知识并不多。下面我来说一下我的思路：\r\n首先，编写一个1.js文档用来做以下工作：\r\n\t\t\t\t1.连接cgi；\r\n\t\t\t\t2.进行用户名密码的页面提示，达到一定条件后调用2.js文档中的跳转命令；\r\n其次，编写cgi，进行用户名密码的验证，调用其他程序；\r\n然后，编写2.js文档，连接cgi，编写一个switch函数，用来做各个页面的跳转，同时在各个页面中将switch函数的跳转指令加进去。（当然每个页面都要有js的连接，）\r\n以上就是解决问题的方法，希望能帮到你们，如何还有疑问的可以留言，我看到后会恢复的", "Konwledge_Point": "主程序", "Question": ["cgi在登录验证后怎么跳转到主页面，不会使用js.", ["这俩天才接触cgi，要做一个在登录验证后直接连接到主页面的cgi程序，网上看了好多，有些说使用js,可楼主不会js啊，有没有直接在cgi程序中调用已经编写好的主页面的命令？就是登录页面在达到一些条件后cgi会自动连接转到主页面的，求各位大神给条这样命令"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在python多进程模型下&amp;#xff0c;默认确实是这样的&amp;#xff0c;子进程会随着主进程的退出而退出。但是可以通过修改属性值来让子进程继续运行。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["python父进程终止后，子进程会自动终止么？", ["为什么在pycharm中我的父进程结束后子进程也终止了，是python本来就自动终止还是pycharm给我终止了"]], "Tag": "程序设计"}
{"Answer": "在A主机上使用相同版本的源码，对B主机上正在运行的程序进行调试。\r\n1. 找到A主机上的远程调试监视器程序，通常在目录 D:\\Program\\Microsoft Visual Studio 12.0\\Common7\\IDE\\Remote Debugger\\x64 中，整个目录打包发送至B主机。X86和X64对应32位和64位版本。\r\n2. 在B主机上运行远程调试监视器程序msvsmon.exe，点击：工具-&gt;选项，选择“无身份验证”，并选中“允许任何用户进行调试”。确定。\r\n3.在项目点击\"调试\"-&gt;\"附加到进程\" 在\"传输\"的位置选择\"远程(无身份验证)\",限定符处输入运行项目的端口和IP ,按下回车键,选择\"显示所有用户的进程\", 在进程中选择要调试的项目,如果是网站类的一般为w3wp.exe", "Konwledge_Point": "主程序", "Question": ["vs 可以远程跨网段调试应用程序吗?", ["VS一般是要在同网段内进行程序调试的,但有时想调试用户上遇到的非常奇葩的问题,就想远程调试一下,不通过打日志", "\n和dump文件.有这方面经验的大神分享一下经验吧,谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;why the mongo driver is looking on localhost if I'm setting the address of my mongoDB server.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;When &lt;a href=\"https://godoc.org/go.mongodb.org/mongo-driver/mongo\" rel=\"nofollow noreferrer\"&gt;mongo-go-driver&lt;/a&gt;'s client is connecting to a MongoDB deployment, it will perform &lt;a href=\"https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring-summary.rst\" rel=\"nofollow noreferrer\"&gt;Server Discovery and Monitoring&lt;/a&gt; to discovers one or more servers (MongoDB being a distributed database by nature). One of the early steps is to begin monitoring the topology by invoking &lt;a href=\"https://docs.mongodb.com/manual/reference/command/isMaster/\" rel=\"nofollow noreferrer\"&gt;isMaster command&lt;/a&gt; on all servers. Based on &lt;a href=\"https://docs.mongodb.com/manual/reference/command/isMaster/#replica-sets\" rel=\"nofollow noreferrer\"&gt;the output of isMaster&lt;/a&gt; the client will try to contact those servers. In the case of &lt;a href=\"https://docs.mongodb.com/manual/replication/\" rel=\"nofollow noreferrer\"&gt;Replica Set&lt;/a&gt; (your case), the client strives to connect to the primary server (from &lt;a href=\"https://docs.mongodb.com/manual/reference/command/isMaster/#isMaster.primary\" rel=\"nofollow noreferrer\"&gt;isMaster.primary&lt;/a&gt;). &lt;/p&gt;\n\n&lt;p&gt;However, the hostname address is not a &lt;a href=\"https://en.wikipedia.org/wiki/Fully_qualified_domain_name\" rel=\"nofollow noreferrer\"&gt;Fully Qualified Domain Name (FQDN)&lt;/a&gt; to be resolvable from the client's machine. The client's machine trying to connect to &lt;code&gt;localhost&lt;/code&gt; defined as the replica set primary, thus failed to make a connection. Also, this is why you're seeing a message status where &lt;code&gt;current topology: Type: Unknown&lt;/code&gt; but &lt;code&gt;State: Connected&lt;/code&gt;. It failed to discover the deployment topology even before able to select a server to execute the command (&lt;code&gt;ping&lt;/code&gt;) &lt;/p&gt;\n\n&lt;p&gt;You can solve this by setting resolvable hostnames for the value of the members field in the replica set configuration. In addition, when possible, use a logical DNS hostname instead of an ip address, as this avoids configuration changes due to ip address changes.&lt;/p&gt;\n\n&lt;p&gt;You can change the replica set hostnames using &lt;a href=\"https://docs.mongodb.com/manual/reference/method/rs.reconfig/#rs.reconfig\" rel=\"nofollow noreferrer\"&gt;rs.reconfig()&lt;/a&gt; i.e: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cfg = rs.conf()\ncfg.members[1].host = \"&amp;lt;RESOLVABLE HOSTNAME&amp;gt;:&amp;lt;PORT NUMBER&amp;gt;\"\nrs.reconfig(cfg)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your case, where there's only one replica set member it's quite straight forward. However if you're in production mode and have more than one members you can follow the steps outlined in &lt;a href=\"https://docs.mongodb.com/manual/tutorial/change-hostnames-in-a-replica-set/#change-hostnames-in-a-replica-set\" rel=\"nofollow noreferrer\"&gt;Change Hostnames in a Replica Set&lt;/a&gt; where there are two options: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://docs.mongodb.com/manual/tutorial/change-hostnames-in-a-replica-set/#replica-set-change-hostname-no-downtime\" rel=\"nofollow noreferrer\"&gt;Change Hostnames without disrupting availability&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://docs.mongodb.com/manual/tutorial/change-hostnames-in-a-replica-set/#replica-set-change-hostname-downtime\" rel=\"nofollow noreferrer\"&gt;Change Hostnames at the same time (one-go)&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Having said all the explanation above, \nalternatively, as your replica set deployment is only one server (development mode) you can set the connection mode to &lt;code&gt;direct&lt;/code&gt; via &lt;a href=\"https://godoc.org/go.mongodb.org/mongo-driver/mongo/options#ClientOptions.SetDirect\" rel=\"nofollow noreferrer\"&gt;ClientOptions.SetDirect()&lt;/a&gt;. Which specifies whether the client should connect directly to a server instead of auto-discovering other servers in the cluster (although this means you have no redundancy) i.e.: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;opts := options.ClientOptions{ ConnectTimeout: &amp;amp;timeoutVariable}\nopts.SetDirect(true)\nopts.ApplyURI(addr)\n\nclient, err := mongo.Connect(connect.TODO(), &amp;amp;opts)\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["MongoDB Go驱动程序在本地主机上查找的时间不应该", ["\n\n", "I'm not a Go guy, just need to use a plugin written in Go and I'm having some trouble between plugin and MongoDB.", "\n\n", "The error is:", "\n\n", "server selection error: server selection timeout\ncurrent topology: Type: Unknown\nServers:\nAddr: localhost:27017, Type: Unknown, State: Connected, Avergage RTT: 0, Last error: dial tcp 127.0.0.1:27017: connect: connection refused\nexit status 1\n", "\n\n", "My configuration:", "\n\n", "time=“2019-09-03T16:29:35Z” level=debug msg=“Host: ip-XXX-XX-XX-XXX.sa-east-1.compute.internal”\ntime=“2019-09-03T16:29:35Z” level=debug msg=“Port: 27017”\ntime=“2019-09-03T16:29:35Z” level=debug msg=“Username: user”\ntime=“2019-09-03T16:29:35Z” level=debug msg=“Password: user123*”\ntime=“2019-09-03T16:29:35Z” level=debug msg=“DBName: dbBackend”\n", "\n\n", "The plugin snippet that performs the connection:", "\n\n", "addr := fmt.Sprintf(\"mongodb://%s:%s\", m.Host, m.Port)\n\nto := 60 * time.Second\nopts := options.ClientOptions{\n    ConnectTimeout: &to,\n}\n\nopts.ApplyURI(addr)\n\n\n\nif m.Username != \"\" && m.Password != \"\" {\n    opts.Auth = &options.Credential{\n        AuthSource:  m.DBName,\n        Username:    m.Username,\n        Password:    m.Password,\n        PasswordSet: true,\n    }\n}\n\nclient, err := mongo.Connect(context.TODO(), &opts)\n\nif err != nil {\n    return m, errors.Errorf(\"couldn't start mongo backend. error: %s\n\", err)\n}\n\nerr1 := client.Ping(context.TODO(), nil)\n\nif err1 != nil {    \n    log.Fatal(err1) // error happens here\n} \n\nlog.Debugf(\"MONGO CONNECTED\")\n\nm.Conn = client\n\nreturn m, nil\n", "\n\n", "I just can't realize why the mongo driver is looking on localhost if I'm setting the address of my mongoDB server.", "\n\n", "EDIT 1", "\n\n", "My db has replica set configured only to use change streams.", "\n\n", "This is my RS configuration:", "\n\n", "{\n    \"_id\" : \"rs0\",\n    \"version\" : 69559,\n    \"protocolVersion\" : 1,\n    \"writeConcernMajorityJournalDefault\" : true,\n    \"members\" : [\n        {\n            \"_id\" : 0,\n            \"host\" : \"localhost:27017\",\n            \"arbiterOnly\" : false,\n            \"buildIndexes\" : true,\n            \"hidden\" : false,\n            \"priority\" : 1,\n            \"tags\" : {\n\n            },\n            \"slaveDelay\" : 0,\n            \"votes\" : 1\n        }\n    ],\n    \"settings\" : {\n        \"chainingAllowed\" : true,\n        \"heartbeatIntervalMillis\" : 2000,\n        \"heartbeatTimeoutSecs\" : 10,\n        \"electionTimeoutMillis\" : 10000,\n        \"catchUpTimeoutMillis\" : -1,\n        \"catchUpTakeoverDelayMillis\" : 30000,\n        \"getLastErrorModes\" : {\n\n        },\n        \"getLastErrorDefaults\" : {\n            \"w\" : 1,\n            \"wtimeout\" : 0\n        },\n        \"replicaSetId\" : ObjectId(\"5cf684c3c0db3f53727d1bb4\")\n    }\n}\n", "\n\n", "Any help solving it appreciated.\nThanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;本地主机通常指的是你当前使用的计算机或设备&amp;#xff0c;也就是你自己的电脑或手机等。而网络主机则指的是通过网络连接到你的设备的其他计算机或设备&amp;#xff0c;例如服务器、路由器、交换机等。&lt;br /&gt;在网络中&amp;#xff0c;每个设备都有一个唯一的IP地址&amp;#xff0c;用于标识该设备在网络中的位置。本地主机的IP地址通常是由路由器分配的&amp;#xff0c;而网络主机则可能具有公网IP地址或局域网IP地址。&lt;br /&gt;端口用于标识一个进程或服务在网络主机上的位置&amp;#xff0c;例如HTTP服务通常使用端口80&amp;#xff0c;SMTP服务通常使用端口25。在网络通信中&amp;#xff0c;通过IP地址和端口号可以唯一地标识一个进程或服务。&lt;br /&gt;ps aux命令是用于在本地主机上查询进程信息的命令&amp;#xff0c;它可以列出当前运行的所有进程的详细信息&amp;#xff0c;包括进程ID&amp;#xff08;PID&amp;#xff09;、进程状态、CPU使用率等。&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["网络主机和本地主机的区别", ["端口表示在网络主机上，标示一个进程（应用程序是死的）", "ps aux命令是查询pid，是在本地主机上表示一个进程", "本地主机和网络主机是啥啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;Is it possible to directly host a go app on nginx&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Nginx can communicate with its backend (your app) through various different mechanisms. Some of them are:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Via CGI/FastCGI (process multiplexing)&lt;/li&gt;\n&lt;li&gt;Via HTTP (reverse proxying)&lt;/li&gt;\n&lt;li&gt;Serving static files which your app produced&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;does the different approaches affects the configuration someway?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, each case is very different.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Ok, use 8 workers, please&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That would suggest FastCGI, which I believe is what you mean when you say \"directly hosting an application on nginx\".&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;telling nothing to go's internal webserver... What would happen?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Each Go FastCGI process would spawn a lot of goroutines, which are multiplexed to software threads, which are multiplexed to hardware threads, which are multiplexed to CPU cores.&lt;/p&gt;\n\n&lt;p&gt;Go's &lt;code&gt;net/http&lt;/code&gt; server is good enough for a production environment, you don't necessarily need nginx unless you want to use some nginx-specific feature. There are only so many use cases where a FastCGI setup makes sense. You just add overhead, basically.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["Go（lang）应用程序：Nginx反向代理VS Nginx主机", ["\n\n", "I have already read some of the ", "questions", " about ", "go", " and ", "nginx", " but I didn't find any answer to my one.", "\n\n", "I think (i'm not an expert) that using nginx as a reverse proxy in front of a ", "net/http", " go server is different as directly hosting your go application with nginx.", "\nShout at me if I'm wrong, ok?", "\n\n", "The question came to me because I need to develop an application (possibly with go, just to learn something new) and have total control on the webserver, especially on the number of workers it uses to answer requests.", "\n\n", "So, here come the questions:", "\n\n", "\n", "Is it possible to directly host a go app on nginx, or is it nginx that only serves static files (if the answer is \"NO\", then the second question doesn't make much sense)?", "\n", "What are the key differences between the two approaches above, precisely, does the different approaches affects the configuration someway?", "\n", "I am scared about telling nginx: \"Ok, use 8 workers, please\" and telling nothing to go's internal webserver... What would happen?", "\n", "\n", "Thank you so much in advance", "\n    "]], "Tag": "程序设计"}
{"Answer": "w1.Show();\r\n-&gt;\r\nw1.Show(this);\r\n\r\n\r\n string a = ((Form1)ths.Owner).comboBox1.Text;\r\n \r\n .comboBox1要定义成public的", "Konwledge_Point": "主程序", "Question": ["在C#中用主窗口的控件控制子窗口的控件，子窗口（Win1）访问主窗口（Form1）的控件", ["用下面的方法，实现在主窗口按完toolStripButton1，子窗口在主窗口的panel1显示（为了使每个子窗口显示时，左边和上边都有主窗口的菜单栏）", "\n\n", " Win1 w1; w1 = new Win1();\n  private void toolStripButton1_Click(object sender, EventArgs e)\n        {\n            this.panel1.Controls.Clear();  // 清空原有的控件\n            w1.TopLevel = false;  // 非顶级窗口\n            w1.FormBorderStyle = FormBorderStyle.None;  // 不显示标题栏\n            w1.Dock = System.Windows.Forms.DockStyle.Fill;  // 填充panel\n            this.panel1.Controls.Add(w1);  // 添加w1窗体\n            w1.Show();\n        }\n                 private void button1_Click(object sender, EventArgs e)\n        {\n            if (flag == true && flag1 == true && flag2 == true)\n            {\n                w1.Creatchart1();\n\n            }\n        }\n", "\n\n", "下面是子窗口Win1的其中的一个chart的程序", "\n\n", "            private void Creatchart1()\n        {\n            string a = ((Form1)this.Owner).comboBox1.Text;\n            string b = ((Form1)this.Owner).comboBox2.Text;\n            string c = ((Form1)this.Owner).comboBox3.Text;\n            string wax = a + b + c;\n            string dbPath = @\"D:\\历年高考分数.db\";\n            string sq = @\"Data Source=\" + dbPath;\n            m = new SQLiteConnection(sq);\n            m.Open();\n            SQLiteDataAdapter mAdapter = new SQLiteDataAdapter(\"select \" + wax + \",yxlc from 表2\", m);\n            DataSet ds = new DataSet();\n            mAdapter.Fill(ds);\n            DataTable dt = ds.Tables[0];\n            Series Series1 = new Series();\n            chart1.DataSource = dt;\n            Series1.IsValueShownAsLabel = false;//是否显示图例\n            chart1.Series.Add(Series1);\n            chart1.Series[\"Series1\"].ChartType = SeriesChartType.Spline;//形状\n            chart1.Series[0].XValueMember = \"yxlc\";//X轴数据成员列\n            chart1.Series[0].YValueMembers = wax;\n            chart1.Series[0].IsValueShownAsLabel = true;//显示坐标\n            chart1.DataBind();\n            chart1.BringToFront();\n            m.Close();\n        }\n", "\n\n", "w1.TopLevel = false; 这里改成true时，显示顶级子窗口不能添加到容器控件里", "\n程序启动时this.panel1.Controls.Add(w1); // 添加w1窗体这里显示：非顶级窗体不能显示为模式对话框。在调用 Show 之前应从所有父窗体中移除该窗体。"]], "Tag": "程序设计"}
{"Answer": "代码中没有定义main函数。\r\n作为入口，main函数是必须的，在代码中确实也没有找到。\r\n\r\n**如果对您有帮助，请采纳答案好吗，谢谢！**", "Konwledge_Point": "主程序", "Question": ["win32控制台程序无法找到main函数入口", ["// FO9-UDP.cpp : 定义控制台应用程序的入口点。", "\n//", "\n\n", "#include \"stdafx.h\"", "\n#include ", "\n#include ", "\n#include ", "\n#pragma  comment(lib,\"WS2_32\")", "\n\n", "int sd; /* Socket Discripter */", "\nstruct sockaddr_in my;", "\nstruct sockaddr_in dst;", "\nstruct sockaddr_in from;", "\n#define MY_IP 0xC0A8010A // 自身的IP 地址：192.168.001.010", "\n#define MY_PORT 10010 // 自身的端口编号", "\n#define DST_IP 0xC0A80106 // 对方的IP 地址：192.168.001.006", "\n#define DST_PORT 10020 // 对方的端口编号", "\nunsigned char sbuf[2048];", "\nunsigned char rbuf[2048];", "\n// 存在于218TCP.C 中", "\nvoid main_udp(void);", "\nextern void mk_cmd_data(void);", "\nextern int chk_rsp_data(int);", "\n\n", "// 读取扩展MEMOBUS 协议、保持寄存器的内容（SFC=09），制作命令", "\nvoid mk_cmd_data(void)", "\n{", "\n// 218 标题部的制作", "\n// 数据类型设定", "\nsbuf[0] = 0x11;// 扩展MEMOBUS （指令命令）", "\n// 串行编号设定（每次发送时增加）", "\nsbuf[1] = 0x00;", "\n// 设定发送目标的通道编号", "\nsbuf[2] = 0x00; // PLC 侧通道不固定，因此可固定为0", "\n// 设定发送目标的通道编号", "\nsbuf[3] = 0x00; // 因电脑中无通道概念，固定为0。", "\nsbuf[4] = 0x00; // 备用", "\nsbuf[5] = 0x00; // 备用", "\n// 所有数据数设定（从218 标题的首部到MEMOBUS 数据的最后）", "\nsbuf[6] = 0x16; // L （22 字节=218 标题（12 字节）+ MEMOBUS 数据（10 字节））", "\nsbuf[7] = 0x00; // H", "\nsbuf[8] = 0x00;// 备用", "\nsbuf[9] = 0x00;// 备用", "\nsbuf[10] = 0x00;// 备用", "\nsbuf[11] = 0x00;// 备用", "\n// MEMOBUS 数据部的制作", "\n// Length 为从MFC 开始到数据的最后", "\nsbuf[12] = 0x08; // MEMOBUS 数据长度（L）", "\nsbuf[13] = 0x00; // MEMOBUS 数据长度（H）", "\n// MFC 固定为0x20", "\nsbuf[14] = 0x20;", "\n// SFC 为0x09 （读取保持寄存器的内容（扩展））", "\nsbuf[15] = 0x09;", "\n// CPU 编号设定", "\nsbuf[16] = 0x10; // 对方为CPU1。多台时为1-4。自身的CPU 编号固定为0。", "\nsbuf[17] = 0x00; // Spare 固定为0", "\n// 参考编号设定", "\nsbuf[18] = 0x00; // Adr(L) 首地址为MW0", "\nsbuf[19] = 0x00; // Adr(H)", "\n// 寄存器数设定", "\nsbuf[20] = 0x0A; // DataNum(L) 从首地址读取10 字", "\nsbuf[21] = 0x00; // DataNum(H)", "\n}", "\n\n", "// 响应数据的检查", "\nint chk_rsp_data( int rlen )", "\n{", "\nint rc;", "\nrc = 0;", "\n// 所有数据长度的检查", "\nif ( rlen != 40 )// 读取10 字对应的响应为40 字节", "\n// （218 标题（12 字节）+MEMOBUS 数据（28 字节））", "\n{", "\nrc = -1;", "\nreturn( rc );", "\n}", "\n// 数据包类型检查", "\nif ( rbuf[0] != 0x19 )// 非MEMOBUS 响应", "\n{", "\nrc = -2;", "\nreturn( rc );", "\n}", "\n// 串行编号检查", "\nif (sbuf[1] != rbuf[1] )// 与命令的串行编号不一致", "\n{", "\nrc = -3;", "\nreturn( rc );", "\n}", "\n// 传送文件中的所有数据长度的检查", "\nif (( rbuf[6] != 0x28 ) &&(rbuf[7] !=0x00))// 40 字节= 218 标题(12 字节)+MEMOBUS 数据(28 字节)", "\n{", "\nrc = -4;", "\nreturn( rc );", "\n}", "\n// MEMOBUS 数据长度检查", "\nif (( rbuf[12] != 0x1A ) || (rbuf[13] != 0x00))// 26 字节", "\n{", "\nrc = -5;", "\nreturn( rc );", "\n}", "\n// MFC 的检查", "\nif ( rbuf[14] != 0x20 )// MFC 固定为0x20", "\n{", "\nrc = -6;", "\nreturn( rc );", "\n}", "\n// SFC 的检查", "\nif ( rbuf[15] != 0x09 )// SFC 为0x09 （读取保持寄存器的内容）", "\n{", "\nrc = -7;", "\nreturn( rc );", "\n}", "\n// 寄存器数的检查", "\nif (( rbuf[18] != 0x0A ) || (rbuf[19] != 0x00))// 非10 字", "\n{", "\nrc = -8;", "\nreturn( rc );", "\n}", "\n// 读取寄存器数据rbuf[20] 以后", "\nreturn( rc );", "\n}", "\n\n", "void main_udp(void)", "\n{", "\nWSADATA wsadata;", "\nint rc, slen, rlen, fromlen;", "\n// Winsock.dll 的使用声明（最初必需）", "\nrc = WSAStartup( 0x0101, &wsadata );", "\nif ( rc != 0 )", "\n{", "\nexit(0);", "\n}", "\n// sockaddr 构造体（IP 地址、端口编号等）的清零", "\nmemset( (char *)&my, 0, sizeof(struct sockaddr));", "\nmemset( (char *)&dst, 0, sizeof(struct sockaddr));", "\n// 自身的IP 地址、端口编号的声明", "\nmy.sin_family = AF_INET;", "\nmy.sin_addr.s_addr = htonl( MY_IP );", "\nmy.sin_port = htons( MY_PORT );", "\n// 对方的IP 地址、端口编号的声明", "\ndst.sin_family = AF_INET;", "\ndst.sin_addr.s_addr = htonl( DST_IP );", "\ndst.sin_port = htons( DST_PORT );", "\n// UDP 套接字的生成", "\nsd = socket( AF_INET, SOCK_DGRAM, 0 );", "\nif ( sd <= 0 )", "\n{", "\nprintf( \"Error: Socket !!\\n\" );", "\nexit(0);", "\n}", "\n// 自局端口编号的捆绑配置", "\nrc = bind( sd, ( struct sockaddr *)&my, sizeof(struct sockaddr_in));", "\nif ( rc == -1 )", "\n{", "\nclosesocket( sd );", "\nprintf( \"Error: bind !!\\n\" );", "\nexit(0);", "\n}", "\n// 分配自局端口编号后，制作指令数据。", "\nmk_cmd_data();", "\n// 反复执行发送命令和接收响应。", "\nwhile(1)", "\n{", "\n// 发送命令数据", "\n// 主控制器不能发送数据时，该处理不会结束。", "\nslen = sendto( sd,  reinterpret_cast(&sbuf[0]), 22, 0, (struct sockaddr *)&dst, sizeof(struct sockaddr));", "\n// 发送命令（22 字节）", "\nif ( slen != 22 )// 如果发送成功，则返回发送的字节数（22 字节）。", "\n{", "\nclosesocket(sd);", "\nprintf( \"Error: Send !! -> %d\\n\", slen );", "\nexit(0);", "\n}", "\n// 接收响应数据", "\n// 子控制器没有发送数据时，该处理不会结束。", "\nfromlen = sizeof(struct sockaddr);", "\n//将rbuf从无符号变量，转换为指针变量1-4字节", "\nrlen = recvfrom( sd, reinterpret_cast(&rbuf[0]), sizeof(rbuf), 0, (struct sockaddr *)&from, &fromlen );", "\n// 接收对方发送的数据", "\nif ( rlen <= 0 )// 如果接收错误则返回0 以下", "\n{", "\nclosesocket(sd);", "\nprintf( \"Error: Recv !! -> %d\\n\", rlen );", "\nexit(0);", "\n}", "\n// 响应数据的检查", "\nrc = chk_rsp_data( rlen );", "\nif ( rc != 0 )// 接收数据异常", "\n{", "\nclosesocket(sd);", "\nexit(0);", "\n}", "\n\n", "sbuf[1] ++;// 增加218 标题的串行编号", "\nprintf( \"Hit Any Key !!\\n\" );", "\n}", "\n}", "\n\n", "MSVCRTD.lib(crtexe.obj) : error LNK2019: 无法解析的外部符号 ", "main，该符号在函数 _", "_tmainCRTStartup 中被引用", "\n已尝试修改项目预处理及系统配置属性，更改为CONSOLE,但是仍然报错？求解"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\nClick(View view)都没有调用怎么生效&lt;/pre&gt;\n\n&lt;p&gt;仔细看看控件的点击事件应该怎么写&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["android 的sharedpreference 案例 用户名,密码的保存与调用,清除", ["虚拟机运行之后没效果,三个按钮的功能一个也不能用.", "\n\n", "运行的虚拟机:", "\n\n", "\n\n", "布局文件代码:", "\n\n", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/activity_share_preference\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    >\n    <Button\n        android:id=\"@+id/btn_Get\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_centerInParent=\"true\"\n        android:layout_marginTop=\"258dp\"\n        android:layout_marginEnd=\"160dp\"\n        android:layout_marginRight=\"160dp\"\n        android:text=\"获取\" />\n    <Button\n        android:id=\"@+id/btn_Save\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginStart=\"37dp\"\n        android:layout_marginLeft=\"37dp\"\n        android:layout_marginTop=\"257dp\"\n        android:text=\"保存\" />\n    <Button\n        android:id=\"@+id/btn_Clear\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_marginTop=\"260dp\"\n        android:layout_marginEnd=\"34dp\"\n        android:layout_marginRight=\"34dp\"\n        android:text=\"清除\" />\n    <EditText\n        android:id=\"@+id/edit1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_marginTop=\"105dp\"\n        android:layout_marginEnd=\"25dp\"\n        android:layout_marginRight=\"25dp\"\n        android:ems=\"10\"\n        android:inputType=\"textPersonName\"\n        android:hint=\"姓名\" />\n    <EditText\n        android:id=\"@+id/edit2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_marginTop=\"174dp\"\n        android:layout_marginEnd=\"22dp\"\n        android:layout_marginRight=\"22dp\"\n        android:ems=\"10\"\n        android:inputType=\"textPersonName\"\n        android:hint=\"密码\" />\n    <TextView\n        android:id=\"@+id/textView4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginStart=\"79dp\"\n        android:layout_marginLeft=\"79dp\"\n        android:layout_marginTop=\"125dp\"\n        android:text=\"姓名:\" />\n    <TextView\n        android:id=\"@+id/textView5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginStart=\"76dp\"\n        android:layout_marginLeft=\"76dp\"\n        android:layout_marginTop=\"197dp\"\n        android:text=\"密码:\" />\n</RelativeLayout>", "\n\n", "\n", "SharePreferenceActivity代码", "\n\n", "\npackage com.example.myapplication;\n\nimport android.content.Context;\nimport android.content.SharedPreferences;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class SharePreferenceActivity extends AppCompatActivity {\n    \n    private EditText meditText1 ,meditText2 ;\n    private Button SaveBtn,GetBtn,ClearBtn;\n    //声明Sharedpreferenced对象\n    private SharedPreferences sp ;\n    \n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_share_preference);\n\n        meditText1= (EditText) findViewById(R.id.edit1);\n        meditText2 = (EditText) findViewById(R.id.edit2);\n\n        SaveBtn = (Button) findViewById(R.id.btn_Save);\n        GetBtn = (Button) findViewById(R.id.btn_Get);\n        ClearBtn = (Button) findViewById(R.id.btn_Clear);\n    }\n\n    public void Click(View view) {\n        \n        sp = getSharedPreferences(\"User\", Context.MODE_PRIVATE);\n        switch (view.getId()){\n            case R.id.btn_Save:\n                //获取到edit对象\n                SharedPreferences.Editor edit = sp.edit();\n                //通过editor对象写入数据\n                edit.putString(\"ValueName\",meditText1.getText().toString().trim());\n                edit.putString(\"ValuePass\",meditText2.getText().toString().trim());\n                //提交数据存入到xml文件中\n                edit.commit();\n                break;\n            case R.id.btn_Get:\n                \n                String value1 = sp.getString(\"ValueName\",\"默认名:路明非\");\n                String value2 = sp.getString(\"ValuePass\",\"默认密码:1234\");\n                meditText1.setText(value1);\n                meditText2.setText(value2);\n                break;\n            case R.id.btn_Clear:\n                meditText1.setText(\"\");\n                meditText2.setText(\"\");\n                break;\n        }\n    }\n}\n", "\n\n", "跪求大神解答!!!!", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201806/29/1530285996_780798.gif)\r\n\r\n我测试了下，用delphi封装窗体，然后再在vb里调用，是没问题的。\r\n代码下载：https://download.csdn.net/download/caozhy/10509109\r\n\r\n将编译好的dll 放在c盘根目录，再运行vb程序就能看到效果。", "Konwledge_Point": "主程序", "Question": ["delphi 封装程序到DLL里？", ["一个EXE程序，有一个主窗体，2个调用的窗体。", "\n可以把这个程序封装到DLL里吗，有其他程序调用这个DLL里的程序且功能可以用？", "\n请问可以吗，如何实现啊？"]], "Tag": "程序设计"}
{"Answer": "一般数据库端口是一个风险比较大的端口，很多sql注入等，所以很有可能路由器禁用了这个端口防止被攻击。所以你也连接不上", "Konwledge_Point": "主程序", "Question": ["C#在向服务器发送请求时发生传输级错误。", ["路由器防火墙/病毒过滤开启的情况下，con.open()异常。", "\n病毒过滤192.168.1.14 08-60-6E-C5-07-F0 端口:TCP:1433 被阻断。", "\nMSSqlserver 链接数据库引擎也直接在向服务器发送请求时发生传输级错误。 (provider: TCP 提供程序, error: 0 - 远程主机强迫关闭了一个现有的连接。)", "\n有没有在不调整用户本地路由器的情况下，的解决方案。", "\n谢谢谢谢谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;RewriteBase /&lt;/code&gt; seems like it could be the issue.&lt;/p&gt;\n\n&lt;p&gt;Remove it and compare against &lt;a href=\"https://laravel.com/docs/5.6/installation#pretty-urls\" rel=\"nofollow noreferrer\"&gt;https://laravel.com/docs/5.6/installation#pretty-urls&lt;/a&gt;.  Make sure in your &lt;code&gt;.env&lt;/code&gt; file you have &lt;code&gt;APP_URL&lt;/code&gt; value set to your application url.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["将Laravel应用程序部署到共享主机后，错误的分页链接", ["\n\n", "I used ajax to Load pagination content in its frame. Everything was OK in Local host. For example in ", "http://localhost:8000/exampleroute", " pagination link for comments section , page 2 is: ", "http://localhost:8000/content/page_comments?page=2", " and works well.", "\n\n", "But in shared host is: ", "https://example.com/content/page_comments?%2Fexampleroute=&page=2", " and links not work.\nI guess the problem is related to .htaccess file. so .htaccess contents here:", "\n\n", "<IfModule mod_rewrite.c>\n  RewriteEngine On\n  RewriteBase /\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule ^(.*)$ index.php?/$1 [L]\n</IfModule>\n<IfModule !mod_rewrite.c>\n  ErrorDocument 404 /index.php\n</IfModule>\n", "\n\n", "What is base problem?", "\n    "]], "Tag": "程序设计"}
{"Answer": "http://blog.163.com/china__xuhua/blog/static/1997231692011111494816398/", "Konwledge_Point": "主程序", "Question": ["C# 窗体关闭后 进程也关闭了 但是线程还在运行  怎么办", ["Thread TheOpenPrint;", "\nTheOpenPrint = new Thread(new ThreadStart(OpenPrin));", "\n            TheOpenPrint.IsBackground = true;  //申明的地方 ", "\n\n", "            private void CloseThread()\n    {\n        System.Environment.Exit(0);//退出全部线程  \n        System.Diagnostics.Process.GetCurrentProcess().Kill(); \n    }\n\n                    进程关闭了  窗体也关了 但是线程还在跑 怎么办\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;1) This would be bad practice.  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;By having multiple databases, you have to duplicate table design and future changes into all those databases as you go, instead of updating in one place. If you find yourself duplicating data, you probably have a design problem, and you add a lot of complexity.&lt;/li&gt;\n&lt;li&gt;If you store all the data in a single database, you can add a \"store_id\" field to your tables, designating which store the data belongs to.  For individual store users, you can filter by this field.  If a user is responsible for several stores, you can easily consolidate their data individually under a single log-in, because the data is available in the same database and table.&lt;/li&gt;\n&lt;li&gt;Because the data is consolidated, you will not have to duplicate data, and company-wide reports and dashboards are much easier to generate and maintain&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;2) Using one database, this extra work and complexity isn't necessary.  And you eliminate a huge area of problems and troubleshooting.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "主程序", "Question": ["MySQL：使用主数据库和辅助数据库设计应用程序[关闭]", ["\n\n", "I'm building an application for a bakery company using CodeIgniter (PHP) and MySQL. The company has about 250 franchises. I've considered the following aspects when designing the databases:", "\n\n", "\n", "Each franchise must have its own data, since they are independent from each other", "\n", "All their products are shared between all the franchises, meaning there's only one menu", "\n", "Each franchise will have their own stock counting", "\n", "There'll be 3 different dashboards for the application: An administrative dashboard and a sales dashboard for each franchise, and one only for the main company, which will contain all franchises' reports.", "\n", "\n", "I've designed a ", "Primary Database", " with all their products, franchises and users that will have access to the application. Each user will be assigned to a franchise and a dashboard.", "\n\n", "Then, each franchise will have a ", "Secondary Database", ", with their stock counting, sales, customers, etc. All franchises will have their own database.", "\n\n", "With this, the application will work as it follows: ", "\n\n", "\n", "User will access the app login page, and will be requested to\nenter the franchise id, his login and password. ", "\n", "All sales will be \"duplicated\" to de the primary database, allowing the company to keep track of all their franchises.", "\n", "\n", "My questions are:", "\n\n", "\n", "Assuming that all databases will be hosted at the same server, is it a good practice to have separate databases for each franchise? It's better to have different users assigned to each database, or only one user is enough?", "\n", "Can i store all franchise database's names on the primary database, and then create a custom login model, that will set a second database connection according to which database the franchise is assigned to?", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "不行？你的LoginWindow 是window组件定义的吗?\r\n在Main中写(别忘记导入LoginWindow)\r\nprivate function showLoginWindow():void{\r\nvar showNewWindow:LoginWindow = new LoginWindow(); \r\n        showNewWindow.open(true); \r\n\r\n}\r\n这样写应该没问题我是用Flex3不知道4有什么不一样.", "Konwledge_Point": "主程序", "Question": ["Flex4桌面应用程序开发", ["Flex4桌面应用程序开发：如何在本窗口点击某个按钮之后，弹出一个新的主窗口。登录的……"]], "Tag": "程序设计"}
{"Answer": "你可以桌面创建图标的时候，给图标配置文件中给exe传一个参数，这样双击的时候，你就可以根据命令行参数来判断，从而最小话窗口。\r\nGetCommandLine可以获取命令行参数。", "Konwledge_Point": "主程序", "Question": ["MFC如何获得双击桌面图标exe事件,以至于显示最小化的主窗口", ["MFC如何获得双击桌面图标exe事件,以至于显示最小化的主窗口"]], "Tag": "程序设计"}
{"Answer": "建议自己写,这个是只要入门了都会写,不会的话可以百度,如果百度了还不会,csdn 可以私信我,给一个示例\r\n```java\r\n/**\r\n * @author 红尘丶世界\r\n * @version v 1.0\r\n * @date 2020.4.20\r\n *  父类A 中有一个 work 方法\r\n */\r\npublic class A  {\r\n    public void work() {\r\n        System.out.println(\"我是A\");\r\n    }\r\n}\r\n```\r\n\r\n```java\r\n/**\r\n * @author 红尘丶世界\r\n * @version v 1.0\r\n * @date 2020.4.20\r\n *  子类B继承父类并重写A中的方法\r\n */\r\npublic class B extends A{\r\n    /**\r\n     * B类中重写父类A的方法,使用Override 关键字\r\n     */\r\n    @Override\r\n    public void work() {\r\n        System.out.println(\"我是B\");\r\n    }\r\n}\r\n\r\n```\r\n\r\n```java\r\n/**\r\n * @author 红尘丶世界\r\n * @version v 1.0\r\n * @date 2020.4.20\r\n * 测试类,调用B类中的方法\r\n */\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        //测试类调用\r\n        B b = new B();\r\n        b.work();\r\n    }\r\n}\r\n```", "Konwledge_Point": "主程序", "Question": ["Java程序：定义一个类Person，在该类中定义方法work(),定义类Doctor继承自Person覆盖父类的work()方法在该方法中输出“我是医生\"定义类Teacher.......", ["编写一个Java程序，要求：", "\n（1）定义一个类Person，在该类中定义方法work()；", "\n（2）定义类Doctor，继承自Person，覆盖父类的work()方法，在该方法中输出“我是医生”；", "\n（3）定义类Teacher，继承自Person，覆盖父类的work()方法，在该方法中输出“我是教师”；", "\n（4）定义主类Test，在主方法中创建Doctor和Teacher类的对象，测试work()方法。"]], "Tag": "程序设计"}
{"Answer": "堆栈肯定是共享的，不管是不是动态库\r\nhttp://blog.chinaunix.net/uid-24774106-id-301248.html", "Konwledge_Point": "主程序", "Question": ["动态链接库函数是不是和主程序共享的堆栈？", ["动态链接库函数是不是和主程序共享的堆栈？另外动态链接库里调用动态链接库是怎么实现的堆栈？"]], "Tag": "程序设计"}
{"Answer": "你这个进程没有做同步或者异步处理吗，有可能是阻塞了。", "Konwledge_Point": "主程序", "Question": ["给以前写的一个python程序，用pyqt5加了gui但多进和无响应", ["之前学python时写了个爬虫。就是捉些商品的标题，介绍，价格，还有买家评论。", "\n                今天想学学pyqt5，于是想直接给这爬虫加个gui好了。", "\n\n", "            运行后，主窗体无响应。\n            觉得可能是爬虫的问题，太耗时。\n\n            于是在pyqt5里的按钮方法里，加了个进程。\n            当点按钮时，打开一个新进程执行爬虫。\n            爬虫虽然能正常运行，但gui还是会无响应。\n\n            不明白这是怎么回事？\n            谢谢\n", "\n\n", " class MyWindow(QMainWindow, Ui_MainWindow):\n    def __init__(self, parent=None):\n        super(MyWindow, self).__init__(parent)\n        self.setupUi(self)\n        self.pushButton_2.clicked.connect(self.aa)\n\n    def aa(self):\n        p = Process(target=pa)\n        p.start()\n        p.join()\n\n\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    m = MyWindow()\n    m.show()\n    sys.exit(app.exec_())\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好,你的跳转代码主题没有问题,我复现你的问题时发现调用了不存在的对象属性不会跳转,直接关闭了页面&lt;br /&gt;请确认跳转的UI中是否在使用的时候调用了不存在的对象属性,我这里测试跳转&lt;br /&gt;UI是我随便弄的几个,屏蔽了报错的不存在(我的UI没有)调用属性&lt;br /&gt;测试代码1(无报错)&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; sys\n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PyQt5 &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QtWidgets,QtCore\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; *\n\n&lt;span class=\"hljs-comment\"&gt;# 导入 Qt designer 设计的页面&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; hello &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Hello_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; login &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Login_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; operate &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Operate_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; serch &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Serch_Ui\n\n\n&lt;span class=\"hljs-comment\"&gt;# 主窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HelloWindow&lt;/span&gt;(QtWidgets.QMainWindow,Hello_Ui):\n    switch_window1 &amp;#61; QtCore.pyqtSignal()  &lt;span class=\"hljs-comment\"&gt;# 跳转信号&lt;/span&gt;\n    switch_window2 &amp;#61; QtCore.pyqtSignal()  &lt;span class=\"hljs-comment\"&gt;# 跳转信号&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(HelloWindow,self).__init__()\n        self.setupUi(self)\n        self.queryButton.clicked.connect(self.goOperate)\n        self.manageButton.clicked.connect(self.goLogin)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goLogin&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# accout &amp;#61; int(self.lineEdit.text())&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# password &amp;#61; int(self.lineEdit_2.text())&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# if accout &amp;#61;&amp;#61; 1234 and password &amp;#61;&amp;#61; 1234:&lt;/span&gt;\n        reply &amp;#61; QMessageBox.about(self,&lt;span class=\"hljs-string\"&gt;&amp;#34;提示&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;密码正确&amp;#xff01;&amp;#34;&lt;/span&gt;)\n        self.switch_window1.emit()\n        &lt;span class=\"hljs-comment\"&gt;# else:&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#     reply4 &amp;#61; QMessageBox.about(self,&amp;#34;提示&amp;#34;,&amp;#34;账号或密码错误&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;)&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goOperate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.switch_window2.emit()\n\n\n&lt;span class=\"hljs-comment\"&gt;# 登录窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LoginWindow&lt;/span&gt;(QtWidgets.QMainWindow,Login_Ui):\n    switch_window3 &amp;#61; QtCore.pyqtSignal()\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(LoginWindow,self).__init__()\n        self.setupUi(self)\n        &lt;span class=\"hljs-comment\"&gt;# self.pushButton_4.clicked.connect(self.goSerch)&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goSerch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.switch_window3.emit()\n\n\n&lt;span class=\"hljs-comment\"&gt;# 操作窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;SerchWindow&lt;/span&gt;(QtWidgets.QMainWindow,Serch_Ui):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(SerchWindow,self).__init__()\n        self.setupUi(self)\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;OperateWindow&lt;/span&gt;(QtWidgets.QMainWindow,Operate_Ui):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(OperateWindow,self).__init__()\n        self.setupUi(self)\n\n\n&lt;span class=\"hljs-comment\"&gt;# 利用一个控制器来控制页面的跳转&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Controller&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;pass&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 hello 窗口&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_hello&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.hello &amp;#61; HelloWindow()\n        self.hello.switch_window1.connect(self.show_login)\n        self.hello.switch_window2.connect(self.show_operate)\n        self.hello.show()\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 login 窗口, 注意关闭原页面&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_login&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.login &amp;#61; LoginWindow()\n        self.login.switch_window3.connect(self.show_serch)\n        self.hello.close()\n        self.login.show()\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 operate 窗口, 注意关闭原页面&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_operate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.operate &amp;#61; OperateWindow()\n        self.hello.close()\n        self.operate.show()\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_serch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.serch &amp;#61; SerchWindow()\n        self.login.close()\n        self.serch.show()\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;():\n    app &amp;#61; QtWidgets.QApplication(sys.argv)\n    controller &amp;#61; Controller()  &lt;span class=\"hljs-comment\"&gt;# 控制器实例&lt;/span&gt;\n    controller.show_hello()  &lt;span class=\"hljs-comment\"&gt;# 默认展示的是 hello 页面&lt;/span&gt;\n    sys.exit(app.exec_())\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/91172020815614.gif\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;测试代码二(有报错,跳转失败)&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; sys\n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PyQt5 &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QtWidgets,QtCore\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; *\n\n&lt;span class=\"hljs-comment\"&gt;# 导入 Qt designer 设计的页面&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; hello &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Hello_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; login &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Login_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; operate &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Operate_Ui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; serch &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Ui_MainWindow &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; Serch_Ui\n\n\n&lt;span class=\"hljs-comment\"&gt;# 主窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HelloWindow&lt;/span&gt;(QtWidgets.QMainWindow,Hello_Ui):\n    switch_window1 &amp;#61; QtCore.pyqtSignal()  &lt;span class=\"hljs-comment\"&gt;# 跳转信号&lt;/span&gt;\n    switch_window2 &amp;#61; QtCore.pyqtSignal()  &lt;span class=\"hljs-comment\"&gt;# 跳转信号&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(HelloWindow,self).__init__()\n        self.setupUi(self)\n        self.queryButton.clicked.connect(self.goOperate)\n        self.manageButton.clicked.connect(self.goLogin)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goLogin&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# accout &amp;#61; int(self.lineEdit.text())&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# password &amp;#61; int(self.lineEdit_2.text())&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# if accout &amp;#61;&amp;#61; 1234 and password &amp;#61;&amp;#61; 1234:&lt;/span&gt;\n        reply &amp;#61; QMessageBox.about(self,&lt;span class=\"hljs-string\"&gt;&amp;#34;提示&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;密码正确&amp;#xff01;&amp;#34;&lt;/span&gt;)\n        self.switch_window1.emit()\n        &lt;span class=\"hljs-comment\"&gt;# else:&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#     reply4 &amp;#61; QMessageBox.about(self,&amp;#34;提示&amp;#34;,&amp;#34;账号或密码错误&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;)&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goOperate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.switch_window2.emit()\n\n\n&lt;span class=\"hljs-comment\"&gt;# 登录窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LoginWindow&lt;/span&gt;(QtWidgets.QMainWindow,Login_Ui):\n    switch_window3 &amp;#61; QtCore.pyqtSignal()\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(LoginWindow,self).__init__()\n        self.setupUi(self)\n        self.pushButton_4.clicked.connect(self.goSerch)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;goSerch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.switch_window3.emit()\n\n\n&lt;span class=\"hljs-comment\"&gt;# 操作窗口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;SerchWindow&lt;/span&gt;(QtWidgets.QMainWindow,Serch_Ui):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(SerchWindow,self).__init__()\n        self.setupUi(self)\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;OperateWindow&lt;/span&gt;(QtWidgets.QMainWindow,Operate_Ui):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(OperateWindow,self).__init__()\n        self.setupUi(self)\n\n\n&lt;span class=\"hljs-comment\"&gt;# 利用一个控制器来控制页面的跳转&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Controller&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;pass&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 hello 窗口&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_hello&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.hello &amp;#61; HelloWindow()\n        self.hello.switch_window1.connect(self.show_login)\n        self.hello.switch_window2.connect(self.show_operate)\n        self.hello.show()\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 login 窗口, 注意关闭原页面&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_login&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.login &amp;#61; LoginWindow()\n        self.login.switch_window3.connect(self.show_serch)\n        self.hello.close()\n        self.login.show()\n    \n    &lt;span class=\"hljs-comment\"&gt;# 跳转到 operate 窗口, 注意关闭原页面&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_operate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.operate &amp;#61; OperateWindow()\n        self.hello.close()\n        self.operate.show()\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show_serch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.serch &amp;#61; SerchWindow()\n        self.login.close()\n        self.serch.show()\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;():\n    app &amp;#61; QtWidgets.QApplication(sys.argv)\n    controller &amp;#61; Controller()  &lt;span class=\"hljs-comment\"&gt;# 控制器实例&lt;/span&gt;\n    controller.show_hello()  &lt;span class=\"hljs-comment\"&gt;# 默认展示的是 hello 页面&lt;/span&gt;\n    sys.exit(app.exec_())\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/207062208156132.gif\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;有帮助请点击右上角的采纳,谢谢&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["pyqt界面跳转出现问题，会直接退出", ["pyqt界面跳转出现问题，一共用qtdesigner做了4个界面，写了一个controller来控制，", "从主界面A(hello)跳转到界面B(login)和C(operate)时没有问题，但从B(login)跳转到D(serch)的时候就会退出，", "显示：进程已结束,退出代码-1073740791 (0xC0000409)", "请帮忙看一下是代码哪个地方出了问题。", "\n", "import", " sys\n", "from", " PyQt5 ", "import", " QtCore, QtWidgets, QtCore\n", "from", " PyQt5.QtWidgets ", "import", " *\n", "# 导入 Qt designer 设计的页面", "\n", "import", " login\n", "from", " hello ", "import", " Ui_MainWindow ", "as", " Hello_Ui\n", "from", " login ", "import", " Ui_MainWindow ", "as", " Login_Ui\n", "from", " operate ", "import", " Ui_MainWindow ", "as", " Operate_Ui\n", "from", " serch ", "import", " Ui_MainWindow ", "as", " Serch_Ui\n\n", "# 主窗口", "\n", "class", " ", "HelloWindow", "(QtWidgets.QMainWindow, Hello_Ui):\n    switch_window1 = QtCore.pyqtSignal() ", "# 跳转信号", "\n    switch_window2 = QtCore.pyqtSignal() ", "# 跳转信号", "\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "(HelloWindow, self).__init__()\n        self.setupUi(self)\n        self.queryButton.clicked.connect(self.goOperate)\n        self.manageButton.clicked.connect(self.goLogin)\n    ", "def", " ", "goLogin", "(", "self", "):\n        accout = ", "int", "(self.lineEdit.text())\n        password = ", "int", "(self.lineEdit_2.text())\n        ", "if", " accout == ", "1234", " ", "and", " password == ", "1234", ":\n            reply = QMessageBox.about(self, ", "\"提示\"", ", ", "\"密码正确！\"", ")\n            self.switch_window1.emit()\n        ", "else", ":\n            reply4 = QMessageBox.about(self, ", "\"提示\"", ", ", "\"账号或密码错误，请重新输入！\"", ")\n\n    ", "def", " ", "goOperate", "(", "self", "):\n        self.switch_window2.emit()\n\n", "# 登录窗口", "\n", "class", " ", "LoginWindow", "(QtWidgets.QMainWindow, Login_Ui):\n    switch_window3 = QtCore.pyqtSignal()\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "(LoginWindow, self).__init__()\n        self.setupUi(self)\n        self.pushButton_4.clicked.connect(self.goSerch)\n\n    ", "def", " ", "goSerch", "(", "self", "):\n        self.switch_window3.emit()\n", "# 操作窗口", "\n", "class", " ", "SerchWindow", "(QtWidgets.QMainWindow, Serch_Ui):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "(SerchWindow, self).__init__()\n        self.setupUi(self)\n\n", "class", " ", "OperateWindow", "(QtWidgets.QMainWindow, Operate_Ui):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "(OperateWindow, self).__init__()\n        self.setupUi(self)\n", "# 利用一个控制器来控制页面的跳转", "\n", "class", " ", "Controller", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "pass", "\n    ", "# 跳转到 hello 窗口", "\n    ", "def", " ", "show_hello", "(", "self", "):\n        self.hello = HelloWindow()\n        self.hello.switch_window1.connect(self.show_login)\n        self.hello.switch_window2.connect(self.show_operate)\n        self.hello.show()\n    ", "# 跳转到 login 窗口, 注意关闭原页面", "\n    ", "def", " ", "show_login", "(", "self", "):\n        self.login = LoginWindow()\n        self.login.switch_window3.connect(self.show_serch)\n        self.hello.close()\n        self.login.show()\n    ", "# 跳转到 operate 窗口, 注意关闭原页面", "\n    ", "def", " ", "show_operate", "(", "self", "):\n        self.operate = OperateWindow()\n        self.hello.close()\n        self.operate.show()\n\n    ", "def", " ", "show_serch", "(", "self", "):\n        self.serch = SerchWindow()\n        self.login.close()\n        self.serch.show()\n\n", "def", " ", "main", "():\n    app = QtWidgets.QApplication(sys.argv)\n    controller = Controller() ", "# 控制器实例", "\n    controller.show_hello() ", "# 默认展示的是 hello 页面", "\n    sys.exit(app.exec_())\n\n", "if", " __name__ == ", "'__main__'", ":\n    main()\n\n"]], "Tag": "程序设计"}
{"Answer": "你重写下paintComponent方法试试，如果我没写错的话。", "Konwledge_Point": "主程序", "Question": ["再次发帖 paint方法实现问题", ["问题是 我在棋子类里面是写的paint方法为什么到了棋盘累里面无法实现", "\n程序如下  很短的", "\n我最后的10分了 ", "\nimport java.awt.Color;", "\nimport java.awt.Graphics;", "\nimport java.awt.event.MouseEvent;", "\nimport java.awt.event.MouseListener;", "\n\n", "import javax.swing.JFrame;", "\n\n", "//主界面程序", "\npublic class FiveFrame extends JFrame implements MouseListener{", "\n\n", "Chess chess=new Chess();\n\n\n\n//棋盘界面\npublic void FiveBoard()\n{\n    this.setLocation(300,300);\n    this.setSize(700,600);\n    this.setTitle(\"五子\");\n    this.setBackground(Color.white);\n    this.setResizable(false) ;\n    this.addMouseListener(this);\n    this.setVisible(true);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n\n\n}\n//画棋盘格子\npublic void paint (Graphics g)\n{\n    Color c=g.getColor();\n    g.setColor(Color.black);\n    chess.paint(g);\n    for (int i = 0; i < 21; i++) {\n        g.drawLine(10, 30 + 25 * i, 510, 30 + 25 * i);\n        g.drawLine(10 + 25 * i, 30, 10 + 25 * i, 530);\n    }\n}\n\n\npublic void mouseClicked(MouseEvent e) {\n\n\n}\n\npublic void mouseEntered(MouseEvent arg0) {\n    // TODO Auto-generated method stub\n\n}\n\npublic void mouseExited(MouseEvent arg0) {\n    // TODO Auto-generated method stub\n\n}\n\npublic void mousePressed(MouseEvent e) {\n    chess.mousePressed(e);\n\n}\n\npublic void mouseReleased(MouseEvent arg0) {\n    // TODO Auto-generated method stub\n\n}\n", "\n\n", "}", "\n\n", "import java.awt.Color;", "\nimport java.awt.Graphics;", "\nimport java.awt.event.MouseEvent;", "\n\n", "import javax.swing.JFrame;", "\n\n", "//棋子类", "\npublic class Chess extends JFrame {", "\n\n", "int chessx;\nint chessy;\n\n//画一个棋子\npublic void paint(Graphics g)\n{\n    Color c=g.getColor();\n    g.setColor(Color.black);\n    g.fillOval(chessx,chessy,15,15);\n    g.setColor(c);\n\n}\n\n//实现mousePressed\npublic void mousePressed(MouseEvent e) {\n\n    chessx=e.getY();\n    chessy=e.getX();\n    System.out.println(\"x=\"+chessx);\n    System.out.println(\"y=\"+chessy);\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的灰度图就是红色通道的数据啊&amp;#xff0c;如果你要显示成为红色&amp;#xff0c;先将你的IO设置成为3通道图像&amp;#xff0c;然后将你的灰度图放在红色通道&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["为什么我这个程序运行结果不是红色为主的图像，反而是灰度图像呢，不知道怎么修改，请问该怎么修改这个错误", ["为什么我这个程序运行结果不是红色为主的图像，反而是灰度图像呢，不知道怎么修改，请问该怎么修改这个错误", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://cloud.tencent.com/developer/article/1732525\" id=\"textarea_1635947972481_1635948091003_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;洛谷 P1816 忠诚 ST函数 - 云&amp;#43;社区 - 腾讯云&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;老管家是一个聪明能干的人。他为财主工作了整整10年&amp;#xff0c;财主为了让自已账目更加清楚。要求管家每天记k次账&amp;#xff0c;由于管家聪明能干&amp;#xff0c;因而管家总是让财主十分满意。但是由于一些...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://cloud.tencent.com/developer/article/1732525&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "主程序", "Question": ["求思路和C++程序的解法", ["老管家是一个聪明能干的人。他为财主工作了整整10年，财主为了让自已账目更加清楚。要求管家每天记k次账，由于管家聪明能干，因而管家总是让财主十分满意。但是由于一些人的挑拨，财主还是对管家产生了怀疑。于是他决定用一种特别的方法来判断管家的忠诚，他把每次的账目按1，2，3…编号，然后不定时的问管家问题，问题是这样的：在a到b号账中最少的一笔是多少？为了让管家没时间作假他总是一次问多个问题。 ", "\n", " 在询问过程中账本的内容可能会被修改 ", "\n", "Input", "输入中第一行有两个数m,n表示有m(m<=100000)笔账,n表示有n个问题，n<=100000。 ", "\n", "第二行为m个数,分别是账目的钱数. ", "\n", "接下来每行为3个数字，第一个p为数字1或数字2，第二个数为x，第三个数为y ", "\n", "当p=1 则查询x,y区间 ", "\n", "当p=2 则改变第x个数为y ", "\n", "Output", "输出文件中为每个问题的答案。具体查看样例。 ", "\n", "Sample Input", "10 3", "1 2 3 4 5 6 7 8 9 10", "1 2 7", "2 2 0", "1 1 10", "Sample Output", "2 0"]], "Tag": "程序设计"}
