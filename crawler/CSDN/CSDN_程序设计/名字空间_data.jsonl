{"Answer": "&lt;p&gt;这里的报错是matrix这个包版本需要》1.4.2&amp;#xff0c;但是你现在的matrix是1.4.1&amp;#xff0c;更新这个包就解决了&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["R语言martix载入名字空间需要≧1.42", ["rms包载入时，报错需要1.42以上的名字空间，尝试了重装包等方法，还是没有解决"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;if you want to generate something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;OrganizationName xml:lang=\"en\"&amp;gt;name&amp;lt;/OrganizationName&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you can use the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/xml\"\n    \"fmt\"\n)\n\n//OrganizationName Name\ntype OrganizationName struct {\n    XMLName xml.Name `xml:\"OrganizationName\"`\n    Lang    string   `xml:\"http://www.w3.org/XML/1998/namespace lang,attr,omitempty\"`\n    Value   string   `xml:\",chardata\"`\n}\n\n//Organization Organization Entity\ntype Organization struct {\n    XMLName          xml.Name         `xml:\"Organization\"`\n    OrganizationName OrganizationName `xml:\"OrganizationName\"`\n}\n\nfunc main() {\n    v := Organization{\n        OrganizationName: OrganizationName{\n            Lang:  \"en\",\n            Value: \"Hisham Karam\",\n        },\n    }\n    output, err := xml.MarshalIndent(v, \"  \", \"    \")\n    if err != nil {\n        fmt.Printf(\"error: %v\n\", err)\n    }\n    fmt.Printf(\"\n%s\", string(output))\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  &amp;lt;Organization&amp;gt;\n      &amp;lt;OrganizationName xml:lang=\"en\"&amp;gt;Hisham Karam&amp;lt;/OrganizationName&amp;gt;\n  &amp;lt;/Organization&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;go version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;go version go1.10.3 darwin/amd64\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["具有XML名称空间的属性", ["\n\n", "The following struct is used to marshall SAML XML elements such as ", "OrganizationName", ", ", "OrganizationDisplayName", " & ", "OrganizationURL", ".", "\n\n", "type LocalizedName struct {\n    Lang  string `xml:\"xml lang,attr\"`\n    Value string `xml:\",chardata\"`\n}\n", "\n\n", "The ", "Lang", " attribute is within the ", "xml", " namespace. The generated XML from the encoding/xml package includes relative namespaces:", "\n\n", "<Organization>\n  <OrganizationName xmlns:_xml=\"xml\" _xml:lang=\"en\">name</OrganizationName>\n  <OrganizationDisplayName xmlns:_xml=\"xml\" _xml:lang=\"en\">name</OrganizationDisplayName>\n  <OrganizationURL xmlns:_xml=\"xml\" _xml:lang=\"en\">http://www.example.com/</OrganizationURL>\n</Organization>\n", "\n\n", "I was expecting the elements to not use relative namespaces as they seem to be considered to be insecure, ", "although I do not understand why", ":", "\n\n", "<OrganizationName xml:lang=\"en\">name</OrganizationName>\n", "\n\n", "What causes the relative namespaces to be created?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Problem was due to PEAR being installed on the server for email. The include path in php settings was modified.&lt;/p&gt;\n\n&lt;p&gt;I actually removed PEAR, set PHP back to it's default include path and switched email to swiftmailer.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["php Facebook SDK名称空间错误", ["\n\n", "I am trying to get the new facebook php sdk setup on my site. I'm running the latest stable version of php. I have never messed with namespaces before. Can someone tell me what I'm doing wrong?", "\n\n", "I get this error", "\n\n", "Fatal error: Class 'FacebookSession' not found in", "\n\n", "When I run this code", "\n\n", "FacebookSession::setDefaultApplication( 'xxx','yyy' );\n", "\n\n", ".....", "\n\n", "// path of these files have changes\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/HttpClients/FacebookHttpable.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/HttpClients/FacebookCurl.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/HttpClients/FacebookCurlHttpClient.php' );\n\n// other files remain the same\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookSession.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookRedirectLoginHelper.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookRequest.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookResponse.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookSDKException.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookRequestException.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookOtherException.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/FacebookAuthorizationException.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/GraphObject.php' );\nrequire_once( '/var/www/vhosts/server/site/lib/fb/Facebook/GraphSessionInfo.php' );\n\n// path of these files have changes\nuse Facebook\\HttpClients\\FacebookHttpable;\nuse Facebook\\HttpClients\\FacebookCurl;\nuse Facebook\\HttpClients\\FacebookCurlHttpClient;\n\nuse Facebook\\FacebookSession;\nuse Facebook\\FacebookRedirectLoginHelper;\nuse Facebook\\FacebookRequest;\nuse Facebook\\FacebookResponse;\nuse Facebook\\FacebookSDKException;\nuse Facebook\\FacebookRequestException;\nuse Facebook\\FacebookOtherException;\nuse Facebook\\FacebookAuthorizationException;\nuse Facebook\\GraphObject;\nuse Facebook\\GraphSessionInfo;\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In the autoload, the &lt;code&gt;$className&lt;/code&gt; variable includes the namespace. You need to either move the class into a file/folder structure that includes the namespace or remove the namespace from the classname and just load based on the class. I suggest the former simply because the whole point of namespaces is to allow two different class definitions with the same name. You can't really have two files in the same space on disk with the same name. Renaming the &lt;code&gt;$className&lt;/code&gt; could be as simple as &lt;code&gt;str_replace('\\\\', '.', $className)&lt;/code&gt; and renaming your class to &lt;code&gt;wbp.NameSpace.ClassName.php&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["使用具有自动加载功能的名称空间", ["\n\n", "So i have got this small piece of code that auto loads the classes. Everything is going allright until i add namespaces. I get the error that it can't find the Class. But when i remove the namespace it works again. (It also works when i include the wbp.Foo.php directly.)", "\n\n", "autoloader.php", "\n\n", "<?php\n\nfunction autoloadLib($className){\n    $filename = \"lib/wbp.\" . $className . \".php\";\n    if(is_readable($filename)){\n        require $filename;\n    }\n}\n\nspl_autoload_register(\"autoloadLib\");\n", "\n\n", "index.php", "\n\n", "<?php\n\ninclude \"autoloader.php\";\nuse Foobar\\Foo;\necho Foo::Bar();\n", "\n\n", "lib/wbp.Foo.php", "\n\n", "<?php\n\nnamespace Foobar;\n\nclass Foo {\n    public static function Bar(){\n        return \"foobar\";\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Here's some PHP code that shows some examples of how to access the parts of the XML you requested:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$tei = &amp;lt;&amp;lt;&amp;lt;XML\n&amp;lt;TEI xmlns=\"http://www.tei-c.org/ns/1.0\"\n     xmlns:irp=\"http://kuleuven-kulak.be/itec/ns/irp/\"\n     xml:id=\"irp-rmg-fr-2013-05-03-00862-src\"\n     xml:lang=\"fr\"&amp;gt;\n  &amp;lt;text xml:id=\"irp-rmg-fr-2013-05-03-00862-src.\" xml:lang=\"fr\"&amp;gt;\n    &amp;lt;body&amp;gt;\n      &amp;lt;div&amp;gt;\n        &amp;lt;p&amp;gt;\n          &amp;lt;irp:PEnrich irp:path=\"(//section/paragraph)[1]\" n=\"irp-1\"&amp;gt;\n            &amp;lt;irp:PNerd&amp;gt;1955 (30 avril) Naissance à &amp;lt;irp:ne ref=\"http://fr.dbpedia.org/resource/Lille\" irp:confidence=\"1\" type=\"LOC\"&amp;gt;Lille&amp;lt;/irp:ne&amp;gt;.&amp;lt;/irp:PNerd&amp;gt;\n          &amp;lt;/irp:PEnrich&amp;gt;\n        &amp;lt;/p&amp;gt;\n      &amp;lt;/div&amp;gt;\n    &amp;lt;/body&amp;gt;\n  &amp;lt;/text&amp;gt;\n&amp;lt;/TEI&amp;gt;\nXML;\n\n$doc = new DOMDocument();\n$doc-&amp;gt;loadXML(mb_convert_encoding($tei, 'utf-8', mb_detect_encoding($tei)));\n$xpath = new DOMXPath($doc);\n$xpath-&amp;gt;registerNamespace('irp', 'http://kuleuven-kulak.be/itec/ns/irp/');\n\necho $xpath-&amp;gt;evaluate(\"string(//irp:PNerd/text())\");\necho '&amp;lt;url ref=\"'. $xpath-&amp;gt;evaluate(\"string(//irp:ne/@ref)\") . '\"&amp;gt;';\necho $xpath-&amp;gt;evaluate(\"string(//irp:ne/text())\");\necho '&amp;lt;/url&amp;gt;';\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Yields the following output:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;1955 (30 avril) Naissance ? &amp;lt;url ref=\"http://fr.dbpedia.org/resource/Lille\"&amp;gt;Lille&amp;lt;/url&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I assume that you had a typo and didn't really want &lt;code&gt;&amp;lt;url=&lt;/code&gt; as that's\nlooking like XML but is actually malformed.&lt;/li&gt;\n&lt;li&gt;There may remain a character encoding issue with &lt;code&gt;à&lt;/code&gt; is coming\nthrough as &lt;code&gt;?&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["由于名称空间而导致的XML解析问题", ["\n\n", "Suppose I have this XML", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<TEI xmlns=\"http://www.tei-c.org/ns/1.0\" xmlns:irp=\"http://kuleuven-kulak.be/itec/ns/irp/\" xml:id=\"irp-rmg-fr-2013-05-03-00862-src\" xml:lang=\"fr\">\n  <text xml:id=\"irp-rmg-fr-2013-05-03-00862-src.\" xml:lang=\"fr\">\n    <body>\n      <div>\n        <p>\n          <irp:PEnrich irp:path=\"(//section/paragraph)[1]\" n=\"irp-1\">\n            <irp:PNerd>\n              1955 (30 avril) Naissance à \n              <irp:ne ref=\"http://fr.dbpedia.org/resource/Lille\" irp:confidence=\"1\" type=\"LOC\">Lille</irp:ne>.\n            </irp:PNerd>\n          </irp:PEnrich>\n        </p>\n      </div>\n    </body>\n  </text>\n</TEI>\n", "\n\n", "How should I use SimpleXML and xpath to parse the irp:PNerd nodes and get a string like:", "\n\n", "1955 (30 avril) Naissance à <url=\"http://fr.dbpedia.org/resource/Lille\">Lille</url>.\n", "\n\n", "I tried getting the text by doing:", "\n\n", "    $penrich = $xml->xpath(\"//irp:PEnrich\");\n    foreach ($penrich as $p) {\n        $pnerds = $p->children(\"irp\", true);\n        $pnerd = $pnerds->PNerd;\n        $ne = $pnerd->ne;\n        foreach ($ne as $n) {\n            print_r($n->children());\n        }\n        echo \"----\n\";\n    }\n", "\n\n", "but this only retrieves type and ref:\n(Also, how should I access these values in my code?)", "\n\n", "SimpleXMLElement Object\n(\n    [@attributes] => Array\n        (\n            [ref] => http://fr.dbpedia.org/resource/Lille\n            [type] => LOC\n        )\n)\n", "\n\n", "But I want to obtain something like:", "\n\n", "1955 (30 avril) Naissance à <url=\"http://fr.dbpedia.org/resource/Lille\">Lille</url>.\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The two different approaches have names: Lisp-1 and Lisp-2. A Lisp-1 has a single namespace for both variables and functions (as in Scheme) while a Lisp-2 has separate namespaces for variables and functions (as in Common Lisp). I mention this because you may not be aware of the terminology since you didn't refer to it in your question.&lt;/p&gt;\n\n&lt;p&gt;Wikipedia &lt;a href=\"http://en.wikipedia.org/wiki/Lisp-1_vs._Lisp-2#The_function_namespace\" rel=\"noreferrer\"&gt;refers to this debate&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Whether a separate namespace for functions is an advantage is a source of contention in the Lisp community. It is usually referred to as the Lisp-1 vs. Lisp-2 debate. Lisp-1 refers to Scheme's model and Lisp-2 refers to Common Lisp's model. These names were coined in a 1988 paper by Richard P. Gabriel and Kent Pitman, which extensively compares the two approaches.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Gabriel and Pitman's paper titled &lt;a href=\"http://www.nhplace.com/kent/Papers/Technical-Issues.html\" rel=\"noreferrer\"&gt;Technical Issues of Separation in Function Cells and Value Cells&lt;/a&gt; addresses this very issue.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["公共 Lisp 中函数和变量的名称空间与 Scheme 名称空间的分离", ["\n\n", "Scheme uses a single namespace for all variables, regardless of whether they are bound to functions or other types of values. Common Lisp separates the two, such that the identifier \"hello\" may refer to a function in one context, and a string in another.", "\n\n", "(Note 1: This question needs an example of the above; feel free to edit it and add one, or e-mail the original author with it and I will do so.)", "\n\n", "However, in some contexts, such as passing functions as parameters to other functions, the programmer must explicitly distinguish that he's specifying a function variable, rather than a non-function variable, by using ", "#'", ", as in:", "\n\n", "(sort (list '(9 A) '(3 B) '(4 C)) #'< :key #'first)", "\n\n", "I have always considered this to be a bit of a wart, but I've recently run across an ", "argument", " that this is actually a feature:", "\n\n", "\n...the\nimportant distinction actually lies in the syntax of forms, not in the\ntype of objects. Without knowing anything about the runtime values\ninvolved, it is quite clear that the first element of a function form\nmust be a function. CL takes this fact and makes it a part of the\nlanguage, along with macro and special forms which also can (and must)\nbe determined statically. So my question is: why would you want the\nnames of functions and the names of variables to be in the same\nnamespace, when the primary use of function names is to appear where a\nvariable name would rarely want to appear?\n", "\n\n", "\nConsider the case of class names: why should a class named FOO prevent\nthe use of variables named FOO? The only time I would be referring the\nclass by the name FOO is in contexts which expect a class name. If, on\nthe rare occasion I need to get the class object which is bound to the\nclass name FOO, there is FIND-CLASS.\n", "\n\n", "This argument does make some sense to me from experience; there is a similar case in Haskell with field names, which are also functions used to access the fields. This is a bit awkward:", "\n\n", "data Point = Point { x, y :: Double {- lots of other fields as well --} }\nisOrigin p = (x p == 0) && (y p == 0)\n", "\n\n", "This is solved by a bit of extra syntax, made especially nice by the ", "NamedFieldPuns", " extension:", "\n\n", "isOrigin2 Point{x,y} = (x == 0) && (y == 0)\n", "\n\n", "So, to the question, beyond consistency, what are the advantages and disadvantages, both for Common Lisp vs. Scheme and in general, of a single namespace for all values versus separate ones for functions and non-function values?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/1020968/separate-namespaces-for-functions-and-variables-in-common-lisp-versus-scheme"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;So Go currently is not able to support this (as pointed out by @JimB), but you can still use some built in capabilities to pull out the right element. Start off by defining a new struct &lt;code&gt;XMLElement&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type XMLElement struct {\n    XMLName xml.Name\n    Data    string `xml:\",chardata\"`\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This struct can capture the xml data along with the namespace and element name. Next map &lt;code&gt;xml:\"description\"&lt;/code&gt; to an array of &lt;code&gt;XMLElement&lt;/code&gt;. This will end up capturing all &lt;code&gt;&amp;lt;*:description&amp;gt;&lt;/code&gt; elements in a list. You can then define functions to pull out the right one.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Item struct {\n    // ...other fields\n    Descriptions           []XMLElement   `xml:\"description\"`\n    // ...other fields\n}\n\n// GetDescription returns the description in the &amp;lt;description&amp;gt; tag\nfunc (i *Item) GetDescription() string {\n    for _, elem := range i.Descriptions {\n        if elem.XMLName.Space == \"\" {\n            return elem.Data\n        }\n    }\n    return \"\"\n}\n\n// GetMediaDescription returns the description in the &amp;lt;media:description&amp;gt; tag\nfunc (i *Item) GetMediaDescription() string {\n    for _, elem := range i.Descriptions {\n        if elem.XMLName.Space == \"http://search.yahoo.com/mrss/\" {\n            return elem.Data\n        }\n    }\n    return \"\"\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何将具有不同名称空间的相同XML元素反序列化为结构中的不同元素", ["\n\n", "I am working with the following kind of an XML structure", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\" \n    xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" \n    xmlns:media=\"http://search.yahoo.com/mrss/\">\n    <channel>\n        <title>TITLE</title>\n        <link>http://something.com</link>\n        <description>description</description>\n        <lastBuildDate>Mon, 19 Dec 2016 16:48:54 +0000</lastBuildDate>\n        <language>en</language>\n        <item>\n            <title>Title</title>\n            <description>description</description>\n            <author>\n                <name>Name</name>\n                <uri></uri>\n            </author>\n            <pubDate>Mon, 19 Dec 2016 16:42:32 +0000</pubDate>\n            <link>http://google.com</link>\n            <image>...</image>\n            <media:description><![CDATA[Natalie Massenet]]></media:description>\n            <media:credit>David Fisher/REX/Shutterstock</media:credit>\n            <category>Category1</category>\n            <category>Category2</category>\n            <guid isPermaLink=\"false\">http://something.com/?p=10730393</guid>\n            <media:group></media:group>\n            <content:encoded>content</content:encoded>\n        </item>\n    </channel>\n</rss>\n", "\n\n", "I am having trouble figuring out how to deserialize ", "<description>", " and ", "<media:description>", " into two different element in a struct.", "\n\n", "I've tried a following kind of a struct to represent an ", "<item>", ", but the value of ", "media:description", " ends up in the struct.", "\n\n", "type Item struct {\n    // ...other fields\n    Description           string   `xml:\"description\"`\n    MediaDescription      string   `xml:\"media:description\"`\n    // ...other fields\n}\n", "\n\n", "What would be the best way to do this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem was as a result of the fact that I had installed version 5.4 of PHP during my re-installation. According to the PHP web site, a new control/escape character was introduced in version 5.4&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\\e  escape (ESC or 0x1B (27) in ASCII) (since PHP 5.4.0)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Obviously, the createQuery() method in Doctrine 2.0's entitymanager class is not escaping  this well when it encounters:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;blah\\models\\entities\\blah&lt;/code&gt; [contains the new escape character]&lt;/p&gt;\n\n&lt;p&gt;The previous version I had was version 5.3.10 which was without the newly introduced escape character.&lt;/p&gt;\n\n&lt;p&gt;Solution was to revert back to PHP 5.3. Not sure if upgrading to Doctrine 2.1 or later would solve the problem as well. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["在解析过程中，Namespaced Doctrine实体名称被误解", ["\n\n", "I have a bit of Doctrine ORM code like so:", "\n\n", "$query = $this->entityManager->createQuery('SELECT c FROM specialty\\models\\entities\\Clan c WHERE c.Id = ?1');\n", "\n\n", "This code has worked without a problem for ages. I recently reinstalled my LAMP stack environment and my Netbeans IDE and merely checked out the code from SVN. Now, however, this bit of code throws up the following error:", "\n\n", "exception 'Doctrine\\ORM\\Query\\QueryException' with message '[Semantical Error] line 0, col 14 near 'specialty\\modelsentities\\Clan': Error: Class 'specialty\\modelsentities\\Clan' is not defined here.'\n", "\n\n", "Looking at the error message, there is a missing '\\' between 'models' and 'entities'. While this ought to be '\\models\\entities', it is 'seen' as '\\modelsentities' - which definitely does not exist - hence the error. ", "\n\n", "For some weird reason, the slash is stripped off before the code is parsed, I think. Problem is, I have not been able to find the cause of this. I observed that the problem disappears when the WHEN clause is removed from the statement like so:", "\n\n", "$query = $this->entityManager->createQuery('SELECT c FROM specialty\\models\\entities\\Clan c');\n", "\n\n", "I have tried escaping possibly invisible control characters, checking new environment settings in php.ini (for example) for clues as to what could be cause of the error. Please help, thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In Symfony you use namespaces. imagine that you want to make an instance of COM into a controller, lets say MyController. Your controller PHP file will begin with this rule:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;namespace AppBundle\\Controller;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now if you make an instance of the PHP COM class PHP will search this class into the AppBundle\\Controller namespace, where it of course couldn't be found because it is in the &lt;strong&gt;global namespace&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;So you have to add a \\ before COM to indicate that this class can be found in the global namespace:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$odbc_con = new \\COM(\"ADODB.Connection\");\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["尝试从命名空间-Symfony2加载类“COM”", ["\n\n", "I am developing a web using symfony2 framework. In this web the users upload file(.mdb). The web read the file and if the information is correct it pass to database.(This is the idea)", "\n\n", "The problem is that i try to used \"COM class of PHP\". First i think that i forget too put the extension \"extension=php_com_dotnet.dll\" but no.", "\n\n", "Hay use this code to read de mdb", "\n\n", "    $count =0;\n    $db_path = $path;\n    $constr = \"DRIVER={Microsoft Access Driver (*.mdb)}; DBQ=\" . $db_path . \";\";\n    $odbc_con = new COM(\"ADODB.Connection\");\n    $odbc_con -> open($constr);\n", "\n\n", "But Symfony say me ", "\n\n", "Attempted to load class \"COM\" from namespace \"PintxoNosti\\MyTellBundle\\Controller\" in C:\\Symfony\\WebD\\src\\PintxoNosti\\MyTellBundle\\Controller\\PintxoController.php line 62. Do you need to \"use\" it from another namespace?", "\n\n", "someone know the solution?\n Or maybe have some idea to read mdb in symfony2", "\n\n", "Thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I might be wrong, but i think that is becouse You dont render anything. Try this code: &lt;code&gt;$product = $this-&amp;gt;getDoctrine() -&amp;gt;getRepository('AppBundle\\Entity\\Product') -&amp;gt;findAll(); return $this-&amp;gt;render('default/index.html.twig',['product' =&amp;gt; $product]);&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["Symfony 3：Doctrine listAction：您是否忘记了另一个命名空间的“use”语句？", ["\n\n", "I'm trying to make an easy listAction to retrieve data from Doctrine but I got this error:", "\n\n", "Attempted to load class \"ProductRepository\" from namespace \"AppBundle\\Entity\".\nDid you forget a \"use\" statement for another namespace?\n", "\n\n", "This come out when i call the route ex.com/list that must\n to list the data coming from product table", "\n\n", "Controller:", " (src/AppBundle/Controller)", "\n\n", "<?php\n\nnamespace AppBundle\\Controller;\n\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Translation\\Translator;\nuse Symfony\\Component\\Translation\\MessageSelector;\nuse AppBundle\\Entity\\Product;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n\nnew Translator('it', new MessageSelector(), __DIR__.'/../cache');\n\nclass DefaultController extends Controller\n{\n/**\n * @Route(\"/\", name=\"homepage\")\n * @param Request $request\n * @return \\Symfony\\Component\\HttpFoundation\\Response\n */\npublic function indexAction(Request $request)\n{\n    $request->getLocale();\n\n    $request->setLocale('it');\n\n    return $this->render('default/index.html.twig', [\n        'base_dir' => realpath($this->getParameter('kernel.root_dir').'/..'),\n    ]);\n}\n\n/**\n *\n * @Route(\"list\", name=\"list\")\n * @return Response\n *\n */\npublic function listAction()\n{\n    return $product = $this->getDoctrine()\n        ->getRepository('AppBundle\\Entity\\Product')\n        ->findAll();\n\n   /* if (!$product) {\n        throw $this->createNotFoundException(\n            'Nessun prodotto trovato'\n        );\n    }*/\n\n}\n\n/**\n * @Route(\"create\",name=\"create\")\n * @return Response\n */\npublic function createAction()\n{\n    $product = new Product();\n    $product->setName('Pippo Pluto');\n    $product->setPrice('19.99');\n    $product->setDescription('Lorem ipsum dolor');\n    $product->setSeller('1');\n\n    $em = $this->getDoctrine()->getManager();\n\n    $em->persist($product);\n    $em->flush();\n\n    return $this->render('default/index.html.twig');\n}\n\n/**\n * @param $id\n * @Route(\"show/{id}\",name=\"show/{id}\")\n * @return Response\n */\npublic function showAction($id)\n{\n    $product = new Product();\n    $product = $this->getDoctrine()\n        ->getRepository('AppBundle:Product')\n        ->find($id);\n\n    if (!$product) {\n        throw $this->createNotFoundException(\n            'Nessun prodotto trovato per l\\'id '.$id\n        );\n    }\n  }\n}\n", "\n\n", "Entity:", " (src/AppBundle/Entity)", "\n\n", "namespace AppBundle\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n* Product\n*\n* @ORM\\Table(name=\"product\")\n* @ORM\\Entity(repositoryClass=\"AppBundle\\Entity\\ProductRepository\")\n*/\nclass Product\n{\n/**\n * @var int\n *\n * @ORM\\Column(name=\"`id`\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"`name`\", type=\"string\")\n */\nprivate $name;\n/**\n * @var float\n *\n * @ORM\\Column(name=\"`price`\", type=\"float\")\n */\nprivate $price;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"`description`\", type=\"string\")\n */\nprivate $description;\n/**\n * @var int\n *\n * @ORM\\Column(name=\"`seller`\", type=\"integer\")\n */\nprivate $seller;\n\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return Product\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n/**\n * Set price\n *\n * @param float $price\n *\n * @return Product\n */\npublic function setPrice($price) {\n    $this->price = $price;\n\n    return $this;\n}\n/**\n * Set description\n *\n * @param string $description\n *\n * @return Product\n */\npublic function setDescription($description) {\n    $this->description = $description;\n\n    return $this;\n}\n/**\n * Set seller\n *\n * @param int $seller\n *\n * @return Product\n */\npublic function setSeller($seller) {\n    $this->seller = $seller;\n\n    return $this;\n}\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n/**\n * Get price\n *\n * @return float\n */\npublic function getPrice()\n{\n    return $this->price;\n}\n/**\n * Get description\n *\n * @return string\n */\npublic function getDescription()\n{\n    return $this->description;\n}\n/**\n * Get seller\n *\n * @return int\n */\npublic function getSeller()\n   {\n    return $this->seller;\n   }\n}\n", "\n\n", "I can't understand what I'm missing to use. thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的debt就using了pers呀&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["关于名称空间嵌套的有关问题", ["\n", "\n", "使用的是debts中的debt和showdebt为什么第三张图片里说不用导入person名称 也没有引用第一个名称空间啊 意思是 第二个名称空间引用第一个名称空间当利用第二个名称空间里的某个元素时就可以用吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;A re-install of the DSM (Synology OS) actually resolved the issue. Once done, some of the classes obtained from other frameworks had the \"BOM\" bytes at the beginning of the file, but not all. Simple solution to the BOM issues is to add a \"BOM\" remover into the auto-loader.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["PHP命名空间不起作用 - 怀疑PHP配置问题", ["\n\n", "OK, so, I've been using auto-loaders for a while, become rather used to MVC, and decided to try to tackle namespaces. Well, this hasn't worked as expected. I have managed to reproduce the error in a very simple way, so the contents of my php file read:", "\n\n", "<?php\nnamespace site\\test;\n\necho 'hello';\n", "\n\n", "The output is not what I expected:", "\n\n", "Fatal error: Namespace declaration statement has to be the very first statement in the script in ", "file", " on line 2", "\n\n", "I'm running PHP 5.3.10 on a Synology NAS, using the latest version of DSM (Synology's OS). This makes use of Apache v2.2.22. I can confirm that commenting out the \"namespace\" line returns the word \"hello\", with no extra characters before it.", "\n\n", "There is no BOM at the beginning of the file. I also have no issues with setting headers such as \"Location\" which would suggest this as being an issue.", "\n\n", "Line endings are Unix (\n only) and the character encoding of the file is UTF8.", "\n\n", "The PHP setting \"auto_prepend_file\" is empty.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里有中解决方法&amp;#xff0c;您可以看看&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq1309664161/article/details/128054626\" id=\"textarea_1670832579916_1670832610551_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq1309664161/article/details/128054626&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/432016238076173.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["nacos 怎么配置不同命名空间的服务互相调用？", ["nacos 怎么配置不同命名空间的服务互相调用？", "\n", "两个服务和 bootstrap.properities 配置文件如下：", "\n", "coupon 服务", "# nacos server(nacos 服务端地址) 地址", "\n", "spring.cloud.nacos.server-addr", "=", "125.108", ".", "111.131", ":", "8848", "\n", "# nacos discovery server(nacos 服务注册/发现 服务端地址) 地址", "\n", "spring.cloud.nacos.discovery.server-addr", "=", "${spring.cloud.nacos.server-addr}", "\n", "# nacos discovery namespace(nacos 服务注册/发现 命名空间)", "\n", "spring.cloud.nacos.discovery.namespace", "=", "12", "b7ffb8-", "4", "e4f-", "41", "d7-a15a-", "0", "f54b104af34\n", "# 服务名称", "\n", "spring.application.name", "=gulimall-coupon\n", "spring.cloud.nacos.config.group", "=dev\n", "\n", "member 服务", "# nacos server(nacos 服务端地址) 地址", "\n", "spring.cloud.nacos.server-addr", "=", "125.108", ".", "111.131", ":", "8848", "\n", "# nacos discovery server(nacos 服务注册/发现 服务端地址) 地址", "\n", "spring.cloud.nacos.discovery.server-addr", "=", "${spring.cloud.nacos.server-addr}", "\n", "# nacos discovery namespace(nacos 服务注册/发现 命名空间)", "\n", "spring.cloud.nacos.discovery.namespace", "=", "91291", "a93-cfec-", "4", "a6a-bed4-d9eedd6497b0\n", "# 服务名称", "\n", "spring.application.name", "=gulimall-member\n", "\n", "\n", "member 服务调用 coupon 服务 ", "client", " 编码如下：", "\n", "@FeignClient(", "\"gulimall-coupon\"", ")", "\n", "public", " ", "interface", " ", "CouponFeignService", " ", "{\n\n    ", "@GetMapping(", "\"coupon/coupon/member/list\"", ")", "\n    ", "public", " R member();\n\n}\n", "\n", "因为我给两个服务配置了不同的服务命名空间，所以当 member 服务调用 coupon 服务时报以下错误：", "\n", "com.netflix.", "client", ".ClientException: Load balancer does not have available ", "server", " ", "for", " ", "client", ": coupon\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$state_content .= \"&amp;lt;li&amp;gt;&amp;lt;a href='pindtrict.php?ste=\".str_replace(' ', '-',$row['State_N']).\"'&amp;gt; \".$row['State_N'].\"&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\";\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["使用Php Get方法在URL中更新空间到连字符", ["\n\n", "I would like to update space to hyphen in my php url file via get method. I have tried some methods, but i got an error. ", "\n\n", "For an example, \nthe original url is ", "pindtrict.php?ste=Tamil Nadu", "\n\n", "i want optimized url as, ", "pindtrict.php?ste=Tamil-Nadu", "\n\n", "How to do this? Here it is my code,", "\n\n", "<?php\ninclude(config.php');\n$state_content= \"\";\n$qry = \"SELECT DISTINCT State_N FROM pin_data ORDER BY State_N ASC\";\n$result = mysql_query($qry);\nwhile($row = mysql_fetch_array($result))\n    {\n        $state_content .= \"<li><a href='pindtrict.php?ste=\".$row['State_N'].\"'> \".$row['State_N'].\"</a></li>\";\n    }\nmysql_close();\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Pincode Directory</title>\n<body>\n<div>\n    <?php echo $state_content; ?><br />\n</div>\n</body>\n</html>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;alt&amp;#43;enter先看看有没有命名空间可以应用&amp;#xff0c;或者直接把IniFiles1类的命名空间拿过来。&lt;br /&gt;然后看看你的IniFiles类是不是没有重构。比如只改文件名没改类名等等。&lt;br /&gt;最后试试用IniFiles类懂我意思么。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["C#报错出现“未能找到类型或命名空间名”", ["问题遇到的现象和发生背景", "\n", "要求是写一个自动登录并且把自动登录的数据写在ini文件中，最开始写了一个IniFiles的类，后来觉得这个写的不对重新写了一个IniFiles1的类，写完IniFiles1之后就把IniFiles的类给删除了，现在在Form1中的", "public partial class Form1 : Form", "    {", "        IniFiles1 ini = new IniFiles1(Application.StartupPath + ", "@\"MyConfig.INI\");", "这个IniFiles1就会出现报错报错提示的是“未能找到类型或命名空间名“IniFiles1”（是否缺少using指令或程序集引用）”", "\n", "问题相关代码，请勿粘贴截图", "\n", "namespace test", "{", "    ", "     IniFiles的类", "     ", "    public class IniFiles", "    {", "        public string FileName; //INI文件名", "        string path   =   System.IO.Path.Combine(Application.StartupPath, \"新建文本文档.ini\");", "\n", "   声明读写INI文件的API函数\n    [", "DllImport(", "\"kernel32\"", ")", "]\n    ", "private", " ", "static", " ", "extern", " ", "bool", " ", "WritePrivateProfileString", "(", "string", " section, ", "string", " key, ", "string", " val, ", "string", " filePath", ")", ";\n    [", "DllImport(", "\"kernel32\"", ")", "]\n    ", "private", " ", "static", " ", "extern", " ", "int", " ", "GetPrivateProfileString", "(", "string", " section, ", "string", " key, ", "string", " def, ", "byte", "[] retVal, ", "int", " size, ", "string", " filePath", ")", ";\n\n    ", "//类的构造函数，传递INI文件名", "\n    ", "public", " ", "IniFiles", "(", "string", " AFileName", ")", "\n    {\n        ", "// 判断文件是否存在", "\n        FileInfo fileInfo = ", "new", " FileInfo(AFileName);\n        ", "//Todo:搞清枚举的用法", "\n        ", "if", " ((!fileInfo.Exists))\n        { ", "//|| (FileAttributes.Directory in fileInfo.Attributes))", "\n            ", "//文件不存在，建立文件", "\n            System.IO.StreamWriter sw = ", "new", " System.IO.StreamWriter(AFileName, ", "false", ", System.Text.Encoding.Default);\n            ", "try", "\n            {\n                sw.Write(", "\"#表格配置档案\"", ");\n                sw.Close();\n            }\n            ", "catch", "\n            {\n                ", "throw", " (", "new", " ApplicationException(", "\"Ini文件不存在\"", "));\n            }\n        }\n        ", "//必须是完全路径，不能是相对路径", "\n        FileName = fileInfo.FullName;\n    }\n\n    ", "//写INI文件", "\n    ", "public", " ", "void", " ", "WriteString", "(", "string", " Section, ", "string", " Ident, ", "string", " Value", ")", "\n    {\n        ", "if", " (!WritePrivateProfileString(Section, Ident, Value, FileName))\n        {\n\n            ", "throw", " (", "new", " ApplicationException(", "\"写Ini文件出错\"", "));\n        }\n    }\n\n    ", "//读取INI文件指定", "\n    ", "public", " ", "string", " ", "ReadString", "(", "string", " Section, ", "string", " Ident, ", "string", " Default", ")", "\n    {\n        Byte[] Buffer = ", "new", " Byte[", "65535", "];\n        ", "int", " bufLen = GetPrivateProfileString(Section, Ident, Default, Buffer, Buffer.GetUpperBound(", "0", "), FileName);\n        ", "//必须设定0（系统默认的代码页）的编码方式，否则无法支持中文", "\n        ", "string", " s = Encoding.GetEncoding(", "0", ").GetString(Buffer);\n        s = s.Substring(", "0", ", bufLen);\n        ", "return", " s.Trim();\n    }\n\n    ", "//读整数", "\n    ", "public", " ", "int", " ", "ReadInteger", "(", "string", " Section, ", "string", " Ident, ", "int", " Default", ")", "\n    {\n        ", "string", " intStr = ReadString(Section, Ident, Convert.ToString(Default));\n        ", "try", "\n        {\n            ", "return", " Convert.ToInt32(intStr);\n        }\n        ", "catch", " (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            ", "return", " Default;\n        }\n    }\n\n    ", "//写整数", "\n    ", "public", " ", "void", " ", "WriteInteger", "(", "string", " Section, ", "string", " Ident, ", "int", " Value", ")", "\n    {\n        WriteString(Section, Ident, Value.ToString());\n    }\n\n    ", "//读布尔", "\n    ", "public", " ", "bool", " ", "ReadBool", "(", "string", " Section, ", "string", " Ident, ", "bool", " Default", ")", "\n    {\n        ", "try", "\n        {\n            ", "return", " Convert.ToBoolean(ReadString(Section, Ident, Convert.ToString(Default)));\n        }\n        ", "catch", " (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            ", "return", " Default;\n        }\n    }\n\n    ", "//写Bool", "\n    ", "public", " ", "void", " ", "WriteBool", "(", "string", " Section, ", "string", " Ident, ", "bool", " Value", ")", "\n    {\n        WriteString(Section, Ident, Convert.ToString(Value));\n    }\n\n    ", "//从Ini文件中，将指定的Section名称中的所有Ident添加到列表中", "\n    ", "public", " ", "void", " ", "ReadSection", "(", "string", " Section, StringCollection Idents", ")", "\n    {\n        Byte[] Buffer = ", "new", " Byte[", "16384", "];\n        ", "//Idents.Clear();", "\n\n        ", "int", " bufLen = GetPrivateProfileString(Section, ", "null", ", ", "null", ", Buffer, Buffer.GetUpperBound(", "0", "), FileName);\n        ", "//对Section进行解析", "\n        GetStringsFromBuffer(Buffer, bufLen, Idents);\n    }\n\n    ", "private", " ", "void", " ", "GetStringsFromBuffer", "(", "Byte[] Buffer, ", "int", " bufLen, StringCollection Strings", ")", "\n    {\n        Strings.Clear();\n        ", "if", " (bufLen != ", "0", ")\n        {\n            ", "int", " start = ", "0", ";\n            ", "for", " (", "int", " i = ", "0", "; i < bufLen; i++)\n            {\n                ", "if", " ((Buffer[i] == ", "0", ") && ((i - start) > ", "0", "))\n                {\n                    String s = Encoding.GetEncoding(", "0", ").GetString(Buffer, start, i - start);\n                    Strings.Add(s);\n                    start = i + ", "1", ";\n                }\n            }\n        }\n    }\n\n    ", "//从Ini文件中，读取所有的Sections的名称", "\n    ", "public", " ", "void", " ", "ReadSections", "(", "StringCollection SectionList", ")", "\n    {\n        ", "//Note:必须得用Bytes来实现，StringBuilder只能取到第一个Section", "\n        ", "byte", "[] Buffer = ", "new", " ", "byte", "[", "65535", "];\n        ", "int", " bufLen = ", "0", ";\n\n        bufLen = GetPrivateProfileString(", "null", ", ", "null", ", ", "null", ", Buffer,\n        Buffer.GetUpperBound(", "0", "), FileName);\n        GetStringsFromBuffer(Buffer, bufLen, SectionList);\n    }\n\n    ", "//读取指定的Section的所有Value到列表中", "\n    ", "public", " ", "void", " ", "ReadSectionValues", "(", "string", " Section, NameValueCollection Values", ")", "\n    {\n        StringCollection KeyList = ", "new", " StringCollection();\n        ReadSection(Section, KeyList);\n        Values.Clear();\n        ", "foreach", " (", "string", " key ", "in", " KeyList)\n        {\n            Values.Add(key, ReadString(Section, key, ", "\"\"", "));\n        }\n    }\n\n    ", "/**/", "\n    ", "///", "/读取指定的Section的所有Value到列表中，", "\n    ", "//public void ReadSectionValues(string Section, NameValueCollection Values,char splitString)", "\n    ", "//{　 string sectionValue;", "\n    ", "//　　string[] sectionValueSplit;", "\n    ", "//　　StringCollection KeyList = new StringCollection();", "\n    ", "//　　ReadSection(Section, KeyList);", "\n    ", "//　　Values.Clear();", "\n    ", "//　　foreach (string key in KeyList)", "\n    ", "//　　{", "\n    ", "//　　　　sectionValue=ReadString(Section, key, \"\");", "\n    ", "//　　　　sectionValueSplit=sectionValue.Split(splitString);", "\n    ", "//　　　　Values.Add(key, sectionValueSplit[0].ToString(),sectionValueSplit[1].ToString());", "\n    ", "//　　}", "\n    ", "//}", "\n\n    ", "//清除某个Section", "\n    ", "public", " ", "void", " ", "EraseSection", "(", "string", " Section", ")", "\n    {\n        ", "if", " (!WritePrivateProfileString(Section, ", "null", ", ", "null", ", FileName))\n        {\n            ", "throw", " (", "new", " ApplicationException(", "\"无法清除Ini文件中的Section\"", "));\n        }\n    }\n\n    ", "//删除某个Section下的键", "\n    ", "public", " ", "void", " ", "DeleteKey", "(", "string", " Section, ", "string", " Ident", ")", "\n    {\n        WritePrivateProfileString(Section, Ident, ", "null", ", FileName);\n    }\n\n    ", "//Note:对于Win9X，来说需要实现UpdateFile方法将缓冲中的数据写入文件", "\n    ", "//在Win NT, 2000和XP上，都是直接写文件，没有缓冲，所以，无须实现UpdateFile", "\n    ", "//执行完对Ini文件的修改之后，应该调用本方法更新缓冲区。", "\n    ", "public", " ", "void", " ", "UpdateFile", "(", ")", "\n    {\n        WritePrivateProfileString(", "null", ", ", "null", ", ", "null", ", FileName);\n    }\n\n    ", "//检查某个Section下的某个键值是否存在", "\n    ", "public", " ", "bool", " ", "ValueExists", "(", "string", " Section, ", "string", " Ident", ")", "\n    {\n        StringCollection Idents = ", "new", " StringCollection();\n        ReadSection(Section, Idents);\n        ", "return", " Idents.IndexOf(Ident) > ", "-1", ";\n    }\n\n    ", "//确保资源的释放", "\n    ~IniFiles()\n    {\n        UpdateFile();\n    }\n}\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我尝试在using中添加过所有的指令但是还是报错，也在引用中添加过，出现的问题还是报错", "\n", "我想要达到的结果", "\n", "请各位给点指定吧"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要引进你的源文件&amp;#xff0c;就像命名空间std&amp;#xff0c;必须写一句using name space std才能用&amp;#xff0c;否则会报错一样&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["名称空间不可以在别的文件用么，有奖问答", ["\n", "是这样的，头文件搞了个名称空间，源文件包含了头文件，然后我却不能用头文件的名称空间，问下是本来不能这样还是弄错了，希望纠正"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to specify the namespace in the &lt;code&gt;addChild&lt;/code&gt; call as the globally unique \"namespace identifier\" (URI) not the \"local prefix\". So in this case, you are binding the &lt;code&gt;xhtml&lt;/code&gt; prefix as &lt;code&gt;xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"&lt;/code&gt; so the namespace URI is &lt;code&gt;http://www.w3.org/1999/xhtml&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$localeNode = $urlNode-&amp;gt;addChild(\n    'xhtml:link',\n    'www.url.ch' . '/' . $locale,\n    'http://www.w3.org/1999/xhtml'\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The XML library then looks up the already-assigned prefix for this namespace when generating the XML, and gives the desired result.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["使用命名空间创建SimpleXMLElement节点并防止名称空间重复", ["\n\n", "For a google sitemap I want to create XML nodes with namespace. How can I prevent simplexml from inserting the namespace on each node.", "\n\n", "Structure that I need:", "\n\n", "<xhtml:link \n             rel=\"alternate\"\n             hreflang=\"de\"\n             href=\"http://www.example.com/deutsch/\"\n             />\n", "\n\n", "Structure from my code:", "\n\n", "    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n       <url>\n          <loc>www.url.ch</loc>\n          <xhtml:link xmlns:xhtml=\"xhtml\" rel=\"alternate\" hreflang=\"de-CH\" href=\"www.url.ch/de\">www.url.ch/de</xhtml:link>\n          <xhtml:link xmlns:xhtml=\"xhtml\" rel=\"alternate\" hreflang=\"fr-CH\" href=\"www.url.ch/fr\">www.url.ch/fr</xhtml:link>\n       </url>\n    </urlset>\n", "\n\n", "My Code:", "\n\n", "        $rootNode = new SimpleXMLElement(\n            '<?xml version=\"1.0\" encoding=\"utf-8\"?>' .\n            '   <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"></urlset>'\n        );\n\n        $urlNode = $rootNode->addChild('url');\n        $urlNode->addChild('loc', 'www.url.ch');\n\n        foreach (['de', 'fr', 'it', 'en'] as $locale) {\n            if (in_array($locale, ['it', 'en'])) {\n                continue;\n            }\n\n            $localeNode = $urlNode->addChild(\n                'xhtml:link',\n                'www.url.ch' . '/' . $locale,\n                'xhtml'\n            );\n\n            $localeNode->addAttribute('rel', 'alternate');\n            $localeNode->addAttribute('hreflang', $locale . '-CH');\n            $localeNode->addAttribute('href', 'www.url.ch' . '/' . $locale);\n        }\n\n        $rootNode->saveXML($filePath);\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I don't think the xml decoder can specify an element should have no namespace with struct tags. But I do know that it can retrieve the information about the namespaces for you and you could then post process the data after to get the same result:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/xml\"\n    \"fmt\"\n)\n\ntype Foo struct {\n    XMLName xml.Name\n    Data string `xml:\",chardata\"`\n}\n\ntype XML struct {\n    Foo []Foo `xml:\"foo\"`\n}\n\nfunc main() {\n    rawXML := []byte(`\n&amp;lt;xml&amp;gt;\n  &amp;lt;foo&amp;gt;A&amp;lt;/foo&amp;gt;\n  &amp;lt;ns:foo&amp;gt;B&amp;lt;/ns:foo&amp;gt;\n&amp;lt;/xml&amp;gt;`)\n\n    x := new(XML)\n    xml.Unmarshal(rawXML, x)\n    //fmt.Printf(\"foo: %#v\n\", x)\n    for _, el := range x.Foo {\n       if el.XMLName.Space == \"\" {\n          fmt.Printf(\"non namespaced foo %q\", el.Data)\n      }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/aDEFPmHPc0\" rel=\"noreferrer\"&gt;http://play.golang.org/p/aDEFPmHPc0&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["在Go中解析XML时处理名称空间", ["\n\n", "I am trying to parse a piece if XML in Go:", "\n\n", "package main\n\nimport (\n    \"encoding/xml\"\n    \"fmt\"\n)\n\ntype XML struct {\n    Foo string `xml:\"foo\"`\n}\n\nfunc main() {\n    rawXML := []byte(`\n<xml>\n  <foo>A</foo>\n  <ns:foo>B</ns:foo>\n</xml>`)\n\n    x := new(XML)\n    xml.Unmarshal(rawXML, x)\n    fmt.Printf(\"foo: %s\n\", x.Foo)\n}\n", "\n\n", "This outputs:", "\n\n", "foo: B\n", "\n\n", "While I expected it to produce:", "\n\n", "foo: A\n", "\n\n", "How do I get content of the first ", "foo", " tag (i.e. one without namespace)?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;.h:\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; vector_namespace {\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Vector&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;enum&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Mode&lt;/span&gt; { Rect, Pol };\n        &lt;span class=\"hljs-built_in\"&gt;Vector&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;Vector&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; y, Mode mode &amp;#61; Mode::Rect);\n        &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; std::ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Vector&amp;amp; vector);\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; X;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; Y;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; Mag;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; Ang;\n        Mode Mode;\n    };\n}\n\ncpp:\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;vector.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; vector_namespace {\nVector::&lt;span class=\"hljs-built_in\"&gt;Vector&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; y, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;enum&lt;/span&gt; Mode mode) {\n        Mode &amp;#61; mode;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mode &amp;#61;&amp;#61; Mode::Pol) {\n            Mag &amp;#61; x;\n            Ang &amp;#61; y;\n         \n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mode &amp;#61;&amp;#61; Mode::Rect) {\n            X &amp;#61; x;\n            Y &amp;#61; y;\n          \n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            X &amp;#61; Y &amp;#61; Mag &amp;#61; Ang &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n            Mode &amp;#61; Mode::Rect;\n        }\n    }\n}\nstd::ostream&amp;amp; vector_namespace::&lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Vector&amp;amp; vector) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (vector.Mode &amp;#61;&amp;#61; Vector::Mode::Rect) {\n            os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(x,y) &amp;#61; (&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; vector.X &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; vector.Y &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (vector.Mode &amp;#61;&amp;#61; Vector::Mode::Pol) {\n            os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(m,a) &amp;#61; (&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; vector.Mag &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; vector.Ang * (&lt;span class=\"hljs-number\"&gt;45.0&lt;/span&gt; / &lt;span class=\"hljs-built_in\"&gt;atan&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;)) &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Vector object mode is invalid&amp;#34;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["名称空间与友元函数的相关问题？", ["/放在命名空间中的一个类 vector.h\n", "namespace", " vector_namespace {\n    ", "class", " ", "Vector", " {\n    ", "public", ":\n        ", "enum class", " ", "Mode", " { Rect, Pol };\n\n        ", "Vector", "();\n        ", "Vector", "(", "double", " x, ", "double", " y, Mode mode = Mode::Rect);\n        ", "friend", " std::ostream& ", "operator", "<<(std::ostream& os, ", "const", " Vector& vector);\n    ", "private", ":\n        ", "double", " X;\n        ", "double", " Y;\n        ", "double", " Mag;\n        ", "double", " Ang;\n        Mode Mode;\n    };\n}\n\n/vector.cpp\n", "namespace", " vector_namespace {\nVector::", "Vector", "(", "const", " ", "double", " x, ", "const", " ", "double", " y, ", "const", " ", "enum", " Mode mode) {\n        Mode = mode;\n        ", "if", " (mode == Mode::Pol) {\n            Mag = x;\n            Ang = y;\n            ", "SetX", "();\n            ", "SetY", "();\n        }\n        ", "else", " ", "if", " (mode == Mode::Rect) {\n            X = x;\n            Y = y;\n            ", "SetMag", "();\n            ", "SetAng", "();\n        }\n        ", "else", " {\n            X = Y = Mag = Ang = ", "0.0", ";\n            Mode = Mode::Rect;\n        }\n    }\nstd::ostream& ", "operator", "<<(std::ostream& os, ", "const", " Vector& vector) {\n        ", "if", " (vector.Mode == Vector::Mode::Rect) {\n            os << ", "\"(x,y) = (\"", " << vector.X << ", "\", \"", " << vector.Y << ", "\")\"", ";\n        }\n        ", "else", " ", "if", " (vector.Mode == Vector::Mode::Pol) {\n            os << ", "\"(m,a) = (\"", " << vector.Mag << ", "\",\"", " << vector.Ang * (", "45.0", " / ", "atan", "(", "1.0", ")) << ", "\")\"", ";\n        }\n        ", "else", " {\n            os << ", "\"Vector object mode is invalid\"", ";\n        }\n        ", "return", " os;\n    }\n}\n", "\n", "上面的代码operator<<函数可以成功编译", "\n", "/vector.cpp\n", "namespace", " vector_namespace {\nVector::", "Vector", "(", "const", " ", "double", " x, ", "const", " ", "double", " y, ", "const", " ", "enum", " Mode mode) {\n        Mode = mode;\n        ", "if", " (mode == Mode::Pol) {\n            Mag = x;\n            Ang = y;\n            ", "SetX", "();\n            ", "SetY", "();\n        }\n        ", "else", " ", "if", " (mode == Mode::Rect) {\n            X = x;\n            Y = y;\n            ", "SetMag", "();\n            ", "SetAng", "();\n        }\n        ", "else", " {\n            X = Y = Mag = Ang = ", "0.0", ";\n            Mode = Mode::Rect;\n        }\n    }\n}\nstd::ostream& vector_namespace::", "operator", "<<(std::ostream& os, ", "const", " Vector& vector) {\n        ", "if", " (vector.Mode == Vector::Mode::Rect) {\n            os << ", "\"(x,y) = (\"", " << vector.X << ", "\", \"", " << vector.Y << ", "\")\"", ";\n        }\n        ", "else", " ", "if", " (vector.Mode == Vector::Mode::Pol) {\n            os << ", "\"(m,a) = (\"", " << vector.Mag << ", "\",\"", " << vector.Ang * (", "45.0", " / ", "atan", "(", "1.0", ")) << ", "\")\"", ";\n        }\n        ", "else", " {\n            os << ", "\"Vector object mode is invalid\"", ";\n        }\n        ", "return", " os;\n    }\n", "\n", "而此时无法通过编译，请问为什么下面那种不能通过编译，明明也是把函数定义在了名称空间中，和上面一种放在大括号内有什么区别呢？"]], "Tag": "程序设计"}
{"Answer": "你定义表的create语句 肯定给表名带上双引号了，导致区分大小写。", "Konwledge_Point": "名字空间", "Question": ["oracle表空间有表，提示表不存在问题", ["我的查询结果如下：", "\n用户名：userBank，表空间：tp_bank，查询用户下的表有表，但是可以查询大写表名称的表，不能查询小写表名称的表?请问哪里出了问题？", "\n\n", " SQL> \nselect username,default_tablespace from user_users;\n\nUSERNAME\n--------------------------------------------------------------------------------\nDEFAULT_TABLESPACE\n--------------------------------------------------------------------------------\nUSERBANK\nTP_BANK\n\n\nSQL> show user;\nUSER is \"USERBANK\"\nSQL> select table_name from user_tables;\n\nTABLE_NAME\n--------------------------------------------------------------------------------\ncardType\ncustomerInfo\ndeposit\nmanager\nmoneyType\nrole\nBANKROLE\nCARDINFO\nTRANSACTION\n\n9 rows selected.\n\nSQL> select * from cardinfo;\n\nno rows selected\n\nSQL> select * from transaction;\n\nno rows selected\n\nSQL> select * from deposit;\nselect * from deposit\n              *\nERROR at line 1:\nORA-00942: table or view does not exist\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It should not matter where the namespace is declared unless the code that's consuming your SOAP message is doing something wrong.&lt;/p&gt;\n\n&lt;p&gt;Since both \"before\" and \"after\" examples are functionally equivalent, they are both correct with respect to WSDL, so changing WSDL is not going to have any effect in this respect.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["将名称空间从SOAP信封根目录移动到xml负载", ["\n\n", "I've got a soap envelope that is returned from a encoded RPC PHP service that I wrote that declares a namespace in the root node of the SOAP envelope.  However, I want that namespace to be in the root node of the xml payload in the SOAP body.  Basically, I want this:", "\n\n", "<SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\nxmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:ns1=\"http://sample.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org\n/soap/encoding/\">\n  <SOAP-ENV:Body>\n    <ns1:ServiceResponse>\n       <outgoingVar1>true</outgoingVar1>\n    </ns1:ServiceResponse>\n  </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n", "\n\n", "to become this:", "\n\n", "<SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"\nxmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org\n/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:SOAP-\nENC=\"http://schemas.xmlsoap.org/soap/encoding/\">\n  <SOAP-ENV:Body>\n    <ServiceResponse xmlns=\"http://sample.com\">\n       <outgoingVar1>true</outgoingVar1>\n    </ServiceResponse>\n  </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n", "\n\n", "and here is my annotated (left out trivial namespace declarations) WSDL as it stands right now:", "\n\n", "<wsdl:definitions name=\"IJLSoapResponse\" targetNamespace=\"http://casey.com\" tns=\"http://casey.com\" xmlns:samp=\"http://sample.com\" ...>\n<wsdl:types>\n    <xsd:schema targetNamespace=\"http://casey.com\" ...>\n        <xsd:element name=\"incomingVar1\" type=\"xsd:string\" nillable=\"true\"/>\n        <xsd:element name=\"incomingVar2\" type=\"xsd:string\" nillable=\"true\"/>\n    </xsd:schema>\n    <xsd:schema targetNamespace=\"http://sample.com\" ...>\n        <xsd:element name=\"outgoingVar1\" type=\"xsd:boolean\" nillable=\"true\"/>\n    </xsd:schema>\n</wsdl:types>\n<wsdl:message name=\"ServiceInput\">\n    <wsdl:part name=\"incomingVar1\" element=\"tns:incomingVar1\"/>\n    <wsdl:part name=\"incomingVar2\" element=\"tns:incomingVar2\"/>\n</wsdl:message>\n<wsdl:message name=\"ServiceOutput\">\n    <wsdl:part name=\"outgoingVar1\" element=\"samp:outgoingVar1\"/>\n</wsdl:message>\n<wsdl:portType name=\"ServicePortType\">\n    <wsdl:operation name=\"ServiceMessage\" parameterOrder=\"incomingVar1 incomingVar2\">\n        <wsdl:input name=\"ServiceMessageRequest\" message=\"tns:ServiceInput\"/>\n        <wsdl:output name=\"ServiceMessageResponse\" message=\"tns:ServiceOutput\"/>\n    </wsdl:operation>\n</wsdl:portType>\n<wsdl:binding name=\"ServiceBinding\" type=\"tns:ServicePortType\">\n    <soap:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <wsdl:operation name=\"ServiceMessage\">\n        <soap:operation soapAction=\"http://casey.com/soap/Service\"/>\n        <wsdl:input name=\"ServiceRequest\">\n            <soap:body use=\"encoded\" encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://casey.com\"/>\n        </wsdl:input>\n        <wsdl:output name=\"ServiceResponse\">\n            <soap:body use=\"encoded\" encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"http://sample.com\"/>\n        </wsdl:output>\n    </wsdl:operation>\n</wsdl:binding>\n<wsdl:service name=\"ServiceService\">\n    <wsdl:port name=\"ServicePort\" binding=\"tns:ServiceBinding\">\n        <soap:address location=\"http://casey.com/soap/Service\"/>\n    </wsdl:port>\n</wsdl:service>\n</wsdl:definitions>\n", "\n\n", "Is there something in the WSDL that can be changed in order to force that namespace into the payload?  I've tried moving it around to several different places to no avail.  Thanks for your help.", "\n\n", "PS If you see something wrong with the WSDl as far as it not being validating or something similar, just disregard it...the original validates/deploys/works fine.  I'm more worried about where I can put the namespace.  Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can tell whether a node has a namespace by checking &lt;code&gt;-&amp;gt;prefix&lt;/code&gt; or &lt;code&gt;-&amp;gt;namespaceURI&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($doc-&amp;gt;getElementsByTagName('link') as $link) {\n    if (strlen($link-&amp;gt;prefix)) {\n        continue;\n    }\n    // $link does not have prefix\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["只在PHP DOM中选择没有名称空间/前缀的节点？", ["\n\n", "I'm trying to read some RSS feeds with DOM in PHP like this one:", "\n\n", "    <channel>\n        <atom:link href='' rel='self' type='application/rss+xml' />\n        <title>TechStuff</title>\n        <link>http://www.howstuffworks.com</link>\n", "\n\n", "To grab the link (", "<link></link>", ") I use this piece of code:", "\n\n", "    $doc->getElementsByTagName('link')->item(0);\n", "\n\n", "It works in all other RSS feeds that I have tried. But this one has placed ", "<atom:link>", " before ", "<link>", ", which means that it grabs ", "<atom:link>", " instead.", "\n\n", "So how do I do to only select nodes without a namespace?", "\n    "]], "Tag": "程序设计"}
{"Answer": "DataObject.Dele这个是第三方的，你得问写代码的人。", "Konwledge_Point": "名字空间", "Question": ["using DataObject.Dele; 找不到命名空间或类型", ["网上找不到                                 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;拼写有误&lt;br /&gt;应该是using namespace std;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["错误“std”: 具有该名称的命名空间不存在”", ["c++初学者，代码调试报错，求指教。", "\n", "这个程序是求N的阶乘", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " srd;\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " N,jc;\n    cout << ", "\"本程序的功能为求N的阶乘，请输入N的值：\"", ";\n    cin >> N;\n    ", "if", " (N < ", "0", ")\n    {\n        cout >> ", "\"输入值错误，仅可输入自然数\"", ";\n    }\n    ", "else", "\n    {\n        ", "if", " (N == ", "0", ")\n        {\n            cout >> ", "\"1\"", "; endl;\n        }\n        ", "else", "\n        ", "while", " (N>", "1", ")\n        {\n            jc = N * (N", "-1", ");\n            N--;\n        }\n        jc = N;\n        cout << jc;\n    }\n    ", "return", " ", "0", ";\n\n}\n\n", "\n", "报错内容：", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    C2065    “cin”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    7", "错误    C2065    “cout”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    6", "错误    C2065    “cout”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    10", "错误    C2065    “cout”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    16", "错误    C2065    “cout”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    25", "错误    C2065    “endl”: 未声明的标识符    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    16", "错误    C2871    “srd”: 具有该名称的命名空间不存在    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    2", "错误(活动)    E0725    名称必须是命名空间名    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    2", "错误(活动)    E0020    未定义标识符 \"cin\"    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    7", "错误(活动)    E0020    未定义标识符 \"cout\"    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    6", "错误(活动)    E0020    未定义标识符 \"endl\"    Project1    C:\\Users\\Arcadia\\Desktop\\Project1\\Project1\\单元2测验1.cpp    16    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;To get entry nodes use only the first part of your expression:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/atom:feed/atom:entry\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get all entry nodes that have a media descendant node, you could use this expression:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/atom:feed/atom:entry[.//media:*]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;After you get the entry nodes, you wanted use another expression and provide the context in the second argument of query()/evaluate().&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.//media:*\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Be aware that you have to register and use your own namespaces prefixes on the SimpleXml/DOMXpath instance. &lt;/p&gt;\n\n&lt;p&gt;I suggest using DOMXpath::evaluate() and not SimpleXmlElement::xpath(). Unlike xpath(), evaluate can return scalar values directly. Expressions like &lt;code&gt;string(.//media:copyright)&lt;/code&gt; only work with evaluate(), not with xpath() or DOMXpath::query().&lt;/p&gt;\n\n&lt;p&gt;Here is a small example using DOM+Xpath to query an Atom feed with MediaRss:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$dom = new DOMDocument();\n$dom-&amp;gt;load('feed.xml');\n$xpath = new DOMXpath($dom);\n\n$xpath-&amp;gt;registerNamespace('atom', 'http://www.w3.org/2005/Atom');\n$xpath-&amp;gt;registerNamespace('media', 'http://search.yahoo.com/mrss/');\n\nforeach ($xpath-&amp;gt;evaluate('/atom:feed/atom:entry[.//media:thumbnail]', NULL, FALSE) as $entry) {\n  $href = $xpath-&amp;gt;evaluate('string(atom:link[@rel = \"related\" and @type=\"text/html\"]/@href)', $entry, FALSE);\n  $src = $xpath-&amp;gt;evaluate('string(.//media:thumbnail/@url)', $entry, FALSE);\n  printf('&amp;lt;a href=\"%s\"&amp;gt;&amp;lt;img src=\"%s\"/&amp;gt;&amp;lt;/a&amp;gt;', $href, $src);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["XPATH  - 当内部节点名称空间不同时，在一个节点下返回整个对象", ["\n\n", "Another XPath question.  I have an API to query which contains multiple nested namespaces.", "\n\n", "<feed xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\" xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns=\"http://www.w3.org/2005/Atom\" xmlns:pamedia=\"http://paimages.co.uk/pamedia.htm\">\n<title>\n    Image / video search results\n</title>\n<subtitle>\n    Images / video found containing the search string provided\n</subtitle>\n<pamedia:found>\n    2228\n</pamedia:found>\n<pamedia:perpage>\n    100\n</pamedia:perpage>\n<pamedia:page>\n    1\n</pamedia:page>\n<opensearch:totalResults>\n    2228\n</opensearch:totalResults>\n<opensearch:itemsPerpage>\n    100\n</opensearch:itemsPerpage>\n<opensearch:startIndex>\n    1\n</opensearch:startIndex>\n<id>\n    http://images.pressassociation.com/cgi/search_api/?state=search&q=miley\n</id>\n<link rel=\"self\" href=\"http://images.pressassociation.com/cgi/search_api/?state=search&q=miley\"></link>\n<link rel=\"next\" href=\"http://images.pressassociation.com/cgi/search_api/?state=search&q=miley&offset=2\"></link>\n<link rel=\"last\" href=\"http://images.pressassociation.com/cgi/search_api/?state=search&q=miley&offset=23\"></link>\n<updated>\n    2013-11-21T09:13:21Z\n</updated>\n<link rel=\"self\" href=\"http://images.pressassociation.com/cgi/search_api/?state=search&q=miley\">\n    <updated>\n        2013-11-21T09:13:21Z\n    </updated>\n    <name>\n        Press Association Images\n    </name>\n    <email>\n        redacted\n    </email>\n</link>\n<entry>\n    <pamedia:media-type>\n        image/jpeg\n    </pamedia:media-type>\n    <pamedia:event_date>\n        2013-11-14\n    </pamedia:event_date>\n    <pamedia:urn>\n        18209006\n    </pamedia:urn>\n    <pamedia:domain>\n        2\n    </pamedia:domain>\n    <pamedia:domain_prefix>\n        PA\n    </pamedia:domain_prefix>\n    <link type=\"application/vnd.iptc.g2.newsitem+xml\" href=\"http://images.pressassociation.com/meta/2.18209006.xml\"></link>\n    <link rel=\"related\" href=\"http://images.pressassociation.com/meta/2.18209006.html\" type=\"text/html\"></link>\n    <link rel=\"related\" href=\"http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18209006.jpg\" type=\"image/jpeg\"></link>\n    <media:thumbnail width=\"127\" medium=\"image\" height=\"190\" url=\"http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18209006.jpg\" type=\"image/jpeg\"></media:thumbnail>\n    <media:content expression=\"sample\" medium=\"image\" width=\"511\" height=\"767\" url=\"http://images.pressassociation.com/image/preview/2.18209006.jpg\" type=\"image/jpeg\"></media:content>\n    <media:copyright>\n        Associated Press\n    </media:copyright>\n    <media:content expression=\"full\" medium=\"photo\" width=\"6041\" height=\"4024\" url=\"http://images.pressassociation.com/image/2.18209006.jpg\" type=\"image/jpeg\"></media:content>\n    <updated>\n        2013-11-15T10:56:44Z\n    </updated>\n    <summary type=\"html\">\n        Fans wait for singer Miley Cyrus before the Bambi 2013 media awards in Berlin, Germany, Thursday, Nov. 14, 2013. (AP Photo/Gero Breloer)\n    </summary>\n    <rights type=\"html\">\n        UK picture buyers only BRO110\n    </rights>\n    <id>\n        http://images.pressassociation.com/meta/2.18209006.xml\n    </id>\n    <title type=\"html\">\n        2013 Bambi Media Awards - Berlin\n    </title>\n    <category term=\"E\"></category>\n    <author>\n        <name>\n            Gero Breloer/AP\n        </name>\n    </author>\n</entry>\n<entry>\n    <pamedia:media-type>\n        image/jpeg\n    </pamedia:media-type>\n    <pamedia:event_date>\n        2013-11-14\n    </pamedia:event_date>\n    <pamedia:urn>\n        18207923\n    </pamedia:urn>\n    <pamedia:domain>\n        2\n    </pamedia:domain>\n    <pamedia:domain_prefix>\n        PA\n    </pamedia:domain_prefix>\n    <link type=\"application/vnd.iptc.g2.newsitem+xml\" href=\"http://images.pressassociation.com/meta/2.18207923.xml\"></link>\n    <link rel=\"related\" href=\"http://images.pressassociation.com/meta/2.18207923.html\" type=\"text/html\"></link>\n    <link rel=\"related\" href=\"http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18207923.jpg\" type=\"image/jpeg\"></link>\n    <media:thumbnail width=\"127\" medium=\"image\" height=\"198\" url=\"http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18207923.jpg\" type=\"image/jpeg\"></media:thumbnail>\n    <media:content expression=\"sample\" medium=\"image\" width=\"511\" height=\"796\" url=\"http://images.pressassociation.com/image/preview/2.18207923.jpg\" type=\"image/jpeg\"></media:content>\n    <media:copyright>\n        Associated Press\n    </media:copyright>\n    <media:content expression=\"full\" medium=\"photo\" width=\"2801\" height=\"1796\" url=\"http://images.pressassociation.com/image/2.18207923.jpg\" type=\"image/jpeg\"></media:content>\n    <updated>\n        2013-11-15T10:56:44Z\n    </updated>\n    <summary type=\"html\">\n        Singer Miley Cyrus arrives for the Bambi 2013 media awards in Berlin, Germany, Thursday, Nov. 14, 2013. (AP Photo/Gero Breloer)\n    </summary>\n    <rights type=\"html\">\n        UK picture buyers only BRO105\n    </rights>\n    <id>\n        http://images.pressassociation.com/meta/2.18207923.xml\n    </id>\n    <title type=\"html\">\n        2013 Bambi Media Awards - Berlin\n    </title>\n    <category term=\"E\"></category>\n    <author>\n        <name>\n            Gero Breloer/AP\n        </name>\n    </author>\n</entry>\n", "\n\n", "In order to get the media: namespace nodes and the rest of the entry nodes I am using this query: ", "'/namespace:feed/namespace:entry | namespace:entry/media:*'", "  However doing this returns the media nodes as seperate array items:", "\n\n", "   rray\n(\n    [0] => SimpleXMLElement Object\n        (\n            [link] => Array\n                (\n                    [0] => SimpleXMLElement Object\n                        (\n                            [@attributes] => Array\n                                (\n                                    [href] => http://images.pressassociation.com/meta/2.18209006.xml\n                                    [type] => application/vnd.iptc.g2.newsitem+xml\n                                )\n\n                        )\n\n                    [1] => SimpleXMLElement Object\n                        (\n\n\n [@attributes] => Array\n                            (\n                                [href] => http://images.pressassociation.com/meta/2.18209006.html\n                                [rel] => related\n                                [type] => text/html\n                            )\n\n                    )\n\n                [2] => SimpleXMLElement Object\n                    (\n                        [@attributes] => Array\n                            (\n                                [href] => http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18209006.jpg\n                                [rel] => related\n                                [type] => image/jpeg\n                            )\n\n                    )\n\n            )\n\n        [updated] => 2013-11-15T10:56:44Z\n        [summary] => Fans wait for singer Miley Cyrus before the Bambi 2013 media awards in Berlin, Germany, Thursday, Nov. 14, 2013. (AP Photo/Gero Breloer)\n        [rights] => UK picture buyers only BRO110\n        [id] => http://images.pressassociation.com/meta/2.18209006.xml\n        [title] => 2013 Bambi Media Awards - Berlin\n        [category] => SimpleXMLElement Object\n            (\n                [@attributes] => Array\n                    (\n                        [term] => E\n                    )\n\n            )\n\n        [author] => SimpleXMLElement Object\n            (\n                [name] => Gero Breloer/AP\n            )\n\n    )\n\n[1] => SimpleXMLElement Object\n    (\n        [@attributes] => Array\n            (\n                [url] => http://images.pressassociation.com/empicsthumbnail/vol183/block3642/18209006.jpg\n                [medium] => image\n                [type] => image/jpeg\n                [width] => 127\n                [height] => 190\n            )\n\n    )\n\n[2] => SimpleXMLElement Object\n    (\n        [@attributes] => Array\n            (\n                [url] => http://images.pressassociation.com/image/preview/2.18209006.jpg\n                [medium] => image\n                [type] => image/jpeg\n                [expression] => sample\n                [width] => 511\n                [height] => 767\n            )\n\n    )\n\n[3] => SimpleXMLElement Object\n    (\n    )\n\n[4] => SimpleXMLElement Object\n    (\n        [@attributes] => Array\n            (\n                [url] => http://images.pressassociation.com/image/2.18209006.jpg\n                [medium] => photo\n                [type] => image/jpeg\n                [expression] => full\n                [width] => 6041\n                [height] => 4024\n            )\n\n    )\n", "\n\n", "I however require [1] [2] [3] & [4] to be nested withing the entry node [0] for extracting values.  If anyone could help with this issue I would be very grateful. If possible I would like to be able to return it all with one XPath call.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to pass the namespace uri of the prefix to add child element with prefix :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$item-&amp;gt;addChild($key, $value, 'http://base.google.com/ns/1.0');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://eval.in/480623\" rel=\"nofollow\"&gt;&lt;code&gt;eval.in demo&lt;/code&gt;&lt;/a&gt; :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$xml = new SimpleXMLElement('&amp;lt;rss version=\"2.0\" xmlns:g=\"http://base.google.com/ns/1.0\"/&amp;gt;');\n$channel = $xml-&amp;gt;addChild('channel');\n$channel-&amp;gt;addChild('title', 'Text');\n$channel-&amp;gt;addChild('link', 'http://example.com');\n$channel-&amp;gt;addChild('description', 'An example item from the feed.');\n\n$item = $channel-&amp;gt;addChild('item');\n$item-&amp;gt;addChild('g:foo', 'bar', 'http://base.google.com/ns/1.0');\n\nprint $xml-&amp;gt;asXML();\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何在PHP中使用SimpleXMLElement生成名称空间前缀的xml元素", ["\n\n", "I'm trying to generate a RSS feed using PHP ", "SimpleXMLElement", ", the problem is that i need to prefix elements and can't find a way to do this using the ", "SimpleXMLElement", " class.", "\n\n", "I've tried using ", "$item->addChild('prefix:element', 'value')", " but in the result xml it strips the prefix, ", "any idea why this happens ?", ". ", "\n\n", "I wonder if there is a way to solve this using the ", "SimpleXMLElement", " or any other ", "cleaner", " way than just ", "echoing", " the XML.", "\n\n", "For clarification, this is my PHP code:", "\n\n", "    $xml = new SimpleXMLElement('<rss version=\"2.0\" xmlns:g=\"http://base.google.com/ns/1.0\"/>');\n    $channel = $xml->addChild('channel');\n    $channel->addChild('title', 'Text');\n    $channel->addChild('link', 'http://example.com');\n    $channel->addChild('description', 'An example item from the feed.');\n\n    foreach($this->products as $product) {\n        $item = $channel->addChild('item');\n\n        foreach($product as $key => $value)\n            $item->addChild($key, $value);\n    }\n\n    return $xml->asXML();\n", "\n\n", "And this is the example XML i'm trying to generate:", "\n\n", "<?xml version=\"1.0\"?>\n<rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n<channel>\n    <title>Test Store</title>\n    <link>http://www.example.com</link>\n    <description>An example item from the feed</description>\n\n    <item>\n        <g:id>DB_1</g:id>\n        <g:title>Dog Bowl In Blue</g:title>\n        <g:description>Solid plastic Dog Bowl in marine blue color</g:description>\n        ...\n    </item>\n...\n", "\n\n", "Thanks in advance", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Even though the namespace used in the XML is assigned no prefix (i.e. is default), you do need to register one and use it in your xpath expression.&lt;/p&gt;\n\n&lt;p&gt;This prefix can be anything you like, here I used &lt;code&gt;ns&lt;/code&gt;. Note it can be different from the prefix used in the document (if any) - the important part that needs to match is the namespace string itself.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Example:&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"github.com/moovweb/gokogiri\"\n    \"github.com/moovweb/gokogiri/xpath\"\n)\n\nfunc main() {\n    doc, _ := gokogiri.ParseXml([]byte(a))\n    defer doc.Free()\n    xp := doc.DocXPathCtx()\n    xp.RegisterNamespace(\"ns\", \"http://example.com/this\")\n    x := xpath.Compile(\"/ns:NodeA/ns:NodeB\")\n    groups, err := doc.Search(x)\n    if err != nil {\n        fmt.Println(err)\n    }\n    for i, group := range groups {\n        fmt.Println(i, group.Content())\n    }\n}\n\nvar a = `&amp;lt;?xml version=\"1.0\" ?&amp;gt;&amp;lt;NodeA xmlns=\"http://example.com/this\"&amp;gt;&amp;lt;NodeB&amp;gt;thisthat&amp;lt;/NodeB&amp;gt;&amp;lt;/NodeA&amp;gt;`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Output:&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;0 thisthat\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何使用gokogiri（libxml2）使用名称空间解析xml？", ["\n\n", "I am using ", "github.com/moovweb/gokogiri", " to parse an XML document. The following works when parsing ", "var b", " but when I try the same on ", "var a", " (which has a namespace) I get no output. How do I parse XML that has a namespace using ", "gokogiri", "?", "\n\n", "package main\n\nimport (\n    \"github.com/moovweb/gokogiri\"\n    \"github.com/moovweb/gokogiri/xpath\"\n    \"log\"\n)\n\nfunc main() {\n    log.SetFlags(log.Lshortfile)\n    doc, _ := gokogiri.ParseXml([]byte(a))\n    defer doc.Free()\n    doc.SetNamespace(\"\", \"http://example.com/this\")\n    x := xpath.Compile(\".//NodeA/NodeB\")\n    groups, err := doc.Search(x)\n    if err != nil {\n        log.Println(err)\n    }\n    for i, group := range groups {\n        log.Println(i, group)\n    }\n}\n\nvar a = `<?xml version=\"1.0\" ?><NodeA xmlns=\"http://example.com/this\"><NodeB>thisthat</NodeB></NodeA>`\nvar b = `<?xml version=\"1.0\" ?><NodeA><NodeB>thisthat</NodeB></NodeA>`\n", "\n\n", "EDIT #1:\nI've also tried ", "doc.RegisterNamespace", " but got", "\n\n", "\n  ", "doc.RegisterNamespace undefined (type *xml.XmlDocument has no field or method RegisterNamespace)\"", "\n", "\n\n", "and ", "x.RegisterNamespace", " getting", "\n\n", "\n  ", "x.RegisterNamespace undefined (type *xpath.Expression has no field or method RegisterNamespace)\"", "\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Unfortunately you're out of luck. Appengine does not provide an (exported) API call to access the namespace associated with the context.&lt;/p&gt;\n\n&lt;p&gt;The namespace association with the context is handled by the &lt;a href=\"https://godoc.org/google.golang.org/appengine/internal\" rel=\"nofollow\"&gt;&lt;code&gt;appengine/internal&lt;/code&gt;&lt;/a&gt; package, but &lt;em&gt;\"programs should not use this package directly\"&lt;/em&gt;. The context with namespace is obtained by the &lt;a href=\"https://godoc.org/google.golang.org/appengine/internal#NamespacedContext\" rel=\"nofollow\"&gt;&lt;code&gt;internal.NamespacedContext()&lt;/code&gt;&lt;/a&gt; call, and the namespace \"extraction\" from context is implemented in &lt;a href=\"https://godoc.org/google.golang.org/appengine/internal#NamespaceFromContext\" rel=\"nofollow\"&gt;&lt;code&gt;internal.NamespaceFromContext()&lt;/code&gt;&lt;/a&gt;. These are not part of the public API, so you can't (shouldn't) use them.&lt;/p&gt;\n\n&lt;p&gt;You basically have 2 options. One is the \"hacky\" way you presented, which works and you may continue to use it.&lt;/p&gt;\n\n&lt;p&gt;Another one is to manually handle it, e.g. by manually putting the namespace into the context with your own key, e.g.:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var namespaceKey = \"myNsKey\"\n\n\nctx = context.WithValue(ctx, namespaceKey, \"mynamespace\")\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And when you need it, you can get it like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ns := ctx.Value(namespaceKey)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Yes, this has the burden of having to manually update it, and if you'd forgot, you would get an \"invalid\" or empty namespace. So personally I would go with your \"hacky\" way for now (until this functionality is added to the public API, if ever).&lt;/p&gt;\n\n&lt;p&gt;If you go with the manual way, to get rid of the \"risk\" factor, you could create a helper function which could take care of this along with the &lt;a href=\"https://godoc.org/google.golang.org/appengine#Namespace\" rel=\"nofollow\"&gt;&lt;code&gt;appengine.Namespace()&lt;/code&gt;&lt;/a&gt; call, so you would not forget about it and it would be safe. It could look like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func SetNS(ctx context.Context, ns string) context.Context {\n    ctx = ctx, err := appengine.Namespace(ctx, ns)\n    if err != nil {\n        // handle error\n    }\n    ctx = context.WithValue(ctx, namespaceKey, ns)\n    return ctx\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And using it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ctx = SetNS(ctx, \"mynamespace\")\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But it may be a rare case when you need to access namespace from the context, as when you would need it, it might just be enough to pass the context to the proper (Appengine) API call which can extract it from the context.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何使用Go获取当前名称空间和App Engine延迟功能？", ["\n\n", "If I set the namespace of my ", "context.Context", " and call a delay function:", "\n\n", "ctx := appengine.NewContext(r)\nctx, err := appengine.Namespace(ctx, \"mynamespace\")\n\ndelayFunc.Call(ctx)\n", "\n\n", "How can I find its name:", "\n\n", "var delayFunc = delay.Func(\"my-func\", func(ctx context.Context) {\n    // How do I extract \"mynamespace\" from ctx?\n})\n", "\n\n", "Is the following acceptable practice?", "\n\n", "var delayFunc = delay.Func(\"my-func\", func(ctx context.Context) {\n    n := datastore.NewKey(ctx, \"E\", \"e\", 0, nil).Namespace()\n    // n == \"mynamespace\"\n})\n", "\n\n", "It works but feels like a hack.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There are two common ways to do it in PHP. First, using the simple xml extension (as you already doing):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$feed = simple_xml_load_file('url');\n// resister the kuler namespace\n$feed-&amp;gt;registerXpathNamespace('kuler', 'http://kuler.adobe.com/kuler/API/rss/');\n// get elements regardless of their position in tree -&amp;gt; //\n$result = $feed-&amp;gt;xpath('//kuler:swatchHexColor');\n\n// iterate through the result set \nforeach ($result as $item)   {\n  echo $item, PHP_EOL;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also use the DOM extension:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$feed = new DOMDocument();\n$feed-&amp;gt;load('url');\n\n// create an xpath selector for the document\n$selector = new DOMXPath($feed);\n// register the kuler namespace\n$selector-&amp;gt;registerNamespace('kuler', 'http://kuler.adobe.com/kuler/API/rss/');\n\n// get elements regardless of postion in tree -&amp;gt; //\n$result = $selector-&amp;gt;query('//kuler:swatchHexColor');\n\n// iterate trough the result set\nforeach ($result as $node) {\n    // do what you want with the node ...\n    echo $node-&amp;gt;nodeValue, PHP_EOL;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["当XML包含名称空间时，如何在PHP中使用XPath", ["\n\n", "I am looking for a way to get the ", "kuler:swatchHexColor", " values in the XML file below. I tried a few ways but no luck.  I tried this below, but didn't do well.", "\n\n", "Again, trying to put ", "hexColor", " values into variables.", "\n\n", "$feed = simplexml_load_file('url');\n$kuler = $feed->children('http://kuler.adobe.com/kuler/API/rss/');\nforeach ($kuler->themeItem as $themeItem)   {\n  echo $themeItem->swatch;\n}\n", "\n\n", "\n\n", "<rss xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:rss=\"http://blogs.law.harvard.edu/tech/rss\" xmlns:kuler=\"http://kuler.adobe.com/kuler/API/rss/\" version=\"2.0\">\n    <channel>\n        <title>kuler search results for 'crazy'</title>\n        <link>http://kuler.adobe.com/</link>\n        <description>\n        612 kuler themes were found. Displaying results 1 to 1.\n        </description>\n        <language>en-us</language>\n        <pubDate />\n        <lastBuildDate />\n        <docs>http://blogs.law.harvard.edu/tech/rss</docs>\n        <generator>Kuler Services</generator>\n        <managingEditor>kulerfeedback@adobe.com</managingEditor>\n        <webMaster>kulerfeedback@adobe.com</webMaster>\n        <recordCount>612</recordCount>\n        <startIndex>0</startIndex>\n        <itemsPerPage>1</itemsPerPage>\n        <item>\n            <title>Theme Title: crazy lisa</title>\n            <link>http://kuler.adobe.com/index.cfm#themeID/89760</link>\n            <guid>http://kuler.adobe.com/index.cfm#themeID/89760</guid>\n            <enclosure xmlns=\"http://www.solitude.dk/syndication/enclosures/\">\n                <title>crazy lisa</title>\n                <link type=\"image/png\" length=\"1\">\n                    <url>\n        http://kuler-api.adobe.com/kuler/themeImages/theme_89760.png\n        </url>\n                </link>\n            </enclosure>\n            <description>\n                <img src=\"http://kuler-api.adobe.com/kuler/themeImages/theme_89760.png\" />\n                <br /> Artist: sa<br /> ThemeID: 89760<br /> Posted: 09/24/2007<br /> Tags: crazy but sweet, crazy harmony <br />    Hex: FF0082, BF9F1B, B8495D, 520641, CC0000\n        </description>\n            <kuler:themeItem>\n                <kuler:themeID>89760</kuler:themeID>\n                <kuler:themeTitle>crazy lisa</kuler:themeTitle>\n                <kuler:themeImage>...</kuler:themeImage>\n                <kuler:themeAuthor>...</kuler:themeAuthor>\n                <kuler:themeTags>crazy but sweet, crazy harmony</kuler:themeTags>\n                <kuler:themeRating>3</kuler:themeRating>\n                <kuler:themeDownloadCount>28</kuler:themeDownloadCount>\n                <kuler:themeCreatedAt>20070924</kuler:themeCreatedAt>\n                <kuler:themeEditedAt>20070926</kuler:themeEditedAt>\n                <kuler:themeSwatches>\n                    <kuler:swatch>\n                        <kuler:swatchHexColor>FF0082</kuler:swatchHexColor>\n                        <kuler:swatchColorMode>cmyk</kuler:swatchColorMode>\n                        <kuler:swatchChannel1>0.0</kuler:swatchChannel1>\n                        <kuler:swatchChannel2>1.0</kuler:swatchChannel2>\n                        <kuler:swatchChannel3>0.49</kuler:swatchChannel3>\n                        <kuler:swatchChannel4>0.0</kuler:swatchChannel4>\n                        <kuler:swatchIndex>0</kuler:swatchIndex>\n                    </kuler:swatch>\n                    <kuler:swatch>\n                        <kuler:swatchHexColor>BF9F1B</kuler:swatchHexColor>\n                        <kuler:swatchColorMode>cmyk</kuler:swatchColorMode>\n                        <kuler:swatchChannel1>0.0</kuler:swatchChannel1>\n                        <kuler:swatchChannel2>0.17</kuler:swatchChannel2>\n                        <kuler:swatchChannel3>0.86</kuler:swatchChannel3>\n                        <kuler:swatchChannel4>0.25</kuler:swatchChannel4>\n                        <kuler:swatchIndex>1</kuler:swatchIndex>\n                    </kuler:swatch>\n                    <kuler:swatch>\n                        <kuler:swatchHexColor>B8495D</kuler:swatchHexColor>\n                        <kuler:swatchColorMode>cmyk</kuler:swatchColorMode>\n                        <kuler:swatchChannel1>0.01</kuler:swatchChannel1>\n                        <kuler:swatchChannel2>0.61</kuler:swatchChannel2>\n                        <kuler:swatchChannel3>0.5</kuler:swatchChannel3>\n                        <kuler:swatchChannel4>0.27</kuler:swatchChannel4>\n                        <kuler:swatchIndex>2</kuler:swatchIndex>\n                    </kuler:swatch>\n                    <kuler:swatch>\n                        <kuler:swatchHexColor>520641</kuler:swatchHexColor>\n                        <kuler:swatchColorMode>cmyk</kuler:swatchColorMode>\n                        <kuler:swatchChannel1>0.0</kuler:swatchChannel1>\n                        <kuler:swatchChannel2>0.926829</kuler:swatchChannel2>\n                        <kuler:swatchChannel3>0.207317</kuler:swatchChannel3>\n                        <kuler:swatchChannel4>0.678431</kuler:swatchChannel4>\n                        <kuler:swatchIndex>3</kuler:swatchIndex>\n                    </kuler:swatch>\n                    <kuler:swatch>\n                        <kuler:swatchHexColor>CC0000</kuler:swatchHexColor>\n                        <kuler:swatchColorMode>cmyk</kuler:swatchColorMode>\n                        <kuler:swatchChannel1>0.0</kuler:swatchChannel1>\n                        <kuler:swatchChannel2>1.0</kuler:swatchChannel2>\n                        <kuler:swatchChannel3>1.0</kuler:swatchChannel3>\n                        <kuler:swatchChannel4>0.2</kuler:swatchChannel4>\n                        <kuler:swatchIndex>4</kuler:swatchIndex>\n                    </kuler:swatch>\n                </kuler:themeSwatches>\n            </kuler:themeItem>\n            <pubDate>Mon, 24 Sep 2007 15:24:23 PST</pubDate>\n        </item>\n    </channel>\n</rss>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I believe that this is what you want&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;RewriteEngine on\nRewriteRule ^about-us$ /general_page.php?code=2 [L]\nRewriteRule ^contact$ /general_page.php?code=4 [L]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this will translate &lt;a href=\"http://foo.com/about-us\" rel=\"nofollow\"&gt;http://foo.com/about-us&lt;/a&gt; to &lt;a href=\"http://foo.com/general_page.php?code=2\" rel=\"nofollow\"&gt;http://foo.com/general_page.php?code=2&lt;/a&gt; and &lt;a href=\"http://foo.com/contact\" rel=\"nofollow\"&gt;http://foo.com/contact&lt;/a&gt; to &lt;a href=\"http://foo.com/general_page.php?code=4\" rel=\"nofollow\"&gt;http://foo.com/general_page.php?code=4&lt;/a&gt; &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何将查询字符串重写为名称空间？  [重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "Rewriting a variable in a querystring with .htaccess", "\n                \n                    1 answer\n                \n        ", "\n    ", "\n", "\n\n", "I am using .htacess and i need to rewrite querystring to name-space as the following:", "\n\n", "general_page.php?code=2 To about-us \n\ngeneral_page.php?code=4 To contact\n", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is not related to performance at all. But consider this: you are using two libraries called Foo and Bar:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using namespace foo;\nusing namespace bar;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Everything works fine, you can call &lt;code&gt;Blah()&lt;/code&gt; from Foo and &lt;code&gt;Quux()&lt;/code&gt; from Bar without problems. But one day you upgrade to a new version of Foo 2.0, which now offers a function called &lt;code&gt;Quux()&lt;/code&gt;. Now you've got a conflict: Both Foo 2.0 and Bar import &lt;code&gt;Quux()&lt;/code&gt; into your global namespace. This is going to take some effort to fix, especially if the function parameters happen to match.&lt;/p&gt;\n\n&lt;p&gt;If you had used &lt;code&gt;foo::Blah()&lt;/code&gt; and &lt;code&gt;bar::Quux()&lt;/code&gt;, then the introduction of &lt;code&gt;foo::Quux()&lt;/code&gt; would have been a non-event.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["为什么\"使用名称空间 std\"被认为是不好的做法？", ["\n\n", "I've been told by others that writing ", "using namespace std", " in code is wrong, and that I should use ", "std::cout", " and ", "std::cin", " directly instead.", "\n\n", "Why is ", "using namespace std", " considered a bad practice? Is it inefficient or does it risk declaring ambiguous variables (variables that share the same name as a function in ", "std", " namespace)? Does it impact performance?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In your config file you have created a router alias, &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;routeurfrontend&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which is common for both the plugins, you will need to rename one of them, and correspondingly make changes in the appropriate layout xml. This should work.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["magento在同一页面中显示2个不同名称空间的不同模块", ["\n\n", "I have created two differents modules Test and First associated to different namespaces : Pfay (Test), Train (First).", "\n\n", "For some reason this link ", "http://localhost/magento/index.php/first/index/", " will call the function IndexAction of Test/controllers/indexController.php as well", "\n\n", "Here are the codes :\nfor Test", "\n\n", "<?php\n class Pfay_Test_IndexController extends Mage_Core_Controller_Front_Action\n{\n public function indexAction()\n {\n      $this->loadLayout();\n      $this->renderLayout();\n }\n}\n?>\n", "\n\n", "for First:", "\n\n", "    <?php\n    class Train_First_IndexController extends Mage_Core_Controller_Front_Action\n    {\n         public function indexAction()\n         {\n              $this->loadLayout();\n              $this->renderLayout();\n              // echo \"First Index\";\n         }\n    }\n\n    ?>\n", "\n\n", "config.xml (test)", "\n\n", "<?xml version=\"1.0\"?>\n  <config>\n     <modules>\n        <Pfay_Test>\n          <version>1.0.0</version>\n        </Pfay_Test>\n     </modules>\n     <frontend>\n       <routers>\n          <routeurfrontend>\n              <use>standard</use>\n              <args>\n                 <module>Pfay_Test</module>\n                 <frontName>test</frontName>\n              </args>\n           </routeurfrontend>\n       </routers>\n       <layout>\n               <updates>\n                    <test>\n                         <file>test.xml</file>\n                     </test>\n                </updates>\n        </layout>\n    </frontend>\n    <global>\n     <blocks>\n         <test>\n              <class>Pfay_Test_Block</class>\n         </test>\n      </blocks>\n    </global>\n</config>\n", "\n\n", "config.xml (first)", "\n\n", "<?xml version=\"1.0\"?>\n  <config>\n     <modules>\n        <Train_First>\n          <version>1.0.0</version>\n        </Train_First>\n     </modules>\n     <frontend>\n       <routers>\n          <routeurfrontend>\n              <use>standard</use>\n              <args>\n                 <module>Train_First</module>\n                 <frontName>first</frontName>\n              </args>\n           </routeurfrontend>\n       </routers>\n       <layout>\n           <updates>\n                <first>\n                     <file>first.xml</file>\n                 </first>\n            </updates>\n        </layout>\n    </frontend>\n    <global>\n     <blocks>\n         <first>\n              <class>Train_First_Block</class>\n         </first>\n      </blocks>\n    </global>\n</config>\n", "\n\n", "test.xml", "\n\n", "<layout version=\"0.1.0\">\n     <default>\n          <reference name=\"content\">\n          </reference>\n      </default>\n      <routeurfrontend_index_index>\n           <reference name=\"content\">\n                <block type=\"test/monblock\"  name=\"afficher_monbloc\"\n                          template=\"test/afficher.phtml\" />\n           </reference>\n      </routeurfrontend_index_index>\n      <routeurfrontend_index_mamethode>\n           <reference name=\"content\">\n                <block type=\"test/monblock\"  name=\"afficher_monbloc\"\n                          template=\"test/afficher2.phtml\" />\n           </reference>\n      </routeurfrontend_index_mamethode>\n</layout>\n", "\n\n", "first.xml", "\n\n", "<layout version=\"0.1.0\">\n     <default>\n          <reference name=\"content\">\n          </reference>\n      </default>\n      <routeurfrontend_index_index>\n           <reference name=\"content\">\n                <block type=\"first/firstblock\"  name=\"firstblocindex\"\n                          template=\"first/first_afficher.phtml\" />\n           </reference>\n      </routeurfrontend_index_index>\n      <routeurfrontend_index_mamethode>\n           <reference name=\"content\">\n                <block type=\"first/firstblock\"  name=\"firstblocmamethode\"\n                          template=\"first/first_afficher.phtml\" />\n           </reference>\n      </routeurfrontend_index_mamethode>\n</layout>\n", "\n\n", "And for some reason ", "http://localhost/magento/index.php/test/index/", " does not work anymore (404 not found).  There are probably some conflicts but I can't find where.", "\n\n", "You can see here the problems.", "\n\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This happens due to mount events propagation between namespaces. The propagation type of your mount point is &lt;code&gt;MS_SHARED&lt;/code&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;MS_SHARED&lt;/code&gt;: This mount point shares mount and unmount events with other mount points that are members of its \"peer group\". When a mount point is added or removed under this mount point, this change will propagate to the peer group, so that the mount or unmount will also take place under each of the peer mount points. Propagation also occurs in the reverse direction, so that mount and unmount events on a peer mount will also propagate to this mount point.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Source - &lt;a href=\"https://lwn.net/Articles/689856/\" rel=\"nofollow noreferrer\"&gt;https://lwn.net/Articles/689856/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;shared:N&lt;/code&gt; tag in &lt;code&gt;/proc/self/mountinfo&lt;/code&gt; indicates that the mount is sharing propagation events with a peer group:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ sudo go run namespace-1.go\n[root@localhost]# mount --bind /home/andrii/test /mnt\n# The propagation type is MS_SHARED\n[root@localhost]# grep '/mnt' /proc/self/mountinfo\n264 175 254:0 /home/andrii/test /mnt rw,noatime shared:1 - ext4 \n/dev/mapper/cryptroot rw,data=ordered\n[root@localhost]# exit\n$ ls /mnt\ntest_file\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On most Linux distributions the default propagation type is &lt;code&gt;MS_SHARED&lt;/code&gt; which is set by &lt;code&gt;systemd&lt;/code&gt;. See &lt;code&gt;NOTES&lt;/code&gt; in &lt;code&gt;man 7 mount_namespaces&lt;/code&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Notwithstanding the fact that the default propagation type for new \n  mount points is in many cases MS_PRIVATE, MS_SHARED is typically more \n  useful. For this reason, systemd(1) automatically remounts all mount \n  points as MS_SHARED on system startup. Thus, on most modern systems, \n  the default propagation type is in practice MS_SHARED.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you want a fully isolated namespace, you can make all mount points private this way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ sudo go run namespace-1.go\n[root@localhost]# mount --make-rprivate /\n[root@localhost]# mount --bind /home/andrii/test /mnt\n# The propagation type is MS_PRIVATE now\n[root@localhost]# grep '/mnt' /proc/self/mountinfo\n264 175 254:0 /home/andrii/test /mnt rw,noatime - ext4 \n/dev/mapper/cryptroot rw,data=ordered\n[root@localhost]# exit\n$ ls /mnt\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["golang mount名称空间：进程退出后是否不清除装入的卷？", ["\n\n", "code below, I thought if I starts a process with syscall.CLONE_NEWNS, every mount option inside the namespace will be cleared when the process exits. ", "\n\n", "but it is not? ", "\n\n", "package main\nimport (\n        \"fmt\"\n        \"os\"\n        \"os/exec\"\n        \"syscall\"\n)\n\nvar command string = \"/usr/bin/bash\"\n\nfunc container_command() {\n\n        fmt.Printf(\"starting container command %s\n\", command)\n        cmd := exec.Command(command)\n        cmd.SysProcAttr = &syscall.SysProcAttr{Cloneflags: syscall.CLONE_NEWPID |\n                syscall.CLONE_NEWNS,\n        }\n        cmd.Stdin = os.Stdin\n        cmd.Stdout = os.Stdout\n        cmd.Stderr = os.Stderr\n\n        if err := cmd.Run(); err != nil {\n                fmt.Println(\"error\", err)\n                os.Exit(1)\n        }\n}\n\nfunc main() {\n        fmt.Printf(\"starting current process %d\n\", os.Getpid())\n        container_command()\n        fmt.Printf(\"command ended\n\")\n\n}\n", "\n\n", "run this and mount a directory, this directory still exits after the program exits. ", "\n\n", "[root@localhost go]# go run namespace-1.go\nstarting current process 7558\nstarting container command /usr/bin/bash\n[root@ns-process go]# mount --bind /home /mnt\n[root@ns-process go]# ls /mnt\nvagrant\n[root@ns-process go]# exit\nexit\ncommand ended\n[root@localhost go]# ls /mnt\nvagrant\n[root@localhost go]#\n", "\n\n", "if this is the desired behavior, how is the proc get mounted in container implementations? because if I mount proc inside the namespace, I will get ", "\n\n", "[root@ns-process go]# mount -t proc /proc\n[root@ns-process go]# exit\nexit\ncommand ended\n[root@localhost go]# mount\nmount: failed to read mtab: No such file or directory\n[root@localhost go]#\n", "\n\n", "proc has to be remounted to get it back. ", "\n\n", "update: \ndoing the same in C also gives the same result, I think this should be a intended behavior. ", "\n\n", "#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <stdio.h>\n#include <sched.h>\n#include <signal.h>\n#include <unistd.h>\n\n#define STACK_SIZE (1024 * 1024)\nstatic char container_stack[STACK_SIZE];\n\nchar* const container_args[] = {\n    \"/bin/bash\",\n    NULL\n};\n\nint container_main(void* arg)\n{\n        printf(\"Container [%5d] - inside the container!\n\", getpid());\n            sethostname(\"container\",10);\n            system(\"mount -t proc proc /proc\");\n            execv(container_args[0], container_args);\n            printf(\"Something's wrong!\n\");\n            return 1;\n}\n\nint main()\n{\n    printf(\"start a container!\n\");\n    int container_pid = clone(container_main, container_stack+STACK_SIZE,\n            CLONE_NEWUTS | CLONE_NEWPID | CLONE_NEWNS | SIGCHLD, NULL);\n    waitpid(container_pid, NULL, 0);\n    printf(\"container ended!\n\");\n    return 0;\n}\n", "\n\n", "command output:", "\n\n", "[root@localhost ~]# gcc a.c\n[root@localhost ~]# ./a.out\nstart a container!\nContainer [    1] - inside the container!\n[root@container ~]# ps -ef\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 08:57 pts/0    00:00:00 /bin/bash\nroot        17     1  0 08:57 pts/0    00:00:00 ps -ef\n[root@container ~]# exit\nexit\ncontainer stopped!\n[root@localhost ~]# ps -ef\nError, do this: mount -t proc proc /proc\n[root@localhost ~]# cat a.c\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Finally i found the error, and was very simple!. &lt;/p&gt;\n\n&lt;p&gt;The error was the name of the directories where the classes are.\nI just rename the directory 'Core' instead 'core' .... And thats it.&lt;/p&gt;\n\n&lt;p&gt;Thanks for all!!&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["在PHP中使用名称空间::找不到致命错误Core \\ App", ["\n\n", "\nI made an MVC project in local (WAMP) and it runs perfectly. But when i deploy it in a web server apears this error:", "\n\n", "Fatal error: Class 'Core\\App' not found in home/dmlink/public_html/public/index.php on line 14\n", "\n\n", "This is the code of the line 14:", "\n\n", "13: spl_autoload_register('autoload_classes');\n14: $app = new \\Core\\App;\n15: $app->render();\n", "\n\n", "The structure of the project:", "\n\n", "\n", "app : Here are the controllers, models, and views.", "\n", "core: Here are the core files.", "\n", "public: Since this directory runs the app.", "\n", "\n", "I got the same version in the web server like in localhost:", "\n\n", "\n", "php 5.5", "\n", "apache 2.4", "\n", "\n", "This is the complete code of index:", "\n\n", "define('PROJECT_PATH', dirname(__DIR__));\ndefine('APP_PATH', PROJECT_PATH . '/app');\n\nfunction autoload_classes($class_name){\n    $file = PROJECT_PATH . '/' . str_replace('\\\\', '/', $class_name) . '.php';\n    if (is_file($file)) {\n        include_once $file;\n    }\n}\n\nspl_autoload_register('autoload_classes');\n$app = new \\Core\\App;\n$app->render();\n", "\n\n", "Any idea that is causing this error\nThankS for all by the way.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is what &lt;a href=\"http://php.net/manual/en/language.namespaces.php\" rel=\"nofollow noreferrer\"&gt;Namespaces&lt;/a&gt; are for.&lt;/p&gt;\n\n&lt;p&gt;But honestly, this sounds like an architectural problem. There are two ways you can approach this. If we were to answer your question as posed, you could solve your problem like so:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;database.php&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Database{\n    // ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;t/database.php&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;namespace T;\nclass Database{\n    // ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;index.php&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once('database.php');\nrequire_once('t/database.php');\n\n$db = new T\\Database();\n$globalDb = new Database();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But judging by your naming conventions, it appears as if you have two separate classes that are intended to interact with either the same - or similar - database instances.&lt;/p&gt;\n\n&lt;p&gt;I'm making some assumptions here, but the other way you can set up your logic is to condense your code down to a single Database class and operate on multiple connections over multiple instances.&lt;/p&gt;\n\n&lt;p&gt;Consider using dependency injection to manage your connections in a single unified class structure, especially if you're using the same type of RDBMS flavor across all connections.&lt;/p&gt;\n\n&lt;p&gt;Consider something like the following naive example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Database{\n    private $conn;\n    public function __construct(PDO $conn){\n        $this-&amp;gt;conn = $conn;\n    }\n    public function select(...$args) { // Select Logic goes here }\n    public function insert(...$args) { // Insert Logic goes here }\n    public function update(...$args) { // Update Logic goes here }\n    public function delete(...$args) { // Delete Logic goes here }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It would be possible to operate over multiple connections at once by simply injecting different PDO instances into the same class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once('database.php');\n$conn1 = new PDO('mysql:host=localhost;dbname=test1', $user, $pass);\n$conn2 = new PDO('mysql:host=localhost;dbname=test2', $user, $pass);\n$db1 = new Database($conn1);\n$db2 = new Database($conn2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So while the first example may address your question directly, you may want to rethink your architecture if I'm on the right track with my second example.&lt;/p&gt;\n\n&lt;p&gt;And to echo everyone else, you should seriously consider using a proper Autoloader. Look into &lt;a href=\"https://getcomposer.org/\" rel=\"nofollow noreferrer\"&gt;Composer&lt;/a&gt; and &lt;a href=\"https://getcomposer.org/doc/01-basic-usage.md#autoloading\" rel=\"nofollow noreferrer\"&gt;Autoloading&lt;/a&gt; - specifically PSR-4.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["初始化具有相同名称的php类", ["\n\n", "If we have two or more classes with the same name, but in different folders, how would one differentiate between them during initialization?", "\n\n", "require_once('database.php');\nrequire_once('t/database.php');\n\n$db = new Database(); // I want this to initialize the one in t/database.php\n$globalDb = new Database(); // I want this to initialize database.php\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I assume you're passing around encoded keys, rather than just their IDs? If you create the key using &lt;code&gt;datastore.NewKey&lt;/code&gt; then the context passed to that will set the namespace of the key (unless there's also a parent, in which case &lt;em&gt;its&lt;/em&gt; namespace will be used). &lt;/p&gt;\n\n&lt;p&gt;With respect to the intention, this behaviour is equivalent to the python API - a key created from an urlsafe string can be fetched while a different namespace is set on the &lt;code&gt;namespace_mananger&lt;/code&gt;, but the currently-set namespace is used if you create a key by specifying just the kind and id.&lt;/p&gt;\n\n&lt;p&gt;Having a getter for the namespace would be good though, so you could at least verify after unserializing...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["AppEngine的datastore.Get（）是否不验证所请求键的名称空间？", ["\n\n", "I'm using namespaces with the datastore in go-appengine, roughly as follows:", "\n\n", "func getThing() *Thing {\n  nctx := appengine.Namespace(ctx, \"whatever\")\n\n  thing := Thing{}\n  key, err := datastore.Get(nctx, key, &thing)\n  if err != nil {\n    return nil, err\n  }\n  return thing, nil\n}\n", "\n\n", "Simple enough, right? Unfortunately, if it turns out that if nctx's namespace doesn't match the key's, it happily fetches the object anyway. And AFAICT, there's no way to manually get at the key's 'namespace' field to verify it manually. This matters for our app, because we have keys coming from a web client, which can in some edge cases be associated with the wrong namespace.", "\n\n", "OTOH, if I do a ", "query", " using ", "Thing", "'s key as an ancestor, the datastore (appropriately) returns an error because of the namespace mismatch between the ancestor's namespace and that of the context (of the form ", "query namespace is 'bar' but ancestor namespace is 'foo'", ").", "\n\n", "Am I missing something about the intended constraints on datastore fetches/queries and namespaces, or does this just sound like a bug?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; Turns out I was originally wrong, it is possible to get your example working with PSR-4! You just need to specify an array of directories for namespaces that can be loaded from different places.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Easy solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    \"autoload\": {\n        \"psr-4\": {\n            \"ACME\\\\App\\\\Site\\\\\": [\"app/\", \"src/ACME/app\"],\n            \"ACME\\\\App\\\\\": \"src/ACME/app/\"\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Personally, I would rather name my namespaces more explicitly, see below.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Original Answer&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The composer PSR-4 loader does not fall back when trying to load files that do not exist. It just fails immediately. Its flow looks like:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;\\ACME\\App\\Site\\View&lt;/code&gt; is not loaded&lt;/li&gt;\n&lt;li&gt;Scan PSR-4 entries for matching namespaces&lt;/li&gt;\n&lt;li&gt;Class name matches the namespace &lt;code&gt;\\ACME\\App\\Site&lt;/code&gt; (your first PSR-4 entry).&lt;/li&gt;\n&lt;li&gt;Load file &lt;code&gt;app/View.php&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;File does not exist. Error.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;It never goes back to step 3 and tries the next namespace.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;So how do I fix it?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It looks like you want to separate your reusable library code from your site code. If that's the case, I would use separate namespaces. For example, use the &lt;code&gt;ACME\\Site&lt;/code&gt; namespace to hold your reusable code, and use &lt;code&gt;ACME\\MySiteName&lt;/code&gt; for your site-specific code. Then there will be no ambiguity, and composer will have no trouble loading your classes.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;But I don't want to rearrange my namespaces!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Ok, that's fine, but you'll have to use a hack to get around your problem. Composer has a &lt;code&gt;classmap&lt;/code&gt; loader, and you'll have to use that instead of the preferred PSR-4 loader.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    \"autoload\": {\n        \"classmap\": [\"app/\", \"src/\"]\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["PSR-4：自动加载器（编写器）和扩展名称空间确保回退php", ["\n\n", "I am having a problem with my namespace fallbacks and using PSR-4 loader in Composer.", "\n\n", "What I am trying to do is this:", "\n\n", "\n", "Have a core which can overwritten / extended.", "\n", "The core is based off an interface.", "\n", "\n", "The directory structure is like so:", "\n\n", "site/app/View/Example.php\nsite/src/ACME/app/View/Example.php\nsite/src/ACME/app/Interface/View.php\n", "\n\n", "I am not set on this configuration so if you have a better suggestion then go for it.", "\n\n", "My composer json is like so for psr-4:", "\n\n", " \"autoload\": {\n    \"psr-4\": {\n         \"ACME\\\\App\\\\Site\\\\\" : \"app/\",\n         \"ACME\\\\App\\\\\" : \"src/AMCE/app/\"\n    }\n}\n", "\n\n", "I thought this would make ACME\\App\\Site\\View fallback to ACME\\App\\View if the site one was not found (Note I haven't done the interface part yet...). ", "\n\n", "My code for site/app/View/Example.php is like so:", "\n\n", "namespace ACME\\App\\Site\\View;\n\nclass ViewExample extends View {\n", "\n\n", "Which works, when I have site/app/View/View.php as well. That looks like:", "\n\n", "namespace ACME\\App\\Site\\View;\n\nclass View extends \\ACME\\App\\View\\View {\n", "\n\n", "The site/src/app/View/View.php look like this:", "\n\n", "namespace ACME\\APP\\View;\n\nclass View {\n", "\n\n", "This one should use the interface (I haven't tried yet).", "\n\n", "So what  I really want to do is make it so I don't have to have site/app/View/View.php, and I don't have to have site/app/View/Example.php - it can use site/src/ACME/app/View/Example.php.", "\n\n", "Sorry I'm new to namespaces so I may not of phrased it very well. ", "\n\n", "What I am getting at is I thought ACME\\App\\Site would fallback to ACME\\App - it doesn't? Or I am doing it wrong? At the moment it needs all the files in place.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Check this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$xml = &amp;lt;&amp;lt;&amp;lt;XML\n&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;\n&amp;lt;SOAP-ENV:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n                   xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"\n                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&amp;gt;\n    &amp;lt;SOAP-ENV:Body&amp;gt;\n        &amp;lt;ns:ExampleInterface_Output xmlns:ns=\"http://example.com/interfaces\"&amp;gt;\n            &amp;lt;ns:TagOne&amp;gt;Foo&amp;lt;/ns:TagOne&amp;gt;\n            &amp;lt;ns:TagTwo&amp;gt;Bar&amp;lt;/ns:TagTwo&amp;gt;\n        &amp;lt;/ns:ExampleInterface_Output&amp;gt;\n    &amp;lt;/SOAP-ENV:Body&amp;gt;\n&amp;lt;/SOAP-ENV:Envelope&amp;gt;\nXML;\n\n$xse = new SimpleXMLElement($xml);\n$exampleInterface = $xse\n    -&amp;gt;children('SOAP-ENV', true)\n    -&amp;gt;children('ns', true);\n\nforeach ($exampleInterface-&amp;gt;children('ns', true) as $key =&amp;gt; $value) {\n    //Do your stuff\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何使用PHP的simplexml_load_string获取XML标记（包含名称空间）的值？", ["\n\n", "How do I get the value of \"TagOne\" (i.e. foo) and TagTwo (i.e. bar) from the XML below using\n", "simplexml_load_string", "? I'm stumped by the namespace called \"ns\" in the tag.", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", "\n\n", "\n\n", "<SOAP-ENV:Body>\n\n    <ns:ExampleInterface_Output xmlns:ns=\"http://example.com/interfaces\">\n        <ns:TagOne>Foo</ns:TagOne>\n        <ns:TagTwo>Bar</ns:TagTwo>\n    </ns:ExampleInterface_Output>\n\n</SOAP-ENV:Body>\n", "\n\n", "\n\n", "Thanks very much for your kind help!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For reason I do not know, there is two definition for &lt;code&gt;function serialize()&lt;/code&gt; with same body in two different file. One in &lt;code&gt;class.soap_fault.php&lt;/code&gt; and another in &lt;code&gt;nusoap.php&lt;/code&gt; and you need to change the method body in the second one (&lt;code&gt;nusoap.php&lt;/code&gt;). I do not know is there any condition you need to change other one or not.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;For other ones who may reach this post I add some problems you may encounter and their solve:&lt;/p&gt;\n\n&lt;p&gt;Exception : &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Encodes were different (windows uses 'utf-8' and this uses\n  'ISO-8859-1')&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Reason: Encoding type are different in server and client.&lt;/p&gt;\n\n&lt;p&gt;Solve: In &lt;code&gt;nusoap.php&lt;/code&gt; file changing var &lt;code&gt;$soap_defencoding = 'ISO-8859-1';&lt;/code&gt; to &lt;code&gt;var $soap_defencoding = 'UTF-8';&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;See: this &lt;a href=\"https://www.codeproject.com/Questions/304429/get-UTF-8-char-in-WSDL-NuSoap\" rel=\"nofollow noreferrer\"&gt;source&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Exception : &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Server returned an invalid SOAP Fault. Please see InnerException for\n  more details&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Inner: &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Element ‘faultstring’ with namespace name ” was not found. Line 6,\n  position 126&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Reason: Difference in order of fault properties&lt;/p&gt;\n\n&lt;p&gt;Solve: in &lt;code&gt;nusoap.php&lt;/code&gt; change &lt;code&gt;function serialize()&lt;/code&gt; to following: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function serialize() {\n      $ns_string = '';\n      foreach( $this-&amp;gt;namespaces as $k =&amp;gt; $v ) {\n        $ns_string .= \"\n  xmlns:$k=\\\"$v\\\"\";\n      }\n      $return_msg =\n        '&amp;lt;?xml version=\"1.0\" encoding=\"' . $this-&amp;gt;soap_defencoding . '\"?&amp;gt;' .\n        '&amp;lt;SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"' . $ns_string . \"&amp;gt;\n\" .\n          '&amp;lt;SOAP-ENV:Body&amp;gt;' .\n            '&amp;lt;SOAP-ENV:Fault&amp;gt;' .\n              $this-&amp;gt;serialize_val( $this-&amp;gt;faultcode,   'faultcode'   ) .\n              $this-&amp;gt;serialize_val( $this-&amp;gt;faultstring, 'faultstring' ) .\n              $this-&amp;gt;serialize_val( $this-&amp;gt;faultactor,  'faultactor'  ) .\n              $this-&amp;gt;serialize_val( $this-&amp;gt;faultdetail, 'detail'      ) .\n            '&amp;lt;/SOAP-ENV:Fault&amp;gt;' .\n          '&amp;lt;/SOAP-ENV:Body&amp;gt;' .\n        '&amp;lt;/SOAP-ENV:Envelope&amp;gt;';\n      return $return_msg;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See: this &lt;a href=\"https://sourceforge.net/p/nusoap/discussion/193579/thread/9a5aff36/\" rel=\"nofollow noreferrer\"&gt;source&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Exception:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;{\"error in msg parsing:\nxml was empty, didn't parse!\"}&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Reason: The following php function is not valid in current version:&lt;/p&gt;\n\n&lt;p&gt;solve: use following code for php version 5.6.0 to before 7.0.0&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$POST_DATA = isset($GLOBALS['HTTP_RAW_POST_DATA']) ? $GLOBALS['HTTP_RAW_POST_DATA'] : '';\n$server-&amp;gt;service($POST_DATA); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and for version 7.0.0 and later use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@$server-&amp;gt;service(file_get_contents(\"php://input\"));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See: This &lt;a href=\"https://stackoverflow.com/questions/40038144/nusoap-soap-env-xml-was-empty-didnt-parse-message\"&gt;source&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Exception:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;{\"method ''('&lt;em&gt;function name here&lt;/em&gt;'('&lt;em&gt;function name here&lt;/em&gt;') not\n  defined in service('' '')\"}&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;or simply:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;method '' not defined in service.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Reason: When using C# to connecting to the &lt;code&gt;nusoap&lt;/code&gt; web server. It is disable to find methods defined in other files/classes.&lt;/p&gt;\n\n&lt;p&gt;Solve: define all method in the same file as you write web service&lt;/p&gt;\n\n&lt;p&gt;See: This &lt;a href=\"https://www.youtube.com/watch?v=MucfykNebGE\" rel=\"nofollow noreferrer\"&gt;source&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Note: If you know a way to overcome this problem and let define methods in other files/classes (= make cleaner code) please comment it.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Exception: &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;{\"Error in deserializing body of reply message for operation '&lt;em&gt;method\n  name&lt;/em&gt;'.\"}&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Reason: May have different reasons but in my case occure when try to use arrays as property for returned structure. C# will see array of string as string.&lt;/p&gt;\n\n&lt;p&gt;Solve: I solved it by using basic types.&lt;/p&gt;\n\n&lt;p&gt;Note: if you know better way please comment it&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["错误{“找不到名称空间名称''的元素'faultstring'。 第6行，第126位。“}尝试从C＃连接nusoap Web服务时", ["\n\n", "I try to create a nusoap web service (I use xampp and .net beans) and connect to it using a C# app (use visual studio). but I encounter this error:", "\n\n", "\n  ", "{\"Server returned an invalid SOAP Fault.  Please see InnerException for more details.\"}", "\n", "\n\n", "the inner error is:", "\n\n", "\n  ", "{\"Element 'faultstring' with namespace name '' was not found. Line 6, position 126.\"}", "\n", "\n\n", "As ", "this source", " suggested I changed properties order for ", "function serialize()", " in ", "class.soap_fault.php", " file but it still gives the same error. ", "\n\n", "I tried restarting the computer so I now it is not a catch problem.", "\n\n", "Also the only other change I made in nusoap library was changing ", "var $soap_defencoding = 'ISO-8859-1';", " to ", "var $soap_defencoding = 'UTF-8';", " in ", "nusoap.php", " file to solve encoding problem.", "\n\n", "in C# I have the following code:", "\n\n", "SR1.demoPortTypeClient client = new SR1.demoPortTypeClient();\nvar result = client.gettext(\"hello\");\nMessageBox.Show(\"*\" + result + \"*\");\n", "\n\n", "and in php:", "\n\n", "<?php\nrequire 'lib/nusoap.php';\n$server=new nusoap_server();\n$server->configureWSDL(\"demo\");\n$namespace = \"demo\";\n$server->wsdl->schemaTargetNamespace = $namespace;\n$server->register(\n        \"gettext\",//name of function\n        array(\"txt\"=>'xsd:string'),//inputs\n        array(\"return\"=>'xsd:string'),//outputs\n        $namespace,// namespace\n        false,// soapaction (use default)\n        'rpc',// style: rpc or document\n        'encoded',// use: encoded or literal\n        'Return same text'// description for method\n        );\n\n$HTTP_RAW_POST_DATA = isset($HTTP_RAW_POST_DATA) ? $HTTP_RAW_POST_DATA : '';\n$server->service($HTTP_RAW_POST_DATA);\n", "\n\n", "where ", "gettext", " function is:", "\n\n", "<?php\nfunction gettext($txt)\n{\n    return $txt;\n}\n", "\n\n", "current ", "serialize()", " function is:", "\n\n", "function serialize(){\n        $ns_string = '';\n        foreach($this->namespaces as $k => $v){\n            $ns_string .= \"\n  xmlns:$k=\\\"$v\\\"\";\n        }\n        $return_msg =\n            '<?xml version=\"1.0\" encoding=\"'.$this->soap_defencoding.'\"?>'.\n            '<SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"'.$ns_string.\">\n\".\n                '<SOAP-ENV:Body>'.\n                '<SOAP-ENV:Fault>'.\n                    $this->serialize_val( $this->faultcode,   'faultcode'   ) .\n                            $this->serialize_val( $this->faultstring, 'faultstring' ) .\n                            $this->serialize_val( $this->faultactor,  'faultactor'  ) .\n                            $this->serialize_val( $this->faultdetail, 'detail'      ) .\n                '</SOAP-ENV:Fault>'.\n                '</SOAP-ENV:Body>'.\n            '</SOAP-ENV:Envelope>';\n        return $return_msg;\n    }\n", "\n\n", "I expected changing order of properties solves the problem, however I still receive the same error. I searched a lot but couldn't find any other solve for the error.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;using类名会报错&amp;#xff0c;你那里没出错&amp;#xff1f;类名要使用using static&amp;#xff0c;这样可以不用加前缀&amp;#xff0c;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~&lt;/p&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/657967822626115.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/589327822626187.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["在名称空间前引用了Console类，为什么后面在用方法的时候还要加Console.?", ["Convert也一样", "\n"]], "Tag": "程序设计"}
{"Answer": "a.Click += new EventHandler((se, ar) =&gt; { b.方法(参数...); });", "Konwledge_Point": "名字空间", "Question": ["C#同一个名称空间里，两个类，A类中有个单击事件，B类有个方法", ["怎么实现A中一单击就B中方法就执行？？？？？", "\n谢谢！！！！！！！"]], "Tag": "程序设计"}
{"Answer": "#include &lt;iostream&gt;\r\n    namespace myspace1\r\n    {\r\n    \tint bj=15;\r\n    }\r\n    namespace myspace2\r\n    {\r\n    \tint i=20;\r\n    }\r\n    #define paster( n ) using namespace myspace##n\r\n    \r\n    int main()\r\n    {\r\n    \t\tpaster( 1 );\r\n    \t\tstd::cout&lt;&lt;bj&lt;&lt;std::endl;\r\n    \treturn 0;\r\n    }\r\n\r\n我在VS2010上可以运行啊...\r\n\r\n但是不知道你为什么你要以这种方式用命名空间...很容易混淆的...然后就空间污染了...", "Konwledge_Point": "名字空间", "Question": ["在想能不能把c++命名空间的名称开成数组型", ["最近比较困扰一个问题 就是在能不能把命名空间的名字开成数组型", "\n比如说我定义了两个命名空间  namespace solar0 和 namespace solar1", "\n然后在一个函数中使用 比如说在函数 void system(int k) 中选择性使用", "\n\n", "比如 ", "\n\n", "void system(int k)\n{\n    if(k==0) using namespace solar0;\n    if(k==1) using namespace solar1;\n    .........\n}\n", "\n\n", "但是我一旦用if 编译器就给我报错 说下面的对象未定义（下面的对象我在命名空间里定义了）", "\n然后我就想啊，能不能把solar开成数组 变成solar[2] 就是不会搞", "\n比如", "\n\n", "void system(int k)\n{\n    using namespace solar[k];\n    .........\n}\n", "\n\n", "再一次失败..", "\n\n", "而且我也不知道 这个名字solar是一个什么类型，指针也没法指", "\n有考虑过用 #define solar(k) solar##k  结果编译的时候变成solark了 ", "\n不是想要的:当k=0时候出现solar0", "\n于是就纠结了....", "\n各位大侠们求帮助啊.... 小弟在读高三.."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以利用汇编去解释问题&lt;/p&gt;\n&lt;p&gt;这里举一个例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;int a&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;对应的汇编&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-attribute\"&gt;movl&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;(%esp)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;上面的汇编语句不唯一&amp;#xff0c;但意思都是把数值 1 存到内存中的某一个位置&amp;#xff0c;在这里是28(%esp)&lt;/p&gt;\n&lt;p&gt;程序真正运行的时候其实已经没有 “变量a” 这个概念了&lt;/p&gt;\n&lt;p&gt;都是对内存、寄存器中的数据进行操作&lt;/p&gt;\n&lt;p&gt;&amp;#34;变量a&amp;#34; 的名字在编译之后就不存在了&amp;#xff0c;也没有存在的必要&lt;/p&gt;\n&lt;p&gt;程序之后会怎么处理 “变量a” 对应的数据&amp;#xff0c;在代码编译之后就已经写死了&lt;/p&gt;\n&lt;p&gt;之所以代码中使用 “变量a” 只是为方便我们人类编程&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["C/c++语言中的整型如何占据空间？", ["问题：", "int a；在内存中如何占据空间的?", "\n", "个人想法：", "int a;就是创建了一个名为a的整型变量，在内存中占4个字节，那么这4个字节仅仅是用来储存a的值还是把a这个名字也储存了？如果不是，那么a这个名字就是在别的内存中，那么a这个名字占多少字节的内存，又储存在哪？另外，&a是取的a这个名字的地址，还是a的值的地址呢？学了python的变量克隆，感觉一切都像c中的指针了。", "\n", "望知情人help"]], "Tag": "程序设计"}
{"Answer": "看不出什么大问题。只是小问题好多，哈。\r\n\r\nsetAutoCommit是指是否自动提交，不是开启事务。\r\n你的SQL文貌似都不能回滚的，应该不需要动这个。\r\n\r\n另外，这个处理不是\r\n[quote]将oracle一个表空间的数据同步到另一个表空间的数据[/quote]\r\n应该是用户（或者schema），而不是表空间。\r\n表空间是指物理意义上的数据文件。\r\n\r\n-------------------\r\n\r\nClass.forName(\"oracle.jdbc.driver.OracleDriver\"); \r\n调用一遍就好了。\r\n\r\n拼SQL文同时直接做批处理就好了，为什么又循环一次。\r\n任意个connection建立失败时，在catch块里直接return掉，就可以省去那个最大的\r\n\r\nif(\"\".equals(msg)){  \r\n...\r\n}\r\n\r\n嵌套", "Konwledge_Point": "名字空间", "Question": ["java将oracle一个表空间的数据同步到另一个表空间的数据，来看看有没有问题", ["代码如下：", "\n[code=\"java\"]", "\nimport java.sql.Connection;", "\nimport java.sql.DriverManager;", "\nimport java.sql.ResultSet;", "\nimport java.sql.SQLException;", "\nimport java.sql.Statement;", "\nimport java.util.ArrayList;", "\nimport java.util.Date;", "\nimport java.util.List;", "\n\n", "public class Bak {", "\n\n", "public static String shengchanku = \"aaa\";//生产库登录名\npublic static String shengchanku_pw = \"1\";//生产库密码\npublic static String shengchanku_serviceName = \"127.0.0.1\";//生产库服务名\n\npublic static String ceshiku = \"aaatest\";//测试库登录名\npublic static String ceshiku_pw = \"1\";//测试库密码\npublic static String ceshiku_serviceName = \"127.0.0.1\";//测试库服务名\n\n/**\n * @param args\n * @throws SQLException\n */\npublic static void main(String[] args){\n    Date d = new Date();\n    long start = d.getTime();\n    String msg = \"\";\n    Connection conn = null;\n    try {\n        conn = getConnection();\n    } catch (Exception e1) {\n        msg = \"获取生产库链接失败\";\n    }\n    Connection connTest = null;\n    try {\n        connTest = getTestConnection();\n    } catch (Exception e1) {\n        msg = \"获取测试库链接失败\";\n    }\n    if(\"\".equals(msg)){\n        try {\n            //开启事务\n            conn.setAutoCommit(false);\n\n            //查询出生产库所有表的名称\n            List<String> list_table_names = new ArrayList<String>();\n            Statement stmt = conn.createStatement();\n            ResultSet rs = stmt.executeQuery(\"select table_name from user_tables\");\n            while(rs.next()){\n                list_table_names.add(rs.getString(1));\n            }\n            rs.close();\n            stmt.close();\n\n            //查询测试库所有表的名称\n            List<String> list_table_names_test = new ArrayList<String>();\n            stmt = connTest.createStatement();\n            rs = stmt.executeQuery(\"select table_name from user_tables\");\n            while(rs.next()){\n                list_table_names_test.add(rs.getString(1));\n            }\n\n            //拼接往测试库每个表插数据的sql\n            String table_name = \"\";\n            List<String> sql_create = new ArrayList<String>();\n            for(int i =0;i<list_table_names.size();i++){\n                table_name = list_table_names.get(i);\n                sql_create.add(\"create table \"+ceshiku+\".\"+table_name+\" AS SELECT * FROM \"+shengchanku+\".\"+table_name+\"\");\n            }\n\n            //拼接删除测试库表的sql\n            List<String> sql_drop = new ArrayList<String>();\n            for(int i =0;i<list_table_names_test.size();i++){\n                table_name = list_table_names_test.get(i);\n                sql_drop.add(\"drop table \"+ceshiku+\".\" + table_name);\n            }\n\n            //删除测试库的数据\n            stmt = conn.createStatement();\n            for(int i = 0 ;i<sql_drop.size();i++){\n                stmt.addBatch(sql_drop.get(i));\n            }\n\n            //执行删除sql\n            int[] result = stmt.executeBatch();\n            System.out.println(\"执行删除表：\" + result.length);\n            stmt.close();\n\n            //重新创建测试库的数据\n            stmt = connTest.createStatement();\n            for(int i = 0 ;i<sql_create.size();i++){\n                stmt.addBatch(sql_create.get(i));\n            }\n\n            //执行创建sql\n            result = stmt.executeBatch();\n            System.out.println(\"执行创建表：\" + result.length);\n            stmt.close();\n\n            //提交事务\n            conn.setAutoCommit(true);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }finally{\n            try {\n                conn.close();\n                connTest.close();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }\n    }else{\n        System.out.println(msg);\n    }\n\n    d = new Date();\n    long end = d.getTime();\n\n    System.out.println(\"执行时间：\" + (end-start) + \"毫秒\");\n}\n\n//获取生产库链接\npublic static Connection getConnection() throws Exception{\n    Connection ct = null;\n    Class.forName(\"oracle.jdbc.driver.OracleDriver\");\n    ct = DriverManager.getConnection(\"jdbc:oracle:thin:\"+shengchanku+\"/\"+shengchanku_pw+\"@\"+shengchanku_serviceName+\":1521:orcl\");\n    return ct;\n}\n\n//获取测试库链接\npublic static Connection getTestConnection() throws Exception{\n    Connection ct = null;\n    Class.forName(\"oracle.jdbc.driver.OracleDriver\");\n    ct = DriverManager.getConnection(\"jdbc:oracle:thin:\"+ceshiku+\"/\"+ceshiku_pw+\"@\"+ceshiku_serviceName+\":1521:orcl\");\n    return ct;\n}\n", "\n\n", "}", "\n\n", "[/code]", "\n\n", "大伙来看看这样写有没有什么问题，性能如何，我执行时间大概10秒多，数据量不是很大，不过有个附件表，表空间数据全部导出来大概有300多M"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;php7的语法&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["php 函数参数前面加命名空间名称 是什么写法", ["\n", "use Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nclass IndexController implements RequestHandlerInterface\n{\n    public function handle(ServerRequestInterface $request): ResponseInterface\n    {\n        $route = $request->getUri()->getPath();\n\n        if (Str::startsWith($route, '/admin')) {\n            $file = 'admin.html';\n        } else {\n            $isMobile = $this->isMobile($request->getServerParams());\n            $file = $isMobile ? 'index.html' : 'pc.html';\n\n            if (Arr::has($request->getQueryParams(), 'from')) {\n                $file = 'index.html';\n            }\n\n            if (!$isMobile && Str::startsWith($route, '/pages')) {\n                $file = Str::replaceFirst(\"/pages\", \"/pc-pages\", $route) . \"/index.html\";\n            }\n        }\n\n        return DiscuzResponseFactory::FileResponse(\n            public_path($file)\n        );\n    }\n}", "\n\n", "handle这个函数, 参数$request前面加了一串ServerRequestInterface是什么作用？ 返回又定义了:ResponseInterface又有什么用。 是新语法吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个类没有加入编译&amp;#xff0c;命名空间不生效。&lt;/p&gt;\n&lt;p&gt;解决方法&amp;#xff1a;&lt;br /&gt;打开项目工程下的“welcome.csproj.user”文件&amp;#xff0c;“welcome”是项目名称。&lt;br /&gt;找到“”标签&amp;#xff0c;将找不到类型名称或命名空间的类对应的文件添加进去。&lt;/p&gt;\n&lt;p&gt;如 Pg pg &amp;#61; new Pg()&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["遇到这个问题，未能找到类型或命名空间名称“scsb”(是否缺少 using 指令或程序集引用?)，请问怎么处理呢；", ["遇到这个问题，未能找到类型或命名空间名称“scsb”(是否缺少 using 指令或程序集引用?)，请问怎么处理呢；", "\n", "private void Form1_Load(object sender, EventArgs e)", "        {", "            SqlConnectionStringBuilder scsb = new SqlConnectionStringBuilder();", "\n", "        scsb.DataSource = ", "\"192.168.100.247\"", ";\n        scsb.Initial catalog = ", "\"WHmesinfo\"", ";\n        scsb.UserID = ", "\"sa\"", ";\n        scsb.Password = ", "\"whyy@2021\"", ";\n        \n        SqlConnection sqlConnection1 = ", "new", " ", "SqlConnection(", "scsb", ".ToString()", ");", "//创建数据库连接", "\n       \n        sqlConnection1.", "Open()", ";\n        \n        SqlDataAdapter sda = ", "new", " ", "SqlDataAdapter()", ";\n\n        DataSet ds = ", "new", " ", "DataSet()", ";\n\n        DataTable dt = ", "new", " ", "DataTable()", ";\n\n        ", "try", "\n        {\n            sqlConnection1.", "Open()", ";\n\n            MessageBox.", "Show(", "\"数据库连接成功！\"", ")", ";\n        }\n        catch (Exception ex)\n        {\n            MessageBox.", "Show(", "\"数据库连接失败\"", ")", ";\n            return;\n        }\n        ", "//声明一个SQLcommand对象", "\n\n        SqlCommand sqlcmd = ", "new", " ", "SqlCommand(", "\"SELECT * FROM b_EquipmentInfo\"", ", ", "sqlConnection1", ")", ";\n\n     \n        ", "//执行查询语句", "\n        sda.SelectCommand = sqlcmd;\n\n   \n        ", "//调用DataAdapter对象的Fill（）方法来填充数据集", "\n        sda.", "Fill(", "ds", ", ", "\"b_EquipmentInfo\"", ")", ";\n\n        \n        ", "//绑定combobox的数据集", "\n        comboBox1.DataSource = ds.Tables", "[\"", "b_EquipmentInfo", "\"]", ";\n\n        ", "//选定combobox显示的成员及将Name这一列显示在combobox中", "\n        comboBox1.DisplayMember = ", "\"Equipmentname\"", ";\n\n        ", "//combobox的实际取值", "\n        comboBox1.ValueMember = ", "\"Equipmentcode\"", ";\n    }  \n\n}\n"]], "Tag": "程序设计"}
{"Answer": "直接 customers就可以了。", "Konwledge_Point": "名字空间", "Question": ["类名实例化失败但是用命名空间名字成功了为什么", []], "Tag": "程序设计"}
{"Answer": "项目-属性，里面可以修改默认的命名空间的名字。修改了，再创建cs就是新的名称了。", "Konwledge_Point": "名字空间", "Question": ["WPF修改namespace后的名称", ["请教各位大神，我用WPF创建了一个工程名为Communicate，在MainWindow程序页，namespace后面的名称是Communicate，我有添加了一个子类connect.cs，添加后，在connect.cs页，namespace后面的名称默认的也是Communicate，我要怎么才能只改变connect.cs页namespace后面的名称"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你 struct Hero1 hero_3 &amp;#61; { 1,&amp;#34;的马戏呀&amp;#34;, &amp;#34;青钢影&amp;#34;, 1, .mp&amp;#61;100 , .hp&amp;#61;500 };&lt;br /&gt;是直接定义一个结构体变量,是自动为这个变量分配内存空间,不需要malloc&lt;br /&gt;只有定义结构体指针类型的变量 struct Hero1 *p; 才需要用malloc申请内存空间&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "名字空间", "Question": ["C语言结构体问题：1.初始化结构体里的指针参数时为什么不需要malloc申请内存空间？2.free()掉结构体中某一个指针参数之后，为什么这个结构体里的其他参数也无法访问了？", ["\n", "struct", " ", "Hero1", "\n{\n    ", "int", " id;\n    ", "char", "* name;\n    ", "char", "* skill;\n    ", "int", " level;\n    ", "int", " hp;\n    ", "int", " mp;\n};\n\n", "void", " ", "main", "()", "\n", "{\n    ", "struct", " ", "Hero1", " hero_3 = { ", "1", ",", "\"的马戏呀\"", ", ", "\"青钢影\"", ", ", "1", ", .mp=", "100", " , .hp=", "500", " };\n\n    hero_3.name=(", "char", "*)", "malloc", "(", "50", ");", "//问：既然修改名称之前需要对指针指向的区域分配内存空间，那为什么在前面大括号里赋初值的时候，不需要开辟内存空间呢？", "\n\n    ", "printf", "(", "\"修改英雄的名称为：\"", ");\n    ", "scanf", "(", "\"%s\"", ",hero_3.name);\n\n    ", "printf", "(", "\"%d  %s  %s  %d  %d  %d\\n\"", ",hero_3.id,hero_3.name,hero_3.skill,hero_3.level,hero_3.hp,hero_3.mp);\n\n    ", "free", "(hero_3.name);\n\n    ", "//printf(\"%d\\n\",hero_3.id);问：free结构体中某一个指针之后，居然其他的参数也没有办法访问了。非常奇怪。", "\n\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "按照C++标准的说明应该是使用std来访问c的函数，只不过编译器对这个规则进行了忽略，建议还是使用std来访问，以便向后兼容", "Konwledge_Point": "名字空间", "Question": ["C++与C的头文件，匿名空间与全局作用域", ["1.C++与C的头文件关系是什么", "\n\n", "比如", "stdio.h", " 与", "cstdio", "，我看网上说是将stdio.h中的函数放入了名称空间std中，那么在使用函数如", "printf", "时应该加上", "std::printf", "才对啊，但是实际上", "\n\n", "#include<cstdio>\nint main(void)\n{\n        printf(\"csdn\");\n        return 0;\n}\n", "\n\n", "与", "\n\n", " #include<cstdio>\nint main(void)\n{\n        ::printf(\"csdn\");\n        return 0;\n}\n", "\n\n", "与", "\n\n", " #include<cstdio>\nint main(void)\n{\n        std::printf(\"csdn\");\n        return 0;\n}\n", "\n\n", "都可以通过编译", "，我要问的就是什么原因？哪一种才是标准的写法？", "\n\n", "2.C++的匿名空间和全局作用域是什么关系", "\n\n", "一开始我认为在C++中，匿名空间就是一个全局作用域，比如：在外部定义的一个变量他的作用域自然是全局的，我认为这个变量就是定义在匿名空间之中的。", "这是不是正确的？", "\n\n", "请不要复制答案或者给一个连接，谢谢"]], "Tag": "程序设计"}
{"Answer": "这样就会合并多个命名空间 只要名称不相同冲突", "Konwledge_Point": "名字空间", "Question": ["C++可以在多个头文件中重复定义同一名称的命名空间吗？", ["test_a.h中有定义：", "\nnamespace ns {", "\n    class a {...};", "\n}", "\ntest_b.h中有定义：", "\nnamespace ns {", "\n    class b {...};", "\n}", "\ntest_c.h中有定义：", "\nnamespace ns {", "\n    class c {...};", "\n}", "\n然后，在test_c.cpp中有如下代码片段：", "\n#include \"test_a.h\"", "\n#include \"test_b.h\"", "\n#include \"test_c.h\"", "\nusing namespace ns;", "\n对于命名空间是否会产生二义性？这样做的好处是什么？", "\n（字体显示有问题，莫怪）"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'm not sure if I understand correctly, but what I think you're asking is, \"why is there no collection named &lt;code&gt;board_name.name&lt;/code&gt;\"? That's because you haven't created one yet.&lt;/p&gt;\n\n&lt;p&gt;Each collection in MongoDB simply has a name. The fact that human beings (and drivers) use &lt;code&gt;.&lt;/code&gt;s to separate the names into logical namespaces is a convenience to make it easier to use, and to let you logically group related collections, but from MongoDB's perspective, the name is simply a string.&lt;/p&gt;\n\n&lt;p&gt;Once you've created &lt;code&gt;board_name.name.article&lt;/code&gt;, if you issue a subsequent insert or save operation to another collection, say, &lt;code&gt;board_name.rank&lt;/code&gt;, then that collection will be created for you at that time. There will be no conflicts, your insert, update, or save operation will either identify a collection which already exists, and operate on that, or create a new collection and operate on that.&lt;/p&gt;\n\n&lt;p&gt;For more on how collections work, &lt;a href=\"http://www.mongodb.org/display/DOCS/Collections\" rel=\"nofollow\"&gt;see the MongoDB docs&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["在mongoDB中创建集合可能会引起一些冲突？", ["\n\n", "Assume $db is a made mongoDB connection with php.", "\n\n", "There is no collection exists yet.", "\n\n", "I inserted one data", "\n\n", "$db->board_name->board->article->insert(array(\"title\"=>\"example\"));\n", "\n\n", "this is equivalent to ", "\n\n", "db.board_name.board.article.insert({\"title\":\"example\"})\n", "\n\n", "the problem is it inserts not the ", "\n\n", "\n  ", "db.board_name.board", "\n", "\n\n", "structure but", "\n\n", "just simply inserts \"db.board_name.board.article\" <--- these three as a string.", "\n\n", "Does it just demonstrates like a combined string for now ", "\n\n", "because there is no other elements after \"board_name\"?", "\n\n", "What if I add more things right after \"board_name\" like ", "\n\n", "db.board_name.rank.insert({\"something\":\"thing\"});\n", "\n\n", "Does mongoDB smartly recognize \"rank\" collection as part of \"board_name\" in that case?", "\n\n", "or simply creates other collection with \"db.board_name.rank\"?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;上边文件标签没有改名功能&lt;br /&gt;你要把文件保存之后,在左侧的文件夹/文件列表中再对文件改名&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/350239329446165.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "名字空间", "Question": ["为啥我这vscode的文件名修改找不到啊我按f2也没有反应", ["为啥我这vscode的文件名修改找不到啊我按f2也没有反应，找了一圈也没有，是不是我插件冲突问题啊", "\n"]], "Tag": "程序设计"}
{"Answer": "我终于找到原因了……\r\n其实真的就是缺少了对就在MyPetShop.dbml了，只要在App_Code里插入对应的数据表就行了！\r\n如果和我一样用的是不会自动生成的VS版本……就自己创建一个MyPetShop.dbml吧，代码附上：\r\n\r\n```\r\n &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;Database Name=\"MyPetShop\" Class=\"MyPetShopDataContext\" xmlns=\"http://schemas.microsoft.com/linqtosql/dbml/2007\"&gt;\r\n  &lt;Connection Mode=\"WebSettings\" ConnectionString=\"Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|\\MyPetShop.mdf;Integrated Security=True;User Instance=True\" SettingsObjectName=\"System.Configuration.ConfigurationManager.ConnectionStrings\" SettingsPropertyName=\"MyPetShopConnectionString\" Provider=\"System.Data.SqlClient\" /&gt;\r\n  &lt;Table Name=\"dbo.Category\" Member=\"Category\"&gt;\r\n    &lt;Type Name=\"Category\"&gt;\r\n      &lt;Column Name=\"CategoryId\" Type=\"System.Int32\" DbType=\"Int NOT NULL IDENTITY\" IsPrimaryKey=\"true\" IsDbGenerated=\"true\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"Name\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Descn\" Type=\"System.String\" DbType=\"VarChar(255)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Association Name=\"Category_Product\" Member=\"Product\" OtherKey=\"CategoryId\" Type=\"Product\" /&gt;\r\n    &lt;/Type&gt;\r\n  &lt;/Table&gt;\r\n  &lt;Table Name=\"dbo.[Order]\" Member=\"Order\"&gt;\r\n    &lt;Type Name=\"Order\"&gt;\r\n      &lt;Column Name=\"OrderId\" Type=\"System.Int32\" DbType=\"Int NOT NULL IDENTITY\" IsPrimaryKey=\"true\" IsDbGenerated=\"true\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"UserName\" Type=\"System.String\" DbType=\"VarChar(80) NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"OrderDate\" Type=\"System.DateTime\" DbType=\"DateTime NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"Addr1\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Addr2\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"City\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"State\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Zip\" Type=\"System.String\" DbType=\"VarChar(5)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Phone\" Type=\"System.String\" DbType=\"VarChar(40)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Status\" Type=\"System.String\" DbType=\"VarChar(10)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Association Name=\"Order_OrderItem\" Member=\"OrderItem\" OtherKey=\"OrderId\" Type=\"OrderItem\" /&gt;\r\n    &lt;/Type&gt;\r\n  &lt;/Table&gt;\r\n  &lt;Table Name=\"dbo.OrderItem\" Member=\"OrderItem\"&gt;\r\n    &lt;Type Name=\"OrderItem\"&gt;\r\n      &lt;Column Name=\"ItemId\" Type=\"System.Int32\" DbType=\"Int NOT NULL IDENTITY\" IsPrimaryKey=\"true\" IsDbGenerated=\"true\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"OrderId\" Type=\"System.Int32\" DbType=\"Int NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"ProName\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"ListPrice\" Type=\"System.Decimal\" DbType=\"Decimal(10,2)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Qty\" Type=\"System.Int32\" DbType=\"Int NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"TotalPrice\" Type=\"System.Decimal\" DbType=\"Decimal(10,2)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Association Name=\"Order_OrderItem\" Member=\"Order\" ThisKey=\"OrderId\" Type=\"Order\" IsForeignKey=\"true\" /&gt;\r\n    &lt;/Type&gt;\r\n  &lt;/Table&gt;\r\n  &lt;Table Name=\"dbo.Product\" Member=\"Product\"&gt;\r\n    &lt;Type Name=\"Product\"&gt;\r\n      &lt;Column Name=\"ProductId\" Type=\"System.Int32\" DbType=\"Int NOT NULL IDENTITY\" IsPrimaryKey=\"true\" IsDbGenerated=\"true\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"CategoryId\" Type=\"System.Int32\" DbType=\"Int NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"ListPrice\" Type=\"System.Decimal\" DbType=\"Decimal(10,2)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"UnitCost\" Type=\"System.Decimal\" DbType=\"Decimal(10,2)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"SuppId\" Type=\"System.Int32\" DbType=\"Int\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Name\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Descn\" Type=\"System.String\" DbType=\"VarChar(255)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Image\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Qty\" Type=\"System.Int32\" DbType=\"Int NOT NULL\" CanBeNull=\"false\" /&gt;\r\n      &lt;Association Name=\"Category_Product\" Member=\"Category\" ThisKey=\"CategoryId\" Type=\"Category\" IsForeignKey=\"true\" /&gt;\r\n      &lt;Association Name=\"Supplier_Product\" Member=\"Supplier\" ThisKey=\"SuppId\" Type=\"Supplier\" IsForeignKey=\"true\" /&gt;\r\n    &lt;/Type&gt;\r\n  &lt;/Table&gt;\r\n  &lt;Table Name=\"dbo.Supplier\" Member=\"Supplier\"&gt;\r\n    &lt;Type Name=\"Supplier\"&gt;\r\n      &lt;Column Name=\"SuppId\" Type=\"System.Int32\" DbType=\"Int NOT NULL IDENTITY\" IsPrimaryKey=\"true\" IsDbGenerated=\"true\" CanBeNull=\"false\" /&gt;\r\n      &lt;Column Name=\"Name\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Addr1\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Addr2\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"City\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"State\" Type=\"System.String\" DbType=\"VarChar(80)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Zip\" Type=\"System.String\" DbType=\"VarChar(5)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Column Name=\"Phone\" Type=\"System.String\" DbType=\"VarChar(40)\" CanBeNull=\"true\" /&gt;\r\n      &lt;Association Name=\"Supplier_Product\" Member=\"Product\" OtherKey=\"SuppId\" Type=\"Product\" /&gt;\r\n    &lt;/Type&gt;\r\n  &lt;/Table&gt;\r\n  &lt;Function Name=\"dbo.CategoryInsertLinq\" Method=\"CategoryInsertLinq\"&gt;\r\n    &lt;Parameter Name=\"Name\" Parameter=\"name\" Type=\"System.String\" DbType=\"VarChar(80)\" /&gt;\r\n    &lt;Parameter Name=\"Descn\" Parameter=\"descn\" Type=\"System.String\" DbType=\"VarChar(255)\" /&gt;\r\n    &lt;Return Type=\"System.Int32\" /&gt;\r\n  &lt;/Function&gt;\r\n&lt;/Database&gt;\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201711/28/1511847095_719925.png)", "Konwledge_Point": "名字空间", "Question": ["找不到类型或命名空间名称“MyPetshopDataContext”", ["http://bbs.csdn.net/topics/380093975", "\n有前辈也问过这个问题哈……在网上找了一圈，大概就是说没有命名空间，我找到了对应的书上的标准代码，写着“using MyPetShop;”", "\n然后我自己调试的项目里面无法识别这个命名空间啊……什么情况呢？怎么个意思？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.namespace翻译成中文不就是命名空间吗&lt;br /&gt;2.using里面写的也是命名空间&lt;br /&gt;3.使用了using&amp;#xff0c;你就可以直接调用对应命名空间下的对象&amp;#xff0c;如果不using&amp;#xff0c;那么你需要写命名空间.对象&amp;#xff0c;如此而已&lt;br /&gt;4.很多时候我们经常用的一些对象&amp;#xff0c;比如DataTable、List之类的&amp;#xff0c;都会using对应的命名空间&amp;#xff0c;以便不需要反复的敲命名空间&lt;br /&gt;5.其它一些时候&amp;#xff0c;在不同命名空间下有同名对象&amp;#xff0c;此时需要写命名空间.对象以区分&lt;br /&gt;6.命名空间本来就是为了区分不同功能的同名对象&amp;#xff0c;以免造成混乱&amp;#xff0c;只有相同命名空间下可以直接调用&amp;#xff0c;其他命名空间下都必须using或者敲对应的命名空间名字来访问&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["c#中如何理解项目的名称和命名空间", ["这个什么集合也是命名空间吗？，那和上面using有什么区别？"]], "Tag": "程序设计"}
{"Answer": "不知道是我没说明白，还是大家都不会，或者不屑回答，连点建议都没收到 @- -@!! !\r\n\r\n认真看过我问题的都谢过，这个问题我自己已经解决（解决方法不知道是否简单，但算正规吧）。\r\n\r\n首先说下原因，这个问题大体是因为classpath（IClassEntry[]）中没有bin目录（跟想象的不一样啊，只有src目录），所以只能访问src中java文件，而遮蔽了对应的class文件（个人想法）。\r\n\r\n所以，要想访问bin下的class文件，取得IClassFile对象，必须把bin目录加入到Classpath中。我的做法是，通过副本，把classpath的src目录换成bin目录，然后使用修改后的副本的就可以了。\r\n\r\nps：修改classpath的动作必须针对副本，不然无效，并且这种操作对项目本身的classpath（buildpath）会有实质改动。", "Konwledge_Point": "名字空间", "Question": ["eclipse插件开发 如何取得一个项目的java文件对应的IClassFile", ["做了一个Eclipse插件，操作一个java项目，我可以获得src中的java文件（鼠标选中）的IFile对象，但是无法获得它对应的bin中的Class文件的IClassFile对象。理论上，我认为很容易实现，但是现实终究不如人意，网上找了很多，都没有答案（英文网站也搜过，也可能是我查的方法不对），谁能给我点帮助，谢谢。", "\n\n", "PS:对于lib里的jar文件中的类，通过IJavaProject.findType（类全名）方法可以获得对应类的IType，然后通过IType的getClassFile方法，可以获得IClassFile对象。但是对于src（或bin）中的东西不行，只能获得IType，而getClassFile方法得到的结果是NULL。问什么？要怎么做？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是你用的版本的问题&amp;#xff0c;新版本的已经不支持你这种写法了。&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"352\" src=\"https://img-ask.csdnimg.cn/upload/1611124340919.png\" width=\"972\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"420\" src=\"https://img-ask.csdnimg.cn/upload/1611124419218.png\" width=\"1175\" /&gt; &lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["c# 命名空间“Emgu.CV.CvEnum”中不存在类型或空间名称LoadImageType", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我用的是qt&amp;#39;界面。&lt;/p&gt;\n\n&lt;p&gt;还有这个我解决了&amp;#xff0c;将要用到的snap7.dll文件复制到C:\\Windows\\System32&amp;#xff0c;重新运行项目就不报错了。其中snap7.dll这个文件要对应系统是64位还是32位的&amp;#xff0c;32位的选择win32下的snap7.dll&amp;#xff0c;64位选择win64位下的snap7.dll。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["vs2017 使用snap7编译出现问题，有大佬来指导吗", ["\n", "#include<iostream>\n#include<snap7.h>\n#pragma comment(lib,\"snap7.lib\")\nusing namespace std;\n\n\nconst char* plc_ip = \"192.168.2.1\";\nint main() {\n\tTS7Client *client = new TS7Client();\n\tint ret = client->ConnectTo(plc_ip,1,0);\n\tif (ret != 0) {\n\t\tcout << ret;\n\t\treturn -1;\n\t}\n\n\treturn 0;\n}", "\n\n", "出现的错误如下", "\n\n", " ", "\n\n", "\n\n", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Using the &lt;a href=\"http://www.php.net/manual/en/class.simplexmlelement.php\" rel=\"nofollow\"&gt;SimpleXMLElement class&lt;/a&gt; you can easily get the attribute &lt;strong&gt;xsi:schemaLocation&lt;/strong&gt;'s value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$xml = &amp;lt;&amp;lt;&amp;lt;XML\n&amp;lt;?xml version=\"1.0\" encoding=\"utf-8\"?&amp;gt;\n&amp;lt;gpx xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" version=\"1.0\" creator=\"blabla\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\"&amp;gt;\n&amp;lt;/gpx&amp;gt;\nXML;\n\n$sxe = new SimpleXMLElement($xml);\n$schemaLocation = $sxe-&amp;gt;attributes('xsi', true)-&amp;gt;schemaLocation;\n\necho (string) $schemaLocation;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["如何使用命名空间获取属性的值", ["\n\n", "I'd like to get the content of the attribute ", "xsi:schemaLocation", ". It's works perfectly with getElementsByTagName in php (and foreach after) but it's ugly, right ? ", "\n\n", "How to get the same content with a simple Xpath query ?", "\n\n", "Here a short example of the xml content :", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<gpx xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" version=\"1.0\" creator=\"blabla\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\n...\n</gpx>\n", "\n\n", "Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "你的VS2010是Express还是什么版本的，默认Express不会显示在工具栏里面。\r\n你可以在下载[ Visual Basic Power Packs 3.0](http://msdn.microsoft.com/zh-cn/vstudio/bb735936.aspx \"Visual Basic Power Packs 3.0\")\r\n\r\n参考[Visual Basic Power Packs also included with Visual Studio 2010](http://blogs.msdn.com/b/bethmassi/archive/2009/07/27/visual-basic-power-packs-also-included-with-visual-studio-2010.aspx \"Visual Basic Power Packs also included with Visual Studio 2010\")\r\n如果你的VS是Express版本的， 可以下载下面的ReadMe页面，看怎么添加到VS的工具栏\r\n[Take a look at the readme on how you can add them](http://download.microsoft.com/download/f/8/f/f8f8f094-85d5-4628-829b-37a320b8c428/readme.htm \"Take a look at the readme on how you can add them\")", "Konwledge_Point": "名字空间", "Question": ["“Microsoft.VisualBasic” 缺少程序集引用?", ["错误  11  命名空间“Microsoft.VisualBasic”中不存在类型或命名空间名称“PowerPacks”。是否缺少程序集引用?   F:\\迅雷下载\\Seay源代码审计系统2.1源码\\Seay源代码审计系统安装版源码\\Seay代码审计工具\\F_rule_encode.Designer.cs    740 39  Seay代码审计工具", "\n\n", "求解阿...."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a id=\"textarea_1661815371930_1661815401458_0\"&gt;http://t.csdn.cn/W869r&lt;/a&gt;&lt;br /&gt;刚写的博客&amp;#xff0c;可以参考一下&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["Windows10下visual studio code运行opencv4报错", ["代码：", "#include", "  // 导入iostream", "#include<opencv2\\opencv.hpp>  // 导入opencv", "\n", "using namespace std;  // 常规名称空间", "using namespace cv;  // 应用Opencv名称空间", "int main(int argc, char** argv) {", "    Mat src = imread(\"E:\\Opencv-4.6.0\\opencv\\sources\\samples\\data\\lena.jpg\");", "    imshow(\"input\", src);", "    waitKey(0);", "    destroyAllWindows();", "    return 0;", "}", "\n", "错误提示：", "错误    C1189    #error:  STL1003: Unexpected compiler, expected C++ compiler.    secondTestProject01    E:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\VC\\Tools\\MSVC\\14.33.31629\\include\\yvals_core.h    23    "]], "Tag": "程序设计"}
{"Answer": "首先我先指出你的错误:\r\n你应该是想设置它是输出宽度，那么就要用：setw()，我写了一个例子：\r\n\r\n运行环境：vs2013\r\n```\r\n #include&lt;iostream&gt;\r\n#include&lt;iomanip&gt;\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\t/*\r\n\tsetw(n)是设置输出的宽度，如果输出的宽度不够，会用空格补充\r\n\t默认是右对齐\r\n\t*/\r\n\tint a = 0;\r\n\tint b = 10;\r\n\tint c = 100;\r\n\tcout &lt;&lt; setw(3) &lt;&lt; a &lt;&lt; endl;\r\n\tcout &lt;&lt; setw(3) &lt;&lt; b &lt;&lt; endl;\r\n    cout &lt;&lt; setw(3) &lt;&lt; c &lt;&lt; endl;\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "名字空间", "Question": ["关于函数stew的求助？？", ["为什么使用了头文件和名称空间编译器还是说stew没有定义"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;using namespace cv;&lt;br /&gt;那cv到底是不是命名空间啊&amp;#xff1f;&lt;br /&gt;你没有#include &amp;#34;cv.h&amp;#34;吧&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["DevC++报错“ 'cv' is not a namespace-name”应该怎么办啊？", ["代码：", "\n", "#", "define", " GLUT_DISABLE_ATEXIT_HACK", "\n", "#", "include", " ", "<gl\\glut.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<SOIL.h>", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<opencv2\\opencv.hpp>", "    ", "//可混合处理，加上尺寸调整函数", "\n", "using", " ", "namespace", " cv;\n", "using", " ", "namespace", " std;\n \nGLuint texture[", "6", "];\nGLfloat xRot, yRot, zRot;\n \n", "int", " ", "LoadGLTextures", "()", "{   ", "//加载纹理到opengl", "\n    ", "int", " Status = ", "0", ";\n    ", "char", " *picFile[", "6", "] = { ", "\"image/up.png\"", ",", "\"image/down.png\"", ",", "\"image/left.png\"", ",   ", "//注意先调整图片大小", "\n        ", "\"image/right.png\"", ",", "\"image/far.png\"", ",", "\"image/timi.png\"", " };\n    ", "for", " (", "int", " i = ", "0", ";i < ", "6", ";++i){\n        texture[i] = ", "SOIL_load_OGL_texture", "(\n            picFile[i],\n            SOIL_LOAD_AUTO,\n            SOIL_CREATE_NEW_ID,\n            SOIL_FLAG_INVERT_Y);\n        ", "if", " (texture[i] == ", "0", ")\n            Status = ", "0", ";\n        ", "glBindTexture", "(GL_TEXTURE_2D, texture[i]);\n        ", "glTexParameteri", "(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n        ", "glTexParameteri", "(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n    }\n    ", "return", " Status;\n}\n \n", "int", " ", "init", "()", "{\n    ", "glEnable", "(GL_TEXTURE_2D);\n    ", "glCullFace", "(GL_BACK);    ", "//剔除背面", "\n    ", "glEnable", "(GL_CULL_FACE);\n \n    ", "if", " (!", "LoadGLTextures", "()) {\n        ", "return", " ", "0", ";\n    }\n    ", "glShadeModel", "(GL_SMOOTH);   ", "//平滑着色", "\n    ", "glClearColor", "(", "1.0f", ", ", "1.0f", ", ", "0.0f", ", ", "1.0f", ");\n    ", "glClearDepth", "(", "1.0f", ");\n \n    ", "glEnable", "(GL_DEPTH_TEST);\n    ", "glDepthFunc", "(GL_LEQUAL);\n    ", "glHint", "(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);\n    ", "return", " ", "1", ";\n}\n", "void", " ", "cube", "()", " ", "{    ", "//绘制", "\n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "0", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glEnd", "();\n \n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "1", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glEnd", "();\n \n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "2", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glEnd", "();\n \n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "3", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glEnd", "();\n \n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "4", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glEnd", "();\n \n    ", "glBindTexture", "(GL_TEXTURE_2D, texture[", "5", "]);\n    ", "glBegin", "(GL_QUADS);\n    ", "glTexCoord2f", "(", "0.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "-1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "0.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "-1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "1.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "1.0f", ");\n    ", "glTexCoord2f", "(", "0.0f", ", ", "1.0f", "); ", "glVertex3f", "(", "-1.0f", ", ", "1.0f", ", ", "-1.0f", ");\n    ", "glEnd", "();\n}\n", "void", " ", "display", "()", "{   ", "//动态显示", "\n    ", "glClear", "(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n    ", "glLoadIdentity", "();\n    ", "glTranslatef", "(", "0.0f", ", ", "0.0f", ", ", "-5.0f", ");   ", "//平移", "\n    ", "glRotatef", "(xRot, ", "1.0f", ", ", "0.0f", ", ", "0.0f", ");   ", "//旋转", "\n    ", "glRotatef", "(yRot, ", "0.0f", ", ", "1.0f", ", ", "0.0f", ");\n    ", "glRotatef", "(zRot, ", "0.0f", ", ", "0.0f", ", ", "1.0f", ");\n    ", "cube", "();\n    xRot += ", "0.02f", ";   ", "//调节速度", "\n    yRot += ", "0.02f", ";\n    zRot += ", "0.02f", ";\n    ", "glutSwapBuffers", "();\n}\n", "void", " ", "showCube", "()", " ", "{     ", "//初始静止显示", "\n    ", "glClear", "(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n    ", "glLoadIdentity", "();\n    ", "glTranslatef", "(", "0.0f", ", ", "0.0f", ", ", "-5.0f", ");   \n    ", "cube", "();\n    ", "glutSwapBuffers", "();\n}\n", "void", " ", "showStop", "()", " ", "{   ", "//结束后显示", "\n    ", "glClear", "(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n    ", "glLoadIdentity", "();\n    ", "glTranslatef", "(", "0.0f", ", ", "0.0f", ", ", "-5.0f", ");   \n    ", "glRotatef", "(xRot, ", "1.0f", ", ", "0.0f", ", ", "0.0f", ");  \n    ", "glRotatef", "(yRot, ", "0.0f", ", ", "1.0f", ", ", "0.0f", ");\n    ", "glRotatef", "(zRot, ", "0.0f", ", ", "0.0f", ", ", "1.0f", ");\n    ", "cube", "();\n    ", "glutSwapBuffers", "();\n}\n \n", "void", " ", "reshape", "(", "int", " w, ", "int", " h)", "{\n    ", "if", " (h == ", "0", ")   ", "//至少一个像素", "\n        h = ", "1", ";\n    ", "glViewport", "(", "0", ", ", "0", ", (GLsizei)w, (GLsizei)h);\n    ", "glMatrixMode", "(GL_PROJECTION);   ", "//投影模式", "\n    ", "glLoadIdentity", "(); \n    ", "gluPerspective", "(", "60.0f", ", (GLfloat)w / (GLfloat)h, ", "1", ", ", "100", ");   ", "//设置透视", "\n    ", "glMatrixMode", "(GL_MODELVIEW);    ", "//模型视图矩阵", "\n    ", "glLoadIdentity", "();  \n}\n \n", "void", " ", "keyboard", "(", "unsigned", " ", "char", " key, ", "int", " x, ", "int", " y)", "{   ", "//可用键盘控制旋转", "\n    ", "switch", " (key) {\n    ", "case", " ", "'s'", ":   ", "//开始旋转", "\n        ", "glutDisplayFunc", "(display);\n        ", "glutIdleFunc", "(display);\n        ", "break", ";\n    ", "case", " ", "'e'", ":  ", "//结束旋转", "\n        GLfloat mari[", "16", "];\n        ", "glGetFloatv", "(GL_MODELVIEW_MATRIX, mari);\n        ", "for", " (", "int", " i = ", "0", "; i < ", "16", "; i++) {\n            cout << mari[i] << ", "\" \"", ";\n            ", "if", " ((i + ", "1", ") % ", "4", " == ", "0", ") {\n                cout << endl;\n            }\n        }\n        ", "exit", "(", "0", ");\n        ", "break", ";\n    }\n}\n \n", "int", " ", "main", "(", "int", " argc, ", "char", "** argv)", "{\n    ", "glutInit", "(&argc, argv);\n    ", "glutInitDisplayMode", "(GLUT_DOUBLE | GLUT_RGB);\n    ", "glutInitWindowSize", "(", "500", ", ", "500", ");\n    ", "glutInitWindowPosition", "(", "200", ", ", "200", ");\n    ", "glutCreateWindow", "(", "\"Show\"", ");\n    ", "init", "();\n    ", "glutDisplayFunc", "(showCube);\n    ", "glutKeyboardFunc", "(keyboard);\n \n    ", "glutReshapeFunc", "(reshape);\n \n    ", "glClearColor", "(", "1.0f", ", ", "0.0f", ", ", "1.0f", ", ", "1.0f", ");   \n    ", "glutMainLoop", "();\n    ", "return", " ", "0", ";\n}\n\n", "\n", "把第8行注释掉会显示“连接器返回错误代码1”，不注释掉会报标题的错误提示，请问是不是和没有配置SOIL.lib有关系啊？", "\n"]], "Tag": "程序设计"}
{"Answer": "js就是发送给浏览器看的，只要用户想看，他肯定能看到。\r\n当然你可以伪装一下，让他看不懂你的代码\r\n比如，压缩文件，用工具加密你的Js\r\n\r\n其实所有的ajax网站都存在你说的，手动输入action地址，就能调用你的action,无所谓的。只有不会产生错误就行了。", "Konwledge_Point": "名字空间", "Question": ["js 安全问题", ["我在js里面要进行异步提交，例如在$.post(\"/search/search.action,(args:args)......) 我的action的名称空间和名称是可以通过源文件查看js获得的，用户就可以直接通过url调用我的action，现在怎样才能让用户看不见我的js内容"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看不到&amp;#xff0c;可能并没有携带过去&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["f12为什么看不到我的用户名密码", ["没有表单数据这个参数，所有url的请求方式也都是GET"]], "Tag": "程序设计"}
{"Answer": "找到问题所在了，这是因为ArcGIS server 10.2本身固有的BUG导致的，据说10.3以后修复这个BUG了。如果不想换成10.3的话建议在后端写个查询程序，然后返回Json给前端", "Konwledge_Point": "名字空间", "Question": ["ArcGIS API for Javascript QuertTask查询不到数据", ["在用QueryTask查询的时候总是查询不到数据，可是明明有数据的啊？求大神帮忙看看是哪里的问题=，=", "\nrequire([", "\n            \"dojo/parser\",", "\n            \"esri/map\",", "\n            \"esri/layers/ArcGISDynamicMapServiceLayer\",", "\n            \"esri/InfoTemplate\",", "\n            \"esri/tasks/QueryTask\",", "\n            \"esri/symbols/SimpleMarkerSymbol\",", "\n             \"esri/symbols/SimpleLineSymbol\",", "\n            \"esri/symbols/SimpleFillSymbol\",", "\n            \"esri/symbols/TextSymbol\",", "\n            \"esri/toolbars/draw\",", "\n            \"esri/tasks/query\",", "\n            \"esri/graphic\",", "\n            \"dojo/domReady\"", "\n        ], function (parser,Map, ArcGISDynamicMapServiceLayer, InfoTemplate, QueryTask, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, TextSymbol, Draw, Query, Graphic) {", "\n            parser.parse();", "\n            //添加地图", "\n            var map=new Map(\"mapDiv\");", "\n            var serviceURL = \"http://localhost:6080/arcgis/rest/services/pingru/pingru/MapServer\";", "\n            var layer = new ArcGISDynamicMapServiceLayer(serviceURL);", "\n            map.addLayer(layer);", "\n\n", "        wkid = 4326;\n        //实例化infotemplate\n        infoTemplate = new InfoTemplate(\"${OBJECTID}\", \"名称：${OBJECTID}\")\n\n        //建立Querytask查询任务\n        querytask = new esri.tasks.QueryTask(serviceURL + \"/0\")//查询GPS站点图层\n\n        //建立toolbar\n        toolbar = new Draw(map);\n        pointSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE, 12, new dojo.Color([\"#ff0000\"]));\n        toolbar.activate(Draw.POLYGON);\n\n        query = new esri.tasks.Query();\n\n        //为toolbar绑定完成事件\n        toolbar.on(\"draw-complete\", function (geometry) {\n            //IsGraphicQuery = false;\n\n            //ClearGraphic();\n            QueryGraphic(geometry);\n            toolbar.deactivate();\n        })\n\n        //空间查询\n        function QueryGraphic(evt) {\n            query.geometry =evt.geometry;\n\n            //query.outSpatialReference = map.spatialReference;//加了就出BUG\n            query.spatialRelationship = Query.SPATIAL_REL_CONTAINS;\n            query.returnGeometry = true;\n            query.outFields = [\"Elevation\"];\n            querytask.execute(query, ShowQueryResult)\n\n            //document.getElementById(\"showResultDiv\").innerHTML = \"未找到结果\";\n\n            var polygonSymbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, new SimpleLineSymbol(SimpleLineSymbol.STYLE_DASHDOT, new dojo.Color([255, 0, 0]), 1), new dojo.Color([255, 0, 0, 0.25]));\n            var graphicPolygon = new Graphic(evt.geometry, polygonSymbol);\n            map.graphics.add(graphicPolygon);\n\n        }\n\n        function ShowQueryResult(queryResult) {\n            if (queryResult.features.length == 0) {\n                document.getElementById(\"showResultDiv\").innerHTML = \"未找到结果\"\n            }\n\n                            打断点之后如图所示，没有数据![图片说明](https://img-ask.csdn.net/upload/201704/07/1491563015_197168.png)\n                            但是发布的地图里的属性是有数据的![图片说明](https://img-ask.csdn.net/upload/201704/07/1491563156_531119.png)\n                            求大神帮忙看下哪里的问题，是代码的问题还是我发布地图服务的时候的问题\n"]], "Tag": "程序设计"}
{"Answer": "找到原因了，上MySQL的help index官网查了GeometryFromText，从8.0版本开始所有空间数据的操作函数的命名统一在前面加ST_，原来的函数命名都废弃了，所以应该是, ST_GeometryFromText， 函数名与()之间也不能有空格", "Konwledge_Point": "名字空间", "Question": ["mysql插入空间数据提示GeometryFromText函数不存在", ["使用shp2mysql将shp数据导成sql文件", "\n执行命令时提示Function GeometryFromText doesn't exist", "\n一直没找到解决办法，求解！", "\n\n", "贴上代码：", "\n\n", "CREATE TABLE bd (ID INT NOT NULL PRIMARY KEY , USERID INT, ID_BD DOUBLE(19,11), NAME_BD VARCHAR(255));", "\n\n", "ALTER TABLE bd ADD the_geom GEOMETRY; ", "\n\n", "INSERT INTO bd VALUES('0','0','11','GNZQ-11',GeometryFromText('MULTILINESTRING ((108.248171574503090 23.047938548227989 ,108.248174766285047 23.047930014688063 ,108.248177959110023 23.047921486385007 ,108.248181152956136 23.047912952842069))') );"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先设置是外层的layout是水平放置的&amp;#xff0c;然后设置权重即weight为0.5和0.5即可&amp;#xff0c;没设置的话意味着是由内容决定&amp;#xff0c;所以就会出现以上情况。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["LinearLayou空间大小平分", ["我在TextView里面添加数据为什么会把LinearLayout撑大，我想让两个TextView平分LinearLayout", "\n", "\n", "我想要这个中效果一个LinearLayout里面分为两块一块是图片一块是商品名称", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Prefer use &lt;code&gt;split&lt;/code&gt; (version php &amp;lt; 5.3.0) or &lt;code&gt;explode&lt;/code&gt; which is an alias of &lt;code&gt;split&lt;/code&gt; function, in your case, you just have to split you fullname with space character &lt;code&gt;' '&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var $fullname = \"John Smith\";\nvar $splitfullname = $fullname.split(' ');\n\nvar $firstname = $splitfullname[0];\nvar $lastname = $splitfullname[1];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;-&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var $fullname = \"John Smith\";\nvar $splitfullname = explode(' ', $fullname);\n\nvar $firstname = $splitfullname[0];\nvar $lastname = $splitfullname[1];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;if you build the form that catch firstname and fullname, I will suggest you to split your fullname input field into two input field (firstname and lastname).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "名字空间", "Question": ["简单的preg表达式，根据空间将名称剥离为2个部分[关闭]", ["\n\n", "I have a form field called 'Name' - but I'd like to save the submission into the DB as First Name & Last Name using a preg expression.", "\n\n", "Can some illustrate how if I entered the name 'John Smith' into the field a regexp would strip this into First Name - John Surname - Smith", "\n\n", "Thanks in advance", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/224956257246193.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Name: pyecharts&lt;br /&gt;Version: 1.7.1&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pyecharts.&lt;span class=\"hljs-keyword\"&gt;options&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; opts\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Line&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt; &amp;#61; Line()\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt;.set_global_opts(title_opts&amp;#61;opts.TitleOpts(title&amp;#61;&amp;#34;豆瓣影评人数top10电影&amp;#34;))\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt;.add_xaxis([&amp;#34;肖申克的救赎&amp;#34;, &amp;#34;这个杀手不太冷&amp;#34;, &amp;#34;千与千寻&amp;#34;, &amp;#34;阿甘正传&amp;#34;, &amp;#34;霸王别姬&amp;#34;, &amp;#34;泰坦尼克号&amp;#34;, &amp;#34;我不是药神&amp;#34;, &amp;#34;盗梦空间&amp;#34;, &amp;#34;三傻大闹宝莱坞&amp;#34;, &amp;#34;疯狂动物城&amp;#34;]\n               )\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt;.add_yaxis(&amp;#34;影片评价人数top10&amp;#34;, [&lt;span class=\"hljs-number\"&gt;2529510&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2060322&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1981694&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1900413&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1880377&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1862155&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1847187&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1825058&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1659816&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1657343&lt;/span&gt;])\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt;.set_global_opts(xaxis_opts&amp;#61;opts.AxisOpts(name_rotate&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;, axislabel_opts&amp;#61;{&amp;#34;rotate&amp;#34;: &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;}))\n\n&lt;span class=\"hljs-type\"&gt;line&lt;/span&gt;.render(&amp;#34;top10折线图.html&amp;#34;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["pyecharts x轴标签文字过多导致显示不全 如何更改", ["问题遇到的现象和发生背景", "\n", "pyecharts x轴标签文字过多导致显示不全 如何更改，网上只有echarts的解决方法，旋转坐标轴名字。但是我手上代码是学习发的，上面没有这个角度值，我也不知道怎么补充上去。", "\n", "问题相关代码，请勿粘贴截图", "\n", "#折线图", "import pyecharts.options as opts", "from pyecharts.charts import Line", "line = Line()", "line.set_global_opts(title_opts=opts.TitleOpts(title=\"豆瓣影评人数top10电影\"))", "line.add_xaxis([\"肖申克的救赎\", \"这个杀手不太冷\", \"千与千寻\", \"阿甘正传\", \"霸王别姬\", \"泰坦尼克号\", \"我不是药神\", \"盗梦空间\", \"三傻大闹宝莱坞\", \"疯狂动物城\"])", "line.add_yaxis(\"影片评价人数top10\", [2529510, 2060322, 1981694, 1900413, 1880377, 1862155, 1847187, 1825058, 1659816, 1657343])", "line.render(\"top10折线图.html\")", "\n", "运行结果及报错内容", "\n", "x轴只能显示出5个电影名称，其他的需要鼠标移动到折线图上才可以显示", "\n", "我的解答思路和尝试过的方法", "\n", "寻找 倾斜x轴信息的方法，没有pyecharts的", "\n", "我想要达到的结果", "\n", "旋转x轴上显示的信息，让字体竖着显示，从而让图表信息显示完全"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff01;点击该回答右侧的“采纳”按钮即可采纳&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;br /&gt;这个问题不太难。&lt;br /&gt;这个错误的原因是&amp;#xff0c;你的 R 版本的 pillar 库的版本不够新&amp;#xff0c;无法满足 forecast 包的依赖要求。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;解决方法是更新你的 pillar 库到最新版本&amp;#xff0c;或者卸载原有的 pillar 库&amp;#xff0c;重新安装最新版本的 pillar 库。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;在 R 命令行窗口中输入以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-keyword\"&gt;install&lt;/span&gt;.packages(&lt;span class=\"hljs-string\"&gt;&amp;#34;pillar&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样就可以安装最新版本的 pillar 库&amp;#xff0c;并解决加载 forecast 包的问题。&lt;/p&gt;\n&lt;p&gt;如果你想卸载原有的 pillar 库&amp;#xff0c;可以使用以下命令&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;remove.packages(&amp;#34;pillar&amp;#34;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后再使用上面的命令安装最新版本的 pillar 库即可。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["R的forecast包加载不出来", ["问题遇到的现象和发生背景", "\n", "R语言forecast包读不出来", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "library", "(forecast)", "\n\n", "\n", "运行结果及详细报错内容", "\n", "错误: package or namespace load failed for ‘forecast’ in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]): 载入了名字空间‘pillar’ 1.5.1，但需要的是>= 1.6.2", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "尝试过换R的版本，但也还是一样不能加载出来。", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "程序设计"}
{"Answer": "Imyinterface是你自己定义的接口吧。\r\n\r\n在你贴的代码中没有找到Imyinterface的定义。如果是在另一个源文件中定义此接口，应该用Using语句引用它。", "Konwledge_Point": "名字空间", "Question": ["未能找到类型或命名空间名称“Imyinterface”(是否缺少 using 指令或程序集引用?)", ["using System;", "\nusing System.Collections.Generic;", "\nusing System.Linq;", "\nusing System.Text;", "\nusing System.Threading.Tasks;", "\n\n", "namespace ConsoleApplication46", "\n{", "\n    class Program : Imyinterface", "\n    {", "\n        string id = \"\";", "\n        string name = \"\";", "\n        public string ID", "\n        {", "\n            get", "\n            {", "\n                return id;", "\n            }", "\n            set", "\n            {", "\n                id = value;", "\n            }", "\n        }", "\n        public string Name", "\n        {", "\n            get", "\n            {", "\n                return name;", "\n            }", "\n            set", "\n            {", "\n                name = value;", "\n            }", "\n        }", "\n        public void Showinfo()", "\n        {", "\n            Console.WriteLine(\"编号\\t 姓名\");", "\n            Console.WriteLine(ID + \"\\t\" + Name);", "\n        }", "\n        static void Main(string[] args)", "\n        {", "\n            Program program = new Program();", "\n            Imyinterface imyinterface = program;", "\n            Imyinterface = \"TM\";", "\n            Imyinterface.Name = \"C#3.5从入门到应用开发\";", "\n            Imyinterface.Showinfo();", "\n        }", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解决方法&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;把MTGraph G1, G2, G3挪到main函数外&amp;#xff0c;定义为全局变量&lt;/li&gt;&lt;li&gt;动态分配G1, G2, G3的内存&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "名字空间", "Question": ["VS2019 栈溢出：Stack overflow，数组可能定义太大？", ["\n#include<iostream>\n#include<stdio.h>\n#include<stdlib.h>\n#include<conio.h>\n#include<string>\n#include<fstream>\n#include<windows.h>\n#define ", "NumVertices", " ", "405", "\n#define ", "INFINITY", " ", "65535", " //设", "65535", "为无穷大 \nusing namespace std;\ntypedef int ", "EdgeDate", ";\ntypedef int ", "Pathmatrix", "[", "NumVertices", "][", "NumVertices", "];\ntypedef int ", "ShortPathTable", "[", "NumVertices", "][", "NumVertices", "];\n\ntypedef struct\n{\n    char name[", "50", "];//站点名\n    int linenum[", "5", "];//线路对应序列 \n}station;\n\ntypedef struct\n{\n     char linename[", "20", "];//线路名称   \n}linesystem;\n\ntypedef struct \n{\n    linesystem line[", "15", "]; \n    station ", "VerList", "[", "NumVertices", "];//站点信息 \n    ", "EdgeDate", " ", "Edge", "[", "NumVertices", "][", "NumVertices", "];         // 距离边权值 \n    int n,e;        \n}", "MTGraph", ";\n\nvoid ", "SetLine", "(", "MTGraph", " &", "G", ")//初始化站点所在线路对应的序列 \n{\n    ", "/*\n    605路        1\n    615路        2\n    402路        3\n    368外环      4 \n    368内环      5\n    400外环      6\n    400快内环    7\n    973路        8\n    135路        9\n    26路         10\n    300快外环    11\n    94路         12\n    34路         13\n    200外环      14\n    671路        15\n    */", "\n     int i;\n     ", "G", ".", "VerList", "[", "0", "].linenum[", "0", "] = ", "3", "; ", "G", ".", "VerList", "[", "0", "].linenum[", "1", "] = ", "4", "; ", "G", ".", "VerList", "[", "0", "].linenum[", "2", "] = ", "5", "; ", "G", ".", "VerList", "[", "0", "].linenum[", "3", "] = ", "11", "; ", "G", ".", "VerList", "[", "0", "].linenum[", "4", "] = ", "15", ";\n     ", "G", ".", "VerList", "[", "1", "].linenum[", "0", "] = ", "3", "; ", "G", ".", "VerList", "[", "1", "].linenum[", "1", "] = ", "4", "; ", "G", ".", "VerList", "[", "1", "].linenum[", "2", "] = ", "5", "; ", "G", ".", "VerList", "[", "1", "].linenum[", "3", "] = ", "11", "; ", "G", ".", "VerList", "[", "1", "].linenum[", "4", "] = ", "3", ";\n     ", "G", ".", "VerList", "[", "2", "].linenum[", "0", "] = ", "4", "; ", "G", ".", "VerList", "[", "2", "].linenum[", "1", "] = ", "5", "; ", "G", ".", "VerList", "[", "2", "].linenum[", "2", "] = ", "8", "; ", "G", ".", "VerList", "[", "2", "].linenum[", "3", "] = ", "11", "; ", "G", ".", "VerList", "[", "2", "].linenum[", "4", "] = ", "4", ";\n     ", "G", ".", "VerList", "[", "3", "].linenum[", "0", "] = ", "4", "; ", "G", ".", "VerList", "[", "3", "].linenum[", "1", "] = ", "5", "; ", "G", ".", "VerList", "[", "3", "].linenum[", "2", "] = ", "8", "; ", "G", ".", "VerList", "[", "3", "].linenum[", "3", "] = ", "11", "; ", "G", ".", "VerList", "[", "3", "].linenum[", "4", "] = ", "4", ";\n    //", "15", "\n    for(i=", "391", ";i<=", "404", ";i++){\n        ", "G", ".", "VerList", "[i].linenum[", "0", "]=", "15", ";", "G", ".", "VerList", "[i].linenum[", "1", "]=", "15", ";", "G", ".", "VerList", "[i].linenum[", "2", "]=", "15", ";", "G", ".", "VerList", "[i].linenum[", "3", "]=", "15", ";", "G", ".", "VerList", "[i].linenum[", "4", "]=", "15", ";\n    }\n}\n\nvoid ", "Getline", "(", "MTGraph", " &", "G", ") //读入线路 名称 \n{\n      int i=", "0", ";\n      ifstream ifp; \n      ifp.open(", "\"bus_Rname.txt\"", ",ios::in);\n      while(!ifp.eof())                    // 如果未读完，继续读文本      eof end of file\n      {                                  \n          ifp>>", "G", ".line[i].linename;       //\n          i++;\n      } \n      ifp.close();\n}\n\nvoid ", "CreateGraph_2", "(", "MTGraph", "& ", "G", ")//初始化一般时间段 \n{\n    ", "Getline", "(", "G", ");\n    ", "SetLine", "(", "G", ");//读入线路信息     \n    int i;\n    ", "G", ".n = ", "0", ";\n    ", "G", ".e = ", "0", ";\n    int j = ", "0", ";\n    ifstream ifp;\n    ifp.open(", "\"bus_name.txt\"", ", ios::in);\n    while (!ifp.eof())\n    {\n        ++", "G", ".n;\n        ifp >> ", "G", ".", "VerList", "[j].name;//读入站点相关信息 \n        j++;\n    }\n    ifp.close();\n    for (i = ", "0", "; i < ", "G", ".n; i++)\n    {\n        for (j = ", "0", "; j < ", "G", ".n; j++)\n        {\n            ", "G", ".", "Edge", "[i][j] = ", "INFINITY", ";//权值初始化 \n        }\n        ", "G", ".", "Edge", "[i][i] = ", "0", ";\n    }\n    int v1, v2, w;\n    ", "FILE", "* fp2;\n    fp2=fopen(", "\"bus_time.txt\"", ", ", "\"r\"", ");\n    if (", "NULL", " == fp2) printf(", "\"文件打开失败\"", ");\n    else\n    {\n        while (!feof(fp2))\n        {\n            fscanf(fp2, ", "\"%d %d %d\"", ", &v1, &v2, &w);//读入边权值 \n            ", "G", ".", "Edge", "[v1][v2] = w;\n            ", "G", ".", "Edge", "[v2][v1] = w;\n            ++", "G", ".e;\n        }\n        fclose(fp2);\n    }\n}\n\nint ", "Getnum", "(", "MTGraph", "& ", "G", ", char* a)//取得站点对应下标 \n{\n    int i = ", "0", ";\n    while (i < ", "G", ".n)\n    {\n        if (strcmp(", "G", ".", "VerList", "[i].name, a) == ", "0", ")\n        {\n            return i;\n            break;\n        }\n        else\n            i++;\n    }\n    if (i >= ", "G", ".n)\n        return ", "-1", ";\n}\n\n\nvoid ", "ShortestPath", "(", "MTGraph", " &", "G", ",", "Pathmatrix", " ", "P", ",", "ShortPathTable", " ", "D", ")//求最短路径 \n{\n    int trans[", "118", "]; \n    char a[", "20", "],b[", "20", "];\n    int i,j,v,w,k,m,n,p,q,r,t,", "T", ";\n    char s;\n    for(i=", "-1", ";i<", "118", ";i++)\n    {\n        trans[i]=i;//对比是否为换乘 \n    }\n    for(v=", "0", ";v<", "G", ".n;v++)//初始化", "D", "与", "P", " \n    {\n        for(w=", "0", ";w<", "G", ".n;w++)\n        {\n           ", "D", "[v][w]=", "G", ".", "Edge", "[v][w];//", "D", "值为对应权值 \n           ", "P", "[v][w]=w;//初始化", "P", "                  \n        }                  \n    }    \n    for(k=", "0", ";k<", "G", ".n;k++)\n    {\n        for(v=", "0", ";v<", "G", ".n;v++)\n        {\n           for(w=", "0", ";w<", "G", ".n;w++)\n           {\n               if(", "D", "[v][w]>", "D", "[v][k]+", "D", "[k][w])//如果经过下标为k顶点路径比原两点间路径更短，将当前权值设为更小的 \n               {\n                   ", "D", "[v][w]=", "D", "[v][k]+", "D", "[k][w];// \n                   ", "P", "[v][w]=", "P", "[v][k];//路径设置经过下标为k的顶点                           \n               }\n           }\n        }                  \n    }//", "Floyd", "算法求最小路径 \n  while(", "1", ")\n  {\n    cout<<endl<<endl<<endl<<", "\"                               ☆最快路径查询☆\"", "<<endl;\n    cout<<", "\"..............................................................................\"", "<<endl<<endl;      \n    while(", "1", ")\n    {\n        while(", "1", ")\n        {    \n            cout<<", "\"            >>>>>>>>>请输入起点站：\"", ";\n            cin>>a;\n            v=", "Getnum", "(", "G", ",a);\n            if(v==", "-1", ")\n            cout<<", "\"站点不存在请重新输入！\"", "<<endl;\n            else\n            break;\n        }\n        while(", "1", ")\n        {\n            cout<<endl<<", "\"            >>>>>>>>>请输入终点站：\"", ";\n            cin>>b;\n            w=", "Getnum", "(", "G", ",b); \n            if(w==", "-1", ")\n            cout<<", "\"站点不存在请重新输入！\"", "<<endl;\n            else\n            break;\n        }\n        if(v==w)\n        cout<<", "\"请输入两个不同的站点名！\"", "<<endl;\n        else\n        break;\n    }//输入起始点于终点 \n    system(", "\"cls\"", ");\n    \n    p=", "0", ";\n    k=", "P", "[v][w];\n    for(i=", "0", ";i<", "3", ";i++)\n    {\n        for(j=", "0", ";j<", "3", ";j++)\n        {\n            if(", "G", ".", "VerList", "[v].linenum[i]==", "G", ".", "VerList", "[k].linenum[j])\n            {p=", "G", ".", "VerList", "[v].linenum[i];}//确定初始时所在的地铁线路对应序列 \n        }\n    }\n    if(p==", "0", ")\n    {p=", "G", ".", "VerList", "[v].linenum[", "0", "];}//如果不能找到对应序列则取下一结点的序列，仅针对", "13", "号起点终点与机场线起点这种", "3", "线交叉情况 */\n    cout<<endl<<endl<<endl<<", "\"                               ☆最快路径查询☆\"", "<<endl;\n    cout<<", "\"..............................................................................\"", "<<endl<<endl;  \n    cout<<", "\"......................起点在\"", "<<p<<", "\"..........\"", "<<", "G", ".line[p", "-1", "].linename<<", "\"........................\"", "<<endl<<endl;     \n    cout<<", "\"            >>>>>>>>>用时最短路径: \"", "<<endl<<endl<<", "\"            >>>>>>>>> ->在 \"", "<<", "G", ".", "VerList", "[v].name<<", "\" 乘 \"", "<<", "G", ".line[p", "-1", "].linename<<", "\" (\"", "<<", "G", ".", "VerList", "[k].name<<", "\"方向)\"", "<<endl;\n    m=v;//设m为k在最短路径中的直接前驱 \n    r=v; \n    ", "T", "=", "3", ";\n    while(k!=w)\n    {\n        q=", "-1", ";\n        while(k!=trans[q]&&k<", "118", ")\n        { \n            q++;\n            if(k==trans[q])//如果k满足是可换乘节点 \n            {\n                n=", "P", "[k][w];//设m为k在最短路径中的直接后继  \n                p=t=", "-1", ";\n                for(i=", "0", ";i<", "5", ";i++)\n                {\n                   for(j=", "0", ";j<", "5", ";j++)\n                   {\n                       if(", "G", ".", "VerList", "[m].linenum[i]==", "G", ".", "VerList", "[k].linenum[j])\n                       {p=", "G", ".", "VerList", "[m].linenum[i];} \n                   }\n                }\n                if(p==", "-1", ")\n                p=", "G", ".", "VerList", "[m].linenum[", "0", "];\n                \n                for(i=", "0", ";i<", "5", ";i++)\n                {\n                   for(j=", "0", ";j<", "5", ";j++)\n                   {\n                       if(", "G", ".", "VerList", "[k].linenum[i]==", "G", ".", "VerList", "[n].linenum[j])\n                       {t=", "G", ".", "VerList", "[k].linenum[i];}\n                   }\n                }\n                if(t==", "-1", ")\n                {\n                    ", "/*if(k==9||k==12)\n                    t=9;\n                    else if(k==23)\n                    t=13;\n                    else */", "\n                    t=", "G", ".", "VerList", "[n].linenum[", "1", "];\n                }\n                if(p!=t)//若k前后两线路序列号不同则换乘 \n                {       \n                    int a=", "D", "[r][k];\n                    double b=a/", "1000", ";        \n                    cout<<", "\"            >>>>>>>>> ->距离为\"", "<<", "D", "[r][k]<<", "\"米，用时约\"", "<<b<<", "\"分钟 至：\"", "<<", "G", ".", "VerList", "[k].name<<", "\" 换乘 \"", "<<", "G", ".line[t", "-1", "].linename<<", "\" (\"", "<<", "G", ".", "VerList", "[n].name<<", "\"方向)\"", "<<endl;//若路径点为换乘点则打印 \n                    r=k;//设定r结点用于求分段时间 \n                    ", "T", "+=", "5", ";\n                } \n            }\n        }\n        \n     m=", "P", "[m][w];//m后移   \n     k=", "P", "[k][w];//k后移             \n    } \n    int c=", "D", "[r][w];\n    int f=", "D", "[v][w];\n    int value;\n    double d=c/", "1000", ";\n    double e=f/", "1000", ";\n    if(", "D", "[v][w]<", "6000", ")\n        value=", "3", ";\n    else if(", "6000", "<", "D", "[v][w]&&", "D", "[v][w]<", "12000", ")\n        value=", "4", ";\n    else if(", "12000", "<", "D", "[v][w]&&", "D", "[v][w]<", "22000", ")\n        value=", "5", ";\n    else if(", "22000", "<", "D", "[v][w]&&", "D", "[v][w]<", "32000", ")\n        value=", "6", ";\n    else if(", "52000", "<", "D", "[v][w]&&", "D", "[v][w]<", "72000", ")\n        value=", "7", ";    \n    else if(", "72000", "<", "D", "[v][w]&&", "D", "[v][w]<", "92000", ")\n        value=", "8", ";    \n    cout<<", "\"            >>>>>>>>> ->距离为\"", "<<", "D", "[r][w]<<", "\"米，用时约\"", "<<d<<", "\"分钟，到达终点：\"", "<<", "G", ".", "VerList", "[w].name<<endl;\n    cout<<endl<<", "\"            >>>>>>>>>总里程为\"", "<<", "D", "[v][w]<<", "\"米，考虑换乘以及等车一共约用时为：\"", "<<e+", "T", "<<", "\"分钟,票价为\"", "<<value<<", "\"元！！！！\"", "<<endl<<endl<<endl<<endl<<endl<<endl;\n    cout<<", "\"            >>>>>>>>>是否继续查询？（Y/N）\"", ";\n    scanf(", "\"%s\"", ",&s);\n    if(s!=", "'y'", "&&s!=", "'Y'", ")\n    break;\n    else\n    system(", "\"cls\"", ");\n    }                \n}\n\nint main()\n{\n    ", "MTGraph", " ", "G1", ",", "G2", ",", "G3", ";\n    char a,d;\n    int c; \n    char b[", "10", "];\n\n\n     scanf(", "\"%s\"", ",&d);\n     system(", "\"cls\"", ");\n               if(d==", "'2'", ")\n              { \n                      ", "CreateGraph_2", "(", "G2", ");\n                      ", "Pathmatrix", " ", "P", ";\n                      ", "ShortPathTable", " ", "D", ";\n                      ", "ShortestPath", "(", "G2", ",", "P", ",", "D", ");\n                      printf(", "\"\\n\"", ");\n                      printf(", "\"请按Enter键返回上一级菜单\"", ");\n                      ", "_getch", "();\n                      system(", "\"cls\"", ");\n                      \n              }           \nreturn ", "0", ";\n}\n", "\n", "初始定义了一个结构体中的数组，大小为405，在dev上能够正常运行，但在VS2019上则出现异常。", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\nclass subject{\r\n\tprivate:\r\n\t\tstring a;\r\n\t\tint score;\r\n\tpublic:\r\n\t\tvoid fuzhi(string x,int y){\r\n\t\t\tthis-&gt;a=x;\r\n\t\t\tthis-&gt;score=y;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tbool check(){\r\n\t\t\treturn this-&gt;score&gt;=60;\r\n\t\t}\r\n\t\tvoid print(){\r\n\t\t    cout&lt;&lt;this-&gt;a&lt;&lt;\":\"&lt;&lt;this-&gt;score&lt;&lt;\" \";\r\n\t\t\tif(!this-&gt;check())\r\n\t\t\t    cout&lt;&lt;\"不\";\r\n\t\t\tcout&lt;&lt;\"及格\\n\";\r\n\t\t}\r\n};\r\nclass student{\r\n\tprivate:\r\n\t\tint xuehao;\r\n\t\tstring name;\r\n\t\tsubject w[3];\r\n\tpublic:\r\n\t\tvoid fuzhi(){\r\n\t\t\tcin&gt;&gt;this-&gt;name&gt;&gt;xuehao;\r\n\t\t\tstring s;\r\n\t\t\tint score;\r\n\t\t\tfor(int i=0;i&lt;3;i++){\r\n\t\t\t\tcin&gt;&gt;s;\r\n\t\t\t\tscanf(\"%d\",&amp;score);\r\n\t\t\t\tw[i].fuzhi(s,score);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvoid print(){\r\n\t\t\tcout&lt;&lt;\"姓名:\"&lt;&lt;this-&gt;name&lt;&lt;\" 学号:\"&lt;&lt;this-&gt;xuehao&lt;&lt;\"\\n得分:\\n\";\r\n\t\t\tfor(int i=0;i&lt;3;i++){\r\n\t\t\t\tw[i].print();\r\n\t\t\t}\r\n\t\t}\r\n};\r\nint main(){\r\n    student a;\r\n    a.fuzhi();\r\n    a.print();\r\n\treturn 0;\r\n}\r\n\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202003/12/1583973819_919262.png)", "Konwledge_Point": "名字空间", "Question": ["求助c++程序！谢谢谢谢", ["写一个科目类，包含科目名称，科目分数2个数据成员，一个衡量是否及格的成员函数，用其构造函数为科目对象赋值。", "\n\n", "写一个学生类，含学号，姓名2个数据成员，以及一个成绩对象指针成员（指向语数外三门成绩对象组成的数组），在学生类的构造函数中为成绩对象指针成员赋值（申请空间），在学生成绩展示成员函数中，将其三门成绩逐一展示并说明是否及格。", "\n\n", "主函数中只需要定义一个学生对象，进行成绩登记及演示。"]], "Tag": "程序设计"}
{"Answer": "应该是你权限表结构的问题。你是用单个字段来表示多个权限吧。这字段内容是用 \",\" 逗号分隔开的字符串。\r\nauthorities-by-username-query=\"select name as 'username',authorities as 'authority' from authentication where name =?\"   \r\n这个你只返回一条记录。“user1    ROLE_USER_1, ROLE_USER_2 ”。\r\n这是问题所在。\r\nspring security 默认的 authorities-by-username-query是\r\n\"SELECT username,authority FROM authorities WHERE username = ?\";\r\n正常是类似返回\r\nuser1    ROLE_USER_1\r\nuser1    ROLE_USER_2 \r\n多条记录集。\r\n权限表应该类似如下结构\r\ncreate table \"authorities\"  (\r\n   \"username\"           varchar2(32),\r\n   \"authority\"          VARCHAR2(32)                     not null\r\n);\r\nalter table \"authorities\"\r\n   add constraint FK_AUTHORIT_REF_USERS_USERNAME foreign key (\"username\")\r\n      references \"users\" (\"username\");", "Konwledge_Point": "名字空间", "Question": ["spring security 权限分配问题", ["我在测试的项目上引进了spring security 基于名称空间配置的安全架构，遇到一个问题，请指教下！", "配置代码如下：", "<!---->\n\n\n\n", "<beans:beans xmlns=\"", "http://www.springframework.org/schema/security", "\" xmlns:beans=\"", "http://www.springframework.org/schema/beans", "\" xmlns:xsi=\"", "http://www.w3.org/2001/XMLSchema-instance", "\" xsi:schemalocation=\"", "http://www.springframework.org/schema/beans", " ", "http://www.springframework.org/schema/beans/spring-beans-2.0.xsd", "http://www.springframework.org/schema/security", " ", "http://www.springframework.org/schema/security/spring-security-2.0.xsd", "\">", "\n\n", "&lt;global-method-security secured-annotations=\"enabled\"&gt;\n&lt;/global-method-security&gt;\n\n&lt;http access-denied-page=\"/error.jsp\" session-fixation-protection=\"newSession\" auto-config=\"true\" path-type=\"ant\"&gt;<!---->\n   <!---->        \n    &lt;intercept-url pattern=\"/acegiTest.do\" access=\"ROLE_SUPERVISOR\"&gt;        \n    &lt;intercept-url pattern=\"/index.jsp\" access=\"IS_AUTHENTICATED_REMEMBERED\"&gt;\n    &lt;intercept-url pattern=\"/role1.jsp\" access=\"ROLE_USER_1\"&gt;\n    &lt;intercept-url pattern=\"/role2.jsp\" access=\"ROLE_USER_2\"&gt;\n    &lt;intercept-url pattern=\"/role3.jsp\" access=\"ROLE_USER_3\"&gt;\n    &lt;intercept-url pattern=\"/**\" access=\"IS_AUTHENTICATED_ANONYMOUSLY\"&gt;\n    <!---->\n\n    <!---->\n    &lt;form-login login-page=\"/login.jsp\" default-target-url=\"/index.jsp\" authentication-failure-url=\"/login.jsp?login_error=1\"&gt;\n    &lt;anonymous key=\"cookie_key\" username=\"ananoymous\" granted-authority=\"IS_AUTHENTICATED_ANONYMOUSLY\"&gt;        \n    &lt;logout invalidate-session=\"true\"&gt;\n    <!---->             \n    &lt;concurrent-session-control max-sessions=\"1\" exception-if-maximum-exceeded=\"false\"&gt;<!---->\n&lt;/http&gt;   \n\n&lt;authentication-provider&gt; \n         &lt;password-encoder hash=\"md5\"&gt;<!---->    \n    &lt;jdbc-user-service data-source-ref=\"f3CenterDS\" users-by-username-query=\"select name as 'username',password,'true' from users where name = ?\" authorities-by-username-query=\"select name as 'username',authorities as 'authority' from authentication where name =?\"&gt;     \n\n&lt;/authentication-provider&gt;\n", "\n\n", "</beans:beans>", "\n\n", "在代码中", "authorities-by-username-query=\"select name as 'username',authorities as 'authority' from authentication where name =?\" ", "，如果数据库里分配多个权限给用户的话，用户登入系统就不能正常使用（不能访问），倘若只分配一个权限则可以正常访问，还请指教一二！！！", "问题补充", "如果我把<jdbc-user-service>放在缓存中，则不会出现这样的问题了！", "如下", "<user-service>", "\n            <user name=\"user\" password=\"123\" authorities=\"ROLE_SUPERVISOR, ROLE_USER_1\">", "\n        </user-service> ", "问题补充：", "select name as 'username',authorities as 'authority' from authentication where name =?", "查询结果没有错，，，", "返回如下：", "user1    ROLE_USER_1, ROLE_USER_2"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个不是端口号的问题&amp;#xff0c;应该是注入对象的事&amp;#xff0c;把类里的东西全注掉&amp;#xff0c;然后放开部分重启&amp;#xff0c;看到哪步出错就是了&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["springboot整合webservice，启动报端口占用错误", ["问题遇到的现象和发生背景", "\n", "项目是springboot项目，整合webservice服务端和客户端时报端口占用。", "\n", "问题相关代码，请勿粘贴截图", "\n", "@WebService", "(name=", "\"TestUserService\"", ",targetNamespace=", "\"http://service.erpJlb.jianlibao.com\"", ")\n", "@Component", "\n", "public", " ", "interface", " TestUserService {\n\n    ", "@WebMethod", "\n    ", "public", " ", "TestUser", " ", "getTestUser", "(", "@WebParam", "(name = ", "\"name\"", ") ", "String", " name);\n\n    ", "@WebMethod", "\n    ", "@WebResult", "(name=", "\"String\"", ",targetNamespace=", "\"\"", ")\n    ", "public", " ", "String", " ", "getUserName", "(", "@WebParam", "(name = ", "\"name\"", ") ", "String", " name);\n\n}\n\n", "@WebService", "(serviceName=", "\"TestUserService\"", ",", "//对外发布的服务名", "\n            targetNamespace=", "\"http://service.erpJlb.jianlibao.com\"", ",", "//指定你想要的名称空间，通常使用使用包名反转", "\n            endpointInterface=", "\"com.jianlibao.erpJlb.service.TestUserService\"", ")", "//服务接口全路径, 指定做SEI（Service EndPoint Interface）服务端点接口", "\n", "@Component", "\n", "public", " ", "class", " ", "TestUserServiceImpl", " ", "implements", " ", "TestUserService", " {\n\n    ", "private", " ", "Map", "<", "Long", ", ", "TestUser", "> userMap = ", "new", " ", "HashMap", "<", "Long", ", ", "TestUser", ">();\n\n    ", "@Override", "\n    ", "public", " ", "TestUser", " ", "getTestUser", "(", "String", " name", ") {\n        ", "return", " userMap.", "get", "(name);\n    }\n\n    ", "@Override", "\n    ", "public", " ", "String", " ", "getUserName", "(", "String", " name", ") {\n        ", "return", " ", "\"name为：\"", " + name;\n    }\n\n    ", "public", " ", "TestUserServiceImpl", "() {\n        ", "System", ".", "out", ".", "println", "(", "\"向实体类插入数据\"", ");\n        ", "TestUser", " testUser = ", "new", " ", "TestUser", "();\n        testUser.", "setUserId", "(", "SnowflakeIdWorker", ".", "generateId", "());\n        testUser.", "setName", "(", "\"小红\"", ");\n        testUser.", "setAge", "(", "\"20\"", ");\n        userMap.", "put", "(testUser.", "getUserId", "(), testUser);\n    }\n}\n\n", "@Configuration", "\n", "public", " ", "class", " ", "CxfConfig", " {\n\n    ", "@Autowired", "\n    ", "private", " ", "Bus", " bus;\n\n    ", "@Autowired", "\n    ", "private", " ", "TestUserService", " testUserService;\n\n    ", "/**\n     * 此方法作用是改变项目中服务名的前缀名，此处127.0.0.1或者localhost不能访问时，请使用ipconfig查看本机ip来访问\n     * 此方法被注释后:wsdl访问地址为http://127.0.0.1:8080/services/user?wsdl\n     * 去掉注释后：wsdl访问地址为：http://127.0.0.1:8080/soap/user?wsdl\n     * ", "@return", "\n     */", "\n    ", "@SuppressWarnings", "(", "\"all\"", ")\n    ", "@Bean", "\n    ", "public", " ", "ServletRegistrationBean", " ", "aaaaaa", "(", ") {\n        ", "return", " ", "new", " ", "ServletRegistrationBean", "(", "new", " ", "CXFServlet", "(), ", "\"/soap/*\"", ");\n    }\n\n    ", "/** JAX-WS\n     * 站点服务\n     * **/", "\n    ", "@Bean", "\n    ", "public", " ", "Endpoint", " ", "endpoint", "(", ") {\n        ", "EndpointImpl", " endpoint = ", "new", " ", "EndpointImpl", "(bus, testUserService);\n        endpoint.", "publish", "(", "\"/testUser\"", ");\n        ", "return", " endpoint;\n    }\n}\n\npom文件\n<dependency>\n            ", "<", "groupId", ">", "org.apache.cxf", "</", "groupId", ">", "\n            ", "<", "artifactId", ">", "cxf-spring-boot-starter-jaxws", "</", "artifactId", ">", "\n            ", "<", "version", ">", "3.1.11", "</", "version", ">", "\n        </dependency>\n", "\n", "运行结果及报错内容", "\n", "Connected to the target VM, ", "address", ": ", "'127.0.0.1:53835'", ", transport: ", "'socket'", "\nApplication Version: ", "1.0", ".", "0", "\nSpring Boot Version: ", "2.2", ".", "13", ".RELEASE", "\n\n", "13", ":", "19", ":", "21.253", " ", "[background-preinit]", " INFO  o", ".h", ".v", ".i", ".util", ".Version", " - ", "[<clinit>,21]", " - HV000001: Hibernate Validator ", "6.0", ".", "22", ".Final", "\n", "13", ":", "19", ":", "21.300", " ", "[restartedMain]", " INFO  c", ".j", ".JianLiBaoApplication", " - ", "[logStarting,55]", " - Starting JianLiBaoApplication on LAPTOP-EIBFNEMF with PID ", "16164", " (E:\\workSpace\\jlb-api\\JianLiBao-api\\jianlibao\\jianlibao-admin\\target\\classes started by 高印-胡水 ", "in", " E:\\workSpace\\jlb-api\\JianLiBao-api\\jianlibao)\n", "13", ":", "19", ":", "21.300", " ", "[restartedMain]", " INFO  c", ".j", ".JianLiBaoApplication", " - ", "[logStartupProfileInfo,655]", " - The following profiles are active: druid\n", "13", ":", "19", ":", "25.490", " ", "[restartedMain]", " ERROR o", ".s", ".b", ".SpringApplication", " - ", "[reportFailure,826]", " - Application run failed\njava", ".lang", ".IllegalArgumentException", ": Could not find class ", "[org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration]", "\n    at org", ".springframework", ".util", ".ClassUtils", ".resolveClassName", "(ClassUtils", ".java", ":", "334", ")\n    at org", ".springframework", ".core", ".annotation", ".TypeMappedAnnotation", ".adapt", "(TypeMappedAnnotation", ".java", ":", "446", ")\n    at org", ".springframework", ".core", ".annotation", ".TypeMappedAnnotation", ".getValue", "(TypeMappedAnnotation", ".java", ":", "369", ")\n    at org", ".springframework", ".core", ".annotation", ".TypeMappedAnnotation", ".asMap", "(TypeMappedAnnotation", ".java", ":", "284", ")\n    at org", ".springframework", ".core", ".annotation", ".AbstractMergedAnnotation", ".asAnnotationAttributes", "(AbstractMergedAnnotation", ".java", ":", "193", ")\n    at org", ".springframework", ".core", ".type", ".AnnotatedTypeMetadata", ".getAnnotationAttributes", "(AnnotatedTypeMetadata", ".java", ":", "106", ")\n    at org", ".springframework", ".context", ".annotation", ".AnnotationConfigUtils", ".attributesFor", "(AnnotationConfigUtils", ".java", ":", "285", ")\n    at org", ".springframework", ".context", ".annotation", ".AnnotationBeanNameGenerator", ".determineBeanNameFromAnnotation", "(AnnotationBeanNameGenerator", ".java", ":", "102", ")\n    at org", ".springframework", ".context", ".annotation", ".AnnotationBeanNameGenerator", ".generateBeanName", "(AnnotationBeanNameGenerator", ".java", ":", "81", ")\n    at org", ".springframework", ".context", ".annotation", ".ConfigurationClassBeanDefinitionReader", ".registerBeanDefinitionForImportedConfigurationClass", "(ConfigurationClassBeanDefinitionReader", ".java", ":", "160", ")\n    at org", ".springframework", ".context", ".annotation", ".ConfigurationClassBeanDefinitionReader", ".loadBeanDefinitionsForConfigurationClass", "(ConfigurationClassBeanDefinitionReader", ".java", ":", "141", ")\n    at org", ".springframework", ".context", ".annotation", ".ConfigurationClassBeanDefinitionReader", ".loadBeanDefinitions", "(ConfigurationClassBeanDefinitionReader", ".java", ":", "120", ")\n    at org", ".springframework", ".context", ".annotation", ".ConfigurationClassPostProcessor", ".processConfigBeanDefinitions", "(ConfigurationClassPostProcessor", ".java", ":", "331", ")\n    at org", ".springframework", ".context", ".annotation", ".ConfigurationClassPostProcessor", ".postProcessBeanDefinitionRegistry", "(ConfigurationClassPostProcessor", ".java", ":", "236", ")\n    at org", ".springframework", ".context", ".support", ".PostProcessorRegistrationDelegate", ".invokeBeanDefinitionRegistryPostProcessors", "(PostProcessorRegistrationDelegate", ".java", ":", "280", ")\n    at org", ".springframework", ".context", ".support", ".PostProcessorRegistrationDelegate", ".invokeBeanFactoryPostProcessors", "(PostProcessorRegistrationDelegate", ".java", ":", "96", ")\n    at org", ".springframework", ".context", ".support", ".AbstractApplicationContext", ".invokeBeanFactoryPostProcessors", "(AbstractApplicationContext", ".java", ":", "707", ")\n    at org", ".springframework", ".context", ".support", ".AbstractApplicationContext", ".refresh", "(AbstractApplicationContext", ".java", ":", "533", ")\n    at org", ".springframework", ".boot", ".web", ".servlet", ".context", ".ServletWebServerApplicationContext", ".refresh", "(ServletWebServerApplicationContext", ".java", ":", "141", ")\n    at org", ".springframework", ".boot", ".SpringApplication", ".refresh", "(SpringApplication", ".java", ":", "747", ")\n    at org", ".springframework", ".boot", ".SpringApplication", ".refreshContext", "(SpringApplication", ".java", ":", "405", ")\n    at org", ".springframework", ".boot", ".SpringApplication", ".run", "(SpringApplication", ".java", ":", "315", ")\n    at org", ".springframework", ".boot", ".SpringApplication", ".run", "(SpringApplication", ".java", ":", "1226", ")\n    at org", ".springframework", ".boot", ".SpringApplication", ".run", "(SpringApplication", ".java", ":", "1215", ")\n    at com", ".jianlibao", ".JianLiBaoApplication", ".main", "(JianLiBaoApplication", ".java", ":", "22", ")\n    at sun", ".reflect", ".NativeMethodAccessorImpl", ".invoke0", "(Native Method)\n    at sun", ".reflect", ".NativeMethodAccessorImpl", ".invoke", "(NativeMethodAccessorImpl", ".java", ":", "62", ")\n    at sun", ".reflect", ".DelegatingMethodAccessorImpl", ".invoke", "(DelegatingMethodAccessorImpl", ".java", ":", "43", ")\n    at java", ".lang", ".reflect", ".Method", ".invoke", "(Method", ".java", ":", "498", ")\n    at org", ".springframework", ".boot", ".devtools", ".restart", ".RestartLauncher", ".run", "(RestartLauncher", ".java", ":", "49", ")\nCaused by: java", ".lang", ".ClassNotFoundException", ": org", ".springframework", ".boot", ".autoconfigure", ".web", ".EmbeddedServletContainerAutoConfiguration", "\n    at java", ".net", ".URLClassLoader", ".findClass", "(URLClassLoader", ".java", ":", "381", ")\n    at java", ".lang", ".ClassLoader", ".loadClass", "(ClassLoader", ".java", ":", "424", ")\n    at sun", ".misc", ".Launcher", "$AppClassLoader", ".loadClass", "(Launcher", ".java", ":", "349", ")\n    at java", ".lang", ".ClassLoader", ".loadClass", "(ClassLoader", ".java", ":", "357", ")\n    at org", ".springframework", ".boot", ".devtools", ".restart", ".classloader", ".RestartClassLoader", ".loadClass", "(RestartClassLoader", ".java", ":", "144", ")\n    at java", ".lang", ".ClassLoader", ".loadClass", "(ClassLoader", ".java", ":", "357", ")\n    at java", ".lang", ".Class", ".forName0", "(Native Method)\n    at java", ".lang", ".Class", ".forName", "(Class", ".java", ":", "348", ")\n    at org", ".springframework", ".util", ".ClassUtils", ".forName", "(ClassUtils", ".java", ":", "284", ")\n    at org", ".springframework", ".util", ".ClassUtils", ".resolveClassName", "(ClassUtils", ".java", ":", "324", ")\n    ... ", "29", " common frames omitted\nDisconnected from the target VM, ", "address", ": ", "'127.0.0.1:53835'", ", transport: ", "'socket'", "\n\nProcess finished with exit ", "code", " ", "0", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试了进程查找，但启动的时候才会出现端口且时随机的；想给webservice设置一个端口，网上搜了但没找到我需要的答案；还有个奇怪的现象有时候可以启动，", "\n", "我想要达到的结果", "\n", "1.给webservice设置一个端口，使他们启动时不冲突", "2.不设置端口，但解决单口占用", "以上任其一都非常nice了"]], "Tag": "程序设计"}
{"Answer": "根据打印的报错语句，应该是缺少相应的jar包，\r\n1.首先找到org/apache/commons/logging/LogFactory这个应该是在commons-logging.jar中，查看项目是否有这个jar包,或者是否版本冲突\r\n2. Error listenerStart 应该是端口号冲突\r\n3. java.lang.NoClassDefFoundError: org/apache/neethi/builders/AssertionBuilder应该是缺少jar包，查看是否缺少opensaml.jar，或者是否版本冲突", "Konwledge_Point": "名字空间", "Question": ["webservice启动问题，请指教", ["严重: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener", "\njava.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory", "\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:184)", "\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)", "\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3827)", "\n.....", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:566)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1358)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    ... 26 more", "\n2015-8-20 10:09:48 org.apache.catalina.core.StandardContext start", "\n严重: Error listenerStart", "\n2015-8-20 10:09:48 org.apache.catalina.core.StandardContext start", "\n严重: Context [/cxfdemo] startup failed due to previous errors", "\n2015-8-20 10:09:48 org.apache.catalina.core.ApplicationContext log", "\n信息: Closing Spring root WebApplicationContext", "\n2015-8-20 10:09:48 org.apache.catalina.core.StandardContext listenerStop", "\n严重: Exception sending context destroyed event to listener instance of class org.springframework.web.context.ContextLoaderListener", "\njava.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory", "\n    at org.springframework.web.context.ContextCleanupListener.(ContextCleanupListener.java:43)", "\n    at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:80)", "\n    at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:3866)", "\n.....", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:566)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: java.lang.ClassNotFoundException: org.apache.commons.logging.LogFactory", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1358)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    ... 27 more", "\n2015-8-20 10:09:48 org.apache.catalina.loader.WebappClassLoader validateJarFile", "\n信息: validateJarFile(F:\\lianxi.metadata.me_tcat\\webapps\\cxf_demo_noSpring_1\\WEB-INF\\lib\\servlet-api.jar) - jar not loaded. See Servlet Spec 2.3, section 9.7.2. Offending class: javax/servlet/Servlet.class", "\n2015-8-20 10:09:48 org.apache.catalina.core.ApplicationContext log", "\n严重: StandardWrapper.Throwable", "\njava.lang.NoClassDefFoundError: org/apache/neethi/builders/AssertionBuilder", "\n    at java.lang.ClassLoader.defineClass1(Native Method)", "\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:621)", "\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1817)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:872)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1325)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    at java.lang.ClassLoader.defineClass1(Native Method)", "\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:621)", "\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1817)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:872)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1325)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at org.apache.cxf.bus.extension.Extension.getClassObject(Extension.java:129)", "\n\n", "....", "\n    at org.apache.cxf.transport.servlet.CXFNonSpringServlet.loadBus(CXFNonSpringServlet.java:83)", "\n    at com.test.server.WebServlet.loadBus(WebServlet.java:15)", "\n    at org.apache.cxf.transport.servlet.CXFNonSpringServlet.init(CXFNonSpringServlet.java:54)", "\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161)", "\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:981)", "\n。。。。。", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:566)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: java.lang.ClassNotFoundException: org.apache.neethi.builders.AssertionBuilder", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1358)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    ... 55 more", "\n2015-8-20 10:09:48 org.apache.catalina.core.StandardContext loadOnStartup", "\n严重: Servlet /cxf_demo_noSpring_1 threw load() exception", "\njava.lang.ClassNotFoundException: org.apache.neethi.builders.AssertionBuilder", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1358)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    at java.lang.ClassLoader.defineClass1(Native Method)", "\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:621)", "\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1817)", "\n..", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)", "\n    at java.lang.ClassLoader.defineClass1(Native Method)", "\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:621)", "\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)", "\n    at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1817)", "\n..", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1204)", "\n    at org.apache.cxf.bus.extension.Extension.getClassObject(Extension.java:129)", "\n.....", "\n    at com.test.server.WebServlet.loadBus(WebServlet.java:15)", "\n    at org.apache.cxf.transport.servlet.CXFNonSpringServlet.init(CXFNonSpringServlet.java:54)", "\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161)", "\n......", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\n2015-8-20 10:09:48 org.apache.coyote.http11.Http11Protocol start", "\n\n", "\n", "URL url = new URL(\"http://localhost:8081/Gz_hbjService?wsdl\");", "\n", "\n", "//Qnameqname是qualified name 的简写", "\n", "\n", "//2.构成：由名字空间(namespace)前缀(prefix)以及冒号(:),还有一个元素名称构成", "\n", "\n", "//由发布的wsdl可知namespace为", "http://server.ws.platform.whaty.com/，", "\n", "\n", "QName qname=new QName(\"", "http://ws.gz_hbj.wasoft.com/\",\"Gz_hbjService\"", ");", "\n", "\n", "Service service=Service.create(url, qname);", "\n", "\n", "IMyservice ms=service.getPort(IMyservice.class);", "\n", "Gz_Hbj_Jjhz qc = new Gz_Hbj_Jjhz();", "\n", "qc.setA075(\"0102\");", "\n", "qc.setP015(\" \");", "\n", "qc.setKsrq(\"2015-08-01\");", "\n", "qc.setJsrq(\"2015-08-20\");", "\n", "qc.setJkfs((short) 0);", "\n", "\n", "Gz_Hbj_Jjhz[] gzHbjJjhzArray = new Gz_Hbj_Jjhz[20];", "\n", "gzHbjJjhzArray = ms.gz_Hbj_Jjhz(qc , 0, 0);", "xsd:schema", "\n", "/xsd:schema", "\n", "xsd:schema", "\n", "/xsd:schema", "\n\n \n服务器确实是起来了但是客户端访问出现问题不知道wei什么", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n import java.io.File;\r\nimport java.text.DecimalFormat;\r\n\r\npublic class Ypxx {\r\n    public static void main(String[] args) {\r\n        File[] roots = File.listRoots();// 获取磁盘分区列表\r\n        for (File file : roots) {\r\n            System.out.println(file.getPath() + \"信息如下:\");\r\n            long free = file.getFreeSpace();\r\n            long total = file.getTotalSpace();\r\n            long use = total - free;\r\n            System.out.println(\"空闲未使用 = \" + change(free) + \"G\");// 空闲空间\r\n            System.out.println(\"已经使用 = \" + change(use) + \"G\");// 可用空间\r\n            System.out.println(\"总容量 = \" + change(total) + \"G\");// 总空间\r\n            System.out.println(\"使用百分比 = \" + bfb(use, total));\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n    public static long change(long num) {\r\n        // return num;\r\n        return num / 1024 / 1024 / 1024;\r\n    }\r\n\r\n    public static String bfb(Object num1, Object num2) {\r\n        double val1 = Double.valueOf(num1.toString());\r\n        double val2 = Double.valueOf(num2.toString());\r\n        if (val2 == 0) {\r\n            return \"0.0%\";\r\n        } else {\r\n            DecimalFormat df = new DecimalFormat(\"#0.00\");\r\n            return df.format(val1 / val2 * 100) + \"%\";\r\n        }\r\n    }\r\n}\r\n\r\n```", "Konwledge_Point": "名字空间", "Question": ["java，如何获取硬盘分区信息", ["java，如何获取硬盘分区信息,包括服务器所有硬盘信息，以及硬盘分区信息，包含当前磁盘总空间和可用空间。谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意到guessGame::StringGuess的随机串生成逻辑。new得到的字符串**并不是**自动清零的&amp;#xff0c;分配得到的空间自然会存在乱码&amp;#xff0c;而且你的程序有一个致命错误&amp;#xff1a;第i轮有i个字符&amp;#xff0c;但你new得到的数组也只有i长度&amp;#xff0c;没有null字符的位置&amp;#xff08;记得吗&amp;#xff1f;C语言基础&amp;#xff1a;要存储长度为x的字符串&amp;#xff0c;必须分配长度为x&amp;#43;1的char数组&amp;#xff09;&amp;#xff0c;你分配的长度是不足的。你也没有手动添加null字符结尾&amp;#xff0c;所以strcmp在比较时&amp;#xff0c;会因为遇到不是null的字符而认定字符串没有结束&amp;#xff0c;但输入调用是会自动添加null字符的。两个字符串连长度都不同&amp;#xff0c;自然判定为不同。&lt;/p&gt;\n\n&lt;p&gt;总之结论就是&amp;#xff1a;new的时候不能new char[i]而是new char[i&amp;#43;1]&amp;#xff0c;而且在guessGame::StringGuess的for循环随机生成逻辑后&amp;#xff0c;需要手动加一个null字符。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["为什么在字符指针开辟空间后会有空格", ["我直接上源代码吧，在stringguess函数里面，开辟空间之后第一个是有空格存在，第二个是在开辟四个空间之后，后面就有乱码。", "\n\n", "\n\n", "\n\n", "\n\n", "#include<iostream>", "\n#include<stdlib.h>", "\n#include<ctime>", "\n#include<windows.h>", "\n#include<string>", "\n#include<fstream>", "\nusing namespace std;", "\nclass guessGame", "\n{", "\n    int Diffcluty,i;", "\n    char* systemChar=0, * userChar=0;", "\n    string userName;", "\npublic:", "\n    guessGame(int n) :Diffcluty(n),i(1) {};", "\n    char Random(int Difficulty);/*生成随机数*/", "\n    void func();", "\n    void GameInterface();/*游戏界面*/", "\n    void StringGuess();", "\n    void RankingList();/*游戏排行榜*/", "\n    ~guessGame()", "\n    {", "\n        if (systemChar != NULL)", "\n        {", "\n            delete[]systemChar;", "\n            systemChar = NULL;", "\n        }", "\n        if (userChar != NULL)", "\n        {", "\n            delete[]userChar;", "\n            userChar = NULL;", "\n        }", "\n    }", "\n};", "\nchar guessGame::Random(int Difficulty)", "\n{", "\n    ", "\n    char randomInt, randomChar, randomCharSup, randomAll;", "\n    randomInt = rand() % 9 + 48;", "\n    randomChar = rand() % 25 + 65;", "\n    randomCharSup = rand() % 25 + 97;", "\n    randomAll = rand() % 93 + 33;", "\n    switch (Difficulty)", "\n    {", "\n    case 1:/*纯数字*/", "\n    {", "\n        return randomInt;", "\n        break;", "\n    }", "\n    case 2:/*数字字母组合*/", "\n    {", "\n        int i = rand() % 2 + 1;", "\n        if (i == 1)", "\n        {", "\n            return randomInt;", "\n        }", "\n\n", "        else if (i == 2)", "\n        {", "\n            return randomChar;", "\n        }", "\n\n", "        else", "\n        {", "\n            return randomCharSup;", "\n        }", "\n        break;", "\n    }", "\n    case 3:/*全键盘字符*/", "\n    {", "\n        return randomAll;", "\n        break;", "\n    }", "\n    }", "\n\n", "}", "\nvoid guessGame::func()", "\n{", "\n    GameInterface();", "\n    StringGuess();", "\n    RankingList();", "\n}", "\nvoid guessGame::GameInterface()", "\n{", "\n    getchar();", "\n    cout << \"游戏难度选择已完成！\\t按下回车键开始游戏\";", "\n    getchar();", "\n    cout << \"游戏开始倒计时3秒！\\n\";", "\n    for (int i = 0;i < 3;i++)", "\n    {", "\n        /*Sleep(1000);*/", "\n        cout << 3 - i << '\\n';", "\n    }", "\n    cout << \"游戏开始！\";", "\n    system(\"cls\");", "\n}", "\nvoid guessGame::StringGuess()", "\n{", "\n    while (1)", "\n    {", "\n        cout << \"第\" << i << \"轮的字符是:\\n\";", "\n        systemChar = new char[i];", "\n        userChar = new char[i];", "\n        for (int n = 0;n < i;n++)", "\n        {", "\n            systemChar[n]=Random(Diffcluty);", "\n            cout << systemChar[n];", "\n        }", "\n        Sleep(1000);", "\n        system(\"cls\");", "\n        cout << \"请输入你记住的字符\";", "\n        for (int n = 0;n < i;n++)", "\n        {", "\n            cin >> userChar[n];", "\n        }", "\n        if (!strcmp(systemChar, userChar))", "\n        {", "\n            getchar();", "\n            cout << \"恭喜您猜对了^_^！\\n输入回车键进行下一轮\";", "\n            delete[]systemChar;", "\n            systemChar = 0;", "\n            delete[] userChar;", "\n            userChar = 0;", "\n            i++;", "\n            getchar();", "\n            system(\"cls\");", "\n        }", "\n        else", "\n        {", "\n            cout << \"猜错了×_×！正确答案是：\" << systemChar;", "\n            cout << \"\\n您一共进行了\" << i<< \"轮\\n请输入你的名字：\";", "\n            cin >> userName;", "\n            break;", "\n        }", "\n    }", "\n}", "\nvoid GameOperation() /*游戏说明书*/", "\n{", "\n    system(\"cls\");", "\n    cout << \"--------------------游戏说明--------------------\\n\";", "\n    cout << \"玩法：程序会随机显示字符，在规定时间后消失，凭记忆输入这些字符\\n\";", "\n    cout<<\"在每次正确输入后，字符数会增加一个，直到用户输入错误（只要有一个字符不对就算错），这一轮游戏结束\\n\";", "\n    cout << \"本程序具有记录用户成绩排行榜功能。\\n\";", "\n    cout << \"\\t简单模式：由随机的纯数字组成\\n\";", "\n    cout << \"\\t中等模式：由随机的数字与大小写字母组合而成\\n\";", "\n    cout << \"\\t困难模式：由随机的全键盘字符组合而成\\n\";", "\n    cout << \"\\t重新查看游戏说明请按0\\t简单难度输入1\\t中等难度输入2\\t困难难度输入3\\n请选择：\";", "\n}", "\nint main()", "\n{", "\n    //问题一：内存分配时无效", "\n    //问题二：文件读取被覆盖", "\n    srand(time(NULL));  //随机数放到主函数中防止产生重复随机数", "\n    int Diffculty;", "\n    cout << \"\\t查看游戏说明请按0\\t简单难度输入1\\t中等难度输入2\\t困难难度输入3\\n请选择：\";", "\n    cin >> Diffculty;", "\n        while (1)", "\n        {", "\n            if (Diffculty == 0)", "\n                GameOperation();", "\n            else if (Diffculty < 0 || Diffculty>3)", "\n            {", "\n                cout << \"输入错误，请重新输入！\";", "\n            }", "\n            else break;", "\n            cin >> Diffculty;;", "\n    }", "\n    guessGame sSs(Diffculty);//适当调整时间 当每超过2个字符时增加1秒", "\n    sSs.func();", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;_T(&amp;#34;d的值&amp;#34;)这么写&amp;#xff0c;d就是一个字符&amp;#xff0c;MFC不会给你替换的。在InsertColumn前&amp;#xff0c;先用&lt;/p&gt;\n\n&lt;p&gt;CString str;&lt;/p&gt;\n\n&lt;p&gt;str.Format(&amp;#34;%lf&amp;#34;,d);&lt;/p&gt;\n\n&lt;p&gt;m_List.InsertColumn(1, str, LVCFMT_CENTER, rect.Width() / 2, 1);&lt;/p&gt;\n\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["MFC中ListControl空间SetItemText无法显示数据", ["double  d = 0.65；", "\n\n", " ", "\n\n", "m_List.InsertColumn(0, _T(\"原图像文件名\"), LVCFMT_CENTER, rect.Width() / 2, 0);", "\nm_List.InsertColumn(1, _T(\"d的值\"), LVCFMT_CENTER, rect.Width() / 2, 1);", "\n\n", "CFileFind finder;", "\n    CStringList filelist;//文件列表", "\n    BOOL bResult = finder.FindFile(strPathNametwo);", "\n    int i = 0;", "\n    while (bResult)", "\n    {", "\n        bResult = finder.FindNextFile();", "\n        //判断是否是目录或者是隐藏文件，又或者是\"..\"和\".\"，如果是，进入下一轮循环", "\n        if (finder.IsDirectory() || finder.IsDots() || finder.IsHidden())", "\n            continue;", "\n        else//如果是文件", "\n        {", "\n            CString str;", "\n            //得到文件名", "\n            str = finder.GetFileName();", "\n            //得到文件后缀名", "\n            int nLen = str.GetLength() - finder.GetFileTitle().GetLength();", "\n            str = str.Right(nLen);", "\n            //判断文件格式，如果是图像文件，将其完整的路径保存在列表中", "\n            if (str == \".jpg\" || str == \".png\" || str == \".bmp\" || str == \".gif\" || str == \".tif\") {", "\n                filelist.AddTail(finder.GetFilePath());", "\n                CString filePath = finder.GetFilePath();", "\n                Mat imageInput = imread(filePath.GetBuffer(0));", "\n                m_List.InsertItem(index, finder.GetFileName());    // 文件名", "\n                //m_List.SetItemText(index, 1, \"0\");                // 相似度    // 更新", "\n                m_List.SetItemText(index, 1, (LPCTSTR)(&d));", "\n            ", "\n                index++;", "\n                i++;", "\n\n", "\n", "double  d = 0.65；\n\n\n\nm_List.InsertColumn(0, _T(\"原图像文件名\"), LVCFMT_CENTER, rect.Width() / 2, 0);\nm_List.InsertColumn(1, _T(\"d的值\"), LVCFMT_CENTER, rect.Width() / 2, 1);\n\nCFileFind finder;\n    CStringList filelist;//文件列表\n    BOOL bResult = finder.FindFile(strPathNametwo);\n    int i = 0;\n    while (bResult)\n    {\n        bResult = finder.FindNextFile();\n        //判断是否是目录或者是隐藏文件，又或者是\"..\"和\".\"，如果是，进入下一轮循环\n        if (finder.IsDirectory() || finder.IsDots() || finder.IsHidden())\n            continue;\n        else//如果是文件\n        {\n            CString str;\n            //得到文件名\n            str = finder.GetFileName();\n            //得到文件后缀名\n            int nLen = str.GetLength() - finder.GetFileTitle().GetLength();\n            str = str.Right(nLen);\n            //判断文件格式，如果是图像文件，将其完整的路径保存在列表中\n            if (str == \".jpg\" || str == \".png\" || str == \".bmp\" || str == \".gif\" || str == \".tif\") {\n                filelist.AddTail(finder.GetFilePath());\n                CString filePath = finder.GetFilePath();\n                Mat imageInput = imread(filePath.GetBuffer(0));\n                m_List.InsertItem(index, finder.GetFileName());    // 文件名\n                //m_List.SetItemText(index, 1, \"0\");                // 相似度    // 更新\n                m_List.SetItemText(index, 1, (LPCTSTR)(&d));\n            \n                index++;\n                i++;\n                //waitKey(500);//暂停0.5S\n            }\n\n        }\n    }", "\n\n", "\n                //waitKey(500);//暂停0.5S", "\n            }", "\n\n", "        }", "\n    }"]], "Tag": "程序设计"}
{"Answer": "最后解决的方法是\r\n\r\n1.使用PL/SQL “导出用户对象”，会生成一个以原有表空间的表结构。替换下关键，例如原有表空间名为“test1”，使用Editplus打开生成的Sql文件将所有“test1”的关键字替换为“要导入的表空间名”。\r\n\r\n2.使用PL/SQL “导入表”，将刚才改好SQL文件导入，此时在当前用户下的默认表空间里已经生成表结构。\r\n\r\n3.使用exp命令将数据库导出：\r\nexp 用户名/密码@192.168.1.158/orcl owner=用户 grants=y file=D:\\backup\\ZLQHWEB_DATA.dmp log=D:\\backup\\ZLQHWEB_LOG.log\r\n\r\n4.使用imp命令导入：\r\nimp zlwb/zlwb@192.168.1.158/orcl full=y ignore=y file=D:\\\\backup\\\\ZLQHWEB0712_DATA.dmp\r\n因为是不同表空间导入所需需要设置full=y，因为已经存在相应的表结构，所以需要设置ignore=y。", "Konwledge_Point": "名字空间", "Question": ["oracle11G使用expdp、impdp导出导入数据库问题", ["问题描述：我使用oracle11G开发，表空间名称叫TBS_A,得知客户服务器表空间创建成了TBS_B，为了更方便导出数据库到客户服务器，就在自己的数据库也创建了个同名表空间TBS_B。然后将我自己的数据使用imp（不是dp）从TBS_A导入到了TBS_B，然后将自己TBS_B的表空间使用expdp导出成10G版本。但是拿到客户那，使用impdp导入时却提示我TBS_A表空间不存在", "\n\n", "我想问，我导出的是自己数据库的TBS_B,为什么到客户那会提示最初数据库表空间的名字不存在。", "\n\n", "最后加了个 remap_tablespace参数解决，但是不明白为什么会提示最初那个表空间不存在。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有可能是下载QQ&amp;#xff0c;在安装包设置路径时多加入了空格等字符&amp;#xff0c;导致软件被安装在新创建的目录下。&lt;br /&gt;比如&amp;#39;Program Files&amp;#39;多加了一个空格&amp;#xff0c;成为&amp;#39;Program Files &amp;#39;&amp;#xff0c;此时windows会新建目录并储存数据。&lt;br /&gt;可以尝试合并文件夹&amp;#xff08;拷贝文件&amp;#xff09;或调整下载路径&amp;#xff0c;重新下载软件后删除因失误新建的文件夹。&lt;br /&gt;对于需要Administrator权限&amp;#xff08;即超级管理员权限&amp;#xff09;才能进行的操作&amp;#xff0c;您可以打开cmd界面&amp;#xff0c;输入如下指令&amp;#xff0c;回车执行&amp;#xff0c;并重启电脑&amp;#xff0c;再次进行操作。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;指令&amp;#xff1a;net user administrator /active:yes&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;(开启cmd界面的方法&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1、或在Cortana搜索cmd&amp;#xff0c;右键选择“以管理员身份运行”&amp;#xff1b;&lt;br /&gt;2、按下win&amp;#43;R组合快捷键&amp;#xff0c;唤起运行界面&amp;#xff0c;输入cmd&amp;#xff0c;回车运行&amp;#xff1b;&lt;br /&gt;3、或打开任意文件夹&amp;#xff0c;单击地址栏&amp;#xff0c;键入cmd&amp;#xff0c;回车&amp;#xff0c;唤起cmd界面。&lt;br /&gt;注意&amp;#xff1a;方法1仅适用于win10&amp;#xff0c;方法2、3可以兼容win7)&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["电脑D盘出现了两个相同名称的Program Files", ["Win10系统，电脑D盘出现了两个相同名称的Program Files", "\n", "另外新出现的那个文件夹所占空间很小，但是如果点开里面的文件，会显示下图所示信息", "\n", "如果要删除这个新出现的Program Files文件会出现如下信息", "\n", "\n", "请问这是什么原因造成的？要如何能把这个多余的Program Files文件夹删除。"]], "Tag": "程序设计"}
{"Answer": "1分布式 需要多台电脑吗\r\n多台电脑不一定是分布式，分布式肯定是多台电脑\r\n2redis mongodb memache 部署的，直接 部署到 服务器 还是 空间\r\n部署到服务器，或者虚拟服务器\r\n3什么情况下会用到多台电脑\r\n提高一个系统的吞吐量和并发性能\r\n4多线程常用场景\r\n操作系统中每个单独的执行都需要线程，一个进程起码需要一个线程", "Konwledge_Point": "名字空间", "Question": ["分布式。是多台电脑的意思吗", ["1分布式  需要多台电脑吗 ", "\n\n", "2redis   mongodb  memache 部署的，直接 部署到  服务器 还是 空间", "\n\n", "3什么情况下会用到多台电脑", "\n\n", "4多线程常用场景"]], "Tag": "程序设计"}
{"Answer": "1.启动cmd。\r\n\r\n2.输入sqlplus /nolog 然后回车\r\n\r\n3.输入connect 用户名/密码 @服务名 然后回车\r\n\r\n4.delete tablespace 你要删除的表空间名称  然后回车\r\n\r\n按照上面的4步操作就可以了，其实就是sqlplus的操作嘛，呵呵！", "Konwledge_Point": "名字空间", "Question": ["CMD  操作 ORACLE 实例", ["1。 使用CMD 关闭/启动 ORACLE 实例 (详细或者更多的加分)", "\n\n", "2。 （不知道可不可以）： CMD操作删除ORACLE表空间 ", "\n\n", "就是想实现使用CMD 把一个实例的表空间导入另一个实例的表空间（表空间名字一样）", "\n\n", "或者有ORACLE 高手 指点如何使用EM来完成（加分）。"]], "Tag": "程序设计"}
{"Answer": "需要在文件头部加上：\r\n\r\n\r\n\r\n```\r\n using System.Windows.Forms;\r\n```\r\n\r\nMouseEventArgs 属于此命名空间。\r\n\r\n**用心回答每个问题，如果对您有帮助，请采纳答案好吗，谢谢！**", "Konwledge_Point": "名字空间", "Question": ["基于VisualStudio的MapXtremeC#web开发", ["报错找不到类型或命名空间名称\"MouseEventArgs\"(是否缺少 using 指令或程序集引用?)代码如下：", "\nprivate void MapControl1_MouseMove(object sender, MouseEventArgs e)", "\n{", "\nSystem.Drawing.PointF DisplayPoint = new PointF(e.X, e.Y);//创建二维平面中点的 x 和 y 坐标的有序对 ", "\nMapInfo.Geometry.DPoint MapPoint = new MapInfo.Geometry.DPoint();//创建图层点 ", "\nMapInfo.Geometry.DisplayTransform converter = this.mapControl1.Map.DisplayTransform; converter.FromDisplay(DisplayPoint, out MapPoint);", "\n// 显示坐标中的一个点转换为地图或图层坐标中的点 ", "\nthis.statusBar1.Text = \"Cursor Location: \" + MapPoint.x.ToString() + \", \" + MapPoint.y.ToString();", "\n}", "\n刚接触，还未入门，我知道可能问题比较简单，还请指点一下，不胜感激！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/820564359556199.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MyTeam&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; teamName[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//团队名字&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; teamNmb; &lt;span class=\"hljs-comment\"&gt;//人数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; **teamPsn; &lt;span class=\"hljs-comment\"&gt;//团队成员&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; jz;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; BJFU;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;School&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;MyTeam&lt;/span&gt;()\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入团队名称&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; teamName;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入成员人数&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; teamNmb;\n        \n        teamPsn &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*[teamNmb];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; teamNmb; i&amp;#43;&amp;#43;)\n        {\n            teamPsn[i] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;个人的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n            cin &amp;gt;&amp;gt; teamPsn[i];\n        }\n        jz &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;构造函数被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n    ~&lt;span class=\"hljs-built_in\"&gt;MyTeam&lt;/span&gt;()\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; teamNmb; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt;[] teamPsn[i];\n            teamPsn[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt;[] teamPsn;\n        teamPsn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;析构函数被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n\n    &lt;span class=\"hljs-built_in\"&gt;MyTeam&lt;/span&gt;(MyTeam&amp;amp; t)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(teamName,t.teamName);\n        teamNmb &amp;#61; t.teamNmb;\n\n        teamPsn &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* [teamNmb];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; teamNmb; i&amp;#43;&amp;#43;)\n        {\n            teamPsn[i] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n            &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(teamPsn[i],t.teamPsn[i]);\n        }\n        jz &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;复制构造函数被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getBJFURewardNum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; BJFU; }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;winReward&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{ jz&amp;#43;&amp;#43;; BJFU&amp;#43;&amp;#43;; }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* &lt;span class=\"hljs-title\"&gt;getTeamName&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; teamName; }\n\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, MyTeam&amp;amp; t);\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;gt;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2);\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;#61;&amp;#61;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2);\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2);\n};\nostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, MyTeam&amp;amp; t)\n{\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;团队名称&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.teamName &amp;lt;&amp;lt; endl;\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;团队人数&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.teamNmb &amp;lt;&amp;lt; endl;\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;成员姓名&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; t.teamNmb; i&amp;#43;&amp;#43;)\n        os &amp;lt;&amp;lt; t.teamPsn[i];\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;奖章个数&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.jz &amp;lt;&amp;lt; endl;\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输出运算符被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;gt;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2)\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;运算符被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t1.jz &amp;gt; t2.jz)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;#61;&amp;#61;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2)\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#61;运算符被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t1.jz &amp;#61;&amp;#61; t2.jz)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt;(MyTeam&amp;amp; t1, MyTeam&amp;amp; t2)\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;运算符被调用啦&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t1.jz &amp;lt; t2.jz)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; MyTeam::BJFU &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;School&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getTeamInfo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(MyTeam&amp;amp; team)&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; team &amp;lt;&amp;lt; endl;\n    }\n};\n\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    MyTeam* t1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;MyTeam&lt;/span&gt;();\n    &lt;span class=\"hljs-function\"&gt;MyTeam &lt;span class=\"hljs-title\"&gt;t2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(*t1)&lt;/span&gt;&lt;/span&gt;;\n    MyTeam* t3 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;MyTeam&lt;/span&gt;();\n    School sc;\n    t1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;winReward&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;BJFU奖章个数&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; MyTeam::&lt;span class=\"hljs-built_in\"&gt;getBJFURewardNum&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (*t1 &amp;gt; *t3)\n        cout &amp;lt;&amp;lt; t1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;getTeamName&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;比&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt; t3-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;getTeamName&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;的奖章多&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*t1 &amp;#61;&amp;#61; *t3)\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;两个团队的奖章一样多&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*t1 &amp;lt; *t3)\n        cout &amp;lt;&amp;lt;t3-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;getTeamName&lt;/span&gt;()&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;比&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;t1-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;getTeamName&lt;/span&gt;()&amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;的奖章多&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    \n    sc.&lt;span class=\"hljs-built_in\"&gt;getTeamInfo&lt;/span&gt;(*t1);\n    sc.&lt;span class=\"hljs-built_in\"&gt;getTeamInfo&lt;/span&gt;(t2);\n    sc.&lt;span class=\"hljs-built_in\"&gt;getTeamInfo&lt;/span&gt;(*t3);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["c++类问题 （奖章问题）太长了来不及做了", ["定义一个MyTeam类，包含普通成员变量：团队的名字、成员人数，成员姓名的指针，奖章个数；静态成员变量：BJFU奖章个数（初始值为0）。", "2.定义该类的成员函数：", "1）构造函数，提示用户输入成员人数，开辟数组空间，用户键盘输入成员姓名，同时输出“构造函数被调用啦”", "2）析构函数，输出“析构函数被调用啦”；", "3)复制构造函数，实现对象的复制功能，并且输出“复制构造函数被调用啦”；", "4）静态成员函数getBJFURewardNum，返回BJFU奖章个数的值；", "6）成员函数winReward，奖章个数加一，同时BJFU奖章个数加一；", "7）输出运算符重载，输出团队介绍，将团队的所有信息打印输出，并输出“输出运算符被调用啦”；8）>==和<这三个运算符重载，通过比较奖章个数大小来比较对象的大小，并分别输出“*运算符被调用啦”；", "9）定义一个友元类School，包含一个成员函数getTeamInfo，实现输出MyTeam类对象的成员姓名和奖章个数。", "3.在main函数中分别测试以上成员函数及友元类。"]], "Tag": "程序设计"}
{"Answer": "```\r\nimport sys\r\n\r\nif len(sys.argv) == 1:\r\n\tprint(\"Error: Usage like python a.py 5 tommy\")\r\n\texit(0)\r\n\r\nheight = int(sys.argv[1])\r\nif height%2 == 0:\r\n\tprint(\"Error: title height must be an odd number\")\r\n\texit(0)\r\n\r\nwidth = 3 * height\r\nname = sys.argv[2]\r\nif(len(name) &gt; width or len(name) == width or (width-len(name))%2 != 0):\r\n\tprint(\"Error: name must fit within %d characters\"%width)\r\n\texit(0)\r\n\r\n\r\nfor i in range(1,(height-1)//2+1,1):\r\n\tprint(\"-\"*((width-3*(2*i-1))//2) + \"+|+\"*(2*i-1) + \"-\"*((width-3*(2*i-1))//2))\r\n\r\nprint(\"-\"*((width-len(name))//2) + name + \"-\"*((width-len(name))//2))\r\n\r\nfor i in range((height-1)//2,0,-1):\r\n\tprint(\"-\"*((width-3*(2*i-1))//2) + \"+|+\"*(2*i-1) + \"-\"*((width-3*(2*i-1))//2))\r\n```", "Konwledge_Point": "名字空间", "Question": ["Python3 根据命令行给的参数打印图像", ["油毡瓦公司最近建立了一个新的在线商店，并展示其进入数字空间，它希望允许其成员创建自定义数字瓷砖。 数字图块的示例如下。", "\ntile（磁贴）公司已要求您编写一个程序，该程序将根据某些命令行参数输出数字磁贴。", "\n\n", "第一个命令行参数是tile（磁贴）的高度", "\n\n", "第二个命令行参数是成员的名称，应该包含在磁贴中心的大写字母中", "\n\n", "有一些限制要记住瓷砖的大小。", "\n\n", "图块的高度必须是奇整数。", "\n\n", "瓷砖的宽度恰好是瓷砖高度的3倍", "\n\n", "成员的名称必须符合图块的宽度，否则无法生成图块", "\n\n", "您可以假设将提供所有命令行参数，并且可以将第一个参数强制转换为整数。", "\n\n", "\n\n", "我已经写的：", "\n\n", "import sys\nheight = int(sys.argv[1])\nname = sys.argv[2]\nwidth = 3 * height\nprint(\"---\"*(height//2)+)\n\n"]], "Tag": "程序设计"}
{"Answer": "你没有加自动增加吧，在建表的时候不应该先加 AUTO_INCREMENT。例如：create table aaa\r\n(\r\naid INT AUTO_INCREMENT PRIMARY KEY, \r\n)", "Konwledge_Point": "名字空间", "Question": ["关于mysql数据库的小问题", ["数据库-----------------------------------", "\n # 名字 类型 整理 属性 空 默认 额外 操作 ", "\n 1 aid int(10)  UNSIGNED 否  无   修改  删除  主键 唯一 索引 空间 全文搜索 非重复值 (DISTINCT)更多", "\n\n", "2 number tinyint(3)  UNSIGNED 否  无   修改  删除  主键 唯一 索引 空间 全文搜索 非重复值 (DISTINCT)", "\n\n", "aid  number ", "\n0    2 ", "\n0    2 ", "\n\n", "为什么aid 都是0呢 不是1 2 3 4..这样的自动增长", "\n\n", "如何才能自动变化着增长呢？", "\n\n", "注册页面", "\n\n", "<?php", "\nif($_POST[\"submit\"]){", "\n\n", "$_SESSION['magic_user']=$_POST['username'];", "\n$sql=\"insert into magic_user values('','\".$_POST['username'].\"','\".($_POST['password']).\"')\";", "\n$result=mysql_query($sql)or die(mysql_error());", "\n$_SESSION['magic_useraddnumber']=$_POST['number'];", "\n$sql=\"insert into magic_useraddnumber values('','\".$_POST['number'].\"')\";", "\n$result=mysql_query($sql)or die(mysql_error());", "\n$_SESSION['magic_useraddorder']=$_POST['prizeid '];", "\n$sql=\"insert into magic_useraddorder values('','\".$_POST['prizeid '].\"')\";", "\n$result=mysql_query($sql)or die(mysql_error());", "\nif($result)", "\necho \"alert(&#39;恭喜你注册成功,马上进入主页面&#39;);location=&#39;index.php&#39;;\";", "\nelse", "\n{", "\n    echo \"alert(&#39;注册失败&#39;);location=&#39;in.php&#39;;\";", "\n    mysql_close();", "\n}", "\n    }", "\n\n", "?>", "\n\n", "   \n\n", "请先填写您的资料：", "\n\n", "\n请输入您的密码:\n", "\n\n", "\n请输入您的名称:\n", "\n\n", "\n\n", "\n\n", "\n", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "grant GRANT ANY OBJECT PRIVILEGE to user\r\n那个权限不够，用这个", "Konwledge_Point": "名字空间", "Question": ["关于在oracle的function中动态创建表结构的问题~~~", ["create or replace function jfids.sys_createobjectcopy (", "\n   puser         in varchar2,                                      --用户或schama", "\n   ptype         in varchar2,                --对象类型=table,view,function,...etc", "\n   pobjectname   in varchar2,                                           --对象名称", "\n   pdestuser     in varchar2                                     --目标用户或schama", "\n                            )", "\n   return number", "\nis", "\n   /******************************************************************************", "\n      NAME:       sys_createobjectcopy", "\n      PURPOSE:    根据已知的对象创建对象副本(从一个表空间到另一个表空间)", "\n      REVISIONS:", "\n      Ver        Date        Author           Description", "\n      ---------  ----------  ---------------  ------------------------------------", "\n      1.0        2012/3/15   showgo       1. Created this function.", "\n      NOTES:", "\n      Automatically available Auto Replace Keywords:", "\n         Object Name:     sys_createobjectcopy", "\n         Sysdate:         2012/3/15", "\n         Date and Time:   2012/3/15, 16:28:23, and 2012/3/15 16:28:23", "\n         Username:        showgo (set in TOAD Options, Procedure Editor)", "\n         Table Name:       (set in the \"New PL/SQL Object\" dialog)", "\n   ******************************************************************************/", "\n   --vars", "\n   retcode       integer;", "\n   vcursor       integer;", "\n   vcnt          integer;", "\n   --clob to varchar2 array", "\n   vscript       clob;", "\n   vscriptblob   blob;", "\n   vtmpblob      blob;", "\n   loblen        integer;", "\n   buffer        integer := 4000;", "\n   vsql          varchar2 (32767 byte);", "\n   vtmp          varchar2 (4000 byte);", "\n   --call convert blob param", "\n   dest_offset   integer;", "\n   src_offset    integer;", "\n   lang_ctx      integer := dbms_lob.default_lang_ctx;", "\n   warning       integer;", "\n   --exception", "\n   script_overlength_exception exception;", "\nbegin", "\n   retcode := 0;", "\n\n", "/*", "\n\n", "\n", "\n", "参数验证", "\n*/", "\n\n", "if (puser is null or puser = '')", "\nthen", "\n  return 0;", "\nend if;", "\n\n", "if (pdestuser is null or pdestuser = '')", "\nthen", "\n  return 0;", "\nend if;", "\n\n", "if (ptype is null or ptype = '')", "\nthen", "\n  return 0;", "\nend if;", "\n\n", "if (pobjectname is null or pobjectname = '')", "\nthen", "\n  return 0;", "\nend if;", "\n\n", "/*", "\n", "\n", "\n", "取得对象的脚本的字符串(脚本可能很长,故先截取再组装)", "/", "\nbegin", "\n  vscript := dbms_metadata.get_ddl (ptype, pobjectname, puser);", "\n  /", "\n  vscript := replace (vscript, upper (puser), upper (pdestuser));", "\n  dbms_lob.converttoblob (vscriptblob,", "\n                          vscript,", "\n                          dbms_lob.lobmaxsize,", "\n                          dest_offset,", "\n                          src_offset,", "\n                          dbms_lob.default_csid,", "\n                          lang_ctx,", "\n                          warning);", "\n  */", "\n  vscriptblob := sys_clob2blob (vscript);", "\n  loblen := dbms_lob.getlength (vscriptblob);", "\n\n", "if (loblen > 0)", "\n  then", "\n     vcnt := ceil (loblen / buffer);", "\n     vsql := '';", "\n\n", " for i in 1 .. vcnt\n loop\n    loblen := dbms_lob.getlength (vscriptblob);\n\n    if (loblen <= buffer)\n    then\n       buffer := loblen;\n    end if;\n\n    vtmpblob := dbms_lob.substr (vscriptblob, buffer, 1);\n    vtmp :=\n       utl_raw.cast_to_varchar2(utl_raw.convert (\n                                   vtmpblob,\n                                   'simplified chinese_china.zhs16gbk',\n                                   'simplified chinese_china.zhs16gbk'));\n    vscriptblob :=\n       dbms_lob.substr (vscriptblob, loblen - buffer, buffer + 1);\n    vsql := vsql || vtmp;\n end loop;\n", "\n\n", "else", "\n     return 0;", "\n  end if;", "\n\n", "/*", "\n\n", "\n", "按照脚本创建对象", "\n", "创建之前,需要将原对象中用户(或schama)和表空间替换成新的用户(或schama)和表空间", "\n", "\n", "注意: 默认用户及表空间使用的是同一名称.", "\n*/", "\n--vsql := trim (replace (vsql, puser, pdestuser));", "\n--vcursor := dbms_sql.open_cursor;", "\n--dbms_sql.parse (dbms_sql.open_cursor, vsql, dbms_sql.native);", "\n--dbms_sql.close_cursor (vcursor);", "\n\n", "--vsql := TRIM (REPLACE (vsql, puser, pdestuser));", "\nvsql :=", "\n 'create table ''saas_98304''.tc_sex1(code varchar2(2),text varchar2(8),memo varchar2(80))';", "\n\n", "execute immediate vsql;", "\nexception", "\nwhen no_data_found", "\nthen", "\n retcode := 0;", "\n rollback;", "\nwhen others", "\nthen", "\n retcode := 0;", "\n rollback;", "\nend;", "\n", "\n", "\n", "return retcode;", "\nexception", "\nwhen no_data_found", "\nthen", "\n  retcode := 0;", "\n  rollback;", "\nwhen others", "\nthen", "\n  -- Consider logging the error and then re-raise", "\n  retcode := 0;", "\n  rollback;", "\n  raise;", "\nend sys_createobjectcopy;", "\n/", "\n类似以上的代码在function中。", "\n背景:此function为用户JFIDS的对象，执行时要求能将用户JFIDS下的某些对象(比如表tc_sex)创建到另一用户saas_98304下。红色字体处为另一函数，未给出(其作用是将一个clob值转换成blob值)，绿色字体处是一段测试代码，意思就是运行完后希望能得到在saas_98304用户下一个表tc_sex。貌似在pl/sql环境能正常执行，但是一旦写到function中就要报异常了，另外用户jfids已经有创建表结构的权限了。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "ElemType *p=realloc(L-&gt;list,2*L-&gt;MaxSize*sizeof(ElemType));\r\n-&gt;\r\nElemType *p=(int *)realloc(L-&gt;list,2*L-&gt;MaxSize*sizeof(ElemType));", "Konwledge_Point": "名字空间", "Question": ["求大佬帮忙类型无法转化，怎么办 error C2440: '=' : cannot convert from 'void *' to 'int *'", ["struct Room room[60];", "\nstruct Customer ", "customer[60];", "\n//diancai", "\nstruct cai   /*cai结构体 实现对菜品 已点份数、名称、原材料 的记录", "/", "\n{", "\n    int  fenshu;", "\n    char name[50];", "\n    int  use;", "\n    int  price;", "\n};", "\nstruct List    /*该线性表实现对菜品原材料的剩余量的记录，线性表【i】对应菜品的点餐菜单编码*/", "\n{", "\n    ElemType* list;", "\n    int size;", "\n    int MaxSize;", "\n};", "\n/*以下为线性表的函数*/", "\nvoid InitList(struct List* L,int ms)", "\n{", "\n    if(ms<=0){printf(\"ms 值非法！\\n\");exit(1);}", "\n    L->MaxSize=ms;", "\n    L->list=malloc(ms*sizeof(ElemType*));", "\n    if(!L->list)", "\n    {", "\n        printf(\"动态存储分配失败！\");", "\n        exit(1);", "\n    }", "\n    L->size=0;", "\n}", "\nvoid againMalloc(struct List *L)", "\n{", "\n    ElemType *p=realloc(L->list,2*L->MaxSize*sizeof(ElemType));", "\n    if(!p){", "\n    printf(\"分配存储空间失败！\");", "\n    exit(1);", "\n    }"]], "Tag": "程序设计"}
{"Answer": "8.0.12不一定有，但是MySql.Data.dll肯定有支持.net 4.0的。你为什么非要8.0.12呢", "Konwledge_Point": "名字空间", "Question": ["MySql.Data.dll 8.0.12有合适.NET FRAMEWORK4.0项目引用的版本吗？", ["如题，官方网站下载mysql-connector-net-8.0.12.msi安装之后，MySql.Data.dll在路径...\\MySQL\\MySQL Connector Net 8.0.12\\Assemblies\\v4.5.2中，假如引用项目的目标框架是.NET Framework 4.5.2则正常，改为.NET Framework 4则编译报错，提示“    1   未能找到类型或命名空间名称“MySql”(是否缺少 using 指令或程序集引用?)”，虽然在解决方案资源管理器-项目引用-MySql.Data右键菜单属性中看到该dll的运行时版本是v4.0.30319，但是若项目的目标框架设置为.NET Framework 4却会出错，只能设置为.NET Framework 4.5.2。我觉得安装之后MySql.Data.dll的路径目录说明了问题，为什么安装之后MySql.Data.dll只有在v4.5.2目录下？是MySql.Data.dll 8.0.12只能用于.NET Framework 4.5.2的项目吗？还是下载时根据我的电脑最高的Framework版本给我这个安装包？如果我的电脑最高的Framework版本是4.0，能下载到安装之后MySql.Data.dll在v4目录下的安装包吗？哪位热心的高手能帮忙验证一下？如果不更改电脑最高的Framework版本（因为修改卸载太麻烦了），能找到适合.NET Framework 4项目引用的mysql-connector-net-8.0.12.msi安装包或MySql.Data.dll 8.0.12吗？  哪位高手帮下忙，不胜感激！"]], "Tag": "程序设计"}
{"Answer": "本来就是这样，要么放在一个项目中，要么强签名后注册到gac中。", "Konwledge_Point": "名字空间", "Question": ["C# 接口 反射 奇怪的问题", ["1、定义一个接口，用于获取用户的功能点。因为有些项目中甲方有自己的权限平台，所以这里反接口开放出来。", "\n    public interface IUserFuns", "\n    {", "\n        List GetFunCodes(string userID);", "\n    }", "\n2。我的系统中也自己做了一套授权功能。实现1中的接口", "\n        public List GetFunCodes(string userID)", "\n        {", "\n            List modules = new List();", "\n            modules.Add(\"0000\");", "\n            modules.Add(\"0001\");", "\n            modules.Add(\"0002\");", "\n            modules.Add(\"0003\");", "\n            modules.Add(\"0004\");", "\n            return modules;", "\n        }", "\n    }  这只是用来测试的。", "\n3、    接口开放在配置文件里，", "\n    <!---->", "\n4、根据配置文件的信息，获取功能点权限", "\n                            //获取类信息 动态调用", "\n                            Assembly asb = Assembly.LoadFile(assName);", "\n                            object obj = asb.CreateInstance(section.TypeName);", "\n                            if (typeof(IUserFuns).IsInstanceOfType(obj))", "\n                            {", "\n                                IUserFuns module = obj as IUserFuns;", "\n                                listCodes = module.GetFunCodes(userID);", "\n                            }", "\nassName是实现接口的文件的全路径名称", "\nsection.TypeName是实现接口的类的全名称,命名空间命+类名", "\n5、问题：4中的判断，if (typeof(IUserFuns).IsInstanceOfType(obj))", "\n如果obj跟IUserFuns在同一个项目中typeof(IUserFuns).IsInstanceOfType(obj)就是false,如果obj跟IUserFuns不在同一个项目中，typeof(IUserFuns).IsInstanceOfType(obj)就是true,这是为什么？"]], "Tag": "程序设计"}
{"Answer": "http的配置，yaml基本与git上[kubernetes/ingress-nginx](https://github.com/kubernetes/ingress-nginx/tree/master/deploy \"\")相同\r\n\r\n后来将命名空间都改成了kube-system可以了，所以问题还在namespace或RBAC上，但是还没找到真正原因", "Konwledge_Point": "名字空间", "Question": ["k8s ingress无法绑定到指定的服务上？", ["服务名称和端口均正确，命名空间也是没有问题的     ", "\n\n", " NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\ndefault-http-backend   ClusterIP   10.101.13.70     <none>        80/TCP                       119m\neureka-server          NodePort    10.101.111.123   <none>        1111:30405/TCP               118m\ningress-nginx          NodePort    10.98.24.170     <none>        80:30479/TCP,443:30469/TCP   117m\nproducer-server        ClusterIP   10.111.148.42    <none>        1112/TCP                     118m\nzuul-server            ClusterIP   10.109.157.196   <none>        1115/TCP                     118m\n", "\n\n", "为什么还是none？  有相同情况的吗", "\n\n", " Name:             gateway-ingress\nNamespace:        ingress-nginx\nAddress:          \nDefault backend:  default-http-backend:80 (<none>)\nRules:\n  Host         Path  Backends\n  ----         ----  --------\n  foo.bar.com  \n               /eur   eureka-server:1111 (<none>)\n               /pro   producer-server:1112 (<none>)\n               /zuu   zuul-server:1115 (<none>)\nAnnotations:\n  kubernetes.io/ingress.class:  nginx\nEvents:\n  Type    Reason  Age   From                      Message\n  ----    ------  ----  ----                      -------\n  Normal  CREATE  49m   nginx-ingress-controller  Ingress ingress-nginx/gateway-ingress\n"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_39352976/article/details/111475142\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;Nacos集成分布式事务Seata文档&lt;/font&gt;&lt;/a&gt; 中也许有你想要的答案&amp;#xff0c;请看下吧&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "名字空间", "Question": ["nacos-seata 分布式项目回滚无效", ["dubbo -seata -nacos 分布式项目 只有 项目a可以回滚，项目b复制的a项目 也不行，下面是项目a的yml", "\n", "\n", "dubbo:", "\n  ", "application:", "\n    ", "name:", " ", "provider-server", "\n  ", "#  ", "\n  ", "registry:", "\n    ", "address:", "  ", "nacos://192.168.1.9:8848", "\n    ", "#address: zookeeper://192.168.1.231:2181,192.168.1.230:2181,192.168.1.232:2181", "\n    ", "#address: zookeeper://192.168.1.9:2181", "\n    ", "timeout:", " ", "60000", "\n\n  ", "scan:", "\n    ", "base-packages:", " ", "com.example.producer.service", "\n\n\n  ", "protocol:", "\n    ", "#协议的名称", "\n    ", "name:", " ", "dubbo", "\n    ", "#端口号", "\n    ", "port:", " ", "20896", "\n  ", "config-center:", "\n    ", "timeout:", " ", "600000", "\n\n\n", "seata:", "\n\n  ", "enabled:", " ", "true", "\n  ", "application-id:", " ", "storage-seata-example", "\n  ", "config:", "\n    ", "type:", " ", "nacos", "\n    ", "nacos:", "\n      ", "namespace:", " ", "98917230", "-3fbd-4e74-b0e0-8891f2da0496", "\n      ", "server-addr:", " ", "192.168", ".1", ".9", ":8848", "\n      ", "username:", " ", "nacos", "\n      ", "password:", " ", "nacos", "\n      ", "data-id:", " ", "server-seata", "\n      ", "#对应noces 命名空间 的配置文件的 data id", "\n      ", "group:", " ", "DEFAULT_GROUP", "\n\n  ", "registry:", "\n    ", "type:", " ", "nacos", "\n    ", "nacos:", "\n      ", "group:", " ", "DEFAULT_GROUP", "\n      ", "server-addr:", " ", "192.168", ".1", ".9", ":8848", "\n      ", "username:", " ", "nacos", "\n      ", "password:", " ", "nacos", "\n      ", "namespace:", " ", "98917230", "-3fbd-4e74-b0e0-8891f2da0496", "\n      ", "cluster:", " ", "default", "\n\n\n  ", "tx-service-group:", " ", "default_tx_group", "\n  ", "service:", "\n    ", "vgroup-mapping:", "\n      ", "default_tx_group:", " ", "default", "\n      ", "# 关闭自动代理", "\n  ", "enable-auto-data-source-proxy:", " ", "true", "\n  ", "data-source-proxy-mode:", " ", "AT", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;hi opencv我不熟&amp;#xff0c;可以试着讨论一下&lt;br /&gt;如果库找不到一般是如上面说的去找库的路径没有设置 &amp;#xff0c;把包含这个库的路径加进去opencv_world451d.lib&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["win中的visual studio 2017配置OpenCV", ["win11 中的visual studio 2017和win10 中的visual studio 2015配置opencv4.10时按照冯振的OpenCV 4快速入门里面的配置方法都出现了", "\n", "1>d:\\opencv\\opencv4_text\\opencv4_text\\main.cpp(11): error C3867: “cv::Mat::empty”: 非标准语法；请使用 \"&\" 来创建指向成员的指针", "这样的错误，哪位能够指点一下，万分感谢！", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", " ", "<opencv2\\opencv.hpp>", " ", "//加载Opencv 4.1头文件", "\n", "#", "include", " ", "<iostream>", "\n\n", "using", " ", "namespace", " std;\n", "using", " ", "namespace", " cv; ", "//Opencv的命名空间", "\n\n", "int", " ", "main", "()", "\n", "{\n    Mat img;", "//声明一个保存图像的类", "\n    img = ", "imread", "(", "\"D:/p/1.jpg\"", ");", "//读取图像，根据图片所在位置填写路径即可", "\n    ", "if", " (img.", "empty", "()) ", "//判断图像文件是否存在", "\n    {\n        cout << ", "\"请确认图像文件名称是否正确\"", " << endl;\n        ", "return", " ", "-1", ";\n    }\n    ", "imshow", "(", "\"test\"", ", img); ", "//显示图像", "\n    ", "waitKey", "(", "0", "); ", "//等待键盘输入", "\n    ", "return", " ", "0", ";", "//程序结束", "\n}\n", "\n", "\n", "1>\\ 已启动生成: 项目: Project1, 配置: Debug x64\\", "\n", "1>main.cpp", "1>LINK : fatal error LNK1104: 无法打开文件“opencv_world451d.lib”", "1>已完成生成项目“Project1.vcxproj”的操作 - 失败。", "\\生成: 成功 0 个，失败 1 个，最新 0 个，跳过 0 个 \\", "\n", "我想要达到的结果", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "用jdbc去做嘛，先去熟悉看下jdbc的api，里面是有DatabaseMetaData这个类最重要\r\n\r\n\r\n\r\n\r\npublic interface DatabaseMetaData关于数据库的整体综合信息。 \r\n\r\n此接口由驱动程序供应商实现，让用户了解 Database Management System (DBMS) 在与驱动程序（基于与其一起使用的 JDBCTM 技术（“JDBC 驱动程序”））相结合时的能力。不同的关系 DBMS 常常支持不同的功能，以不同方式实现这些功能，并使用不同的数据类型。此外，驱动程序可以实现 DBMS 提供的顶级功能。此接口中的方法返回的信息关系到一起工作的特定驱动程序和特定 DBMS 的能力。注意，正如此文档中所使用的那样，术语“数据库”通常既指驱动程序，又指 DBMS。 \r\n\r\n此接口的用户通常是一个需要发现如何处理基础 DBMS 的工具。对于试图与多个 DBMS 一起使用的应用程序而言尤其如此。例如，一个工具可能使用 getTypeInfo 方法找出可以在 CREATE TABLE 语句中使用的数据类型。或者用户可能调用 supportsCorrelatedSubqueries 方法查看是否可以使用相关子查询，或者调用 supportsBatchUpdates 查看是否可以使用批量更新。 \r\n\r\n有些 DatabaseMetaData 方法以 ResultSet 对象的形式返回信息列表。常规 ResultSet 方法，比如 getString 和 getInt，可用于从这些 ResultSet 对象中检索数据。如果给定形式的元数据不可用，则 ResultSet 获取方法抛出 SQLException。 \r\n\r\n有些 DatabaseMetaData 方法使用 String 模式的参数。这些参数都有 fooPattern 这样的名称。在模式 String 中，\"%\" 表示匹配 0 个或多个字符的任何子字符串，\"_\" 表示匹配任何一个字符。仅返回匹配搜索模式的元数据项。如果将搜索模式参数设置为 null，则从搜索中删除参数标准。 \r\n\r\n获得关于驱动程序不支持功能的信息的方法将抛出 SQLException。在这些方法返回 ResultSet 对象的情况下，要么返回一个 ResultSet 对象（可能为空），要么抛出 SQLException。", "Konwledge_Point": "名字空间", "Question": ["如何能够自动生成这样的脚本", ["有一个表sanny_goods，", "\n通过developer的“输出数据库对象”功能可以得到如下脚本", "\n[code=\"sql\"]create table SANNY_GOODS", "\n(", "\n  CODE  VARCHAR2(100),", "\n  NAME  VARCHAR2(100),", "\n  PRICE BINARY_DOUBLE,", "\n  TOTAL NUMBER", "\n)", "\ntablespace USERS", "\n  pctfree 10", "\n  initrans 1", "\n  maxtrans 255", "\n  storage", "\n  (", "\n    initial 64K", "\n    minextents 1", "\n    maxextents unlimited", "\n  );", "\ncomment on table SANNY_GOODS", "\n  is '商品表';", "\ncomment on column SANNY_GOODS.CODE", "\n  is '商品编码';", "\ncomment on column SANNY_GOODS.NAME", "\n  is '商品名称';", "\ncomment on column SANNY_GOODS.PRICE", "\n  is '商品价格';", "\ncomment on column SANNY_GOODS.TOTAL", "\n  is '商品库存';", "\nalter table SANNY_GOODS", "\n  add constraint PK_SANNYGOODS_CODE primary key (CODE)", "\n  using index ", "\n  tablespace SANNY_INDEX", "\n  pctfree 10", "\n  initrans 2", "\n  maxtrans 255", "\n  storage", "\n  (", "\n    initial 64K", "\n    minextents 1", "\n    maxextents unlimited", "\n  );", "\nalter table SANNY_GOODS", "\n  add constraint NN_SANNYGOODS_CODE", "\n  check (\"CODE\" IS NOT NULL);", "\n[/code]", "\n\n", "但是我想通过java程序输出这样的sql脚本，大家觉得可以实现吗，？可以怎么样写sql语句来实现，麻烦大家了：", "\n[code=\"sql\"]create table sanny_goods(", "\ncode varchar2(100) constraint NN_sannygoods_code not null,", "\nname varchar2(100),", "\nprice binary_double,", "\ntotal number,", "\nconstraint PK_SANNYGOODS_CODE primary key(code) using index tablespace sanny_index", "\n);", "\ncomment on table sanny_goods is '商品表';", "\ncomment on column sanny_goods.code is '商品编码';", "\ncomment on column sanny_goods.name is '商品名称';", "\ncomment on column sanny_goods.price is '商品价格';", "\ncomment on column sanny_goods.total is '商品库存';", "\n[/code]", "\n[b]问题补充：[/b]", "\nlovewhzlq，你好，", "\n\n", "就是通过java+ibatis，运行程序手动输入表名，", "\n运行就会自动生成一个sql文件，里面即为我需要的标准的脚本。", "\n\n", "主要是现在sql查询有几个地方还没有解决，如何查出这个表的哪一个字段是主键，主键名，及其所用的表空间；", "\n\n", "还有外键，呵呵"]], "Tag": "程序设计"}
{"Answer": "你都已经给他浮动了，就不要再用display：inline-block；了。浮动已经让他变成行内块元素了，把display去掉。或者加个vertical-align: middle;\r\n建议去掉。因为那句代码没有用，还给你带来了困扰。", "Konwledge_Point": "名字空间", "Question": ["表单中的下拉框出现不对齐的问题", ["为了实现:缩放窗口 自动换行，并且换行的时候空间名称(label)与控件保持同一行。", "\n使用了以下样式", "\n\n", "<style>\n    .form-group{\n        font-size:14px;\n        display: inline-block;\n        margin:4px 0;\n    }\n\n        </style>\n", "\n\n", "都是input与label的情况下是达到要求了", "\n\n", "但是:", "\n控件如果出现下拉框，就出问题:", "\n问题1:下拉框位置会高一些，出现不对齐的情况。见gif", "\n问题2:下拉框同级的label会消失，原因不知道", "\n\n", "不知道是不是因为**form-group**  与 ", "inline-block", "的问题", "\n\n", "希望哪个知道的帮忙知道一二。", "\n\n", "\n\n", "\n\n", "我的代码是:", "\n\n", "<form>\n\n        <div>\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">商品名称：</label>\n                <input  type=\"text\" class=\"show\" name=\"AAA\" id=\"AAA\"  />\n            </div>\n\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">商品大类【label独立出】：</label>\n            </div>\n\n            <div class=\"form-group\" >\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label独立出】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">label不见了：</label>\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label不见了】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n\n\n", "\n\n", ".", "\n.", "\n.", "\n.", "\n.", "\n.", "\n.", "\n.", "\n非常感谢  妖王令剑  和 Chappell_ycp  的指导。", "\n我试验了一下，不能去除display: inline-block;，去除了这一句就乱了", "\n见下图", "\n\n", "即使加上  vertical-align: middle; 也是不行的", "\n最后是 同时保留，可以解决下拉框往上跑的问题", "\ndisplay: inline-block;", "\nvertical-align: middle;", "\n\n", "只是为什么", "下拉框前的那个同级的label还是会消失", "，", "\n就不大清楚了，有机会再想想法子了，", "\n\n", "最后我通过重新使用js生成下拉框的方法凑合着解决问题了", "\n大概的改写过程以以下这一段为例", "\n\n", "            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">label不见了：</label>\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label不见了】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n", "\n\n", "在js中", "\n1.删除id为ddd下的所有内容", "\n2.通过append的方式给id为ddd的div添加一个下属的label，也就是  label不见了：", "\n3.通过append的方式给id为ddd的div添加一个下属的select", "\n4.通过append的方式给这个select添加option", "\n这样子凑合着", "\n\n", "问题就是，没有找出原因，会增加好多的代码啊！！！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你声明了Cbook的默认构造函数&amp;#xff0c;但是没有定义。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;Cbook::&lt;span class=\"hljs-built_in\"&gt;Cbook&lt;/span&gt;() : &lt;span class=\"hljs-built_in\"&gt;m_pczName&lt;/span&gt;(nullptr), &lt;span class=\"hljs-built_in\"&gt;m_nPage&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;m_nEdition&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["[Error] ld returned 1 exit status，关于类的成员引用", ["C++中定义类的成员函数，但在引用的时候不知道哪里出了问题", "\n", "//输出有问题，但我没有找到 ", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "#", "include", "<string.h>", "\n", "class", " ", "Cbook", "                                ", "//声明类Cbook   均应以C开头 ", "\n{\n    ", "private", ":                            ", "//下面的为私有数据 ", "\n        ", "char", " * m_pczName;\n        ", "int", " m_nPages;\n        ", "int", " m_nEdition;\n    ", "public", ":                                ", "//下面的为公有数据和函数 ", "\n        ", "void", " ", "GetBookName", "(", "char", " *pName)", ";\n        ", "int", " ", "GetTotalPages", "()", ";\n        ", "int", " ", "GetBookEdition", "()", ";\n    ", "private", ":                            ", "//下面的为私有数据和函数 ", "\n        ", "void", " ", "SetBookName", "(", "char", " *pName)", ";\n        ", "void", " ", "SetTotalPages", "(", "int", " nPages)", ";\n        ", "void", " ", "SetBookEdition", "(", "int", " nEdition)", ";\n    ", "public", ":                                ", "//下面的为公有数据和函数 ", "\n        ", "Cbook", "();\n } ;\n ", "void", " ", "Cbook::GetBookName", "(", "char", " *pName)", "    ", "//定义成员函数 ", "\n ", "{\n     ", "strcpy", "(pName,m_pczName);\n }\n ", "int", " ", "Cbook::GetBookEdition", "()", "            ", "//定义成员函数", "\n ", "{\n     ", "return", " m_nEdition;\n }\n ", "void", " ", "Cbook::SetBookName", "(", "char", " *pName)", "    ", "//定义成员函数", "\n ", "{\n     ", "if", "(m_pczName!=", "0", ")\n     ", "delete", "[] m_pczName;                    ", "//如果已经有了旧名字，删除它，然后重新命名 ", "\n     \n     m_pczName=", "new", " ", "char", "[", "strlen", "(pName)+", "1", "];", "//重新分配存储空间 ", "\n     ", "strcpy", "(m_pczName,pName);            ", "//复制字符串 ", "\n }\n ", "void", " ", "Cbook::SetTotalPages", "(", "int", " nPages)", "    ", "//定义成员函数 ", "\n ", "{\n     m_nPages=nPages; \n }\n ", "void", " ", "Cbook::SetBookEdition", "(", "int", " nEdition)", "//定义成员函数 ", "\n ", "{\n     m_nEdition=nEdition;\n }\n ", "int", " ", "main", "()", "\n ", "{\n      Cbook op1;\n     ", "int", " i;\n     i=op1.", "GetBookEdition", "();\n     cout<<i<<endl;\n }\n\n", "\n", "(.text+0xf4): undefined reference to `Cbook::Cbook()'", "[Error] ld returned 1 exit status", "\n", "main()函数中，我试过了在Cbook op1后面加括号，但没能实现", "\n", "能正常运行就行"]], "Tag": "程序设计"}
{"Answer": "加上resource.h", "Konwledge_Point": "名字空间", "Question": ["在vs2010中利用mfc写一个连连看游戏时各种资源窗口啥的等都报“未声明的标识符”问题", ["写这个连连看游戏刚开始导入各种资源文件改好ID后运行正常，但通过进一步的编程后不知道为什么开始报各种”未声明的标识符“bug（可能中途改了一些什么设置.....),现项目最近运行的log文件如下：", "\n\n", " 生成启动时间为 2016/5/26 17:37:08。\n     1>项目“C:\\Users\\Aliez\\documents\\visual studio 2010\\Projects\\Lianliankan\\LLK\\LLK.vcxproj”在节点 2 上(build 个目标)。\n     1>InitializeBuildStatus:\n         正在对“Debug\\LLK.unsuccessfulbuild”执行 Touch 任务。\n       ClCompile:\n         所有输出均为最新。\n         C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe /c /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _WINDOWS /D _DEBUG /D _UNICODE /D UNICODE /D _AFXDLL /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Yc\"StdAfx.h\" /Fp\"Debug\\LLK.pch\" /Fo\"Debug\\\\\" /Fd\"Debug\\vc100.pdb\" /Gd /TP /analyze- /errorReport:prompt stdafx.cpp\n         stdafx.cpp\n         C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe /c /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _WINDOWS /D _DEBUG /D _UNICODE /D UNICODE /D _AFXDLL /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Yu\"StdAfx.h\" /Fp\"Debug\\LLK.pch\" /Fo\"Debug\\\\\" /Fd\"Debug\\vc100.pdb\" /Gd /TP /analyze- /errorReport:prompt GameControl.cpp GameDlg.cpp GameLogic.cpp LLK.cpp LLKDlg.cpp\n         LLKDlg.cpp\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.h(14): error C2065: “IDD_LLK_DIALOG”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C2146: 语法错误: 缺少“;”(在标识符“m_GameC”的前面)\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(17): error C2065: “IDD_GAME_DIALOG”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(23): error C2065: “IDD_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(54): error C2065: “IDR_MAINFRAME”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(66): error C2065: “IDC_BTN_BASIC”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(66): error C2065: “IDC_BTN_BASIC”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(67): error C2065: “IDC_BTN_BASIC”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(67): error C2065: “IDC_BTN_BASIC”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(79): error C2065: “IDM_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(79): error C2065: “IDM_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(80): error C2065: “IDM_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(87): error C2065: “IDS_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(92): error C2065: “IDM_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(108): error C2065: “IDM_ABOUTBOX”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\llkdlg.cpp(161): error C2065: “IDB_MAIN_BG”: 未声明的标识符\n         LLK.cpp\n         GameLogic.cpp\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(15): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(15): error C2065: “s_nRows”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(16): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(16): error C2065: “s_nCols”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(17): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(17): error C2065: “s_nPicNum”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(70): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamelogic.cpp(70): error C2065: “s_nRows”: 未声明的标识符\n         GameDlg.cpp\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C2146: 语法错误: 缺少“;”(在标识符“m_GameC”的前面)\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(14): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.h(17): error C2065: “IDD_GAME_DIALOG”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(32): error C2065: “IDB_Game_BG”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(41): error C2065: “IDC_BTN_START”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(41): error C2065: “IDC_BTN_START”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(54): error C2065: “IDR_MAINFRAME”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(55): error C2065: “IDR_MAINFRAME”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(109): error C2065: “CGameControl”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(109): error C2146: 语法错误: 缺少“;”(在标识符“ctr”的前面)\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(109): error C2065: “ctr”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(110): error C2065: “ctr”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(110): error C2228: “.StartGame”的左边必须有类/结构/联合\n                 类型是“'unknown-type'”\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(116): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(116): error C2065: “s_nRows”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(117): error C2653: “CGameControl”: 不是类或命名空间名称\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(117): error C2065: “s_nCols”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(125): error C2065: “m_GameC”: 未声明的标识符\n     1>c:\\users\\Aliez\\documents\\visual studio 2010\\projects\\lianliankan\\llk\\gamedlg.cpp(125): error C2228: “.GetElement”的左边必须有类/结构/联合\n                 类型是“'unknown-type'”\n         GameControl.cpp\n         正在生成代码...\n     1>已完成生成项目“C:\\Users\\Aliez\\documents\\visual studio 2010\\Projects\\Lianliankan\\LLK\\LLK.vcxproj”(build 个目标)的操作 - 失败。\n\n生成失败。\n\n已用时间 00:00:15.03\n", "\n\n", "有关LLKDlg.cpp代码如下：", "\n\n", "\n// LLKDlg.cpp : 实现文件\n//\n\n#include \"stdafx.h\"\n#include \"LLKDlg.h\"\n#include \"afxdialogex.h\"\n#include <afxwin.h>\n#include \"GameDlg.h\"\n#ifdef _DEBUG\n#define new DEBUG_NEW\n#endif\n\n\n// 用于应用程序“关于”菜单项的 CAboutDlg 对话框\n\nclass CAboutDlg : public CDialogEx\n{\npublic:\n    CAboutDlg();\n\n// 对话框数据\n    enum { IDD =IDD_ABOUTBOX };\n\n    protected:\n    virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持\n\n// 实现\nprotected:\n    DECLARE_MESSAGE_MAP()\n};\n\nCAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)\n{\n}\n\nvoid CAboutDlg::DoDataExchange(CDataExchange* pDX)\n{\n    CDialogEx::DoDataExchange(pDX);\n}\n\nBEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)\nEND_MESSAGE_MAP()\n\n\n// CLLKDlg 对话框\n\n\n\n\nCLLKDlg::CLLKDlg(CWnd* pParent /*=NULL*/)\n    : CDialogEx(CLLKDlg::IDD, pParent)\n{\n    m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);\n}\n\nvoid CLLKDlg::DoDataExchange(CDataExchange* pDX)\n{\n    CDialogEx::DoDataExchange(pDX);\n}\n\nBEGIN_MESSAGE_MAP(CLLKDlg, CDialogEx)\n    ON_WM_SYSCOMMAND()\n    ON_WM_PAINT()\n    ON_WM_QUERYDRAGICON()\n  ON_BN_CLICKED(IDC_BTN_BASIC, &CLLKDlg::OnBnClickedBtnBasic)\n    ON_BN_CLICKED(IDC_BTN_BASIC, &CLLKDlg::OnBnClickedBtnBasic)\nEND_MESSAGE_MAP()\n\n\n// CLLKDlg 消息处理程序\n\nBOOL CLLKDlg::OnInitDialog()\n{\n    CDialogEx::OnInitDialog();\n    // 将“关于...”菜单项添加到系统菜单中。\n    InitBackground();\n    // IDM_ABOUTBOX 必须在系统命令范围内。\n    ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);\n    ASSERT(IDM_ABOUTBOX < 0xF000);\n\n    CMenu* pSysMenu = GetSystemMenu(FALSE);\n    if (pSysMenu != NULL)\n    {\n        BOOL bNameValid;\n        CString strAboutMenu;\n        bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);\n        ASSERT(bNameValid);\n        if (!strAboutMenu.IsEmpty())\n        {\n            pSysMenu->AppendMenu(MF_SEPARATOR);\n            pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);\n        }\n    }\n\n    // 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动\n    //  执行此操作\n    SetIcon(m_hIcon, TRUE);         // 设置大图标\n    SetIcon(m_hIcon, FALSE);        // 设置小图标\n\n    // TODO: 在此添加额外的初始化代码\n\n    return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE\n}\n\nvoid CLLKDlg::OnSysCommand(UINT nID, LPARAM lParam)\n{\n    if ((nID & 0xFFF0) ==IDM_ABOUTBOX)//IDM_ABOUTBOX\n    {\n        CAboutDlg dlgAbout;\n        dlgAbout.DoModal();\n    }\n    else\n    {\n        CDialogEx::OnSysCommand(nID, lParam);\n    }\n}\n\n// 如果向对话框添加最小化按钮，则需要下面的代码\n//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，\n//  这将由框架自动完成。\n\nvoid CLLKDlg::OnPaint()\n{\n    if (IsIconic())\n    {\n        CPaintDC dc(this); // 用于绘制的设备上下文\n\n        SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);\n\n        // 使图标在工作区矩形中居中\n        int cxIcon = GetSystemMetrics(SM_CXICON);\n        int cyIcon = GetSystemMetrics(SM_CYICON);\n        CRect rect;\n        GetClientRect(&rect);\n        int x = (rect.Width() - cxIcon + 1) / 2;\n        int y = (rect.Height() - cyIcon + 1) / 2;\n\n        // 绘制图标\n        dc.DrawIcon(x, y, m_hIcon);\n    }\n    else\n    {//创建CPanitDC对象\n        CPaintDC dc(this);\n        dc.BitBlt(0,0,800,600,&m_dcMem,0,0,SRCCOPY);//绘制背景图片\n        CDialogEx::OnPaint();\n    }\n}\n\n//当用户拖动最小化窗口时系统调用此函数取得光标\n//显示。\nHCURSOR CLLKDlg::OnQueryDragIcon()\n{\n    return static_cast<HCURSOR>(m_hIcon);\n}\n\nvoid CLLKDlg::InitBackground()\n{\n    CClientDC dc(this);//获得对话框的视频内存\n    CBitmap bmpMain;\n    bmpMain.LoadBitmap(IDB_MAIN_BG);\n    m_dcMem.CreateCompatibleDC(&dc);//创建与视频内存兼容的内存DC\n    m_dcMem.SelectObject(bmpMain);//将位图组员选入DC\n    //调整窗口大小\n    CRect rtWin;\n    CRect rtClient;\n    this->GetWindowRect(rtWin);//获得窗口大小\n    this->GetClientRect(rtClient);//获得客户区大小\n    //标题栏和外边框的大小\n    int nSpanWidth = rtWin.Width()-rtClient.Width();\n    int nSpanHeight = rtWin.Height()-rtClient.Height();\n\n    //设置窗口大小\n    MoveWindow(0,0,800+nSpanWidth,600 + nSpanHeight);\n\n    CenterWindow();\n}\n\n\nvoid CLLKDlg::OnBnClickedBtnBasic()\n{\n    // TODO: 在此添加控件通知处理程序代码\n    CDialogEx::ShowWindow(SW_HIDE);\n    CGameDlg dlg;\n    dlg.DoModal();\n}\n", "\n\n", "\n总之希望解决这里各种报”未声明的标识符“问题，有关资源ID我都已经改过与代码中一致了，然而.......", "\n因为老师布置作业要求入了mfc这个坑，请各位前辈菊苣指教，万分感谢....."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这是学的那个老是忘记STRING头文件的黑马程序员的例子吧&amp;#xff0c;我也写过一个&amp;#xff0c;刚才去试了下&amp;#xff0c;删除computer类的时候也是没有调用intelcpu的析构函数。我也怀疑数据没有释放&amp;#xff0c;但是你说----delete a后cp开辟的空间确实被释放了&amp;#xff08;在computer a的析构函数中释放&amp;#xff09;&amp;#xff0c;这是根据什么来的&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["问一个关于C++多态中析构函数调用的问题", ["在跟着B站某视频学C++学到多态时敲代码，发现一个问题，先上代码（使用的是Visual Studio）", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "#", "include", "<string>", "\n\n", "class", " ", "cpu", " {\n", "public", ":\n    ", "virtual", " ", "void", " ", "calculate", "()", " ", "= ", "0", ";\n};\n", "class", " ", "card", " {\n", "public", ":\n    ", "virtual", " ", "void", " ", "display", "()", " ", "= ", "0", ";\n};\n", "class", " ", "memory", " {\n", "public", ":\n    ", "virtual", " ", "void", " ", "store", "()", " ", "= ", "0", ";\n};\n\n", "class", " ", "IntelCPU", " :", "public", " cpu {\n", "public", ":\n    ", "void", " ", "calculate", "()", " ", "{\n        cout << ", "\"使用IntelCPU计算\"", " << endl;\n    }\n    ~", "IntelCPU", "() {\n        cout << ", "\"调用IntelCPU析构函数\"", " << endl;\n    }\n};\n", "class", " ", "IntelCARD", " :", "public", " card {\n", "public", ":\n    ", "void", " ", "display", "()", " ", "{\n        cout << ", "\"使用IntelCARD显示\"", " << endl;\n    }\n    ~", "IntelCARD", "() {\n        cout << ", "\"调用IntelCARD析构函数\"", " << endl;\n    }\n};\n", "class", " ", "IntelMEM", " :", "public", " memory {\n    ", "void", " ", "store", "()", " ", "{\n        cout << ", "\"使用IntelMEM存储\"", " << endl;\n    }\n};\n\n", "class", " ", "computer", " {\n", "public", ":\n    ", "computer", "(cpu* cp, card* ca, memory* me) {\n        a = cp;\n        b = ca;\n        c = me;\n    }\n    ", "void", " ", "work", "()", " ", "{\n        a->", "calculate", "();\n        b->", "display", "();\n        c->", "store", "();\n    }\n    ~", "computer", "() {\n        ", "if", " (a != ", "NULL", ") {\n            ", "delete", " a;\n            a = ", "NULL", ";\n        }\n        ", "if", " (b != ", "NULL", ") {\n            ", "delete", " b;\n            b = ", "NULL", ";\n        }\n        ", "if", " (c != ", "NULL", ") {\n            ", "delete", " c;\n            c = ", "NULL", ";\n        }\n        cout << ", "\"调用computer析构函数\"", " << endl;\n    }\n", "private", ":\n    cpu* a;\n    card* b;\n    memory* c;\n};\n\n", "void", " ", "dowork", "(computer* com)", " ", "{\n    com->", "work", "();\n}\n", "int", " ", "main", "()", " ", "{\n    IntelCPU* cp= ", "new", " IntelCPU;\n    IntelCARD* ca = ", "new", " IntelCARD;\n    IntelMEM* me = ", "new", " IntelMEM;\n    computer* a = ", "new", " ", "computer", "(cp, ca, me);\n    ", "dowork", "(a);\n    ", "delete", " a;\n}\n", "\n", "结果：", "\n", "\n", "在main函数中，", "delete a", "后cp开辟的空间确实被释放了（在computer a的析构函数中释放），但此时却没有调用IntelCPU的析构函数：", "\n", "class", " ", "IntelCPU", " :", "public", " cpu {\n", "public", ":\n    ", "void", " ", "calculate", "()", " ", "{\n        cout << ", "\"使用IntelCPU计算\"", " << endl;\n    }\n    ~", "IntelCPU", "() {\n        cout << ", "\"调用IntelCPU析构函数\"", " << endl;\n    }\n};\n", "\n", "而如果删去", "delete a", "，而加上", "delete cp", "，则会调用该析构函数:", "\n", "\n", "但是如果同时写上：", "delete a", "和", "delete cp", "，此时编译器则会报错：", "\n", "\n", "我估计原因是因为重复释放了内存，也就证明前面cp开辟的空间确实被释放了，但此时在", "computer", "中的析构函数：", "\n", "    ~", "computer", "() {\n        ", "if", " (a != ", "NULL", ") {\n            ", "delete", " a;\n            a = ", "NULL", ";\n        }\n        ", "if", " (b != ", "NULL", ") {\n            ", "delete", " b;\n            b = ", "NULL", ";\n        }\n        ", "if", " (c != ", "NULL", ") {\n            ", "delete", " c;\n            c = ", "NULL", ";\n        }\n        cout << ", "\"调用computer析构函数\"", " << endl;\n    }\n", "\n", "中的", "delete a", "(就是delete cp，，写的没注意名称重复的问题。。)却并不会调用IntelCPU的析构函数。", "想问问各位对此有什么看法？", "（重点不是在cp已经被释放，而是没有调用析构函数，如果我IntelCPI* cp时，cp中有指针开辟了堆上数据，那不是这部分数据就不能释放而泄漏了吗？", "ps：视频中还教了一种写法，即：", "computer* a = new computer(new IntelCPU,new IntelCARD,new IntelMEM);", "，此时就完全不能调用各个Intel的析构函数了，因为在main中连类型名都没有）；"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以&amp;#xff0c;你这种是范式设计&amp;#xff0c;但现在更流行反范式设计。&lt;/p&gt;\n\n&lt;ol&gt;&lt;li&gt;范式设计节省存储空间&amp;#xff1b;&lt;/li&gt;&lt;li&gt;反范式浪费存储空间&amp;#xff0c;但因为做了数据冗余&amp;#xff0c;提高了数据库访问性能&amp;#xff1b;&lt;/li&gt;&lt;li&gt;曾经流行范式设计&amp;#xff0c;是因为存储空间焦虑&amp;#xff1b;&lt;/li&gt;&lt;li&gt;现在流行反范式设计&amp;#xff0c;是因为性能焦虑。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "名字空间", "Question": ["关于进销存数据库设计中表的问题", ["最近在编写一个简单的进销存系统。", "\n\n", "在数据库的设计上卡住了，具体情况如下。", "\n\n", "大概看了网上几个ERP编写文档，发现他们都是这样设计的。", "\n\n", "表1——库存表", "\n\n", "货物id", "\n\n", "名称", "\n\n", "规格", "\n\n", "数量", "\n\n", "单价", "\n\n", " ", "\n\n", "表2——入库表", "\n\n", "入库id", "\n\n", "货物id", "\n\n", "数量", "\n\n", "规格", "\n\n", "单价", "\n\n", "入库时间", "\n\n", "操作人员", "\n\n", " ", "\n\n", "表3——出库表", "\n\n", "（字段类似于入库表）", "\n\n", " ", "\n\n", "本人感觉这样3个表，有很多信息是重复的 。如 物品名称，规格等。如果字段中再加入更详细的一些信息，会有更多重复内容，占用更多空间。所有我就有了以下思考，是否可以精简以下。改进如下：", "\n\n", "表1——库存信息表", "\n\n", "货物id", "\n\n", "总量", "\n\n", " ", "\n\n", "表2——货物详细信息表", "\n\n", "货物id", "\n\n", "货物名称", "\n\n", "规格", "\n\n", "单价", "\n\n", " ", "\n\n", "表3——入库表", "\n\n", "入库id", "\n\n", "货品id", "\n\n", "数量", "\n\n", "入库时间", "\n\n", "操作人", "\n\n", " ", "\n\n", "表4——出库", "\n\n", "（字段类似入库）", "\n\n", " ", "\n\n", "表5——职工表", "\n\n", "......", "\n\n", " ", "\n\n", "我感觉这样可以去掉很多重复内容，但因为本人没什么编写经验，不知道这样设计是否可行或者两者有什么优劣，请各位大佬能帮忙解答下，不胜感激!", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", "btw:为什么标签中C#在.net内，而不在编程语言里   _(:зゝ∠)_   ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;发下你的文件结构以及函数的实现&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["C语言在.h文件中声明的函数报错 ，自己定义的函数在另一个.c文件中，不理解报错原因，报错截图如下", ["\n", "第一张图片为报错截图", "第二张图片为.h文件中的自定义函数声明", "当不分文件全都写在一起时代码能正常运行", "\n", "\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include<malloc.h>\n#include ", "\"final.h\"", "\nCOU *create_form()          ", "//创建链表(便于课程信息的插入和删除） ", "\n{\n     COU *head,*tail,*p;", "//表头、表尾指针", "\n     int num,stime,ttime;", "//课程编号、总学时、授课学时", "\n     int etime,score,term;", "//实验或上机学时、学分、开课学期", "\n     char ", "name", "[", "20", "],kind[", "10", "];", "//课程名称、课程性质", "\n     int size=sizeof(COU);\n     head=tail=NULL;", "//初始将表头、表尾指针置为空", "\n     printf(", "\"输入选修课程信息:\\n\"", ");\n     scanf(", "\"%d%s%s%d%d%d%d%d\"", ",&num,", "name", ",kind,&stime,&ttime,&etime,&score,&term);\n    ", "while", "(num!=", "0", ")\n    {\n        p=(COU *)malloc(size);", "//开辟结构体大小的空间", "\n        ", "p", "->", "num=num;", "//给结构体中num变量赋值", "\n        ", "strcpy", "(p->", "name", ",", "name", ");", "//将name字符串的内容复制到结构体变量name", "\n        ", "strcpy", "(p->", "kind,kind);", "//将kind字符串的内容复制到结构体变量kind", "\n        ", "p", "->", "stime=stime;\n        ", "p", "->", "ttime=ttime;\n        ", "p", "->", "etime=etime;\n        ", "p", "->", "score=score;\n        ", "p", "->", "term=term;\n        ", "if", "(head==NULL)   ", "//表头指针指为空", "\n        {     \n            head=p;         ", "//则将表头指针指向刚赋完值的一个完整结构体的数据域", "\n        }      \n        ", "else", "             ", "//表头指针不为空则说明有指向的数据内容", "\n        {     \n            ", "tail", "->", "next=p;", "//此时只需控制表尾指针域指向下一个内容的结构体数据域", "\n        }\n        tail=p;\n        scanf(", "\"%d%s%s%d%d%d%d%d\"", ",&num,", "name", ",kind,&stime,&ttime,&etime,&score,&term);\n     }\n     ", "tail", "->", "next=NULL;", "//当循环结束时将表尾指针的指针域指向空，说明没有后续的数据内容，形成链表", "\n     return head;\n}\n\n\nvoid search()          ", "//课程信息查询", "\n{\n   int a,num;\n   int t=", "1", ";\n   char type[", "10", "],cname[", "10", "];\n   COU *ptr;\n    L1:system(", "\"cls\"", ");\n   printf(", "\"\\n\\n\\t\\t**********请选择查询方式*************\\n\"", ");\n   printf(", "\"\\n\\t\\t\\t1---按课程名称查找\\n\"", ");\n   printf(", "\"\\n\\t\\t\\t2---按课程性质查找\\n\"", ");\n   printf(", "\"\\n\\t\\t\\t3---按学分查找\\n\"", ");\n   printf(", "\"\\n\\t\\t\\t4---退出查找\\n\"", ");\n   printf(", "\"\\n\\n\\t\\t**************************************\\n\"", ");\n   printf(", "\"\\n\\nChiose your number(1-4):\"", ");\n   scanf(", "\"%d\"", ",&a);\n   switch(a)\n   {\n        case ", "1", ":\n            printf(", "\"请输入要查找的课程的名称:\"", ");\n            scanf(", "\"%s\"", ",cname);\n            printf(", "\"课程编号  课程名称  课程性质  总学时  授课学时  实践或上机学时  学分  开课学期\\n\"", ");\n            ", "for", "(ptr=head;ptr;ptr=ptr->", "next)    \n            {\n                ", "if", "(strcmp(cname,ptr->", "name", ")==", "0", ")", "//字符串比较", "\n                {\n                     ", "printf", "(\"%5d%12s%9s%9d%9d%11d%11d%7d\\n\",ptr->", "num", ",ptr->", "name", ",ptr->", "kind", ",ptr->", "stime,\n                                                         ", "ptr", "->", "ttime", ",ptr->", "etime", ",ptr->", "score", ",ptr->", "term);\n                     t=", "0", ";\n                }\n            }\n            ", "if", "(t)", "//t为非零 ", "\n            {\n                printf(", "\"\\t\\n未找到!\\n\"", ");\n            }\n            t=", "1", ";\n            system(", "\"pause\"", ");\n            goto L1;\n           case ", "2", ":\n           printf(", "\"请输入要查找的课程的性质:\"", ");\n           scanf(", "\"%s\"", ",type);\n           printf(", "\"课程编号  课程名称  课程性质  总学时  授课学时  实践或上机学时  学分  开课学期\\n\"", ");\n           ", "for", "(ptr=head;ptr;ptr=ptr->", "next)\n           {\n               ", "if", "(strcmp(type,ptr->", "kind)==", "0", ")   ", "//比较字符串", "\n                {\n                     ", "printf", "(\"%5d%12s%9s%9d%9d%11d%11d%7d\\n\",ptr->", "num", ",ptr->", "name", ",ptr->", "kind", ",ptr->", "stime,\n                                                             ", "ptr", "->", "ttime", ",ptr->", "etime", ",ptr->", "score", ",ptr->", "term);\n                     t=", "0", ";\n                }\n            }\n            ", "if", "(t)\n            { \n                printf(", "\"\\t\\n未找到!\\n\"", ");\n            }\n            t=", "1", ";\n            system(", "\"pause\"", ");\n            goto L1;     ", "//直接跳转到L1执行下面的语句", "\n              \n        case ", "3", ":\n            printf(", "\"输入要查找的课程的学分:\"", ");\n            scanf(", "\"%d\"", ",&num);\n               printf(", "\"课程编号  课程名称  课程性质  总学时  授课学时  实践或上机学时  学分  开课学期\\n\"", ");\n            ", "for", "(ptr=head;ptr;ptr=ptr->", "next)\n            {   \n                ", "if", "(ptr->", "score==num)\n                {\n                     ", "printf", "(\"%5d%12s%9s%9d%9d%11d%11d%7d\\n\",ptr->", "num", ",ptr->", "name", ",ptr->", "kind", ",ptr->", "stime,\n                                                             ", "ptr", "->", "ttime", ",ptr->", "etime", ",ptr->", "score", ",ptr->", "term);\n                     t=", "0", ";\n                }\n            }\n            ", "if", "(t)\n            { \n                printf(", "\"\\n\\t未找到!\\n\"", ");\n            }\n            t=", "1", ";\n            system(", "\"pause\"", ");  ", "//暂停", "\n            goto L1;\n        case ", "4", ":break;\n    }\n}\n\nvoid *del()  ", "//删除课程", "\n{\n    COU *p1,*p2;\n    char ch,ch1;\n    int num;\n    ", "while", "(ch!=", "'0'", ")\n    {\n        printf(", "\"输入想要删除的课程编号:\"", ");\n        scanf(", "\"%d\"", ",&num);\n        ", "if", "(head->", "num==num)", "//要删除课程位于第一个节点", "\n        {\n            p2=head;", "//将链表表头指针head传给p2", "\n            ", "head", "=head->", "next;", "//而将head指针域指向的下一个节点传给head，此时链表表头指针变为原来第二个节点的指针", "\n            free(p2);", "//将有第一个节点指针的p2空间释放，此时删除了位于第一个节点的课程", "\n        }\n        ", "if", "(head==NULL)", "//头指针为空，链表不存在，课程信息不存在", "\n        {    \n            return NULL;\n        }\n        p1=head;\n        ", "p2", "=head->", "next;\n        ", "while", "(p2)", "//p2不为空", "\n        {\n            ", "if", "(p2->", "num==num)\n            {\n                ", "p1", "->", "next", "=p2->", "next;\n                free(p2);\n            }\n            ", "else", " \n            {\n                p1=p2;\n            }\n            ", "p2", "=p1->", "next;\n            \n        }\n        printf(", "\"\\n继续删除请按回车\\n\"", ");\n        printf(", "\"\\n结束删除课程按 0:\"", ");\n        ", "ch1", "=getchar();          //用于接收subj->", "term输完后输入的回车键             \n        ch=getchar();\n        printf(", "\"\\n删除完毕,新信息存入文件中\\n\"", ");\n        system(", "\"pause\"", "); \n    }\n    return head;\n    system(", "\"pause\"", ");\n}\n", "\n", "\n", "#", "define", " CHOOSE 10", "//学生能选课程数的最大值", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "  ", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", "<malloc.h>", "\n\n", "void", " ", "prin1", "()", ";         ", "//声明浏览学生所有选修课程函数", "\n", "void", " ", "choose", "()", ";       ", "//声明学生选课函数", "\n", "typedef", " ", "struct", " ", "subjects", "        ", "//定义结构体叫作COU，在后面就可以直接使用", "\n{\n     ", "int", " num;                 ", "//课程编号", "\n     ", "char", " name[", "30", "];           ", "//课程名称", "\n     ", "char", " kind[", "20", "];           ", "//课程性质", "\n     ", "int", " stime;               ", "//总学时", "\n     ", "int", " ttime;               ", "//授课学时", "\n     ", "int", " etime;               ", "//实验或上机学时", "\n     ", "int", " score;               ", "//学分", "\n     ", "int", " term;                ", "//开课学期", "\n     ", "struct", " ", "subjects", " *next;\n}COU;              \nCOU *head=", "NULL", ";\n", "void", " ", "Mangers", "()", ";  ", "//管理员菜单", "\n", "void", " ", "Students", "()", "; ", "//学生菜单 ", "\n", "void", " ", "savefile", "()", "; ", "//保存管理员文件", "\n", "void", " ", "savefile1", "()", " ", "//保存学生文件 ", "\n", "void", " *", "insert", "()", ";\n", "COU *", "create_form", "()", ";\n", "void", "*", "BasicInsert", "(COU *subj)", ";\n", "void", " ", "readfile", "()", ";\n", "void", " ", "prin", "()", ";\n", "void", " *", "del", "()", ";\n", "void", " ", "search", "()", ";\n", "void", " ", "About", "()", ";\n", "void", " ", "Help", "()", "; \n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;SqList Fav&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ncin &amp;gt;&amp;gt; Fav.length&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nfor(int i&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;Fav.length;i&amp;#43;&amp;#43;)&lt;/span&gt;\n    cin &amp;gt;&amp;gt; Fav.elem[i].name&lt;span class=\"hljs-comment\"&gt;; &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个Fav你还没有初始化啊。先调用InitList(Fav)啊&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["定义了一个结构体，后面调用的时候出问题，不知道为什么赋值失败。", ["定义了一个结构体，后面调用的时候出问题，不知道为什么赋值失败。", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<iomanip>", "\n", "#", "define", " OK 1", "\n", "#", "define", " ERROR 0", "\n", "#", "define", " OVERFLOW -2", "\n", "#", "define", " MAXSIZE 1000    ", "//图书表可能达到的最大长度", "\n", "using", " ", "namespace", " std;\n", "typedef", " ", "struct", "\n{", "//图书信息定义", "\n    ", "char", " no[", "20", "];    ", "//图书ISBN", "\n    ", "char", " name[", "50", "];   ", "//图书名字", "\n    ", "float", " price;   ", "//图书价格", "\n}Book;\n", "typedef", " ", "struct", "\n{", "//图书表的顺序存储结构类型为SqList", "\n    Book *elem;                   ", "//存储空间的基地址", "\n    ", "int", " length;                   ", "//图书表中当前图书个数", "\n}SqList;\n\n\n", "int", " ", "InitList", "(SqList &L)", "                \n", "{                                \n    L.elem=", "new", " Book[MAXSIZE];    \n    ", "if", "(!L.elem)", "exit", "(OVERFLOW);                 \n    L.length=", "0", ";        \n    ", "return", " OK;            \n}\n \n", "int", " ", "Input", "(SqList &L)", "         \n", "{\n    ", "int", " i,number,count;\n    cin>>number;\n    ", "for", "( i = ", "0", " ; i<number; i++)\n       { \n        cin>>L.elem[i].no>>L.elem[i].name>>L.elem[i].price;\n        L.length++;\n        }\n        ", "return", " OK;   \n}\n\n", "int", " ", "FindFavorite_Sq", "(SqList L)", "\n", "{", "//最爱图书的查找并输出数据", "\n    SqList Fav;\n    cin >> Fav.length;\n    ", "for", "(", "int", " i=", "0", ";i<Fav.length;i++)\n        cin >> Fav.elem[i].name;            ", "//@@@@就是这一步有问题！！！ ", "\n        \n    ", "for", "(", "int", " m=", "0", ";m<Fav.length;m++){\n        ", "int", " n=", "0", ";\n        ", "for", "(", "int", " i=", "0", ";i<L.length;i++)\n            ", "if", "(", "strcmp", "(Fav.elem[m].name,L.elem[i].name)==", "0", ")    n++;\n        ", "if", "(!n)\n            cout << ", "\"Sorry，there is no your favourite!\"", " << endl;\n        ", "else", "{\n            cout << n << endl;\n            ", "for", "(", "int", " i=", "0", ";i<L.length;i++)\n                ", "if", "(", "strcmp", "(Fav.elem[m].name,L.elem[i].name)==", "0", "){\n                    cout << L.elem[i].no << ", "' '", " << L.elem[i].name << ", "' '", ";\n                    cout << fixed << ", "setprecision", "(", "2", ") << L.elem[i].price << endl;\n                }\n        }    \n    }\n    ", "return", " OK;\n}\n", "int", " ", "main", "()", "{\n    SqList L;                 \n    ", "InitList", "(L);           \n    ", "Input", "(L);               \n    ", "FindFavorite_Sq", "(L);            \n    ", "return", " ", "0", ";    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入文件名你逻辑也是错的  应该是 打开文件 读文件&lt;br /&gt; 创建单链表&lt;br /&gt;把数据写入链表  遍历链表展示&lt;br /&gt;(*p1).name&lt;br /&gt;能不能换成 p1-&amp;gt;name啊 两个一样的 你这么写太累&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["系统保存数据到文本文件，但是重新打开系统却显示不出数据信息?(有全部代码)", ["通讯录系统里的保存数据功能，保存结构体数据到文本文件了，但是关闭系统又打开，然后显示数据就显示不出来，可是我也在显示功能里加了打开读写文件了呀，为什么就是显示不了呢？", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "typedef", " ", "struct", " ", "student", "\n{\n    ", "char", " name[", "20", "];", "// 姓名 ", "\n    ", "char", " wm[", "20", "];", "//性别 ", "\n    ", "char", " stel[", "20", "];", "//手机号码 ", "\n    ", "char", " home[", "100", "];", "//家庭住址 ", "\n    ", "struct", " ", "student", " *next;\n}stu;\nstu *head;", "//头指针 ", "\n", "void", " ", "screen", "()", "//主菜单 ", "\n", "{\n    ", "printf", "(", "\"\\n=======================================================\\n\"", ");\n    ", "printf", "(", "\"              欢迎来到通讯录管理系统\\n\\n\"", ");\n    ", "printf", "(", "\"            1.输入数据         2.显示数据\\n\"", ");\n    ", "printf", "(", "\"            3.增添数据         4.删除数据\\n\"", ");\n    ", "printf", "(", "\"            5.查询数据         6.修改数据\\n\"", ");\n    ", "printf", "(", "\"            7.保存数据         8.返回菜单\\n\"", ");\n    ", "printf", "(", "\"\\n~~~~~~输~~~~~~入~~~~~~9~~~~~~退~~~~~~出~~~~~~程~~~~~~序\\n\"", ");\n}\n", "void", " ", "input", "()", "//输入数据 ", "\n", "{\n    ", "int", " ans;", "//判断是否继续输入 ", "\n    stu *p1,*p2;\n    p1=(stu *)", "malloc", "(", "sizeof", "(stu));", "//申请内存来用 ", "\n    ", "if", "(p1!=", "NULL", ")\n    {\n        ", "printf", "(", "\"========输入数据========\\n\"", ");\n        head=p1;\n        ", "while", "(", "1", ")\n        {\n            ", "printf", "(", "\"名字：\"", ");\n            ", "scanf", "(", "\"%s\"", ",&(*p1).name);\n            ", "printf", "(", "\"性别：\"", ");\n            ", "scanf", "(", "\"%s\"", ",&(*p1).wm);\n            ", "printf", "(", "\"手机：\"", ");\n            ", "scanf", "(", "\"%s\"", ",&(*p1).stel);\n            ", "printf", "(", "\"家庭地址：\"", ");\n            ", "scanf", "(", "\"%s\"", ",&(*p1).home);\n            ", "printf", "(", "\"===================================\\n\"", ");\n            p2=p1;\n            p1=(stu *)", "malloc", "(", "sizeof", "(stu));", "//申请下一个要用的空间 ", "\n            ", "if", "(p1!=", "NULL", ")\n                (*p2).next=p1;\n            ", "printf", "(", "\"请选择是否继续输入：1.继续  2.退出\\n请选择：\"", ");", "//用户选择 ", "\n            ", "scanf", "(", "\"%d\"", ",&ans);\n            ", "if", "(ans==", "1", ")", "//继续 ", "\n                ", "continue", ";\n            ", "else", "//退出 ", "\n            {\n                ", "printf", "(", "\"========输入完毕========\\n\"", ");\n                (*p2).next=", "NULL", ";\n                ", "free", "(p1);", "//将申请的无用内存释放 ", "\n                ", "break", ";\n            }\n        }\n    }\n}\n", "void", " ", "look", "(stu *p1)", "//显示数据 ", "\n", "{\n \n    FILE *fp;\n    ", "char", " file[", "15", "];\n    fp=", "fopen", "(file, ", "\"at+\"", ");", "//打开文件", "\n    ", "while", "(!", "feof", "(fp))\n{\n    ", "fscanf", "(fp, ", "\"%s%s%s%s\\n\"", ",(*p1).name,(*p1).wm,(*p1).stel,(*p1).home);\n}\n", "fclose", "(fp);", "//关闭文件", "\n    ", "printf", "(", "\"========显示数据========\\n\"", ");\n    ", "while", "(p1!=", "NULL", ")\n    {\n        ", "printf", "(", "\"名字：%s\\n\"", ",(*p1).name);\n        ", "printf", "(", "\"性别：%s\\t\"", ",(*p1).wm);\n        ", "printf", "(", "\"手机：%s\\t\"", ",(*p1).stel);\n        ", "printf", "(", "\"家庭住址：%s\\n\"", ",(*p1).home);\n        ", "printf", "(", "\"=====================================\\n\"", ");\n        p1=(*p1).next;\n    }\n    ", "printf", "(", "\"========显示完毕========\\n\"", ");\n}\n", "void", " ", "insert", "()", "//插入数据 ", "\n", "{\n    ", "int", " ans;", "//选择插入位置 ", "\n    ", "char", " name[", "20", "];", "//插入者的名字 ", "\n    ", "printf", "(", "\"========增添数据========\\n\"", ");\n    stu *p1,*p2,*p3;\n    p1=head;\n    p3=(stu *)", "malloc", "(", "sizeof", "(stu));", "//申请内存 ", "\n    (*p3).next=", "NULL", ";\n    ", "printf", "(", "\"请输入插入者的数据：\\n\"", ");\n    ", "printf", "(", "\"名字：\"", ");\n    ", "scanf", "(", "\"%s\"", ",&(*p3).name);\n    ", "printf", "(", "\"性别：\"", ");\n    ", "scanf", "(", "\"%s\"", ",&(*p3).wm);\n    ", "printf", "(", "\"手机：\"", ");\n    ", "scanf", "(", "\"%s\"", ",&(*p3).stel);\n    ", "printf", "(", "\"家庭地址：\"", ");\n    ", "scanf", "(", "\"%s\"", ",&(*p3).home);\n    ", "printf", "(", "\"请选择插入位置：1.首部加入  2.尾部加入\"", ");\n    ", "scanf", "(", "\"%d\"", ",&ans);\n    ", "switch", "(ans)\n    {\n    ", "case", " ", "1", ":", "//放到头指针 ", "\n        (*p3).next=p1;\n        head=p3;\n        ", "break", ";\n    ", "case", " ", "2", ":", "//放到尾部 ", "\n        ", "while", "((*p1).next!=", "NULL", ")\n            p1=(*p1).next;\n        (*p1).next=p3;\n        ", "break", ";\n    }\n    ", "printf", "(", "\"========增添成功========\\n\"", ");\n}\n", "void", " ", "deleted", "()", "//删除数据 ", "\n", "{\n    stu *p1,*p2;\n    ", "char", " name[", "20", "];", "//删除者名字 ", "\n    ", "printf", "(", "\"========删除数据========\\n\"", ");\n    ", "printf", "(", "\"请输入要删除者的名字：\"", ");\n    ", "scanf", "(", "\"%s\"", ",name);\n    p1=head;\n    ", "if", "(head==", "NULL", ")", "//已经没有可删除的数据了 ", "\n    {\n        ", "printf", "(", "\"通讯录里什么也没有了。\\n\"", ");\n        ", "printf", "(", "\"========删除失败========\\n\"", ");\n        ", "return", ";\n    }\n    ", "if", "(!", "strcmp", "(name,(*p1).name))", "//头指针就是要删除的，单独拿出来，就是为了可以在删除后改变头指针", "\n    {\n        head=(*p1).next;\n        ", "printf", "(", "\"========删除成功========\\n\"", ");\n        ", "return", ";\n    }\n    ", "while", "(p1!=", "NULL", "&&", "strcmp", "(name,(*p1).name))\n    {\n        p2=p1;\n        p1=(*p1).next;\n    }\n    ", "if", "(p1==", "NULL", ")", "//查找完了，没找到 ", "\n    {\n        ", "printf", "(", "\"查无此人！\\n\"", ");\n        ", "printf", "(", "\"========删除失败========\\n\"", ");\n        ", "return", ";\n    }\n    ", "if", "((*p1).next!=", "NULL", ")", "//找到了，不是最后一个 ", "\n    {\n        p1=(*p1).next;\n        (*p2).next=p1;\n        ", "printf", "(", "\"========删除成功========\\n\"", ");\n    }\n    ", "else", "//是最后一个 ", "\n    {\n        (*p2).next=", "NULL", ";\n        ", "printf", "(", "\"========删除成功========\\n\"", ");\n    }\n}\n", "void", " ", "find", "(stu *p1)", "//查找数据 ", "\n", "{\n    ", "char", " name[", "20", "];", "//查找者的名字 ", "\n    ", "char", " stel[", "20", "] ;\n    ", "int", " n;\n    ", "printf", "(", "\"========查询数据========\\n\"", ");\n    ", "printf", "(", "\"请选择查询方式：\\n1.名字查询\\n2.号码查询\\n\"", ");\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "if", "(n==", "1", ")\n    {\n    ", "printf", "(", "\"请输入名字：\"", ");\n    ", "scanf", "(", "\"%s\"", ",name);\n    }\n    ", "if", "(n==", "2", ")\n    {\n    ", "printf", "(", "\"请输入号码：\"", ");\n    ", "scanf", "(", "\"%s\"", ",stel);\n    }\n    ", "while", "(p1!=", "NULL", ")\n    {\n        ", "if", "(", "strcmp", "(stel,(*p1).stel)==", "0", "||", "strcmp", "(name,(*p1).name)==", "0", ")", "//找到了输出 ", "\n        {\n            ", "printf", "(", "\"你要查找人的数据：\\n\"", ");\n            ", "printf", "(", "\"名字：%s\\n\"", ",(*p1).name);\n            ", "printf", "(", "\"性别：%s\\t\"", ",(*p1).wm);\n            ", "printf", "(", "\"手机：%s\\t\"", ",(*p1).stel);\n            ", "printf", "(", "\"家庭住址：%s\\n\"", ",(*p1).home);\n            ", "break", ";\n        }\n        p1=(*p1).next;\n    }\n    ", "if", "(p1==", "NULL", ")", "//找完了，没找到 ", "\n        ", "printf", "(", "\"您要查找的人不存在\\n\"", ");\n    ", "printf", "(", "\"========结束查找========\\n\"", ");\n}\n", "void", " ", "update", "(stu *p1)", "//修改数据", "\n", "{\n    ", "int", " n;", "//选择要修改的内容", "\n    ", "char", " name[", "20", "];", "//修改人的名字", "\n    ", "printf", "(", "\"========修改数据========\\n\"", ");\n    ", "printf", "(", "\"请输入要修改人的姓名：\"", ");\n    ", "scanf", "(", "\"%s\"", ",name);\n    ", "while", "(p1!=", "NULL", ")\n    {\n        ", "if", "(!", "strcmp", "(name,(*p1).name))", "//找到了 ", "\n        {\n            ", "printf", "(", "\"要修改人的数据为：\\n\"", ");\n            ", "printf", "(", "\"名字：%s\\n\"", ",(*p1).name);\n            ", "printf", "(", "\"性别：%s\\t\"", ",(*p1).wm);\n            ", "printf", "(", "\"手机：%s\\t\"", ",(*p1).stel);\n            ", "printf", "(", "\"家庭住址：%s\\n\"", ",(*p1).home);\n            ", "printf", "(", "\"请选择要修改的信息：\"", ");\n            ", "printf", "(", "\"\\t1.名字\\t2.性别\\t3.手机\\t4.家庭住址\\n\\n您的选择是（1~4）：\"", ");\n            ", "scanf", "(", "\"%d\"", ",&n);\n            ", "switch", "(n)\n            {\n                ", "case", " ", "1", ":\n                    ", "printf", "(", "\"名字：\"", ");\n                    ", "scanf", "(", "\"%s\"", ",&(*p1).name);\n                    ", "break", ";\n                ", "case", " ", "2", ":\n                    ", "printf", "(", "\"性别：\"", ");\n                    ", "scanf", "(", "\"%s\"", ",&(*p1).wm);\n                    ", "break", ";\n                ", "case", " ", "3", ":\n                    ", "printf", "(", "\"手机：\"", ");\n                    ", "scanf", "(", "\"%s\"", ",&(*p1).stel);\n                    ", "break", ";\n                ", "case", " ", "4", ":\n                    ", "printf", "(", "\"家庭住址：\"", ");\n                    ", "scanf", "(", "\"%s\"", ",&(*p1).home);\n                    ", "break", ";\n            }\n            ", "printf", "(", "\"========修改成功========\\n\"", ");\n            ", "break", ";\n        }\n        p1=(*p1).next;\n    }\n    ", "if", "(p1==", "NULL", ")", "//找完了，没有找到 ", "\n    {\n        ", "printf", "(", "\"没有找到该人信息\\n\"", ");\n        ", "printf", "(", "\"========修改失败========\\n\"", ");\n    }\n}\n", "void", " ", "save", "(stu *p1)", "//保存数据 ", "\n", "{\n    ", "printf", "(", "\"========保存数据========\\n\"", ");\n    FILE *fp;\n    ", "char", " file[", "15", "];\n    ", "printf", "(", "\"请输入文件名：\"", ");\n    ", "scanf", "(", "\"%s\"", ",file);\n    ", "if", "((fp=", "fopen", "(file,", "\"at+\"", "))==", "NULL", ")", "//打开文件，若没有则新建立 ", "\n    {\n        ", "printf", "(", "\"cannot open this file\\n\"", ");", "//无法建立新文件 ", "\n        ", "exit", "(", "0", ");", "//正常运行并退出程序 ", "\n    }\n    ", "while", "(p1!=", "NULL", ")\n    {\n        ", "fprintf", "(fp,", "\"%s\\t\"", ",(*p1).name);\n        ", "fprintf", "(fp,", "\"%s\\t\"", ",(*p1).wm);\n        ", "fprintf", "(fp,", "\"%s\\t\"", ",(*p1).stel);\n        ", "fprintf", "(fp,", "\"%s\\n\"", ",(*p1).home);\n        p1=(*p1).next;\n    }\n    ", "printf", "(", "\"========保存成功========\\n\"", ");\n    ", "fclose", "(fp);\n}\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " n;\n    ", "screen", "();\n    ", "while", "(", "1", ")\n    {\n        ", "printf", "(", "\"请输入你的选择(1~9):\"", ");\n        ", "scanf", "(", "\"%d\"", ",&n);\n        ", "if", "(n<", "1", "||n>", "9", ")\n        {\n            ", "printf", "(", "\"输入有误！\"", ");\n            ", "break", ";\n        }\n        ", "switch", "(n)\n        {\n        ", "case", " ", "1", ":\n            ", "input", "();\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "look", "(head);\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "insert", "();\n            ", "break", ";\n        ", "case", " ", "4", ":\n            ", "deleted", "();\n            ", "break", ";\n        ", "case", " ", "5", ":\n            ", "find", "(head);\n            ", "break", ";\n        ", "case", " ", "6", ":\n            ", "update", "(head);\n            ", "break", ";\n        ", "case", " ", "7", ":\n            ", "save", "(head);\n            ", "break", ";\n        ", "case", " ", "8", ":\n            ", "screen", "();\n            ", "break", ";\n        ", "case", " ", "9", ":\n            ", "printf", "(", "\"===============欢迎你再次使用通讯录系统===============\\n\"", ");\n            ", "exit", "(", "0", ");", "//退出系统 ", "\n            ", "break", ";\n        }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/082983491646114.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-comment\"&gt;//注&amp;#xff1a;对原有格式作了一些修改&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//节气信息结构 &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;SolarTerm&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//节气名称 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; poem[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//节气诗句 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; author[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//诗句作者 &lt;/span&gt;\n}; \n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;SolarTerm&lt;/span&gt; ElementType;\n \n&lt;span class=\"hljs-comment\"&gt;//结点结构体 &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LNode&lt;/span&gt;{\n    ElementType Data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LNode&lt;/span&gt; * Next;\n};\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LNode&lt;/span&gt; * List;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; List Position;\n&lt;span class=\"hljs-comment\"&gt;//建立一个带有头结点的空链表&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;List &lt;span class=\"hljs-title\"&gt;MakeEmpty&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n\n    List p &amp;#61; (List)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(LNode));\n    p-&amp;gt;Next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p;\n}\n&lt;span class=\"hljs-comment\"&gt;// 求表长&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Length&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L)&lt;/span&gt;&lt;/span&gt;{\n    List p &amp;#61; L-&amp;gt;Next;&lt;span class=\"hljs-comment\"&gt;//跳过头指针&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; length &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n        {\n            length&amp;#43;&amp;#43;;\n            p &amp;#61; p-&amp;gt;Next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; length;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// printf(&amp;#34;链表为空&amp;#xff01;\\n&amp;#34;);&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n} \n&lt;span class=\"hljs-comment\"&gt;//按值查找   按name查找&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Find&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L,ElementType X)&lt;/span&gt;&lt;/span&gt;{\n    List p &amp;#61; L-&amp;gt;Next;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; index &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n        {\n            index&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ( &lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(p-&amp;gt;Data.name, X.name) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n            {\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; index;\n            }\n            p &amp;#61; p-&amp;gt;Next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;找不到该元素&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;链表为空&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//按位序查找    要定义一个链表指针来接收&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;Position &lt;span class=\"hljs-title\"&gt;FindKth&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; K)&lt;/span&gt;&lt;/span&gt;{\n    List p &amp;#61; L;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ( K &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (K)\n        {\n            p &amp;#61; p-&amp;gt;Next;\n            K--;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; L;\n    }\n    \n} \n&lt;span class=\"hljs-comment\"&gt;//插入   带有头结点的单链表 i是指位序 注意i等于1的情况 &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;/**\n * 将数据后插到第i-1个结点后面 头指针为0\n * */&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Insert&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L,ElementType X,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//1.找第i-1结点&amp;#xff1b;2.p&amp;#61;   第i-1这个结点的地址&amp;#xff1b;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//3.申请新的结点空间  data赋值  &lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//4. s-&amp;gt;Next&amp;#61;p-&amp;gt;Next;  5. p-&amp;gt;Next&amp;#61;s; &lt;/span&gt;\n    List s;\n    List p &amp;#61; L;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( p &amp;amp;&amp;amp; (j&amp;lt;i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) )&lt;span class=\"hljs-comment\"&gt;//j指到i-1位置或者p已经到最后时跳出&lt;/span&gt;\n    {\n        p &amp;#61; p-&amp;gt;Next;\n        &amp;#43;&amp;#43;j;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!p||j&amp;gt;i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//i&amp;lt;1或者i&amp;gt;ListLength(L)&amp;#43;1时,插入位置无效 不调用ListLength,提高效率&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;插入位置无效&amp;#xff01;&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n    s &amp;#61; (List)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(LNode));\n\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(s-&amp;gt;Data.name, X.name);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(s-&amp;gt;Data.poem, X.poem);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(s-&amp;gt;Data.author, X.author);\n\n    s-&amp;gt;Next &amp;#61; p-&amp;gt;Next;\n    p-&amp;gt;Next &amp;#61; s;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n    \n}\n&lt;span class=\"hljs-comment\"&gt;//删除 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Delete&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;{\n\n    &lt;span class=\"hljs-comment\"&gt;/*LNode* s;*/&lt;/span&gt;List p&amp;#61;L;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    List q;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p &amp;amp;&amp;amp; (j&amp;lt;i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))&lt;span class=\"hljs-comment\"&gt;//j指到i-1位置&lt;/span&gt;\n    {\n     p&amp;#61;p-&amp;gt;Next;\n     &amp;#43;&amp;#43;j;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;/*nullptr*/&lt;/span&gt;||!(p-&amp;gt;Next) || j&amp;gt;i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//i&amp;lt;1或者i&amp;gt;ListLength(L)时,删除位置无效&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;删除位置无效&amp;#xff01;&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n    q&amp;#61;p-&amp;gt;Next;\n    p-&amp;gt;Next&amp;#61;q-&amp;gt;Next;&lt;span class=\"hljs-comment\"&gt;//p-&amp;gt;next&amp;#61;p-&amp;gt;next-&amp;gt;next&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(q);&lt;span class=\"hljs-comment\"&gt;//释放空间&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//带头结点的单链表的数据显示 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L)&lt;/span&gt;&lt;/span&gt;{\n    Position p&amp;#61;L-&amp;gt;Next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %s\\n&amp;#34;&lt;/span&gt;,p-&amp;gt;Data.name,p-&amp;gt;Data.poem,p-&amp;gt;Data.author);&lt;span class=\"hljs-comment\"&gt;//显示节气名称和对应的诗句 及作者 &lt;/span&gt;\n        p&amp;#61;p-&amp;gt;Next;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n \n&lt;span class=\"hljs-comment\"&gt;//销毁单链表 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Destroy&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(List L)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(L-&amp;gt;Next){\n        Position s&amp;#61;L-&amp;gt;Next;&lt;span class=\"hljs-comment\"&gt;//2 &lt;/span&gt;\n        L-&amp;gt;Next&amp;#61;s-&amp;gt;Next;&lt;span class=\"hljs-comment\"&gt;//3&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(s);&lt;span class=\"hljs-comment\"&gt;//4&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(L);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//1.创建空的单链表&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//2.位置1插入立春节气信息&amp;#xff0c;位置1插入雨水节气信息&amp;#xff0c;位置1插入春分节气信息 &lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//3.删除位置2的元素&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//4.查找春分节气 在表中的位序 &lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//5.获取链表中元素的个数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//6.销毁单链表 &lt;/span&gt;\n    List L&amp;#61;&lt;span class=\"hljs-built_in\"&gt;MakeEmpty&lt;/span&gt;();\n    ElementType Data;\n\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.name, &lt;span class=\"hljs-string\"&gt;&amp;#34;立春&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.poem,&lt;span class=\"hljs-string\"&gt;&amp;#34;春冬移律吕&amp;#xff0c;天地换星霜 &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.author,&lt;span class=\"hljs-string\"&gt;&amp;#34;唐 元稹 &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Insert&lt;/span&gt;(L,Data,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;(L);\n\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.name, &lt;span class=\"hljs-string\"&gt;&amp;#34;雨水&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.poem,&lt;span class=\"hljs-string\"&gt;&amp;#34;随风潜入夜&amp;#xff0c;润物细无声 &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.author,&lt;span class=\"hljs-string\"&gt;&amp;#34;唐 杜甫&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Insert&lt;/span&gt;(L,Data,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;(L);\n    \n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.name, &lt;span class=\"hljs-string\"&gt;&amp;#34;春分&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.poem,&lt;span class=\"hljs-string\"&gt;&amp;#34;春风如贵客&amp;#xff0c;一到便繁华&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(Data.author,&lt;span class=\"hljs-string\"&gt;&amp;#34;清 袁枚&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Insert&lt;/span&gt;(L,Data,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;(L);\n\n    ElementType NewData;\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;( NewData.name, &lt;span class=\"hljs-string\"&gt;&amp;#34;立春&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;locate&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;Find&lt;/span&gt;(L,NewData));\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;length&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;Length&lt;/span&gt;(L));\n    &lt;span class=\"hljs-built_in\"&gt;Delete&lt;/span&gt;(L,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;(L);\n\n    &lt;span class=\"hljs-built_in\"&gt;Destroy&lt;/span&gt;(L);    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["下面的几个要求如何用链式存储实现，代码如何写", ["\n#", "include", "<stdio.h>\n#", "include", "<stdlib.h>\n#", "include", " <", "string", ".h>\n\n", "//节气信息结构 ", "\n", "struct", " SolarTerm{\n    ", "char", " name", "[", "20", "]", ";", "//节气名称 ", "\n    ", "char", " poem", "[", "30", "]", ";", "//节气诗句 ", "\n    ", "char", " author", "[", "10", "]", "; ", "//诗句作者 ", "\n}; \ntypedef ", "struct", " SolarTerm ElementType;\n\n", "//结点结构体 ", "\n", "struct", " LNode{\n    ElementType Data;\n    ", "struct", " LNode", " * ", "Next;\n};\ntypedef ", "struct", " LNode", " * ", "List;\ntypedef List Position;\n", "//建立一个带有头结点的空链表", "\nList ", "MakeEmpty()", "{\n\n}\n", "// 求表长", "\n", "int", " ", "Length(List L)", "{\n    \n} \n", "//按值查找", "\n", "int", " ", "Find(List L,ElementType X)", "{\n\n}\n", "//按位序查找  ", "\nPosition ", "FindKth(List L,", "int", " K)", "{\n    \n} \n", "//插入   带有头结点的单链表 i是指位序 注意i等于1的情况 ", "\n", "bool", " ", "Insert(List L,ElementType X,", "int", " ", "i", ")", "{\n    ", "//1.找第i-1结点；2.p=   第i-1这个结点的地址；", "\n    ", "//3.申请新的结点空间  data赋值  ", "\n    ", "//4. s->Next=p->Next;  5. p->Next=s; ", "\n    \n}\n", "//删除 ", "\n", "bool", " ", "Delete(List L,", "int", " ", "i", ")", "{\n    \n}\n", "//带头结点的单链表的数据显示 ", "\nvoid ", "Display(List L)", "{\n    Position p=L->Next;\n    ", "while", "(p){\n        printf(", "\"%s %s %s\\n\"", ",p->", "Data", ".", "name,p->", "Data", ".", "poem,p->", "Data", ".", "author);", "//显示节气名称和对应的诗句 及作者 ", "\n        p=p->Next;\n    }\n    printf(", "\"\\n\"", ");\n}\n\n", "//销毁单链表 ", "\nvoid ", "Destroy(List L)", "{\n    ", "while", "(L->Next){\n        Position s=L->Next;", "//2 ", "\n        L->Next=s->Next;", "//3", "\n        free(s);", "//4", "\n    }\n    free(L);\n}\n", "int", " main", "()", "{\n    ", "//1.创建空的单链表", "\n    ", "//2.位置1插入立春节气信息，位置1插入雨水节气信息，位置1插入春分节气信息 ", "\n    ", "//3.删除位置2的元素", "\n    ", "//4.查找春分节气 在表中的位序 ", "\n    ", "//5.获取链表中元素的个数", "\n    ", "//6.销毁单链表 ", "\n    List L=", "MakeEmpty()", ";\n    ElementType Data;\n    strcpy(", "Data", ".", "name, ", "\"立春\"", ");\n    strcpy(", "Data", ".", "poem,", "\"春冬移律吕，天地换星霜 \"", ");\n    strcpy(", "Data", ".", "author,", "\"唐 元稹 \"", ");\n    ", "Insert(L,Data,1)", ";\n    ", "Display(L)", ";\n    strcpy(", "Data", ".", "name, ", "\"雨水\"", ");\n    strcpy(", "Data", ".", "poem,", "\"随风潜入夜，润物细无声 \"", ");\n    strcpy(", "Data", ".", "author,", "\"唐 杜甫\"", ");\n    \n    ", "Insert(L,Data,1)", ";\n    ", "Display(L)", ";\n    \n    strcpy(", "Data", ".", "name, ", "\"春分\"", ");\n    strcpy(", "Data", ".", "poem,", "\"春风如贵客，一到便繁华\"", ");\n    strcpy(", "Data", ".", "author,", "\"清 袁枚\"", ");\n    ", "Insert(L,Data,1)", ";\n    ", "Display(L)", ";\n    ElementType NewData;\n    strcpy( ", "NewData", ".", "name, ", "\"立春\"", "); \n    printf(", "\"locate=%d\\n\"", ",", "Find(L,NewData)", ");\n    printf(", "\"length=%d\\n\"", ",", "Length(L)", ");\n    ", "Delete(L,2)", ";\n    ", "Display(L)", ";\n    ", "Destroy(L)", ";    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//声明学生类&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;() {}&lt;span class=\"hljs-comment\"&gt;//默认构造函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(string student_name, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; student_id, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; student_score)&lt;span class=\"hljs-comment\"&gt;//有参构造函数&lt;/span&gt;\n    {\n        name &amp;#61; student_name;\n        id &amp;#61; student_id;\n        score &amp;#61; student_score;\n    }\n    ~&lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;//析构函数&lt;/span&gt;\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;student的析构函数调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getinfo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//获取信息&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;名字&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t学号&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t成绩:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; score &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getscore&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//获取成绩&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; score;\n    }\n    string name;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; id;    \n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; score;\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;test01&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//测试&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;student &lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;james&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;11111&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    p1.&lt;span class=\"hljs-built_in\"&gt;getinfo&lt;/span&gt;();\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//test01();测试语句&lt;/span&gt;\n    student* info &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; student[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//动态申请5个空间&lt;/span&gt;\n    info[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小李&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;111&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;92&lt;/span&gt;);\n    info[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小张&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;112&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;);\n    info[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小谭&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;113&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;93&lt;/span&gt;);\n    info[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小冉&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;114&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;97&lt;/span&gt;);\n    info[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小陈&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;115&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;95&lt;/span&gt;);\n\n\n    \n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;五名学生的信息为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        info[i].&lt;span class=\"hljs-built_in\"&gt;getinfo&lt;/span&gt;();\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;五名学生按照成绩从小到大排列&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; j&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//按成绩从小到大将每名学生的位置交换&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (info[i].&lt;span class=\"hljs-built_in\"&gt;getscore&lt;/span&gt;() &amp;gt; info[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;getscore&lt;/span&gt;())\n            {\n                student temp;\n                temp &amp;#61; info[i];\n                info[i] &amp;#61; info[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                info[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; temp;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        info[i].&lt;span class=\"hljs-built_in\"&gt;getinfo&lt;/span&gt;();\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["C++对象指针应该怎么写！", ["问题：创建一个对象指针，动态给这个指针分配连续空间构成类似数组的数据结构，数组的元素是学生对象，学生的信息包括学号、姓名和成绩(一门课成绩)，在main函数中将数组元素按学生成绩从小到大的顺序排序并显示出来。（学生对象不得少于5个，显示定义构造函数和析构函数，并在里面加上测试语句）", "我写的：", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<string>", "\n", "using", " ", "namespace", " std;\n\n", "class", " ", "student", "//声明学生类", "\n{", "public", ":\n    ", "student", "() = ", "default", ";", "//默认构造函数", "\n    ", "student", "(string student_name, ", "double", " student_id, ", "double", " student_score)", "//有参构造函数", "\n    {\n        name = student_name;\n        id = student_id;\n        score = student_score;\n    }\n    ~", "student", "()", "//析构函数", "\n    {\n        cout << ", "\"student的析构函数调用\"", " << endl;\n    }\n    ", "void", " ", "getinfo", "()", "//获取信息", "\n    ", "{\n        cout << ", "\"名字：\"", " << name << ", "\"\\t学号：\"", " << id << ", "\"\\t成绩:\"", " << score << endl;\n    }\n    ", "double", " ", "getscore", "()", "//获取成绩", "\n    ", "{\n        ", "return", " score;\n    }\n    string name;\n    ", "double", " id;    \n    ", "double", " score;\n};\n\n", "void", " ", "test01", "()", "//测试", "\n", "{\n    ", "student ", "p1", "(", "\"james\"", ", ", "11111", ", ", "100", ")", ";\n    p1.", "getinfo", "();\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "//test01();测试语句", "\n    student info[", "5", "] = {\n       ", "student", "(", "\"小李\"", ",", "111", ",", "92", "),\n       ", "student", "(", "\"小张\"", ",", "112", ",", "98", "),\n       ", "student", "(", "\"小谭\"", ",", "113", ",", "93", "),\n       ", "student", "(", "\"小冉\"", ",", "114", ",", "97", "),\n       ", "student", "(", "\"小陈\"", ",", "115", ",", "95", ")\n    };\n    cout << ", "\"五名学生的信息为：\"", " << endl;\n    ", "for", " (", "int", " i = ", "0", "; i < ", "5", "; i++)\n    {\n        info[i].", "getinfo", "();\n    }\n    cout << ", "\"五名学生按照成绩从小到大排列：\"", " << endl;\n    ", "for", " (", "int", " j = ", "0", "; j < ", "4", "; j++)", "//按成绩从小到大将每名学生的位置交换", "\n    {\n        ", "for", " (", "int", " i = ", "0", "; i < ", "4", "; i++)\n        {\n            ", "if", " (info[i].", "getscore", "() > info[i + ", "1", "].", "getscore", "())\n            {\n                student temp;\n                temp = info[i];\n                info[i] = info[i + ", "1", "];\n                info[i + ", "1", "] = temp;\n            }\n        }\n    }\n    ", "for", " (", "int", " i = ", "0", "; i < ", "5", "; i++)\n    {\n        info[i].", "getinfo", "();\n    }\n\n    ", "system", "(", "\"pause\"", ");\n    \n    ", "return", "  ", "0", ";\n}\n\n", "\n", "怎么创建对象指针啊！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你现在有什么问题呢&amp;#xff1f;编译错误还是运行结果错误&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["可以帮我看一下登录进去之后浏览函数和借阅函数哪里出问题了吗", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <", "time", ".h>\n\ntypedef struct book\n{\n    char bnum[", "10", "];", "//书籍编号 ", "\n    char bname[", "30", "];", "//书名 ", "\n    char bauthor[", "20", "];", "//作者 ", "\n    char bclassfy[", "10", "];", "//类别编号 ", "\n    float bprice;", "//价格 ", "\n    int quantity;", "//数量 ", "\n    struct book* next;", "//链表指针 ", "\n }BookInfo;\n\n BookInfo* CreateBooksList();", "//创建链表", "\nvoid Insert(BookInfo* head);", "//插入", "\nvoid Delete(BookInfo* head);", "//删除", "\nvoid Print(BookInfo* head);", "//浏览 ", "\nvoid Search(BookInfo* head);", "//查询 ", "\nvoid Update(BookInfo* head);", "//修改 ", "\nvoid Save(BookInfo* head);", "//保存 ", "\nvoid Borrowedbooks();", "//图书借阅 ", "\ntypedef struct User\n{\n    char ", "name", "[", "10", "];", "//名字", "\n    char password[", "10", "];", "//密码", "\n    char book[", "10", "];", "//借的书 ", "\n    struct User* next;  ", "//下一位用户", "\n}user;\nstruct bk", "//查找 ", "\n{\n    char bnum[", "10", "];", "//书籍编号 ", "\n    char bname[", "30", "];", "//书名 ", "\n    char bauthor[", "20", "];", "//作者 ", "\n    char bclassfy[", "10", "];", "//类别编号 ", "\n    float bprice;", "//价格 ", "\n    int quantity;", "//数量 ", "\n};\nstruct ur", "//查找 ", "\n{\n    char ", "name", "[", "10", "];", "//名字", "\n    char password[", "10", "];", "//密码", "\n    char book[", "10", "];", "//借的书 ", "\n};\n\nuser* CreateusersList();", "//创建链表 ", "\nvoid userInsert(user* head);", "//注册用户信息 ", "\nvoid userDelete(user* head);", "//删除用户", "\nvoid userprint(user* head);", "//浏览用户 ", "\nuser* serch_username(char* ", "name", ");", "//根据名字查找用户 ", "\nvoid user_login();  ", "//用户登录", "\nvoid userUpdate(user* head);", "//更改用户信息 ", "\nvoid userSave(user* head);", "//保存用户信息 ", "\nint usermenu();", "//用户系统", "\nvoid adminlogin();", "//管理员登录 ", "\n\n", "//创建用户名单 ", "\nuser* CreateusersList()\n{\n    user* head;\n    head=(user*)malloc(sizeof(user));", "//为头结点分配空间 ", "\n    ", "head", "->", "next=NULL;", "//初始化头指针", "\n    return head; \n } \n ", "//注册用户信息 ", "\nvoid userInsert(user* head)\n{\n    user *b, *p;\n    char flag=", "'Y'", ";\n    p=head;\n    ", "while", " (p->", "next !=NULL)\n        ", "p", "=p->", "next;\n    ", "//开辟新空间，存储用户信息，并加入链表", "\n    ", "while", " (flag==", "'Y'", "||flag==", "'y'", ")\n    {\n        b=(user*)malloc(sizeof(user));", "//开辟新空间", "\n        printf(", "\"请输入用户名：\"", ");", "//获取名称信息 ", "\n        fflush(stdin); ", "//清空缓存区", "\n        ", "scanf", "(\"%s\",b->", "name", ");\n        printf(", "\"请输入密码：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%s\",b->", "password);\n        ", "p", "->", "next=b;", "//将新增加的节点加入链表", "\n        p=b;", "//指针p向后移动，指向尾结点", "\n        ", "b", "->", "next=NULL;\n        printf(", "\"注册成功！\\n\"", ");\n        fflush(stdin);\n        break;\n     } \n     return;\n }\nuser* user_head;  ", "//用户头指针", "\nuser* serch_username(char* ", "name", ")  ", "//查找用户名", "\n{\n    ", "user", "* np = user_head->", "next;\n    ", "while", " (np)\n    {\n        ", "if", " (!strcmp(np->", "name", ", ", "name", ")) return np;\n        ", "np", " = np->", "next;\n    }\n    return NULL;\n}\n\n", "//用户登录 ", "\nvoid user_login()  ", "//用户登录", "\n{\n    char ", "name", "[", "30", "];\n    char password[", "30", "];\n    printf(", "\"请输入您的用户名(不超过10个字母)：\\n\"", ");\n    scanf(", "\"%s\"", ", ", "name", ");\n    printf(", "\"请输入您的账号密码(不超过10个字母)：\\n\"", ");\n    scanf(", "\"%s\"", ", password);\n    int i,j=", "0", ";\n    FILE* fp;\n    struct ur u;\n    fp=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"r\"", "); \n    ", "if", "(j=", "0", ")\n    {\n        ", "for", "(i=", "0", ";i<", "10", ";i++)\n    {\n        fscanf(fp,", "\"%s %s %s\\n\"", ",&u.", "name", ",&u.password,&u.book);\n        ", "if", "(strcmp(u.", "name", ",", "name", ")==", "0", "&&strcmp(u.password,password)==", "0", ")\n        {\n            printf(", "\"恭喜您登录成功,即将跳转用户界面...\\n\"", ");\n            system(", "\"cls\"", ");\n            j=", "1", ";\n            usermenu();\n        }\n    }\n    fclose(fp);\n    }\n    ", "if", "(j=", "0", ")\n    {\n        printf(", "\"用户名或密码错误\\n\"", ");\n    }\n    }\n\n", "//", "\n\n \n ", "//删除用户 ", "\nvoid userDelete(user* head)\n{\n    user *b, *p;\n    char tmp[", "30", "];\n    int flag;\n    flag=", "0", ";\n    b=head;\n    p=head;\n    printf(", "\"请输入要删除的用户名：\"", ");\n    fflush(stdin);\n    scanf(", "\"%s\"", ",tmp);\n    ", "//遍历链表", "\n    ", "while", " (p!=NULL)\n    {\n        ", "if", "(strcmp(p->", "name", ",tmp)==", "0", ")\n        {\n            flag=", "1", ";\n            break;\n        }\n        ", "p", "=p->", "next;\n     } \n    ", "if", " (flag==", "1", ")\n    {\n        ", "for", " (;b->", "next !=p;)\n        {\n            ", "b", "=b->", "next;\n        }\n        ", "b", "->", "next", "=p->", "next;\n        free(p);\n        printf(", "\"删除成功！\\n\"", ");\n    }\n    ", "else", "\n        printf(", "\"该用户不存在！\"", ");\n    return;\n  } \n", "//浏览用户 ", "\nvoid userprint(user* head)\n{\n    user *p;\n    FILE *fp;\n    fp=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"r\"", ");\n    rewind(fp);\n    char ch=fgetc(fp);\n    ", "while", "(ch!=-", "1", ")\n    {\n        putchar(ch);\n        ch=fgetc(fp);\n    }\n    fclose(fp);\n\n }\n", "//查找用户 ", "\nvoid userSearch(user* head)\n{\n    user *p;\n    char tmp[", "30", "];\n    int flag=", "0", ";\n    p=head;\n    ", "if", "(head==NULL||head->", "next==NULL)\n    {\n        printf(", "\"清单为空！\\n\"", ");\n    }\n    ", "else", "\n    {\n        printf(", "\"请输入用户名：\"", ");\n        fflush(stdin);\n        scanf(", "\"%s\"", ",tmp);\n        ", "while", "(p->", "next !=NULL)\n        {\n            ", "p", "=p->", "next;\n            ", "if", "(strcmp(p->", "name", ",tmp)==", "0", ")\n            {\n                flag=", "1", ";\n                ", "printf", "(\"用户名：%s\\n\",p->", "name", ");\n                return;\n            }\n            ", "if", "(p->", "next==NULL)\n            {\n                printf(", "\"\\n查询完毕！\"", ");\n            }\n            \n        }\n        ", "if", "(flag==", "0", ")\n        {\n            printf(", "\"没有找到该用户!\\n\"", ",tmp);\n        }\n    }\n    return;\n }\n \n", "//保存用户信息 ", "\nvoid userSave(user* head)\n{\n    user *p;\n    FILE *fp;\n    p=head;\n    ", "//以只写的方式打开文件", "\n    fp=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"a\"", ");\n    ", "while", " (p->", "next !=NULL)\n    {\n        ", "p", "=p->", "next;\n        ", "fprintf", "(fp,\"%-6s %-10s\\n\",p->", "name", ",p->", "password);\n    }\n    fclose(fp);\n    printf(", "\"保存成功！\\n\"", ");\n    printf(", "\"数据已成功保存到F:\\\\c语言课设\\\\userslist.txt\\n\"", ");\n     \n }   \nint menu();", "//菜单 ", "\n\n", "//创建书单", "\nBookInfo* CreateBooksList()\n{\n    BookInfo* head;\n    head=(BookInfo*)malloc(sizeof(BookInfo));", "//为头结点分配空间 ", "\n    ", "head", "->", "next=NULL;", "//初始化头指针", "\n    return head; \n } \n", "//插入记录", "\nvoid Insert(BookInfo* head)\n{\n    BookInfo *b, *p;\n    char flag=", "'Y'", ";\n    p=head;\n    ", "while", " (p->", "next !=NULL)\n        ", "p", "=p->", "next;\n    ", "//开辟新空间，存储书籍信息，并加入链表", "\n    ", "while", " (flag==", "'Y'", "||flag==", "'y'", ")\n    {\n        b=(BookInfo*)malloc(sizeof(BookInfo));", "//开辟新空间", "\n        printf(", "\"请输入图书编号：\"", ");", "//获取书籍信息 ", "\n        fflush(stdin); ", "//清空缓存区", "\n        ", "scanf", "(\"%s\",b->", "bnum);\n        printf(", "\"请输入书名：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%s\",b->", "bname);\n        printf(", "\"请输入作者：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%s\",b->", "bauthor);\n        printf(", "\"请输入类别编号：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%s\",b->", "bclassfy);\n        printf(", "\"请输入图书价格：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%f\",&b->", "bprice);\n        printf(", "\"请输入图书数量：\"", ");\n        fflush(stdin);\n        ", "scanf", "(\"%d\",&b->", "quantity);\n        ", "p", "->", "next=b;", "//将新增加的节点加入链表", "\n        p=b;", "//指针p向后移动，指向尾结点", "\n        ", "b", "->", "next=NULL;\n        printf(", "\"添加成功！\\n继续添加？(Y/N):\"", ");\n        fflush(stdin);\n        scanf(", "\"%c\"", ",&flag);\n        ", "if", "(flag==", "'N'", "||flag==", "'n'", ")break;\n        ", "else", " ", "if", " (flag==", "'Y'", "||flag==", "'y'", ")continue; \n     } \n     return;\n }\n", "//删除记录", "\nvoid Delete(BookInfo* head)\n{\n    BookInfo *b, *p;\n    char tmp[", "30", "];\n    int flag;\n    flag=", "0", ";\n    b=head;\n    p=head;\n    printf(", "\"请输入要删除的书籍名：\"", ");\n    fflush(stdin);\n    scanf(", "\"%s\"", ",tmp);\n    ", "//遍历链表", "\n    ", "while", " (p!=NULL)\n    {\n        ", "if", "(strcmp(p->", "bname,tmp)==", "0", ")\n        {\n            flag=", "1", ";\n            break;\n        }\n        ", "p", "=p->", "next;\n     } \n    ", "if", " (flag==", "1", ")\n    {\n        ", "for", " (;b->", "next !=p;)\n        {\n            ", "b", "=b->", "next;\n        }\n        ", "b", "->", "next", "=p->", "next;\n        free(p);\n        printf(", "\"删除成功！\\n\"", ");\n    }\n    ", "else", "\n        printf(", "\"该书不存在！\"", ");\n    return;\n  }  \n", "//浏览书单", "\nvoid print(BookInfo* head)\n{\n    BookInfo *p;\n    FILE *fp;\n    fp=fopen(", "\"F:\\\\c语言课设\\\\bookslist.txt\"", ",", "\"r\"", ");\n    rewind(fp);\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"|编号   |书名   |作者    |类别编号   |价格   |数量  |\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    char ch=fgetc(fp);\n    ", "while", "(ch!=-", "1", ")\n    {\n        putchar(ch);\n        ch=fgetc(fp);\n    }\n    fclose(fp);\n\n } \n", "//查找书籍", "\nvoid Search(BookInfo* head)\n{\n    BookInfo *p;\n    char tmp[", "30", "];\n    int flag=", "0", ";\n    p=head;\n    ", "if", "(head==NULL||head->", "next==NULL)\n    {\n        printf(", "\"清单为空！\\n\"", ");\n    }\n    ", "else", "\n    {\n        printf(", "\"请输入书籍名：\"", ");\n        fflush(stdin);\n        scanf(", "\"%s\"", ",tmp);\n        ", "while", "(p->", "next !=NULL)\n        {\n            ", "p", "=p->", "next;\n            ", "if", "(strcmp(p->", "bname,tmp)==", "0", ")\n            {\n                flag=", "1", ";\n                ", "printf", "(\"编号：%s\\n 书名：《%s》\\n作者：%s\\n分类：%s\\n价格：%.2f\\n\",p->", "bnum", ",p->", "bname", ",p->", "bauthor", ",p->", "bclassfy", ",p->", "bprice);\n                return;\n            }\n            ", "if", "(p->", "next==NULL)\n            {\n                printf(", "\"\\n查询完毕！\"", ");\n            }\n            \n        }\n        ", "if", "(flag==", "0", ")\n        {\n            printf(", "\"没有找到《%s》!\\n\"", ",tmp);\n        }\n    }\n    return;\n }\nvoid creat_user_list(char* ", "name", ", char* password)  ", "//创建用户链表", "\n{\n    user* head;\n    user* np = (user*)malloc(sizeof(user));\n    np = user_head;\n    ", "while", " (np->", "next", ") np = np->", "next;\n    User* tp = (user*)malloc(sizeof(user));\n    ", "strcpy", "(tp->", "name", ", ", "name", ");\n    ", "strcpy", "(tp->", "password, password);\n    ", "tp", "->", "next = NULL;\n    ", "np", "->", "next = tp;\n    userSave(head);\n    \n}\n", "//修改信息", "\nvoid Update(BookInfo* head)\n{\n    BookInfo *p;\n    int flag=", "0", ";\n    char tmp[", "30", "];\n    p=head;\n    printf(", "\"请输入书名：\"", ");\n    fflush(stdin);\n    scanf(", "\"%s\"", ",tmp);\n    ", "while", "(p->", "next!=NULL)\n    {\n        ", "p", "=p->", "next;\n        ", "if", "(strcmp(p->", "bname,tmp)==", "0", ")\n        {\n            flag=", "1", ";", "//标志找到所要修改修改的书籍", "\n            printf(", "\"请输入编号：\"", ");\n            fflush(stdin);\n            ", "scanf", "(\"%s\",p->", "bnum);\n            printf(", "\"请输入书名：\"", ");\n            fflush(stdin);\n            ", "scanf", "(\"%s\",p->", "bname);\n            printf(", "\"请输入作者：\"", ");\n            fflush(stdin);\n            ", "scanf", "(\"%s\",p->", "bauthor);\n            printf(", "\"请输入类别编号：\"", ");\n            fflush(stdin);\n            ", "scanf", "(\"%s\",p->", "bclassfy);\n            printf(", "\"请输入价格：\"", ");\n            fflush(stdin);\n            ", "scanf", "(\"%s\",p->", "bprice);\n\n        }\n    }\n    ", "if", " (flag==", "0", ")\n    {\n        printf(", "\"没有找到《%s》!\\n\"", ",tmp);\n    }\n    return;\n } \n \n", "//保存书单到文件", "\nvoid Save(BookInfo* head)\n{\n    BookInfo *p;\n    FILE *fp;\n    p=head;\n    ", "//以只写的方式打开文件", "\n    fp=fopen(", "\"F:\\\\c语言课设\\\\bookslist.txt\"", ",", "\"a\"", ");\n    ", "while", " (p->", "next !=NULL)\n    {\n        ", "p", "=p->", "next;\n        ", "fprintf", "(fp,\"%-6s %-10s %-10s %-10s %.2lf %d\\n\",p->", "bnum", ",p->", "bname", ",p->", "bauthor", ",p->", "bclassfy", ",p->", "bprice", ",p->", "quantity);\n    }\n    fclose(fp);\n    printf(", "\"保存成功！\\n\"", ");\n    printf(", "\"数据已成功保存到F:\\\\c语言课设\\\\bookslist.txt\\n\"", ");\n     \n } \nvoid user_register()  ", "//用户注册", "\n{\n    char ", "name", "[", "30", "];\n    printf(", "\"请输入您需要注册的用户名(不超过25个字母)：\\n\"", ");\n    scanf(", "\"%s\"", ", ", "name", ");\n    User* account;\n    ", "while", " (account = serch_username(", "name", "), account != NULL)\n    {\n        printf(", "\"该用户名已存在，请重新输入！\\n\"", ");\n        scanf(", "\"%s\"", ", ", "name", ");\n    }\n    printf(", "\"请输入您的账号密码(不超过25个字母)：\\n\"", ");\n    char password[", "30", "];\n    scanf(", "\"%s\"", ", password);\n    creat_user_list(", "name", ", password);\n    printf(", "\"恭喜您注册成功！\\n\"", ");\n}\n", "//菜单", "\nvoid main_menu()  ", "//主菜单", "\n{\n    user *head;\n    BookInfo *headd;\n    int a,b,c,d;\n    head=NULL;\n    ", "while", " (", "1", ")\n    {\n        printf(", "\"+---------------------------------------------+\\n\"", ");\n        printf(", "\"*            欢迎进入本图书管理系统!          *\\n\"", ");\n        printf(", "\"*         请输入选项前的数字以确认操作！      *\\n\"", ");\n        printf(", "\"*               1、用户注册                   *\\n\"", ");\n        printf(", "\"*               2、用户登陆                   *\\n\"", ");\n        printf(", "\"*               3、管理员登陆                 *\\n\"", ");\n        printf(", "\"*               0、退出               *\\n\"", ");\n        printf(", "\"+---------------------------------------------+\\n\"", ");\n        int op; \n        scanf(", "\"%d\"", ", &op); \n        switch (op)\n        {\n        case ", "1", ": ", "if", "(head==NULL)\n                {\n                    head=CreateusersList();\n                }\n                userInsert(head);\n                userSave(head);\n                break;\n        case ", "2", ": user_login();\n                usermenu();\n                b=usermenu();\n                switch (b)\n                {\n                    case ", "1", ":print(headd); usermenu();\n                    case ", "2", ":Search(headd); usermenu();\n                    case ", "3", ":Borrowedbooks(); usermenu();\n                    case ", "4", ":\n                    case ", "5", ":userSave(head); usermenu();\n                    case ", "6", ":exit(", "0", "); break;\n                }\n                break;\n        case ", "3", ": adminlogin();  break;\n        case ", "0", ": exit(", "0", "); break;\n        default: printf(", "\"错误的指令，请重新输入！\\n\"", "); \n        }\n    }\n}\nint adminmenu()\n{\n    int sec;\n    user *head;\n    BookInfo *headd;\n    headd=NULL;\n    printf(", "\"                    管理员系统                     \\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"                   1-图书信息录入\\n\"", ");\n    printf(", "\"                   2-图书信息浏览\\n\"", ");\n    printf(", "\"                   3-图书信息查询\\n\"", ");\n    printf(", "\"                   4-图书信息修改\\n\"", ");\n    printf(", "\"                   5-图书信息删除\\n\"", ");\n    printf(", "\"                   6-图书信息保存\\n\"", ");\n    printf(", "\"                   7-删除用户\\n\"", ");\n    printf(", "\"                   8-浏览用户\\n\"", ");\n    printf(", "\"                   9-退出\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"请选择：\"", ");\n    fflush(stdin);\n    scanf(", "\"%d\"", ",&sec);\n    switch (sec)\n    {\n        case ", "1", ":\n            ", "if", "(headd==NULL)\n            {\n                headd=CreateBooksList();\n            }\n            Insert(headd);\n            Save(headd); \n            break;\n        case ", "2", ":print(headd); break;\n        case ", "3", ":Search(headd); break;\n        case ", "4", ":Update(headd); break;\n        case ", "5", ":Delete(headd); break;\n        case ", "6", ":Save(headd); break;\n        case ", "7", ":\n        case ", "8", ":\n        case ", "9", ":exit(", "0", "); break;\n    }\n    ", "while", "(sec>", "7", "||sec<", "0", ")\n    {\n        printf(", "\"选择有误！\\n请重新输入：\"", ");\n        scanf(", "\"%d\"", ",&sec);\n     } \n    return sec;\n }\n ", "//管理员登录 ", "\nvoid adminlogin()\n{\n    char tmp[", "30", "];\n    char tmpp[", "30", "];\n    int flag=", "0", ";\n        printf(", "\"请输入用户名：\"", ");\n        fflush(stdin);\n        scanf(", "\"%s\"", ",tmp);\n        printf(", "\"请输入密码：\"", ");\n        fflush(stdin);\n        scanf(", "\"%s\"", ",tmpp);\n            ", "if", "(strcmp(", "\"dyq\"", ",tmp)==", "0", "&&strcmp(", "\"123\"", ",tmpp)==", "0", ")\n            {\n                flag=", "1", ";\n                printf(", "\"登陆成功\\n\"", ");\n                system(", "\"cls\"", ");\n                adminmenu();\n                \n            }\n            \n        ", "if", "(flag==", "0", ")\n        {\n            printf(", "\"用户名或密码错误!\\n\"", ",tmp);\n        }\n        \n    return;\n }\n int usermenu()\n {\n     int b;\n    printf(", "\"                    用户系统                     \\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"                   1-图书信息浏览\\n\"", ");\n    printf(", "\"                   2-图书信息查询\\n\"", ");\n    printf(", "\"                   3-图书借阅\\n\"", ");\n    printf(", "\"                   4-图书归还\\n\"", ");\n    printf(", "\"                   5-保存用户信息\\n\"", ");\n    printf(", "\"                   6-退出\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"请选择：\"", ");\n    fflush(stdin);\n    scanf(", "\"%d\"", ",&b);\n    ", "while", "(b>", "6", "||b<", "0", ")\n    {\n        printf(", "\"选择有误！\\n请重新输入：\"", ");\n        scanf(", "\"%d\"", ",&b);\n     } \n    return b;    \n }\nint tjzs()", "//统计图书文本个数", "\n{\nFILE *fp;\nint n;\nfloat bprice=", "0", ";\nint quantity=", "0", ";\nchar bum[", "10", "]={", "'\\0'", "},bname[", "30", "]={", "'\\0'", "},bauthor[", "20", "]={", "'\\0'", "},bclassfy[", "10", "]={", "'\\0'", "};\nfp=fopen(", "\"library.txt\"", ",", "\"r\"", ");", "//打开文件", "\n", "for", " (n=", "0", ";!feof(fp);n++)", "//逐个读文件", "\nfscanf(fp,", "\"%-6s %-10s %-10s %-10s %.2lf %d\\n\"", ",bum,bname,bauthor,bclassfy,&bprice,&quantity);\nn--;\nfclose(fp);", "//关闭文件", "\nreturn (n);", "//返回个数", "\n}\n\nvoid Borrowedbooks()", "//借书函数", "\n{\n    FILE *fp,*fp3;\n    BookInfo *head=NULL;\n    BookInfo *p,*p1,*p2;\n    int i,", "loop", ",k,n=", "0", ",flag=", "0", ",s=", "0", ";\n    int quantity=", "0", ";\n    float bprice=", "0", ";\n    char bnum[", "10", "]={", "'\\0'", "},bname[", "30", "]={", "'\\0'", "},bauthor[", "20", "]={", "'\\0'", "},bclassfy[", "10", "]={", "'\\0'", "},\n         ", "name", "[", "30", "]={", "'\\0'", "},password[", "30", "]={", "'\\0'", "},riqi[", "20", "]={", "'\\0'", "},book[", "10", "];\n    char hit=", "0", ";\n        printf(", "\"\\n请输入借阅书名:\\n请输入:\"", ");\n        scanf(", "\"%s\"", ",book);\n    k= tjzs();", "//统计图书馆文件个数", "\n\n    ", "for", " (i=", "0", ";i<k;i++)", "//先将图书信息建立链表，更改库存", "\n        {\n            fscanf(fp,", "\"%-6s %-10s %-10s %-10s %.2lf %d\\n\"", ",bnum,bname,bauthor,bclassfy,&quantity,&bprice);\n            n++;\n            ", "if", "(n==", "1", ")\n            {\n                p1=p2=(BookInfo*)malloc(sizeof(BookInfo));\n                head=p1;\n            }\n            ", "else", "\n               {\n                ", "p2", "->", "next=p1;\n                p2=p1;\n                p1=(BookInfo*)malloc(sizeof(BookInfo));\n\n            }\n            ", "strcpy", "(p1->", "bnum,bnum);", "//复制书号", "\n            ", "strcpy", "(p1->", "bname,", "name", ");", "//复制书名", "\n            ", "strcpy", "(p1->", "bauthor,bauthor);", "//复制作者", "\n            ", "strcpy", "(p1->", "bclassfy,bclassfy);", "//复制出版社", "\n            ", "p1", "->", "quantity=quantity;", "//复制现存量", "\n            ", "p1", "->", "bprice=bprice;", "//复制单价", "\n        }\n        ", "if", "(n==", "0", ")\n         head=NULL;\n        ", "else", "\n         {\n             ", "p2", "->", "next=p1;\n             ", "p1", "->", "next=NULL;\n             fclose(fp);\n         }\n\n    p=head;\n    \n    ", "for", " (;p!=NULL;)\n    {\n        ", "if", "(!(strcmp(p->", "bname,book)))", "//判断要借书的是否存在，标记等于1，存在库存减一", "\n        {\n            \n            flag=", "1", ";\n             ", "loop", "=p->", "quantity;\n             (", "p", "->", "quantity)--;\n         }\n            ", "p", "=p->", "next;\n  }\n    ", "if", "(flag&&(", "loop", ">", "0", "))", "//存在被借的图书且现存量大于0，把库存量变化后的链表存入文件", "\n    {\n\n        fp=fopen(", "\"F:\\\\c语言课设\\\\bookslist.txt\"", ",", "\"w\"", ");\n        fclose(fp);\n        fp=fopen(", "\"F:\\\\c语言课设\\\\bookslist.txt\"", ",", "\"a\"", ");\n        p=head;\n\n        ", "for", "(;p !=NULL;)\n        {\n            ", "fprintf", "(fp,\"%-6s %-10s %-10s %-10s %.2lf %d\\n\",p->", "bnum", ",p->", "bname", ",p->", "bauthor", ",p->", "bclassfy", ",p->", "bprice", ",p->", "quantity);\n                  ", "p", "=p->", "next;\n        }\n        free(p);\n        fclose(fp);\n\n        ", "if", " ((fp3=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"r\"", "))==NULL)", "//建读者文件夹存入借书信息", "\n        {\n            fp3=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"w\"", ");", "//打开只读文件", "\n            fclose(fp3);\n        }\n        fp3=fopen(", "\"F:\\\\c语言课设\\\\userslist.txt\"", ",", "\"a\"", ");\n\n        printf(", "\"\\n请按以下格式输入读者信息:\\n姓名 密码 借书书名\\n请输入:\"", ");", "//录入读者信息", "\n         scanf(", "\"%d %s %s %s\"", ",&", "name", ",password,book);\n        fprintf(fp,", "\"%s %s %s\\n\"", ",", "name", ",password,book);\n        fclose(fp3);\n        printf(", "\"借书成功!请两个月内归还！！！按任意键返回\\n\"", ");\n        usermenu();", "//调用借阅系统", "\n   }\n    ", "else", "\n    {\n        ", "if", "(flag!=", "0", ")\n        printf(", "\"此书已被借完!按任意键返回!\"", ");", "//否则输出此书已被借完", "\n        ", "else", "\n        printf(", "\"查找无此书!按任意键返回\"", ");\n    }\n        usermenu();", "//调用借阅系统", "\n\n}\n\nint main()\n{\n    user *head;\n    BookInfo *headd;\n    int a,b,c,d;\n    head=NULL;\n    ", "for", " (;;)\n    {\n        main_menu();\n    }\n    return ", "0", ";\n}\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改补充如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdlib.h&amp;gt;\n#define MAXSIZE &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//最大长度&lt;/span&gt;\ntypedef &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; ElemType;\ntypedef &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; {\n    ElemType* elem; &lt;span class=\"hljs-comment\"&gt;//指向顺序存储的线性表的基地址&lt;/span&gt;\n    unsigned &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; uListLength; &lt;span class=\"hljs-comment\"&gt;//线性表的当前长度&lt;/span&gt;\n    unsigned &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; uListSize; &lt;span class=\"hljs-comment\"&gt;//线性表的最大长度&lt;/span&gt;\n}SqList;\n&lt;span class=\"hljs-comment\"&gt;//线性表采用顺序存储实现&amp;#xff0c;基本操作函数声明如下&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;InitList(SqList&amp;amp; L, &lt;span class=\"hljs-params\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;uListSize&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;InputList(SqList&amp;amp; L, ElemType &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;DestroyList(SqList&amp;amp; L)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;  &lt;span class=\"hljs-constructor\"&gt;ListLength(SqList L)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;GetElem(SqList L, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;, ElemType &amp;amp;&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ListInsert(SqList &amp;amp;L, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;nPos&lt;/span&gt;, ElemType &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ListDelete(SqList &amp;amp;L, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;nPos&lt;/span&gt;)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;ListPrint(SqList L)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    SqList L;  &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-constructor\"&gt;InitList(L,MAXSIZE)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; MAXSIZE; i&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//读入10个字符并保存在长度为10的顺序表中&lt;/span&gt;\n         &lt;span class=\"hljs-constructor\"&gt;InputList(L,&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&amp;#43;&amp;#39;&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;&amp;#39;)&lt;/span&gt;;\n    &lt;span class=\"hljs-constructor\"&gt;ListPrint(L)&lt;/span&gt;;     &lt;span class=\"hljs-comment\"&gt;//表中的所有字符打印输出&lt;/span&gt;\n\n    &lt;span class=\"hljs-constructor\"&gt;ListDelete(L, 6)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//将第6个存储位置的字符删除&amp;#xff1b;&lt;/span&gt;\n\n    &lt;span class=\"hljs-constructor\"&gt;ListInsert(L, 4, &amp;#39;#&amp;#39;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//第 4 个存储位置之前插入一个字符 #&lt;/span&gt;\n\n    &lt;span class=\"hljs-constructor\"&gt;ListPrint(L)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//表中的所有字符打印输出&lt;/span&gt;\n   \n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;InitList(SqList&amp;amp; L, &lt;span class=\"hljs-params\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;uListSize&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; ElemType&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;uListSize&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListSize &amp;#61; uListSize;\n    return &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;InputList(SqList&amp;amp; L, ElemType &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength &amp;gt;&amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListSize)\n        return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem&lt;span class=\"hljs-literal\"&gt;[L.&lt;span class=\"hljs-identifier\"&gt;uListLength&lt;/span&gt;]&lt;/span&gt; &amp;#61; e;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength&amp;#43;&amp;#43;;\n    return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;DestroyList(SqList&amp;amp; L)&lt;/span&gt;\n{\n    delete&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem &amp;#61; NULL;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListSize &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    return &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ListLength(SqList L)&lt;/span&gt;\n{\n    return (&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength);\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;GetElem(SqList L,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;,ElemType &amp;amp;&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; || &lt;/span&gt;i&amp;gt;&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength) return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    e&amp;#61;&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;\n    return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;LocateELem(SqList L,ElemType &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;uListLength; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;L&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;elem&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;&amp;#61;&amp;#61;e)\n            return i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ListDelete(SqList &amp;amp;L, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;nPos&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((nPos &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-pattern-match\"&gt;&lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt;(n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;))\n       return &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt;;i &amp;lt;&amp;#61; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;-1;i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;)\n         &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[i-1]&amp;#61;&lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[i];\n    --&lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;;\n    return &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ListInsert(SqList &amp;amp;L, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;nPos&lt;/span&gt;, ElemType &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt; &amp;lt; 1)&lt;span class=\"hljs-operator\"&gt;||&lt;/span&gt;(n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;))\n        return &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;;i &amp;gt; n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt; - 1;i--)\n        &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[i] &amp;#61; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[i - 1];\n    &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[n&lt;span class=\"hljs-constructor\"&gt;Pos&lt;/span&gt;-1] &amp;#61; e;\n    &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;;\n    return &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;ListPrint(SqList L)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; 0;i &amp;lt; &lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.u&lt;span class=\"hljs-constructor\"&gt;ListLength&lt;/span&gt;;i&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;)\n         printf(&amp;#34;%c &amp;#34;,&lt;span class=\"hljs-constructor\"&gt;L&lt;/span&gt;.elem[i]);\n    printf(&amp;#34;\\n&amp;#34;);\n}\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["顺序存储线性表问题，如何将代码补充完整", ["问题遇到的现象和发生背景", "\n", "将该段代码补充完整（如有错需修改）", "并用上述基本方法，实现如下要求：", "1）从键盘依次读入 10 个字符并保存在长度为 10 的字符数组中；", "2）将数组第 6 个存储位置的字符删除；", "3）在数组第 4 个存储位置之前插入一个字符 # ；", "4）将数组中的所有字符打印输出；", "使用上述顺序存储线性表的存储结构定义，实现一个一个时间复杂度为", "O(n)、空间复杂度为 O(1)的算法，该算法可删除线性表中所有值为 e", "的数据元素。自行定义函数名称、参数和返回值，并在 main 函数中加入", "对这个函数的调用来将函数调试正确。", "\n", "问题相关代码，请勿粘贴截图", "\n", " #include <stdio.h>", "#include <stdlib.h>", "#define MAXSIZE 10 //最大长度", "typedef char ElemType;", "typedef struct {", "    ElemType* elem; //指向顺序存储的线性表的基地址", "    unsigned int uListLength; //线性表的当前长度", "    unsigned int uListSize; //线性表的最大长度", "\n", "}SqList;", "//线性表采用顺序存储实现，基本操作函数声明如下：", "bool InitList(SqList& L, unsigned int uListSize);", "bool DestroyList(SqList& L);", "int ListLength(SqList L);", "bool GetElem(SqList L, int i, ElemType &e);", "bool ListInsert(SqList &L, int nPos, ElemType e);", "bool ListDelete(SqList &L, int nPos, ElemType &e);", "int main()", "{", "\n", "}\n", "\n", "bool InitList(SqList& L, unsigned int uListSize)", "{", "    L.elem = new ElemType[uListSize];", "    L.uListLength = 0;", "    L.uListSize = uListSize;", "    return true;", "}", "\n", "bool DestroyList(SqList& L)", "{", "    delete[] L.elem;", "    L.elem = nullptr;", "    L.uListLength = 0;", "    L.uListSize = 0;", "    return true;", "}", "int ListLength(SqList L)", "{", "   return (L. uLength);", "}", "int GetElem(SqList L,int i,ElemType &e)", "{", "  if (i<1 || i>L.uLength) return 0;", "  e=L.elem[i-1];", "  return 1;", "}", "int LocateELem(SqList L,ElemType e)", "{", "  for (i=0; i< L.uLength; i++)", "      if (L.elem[i]==e)", "         return i+1;", "  return 0;", "}", "bool ListDelete_Sq(SqList &L, int i)", "{", "   if((i<1)||(i>L.uLength))", "     return false;", "   for (j=i;j<=L.uLength-1;j++)", "　  　L.elem[j-1]=L.elem[j];", "   --L.uLength;", "   return true;", "}"]], "Tag": "程序设计"}
{"Answer": "csv文件和txt文件是一样的，你用文本编辑器打开，然后观察数据的存放规律，自己写个代码读取就可以了。计算平均值和方差，没必要使用动态分配内存，只要把方差公式展开，直接用循环来计算，根本不需要用到大数组，甚至连数组都是没有必要的。\r\n求平均值：\r\nM=（x1+x2+...xn）/n。\r\n求方差：\r\nS^2=((x1-M)^2+(x2-M)^2+...(xn-M)^2)/n\r\n\t\t\t=((x1^2+M^2-2*x1*M）+（x2^2+M^2-2*x2*M）+....（xn^2+M^2-2*xn*M））/n\r\n\t\t\t=(x1^2+x2^2+...xn^2)+(n*M^2)-2*M(x1+x2+......xn））/n\r\n在一个循环中，同时计算E(x)=(x1+x2+...xn)。\r\nE（x^2）=(x1^2+x2^2+...xn^）\r\n那么M=E(x)/n;S^2=(E(x^2)+n*M^2-2*M*E(x))/n。", "Konwledge_Point": "名字空间", "Question": ["C语言对用堆导入并显示的数据进行进一步的处理", ["原题目：求转录RNA组的平均值与标准差（英文翻译过来的）", "\n附加条件：给了一个200多M的文件（数据，可以以txt,csv等形式打开          ）", "\n拿到题目以后解读数据就费了好长时间，数据中的名称全是英文，看了好半天才明白是怎么一回事想到定义数组发现定不了那么大，从网上学了malloc可是完全不知道引入文件后怎么将其导入数组内，试着将网上的程序拼接结果不行。////这时得到了堆空间这个名词，紧接着直接搜出了导入csv文件的相关代码（这里解释一下，这是大学老师布置的一道题，老师只教了我们谭浩强的红皮书就出这样的题目。。。老师也跟我们说了考验我们获取信息的能力。。。只是交作业不算抄袭吧？），就直接粘上了，然后逐行的读懂了这个程序，能够很顺利的用运行显示出所有数据，但是我想进一步做的时候发现自己需要将没一行数据单独进行运算，而这个程序是检测后直接一个个的将一整行显示了，所以我不知道该怎么进行下一步的数据处理。（其实这个程序的核心部分我也只是知道单独行的意思，整体的功能实现并不是太确定）求哪位好心人帮忙给讲一下怎么对导入的数据进行处理。自己的水平实在是不够了。", "\n谢谢了。", "\n#include ", "\n#include ", "\n#include ", "\nint getFilelen(FILE * file)//2.2.0----getfile...函数---- 主要是做逐行读取功能并记录行数 ", "\n{", "\n    int len = 0;//2.2.1---定义了一个len=0其意义暂时不知---- ", "\n    if (file == NULL)", "\n    {", "\n        return -1;//2.2.2如果文件为空（或不存在？？？？？？？？？？）直接结束 ", "\n    }", "\n    char buf[1024];//2.2.3定义一个大小为1024的一维数组（1024有无特殊含义？？？？？？？） ", "\n    //读取每一行", "\n    while (fgets(buf, 1024, file) != NULL)//2.2.4---- 将fp中的内容按1024字节大小读入text中，然后输出。直到读到fp的末尾，为空了。停止读取，然后关闭文件。 -----解释了1024的问题 ", "\n    {", "\n        len++;", "\n        //printf(\"%d \",len);", "\n    }", "\n    //设置光标", "\n    fseek(file, 0, SEEK_SET);//2.2.5---函数。。。跳到 ---错了。。。 意思是把文件指针指向文件的开头", "\n    return len;//2.2.6----返回len----此时回到77行继续运行程序 ", "\n\n", "}", "\n\n", "void readFileData(FILE * file, int len, char ** pArray) //2.3.1文件指针  长度   堆区数组----read为函数名的函数，其意义因该为读取吧 ---读取到数组？？？ ", "\n{", "\n    if (file == NULL || len <= 0 || pArray == NULL)//2.3.2--如果存在什么不合理的情况，直接结束 ", "\n    {", "\n        return;", "\n    }", "\n    char buf[1024]; ", "\n    //读取每一行", "\n    int index = 0;", "\n    while (fgets(buf, 1024, file) != NULL)//同14行 ", "\n    {", "\n        int currentlen = strlen(buf) + 1;//strlen() 这个函数是返回一个字符串中的字符个数,不包括结束符 '\\0';", "\n        char * currenP = (char *)malloc(sizeof(char) * currentlen);", "\n        strcpy(currenP, buf);//复制BUF ，buf包含整个数据库？？ ", "\n\n", "    pArray[index++] = currenP;//将buf放进数组？？？ \n    //  printf(\"%d \",pArray[index++] );\n    memset(buf, 0, 1024);// 将s所指向的某一块内存中的每个字节的内容全部设置为ch指定的ASCII值----转换为ascii之后方便计算？---- \n}//回79行 \n", "\n\n", "}", "\nvoid showFileData(char ** pArray, int len)//以show为开头的函数，其意义因该为展示，显示吧----- ", "\n{", "\n    for (int i = 0; i < len; i++)", "\n    {", "\n    int qwe=i;", "\n        printf(\"第%d行内容:%s\\n\", i+1, pArray[i]);//证实parray实际上包含了数据库 ", "\n      //  printf(\"第%d行数据：%s\\n\",i+1,pArray[qwe+1]);", "\n    }", "\n}//回80行 ", "\nvoid freeSpace(char ** pArray, int len)//不用想了，释放空间，翻译一下就出来了 ", "\n{", "\n    if (pArray == NULL || len == NULL)", "\n    {", "\n        return;", "\n    }", "\n    for (int i = 0; i < len; i++)", "\n    {", "\n        if (pArray[i] != NULL)", "\n        {", "\n            free(pArray[i]);", "\n            pArray[i] = NULL;", "\n        }", "\n    }", "\n}//回81行 ", "\nint test01()//2.1.0----test01函数，整个程序的主体部分（之后的\\n和system只是辅助，显示的好看一些，没有什么意义） -----此函数意义仍为一个目录，具体操作在其他函数中 ", "\n{", "\n    FILE * file = fopen(\"transcript_rna_tissue.csv\", \"r\");//2.1.1打开文件，如果不存在或者打不开的话输出72内容，结束程序。 ", "\n    if (file == NULL)", "\n    {", "\n        printf(\"打开文件失败！\\n\");", "\n        return 0;", "\n    }", "\n    int len= getFilelen(file);//2.1.2----定义（调用）函数get...-----程序跳转至第5行 ", "\n\n", "char ** pArray = (char **)malloc(sizeof(char *) * len);//2.2.0---定义一个符合文件大小要求的堆空间？？？？？ \nreadFileData(file, len, pArray);//2.3.0---函数，跳到25行 -----------去掉这一行数据显示为 第i行数据：（null） \nshowFileData(pArray, len);//到45行 ----------去掉程序不再运行 \nfreeSpace(pArray, len);//到52行 -----可以去掉，不影响显示 \npArray = NULL;//将PARRAY定回空----回87行 \n", "\n\n", "}", "\n\n", "int main()//1.0.0--定义主函数，程序的真正开端 ", "\n{", "\n    test01();//2.0.0--调用函数 test01-----程序跳转到第67行 ", "\n    putchar('\\n');", "\n    system(\"pause\");", "\n}//结束"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用pd.cut()方法,代码如下,如果你的对应关系不一样, 可以修改参数list和labels调整&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import pandas as pd\nimport time\ndict &amp;#61; {\n    &amp;#34;时长&amp;#34;: {\n        0: 3.498,\n        1: 0.535,\n        2: 2.355,\n        3: 6.541,\n        4: 8.508,\n        5: 0.391,\n        6: 1.254,\n        7: 0.276,\n        8: 12.14,\n        9: 0.827,\n        10: 1.996,\n    }\n}\n\ndata &amp;#61; pd.DataFrame(dict)\ndata[&amp;#39;时长区间&amp;#39;] &amp;#61; pd.cut(data[&amp;#39;时长&amp;#39;],\n                      [0,1,2,3,4,5,8,10,100],  # 数值区间\n                      labels &amp;#61; [&amp;#39;(0-1)&amp;#39;,&amp;#39;[1,2)&amp;#39;,&amp;#39;[2,3)&amp;#39;,&amp;#39;[3,4)&amp;#39;,&amp;#39;[4,5)&amp;#39;,&amp;#39;[5,8)&amp;#39;,&amp;#39;[8,10)&amp;#39;,&amp;#39;[10,~)&amp;#39;], # 标签\n                      right&amp;#61;False)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"576\" src=\"https://img-ask.csdnimg.cn/upload/1617197572997.jpg\" width=\"360\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["pandas 计算单格数值的区间，代码如何更高效", ["原始数据：有一列名称为【时长】，描述了1-100s的时间长度，类型为float ", "\n\n", "需求内容：再增加一列【时长区间】，用于描述【时长】列每个单元格值的区间，结果样式如下", "\n\n", "      时长    时长区间", "\n\n", "0  3.498   [3,4)", "\n\n", "1  0.535   (0,1)", "\n\n", "2  2.355   [2,3)", "\n\n", "3  6.541   [5,8)", "\n\n", "4  8.508  [8,10)", "\n\n", " ", "\n\n", "现有的代码，当【时长】只有几百或几千行时，执行速度还是挺快的。但实际【时长】数据多达20-50万行，执行时间会非常非常长", "\n\n", "\n", "import pandas as pd\nimport time\n\ndict = {\n    \"时长\": {\n        0: 3.498,\n        1: 0.535,\n        2: 2.355,\n        3: 6.541,\n        4: 8.508,\n        5: 0.391,\n        6: 1.254,\n        7: 0.276,\n        8: 12.14,\n        9: 0.827,\n        10: 1.996,\n    }\n}\n\ndf = pd.DataFrame(dict)\ndf[\"时长区间\"] = 0\n\ntime_s = time.perf_counter()\n\nfor x, y in enumerate(df[\"时长\"]):\n    if y < 1:\n        df.iloc[[x], [1]] = \"(0,1)\"\n    elif y < 2:\n        df.iloc[[x], [1]] = \"[1,2)\"\n    elif y < 3:\n        df.iloc[[x], [1]] = \"[2,3)\"\n    elif y < 4:\n        df.iloc[[x], [1]] = \"[3,4)\"\n    elif y < 5:\n        df.iloc[[x], [1]] = \"[4,5)\"\n    elif y < 8:\n        df.iloc[[x], [1]] = \"[5,8)\"\n    elif y < 10:\n        df.iloc[[x], [1]] = \"[8,10)\"\n    else:\n        df.iloc[[x], [1]] = \"[10,~)\"\n\ntime_e = time.perf_counter()\n\nprint(df.head())\nprint(df.shape)\n\nprint(\"耗时：%s s\" % (\"%0.2f\" % (time_e - time_s)))", "\n\n", "上述代码是否还有优化的空间，可以让执行速度更快？尤其是【时长】数据多达20-50万行时，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以循环遍历存放投票信息的结构数组&amp;#xff0c;然后判断相同的则打印他的名字和票数即可&amp;#xff0c;下面是一个实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Elector&lt;/span&gt;\n{\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tickets;\n};\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Elector&lt;/span&gt;* &lt;span class=\"hljs-built_in\"&gt;initXM&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector *pxm,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *ptotal)\n{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (pxm &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请确定候选人人数为:\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,ptotal);\npxm &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(*ptotal*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (pxm &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n&lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error:分配空间失败&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;assert&lt;/span&gt;(pxm !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;);\n}\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n&lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请再次确定参选人都为:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;*ptotal;i&amp;#43;&amp;#43;){\npxm-&amp;gt;tickets &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第%d个参选人为:\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,pxm-&amp;gt;name);\npxm&amp;#43;&amp;#43;;\n}\npxm &amp;#61; pxm -*ptotal;\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; pxm;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;doVot&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector *pxm,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *ptotal)&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mark &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; feipiao &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Elector&lt;/span&gt; *p &amp;#61; pxm;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; tmpname[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tmp;\n&lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请确定参与投票人数:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;tmp;i&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(tmpname,&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(tmpname));\nmark &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\npxm &amp;#61; p;\n&lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请问你投给谁:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,tmpname);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;*ptotal;j&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(tmpname,pxm-&amp;gt;name) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\npxm-&amp;gt;tickets&amp;#43;&amp;#43;;\nmark &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\npxm&amp;#43;&amp;#43;;\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (mark &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n&lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error:投票无效&amp;#xff0c;废票&amp;#xff01;&amp;#xff01;&amp;#34;&lt;/span&gt;);\nfeipiao&amp;#43;&amp;#43;;\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; feipiao;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printXM&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector *pxm,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; feipiao,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; total)&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Elector&lt;/span&gt; *max;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; bak &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nmax &amp;#61; pxm;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;total;i&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;名字: %s,票数: %d\\n&amp;#34;&lt;/span&gt;,pxm-&amp;gt;name,pxm-&amp;gt;tickets);\npxm&amp;#43;&amp;#43;;\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;废票为%d张\\n&amp;#34;&lt;/span&gt;,feipiao);\npxm &amp;#61; max ;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;total;i&amp;#43;&amp;#43;){\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max-&amp;gt;tickets &amp;lt; pxm-&amp;gt;tickets){\nmax &amp;#61; pxm;\n}\npxm&amp;#43;&amp;#43;;\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s最终以最高票数%d票当选人大代表\\n&amp;#34;&lt;/span&gt;,max-&amp;gt;name,max-&amp;gt;tickets);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printSame&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Elector * pxm, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; total)&lt;/span&gt;&lt;/span&gt;{\n    \n     &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; temp[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;];\n     &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;total&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;i;j&amp;lt;total;j&amp;#43;&amp;#43;){\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(pxm[i].tickets&amp;lt;pxm[j].tickets){\n            \n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(temp,pxm[i].name);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(pxm[i].name,pxm[j].name);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(pxm[j].name,temp);\n                \n                t &amp;#61; pxm[i].tickets;\n                pxm[i].tickets&amp;#61;pxm[j].tickets;\n                pxm[j].tickets&amp;#61;t;\n                \n            }    \n        }\n            \n    }    \n    &lt;span class=\"hljs-comment\"&gt;/**    printf(&amp;#34; 排序后的数据为&amp;#xff1a;\\n&amp;#34;);\n        for (int i&amp;#61;0;i&amp;lt;total; i&amp;#43;&amp;#43;){\n        \n        \n            \n            printf(&amp;#34;姓名&amp;#xff1a;%s &amp;#xff0c; 票数&amp;#xff1a;%d .\\n&amp;#34;, pxm[i].name, pxm[i].tickets);        \n            \n    }*/&lt;/span&gt;    \n    \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;票数相同的有&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; notsame&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;total&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;){\n            \n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(pxm[i].tickets&amp;#61;&amp;#61;pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].tickets){ &lt;span class=\"hljs-comment\"&gt;//如果前后的票数相同则打印他们的信息&lt;/span&gt;\n                    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;in if.\\n&amp;#34;);&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#xff1a;%s &amp;#xff0c; 票数&amp;#xff1a;%d .\\n&amp;#34;&lt;/span&gt;, pxm[i].name, pxm[i].tickets);\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#xff1a;%s &amp;#xff0c; 票数&amp;#xff1a;%d .\\n&amp;#34;&lt;/span&gt;, pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].name, pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].tickets);\n                    \n                    i&amp;#43;&amp;#43;;\n                    \n                    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((i&amp;lt;total&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;amp;&amp;amp;(pxm[i].tickets&amp;#61;&amp;#61;pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].tickets)){ &lt;span class=\"hljs-comment\"&gt;//如果前后的票数相同&amp;#xff0c;则打印后面一个的票数信息&amp;#xff0c;前面那个已经打印所以不再打印&lt;/span&gt;\n                    \n                        &lt;span class=\"hljs-comment\"&gt;//if(strcmp(pxm[i].name,pxm[i&amp;#43;1].name )!&amp;#61;0){&lt;!-- --&gt;&lt;/span&gt;\n                            \n                            &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;int scond while if,pxm[i].name&amp;#61;%s,pxm[i&amp;#43;1].name&amp;#61;%s .\\n&amp;#34;,pxm[i].name,pxm[i&amp;#43;1].name);&lt;/span&gt;\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#xff1a;%s &amp;#xff0c; 票数&amp;#xff1a;%d .\\n&amp;#34;&lt;/span&gt;, pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].name, pxm[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].tickets);\n                    &lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n                        \n                        notsame&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//标志已经不同了&amp;#xff0c;即i已经&amp;#43;&amp;#43;&lt;/span&gt;\n                        i&amp;#43;&amp;#43;;\n                        \n                    }\n                }\n                \n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(notsame&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){ &lt;span class=\"hljs-comment\"&gt;//如果没有经过比较没有&amp;#43;&amp;#43;&amp;#xff0c;则i&amp;#43;&amp;#43;&amp;#xff0c;以比较下一个&lt;/span&gt;\n                    i&amp;#43;&amp;#43;;    \n                }\n                notsame&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            \n        }\n            \n        \n\n\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Elector&lt;/span&gt; *xm &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; total &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; feipiao &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nxm &amp;#61; &lt;span class=\"hljs-built_in\"&gt;initXM&lt;/span&gt;(xm,&amp;amp;total);\nfeipiao &amp;#61; &lt;span class=\"hljs-built_in\"&gt;doVot&lt;/span&gt;(xm,&amp;amp;total);\n&lt;span class=\"hljs-built_in\"&gt;printXM&lt;/span&gt;(xm,feipiao,total);\n&lt;span class=\"hljs-built_in\"&gt;printSame&lt;/span&gt;(xm,total);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/60095608406611.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["怎样判断票数相同的，并打印输出", ["我想要达到的结果", "\n", "#include <stdio.h>", "#include <stdlib.h>", "#include <string.h>", "#include <assert.h>", "\n", "struct Elector", "{", "    char name[32];", "    int tickets;", "};", "\n", "struct Elector* initXM(struct Elector *pxm,int ", "ptotal)", "{", "    int n;", "    if (pxm == NULL){", "        printf(\"请确定候选人人数为:\\n\");", "        scanf(\"%d\",ptotal);", "        pxm = (struct Elector", ")malloc(", "ptotal", "sizeof(struct Elector));", "        if (pxm == NULL){", "            puts(\"error:分配空间失败\");", "            assert(pxm != NULL);", "        }", "    }", "    int i;", "    puts(\"请再次确定参选人都为:\");", "    for (i=0;i<*ptotal;i++){", "        pxm->tickets = 0;", "        printf(\"第%d个参选人为:\\n\",i+1);", "        scanf(\"%s\",pxm->name);", "        pxm++;", "    }", "    pxm = pxm -*ptotal;", "    return pxm;", "}", "int doVot(struct Elector *pxm,int *ptotal)", "{", "    int i,j;", "    int mark = 0;", "    int feipiao = 0;", "    struct Elector *p = pxm;", "    char tmpname[32];", "    int tmp;", "    puts(\"请确定参与投票人数:\");", "    scanf(\"%d\",&tmp);", "    for (i=0;i<tmp;i++){", "        memset(tmpname,'\\0',sizeof(tmpname));", "        mark = 0;", "        pxm = p;", "        puts(\"请问你投给谁:\");", "        scanf(\"%s\",tmpname);", "        for (j=0;j<*ptotal;j++){", "            if (strcmp(tmpname,pxm->name) == 0){", "                pxm->tickets++;", "                mark = 1;", "            }", "            pxm++;", "        }", "        if (mark == 0){", "            puts(\"error:投票无效，废票！！\");", "            feipiao++;", "        }", "    }", "    return feipiao;", "}", "void printXM(struct Elector *pxm,int feipiao,int total)", "{", "    int i;", "    struct Elector *max;", "    int bak = 0;", "    max = pxm;", "    for (i=0;i<total;i++){", "        printf(\"名字: %s,票数: %d\\n\",pxm->name,pxm->tickets);", "        pxm++;", "    }", "    printf(\"废票为%d张\\n\",feipiao);", "    pxm = max ;", "    for (i=0;i<total;i++){", "        if (max->tickets < pxm->tickets){", "            max = pxm;", "        }", "        pxm++;", "    }", "    printf(\"%s最终以最高票数%d票当选人大代表\\n\",max->name,max->tickets);", "}", "int main()", "{", "    struct Elector *xm = NULL;", "    int total = 0;", "    int feipiao = 0;", "    xm = initXM(xm,&total);", "    feipiao = doVot(xm,&total);", "    printXM(xm,feipiao,total);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不能删除&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["C语言链表操作，第一个链表的创建函数在后面感觉没有用到 ，能用第二段直接替代吗？删除第一段影响链表功能吗？", ["\nCOU *create_form()          \n{\n    COU *head,*tail,*p;\n    int num,stime,ttime;\n    int etime,score,term;\n    char ", "name", "[", "20", "],kind[", "10", "];\n    int size=sizeof(COU);\n    head=tail=NULL;\n    printf(", "\"输入选修课程信息:\\n\"", ");\n    scanf(", "\"%d%s%s%d%d%d%d%d\"", ",&num,", "name", ",kind,&stime,&ttime,&etime,&score,&term);\n    ", "while", "(num!=", "0", ")\n    {\n        p=(COU *)malloc(size);    ", "//开辟结构体大小的空间", "\n        ", "p", "->", "num=num;                 ", "//给结构体中num变量赋值", "\n        ", "strcpy", "(p->", "name", ",", "name", ");    ", "//将name字符串的内容复制到结构体变量name", "\n        ", "strcpy", "(p->", "kind,kind);    \n        ", "p", "->", "stime=stime;\n        ", "p", "->", "ttime=ttime;\n        ", "p", "->", "etime=etime;\n        ", "p", "->", "score=score;\n        ", "p", "->", "term=term;\n        ", "if", "(head==NULL)   ", "//表头指针指为空", "\n        {     \n            head=p;         ", "//则将表头指针指向刚赋完值的一个完整结构体的数据域", "\n        }      \n        ", "else", "             ", "//表头指针不为空则说明有指向的数据内容", "\n        {     \n            ", "tail", "->", "next=p;", "//表尾指针域指向下一个内容的结构体数据域", "\n        }\n        tail=p;\n        scanf(", "\"%d%s%s%d%d%d%d%d\"", ",&num,", "name", ",kind,&stime,&ttime,&etime,&score,&term);\n     }\n     ", "tail", "->", "next=NULL;    \n     return head;\n}\n", "\n", "\n", "void", "* BasicInsert(COU *subj)   \n{\n    COU *ptr2;\n     ", "if", "(head==", "NULL", ")", "//头结点为空", "\n     {\n         head=subj;\n         head->", "next", "=", "NULL", ";\n     }\n     ", "else", "\n     {\n         ", "for", "(ptr2=head;ptr2;ptr2=ptr2->", "next", ")    ", "//从链表头开始找，找到目前最后一个结点", "\n        {        \n            ", "if", "(ptr2->", "next", "==", "NULL", ")            ", "//若当前ptr2是链表最后一个结点", "\n             {\n                 ptr2->", "next", "=subj;            ", "//在链表尾增加一个结点subj", "\n                 subj->", "next", "=", "NULL", ";            ", "//将新结点的指针域置为空结束链表", "\n                 ", "break", ";\n             }\n         }\n     }\n    ", "return", " head;\n}\n", "\n", "typedef", " ", "struct", " ", "courses", "        ", "//定义结构体叫作COU，在后面就可以直接使用", "\n{\n     ", "int", " num;                 ", "//课程编号", "\n     ", "char", " name[", "30", "];           ", "//课程名称", "\n     ", "char", " kind[", "20", "];           ", "//课程性质", "\n     ", "int", " stime;               ", "//总学时", "\n     ", "int", " ttime;               ", "//授课学时", "\n     ", "int", " etime;               ", "//实验或上机学时", "\n     ", "int", " score;               ", "//学分", "\n     ", "int", " term;                ", "//开课学期", "\n     ", "struct", " ", "courses", " *next;\n}COU;              \nCOU *head=", "NULL", ";\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;传参修改下即可&amp;#xff0c;然后程序流程需要稍微修改下&amp;#xff0c;初步修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n\n \n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;malloc.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define OK 1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define ERROR 0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define OVERFLOW -2&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define MAXSIZE 100    //顺序表可能达到的最大长度&lt;/span&gt;\n \n \ntypedef struct\n{\n    char id[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;];\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    double price;\n} BOOK;\n \ntypedef struct {\n    BOOK *elem;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;存储空间的基地址\n    int length;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;图书表中当前图书个数\n} SqList;        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;图书表的顺序存储结构 SqList\n \n \nvoid menu();             &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;主界面函数\nint InitList(SqList *L);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;初始化空表;\nvoid inputBook(SqList *L);     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;录入图书信息\nvoid printfBook(SqList *L);    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 打印图书信息\nint storageBook(SqList *L);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;存储图书信息txt\nvoid readBook(SqList *L);        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取信息\nvoid color(short x);       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;改变字体颜色\n \nint main() {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;程序入口\n    menu();\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nvoid color(short x){\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;改变字体颜色\n    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);\n}\n \nvoid menu() {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;主界面\n    int l;\n    SqList  L;\n    SqList * p &amp;#61; &amp;amp;L;\n   \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(l&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;){\n        \n         printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t欢迎使用图书管理系统\\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     0.初始化图书表 \\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     1.录入图书信息 \\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     2.打印图书信息 \\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     3.查找图书信息 \\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     4.插入图书信息 \\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     5.删除图书信息\\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     6.修改图书信息\\t\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     7.排序图书价格   \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t     8.统计图书数量   \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要执行的操作: &amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;l);\n        switch (l) {\n            case &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                InitList(p);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(L.elem){\n                    color(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;绿色字体\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;图书表初始化成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                    color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xF);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;白色字体\n                }\n              &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;  menu();\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                inputBook(p);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printfBook(p);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n     \n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;表长为&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;, L.length);\n                Sleep(&lt;span class=\"hljs-number\"&gt;5000&lt;/span&gt;);\n                &lt;span class=\"hljs-regexp\"&gt;//m&lt;/span&gt;enu();\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n           \n     \n            default:\n                color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xc); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;红色字体\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;[输入错误]请重新输入有效数字!\\n&amp;#34;&lt;/span&gt;);\n                Sleep(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n                color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xF);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;白色字体\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-regexp\"&gt;//m&lt;/span&gt;enu();\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n \nint InitList(SqList *L) {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;初始化空表\n   \n    (L)-&amp;gt;elem &amp;#61; (BOOK *) malloc(sizeof(BOOK) * MAXSIZE); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;申请内存空间\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!(L)-&amp;gt;elem)\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(OVERFLOW);\n    (L)-&amp;gt;length &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;sizeof(*L)&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,sizeof(*L));\n   \n    return OK;\n}\n \n \nvoid inputBook(SqList *L) {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;录入图书信息\n    int number;\n    char yn;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;L&amp;#61;&amp;#61;NULL:%d&amp;#34;&lt;/span&gt;,L&amp;#61;&amp;#61;NULL); \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入存储的数量&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;number);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; number; i&amp;#43;&amp;#43;) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d本图书信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;图书ISBN&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, (L)-&amp;gt;elem[i].id);\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;ISBN:%s\\n&amp;#34;&lt;/span&gt;, (*L)-&amp;gt;elem[i].id);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;图书名字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, (L)-&amp;gt;elem[i].name);\n        getchar();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;图书价格&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;(L)-&amp;gt;elem[i].price);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt;);\n        (L)-&amp;gt;length&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;录入图书完毕\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(getchar()!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否录入完成&amp;#xff08;y or n&amp;#xff09;\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;yn);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;yn&amp;#61;%c\\n&amp;#34;&lt;/span&gt;,yn);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (yn &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; menu();\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        inputBook(L);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    }\n}\nvoid printfBook(SqList *L) {\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 打印图书信息\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((L)-&amp;gt;length&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        return ;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;(L)-&amp;gt;length;i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t%s\\t%.2f\\n&amp;#34;&lt;/span&gt;,(L)-&amp;gt;elem[i].id,(L)-&amp;gt;elem[i].name,(L)-&amp;gt;elem[i].price);\n    }\n \n}\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;__attribute__((unused)) int storageBook(SqList L) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 存储图书信息txt\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    FILE *fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;C:\\\\Users\\\\ZHUANG\\\\CLionProjects\\\\untitled\\\\data.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#43;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;【错误】文件打开失败&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    }\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; L.length; i&amp;#43;&amp;#43;) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%-15s%-15s%.2lf\\n&amp;#34;&lt;/span&gt;, L.elem[i].id, L.elem[i].name, L.elem[i].price);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    }\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    fclose(fp);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    color(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;[成功]信息存储成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xF);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n \n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;void readBook(SqList L) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;从文件中读取信息\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    FILE *fp;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    int i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;C:\\\\Users\\\\ZHUANG\\\\CLionProjects\\\\untitled\\\\data.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; NULL) {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xc);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;[警告]文件打开失败\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xF);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!feof(fp)){\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            fscanf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%s%s%lf\\n&amp;#34;&lt;/span&gt;, L.elem[i].id, L.elem[i].name, &amp;amp;L.elem[i].price);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            L.length&amp;#43;&amp;#43;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            i&amp;#43;&amp;#43;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t%s\\t%lf\\n&amp;#34;&lt;/span&gt;, L.elem[i].id, L.elem[i].name, L.elem[i].price);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        }\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        color(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;[tip]文件读取成功\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        color(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xF);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        fclose(fp);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    }\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n \n \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/16172307536615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["c语言顺序表打印异常", ["c语言顺序表打印异常，先初始化顺序表，然后录入信息，结果打印不出内容，输出的表长是个很大是数，有正有负像是地址，是哪里出错了呀", "\n", "\n", "#include<stdio.h>", "\n", "#include<malloc.h>", "\n", "#include<stdlib.h>", "\n", "#include <windows.h>", "\n", "#define OK 1", "\n", "#define ERROR 0", "\n", "#define OVERFLOW -2", "\n", "#define MAXSIZE 100    //顺序表可能达到的最大长度", "\n\n\ntypedef struct\n{\n    char id[", "8", "];\n    char name[", "20", "];\n    double price;\n} BOOK;\n\ntypedef struct {\n    BOOK *elem;  ", "//", "存储空间的基地址\n    int length;  ", "//", "图书表中当前图书个数\n} SqList;        ", "//", "图书表的顺序存储结构 SqList\n\n\nvoid menu();             ", "//", "主界面函数\nint InitList(SqList L);", "//", "初始化空表;\nvoid inputBook(SqList L);     ", "//", "录入图书信息\nvoid printfBook(SqList L);    ", "//", " 打印图书信息\nint storageBook(SqList L);   ", "//", "存储图书信息txt\nvoid readBook(SqList L);        ", "//", "从文件中读取信息\nvoid color(short x);       ", "//", "改变字体颜色\n\nint main() {\n    ", "//", "程序入口\n    menu();\n    return ", "0", ";\n}\nvoid color(short x){\n    ", "//", "改变字体颜色\n    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);\n}\n\nvoid menu() {\n    ", "//", "主界面\n    int l;\n    SqList L;\n    printf(", "\"\\t欢迎使用图书管理系统\\t\\n\"", ");\n    printf(", "\"\\t     0.初始化图书表 \\t\\n\"", ");\n    printf(", "\"\\t     1.录入图书信息 \\t\\n\"", ");\n    printf(", "\"\\t     2.打印图书信息 \\t\\n\"", ");\n    printf(", "\"\\t     3.查找图书信息 \\t\\n\"", ");\n    printf(", "\"\\t     4.插入图书信息 \\t\\n\"", ");\n    printf(", "\"\\t     5.删除图书信息\\t\\n\"", ");\n    printf(", "\"\\t     6.修改图书信息\\t\\n\"", ");\n    printf(", "\"\\t     7.排序图书价格   \\n\"", ");\n    printf(", "\"\\t     8.统计图书数量   \\n\"", ");\n    printf(", "\"=================================\\n\"", ");\n    printf(", "\"请输入要执行的操作: \"", ");\n    scanf(", "\"%d\"", ", &l);\n    switch (l) {\n        case ", "0", ":\n            system(", "\"cls\"", ");\n            InitList(L);\n            ", "if", "(L.elem){\n                color(", "2", ");", "//", "绿色字体\n                printf(", "\"图书表初始化成功！\\n\"", ");\n                color(", "0", "xF);", "//", "白色字体\n            }\n            menu();\n            ", "break", ";\n        case ", "1", ":\n            system(", "\"cls\"", ");\n            inputBook(L);\n            ", "break", ";\n        case ", "2", ":\n            system(", "\"cls\"", ");\n            printfBook(L);\n            ", "break", ";\n        case ", "3", ":\n            system(", "\"cls\"", ");\n\n            ", "break", ";\n        case ", "8", ":\n            printf(", "\"表长为：%d\\n\"", ", L.length);\n            Sleep(", "5000", ");\n            menu();\n            ", "break", ";\n\n\n        default:\n            color(", "0", "xc); ", "//", "红色字体\n            printf(", "\"[输入错误]请重新输入有效数字!\\n\"", ");\n            Sleep(", "1000", ");\n            color(", "0", "xF);", "//", "白色字体\n            system(", "\"cls\"", ");\n            menu();\n            ", "break", ";\n    }\n}\n\nint InitList(SqList L) {\n    ", "//", "初始化空表\n    L.elem = (BOOK *) malloc(sizeof(BOOK) * MAXSIZE); ", "//", "申请内存空间\n    ", "if", " (!L.elem)\n        ", "exit", "(OVERFLOW);\n    L.length = ", "0", ";\n    return OK;\n}\n\n\nvoid inputBook(SqList L) {\n    ", "//", "录入图书信息\n    int number;\n    char yn;\n    printf(", "\"请输入存储的数量：\"", ");\n    scanf(", "\"%d\"", ", &number);\n    getchar();\n    ", "for", " (int i = ", "0", "; i < number; i++) {\n        printf(", "\"请输入第%d本图书信息！\\n\"", ", i + ", "1", ");\n        printf(", "\"图书ISBN：\"", ");\n        scanf(", "\"%s\"", ", L.elem[i].id);\n        getchar();\n        printf(", "\"图书名字：\"", ");\n        scanf(", "\"%s\"", ", L.elem[i].name);\n        getchar();\n        printf(", "\"图书价格：\"", ");\n        scanf(", "\"%lf\"", ", &L.elem[i].price);\n        printf(", "\"\\n\\n\"", ");\n        L.length++;\n    }\n    printf(", "\"是否录入完成（y or n）\\n\"", ");\n    scanf(", "\"%s\"", ", &yn);\n    ", "if", " (yn == ", "'y'", ") {\n        system(", "\"cls\"", ");\n        menu();\n    } ", "else", " {\n        system(", "\"cls\"", ");\n        inputBook(L);\n    }\n}\nvoid printfBook(SqList L) {\n    ", "//", " 打印图书信息\n\n    ", "for", "(int i=", "0", ";i<L.length;i++)\n    {\n        printf(", "\"图书编号：%-10s 图书名称：%-10s  价格：%.2f\\\\n\\\\n\"", ",L.elem[i].id,L.elem[i].name,L.elem[i].price);\n    }\n}\n\n", "//", "__attribute__((unused)) int storageBook(SqList L) {\n", "//", "    ", "//", " 存储图书信息txt\n", "//", "    FILE *fp = fopen(", "\"C:\\\\Users\\\\ZHUANG\\\\CLionProjects\\\\untitled\\\\data.txt\"", ", ", "\"a+\"", ");\n", "//", "    ", "if", " (fp == NULL) {\n", "//", "        printf(", "\"【错误】文件打开失败！\\n\"", ");\n", "//", "        return ", "0", ";\n", "//", "    }\n", "//", "    ", "for", " (int i = ", "0", "; i < L.length; i++) {\n", "//", "        fprintf(fp, ", "\"%-15s%-15s%.2lf\\n\"", ", L.elem[i].id, L.elem[i].name, L.elem[i].price);\n", "//", "    }\n", "//", "    fclose(fp);\n", "//", "    color(", "2", ");\n", "//", "    printf(", "\"[成功]信息存储成功！\\n\"", ");\n", "//", "    color(", "0", "xF);\n", "//", "}\n\n", "//", "void readBook(SqList L) {\n", "//", "    ", "//", "从文件中读取信息\n", "//", "    FILE *fp;\n", "//", "    int i=", "0", ";\n", "//", "    fp = fopen(", "\"C:\\\\Users\\\\ZHUANG\\\\CLionProjects\\\\untitled\\\\data.txt\"", ", ", "\"r\"", ");\n", "//", "    ", "if", " (fp == NULL) {\n", "//", "        color(", "0", "xc);\n", "//", "        printf(", "\"[警告]文件打开失败\\n\"", ");\n", "//", "        color(", "0", "xF);\n", "//", "    } ", "else", " {\n", "//", "        ", "while", " (!feof(fp)){\n", "//", "            fscanf(fp,", "\"%s%s%lf\\n\"", ", L.elem[i].id, L.elem[i].name, &L.elem[i].price);\n", "//", "            L.length++;\n", "//", "            i++;\n", "//", "            printf(", "\"%s\\t%s\\t%lf\\n\"", ", L.elem[i].id, L.elem[i].name, L.elem[i].price);\n", "//", "        }\n", "//", "        color(", "2", ");\n", "//", "        printf(", "\"[tip]文件读取成功\\n\"", ");\n", "//", "        color(", "0", "xF);\n", "//", "        fclose(fp);\n", "//", "    }\n", "//", "}\n"]], "Tag": "程序设计"}
{"Answer": "安装一个虚拟打印机软件，打印到图片文件或pdf之类的都可以", "Konwledge_Point": "名字空间", "Question": ["没有打印机，如何测试打印程序，所输出的结果？", ["例如，下面这段程序，我如何测试他的打印结果呢？", "\n\n", " package com.cn.gao;\n\nimport java.awt.Graphics;\nimport java.awt.print.Book;\nimport java.awt.print.PageFormat;\nimport java.awt.print.Paper;\nimport java.awt.print.Printable;\nimport java.awt.print.PrinterException;\nimport java.awt.print.PrinterJob;\nimport java.awt.*;\npublic class PrintTest implements Printable{\n    /**\n\n     * @param Graphic指明打印的图形环境\n\n     * @param PageFormat指明打印页格式（页面大小以点为计量单位，1点为1英才的1/72，1英寸为25.4毫米。A4纸大致为595×842点） \n\n     * @param pageIndex指明页号\n\n     **/\n\n    public int print(Graphics gra, PageFormat pf, int pageIndex) throws PrinterException {\n\n        System.out.println(\"pageIndex=\"+pageIndex);\n        Component c = null;\n\n        //print string    \n        String str = \"中华民族是勤劳、勇敢和富有智慧的伟大民族。\";\n\n        //转换成Graphics2D  \n        Graphics2D g2 = (Graphics2D) gra;\n\n        //设置打印颜色为黑色  \n        g2.setColor(Color.black);\n\n        //打印起点坐标  \n        double x = pf.getImageableX();\n        double y = pf.getImageableY();\n\n        switch(pageIndex){\n            case 0:\n                //设置打印字体（字体名称、样式和点大小）（字体名称可以是物理或者逻辑名称）  \n                //Java平台所定义的五种字体系列：Serif、SansSerif、Monospaced、Dialog 和 DialogInput  \n                Font font = new Font(\"新宋体\", Font.PLAIN, 9);\n                g2.setFont(font);//设置字体  \n\n                //BasicStroke bs_3=new BasicStroke(0.5f);     \n\n                float[] dash1 = {2.0f};\n\n                //设置打印线的属性。   \n                //1.线宽 2、3、不知道，4、空白的宽度，5、虚线的宽度，6、偏移量  \n                g2.setStroke(new BasicStroke(0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 2.0f, dash1, 0.0f));\n                //g2.setStroke(bs_3);//设置线宽 \n                float heigth = font.getSize2D();//字体高度   \n                System.out.println(\"x=\"+x);\n                // -1- 用Graphics2D直接输出   \n                //首字符的基线(右下部)位于用户空间中的 (x, y) 位置处   \n                //g2.drawLine(10,10,200,300);   \n\n                Image src = Toolkit.getDefaultToolkit().getImage(\"F:\\\\workspace\\\\QQ.png\");\n                g2.drawImage(src,(int)x,(int)y,c);\n                int img_Height=src.getHeight(c);\n                int img_width=src.getWidth(c);\n                //System.out.println(\"img_Height=\"+img_Height+\"img_width=\"+img_width) ;  \n\n                g2.drawString(str, (float)x, (float)y+1*heigth+img_Height);\n                g2.drawLine((int)x,(int)(y+1*heigth+img_Height+10),(int)x+200,(int)(y+1*heigth+img_Height+10));\n                g2.drawImage(src,(int)x,(int)(y+1*heigth+img_Height+11),c);\n\n                return PAGE_EXISTS;\n\n            default:\n\n                return NO_SUCH_PAGE;\n\n        }\n\n    }\n\n    public static void main(String[] args) {\n\n        //    通俗理解就是书、文档   \n        Book book = new Book();\n\n        //    设置成竖打   \n        PageFormat pf = new PageFormat();\n        pf.setOrientation(PageFormat.PORTRAIT);\n\n        //    通过Paper设置页面的空白边距和可打印区域。必须与实际打印纸张大小相符。  \n        Paper p = new Paper();\n        p.setSize(590,840);//纸张大小   \n        p.setImageableArea(10,10, 590,840);//A4(595 X 842)设置打印区域，其实0，0应该是72，72，因为A4纸的默认X,Y边距是72  \n        pf.setPaper(p);\n\n        //    把 PageFormat 和 Printable 添加到书中，组成一个页面    \n        book.append(new PrintTest(), pf);\n\n        //获取打印服务对象  \n        PrinterJob job = PrinterJob.getPrinterJob();\n\n        // 设置打印类   \n        job.setPageable(book);\n\n        try {\n            //可以用printDialog显示打印对话框，在用户确认后打印；也可以直接打印  \n            boolean a=job.printDialog();\n            if(a)\n            {\n                job.print();\n            }else{\n                job.cancel();\n            }\n        } catch (PrinterException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;肯定不行了&amp;#xff0c;空表N为0&amp;#xff0c;你j&amp;#61;N-1开始不就是-1了么&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["数据结构链表的顺序存储", ["#include <stdio.h>", "#include <stdlib.h>", "#include <time.h>", "struct SqList{", "    int *Date ; //存储空间的基地址", "    int N ; //N为表中元素个数", "    int MaxSize ; //表的最大容量", "};", "//1.创建空顺序表", "struct SqList * CreateList(int M){", "    struct SqList * L ;   //创建一个名称为L的空顺序表", "    L = (struct SqList *)malloc(sizeof(struct SqList));", "    L->Date = (int *)malloc(sizeof(int) * M);", "    L->N = 0 ;//初始时元素个数为零", "    L->MaxSize = M ;", "    return L ;", "}", "//2.查找", "int Find(struct SqList * L ,int X){", "    for(int i = 0 ; i", "N ;i++){", "        if(L->Date[i]==X)", "        return i ;", "    }", "    return -1 ;", "}", "//3.插入", "void Insert(struct SqList * L,int i ,int X){", "    int j;", "    if(L->N==L->MaxSize){", "        //表已经满了不能插入", "        printf(\"List is Full.\\n\");", "    }", "    if(i<1||i>L->N+1){", "        printf(\"error.\\n\");", "    }", "    for(j=L->N-1;j>=i-1;j--){", "        L->Date[j+1] = L->Date[j]; //将ai", "an向后移动一个位置", "        L->Date[i-1] = X ;   //新元素存进位置i", "        L->N++; //表中元素加一", "    }", "}", "//4.删除", "void Delete(SqList * L, int i){", "    int j;", "    if(i<1||i>L->N){", "        //检查合法性", "        printf (\"error./n\");}", "    for(j = i; j<=L->N-1 ; j++){", "    L->Date[j-1]=L->Date[j];//将ai+1", "an向前移动一个位置", "     L->N--;", "    }", "}", "int main(){", "    int m ,i ;", "    struct SqList *L;", "    scanf(\"%d\",&m);", "    L=CreateList(m);", "    srand((int)time(NULL));", " for(i=0;i<20;i++)", " {", "  Insert(L, i ,rand()%198+2);", "  L->N++;", " }", " for(i=0;iN;i++)", "  printf(\"%d \",L->Date[i]);", "  printf(\"\\n\");", "\n", "}", "为什么像空链表插入随机数时候插不进去，总显示error呢？大神求指教小白谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说错了&amp;#xff0c;是第二个功能&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["c语言链表删除节点的问题", ["\n", "#include <stdio.h>", "\n", "#include <stdlib.h>", "\n", "#include <string.h>", "\n", "#define NAME_LEN 10", "\n", "#define FILE_NAME \"学生成绩.txt\"", "\n", "#pragma warning(disable:4996)", "\n\ntypedef struct {\n    char name[NAME_LEN + ", "1", "];", "//姓名", "\n    ", "int", " number;                ", "//学号", "\n    ", "int", " chinese;            ", "//语文", "\n    ", "int", " math;                ", "//数学", "\n    ", "int", " english;            ", "//英语", "\n    ", "int", " average;            ", "//平均分", "\n    ", "int", " sum;                ", "//总分", "\n} student;                    ", "//用于存储单个学生的信息", "\n\ntypedef struct node {\n    student stu;        ", "//数据域，存储学生信息", "\n    struct node *next;    ", "//指针域，指向下一个节点", "\n} studentNode;            ", "//学生节点", "\n\ntypedef struct {\n    studentNode *head;    ", "//头指针", "\n    studentNode *tail;    ", "//尾指针", "\n    ", "int", " count;            ", "//学生节点总数", "\n} studentList;            ", "//学生链表", "\n\n", "void", " initialize(studentList *L);", "//初始化链表,创建头节点", "\n", "void", " enter(studentList *L);        ", "//录入链表", "\n", "void", " display(studentList *L);    ", "//输出链表", "\n", "void", " find(studentList *L);        ", "//查找某节点", "\n", "void", " modify(studentList *L);    ", "//修改某节点", "\n", "void", " sort(studentList *L);        ", "//降序重新建表并输出", "\n", "void", " write(studentList *L);        ", "//写入文件，边写边释放空间", "\n", "void", " read(studentList *L);        ", "//读取文件，边读边建表", "\n\n", "int", " main() {\n    ", "//互动界面", "\n    printf(", "\"        **************学生成绩管理系统**************\\n\"", ");\n    printf(", "\"        *  1.录入新的学生成绩                      *\\n\"", ");\n    printf(", "\"        *  2.按姓名删除学生成绩                    *\\n\"", ");\n    printf(", "\"        *  3.按姓名查询学生成绩                    *\\n\"", ");\n    printf(", "\"        *  4.输出全部学生的成绩                    *\\n\"", ");\n    printf(", "\"        *  5.按平均分输出学生成绩                  *\\n\"", ");\n    printf(", "\"        *  6.退出学生成绩管理系统                  *\\n\"", ");\n    printf(", "\"        ********************************************\\n\"", ");\n    printf(", "\"                                                      \\n\"", ");\n    ", "//创建学生链表", "\n    studentList *L = (studentList *)malloc(sizeof(studentList));\n    ", "//初始化学生链表", "\n    initialize(L);\n    ", "//从文件里读取数据到链表", "\n    read(L);\n    ", "//互动界面是用一个无限循环和一个switch写的", "\n    ", "while", " (", "1", ") {\n        ", "int", " code;\n        printf(", "\"请输入你想进行的操作对应的数字: \"", ");\n        scanf(", "\"%d\"", ", &code);\n        ", "switch", " (code) {\n            ", "case", " ", "1", ":\n                enter(L);\n                ", "break", ";\n            ", "case", " ", "2", ":\n                modify(L);\n                ", "break", ";\n            ", "case", " ", "3", ":\n                find(L);\n                ", "break", ";\n            ", "case", " ", "4", ":\n                display(L);\n                ", "break", ";\n            ", "case", " ", "5", ":\n                sort(L);\n                ", "break", ";\n            ", "case", " ", "6", ":\n                write(L);\n                free(L->head);    ", "//头节点被销毁", "\n                free(L);        ", "//链表被销毁", "\n                ", "return", " ", "0", ";\n            ", "default", ":\n                printf(", "\"%d是无效的数字，请重新输入！\\n\\n\"", ", code);\n                ", "break", ";\n        }\n    }\n    ", "return", " ", "0", ";\n}\n\n", "void", " initialize(studentList *L) {\n    ", "//创建头节点", "\n    studentNode *s = (studentNode *)malloc(sizeof(studentNode));\n    s->next = ", "NULL", ";\n    ", "//初始化链表：", "\n    ", "//头尾指针均指向头节点，初始长度为零", "\n    L->head = s;\n    L->tail = s;\n    L->count = ", "0", ";\n}\n\n", "void", " enter(studentList *L) {\n    ", "//创建新节点", "\n    studentNode *s = (studentNode *)malloc(sizeof(studentNode));\n    ", "//键入信息并存到新节点中", "\n    printf(", "\"请输入学生姓名：\"", ");\n    scanf(", "\"%s\"", ", s->stu.name);\n    printf(", "\"请输入学生学号：\"", ");\n    scanf(", "\"%d\"", ", &s->stu.number);\n    printf(", "\"请输入语文成绩：\"", ");\n    scanf(", "\"%d\"", ", &s->stu.chinese);\n    printf(", "\"请输入数学成绩：\"", ");\n    scanf(", "\"%d\"", ", &s->stu.math);\n    printf(", "\"请输入英语成绩：\"", ");\n    scanf(", "\"%d\"", ", &s->stu.english);\n    s->stu.sum = s->stu.chinese + s->stu.math + s->stu.english;\n    s->stu.average = s->stu.sum / ", "3", ";\n    ", "//若链表为空，将尾指针指向新节点", "\n    ", "if", " (L->head == L->tail) {\n        L->tail = s;\n    }\n    ", "//将新节点插进链表头部（头插法）", "\n    s->next = L->head->next;\n    L->head->next = s;\n    L->count++;\n    ", "//输出互动信息", "\n    printf(", "\"信息录入成功！\\n\\n\"", ");\n}\n\n", "void", " display(studentList *L) {\n    printf(", "\"共有%d组学生数据：\\n\"", ", L->count);\n    printf(", "\"姓名\\t\\t学号\\t\\t语文\\t\\t数学\\t\\t英语\\t\\t总分\\t\\t平均分\\n\"", ");\n    ", "//创建一节点指针指向头节点", "\n    studentNode *p;\n    p = L->head;\n    ", "//遍历链表输出", "\n    ", "while", " (p->next) {\n        p = p->next;\n        printf(", "\"%s\"", ", p->stu.name);\n        printf(", "\"\\t\\t%d\"", ", p->stu.number);\n        printf(", "\"\\t\\t%d\"", ", p->stu.chinese);\n        printf(", "\"\\t\\t%d\"", ", p->stu.math);\n        printf(", "\"\\t\\t%d\"", ", p->stu.english);\n        printf(", "\"\\t\\t%d\"", ", p->stu.sum);\n        printf(", "\"\\t\\t%d\"", ", p->stu.average);\n        printf(", "\"\\n\"", ");\n    }\n    printf(", "\"\\n\"", ");\n}\n\n", "void", " find(studentList *L) {\n    ", "//让用户输入要查找的学生", "\n    printf(", "\"请输入学生姓名：\"", ");\n    char name[NAME_LEN + ", "1", "];\n    scanf(", "\"%s\"", ", name);\n    ", "//遍历链表对比名字", "\n    studentNode *p = L->head->next;\n    ", "while", " (p) {\n        ", "//符合了就输出并结束函数", "\n        ", "if", " (strcmp(p->stu.name, name) == ", "0", ") {\n            printf(", "\"姓名\\t\\t学号\\t\\t语文\\t\\t数学\\t\\t英语\\t\\t总分\\t\\t平均分\\n\"", ");\n            printf(", "\"%s\"", ", p->stu.name);\n            printf(", "\"\\t\\t%d\"", ", p->stu.number);\n            printf(", "\"\\t\\t%d\"", ", p->stu.chinese);\n            printf(", "\"\\t\\t%d\"", ", p->stu.math);\n            printf(", "\"\\t\\t%d\"", ", p->stu.english);\n            printf(", "\"\\t\\t%d\"", ", p->stu.sum);\n            printf(", "\"\\t\\t%d\"", ", p->stu.average);\n            printf(", "\"\\n\\n\"", ");\n            ", "return", ";\n        }\n        ", "//名字不符合就下一个", "\n        p = p->next;\n    }\n    ", "//遍历完里都没找到这个名字", "\n    printf(", "\"没找到这个%s的信息！\\n\\n\"", ", name);\n}\n\n", "void", " modify(studentList *L) {\n    ", "//让用户输入要删除的学生", "\n    printf(", "\"请输入学生姓名：\"", ");\n    char name[NAME_LEN + ", "1", "];\n    scanf(", "\"%s\"", ", name);\n    ", "//遍历链表对比名字", "\n    studentNode *p = L->head->next;\n    studentNode* q = L->head;\n    ", "while", " (p) {\n        ", "//符合了就让用户重新键入并结束函数", "\n        ", "if", " (strcmp(p->stu.name, name) == ", "0", ") {\n            q->next = p->next;\n            free(p);\n        }\n        ", "//名字不符合就下一个", "\n        q = p;\n        p = p->next;\n    }\n    ", "//遍历完里都没找到这个名字", "\n    printf(", "\"没找到这个%s的信息！\\n\\n\"", ", name);\n}\n\n", "void", " sort(studentList *L) {\n    ", "//两个节点都没有排个屁序", "\n    ", "if", " (L->count < ", "2", ") {\n        printf(", "\"链表排序完成！\\n\"", ");\n        display(L);\n        ", "return", ";\n    }\n    ", "//插入排序", "\n    studentNode *p, *pre, *tmp;\n    ", "//p指向第二个学生节点", "\n    p = L->head->next;\n    ", "//链表从头节点和第一个学生节点处断开", "\n    L->head->next = ", "NULL", ";\n    ", "//从第一个学生节点开始一直往后循环", "\n    ", "while", " (p) {\n        ", "//存好下一个节点的指针", "\n        tmp = p->next;\n        ", "//找到插入位置", "\n        pre = L->head;\n        ", "while", " (pre->next != ", "NULL", " && pre->next->stu.average > p->stu.average)\n            pre = pre->next;\n        ", "//更新尾指针", "\n        ", "if", " (pre->next == ", "NULL", ") {\n            L->tail = p;\n        }\n        ", "//插入", "\n        p->next = pre->next;\n        pre->next = p;\n        ", "//跳到下一个", "\n        p = tmp;\n    }\n    printf(", "\"链表排序完成！\\n\"", ");\n    display(L);\n}\n\n", "void", " write(studentList *L) {\n    ", "//打开文件流", "\n    FILE *fp = fopen(FILE_NAME, ", "\"wb+\"", ");\n    ", "if", " (fp == ", "NULL", ") {\n        printf(", "\"文件%s打开失败\\n\"", ", FILE_NAME);\n        ", "exit", "(EXIT_FAILURE);\n    }\n    ", "//将学生节点总数输出在第一行", "\n    fprintf(fp, ", "\"%d\\n\"", ", L->count);\n    ", "//创建一节点指针指向头节点", "\n    studentNode *p;\n    p = L->head->next;\n    ", "//遍历链表，一组数据作为一行输出", "\n    ", "while", " (p) {\n        fprintf(fp, ", "\"%s \"", ", p->stu.name);\n        fprintf(fp, ", "\"%d \"", ", p->stu.number);\n        fprintf(fp, ", "\"%d \"", ", p->stu.chinese);\n        fprintf(fp, ", "\"%d \"", ", p->stu.math);\n        fprintf(fp, ", "\"%d \"", ", p->stu.english);\n        fprintf(fp, ", "\"%d \"", ", p->stu.sum);\n        fprintf(fp, ", "\"%d \"", ", p->stu.average);\n        fprintf(fp, ", "\"\\n\"", ");\n        ", "//输出完成之后释放节点空间", "\n        studentNode *next = p->next;\n        free(p);\n        p = next;\n    }\n    ", "//关闭文件流", "\n    fclose(fp);\n    ", "//互动信息", "\n    printf(", "\"数据已保存！谢谢使用，再见！\\n\"", ");\n}\n\n", "void", " read(studentList *L) {\n    ", "//打开文件流", "\n    FILE *fp = fopen(FILE_NAME, ", "\"wb+\"", ");\n    ", "if", " (fp == ", "NULL", ") {\n        printf(", "\"文件%s打开失败\\n\"", ", FILE_NAME);\n        ", "exit", "(EXIT_FAILURE);\n    }\n    ", "//读取第一行的学生节点总数", "\n    fscanf(fp, ", "\"%d\"", ", &L->count);\n    ", "//循环读取数据，循环次数为count", "\n    ", "int", " i; \n    ", "for", " ( i = ", "1", "; i <= L->count; i++) {\n        ", "//创建新节点", "\n        studentNode *s = (studentNode *)malloc(sizeof(studentNode));\n        ", "//读取数据", "\n        fscanf(fp, ", "\"%s \"", ", s->stu.name);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.number);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.chinese);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.math);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.english);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.sum);\n        fscanf(fp, ", "\"%d \"", ", &s->stu.average);\n        ", "//将新节点插进链表尾部（尾插法）", "\n        s->next = ", "NULL", ";\n        L->tail->next = s;\n        L->tail = s;\n    }\n    ", "//关闭文件流", "\n    fclose(fp);\n}\n\n\n", "\n", "我想问一下，当我使用modify删除功能（第4功能）的时候，程序运行报错，出了什么问题嘛。"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201904/26/1556260432_840094.png)\r\n图片找不到，问题里面是可以贴图片的\r\n这个问题，找不到配置文件，一看配置里面路径，二看加载，你自己找下在哪里吧", "Konwledge_Point": "名字空间", "Question": ["idea测试出错，一直报xml文件错误", ["写了一个实验类，运行结果。出现错误信息如下代码，请大神帮忙指导一下哪里错误了", "\n\n", "Exception in thread \"main\" org.apache.ibatis.exceptions.PersistenceException: \n### Error building SqlSession.\n### The error may exist in SoneMybatis/SonMybatis.xml\n### Cause: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource SoneMybatis/SonMybatis.xml\n    at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:26)\n    at org.apache.ibatis.session.SqlSessionFactoryBuilder.build(SqlSessionFactoryBuilder.java:82)\n    at org.apache.ibatis.session.SqlSessionFactoryBuilder.build(SqlSessionFactoryBuilder.java:66)\n    at com.cwj.Text.Text.Text1(Text.java:42)\n    at com.cwj.Text.Text.main(Text.java:34)\nCaused by: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource SoneMybatis/SonMybatis.xml\n    at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:109)\n    at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)\n    at org.apache.ibatis.session.SqlSessionFactoryBuilder.build(SqlSessionFactoryBuilder.java:80)\n    ... 3 more\nCaused by: java.io.IOException: Could not find resource SoneMybatis/SonMybatis.xml\n    at org.apache.ibatis.io.Resources.getResourceAsStream(Resources.java:110)\n    at org.apache.ibatis.io.Resources.getResourceAsStream(Resources.java:97)\n    at org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XMLConfigBuilder.java:320)\n    at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:107)\n    ... 5 more\n\n``\n测试类：\n/**\n * Copyright (C), 2015-2019, XXX有限公司\n * FileName: Text\n * Author:   50427\n * Date:     2019/4/25 21:00\n * Description:\n * History:\n * <author>          <time>          <version>          <desc>\n * 作者姓名           修改时间           版本号              描述\n */\npackage com.cwj.Text;\n\nimport com.cwj.User.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.apache.logging.log4j.core.helpers.SystemClock;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * 〈一句话功能简述〉<br> \n * 〈〉\n *\n * @author 50427\n * @create 2019/4/25\n * @since 1.0.0\n */\npublic class Text {\n    public static void main(String[] args) {\n        try {\n            Text1();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    private static void Text1() throws IOException {\n        InputStream input = Resources.getResourceAsStream(\"Mybatis.xml\");\n\n        SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(input);\n        SqlSession session =factory.openSession();\n        User user=session.selectOne(\"Mybatis.xml\",1);\n        System.out.print(user);\n        session.commit();\n    }\n\n}\n\n\n映射xml文件：\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!--\n    namespace：命名空间，它的作用就是对SQL进行分类化管理，可以理解为SQL隔离\n    注意：使用mapper代理开发时，namespace有特殊且重要的作用\n -->\n<mapper namespace=\"test\">\n    <!--\n        [id]：statement的id，要求在命名空间内唯一\n        [parameterType]：入参的java类型\n        [resultType]：查询出的单条结果集对应的java类型\n        [#{}]： 表示一个占位符?\n        [#{id}]：表示该占位符待接收参数的名称为id。注意：如果参数为简单类型时，#{}里面的参数名称可以是任意定义\n     -->\n    <!-- id查询-->\n    <select id=\"findUserById\" parameterType=\"int\" resultType=\"com.cwj.User.User\">\n        SELECT * FROM u_login WHERE uid = #{uid}\n    </select>\n    <!-- 模糊查询-->\n    <select id=\"findUserBy\" parameterType=\"String\" resultType=\"com.cwj.User.User\">\n        SELECT * FROM u_login WHERE uname like %${value}%\n    </select>\n</mapper>\n\n\n全局文件xml:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 配置mybatis的环境信息 -->\n    <environments default=\"development\">\n        <environment id=\"development\">\n            <!-- 配置JDBC事务控制，由mybatis进行管理 -->\n            <transactionManager type=\"JDBC\"></transactionManager>\n            <!-- 配置数据源，采用dbcp连接池 -->\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"/>\n            <property name=\"url\" value=\"jdbc:sqlserver://localhost:1433;DatabaseName=Login?useUnicode=true&amp;characterEncoding=utf-8\"/>\n            <property name=\"username\" value=\"sa\"/>\n            <property name=\"password\" value=\"123456\"/>\n        </dataSource>\n        </environment>\n    </environments>\n    <mappers>\n        <mapper resource=\"SoneMybatis/Soner.xml\"></mapper>\n    </mappers>\n</configuration>\n\n\n\n\n\nlog4j.properties文件：\n\n# Global logging configuration\nlog4j.rootLogger=DEBUG, stdout\n# Console output...\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n\n\n![图片说明]([图片](https://img-ask.csdn.net/upload/201904/26/1556265572_660705.png \"\")\nhttps://img-ask.csdn.net/upload/201904/26/1556265572_660705.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265668_459453.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265677_469377.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265693_482838.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265699_520514.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265706_599402.png)\n![图片说明](https://img-ask.csdn.net/upload/201904/26/1556265793_940721.png)\n\n\n\n\n\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/079056080346189.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;你的score在哪里赋值&amp;#xff1f;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;//test.h&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;pragma&lt;/span&gt; once&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdafx.h&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//非vs2015可以去掉这个头文件&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;valarray&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-comment\"&gt;//C&amp;#43;&amp;#43;继承模板类的原代码&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt; :&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; string, &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    string name;\n    &lt;span class=\"hljs-comment\"&gt;//注意这里只是模板类声明&amp;#xff0c;并不是具体实现&amp;#xff0c;因此没有开辟空间&lt;/span&gt;\n    valarray &amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt; score;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-comment\"&gt;//构造函数这里我们其实可以有很多的选择&amp;#xff0c;下面写出一些&amp;#xff0c;这里选择列表初始化&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//默认的构造函数&amp;#xff0c;没有名字&amp;#xff0c;没有成绩&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;() : &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no name&amp;#34;&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;valarray&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;() {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;默认构造函数的调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//可以初始化名字和成绩的数量&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; string &amp;amp; s, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) : &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;(s), &lt;span class=\"hljs-built_in\"&gt;valarray&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;(n) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(const string &amp;amp; s, int n)的调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//初始化成绩的数量&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;explicit&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Student&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt; : string(&lt;span class=\"hljs-string\"&gt;&amp;#34;na name&amp;#34;&lt;/span&gt;), valarray&amp;lt;double&amp;gt;(n) {&lt;!-- --&gt;&lt;/span&gt;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Student(int n)的调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//既然可以用string &amp;amp;来构造string初始化string&amp;#xff0c;那当然可以用 valarray&amp;lt;double&amp;gt; &amp;amp; 来初始化 valarray &amp;lt;double&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//与string 一样&amp;#xff0c;列表初始化调用其构造函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; string &amp;amp; s, valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt; &amp;amp; v) : &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;(s), &lt;span class=\"hljs-built_in\"&gt;valarray&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;(v) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(const string &amp;amp; s, valarray&amp;lt;double&amp;gt; &amp;amp; v)的调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//可以提供一个C的接口&amp;#xff0c;让类的健壮性更强&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//让所有成绩全初始化为val&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * s, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; * val, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) : &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;(s), &lt;span class=\"hljs-built_in\"&gt;valarray&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;(val, n) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;(const char * s, double * val, int n)的调用&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//因为在类中没有用到new操作&amp;#xff0c;所以写一个空实现的析构函数即可&lt;/span&gt;\n    ~&lt;span class=\"hljs-built_in\"&gt;Student&lt;/span&gt;() &amp;#61; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;//类方法&amp;#xff0c;我们用的私有继承&amp;#xff0c;所以string类中的类方法和valarray中的类方法全部变为私有&amp;#xff0c;但我们可以在派生类中提供对外的接口&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//假设写一个求平均分的类方法&amp;#xff0c;虽然不能Student::string::length()&amp;#xff0c;但我们可以这样做&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;average&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//在类中实现的函数会自动转换为内联函数&amp;#xff0c;这里在类外写&lt;/span&gt;\n\n                            &lt;span class=\"hljs-comment\"&gt;//友元函数虫重载 &amp;lt;&amp;lt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream &amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream &amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student &amp;amp; s);\n};\n\n\nostream &amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream &amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student &amp;amp; s)\n{\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;name is : &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; s.name.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;() &amp;lt;&amp;lt; endl;\n    os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;score is : &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; s.score.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(); i&amp;#43;&amp;#43;) {\n        cout &amp;lt;&amp;lt; s.score[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n&lt;span class=\"hljs-comment\"&gt;//使用类方法&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Student::average&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//return score.sum() / score.size();&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a &amp;#61; valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;();\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b &amp;#61; (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;() / (&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;//main.cpp&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdafx.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;test.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; Student S;\n    &lt;span class=\"hljs-comment\"&gt;//下面用各种构造函数来进行对象的初始化&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//默认构造函数&lt;/span&gt;\n    S s1;\n    S s2 &amp;#61; S{ &lt;span class=\"hljs-string\"&gt;&amp;#34;lilei&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; };\n    S s3{ &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; };\n    &lt;span class=\"hljs-function\"&gt;valarray&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;v&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    S s4{ &lt;span class=\"hljs-string\"&gt;&amp;#34;liha&amp;#34;&lt;/span&gt;, v };\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; sor &amp;#61; &lt;span class=\"hljs-number\"&gt;80.4&lt;/span&gt;;\n    S s5 &amp;#61; { &lt;span class=\"hljs-string\"&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;, &amp;amp;sor, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; };\n    cout &amp;lt;&amp;lt; s5.&lt;span class=\"hljs-built_in\"&gt;average&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["C++ has-a 关系的建立（私有继承）中遇到了问题", ["\n​\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<valarray>", "\n", "using", " ", "namespace", " std;\n", "//C++继承模板类的原代码", "\n\n", "class", " ", "Student", " :", "private", " string, ", "private", " valarray<", "double", ">\n{\n", "public", ":\n    string name;\n    ", "//注意这里只是模板类声明，并不是具体实现，因此没有开辟空间", "\n    valarray <", "double", "> score;\n", "public", ":\n    ", "//构造函数这里我们其实可以有很多的选择，下面写出一些，这里选择列表初始化", "\n    ", "//默认的构造函数，没有名字，没有成绩", "\n    ", "Student", "(): ", "string", "(", "\"no name\"", "), ", "valarray", "<", "double", ">() {\n        cout << ", "\"默认构造函数的调用\"", " << endl;\n    }\n\n    ", "//可以初始化名字和成绩的数量", "\n    ", "Student", "(", "const", " string & s, ", "int", " n) : ", "string", "(s), ", "valarray", "<", "double", ">(n) {\n        cout << ", "\"(const string & s, int n)的调用\"", " << endl;\n    }\n\n    ", "//初始化成绩的数量", "\n    ", "explicit", " ", "Student", "(", "int", " n)", " : string(", "\"na name\"", "), valarray<double>(n) {", "\n        cout << ", "\"Student(int n)的调用\"", " << endl;\n    }\n\n    ", "//既然可以用string &来构造string初始化string，那当然可以用 valarray<double> & 来初始化 valarray <double>", "\n    ", "//与string 一样，列表初始化调用其构造函数", "\n    ", "Student", "(", "const", " string & s, valarray<", "double", "> & v) : ", "string", "(s), ", "valarray", "<", "double", ">(v) {\n        cout << ", "\"(const string & s, valarray<double> & v)的调用\"", " << endl;\n    }\n\n    ", "//可以提供一个C的接口，让类的健壮性更强", "\n    ", "//让所有成绩全初始化为val", "\n    ", "Student", "(", "const", " ", "char", " * s, ", "double", " * val, ", "int", " n) : ", "string", "(s), ", "valarray", "<", "double", ">(val,n) {\n        cout << ", "\"(const char * s, double * val, int n)的调用\"", " << endl;\n    }\n\n    ", "//因为在类中没有用到new操作，所以写一个空实现的析构函数即可", "\n    ~", "Student", "() = ", "default", ";\n\n    ", "//类方法，我们用的私有继承，所以string类中的类方法和valarray中的类方法全部变为私有，但我们可以在派生类中提供对外的接口", "\n    ", "//假设写一个求平均分的类方法，虽然不能Student::string::length()，但我们可以这样做", "\n    ", "double", " ", "average", "()", " ", "const", "; ", "//在类中实现的函数会自动转换为内联函数，这里在类外写", "\n\n    ", "//友元函数虫重载 <<", "\n    ", "friend", " ostream & ", "operator", "<<(ostream & os,", "const", " Student & s);\n};\n\n\nostream & ", "operator", "<<(ostream & os,", "const", " Student & s)\n{\n    os << ", "\"name is : \"", " << s.name << endl;\n    os << ", "\"score is : \"", " << endl;\n    ", "for", "(", "int", " i=", "0", ";s.score.", "size", "();i++){\n        cout << s.score[i] << ", "\" \"", ";\n    }\n    ", "return", " os;\n}\n", "//使用类方法", "\n", "double", " ", "Student::average", "()", " ", "const", "\n", "{\n    ", "//return score.sum() / score.size();", "\n    ", "return", " valarray<", "double", ">::", "sum", "() / (", "double", ")valarray<", "double", ">::", "size", "();\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "typedef", " Student S;\n    ", "//下面用各种构造函数来进行对象的初始化", "\n    ", "//默认构造函数", "\n    S s1;\n    S s2 = S{", "\"lilei\"", ", ", "3", "};\n    S s3 {", "3", "};\n    ", "valarray<", "double", "> ", "v", "(", "3", ")", ";\n    S s4 {", "\"liha\"", ", v};\n    ", "double", " sor = ", "80.4", ";\n    S s5 = {", "\"hello\"", ", &sor, ", "3", "};\n    cout << s5.", "average", "();\n}\n\nhttps:", "//img-blog.csdnimg.cn/b1569c6bff7446b095b061202c378511.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASkFONjA1NQ==,size_20,color_FFFFFF,t_70,g_se,x_16", "\n 这样看是没错\n\n但在有这样的警告\n\nhttps:", "//img-blog.csdnimg.cn/59715f22729b416387c09abe70c11b61.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASkFONjA1NQ==,size_14,color_FFFFFF,t_70,g_se,x_16", "\n\n 显示我们定义的构造函数没有使用，average显示出来的也不对，不知道大佬们有没有什么解决问题的办法，帮帮孩子把（快哭了)\n"]], "Tag": "程序设计"}
{"Answer": "http://xx.xx.x.xx/test/index.aspx\r\n这个地址，你用浏览器，可以实现访问吗？\r\n要在一个局域网", "Konwledge_Point": "名字空间", "Question": ["Android WebView与Html交互问题", ["在Android App里，选择好参数，点击App内的一个Button后，", "\n把参数传到部署在服务器上的html，html显示查询结果，该怎么实现呢？", "\n\n", "HTML", "\n\n", " <%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"index.aspx.cs\" Inherits=\"index\" %>\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n    <title>测试</title>\n    <script type=\"text/javascript\">          \n         function Myonclick() {\n             alert(\"触发了onclick事件！\");\n         }\n         function del() {\n             alert(\"OK\");\n         }       \n\n        function showFromHtml() {\n            document.getElementById(\"id_input\").value = \"Java call Html\";\n        }\n\n        function showFromHtml2(param) {\n            document.getElementById(\"id_input2\").value = \"Java call Html : \" + param;\n        }\n\n        function JavacallHtml2(param) {\n            document.getElementById(\"id_input2\").value = \"Javas call Html : \" + param;\n        }\n\n\n    </script>\n</head>\n\n\n\n<body>\n    <form id=\"form1\" runat=\"server\">\n\n\n<input type=\"button\" value=\"HtmlcallJava\" onclick=\"showFromHtml()\" />\n<input type=\"button\" value=\"HtmlcallJava2\" onclick=\"showFromHtml2()\" />\n\n<input id=\"id_input\" style=\"width: 90%\" type=\"text\" value=\"null\" />\n<br />\n<input type=\"button\" value=\"JavacallHtml\" onclick=\"window.jsObj.JavacallHtml()\" />\n\n<br />\n\n<input id=\"id_input2\" style=\"width: 90%\" type=\"text\" value=\"null\" />\n<br/>\n<input type=\"button\" value=\"JavacallHtml2\" onclick=\"window.jsObj.JavacallHtml2()\" />\n    </form>\n</body>\n</html>\n\n", "\n\n", "Android", "\n\n", " private static final String url = \"http://xx.xx.x.xx/test/index.aspx\";\n    private WebView mWebView;\n    private String Msg = null;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_web);\n\n        Intent intent = getIntent();\n        Msg = intent.getStringExtra(\"jobno\");\n        initView();\n    }\n\n    private void initView() {\n        mWebView = (WebView) findViewById(R.id.web);\n        mWebView.setWebChromeClient(new WebChromeClient());\n        //或的WebView的Setting\n        WebSettings settings = mWebView.getSettings();\n        //设置支持js，看方法名字就知道啥意思\n        settings.setJavaScriptEnabled(true);\n        settings.setDefaultTextEncodingName(\"GBK\");//设置字符编码\n        mWebView.setScrollBarStyle(0);//滚动条风格，为0指滚动条不占用空间，直接覆盖在网页上\n        mWebView.loadUrl(\"javascript:showInfoFromJava('\" + Msg + \"')\");       \n        //加载网页路径\n        mWebView.loadUrl(url);\n    }\n\n", "\n\n", "上面的代码测试，无法获得从App传到THML的参数！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  scanf(&amp;#34;%s&amp;#34;, &amp;amp;answer);  定义的 answer是字符变量&amp;#xff0c;所以应该改为&amp;#xff1a;  scanf(&amp;#34; %c&amp;#34;, &amp;amp;answer);  不是用 %s   ,同时注意” %c“ 引号里%c前面留一空格。&lt;/span&gt;&lt;br /&gt;整体修改如下&amp;#xff0c;修改处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//#include &amp;#34;xx.h&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//1- 结构体&amp;#xff1a; 英雄 职业 能力 时间&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_job&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//typrdef 宏定义一个类型 &amp;#xff08;和define差不多) 简化结构体的使用 Job.job&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* name;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* desc; &lt;span class=\"hljs-comment\"&gt;//职业描述&lt;/span&gt;\n}Job;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_ability&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* name;&lt;span class=\"hljs-comment\"&gt;//特殊能力名称&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* intro; &lt;span class=\"hljs-comment\"&gt;//特殊能力说明&lt;/span&gt;\n}Ability;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_pubTime&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; year;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; month;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; day;\n}PubTime;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_hero&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* name; &lt;span class=\"hljs-comment\"&gt;//英雄 名称&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* sex;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* job; &lt;span class=\"hljs-comment\"&gt;//英雄的职业&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; hp; &lt;span class=\"hljs-comment\"&gt;//生命值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; speed; &lt;span class=\"hljs-comment\"&gt;//攻击速度&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* ability; &lt;span class=\"hljs-comment\"&gt;//特殊能力&lt;/span&gt;\n    PubTime pubtime; &lt;span class=\"hljs-comment\"&gt;//上线时间&lt;/span&gt;\n}Hero;\n&lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; Hero heros[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//当前的英雄总数&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;InputHero&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ShowHero&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;// 这里 漏了ShowHero()函数声明  修改&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//void Input();&lt;/span&gt;\n\nHero heros[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-comment\"&gt;//给他留够足够的空间&lt;/span&gt;\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;hah&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;m&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;刺客&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;579&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;啊啊&amp;#34;&lt;/span&gt;,{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2002&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;}},\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;aa&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;m&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;法师&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3.5&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;啊啊&amp;#34;&lt;/span&gt;,{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2001&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;04&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;}},\n&lt;span class=\"hljs-comment\"&gt;//不可以使用单引号&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/span&gt;\n};\n\n&lt;span class=\"hljs-comment\"&gt;//也可以使用 int len &amp;#61;sizeof(heros)/sizeof(Hero)&lt;/span&gt;\n\nJob jobs[] &amp;#61; {\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;法师&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;安琪拉&amp;#34;&lt;/span&gt;},\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;刺客&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;李白&amp;#34;&lt;/span&gt;},\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;战士&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;亚瑟&amp;#34;&lt;/span&gt;},\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;射手&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;虞姬&amp;#34;&lt;/span&gt;},\n{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;辅助&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;蔡文姬&amp;#34;&lt;/span&gt;}\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;InputHero&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;ShowHero&lt;/span&gt;();\n    &lt;span class=\"hljs-comment\"&gt;//InputHero();&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;InputHero&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//首先录入内容&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//第一个录入完毕后&amp;#xff0c;询问是否继续录入 do-while结构&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; answer &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (count &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;库存英雄已满 请到商城购买&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n----------------当前录入第%d位英雄的信息----------------\\n&amp;#34;&lt;/span&gt;, count &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;英雄的名称是&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        heros[count].name &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, heros[count].name);\n        &lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdin);\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n性别是&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdin);\n        heros[count].sex &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, heros[count].sex);\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;heros[count].sex);    //修改&lt;/span&gt;\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n职业是&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdin);\n        heros[count].job &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, heros[count].job);\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;heros[count].job);  //修改&lt;/span&gt;\n\n        heros[count].hp &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n血量为&amp;#xff1a;%.2f&amp;#34;&lt;/span&gt;, heros[count].hp);\n\n        heros[count].speed &amp;#61; &lt;span class=\"hljs-number\"&gt;0.77&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n速度为&amp;#xff1a;%.2f&amp;#34;&lt;/span&gt;, heros[count].speed);\n\n        &lt;span class=\"hljs-comment\"&gt;//heros[count].ability &amp;#61; &amp;#34;上天&amp;#xff0c;入地&amp;#34;;   char *ability; 是一个char型数组 字符指针&amp;#xff0c;可以直接指向一个字符串常量&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n特殊能力为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        heros[count].ability &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//heros[count].name &amp;#61; (char*)malloc(50);  //修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, heros[count].ability);   \n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, heros[count].name);         //修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdin);\n\n        heros[count].pubtime.year &amp;#61; &lt;span class=\"hljs-number\"&gt;2016&lt;/span&gt;;\n        heros[count].pubtime.month &amp;#61; &lt;span class=\"hljs-number\"&gt;04&lt;/span&gt;;\n        heros[count].pubtime.day &amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n上线时间为%d年%d月%d日&amp;#34;&lt;/span&gt;,\n            heros[count].pubtime.year, heros[count].pubtime.month, heros[count].pubtime.day);\n\n        count&amp;#43;&amp;#43;;&lt;span class=\"hljs-comment\"&gt;//每次录入完成后 英雄总数加1&lt;/span&gt;\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n是否继续录入&amp;#xff1f;(y/n)&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;answer);//也可以用getch()  &lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//getchar()用户按下键后立即触发下面语句 不会再让用户敲回车&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;answer);     &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;answer);&lt;/span&gt;\n\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (answer &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || answer &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ShowHero&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; count; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t%s\\t%d-%d-%d\\n&amp;#34;&lt;/span&gt;, (heros &amp;#43; i)-&amp;gt;name, heros[i].job, \n            heros[i].pubtime.year, heros[i].pubtime.month, heros[i].pubtime.day);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["关于C语言！！这个问题该怎么解决呢？怎么办呢？", ["源文件（主函数）", "#include <stdlib.h>", "#include <stdio.h>", "#include \"xx.h\"", "\n", "extern Hero heros[100];", "int main()", "{", "\n", "Input()", ";", "\nShowHero()", ";", "\n//InputHero()", ";", "\n", "\n", "}", "\n", "一个源文件的内容", "\n", "#include <stdlib.h>", "#include <stdio.h>", "#include \"xx.h\" ", "\n", "Hero heros[100] = {  //给他留够足够的空间", "    {1,\"hah\",\"m\",\"刺客\",579,1.5,\"啊啊\",{2002,01,11}},", "    {2,\"aa\",\"m\",\"法师\",1000,3.5,\"啊啊\",{2001,04,15}},", "\n", "//", "不可以使用单引号！！！\n", "\n", "};", "int count = 2;  //当前的英雄总数", "//也可以使用 int len =sizeof(heros)/sizeof(Hero)", "\n", "Job jobs[] = {", "    {1,\"法师\",\"安琪拉\"},", "    {2,\"刺客\",\"李白\"},", "    {3,\"战士\",\"亚瑟\"},", "    {4,\"射手\",\"虞姬\"},", "    {5,\"辅助\",\"蔡文姬\"}", "};", "\n", "void Input()", "{", "    //首先录入内容", "    //第一个录入完毕后，询问是否继续录入 do-while结构", "\n", "char answer = ", "'y'", ";\ndo {\n    ", "if", " ", "(count", " == ", "100", ")\n    {\n        printf(", "\"库存英雄已满 请到商城购买\"", ");\n    }\n\n    printf(", "\"\\n----------------当前录入第%d位英雄的信息----------------\\n\"", ",", " count", " + ", "1", ");\n    printf(", "\"英雄的名称是：\"", ");\n    heros", "[count", "]", ".name", " = (char*)malloc(", "50", ");\n    scanf(", "\"%s\"", ", heros", "[count", "]", ".name", ");\n    fflush(stdin);\n\n    printf(", "\"\\n性别是：\"", ");\n    fflush(stdin);\n    scanf(", "\"%s\"", ", &heros", "[count", "].sex);\n\n    printf(", "\"\\n职业是：\"", ");\n    fflush(stdin);\n    heros", "[count", "].job = (char*)malloc(", "50", ");\n    scanf(", "\"%s\"", ", &heros", "[count", "].job);\n\n    heros", "[count", "].hp = ", "1000", ";\n    printf(", "\"\\n血量为：%.2f\"", ", heros", "[count", "].hp);\n\n    heros", "[count", "].speed = ", "0", ".", "77", ";\n    printf(", "\"\\n速度为：%.2f\"", ", heros", "[count", "].speed);\n\n    //heros", "[count", "].ability = ", "\"上天，入地\"", ";   char *ability; 是一个char型数组 字符指针，可以直接指向一个字符串常量\n    printf(", "\"\\n特殊能力为：\"", ");\n    heros", "[count", "]", ".name", " = (char*)malloc(", "50", ");\n    scanf(", "\"%s\"", ", heros", "[count", "]", ".name", ");\n    fflush(stdin);\n\n    heros", "[count", "].pubtime.year = ", "2016", ";\n    heros", "[count", "].pubtime.month = ", "04", ";\n    heros", "[count", "].pubtime.day = ", "28", ";\n    printf(", "\"\\n上线时间为%d年%d月%d日\"", ",\n        heros", "[count", "].pubtime.year, heros", "[count", "].pubtime.month, heros", "[count", "].pubtime.day);\n\n   ", " count", "++;//每次录入完成后 英雄总数加", "1", "\n\n    printf(", "\"\\n是否继续录入？(y/n)\"", ");\n    //scanf(", "\"%s\"", ", &answer);//也可以用getch()  \n    //getchar()用户按下键后立即触发下面语句 不会再让用户敲回车\n    scanf(", "\"%s\"", ", &answer);\n    \n} while (answer == ", "'y'", " || answer == ", "'Y'", ");\n", "\n", "}", "\n", "void ShowHero()", "{", "    int i;", "    printf(\"\\n\");", "    for (i = 0; i < count; i++)", "    {", "        printf(\"%s\\t%s\\t%d-%d-%d\\n\", (heros + i)->name, heros[i].job, heros[i].pubtime.year, heros[i].pubtime.month, heros[i].pubtime.day);", "    }", "}", "\n", "头文件的内容", "\n", "#ifndef XX_H_INCLUDED", "#define XX_H_INCLUDED", "#include <stdio.h>", "#include <stdlib.h>", "\n", "#pragma once", "\n", "//1-    结构体： 英雄 职业 能力 时间", "\n", "typedef struct _job  //typrdef 宏定义一个类型 （和define差不多) 简化结构体的使用 Job.job", "{", "    int id;", "    char* name;", "    char* desc;  //职业描述", "}Job;", "\n", "typedef struct  _ability", "{", "    int id;", "    char* name;//特殊能力名称", "    char* intro; //特殊能力说明", "}Ability;", "\n", "typedef struct _pubTime", "{", "    int year;", "    int month;", "    int day;", "}PubTime;", "\n", "typedef struct _hero", "{", "    int id;", "    char* name;  //英雄 名称", "    char* sex;", "    char * job;   //英雄的职业", "    double hp;  //生命值", "    double speed;  //攻击速度", "    char *ability;  //特殊能力", "    PubTime pubtime;  //上线时间", "}Hero;", "\n", "//用来输入英雄的值", "//动态录入代码", "void InputHero();", "void Input();", "//用来输出英雄的值", "void ShowHero();", "#endif //XX_H_INCLUDED", "\n", "我的问题：printf(\"\\n是否继续录入？(y/n)\");", "        //scanf(\"%s\", &answer);//也可以用getch()", "        //getchar()用户按下键后立即触发下面语句 不会再让用户敲回车", "        scanf(\"%s\", &answer);", "\n", "} ", "while", " (answer == ", "'y'", " || answer == ", "'Y'", ");\n", "\n", "到这个语句的时候 scanf如果输入y可以继续执行，可是一旦输入了n就会报错。", "如果把scanf换成getchar 没有输入的过程 直接跳到了ShowHero（）函数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/547853531166184.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这个是不是放错文件了&amp;#xff1f;应该还有一些类成员不全吧&amp;#xff1f;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["职工管理系统中基类未定义等错误如何解决？", ["问题遇到的现象和发生背景", "\n", "在写基于多态的职工管理系统 其中暂时只有父类Woker，子类Employee。Woker，Employee的有各自的头文件和cpp文件，但是在运行时报错", "Worker 未定义基类   “Worker”:“class”类型重定义    无法从“Employee *”转换为“Worker * 等", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "\"workerManager.h\"", "\n\nWorkerManager::", "WorkerManager", "()\n{\n\n}\n\n", "void", " ", "WorkerManager::Show_Meanu", "()", "\n", "{\n    cout << ", "\"********************************************\"", " << endl;\n    cout << ", "\"*********  欢迎使用职工管理系统！ **********\"", " << endl;\n    cout << ", "\"*************  0.退出管理程序  *************\"", " << endl;\n    cout << ", "\"*************  1.增加职工信息  *************\"", " << endl;\n    cout << ", "\"*************  2.显示职工信息  *************\"", " << endl;\n    cout << ", "\"*************  3.删除离职职工  *************\"", " << endl;\n    cout << ", "\"*************  4.修改职工信息  *************\"", " << endl;\n    cout << ", "\"*************  5.查找职工信息  *************\"", " << endl;\n    cout << ", "\"*************  6.按照编号排序  *************\"", " << endl;\n    cout << ", "\"*************  7.清空所有文档  *************\"", " << endl;\n    cout << ", "\"********************************************\"", " << endl;\n    cout << endl;\n}\n\n", "void", " ", "WorkerManager::ExitSystem", "()", "\n", "{\n    cout << ", "\"欢迎下次使用\"", " << endl;\n    ", "system", "(", "\"pause\"", ");\n    ", "exit", "(", "0", ");\n\n}\n\nWorkerManager::~", "WorkerManager", "()\n{\n\n}\n\n\n\n\n", "#", "pragma", " once", "//防止头文件重复包含", "\n", "#", "include", " ", "<iostream>", "//包含输入输出流头文件", "\n", "using", " ", "namespace", " std;", "//使用标准命名空间", "\n\n", "class", " ", "WorkerManager", "\n{\n", "public", ":\n\n    ", "//构造函数", "\n    ", "WorkerManager", "();\n\n    ", "//展示菜单", "\n    ", "void", " ", "Show_Meanu", "()", ";\n\n    ", "//退出系统", "\n    ", "void", " ", "ExitSystem", "()", ";\n\n    ", "//析构函数", "\n    ~", "WorkerManager", "();\n\n};\n\n", "class", " ", "Worker", "\n{\n\n};\n\n\n\n", "#", "pragma", " once", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<string>", "\n", "using", " ", "namespace", " std;\n\n", "//职工抽象基类", "\n", "class", " ", "Worker", "\n{\n", "public", ":\n\n    ", "//显示个人信息", "\n    ", "virtual", " ", "void", " ", "showInfo", "()", " ", "= ", "0", ";\n    ", "//获取岗位名称", "\n    ", "virtual", " string ", "getDeptName", "()", " ", "= ", "0", ";\n\n    ", "int", " m_Id; ", "//职工编号", "\n    string m_Name; ", "//职工姓名", "\n    ", "int", " m_DeptId; ", "//职工所在部门名称编号", "\n};\n\n\n\n\n\n", "#", "pragma", " once ", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "#", "include", " ", "\"worker.h\"", "\n\n", "//员工类", "\n", "class", " ", "Employee", " :", "public", " Worker\n{\n", "public", ":\n\n    ", "//构造函数", "\n    ", "Employee", "(", "int", " id, string name, ", "int", " dId);\n\n    ", "//显示个人信息", "\n    ", "virtual", " ", "void", " ", "showInfo", "()", ";\n\n    ", "//获取职工岗位名称", "\n    ", "virtual", " string ", "getDeptName", "()", ";\n};\n\n\n\n\n\n", "#", "include", " ", "\"employee.h\"", "\n\nEmployee::", "Employee", "(", "int", " id, string name, ", "int", " dId)\n{\n    ", "this", "->m_Id = id;\n    ", "this", "->m_Name = name;\n    ", "this", "->m_DeptId = dId;\n}\n\n", "void", " ", "Employee::showInfo", "()", "\n", "{\n    cout << ", "\"职工编号： \"", " << ", "this", "->m_Id\n        << ", "\" \\t职工姓名： \"", " << ", "this", "->m_Name\n        << ", "\" \\t岗位：\"", " << ", "this", "->", "getDeptName", "()\n        << ", "\" \\t岗位职责：完成经理交给的任务\"", " << endl;\n}\n\n\n", "string ", "Employee::getDeptName", "()", "\n", "{\n    ", "return", " ", "string", "(", "\"员工\"", ");\n}\n\n\n\n\n\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "#", "include", "\"workerManager.h\"", "\n\n", "#", "include", "\"worker.h\"", "\n", "#", "include", "\"employee.h\"", "\n\n", "int", " ", "main", "()", "\n", "{\n    Worker* worker = ", "NULL", ";\n    worker = ", "new", " ", "Employee", "(", "1", ", ", "\"张三\"", ", ", "1", ");\n    worker->", "showInfor", "();\n\n    ", "//WorkerManager wm;", "\n\n    ", "//int choice = 0;", "\n\n    ", "//while (true)", "\n    ", "//{", "\n    ", "//    wm.Show_Meanu();", "\n    ", "//    wm.ExitSystem();", "\n    ", "//    cout << \"请输入您的选择\" << endl;", "\n    ", "//    cin >> choice;", "\n\n    ", "//    switch (choice)", "\n    ", "//    {", "\n    ", "//    case 0://退出系统", "\n    ", "//        break;", "\n    ", "//    case 1://增加职工", "\n    ", "//        break;", "\n    ", "//    case 2://显示职工", "\n    ", "//        break;", "\n    ", "//    case 3://删除职工", "\n    ", "//        break;", "\n    ", "//    case 4://修改职工", "\n    ", "//        break;", "\n    ", "//    case 5://查找职工", "\n    ", "//        break;", "\n    ", "//    case 6://排序职工", "\n    ", "//        break;", "\n    ", "//    case 7://清空文档", "\n    ", "//        break;", "\n    ", "//    default:", "\n    ", "//        system(\"cls\");", "\n    ", "//        break;", "\n\n    ", "//    }", "\n    ", "//}", "\n\n    \n\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "个人认为是继承这一块出了问题 语法上好像没有错误 应该是因为写成了头文件，例如", "class Employee :public Worker", "写在了Employee.h里 而不是像之前初学继承时那样将父类和子类写在同一个文件里。", "\n", "我想要达到的结果", "\n", "让程序运行起来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;struct Goods{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    char artnum[4];&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    char name[10];&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    float sale;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int num;&lt;/span&gt;&lt;br /&gt;};&lt;br /&gt;这里的artnum数组太小了&amp;#xff0c;你输入123n有四个字符&amp;#xff0c;导致artnum数组没有存储字符串结束符&amp;#xff0c;后续输出字符串时&amp;#xff0c;会一直向后找到第一个字符串结束符&amp;#xff0c;所以就找到了后面的name数组的字符串结束符&amp;#xff0c;导致输出了123n方便面。将artnum数组大小改大一点就好了&amp;#xff0c;比如 char artnum[10];&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["商品信息增删改查，在显示添加的商品信息模块运行结果出错，", ["\n", "#", "pragma", " once", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n\n\n", "//商品信息 ", "\n", "struct", " ", "Goods", "{\n    ", "char", " artnum[", "4", "];\n    ", "char", " name[", "10", "];\n    ", "float", " sale;\n    ", "int", " num;\n};\n\n", "//商品信息列表", "\n", "struct", " ", "Glist", "{\n    ", "struct", " ", "Goods", "* data;\n    ", "int", " yl;", "//列表有效元素 ", "\n    ", "int", " rl;", "//列表当前最大容量 ", "\n\n};\n\n", "//初始化商品信息", "\n", "void", " ", "cs_sp", "(", "struct", " Glist* sp)", ";\n", "//检查商品信息 ", "\n", "void", " ", "check_sp", "(", "struct", " Glist* sp)", ";\n", "//添加商品信息 ", "\n", "void", " ", "tj_sp", "(", "struct", " Glist* sp)", ";\n", "//删除商品信息 ", "\n", "void", " ", "sc_sp", "(", "struct", " Glist* sp)", "; \n", "//修改商品信息", "\n", "void", " ", "xg_sp", "(", "struct", " Glist* sp)", "; \n", "//查找商品信息", "\n", "void", " ", "cz_sp", "(", "const", " ", "struct", " Glist* sp)", ";\n", "//保存商品信息", "\n", "void", " ", "save_sp", "(", "struct", " Glist* sp)", "; \n", "//加载商品信息 ", "\n", "void", " ", "jz_sp", "(", "struct", " Glist* sp)", ";\n", "//显示全部商品信息", "\n", "void", " ", "show_sp", "(", "struct", " Glist* sp)", " ", "; \n\n\n", "void", " ", "menu", "()", "\n", "{\n    ", "printf", "(", "\"****************************************\\n\"", ");\n    ", "printf", "(", "\"------------1.添加商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------2.删除商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------3.查找商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------4.修改商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------5.显示商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------6.保存商品信息--------------\\n\"", ");\n    ", "printf", "(", "\"------------0.返回上一界面--------------\\n\"", ");\n    ", "printf", "(", "\"****************************************\\n\"", ");\n\n}\n\n", "int", " ", "main", "()", "\n", "{\n\n    ", "int", " input = ", "0", ";\n    ", "//创建一个商品信息列表 ", "\n    ", "struct", " ", "Glist", " list;\n    ", "//初始化商品信息列表 ", "\n    ", "cs_sp", "(&list);\n    ", "do", "\n    {\n        ", "menu", "();\n        ", "printf", "(", "\"请选择:>\"", ");\n        ", "scanf", "(", "\"%d\"", ", &input);\n        ", "switch", " (input)\n        {\n        ", "case", " ", "1", ":\n            ", "tj_sp", "(&list);\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "sc_sp", "(&list);\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "cz_sp", "(&list);\n            ", "break", "; \n        ", "case", " ", "4", ":\n            ", "xg_sp", "(&list);\n            ", "break", ";\n        ", "case", " ", "5", ":\n            ", "show_sp", "(&list);\n            ", "break", "; \n        ", "case", " ", "6", ":\n            ", "//保存信息", "\n            ", "save_sp", "(&list);\n            ", "printf", "(", "\"退出\\n\"", ");\n            ", "break", ";\n        ", "default", ":\n            ", "printf", "(", "\"选择错误\\n\"", ");\n            ", "break", ";\n        }\n    } ", "while", " (input);\n    ", "return", " ", "0", ";\n}\n\n", "//初始化 ", "\n", "void", " ", "cs_sp", "(", "struct", " Glist* sp)", "\n", "{\n    sp->yl = ", "0", ";\n    ", "//最多可以放3个商品的信息，空间不够，可以增容", "\n    sp->data = (", "struct", "     Goods*)", "malloc", "(", "3", " * ", "sizeof", "(", "struct", " Goods));\n    sp->rl = ", "3", ";\n\n    ", "//加载文件信息到商品信息中", "\n    ", "jz_sp", "(sp);\n}\n\n", "//加载 ", "\n", "void", " ", "jz_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "//打开文件", "\n    FILE* pf = ", "fopen", "(", "\"goods.txt\"", ", ", "\"rb\"", ");\n    ", "if", " (", "NULL", " == pf)\n    {\n        ", "perror", "(", "\"LoadGoods::fopen\"", ");", "//打印出错误信息", "\n        ", "return", ";\n    }\n    ", "//读文件", "\n    ", "struct", " ", "Goods", " temp = { ", "0", " };\n\n    ", "while", " (", "fread", "(&temp, ", "sizeof", "(", "struct", " Goods), ", "1", ", pf))\n    {\n        ", "//空间不够的话，得增加空间", "\n        ", "check_sp", "(sp);\n\n        sp->data[sp->yl] = temp;\n        sp->yl++;\n    }\n\n    ", "//关闭文件", "\n    ", "fclose", "(pf);\n    pf = ", "NULL", ";\n}\n\n", "//添加商品信息 ", "\n", "void", " ", "tj_sp", "(", "struct", " Glist* sp)", "\n", "{\n    \n    ", "check_sp", "(sp);\n    ", "//录入新增商品的信息", "\n", "//    int wy;", "\n", "//    do", "\n", "//    {    ", "\n", "//        printf(\"请输入商品货号:>\");", "\n", "//        scanf(\"%s\", sp->data[sp->yl].artnum);", "\n", "//        wy = UniqueString(sp);", "\n", "//        ", "\n", "//        } while(strlen(sp->data[sp->yl].artnum)!=4||wy==-1);", "\n        ", "//唯一性判定", "\n        \n        ", "//有效性判定 ", "\n        ", "printf", "(", "\"请输入商品货号:>\"", ");\n        ", "scanf", "(", "\"%s\"", ", sp->data[sp->yl].artnum);\n                \n        ", "printf", "(", "\"请输入商品名称:>\"", ");\n        ", "scanf", "(", "\"%s\"", ", sp->data[sp->yl].name);\n        \n        ", "printf", "(", "\"请输入商品的售价:>\"", ");\n        ", "scanf", "(", "\"%f\"", ", &sp->data[sp->yl].sale);\n        \n        ", "printf", "(", "\"请输入商品的数量:>\"", ");\n        ", "scanf", "(", "\"%d\"", ", &sp->data[sp->yl].num);\n        \n        sp->yl++;\n        ", "printf", "(", "\"增加成功\\n\"", ");\n}\n\n\n", "//检查商品信息 ", "\n", "void", " ", "check_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "if", " (sp->yl == sp->rl)\n    {\n        ", "//增加容量", "\n        ", "struct", " ", "Goods", "* gds = (", "struct", " Goods*)", "realloc", "(sp->data, (sp->rl + ", "2", ")*", "sizeof", "(", "struct", " Goods));\n        ", "if", " (gds != ", "NULL", ")\n        {\n            sp->data = gds;\n            sp->rl += ", "2", ";\n\n            ", "printf", "(", "\"增容成功\\n\"", ");\n        }\n        ", "else", "\n        {\n            ", "perror", "(", "\"增容失败\"", ");\n            ", "exit", "(", "1", ");\n        }\n    }    \n}\n\n", "//判定唯一性", "\n", "//int UniqueString(struct Glist* sp)", "\n", "//{", "\n", "//    int i = 0;", "\n", "//    for(i=0; i<sp->yl; i++) {", "\n", "//        if(strcmp(sp->data[sp->yl].artnum, sp->data[i].artnum) == 0) {", "\n", "//            printf(\"该信息已经存在\"); ", "\n", "//            return -1;", "\n", "//        }", "\n", "//    }", "\n", "//    return 1;", "\n", "//} ", "\n\n", "//按商品货号查找 ", "\n", "int", " ", "FindGoodsByArtnum", "(", "const", " ", "struct", " Glist* sp,", "char", " artnum[])", "\n", "{\n    ", "int", " i = ", "0", ";\n    ", "for", " ( i = ", "0", "; i < sp->yl; i++)\n    {\n        ", "if", " (", "strcmp", "(sp->data[i].artnum, artnum) == ", "0", ")\n        {\n            ", "return", " i;\n        }\n    }\n    ", "return", " ", "-1", ";\n}\n", "void", " ", "sc_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "if", " (sp->yl == ", "0", ")\n    {\n        ", "printf", "(", "\"商品列表为空，无法删除\\n\"", ");\n        ", "return", ";\n    }\n    ", "char", " artnum[", "4", "] = {", "0", "};\n    ", "printf", "(", "\"请输入要删除删除商品的货号：>\"", ");\n    ", "scanf", "(", "\"%s\"", ", artnum);\n    ", "//查找", "\n    ", "int", " cz = ", "FindGoodsByArtnum", "(sp, artnum);\n    ", "if", " (cz == ", "-1", ")\n    {\n        ", "printf", "(", "\"指定的商品货号不存在\\n\"", ");\n    }\n    ", "else", "\n    {\n        ", "//删除", "\n        ", "int", " j = ", "0", ";\n        ", "for", " ( j = cz; j < sp->yl - ", "1", "; j++)   ", "//把要删除元素的所有后面的元素往前移动1", "\n        {\n            sp->data[j] = sp->data[j + ", "1", "];\n        }\n        sp->yl--;\n        ", "printf", "(", "\"删除成功\\n\"", ");\n\n    }\n}\n\n", "//查找商品信息 ", "\n", "void", " ", "cz_sp", "(", "const", " ", "struct", " Glist* sp)", "\n", "{\n    ", "char", " artnum[", "4", "] = { ", "0", " };\n    ", "printf", "(", "\"输入要查找商品的货号\"", ");\n    ", "scanf", "(", "\"%s\"", ", artnum);\n    ", "int", " cz = ", "FindGoodsByArtnum", "(sp, artnum);\n    ", "if", " (", "-1", " == cz)\n    {\n        ", "printf", "(", "\"查无此商品\\n\"", ");\n    }\n    ", "else", "\n    {\n        ", "printf", "(", "\"%10s\\t%5s\\t%5s\\t%5s\\n\\n\"", ", ", "\"artnum\"", ", ", "\"name\"", ", ", "\"sale\"", ", ", "\"num\"", ");\n        ", "printf", "(", "\"%10s\\t%5s\\t%5.2f\\t%5d\\n\"", ", sp->data[cz].artnum, sp->data[cz].name, sp->data[cz].sale, sp->data[cz].num);\n", "//        for (cz = 0; cz < sp->yl; cz++)", "\n", "//        {", "\n", "//            printf(\"%10s\\t%5s\\t%5.2f\\t%5d\\n\", sp->data[cz].artnum, sp->data[cz].name, sp->data[cz].sale, sp->data[cz].num);", "\n", "//", "\n", "//        }", "\n    }\n}\n\n", "//修改商品信息 ", "\n", "void", " ", "xg_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "char", " artnum[", "4", "] = { ", "0", " };\n    ", "printf", "(", "\"输入要修改商品的货号\"", ");\n    ", "scanf", "(", "\"%s\"", ", artnum);\n    ", "int", " cz = ", "FindGoodsByArtnum", "(sp, artnum);\n    ", "if", " (", "-1", " == cz)\n    {\n        ", "printf", "(", "\"要修改的商品不存在\\n\"", ");\n    }\n    ", "else", "\n    {\n        ", "printf", "(", "\"请输入新的商品货号:>\"", ");\n        ", "scanf", "(", "\"%s\"", ", sp->data[cz].artnum);\n        ", "printf", "(", "\"请输入商品名称:>\"", ");\n        ", "scanf", "(", "\"%s\"", ", sp->data[cz].name);\n        ", "printf", "(", "\"请输入商品售价:>\"", ");\n        ", "scanf", "(", "\"%f\"", ", &sp->data[cz].sale);\n        ", "printf", "(", "\"请输入数量:>\"", ");\n        ", "scanf", "(", "\"%d\"", ", &sp->data[cz].num);    \n    }\n}\n\n", "//显示全部商品信息", "\n", "void", " ", "show_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "int", " i = ", "0", ";\n    ", "printf", "(", "\"%10s\\t%5s\\t%5s\\t%5s\\n\\n\"", ", ", "\"artnum\"", ", ", "\"name\"", ", ", "\"sale\"", ", ", "\"num\"", ");\n    ", "for", " ( i = ", "0", "; i < sp->yl; i++)\n    {\n        ", "printf", "(", "\"%10s\\t%5s\\t%5.2f\\t%5d\\n\"", ",sp->data[i].artnum, sp->data[i].name, sp->data[i].sale, sp->data[i].num);\n    }\n} \n\n", "//保存商品信息 ", "\n", "void", " ", "save_sp", "(", "struct", " Glist* sp)", "\n", "{\n    ", "//打开文件", "\n    FILE* pf = ", "fopen", "(", "\"goods.txt\"", ", ", "\"wb\"", ");", "//以二进制的形式写", "\n    ", "if", " (pf == ", "NULL", ")\n    {\n        ", "perror", "(", "\"SaveGoods::fopen\"", ");\n        ", "return", ";\n    }\n    ", "//写数据", "\n    ", "for", " (", "int", " i = ", "0", "; i < sp->yl; i++)\n    {\n        \n        ", "fwrite", "(sp->data + i, ", "sizeof", "(", "struct", " Goods), ", "1", ", pf);\n    }\n    ", "//关闭文件", "\n    ", "fclose", "(pf);\n    pf = ", "NULL", ";\n}\n\n\n", "\n", "\n", "\n", "\n", "@"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码有错误&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;   if(x!&amp;#61;0) {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        head&amp;#61;(struct cell*)malloc(sizeof(struct cell));&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        head-&amp;gt;x&amp;#61;x;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        head-&amp;gt;next&amp;#61;NULL;    // 加上这行,否则链表只有一个节点时会遍历出错&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        tmp&amp;#61;head;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;while(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;!&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;NULL){\n    y&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;-&amp;gt;next&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;free&lt;/span&gt;(y)&lt;span class=\"hljs-comment\"&gt;;//这行要放x&amp;#61;x-&amp;gt;next;下面&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//单链表结点结构体定义&lt;/span&gt;\n &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt;* next;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt;* &lt;span class=\"hljs-built_in\"&gt;build&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//新建单链表&amp;#xff0c;并将建好的单链表首结点地址返回&lt;/span&gt;\n &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt;* head, * tmp, * p;\n head &amp;#61; tmp &amp;#61; p &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n &lt;span class=\"hljs-comment\"&gt;/*请在以下位置补充完整&amp;#xff0c;实现函数build的功能*/&lt;/span&gt;\n   &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        head&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell));\n        head-&amp;gt;x&amp;#61;x;\n        head-&amp;gt;next&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// 加上这行,否则链表只有一个节点时会遍历出错&lt;/span&gt;\n        tmp&amp;#61;head;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            p&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell));\n            p-&amp;gt;x&amp;#61;x;\n            p-&amp;gt;next&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n            tmp-&amp;gt;next&amp;#61;p;\n            tmp&amp;#61;p;\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n        }\n   }\n   &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    head&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; head;&lt;span class=\"hljs-comment\"&gt;//返回单链表头&lt;/span&gt;\n}\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt;* &lt;span class=\"hljs-built_in\"&gt;mid&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell* head) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//寻找链表中间位置结点地址并返回&amp;#xff0c;head是单链表首结点指针&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;/*请在以下位置补充完整&amp;#xff0c;实现函数mid的功能*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; * p,*p0;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,i;\n    p&amp;#61;head;\n    p0&amp;#61;head;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){  &lt;span class=\"hljs-comment\"&gt;//只用一次遍历即可&lt;/span&gt;\n        c&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c&amp;gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;amp;&amp;amp; c%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            p0&amp;#61;p0-&amp;gt;next;\n        p&amp;#61;p-&amp;gt;next;\n    }\n    &lt;span class=\"hljs-comment\"&gt;// p&amp;#61;head;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// if (c%2&amp;#61;&amp;#61;0){&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//     for(i&amp;#61;1;i&amp;lt;(c/2);i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//         p&amp;#61;p-&amp;gt;next;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//     }&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// }&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// else{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//     for(i&amp;#61;1;i&amp;lt;(c/2&amp;#43;1);i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//         p&amp;#61;p-&amp;gt;next;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//     }&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// }&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p0;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell* head)&lt;/span&gt; &lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//打印整个单链表,head是单链表首结点指针&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;/*请在以下位置补充完整&amp;#xff0c;实现函数print的功能*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; * p;\n    p&amp;#61;head;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,p-&amp;gt;x);\n    p&amp;#61;p-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %d&amp;#34;&lt;/span&gt;,p-&amp;gt;x);\n        p&amp;#61;p-&amp;gt;next;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;release&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell* head)&lt;/span&gt; &lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//释放单链表空间,head是单链表首结点指针&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;/*请在以下位置补充完整&amp;#xff0c;实现函数release的功能*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *x,*y;\n    x&amp;#61;head;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        y&amp;#61;x;\n        x&amp;#61;x-&amp;gt;next;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(y);&lt;span class=\"hljs-comment\"&gt;//这行要放x&amp;#61;x-&amp;gt;next;下面&lt;/span&gt;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\n &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt;* head,*half;\n head &amp;#61; &lt;span class=\"hljs-built_in\"&gt;build&lt;/span&gt;();\n half &amp;#61; &lt;span class=\"hljs-built_in\"&gt;mid&lt;/span&gt;(head);\n &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(half!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(half);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NULL&amp;#34;&lt;/span&gt;);\n &lt;span class=\"hljs-built_in\"&gt;release&lt;/span&gt;(head);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "名字空间", "Question": ["C语言链表题 本地测试正常，上传到超星OJ显示错误", ["本地code blocks多次测试均没有问题，超星上五条测试仅有一条“若是空链表，则输出NULL”通过，其余四条未通过（其中一条显示超时）", "以下是题目和我的代码（其中我写的部分前有注释“ /", "请在以下位置补充完整，实现函数      的功能", "/”）：", "\n", "/*\n题目编号 ：Exp09-Basic03\n题目名称：求单链表中间结点\n题目描述：请填写缺失代码完成程序，实现如下功能：\n首先根据键盘随机输入，以0结束的若干非零整数建立单链表；\n然后寻找处于链表中间位置的结点，若中间结点有两个，则设定前一个为中间位置结点；\n最后将从中间结点开始到链表尾各结点值输出，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符。\n若是空链表，则输出NULL。\n\n例如，\n\n输入:5 4 2 1 3 0\n输出：2 1 3\n\n输入: 4 2 1 3 3 2 0\n输出：1 3 3 2\n\n***注意***：\n提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。\n*/", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<malloc.h>", "\n", "struct", " ", "cell", " {", "//单链表结点结构体定义", "\n ", "int", " x;\n ", "struct", " ", "cell", "* next;\n};\n", "struct", " ", "cell", "* ", "build", "(", "void", ") {", "//新建单链表，并将建好的单链表首结点地址返回", "\n ", "struct", " ", "cell", "* head, * tmp, * p;\n head = tmp = p = ", "NULL", ";\n ", "int", " x;\n ", "/*请在以下位置补充完整，实现函数build的功能*/", "\n   ", "scanf", "(", "\"%d\"", ",&x);\n   head=(", "struct", " cell*)", "malloc", "(", "sizeof", "(", "struct", " cell));\n   ", "if", "(x!=", "0", ") {head->x=x;\n   tmp=head;\n   ", "scanf", "(", "\"%d\"", ",&x);\n   ", "while", " (x!=", "0", "){\n        p=(", "struct", " cell*)", "malloc", "(", "sizeof", "(", "struct", " cell));\n        p->x=x;\n        p->next=", "NULL", ";\n        tmp->next=p;\n        tmp=p;\n        ", "scanf", "(", "\"%d\"", ",&x);\n   }}\n   ", "else", "\n    head=", "NULL", ";\n ", "return", " head;", "//返回单链表头", "\n}\n", "struct", " ", "cell", "* ", "mid", "(", "struct", " cell* head) {", "//寻找链表中间位置结点地址并返回，head是单链表首结点指针", "\n ", "/*请在以下位置补充完整，实现函数mid的功能*/", "\n    ", "struct", " ", "cell", " * p,*p0;\n    ", "int", " c=", "0", ",i;\n    p=head;\n    ", "while", "(p!=", "NULL", "){\n        c++;\n        p=p->next;\n    }\n    p=head;\n    ", "if", " (c%", "2", "==", "0", "){\n        ", "for", "(i=", "1", ";i<(c/", "2", ");i++){\n            p=p->next;\n        }\n    }\n    ", "else", "{\n        ", "for", "(i=", "1", ";i<(c/", "2", "+", "1", ");i++){\n            p=p->next;\n        }\n    }\n    ", "return", " p;\n}\n", "void", " ", "print", "(", "struct", " cell* head)", " ", "{", "//打印整个单链表,head是单链表首结点指针", "\n ", "/*请在以下位置补充完整，实现函数print的功能*/", "\n    ", "struct", " ", "cell", " * p;\n    p=head;\n    ", "printf", "(", "\"%d\"", ",p->x);\n    p=p->next;\n    ", "while", "(p!=", "NULL", "){\n        ", "printf", "(", "\" %d\"", ",p->x);\n        p=p->next;\n    }\n\n}\n", "void", " ", "release", "(", "struct", " cell* head)", " ", "{", "//释放单链表空间,head是单链表首结点指针", "\n ", "/*请在以下位置补充完整，实现函数release的功能*/", "\n    ", "struct", " ", "cell", " *x,*y;\n    x=head;\n    ", "while", "(x!=", "NULL", "){\n        y=x;\n        ", "free", "(y);\n        x=x->next;\n    }\n}\n", "int", " ", "main", "(", "void", ")", " ", "{\n ", "struct", " ", "cell", "* head,*half;\n head = ", "build", "();\n half = ", "mid", "(head);\n ", "if", "(half!=", "NULL", ")\n        ", "print", "(half);\n    ", "else", "\n        ", "printf", "(", "\"NULL\"", ");\n ", "release", "(head);\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img alt=\"\" height=\"264\" src=\"https://img-ask.csdnimg.cn/upload/1615423176032.png\" width=\"724\" /&gt;&lt;/p&gt;\n\n\n\n&lt;p&gt;&lt;img alt=\"\" src=\"https://img-ask.csdnimg.cn/upload/1615423149015.png\" /&gt;&lt;/p&gt;\n\n\n\n&lt;p&gt;你这里写的有语法错误啊char类型的参数&amp;#xff0c;你非要传一个char*类型进去。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["为啥程序没有按照想法执行？", ["#include <string.h>", "\n\n", "struct info {", "\n    char number[15];", "\n    int num;", "\n    char part_name;", "\n    char date;", "\n    char buyer_name[4];", "\n    int  shumu;", "\n    float price;", "\n    char firm[10];", "\n    struct info *next;", "\n};", "\n\n", "struct info* list;", "\nvoid begin();", "\nvoid menu();", "\nstruct info* sousuo(char number, char part_name);", "\nvoid xsinformation(struct info* p);", "\nvoid input();", "\nvoid searchnumber();", "\nvoid searchpart_name();", "\nvoid modify();", "\nvoid delete_info();", "\nvoid show_all();", "\n\n", "void begin() {", "\n    list = (struct info*)malloc(sizeof(struct info));", "\n    if (list == NULL) {", "\n        printf(\"分配内存空间出错了\\n\");", "\n        exit(-1);", "\n    } ", "\n    list->next = NULL;", "\n}", "\n\n", "\nvoid menu() {", "\n    printf(\"\\t\\t汽车零部件采购管理程序\\n\");", "\n    printf(\"1.录入采购信息\\n\");", "\n    printf(\"2.零部件编码显示零部件的信息\\n\");", "\n    printf(\"3.零部件名称显示零部件信息。\\n\");", "\n    printf(\"4.给定零部件零部件编码、零部件名称，修改零部件信息。\\n\");", "\n    printf(\"5.定零部件零部件编码、零部件名称，删除零部件信息。\\n\");", "\n    printf(\"6.显示系统中全部的零部件信息\\n\");", "\n    printf(\"0.退出系统\\n\");", "\n}", "\n\n", "struct info* sousuo(char number, char part_name) {", "\n    int num;", "\n    struct info* head = list->next;", "\n    num=atoi(head->number);", "\n    while (head) {", "\n        if (head->num == number && head->part_name == part_name) {", "\n            return head;", "\n        }", "\n        head = head->next;", "\n    }", "\n\n", "    return NULL;", "\n}", "\n\n", "void xsinformation(struct info* p) {", "\n    if (p == NULL) {", "\n        printf(\"节点并不存在\\n\");", "\n        return;", "\n    }", "\n    else{", "\n    ", "\n    printf(\"零部件编码: %s     \\n\", p->number);", "\n    printf(\"零部件名称: %s\\n\", p->part_name);", "\n    printf(\"采购日期: %s\\n\", p->date);", "\n    printf(\"采购员: %s\\n\", p->buyer_name);", "\n    printf(\"采购数量: %d\\n\", p->shumu);", "\n    printf(\"采购单价: %f\\n\",p->price);", "\n    printf(\"供货单位: %s\\n\",p->firm);", "\n    }", "\n}", "\n\n", "\nvoid input() {", "\n    char number[15];", "\n    char part_name;", "\n    printf(\"请输入零部件编码: \\n\");", "\n    scanf(\"%s\", &number);", "\n\n", "    printf(\"请输入零部件名称: \\n\");", "\n    scanf(\"%s\", &part_name);", "\n\n", "    struct info * p =sousuo(number, part_name);", "\n    if (p) {", "\n        printf(\"此编码有录入: \\n\");", "\n        xsinformation(p);", "\n        printf(\"无法继续录入\\n\");", "\n        return;", "\n    }", "\n\n", "    p = (struct info*)malloc(sizeof(struct info));", "\n    if (p == NULL) {", "\n        printf(\"分配内存空间出错了\\n\");", "\n        exit(-1);", "\n    }", "\n    p->number[15] = number[15];", "\n    p->part_name = part_name;", "\n    p->next = NULL;", "\n\n", "    printf(\"请输入采购日期: \");", "\n    scanf(\"%s\",&p->date);", "\n    printf(\"请输入采购员\\n\");", "\n    scanf(\"%s\",&p->buyer_name);", "\n    printf(\"请输入采购数量\\n\");", "\n    scanf(\"%s\",&p->shumu);", "\n    printf(\"请输入采购单价\\n\");", "\n    scanf(\"%s\",&p->price);    ", "\n    printf(\"请输入供货单位\\n\");", "\n    scanf(\"%s\",&p->firm);", "\n    ", "\n        //return;", "\n    struct info* head = list->next;", "\n    list->next = p;", "\n    p->next = head;", "\n\n", "    printf(\"录入成功\\n\");", "\n\n", "}", "\nvoid searchnumber() {//编码查找 ", "\n    char number[15];", "\n    printf(\"请输入编码: \\n\");", "\n    scanf(\"%s\", &number);", "\n\n", "    struct info * p = list->next;", "\n    while (p) {", "\n        if (strcmp(p->number, number) == 0) {", "\n            xsinformation(p);", "\n            return;", "\n        }", "\n        p = p->next;", "\n    }", "\n    printf(\"没有找到编码为: %s 的记录\\n\", number);", "\n}", "\n\n", "\nvoid searchpart_name() {//名称查找 ", "\n    char part_name;", "\n    printf(\"请输入零部件名称：\\n\");", "\n    scanf(\"%s\", &part_name);", "\n\n", "    int found = 0;", "\n    struct info* p = list->next;", "\n    while (p) {", "\n        if (p->part_name == part_name) {", "\n            xsinformation(p);", "\n            found++;", "\n        }", "\n        p = p->next;", "\n    }", "\n\n", "    if (found == 0) {", "\n        printf(\"没有找到零部件编码为: %s 的记录\\n\", part_name);", "\n        return;", "\n    }", "\n    printf(\"共找到 %d 条记录.\\n\", found);", "\n}", "\n\n", "\nvoid modify() {   //修改 ", "\n    char part_name;", "\n    printf(\"请输入零部件名称: \\n\");", "\n    scanf(\"%s\", &part_name);", "\n\n", "    int number;", "\n    printf(\"请输入零部件编码: \\n\");", "\n    scanf(\"%d\", &number);", "\n\n", "    struct info* p = sousuo(number, part_name);", "\n    if (p == NULL) {", "\n        printf(\"未找到此零部件的信息\\n\");", "\n        return;", "\n    }", "\n    ", "\n    printf(\"请输入新的零部件编码:\\n\");", "\n    scanf(\"%d\", p->number);", "\n\n", "    printf(\"请输入新的零部件的名称:\\n\");", "\n    scanf(\"%s\", p->part_name);", "\n\n", "    printf(\"请输入新的采购日期:\");", "\n    scanf(\"%s\",&p->date);", "\n    printf(\"请输入采购员\\n\");", "\n    scanf(\"%s\",&p->buyer_name);", "\n    printf(\"请输入采购数量\\n\");", "\n    scanf(\"%s\",&p->shumu);", "\n    printf(\"请输入采购单价\\n\");", "\n    scanf(\"%s\",&p->price);    ", "\n    printf(\"请输入供货单位\\n\");", "\n    scanf(\"%s\",&p->firm);", "\n    ", "\n    printf(\"修改成功\\n\");", "\n}", "\n\n", "void delete_info() {", "\n    printf(\"\\n定零部件零部件编码、零部件名称，删除零部件信息。\\n\");", "\n    char number[15] ;", "\n    printf(\"请输入零部件编码: \\n\");", "\n    scanf(\"%s\", &number);", "\n\n", "    char part_name;", "\n    printf(\"请输入零部件名称: \\n\");", "\n    scanf(\"%s\", &part_name);", "\n\n", "    struct info* p = sousuo(number, part_name);", "\n    if (p == NULL) {", "\n        printf(\"未找到此零部件的信息\\n\");", "\n        return;", "\n    }", "\n    struct info* head = list->next;", "\n    struct info* pre = list;//前一个 ", "\n    while (head) {", "\n        if (head == p) { ", "\n            pre->next = head->next;", "\n            free(head);", "\n            printf(\"删除成功\\n\");", "\n            return;", "\n        }", "\n        pre = head;", "\n        head = head->next;", "\n    }", "\n\n", "}", "\n\n", "void show_all() {", "\n    printf(\"\\n显示零部件所有的信息\\n\");", "\n    struct info* head = list->next;", "\n    int count = 0;", "\n    while (head) {", "\n        xsinformation(head);", "\n        head = head->next;", "\n        count++;", "\n    }", "\n    printf(\"共 %d 条记录\\n\", count);", "\n}", "\n\n", "int main() {", "\n    begin(); ", "\n    while (1) {", "\n        system(\"cls\");", "\n        menu();", "\n\n", "        int sel = 0;", "\n        scanf(\"%d\", &sel);", "\n        if (sel == 0) {", "\n            printf(\"谢谢使用，再见。\\n\");", "\n            getchar();", "\n            getchar();", "\n            return 0;", "\n        }", "\n\n", "        if (sel == 1) {", "\n            input();", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n\n", "        if (sel == 2) {", "\n            searchnumber();", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n\n", "        if (sel == 3) {", "\n            searchpart_name();", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n\n", "        if (sel == 4) {", "\n            modify(); ", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n\n", "        if (sel == 5) {", "\n            delete_info();", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n        if (sel == 6) {", "\n            show_all();", "\n            printf(\"\\n按回车键继续\\n\");", "\n            getchar();", "\n            getchar();", "\n            continue;", "\n        }", "\n        printf(\"无法识别的指令\\n\");", "\n    }", "\n}", "\n ", "\n\n", " ", "\n\n", " ", "\n\n", "就是以上代码。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你scanf里的字符串都多了取址符了scanf_s(&amp;#34;%s&amp;#34;&amp;#xff0c;&amp;amp;e.cityname&amp;#xff0c;sizeof&amp;#xff08;&amp;amp;e.cityname&amp;#xff09;&amp;#xff09;; 把取址符出掉就好了。如果不懂还是得先了解指针的各种使用情况。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["57-60总是跳过，166行C6385，178行和187行C6054", ["我的完整代码", "166行：C6385:从\"L-＞data\"中读取的数据无效；可读大小为“5599944”个字符，但可能读取了“-56”个字节", "178行：C6054:可能没有为字符串\"b\"添加字符串零终止符", "187行：C6054:可能没有为字符串\"c\"添加字符串零终止符", "\n", "由PM2", ".5", "实时信息管理系统", "1", " （全局范围） ", "GLocate", "(SqList *& L\n      ", "1", " ", "#", "include", "<stdio.h＞", "\n      ", "2", " ", "#", "include", "<stdlib.h>", "//内存分配函数用到", "\n      ", "3", " ", "#", "include", "<string.h>", "//模糊查询用到", "\n      ", "4", " ", "#", "define", "·MAXSIZE·99999", "//定义顺序表大小", "\n      \n      ", "5", " ", "struct", " administrators·", "//管理员信息", "\n      ", "6", "{\n      ", "7", "         ", "char", " id[", "20", "]；\n      ", "8", "         ", "char", " password[", "20", "];\n      ", "9", " }a={", "\"123\"", "，", "\"123\"", "}", "//管理员账号密码", "\n     ", "10", "struct", "·information", "//定义各城市空气质量信息", "\n     ", "11", "{\n                  ", "char", "·cityname[", "20", "];", "//城市名", "\n     ", "13", " ", "int", " AQI;\n     ", "14", " ", "char", "·AQIcategory[", "20", "];", "//AQI指数", "\n     ", "15", " ", "int", "·PM2_5;\n     ", "16", " ", "int", "·PM10;\n     ", "17", " intCO；\n     ", "18", "};\n     ", "19", "int", "·strncasecmp（", "char", "·s1[]，", "char", "·s2[]，", "int", "·n）", "//（由百度得到的）定义比较字符串前n的字符：比较账号和密码是否正确（百度得到的", "\n     ", "20", "\n     ", "21", "{\n     ", "22", " ", "int", " i，j=", "0", ";\n     ", "23", " ", "for", "（i=", "0", ":i<n；i++）\n     ", "24", "         ", "if", "（s1[i]·==·s2[i])\n     ", "25", "               j=j+", "1", ";\n     ", "26", " ", "if", "(j==n）\n     ", "27", " ", "return", " ", "1", "；\n     ", "28", " ", "else", "\n     ", "29", " ", "return", " ", "0", ";\n     ", "30", "}\n     \n", "\n", "31", " struct SqList\n", "32", " {\n             information data[MAXSIZE];", "//", "定义一个能包含MAXSIZE个information结构体的数组\n             ", "int", " ", "length", "；\n", "35", " };\n", "36", " ", "int", " InitList(SgList*&L） //定义初始化函数\n", "37", " {\n", "38", "      L=（SqList*）malloc（sizeof（SqList））； //申请一个SoList结构大小的内存空间\n", "39", " ", "if", "·（L!=NULL）\n", "40", " {\n", "41", "                 L->", "length", "=·", "0", ";", "//", "让顺序表长度等于零\n", "42", " }\n", "43", " ", "return", " ", "1", "；\n", "44", " }\n", "45", " ", "int", " CreateList（SqList*& L）//定义录入城市空气质量信息的函数\n", "46", "{\n", "47", "          ", "int", " i，j;\n", "48", "          InitList（L）：//先调用完成初始化;\n", "49", "          ", "printf", "（", "\"请输入城市数：\\n\"", "）；\n", "50", "          scanf_s(%d”，&j）;\n", "51", "          ", "printf", "（", "\"请依次输入空气质量指数相关信息：n\"", "）;\n", "52", "             information e;", "//", "调用之前的information\n ", "53", "            ", "for", "（i=", "0", ":i<j：i++）\n", "54", "      {\n", "55", "             ", "printf", "（", "\"输入第%d个城市的名称：\\n\"", "，i+", "1", "）;\n", "56", "             scanf_s(", "\"%s\"", "，&e.cityname，sizeof（&e.cityname））;\n", "57", "            printf_s（", "\"输入第%d个城市的AQI：\\n\"", "，i+", "1", "）；\n", "58", "             scanf_s(", "\"%d\"", "，&e.AQI）；\n", "59", "             ", "printf", "（", "\"输入第%d个城市的AQI指数：\\n\"", "，i+", "1", "）;\n", "60", "             scanf_s(", "\"%s\"", "，&e.AQIcategory，sizeof（&e.AQIcategory））;\n", "61", "             ", "printf", "（", "\"输入第%d个城市的PM2.5：\\n\"", "，i+", "1", "）；\n", "\n", "\n", "62", "            scanf_s(", "\"%d\"", "，&e.PM2_5）；\n", "63", "            ", "printf", "（", "\"输入第%d个城市的PM10:n\"", "，i+", "1", "）；\n", "64", "            scanf_s(", "\"%d\"", "，&e.PM10）;\n", "65", "            ", "printf", "（", "\"输入第%d个城市的CO：\\n\"", "，i+", "1", ";\n", "66", "            scanf_s(", "\"%d\"", "，&e.CO）;\n", "67", "            L->data[i]=e;/顺序表依次插入\n", "68", "     }\n", "69", "     L->", "length", "=j;", "//顺序表长度等于城市数", "\n", "70", "     ", "printf", "（ ", "\"﹉﹉﹉﹉Ok﹉﹉﹉﹉\\n\"", "）;\n", "71", "     ", "return", " ", "1", ";\n", "72", " }\n", "73", "  void·ShowList（SqList*·L）", "//定义输出所有城市信息函数", "\n", "74", " {\n", "75", "           int i；\n", "76", "           information e；\n", "77", "           ", "for", "（i=", "0", ";i<L-＞", "length", "；i++）\n", "78", "           {\n", "79", "               e=L->data[i]；\n", "80", "               ", "printf", "(", "\"%s   AQI：%d    AQI指数：%s    PM2.5:%d     PM10：%d  CO：%d\"", "，e.cityname，e.AQI，e.AQIcategory，e.PM2_5，e.PM10，e.CO);\n", "81", "          ", "printf", "（", "\"\\n\"", "）;\n", "82", "          }\n", "83", "          ", "printf", "（ ", "\"\\n\"", "）；\n", "84", " }\n", "85", " void lookup（SaList*L）", "//定义查询城市空气质量指数的所有相关信息的函数", "\n", "86", "{\n             int i，j=", "0", "；\n             char cname[", "20", "];\n             information e；\n", "90", " ", "printf", "（", "\"输入想要查询的城市名称：\\n\"", "）；\n", "91", " scanf_s(”", "%s", "”，cname，sizeof（cname））；\n", "92", " ", "for", "（i=", "0", ":i<L->", "length", "：i++）\n", "\n", "              scanf_sC9s” ", "9", " cname，sizeof（cname））\n", "28", "\n              ", "for", "（i=0；i.<L->", "length；i++）\n                  e=L-", "data", "[i]\n                  ", "if", "·（strncasecmp（e.cityname， cname. ", "2", "）==·", "1", ".ll·strcmp（e.cityname，cname）·==·", "0", "）", "//模糊查询两个数组的前n个字符串（一个字有俩字符串", "\n ", "85", "\n                      printf(”%s ", "9", "d ", "9", "d····%d %d，e.cityname，e.AQI，e.AQIcategory，e.PM2_5，e.PM10，e.CO）；\n ", "98", " printf（”n”）；\n ", "99", " j二j+", "1", "；\n", "100", "\n", "101", "\n", "102", " ", "if", "·(j·==·", "0", "） 屏\n", "103", " printf（”未找到该城市\\n）\n", "104", " n）； printf（ 屏\n", "105", "\n        （\n", "106", " 屏\n", "107", " 日void·bubble（SqList极&·L）·", "//定义按AQI降序函数信息的函数", "\n", "108", " 屏\n", "109", " inti，j；\n              information·tmp；", "//定义一个information结构体 110 截", "\n", "111", " boolexchange；", "//布尔值判断真假", "\n", "112", " ", "for", "·（i=.0:i.<·L->", "length；i++）\n", "113", "\n", "114", " exchange=·", "false", ":", "//无变化", "\n", "115", " ", "for", "（j=L->", "length-.", "1", "；j>i；j--\n", "116", "\n", "117", " ", "if", "·（L->", "data", "[j].AQI·<·L->", "dataLj·-·", "1", "].AQI）", "//顺序表中从i开始后一个比前一个小就交换·直至放到前一个比它大", "\n", "18", "\n", "19", " ", "tmp", "·=·L->", "data", "[j]:", "//实现交换", "\n", "20", " L->", "datalj", "]·=·L->", "datalj·-", "1", "]\n", "121", " L-datalj-", "1", "]=tmp；\n", "122", " exchange=.", "true", ":", "//有变化", "\n", "\n", "122", " exchange=·", "true", ":", "//有变化", "\n", "3", "\n                  ", "if", "·（!exchange） ", "//完全没有变化后退出", "\n", "126", " break\n", "127", "\n", "128", " ShowList（L）\n", "129", "\n", "130", " 日void·bubble2（SqList&·L）·", "//定义按AQI升序的函数", "\n", "131", "\n", "132", " inti，j\n", "133", " information tmp\n", "134", " bool exchange；\n", "135", " 一 ", "for", ".（i=.0:i.<·L->", "length；i++）\n", "136", "\n                  exchange=", "false", "；\n        一 ", "for", "（j=L->", "length-", "1", ":j>i:j--\n", "139", "\n", "140", " ", "2", " ", "if", "·（L->", "data", "[j].AQI·>·L->", "dataLj·-·", "1", "].AQI）", "//顺序表中从j开始后一个比前一个大就交换·直至放到前一个比它小", "\n", "141", "\n", "142", " ", "tmp", "=·L->", "data", "[j]\n", "143", " L->", "datalj", "]=L->", "datalj·-·", "1", "]\n", "144", " L->", "data", "[j·-·", "1", "]=.tmp；\n", "145", " exchange=·", "true", "；\n", "146", "\n", "147", "\n", "148", " ", "if", "·（!exchange）\n", "149", " break；\n", "150", "\n", "151", " ShowList（L）\n", "152", "\n", "\n", "151", " ShowList(L）；\n", "152", "\n", "153", " 日intLocate（SqList极·L）", "//查找，和后面的修改信息", "\n", "154", "\n", "155", " inti，j=.", "-1", "，k，z=·", "1", ":", "//z用来循环", "\n", "156", " charx20\n", "157", " information e\n", "158", " ", "printf", "（输入要修改的城市名字\\n）\n", "159", " scanf_s(", "%s", "”，x,sizeof（x））；\n", "160", " ", "for", "·（i=", ".0", ":i.<·L->", "length", "；i++）\n", "161", "\n", "162", " e=·L->datalil\n", "163", " ", "if", "·（strcmp（e.cityname，x）==·", "0", "）", "//判断修改的城市存不存在", "\n", "164", "       j=i;\n", "165", " }\n", "166", "  e=L-＞data[j];\n", "167", " ", "if", "（j==", "-1", "）\n", "168", "       ", "printf", "（*不存在该城市\\n”）；\n", "169", " ", "else", "\n", "170", "\n", "17", " dof\n                                         选择要修改该城市的信息 ", "172", " ", "printf", "(”\n", "173", " （", "1", "）AQI ", "printf", "（\n                                         ", "2", "）AQI指数 ", "174", " ", "printf", "（\n", "175", " ", "3", "）PM2.", "5", " ", "printf", "(\n", "176", " （", "4", "）PM10 ", "printf", "(\n", "177", " ", "5", "）C0 printfC n）；\n", "8", " （", "0", "）返回主界 ", "printf", "（ n）；\n", "79", " ", "printf", "（请选择<", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "0", "：n）：\n", "180", " scanf_s(%d”，&k）；\n", "181", " switch'（k）\n", "182", "\n", "\n", "181 ", "switch’（k）\n", "182", "\n", "83 ", "case ", "1", ":\n", "184 ", "Z=", "1", "\n", "185 ", "printf（*输入AQI\\n）\n", "186 ", "scanf_s(%d，&e.AQI）：\n", "187 ", "L->datalj]=e；\n", "188 ", "break\n", "189 ", "case ", "2", ":\n", "190 ", "Z=", "1", "；\n", "191 ", "printf（输入AQI指数\\n”）\n", "192 ", "scanf s(%s’，&e.AQIcategory,sizeof（&e.AQIcategory））\n", "193 ", "L->datajl=e；\n", "194 ", "break\n", "195 ", "case ", "3", ":\n", "196 ", "Z=", "1", "\n", "197 ", "printf（输入PM2.", "5", "n）；\n", "198 ", "scanfs(%d.&e.PM25）\n", "199 ", "L->", "data", "[j]=e；\n", "200 ", "break\n", "201 ", "case4:\n", "202 ", "1", "\n", "203 ", "printf（输入PM10\\n）\n", "204 ", "scanf_s(%d”，&e.PM10）；\n", "205 ", "L->", "data", "[jl·=e；\n", "206 ", "break:\n", "207 ", "case ", "5", ":\n", "208 ", "Z=", "1", "；\n", "209 ", "printf（输入CO\\n）；\n", "210 ", "scanf_s(*%d”，&e.CO）\n", "211 ", "L->", "data", "[j]=e；\n", "212 ", "break：\n", "\n", "211", " L->data[j]='e；\n", "212", " ", "break", "\n", "213", " ", "case", " ", "0", ":\n", "214", " Z=", "0", "\n", "215", " ", "break", "\n", "216", " ", "default", "：\n", "217", " printf（*输入有误，请重新输入！n）\n", "218", " break1\n", "219", "\n", "220", " }", "while", "（z==", ".1", "）；\n", "221", "\n", "222", " ", "return", " ", "1", "\n", "223", "\n", "224", " intmain（）\n", "225", "\n", "226", " SaList*L'=NULL\n", "227", " ", "int", "·i，j，k，m=·", "0", "；", "//m用来跳出次级菜单", "\n", "228", " char·b[", "201", "，c[", "20", "]；\n", "229", " ", "do", "·f\n", "230", " PM2", ".5", "实时信息管理系统 printf(\n", "231", " 主菜单 printfC\n                                    （", "1", "）·普通用户入口 ", "232", " printf( ）：\n", "233", " （", "2", "）·管理员入口 printf（ n）：\n", "234", " （", "0", "）·退出系统 printf\n", "235", " printf（请选择（", "1", ",", "2", ",", "0", ">：n）；\n", "236", " scanf_s(%d”，&i)；\n", "237", " ", "switch", "（i）", "//在用一 个switch做选择", "\n", "238", "\n", "239", " ", "case", "·", "1", ":", "//普通用户", "\n", "240", " ", "do", "·t\n", "241", " 普通用户菜单 printfC\n", "242", " printf（ ", "1", "）查找城市空气质量信息 n\n", "\n", "                           ", "printf", "( ", "241", " 普通用户菜单\n", "242", " （", "1", "）查找城市空气质量信息 printfC n）:\n                                             （", "2", "）所有城市按AQI降序输出 ", "243", " printf（\n", "244", " （", "3", "）所有城市按AQI升序输出 printfC ）；\n", "245", " ", "printf", "( ", "0", "）返回主界\n", "246", " printf（请选择<", "1", "，", "2", ",", "3", "，", "0", ">：n）；\n", "247", " ", "scanf_s", "(%d”，&j）；\n", "248", " ", "switch", "（j）", "//用switch做选择", "\n", "249", "\n", "250", " ", "case", " ", "1", ":\n", "251", " m=", "0", "\n", "252", " lookup（L）；\n", "253", " ", "break", "\n", "254", " case2:\n", "255", " m=", ".0", "\n", "256", " bubble2（L）\n", "257", " ", "break", "\n", "258", " ", "case", " ", "3", ":\n", "259", " m=", "0", "；\n", "260", " bubble（L）\n", "261", " ", "break", "\n", "262", " ", "case", " ", "0", "：\n", "263", " m*=", "1", "\n", "264", " ", "break", "\n", "265", " ", "default", "：\n", "266", " m=", "0", "\n", "267", " printf（输入有误，请重新输入！n）；\n", "268", " break1\n", "269", "\n", "270", " ", "while", ".（m==·", "0", "）\n", "271", " m*=", "1", "；\n", "272", " ", "break", "\n", "\n", "271", " m*=", "1", "；\n", "272", " ", "break", "\n", "273", " case2:", "//", "管理员\n", "274", " ", "while", "·（", "1", "）//用", "1", "来使这个", "while", "无限循环\n", "275", "\n", "276", " ", "printf", "（*输入管理员账号\\n）\n", "277", " Scanf_s(”%s，b,sizeof（b））\n", "278", " ", "if", ":(stxcmpaidb.", "0", "）\n", "279", " ", "printf", "（账号错误·再次输入\\n）\n", "20", " ", "else", "\n                                ", "break", ":", "//", "如果密码正确，跳出这个循环\n                       ", "while", "（", "1", "）\n", "285", " ", "printf", "（输入密码\\n”）\n", "286", " scanf_s(”%s”，c,sizeof（c））\n", "87", "\n                            ", "if", "·（strcmp（a.password.c））\n", "288", " ", "printf", "（密码错误·重新输入\\n）\n", "289", " ", "else", "\n                                ", "break", "\n", "292", " ", "do", "·f\n", "293", " 管理品菜单 ", "printf", "(”\n", "294", " （", "1", "）城市空气质量信息录入 ", "printf", "( ）；\n", "295", " （", "2", "）修改城市空气质量信息 ", "printf", "( h）；\n ", "296", "\n                                             （", "0", "）返回主界 ", "printf", "( ", "1", "in2；\n", "297", " ", "printf", "（请选择<", "1", ",", "2", ",", "0", ">：n）；\n", "298", " scanf_s(%d”，&k）；\n", "299", " switch·（k）\n", "300", "\n", "301", " case ", "1", ":\n", "302", " m=.", "0", "；\n", "\n", "298 ", "scanf_s(%d”，&k）；\n", "299 ", "switch·（k）\n", "300", "\n", "301 ", "case ", "1", ":\n", "302 ", "m=", "0", "\n", "303 ", "CreateList（L）\n", "304 ", "break：\n", "305 ", "case ", "2", ":\n", "306 ", "m=", "0", "；\n", "307 ", "Locate", "(L）；\n", "308 ", "break\n", "309 ", "case0:\n", "310 ", "m=·", "1", "\n", "311 ", "break\n", "312 ", "default：\n", "313 ", "m=", "0", "；\n", "314 ", "printf（输入有误，重新输入！n）；\n", "315 ", "break；\n", "316", "\n", "317 ", "while", "（m==·", "0", "）；\n", "318 ", "m*=", "1", ":\n", "319 ", "break\n", "320 ", "case0:\n", "321 ", "exit（", "0", "）\n", "322 ", "default\n", "323 ", "printf（输入有误，重新输入！n）；\n", "324 ", "break:\n", "325", "\n", "326 ", "}", "while", "（", "1", "）；\n", "327 ", "Ty\n", "328", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;更新版&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;from __future__ import division\nimport cv2\nimport numpy as np\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# global\n# HSV 色值&amp;#xff1a;\nGREEN &amp;#61; [40, 65, 13, 80, 255, 255]  # Green\nYELLOW &amp;#61; [20, 103, 80, 40, 255, 255]  # Yellow\nBLUE &amp;#61; [94, 81, 82, 126, 255, 255]  # Blue\nRED &amp;#61; [0, 144, 0, 20, 255, 255]   # Red\n\n# default value: Blue 蓝色\nlowHue &amp;#61; BLUE[0]\nlowSat &amp;#61; BLUE[1]\nlowVal &amp;#61; BLUE[2]\nhighHue &amp;#61; BLUE[3]\nhighSat &amp;#61; BLUE[4]\nhighVal &amp;#61; BLUE[5]\n\n# 滑动名称\nblue_bar &amp;#61; &amp;#39;Blue&amp;#39;\nred_bar &amp;#61; &amp;#39;Red&amp;#39;\nyellow_bar &amp;#61; &amp;#39;Yellow&amp;#39;\ngreen_bar &amp;#61; &amp;#39;Green&amp;#39;\n\n# 排列&amp;#xff1a;green, yellow, blue, red\ndefaultColor &amp;#61; [0, 0, 1, 0]  # 蓝色\ncolor &amp;#61; &amp;#34;BLUE&amp;#34;  # 现在的颜色\nblueColor &amp;#61; (255, 0, 0)  # 蓝色\ngreenColor &amp;#61; (0, 255, 0)  # 绿色\nredColor &amp;#61; (0, 0, 255)  # 红色\n\n\n# 图像色调和追踪\ndef frame_mask_contour(image):\n    frameHSV &amp;#61; cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n\n    # HSV values to define a colour range we want to create a mask from.\n    # HSV值来定义要从中创建遮罩的颜色范围。\n    colorLow &amp;#61; np.array([lowHue, lowSat, lowVal])\n    colorHigh &amp;#61; np.array([highHue, highSat, highVal])\n\n    mask &amp;#61; cv2.inRange(frameHSV, colorLow, colorHigh)\n\n    # get contours\n    contours, hierarchy &amp;#61; cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)\n    contour_sizes &amp;#61; [(cv2.contourArea(contour), contour) for contour in contours]\n\n    count &amp;#61; len(contour_sizes)\n    found &amp;#61; False\n    if count &amp;gt; 0:\n        for cnt in contours:\n            area &amp;#61; cv2.contourArea(cnt)\n            if area &amp;gt; 2000:\n                x, y, w, h &amp;#61; cv2.boundingRect(cnt)\n                cv2.rectangle(image, (x, y), (x &amp;#43; w, y &amp;#43; h), greenColor, 2)\n                found &amp;#61; True\n\n    if found:\n        text &amp;#61; f&amp;#39;Found {color} object&amp;#39;\n        print(text)\n        cv2.putText(image, text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, blueColor, 2)\n    else:\n        text &amp;#61; &amp;#34;Not Found!&amp;#34;\n        print(&amp;#34;Not Found! 没有找到&amp;#xff01;&amp;#34;)\n        cv2.putText(image, text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, redColor, 2)\n\n    return mask, image\n\n\n# video test 摄像头接通测试\ndef test(cap, source):\n    if cap is None or not cap.isOpened():\n        print(&amp;#39;Warning: unable to open video source: &amp;#39;, source)\n        return False\n    else:\n        _, tmp &amp;#61; cap.read()\n        if tmp is not None:\n            return True\n        else:\n            print(&amp;#34;Warning: unable to read video feed.&amp;#34;)\n            return False\n\n\n# update color 更新颜色\ndef assignColor(color):\n    global lowHue, lowSat, lowVal, highHue, highSat, highVal\n    lowHue &amp;#61; color[0]\n    lowSat &amp;#61; color[1]\n    lowVal &amp;#61; color[2]\n    highHue &amp;#61; color[3]\n    highSat &amp;#61; color[4]\n    highVal &amp;#61; color[5]\n\n\n# 绿色控制\ndef greenCtrl(val):\n    global defaultColor, color\n    color &amp;#61; &amp;#39;GREEN&amp;#39;\n    defaultColor &amp;#61; [1, 0, 0, 0]\n    assignColor(GREEN)\n\n\n# 黄色控制\ndef yellowCtrl(val):\n    global defaultColor, color\n    color &amp;#61; &amp;#39;YELLOW&amp;#39;\n    defaultColor &amp;#61; [0, 1, 0, 0]\n    assignColor(YELLOW)\n\n\n# 蓝色控制\ndef blueCtrl(val):\n    global defaultColor, color\n    color &amp;#61; &amp;#39;BLUE&amp;#39;\n    defaultColor &amp;#61; [0, 0, 1, 0]\n    assignColor(BLUE)\n\n\n# 红色控制\ndef redCtrl(val):\n    global defaultColor, color\n    color &amp;#61; &amp;#39;RED&amp;#39;\n    defaultColor &amp;#61; [0, 0, 0, 1]\n    assignColor(RED)\n\n\n# 更新滑块\ndef updateTrackbar():\n    cv2.setTrackbarPos(green_bar, color_win, defaultColor[0])\n    cv2.setTrackbarPos(yellow_bar, color_win, defaultColor[1])\n    cv2.setTrackbarPos(blue_bar, color_win, defaultColor[2])\n    cv2.setTrackbarPos(red_bar, color_win, defaultColor[3])\n\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# main\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\nFRAME_WIDTH &amp;#61; 800\nFRAME_HEIGHT &amp;#61; 600\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# Status bar\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\ncolor_win &amp;#61; &amp;#39;Choose Color&amp;#39;\ncv2.namedWindow(color_win)  # (&amp;#39;窗口标题&amp;#39;,默认参数)//窗口大小比例不可改变\ncv2.resizeWindow(color_win, 500, 310)\ncv2.moveWindow(color_win, 857, 520)\ncv2.createTrackbar(green_bar, color_win, 0, 1, greenCtrl)\ncv2.createTrackbar(yellow_bar, color_win, 0, 1, yellowCtrl)\ncv2.createTrackbar(blue_bar, color_win, 0, 1, blueCtrl)\ncv2.createTrackbar(red_bar, color_win, 0, 1, redCtrl)\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# Camera Len 选择镜头\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\nvidCapture &amp;#61; cv2.VideoCapture(0, cv2.CAP_DSHOW)\nvideoFeed &amp;#61; test(vidCapture, 0)  # camera test 摄像测试\n\nif not videoFeed:\n    print(&amp;#34;No video input! 摄像头没有连接&amp;#34;)\n    exit(1)\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# Window 窗口&amp;#xff1a; Frame\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\nvidCapture.set(cv2.CAP_PROP_FRAME_WIDTH, FRAME_WIDTH)\nvidCapture.set(cv2.CAP_PROP_FRAME_HEIGHT, FRAME_HEIGHT)\n\nvideo_win &amp;#61; &amp;#39;Frame&amp;#39;\ncv2.namedWindow(video_win, cv2.WINDOW_AUTOSIZE)\ncv2.moveWindow(video_win, 855, 0)\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# Window 窗口&amp;#xff1a; Demo\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\ndemo_win &amp;#61; &amp;#39;Demo&amp;#39;\ncv2.namedWindow(demo_win)\ncv2.moveWindow(demo_win, 205, 0)\n\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\n# Begin\n# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\nwhile vidCapture.isOpened():\n    updateTrackbar()\n\n    # Get webcam frame.获取网络摄像头帧。\n    _, frame &amp;#61; vidCapture.read()\n\n    # Show the original image.显示原始图像。\n    demo, frame_contour &amp;#61; frame_mask_contour(frame)\n    cv2.imshow(video_win, frame_contour)\n    cv2.imshow(demo_win, demo)\n\n    key &amp;#61; cv2.waitKey(1)\n    if key &amp;#61;&amp;#61; ord(&amp;#34;q&amp;#34;) or key &amp;#61;&amp;#61; ord(&amp;#34;Q&amp;#34;):  # q or Q\n        break\n\nvidCapture.release()  # release()释放摄像头\ncv2.destroyAllWindows()  # 调用destroyAllWindows()关闭所有图像窗口。\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["python机器视觉方向，如何修改代码使程序变得更加流畅？", ["这是一段python机器视觉方向的代码，使用opencv库进行摄像头图像操作。目的是获取设定颜色（红，绿，蓝，黄）的外包矩形（仅一个矩形，横平竖直的，没必要是最小的），并且输出这个外包举行的中心在画布上面的横纵坐标值。", "\n\n", "\n", "from __future__ import division\nimport cv2\nimport numpy as np\nimport time\n\n# HSV色彩空间，Hue:色调（颜色）；Sat:饱和度（一种颜色混合白光的数量）；Val:亮度（明暗程度）\n\n#创建回调函数\ndef nothing(*arg):\n    pass\n\nFRAME_WIDTH = 800\nFRAME_HEIGHT = 600\n\n# Initial HSV GUI slider values to load on program start.要在程序启动时加载的初始HSV GUI滑块值。\n# icol = [36, 202, 59, 71, 255, 255]  # Green\n# icol = [18, 0, 196, 36, 255, 255]  # Yellow\nicol = [89, 0, 0, 125, 255, 255]  # Blue\n#icol = [0, 100, 80, 10, 255, 255]   # Red\n# icol = [104, 117, 222, 121, 255, 255]   # test\n# icol = [0, 0, 0, 255, 255, 255]  # New start\n\ncv2.namedWindow('colorTest',cv2.WINDOW_AUTOSIZE)#('窗口标题',默认参数)//窗口大小比例不可改变\n\n#cv2.creatTrackbar()函数的第一个参数时滑动条的名字，第二个参数时滑动条被放置的窗口的名字，\n#第三个参数是滑动条默认值,第四个参数时滑动条的最大值，第五个参数时回调函数，每次滑动都会调用回调函数。\n\n# Lower range colour sliders.低量程彩色滑块。\ncv2.createTrackbar('lowHue', 'colorTest', icol[0], 255, nothing)\ncv2.createTrackbar('lowSat', 'colorTest', icol[1], 255, nothing)\ncv2.createTrackbar('lowVal', 'colorTest', icol[2], 255, nothing)\n# Higher range colour sliders.更高范围的彩色滑块。\ncv2.createTrackbar('highHue', 'colorTest', icol[3], 255, nothing)\ncv2.createTrackbar('highSat', 'colorTest', icol[4], 255, nothing)\ncv2.createTrackbar('highVal', 'colorTest', icol[5], 255, nothing)\n\nvidCapture = cv2.VideoCapture(0)#打开笔记本的内置摄像头//参数是视频文件路径则打开视频，如cap = cv2.VideoCapture(“../test.avi”)\n\n#cv2.VideoCapture().set(propId, value)设置摄像头\n\nvidCapture.set(cv2.CAP_PROP_FRAME_WIDTH, FRAME_WIDTH)\nvidCapture.set(cv2.CAP_PROP_FRAME_HEIGHT, FRAME_HEIGHT)\n\nwhile(True):\n    #time.sleep(0.1)\n    timeCheck = time.time()#检查时间是否为有效时间\n    \n    #cv2.getTrackbarPos()，共有2个参数，第一个参数是滑动条名字，第二个时所在窗口偶，返回值是滑动条位置。\n    #Get HSV values from the GUI sliders.从GUI滑块获取HSV值。\n    \n    lowHue = cv2.getTrackbarPos('lowHue', 'colorTest')\n    lowSat = cv2.getTrackbarPos('lowSat', 'colorTest')\n    lowVal = cv2.getTrackbarPos('lowVal', 'colorTest')\n    \n    highHue = cv2.getTrackbarPos('highHue', 'colorTest')\n    highSat = cv2.getTrackbarPos('highSat', 'colorTest')\n    highVal = cv2.getTrackbarPos('highVal', 'colorTest')\n    \n     # Get webcam frame.获取网络摄像头帧。\n    _, frame = vidCapture.read()\n\n    # Show the original image.显示原始图像。\n    cv2.imshow('frame', frame)\n\n    # Convert the frame to HSV colour model.将框架转换为HSV彩色模型。\n    frameHSV = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n    # HSV values to define a colour range we want to create a mask from.HSV值来定义要从中创建遮罩的颜色范围。\n    colorLow = np.array([lowHue, lowSat, lowVal])\n    colorHigh = np.array([highHue, highSat, highVal])\n    mask = cv2.inRange(frameHSV, colorLow, colorHigh)\n    #利用cv2.inRange函数设阈值，去除背景部分\n\n    #在opencv中查找轮廓时，物体应该是白色而背景应该是黑色\n    #一个列表，每一项都是一个轮廓， 不会存储轮廓所有的点，只存储能描述轮廓的点\n    #hierarchy:一个ndarray, 元素数量和轮廓数量一样， \n    #每个轮廓contours[i]对应4个hierarchy元素hierarchy[i][0] ~hierarchy[i][3]，\n    #分别表示后一个轮廓、前一个轮廓、父轮廓、内嵌轮廓的索引编号，如果没有对应项，则该值为负数\n    #contours, hierarchy = cv2.findContours(输入图像,轮廓的检索模式,轮廓的近似方法)\n\n    #轮廓的检索模式\n    #cv2.RETR_EXTERNAL表示只检测外轮廓\n    #cv2.RETR_LIST检测的轮廓不建立等级关系\n    #cv2.RETR_CCOMP建立两个等级的轮廓，上面的一层为外边界，里面的一层为内孔的边界信息。\n    #如果内孔内还有一个连通物体，这个物体的边界也在顶层\n    #cv2.RETR_TREE建立一个等级树结构的轮廓\n    #轮廓的近似办法\n    #cv2.CHAIN_APPROX_NONE存储所有的轮廓点，相邻的两个点的像素位置差不超过1，\n    #即max（abs（x1-x2），abs（y2-y1））==1\n    #cv2.CHAIN_APPROX_SIMPLE压缩水平方向，垂直方向，对角线方向的元素，只保留该方向的终点坐标，例如一个矩形轮廓只需4个点来保存轮廓信息\n\n    contours, hierarchy = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\n    contour_sizes = [(cv2.contourArea(contour), contour) for contour in contours]\n    biggest_contour = max(contour_sizes, key=lambda x: x[0])[1]\n\n    x, y, w, h = cv2.boundingRect(biggest_contour)\n    cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)\n    print((x+w)/2,(y+h)/2)\n\n\ncv2.destroyAllWindows()#调用destroyAllWindows()关闭所有图像窗口。\nvidCapture.release()#release()释放摄像头\n", "\n\n", "要求：1、修改代码去掉colorTest界面里面全部的滑条，（用#注释掉对应的代码就行）只显示一个识别出来的图片。", "\n\n", "整个代码使用预先设定好的参数进行运行，不需要在程序运行的时候调整数值。", "\n\n", "2、这个代码在我的电脑上会出现程序卡死的情况，但是代码仍然可以输出信息，这个信息就是外包矩形的中心横纵坐标的位置，说明底层代码还是可以运行的。看看是哪一段的问题。并且给解决掉，我用的是python3.7.3。", "\n\n", "3、当屏幕没有检测到自己设定的颜色的时候，会报错，说一个集合是空的，能不能通过某种方式输出“？？？”并且重新执行这段代码，而不是程序直接退出了。try：except：结构可以吗。", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把getchar()拿掉&amp;#xff0c;这个应该没有什么用&amp;#xff0c;你放在这里会影响后续输入的&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["请问我的载入家谱函数哪里出错了呀？并没有显示载入成功 反而自己退出了", ["\n\n", "\n", "#define _CRT_SECURE_NO_WARNINGS", "#include <stdio.h>", "#include <stdlib.h>", "#include <string.h>", "#include<conio.h>", "typedef char TElemType;", "typedef int status;", "typedef struct BiTPNode {", "    TElemType data[10];", "    struct BiTPNode* parent, * lchild, * rchild; //父亲及左右孩子指针", "}BiTPNode, * BiPTree;", "BiPTree P;", "BiPTree T;", "//家谱的创建", "int Cre()", "{", "    system(\"cls\");", "    FILE* fp; //声明指向文件的指针", "    char filename[40], str[10];", "    printf(\"请输入家谱名称:\");", "    getchar();", "    gets(filename); //输入家谱名称", "    while (filename[0] == NULL)", "    {", "        printf(\"家谱名不能为空,请重新输入:\");", "        gets(filename);", "    }", "    if ((fp = fopen(filename, \"w\")) == NULL)", "    {", "        printf(\"%s家谱创建失败!\\n\", filename);", "        return 0;", "    }", "    printf(\"请输入家谱内容:\\n\");", "    while (strlen(gets(str)) > 0)", "    {", "        fputs(str, fp); //向文件写入字符串", "        putc('\\n', fp);", "    }", "    fclose(fp); //关闭文件", "    printf(\"按任一键继续!\");", "    getchar();", "    return 1;", "}", "status loc(BiPTree T, BiPTree* P, TElemType name[10]) {", "    if (T)", "    {", "        P = T;", "        //字符串的比较", "        if (!strcmp(name, T->data)) return 1;", "        if (loc(T->lchild, P, name)) return 1;", "        if (loc(T->rchild, P, name)) return 1;", "    }", "    else", "        return 0;", "}", "//构造二叉树", "status inittree(BiPTree T)", "{", "    T = (BiTPNode*)malloc(sizeof(BiTPNode));", "    if (T)", "        return 0;", "    T->lchild = NULL;", "    T->rchild = NULL;", "    T->parent = NULL;", "    return 1;", "}", "\n", "//载入家谱", "status Crt(BiPTree  T)", "{", "    FILE* fp;", "    BiPTree Q, R, M, N;", "    char filename[40], name[10];", "    system(\"cls\"); //清屏", "    R = (BiTPNode*)malloc(sizeof(BiTPNode)); //分配存储空间", "    M = (BiTPNode*)malloc(sizeof(BiTPNode));", "    N = (BiTPNode*)malloc(sizeof(BiTPNode));", "    printf(\"请输入家谱名:\");", "    getchar();", "\n", "gets(filename);\n", "while", " (filename[", "0", "] == ", "NULL", ")\n{\n    printf(", "\"家谱名不能为空,请重新输入:\"", ");\n    gets(filename);\n}\n", "if", " ((fp = fopen(", "\"filename\"", ", ", "\"r\"", ")) == ", "NULL", ")\n{\n    printf(", "\"%s家谱打开失败!\\n\"", ", filename);\n    ", "return", " ", "0", ";\n}\ninittree(T);\nfscanf(fp, ", "\"%s\"", ", name); ", "//从文件读入姓名", "\nstrcpy(T->data, name);\nT->lchild = ", "NULL", ";\nT->rchild = ", "NULL", ";\nT->parent = ", "NULL", ";\nfclose(fp);\n", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n{\n    printf(", "\"%家谱打开失败!\\n\"", ", filename);\n    ", "return", " ", "0", ";\n}\nfscanf(fp, ", "\"%s\"", ", name);\n", "while", " (!feof(fp))\n{\n    ", "if", " (loc(T, P, name))\n    {\n        fscanf(fp, ", "\"%s\"", ", name);\n        Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n        strcpy(Q->data, name);\n        P->lchild = Q; ", "//构建孩子", "\n        Q->parent = P;\n        Q->lchild = ", "NULL", ";\n        Q->rchild = ", "NULL", ";\n        N = P;\n    }\n    ", "else", " ", "if", " (!loc(T, P, name))\n    {\n        Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n        R = N;\n        R = R->lchild;\n        ", "while", " (R) {\n            M = R;\n            R = R->rchild;\n        }\n        strcpy(Q->data, name);\n        M->rchild = Q;\n        Q->parent = M;\n        Q->lchild = ", "NULL", ";\n        Q->rchild = ", "NULL", ";\n    }\n    fscanf(fp, ", "\"%s\"", ", name);\n}\nprintf(", "\"信息载入成功,按任一键继续!\"", ");\ngetchar();\n", "return", " ", "1", ";\n", "\n", "}", "//添加成员", "status in(BiPTree* T)", "{", "    char father[10], name[10];", "    BiPTree Q, M;", "    system(\"cls\");", "    printf(\"请输入要添加到该家谱中的人的父亲姓名:\");", "    getchar();", "    gets(father);", "    while (!loc(T, P, father)) {", "        printf(\"%s不在该家谱中!请重新输入:\", father);", "        gets(father);", "    }", "    printf(\"请输入要添加到该家谱中的人的姓名:\");", "    gets(name);", "    Q = (BiTPNode*)malloc(sizeof(BiTPNode));", "    M = (BiTPNode*)malloc(sizeof(BiTPNode));", "    strcpy(Q->data, name);", "    Q->lchild = NULL;", "    Q->rchild = NULL;", "    if (!P->lchild) {", "        P->lchild = Q;", "        Q->parent = P;", "    }", "    else {", "        P = P->lchild;", "        while (P) {", "            M = P;", "            P = P->rchild;", "        }", "        M->rchild = Q;", "        Q->parent = M;", "    }", "    printf(\"成员添加成功,按任一键继续!\");", "    getchar();", "    return 1;", "}", "\n", "//删除成员", "status de(BiPTree* T)", "{", "    char name[10];", "    system(\"cls\");", "    printf(\"请输入要删除的人的姓名:\");", "    getchar();", "    gets(name);", "    while (!loc(T, P, name)) {", "        printf(\"%s不在该家谱中!请重新输入:\", name);", "        gets(name);", "    }", "    if (!P->rchild) {", "        if (P->parent->lchild == P)", "            P->parent->lchild = NULL;", "        else", "            P->parent->rchild = NULL;", "        free(P);", "    }", "    else if (P->rchild) {", "        if (P->parent->lchild == P)", "            P->parent->lchild = P->rchild;", "        else", "            P->parent->rchild = P->rchild;", "        free(P);", "    }", "    printf(\"成员删除成功,按任一键继续!\");", "    getchar();", "    return 1;", "}", "\n", "status Show(TElemType e[10]) {", "    printf(\"%s  \", e);", "    return 1;", "}", "\n", "//二叉树的遍历", "status pre(BiPTree T, status(*visit)(TElemType[10])) {", "    if (T) {", "        if ((*visit)(T->data))", "            if (pre(T->lchild, visit))", "                if (pre(T->rchild, visit)) return 1;", "        return 0;", "    }", "    else return 1;", "}", "\n", "//家族成员查询", "status Sea(BiPTree T) {", "    char name[10];", "    BiPTree N;", "    N = (BiTPNode*)malloc(sizeof(BiTPNode));", "    system(\"cls\");", "    printf(\"请输入要查寻的人的姓名:\");", "    getchar();", "    gets(name);", "    while (!loc(T, P, name)) {", "        printf(\"%s不在该家谱中!请重新输入:\", name);", "        gets(name);", "    }", "    N = P;", "    if (P == T)", "        printf(\"%s的父亲在该家谱中没有记载!\\n\", P->data);", "    else {", "        while (N->parent->rchild == N)", "            N = N->parent;", "        printf(\"%s的父亲是:%s\\n\", P->data, N->parent->data);", "    }", "    N = P;", "    if (P == T)", "        printf(\"%s没有兄弟!\\n\", P->data);", "    else if (!P->rchild && P->parent->rchild != P)", "        printf(\"%s没有兄弟!\\n\", P->data);", "    else {", "        printf(\"%s的兄弟有:\\n\", name);", "        while (N->rchild) {", "            printf(\"%s \", N->rchild->data);", "            N = N->rchild;", "        }", "        N = P;", "        while (N->parent->rchild == N) {", "            printf(\"%s \", N->parent->data);", "            N = N->parent;", "        }", "        printf(\"\\n\");", "    }", "    if (P == T)", "        printf(\"%s的祖先在该家谱中没有记载!\\n\", name);", "    else", "        printf(\"%s的祖先是:%s\\n\", name, T->data);", "    N = P;", "    if (!P->lchild) {", "        printf(\"%s没有孩子!\\n\", name);", "        printf(\"%s没有后代\\n\", name);", "    }", "    else {", "        printf(\"%s的孩子有:\\n\", name);", "        printf(\"%s \", P->lchild->data);", "        N = N->lchild;", "        while (N->rchild) {", "            printf(\"%s \", N->rchild->data);", "            N = N->rchild;", "        }", "        printf(\"\\n\");", "        printf(\"%s的后代有:\\n\", name);", "        pre(P->lchild, Show);", "        printf(\"\\n\");", "    }", "    printf(\"按任一键继续!\");", "    getchar();", "    return 1;", "}", "//文件的创建", "status write(BiPTree T, char filename[40]) {", "    FILE* fp;", "    if ((fp = fopen(filename, \"a+\")) == NULL)", "    {", "        printf(\"%s文件创建失败!\\n\", filename);", "        return 0;", "    }", "    fprintf(fp, \"%s \", T->data);", "    T = T->lchild;", "    while (T) {", "        fprintf(fp, \"%s \", T->data);", "        T = T->rchild;", "    }", "    fprintf(fp, \"\\n\"); //输出", "    fclose(fp);", "    return 1;", "}", "status prewrite(BiPTree T, status(*visit)(BiPTree, char[40]), char filename[40]) {", "    if (T) {", "        if (T->lchild)", "            (*visit)(T, filename);", "        prewrite(T->lchild, visit, filename);", "        prewrite(T->rchild, visit, filename);", "        return 1;", "    }", "    else return 1;", "}", "\n", "status wrong()", "{", "    char a;", "    scanf(\"%c\", &a);", "    printf(\"无此选项,请重新选择!(按任一键继续!)\");", "    getchar();", "    return 1;", "}", "\n", "//家谱的存储", "status Sav(BiPTree T) {", "    FILE* fp;", "    char filename[40];", "    system(\"cls\");", "    printf(\"请输入新的文件名:\");", "    getchar();", "    gets(filename);", "    while (filename[0] == NULL)", "    {", "        printf(\"家谱名不能为空,请重新输入:\");", "        gets(filename);", "    }", "    prewrite(T, write, filename);", "    printf(\"%s家谱保存成功,按任一键继续!\", filename);", "    getchar();", "    return 1;", "}", "//修改家谱", "status Upd() {", "    system(\"cls\");", "    int xz;", "    while (1)", "    {", "        system(\"cls\");", "        printf(\"\\n\\n\\n\\n\");", "        printf(\"   家族成员的添加与删除操作  \\n\");", "        printf(\"      请选择           \\n\");", "        printf(\"    1.添加成员.        \\n\");", "        printf(\"    2.删除成员.        \\n\");", "        printf(\"    3.返回上一级.      \\n\");", "        printf(\"       请选择:\");", "        scanf(\"%d\", &xz);", "        switch (xz)", "        {", "        case 1: in(T); break;", "        case 2: de(T); break;", "        case 3: return 0;", "        default:", "            wrong();", "            break;", "        }", "    }", "}", "\n", " int main()", "{", "    P = (BiTPNode*)malloc(sizeof(BiTPNode));", "    int xz;", "    while (1)", "    {", "        system(\"cls\");", "        printf(\"\\n\\n\\n\\n\");", "        printf(\"     家族关系查询系统     \\n\");", "        printf(\"     具体操作如下         \\n\");", "        printf(\"     1.创建家谱.          \\n\");", "        printf(\"     2.载入家谱.          \\n\");", "        printf(\"     3.修改家谱.          \\n\");", "        printf(\"     4.查寻成员.          \\n\");", "        printf(\"     5.保存家谱.          \\n\");", "        printf(\"     6.退出程序.          \\n\");", "        printf(\"     请选择操作:\");", "        scanf(\"%d\", &xz);", "        switch (xz)", "        {", "        case 1:", "            Cre();", "            break;", "        case 2:", "            Crt(T);", "            break;", "        case 3:", "            Upd();", "            break;", "        case 4:", "            Sea(T);", "            break;", "        case 5:", "            Sav(T);", "            break;", "        case 6:", "            return 0;", "        default:", "            wrong();", "            break;", "        }", "    }", "}", "\n", "\n\n", "\n", "``````", "\n", "\n###### 问题相关代码，请勿粘贴截图 \n\n###### 运行结果及报错内容 \n\n###### 我的解答思路和尝试过的方法 \n\n![img](https:", "//", "\n", "\n", "\n", "\n", "我想要达到的结果", "\n", "\n```c\n", "//载入家谱", "\n", "status ", "Crt", "(BiPTree  T)", " \n", "{\n    FILE* fp;\n    BiPTree Q, R, M, N;\n    ", "char", " filename[", "40", "], name[", "10", "];\n    ", "system", "(", "\"cls\"", "); ", "//清屏", "\n    R = (BiTPNode*)", "malloc", "(", "sizeof", "(BiTPNode)); ", "//分配存储空间", "\n    M = (BiTPNode*)", "malloc", "(", "sizeof", "(BiTPNode));\n    N = (BiTPNode*)", "malloc", "(", "sizeof", "(BiTPNode));\n    ", "printf", "(", "\"请输入家谱名:\"", ");\n    ", "getchar", "();\n   \n    ", "gets", "(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        ", "printf", "(", "\"家谱名不能为空,请重新输入:\"", ");\n        ", "gets", "(filename);\n    }\n    ", "if", " ((fp = ", "fopen", "(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        ", "printf", "(", "\"%s家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    \n    ", "inittree", "(T);\n    ", "fscanf", "(fp, ", "\"%s\"", ", name); ", "//从文件读入姓名", "\n    ", "strcpy", "(T->data, name);\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    ", "fclose", "(fp);\n    ", "if", " ((fp = ", "fopen", "(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        ", "printf", "(", "\"%家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    ", "fscanf", "(fp, ", "\"%s\"", ", name);\n    ", "while", " (!", "feof", "(fp)) {\n        ", "if", " (", "loc", "(T, P, name)) {\n            ", "fscanf", "(fp, ", "\"%s\"", ", name);\n            Q = (BiTPNode*)", "malloc", "(", "sizeof", "(BiTPNode));\n            ", "strcpy", "(Q->data, name);\n            P->lchild = Q; ", "//构建孩子", "\n            Q->parent = P;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n            N = P;\n        }\n        ", "else", " ", "if", " (!", "loc", "(T, P, name)) {\n            Q = (BiTPNode*)", "malloc", "(", "sizeof", "(BiTPNode));\n            R = N;\n            R = R->lchild;\n            ", "while", " (R) {\n                M = R;\n                R = R->rchild;\n            }\n            ", "strcpy", "(Q->data, name);\n            M->rchild = Q;\n            Q->parent = M;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n        }\n        ", "fscanf", "(fp, ", "\"%s\"", ", name);\n    }\n    ", "printf", "(", "\"信息载入成功,按任一键继续!\"", ");\n    ", "getchar", "();\n    \n    ", "return", " ", "1", ";\n}\n\n", "\n", "\n", "\n", "\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;int cmp_by_name(const void* e1, const void* e2)\n{\n\t//return strcmp(((struct Contact*)e1)-&amp;gt;data.name, ((struct Contact*)e2)-&amp;gt;data.name);\n\treturn strcmp(((struct Contact*)e1)-&amp;gt;data-&amp;gt;name, (((struct Contact*)e2)-&amp;gt;data-&amp;gt;name));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;改成&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;int cmp_by_name(const void* e1, const void* e2)\n{\n\t//return strcmp(((struct Contact*)e1)-&amp;gt;data.name, ((struct Contact*)e2)-&amp;gt;data.name);\n\treturn strcmp(((struct PeoInfo*)e1)-&amp;gt;name, (((struct PeoInfo*)e2)-&amp;gt;name));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;试试看&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["小白求大佬帮我解决下这个结构体指针问题", ["\n", "// ********************************** 通讯录.h  文件  *********************************\n#pragma once\n#define MAX_name 20\n#define MAX_sex  5\n#define MAX_tele  15\n#define MAX_addr  30\n#define DEFAULT_SZ 3\n\nstruct PeoInfo\n{\n\tchar name[MAX_name];\n\tint age;\n\tchar sex[MAX_sex];\n\tchar tele[MAX_tele];\n\tchar addr[MAX_addr];\n};\nenum Option\n{\n\tEXIT,\n\tADD,\n\tDEL,\n\tSEARCH,\n\tMODIFY,\n\tSHOW,\n\tSORT\n};\n\nstruct Contact    // 通讯录的类型\n{\n\tstruct PeoInfo* data;  \n\tint size;   //  记录当前已经有的元素个数\n\tint capacity;// 当前data里的最大容量\n};\n\nvoid InitContact(struct Contact* ps);\nvoid AddContact(struct Contact* ps);\nvoid ShowContact(const struct Contact* ps);\nvoid DelContact(struct Contact* ps);\nvoid SearchContact(const struct Contact* ps);\nvoid ModifyContact(struct Contact* ps);\nvoid SortContact(struct Contact* ps);\nvoid DestroyContact(struct Contact* ps);\n\n\n\n//  **************************   通讯录.cpp  **************************************\n\n#define _CRT_SECURE_NO_WARNINGS 1\n#include\"通讯录.h\"\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<search.h>\n\nvoid InitContact(struct Contact* ps)\n{\n\t//memset(ps->data, 0, sizeof(ps->data));\n\t//ps->size = 0;   //初始化通讯录 全部为 0\n\tps->data = (struct PeoInfo*)malloc(3 * sizeof(struct PeoInfo));\n\tif (ps->data == NULL)\n\t{\n\t\treturn;\n\t}\n\tps->size = 0;\n\tps->capacity = DEFAULT_SZ;\n} \nvoid CheckCapacity(struct Contact* ps)\n{\n\tif (ps->size == ps->capacity)\n\t{\n\t\t//增容\n\t\tstruct PeoInfo* ptr=(struct PeoInfo*)realloc(ps->data, (ps->capacity + 2) * sizeof(struct PeoInfo));\n\t\tif (ptr != NULL)\n\t\t{\n\t\t\tps->data = ptr;\n\t\t\tps->capacity += 2;\n\t\t\tprintf(\"增容成功！\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"增容失败！\\n\");\n\t}\n}\nvoid AddContact(struct Contact* ps)\n{\n\t//检测当前空间是否满了：如果满了，扩容；如果不满，退出，进行下一步\n\tCheckCapacity(ps);\n\tprintf(\"请输入姓名：\");\n\tscanf(\"%s\", ps->data[ps->size].name);\n\tprintf(\"请输入年龄：\");\n\tscanf(\"%d\", &(ps->data[ps->size].age));\n\tprintf(\"请输入性别：\");\n\tscanf(\"%s\", ps->data[ps->size].sex);\n\tprintf(\"请输入电话：\");\n\tscanf(\"%s\", ps->data[ps->size].tele);\n\tprintf(\"请输入地址：\");\n\tscanf(\"%s\", ps->data[ps->size].addr);\n\tps->size++;\n\tprintf(\"添加成功！\\n\");\n}\n\n//  ******** 使用qsort 对通讯录排序******\nint cmp_by_name(const void* e1, const void* e2)\n{\n\t//return strcmp(((struct Contact*)e1)->data.name, ((struct Contact*)e2)->data.name);\n\treturn strcmp(((struct Contact*)e1)->data->name, (((struct Contact*)e2)->data->name));\n}\nvoid SortContact(struct Contact* ps)\n{\n\tqsort(ps->data, ps->size, sizeof(ps->data[0]), cmp_by_name);\n}\nvoid DestroyContact(struct Contact* ps)\n{\n\tfree(ps->data);\n\tps->data = NULL;\n} \n\nvoid ShowContact(const struct Contact* ps)\n{\n\tif (ps->size == 0)\n\t{\n\t\tprintf(\"通讯录为空！\\n\");\n\t}\n\telse\n\t{\n\t\tint i = 0;\n\t\tprintf(\"%20s\\t%4s\\t%5s\\t%12s\\t%20s\\n\", \"名字\", \"年龄\", \"性别\", \"电话\", \"地址\");\n\t\tfor (i = 0; i < ps->size; i++)\n\t\t{\n\t\t\tprintf(\"%20s\\t%4d\\t%5s\\t%12s\\t%20s\\n\", ps->data[i].name,\n\t\t\t\tps->data[i].age,\n\t\t\t\tps->data[i].sex,\n\t\t\t\tps->data[i].tele,\n\t\t\t    ps->data[i].addr);\n\t\t}\n\t}\n}\nstatic int Findbyname(const struct Contact* ps, char* name)\n{\n\tint i = 0;\n\tfor (i = 0; i < ps->size ; i++)\n\t{\n\t\tif (strcmp(ps->data[i].name, name) == 0)\n\t\t\treturn i;\n\t}\n\treturn -1;  //找不到\n}\nvoid DelContact(struct Contact* ps)\n{\n\tchar name[MAX_name] = { 0 };\n\tprintf(\"请输入要删除人的名字：\");\n\tscanf(\"%s\", name);\n\tint pos=Findbyname(ps,name);\n\tif (pos == -1)\n\t{\n\t\tprintf(\"要删除的人不存在！\\n\");\n\t}\n\telse\n\t{\n\t\tint i = 0;\n\t\tfor (i = pos; i < ps->size-1; i++)\n\t\t{\n\t\t\t ps->data[i] = ps->data[i + 1];\n\t\t}\n\t\tps->size--;\n\t\tprintf(\"删除成功！\\n\");\n\t}\n}\nvoid SearchContact(const struct Contact* ps)\n{\n\tchar name[MAX_name] = { 0 };\n\tprintf(\"请输入要查找人的名字：\");\n\tscanf(\"%s\", name);\n\tint pos = Findbyname(ps, name);\n\tif (pos == -1)\n\t{\n\t\tprintf(\"要查找人的信息不存在！\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%20s\\t%4s\\t%5s\\t%12s\\t%20s\\n\", \"名字\", \"年龄\", \"性别\", \"电话\", \"地址\");\n\t\tprintf(\"%20s\\t%4d\\t%5s\\t%12s\\t%20s\\n\", ps->data[pos].name,\n\t\t\tps->data[pos].age,\n\t\t\tps->data[pos].sex,\n\t\t\tps->data[pos].tele,\n\t\t\tps->data[pos].addr);\n\t}\n}\nvoid ModifyContact(struct Contact* ps)\n{\n\tchar name[MAX_name] = { 0 };\n\tprintf(\"请输入要修改人的姓名：\");\n\tscanf(\"%s\", name);\n\tint pos = Findbyname(ps, name);\n\tif (pos == -1)\n\t{\n\t\tprintf(\"被修改人的信息不存在\");\n\t}\n\telse\n\t{\n\t\tprintf(\"请输入姓名：\");\n\t\tscanf(\"%s\", ps->data[pos].name);\n\t\tprintf(\"请输入年龄：\");\n\t\tscanf(\"%d\", &(ps->data[pos].age));\n\t\tprintf(\"请输入性别：\");\n\t\tscanf(\"%s\", ps->data[pos].sex);\n\t\tprintf(\"请输入电话：\");\n\t\tscanf(\"%s\", ps->data[pos].tele);\n\t\tprintf(\"请输入地址：\");\n\t\tscanf(\"%s\", ps->data[pos].addr);\n\t\tprintf(\"修改成功！\\n\");\n\t}\n}\n\n\n\n\n\n//****************************  test.cpp  ********************************************** \n\n#define _CRT_SECURE_NO_WARNINGS 1\n#include<stdio.h>\n#include<string.h>\n#include\"通讯录.h\"\n\nvoid menu()\n{\n\tprintf(\"***************************************************\\n\");\n\tprintf(\"******* 1.ADD                   2.DEL ************\\n\");\n\tprintf(\"******* 3.SEARCH               4.MODIFY ***********\\n\");\n\tprintf(\"******* 5.SHOW                  6.SORT ************\\n\");\n\tprintf(\"***************  0.EXIT    ************************\\n\");\n\tprintf(\"***************************************************\\n\");\n\n}\nint main()\n{\n\tint input = 0;\n\tstruct Contact con;  //con 就是通讯录，其中包含了data 指针、size和capacity\n\tInitContact(&con);//初始化通讯录\n\n\tdo\n\t{\n\t\tmenu();\n\t\tprintf(\"请选择:\");\n\t\tscanf(\"%d\", &input);\n\t\tswitch (input)\n\t\t{\n\t\tcase ADD:\n\t\t\tAddContact(&con);\n\t\t\tbreak;\n\t\tcase DEL:\n\t\t\tDelContact(&con);\n\t\t\tbreak;\n\t\tcase SEARCH:\n\t\t\tSearchContact(&con);\n\t\t\tbreak;\n\t\tcase MODIFY:\n\t\t\tModifyContact(&con);\n\t\t\tbreak;\n\t\tcase SHOW:\n\t\t\tShowContact(&con);\n\t\t\tbreak;\n\t\tcase SORT:\n\t\t\tSortContact(&con);\n\t\t\tbreak;\n\t\tcase EXIT:\n\t\t\t//销毁通讯录------释放动态内存开辟的内存\n\t\t\tDestroyContact(&con);\n\t\t\tprintf(\"退出通讯录!\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t\tprintf(\"输入错误，请重新输入:\");\n\t\t\tbreak;\n\t\t}\n\t} while (input);\n\treturn 0;\n}", "\n\n", "本人小白，刚学习C语言，近期学习了动态内存分配，看着视频写了这个动态内存版本的通讯录。现在这个通讯录其他功能都可以实现，就是这个排序功能现在实现不了了。之前struct Contact  con中创建的是 struct PeoInfo  data[1000] ，使用这个结构体数组的话，排序功能可以跑起来，但是现在改成struct PeoInfo*  data 后，排序功能不能正常使用。求大佬，帮我解答下。"]], "Tag": "程序设计"}
{"Answer": "你要看你配置文件的数据源配置 DataSource 连接的是哪个数据库，你连接的应该是mybatis数据库 但是这个数据库内不存在 user表", "Konwledge_Point": "名字空间", "Question": ["Mybatis小练习 报错 求大神指导，信息详尽", ["UserMapper", "\n\n", "public interface UserMapper {\n    //根据id查询用户信息\n    public User findUserById(int id) throws Exception;\n    //根据用户名列查询用户列表\n    public List<User> findUserByName(String name)throws Exception;\n    //插入用户\n    public void insertUser(User user)throws Exception;\n\n}\n\n", "\n\n", "UserMapper.xml", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\nPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 \n注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址\n-->\n<mapper namespace=\"com.neuedu.mapper.UserMapper\">\n\n\n\n    <!-- 在 映射文件中配置很多sql语句 -->\n    <!-- 需求：通过id查询用户表的记录 -->\n    <!-- 通过 select执行数据库查询\n    id：标识 映射文件中的 sql\n    将sql语句封装到mappedStatement对象中，所以将id称为statement的id\n    parameterType：指定输入 参数的类型，这里指定int型 \n    #{}表示一个占位符号\n    #{id}：其中的id表示接收输入 的参数，参数名称就是id，如果输入 参数是简单类型，#{}中的参数名可以任意，可以value或其它名称\n\n    resultType：指定sql输出结果 的所映射的java对象类型，select指定resultType表示将单条记录映射成的java对象。\n     -->\n    <select id=\"findUserById\" parameterType=\"int\" resultType=\"user\">\n        SELECT * FROM user WHERE id=#{value}\n    </select>\n\n\n\n    <!-- 根据用户名称模糊查询用户信息，可能返回多条\n    resultType：指定就是单条记录所映射的java对象 类型\n    ${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中。\n    使用${}拼接sql，引起 sql注入\n    ${value}：接收输入 参数的内容，如果传入类型是简单类型，${}中只能使用value\n     -->\n    <select id=\"findUserByName\" parameterType=\"java.lang.String\" resultType=\"com.neuedu.pojo.User\">\n        SELECT * FROM user WHERE username LIKE '%${value}%'\n    </select>\n\n    <!-- 添加用户 \n    parameterType：指定输入 参数类型是pojo（包括 用户信息）\n    #{}中指定pojo的属性名，接收到pojo对象的属性值，mybatis通过OGNL获取对象的属性值\n    -->\n    <insert id=\"insertUser\" parameterType=\"com.neuedu.pojo.User\">\n        <!-- \n        将插入数据的主键返回，返回到user对象中\n\n        SELECT LAST_INSERT_ID()：得到刚insert进去记录的主键值，只适用与自增主键\n\n        keyProperty：将查询到主键值设置到parameterType指定的对象的哪个属性\n        order：SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序\n        resultType：指定SELECT LAST_INSERT_ID()的结果类型\n         -->\n        insert into user(id,username,birthday,sex,address) values (seq_user.nextval,#{username},#{birthday},#{sex},#{address})\n        <!-- 插入数据后，返回自动增长列的ID值，将sql语句的返回值赋给parameterType绑定对象的ID属性\n              MySQL中使用:  select LAST_INSERT_ID() -->\n        <selectKey keyProperty=\"id\" order=\"AFTER\" resultType=\"int\">\n            SELECT LAST_INSERT_ID()\n            <!--select seq_user.currval from dual-->\n        </selectKey>\n        <!-- \n        使用mysql的uuid（）生成主键\n        执行过程：\n        首先通过uuid()得到主键，将主键设置到user对象的id属性中\n        其次在insert执行时，从user对象中取出id属性值\n         -->\n        <!--  <selectKey keyProperty=\"id\" order=\"BEFORE\" resultType=\"java.lang.String\">\n            SELECT uuid()\n        </selectKey>\n        insert into user(id,username,birthday,sex,address) value(#{id},#{username},#{birthday},#{sex},#{address}) -->\n\n\n    </insert>\n\n    <!-- 删除 用户\n    根据id删除用户，需要输入 id值\n     -->\n    <delete id=\"deleteUser\" parameterType=\"java.lang.Integer\">\n        delete from user where id=#{id}\n    </delete>\n\n    <!-- 根据id更新用户\n    分析：\n    需要传入用户的id\n    需要传入用户的更新信息\n    parameterType指定user对象，包括 id和更新信息，注意：id必须存在\n    #{id}：从输入 user对象中获取id属性值\n     -->\n    <update id=\"updateUser\" parameterType=\"com.neuedu.pojo.User\">\n        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}\n         where id=#{id}\n    </update>\n\n</mapper>\n\n\n\n", "\n\n", "Tset", "\n\n", "public class UserMapperTest {\n\n    private SqlSessionFactory sqlSessionFactory;\n\n    // 此方法是在执行testFindUserById之前执行\n    @Before\n    public void setUp() throws Exception {\n        // 创建sqlSessionFactory\n\n        // mybatis配置文件\n        String resource = \"config/SqlMapConfig.xml\";\n        // 得到配置文件流\n        InputStream inputStream = Resources.getResourceAsStream(resource);\n        // 创建会话工厂，传入mybatis的配置文件信息\n        sqlSessionFactory = new SqlSessionFactoryBuilder()\n                .build(inputStream);\n    }\n\n\n\n\n    @Test\n    public void testFindUserById() throws Exception {\n\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n\n        //创建UserMapper对象，mybatis自动生成mapper代理对象\n        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n\n        //调用userMapper的方法\n        User user = userMapper.findUserById(1);\n\n        System.out.println(user);\n\n\n    }\n\n\n    @Test\n    public void testFindUserByName() throws Exception {\n\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n\n        //创建UserMapper对象，mybatis自动生成mapper代理对象\n        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n\n        //调用userMapper的方法\n\n        List<User> list = userMapper.findUserByName(\"袁超\");\n\n        sqlSession.close();\n\n        System.out.println(list);\n\n    }\n\n\n}\n\n", "\n\n", "报错信息", "\n\n", "DEBUG [main] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.\nDEBUG [main] - Class not found: org.jboss.vfs.VFS\nDEBUG [main] - JBoss 6 VFS API is not available in this environment.\nDEBUG [main] - Class not found: org.jboss.vfs.VirtualFile\nDEBUG [main] - VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.\nDEBUG [main] - Using VFS adapter org.apache.ibatis.io.DefaultVFS\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/pojo\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/pojo\nDEBUG [main] - Reader entry: User.class\nDEBUG [main] - Listing file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/pojo\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/pojo/User.class\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/pojo/User.class\nDEBUG [main] - Reader entry: ����   1 N\nDEBUG [main] - Checking to see if class com.neuedu.pojo.User matches criteria [is assignable to Object]\nDEBUG [main] - PooledDataSource forcefully closed/removed all connections.\nDEBUG [main] - PooledDataSource forcefully closed/removed all connections.\nDEBUG [main] - PooledDataSource forcefully closed/removed all connections.\nDEBUG [main] - PooledDataSource forcefully closed/removed all connections.\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/test-classes/com/neuedu/mapper\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/test-classes/com/neuedu/mapper\nDEBUG [main] - Reader entry: UserMapperTest.class\nDEBUG [main] - Listing file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/test-classes/com/neuedu/mapper\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/test-classes/com/neuedu/mapper/UserMapperTest.class\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/test-classes/com/neuedu/mapper/UserMapperTest.class\nDEBUG [main] - Reader entry: ����   1 a\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper\nDEBUG [main] - Reader entry: UserMapper.class\nDEBUG [main] - Reader entry: UserMapper.xml\nDEBUG [main] - Listing file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper\nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper/UserMapper.class\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper/UserMapper.class\nDEBUG [main] - Reader entry: ����   1    findUserById (I)Lcom/neuedu/pojo/User; \nDEBUG [main] - Find JAR URL: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper/UserMapper.xml\nDEBUG [main] - Not a JAR: file:/C:/Users/95638/Desktop/mybatis/ch02-mybatis01/ch02-mybatis01/target/classes/com/neuedu/mapper/UserMapper.xml\nDEBUG [main] - Reader entry: <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\nDEBUG [main] - Checking to see if class com.neuedu.mapper.UserMapperTest matches criteria [is assignable to Object]\nDEBUG [main] - Checking to see if class com.neuedu.mapper.UserMapper matches criteria [is assignable to Object]\nDEBUG [main] - Opening JDBC Connection\nDEBUG [main] - Created connection 209833425.\nDEBUG [main] - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@c81cdd1]\nDEBUG [main] - ==>  Preparing: SELECT * FROM T_USER WHERE username LIKE '%袁超%' \nDEBUG [main] - ==> Parameters: \n\norg.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'mybatis.t_user' doesn't exist\n### The error may exist in com/neuedu/mapper/UserMapper.xml\n### The error may involve com.neuedu.mapper.UserMapper.findUserByName-Inline\n### The error occurred while setting parameters\n### SQL: SELECT * FROM T_USER WHERE username LIKE '%袁超%'\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'mybatis.t_user' doesn't exist\n\n    at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\n    at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\n    at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\n    at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\n    at com.sun.proxy.$Proxy3.findUserByName(Unknown Source)\n    at com.neuedu.mapper.UserMapperTest.testFindUserByName(UserMapperTest.java:68)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\n    at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'mybatis.t_user' doesn't exist\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at com.mysql.jdbc.Util.handleNewInstance(Util.java:400)\n    at com.mysql.jdbc.Util.getInstance(Util.java:383)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980)\n    at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3847)\n    at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3783)\n    at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2447)\n    at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2594)\n    at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2545)\n    at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1901)\n    at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1193)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)\n    at com.sun.proxy.$Proxy5.execute(Unknown Source)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\n    ... 29 more\n", "\n\n", "SqlMapConfig.xml", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n    <!-- 加载属性文件 -->\n    <properties resource=\"db.properties\">\n        <!--properties中还可以配置一些属性名和属性值  -->\n        <!-- <property name=\"jdbc.driver\" value=\"\"/> -->\n    </properties>\n    <!-- 全局配置参数，需要时再设置 -->\n    <!-- <settings>\n\n    </settings> -->\n\n    <!-- 别名定义 -->\n    <typeAliases>\n\n        <!-- 针对单个别名定义\n        type：类型的路径\n        alias：别名\n         -->\n        <!-- <typeAlias type=\"com.neuedu.mybatis.po.User\" alias=\"user\"/> -->\n        <!-- 批量别名定义 \n        指定包名，mybatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大写或小写都可以）\n        -->\n        <package name=\"com.neuedu.pojo\"/>\n\n    </typeAliases>\n\n    <!-- 和spring整合后 environments配置将废除-->\n    <environments default=\"development\">\n        <environment id=\"development\">\n        <!-- 使用jdbc事务管理，事务控制由mybatis-->\n            <transactionManager type=\"JDBC\" />\n        <!-- 数据库连接池，由mybatis管理-->\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${jdbc.driver}\" />\n                <property name=\"url\" value=\"${jdbc.url}\" />\n                <property name=\"username\" value=\"${jdbc.username}\" />\n                <property name=\"password\" value=\"${jdbc.password}\" />\n            </dataSource>\n        </environment>\n    </environments>\n    <!-- 加载 映射文件 -->\n    <mappers>\n        <mapper resource=\"sqlmap/User.xml\"/>\n\n        <!--通过resource方法一次加载一个映射文件 -->\n        <!-- <mapper resource=\"sqlmap/User.xml\"/> -->\n\n        <!-- 通过mapper接口加载单个 映射文件\n        遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中\n        上边规范的前提是：使用的是mapper代理方法\n         -->\n        <!-- <mapper class=\"com.neuedu.mapper.UserMapper\"/> -->\n\n        <!-- 批量加载mapper\n        指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载\n        遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中\n        上边规范的前提是：使用的是mapper代理方法\n         -->\n        <package name=\"com.neuedu.mapper\"/>\n\n    </mappers>\n\n</configuration>\n\n", "\n\n", "User", "\n\n", "public class User {\n\n    //属性名和数据库表的字段对应\n    private int id;\n    private String username;// 用户姓名\n    private String sex;// 性别\n    private Date birthday;// 生日\n    private String address;// 地址\n    public int getId() {\n        return id;\n    }\n    public void setId(int id) {\n        this.id = id;\n    }\n    public String getUsername() {\n        return username;\n    }\n    public void setUsername(String username) {\n        this.username = username;\n    }\n    public String getSex() {\n        return sex;\n    }\n    public void setSex(String sex) {\n        this.sex = sex;\n    }\n    public Date getBirthday() {\n        return birthday;\n    }\n    public void setBirthday(Date birthday) {\n        this.birthday = birthday;\n    }\n    public String getAddress() {\n        return address;\n    }\n    public void setAddress(String address) {\n        this.address = address;\n    }\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", username=\" + username + \", sex=\" + sex\n                + \", birthday=\" + birthday + \", address=\" + address + \"]\";\n    }\n\n\n}\n\n", "\n\n", "也不知道为什么，明明已经在UserMapper.xml里面把表名改了，但是报错信息里查找的还是T-user表", "\n求大神指导！感恩！", "\n\n", "问题已解决", "\n\n", "在maven文件里加上下面的代码", "\n\n", "    <resources>\n        <resource>\n            <directory>src/main/java</directory>\n            <includes>\n                <include>**/*Mapper.xml</include>\n            </includes>\n        </resource>\n    </resources>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;“Devil组”引证GPT后的撰写&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;et_bit()和bio_endio()函数报错可能是由于缺少头文件或函数定义不正确引起的。这两个函数都是属于Linux内核中的函数&amp;#xff0c;set_bit()用于设置某个二进制位为1&amp;#xff0c;bio_endio()用于结束块I/O操作。因此&amp;#xff0c;需要在代码中包含正确的头文件并确保函数调用的正确性。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;在代码中&amp;#xff0c;缺少的头文件是&amp;lt;linux/bitmap.h&amp;gt;&amp;#xff0c;它包含set_bit()函数的定义。需要添加该头文件&amp;#xff0c;以便编译器正确解析set_bit()函数。您可以在代码中添加以下行&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;linux/bitmap.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;&lt;li&gt;在bio_endio()函数的情况下&amp;#xff0c;它需要两个参数&amp;#xff1a;第一个是指向结束I/O操作的struct bio结构的指针&amp;#xff0c;第二个是表示I/O操作的错误代码。因此&amp;#xff0c;要确保传递正确的参数。在代码中&amp;#xff0c;第二个参数应该是0&amp;#xff0c;表示I/O操作成功完成。如果I/O操作发生错误&amp;#xff0c;应该传递相应的错误代码。以下是正确的bio_endio()函数调用示例&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nbio&lt;span class=\"hljs-constructor\"&gt;_endio(&lt;span class=\"hljs-params\"&gt;bio&lt;/span&gt;, 0)&lt;/span&gt;;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;请注意&amp;#xff0c;还需要在代码中定义ramdisk_make_request()函数&amp;#xff0c;该函数将用于处理I/O请求。在您的代码中&amp;#xff0c;该函数似乎已经定义&amp;#xff0c;但是被注释掉了。因此&amp;#xff0c;要取消注释该函数&amp;#xff0c;并确保它与其他函数一起正确工作。&lt;/p&gt;\n&lt;p&gt;最后&amp;#xff0c;为了更好地了解错误的原因&amp;#xff0c;请在编译时启用调试信息&amp;#xff0c;以便编译器可以输出更详细的错误信息。用以下命令进行编译&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;make CONFIG_DEBUG_INFO&amp;#61;y&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "名字空间", "Question": ["最近在编写块设备驱动，使用制造请求队列函数时，set_bit()和bio_endio()函数报错，请问这是什么原因？", ["最近在编写块设备驱动，使用制造请求队列函数时，set_bit()和bio_endio()函数报错，请问这是什么原因？", "\n", "set", "_bit(BIO_UPTODATE, &", "bio", "->", "bi_flags", ")", ";\n    bio", "_endio(", "bio", ", 0)", ";\n\n", "\n", "总体代码如下：", "\n", "#", "include", " ", "<linux/module.h>", "\n", "#", "include", " ", "<linux/kernel.h>", "\n", "#", "include", " ", "<linux/init.h>", "\n", "#", "include", " ", "<linux/fs.h>", "\n", "#", "include", " ", "<linux/slab.h>", "\n", "#", "include", " ", "<linux/uaccess.h>", "\n", "#", "include", " ", "<linux/io.h>", "\n", "#", "include", " ", "<linux/cdev.h>", "\n", "#", "include", " ", "<linux/device.h>", "\n", "#", "include", " ", "<linux/of.h>", "\n", "#", "include", " ", "<linux/of_address.h>", "\n", "#", "include", " ", "<linux/of_irq.h>", "\n", "#", "include", " ", "<linux/gpio.h>", "\n", "#", "include", " ", "<linux/of_gpio.h>", "\n", "#", "include", " ", "<linux/string.h>", "\n", "#", "include", " ", "<linux/irq.h>", "\n", "#", "include", " ", "<asm/mach/map.h>", "\n", "#", "include", " ", "<asm/uaccess.h>", "\n", "#", "include", " ", "<asm/io.h>", "\n", "#", "include", " ", "<linux/interrupt.h>", "\n", "#", "include", " ", "<linux/input.h>", "\n", "#", "include", " ", "<linux/i2c.h>", "\n", "#", "include", " ", "<linux/delay.h>", "\n", "#", "include", " ", "<linux/input/mt.h>", "\n", "#", "include", " ", "<linux/input/touchscreen.h>", "\n", "#", "include", " ", "<linux/blkdev.h>", "\n", "#", "include", " ", "<linux/hdreg.h>", "\n\n", "/*参考例程*/", "\n\n", "/*定义磁盘大小，内存模式*/", "\n", "#", "define", " RAMDISK_SIZE        (2  *   1024    *   1024)   ", "/*大小2MB*/", "\n", "#", "define", " RAMDISK_NAME    ", "\"ramdisk\"", "                 ", "/*名字*/", "\n", "#", "define", " RAMDISK_MINOR   3                                   ", "/*表示3个分区*/", "\n\n\n", "/*ramdisk设备结构体*/", "\n", "struct", " ", "ramdisk_dev", "\n{\n    ", "int", " major;              ", "/*主设备号*/", "\n    ", "unsigned", "    ", "char", "    *ramdiskbuf;        ", "/*ramdisk的内存空间，模拟磁盘的空间*/", "\n    ", "struct", "  ", "gendisk", " *gendisk;\n    ", "struct", "  ", "request_queue", "   *queue;\n    ", "spinlock_t", "  lock;       ", "/*自旋锁*/", "\n};\n\n", "struct", "  ", "ramdisk_dev", " ramdisk;\n", "#", "if", " 0", "\n", "/*具体的数据处理过程*/", "\n", "static", "  ", "void", "    ", "ramdisk_transfer", "(", "struct", " request *req)", "\n", "{\n    ", "/*数据传输三要素：源，目的，长度。\n    *内存地址，块设备地址，长度\n    */", "\n   ", "unsigned", " ", "long", "    start   =   ", "blk_rq_pos", "(req) <<  ", "9", ";      ", "/*blk_rq_pos获取到要操作的块设备扇区地址，左移9位，地址字节*/", "\n   ", "unsigned", " ", "long", "    len =   ", "blk_rq_cur_bytes", "(req);          ", "/*数据长度*/", "\n\n    ", "/*获取bio里面的缓冲区：\n    *如果是读：从磁盘里面读取到的数据保存在缓冲区里面\n    *如果是写：此缓冲区保存着要写入到磁盘里面的数据\n    */", "\n   ", "void", " *buffer =   ", "bio_data", "(req->bio);\n\n    ", "if", "(", "rq_data_dir", "(req) ==   READ)               ", "/*读操作*/", "\n        ", "memcpy", "(buffer,  ramdisk.ramdiskbuf  +   start,  len);\n    ", "else", "                                                                    ", "/*写操作*/", "\n        ", "memcpy", "(ramdisk.ramdiskbuf  +   start,  buffer, len);\n\n}\n", "#", "endif", "\n", "/*制造请求函数*/", "\n", "static", "  ", "void", "    ", "ramdisk_make_request", "(", "struct", " request_queue   *queue, ", "struct", "  bio *bio)", "\n", "{\n    ", "int", " offset;\n    ", "struct", "  ", "bio_vec", " bvec;\n    ", "struct", "  ", "bvec_iter", "   iter;\n    ", "unsigned", "    ", "long", "    len =   ", "0", ";\n\n    offset  =   bio->bi_iter.bi_sector   <<  ", "9", ";      ", "/*要操作的磁盘起始扇区偏移,改为字节地址*/", "\n\n    ", "/*循环处理每个段*/", "\n    ", "bio_for_each_segment", "(bvec,  bio,    iter)   {\n    ", "/*获取bio里面的缓冲区：\n    *如果是读：从磁盘里面读取到的数据保存在缓冲区里面\n    *如果是写：此缓冲区保存着要写入到磁盘里面的数据\n    */", "\n        ", "char", "    *ptr    =   ", "page_address", "(bvec.bv_page)  +   bvec.bv_offset;\n        len =   bvec.bv_len;        ", "/*长度*/", "\n\n        ", "if", "(", "bio_data_dir", "(bio) ==   READ)               ", "/*读操作*/", "\n            ", "memcpy", "(ptr,  ramdisk.ramdiskbuf  +   offset,  len);\n        ", "else", "                                                                    ", "/*写操作*/", "\n            ", "memcpy", "(ramdisk.ramdiskbuf  +   offset,  ptr, len);\n\n        offset  +=  len;\n    }\n\n    ", "set_bit", "(BIO_UPTODATE,   &bio->bi_flags);\n    ", "bio_endio", "(bio,  ", "0", ");\n}\n\n\n", "static", "  ", "int", " ", "ramdisk_open", "(", "struct", " block_device    *bdev,  ", "fmode_t", " mode)", "\n", "{\n    ", "printk", "(", "\"ramdisk_open\\r\\n\"", ");\n    ", "return", "  ", "0", ";\n}\n\n", "static", "  ", "void", "    ", "ramdisk_release", "(", "struct", "  gendisk *disk,  ", "fmode_t", " mode)", "\n", "{\n    ", "printk", "(", "\"ramdisk_release\\r\\n\"", ");\n}\n\n", "static", "  ", "int", "    ", "ramdisk_getgeo", "(", "struct", "   block_device   *dev,  ", "struct", "  hd_geometry    *geo)", "\n", "{\n    ", "printk", "(", "\"ramdisk_getgeo\\r\\n\"", ");\n    ", "/*硬盘信息*/", "\n    geo->heads  =   ", "2", ";      ", "/*磁头*/", "\n    geo->cylinders  =   ", "32", ";         ", "/*柱面，磁道*/", "\n    geo->sectors    =   RAMDISK_SIZE/(", "2", "  *   ", "32", "  *   ", "512", ");   ", "/*一个磁道里面的扇区数量*/", "\n    \n    ", "return", "  ", "0", ";\n}\n\n", "/*块设备操作集*/", "\n", "static", "  ", "const", "   ", "struct", "  ", "block_device_operations", " ramdisk_fops    =   \n{\n    .owner          =   THIS_MODULE,\n    .open             = ramdisk_open,\n    .release        =   ramdisk_release,\n    .getgeo         =   ramdisk_getgeo,\n};\n\n", "/* 驱动入口函数 */", "\n", "static", " ", "int", " __init ", "ramdisk_init", "(", "void", ")", "\n", "{\n    ", "int", " ret =   ", "0", ";\n    ", "printk", "(", "\"ramdisk_init\\r\\n\"", ");\n\n    ", "/*1.先申请内存*/", "\n    ramdisk.ramdiskbuf  =   ", "kzalloc", "(RAMDISK_SIZE,   GFP_KERNEL);\n    ", "if", "(ramdisk.ramdiskbuf   ==  ", "NULL", "){\n            ret =   -EINVAL;\n            ", "goto", "    ramalloc_fail;\n    }\n    ", "/*2.注册块设备*/", "\n    ramdisk.major   =   ", "register_blkdev", "(", "0", ",RAMDISK_NAME);\n    ", "if", "(ramdisk.major    <   ", "0", ")  {\n        ret =   -EINVAL;\n        ", "goto", "    ramdisk_register_blkdev_fail;\n    }\n    ", "printk", "(", "\"ramdisk major   =   %d\\r\\n\"", ",    ramdisk.major);\n\n    ", "/*3.申请gendisk*/", "\n    ramdisk.gendisk =   ", "alloc_disk", "(RAMDISK_MINOR);\n    ", "if", "(!ramdisk.gendisk){\n        ret =   -EINVAL;\n        ", "goto", "    gendisk_alloc_fail;\n    }\n\n", "/*4.初始化自旋锁*/", "\n", "spin_lock_init", "(&ramdisk.lock);\n\n", "/*5.申请请求队列*/", "\nramdisk.queue   =   ", "blk_alloc_queue", "(GFP_KERNEL);\n", "if", "(!ramdisk.queue){\n    ret =   -EINVAL;\n    ", "goto", "    blk_queue_fail;\n}\n\n", "/*绑定\"制造请求\"函数*/", "\n", "blk_queue_make_request", "(ramdisk.queue,   ramdisk_make_request);\n\n", "/*6.初始化gendisk*/", "\nramdisk.gendisk->major  =   ramdisk.major;      ", "/*主设备号*/", "\nramdisk.gendisk->first_minor    =   ", "0", ";\nramdisk.gendisk->fops   =   &ramdisk_fops;\nramdisk.gendisk->private_data   =   &ramdisk;\nramdisk.gendisk->queue  =   ramdisk.queue;\n", "sprintf", "(ramdisk.gendisk->disk_name, RAMDISK_NAME);\n", "set_capacity", "(ramdisk.gendisk,  RAMDISK_SIZE/", "512", ");      ", "/*设置gendisk容量，单位扇区*/", "\n\n", "add_disk", "(ramdisk.gendisk);\n\n", "return", "  ", "0", ";\n\nblk_queue_fail:\n    ", "put_disk", "(ramdisk.gendisk);\ngendisk_alloc_fail:\n    ", "unregister_blkdev", "(ramdisk.major,    RAMDISK_NAME);\nramdisk_register_blkdev_fail:\n    ", "kfree", "(ramdisk.ramdiskbuf);\nramalloc_fail:\n    ", "return", " ret;\n}\n\n", "/* 驱动出口函数 */", "\n", "static", " ", "void", " __exit ", "ramdisk_exit", "(", "void", ")", "\n", "{\n    ", "printk", "(", "\"ramdisk     exit\\r\\n\"", ");\n    ", "del_gendisk", "(ramdisk.gendisk);\n    ", "put_disk", "(ramdisk.gendisk);\n\n    ", "blk_cleanup_queue", "(ramdisk.queue);\n\n    ", "unregister_blkdev", "(ramdisk.major,    RAMDISK_NAME);\n    ", "kfree", "(ramdisk.ramdiskbuf);\n}\n\n", "module_init", "(ramdisk_init);\n", "module_exit", "(ramdisk_exit);\n", "MODULE_LICENSE", "(", "\"GPL\"", ");\n", "MODULE_AUTHOR", "(", "\"ty\"", ");\n\n", "\n", "具体报错如下：", "\n", "make -C /home/", "user", "/linux/rv/kernel M=/home/", "user", "/linux/study/ramdisk_makerequest ARCH=arm CROSS_COMPILE=/home/", "user", "/linux/rv/prebuilts/gcc/linux-x86/arm/gcc-arm", "-8.3", "-2019.03", "-x86_64-arm-linux-gnueabihf/bin/arm-linux-gnueabihf- modules \nmake[", "1", "]: 进入目录“/home/", "user", "/linux/rv/kernel”\n  CC [M]  /home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.o\n", "In", " file included ", "from", " ./", "include", "/linux/bitops.h:", "19", ",\n                 ", "from", " ./", "include", "/linux/kernel.h:", "11", ",\n                 ", "from", " ./", "include", "/linux/list.h:", "9", ",\n                 ", "from", " ./", "include", "/linux/module.h:", "9", ",\n                 ", "from", " /home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "1", ":\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c: ", "In", " ", "function", " ", "'ramdisk_make_request'", ":\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "13", ": error: ", "'BIO_UPTODATE'", " undeclared (first use ", "in", " this ", "function", "); did you mean ", "'IS_PRIVATE'", "?\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n             ^~~~~~~~~~~~\n./arch/arm/", "include", "/asm/bitops.h:", "183", ":", "42", ": note: ", "in", " definition ", "of", " macro ", "'ATOMIC_BITOP'", "\n #define ATOMIC_BITOP(", "name", ",nr,p)  _##", "name", "(nr,p)\n                                          ^~\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "5", ": note: ", "in", " expansion ", "of", " macro ", "'set_bit'", "\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n     ^~~~~~~\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "13", ": note: ", "each", " undeclared identifier ", "is", " reported ", "only", " once ", "for", " ", "each", " ", "function", " it appears ", "in", "\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n             ^~~~~~~~~~~~\n./arch/arm/", "include", "/asm/bitops.h:", "183", ":", "42", ": note: ", "in", " definition ", "of", " macro ", "'ATOMIC_BITOP'", "\n #define ATOMIC_BITOP(", "name", ",nr,p)  _##", "name", "(nr,p)\n                                          ^~\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "5", ": note: ", "in", " expansion ", "of", " macro ", "'set_bit'", "\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n     ^~~~~~~\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "29", ": error: ", "passing", " argument ", "2", " ", "of", " ", "'_set_bit'", " ", "from", " incompatible pointer ", "type", " [-Werror=incompatible-pointer-", "types", "]\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n                             ^~~~~~~~~~~~~~\n./arch/arm/", "include", "/asm/bitops.h:", "183", ":", "45", ": note: ", "in", " definition ", "of", " macro ", "'ATOMIC_BITOP'", "\n #define ATOMIC_BITOP(", "name", ",nr,p)  _##", "name", "(nr,p)\n                                             ^\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "98", ":", "5", ": note: ", "in", " expansion ", "of", " macro ", "'set_bit'", "\n     set_bit(BIO_UPTODATE,   &bio->bi_flags);\n     ^~~~~~~\n./arch/arm/", "include", "/asm/bitops.h:", "153", ":", "55", ": note: expected ", "'volatile long unsigned int *'", " but argument ", "is", " ", "of", " ", "type", " ", "'short unsigned int *'", "\n extern ", "void", " _set_bit(", "int", " nr, ", "volatile", " unsigned long * p);\n                              ~~~~~~~~~~~~~~~~~~~~~~~~~^\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "99", ":", "5", ": error: too many arguments ", "to", " ", "function", " ", "'bio_endio'", "\n     bio_endio(bio,  ", "0", ");\n     ^~~~~~~~~\n", "In", " file included ", "from", " ./", "include", "/linux/blkdev.h:", "21", ",\n                 ", "from", " /home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "26", ":\n./", "include", "/linux/bio.h:", "448", ":", "13", ": note: declared here\n extern ", "void", " bio_endio(struct bio *);\n             ^~~~~~~~~\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c: ", "In", " ", "function", " ", "'ramdisk_init'", ":\n/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "172", ":", "41", ": error: ", "passing", " argument ", "2", " ", "of", " ", "'blk_queue_make_request'", " ", "from", " incompatible pointer ", "type", " [-Werror=incompatible-pointer-", "types", "]\n blk_queue_make_request(ramdisk.queue,   ramdisk_make_request);\n                                         ^~~~~~~~~~~~~~~~~~~~\n", "In", " file included ", "from", " /home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.c:", "26", ":\n./", "include", "/linux/blkdev.h:", "1206", ":", "60", ": note: expected ", "'blk_qc_t (*)(struct request_queue *, struct bio *)'", " {aka ", "'unsigned int (*)(struct request_queue *, struct bio *)'", "} but argument ", "is", " ", "of", " ", "type", " ", "'void (*)(struct request_queue *, struct bio *)'", "\n extern ", "void", " blk_queue_make_request(struct request_queue *, make_request_fn *);\n                                                            ^~~~~~~~~~~~~~~~~\ncc1: ", "some", " warnings being treated ", "as", " errors\nscripts/Makefile.build:", "339", ": recipe ", "for", " target ", "'/home/user/linux/study/ramdisk_makerequest/ramdisk.o'", " failed\nmake[", "2", "]: *** [/home/", "user", "/linux/study/ramdisk_makerequest/ramdisk.o] Error ", "1", "\nMakefile:", "1641", ": recipe ", "for", " target ", "'_module_/home/user/linux/study/ramdisk_makerequest'", " failed\nmake[", "1", "]: *** [_module_/home/", "user", "/linux/study/ramdisk_makerequest] Error ", "2", "\nmake[", "1", "]: 离开目录“/home/", "user", "/linux/rv/kernel”\nMakefile:", "12", ": recipe ", "for", " target ", "'all'", " failed\nmake: *** [", "all", "] Error ", "2", "\n\n"]], "Tag": "程序设计"}
{"Answer": "delNode函数里删除的时候，操作了NULL指针。\r\n建议楼主单步调试一下看看每步的结果是不是都对。\r\n单步调试和设断点调试（VS IDE中编译连接通过以后，按F10或F11键单步执行，按Shift+F11退出当前函数；在某行按F9设断点后按F5执行停在该断点处。）是程序员必须掌握的技能之一", "Konwledge_Point": "名字空间", "Question": ["简易家谱系统——哪位大神能帮我看看下面的代码有什么问题，非常感谢！！！", ["/*在DEV C++编译有问题，但在CodeBlocks编译没问题而且能运行，但是运行时又在数据测试在删除结点后程序运行异常结束*/", "\n#include ", "\n#include ", "\n#include ", "\n#define M 100+1 // 宏定义，定义最大名字字母长度", "\n\n", "typedef struct elem", "\n{", "\nchar* name; ", "\nchar* post; ", "\n}element; ", "\n\n", "//双亲孩子表示法", "\ntypedef struct tree", "\n{ ", "\nelement* item; ", "\nint level; ", "\nint childNum; ", "\nstruct tree* parent; ", "\nstruct tree* nextSibling; ", "\nstruct tree* prevSibling; ", "\nstruct tree* firstChild; ", "\n}Node; ", "\n\n", "// 实现一个栈，用于后续操作", "\ntypedef struct stack_t ", "\n{ ", "\nNode** array; // array是个数组，其元素为Node*型指针", "\nint index; // 指示栈顶元素", "\nint size; // 栈的大小", "\n} STACK; // 重命名", "\n\n", "// 实现一个队列，用于后续操作", "\ntypedef struct queue_t ", "\n{ ", "\nNode** array; // array是个数组，其内部元素为Node*型指针", "\nint head; // 队列的头", "\nint tail; // 队列的尾", "\nint num; // 队列中元素的个数", "\nint size; // 队列的大小", "\n} QUEUE; ", "\n// 这里的栈和队列，都是用动态数组实现的，另一种实现方式是用链表", "\n\n", "// 内存分配函数", "\nvoid* util_malloc(int size) ", "\n{ ", "\nvoid* ptr = malloc(size); ", "\nif (ptr == NULL) // 如果分配失败，则终止程序", "\n{ ", "\nprintf(\"Memory allocation error!\\n\"); ", "\nexit(EXIT_FAILURE); ", "\n} ", "\n// 分配成功，则返回", "\nreturn ptr; ", "\n} ", "\n\n", "// 实现一些栈操作", "\n// 栈的初始化", "\nSTACK* STACKinit(int size)// 初始化栈大小为size ", "\n{ ", "\nSTACK* sp; ", "\nsp = (STACK*)util_malloc(sizeof (STACK)); ", "\nsp->size = size; ", "\nsp->index = 0; ", "\nsp->array = (Node**)util_malloc(size * sizeof (Node*)); ", "\nreturn sp; ", "\n} ", "\n\n", "// 检测栈是否为空", "\n// 如果为空返回1，否则返回0 ", "\nint STACKempty(STACK* sp) ", "\n{ ", "\nif (sp == NULL || sp->index <= 0) // 空", "\n{ ", "\nreturn 1; ", "\n}", "\nreturn 0; ", "\n} ", "\n\n", "// 入栈操作 ", "\nint STACKpush(STACK* sp, Node* data) ", "\n{ ", "\nif (sp == NULL || sp->index >= sp->size) // sp没有被初始化，或者已满", "\n{ ", "\nreturn 0; // 入栈失败", "\n} ", "\nsp->array[sp->index++] = data; // 入栈", "\nreturn 1; ", "\n} ", "\n\n", "// 出栈操作", "\nint STACKpop(STACK* sp, Node** data_ptr) ", "\n{ ", "\nif (sp == NULL || sp->index <= 0) // sp为初始化，或者为空没有元素", "\n{ ", "\nreturn 0; ", "\n} ", "\n*data_ptr = sp->array[--sp->index]; // 出栈并把栈顶元素由参数data_ptr带回，成功则返回1 ", "\nreturn 1; ", "\n} ", "\n\n", "// 将栈消毁", "\nvoid STACKdestroy(STACK* sp) ", "\n{", "\nfree(sp->array); ", "\nfree(sp); ", "\n} ", "\n\n", "// 以上是栈的操作", "\n\n", "// 实现队列的操作", "\nQUEUE* QUEUEinit(int size) ", "\n{ ", "\nQUEUE* qp; ", "\nqp = (QUEUE*)util_malloc(sizeof (QUEUE)); ", "\nqp->size = size; ", "\nqp->head = qp->tail = qp->num = 0; //初始化队列的头、尾、元素个数都为0 ", "\nqp->array = (Node**)util_malloc(size * sizeof (Node*)); ", "\nreturn qp; ", "\n} ", "\n\n", "// 入队列", "\nint QUEUEenqueue(QUEUE* qp, Node* data) ", "\n{ ", "\nif (qp == NULL || qp->num >= qp->size) // qp未初始化或已满", "\n{ ", "\nreturn 0; //入队失败", "\n} ", "\nqp->array[qp->tail] = data; // 入队，tail一直指向最后一个元素的下一个位置", "\nqp->tail = (qp->tail + 1) % (qp->size); // 循环队列", "\n++qp->num; ", "\nreturn 1;", "\n} ", "\n\n", "// 出队列", "\nint QUEUEdequeue(QUEUE* qp, Node** data_ptr) ", "\n{ ", "\nif (qp == NULL || qp->num <= 0) // qp未初始化或队列内无元素", "\n{ ", "\nreturn 0; ", "\n} ", "\n*data_ptr = qp->array[qp->head]; // 出队", "\nqp->head = (qp->head + 1) % (qp->size); // 循环队列", "\n--qp->num; ", "\nreturn 1; ", "\n} ", "\n\n", "// 检测队列是否为空", "\nint QUEUEempty(QUEUE* qp) ", "\n{ ", "\nif (qp == NULL || qp->num <= 0) ", "\n{ ", "\nreturn 1; ", "\n} ", "\nreturn 0; ", "\n} ", "\n\n", "// 销毁队列", "\nvoid QUEUEdestroy(QUEUE* qp)", "\n{ ", "\nfree(qp->array); ", "\nfree(qp); ", "\n} ", "\n\n", "// 以上是队列的有关操作实现", "\n\n", "//创建元素", "\nelement* createElement()", "\n{ ", "\nelement* temp = (element*)util_malloc(sizeof(element)); ", "\nprintf(\"请输入姓名和职业:\\r\\n\"); ", "\ntemp->name = (char*)util_malloc(M); ", "\ntemp->post = (char*)util_malloc(M); ", "\nscanf(\"%s %s\",temp->name,temp->post); ", "\nreturn temp; ", "\n} ", "\n\n", "//创建新结点 ", "\nNode* createNode()", "\n{ ", "\nNode* temp = (Node*)util_malloc(sizeof(Node)); ", "\ntemp->childNum = 0; ", "\ntemp->level = 0; ", "\ntemp->firstChild = temp->parent = temp->nextSibling = temp->prevSibling = NULL; ", "\ntemp->item = createElement(); ", "\nreturn temp; ", "\n} ", "\n\n", "//通过姓名查找结点元素 ", "\nNode* searchNodeByName(char* name,Node* tree)//采用二叉树层序遍历的算法", "\n{ ", "\nNode* head = tree; ", "\nNode* result = NULL; ", "\nQUEUE* que = QUEUEinit(M); ", "\nQUEUEenqueue(que,head);", "\nwhile(QUEUEempty(que)==0&&result == NULL) ", "\n{ ", "\nNode* temp; ", "\nQUEUEdequeue(que,&temp); // &代表取地址 ", "\nif (strcmp(name,temp->item->name) == 0) ", "\n{ ", "\nresult = temp; ", "\n} ", "\nelse", "\n{ ", "\ntemp = temp->firstChild; ", "\nwhile(temp != NULL)", "\n{ ", "\nQUEUEenqueue(que,temp); ", "\ntemp = temp->nextSibling; ", "\n} ", "\n} ", "\n} ", "\n/*", "\nif (tree!=NULL) ", "\n{ ", "\nif (strcmp(name,tree->item->name) == 0) ", "\n{ ", "\ntemp = tree; ", "\n} ", "\nelse", "\n{ ", "\nwhile(temp!=NULL&&tree->nextSibling!=NULL){ ", "\ntemp = searchNodeByName(name,tree->firstChild); ", "\n} ", "\n} ", "\n}", "\n*/", "\nreturn result; ", "\n} ", "\n\n", "//插入节点", "\nvoid insertNode(Node* tree)", "\n{ ", "\nprintf(\" 请输入双亲的名字:\\r\\n\"); ", "\nchar* parentName = (char*)util_malloc(M); ", "\nscanf(\"%s\",parentName); ", "\nNode* parent = searchNodeByName(parentName,tree); ", "\nif (parent!=NULL) ", "\n{ ", "\nprintf(\"找到双亲姓名:%s 职位:%s\",parent->item->name,parent->item->post); ", "\nNode* child = createNode(); ", "\nchild->parent = parent; ", "\nif (parent->firstChild == NULL) ", "\n{ ", "\nparent->firstChild = child; ", "\n}", "\nelse", "\n{ ", "\nNode* lastChild = parent->firstChild; ", "\nwhile(lastChild->nextSibling!=NULL)", "\n{ ", "\nlastChild = lastChild->nextSibling; ", "\n} ", "\nlastChild->nextSibling = child; ", "\nchild->prevSibling = lastChild; ", "\n} ", "\nprintf(\"插入成功\\r\\n\"); ", "\n}", "\nelse", "\n{ ", "\nprintf(\"没有找到双亲\\r\\n\"); ", "\nsystem(\"pause\"); ", "\n} ", "\nfree(parentName); ", "\n} ", "\n\n", "//释放结点所占空间 ", "\nvoid FreeNode(Node* Node)", "\n{ ", "\nfree(Node->item->name); ", "\nfree(Node->item->post); ", "\nfree(Node->item); ", "\nfree(Node->firstChild); ", "\nfree(Node->parent);", "\nfree(Node->nextSibling); ", "\nfree(Node); ", "\n} ", "\n\n", "//倒叙层次遍历， 从右往左，从孩子到父亲", "\nvoid ReverseTraversal(Node* node,void (*func)(Node*))", "\n{ ", "\nSTACK* stack = STACKinit(M); ", "\nNode ", "temp = node; ", "\nSTACKpush(stack,temp);", "\nif (temp!=NULL) ", "\n{ ", "\nif (temp->firstChild == NULL&&temp->nextSibling == NULL) ", "\n{ ", "\nfunc(temp); ", "\n}", "\nelse", "\n{ ", "\ntemp = temp->firstChild; ", "\nwhile (temp!=NULL) ", "\n{ ", "\nSTACKpush(stack,temp); ", "\ntemp = temp->nextSibling; ", "\n} ", "\nwhile(STACKempty(stack) == 0)", "\n{ ", "\nNode", " pop; ", "\nSTACKpop(stack,&pop); ", "\nReverseTraversal(pop,func); ", "\n} ", "\n} ", "\n} ", "\n} ", "\n\n", "//层次遍历 ", "\nvoid OrderTraversal(Node* node,void (*func)(Node*))", "\n{ ", "\nQUEUE* que = QUEUEinit(M); ", "\nNode* head = node; ", "\nQUEUEenqueue(que,head); ", "\nwhile(QUEUEempty(que) == 0)", "\n{ ", "\nNode* deque; ", "\nQUEUEdequeue(que,&deque); ", "\nfunc(deque); ", "\ndeque = deque->firstChild; ", "\nwhile(deque)", "\n{ ", "\nQUEUEenqueue(que,deque); ", "\ndeque = deque->nextSibling; ", "\n} ", "\n} ", "\n} ", "\n\n", "void delNode(Node* tree)", "\n{ ", "\nprintf(\"请输入要删除的姓名\\r\\n\"); ", "\nchar * name = (char*)util_malloc(M); ", "\nscanf(\"%s\",name); ", "\nNode* temp = searchNodeByName(name,tree); ", "\nif(temp->nextSibling!=NULL&&temp->prevSibling!=NULL){ ", "\ntemp->prevSibling->nextSibling = temp->nextSibling; ", "\ntemp->nextSibling->prevSibling = temp->prevSibling; ", "\n} ", "\nelse if(temp->prevSibling==NULL&&temp->nextSibling!=NULL){ ", "\ntemp->parent->firstChild = temp->nextSibling; ", "\ntemp->nextSibling->prevSibling = NULL; ", "\n} ", "\nelse if(temp->prevSibling!=NULL&&temp->nextSibling == NULL){ ", "\ntemp->prevSibling->nextSibling == NULL; ", "\n} ", "\nelse if(temp->prevSibling==NULL&&temp->nextSibling==NULL)", "\n{ ", "\ntemp->parent->firstChild = NULL; ", "\n} ", "\nReverseTraversal(temp,FreeNode); ", "\nprintf(\"删除成功\\r\\n\"); ", "\nfree(name); ", "\n} ", "\n\n", "void printNode(Node* node)", "\n{ ", "\nprintf(\"%5s\",node->item->name); ", "\n} ", "\nint count(Node* tree)", "\n{ ", "\nint result = 0; ", "\nQUEUE* que = QUEUEinit(M); ", "\nNode* head = tree; ", "\nQUEUEenqueue(que,head); ", "\nwhile(QUEUEempty(que) == 0)", "\n{ ", "\nNode* deque; ", "\nQUEUEdequeue(que,&deque); ", "\nresult ++; ", "\ndeque = deque->firstChild; ", "\nwhile(deque)", "\n{ ", "\nQUEUEenqueue(que,deque); ", "\ndeque = deque->nextSibling; ", "\n} ", "\n} ", "\nreturn result; ", "\n} ", "\n\n", "void search(Node* tree){ ", "\nprintf(\"请输入节点的名字:\\r\\n\"); ", "\nchar* parentName = (char*)util_malloc(M); ", "\nscanf(\"%s\",parentName); ", "\nNode* parent = searchNodeByName(parentName,tree); ", "\nif (parent!=NULL) ", "\n{ ", "\nprintf(\"找到节点姓名:%s 职位:%s\\n\",parent->item->name,parent->item->post); ", "\n}", "\nelse", "\n{ ", "\nprintf(\"查无此人!\\r\\n\"); ", "\n} ", "\n} ", "\n\n", "void modify(Node* tree)", "\n{ ", "\nprintf(\"请输入要修改的姓名\\r\\n\"); ", "\nchar * name = (char*)util_malloc(M); ", "\nscanf(\"%s\",name); ", "\nNode* temp = searchNodeByName(name,tree); ", "\nprintf(\"请输入姓名和职业:\\r\\n\"); ", "\nscanf(\"%s %s\",temp->item->name,temp->item->post); ", "\nprintf(\"修改成功\\r\\n\"); ", "\n} ", "\n\n", "void searchSiblings(Node* node){ ", "\nprintf(\"请输入要查找同辈的姓名\\r\\n\"); ", "\nchar * name = (char*)util_malloc(M); ", "\nscanf(\"%s\",name); ", "\nNode* temp = searchNodeByName(name,node); ", "\nNode* parent = temp->parent; ", "\nNode* siblings = parent->firstChild; ", "\nif (siblings!=NULL) ", "\n{ ", "\nprintf(\"和你同辈的人有:\"); ", "\nwhile(siblings!=NULL){ ", "\nprintf(\"%2s\",siblings->item->name); ", "\nsiblings = siblings->nextSibling;", "\n } ", "\n}", "\nelse", "\n{ ", "\nprintf(\"没有找到同辈\\r\\n\"); ", "\n} ", "\n} ", "\n\n", "void getParent(Node* node){ ", "\nprintf(\"请输入节点的名字:\\r\\n\"); ", "\nchar* parentName = (char*)util_malloc(M); ", "\nscanf(\"%s\",parentName); ", "\nNode* parent = searchNodeByName(parentName,node); ", "\nparent = parent->parent; ", "\nif (parent!=NULL) ", "\n{ ", "\nprintf(\"找到祖先姓名:%s 职位:%s\",parent->item->name,parent->item->post); ", "\n}", "\nelse", "\n{ ", "\nprintf(\"查无此人!\\r\\n\"); ", "\n} ", "\n} ", "\n\n", "void statistical(Node* tree){ ", "\nprintf(\"请输入要查找的职业\\r\\n\"); ", "\nchar ", "post = (char *)util_malloc(M); ", "\nscanf(\"%s\",post); ", "\nint result = 0; ", "\nQUEUE", " que = QUEUEinit(M); ", "\nNode* head = tree; ", "\nQUEUEenqueue(que,head); ", "\nwhile(QUEUEempty(que) == 0){ ", "\nNode* deque; ", "\nQUEUEdequeue(que,&deque); ", "\nif (strcmp(post,deque->item->post) == 0) ", "\n{ ", "\nresult++; ", "\n} ", "\ndeque = deque->firstChild; ", "\nwhile(deque){ ", "\nQUEUEenqueue(que,deque); ", "\ndeque = deque->nextSibling; ", "\n} ", "\n} ", "\nprintf(\"从事%s的人数共%d\",post,result); ", "\n} ", "\n\n", "//主函数 ", "\nint main()", "\n{ ", "\nprintf(\"请创建一份您的简易家谱系统\\r\\n\"); ", "\nNode* tree = createNode(); ", "\nprintf(\"家谱初始化成功\\r\\n\"); ", "\nsystem(\"pause\"); ", "\nfor(;;)", "\n{ ", "\nsystem(\"cls\"); ", "\nprintf(\"请选择所需要的功能\\r\\n\"); ", "\nprintf(\"1.添加子孙\\r\\n\"); ", "\nprintf(\"2.修改信息\\r\\n\"); ", "\nprintf(\"3.删除信息\\r\\n\"); ", "\nprintf(\"4.查询信息\\r\\n\"); ", "\nprintf(\"5.族谱中集合\\r\\n\"); ", "\nprintf(\"6.查找同辈\\r\\n\"); ", "\nprintf(\"7.查询上一辈\\r\\n\"); ", "\nprintf(\"8.统计总人数\\r\\n\"); ", "\nprintf(\"9.统计从事某一种职业的人数\\r\\n\"); ", "\nint option = 0; ", "\nscanf(\"%d\",&option); ", "\nsystem(\"cls\"); ", "\nswitch (option) ", "\n{ ", "\ncase 1: ", "\ninsertNode(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 2: ", "\nmodify(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 3: ", "\ndelNode(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 4: ", "\nsearch(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 5: ", "\nOrderTraversal(tree,&printNode); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 6: ", "\nsearchSiblings(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 7: ", "\ngetParent(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 8: ", "\nprintf(\"族谱中总人数%d\",count(tree)); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ncase 9: ", "\nstatistical(tree); ", "\nsystem(\"pause\"); ", "\nbreak; ", "\ndefault: ", "\nprintf(\"暂时没有此功能\\r\\n\"); ", "\nsystem(\"pause\"); ", "\n} ", "\n} ", "\nreturn 0; ", "\n} "]], "Tag": "程序设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;建议你看下这篇博客&amp;#x1f449; &amp;#xff1a;&lt;a href=\"https://blog.csdn.net/wangchangyong123/article/details/88784677\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;用单链表实现学生信息管理系统&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "名字空间", "Question": ["用线性表实现学生信息表", ["这是题目内容：", "\n\n", "用线性数组做一个班级学生档案记录的程序，要求：", "\n\n", "    1）用结构体表示学生记录，包括但不限于：学号、姓名、性别、班级、生日、宿舍、籍贯等信息；", "\n\n", "    2）学生记录用数组存储，按照学号递增顺序记录；", "\n\n", "    3）学生记录插入：插入包括自己在内的10名学生；", "\n\n", "    4）学生记录删除：删除指定位置学生；", "\n\n", "    5）查找学生：根据姓名查找学生在记录中的位序；", "\n\n", " ", "\n\n", "\n", "#include<stdio.h>  \n#include<malloc.h>  \n#include<stdlib.h>  \n#include<string.h>  \n#define OK 1  \n#define ERROR 0  \n#define OVERFLOW -2  \n#define MAXSIZE 1000 \n\ntypedef int Status; // 定义函数返回值类型  \n\ntypedef struct\n{\n    int num;\t\t//学号\n    char name[20];\t//姓名\n    char sex;\t\t//性别\n    int age;\t\t//年龄\n    char place[10];\t//籍贯\n    float weight;\t//体重\n    float height;\t//身高\n    int birthday;\t//生日\n    int dormitory;\t//宿舍\n}student;\n\ntypedef student ElemType;\n\ntypedef struct\n{\n    ElemType* elem; // 存储空间的基地址   \n    int length; // 当前长度   \n}SqList;\n\nStatus InitList(SqList* L) // 构造空的顺序表 L   \n{\n    L->elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);\n    if (!L->elem)  exit(OVERFLOW);  \t\t//分配失败退出 \n    L->length = 0;  \t\t//长度为0 \n    return OK;\n}\n\nElemType GetElem(SqList& L, int i) // 访问顺序表，找到 i位置，返回给 e  \n{\n    return L.elem[i];\n}\n\nint Search(SqList& L, char str[]) // 根据名字查找，返回该同学在顺序表中的编号   \n{\n    for (int i = 1;i <= L.length;i++)  \t//查找成功，返回序号 i+1\n    {\n        if (strcmp(L.elem[i].name, str) == 0)\n            return i;\n    }\n    return 0;\n}\n\nStatus ListInsert(SqList& L, int i, ElemType e) // 在 i位置插入某个学生的信息   \n{\n    if ((i < 1) || (i > L.length + 1)) return ERROR;\n    if (L.length == MAXSIZE)   return ERROR;\n    for (int j = L.length;j >= i;j--)\n    {\n        L.elem[j + 1] = L.elem[j];  \t//插入位置及之后的元素后移\n    }\n    L.elem[i] = e;  \t\t//将新元素e放入第i个位置\n    ++L.length;\n    return OK;\n}\n\nStatus ListDelete(SqList& L, int i) // 在顺序表中删除 i位置的学生信息   \n{\n    if ((i < 1) || (i > L.length))   return ERROR;\n    for (int j = i;j <= L.length;j++)\n    {\n        L.elem[j] = L.elem[j + 1];  \t//被删除元素之后的元素前移\n    }\n    --L.length;  \t//长度减一 \n    return OK;\n}\n\nvoid Input(ElemType* e)  \t\t//输入 \n{\n    printf(\" 学号:\");\n    scanf_s(\"%d\", &e->num);\n    printf(\" 姓名:\");\n    scanf_s(\"%s\", e->name, 4);\n    printf(\" 性别:\");\n    scanf_s(\"%s\", &e->sex, 3);\n    printf(\" 年龄:\");\n    scanf_s(\"%d\", &e->age);\n    printf(\" 籍贯:\");\n    scanf_s(\"%s\", e->place, 20);\n    printf(\" 体重:\");\n    scanf_s(\"%f\", &e->weight);\n    printf(\" 身高:\");\n    scanf_s(\"%f\", &e->height);\n    printf(\" 生日:\");\n    scanf_s(\"%d\", &e->birthday);\n    printf(\" 宿舍:\");\n    scanf_s(\"%d\", &e->dormitory);\n    printf(\"输入完成\\n\\n\");\n}\n\nvoid Output(ElemType& e)  \t\t//输出 \n{\n    printf_s(\"学号：%d 姓名：%s 性别：%s 年龄：%d 籍贯：%s 体重：%f 身高：%f 生日：%d 宿舍：%d\", e.num, &e.name, e.sex, e.age, &e.place, e.weight, e.height, e.birthday, e.dormitory);\n\n}\n\nint main()\n{\n    SqList L ;\n    ElemType a, b, c, d;\n    printf(\"1. 构造顺序表\\n\");\n    printf(\"2. 录入指定人数的学生信息\\n\");\n    printf(\"3. 显示学生表中的所有信息\\n\");\n    printf(\"4. 根据姓名查找该学生，并返回学号和成绩\\n\");\n    printf(\"5. 根据某指定位置显示该学生信息\\n\");\n    printf(\"6. 在指定位置插入学生信息\\n\");\n    printf(\"7. 在指定位置删除学生信息\\n\");\n    printf(\"8. 统计学生个数\\n\");\n    printf(\"0. 退出\\n\");\n    int x = 0, choose;\n    while (1)\n    {\n        printf(\"请输入你要选择的功能前的序号:\");\n        scanf_s(\"%d\", &choose);\n        if (choose == 0)   break;\n        switch (choose)\n        {\n        case 1:\n            if (InitList(&L))\n                printf(\"成功建立顺序表\\n\");\n            else\n                printf(\"顺序表建立失败\\n\");\n            break;\n        case 2:\n            printf(\"请输入要录入学生的人数:\");\n            scanf_s(\"%d\", &x);\n            for (int i = 1;i <= x;i++)\n            {\n                printf(\"第%d个学生:\\n\", i);\n                Input(&L.elem[i]);\n            }\n            L.length = x;\n            break;\n        case 3:\n            for (int i = 1;i <= x;i++)\n            {\n                a = GetElem(L, i);\n                Output(a);\n            }\n            break;\n        case 4:\n            char s[20];\n            printf(\"请输入要查找的学生姓名:\");\n            scanf_s(\"%s\", s, 4);\n            if (Search(L, s))\n                Output(L.elem[Search(L, s)]);\n            else\n                printf(\"对不起，查无此人\\n\");\n            printf_s(\"\");\n            break;\n        case 5:\n            printf_s(\"请输入要查询的位置:\");\n            int id1;\n            scanf_s(\"%d\", &id1);\n            b = GetElem(L, id1);\n            Output(b);\n            break;\n        case 6:\n            printf(\"请输入要插入的位置:\");\n            int id2;\n            scanf_s(\"%d\", &id2);\n            printf(\"请输入学生信息:\\n\");\n            Input(&c);\n            if (ListInsert(L, id2, c))\n            {\n                x++;\n                printf(\"插入成功\\n\");\n            }\n            else\n            {\n                printf(\"插入失败\\n\");\n            }\n            break;\n        case 7:\n            printf(\"请输入要删除的位置:\");\n            int id3;\n            scanf_s(\"%d\", &id3);\n            if (ListDelete(L, id3))\n            {\n                x--;\n                printf(\"删除成功\\n\");\n            }\n            else\n            {\n                printf(\"删除失败\\n\");\n            }\n            break;\n        case 8:\n            printf(\"已录入的学生个数为:%d\\n\\n\", L.length);\n            break;\n        }\n    }\n    printf(\"\\n\\n请按任意键退出\\n\\n\");\n    return 0;\n}", "\n\n", "    可以正常编译，选择1和选择2可以使用，但是其他选择在运行的时候会出问题，不知道怎么修改。", "\n\n", "    运行选择三的时候会出现（引发了异常: 读取访问权限冲突），不知道为什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if (PVThreads[i] !&amp;#61; NULL) break;\n是这句话的逻辑有问题吧&amp;#xff0c;应该是 &amp;#61;&amp;#61; 吧&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["多生产者多消费者问题C++实现，为什么始终只有一个消费者线程工作？", ["\n", "#include <iostream> \n#include <windows.h>\n#include <unordered_map>\n#include <string>\n\nusing namespace std;\n\ntypedef int semaphore;                          /* 信号量是一种特殊的整型变量 */\nconst int SIZE_OF_BUFFER =3;                                //缓冲区长度 \nconst unsigned short PRODUCERS_COUNT = 5;       //生产者的个数 \nconst unsigned short CONSUMERS_COUNT = 5;       //消费者的个数 \n\nDWORD producers[PRODUCERS_COUNT]; //生产者线程的标识符                       \nDWORD consumers[CONSUMERS_COUNT];//消费者线程的标识符 \n\nconst unsigned short THREADS_COUNT = PRODUCERS_COUNT + CONSUMERS_COUNT; //总的线程数 \n\n/**\n*定义信号量\n*/\nHANDLE mutex;                               //互斥信号量  \nHANDLE full;                             //表示放有产品的缓冲区数，其初值为0  \nHANDLE eempty;                            //表示可供使用的缓冲区数，其初值为N  \n\n/**\n*定义共享缓冲区\n*/\nsemaphore buffer[SIZE_OF_BUFFER];\n\nunordered_map<DWORD, string>  threadName;      //用一个哈希表存储线程ID与线程名字之间的对应关系\nint producerNum = 0;                        //创建哈希表的辅助变量\nint consumerNum = 0;\n\n/**\n*定义生产者和消费者使用的指针\n*/\nint in = 0;\nint out = 0;\n\nint productNum = 0;\n\n\nvoid enBuffer(int pos)\n{\n    cout << \"正在生产产品...\" << endl;\n    buffer[pos] = 1;\n    productNum++;\n    cout << \"生产完成！    已生产\" << productNum << \"个产品,并将新产品放在了缓冲区位置：\" << pos << endl;\n    for (int i = 0; i < SIZE_OF_BUFFER; i++)\n        cout << buffer[i] << ' ';\n    cout << endl;\n}\n\nvoid deBuffer(int pos)\n{\n    cout << \"正在消费产品...\" << endl;\n    buffer[pos] = 0;\n    productNum--;\n    cout << \"已消费在缓冲区位置：\" << pos << \"的产品,缓冲区剩余空间：\" << SIZE_OF_BUFFER - productNum << endl;\n    for (int i = 0; i < SIZE_OF_BUFFER; i++)\n        cout << buffer[i] << ' ';\n    cout << endl;\n    cout << endl;\n}\n\n/**\n*生产者\n*/\nDWORD WINAPI Producer(LPVOID lpParam)\n{\n    while (1)\n    {\n        WaitForSingleObject(eempty, INFINITE);  // P(empty) 生产者信号量 -1  \n        WaitForSingleObject(mutex, INFINITE);  // P(mutex) 获取线程间互斥信号  \n        enBuffer(in);\n\n        if (threadName.find(GetCurrentThreadId()) == threadName.end()) {\n            string temp = \"生产者\";\n            temp += '0' + producerNum;\n            threadName.insert({ GetCurrentThreadId() ,temp });\n            producerNum++;\n        }\n        cout << threadName[GetCurrentThreadId()]<<endl<<endl;\n\n        in = (in + 1) % SIZE_OF_BUFFER;\n        ReleaseMutex(mutex);                  // V(mutex) 释放线程间互斥信号  \n        ReleaseSemaphore(full, 1, NULL);        // V(full) 消费者信号量 +1  \n\n    }\n    return 0;\n}\n\n/**\n*消费者\n*/\nDWORD WINAPI Consumer(LPVOID lpPara)\n{\n    while (1)\n    {\n        WaitForSingleObject(full, INFINITE);        //P(full) 消费者信号量-1  \n        WaitForSingleObject(mutex, INFINITE);       //P(mutex) 获得线程间互斥信号  \n        deBuffer(out);\n\n        if (threadName.find(GetCurrentThreadId()) == threadName.end()) {\n            string temp = \"消费者\";\n            temp += '0' + consumerNum;\n            threadName.insert({ GetCurrentThreadId() ,temp });\n            consumerNum++;\n        }\n        cout << threadName[GetCurrentThreadId()] << endl << endl;\n\n        out = (out + 1) % SIZE_OF_BUFFER;\n        ReleaseMutex(mutex);                       //V(mutex) 释放线程间互斥信号  \n        ReleaseSemaphore(eempty, 1, NULL);            //V(empty) 生产者信号量+1  \n\n    }\n    return 0;\n}\n\nint main()\n{\n    //创建Mutex和Semaphore \n    mutex = CreateMutex(NULL, FALSE, NULL);\n    full = CreateSemaphore(NULL, 0, SIZE_OF_BUFFER, NULL);\n    eempty = CreateSemaphore(NULL, SIZE_OF_BUFFER, SIZE_OF_BUFFER, NULL);\n\n    for (int i = 0; i < SIZE_OF_BUFFER; i++)\n        buffer[i] = -1;\n\n    HANDLE PVThreads[THREADS_COUNT];     //各线程的handle  \n\n\n     //创建生产者线程 \n    for (int i = 0; i < PRODUCERS_COUNT; i++) {\n        PVThreads[i] = CreateThread(NULL, 0, Producer, NULL, 0, &producers[i]);\n        if (PVThreads[i] == NULL) break;\n    }\n    //创建消费者线程  \n    for (int i = 0; i < CONSUMERS_COUNT; i++) {\n        PVThreads[PRODUCERS_COUNT + i]\n            = CreateThread(NULL, 0, Consumer, NULL, 0, &consumers[i]);\n        if (PVThreads[i] != NULL) break;\n    }\n\n    bool isContinue = true;\n    while (isContinue)\n    {\n        if (getchar()) {  //按回车后终止程序运行 \n            isContinue = false;\n        }\n    }\n    system(\"PAUSE\");\n    return 0;\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符串输出格式不正确&amp;#xff0c;字符串变量本身就是指针&amp;#xff0c;不应该再取地址&amp;#xff0c;单个字符的输出格式是“%c”&lt;/p&gt;\n\n&lt;p&gt;printf_s(&amp;#34;学号&amp;#xff1a;%d 姓名&amp;#xff1a;%s 性别&amp;#xff1a;%c 年龄&amp;#xff1a;%d 籍贯&amp;#xff1a;%s 体重&amp;#xff1a;%f 身高&amp;#xff1a;%f 生日&amp;#xff1a;%d 宿舍&amp;#xff1a;%d&amp;#34;, e.num, e.name, e.sex, e.age, e.place, e.weight, e.height, e.birthday, e.dormitory);&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["线性表实现学生信息表，运行时出现问题不知道怎么解决", ["这是题目内容：", "\n\n", "用线性数组做一个班级学生档案记录的程序，要求：", "\n\n", "    1）用结构体表示学生记录，包括但不限于：学号、姓名、性别、班级、生日、宿舍、籍贯等信息；", "\n\n", "    2）学生记录用数组存储，按照学号递增顺序记录；", "\n\n", "    3）学生记录插入：插入包括自己在内的10名学生；", "\n\n", "    4）学生记录删除：删除指定位置学生；", "\n\n", "    5）查找学生：根据姓名查找学生在记录中的位序；", "\n\n", "\n", "\n#include<stdio.h>  \n#include<malloc.h>  \n#include<stdlib.h>  \n#include<string.h>  \n#define OK 1  \n#define ERROR 0  \n#define OVERFLOW -2  \n#define MAXSIZE 1000 \ntypedef int Status; // 定义函数返回值类型  \ntypedef struct\n{\n    int num;\t\t//学号\n    char name[20];\t//姓名\n    char sex;\t\t//性别\n    int age;\t\t//年龄\n    char place[10];\t//籍贯\n    float weight;\t//体重\n    float height;\t//身高\n    int birthday;\t//生日\n    int dormitory;\t//宿舍\n}student;\ntypedef student ElemType;\ntypedef struct\n{\n    ElemType* elem; // 存储空间的基地址   \n    int length; // 当前长度   \n}SqList;\nStatus InitList(SqList* L) // 构造空的顺序表 L   \n{\n    L->elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);\n    if (!L->elem)  exit(OVERFLOW);  \t\t//分配失败退出 \n    L->length = 0;  \t\t//长度为0 \n    return OK;\n}\nElemType GetElem(SqList& L, int i) // 访问顺序表，找到 i位置，返回给 e  \n{\n    return L.elem[i];\n}\nint Search(SqList& L, char str[]) // 根据名字查找，返回该同学在顺序表中的编号   \n{\n    for (int i = 1;i <= L.length;i++)  \t//查找成功，返回序号 i+1\n    {\n        if (strcmp(L.elem[i].name, str) == 0)\n            return i;\n    }\n    return 0;\n}\nStatus ListInsert(SqList& L, int i, ElemType e) // 在 i位置插入某个学生的信息   \n{\n    if ((i < 1) || (i > L.length + 1)) return ERROR;\n    if (L.length == MAXSIZE)   return ERROR;\n    for (int j = L.length;j >= i;j--)\n    {\n        L.elem[j + 1] = L.elem[j];  \t//插入位置及之后的元素后移\n    }\n    L.elem[i] = e;  \t\t//将新元素e放入第i个位置\n    ++L.length;\n    return OK;\n}\nStatus ListDelete(SqList& L, int i) // 在顺序表中删除 i位置的学生信息   \n{\n    if ((i < 1) || (i > L.length))   return ERROR;\n    for (int j = i;j <= L.length;j++)\n    {\n        L.elem[j] = L.elem[j + 1];  \t//被删除元素之后的元素前移\n    }\n    --L.length;  \t//长度减一 \n    return OK;\n}\nvoid Input(ElemType* e)  \t\t//输入 \n{\n    printf(\" 学号:\");\n    scanf_s(\"%d\", &e->num);\n    printf(\" 姓名:\");\n    scanf_s(\"%s\", e->name, 4);\n    printf(\" 性别:\");\n    scanf_s(\"%s\", &e->sex, 3);\n    printf(\" 年龄:\");\n    scanf_s(\"%d\", &e->age);\n    printf(\" 籍贯:\");\n    scanf_s(\"%s\", e->place, 20);\n    printf(\" 体重:\");\n    scanf_s(\"%f\", &e->weight);\n    printf(\" 身高:\");\n    scanf_s(\"%f\", &e->height);\n    printf(\" 生日:\");\n    scanf_s(\"%d\", &e->birthday);\n    printf(\" 宿舍:\");\n    scanf_s(\"%d\", &e->dormitory);\n    printf(\"输入完成\\n\\n\");\n}\nvoid Output(ElemType& e)  \t\t//输出 \n{\n    printf_s(\"学号：%d 姓名：%s 性别：%s 年龄：%d 籍贯：%s 体重：%f 身高：%f 生日：%d 宿舍：%d\", e.num, &e.name, e.sex, e.age, &e.place, e.weight, e.height, e.birthday, e.dormitory);\n}\nint main()\n{\n    SqList L ;\n    ElemType a, b, c, d;\n    printf(\"1. 构造顺序表\\n\");\n    printf(\"2. 录入指定人数的学生信息\\n\");\n    printf(\"3. 显示学生表中的所有信息\\n\");\n    printf(\"4. 根据姓名查找该学生，并返回学号和成绩\\n\");\n    printf(\"5. 根据某指定位置显示该学生信息\\n\");\n    printf(\"6. 在指定位置插入学生信息\\n\");\n    printf(\"7. 在指定位置删除学生信息\\n\");\n    printf(\"8. 统计学生个数\\n\");\n    printf(\"0. 退出\\n\");\n    int x = 0, choose;\n    while (1)\n    {\n        printf(\"请输入你要选择的功能前的序号:\");\n        scanf_s(\"%d\", &choose);\n        if (choose == 0)   break;\n        switch (choose)\n        {\n        case 1:\n            if (InitList(&L))\n                printf(\"成功建立顺序表\\n\");\n            else\n                printf(\"顺序表建立失败\\n\");\n            break;\n        case 2:\n            printf(\"请输入要录入学生的人数:\");\n            scanf_s(\"%d\", &x);\n            for (int i = 1;i <= x;i++)\n            {\n                printf(\"第%d个学生:\\n\", i);\n                Input(&L.elem[i]);\n            }\n            L.length = x;\n            break;\n        case 3:\n            for (int i = 1;i <= x;i++)\n            {\n                a = GetElem(L, i);\n                Output(a);\n            }\n            break;\n        case 4:\n            char s[20];\n            printf(\"请输入要查找的学生姓名:\");\n            scanf_s(\"%s\", s, 4);\n            if (Search(L, s))\n                Output(L.elem[Search(L, s)]);\n            else\n                printf(\"对不起，查无此人\\n\");\n            printf_s(\"\");\n            break;\n        case 5:\n            printf_s(\"请输入要查询的位置:\");\n            int id1;\n            scanf_s(\"%d\", &id1);\n            b = GetElem(L, id1);\n            Output(b);\n            break;\n        case 6:\n            printf(\"请输入要插入的位置:\");\n            int id2;\n            scanf_s(\"%d\", &id2);\n            printf(\"请输入学生信息:\\n\");\n            Input(&c);\n            if (ListInsert(L, id2, c))\n            {\n                x++;\n                printf(\"插入成功\\n\");\n            }\n            else\n            {\n                printf(\"插入失败\\n\");\n            }\n            break;\n        case 7:\n            printf(\"请输入要删除的位置:\");\n            int id3;\n            scanf_s(\"%d\", &id3);\n            if (ListDelete(L, id3))\n            {\n                x--;\n                printf(\"删除成功\\n\");\n            }\n            else\n            {\n                printf(\"删除失败\\n\");\n            }\n            break;\n        case 8:\n            printf(\"已录入的学生个数为:%d\\n\\n\", L.length);\n            break;\n        }\n    }\n    printf(\"\\n\\n请按任意键退出\\n\\n\");\n    return 0;\n}\n", "\n\n", "可以正常编译，选择1和选择2可以使用，但是其他选择在运行的时候会出问题，不知道怎么修改。", "\n\n", "    运行选择三的时候会出现（引发了异常: 读取访问权限冲突），不知道为什么", "\n\n", "其他选择还没用，不知道怎么改"]], "Tag": "程序设计"}
{"Answer": "网络请求位置问题，不能在主进程发起http请求。\r\n可以参考一下：https://blog.csdn.net/qq_29477223/article/details/81027716", "Konwledge_Point": "名字空间", "Question": ["Android调用java 写的webservices 报错", ["private EditText nametex,passwordtex;\n     @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            requestWindowFeature(Window.FEATURE_NO_TITLE);//去除图标\n            setContentView(R.layout.activity_main);\n            nametex=(EditText) findViewById(R.id.name);\n            passwordtex=(EditText) findViewById(R.id.password);\n        }\n\n    //确定按钮\n     public void btnOk(View view) throws IOException, XmlPullParserException {\n     String names = nametex.getText().toString();\n     String pwds = passwordtex.getText().toString();\n     if (TextUtils.isEmpty(names) || TextUtils.isEmpty(pwds)) {\n     Toast.makeText(this, \"用户名和密码不能为空\", Toast.LENGTH_LONG).show();\n     }else{\n                // 命名空间\n                String nameSpace = \"http://Impi.services.jksd.com/\";\n                // 调用的方法名称\n                String methodName = \"Account_isPasswordCorrect\";\n               // String action=nameSpace+methodName;\n                // SOAP Action\n                SoapObject request = new SoapObject(nameSpace, methodName);\n                request.addProperty(\"Account_Name\", names);\n                request.addProperty(\"Account_Password\", pwds);\n                SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);\n                envelope.dotNet = false;//.net的接口为true\n                envelope.bodyOut = request;\n                envelope.setOutputSoapObject(request);\n                envelope.encodingStyle=\"UTF-8\";\n                HttpTransportSE transport = new HttpTransportSE(\"http://192.168.2.181:19999/webservices?wsdl\");// wsdl文档\n                    // 调用WebService\n                    transport.call(null, envelope);\n                System.err.println(envelope.getResponse().toString());\n     }\n\n     }\n", "\n\n", "报错", "\n\n", "06-16 02:36:49.390: D/AndroidRuntime(891): Shutting down VM\n06-16 02:36:49.390: W/dalvikvm(891): threadid=1: thread exiting with uncaught exception (group=0xb3a82b90)\n06-16 02:36:49.460: E/AndroidRuntime(891): FATAL EXCEPTION: main\n06-16 02:36:49.460: E/AndroidRuntime(891): Process: com.jksd.app, PID: 891\n06-16 02:36:49.460: E/AndroidRuntime(891): java.lang.IllegalStateException: Could not execute method of the activity\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.view.View$1.onClick(View.java:3814)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.view.View.performClick(View.java:4424)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.view.View$PerformClick.run(View.java:18383)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.os.Handler.handleCallback(Handler.java:733)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.os.Handler.dispatchMessage(Handler.java:95)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.os.Looper.loop(Looper.java:137)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.app.ActivityThread.main(ActivityThread.java:4998)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.lang.reflect.Method.invokeNative(Native Method)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.lang.reflect.Method.invoke(Method.java:515)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:777)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:593)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at dalvik.system.NativeStart.main(Native Method)\n06-16 02:36:49.460: E/AndroidRuntime(891): Caused by: java.lang.reflect.InvocationTargetException\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.lang.reflect.Method.invokeNative(Native Method)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.lang.reflect.Method.invoke(Method.java:515)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.view.View$1.onClick(View.java:3809)\n06-16 02:36:49.460: E/AndroidRuntime(891):  ... 11 more\n06-16 02:36:49.460: E/AndroidRuntime(891): Caused by: android.os.NetworkOnMainThreadException\n06-16 02:36:49.460: E/AndroidRuntime(891):  at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1145)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at libcore.io.BlockGuardOs.connect(BlockGuardOs.java:84)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at libcore.io.IoBridge.connectErrno(IoBridge.java:127)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at libcore.io.IoBridge.connect(IoBridge.java:112)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:192)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:459)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at java.net.Socket.connect(Socket.java:843)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.Platform.connectSocket(Platform.java:131)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.Connection.connect(Connection.java:101)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:294)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.http.HttpEngine.sendSocketRequest(HttpEngine.java:255)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:206)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:345)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:89)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at org.ksoap2.transport.ServiceConnectionSE.connect(ServiceConnectionSE.java:75)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at org.ksoap2.transport.HttpTransportSE.call(HttpTransportSE.java:136)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at org.ksoap2.transport.HttpTransportSE.call(HttpTransportSE.java:90)\n06-16 02:36:49.460: E/AndroidRuntime(891):  at com.jksd.app.MainActivity.btnOk(MainActivity.java:55)\n06-16 02:36:49.460: E/AndroidRuntime(891):  ... 14 more\n06-16 02:36:49.530: D/dalvikvm(891): GC_FOR_ALLOC freed 253K, 10% free 3027K/3360K, paused 57ms, total 60ms\n\n", "\n\n", "有没有Android的大佬帮忙看看！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#define _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt; &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;conio.h&amp;gt; &lt;/span&gt;\ntypedef char TElemType;\ntypedef &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; status;\ntypedef struct BiTPNode {\n    TElemType data[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    struct BiTPNode* &lt;span class=\"hljs-built_in\"&gt;parent&lt;/span&gt;, * lchild, * rchild; &lt;span class=\"hljs-comment\"&gt;//父亲及左右孩子指针&lt;/span&gt;\n}BiTPNode, * BiPTree;\nBiPTree P;\nBiPTree T;\n&lt;span class=\"hljs-comment\"&gt;//家谱的创建&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; Cre()\n{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    FILE* fp; &lt;span class=\"hljs-comment\"&gt;//声明指向文件的指针&lt;/span&gt;\n    char filename[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;], str[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入家谱名称:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets_s(filename); &lt;span class=\"hljs-comment\"&gt;//输入家谱名称&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (filename[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;家谱名不能为空,请重新输入:&amp;#34;&lt;/span&gt;);\n        gets_s(filename);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; fopen(filename, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s家谱创建失败!\\n&amp;#34;&lt;/span&gt;, filename);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入家谱内容:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (strlen(gets_s(str)) &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        fputs(str, fp); &lt;span class=\"hljs-comment\"&gt;//向文件写入字符串&lt;/span&gt;\n        putc(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, fp);\n    }\n    fclose(fp); &lt;span class=\"hljs-comment\"&gt;//关闭文件&lt;/span&gt;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\nstatus loc(BiPTree T, BiPTree P, TElemType name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T)\n    {\n        P &amp;#61; T;\n        &lt;span class=\"hljs-comment\"&gt;//字符串的比较&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!strcmp(name, T-&amp;gt;data)) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (loc(T-&amp;gt;lchild, P, name)) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (loc(T-&amp;gt;rchild, P, name)) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//构造二叉树&lt;/span&gt;\nstatus inittree(BiPTree T)\n{\n    T &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    T-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    T-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    T-&amp;gt;parent &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//载入家谱&lt;/span&gt;\nstatus Crt(BiPTree  T)\n{\n    FILE* fp;\n    BiPTree Q, R, M, N;\n    char filename[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;], name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//清屏&lt;/span&gt;\n    R &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode)); &lt;span class=\"hljs-comment\"&gt;//分配存储空间&lt;/span&gt;\n    M &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    N &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入家谱名:&amp;#34;&lt;/span&gt;);\n    getchar();\n\n    gets_s(filename);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (filename[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;家谱名不能为空,请重新输入:&amp;#34;&lt;/span&gt;);\n        gets_s(filename);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;filename&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s家谱打开失败!\\n&amp;#34;&lt;/span&gt;, filename);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    inittree(T);\n    fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name); &lt;span class=\"hljs-comment\"&gt;//从文件读入姓名&lt;/span&gt;\n    strcpy(T-&amp;gt;data, name);\n    T-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    T-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    T-&amp;gt;parent &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    fclose(fp);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; fopen(filename, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%家谱打开失败!\\n&amp;#34;&lt;/span&gt;, filename);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!feof(fp))\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (loc(T, P, name))\n        {\n            fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n            Q &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n            strcpy(Q-&amp;gt;data, name);\n            P-&amp;gt;lchild &amp;#61; Q; &lt;span class=\"hljs-comment\"&gt;//构建孩子&lt;/span&gt;\n            Q-&amp;gt;parent &amp;#61; P;\n            Q-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n            Q-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n            N &amp;#61; P;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!loc(T, P, name))\n        {\n            Q &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n            R &amp;#61; N;\n            R &amp;#61; R-&amp;gt;lchild;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (R) {\n                M &amp;#61; R;\n                R &amp;#61; R-&amp;gt;rchild;\n            }\n            strcpy(Q-&amp;gt;data, name);\n            M-&amp;gt;rchild &amp;#61; Q;\n            Q-&amp;gt;parent &amp;#61; M;\n            Q-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n            Q-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        }\n        fscanf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;信息载入成功,按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//添加成员&lt;/span&gt;\nstatus in(BiPTree T)\n{\n    char father[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;], name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    BiPTree Q, M;\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要添加到该家谱中的人的父亲姓名:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets_s(father);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!loc(T, P, father)) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s不在该家谱中!请重新输入:&amp;#34;&lt;/span&gt;, father);\n        gets_s(father);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要添加到该家谱中的人的姓名:&amp;#34;&lt;/span&gt;);\n    gets_s(name);\n    Q &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    M &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    strcpy(Q-&amp;gt;data, name);\n    Q-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    Q-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!P-&amp;gt;lchild) {\n        P-&amp;gt;lchild &amp;#61; Q;\n        Q-&amp;gt;parent &amp;#61; P;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        P &amp;#61; P-&amp;gt;lchild;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (P) {\n            M &amp;#61; P;\n            P &amp;#61; P-&amp;gt;rchild;\n        }\n        M-&amp;gt;rchild &amp;#61; Q;\n        Q-&amp;gt;parent &amp;#61; M;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;成员添加成功,按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//删除成员&lt;/span&gt;\nstatus de(BiPTree T)\n{\n    char name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要删除的人的姓名:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets_s(name);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!loc(T, P, name)) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s不在该家谱中!请重新输入:&amp;#34;&lt;/span&gt;, name);\n        gets_s(name);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!P-&amp;gt;rchild) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P-&amp;gt;parent-&amp;gt;lchild &amp;#61;&amp;#61; P)\n            P-&amp;gt;parent-&amp;gt;lchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            P-&amp;gt;parent-&amp;gt;rchild &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        free(P);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P-&amp;gt;rchild) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P-&amp;gt;parent-&amp;gt;lchild &amp;#61;&amp;#61; P)\n            P-&amp;gt;parent-&amp;gt;lchild &amp;#61; P-&amp;gt;rchild;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            P-&amp;gt;parent-&amp;gt;rchild &amp;#61; P-&amp;gt;rchild;\n        free(P);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;成员删除成功,按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\nstatus Show(TElemType e[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]) {\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s  &amp;#34;&lt;/span&gt;, e);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//二叉树的遍历&lt;/span&gt;\nstatus pre(BiPTree T, status(*visit)(TElemType[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;])) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((*visit)(T-&amp;gt;data))\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (pre(T-&amp;gt;lchild, visit))\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (pre(T-&amp;gt;rchild, visit)) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//家族成员查询&lt;/span&gt;\nstatus Sea(BiPTree T) {\n    char name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    BiPTree N;\n    N &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查寻的人的姓名:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets_s(name);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!loc(T, P, name)) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s不在该家谱中!请重新输入:&amp;#34;&lt;/span&gt;, name);\n        gets_s(name);\n    }\n    N &amp;#61; P;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P &amp;#61;&amp;#61; T)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的父亲在该家谱中没有记载!\\n&amp;#34;&lt;/span&gt;, P-&amp;gt;data);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (N-&amp;gt;parent-&amp;gt;rchild &amp;#61;&amp;#61; N)\n            N &amp;#61; N-&amp;gt;parent;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的父亲是:%s\\n&amp;#34;&lt;/span&gt;, P-&amp;gt;data, N-&amp;gt;parent-&amp;gt;data);\n    }\n    N &amp;#61; P;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P &amp;#61;&amp;#61; T)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s没有兄弟!\\n&amp;#34;&lt;/span&gt;, P-&amp;gt;data);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!P-&amp;gt;rchild &amp;amp;&amp;amp; P-&amp;gt;parent-&amp;gt;rchild !&amp;#61; P)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s没有兄弟!\\n&amp;#34;&lt;/span&gt;, P-&amp;gt;data);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的兄弟有:\\n&amp;#34;&lt;/span&gt;, name);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (N-&amp;gt;rchild) {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, N-&amp;gt;rchild-&amp;gt;data);\n            N &amp;#61; N-&amp;gt;rchild;\n        }\n        N &amp;#61; P;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (N-&amp;gt;parent-&amp;gt;rchild &amp;#61;&amp;#61; N) {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, N-&amp;gt;parent-&amp;gt;data);\n            N &amp;#61; N-&amp;gt;parent;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P &amp;#61;&amp;#61; T)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的祖先在该家谱中没有记载!\\n&amp;#34;&lt;/span&gt;, name);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的祖先是:%s\\n&amp;#34;&lt;/span&gt;, name, T-&amp;gt;data);\n    N &amp;#61; P;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!P-&amp;gt;lchild) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s没有孩子!\\n&amp;#34;&lt;/span&gt;, name);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s没有后代\\n&amp;#34;&lt;/span&gt;, name);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的孩子有:\\n&amp;#34;&lt;/span&gt;, name);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, P-&amp;gt;lchild-&amp;gt;data);\n        N &amp;#61; N-&amp;gt;lchild;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (N-&amp;gt;rchild) {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, N-&amp;gt;rchild-&amp;gt;data);\n            N &amp;#61; N-&amp;gt;rchild;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s的后代有:\\n&amp;#34;&lt;/span&gt;, name);\n        pre(P-&amp;gt;lchild, Show);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//文件的创建&lt;/span&gt;\nstatus write(BiPTree T, char filename[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]) {\n    FILE* fp;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; fopen(filename, &lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#43;&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s文件创建失败!\\n&amp;#34;&lt;/span&gt;, filename);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, T-&amp;gt;data);\n    T &amp;#61; T-&amp;gt;lchild;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (T) {\n        fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;, T-&amp;gt;data);\n        T &amp;#61; T-&amp;gt;rchild;\n    }\n    fprintf(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    fclose(fp);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\nstatus prewrite(BiPTree T, status(*visit)(BiPTree, char[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]), char filename[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T-&amp;gt;lchild)\n            (*visit)(T, filename);\n        prewrite(T-&amp;gt;lchild, visit, filename);\n        prewrite(T-&amp;gt;rchild, visit, filename);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n\nstatus wrong()\n{\n    char a;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;a);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;无此选项,请重新选择!(按任一键继续!)&amp;#34;&lt;/span&gt;);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//家谱的存储&lt;/span&gt;\nstatus Sav(BiPTree T) {\n    FILE* fp;\n    char filename[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入新的文件名:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets_s(filename);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (filename[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;家谱名不能为空,请重新输入:&amp;#34;&lt;/span&gt;);\n        gets_s(filename);\n    }\n    prewrite(T, write, filename);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s家谱保存成功,按任一键继续!&amp;#34;&lt;/span&gt;, filename);\n    getchar();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//修改家谱&lt;/span&gt;\nstatus Upd() {\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; xz;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n\\n\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;   家族成员的添加与删除操作  \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;      请选择           \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    1.添加成员.        \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    2.删除成员.        \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    3.返回上一级.      \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       请选择:&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;xz);\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (xz)\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: in(T); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: de(T); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            wrong();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    P &amp;#61; (BiTPNode*)malloc(sizeof(BiTPNode));\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; xz;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n\\n\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     家族关系查询系统     \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     具体操作如下         \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     1.创建家谱.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     2.载入家谱.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     3.修改家谱.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     4.查寻成员.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     5.保存家谱.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     6.退出程序.          \\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;     请选择操作:&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;xz);\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (xz)\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            Cre();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            Crt(T);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            Upd();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            Sea(T);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            Sav(T);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            wrong();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": ["载入函数有问题 请问该怎么修改啊", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "\n", "\n", "#define _CRT_SECURE_NO_WARNINGS", "\n", "#include <stdio.h> ", "\n", "#include <stdlib.h> ", "\n", "#include <string.h> ", "\n", "#include<conio.h> ", "\ntypedef char TElemType;\ntypedef ", "int", " status;\ntypedef struct BiTPNode {\n    TElemType data[", "10", "];\n    struct BiTPNode* ", "parent", ", * lchild, * rchild; ", "//父亲及左右孩子指针", "\n}BiTPNode, * BiPTree;\nBiPTree P;\nBiPTree T;\n\n", "//家谱的创建", "\n", "int", " Cre()\n{\n    system(", "\"cls\"", ");\n    FILE* fp; ", "//声明指向文件的指针", "\n    char filename[", "40", "], str[", "10", "];\n    printf(", "\"请输入家谱名称:\"", ");\n    getchar();\n    gets(filename); ", "//输入家谱名称", "\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(filename, ", "\"w\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    printf(", "\"请输入家谱内容:\\n\"", ");\n    ", "while", " (strlen(gets(str)) > ", "0", ")\n    {\n        fputs(str, fp); ", "//向文件写入字符串", "\n        putc(", "'\\n'", ", fp);\n    }\n    fclose(fp); ", "//关闭文件", "\n    printf(", "\"按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\nstatus loc(BiPTree T, BiPTree* P, TElemType name[", "10", "]) {\n    ", "if", " (T)\n    {\n        P = T;\n        ", "//字符串的比较", "\n        ", "if", " (!strcmp(name, T->data)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->lchild, P, name)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->rchild, P, name)) ", "return", " ", "1", ";\n    }\n    ", "else", "\n        ", "return", " ", "0", ";\n}\n\n", "//构造二叉树", "\nstatus inittree(BiPTree T)\n{\n    T = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "if", " (T)\n        ", "return", " ", "0", ";\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    ", "return", " ", "1", ";\n}\n\n\n", "//载入家谱", "\nstatus Crt(BiPTree  T)\n{\n    FILE* fp;\n    BiPTree Q, R, M, N;\n    char filename[", "40", "], name[", "10", "];\n    system(", "\"cls\"", "); ", "//清屏", "\n    R = (BiTPNode*)malloc(sizeof(BiTPNode)); ", "//分配存储空间", "\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    printf(", "\"请输入家谱名:\"", ");\n    getchar();\n\n\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(", "\"filename\"", ", ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n\n    inittree(T);\n    fscanf(fp, ", "\"%s\"", ", name); ", "//从文件读入姓名", "\n    strcpy(T->data, name);\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    fclose(fp);\n    ", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fscanf(fp, ", "\"%s\"", ", name);\n    ", "while", " (!feof(fp))\n    {\n        ", "if", " (loc(T, P, name))\n        {\n            fscanf(fp, ", "\"%s\"", ", name);\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            strcpy(Q->data, name);\n            P->lchild = Q; ", "//构建孩子", "\n            Q->parent = P;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n            N = P;\n        }\n        ", "else", " ", "if", " (!loc(T, P, name))\n        {\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            R = N;\n            R = R->lchild;\n            ", "while", " (R) {\n                M = R;\n                R = R->rchild;\n            }\n            strcpy(Q->data, name);\n            M->rchild = Q;\n            Q->parent = M;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n        }\n        fscanf(fp, ", "\"%s\"", ", name);\n    }\n    printf(", "\"信息载入成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n", "//添加成员", "\nstatus in(BiPTree* T)\n{\n    char father[", "10", "], name[", "10", "];\n    BiPTree Q, M;\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要添加到该家谱中的人的父亲姓名:\"", ");\n    getchar();\n    gets(father);\n    ", "while", " (!loc(T, P, father)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", father);\n        gets(father);\n    }\n    printf(", "\"请输入要添加到该家谱中的人的姓名:\"", ");\n    gets(name);\n    Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    strcpy(Q->data, name);\n    Q->lchild = ", "NULL", ";\n    Q->rchild = ", "NULL", ";\n    ", "if", " (!P->lchild) {\n        P->lchild = Q;\n        Q->parent = P;\n    }\n    ", "else", " {\n        P = P->lchild;\n        ", "while", " (P) {\n            M = P;\n            P = P->rchild;\n        }\n        M->rchild = Q;\n        Q->parent = M;\n    }\n    printf(", "\"成员添加成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n\n", "//删除成员", "\nstatus de(BiPTree* T)\n{\n    char name[", "10", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要删除的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    ", "if", " (!P->rchild) {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = ", "NULL", ";\n        ", "else", "\n            P->parent->rchild = ", "NULL", ";\n        free(P);\n    }\n    ", "else", " ", "if", " (P->rchild) {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = P->rchild;\n        ", "else", "\n            P->parent->rchild = P->rchild;\n        free(P);\n    }\n    printf(", "\"成员删除成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n\nstatus Show(TElemType e[", "10", "]) {\n    printf(", "\"%s  \"", ", e);\n    ", "return", " ", "1", ";\n}\n\n\n", "//二叉树的遍历", "\nstatus pre(BiPTree T, status(*visit)(TElemType[", "10", "])) {\n    ", "if", " (T) {\n        ", "if", " ((*visit)(T->data))\n            ", "if", " (pre(T->lchild, visit))\n                ", "if", " (pre(T->rchild, visit)) ", "return", " ", "1", ";\n        ", "return", " ", "0", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n\n\n", "//家族成员查询", "\nstatus Sea(BiPTree T) {\n    char name[", "10", "];\n    BiPTree N;\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要查寻的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s的父亲在该家谱中没有记载!\\n\"", ", P->data);\n    ", "else", " {\n        ", "while", " (N->parent->rchild == N)\n            N = N->parent;\n        printf(", "\"%s的父亲是:%s\\n\"", ", P->data, N->parent->data);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", " ", "if", " (!P->rchild && P->parent->rchild != P)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", " {\n        printf(", "\"%s的兄弟有:\\n\"", ", name);\n        ", "while", " (N->rchild) {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        N = P;\n        ", "while", " (N->parent->rchild == N) {\n            printf(", "\"%s \"", ", N->parent->data);\n            N = N->parent;\n        }\n        printf(", "\"\\n\"", ");\n    }\n    ", "if", " (P == T)\n        printf(", "\"%s的祖先在该家谱中没有记载!\\n\"", ", name);\n    ", "else", "\n        printf(", "\"%s的祖先是:%s\\n\"", ", name, T->data);\n    N = P;\n    ", "if", " (!P->lchild) {\n        printf(", "\"%s没有孩子!\\n\"", ", name);\n        printf(", "\"%s没有后代\\n\"", ", name);\n    }\n    ", "else", " {\n        printf(", "\"%s的孩子有:\\n\"", ", name);\n        printf(", "\"%s \"", ", P->lchild->data);\n        N = N->lchild;\n        ", "while", " (N->rchild) {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        printf(", "\"\\n\"", ");\n        printf(", "\"%s的后代有:\\n\"", ", name);\n        pre(P->lchild, Show);\n        printf(", "\"\\n\"", ");\n    }\n    printf(", "\"按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n", "//文件的创建", "\nstatus write(BiPTree T, char filename[", "40", "]) {\n    FILE* fp;\n    ", "if", " ((fp = fopen(filename, ", "\"a+\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s文件创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fprintf(fp, ", "\"%s \"", ", T->data);\n    T = T->lchild;\n    ", "while", " (T) {\n        fprintf(fp, ", "\"%s \"", ", T->data);\n        T = T->rchild;\n    }\n    fprintf(fp, ", "\"\\n\"", "); ", "//输出", "\n    fclose(fp);\n    ", "return", " ", "1", ";\n}\n\nstatus prewrite(BiPTree T, status(*visit)(BiPTree, char[", "40", "]), char filename[", "40", "]) {\n    ", "if", " (T) {\n        ", "if", " (T->lchild)\n            (*visit)(T, filename);\n        prewrite(T->lchild, visit, filename);\n        prewrite(T->rchild, visit, filename);\n        ", "return", " ", "1", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n\n\n\n\nstatus wrong()\n{\n    char a;\n    scanf(", "\"%c\"", ", &a);\n    printf(", "\"无此选项,请重新选择!(按任一键继续!)\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n\n", "//家谱的存储", "\nstatus Sav(BiPTree T) {\n    FILE* fp;\n    char filename[", "40", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入新的文件名:\"", ");\n    getchar();\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    prewrite(T, write, filename);\n    printf(", "\"%s家谱保存成功,按任一键继续!\"", ", filename);\n    getchar();\n    ", "return", " ", "1", ";\n}\n\n", "//修改家谱", "\nstatus Upd() {\n    system(", "\"cls\"", ");\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"   家族成员的添加与删除操作  \\n\"", ");\n        printf(", "\"      请选择           \\n\"", ");\n        printf(", "\"    1.添加成员.        \\n\"", ");\n        printf(", "\"    2.删除成员.        \\n\"", ");\n        printf(", "\"    3.返回上一级.      \\n\"", ");\n        printf(", "\"       请选择:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ": in(T); ", "break", ";\n        ", "case", " ", "2", ": de(T); ", "break", ";\n        ", "case", " ", "3", ": ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n\n\n ", "int", " main()\n{\n    P = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"     家族关系查询系统     \\n\"", ");\n        printf(", "\"     具体操作如下         \\n\"", ");\n        printf(", "\"     1.创建家谱.          \\n\"", ");\n        printf(", "\"     2.载入家谱.          \\n\"", ");\n        printf(", "\"     3.修改家谱.          \\n\"", ");\n        printf(", "\"     4.查寻成员.          \\n\"", ");\n        printf(", "\"     5.保存家谱.          \\n\"", ");\n        printf(", "\"     6.退出程序.          \\n\"", ");\n        printf(", "\"     请选择操作:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ":\n            Cre();\n            ", "break", ";\n        ", "case", " ", "2", ":\n            Crt(T);\n            ", "break", ";\n        ", "case", " ", "3", ":\n            Upd();\n            ", "break", ";\n        ", "case", " ", "4", ":\n            Sea(T);\n            ", "break", ";\n        ", "case", " ", "5", ":\n            Sav(T);\n            ", "break", ";\n        ", "case", " ", "6", ":\n            ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我看了一下你的删除函数&amp;#xff0c;发现了一些问题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\nstatus de(BiPTree T)\n{\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要删除的人的姓名:&amp;#34;&lt;/span&gt;);\n    getchar();\n    gets(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!loc(T, P, &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;)) \n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s不在该家谱中!请重新输入:&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n        gets(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (!P-&amp;gt;&lt;/span&gt;rchild)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (P-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;lchild &amp;#61;&amp;#61; P)\n            P-&amp;gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;lchild &amp;#61; NULL;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            P-&amp;gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;rchild &amp;#61; NULL;\n        free(P);\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (P-&amp;gt;&lt;/span&gt;rchild)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (P-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;lchild &amp;#61;&amp;#61; P)\n            P-&amp;gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;lchild&lt;/span&gt; &amp;#61; P-&amp;gt;&lt;/span&gt;rchild;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            P-&amp;gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parent&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;rchild&lt;/span&gt; &amp;#61; P-&amp;gt;&lt;/span&gt;rchild;\n        free(P);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;成员删除成功,按任一键继续!&amp;#34;&lt;/span&gt;);\n    getchar();\n    return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先你的gets(name)前面有个getchar()&amp;#xff1b;我估计问题出在这里&amp;#xff0c;估计是getchar()把你输入的字吃掉了一部分&amp;#xff0c;导致后面gets&amp;#xff08;name&amp;#xff09;的时候收到的字符不全&amp;#xff0c;所以建议你把这个getchar删掉&amp;#xff0c;当然我也没有看懂他能干什么&amp;#xff0c;哈哈&amp;#xff0c;然后我觉得你这个删除函数还是有点问题的&amp;#xff0c;你看&amp;#xff0c;loc 函数已经定位到了这个结点P&amp;#xff0c;然后你写的 if&amp;#xff08;&amp;#xff01;p-&amp;gt;rchild&amp;#xff09;这个那p要是没有右孩子就会执行里面的语句&amp;#xff0c;然后就判断p是他父节点的左孩子还是右孩子然后将他置空&amp;#xff0c;那p的下面的结点是不是都删除了&amp;#xff0c;还是说逻辑上是说如果这个人不在族谱里&amp;#xff0c;那他的孩子都不是族谱里的人&amp;#xff0c;是不是这个逻辑&amp;#xff0c;那要是照这个逻辑&amp;#xff0c;完全没有必要判断结点P有没有右孩子啊&amp;#xff0c;你直接让p的父节点的一个孩子置空&amp;#xff0c;然后释放p就ok了啊&amp;#xff08;当然&amp;#xff0c;最好的做法是你要将p下面的所有结点都释放掉&amp;#xff0c;不然会造成内存泄漏&amp;#xff09;&amp;#xff0c;还有你都是在判断右孩子&amp;#xff0c;那左孩子不用判断吗&amp;#xff0c;虽然我也不知道判断他的左右孩子有没有有啥用&amp;#xff0c;哈哈哈&amp;#xff0c;只是发表一下我个人的见解&amp;#xff0c;供参考&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["“删除函数”有点问题 总是运行不了 请问应该怎么修改呢？", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "\n```c\n\n", "#define _CRT_SECURE_NO_WARNINGS", "\n", "#include <stdio.h> ", "\n", "#include <stdlib.h> ", "\n", "#include <string.h> ", "\n", "#include<conio.h> ", "\ntypedef char TElemType;\ntypedef ", "int", " status;\ntypedef struct BiTPNode {\n    TElemType data[", "10", "];\n    struct BiTPNode* ", "parent", ", * lchild, * rchild; ", "//父亲及左右孩子指针", "\n}BiTPNode, * BiPTree;\nBiPTree P;\nBiPTree T;\n", "//家谱的创建", "\n", "int", " Cre()\n{\n    system(", "\"cls\"", ");\n    FILE* fp; ", "//声明指向文件的指针", "\n    char filename[", "40", "], str[", "10", "];\n    printf(", "\"请输入家谱名称:\"", ");\n    getchar();\n    gets(filename); ", "//输入家谱名称", "\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(filename, ", "\"w\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    printf(", "\"请输入家谱内容:\\n\"", ");\n    ", "while", " (strlen(gets(str)) > ", "0", ")\n    {\n        fputs(str, fp); ", "//向文件写入字符串", "\n        putc(", "'\\n'", ", fp);\n    }\n    fclose(fp); ", "//关闭文件", "\n    printf(", "\"按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\nstatus loc(BiPTree T, BiPTree P, TElemType name[", "10", "]) {\n    ", "if", " (T)\n    {\n        P = T;\n        ", "//字符串的比较", "\n        ", "if", " (!strcmp(name, T->data)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->lchild, P, name)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->rchild, P, name)) ", "return", " ", "1", ";\n    }\n    ", "else", "\n        ", "return", " ", "0", ";\n}\n", "//构造二叉树", "\nstatus inittree(BiPTree T)\n{\n    T = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "if", " (T)\n        ", "return", " ", "0", ";\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    ", "return", " ", "1", ";\n}\n", "//载入家谱", "\nstatus Crt(BiPTree  T)\n{\n    FILE* fp;\n    BiPTree Q, R, M, N;\n    char filename[", "40", "], name[", "10", "];\n    system(", "\"cls\"", "); ", "//清屏", "\n    R = (BiTPNode*)malloc(sizeof(BiTPNode)); ", "//分配存储空间", "\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    printf(", "\"请输入家谱名:\"", ");\n    getchar();\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    inittree(T);\n    fscanf(fp, ", "\"%s\"", ", name); ", "//从文件读入姓名", "\n    strcpy(T->data, name);\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    fclose(fp);\n    ", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fscanf(fp, ", "\"%s\"", ", name);\n    ", "while", " (!feof(fp))\n    {\n        ", "if", " (loc(T, P, name))\n        {\n            fscanf(fp, ", "\"%s\"", ", name);\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            strcpy(Q->data, name);\n            P->lchild = Q; ", "//构建孩子", "\n            Q->parent = P;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n            N = P;\n        }\n        ", "else", " ", "if", " (!loc(T, P, name))\n        {\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            R = N;\n            R = R->lchild;\n            ", "while", " (R) {\n                M = R;\n                R = R->rchild;\n            }\n            strcpy(Q->data, name);\n            M->rchild = Q;\n            Q->parent = M;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n        }\n        fscanf(fp, ", "\"%s\"", ", name);\n    }\n    printf(", "\"信息载入成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n", "//添加成员", "\nstatus in(BiPTree T)\n{\n    char father[", "10", "], name[", "10", "];\n    BiPTree Q, M;\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要添加到该家谱中的人的父亲姓名:\"", ");\n    getchar();\n    gets(father);\n    ", "while", " (!loc(T, P, father)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", father);\n        gets(father);\n    }\n    printf(", "\"请输入要添加到该家谱中的人的姓名:\"", ");\n    gets(name);\n    Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    strcpy(Q->data, name);\n    Q->lchild = ", "NULL", ";\n    Q->rchild = ", "NULL", ";\n    ", "if", " (!P->lchild) {\n        P->lchild = Q;\n        Q->parent = P;\n    }\n    ", "else", " {\n        P = P->lchild;\n        ", "while", " (P) {\n            M = P;\n            P = P->rchild;\n        }\n        M->rchild = Q;\n        Q->parent = M;\n    }\n    printf(", "\"成员添加成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n", "//删除成员", "\nstatus de(BiPTree T)\n{\n    char name[", "10", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要删除的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name)) \n    {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    ", "if", " (!P->rchild)\n    {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = ", "NULL", ";\n        ", "else", "\n            P->parent->rchild = ", "NULL", ";\n        free(P);\n    }\n    ", "else", " ", "if", " (P->rchild)\n    {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = P->rchild;\n        ", "else", "\n            P->parent->rchild = P->rchild;\n        free(P);\n    }\n    printf(", "\"成员删除成功,按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\nstatus Show(TElemType e[", "10", "]) {\n    printf(", "\"%s  \"", ", e);\n    ", "return", " ", "1", ";\n}\n", "//二叉树的遍历", "\nstatus pre(BiPTree T, status(*visit)(TElemType[", "10", "])) {\n    ", "if", " (T) {\n        ", "if", " ((*visit)(T->data))\n            ", "if", " (pre(T->lchild, visit))\n                ", "if", " (pre(T->rchild, visit)) ", "return", " ", "1", ";\n        ", "return", " ", "0", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n", "//家族成员查询", "\nstatus Sea(BiPTree T) {\n    char name[", "10", "];\n    BiPTree N;\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要查寻的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name))\n    {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s的父亲在该家谱中没有记载!\\n\"", ", P->data);\n    ", "else", "\n    {\n        ", "while", " (N->parent->rchild == N)\n            N = N->parent;\n        printf(", "\"%s的父亲是:%s\\n\"", ", P->data, N->parent->data);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", " ", "if", " (!P->rchild && P->parent->rchild != P)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", "\n    {\n        printf(", "\"%s的兄弟有:\\n\"", ", name);\n        ", "while", " (N->rchild) \n        {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        N = P;\n        ", "while", " (N->parent->rchild == N)\n        {\n            printf(", "\"%s \"", ", N->parent->data);\n            N = N->parent;\n        }\n        printf(", "\"\\n\"", ");\n    }\n    ", "if", " (P == T)\n        printf(", "\"%s的祖先在该家谱中没有记载!\\n\"", ", name);\n    ", "else", "\n        printf(", "\"%s的祖先是:%s\\n\"", ", name, T->data);\n    N = P;\n    ", "if", " (!P->lchild)\n    {\n        printf(", "\"%s没有孩子!\\n\"", ", name);\n        printf(", "\"%s没有后代\\n\"", ", name);\n    }\n    ", "else", " {\n        printf(", "\"%s的孩子有:\\n\"", ", name);\n        printf(", "\"%s \"", ", P->lchild->data);\n        N = N->lchild;\n        ", "while", " (N->rchild) \n        {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        printf(", "\"\\n\"", ");\n        printf(", "\"%s的后代有:\\n\"", ", name);\n        pre(P->lchild, Show);\n        printf(", "\"\\n\"", ");\n    }\n    printf(", "\"按任一键继续!\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n", "//文件的创建", "\nstatus write(BiPTree T, char filename[", "40", "]) \n{\n    FILE* fp;\n    ", "if", " ((fp = fopen(filename, ", "\"a+\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s文件创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fprintf(fp, ", "\"%s \"", ", T->data);\n    T = T->lchild;\n    ", "while", " (T) {\n        fprintf(fp, ", "\"%s \"", ", T->data);\n        T = T->rchild;\n    }\n    fprintf(fp, ", "\"\\n\"", "); ", "//输出", "\n    fclose(fp);\n    ", "return", " ", "1", ";\n}\nstatus prewrite(BiPTree T, status(*visit)(BiPTree, char[", "40", "]), char filename[", "40", "]) {\n    ", "if", " (T) \n    {\n        ", "if", " (T->lchild)\n            (*visit)(T, filename);\n        prewrite(T->lchild, visit, filename);\n        prewrite(T->rchild, visit, filename);\n        ", "return", " ", "1", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n\nstatus wrong()\n{\n    char a;\n    scanf(", "\"%c\"", ", &a);\n    printf(", "\"无此选项,请重新选择!(按任一键继续!)\"", ");\n    getchar();\n    ", "return", " ", "1", ";\n}\n", "//家谱的存储", "\nstatus Sav(BiPTree T) \n{\n    FILE* fp;\n    char filename[", "40", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入新的文件名:\"", ");\n    getchar();\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    prewrite(T, write, filename);\n    printf(", "\"%s家谱保存成功,按任一键继续!\"", ", filename);\n    getchar();\n    ", "return", " ", "1", ";\n}\n", "//修改家谱", "\nstatus Upd() {\n    system(", "\"cls\"", ");\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"   家族成员的添加与删除操作  \\n\"", ");\n        printf(", "\"      请选择           \\n\"", ");\n        printf(", "\"    1.添加成员.        \\n\"", ");\n        printf(", "\"    2.删除成员.        \\n\"", ");\n        printf(", "\"    3.返回上一级.      \\n\"", ");\n        printf(", "\"       请选择:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ": in(P); ", "break", ";\n        ", "case", " ", "2", ": de(P); ", "break", ";\n        ", "case", " ", "3", ": ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n", "int", " main()\n{\n    P = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"     家族关系查询系统     \\n\"", ");\n        printf(", "\"     具体操作如下         \\n\"", ");\n        printf(", "\"     1.创建家谱.          \\n\"", ");\n        printf(", "\"     2.载入家谱.          \\n\"", ");\n        printf(", "\"     3.修改家谱.          \\n\"", ");\n        printf(", "\"     4.查寻成员.          \\n\"", ");\n        printf(", "\"     5.保存家谱.          \\n\"", ");\n        printf(", "\"     6.退出程序.          \\n\"", ");\n        printf(", "\"     请选择操作:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ":\n            Cre();\n            ", "break", ";\n        ", "case", " ", "2", ":\n            Crt(P);\n            ", "break", ";\n        ", "case", " ", "3", ":\n            Upd();\n            ", "break", ";\n        ", "case", " ", "4", ":\n            Sea(P);\n            ", "break", ";\n        ", "case", " ", "5", ":\n            Sav(P);\n            ", "break", ";\n        ", "case", " ", "6", ":\n            ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n\n\n删除函数运行时，无论是输入文件里的哪个字都显示", "'不存在'", "\n删除不了我想要删除的那个成员 应该怎么修改呢？\n", "\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用getchar或gets方法吧&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["请问显示getch会出现问题是为什么啊", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "#define _CRT_SECURE_NO_WARNINGS", "\n", "#include <stdio.h> ", "\n", "#include <stdlib.h> ", "\n", "#include <string.h> ", "\n", "#include<conio.h> ", "\ntypedef char TElemType;\ntypedef ", "int", " status;\ntypedef struct BiTPNode {\n    TElemType data[", "10", "];\n    struct BiTPNode* ", "parent", ", * lchild, * rchild; ", "//父亲及左右孩子指针", "\n}BiTPNode, * BiPTree;\nBiPTree P;\nBiPTree T;\n\n", "//家谱的创建", "\n", "int", " Cre()\n{\n    system(", "\"cls\"", ");\n    FILE* fp; ", "//声明指向文件的指针", "\n    char filename[", "40", "], str[", "10", "];\n    printf(", "\"请输入家谱名称:\"", ");\n    getchar();\n    gets(filename); ", "//输入家谱名称", "\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(filename, ", "\"w\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    printf(", "\"请输入家谱内容:\\n\"", ");\n    ", "while", " (strlen(gets(str)) > ", "0", ")\n    {\n        fputs(str, fp); ", "//向文件写入字符串", "\n        putc(", "'\\n'", ", fp);\n    }\n    fclose(fp); ", "//关闭文件", "\n    printf(", "\"按任一键继续!\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\nstatus loc(BiPTree T, BiPTree* P, TElemType name[", "10", "]) {\n    ", "if", " (T)\n    {\n        P = T;\n        ", "//字符串的比较", "\n        ", "if", " (!strcmp(name, T->data)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->lchild, P, name)) ", "return", " ", "1", ";\n        ", "if", " (loc(T->rchild, P, name)) ", "return", " ", "1", ";\n    }\n    ", "else", "\n        ", "return", " ", "0", ";\n}\n\n", "//构造二叉树", "\nstatus inittree(BiPTree T) \n{\n    T = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "if", " (T)\n        ", "return", " ", "0", ";\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    ", "return", " ", "1", ";\n}\n\n\n", "//载入家谱", "\nstatus Crt(BiPTree  T) \n{\n    FILE* fp;\n    BiPTree Q, R, M, N;\n    char filename[", "40", "], name[", "10", "];\n    system(", "\"cls\"", "); ", "//清屏", "\n    R = (BiTPNode*)malloc(sizeof(BiTPNode)); ", "//分配存储空间", "\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    printf(", "\"请输入家谱名:\"", ");\n    getchar();\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    ", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    inittree(T);\n    fscanf(fp, ", "\"%s\"", ", name); ", "//从文件读入姓名", "\n    strcpy(T->data, name);\n    T->lchild = ", "NULL", ";\n    T->rchild = ", "NULL", ";\n    T->parent = ", "NULL", ";\n    fclose(fp);\n    ", "if", " ((fp = fopen(filename, ", "\"r\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%家谱打开失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fscanf(fp, ", "\"%s\"", ", name);\n    ", "while", " (!feof(fp)) {\n        ", "if", " (loc(T, P, name)) {\n            fscanf(fp, ", "\"%s\"", ", name);\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            strcpy(Q->data, name);\n            P->lchild = Q; ", "//构建孩子", "\n            Q->parent = P;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n            N = P;\n        }\n        ", "else", " ", "if", " (!loc(T, P, name)) {\n            Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n            R = N;\n            R = R->lchild;\n            ", "while", " (R) {\n                M = R;\n                R = R->rchild;\n            }\n            strcpy(Q->data, name);\n            M->rchild = Q;\n            Q->parent = M;\n            Q->lchild = ", "NULL", ";\n            Q->rchild = ", "NULL", ";\n        }\n        fscanf(fp, ", "\"%s\"", ", name);\n    }\n    printf(", "\"信息载入成功,按任一键继续!\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\n", "//添加成员", "\nstatus in(BiPTree* T)\n{\n    char father[", "10", "], name[", "10", "];\n    BiPTree Q, M;\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要添加到该家谱中的人的父亲姓名:\"", ");\n    getchar();\n    gets(father);\n    ", "while", " (!loc(T, P, father)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", father);\n        gets(father);\n    }\n    printf(", "\"请输入要添加到该家谱中的人的姓名:\"", ");\n    gets(name);\n    Q = (BiTPNode*)malloc(sizeof(BiTPNode));\n    M = (BiTPNode*)malloc(sizeof(BiTPNode));\n    strcpy(Q->data, name);\n    Q->lchild = ", "NULL", ";\n    Q->rchild = ", "NULL", ";\n    ", "if", " (!P->lchild) {\n        P->lchild = Q;\n        Q->parent = P;\n    }\n    ", "else", " {\n        P = P->lchild;\n        ", "while", " (P) {\n            M = P;\n            P = P->rchild;\n        }\n        M->rchild = Q;\n        Q->parent = M;\n    }\n    printf(", "\"成员添加成功,按任一键继续!\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\n\n", "//删除成员", "\nstatus de(BiPTree* T) {\n    char name[", "10", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要删除的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    ", "if", " (!P->rchild) {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = ", "NULL", ";\n        ", "else", "\n            P->parent->rchild = ", "NULL", ";\n        free(P);\n    }\n    ", "else", " ", "if", " (P->rchild) {\n        ", "if", " (P->parent->lchild == P)\n            P->parent->lchild = P->rchild;\n        ", "else", "\n            P->parent->rchild = P->rchild;\n        free(P);\n    }\n    printf(", "\"成员删除成功,按任一键继续!\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\n\nstatus Show(TElemType e[", "10", "]) {\n    printf(", "\"%s  \"", ", e);\n    ", "return", " ", "1", ";\n}\n\n\n", "//二叉树的遍历", "\nstatus pre(BiPTree T, status(*visit)(TElemType[", "10", "])) {\n    ", "if", " (T) {\n        ", "if", " ((*visit)(T->data))\n            ", "if", " (pre(T->lchild, visit))\n                ", "if", " (pre(T->rchild, visit)) ", "return", " ", "1", ";\n        ", "return", " ", "0", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n\n\n", "//家族成员查询", "\nstatus Sea(BiPTree T) {\n    char name[", "10", "];\n    BiPTree N;\n    N = (BiTPNode*)malloc(sizeof(BiTPNode));\n    system(", "\"cls\"", ");\n    printf(", "\"请输入要查寻的人的姓名:\"", ");\n    getchar();\n    gets(name);\n    ", "while", " (!loc(T, P, name)) {\n        printf(", "\"%s不在该家谱中!请重新输入:\"", ", name);\n        gets(name);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s的父亲在该家谱中没有记载!\\n\"", ", P->data);\n    ", "else", " {\n        ", "while", " (N->parent->rchild == N)\n            N = N->parent;\n        printf(", "\"%s的父亲是:%s\\n\"", ", P->data, N->parent->data);\n    }\n    N = P;\n    ", "if", " (P == T)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", " ", "if", " (!P->rchild && P->parent->rchild != P)\n        printf(", "\"%s没有兄弟!\\n\"", ", P->data);\n    ", "else", " {\n        printf(", "\"%s的兄弟有:\\n\"", ", name);\n        ", "while", " (N->rchild) {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        N = P;\n        ", "while", " (N->parent->rchild == N) {\n            printf(", "\"%s \"", ", N->parent->data);\n            N = N->parent;\n        }\n        printf(", "\"\\n\"", ");\n    }\n    ", "if", " (P == T)\n        printf(", "\"%s的祖先在该家谱中没有记载!\\n\"", ", name);\n    ", "else", "\n        printf(", "\"%s的祖先是:%s\\n\"", ", name, T->data);\n    N = P;\n    ", "if", " (!P->lchild) {\n        printf(", "\"%s没有孩子!\\n\"", ", name);\n        printf(", "\"%s没有后代\\n\"", ", name);\n    }\n    ", "else", " {\n        printf(", "\"%s的孩子有:\\n\"", ", name);\n        printf(", "\"%s \"", ", P->lchild->data);\n        N = N->lchild;\n        ", "while", " (N->rchild) {\n            printf(", "\"%s \"", ", N->rchild->data);\n            N = N->rchild;\n        }\n        printf(", "\"\\n\"", ");\n        printf(", "\"%s的后代有:\\n\"", ", name);\n        pre(P->lchild, Show);\n        printf(", "\"\\n\"", ");\n    }\n    printf(", "\"按任一键继续!\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\n", "//文件的创建", "\nstatus write(BiPTree T, char filename[", "40", "]) {\n    FILE* fp;\n    ", "if", " ((fp = fopen(filename, ", "\"a+\"", ")) == ", "NULL", ")\n    {\n        printf(", "\"%s文件创建失败!\\n\"", ", filename);\n        ", "return", " ", "0", ";\n    }\n    fprintf(fp, ", "\"%s \"", ", T->data);\n    T = T->lchild;\n    ", "while", " (T) {\n        fprintf(fp, ", "\"%s \"", ", T->data);\n        T = T->rchild;\n    }\n    fprintf(fp, ", "\"\\n\"", "); ", "//输出", "\n    fclose(fp);\n    ", "return", " ", "1", ";\n}\n\nstatus prewrite(BiPTree T, status(*visit)(BiPTree, char[", "40", "]), char filename[", "40", "]) {\n    ", "if", " (T) {\n        ", "if", " (T->lchild)\n            (*visit)(T, filename);\n        prewrite(T->lchild, visit, filename);\n        prewrite(T->rchild, visit, filename);\n        ", "return", " ", "1", ";\n    }\n    ", "else", " ", "return", " ", "1", ";\n}\n\n\n\n\nstatus wrong()\n{\n    char a;\n    scanf(", "\"%c\"", ", &a);\n    printf(", "\"无此选项,请重新选择!(按任一键继续!)\"", ");\n    getch();\n    ", "return", " ", "1", ";\n}\n\n\n", "//家谱的存储", "\nstatus Sav(BiPTree T) {\n    FILE* fp;\n    char filename[", "40", "];\n    system(", "\"cls\"", ");\n    printf(", "\"请输入新的文件名:\"", ");\n    getchar();\n    gets(filename);\n    ", "while", " (filename[", "0", "] == ", "NULL", ")\n    {\n        printf(", "\"家谱名不能为空,请重新输入:\"", ");\n        gets(filename);\n    }\n    prewrite(T, write, filename);\n    printf(", "\"%s家谱保存成功,按任一键继续!\"", ", filename);\n    getch();\n    ", "return", " ", "1", ";\n}\n\n", "//修改家谱", "\nstatus Upd() {\n    system(", "\"cls\"", ");\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"   家族成员的添加与删除操作  \\n\"", ");\n        printf(", "\"      请选择           \\n\"", ");\n        printf(", "\"    1.添加成员.        \\n\"", ");\n        printf(", "\"    2.删除成员.        \\n\"", ");\n        printf(", "\"    3.返回上一级.      \\n\"", ");\n        printf(", "\"       请选择:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ": in(T); ", "break", ";\n        ", "case", " ", "2", ": de(T); ", "break", ";\n        ", "case", " ", "3", ": ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n\n\nmain()\n{\n    P = (BiTPNode*)malloc(sizeof(BiTPNode));\n    ", "int", " xz;\n    ", "while", " (", "1", ")\n    {\n        system(", "\"cls\"", ");\n        printf(", "\"\\n\\n\\n\\n\"", ");\n        printf(", "\"     家族关系查询系统     \\n\"", ");\n        printf(", "\"     具体操作如下         \\n\"", ");\n        printf(", "\"     1.创建家谱.          \\n\"", ");\n        printf(", "\"     2.载入家谱.          \\n\"", ");\n        printf(", "\"     3.修改家谱.          \\n\"", ");\n        printf(", "\"     4.查寻成员.          \\n\"", ");\n        printf(", "\"     5.保存家谱.          \\n\"", ");\n        printf(", "\"     6.退出程序.          \\n\"", ");\n        printf(", "\"     请选择操作:\"", ");\n        scanf(", "\"%d\"", ", &xz);\n        ", "switch", " (xz)\n        {\n        ", "case", " ", "1", ":\n            Cre();\n            ", "break", ";\n        ", "case", " ", "2", ":\n            Crt(T);\n            ", "break", ";\n        ", "case", " ", "3", ":\n            Upd();\n            ", "break", ";\n        ", "case", " ", "4", ":\n            Sea(T);\n            ", "break", ";\n        ", "case", " ", "5", ":\n            Sav(T);\n            ", "break", ";\n        ", "case", " ", "6", ":\n            ", "return", " ", "0", ";\n        ", "default", ":\n            wrong();\n            ", "break", ";\n        }\n    }\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "严重性    代码    说明    项目    文件    行    禁止显示状态\n错误    C4996    ", "'getch'", ": The POSIX ", "name", " ", "for", " this item ", "is", " ", "deprecated", ". Instead, use the ISO C ", "and", " C++ conformant ", "name", ": _getch. See online help ", "for", " details.    hello    D:\\VS code\\C语言学习\\hello\\hello\\源", "2", ".c    ", "42", "    \n错误    C4996    ", "'getch'", ": The POSIX ", "name", " ", "for", " this item ", "is", " ", "deprecated", ". Instead, use the ISO C ", "and", " C++ conformant ", "name", ": _getch. See online help ", "for", " details.    hello    D:\\VS code\\C语言学习\\hello\\hello\\源", "2", ".c    ", "136", "    \n错误    C4996    ", "'getch'", ": The POSIX ", "name", " ", "for", " this item ", "is", " ", "deprecated", ". Instead, use the ISO C ", "and", " C++ conformant ", "name", ": _getch. See online help ", "for", " details.    hello    D:\\VS code\\C语言学习\\hello\\hello\\源", "2", ".c    ", "174", "    \n", "205", " ", "290", " ", "332", " ", "352", "也都是这样\n\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;AX里面没有找到MetadataServiceProvider()&amp;#xff0c;你从哪里找到的这种用法&amp;#xff1f;&lt;br /&gt;试试用MetadataProviderClient()。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c#\"&gt;var metadataProvider &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new MetadataProviderClient()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nAxTableMetadata[] tables &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; metadataProvider.GetTableMetadata()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "名字空间", "Question": [",NET CORE获取AX Dynamic中的所有数据表的时候缺少引用", ["我编写了一段代码读取Ax Dynamics 365中的所有数据表,在使用一个类的时候抛出了异常", "\n", "CS0246未能找到类型或命名空间名称“MetadataServiceProvider”（是否缺少", "using", "指令或程序集引用？）\n以下是代码:", "\n ", "public", " ", "static", " List<AxTable> GetAllTables()\n        {\n            ", "var", " tables = ", "new", " ", "List", "<AxTable>();\n            ", "try", "\n            {\n                ", "using", " (", "var", " provider = ", "new", " ", "MetadataServiceProvider", "())\n                {\n                    ", "var", " axTables = provider.MetaModelService.GetTables();\n\n                    foreach (", "var", " axTable ", "in", " axTables)\n                    {\n                        tables.Add(axTable);\n                    }\n                }\n            }\n            ", "catch", " (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n\n            ", "return", " tables;\n        }\n提示我缺少引用，但是这个dll我又没有不知道在哪里下\n![img](https:", "//img-mid.csdnimg.cn/release/", "static", "/image/mid/ask/", "025260853186157.", "png ", "\"#left\"", ")\n\n![img](https:", "//img-mid.csdnimg.cn/release/", "static", "/image/mid/ask/", "190011853186115.", "png ", "\"#left\"", ")\n\n也可以提供其他的方式获取数据表\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;引用new bing部分回答作答&amp;#xff1a;&lt;br /&gt;以下是可以实现倒立树形式显示二叉排序树的代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void &lt;span class=\"hljs-constructor\"&gt;InvertShow(BSTree T, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;level&lt;/span&gt;)&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (T&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;NULL) return;\n\n    &lt;span class=\"hljs-constructor\"&gt;InvertShow(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;rchild&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;level&lt;/span&gt; &amp;#43; 1)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; level; &amp;#43;&amp;#43;i) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;    &amp;#34;&lt;/span&gt;);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, T-&amp;gt;key);\n    &lt;span class=\"hljs-constructor\"&gt;InvertShow(T-&amp;gt;&lt;span class=\"hljs-params\"&gt;lchild&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;level&lt;/span&gt; &amp;#43; 1)&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个函数的功能是将二叉排序树倒过来&amp;#xff0c;并以树形式打印出来。函数的参数T表示二叉排序树的根节点&amp;#xff0c;level表示节点所在的深度&amp;#xff0c;根节点的深度为1&amp;#xff0c;左儿子的深度为父节点深度加1&amp;#xff0c;右儿子的深度也为父节点深度加1。&lt;br /&gt;函数的实现原理是先遍历右子树&amp;#xff0c;然后在屏幕上打印节点的值&amp;#xff0c;最后遍历左子树。在打印节点的值之前&amp;#xff0c;需要先打印若干个空格&amp;#xff0c;其数量为该节点的深度乘以一个固定的值&amp;#xff08;例如4&amp;#xff09;。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;由于本代码使用了printf函数来输出结果&amp;#xff0c;因此需要包含stdio.h头文件。&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["关于#c++#的问题，如何解决？", ["除嵌套括号方式显示二叉排序树以外，增加倒立的树的形式显示。下面的代码已经有嵌套括号方式，求补充“倒立的树的形式显示二叉排序树”代码", "\n", "#", "include", " <math.h>\n\n#", "include", " <stdio.h>\n#", "include", " <stdlib.h>\n#", "include", " <iostream>    ", "//引用头文件，不需要声明名字空间", "\n#define ENDKEY ", "0", "\nusing namespace std;\ntypedef ", "int", " KeyType;\n\ntypedef ", "struct", "  node\n{\n    KeyType  key ; ", "/*关键字的值*/", "\n    ", "struct", " node  *lchild,*rchild;", "/*左右指针*/", "\n}BSTNode, *BSTree;\n\n\n\nvoid ", "InsertBST(BSTree ", "*", "bst", ", KeyType ", "key", ")", "\n", "/*若在二叉排序树中不存在关键字等于key的元素，插入该元素*/", "\n{ \n    BSTree s;\n    ", "if", " (*bst", " == ", "NULL)", "/*递归结束条件*/", "\n    {\n        s=(BSTree)malloc(sizeof(BSTNode));", "/*申请新的结点s*/", "\n        s-> key=key;\n        s->lchild=NULL; \n        s->rchild=NULL;\n        *bst=s;\n    }\n    ", "else", " \n        ", "if", " (key < (*bst)->key)\n            ", "InsertBST(&((", "*", "bst", ")", "->lchild), key);", "/*将s插入左子树*/", "\n        ", "else", " \n            ", "if", " (key > (*bst)->key)\n                ", "InsertBST(&((", "*", "bst", ")", "->rchild), key); ", "/*将s插入右子树*/", "\n}\n\nvoid  ", "CreateBST(BSTree  ", "*", "bst", ")", "\n", "/*从键盘输入元素的值，创建相应的二叉排序树*/", "\n{ \n    KeyType key;\n    *bst=NULL;\n    scanf(", "\"%d\"", ", &key);\n    ", "while", " (key!=ENDKEY)   ", "/*ENDKEY为自定义常量*/", "\n    {\n        ", "InsertBST(", "bst", ", ", "key", ")", ";\n        scanf(", "\"%d\"", ", &key);\n    }\n}\n\nvoid  ", "PreOrder(BSTree ", "root", ")", " \n", "/*先序遍历二叉树, root为指向二叉树根结点的指针*/", "\n{\n    ", "if", " (root!=NULL)\n    {\n        printf(", "\"%d  \"", ",root->key);  ", "/*输出结点*/", "\n        ", "PreOrder(", "root", "->", "lchild", ")", ";  ", "/*先序遍历左子树*/", "\n        ", "PreOrder(", "root", "->", "rchild", ")", ";  ", "/*先序遍历右子树*/", "\n    }\n}\n\n\n\n", "//查找的递归算法", "\nBSTNode *", "SearchBST(BSTree ", "root", ", ", "int", " ", "k", ")", "{\n    ", "if", "(!root){\n        printf(", "\"查找失败\"", ");\n    }\n    ", "else", "{\n        ", "if", "(root->key", " == ", "k){\n            ", "//return root;", "\n            printf(", "\"%d  \"", ",root->key);\n        }\n        ", "else", " ", "if", "(k < root->key){\n            printf(", "\"%d  \"", ",root->key);\n            ", "SearchBST(", "root", "->", "lchild", ", ", "k", ")", ";\n        }\n        ", "else", " ", "if", "(k > root->key){\n            printf(", "\"%d  \"", ",root->key);\n            ", "SearchBST(", "root", "->", "rchild", ", ", "k", ")", ";\n        }\n    }\n    \n}\n", "/*\n//查找的非递归算法            (ps:适用于查找存在于该二叉排序树的结点)\nBSTNode *SearchBST(BSTree root, int k){\n    BSTNode *p = root;\n    while(p!=NULL && p->key!=k){\n        printf(\"%d\",p->key);\n        if(k < p->key){\n            p = p->lchild;\n            //printf(\"%d\",p->key);\n        }\n        else{\n            p = p->rchild;\n            //printf(\"%d\",p->key);\n        }\n        \n    }\n    \n    printf(\"%d\",p->key);\n}\n\n*/", "\n", "//计算数的高度", "\n", "int", " height(BSTree T)", "//将左子树和右子树的高度比大小，大的那边子树的高度加1，就是数的高度", "\n{\n    ", "int", " max;\n    ", "if", "(T==NULL)", "//一定要设置好这样的递归出口", "\n        return ", "0", ";\n    ", "else", "\n    {\n        ", "int", " left_h=height(T->lchild);\n        ", "int", " right_h=height(T->rchild);\n        ", "int", " max=left_h;\n        ", "if", "(right_h>max)\n            max=right_h;\n        return max+", "1", ";\n    }\n}\n\n", "//二叉树的的嵌套括号表示：", "\nvoid ", "Show(BSTree T)", "\n{\n    ", "if", "(T)\n    {\n        cout<<T->key;       ", "//为了将c++和c区分开，规定c++的头文件都没有后缀.h，当时用iostream的时候（预定义的对象 cin 和cout是 iostream 类的一个实例），就需要用namespace std来配合，才能使用cin或cout的这种标识符。", "\n        ", "if", "(T->lchild", "||", "T", "->rchild)\n        {\n            cout<<\"(\";\n            ", "Show(T->", "lchild", ")", ";\n            cout<<\",\";\n            ", "Show(T->", "rchild", ")", ";\n            cout<<\")\";\n        }\n    }\n}\n\nvoid ", "Succlength(BSTree T,", "int", " &", "sumlen", ",", "int", " &", "m", ",", "int", " ", "level", ")", " ", "/", "/", "求查找成功总的比较次数sumlen和情况数m\n{\n    ", "if", " (", "T", "==", "NULL", ") return;    ", "/", "/", "空树直接返回\n    m", "++", ";\n    sumlen+=level;\n    ", "Succlength(T->", "lchild", ",", "sumlen", ",", "m", ",", "level", "+1)", ";\n    ", "Succlength(T->", "rchild", ",", "sumlen", ",", "m", ",", "level", "+1)", ";\n    \n}\ndouble pr", "Succlength(BSTree T)", "    ", "/", "/", "输出查找成功总的比较次数sumlen\n{\n    ", "int", " sumlen=0,m=0;\n    ", "Succlength(T,", "sumlen", ",", "m", ",1)", ";\n    printf(\"查找成功的比较次数：%d\\n\",sumlen);\n}\ndouble ", "ASLsucc(BSTree T)", "    ", "/", "/", "求查找成功情况下的平均查找长度\n{\n    ", "int", " sumlen=0,m=0;\n    ", "Succlength(T,", "sumlen", ",", "m", ",1)", ";\n    return sumlen", "*", "1.0", "/", "m;\n}\n\n\nvoid ", "Unsucclength(BSTree T,", "int", " &", "sumlen", ",", "int", " &", "m", ",", "int", " ", "level", ")", " ", "/", "/", "求查找失败总的比较次数sumlen和情况数m\n{\n    ", "if", " (", "T", "==", "NULL", ")        ", "/", "/", "空指针对应外部节点\n    {\n        m", "++", ";\n        sumlen+=level-1;\n        return;\n    }\n    ", "Unsucclength(T->", "lchild", ",", "sumlen", ",", "m", ",", "level", "+1)", ";\n    ", "Unsucclength(T->", "rchild", ",", "sumlen", ",", "m", ",", "level", "+1)", ";\n}\ndouble pr", "Unsucclength(BSTree T)", "    ", "/", "/", "输出查找失败比较次数 sumlen\n{\n    ", "int", " sumlen=0,m=0;\n    ", "Unsucclength(T,", "sumlen", ",", "m", ",1)", ";\n    printf(\"查找失败的比较次数：%d\\n\",sumlen);\n}\ndouble ", "ASLunsucc(BSTree T)", "    ", "/", "/", "求查找失败情况下的平均查找长度\n{\n    ", "int", " sumlen=0,m=0;\n    ", "Unsucclength(T,", "sumlen", ",", "m", ",1)", ";\n    return sumlen", "*", "1.0", "/", "m;\n}\n\n\n", "int", " main()\n{\n    ", "BSTree", " ", "T", ";\n    ", "int", " k;\n    ", "BSTree", " result;\n    printf(\"建立二叉排序树，请输入序列:\\n\");\n    ", "CreateBST(&T)", ";\n    printf(\"先序遍历输出序列为:\");\n    ", "PreOrder(T)", ";\n    printf(\"\\n请输入要查找的元素:\");\n    fflush(stdin);", "/", "/", "fflush (stdin)是一个计算机专业术语，功能是清空输入 缓冲区 ，通常是为了确保不影响后面的数据读取（例如在读完一个 字符串 后紧接着又要读取一个字符，此时应该先执行fflush (stdin);。\n    scanf(\"%d\",&k);\n    printf(\"\\n递归或非递归实现二叉排序树的查找并给出查找路径：\");\n    ", "SearchBST(T, ", "k", ")", ";\n    \n    printf(\"\\n二叉树的的嵌套括号表示：\");\n    ", "Show(T)", ";\n    \n    \n    \n    ", "int", " h;\n    h=height(", "T", ");\n    printf(\"\\n该二叉排序树的高度为：%d\\n\",h);\n    \n    ", "int", " sumlen=0,m=0;\n    pr", "Succlength(T)", ";\n    pr", "Unsucclength(T)", ";\n    printf(\"(3)", "ASLsucc", "=%g\\n\",", "ASLsucc(T)", ");     ", "/", "/", "ASL", " = 1", "/", "6 ", "*", " (1+2+2+3+3+3) = 14", "/", "6\n    printf(\"(4)", "ASLunsucc", "=%g\\n\",", "ASLunsucc(T)", ");\n    \n    ", "/", "/", "{45，24，53，12，37，93} 和 {12，24，37，45，53，93}\n    \n    \n    \n    \n    \n    \n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用memset将 SQLCHAR str1[10], str2[12], str3[10],str4[15]先填个0&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["C++连接SQLserver", ["自学C++连接SQL server ，在进行select时输出的时间是乱码，有人知道是什么原因吗？", "还有一个问题，就是我对数据库进行update的时候总是显示更新失败，看了很久都找不到原因", "\n", "\n", "\n", "\n", "#undef UNICODE\n#undef _UNICODE\n#", "include", "<", "Windows", ".", "h>\n#", "include", " <sql.h> \n#", "include", " <sqlext.h> \n#", "include", "<sqltypes.h>\n#", "include", " <iostream>\n#", "include", "<", "string", ">\n#", "include", " <iomanip>\nusing namespace std;\n\n", "//定义全局变量", "\nSQLRETURN ret = NULL;", "//返回信息", "\nSQLHENV henv = NULL;", "//环境句柄", "\nSQLHDBC hdbc = NULL;", "//连接句柄", "\nSQLHSTMT hstmt = NULL;", "//语句句柄", "\n\n", "//释放空间", "\nvoid free", "()", "\n{\n    ", "SQLFreeHandle(SQL_HANDLE_STMT, ", "hstmt", ")", ";", "//释放语句", "\n    ", "SQLFreeHandle(SQL_HANDLE_DBC, ", "hdbc", ")", ";", "//释放连接", "\n    ", "SQLFreeHandle(SQL_HANDLE_ENV, ", "henv", ")", ";", "//释放环境", "\n}\n\n", "//连接数据库", "\nvoid connect", "()", "//数据库连接函数", "\n{\n    ", "SQLAllocHandle(SQL_HANDLE_ENV, NULL, &", "henv", ")", ";", "//申请环境", "\n    ", "SQLSetEnvAttr(", "henv", ", SQL_ATTR_ODBC_VERSION, (SQLPOINTER)", "SQL_OV_ODBC3, SQL_IS_INTEGER);", "//设置环境", "\n    ", "SQLAllocHandle(SQL_HANDLE_DBC, ", "henv", ", &", "hdbc", ")", ";", "//申请数据库连接", "\n    ret = ", "SQLConnect(", "hdbc", ", (SQLTCHAR", "*", ")", "(", "\"Csql\"", "), SQL_NTS, (SQLTCHAR*)(", "\"sa\"", "), SQL_NTS, (SQLTCHAR*)(", "\"sa\"", "), SQL_NTS);\n    ", "if", " ((ret", " == ", "SQL_SUCCESS)", " || ", "(ret", " == ", "SQL_SUCCESS_WITH_INFO))\n    {\n        cout << ", "\"数据库连接成功!\"", " << endl;\n    }\n    ", "else", "\n    {\n        cout << ", "\"数据库连接失败！\"", " << endl;\n    }\n}\n\n\n\n", "//更新收入表记录--有问题“无法更新数据”", "\nvoid update", "_income_money()", "\n{\n    cout << ", "\"请输入需要修改的记录编号；\"", " << endl;\n    ", "//string in_no;", "\n    ", "//cin >> in_no;", "\n   ", "string", " in_money;\n    cout << ", "\"请输入需要修改的金额：\"", " << endl;\n    cin >> in_money;\n        ret = ", "SQLAllocHandle(SQL_HANDLE_STMT, ", "hdbc", ", &", "hstmt", ")", ";", "//申请句柄", "\n        ", "string", " str1 = ", "\"use money\"", ";\n        ", "string", " str2 = ", "\"update income set income_money = ' where income_no= 2\"", ";\n       ", "/* cout << \"请输入需要修改的记录编号；\" << endl;\n        string in_no;\n        cin >> in_no;\n        string in_money;\n        cout << \"请输入需要修改的金额：\" << endl;\n        cin >> in_money;*/", "\n        ", "string", " str3 = str2 + in_money + ", "\"',\"", ";", "//+ in_no + \"'\";", "\n        ret = ", "SQLExecDirect(", "hstmt", ", (SQLCHAR", "*", ")", "str1.c", "_str()", ", SQL_NTS);\n        ret = ", "SQLExecDirect(", "hstmt", ", (SQLCHAR", "*", ")", "str2.c", "_str()", ", SQL_NTS);\n        ", "if", " (ret", " == ", "SQL_SUCCESS", " || ", "ret", " == ", "SQL_SUCCESS_WITH_INFO)\n            cout << ", "\"更新记录成功！\"", " << endl;\n        ", "else", "\n            cout << ", "\"更新记录失败！\"", " << endl;\n    free", "()", ";\n}\n\n", "//查找收入表记录", "\nvoid select", "_income()", "\n{\n    ret = ", "SQLAllocHandle(SQL_HANDLE_STMT, ", "hdbc", ", &", "hstmt", ")", ";", "//申请句柄", "\n    ", "string", " str1 = ", "\"use money\"", ";\n    ", "string", " str2 = ", "\"select income_no,income_description,income_money, CONVERT(varchar,GETDATE(),23) from income where income_no='\"", ";\n    cout << ", "\"请输入需要查找的记录编号：\"", " << endl;\n    ", "string", " in_no;\n    cin >> in_no;\n    ", "string", " str3 = str2 + in_no + ", "\"'\"", ";\n    ret = ", "SQLExecDirect(", "hstmt", ", (SQLCHAR", "*", ")", "str1.c", "_str()", ", SQL_NTS);\n    ret = ", "SQLExecDirect(", "hstmt", ", (SQLCHAR", "*", ")", "str3.c", "_str()", ", SQL_NTS);\n    ", "if", " (ret", " == ", "SQL_SUCCESS", " || ", "ret", " == ", "SQL_SUCCESS_WITH_INFO)\n    {\n        SQLCHAR str1", "[", "10", "]", ", str2", "[", "12", "]", ", str3", "[", "10", "]", ",str4", "[", "15", "]", ";", "//用来存放从数据库获取的列信息，你有几列就定义几个变量", "\n        SQLLEN len_str1, len_str2, len_str3,len_str4;", "//字符串对应长度，你有几列就定义几个变量", "\n        ", "//printf(\"%s\\t%s\\t%s\\n\", \"书籍编号\", \"书籍名称\", \"数量\");", "\n        cout << ", "\"编号\"", " << ", "\"     \"", " << ", "\"描述\"", " << ", "\"     \"", " << ", "\"金额\"", " << ", "\"     \"", " <<", "\"时间\"", " << endl;\n        ", "while", " (", "SQLFetch(", "hstmt", ")", " != SQL_NO_DATA)\n        {\n            ", "//你有几列就调用几次SQLGetData函数，注意找规律哦", "\n            ", "SQLGetData(", "hstmt", ", 1, SQL_C_CHAR, ", "str1", ", 10, &", "len_str1", ")", ";   ", "//获取第一列数据", "\n            ", "SQLGetData(", "hstmt", ", 2, SQL_C_CHAR, ", "str2", ", 12, &", "len_str2", ")", ";   ", "//获取第二列数据", "\n            ", "SQLGetData(", "hstmt", ", 3, SQL_C_CHAR, ", "str3", ", 10, &", "len_str3", ")", ";  \n            ", "SQLGetData(", "hstmt", ", 3, SQL_C_CHAR, ", "str4", ", 15, &", "len_str4", ")", "; ", "//获取第三列数据", "\n            printf(", "\"%s\\t%s\\t%s\\t%s\\n\"", ", str1, str2, str3,str4);\n        }\n    }\n    free", "()", ";\n}\n\n\n", "int", " main", "()", "\n{\n    connect", "()", "；\n    update", "_income_money()", ";\n    select", "_income()", ";\n    return ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你别放C盘&amp;#xff0c;C盘是系统盘&amp;#xff0c;容易遇到权限问题。&lt;br /&gt;另外你文件如果不存在的话&amp;#xff0c;你那个53行getFilebyMd5返回的files不是null?如果对象是null的话&amp;#xff0c;你判断id没用&amp;#xff0c;会出现空指针&lt;br /&gt;if (files.getId()!&amp;#61;null)&lt;br /&gt;上面这句你改成 if (files!&amp;#61;null)&lt;/p&gt;", "Konwledge_Point": "名字空间", "Question": ["为什么我从数据库获取的数据为null？", ["为什么我从数据库中获取的数据为null,然后判断数据是不是为空采取两种措施但是却判断不了，请问是什么问题了。", "\n", "package com.example.springboot.controller;\n\nimport cn.hutool.core.io.FileUtil;\nimport cn.hutool.core.util.IdUtil;\nimport cn.hutool.core.util.StrUtil;\nimport cn.hutool.crypto.SecureUtil;\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.example.springboot.common.Result;\nimport com.example.springboot.entity.Files;\nimport com.example.springboot.entity.User;\nimport com.example.springboot.mapper.FilesMapper;\nimport com.example.springboot.utils.TokenUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.poi.util.StringUtil;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.annotation.Resource;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URLEncoder;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n", "//用来上传文件", "\n@RestController\n@", "RequestMapping(", "\"/file\"", ")", "\npublic ", "class", " FileController {\n    @", "Value(", "\"${files.upload.path}\"", ")", "\n    ", "private", " String filepath;\n    @Resource\n    ", "private", " FilesMapper fileMapper;\n    @", "PostMapping(", "\"/upload\"", ")", "\n    public String upload(@RequestParam MultipartFile file) throws IOException {\n    String originalFilename= file.get", "OriginalFilename()", ";", "//获取文件原始名称", "\n    String ", "type", "=   ", "FileUtil", ".", "ext", "Name(", "originalFilename", ")", ";", "//获取文件类型", "\n        long size=file.get", "Size()", ";\n        ", "//先存储到磁盘", "\n        File file1 = ", "new", " ", "File(", "filepath", ")", ";\n        ", "if", " (!file1.exists", "()", "){\n            file1.mkdirs", "()", ";", "//判断配置文件中的路径是否存在不存在重新创建路径", "\n        }\n        String uid= ", "IdUtil", ".", "fast", "UUID()", ";", "//创建文件标识位", "\n         String uuid=uid+ StrUtil.DOT+", "type", ";\n        String url=", "\"http://localhost:9090/file/\"", "+uuid;\n        String md5= ", "SecureUtil", ".", "md5(file.get", "InputStream()", ");", "//获取唯一标识符md5,用来判断上传文件是否重复以防止上传同一文件节省空间", "\n        File file2=   ", "new", " ", "File(", "filepath", "+", "uuid", ")", ";\n        Files  files= get", "FilebyMd5(", "md5", ")", ";\n        Files saveFile= ", "new", " ", "Files()", ";\n        String name=files.get", "Name()", ";\n        ", "if", " (files.get", "Id()", "!=null)", "//当不文件存在时", "\n        {url=files.get", "Url()", ";\n        ", "int", " compare=", "StrUtil", ".", "compare", "IgnoreCase(", "name", ",", "originalFilename", ",", "false", ")", ";\n        ", "if", " (compare!=", "0", ")", "//当要上传的文件名和数据库里的文件名不一样但md5相同时只存数据不上传到磁盘", "\n            {saveFile.set", "Name(", "originalFilename", ")", ";\n                saveFile.set", "Type(", "type", ")", ";\n                saveFile.set", "Size(", "size", "/", "1024)", ";\n                saveFile.set", "Url(", "url", ")", ";\n                saveFile.set", "Md5(", "md5", ")", ";\n                fileMapper.insert(saveFile);\n                return url;\n            }\n            ", "else", "{\n                return url;\n            }\n        }", "else", " {\n            ", "//上传文件到磁盘，并上传信息到数据库", "\n            file.transfer", "To(", "file2", ")", ";\n            ", "System", ".", "out.println(", "\"傻逼\"", ");\n            url = ", "\"http://localhost:9090/file/\"", " + uuid;\n            saveFile.set", "Name(", "originalFilename", ")", ";\n            saveFile.set", "Type(", "type", ")", ";\n            saveFile.set", "Size(", "size", " ", "/", " 1024)", ";\n            saveFile.set", "Url(", "url", ")", ";\n            saveFile.set", "Md5(", "md5", ")", ";\n            fileMapper.insert(saveFile);\n            return url;\n        }\n        ", "//将文件存储到数据库中", "\n    }}\n\n", "\n", "错误是:", "\n", "2023", "-", "03", "-", "25", " ", "20", ":", "47", ":", "53.528", " ERROR ", "11656", " --- ", "[nio-9090-exec-1]", " org", ".apache", ".tomcat", ".util", ".net", ".NioEndpoint", "   : Error running socket processor\n\njava", ".io", ".UncheckedIOException", ": Cannot delete C:\\Users\\win10\\AppData\\Local\\Temp\\tomcat.", "9090.7183718003577890731", "\\work\\Tomcat\\localhost\\ROOT\\upload_92b1a133_eb2f_4895_bb84_4ad5ee4171a1_00000000", ".tmp", "\n    at org", ".apache", ".tomcat", ".util", ".http", ".fileupload", ".disk", ".DiskFileItem", ".delete", "(DiskFileItem", ".java", ":", "431", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".catalina", ".core", ".ApplicationPart", ".delete", "(ApplicationPart", ".java", ":", "54", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".catalina", ".connector", ".Request", ".recycle", "(Request", ".java", ":", "483", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".catalina", ".connector", ".CoyoteAdapter", ".log", "(CoyoteAdapter", ".java", ":", "515", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".catalina", ".connector", ".CoyoteAdapter", ".checkRecycled", "(CoyoteAdapter", ".java", ":", "539", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".coyote", ".http11", ".Http11Processor", ".recycle", "(Http11Processor", ".java", ":", "1439", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".coyote", ".AbstractProtocol", "$ConnectionHandler", ".release", "(AbstractProtocol", ".java", ":", "1098", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".coyote", ".AbstractProtocol", "$ConnectionHandler", ".process", "(AbstractProtocol", ".java", ":", "1056", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".tomcat", ".util", ".net", ".NioEndpoint", "$SocketProcessor", ".doRun", "(NioEndpoint", ".java", ":", "1784", ") ~", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".tomcat", ".util", ".net", ".SocketProcessorBase", ".run", "(SocketProcessorBase", ".java", ":", "49", ") ", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".tomcat", ".util", ".threads", ".ThreadPoolExecutor", ".runWorker", "(ThreadPoolExecutor", ".java", ":", "1191", ") ", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".tomcat", ".util", ".threads", ".ThreadPoolExecutor", "$Worker", ".run", "(ThreadPoolExecutor", ".java", ":", "659", ") ", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at org", ".apache", ".tomcat", ".util", ".threads", ".TaskThread", "$WrappingRunnable", ".run", "(TaskThread", ".java", ":", "61", ") ", "[tomcat-embed-core-9.0.71.jar:9.0.71]", "\n    at java", ".lang", ".Thread", ".run", "(Thread", ".java", ":", "748", ") ", "[na:1.8.0_301]", "\nCaused by: java", ".io", ".IOException", ": Cannot delete C:\\Users\\win10\\AppData\\Local\\Temp\\tomcat.", "9090.7183718003577890731", "\\work\\Tomcat\\localhost\\ROOT\\upload_92b1a133_eb2f_4895_bb84_4ad5ee4171a1_00000000", ".tmp", "\n    ... ", "14", " common frames omitted\n\n\n\n"]], "Tag": "程序设计"}
