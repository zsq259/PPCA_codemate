{"Answer": "如果在for的代码块中有另一个for就是嵌套，比如\r\nfor (...)\r\n{\r\n...\r\nfor (...)\r\n{\r\n...\r\n}\r\n...\r\n}\r\n\r\n反之就不是嵌套，比如\r\nfor (...)\r\n{\r\n...\r\n...\r\n}\r\n...\r\nfor (...)\r\n{\r\n...\r\n...\r\n}", "Konwledge_Point": "for循环的嵌套", "Question": ["怎么判断是不是for循环嵌套", ["当程序中出现两个或两个以上for循环语句是，怎么判断是不是for循环嵌套？"]], "Tag": "程序设计"}
{"Answer": "增强for循环跟普通for循环在使用效果上没有太大的区别，都是可以嵌套使用的，\r\n不过不管是什么样的for循环，最好不要在循环的集合上做新增或者删除操作，这样的操作或出问题，\r\n正确的操作是使用iterator迭代器。", "Konwledge_Point": "for循环的嵌套", "Question": ["Java增强for循环可以嵌套使用吗", ["大神们，那个增强for循环可不可以像普通for循环一样嵌套使用，在增强for中可以对集合进行操作么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没事&amp;#xff0c;慢慢来&amp;#xff0c;谁都是从初学者开始的&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环嵌套不明白", ["谁可以教会我，呜呜呜呜呜呜", "我就for循环嵌套都整不明白。。快疯了，理解能力那么差吗，我咋这么chun，就算我c语言，c++都没好好学，那我Java从头来都学不明白，崩溃！", "输出一个正三角形和一个倒三角形，我跟着答案都搞不明白为啥这样写，内部循环咋运行的。。。难道我不配吗？天天自我怀疑我能不能学好"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/fzsol/article/details/54959609", "Konwledge_Point": "for循环的嵌套", "Question": ["django 模板for循环嵌套", ["编程小白想请教个问题", "\ndjango 模板里面用了嵌套for循环", "\n比如{1,2,3}{a,b,c}", "\n目标{1,a}{2,b}{3,c}", "\n结果成了", "\n{1,a}{2,a}{3,a}", "\n{1,b}{2,b}{3,b}", "\n{1,c}{2,c}{3,c}", "\n 其中一个for循环用了regroup 也就是有3个for循环", "\n该怎么写", "\n\n", "{% for ele in eles %}\n{% regroup ns by ele_id as ns_list %}\n{% for nu in ns_list %}\n<table>\n    <tbody>\n        <tr>\n            <td width=\"40%\" align=\"center\" rowspan=\"10\">\n                <img src=\"{{ MEDIA_URL }}{{ ele.imageB }}\" width=\"100\" height=\"100\" alt=\"limian\"/>\n            </td>\n            <td width=\"10%\">序号</td>\n            <td width=\"10%\">标准宽度</td>\n            <td width=\"10%\">标准高度</td>\n            <td width=\"10%\">测量宽度</td>\n            <td width=\"10%\">测量高度</td>\n        </tr>\n        {% for n in nu.list %}\n        <tr align=\"center\">\n            <td>{{ n.stanum }}</td>\n            <td>{{ n.stad }}</td>\n            <td>{{ n.stah }}</td>\n            <td>{{ n.mead }}</td>\n            <td>{{ n.meah }}</td>\n        </tr>\n        {% endfor %}\n    </tbody>\n</table>\n{% endfor %}\n{% endfor %}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;外层更新变量是 right&amp;#xff0c;right范围是 0 ~ len - 1&lt;br /&gt;内层更新变量是 left&amp;#xff0c;left范围也是 0 ~ len - 1。&lt;br /&gt;两者无相关性&amp;#xff0c;也就是说 right 更新时&amp;#xff0c;left不会从零开始&amp;#xff0c;right 只会遍历一遍&amp;#xff0c;left也只会一遍&amp;#xff0c;所以复杂度是 2 * n&amp;#xff0c;及 O(n)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["请问为什么for中嵌套while循环 时间复杂度却还是O(n)呢", ["```", "class Solution {", "    public int minSubArrayLen(int target, int[] nums) {", "        int left = 0;", "        int result = Integer.MAX_VALUE;", "        int sum = 0;", "        for(int right = 0; right < nums.length; right++){", "            sum += nums[right];", "            while(sum >= target){", "                result = Math.min(result, (right - left + 1));", "                sum -= nums[left++];", "            }", "        }", "        return result == Integer.MAX_VALUE ? 0 : result;", "    }", "}", "\n", "```java", "没太懂这句话的意思 可以帮忙分析一下吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.嵌套循环中&amp;#xff0c;外循环循环一次&amp;#xff0c;内循环循环完成&lt;br /&gt;2.并列循环中&amp;#xff0c;先完成前面的循环&amp;#xff0c;再完成后面的&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python里两个for并列循环是如何运行的？嵌套又是怎么运行的？", ["for a in range(0, 100):", "    provinces = []", "    confirm_value = []", "    for item_1 in student[a]['Name']:", "        空格provinces.append(item_1)", "    for item_2 in student[a]['confirmedCount']:", "        空格confirm_value.append(item_2)", "student是这样的：", "  name列和confirmedCount列", "1 A      12", "2 B      14", "3 C      18", "  name列和confirmedCount列", "4 D      23", "5 E      2", "6 F      54", "  name列和confirmedCount列", "7 G      22", "8 H      14", "9 I      8", "  name列和confirmedCount列", "10 J      23", "11 K      21", "12 L      5"]], "Tag": "程序设计"}
{"Answer": "for中可以嵌套if语句，如果有错，应该是你代码的问题，不清楚你的这段代码是干嘛的，但是![图片说明](https://img-ask.csdn.net/upload/201509/23/1443004780_812833.png)你的第一个if的判断语句缺少了')'", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环是否能嵌套if语句", ["for(i_1=0;;i_1++)", "\n    {", "\n        if(i+dir[i_1][0]>=0&&i+dir[i_1][0]=0&&j+dir[i_1][1]\n        {", "\n            if(flag[i+dir[i_1][0],j+dir[i_1][1]]==0)", "\n            {", "\n                !flag[i+dir[i_1][0],j+dir[i_1][1]];", "\n                sum++;", "\n                judgement=dfs(i+dir[i_1][0],j+dir[i_1][1]);", "\n                if(judgement)", "\n                {", "\n                    other_flag=1;", "\n                    sum=(sum>t_sum)?t_sum:sum;", "\n                }", "\n                !flag[i+dir[i_1][0],j+dir[i_1][1]];", "\n                sum--;", "\n            }", "\n        }", "\n    }", "\n    我调试时for循环不执行if语句。求解"]], "Tag": "程序设计"}
{"Answer": "循环本身不会影响效率（影响比较小，可以忽略），影响效率的是循环里面的执行语句，是不是影响效率要看有多少条语句被执行了多少次，比如说有1w层循环，每层循环执行一次，只有最里面一层一条语句，那么效率应该是很快的。假如说有1层循环，执行10条语句执行100w次效率应该也很低。PS：循环嵌套太深导致代码可读性较差", "Konwledge_Point": "for循环的嵌套", "Question": ["JavaScript 嵌套多层for循环  多少层会影响效率", ["现在做一个项目 需要嵌套很多曾for循环来显示前台 5层左右吧 中间还有if判断  这会很影响效率么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是因为你循环同时创建了多个定时器&amp;#xff0c;但time变量始终就只有一个&amp;#xff0c;只能保存一个定时器的id。&lt;br /&gt;\n当for循环结束&amp;#xff08;注&amp;#xff1a;只是for循环结束&amp;#xff0c;不是定时器触发结束&amp;#xff09;时time变量保存的是最后创建的定时器的id。&lt;br /&gt;\n当清除掉定时器时就只能清除最后创建的定时器。&lt;br /&gt;\n解决问题很简单&amp;#xff0c;time 改为let块作用域变量&amp;#xff0c;让每次循环中time变量都独立存在&amp;#xff0c;并且依靠闭包原理就可以保存每一个定时器的id。&lt;br /&gt;\n&lt;strong&gt;let&lt;/strong&gt; time &amp;#61; setInterval(()&amp;#61;&amp;gt;{&lt;!-- --&gt;&lt;br /&gt;\n &lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环中嵌套setInterval后无法结束", ["\n\n", "控制台里‘3’可以打印出来，但是没有办法清除掉定时器。", "\n\n", "\n\n", "但是加上立即执行函数就可以 ，这是什么原理。"]], "Tag": "程序设计"}
{"Answer": "void main()\r\n{\r\n\tint tmp1 , tmp2 , tmp3;\r\n\tint n = 10;\r\n\r\n\tfor(tmp1 = 1;tmp1 &lt; n;tmp1++)\r\n\t{\r\n\t\tfor(tmp3 = 0;tmp3 &lt; (n - 1 - tmp1);tmp3++)\r\n\t\t{\r\n\t\t\tprintf(\" \");\r\n\t\t}\r\n\t\tfor(tmp2 = 1;tmp2 &lt; tmp1 + 1;tmp2++)\r\n\t\t{\r\n\t\t\tprintf(\"%d\",tmp2);\r\n\t\t}\r\n\t\tfor(tmp2 = tmp1 - 1;tmp2 &gt; 0;tmp2--)\r\n\t\t{\r\n\t\t\tprintf(\"%d\",tmp2);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n\r\n运行结果：\r\n![图片说明](https://img-ask.csdn.net/upload/202005/28/1590635238_855631.png)", "Konwledge_Point": "for循环的嵌套", "Question": ["1.使用循环嵌套输出以下图形。", ["\n1.使用循环嵌套输出以下图形。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;外层循环条件不满足时&amp;#xff0c;就不会进入了&amp;#xff0c;内层for循环也不会执行&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言两个for循环语句嵌套，第一个for循环不满足条件，第二个for循环还执行吗？", ["for（i＝1;i＜3;i++）", "  for（j＝0;j＜＝i;j＋+）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看的不是太明白&amp;#xff0c; 如果数据只能一条一条取&amp;#xff0c;貌似只能尽量减少取无用数据的次数&amp;#xff0c;以及通过多线程取数。&lt;br /&gt;如果数据是批量的&amp;#xff0c; 可以考虑用pandas 之类的进行计算。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python多层嵌套循环如何优化", ["需要通过接口查询并保存各个部门下成员的业绩", "\n", "#根部门：", "\nparentid=parentid:[1]\n", "#子部门：", "\nparentid=parentid:[2，3，4，5，6]\n", "#成员：", "\n{\n    ", "\"errcode\"", ": 0,\n    ", "\"errmsg\"", ": ", "\"ok\"", ",\n    ", "\"userlist\"", ": [{\n            ", "\"userid\"", ": ", "\"zhangsan\"", ",\n            ", "\"name\"", ": ", "\"张三\"", ",\n            ", "\"department\"", ": [1, 2],\n            ", "\"open_userid\"", ": ", "\"xxxxxx\"", "\n        },\n        {\n            ", "\"userid\"", ": ", "\"lisi\"", ",\n            ", "\"name\"", ": ", "\"李四\"", ",\n            ", "\"department\"", ": [3],\n            ", "\"open_userid\"", ": ", "\"xxxxxx\"", "\n        },\n        {\n            ", "\"userid\"", ": ", "\"wangwu\"", ",\n            ", "\"name\"", ": ", "\"王五\"", ",\n            ", "\"department\"", ": [4],\n            ", "\"open_userid\"", ": ", "\"xxxxxx\"", "\n        }\n    ]\n}\n\n", "#业绩统计获取请求JSON：", "\n{\n    ", "\"day_begin_time\"", ": 1600272000,", "#开始时间", "\n    ", "\"day_end_time\"", ": 1600444800,", "#结束时间", "\n    ", "\"owner_filter\"", ": {\n        ", "\"userid_list\"", ": [", "\"zhangsan\"", "] ", "#用户ID", "\n    },\n    ", "\"limit\"", " : 1000 ", "#分页", "\n}\n", "\n", "#通过跟部门查子部门，子部门查5000用户，使用用户ID查近180天内每天业绩：", "\n", "#通过API获取数据", "\n", "def", " ", "getdata", "():\n", "for", " a ", "in", " ", "range", "(", "len", "[parentid]): ", "#取子部门", "\n      ", "for", "  b ", "in", " ", "range", "(", "len", "[parentid]): ", "#取用户", "\n            ", "for", "  c ", "in", " ", "range", "(", "len", "[datetime]):  ", "#取每天时间", "\n                   ", "for", " d ", "in", " ", "range", "(", "len", "[achieve]): ", "#取业绩数据", "\n       \n\n存入数据库\n", "def", " ", "adddata", "():\n", "\n", "数据量很大，循环效率很低。如何优化请指教。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那要看你传入的stu指针是不是空啊。如果是空指针&amp;#xff0c;程序直接就崩掉了&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言，为什么我的这个for循环后面的语句不执行，程序直接结束", ["void print (struct student *stu)", "{", "    struct student *p3;", "    int n=1;", "\n", "p3", "=stu", ";", "\n\n", "for", "(", ";(*p3).num!=0;)", "\n{\n    printf(", "\"student %s(%d)的成绩是：%.2f\\n\"", ",(*", "p3", ").name,(*", "p3", ").num,(*", "p3", ").score)", ";", "\n    ", "p3", "=(*", "p3", ").next", ";", "\n    n+", "=1", ";", "\n} ", "/*这个循环之后的语句都不会执行，主函数调用这个函数之后，后面所有的语句也不执行，直接跳出程序*/", "\n", "printf", "(", "\"54566445465\\n\"", ")", ";/*比如这个语句，就不会执行*/", "\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "，第二次循环的时候，i=2 ,不符合条件j&gt;i&amp;&amp;J&lt;10,所以里层循环直接跳出，下面就是i=3,都是直接跳出循环\r\n\r\n\r\n```\r\n for(j=2;j&gt;i&amp;&amp;j&lt;10;j++)\r\n改为\r\nfor(j=2;j&lt;10;j++){\r\nif(j&gt;i){\r\ncout&lt;&lt;i&lt;&lt;j&lt;&lt;endl;\r\n}\r\n}\r\n```", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么最外层的for循环不执行呢？", ["程序是输出100以内所有高位数学比地位数字小的两位数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;h是一个生成器对象&amp;#xff0c;在python中&amp;#xff0c;生成器对象中的数据通过for循环在取完里面所有的数据后&amp;#xff0c;这是生成器对象的长度就变成了0&amp;#xff0c;也就是里面没有数据了。所以后面的for循环就会什么数据也显示不出来。如果要想第二次甚至几次循环后h数据不变的话&amp;#xff0c;就不能让h为生成器对象&amp;#xff0c;可以改为list。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;li&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;21&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;22&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;33&amp;#39;&lt;/span&gt;]\n\nh&amp;#61;(i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(h))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(h)))   &lt;span class=\"hljs-comment\"&gt;#值是3&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; c &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;  h:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(h)))  &lt;span class=\"hljs-comment\"&gt;#值是0&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;修改后&lt;/span&gt;\nli&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;21&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;22&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;33&amp;#39;&lt;/span&gt;]\n\nh&amp;#61;[i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;)]   &lt;span class=\"hljs-comment\"&gt;#改为list对象&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(h))\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; c &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;  h:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c)\n\nd&amp;#61;&lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(h,li)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i ,j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; d:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;.&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(d))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python两个for循环只有一个执行", ["python 同个文件里的 两个for 循环只执行了 前面的for循环 第二个for循环未执行 ，不是嵌套的", "\n", "只有在第一个for循环遍历对象为生成器的时候才不会执行第二个for循环", "\n", "\n", "\nli=[", "'21'", ",", "'22'", ",", "'33'", "]\n\nh=(i ", "for", " i ", "in", " ", "range", "(", "22", ",", "25", "))\n", "print", "(", "type", "(h))\n", "for", " c ", "in", "  h:\n    ", "print", "(c)\n\nd=", "zip", "(h,li)\n", "for", " i ,j ", "in", " d:\n    ", "print", "(", "f'", "{i}", ".", "{j}", "'", ")\n", "print", "(", "type", "(d))\n\n\n\n", "\n", "运行结果及详细报错内容", "\n", "\n", "搜索到的答案是  因为第一次执行循环把iterable耗尽所以第二个循环不会执行 求解答，怎样让着两个循环都执行呢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I believe your problem is this part&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($z as $z){\n    $stops[] = array('station' =&amp;gt; $z['station'], 'departs' =&amp;gt; $z['departs'] . ' ' . $z['units'], 'dist' =&amp;gt; $z['distancefromcentral'], 'route' =&amp;gt; $z['route'], 'run' =&amp;gt; $z['run'], 'day' =&amp;gt; $z['day'], 'orderby' =&amp;gt; $z['orderby'], 'units' =&amp;gt; $z['units']);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On each loop you are adding to &lt;code&gt;$stops&lt;/code&gt;, so if the 1st had 14, then the 2nd would add 3 more, so it would be 17 not just 3.&lt;/p&gt;\n\n&lt;p&gt;You can either reset the array before&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$stops = array();\nforeach($z as $z){\n ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or add the &lt;code&gt;$i&lt;/code&gt; as a key&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($z as $z){\n    $stops[$i][] = array('station' =&amp;gt; $z['station'], 'departs' =&amp;gt; $z['departs'] . ' ' . $z['units'], 'dist' =&amp;gt; $z['distancefromcentral'], 'route' =&amp;gt; $z['route'], 'run' =&amp;gt; $z['run'], 'day' =&amp;gt; $z['day'], 'orderby' =&amp;gt; $z['orderby'], 'units' =&amp;gt; $z['units']);\n}\nif(isset($stops[$i])){                          \n    for($x = 0; $x &amp;lt; count($stops[$i]); $x++){\n        echo $x;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套for循环不能正常工作", ["\n\n", "So when I have a nested for loop like such", "\n\n", "<?php for ($i= 0; $i< 5; $i++)\n{\n    for ($x= 0; $x< 5; $x++)\n    {\n        echo $x;\n    }\n\n    echo \"<br/>\";\n} ?>\n", "\n\n", "it returns:", "\n\n", "01234\n01234\n01234\n01234\n01234\n", "\n\n", "So then why does the nested for loop below not work? Instead of starting each ", "$x", " again, it just combines them together. So (assuming the results are the same as the above example) the first row will be ", "01234", ", but the second row will be ", "0123456789", ", with the ", "01234", " being the same as the first row., and so on. So the 8th row will contain all the values from row 1 to 8. ", "\n\n", "<?php\ntry {\n    $sql = \"SELECT timetable.id as id, timetable.day as serviceday, timetable.station, timetable.departs as time, CURTIME(), \nCASE WHEN ROUND(TIME_TO_SEC(timetable.departs)/60 - TIME_TO_SEC(CURTIME())/60,0) > 120 THEN FLOOR(ROUND(TIME_TO_SEC(timetable.departs)/60 - TIME_TO_SEC(CURTIME())/60,0)/60) ELSE ROUND(TIME_TO_SEC(timetable.departs)/60 - TIME_TO_SEC(CURTIME())/60,0) END as departs, \nCASE WHEN ROUND(TIME_TO_SEC(timetable.departs)/60 - TIME_TO_SEC(CURTIME())/60,0) <= 120 THEN 'min' ELSE 'hrs' END as units, DATE_FORMAT(timetable.departs, '%l:%i %p') as time2, \nCASE WHEN timetable.platform != platformchange.platform THEN platformchange.platform ELSE timetable.platform END as platform,\n timetable.route, timetable.run, route.code, line.name, line.translink, station.name as terminus, line.colour, ns, a.departs as terminustime, IFNULL(c.id,-1) as cancel FROM timetable INNER JOIN route ON timetable.route = route.id INNER JOIN line ON route.line = line.id INNER JOIN station ON route.terminus = station.id INNER JOIN (SELECT departs, station, route, run FROM timetable) a ON a.station = station.id AND timetable.route = a.route AND timetable.run = a.run LEFT JOIN (SELECT service, platform FROM platformchange  WHERE day LIKE '%\" . $day . \"%') as platformchange ON timetable.id = platformchange.service LEFT JOIN overnight ON timetable.route = overnight.route AND timetable.run = overnight.run LEFT JOIN (SELECT cancel.id, cancel.route, cancel.run FROM cancel WHERE cancelday = CURDATE()) as c ON c.route = timetable.route AND c.run = timetable.run  WHERE timetable.station = \" . $_GET['id'] . \" AND timetable.departs > CURTIME() AND (timetable.day LIKE '%\" . $day . \"%' OR timetable.date = CURDATE()) AND IFNULL(c.id,-1) < 1 GROUP BY timetable.id ORDER BY time ASC LIMIT 12\";\n    $s = $pdo->prepare($sql);\n    $s->execute();\n}\ncatch (PDOException $e){\n\n}\n\nforeach($s as $row){\n    $services[] = array('id' => $row['id'], 'time' => $row['time'], 'platform' => $row['platform'], 'terminus' => $row['terminus'], 'colour' => $row['colour'], 'departs' => $row['departs'] . ' ' . $row['units'], 'route' => $row['route'], 'run' => $row['run'], 'time2' => $row['time2'], 'ns' => $row['ns'], 'terminustime' => $row['terminustime'], 'tl' => $row['translink']);\n}\n\nfor($i = 0; $i < count($services); $i++){\n    try {\n        $query = \"SELECT station.name as station, station.distancefromcentral, ROUND(TIME_TO_SEC(departs)/60 - TIME_TO_SEC(CURTIME())/60,0) as orderby, CASE WHEN ROUND(TIME_TO_SEC(departs)/60 - TIME_TO_SEC(CURTIME())/60,0) > 120 THEN FLOOR(ROUND(TIME_TO_SEC(departs)/60 - TIME_TO_SEC(CURTIME())/60,0)/60) ELSE ROUND(TIME_TO_SEC(departs)/60 - TIME_TO_SEC(CURTIME())/60,0) END as departs, CASE WHEN ROUND(TIME_TO_SEC(departs)/60 - TIME_TO_SEC(CURTIME())/60,0) > 120 THEN 'hrs' ELSE 'min' END as units, timetable.route, timetable.run, day, date, station.distancefromcentral\nFROM timetable \nINNER JOIN station ON timetable.station = station.id \nLEFT JOIN overnight ON overnight.route = timetable.route AND overnight.run = timetable.run\nWHERE (departs > '\" . $services[$i]['time'] . \"' AND (day LIKE '%\" . $day . \"%' OR date LIKE CURDATE()) AND timetable.route = \" . $services[$i]['route'] . \" \nAND timetable.run = \" . $services[$i]['run'] . \")\nOR ( overnight.id > 0 AND(day LIKE '%\" . $nextday . \"%' OR date LIKE DATE_ADD(CURDATE(), INTERVAL 1 DAY) ) AND timetable.route = \" . $services[$i]['route'] . \" \nAND timetable.run = \" . $services[$i]['run'] . \")  \nORDER BY date, \n  CASE\n    WHEN DATE_FORMAT(CURDATE(),'%w') = 0\n      THEN `day` \n    END DESC,\n  CASE\n    WHEN DATE_FORMAT(CURDATE(),'%w') <> 0\n      THEN `day` \n    END ASC, \n  orderby ASC\";\n        $z = $pdo->prepare($query);\n        $z->execute();\n    }\n\n    catch (PDOException $error){\n        echo 'error';\n    }\n\n    foreach($z as $z){\n        $stops[] = array('station' => $z['station'], 'departs' => $z['departs'] . ' ' . $z['units'], 'dist' => $z['distancefromcentral'], 'route' => $z['route'], 'run' => $z['run'], 'day' => $z['day'], 'orderby' => $z['orderby'], 'units' => $z['units']);\n    }\n\n    if(isset($stops)){                          \n        for($x = 0; $x < count($stops); $x++){\n            echo $x;\n        }\n    }\n    echo '<br/>';\n}\n?>\n", "\n\n", "So here is an example of just 2 rows", "\n\n", "012345678910111213\n012345678910111213141516\n", "\n\n", "However the second row only has 3 values, so should only be ", "012", ". It's not separating them per ", "$i", ", just combining them", "\n\n", "If I'm not explaining it well I apologise", "\n    "]], "Tag": "程序设计"}
{"Answer": "第一个就不说了，如果不拆分的话，也是可以接受的。至于第二个，也就是private List&lt;AuditlogVO&gt; queryFromlist(List&lt;AuditlogVO&gt; list)方法中的for循环体，我倒是觉得有必要处理一下。\r\n比如，for中的第一第二个if语句可以提取为一个返回值为boolean的方法。这要for循环中就好看一点，然后第三个if语句不用提取函数，直接定义一个boolean变量，如下格式：\r\nboolean b = (StringUtils.isEmpty(logType) || logType.equals(\"全部\") || logType.equals(vo.getTypename())) ;\r\n        b &amp;= (StringUtils.isEmpty(logaction) || logaction.equals(\"全部\") || logaction.equals(vo.getActionname()));\r\n        b &amp;= (StringUtils.isEmpty(logLevel) || logLevel.equals(\"全部\") || logLevel.equals(vo.getLevelname())) ;\r\n        ....", "Konwledge_Point": "for循环的嵌套", "Question": ["像这样多层if嵌套的代码如何优化", ["感觉自己看起来都费劲( ⊙ o ⊙ )，", "\n\n", "[code=\"java\"]", "\n    public String login() {", "\n        boolean loginpass = false;", "\n        Pckey pckey = null;", "\n        int validate = 0; // 密码验证标识", "\n        Integer keyright = 1;", "\n        HttpServletRequest request = ServletActionContext.getRequest();", "\n        String remoteIp = request.getRemoteAddr();", "\n        String localIp = request.getLocalAddr();", "\n        String passFlag = request.getParameter(\"validate\");", "\n        if (StringUtils.isNotEmpty(passFlag)) {", "\n            validate = Integer.parseInt(passFlag);", "\n        }", "\n        if (StringUtils.isNotEmpty(username)) {", "\n            keyright = Integer.parseInt(userright);", "\n            pckey = pckeyService.findKey(username, keyright);", "\n        }", "\n        if (pckey != null) {", "\n            boolean locked = pckeyService.isLocked(pckey);", "\n            if (!locked) { // 没锁定", "\n\n", "            if (pckeyService.reachMaxCount(pckey)) {\n                pckeyService.clearErrorCount(pckey);\n            }\n            // 验证密码标识\n            if (validate == 100) {\n                pckeyService.clearErrorCount(pckey);\n                HttpSession session = ServletActionContext.getRequest()\n                        .getSession();\n                session.setAttribute(\"keyname\", username); // 登录名\n                session.setAttribute(\"keyright\", userright); // 登录权限\n                Calendar c = Calendar.getInstance();\n                c.add(Calendar.HOUR_OF_DAY, 10);\n                session.setAttribute(\"logintime\", c.getTime().toString()); // 登录时间\n                loginpass = true;\n            } else {\n\n                int errorCount = pckeyService.addErrorCount(pckey);\n                if (errorCount > 0) {\n                    msg = \"用户名或密码错误,剩余\" + errorCount + \"次key将被锁定\";\n                } else {\n                    msg = \"用户名或密码错误,此key已被限制登陆!\";\n                    pckeyService.setLockDate(pckey);\n                }\n            }\n        } else {\n            // 锁定\n            msg = \"此key已经被锁定，您无法登陆系统\";\n        }\n    } else {\n        // key 不合法\n        msg = \"请插入合法key\";\n    }\n\n    // 添加审计日志\n    auditlogService.addAuditlog(remoteIp, username, localIp, 1, 1,\n            loginpass == true ? \"登录系统成功！\" : \"登陆系统失败\", 1);\n    return loginpass == true ? SUCCESS : \"error\";\n}\n", "\n\n", "[/code]", "\n[code=\"java\"]", "\nprivate List queryFromlist(List list) {", "\n        List sublist = new ArrayList();", "\n        if (list == null || list.size() == 0) {", "\n            return null;", "\n        }", "\n        for (AuditlogVO vo : list) {", "\n            if (StringUtils.isNotEmpty(startTime)) {", "\n                long starttime = DateUtils.date2LongNumber(startTime);", "\n                long createdate = DateUtils.date2LongNumber(vo.getCreatedate());", "\n                if (starttime > createdate)", "\n                    continue;", "\n            }", "\n            if (StringUtils.isNotEmpty(endTime)) {", "\n                long endtime = DateUtils.date2LongNumber(endTime);", "\n                long createdate = DateUtils.date2LongNumber(vo.getCreatedate());", "\n                if (createdate > endtime)", "\n                    continue;", "\n            }", "\n\n", "        if (StringUtils.isEmpty(logType) || logType.equals(\"全部\")\n                || logType.equals(vo.getTypename())) {\n            if (StringUtils.isEmpty(logaction) || logaction.equals(\"全部\")\n                    || logaction.equals(vo.getActionname())) {\n                if (StringUtils.isEmpty(logLevel) || logLevel.equals(\"全部\")\n                        || logLevel.equals(vo.getLevelname())) {\n                    if (StringUtils.isEmpty(logResult)\n                            || logResult.equals(\"全部\")\n                            || logResult.equals(vo.getResult())) {\n                        if (StringUtils.isEmpty(subname)\n                                || subname.equals(vo.getSubname())) {\n                            if (StringUtils.isEmpty(from)\n                                    || from.equals(vo.getAddress())) {\n                                if (StringUtils.isEmpty(targetIp)\n                                        || targetIp.equals(vo.getObjname())) {\n                                    sublist.add(vo);\n\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n    }\n\n    return sublist;\n}\n", "\n\n", "[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Main {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n         // TODO Auto-&lt;span class=\"hljs-keyword\"&gt;generated&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;method&lt;/span&gt; stub\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,a,b;\n        n&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; a&amp;lt;&amp;#61;n; a&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; b&amp;lt;&amp;#61;a; b&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34; &amp;#34;);\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(b);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["用嵌套的for循环打印图案", ["问题遇到的现象和发生背景", "\n", "想要的图案是", "1", "1 2", "1 2 3", "1 2 3 4", "1 2 3 4 5", "\n", "问题相关代码，请勿粘贴截图", "\n", "public", " ", "class", " hm3 {\n\n    ", "public", " static ", "void", " main(String[] args) {\n        // TODO Auto-", "generated", " ", "method", " stub\n        ", "int", " n,a,b;\n        n=", "5", ";\n        ", "for", "(a=", "1", "; a<=n; a++) {\n            ", "for", "(b=", "1", "; b<=a; b++) {\n                ", "System", ".", "out", ".print(\" \");\n                ", "System", ".", "out", ".print(b);\n            }\n        }\n        \n        \n        \n        \n    }\n\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "我的运行结果是", "112123123412345"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x in &lt;span class=\"hljs-keyword\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-keyword\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, x):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(x)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["用for循环嵌套输出2~50的素数是哪一步错了吗？没有运行结果", ["for x in range(2,51):", "    for i in range(2,x):", "          if x%i==0:", "                break", "    else:", "          print()"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/202010/21/1603258815_988777.png)", "Konwledge_Point": "for循环的嵌套", "Question": ["mybatis foreach 里面嵌套 chose when 的问题", ["大佬们： mybatis foreach里面嵌套choose when出现bug,帮忙看下：如图：", "，这样写有问题吗？我的实体类是这样的：", "\n传过来的参数到mybatis里面就不对了，", "，可以看到我传的明明是两个3 和 -1 ，但是到mybatis里面都是走到1那里去了，所以我把when =1 的注释掉，", "，在启动运行他就报错了，", "，我想还是mybatis里面写的有问题，哪位大佬指点一下，我的具体参数如下：", "\n\n", "，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;等属于他自己的代码段结束之后&amp;#xff0c;就会执行了。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在c语言中，多个for循环嵌套，for（xxx；xxx；i++），i++什么时候执行？", ["for(1;2;i++),多个for循环里", "\n\n", " ", "\n\n", "    ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;v-for循环生成    el-table-column&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["vue数据循环后放入表格", ["vue数据循环后放入表格，这种数据结构怎么循环让表格可以加载出来啊，name是label表头，values是这一列的数据，因为是数组可能是多条", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "一个递归程序，亲测可行，别忘记点采纳本答案\r\n```\r\ndef lst2str(lst):\r\n    if type(lst)!=list:\r\n        return str(lst)\r\n    else:\r\n        ll=len(lst)\r\n        if ll==0:\r\n            return \"[]\"\r\n        res=\"[\"\r\n        for i in range(ll-1):\r\n            res+=lst2str(lst[i])+\",\"\r\n        res+=lst2str(lst[ll-1])+\"]\"\r\n        return res\r\n\r\nlst=[1,2,[3,4,5],6,7,[8,[9,10,11],12],[],[1]]\r\nprint lst2str(lst)\r\n```\r\n输出：[1,2,[3,4,5],6,7,[8,[9,10,11],12],[],[1]]", "Konwledge_Point": "for循环的嵌套", "Question": ["【Python】有一个多层嵌套的列表 A = [1,2,[3,4,[‘434’,[…]]]]……", ["有一个多层嵌套的列表 A = [1,2,[3,4,[‘434’,[…]]]],请写一段代码遍历A中的每个元素并打印出来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;模板里面key的值&amp;#xff0c;写了啥&amp;#xff0c;v-for可能key的值不正确&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["vue for循环接口数据报错", ["vue for循环接口数据报错，我试了一下，但是这个报错还是无法解决，我这样循环展示数据应该可以吧", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;设置一个temp的数组在for循环之外&amp;#xff0c;然后执行一个·for完重新赋值&amp;#xff0c;这个temp数组最好定义在两个循环之外&amp;#xff0c;防止数据的被改变&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["while循环嵌套for循环问题", ["for循环用于遍历数组中的数，", "while循环嵌套for循环，for循环执行一次后数组的内容就被改变了，怎么让while循环第二次的时候数组内容变成最开始输入的数组。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;花括号加错位置了呀。因为for不加花括号的时候只包含下面那一句话&amp;#xff0c;所以其实不加花括号的时候printf(&amp;#34;\\n&amp;#34;)是不包含在内的&amp;#xff0c;但是你加花括号的时候又加在里面了呀&amp;#xff0c;所以应该是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;for (k &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; k &amp;lt;&amp;#61; 2 * i; k&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n  printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["请问各位for循环内嵌的循环为什么不能加花括号{}？", ["不加{}时候这样可以正常运行", "\n", "加了之后就会出错了", "\n", "请问各位为什么for循环里面的for循环不可以加{}呀，那推广开来想如果是if语句呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你都把p-&amp;gt;next设置成null了,后面当然就退出while了, 这一行没必要&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["while嵌套if循环问题只循环一次", ["为什么在这个while嵌套if循环里面，if循环只循环一次呀，要怎么改捏helphelp"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Thanks to &lt;a href=\"https://stackoverflow.com/users/2615041/miro\"&gt;Miro&lt;/a&gt;, I was able to iterate over my JSON object.&lt;/p&gt;\n\n&lt;p&gt;The reason was that it is not possible to iterate over an stdClass object directly in Twig. So I added a parameter in my &lt;code&gt;json_decode&lt;/code&gt; use in the controller.&lt;/p&gt;\n\n&lt;p&gt;To convert a JSON into an stdClass object : &lt;code&gt;json_decode($json)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;To convert a JSON into an associative array : &lt;code&gt;json_decode($json, true)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;More information about &lt;a href=\"http://php.net/manual/fr/function.json-decode.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;json_decode&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["三个嵌套的for循环似乎不起作用", ["\n\n", "I'm currently working on a website project on Symfony 2.8.\nBut I have a problem : I want to display information from a JSON object. However, I need to do three nested for-loops in order to do what I want.", "\n\n", "So here's my code chunks :", "\n\n", "The array I want to browse :", "\n\n", "element stdClass Object =>\n(\n[partschemes] => Array\n(\n    [0] => ( [id] => 1 )\n)\n[decodedPartitions] => Array\n    (\n        [0] => stdClass Object\n            (\n                [partitions] => Array\n                    (\n                        [0] => stdClass Object\n                            (\n                                [name] => WINDOWS\n                                [type] => primary\n                                [size] => -\n                                [filesystem] => fat32\n                            )\n\n                        [1] => stdClass Object\n                            (\n                                [name] => DATA*\n                                [type] => primary\n                                [size] => 256 Mo\n                                [filesystem] => fat32\n                            )\n\n                    )\n\n            )\n\n    )\n)\n", "\n\n", "My twig template :", "\n\n", "{% for i, disk in element.decodedPartitions %}\n        <tr>\n            <th class=\"text-center\" rowspan=\"3\" width=\"10%\">\n                <a href=\"{{ app.request.baseUrl }}/partscheme/details/{{ element.partschemes[i].id }}\" class=\"btn btn-info\" title=\"{{ 'button.details' | trans }}\">Disk {{ i }}</a>\n            </th>\n        </tr>\n\n        {% for j, part in disk.partitions %}\n        <tr>\n            <th class=\"text-center\" width=\"10%\">Partition {{ j }}</th>\n            <td>\n                {% for k, partInfo in part %}\n                    {{ k }}: {{ partInfo }}<br>\n                {% endfor %}\n            </td>\n        </tr>\n        {% endfor %}\n    {% endfor %}\n", "\n\n", "And as a result, the generated page shows me that, without information of different partitions:", "\n\n", "---------------------------------\n       | Partition 0 |          |\nDisk 1 |-------------|----------|\n       | Partition 1 |          |\n---------------------------------\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没打印出来说明没有满足你写的if条件语句的数据&amp;#xff0c;你看看是不是你的if条件语句写错了&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python中for循环嵌套if要求它打印，但是为什么啥也没打出来，也没有报错", ["python中for循环嵌套if要求它打印，但是为什么啥也没打出来，也没有报错", "\n", "运行结果就是一个啥也没有的窗口，是否是因为它断在某个地方了？", "\n", "我不确定是不是因为for嵌套里面不能有if嵌套还是我用的不对"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个if说明i能够整除j&amp;#xff0c;说明它不是素数&lt;br /&gt;第二个if说明j超出了i的范围&amp;#xff0c;所以i是素数&amp;#xff0c;因为判断i是不是素数&amp;#xff0c;就是看在1-根号i之前的数是否有能够被i整除的&lt;br /&gt;i表示要循环的2-100的数&amp;#xff0c;j表示1-i的数&lt;br /&gt;sqrt(x)和sqrt(1.0&lt;em&gt;i),区别在于x可能是整型,而1.0&lt;/em&gt;x只会是浮点型&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["#C语言 双for循环嵌套if", ["Q", "1.这两个if括号里条件是什么意思", "2.i和j都代表什么了", "3.sqrt(x)和sqrt(x*1.0)有什么区别"]], "Tag": "程序设计"}
{"Answer": "下边这个，k在循环外，一次循环后它就一直等于3 了，不会进去while循环", "Konwledge_Point": "for循环的嵌套", "Question": ["java自学求助嵌套循环", ["public class  ForTest", "\n{", "\n    public static void main(String[] args) ", "\n    {", "\n\n", "    int i=0;\n    for(;i<5;i++)\n    {\n        int k=0;\n        while(k<3)\n        {\n            System.out.println(k);\n            k++;\n        }\n    }\n}\n", "\n\n", "}", "\n输出是我想要的结果5个012，", "\npublic class  ForTest", "\n{", "\n    public static void main(String[] args) ", "\n    {", "\n        int k=0;", "\n        int i=0;", "\n        for(;i<5;i++)", "\n        {", "\n\n", "        while(k<3)\n        {\n            System.out.println(k);\n            k++;\n        }\n    }\n}\n", "\n\n", "}", "\n缺只有1个012"]], "Tag": "程序设计"}
{"Answer": "你的程序可以改写成不用递归，使用堆栈的形式：\r\n\r\n\r\n```\r\n #include&lt;stack&gt;\r\n#include&lt;stdio.h&gt;\r\nusing namespace std;\r\n\r\nvoid test(int n)\r\n{\r\n\tstack&lt;int&gt; st;\r\nfuncstart:\r\n\tint x=0,i=0;\r\n\tif(n==1){\r\n\t\tprintf(\"n:%d  x:%d   i:%d\\n\",n,x,i);\r\n\t\tgoto brkpos;\r\n\t}else{\r\n\t\tprintf(\"n:%d  x:%d   i:%d\\n\",n,x,i);\r\n\r\n\t\tfor(i=0;i&lt;3;i++){\r\n\t\t\tst.push(x);\r\n\t\t\tst.push(i);\r\n\t\t\tst.push(n);\r\n\t\t\tn=n-1;\r\n\t\t\tgoto funcstart;\r\nbrkpos:\r\n\t\t\tif (st.empty()) return;\r\n\t\t\tn=st.top();\r\n\t\t\tst.pop();\r\n\t\t\ti=st.top();\r\n\t\t\tst.pop();\r\n\t\t\tx=st.top();\r\n\t\t\tst.pop();\r\n\t\t\tx=1;\r\n\t\t}\r\n\t}\r\n\tgoto brkpos;\r\n}\r\n\r\nint main()\r\n{\r\n\ttest(3);\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言循环里的递归问题", ["求大神们，帮我分析一下这个程序怎么运行的", "\n\n", "#include", "\nvoid test(int n)", "\n{", "\n    int x=0,i=0;", "\n    if(n==1){", "\n        printf(\"n:%d  x:%d   i:%d\\n\",n,x,i);", "\n        return ;", "\n    }else{", "\n        printf(\"n:%d  x:%d   i:%d\\n\",n,x,i);", "\n\n", "    for(i=0;i<3;i++){\n        test(n-1);\n        x=1;\n    }\n}\n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n    test(3);", "\n    return 0;", "\n}", "\n\n", "运行结果如图："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;你要理解&amp;#xff0c;for 循环嵌套是为了什么&amp;#xff1f;&lt;br /&gt;是因为一个for 循环无法解决&amp;#xff1f;例如一维数组正常情况一个for 就可以&amp;#xff0c;而二维的时候就可能需要嵌套&amp;#xff1b;&lt;br /&gt;有或者&amp;#xff0c;一维数组的排序&amp;#xff0c;可能用到嵌套。&lt;br /&gt;不要一概而论&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["数组for循环嵌套使用方法", ["怎么判断一个题目要使用for循环的嵌套，还是每个题目都可以，关键看自己怎么写代码？"]], "Tag": "程序设计"}
{"Answer": "打印一下不就知道了\r\n\r\n```\r\n public static void main(String[] args) {\r\n\t\tint count = 0;\r\n\t\tint length = 40;\r\n\t\tfor (int i = 0; i &lt; length; i++) {\r\n\t\t\tfor (int j = i + 1; j &lt; length; j++) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"result=\" + count);\r\n\t}\r\n\t\r\n\tresult=780\r\n```\r\n\r\n规律是n*(n-1)/2", "Konwledge_Point": "for循环的嵌套", "Question": ["问一个关于嵌套for循环时间复杂度的问题", ["像下面这样的for循环嵌套，时间复杂度无疑是O(n^2)这个没有疑问。", "\n\n", "for (int i = 0; i < nums.length; i++) {\n            for (int j = 0; j < nums.length; j++) {\n            }\n}\n", "\n\n", "但是，如果j=i+1呢？", "\n\n", "for (int i = 0; i < nums.length; i++) {\n            for (int j = i+1; j < nums.length; j++) {\n            }\n        }\n", "\n\n", "像上面这个代码这样的时间复杂度会是怎样的呢？", "\n欢迎大佬给萌新解惑~", "\n感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一开始x&amp;#61;2&amp;#xff0c;内部循环for(i&amp;#61;2;i&amp;lt;x;i&amp;#43;&amp;#43;)是不会进入循环&amp;#xff0c;is&amp;#61;1 输出第一个数x 2 然后执行x&amp;#43;&amp;#43;&amp;#xff0c;x&amp;#61;3&lt;br /&gt;x&amp;#61;3开始&amp;#xff0c;内部循环for(i&amp;#61;2;i&amp;lt;x;i&amp;#43;&amp;#43;)才可以进入循环 然后依次往下执行&amp;#xff0c;最后执行x&amp;#43;&amp;#43;&amp;#xff0c;外部循环进入下一次循环的进入判断&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环嵌套的问题，找出100以内的质数", ["#include<stdio.h>", "int main()", "{", "    int  x;", "    for(x=2;x<100;x++)", "    {", "        int i;", "        int is=1;", "        for(i=2;i<x;i++){", "            if(x%i==0){", "                is=0;", "                break;", "            }", "        }", "        if(is==1){", "            printf(\"%d  \",x);", "        }", "    }", "    return 0;", "     }", "这个程序是对的，但是我不知道为什么可以进入里面的循环，不是i＜x才能进入吗？但是一开始他们是相等的啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for后面的分号删掉&lt;br /&gt;你这for里是个空指令&amp;#xff0c;print在for外面&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言for循环嵌套运行结果出错如何解决", ["我是大一新生最近刚自学到循环嵌套遇到了一个问题希望能帮我解答", "\n", "为什么这个程序运行结果会是这样", "\n", "我按照这个教程编写的程序，如果将它复制到编译器上运行结果是一致的，但我自己编写的运行结果就不一样（如上图）", "\n", "我之前问过学长，他的说法是因为最开始文件没有命名，让我新建一个文件复制过去就行，当时确实是解决了，但现在又出现了这种问题且按照他的方法好像不能解决，希望能跟我讲一下这个问题的原理，如何解决以及以后怎么避免这类问题的产生，谢谢(  ߹꒳​߹ )"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主对问题的描述不清&amp;#xff0c;比如&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;既然N1和N2是ndarray&amp;#xff0c;直接给出它们的shape和dtype&amp;#xff0c;简单明了。你这样描述了一大串&amp;#xff0c;我还是不知道N1和N2各自是几维的&amp;#xff0c;xi和yi究竟是数组还是整数还是浮点数&amp;#xff1f;&lt;/li&gt;&lt;li&gt;前面说了有两个ndarray&amp;#xff0c;后面的代码却使用了4个数组&amp;#xff1a;link_start&amp;#xff0c;link_start5&amp;#xff0c;link_end&amp;#xff0c; link_end5&amp;#xff0c;究竟哪个是N1&amp;#xff0c;哪个是N2&amp;#xff1f;&lt;/li&gt;&lt;li&gt;判断数组等于True&amp;#xff0c;以及对布尔数组求和&amp;#xff0c;这都是极端错误的写法&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何提高嵌套for循环的效率", ["问题遇到的现象和发生背景", "\n", "我有4个ndarray，分别是link_start(shape=(74328,1)),link_start5(shape=(4310278,5)),link_end(shape=(74328,1)),link_end5(shape=4310278,5)", "我需要分别遍历去比较link_start与link_start5和link_end与link_end5，做比较的目的是只要link_start[i]这个元素在link_start5[j]中存在且link_end[i]这个元素在link_end5[j]中也存在，那么我的原始数据列表中的第j条就是我需要进一步处理的数据。", "列表中的数据都是数值，形如这样：", "link_start[1]=[5],link_start5[22145]=[2,6,5,4,3]", "link_end[1]=[3],link_end5[22145]=[5,2,7,3,9]", "比如存在上面这两组数据，那么原始数据列表中的第22145条就是我需要进一步处理的数据。", "代码如下：", "#方法1", "\n", "for", " ", "i", " ", "in", " range(len(link_start)):\n    ", "for", " j ", "in", " range(len(link_start5)):\n        ", "if", " np", ".in1d", "(link_start", "[i]", ",link_start5", "[j]", ") == True and np", ".in1d", "(link_end", "[i]", ",link_end5", "[j]", ") == True:\n            print(", "i", ",j)\n\n", "\n", "#方法2", "\n", "for", " ", "i", " ", "in", " range(len(link_start)):\n    ", "for", " j ", "in", " range(len(link_start5)):\n        ", "if", " ((link_start", "[i]", " == link_start5", "[j]", ")", ".sum", "()) >= ", "1", " and ((link_end", "[i]", " == link_end5", "[j]", ")", ".sum", "()) >= ", "1", ":\n            print(", "i", ",j)\n\n", "\n", "我想要达到的结果", "\n", "请问如何能够改进代码从而提高运算效率，是否有什么方法能够尽量避免显式for的使用。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;html代码如下&amp;#xff0c;不知道这个框线是要用什么符号&amp;#xff0c;大概逻辑看代码就懂了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Title&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;placeholder&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入直角三角形的层数&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onclick&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;create()&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;生成&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;create&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input&amp;#34;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;) {\n            &lt;span class=\"hljs-title function_\"&gt;alert&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入内容&amp;#39;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!(&lt;span class=\"hljs-regexp\"&gt;/(^[1-9]\\d*$)/&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(num))) {\n            &lt;span class=\"hljs-title function_\"&gt;alert&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的不是正整数&amp;#39;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; num; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; char &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                char &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;* &amp;#39;&lt;/span&gt;;\n            }\n\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;一&amp;#39;&lt;/span&gt;);\n            }\n            &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;)\n\n            &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;);\n\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(char &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;);\n            }\n\n            &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;)\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; num; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;一&amp;#39;&lt;/span&gt;)\n        }\n        &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;)\n    }\n\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果图&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/577723156846126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h6 id=\"h6_若对你有帮助&amp;#xff0c;望采纳&amp;#xff01;_1648651360033\"&gt;若对你有帮助&amp;#xff0c;望采纳&amp;#xff01;&lt;/h6&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["js文件编写for循环嵌套", ["js文件实现图中效果，运用for循环写并且每个输出都有框框包裹"]], "Tag": "程序设计"}
{"Answer": "建议先在第一层循环上面将data.returnDTO.list.length弹出来看看，有时候不一定是第二个循环的问题！", "Konwledge_Point": "for循环的嵌套", "Question": ["js中，ajax嵌套的for循环问题", ["代码是", "\n   utils.Ajax(url, dataObject, {showLoad:true},  function(data, textStatus, jqXHR) {", "\n                    if(data.success){", "\n                        parseList(data.returnDTO.list);", "\n                    }else{", "\n                        toastr.error(data.errorString);", "\n                    }", "\n                },function(jqXHR, textStatus, errorThrown){", "\n                        toastr.error(\"请求失败\");", "\n                });", "\nfunction parseList(list){", "\n            if(list){", "\n                           utils.Ajax(url2, dataObject2, {showLoad:true},", "\n                            function(data, textStatus, jqXHR) {", "\n                                          if(data.success){", "\n                                               for(var j=0;j<data.returnDTO.list.length;j++){", "\n                                                   for(var i=0;i<5;i++){", "\n                                                     }", "\n                                                }", "\n                                            }", "\n                                        }", "\n                        }", "\n\n", "这段代码写在js里的，然后alert()测试，两个ajax都success了，但是第二个ajax里面嵌套的两个for循环，只有第一个一直循环，第二个始终进不去 。  不知道为什么。 按理说第一个for循环能进去，那里面嵌套的一个for循环一定会执行的呀。 求大家帮忙解答\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/671754083156183.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for语句的循环嵌套", ["想到这个for语句的循环嵌套是咋样运行的，求比较详细地分析，感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用上次循环好的值得话&amp;#xff0c;下次循环岂不是没有用了&amp;#xff1f;j&amp;lt;&amp;#61;3是循环满足的条件&amp;#xff0c;你不恢复为1&amp;#xff0c;不就不循环了。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["两个for循环嵌套!。!", ["一共两个for循环，为什么第二个for循环结束时，进行第一个for循环判断条件成立，再次进入第二个for循环，为什么第二个for循环里面变量还是用最初的值，而不是用上次循环好的值继续"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用嵌套for循环&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def print_numbers_triangle(number_of_rows):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,number_of_rows&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;((number_of_rows-i)*&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(j,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n\nprint_numbers_triangle(8)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python使用嵌套的for循环", ["使用嵌套的for循环，定义一个名为print_numbers_triangle (number_of_rows)的函数，该函数接受多个行作为参数。该函数应该打印一个数字三角形，如下面的例子所示。", "注意:", "•你可以假设整数总是大于1小于10。", "你必须使用一个嵌套的for循环来回答这个问题。", "\n", "def print_numbers_triangle (number_of_rows)："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;import itertools&lt;br /&gt;\nsite&amp;#61;[&amp;#39;s1&amp;#39;,&amp;#39;s2&amp;#39;]&lt;br /&gt;\nt&amp;#61;[1,2,3,4]&lt;br /&gt;\ndf &amp;#61; pd.DataFrame(columns&amp;#61;{&amp;#39;site&amp;#39;,&amp;#39;t&amp;#39;})&lt;br /&gt;\nfor combination in itertools.zip_longest(site, t):&lt;br /&gt;\n    df &amp;#61; df.append(pd.Series({&amp;#39;site&amp;#39;:combination[0],&amp;#39;t&amp;#39;:combination[1]}),ignore_index&amp;#61;True,sort&amp;#61;False)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["想问如何例如for循环创建一个dataframe(py3)", ["例如：", "\n\n", "有两个列表  ", "\n\n", "一个site=['s1','s2']", "\n\n", "一个t=[1，2，3，4]", "\n\n", "我想利用这两个组一个dataframe", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看if进来了没 在if上面console.log打印一下&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["vue中method里面使用for来遍历数组（嵌套的），为什么时而执行时而不执行（数组都有数据）？？", ["我是打算向指定数组iconAllDatas中添加接口传过来的对应的值，然后改变使用v-for循环iconAllDatas的dom元素的top、left值", "\n\n", "但是 刷新页面的时候，时而位置改变了时而没改变，经过小部分的筛查，发现接口里面的for循环没执行（接口调用成功了，数组也有数据）  急！！！！", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没理解你的思路&amp;#xff0c;如果是 x 想循环三次&amp;#xff0c;那么为什么 for x in range(16) 呢&amp;#xff1f;这不是循环16次了吗&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;你是想循环三次&amp;#xff0c;第一次得到前5个&amp;#xff0c;第二次得到中间5个&amp;#xff0c;第三次得到剩余全部&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环嵌套的使用问题怎么处理？", ["目前代码运行16次，得到16个 5 5", "需求是：", "第一次for x 循环，附属的for i 循环，从l【0】开始运行，运行后得到的结果 a=5，num=5；", "第二次for x 循环运行时，附属的for i 循环，想要可以从 l【5】（即787）开始运行，运行后得到结果 a=6，num=10，", "第三次for x 循环运行时，附属的for i 循环，想要可以从l【10】（即548）开始运行，此时for i 循环，遍历完数据，无法得到结果，停止代码；", "请问，达到这种需求，该怎么写呢？", "\n", "l", "=[", "1", ",", "4", ",", "8", ",", "1", ",", "5", ",", "787", ",", "15", ",", "4", ",", "5", ",", "6", ",", "548", ",", "45", ",", "61", ",", "41", ",", "59", ",", "21", "]\n\n", "for", " x in range(", "16", "):\n    ", "num", " = ", "0", "\n    ", "for", " i in range(len(l)):    \n        ", "if", " l[i] > ", "10", ":\n            ", "if", " num >=", "3", ":\n                ", "break", "\n        ", "if", " l[i]<", "10", ":  \n            ", "a", "=l[i]\n            ", "num", " = num+", "1", "\n    ", "print", "(a,num)\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;python是以缩进来限定代码的作用范围的&amp;#xff0c;缩进相同&amp;#xff0c;表示同级代码&amp;#xff0c;在你这个代码中&amp;#xff0c;代码隶属关系如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/039783985086129.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/622391095086135.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;外层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环从0到10遍历&amp;#xff0c;下面的逻辑执行10次&amp;#xff1a;\n    内层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环从0到10遍历&amp;#xff0c;对每个j&amp;#xff0c;都输出一个星号&amp;#xff0c;\n    如果j 等于5&amp;#xff0c;就结束内层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环&amp;#xff0c;所以&amp;#xff0c;内层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环实际只输出6个星星。\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()这一句属于外层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环&amp;#xff0c;所以&amp;#xff0c;执行完一次内层&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;循环后&amp;#xff0c;都会执行一次&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()来输出一个换行符&amp;#xff0c;一共执行10次。\n所以一共输出10 行 * 6个 &amp;#61; 60个星星\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;外层for循环控制输出10行&lt;br /&gt;内层for循环控制每行打印星星的个数&amp;#xff08;每行 j 从0到5各输出一个星星&amp;#xff0c;共6个&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/339995985086136.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python中for循环嵌套", ["图有点花，但是就是不是很理解为什么print放在上面之后会输出91还是60个星星?希望能给我掰开讲一下对于这种嵌套print等摆放位置的影响。其实图不重要，但是就是这种两个for循环嵌套输出星星的，貌似break以及print等的位置不同就会有不同的结果，我想要这么一个完整的说明，谢谢大家"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正确答案是D 输出4个#&lt;br /&gt;####&lt;br /&gt;写两次i&amp;#43;&amp;#43;就等同i&amp;#43;&amp;#61;2 即每次循环i加2&lt;br /&gt;外循环i第一次是0,第二次循环i加2是2,之后i再加2是4不满足循环条件了&lt;br /&gt;也就是说i的取值是0,2,循环两次, j的取值是1,2 也是循环两次,&lt;br /&gt;共循环2*2&amp;#61;4次,输出4个#&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["经典的for循环嵌套问题", ["我没太懂,写两次i++是咋回事??i不是从0-3吗?j不是从1-2吗,那也就是说i的取值是0,1,2,3 j的取值是1,2", "根据外层循环走一次,里面走所有次应该是3行2列,因为外层循环控制行数,内层循环控制列数,", "如果是ln输出应该是(由于不许重复输入第二个用y代替,但是请将xyabcd统统看成同一个符号)", "xy", "ab", "cd", "\n", "但是由于输出不换行,xyabcd"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以下是使用一对嵌套的“for”循环进行循环的代码&amp;#xff0c;以实现上述要求&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-css\"&gt;for(i in &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:nrow(x)) {\n  for(&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;in &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:ncol(x)) {\n    if(x[i,&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;%% &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {  &lt;span class=\"hljs-comment\"&gt;# 判断元素是否为奇数&lt;/span&gt;\n      x[i,&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;lt;- -x[i,&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 如果是奇数&amp;#xff0c;取相反数&lt;/span&gt;\n    } else {\n      x[i,&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;lt;- ifelse(x[i,&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;%% &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, x[i,&lt;span class=\"hljs-keyword\"&gt;j]^2, &lt;/span&gt;x[i,&lt;span class=\"hljs-keyword\"&gt;j]) &lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 如果是偶数&amp;#xff0c;平方&amp;#xff1b;否则不变&lt;/span&gt;\n    }\n  }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;外层循环使用变量i循环遍历矩阵的行&amp;#xff0c;内层循环使用变量j循环遍历矩阵的列。&lt;/p&gt;\n&lt;p&gt;在循环的每个位置&amp;#xff0c;我们使用“%%”运算符来判断x中的元素是否为奇数。如果是奇数&amp;#xff0c;则将该元素替换为其相反数&amp;#xff08;取负数&amp;#xff09;&amp;#xff1b;否则&amp;#xff0c;使用ifelse()函数判断该元素是否为偶数。如果是偶数&amp;#xff0c;则将该元素替换为其平方&amp;#xff1b;否则&amp;#xff0c;该元素不变。&lt;/p&gt;\n&lt;p&gt;在循环结束后&amp;#xff0c;矩阵x的所有奇数元素都被替换为了相反数&amp;#xff0c;而所有偶数元素都被替换为了它们的平方。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["R语言for循环嵌套求解", ["x <- matrix(sample(1:25), byrow = T, ncol = 5)", "使用一对嵌套的“for”循环（一个用于行索引(i)循环，另一个用于列索引(j)循环），循环到矩阵x中的", "位置，如果x的关联元素是奇数，则将该元素替换为它的负数。如果它是偶数，那么就使用ifelse（）函数将元", "素替换为它的平方"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;&lt;p&gt;你内循环的判断条件是 j&amp;lt;i&amp;#xff0c;i &amp;#61; 1&amp;#xff0c;内循环 不走的&amp;#xff0c; 第一遍外循环 i &amp;#61; 1&amp;#xff0c; k &amp;#61; 0&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;你的k定义在 循环外面&amp;#xff0c;它是 在不断累加的&amp;#xff0c;你要在 内循环之前 重新赋值 k &amp;#61; 0;&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/946136635176128.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于Java基础编程中For循环嵌套的一些问题", ["\npackage javalearning;\n\n", "public", " ", "class", " ", "ContinueTest", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n        ", "int", " k = ", "0", ";\n        ", "for", "(", "int", " i = ", "1", ";i<=", "1000", ";i++) {\n            ", "//int k = 0;", "\n            ", "for", "(", "int", " j = ", "1", ";j<i;j++) {\n                ", "if", "(i%j==", "0", ") {\n                    k += j;\n                }\n            }\n            ", "if", "(i==k) {\n                System.out.", "println", "(i + ", "\"是完数\"", ");\n            }\n        }\n    }\n}\n\n", "\n", "在for循环中重置k可以得到正确结果，但是如果在for循环外面对l进行初始化，虽然不能得到全部的结果，但是应该能得到第一个满足条件的i的值，可为什么最后什么都没有输出？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你的第一个嵌套没有预分配H的大小&amp;#xff0c;所以不断跑循环不断分配H大小&amp;#xff0c;&lt;br /&gt;等到第二个嵌套开始之前H已经分配好了大小&amp;#xff0c;所以第二个嵌套不再需要再分配H&amp;#xff0c;直接捡人家现成的当然跑得快&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;clc&lt;/span&gt;;clear\n&lt;span class=\"hljs-attribute\"&gt;H&lt;/span&gt; &amp;#61; zeros(&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;tic&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;H&lt;/span&gt;(i,j)&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/(i&amp;#43;j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;toc&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;H&lt;/span&gt; &amp;#61; zeros(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;tic&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;H&lt;/span&gt;(i,j)&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/(i&amp;#43;j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;toc&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你试试这个自然用时差不多了&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Matlabfor循环嵌套，运行速度与嵌套顺序的关系？", ["\n", "代码和运行结果如图所示，为什么第二种嵌套顺序比第一种嵌套顺序运行更快？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-objectivec\"&gt;#include&amp;lt;stdio.h&amp;gt;\nmain()\n{\n    float x;\n\tint one,two,five,exit;\n\texit&amp;#61;0;\n\tprintf(&amp;#34;请输入金额(元)&amp;#xff1a;&amp;#34;);\n\tscanf(&amp;#34;%f&amp;#34;,&amp;amp;x);\n\tfor(one&amp;#61;0;one&amp;lt;&amp;#61;x*10;one&amp;#43;&amp;#43;)\n\t{\n\t\tfor(two&amp;#61;0;two&amp;lt;&amp;#61;x*5;two&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tfor(five&amp;#61;0;five&amp;lt;&amp;#61;x*2;five&amp;#43;&amp;#43;)\n\t\t\t{\n\t\t\t\tif(one&amp;#43;two*2&amp;#43;five*5&amp;#61;&amp;#61;x*10)\n\t\t\t\t{\n\t\t\t\t\tprintf(&amp;#34;可以用%d个一角的 &amp;#xff0b; %d个两角的 &amp;#43; %d个五角的得到%.2f元。&amp;#34;,one,two,five,x);\n\t\t\t\t\texit&amp;#61;1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(exit&amp;#61;&amp;#61;1)\n\t\t\tbreak;\n\t\t}\n\t\tif(exit&amp;#61;&amp;#61;1)\n\t\tbreak;\n\t }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"46\" src=\"https://img-ask.csdnimg.cn/upload/1624636779435.png\" width=\"381\" /&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言  循环的嵌套（凑硬币的小程序）", [" ", "\n\n", "\n", "#include<stdio.h>\nmain()\n{\n\tint x,one,two,five,exit;\n\texit=0;\n\tprintf(\"请输入金额(元)：\");\n\tscanf(\"%d\",&x);\n\tx=5;\n\tfor(one=1;one<x*10;one++)\n\t{\n\t\tfor(two;two<x*5;two++)\n\t\t{\n\t\t\tfor(five;five<x*2;five++)\n\t\t\t{\n\t\t\t\tif(one+two*2+five*5==x*10)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"可以用%d个一角的 ＋ %d个两角的 + %d个两角的得到%d元。\");\n\t\t\t\t\texit=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(exit==1)\n\t\t\tbreak;\n\t\t}\n\t\tif(exit==1)\n\t\tbreak;\n\t }\n\t\n}", "\n\n", " 运行完之后就成这样了，不知道哪里错了。", "\n\n", "\n\n", "求个大佬帮帮忙。", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目代码如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Demo&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;//打印直角三角形1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(a);\n                a&amp;#43;&amp;#43;;\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;测试截图&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/896941221536138.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["打印图形 用JAVAfor循环嵌套", ["1", "23", "456", "78910"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;外层循环控制行的输出&amp;#xff0c;内层循环控制列的输出&amp;#xff0c;这里使用两个内层循环&amp;#xff0c;一个是输出空格&amp;#xff0c;一个是输出字符&lt;br /&gt;比如输入5 然后对于第一行&amp;#xff0c;外层循环i&amp;#61;1&lt;br /&gt;内层循环首先先输出空格&amp;#xff0c;我们发现规律&amp;#xff0c;第1行是输出4个空格 然后输出1个字符&amp;#xff0c;输出完成后就换行&lt;br /&gt;i&amp;#61;2是就是先输出3个空格 然后输入两个字符&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["一个for循环嵌套的问题", ["不好意思麻烦老哥们，我想问一个c++编程题目", "\n", "\n", "我能明白是什么意思，但具体操作又整不明白了😥", "可以不发代码，点播我一下也行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你在循环代码里修改了循环变量s啊&lt;br /&gt;你应该在循环中将s全部改为x&amp;#xff0c;将x改为s&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;#34;stdio.h&amp;#34;&lt;/span&gt;\nint main()\n{int a,b,c,x,&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;0,n;\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;100;s&amp;lt;&amp;#61;n;s&amp;#43;&amp;#43;)\n{&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;s;\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;x/100;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;x%100;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;x/10;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;x%10;\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;x;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&lt;span class=\"hljs-number\"&gt;*a&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*a&lt;/span&gt;&amp;#43;b&lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt;&amp;#43;c&lt;span class=\"hljs-number\"&gt;*c&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*c&lt;/span&gt;&amp;#61;&amp;#61;s)\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,s);\n}\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语水仙花数for语句循环嵌套", ["#include\"stdio.h\"", "main()", "{int a,b,c,x,s=0,n;", "scanf(\"%d\",&n);", "for(s=100;s<=n;s++)", "{x=s;", "a=s/100;", "s=s%100;", "b=s/10;", "s=s%10;", "c=s;", "if(a", "a", "a+b", "b", "b+c", "c", "c==x)", "printf(\"%d\\n\",x);", "}", "}", "为什么这样打出来全是11111111111…麻烦解释一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; break 跳出当前的循环&amp;#xff0c;在while语句中使用break语句&amp;#xff0c;是只跳出while循环。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言中循环的嵌套问题", ["for语句里面嵌套while语句，在while语句中使用break语句，是只跳出while循环还是说会跳出for循环"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;分号去掉&amp;#xff0c;不然你第一个for循环到这里就结束了&amp;#xff0c;你下边的break没有在循环里边&amp;#xff0c;或者switch里边就会报错&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/045440673186147.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环嵌套的if中的break报错", ["\n", "void", " ", "maopao", "(", "int", " arr[], ", "int", " se)", "\n", "{\n    ", "int", " i;\n    ", "for", " (i = ", "0", "; i < se - ", "1", "; i++);\n    {\n        ", "int", " z;\n        ", "int", " f = ", "1", ";\n        ", "for", " (z = ", "0", "; z < se - ", "1", " - i; z++)\n        {\n            ", "int", " a = arr[z];\n            arr[z] = arr[z + ", "1", "];\n            arr[z + ", "1", "] = a;\n            f = ", "0", ";\n        }\n        ", "if", " (f == ", "1", ")\n        {\n            ", "break", ";\n\n        }\n    }\n", "\n", "```", "\n", "```为什么使用if语句中 的break去跳出上面的for循环时会报非法break"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为当i&amp;#61;3,j&amp;#61;1时&amp;#xff0c;n为10&amp;#xff0c;打印一个换行&amp;#xff0c;然后就break跳出了内层循环&amp;#xff0c;n没有&amp;#43;&amp;#43;&amp;#xff0c;仍为10&amp;#xff1b;&lt;br /&gt;&lt;br /&gt;然后当外层循环开始新一轮循环时&amp;#xff0c;i&amp;#61;4,j&amp;#61;1&amp;#xff0c;进入到内层循环&amp;#xff0c;n&amp;#61;10&amp;#xff0c;n%5还是等于0&amp;#xff0c;加上前面n&amp;#61;10时打印的一个换行&amp;#xff0c;和这次的又一个换行&amp;#xff0c;所以就显示为第三行直接空行了。&amp;#xff08;可以在第一个if中加个打印语句&amp;#xff0c;观察下i&amp;#xff0c;j&amp;#xff0c;n的值的变化&amp;#xff09;。&lt;br /&gt;&lt;br /&gt;如果要不显示第三行的空行&amp;#xff0c;可以在判断打印换行的if加个条件&amp;#xff1a;i!&amp;#61;3即可&amp;#xff1b;如果第一行数字之前的空行也不要&amp;#xff0c;可以再加个条件:n!&amp;#61;0.&lt;br /&gt;&lt;br /&gt;测试代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;j&amp;#43;&amp;#43;,n&amp;#43;&amp;#43;){\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n%&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;i!&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;amp;&amp;amp;n!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){  &lt;span class=\"hljs-comment\"&gt;// 当i&amp;#61;&amp;#61;3&amp;#xff0c;j&amp;#61;&amp;#61;1时&amp;#xff0c;n&amp;#61;10,此时会打印一个换行&amp;#xff0c;光标跳转到第三行&amp;#xff08;以显示第一次显示数字的那行为第一行&amp;#xff09; &lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;i&amp;#61;%d,j&amp;#61;%d,n&amp;#61;%d&amp;#34;,i,j,n);&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            }\n            \n &lt;span class=\"hljs-comment\"&gt;// 然后break退出了&amp;#xff0c;n没有&amp;#43;&amp;#43;&amp;#xff0c;此时n仍等于10&amp;#xff0c;&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;//下次再进入内层循环&amp;#xff0c;i&amp;#61;4,j&amp;#61;1时&amp;#xff0c;前面的if还要打印一个换行 ,此时会光标会跳转到第四行(以显示第一次显示数字的那行为第一行&amp;#xff09; &lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;// 所以&amp;#xff0c;因为这两个换行&amp;#xff0c;而显示出第三行空行了&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;// 如果要让第三行不空行&amp;#xff0c;可以在上面的if加个条件i!&amp;#61;3 ,如果第一行数字之前的空行也不要&amp;#xff0c;可以再加个条件n!&amp;#61;0    &lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;amp;&amp;amp;j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            \n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;,i*j);\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n} \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/01265059397615.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言中for循环嵌套，内循环遇到break语句结束本次内循环 ，输出会换行吗？", ["C语言中for循环嵌套，内循环遇到break语句结束本次内循环 ，为什么第三行会直接换行呢？求解", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def get_sum_letter_fre&lt;span class=\"hljs-string\"&gt;q(words_list, letter)&lt;/span&gt;:\n    num&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; word in words_list:\n        num&amp;#43;&amp;#61;word.count(letter)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; num\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(get_sum_letter_fre&lt;span class=\"hljs-string\"&gt;q([&amp;#39;io&amp;#39;,&amp;#39;ae&amp;#39;],&amp;#39;e&amp;#39;)&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;一定要2个for用下面的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ndef get_sum_letter_freq(words_list, letter):\n    &lt;span class=\"hljs-attribute\"&gt;num&lt;/span&gt;&amp;#61;0\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; word &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; words_list:\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; c &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; word:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;&amp;#61;letter:\n                num&amp;#43;&amp;#61;1\n    return num\n \n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(get_sum_letter_freq([&lt;span class=\"hljs-string\"&gt;&amp;#39;life&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;is&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;long&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;journery&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;abc123&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;list1&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-string\"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(get_sum_letter_freq([&lt;span class=\"hljs-string\"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;grapes&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;345&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(get_sum_letter_freq([&lt;span class=\"hljs-string\"&gt;&amp;#39;io&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;ae&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/178222898356135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python使用for嵌套的for循环", ["使用嵌套的for循环，定义一个名为get_sum_letter_freq(words_list, letter)的函数，该函数接受一个单词列表作为参数，并返回单词参数列表中给定字母的频率计数。例如:", "\n", "如果形参是空列表，或者没有一个单词包含给定的字母，程序应该返回0。", "\n", "def get_sum_letter_freq(words_list, letter):"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;147&lt;br /&gt;258&lt;br /&gt;369&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["那个在for循环嵌套里的我理解的是二维数组i,j交换，但是不对啊，求解析一下", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Firstly, you don't need the While loop, it's pointless and probably causing issues.&lt;/p&gt;\n\n&lt;p&gt;Secondly, you're using &lt;code&gt;$i&lt;/code&gt; for both your rows and your columns, you can't use the same variable for both. Use &lt;code&gt;$i&lt;/code&gt; for one and &lt;code&gt;$j&lt;/code&gt; for the other. This should work:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if(isset($_POST['submit'])) {\n\n    $rows = (int)$_POST['row_num'];\n    $cols = (int)$_POST['col_num'];\n    $n = 1;\n\n    echo '&amp;lt;table id=\"\"&amp;gt;';\n\n    for($i = 0; $i &amp;lt; $rows; $i++) {\n        echo '&amp;lt;tr&amp;gt;';\n\n        for($j = 0; $j &amp;lt; $cols; $j++) {\n            echo '&amp;lt;td&amp;gt;&amp;lt;input type=\"text\" name=\"field_' . $n++ . '\"&amp;gt;&amp;lt;/td&amp;gt;';\n        }\n\n        echo '&amp;lt;/tr&amp;gt;';\n    }\n\n    echo '&amp;lt;/table&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP使用while和嵌套for循环错误地循环输出", ["\n\n", "Attempting to generate table columns and rows based on input. With smaller numbers it appears to work appropriately, for example inputting 2 rows and 3 cols. But when inputting slightly larger numbers like 5 for rows will output an incorrect amount of rows sometimes looping indefinitely.", "\n\n", "if(isset($_POST['submit'])) {\n\n    $rows = (int)$_POST['row_num'];\n    $cols = (int)$_POST['col_num'];\n    $n = 1;\n    $e = 0;\n\n    echo '<table id=\"\">';\n\n    while(($e < $rows) && ($e < $cols)) {\n\n        for($i = 0; $i < $rows; $i++) {\n            echo '<tr>';\n\n            for($i = 0; $i < $cols; $i++) {\n                echo '<td><input type=\"text\" name=\"field_' . $n . '\"></td>';\n                $n++;\n            }\n\n            echo '</tr>';\n        }\n\n        $e++;\n    }\n\n    echo '</table>';\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个for是一个一个创建空列表的&amp;#xff0c;当第一个for进入循环的时候创建了第一个空列表放入的arr里&amp;#xff0c;arr就成了[[]]&amp;#xff0c;然后进入第二个循环此时在第二个循环里i一直是0直到第二个循环结束&amp;#xff0c;i就会变成i&amp;#xff0c;那么arr[0]里就循环放入0,1,2,3,4,arr里也会多出一个空list&amp;#xff0c;程序的结果应该是这样的[[]],[[0]],[[0,1]]...[[0,1,2,3,4]],[[0,1,2,3,4],[]],[[0,1,2,3,4],[0]],[[0,1,2,3,4],[0,1]]...[[0,1,2,3,4],[0,1,2,3,4]]...[[0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4]]&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python嵌套for循环和二维列表的理解", ["如图", "\n", "这个程序怎么理解会好一点呀 感觉一知半解的 第一个range（4）循环i的 是创建了四个表嘛 然后后面j填充进0.1.2.3.4……"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I suggest you use &lt;a href=\"http://developer.yahoo.com/yql/\" rel=\"nofollow\"&gt;YQL&lt;/a&gt;,\nIt's pretty fast and would prevent your IP from getting black-listed...&lt;/p&gt;\n\n&lt;p&gt;Using it with PHP is fairly simple - &lt;a href=\"http://developer.yahoo.com/yql/guide/yql-code-examples.html#yql_php\" rel=\"nofollow\"&gt;look here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Best of luck !&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Foreach循环嵌套在For循环问题中", ["\n\n", "I have a script that parses through 23 pages of a page and grabs the names of a directory, However the connection resets and times out. Is it because of this nest foreachloop in the for loop?", "\n\n", "<?php\n\nheader('Content-type: text/html; charset=utf-8'); // this just makes sure encoding is      right\n include('simple_html_dom.php'); // the parser library\n\n// you were trying to parse the wrong link.. your previous link did not have <div> tag with commentText class .. I chose a random link.. choose link for whichever professor you like or grab the links of professor from previous page store it in an array and loopr through them to get comments\n $i=1;\nfor($i; $i < 23;$i++){\n$html = file_get_html(\"http://www.ratemyprofessors.com/SelectTeacher.jsp?sid=834&pageNo=$i\"); // the url for the teacher rating profile\n\n //your div tag has class \"comment\" not \"commentText\"\nforeach($html->find(\"div[class=profName]\") as $content){\n echo $content->plaintext;\n echo \"<br >\";  \n  }\n } \n\n\n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;%\r\n\t\tList&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\n\t\tlist.add(\"a\");\r\n\t\tlist.add(\"b\");\r\n\t\tlist.add(\"c\");\r\n\t\t\r\n\t\tList&lt;String&gt; member = new ArrayList&lt;String&gt;();\r\n\t\tmember.add(\"hello\");\r\n\t\tmember.add(\"world\");\r\n\t\t\r\n\t\t\r\n\t\trequest.setAttribute(\"list\", list);\r\n\t\t\r\n\t\tfor(int i = 0; i &lt; list.size(); i++) {\r\n\t\t\trequest.setAttribute(\"option\" + i, member);\r\n\t\t}\r\n\t\t\r\n\t%&gt;\r\n\t\r\n\t&lt;c:forEach items=\"${requestScope.list}\" varStatus=\"status\" var=\"item\"&gt;\r\n\t\t${item}的选项\r\n\t\t&lt;c:set value=\"${'option'}${status.index}\" var=\"option\" /&gt;\r\n\t\t&lt;c:forEach items=\"${requestScope[option]}\" var=\"i\"&gt;\r\n\t\t\t${i}\r\n\t\t&lt;/c:forEach&gt;\r\n\t\t\r\n\t\t&lt;br&gt;\r\n\t&lt;/c:forEach&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["forEach嵌套循环的问题", ["程序中：", "\n\n", "List firstList = \n    for(int i=0; i<firstList.size(); i++) {\n        List secondListList = \n        request.setAttribute(\"option\" + i, secondList);\n    }\nrequest.setAttribute(\"first\", firstList);", "\n\n", " ", "页面中：", "\n\n", "<%int i=0; %>\n<c:forEach items=\"${first }\" var=\"list\">\n    ${list.title }\n    <c:forEach items=\"${_____ }\" var=\"olist\">\n    <%i++; %>\n    ${olist.optioni }</span>\n    </c:forEach>\n</c:forEach>", "\n\n", " ", "请问我内层循环的items=\"${__________ }\"该怎么填？", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;lt;template slot-scope&amp;#61;&amp;#34;scope&amp;#34;&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;lt;div v-for&amp;#61;&amp;#34;(item,index) in scope.row&amp;#34; :key&amp;#61;&amp;#34;index&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;lt;/tamplate&amp;gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["element UI中 v-for取嵌套数据集合失败", ["\n", "        <el-table\n          v-loading=\"loading\"\n          :data=\"dailyinfos\"\n          style=\"width: 100%\"\n          max-height=\"500\"\n          border\n        >\n          <el-table-column prop=\"memberid\" label=\"编号\" />\n          <el-table-column prop=\"name\" label=\"姓名\" />\n          <el-table-column prop=\"mouth\" label=\"月份\" />\n          <el-table-column prop=\"ddate\" label=\"日期\" />\n          <el-table-column prop=\"otherDailyHours\" label=\"其他工时\" />\n          <el-table-column prop=\"totalDailyHours\" label=\"总工时\" />\n          <template v-for=\"(item, index) of projectcont\"><!--projectcont循环次数-->\n            <el-table-column label=\"projectHours[index].key\" :prop=\"projectHours[index].key\" :key=\"index\" v-if=\"projectHours!=null\">\n              <template>\n              <el-input v-model=\"projectHours[index].value\">{{projectHours[index].projectHour}}</el-input>\n              </template>\n            </el-table-column>\n          </template>\n        </el-table>", "\n\n", "数据源", "\n\n", "\n\n", "问题：", "\n\n", "数组中的projrctHours一直为空 获取不到数据", "\n\n", "界面图：", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your second loop will only run after you have echoed &lt;code&gt;\"&amp;lt;div class='prog'&amp;gt;\".$boss_count_killed.\"&amp;lt;mark&amp;gt;/&amp;lt;/mark&amp;gt;\".$boss_count_alive.\"&amp;lt;/div&amp;gt;\";&lt;/code&gt;, which is why it's echoing 0/0 the first time.&lt;/p&gt;\n\n&lt;p&gt;If you want it to echo 3/10 the first time, you need to run your inner loop first to calculate the values, then echo. In your case it would be something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($raids as $raid)\n{\n  $raid_name = $raid-&amp;gt;getName();\n  $bosses_html = \"\";\n  foreach ($raid-&amp;gt;getRaidProgression() as $boss)\n  {\n    $boss_count_alive++;\n    $class = \"fas fa-times fa-sm\";\n    $youtube = \"\";\n    if ($boss-&amp;gt;getStatus() == 1)\n    {\n      $class = \"fas fa-check fa-sm\";\n      $boss_count_killed++;\n    }\n    $bosses_html .= \"&amp;lt;div&amp;gt;\";\n    $bosses_html .= \"&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;i class='\".$class.\"'&amp;gt;&amp;lt;/i&amp;gt;\".$boss-&amp;gt;getBoss().\"&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;\";\n    $bosses_html .= \"&amp;lt;/div&amp;gt;\";\n  }\n  echo \"&amp;lt;div class='raid'&amp;gt;\";\n  echo \"&amp;lt;div class='name'&amp;gt;\";\n  echo \"&amp;lt;a class='collapsed' data-toggle='collapse' data-target='#raid\".$raid_name.\"' aria-expanded='false' aria-controls='raid\".$raid_name.\"'&amp;gt;\";\n  echo $raid_name;\n  echo \"&amp;lt;/a&amp;gt;\";\n  echo \"&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;div class='prog'&amp;gt;\".$boss_count_killed.\"&amp;lt;mark&amp;gt;/&amp;lt;/mark&amp;gt;\".$boss_count_alive.\"&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;div class='bar'&amp;gt;\";\n  echo \"&amp;lt;div class='color' style='width: 60%'&amp;gt;&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;div class='gradient'&amp;gt;&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;img src='img/layout/raid/zul_gurub.jpg'&amp;gt;\";\n  echo \"&amp;lt;/div&amp;gt;\";\n  echo \"&amp;lt;div id='raid\".$raid_name.\"' class='collapse raidCollapse' data-parent='#toggleraid'&amp;gt;\";\n  echo \"&amp;lt;/div&amp;gt;\";\n  echo $bosses_html;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this example, the first set of echoes are moved below the inner loop. The html that would normally be echoed in the inner loop is stored in a variable to be echoed later at the end.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在嵌套循环内计数并在第二个嵌套循环之前使用值", ["\n\n", "So I have a nested loop due to getting data from two different sources.\nI want to count how many times it goes through the second loop, and use that value in the first loop.", "\n\n", "I have 2 entries in the RaidFacade\nAnd 10 entries in \"GetRaidProgression\"", "\n\n", "$raid_facade = new RaidFacade();\n$raids = $raid_facade->getAll();\nunset($raid_facade);\n<div class='col-lg-4' id='toggleraid'>\n  <div class='topbar'>Raid Progress</div>\n  <?php\n    $boss_count_alive = 0;\n    $boss_count_killed = 0;\n    foreach ($raids as $raid)\n    {\n      $raid_name = $raid->getName();\n      echo \"<div class='raid'>\";\n      echo \"<div class='name'>\";\n      echo \"<a class='collapsed' data-toggle='collapse' data-target='#raid\".$raid_name.\"' aria-expanded='false' aria-controls='raid\".$raid_name.\"'>\";\n      echo $raid_name;\n      echo \"</a>\";\n      echo \"</div>\";\n      echo \"<div class='prog'>\".$boss_count_killed.\"<mark>/</mark>\".$boss_count_alive.\"</div>\";\n      echo \"<div class='bar'>\";\n      echo \"<div class='color' style='width: 60%'></div>\";\n      echo \"</div>\";\n      echo \"<div class='gradient'></div>\";\n      echo \"<img src='img/layout/raid/zul_gurub.jpg'>\";\n      echo \"</div>\";\n      echo \"<div id='raid\".$raid_name.\"' class='collapse raidCollapse' data-parent='#toggleraid'>\";\n      foreach ($raid->getRaidProgression() as $boss)\n      {\n        $boss_count_alive++;\n    $class = \"fas fa-times fa-sm\";\n    $youtube = \"\";\n        if ($boss->getStatus() == 1)\n        {\n          $class = \"fas fa-check fa-sm\";\n      $boss_count_killed++;\n        }\n        echo \"<div>\";\n        echo \"<div><span><i class='\".$class.\"'></i>\".$boss->getBoss().\"</span></div>\";\n    echo \"</div>\";\n      }\n      echo \"</div>\";\n    }\n  ?>\n</div>\n", "\n\n", "In the ", "div class='prog'", " I would like to use the ", "$boss_count_alive", " and ", "$boss_count_killed", " values.", "\n\n", "This is not happening, the first entry returns 0/0, the next one returns 3/10 (Which are my expected result for first entry)", "\n\n", "To get a visual look:", "\n\n", "\n\n", "Thanks in advance!", "\n    "]], "Tag": "程序设计"}
{"Answer": "高级编程语言倡导结构化的程序设计，第一种方法类似于C／C＋＋的goto语句（虽然java的goto只是保留字，但这种标签写法就相当于增强的goto），不利于结构化程序设计，看的也比较麻烦。第二种则具有普遍性，通过boolean类型判断，易于观察。", "Konwledge_Point": "for循环的嵌套", "Question": ["java跳出嵌套循环的处理方法", ["关于java中跳出嵌套循环，目前有两种说法", "\n1.使用标签", "\nok:", "\nfor(int i=0;i<10;i++)     {", "\n        for(int j=0;j<10;j++)            {", "\n               if(j == 2) break ok;", "\n        }", "\n}", "\n\n", "2.内层循环中控制外层循环的条件", "\nboolean f = true ;", "\nfor(int i=0;i<10&&f;i++)     {", "\n        for(int j=0;j<10;j++)            {", "\n               if(j == 2) {", "\n                    f=false;", "\n                    break;", "\n               }", "\n        }", "\n}", "\n推荐方法2的人居多，请问这是为什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;内层循环是用来判断i是否为素数的啊&lt;br /&gt;素数判断&amp;#xff0c;是检查从2到i-1的所有整数中&amp;#xff0c;是否有某个整数能够整除i&amp;#xff0c;如果可以&amp;#xff0c;那么i就不是素数。所以for(j&amp;#61;2;j&amp;lt;i;j&amp;#43;&amp;#43;)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么for循环是i=3然后嵌套的那个j=2我有点晕死", ["include<stdio.h>", "\n", "int main()", "{", "    int i,j,sum;", "    for(i=3;i<=10000;i++)", "    {", "        sum=1;//注意sum只能在循环内部初始化，否则每次大循环开始sum不为1", "        for(j=2;j<i;j++)", "        {", "            if((i%j)==0)", "            {", "                sum=sum+j;", "            }", "        }", "        if(sum==i)", "        {", "            printf(\"%d \",i);", "        }", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "cin&gt;&gt;c[b];\r\n这里c的下标是0~3，你这个是越界了。\r\nfor(i=1;i&lt;=a;i++)\r\n你这里重复n次，只有最后一次有效。其它的都被冲掉了。", "Konwledge_Point": "for循环的嵌套", "Question": ["看一下为啥a=c【4】（c++循环嵌套的一个问题，）", ["#include", "\nusing namespace std;", "\nint main()", "\n{", "\n    int a,b,i,c[4];", "\n    cin>>a;", "\n    for(i=1;i<=a;i++)", "\n    {", "\n        for(b=1;b<=4;b++)", "\n        {", "\n            cin>>c[b];", "\n        }", "\n        cout<<c[1]<<c[2]<<c[3]<<c[4]<<a;}", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since you already know the keys you could just use a foreach to access them an point to that key then loop. Something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($result['GetOrderListResult']['ResultData']['OrderResponseItem'] as $value) {\n    $order_id = $value['OrderID'];\n    // your other processes\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP嵌套数组循环嵌套结果", ["\n\n", "I am experimenting with my first API and getting stuck with the results. I am getting an Array Back:", "\n\n", "Array\n(\n    [GetOrderListResult] => Array\n        (\n            [Status] => Success\n            [MessageCode] => 0\n            [ResultData] => Array\n                (\n                    [OrderResponseItem] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [NumberOfMatches] => 2\n                                    [OrderTimeGMT] => 2014-05-05T03:23:00\n                                    [LastUpdateDate] => 2014-05-28T11:41:45.953\n                                    [TotalOrderAmount] => 12.7800\n                                    [OrderState] => Active\n                                    [DateCancelledGMT] => \n                                    [OrderID] => 138711\n                                    [ClientOrderIdentifier] => 138711\n                                    [SellerOrderID] => \n                                    [OrderStatus] => Array\n                                        (\n                                            [CheckoutStatus] => NotVisited\n                                            [CheckoutDateGMT] => 1900-01-01T00:00:00\n                                            [PaymentStatus] => NotSubmitted\n                                            [PaymentDateGMT] => 1900-01-01T00:00:00\n                                            [ShippingStatus] => Unshipped\n                                            [ShippingDateGMT] => 1900-01-01T00:00:00\n                                            [OrderRefundStatus] => NoRefunds\n                                        )\n\n                                )\n\n                            [1] => Array\n                                (\n                                    [NumberOfMatches] => 2\n                                    [OrderTimeGMT] => 2014-05-05T03:23:00\n                                    [LastUpdateDate] => 2014-05-28T12:59:01.78\n                                    [TotalOrderAmount] => 6.3900\n                                    [OrderState] => Active\n                                    [DateCancelledGMT] => \n                                    [OrderID] => 138750\n                                    [ClientOrderIdentifier] => 138750\n                                    [SellerOrderID] => \n                                    [OrderStatus] => Array\n                                        (\n                                            [CheckoutStatus] => NotVisited\n                                            [CheckoutDateGMT] => 1900-01-01T00:00:00\n                                            [PaymentStatus] => NotSubmitted\n                                            [PaymentDateGMT] => 1900-01-01T00:00:00\n                                            [ShippingStatus] => Unshipped\n                                            [ShippingDateGMT] => 1900-01-01T00:00:00\n                                            [OrderRefundStatus] => NoRefunds\n                                        )\n\n                                )\n\n                        )\n\n                )\n\n        )\n\n)\n", "\n\n", "Now the onyl way I know how to reference a fied such as the order id in the array is: ", "\n\n", "  echo \"Order ID: \".$result['GetOrderListResult']['ResultData']['OrderResponseItem']['0']['OrderID'];\n", "\n\n", "But I want to be able to loop through the array of orders and execute code for each item, could somewbody please point me in the right direction for:", "\n\n", "a) is there a better way to refernce these fields?\nb) how do I loop through the OrderResponseItem part of the array?", "\n\n", "The only loop I could think of was for the whole array not nested items in the array.", "\n\n", "Sorry if I'm missing something simple....", "\n\n", "Thanks and if you need the data in any other format please let me know.", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n \r\n#include \"stdafx.h\"\r\n#define N 6\r\n\r\nint main()\r\n{\r\n\tchar a = 'A';\r\n\r\n\tfor (int i = 0; i &lt; N; i++) {\r\n\t\tfor (int j = 0; j &lt;= i; j++) {\r\n\t\t\tprintf(\"%c\", a++);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201611/06/1478444592_140709.jpg)", "Konwledge_Point": "for循环的嵌套", "Question": ["在c语言中用嵌套循环打印字母", ["使用嵌套循环，按下面的格式打印字母：", "\nA", "\nBC", "\nDEF", "\nGHIJ", "\nKLMNO", "\nPQRSTU", "\n\n", "我用了最大努力终于打成下面这样了：", "\n#include", "\nint main(void)", "\n{", "\n    int i,j;", "\n    char a = 'A';", "\n\n", "for (i = 0; i < 6; i++,a++) {\n    for (j = 0; j < i + 1; j++)\n        printf(\"%c\", a + j);\n    printf(\"\\n\");\n}\ngetchar();\nreturn 0;\n", "\n\n", "}", "\n然后调试", "\n\n", "谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;j&amp;lt;i;j&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;i)           &lt;span class=\"hljs-comment\"&gt;//你的判断位置不对&lt;/span&gt;\n{\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt; ,i);\n}\n}\n\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言for循环求100～200素数", ["请问这个代码有什么问题", "#include<stdio.h>", "int main()", "{", "    int i=100;", "    int j=2;", "    for(i=100;i<=200;i++)", "    {", "        for(j=2;j<i;j++)", "        {", "            if(i%j==0)", "            {", "             break;", "            }", "        }", "    }", "    if(j==i)", "    {", "        printf(\"%d\" ,i);", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*i)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python循环嵌套用for循环这么弄成这样", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;楼主&amp;#xff0c;你看你第四行代码&amp;#xff0c;有一个对j的操作哦&amp;#xff0c;你可以更换不同的变量试一试&amp;#xff0c;望采纳&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["用嵌套循环结构打印一个图形", ["问题", "打印这个图形", "\n", "为什么代码的第五行的for中如果第一个分号前写上j=1，那么输出的就是正确图形，如果不写j=1，输出的就是我运行结果里的那个图形？我在定义j变量的时候有初始化j=1呀", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " i=", "1", ",j=", "1", ";\n    ", "for", "(;i<=", "3", ";i++){\n        ", "for", "(;j<=", "3", "-i;j++)", "printf", "(", "\" \"", ");\n        ", "for", "(j=", "1", ";j<=", "2", "*i", "-1", ";j++)", "printf", "(", "\"*\"", ");\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    ", "for", "(i=", "2", ";i>", "0", ";i--){\n        ", "for", "(j=", "1", ";j<=", "3", "-i;j++)", "printf", "(", "\" \"", ");\n        ", "for", "(j=", "1", ";j<=", "2", "*i", "-1", ";j++)", "printf", "(", "\"*\"", ");\n        ", "printf", "(", "\"\\n\"", ");\n    }\n}\n", "\n", "运行结果", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先执行内部循环输出某一行的*&lt;br /&gt;然后执行外部循环&amp;#xff0c;输出回车换行&amp;#xff0c;起到画下一行的目的&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["这个for嵌套循环是如何实现的，是先执行内部的循环，再到外部的吗，有没有哪位朋友可以解答一下", ["这个for嵌套循环是如何实现的，是先执行内部的循环，再到外部的吗，有没有哪位朋友可以解答一下", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Twofold recursion, over both arrays - see the comments:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// recursives\nvoid find_matches(int *arr, int *bee, int *matches, int current_position_in_arr);\nvoid find_matches_in_bee(int *arr, int *bee, int *matches, int current_position_in_arr, int current_position_in_bee);\n\n// wrapper\nvoid find_matches(int *arr, int *bee, int *matches) {\n    find_matches(arr, bee, matches, 0);\n}\n\n// outer loop : iterate over 'arr'\nvoid find_matches(int *arr, int *bee, int *matches, int current_position_in_arr) {\n    // check where arr[current_position_in_arr] is present in bee\n    find_matches_in_bee(arr, bee, matches, current_position_in_arr, 0);\n\n    // \"next iteration of loop\" - we check the next element in arr\n    if (current_position_in_arr + 1 &amp;lt; length) {\n        find_matches(arr, bee, matches, current_position_in_arr + 1);\n    }\n}\n\n// inner loop : iterate over 'bee'\nvoid find_matches_in_bee(int *arr, int *bee, int *matches, int current_position_in_arr, int current_position_in_bee) {\n    // do your business magic\n    if (arr[current_position_in_arr] == bee[current_position_in_bee]) {\n       ....\n    }\n\n    // \"next iteration of loop\" - we check the next element in bee\n    if (current_position_in_bee + 1 &amp;lt; length) {\n        find_matches_in_bee(arr, bee, matches, current_position_in_arr, current_position_in_bee + 1);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Invoke the same way as before:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;find_matches(arr, bee, matches);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The lesson here is that you can replace stuff like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int *array;\n\nfor (int i = 0; i &amp;lt; LEN; ++i) {\n  f(array[i]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;with&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void f(int *array) {\n  f_inner(array, 0);\n}\n\nvoid f_inner(int *array, int position) {\n  // business logic on array[position]\n\n  // iteration step\n  if (position + 1 &amp;lt; LEN) {\n    f_inner(array, position + 1);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在 c 语言中将嵌套的 for 循环转换为递归", ["\n\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n          //  0  1  2  3  4  5  6  7\nint arr[] = { 3, 6, 1, 2, 6, 7, 8, 4};\nint bee[] = { 6, 8, 1, 4, 2, 6, 3, 7};\nint i = 0;\nint j = 0;\nint matches[120] = {0};\nint length1 = 8;\n\nvoid find_matches(int *arr, int *bee, int*matches);\n\nvoid find_matches(int *arr, int *bee, int *matches)\n{\n    for (i = 0; i<length1; i++)\n    {\n        for (j = 0; j < length1; j++)\n        {\n            if (arr[i]==bee[j])\n            {\n                matches[i] = j;\n            }\n        }\n    }\n\n    for (int z = 0; z<8; z++)\n    {\n        printf(\"%d\\n\", matches[z]);\n    }\n}\n\nint main()\n{\n    find_matches(arr, bee, matches);\n}\n", "\n\n", "The gist of my code is that it is matches every value of ", "arr[]", " to ", "bee[]", " and puts the index of the matches as numbers in the ", "matches", " arrays and prints.", "\n\n", "For example the value 3 in ", "arr[0]", " is matched to the value 3 in ", "bee[5]", " so the value of ", "matches[0]", " will be 5.", "\n\n", "How can I turn this into a recursive function?", "\n\n", "I tried keeping the outer for loop and running the outer with a recursion function call inside but I don't know how to set up the variables and such.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/53111823/convert-a-nested-for-loop-into-recursion-in-c"]], "Tag": "程序设计"}
{"Answer": "建一个全局的变量var status 拿来装 true或false的状态，把 return false改为 status = false，循环完之后，再用这个变量", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环里面嵌套if的问题的问题", ["\n如图，在for循环里，当框框里的两个if条件成立时提交url，，，像我那样写return 只能验证一次，无法做到循环，，但是去掉return  每次执行就会提交i次，，想了半天没解决方法，求大神支招，", "\nfor是用来循环判断几个文本框的状态的，如果为空则alert（）否则就提交并提升成功，这是一个单机事件里面的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.放到协程中&amp;#xff0c;给动画一个时间运行&lt;br /&gt;2.GetComponent可以简化&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c#\"&gt;IEnumerator startMove()\n    {\n        for (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; Obj.Count - 1; i&amp;#43;&amp;#43;)&lt;/span&gt;\n        {\n            for (int &lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; Obj.Count - i - 1; j&amp;#43;&amp;#43;)&lt;/span&gt;\n            {\n                if (Obj[&lt;span class=\"hljs-keyword\"&gt;j].transform.lossyScale.y &lt;/span&gt;&amp;gt; Obj[&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].transform.lossyScale.y)\n                {\n                    Vector3 a &amp;#61; Obj[&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].transform.position;\n                    Vector3 &lt;span class=\"hljs-keyword\"&gt;b &lt;/span&gt;&amp;#61; Obj[&lt;span class=\"hljs-keyword\"&gt;j].transform.position;\n&lt;/span&gt;                    Obj[&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].transform.DOMoveX(&lt;span class=\"hljs-keyword\"&gt;b.x, &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n                    Obj[&lt;span class=\"hljs-keyword\"&gt;j].transform.DOMoveX(a.x, &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n                    GameObject x &amp;#61; Obj[&lt;span class=\"hljs-keyword\"&gt;j];\n&lt;/span&gt;                    Obj[&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;#61; Obj[&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                    Obj[&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; x;\n                    yield return new &lt;span class=\"hljs-keyword\"&gt;WaitForSeconds(2);\n&lt;/span&gt;                }\n            }\n        }\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在for循环中嵌套DOTween动画", ["大lao们请问一下DoTween动画如何嵌套在for循环中啊，我想让这三个物体按照冒泡排序的算法移动，但最后结果好像不太对，就是物体没有按照预想的动画去执行，我认为应该就是DoTween对于类似的动画只执行靠后的动画，该如何解决啊，下面是代码和结果图", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;考虑一下用递归实现&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;def &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n:&lt;span class=\"hljs-type\"&gt;list&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]):\n        print(i)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(n)&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;([&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何嵌套列表长度数量的for循环", ["问题遇到的现象和发生背景", "\n", "我有一个list a，此时我知道它的长度是3，于是我要进行3个嵌套的for循环。然而当我不知道a的长度，要通过len(a)求得其长度，并进行该长度数量的嵌套的for循环。该怎么写代码？", "\n", "a", " = ", "[1,2,3]", "\n", "len", "(a)", "\n", "for", "：\n    ", "for", ":\n        ", "for", ":\n", "\n", "我想要达到的结果", "\n", "嵌套列表长度数量的for循环", "我正在做一个路径搜索的算法，每一个低层的for循环都是基于其上层for循环，且for循环的总数量就是列表的长度。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$a = array();\n\nwhile($x&amp;lt;=10):\n    $a[] = 'firstName'.$x;\n    $a[] = 'lastName'.$x;\n    $x++;\nendwhile;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I read your question again, if you want this \"'firstName1', 'lastName1'\" to be actually a string then,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$a = array();\nwhile($x&amp;lt;=10):\n    $a[] = 'firstName'.$x.'lastName'.$x;\n    $x++;\nendwhile; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or based on your question title (nested array) then,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$x = 1;\nwhile($x&amp;lt;=10):\n   $a[] = array('firstName'.$x, 'lastName'.$x);\n   $x++;\nendwhile;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP  - 使用while循环创建嵌套数组", ["\n\n", "I want to make an array like this ", "\n\n", "$array = array(\"'firstName1', 'lastName1'\", \"'firstName2', 'lastName2'\", ......);\n", "\n\n", "I always get an error like this: ", "\n\n", "\n  ", "Parse error: syntax error, unexpected 'while' (T_WHILE), expecting ')' in C:\\wamp\\www\\Tests\\index.php on line 11\n  ", "\n", "\n\n", "<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf=8\">\n</head>\n<body>\n<?php\nif(isset($_POST['reg'])){\n    $x=1;\n    $a = array(\n    while($x<=10):\n    \"'firstName$x', 'lastName$x'\"; //I DONT KNOW WHAT TO DO IN THIS LINE//\n    $x++;\n    endwhile;\n    );\n    print_r($a);\n}\n?>\n<form action=\"\" method=\"post\">\n<input type=\"text\" name=\"number\" /> <input type=\"submit\" name=\"submit\" value=\"Submit\"/>\n</form>\n    <form action=\"\" method=\"post\">\n    <table>\n    <?php\n    if(isset($_POST['submit'])){\n    for($i=1;$i<=$_POST['number'];$i++){\n    echo \"<tr>\n    <td><input type='text' name='firstName$i' /></td>\n    <td><input type='text' name='lastName$i' /></td>\n    </tr>\";\n    }\n    $i-=1;\n    echo \"<input type='hidden' name='hide' value='$i' />\";\n    }           \n    ?>\n    </table>\n    <input type=\"submit\" value=\"Register\" name=\"reg\"/>\n    </form>\n</body>\n</html>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这样每次循环正则&amp;#43; &amp;#61;&amp;#61; 判断都会使用时间耗费太多。&lt;br /&gt;转为多维数组&amp;#xff0c;用pandas中内置的一些方法处理起来&amp;#xff0c;效率会提升很多。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套循环怎么加快运行速度", ["for", " ", "i", " ", "in", " range(", "8000", "):\n        ", "for", " j ", "in", " range(", "10000", "):\n            ", "if", " bool(re", ".findall", "(", "a", ".loc", "[i, ", "'num'", "]", "[:-3]", ", ", "b", ".loc", "[j, ", "'nums'", "]", ")):   #判断是否包含字段\n                ", "if", " ", "a", ".loc", "[i, ", "'num'", "]", "==", "b", ".loc", "[j, ", "'nums'", "]", ":  #字段名相同跳过\n                    pass\n                ", "else", ":\n                    ssn =", "a", ".loc", "[i, ", "'num'", "]", ".split", "(", "'_'", ")    #以_分割字符串\n                    ", "a", ".loc", "[i, ", "'num'", "]", " = ssn", "[0]", " + ", "'_'", " + ssn", "[1]", " + ", "'M_'", " + ssn", "[2]", " #为字段名相似的增加", "'M'", "\n\n", "\n", "数据集a里面有8000条数据，数据集b里面有10000条数据，遍历这两个数据集中选出某列对比内容，想做的操作就是相似的增加一个字母。运行太慢了，已经用过numba的jit装饰器。还是慢，怎么加快，这种嵌套循环可以加线程提高运行速度吗？还是进程什么的，换成map这些的感觉太复杂，我自己想不明白怎么改，希望得到各位大能的指导。"]], "Tag": "程序设计"}
{"Answer": "```\r\nint main()\r\n{\r\n    int a = 0, b = 0, c = 0;\r\n    while (a &lt; 15)\r\n    {b=0; //每次循环b都要从头开始\r\n        while (b &lt; 23)\r\n        {\r\n            c = 45 - a - b;\r\n            if (a * 6 + b * 4 + c == 90) //浮点数有误差，扩大两倍，用整数计算\r\n                printf(\"men=%d,women=%d,child=%d\\n\", a, b, c);\r\n            b++;\r\n        }\r\n        a++;\r\n    }\r\n        return 0;\r\n        }\r\n```\r\n# 问题解决的话，请点下采纳", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么这个while嵌套循环他只会运行一次，而不能达到嵌套的目的呢", ["int main()\n{\n    int a = 0, b = 0, c = 0;\n    while (a < 15)\n    {\n        while (b < 23)\n        {\n            c = 45 - a - b;\n            if (a * 3 + b * 2 + 0.5 * c == 45)\n                printf(\"men=%d,women=%d,child=%d\\n\", a, b, c);\n            b++;\n        }\n        a++;\n    }\n        return 0;\n        }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不这样输出你的值在哪里&lt;br /&gt;第一层for 外循环控制行数&lt;br /&gt;第二层 for 内循环控制列数&lt;br /&gt;输出的就是每个乘法对应的值&lt;br /&gt;例如第一个第一次循环 i是1&amp;#xff0c;j是1 第一个就是1&lt;em&gt;1 &amp;#61; 1也就是 你的输出语句 i &amp;#43;  &amp;#34;&lt;/em&gt;&amp;#34; &amp;#43; j &amp;#43; &amp;#34;&amp;#61;&amp;#34; &amp;#43; i*j &lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["99乘法表用for嵌套循环写", ["public static void main(String[] args) {", "        for(int i=1;i<10;i++){", "            for(int j=1;j<=i;j++){", "                System.out.print(i+\"", "\"+j+\"=\"+i", "j+\" \");", "            }", "            System.out.println();", "\n", "}\n", "\n", "这一段System.out.print(i+\"", "\"+j+\"=\"+i", "j+\" \");", "括号里面的没理解什么为什么这样写才能输出数字。\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are correct to avoid usage of looping queries in this case (since the desired result can be achieved with just a simple JOIN in one query).&lt;/p&gt;\n\n&lt;p&gt;I would avoid using GROUP_CONCAT() as well because there is a character limit (by default, you can change it), plus you have to parse the data it outputs, which is kind of a pain. I would just get all the data you need by joining and get every row. Then load the data into arrays using the workshop ID as the key but leave the array open to append each of your time data as a new array:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$workshops[$workshop_name][] = $timesArray;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then on your output you can loop, but you don't have to hit the database on each call:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($workshops as $workshop_name =&amp;gt; $times)\n{\n  echo $workshop_name;\n  foreach ($times as $time)\n  {\n    echo $time;\n  }\n  echo \"&amp;lt;br&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is not the exact code, and as you've pointed out in your question, you want to keep/display some other information about the workshops - just play around with the array structure until you get all the data you need in a hierarchy. You can use something like &lt;a href=\"http://kevin.vanzonneveld.net/techblog/article/convert_anything_to_tree_structures_in_php/\" rel=\"nofollow\"&gt;http://kevin.vanzonneveld.net/techblog/article/convert_anything_to_tree_structures_in_php/&lt;/a&gt; if you are trying to build a deep tree structure, but I think that's overkill for this example.&lt;/p&gt;\n\n&lt;p&gt;Since this is what I would call an \"Intermediate Level\" question, I think you should try to work through it (THIS is what makes you a good programmer, not copy/paste) using my suggestions. If you get stuck, comment and I'll help you further.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP / SQL替代嵌套while循环中的db调用", ["\n\n", "My first post, tried to be as thorough as possible, apologies in advance if I've gotten something wrong.  I'm pretty novice with PHP/SQL as well so please be patient with me.  I've found a couple of similar questions about loops within loops but I'm not sure the solutions apply in my case.", "\n\n", "I have two tables, tws_workshopNames and tws_workshops.  The primary key from tws_workshopNames is used as a foreign key in tws_workshops to relate the two tables.  The reason I've split this into two tables is there are many cases where the same workshop name/price/description is offered on multiple dates/times.", "\n\n", "Can't submit a screenshot but here's a simplified outline of the table design in SQL Server:", "\n\n", "tws_workshopNames:\nworkshopNameID (pri)\ndescription\nprice\netc.\n\ntws_workshops:\nworkshopID (pri)\nworkshopNameID (foreign)\ndate\ntime\netc.\n", "\n\n", "What I want to happen is basically this:", "\n\n", "\n", "query tws_workshopNames table and display workshopName/price/description/etc.", "\n", "for each workshopName go through the tws_workshops table and display all records that have the same workshopNameID", "\n", "\n", "In other words, go through tws_workshopNames and display the first workshopName, then go through tws_workshops and display all records that are related to that workshopName, then go to next workshopName in tws_workshopNames, display all records related to that workshopName etc.", "\n\n", "I'm able to achieve the desired result by using a while loop within a while loop wherein the outer loop does a call to tws_workshopNames and the nested loop does a call to the tws_workshops table.  However I've been reading a lot about this and it's clear this is not a good approach as it results in a lot of calls to the db, but I'm having a hard time understanding any alternatives.", "\n\n", "Desired output:", "\n\n", "Workshop 1\nprice\ndescription\n date (of workshop 1)\n time (of workshop 1)\n ...\n\nWorkshop 2\nprice\ndescription\n first date (of workshop 2)\n first time (of workshop 2)\n second date (of workshop 2)\n second time (of workshop 2)\n third date (of workshop 2)\n third time (of workshop 2)\n ...\n\nWorkshop 3\nprice\ndescription\n date (of workshop 3)\n time (of workshop 3)\n ...\n\netc.\n", "\n\n", "Here is the current code that works with nested while loops:", "\n\n", "<?php\n// query workshopNames table, what types of workshops are available?\n$query = mssql_init(\"tws_sp_workshopNames\", $g_dbc);\n\n// pull up result\n$result = mssql_execute($query);\n$numRows = mssql_num_rows($result);\n\nwhile($row = mssql_fetch_array($result)) {\n\necho \"<div style=\\\"...\\\">\n<span class=\\\"sectionHeader\\\">\" . $row['workshopName'] . \"</span><br />\n<span class=\\\"bodyText\\\"><strong>\" . $row['price'] . \"</strong></span><br />\n<span class=\\\"bodyText\\\">\" . $row['description'] . \"</span>\";\n\n$workshopNameID = $row['workshopNameID'];\n\n// query workshops table, what are the dates/times for each individual workshop?\n$query2 = mssql_init(\"tws_sp_workshops\", $g_dbc);\nmssql_bind($query2, \"@workshopNameID\", $workshopNameID, SQLVARCHAR);\n\n//pull up result\n$result2 = mssql_execute($query2);\n$numRows2 = mssql_num_rows($result2);\n\nwhile($row2 = mssql_fetch_array($result2)) {\n\necho $row2[date] . \"&nbsp;\";\necho $row2[time] . \"<br />\";\n\n};\n\necho \"</div><br />\";\n\n};\n?>\n", "\n\n", "The stored procedures are very simple:", "\n\n", "tws_sp_workshopNames = \"SELECT workshopNameID, workshopName, description, location, price FROM tws_workshopNames\"\ntws_sp_workshops = \"SELECT date, time, maxTeachers, maxStudents, teachersEnrolled, studentsEnrolled FROM tws_workshops WHERE workshopNameID=@workshopNameID\"\n", "\n\n", "Hope that's all relatively clear, all I'm really looking for is a better way to get the same result, i.e. a solution that does not involve a db call within the loops.", "\n\n", "Thanks in advance for any help, been a few days straight banging my head against this one...", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;it would be much faster to do joins in the sql&lt;/p&gt;\n\n&lt;p&gt;then iterate over the single (larger) result set.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套循环和SQL查询; 需要速度", ["\n\n", "I'm having trouble solving a problem with iterative SQL queries (", "which I need to do away with", ") and I'm trying to work out an alternative.", "\n\n", "(", "Also; unfortunately, AJAX is not really suitable", ")", "\n\n", "Given I have the following tables for location data:", "\n\n", "Country\n    country_id\n    name\n\nState\n    state_id\n    country_id\n    name\n\nCity\n    city_id\n    state_id\n    name\n", "\n\n", "Now, I'm trying to pull ", "all", " of the data, however it's actually quite tiny (", "147 cities, split between 64 states, split between 2 countries", ") however it's taking forever because I'm iteratively looping:", "\n\n", "// this is pseudo-code, but it gets the point across\n\n$countries = getCountries();\nforeach($countries as &$country){\n    $country['states'] = $states = getStates($country['country_id']);\n    foreach($states as &$state){\n        $state['cities'] = getCities($state['state_id']);\n    }\n}\n", "\n\n", "The reason I'm going this way, is because my final result set needs to be in the form:", "\n\n", "$countries = array(\n    array(\n        'name' => 'country_name',\n        'id' => 'country_id',\n        'states' => array(\n            array(\n                'name' => 'state_name',\n                'id' => 'state_id',\n                'cities' => array(\n                    array(\n                        'name' => 'city_name',\n                        'id' => 'city_id',\n                    ),\n                    // ... more cities\n                ),\n            ),\n            // ... more states\n        ),\n    ),\n    // ... more countries\n);\n", "\n\n", "I can't seem to wrap my head around a faster approach. What alternatives exist to querying for hierarchical data?", "\n\n", "\n", "Revised:", "\n\n", "    $sql = \"SELECT\n                `dbc_country`.`name` as `country_name`,\n                `dbc_state`.`name` as `state_name`,\n                `city_id`,\n                `dbc_city`.`name` as `city_name`,\n                `latitude`,\n                `longitude`\n            FROM\n                `dbc_city`\n                    INNER JOIN\n                `dbc_state` ON `dbc_city`.`state_id` = `dbc_state`.`state_id`\n                    INNER JOIN\n                `dbc_country` ON `dbc_state`.`country_id` = `dbc_country`.`country_id`\";\n    $locations = array();\n    foreach($datasource->fetchSet($sql) as $row){\n        $locations[$row['country_name']][$row['state_name']][] = array(\n            $row['city_id'],\n            $row['city_name'],\n            $row['latitude'],\n            $row['longitude'],\n        );\n    }\n", "\n\n", "(", "I also removed the ", "id", " values of states/countries, since they were uselessly taking up space", ")", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;sync.WaitGroup&lt;/code&gt; can be used here to wait for all goroutines and then closing the &lt;code&gt;quotes&lt;/code&gt; channel:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func getPrice(quotes chan&amp;lt;- string, onExit func()) {\n    go func() {\n        defer onExit()\n        client := &amp;amp;http.Client{}\n        req, _ := http.NewRequest(\"GET\", \"https://some/api\", nil)\n        req.Header.Set(\"Accept\", \"application/json\")\n        res, err := client.Do(req)\n        if err != nil {\n            panic(err) // should be handled properly\n        }\n        defer res.Body.Close()\n        body, err := ioutil.ReadAll(res.Body)\n        quotes &amp;lt;- string(body)\n    }()\n}\n\nfunc main() {\n    var wg sync.WaitGroup\n    const max = 3\n    quotes := make(chan string, max)\n    for i := 0; i &amp;lt; max; i++ {\n        wg.Add(1)\n        getPrice(quotes, func() { wg.Done() })\n    }\n\n    go func() {\n        defer close(quotes)\n        wg.Wait()\n    }()\n\n    for n := range quotes {\n        fmt.Printf(\"\n%s\", n)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["golang for带缓冲通道的循环", ["\n\n", "I'm experimenting with golang channels and have an issue where the simple program below does not terminate.", "\n\n", "Essentially I want to make some async HTTP get requests and then ", "wait", " till they are ", "all", " finished. I'm using a buffered channel but I'm not sure this is the idiomatic way.", "\n\n", "func GetPrice(quotes chan string) {\n    client := &http.Client{}\n    req, _ := http.NewRequest(\"GET\", \"https://some/api\", nil)\n    req.Header.Set(\"Accept\", \"application/json\")\n    res, err := client.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer res.Body.Close()\n    body, err := ioutil.ReadAll(res.Body)\n    quotes <- string(body)\n}\n\nfunc main() {\n    const max = 3\n    quotes := make(chan string, max)\n    for i := 0; i < max; i++ {\n        go GetPrice(quotes)\n    }\n\n    for n := range quotes {\n        fmt.Printf(\"\n%s\", n)\n    }\n}\n", "\n\n", "The program successfully prints 3(max) items ", "\n\n", "{\"price\":\"1.00\"}\n{\"price\":\"2.00\"}\n{\"price\":\"3.00\"}\n", "\n\n", "but then blocks and never exits.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;First of all, a little correction in your array definition. Although your array definition is working but as you're using associative arrays then let's take full benefit of that feature.&lt;/p&gt;\n\n&lt;p&gt;In the code below, I removed the variables inside array data, they were useless. Made a new key named &lt;code&gt;specification&lt;/code&gt; to better organise the data and used unique keys instead of &lt;code&gt;Unknown Property&lt;/code&gt; which was just replaced in your case&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$products = [\n    [\n        'name' =&amp;gt; 'product name 1a',\n        'specification' =&amp;gt; [\n            'Unknown Property 1' =&amp;gt; 'value1a',\n            'Unknown Property 2' =&amp;gt; 'value2a',\n            'Unknown Property 3' =&amp;gt; 'value3a',\n            'Unknown Property 4' =&amp;gt; 'value4a',\n        ]\n    ],\n    [\n        'name' =&amp;gt; 'product name 1b',\n        'specification' =&amp;gt; [\n            'Unknown Property 1' =&amp;gt; 'value1b',\n            'Unknown Property 2' =&amp;gt; 'value2b',\n            'Unknown Property 3' =&amp;gt; 'value3b',\n        ]\n    ],\n    [\n        'name' =&amp;gt; 'product name 1c',\n        'specification' =&amp;gt; [\n            'Unknown Property 1' =&amp;gt; 'value1c',\n            'Unknown Property 2' =&amp;gt; 'value2c',\n            'Unknown Property 3' =&amp;gt; 'value3c',\n            'Unknown Property 4' =&amp;gt; 'value4c',\n        ]\n    ],\n];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, to iterate through this nested array, we can use two &lt;code&gt;foreach&lt;/code&gt; loops as I did below&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($products as $product) {\n    echo \"&amp;lt;li&amp;gt;\";\n    echo \"&amp;lt;h4&amp;gt;\" . $product[ 'name' ] . \"&amp;lt;/h4&amp;gt;\";\n\n    if ( count( $product[ 'specification' ] ) ) {\n        // check if there's anything in specification\n        // then\n        echo \"&amp;lt;ul&amp;gt;\";\n        foreach ($product[ 'specification' ] as $property =&amp;gt; $value) {\n            echo \"&amp;lt;li&amp;gt;\" . $property . \":\" . $value .  \"&amp;lt;/li&amp;gt;\";\n        }\n        echo \"&amp;lt;/ul&amp;gt;\";\n    }\n    echo \"&amp;lt;/li&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在PHP中嵌套数组的循环内循环", ["\n\n", "I have an array of product data, within the array there are nested arrays containing specification data. I wish to return the data in blocks, looping through each product displaying it's name followed by it's properties. The test array is set up as follows:", "\n\n", "$products = [\n    $product = [\n        'name' => 'product name 1a',\n        $specification = [\n            'Unknown Property' => 'value1a',\n            'Unknown Property' => 'value2a',\n            'Unknown Property' => 'value3a',\n            'Unknown Property' => 'value4a',\n        ]\n    ],\n    $product = [\n        'name' => 'product name 1b',\n        $specification = [\n            'Unknown Property' => 'value1b',\n            'Unknown Property' => 'value2b',\n            'Unknown Property' => 'value3b',\n        ]\n    ],\n    $product = [\n        'name' => 'product name 1c',\n        $specification = [\n            'Unknown Property' => 'value1c',\n            'Unknown Property' => 'value2c',\n            'Unknown Property' => 'value3c',\n            'Unknown Property' => 'value4c',\n        ]\n    ],\n];\n", "\n\n", "The end result I am looking for is:", "\n\n", "<li>\n    <h4>Product Name 1a</h4>\n    <ul>\n        <li>Unknown Property: value1a</li>\n        <li>Unknown Property: value2a</li>\n        <li>Unknown Property: value3a</li>\n        <li>Unknown Property: value4a</li>\n    </ul>\n</li>\n<li>\n    <h4>Product Name 1b</h4>\n    <ul>\n        <li>Unknown Property: value1b</li>\n        <li>Unknown Property: value2b</li>\n        <li>Unknown Property: value3b</li>\n    </ul>\n</li>\n<li>\n    <h4>Product Name 1c</h4>\n    <ul>\n        <li>Unknown Property: value1c</li>\n        <li>Unknown Property: value2c</li>\n        <li>Unknown Property: value3c</li>\n        <li>Unknown Property: value4c</li>\n    </ul>\n</li>\n", "\n\n", "I'm new to PHP arrays and cannot find any references on how to perform a loop within a loop that I understand.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/nlxxqqh1/article/details/88319721\"&gt;https://blog.csdn.net/nlxxqqh1/article/details/88319721&lt;/a&gt; 这篇博客应该可以解决你的问题&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python中关于使用for循环以及append嵌套列表", ["\n", "a_list = [1]\nb_list = []\nfor i in range(5):\n    b_list.append(a_list)\nprint(b_list)\nb_list[0][0] = 1000000\nprint(b_list)", "\n\n", "在学习python时遇到的问题 更改其中一个嵌套的列表的元素 所有嵌套的列表都会被更改 但我只想更改一个 请问应该如何修改 如果可以的话能否解释一下出上述情况的原因 谢谢", "\n\n", "pyhton3.9"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/u014054837/article/details/80901564", "Konwledge_Point": "for循环的嵌套", "Question": ["在监听嵌套for循环的里面if没有效果", ["我想要实现模糊搜索的时候展示出来带搜索关键字的内容，以及和内容相对于的标题，", "\n\n", "\n", "{{item.cn}}", "\n", "\n", "\n", "\n        ", "\n            ", "\n                {{item.title}}\n            ", "\n            ", "\n                ", "\n", "\n\n        ", "\n\n    ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;echo $x;&lt;/code&gt; which is the value you pass to the function. You do not have to echo the function because echo is called inside the function. You also need to change your counter. 0 to 9 is 10 times, or 1 to 10. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function iterate($x){ //this is the function\n        for ($i = 0; $i &amp;lt;= 9; $i++){ //this is the loop procedure to iterate 10 times\n            echo $x; //it will show xyz on the screen, 10 times\n        } \n    }\n\n    $y = \"xyz\"; //variable declaration\n    iterate($y); //should be iterate xyz as much 10 times. \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://phpfiddle.org/main/code/z7hh-s2ae\" rel=\"nofollow\"&gt;EXAMPLE&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在php函数中使用for循环", ["\n\n", "<?php\n    function iterate($x){ //this is the function\n        for ($i = 0; $i <= 10; $i++){ //this is the loop procedure to iterate 10 times\n            echo $i; //it will show 0123456789 on the screen\n        } \n    }\n\n    $y = \"xyz\"; //variable declaration\n    echo iterate($y); //should be iterate xyz as much 10 times. \n?>\n", "\n\n", "wish to echo(print) xyz ten times using for loop inside the php function, the result not as expected.\nhow to show the xyz iterate ten times.", "\n    "]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/u014054837/article/details/80901564", "Konwledge_Point": "for循环的嵌套", "Question": ["在$scope.$watch监听内，嵌套for循环的里面if没有效果", ["\n\n", "我想实现一个搜索关键字自动显示出新闻内容，并根据内容显示出其标题", "\n\n", "<!doctype html>", "\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">", "作业三", "\n", "{{item.cn}}", "\n", "\n", "\n", "\n        ", "\n            ", "\n                {{item.title}}\n            ", "\n            ", "\n                ", "\n", "\n\n        ", "\n\n    ", "\n", "\n\n\n    angular.module(\"app\",[\"ngSanitize\"])\n        .controller(\"ctr\",[\"$scope\",\"$http\",\"$rootScope\",function ($scope,$http,$rootScope){\n            $rootScope.newsList=[\n                {en:\"auto\",cn:\"汽车\",state:true},\n                {en:\"dy\",cn:\"推荐\",state:true},\n                {en:\"ent\",cn:\"娱乐\",state:true},\n                {en:\"home\",cn:\"家居\",state:true},\n                {en:\"sports\",cn:\"体育\",state:true},\n                {en:\"tech\",cn:\"科教\",state:true},\n                {en:\"toutiao\",cn:\"新闻\",state:true},\n                {en:\"war\",cn:\"军事\",state:true},\n                {en:\"money\",cn:\"财经\",state:false}\n            ];\n            $rootScope.activeitem=\"toutiao\";\n            $scope.Newsname={\"name\":\"\"};\n            var url=\"yaowen.json\";\n                  $scope.getNews=function () {\n                    $http({\n                        methon:\"GET\",\n                        url:url\n                    }).then(function (res) {\n                        $rootScope.newsData=res.data.data;\n\n                    }),\n                        function (err) {\n                        }\n                  };\n\n            $scope.$watch(\"Newsname\",function (n,o) {\n                for(var index in $rootScope.newsData ){\n                    for(var i=0;i<$rootScope.newsData[index].length;i++){\n                        if(n.name==$rootScope.newsData[index][i].title){\n                            $scope.Newscn=$rootScope.newsData[index][i].category;\n\n\n                        }\n                    }\n                    console.log( $rootScope.newsData[index][i].category)\n                }\n\n            });\n            $scope.getNews();\n\n\n        }])\n"]], "Tag": "程序设计"}
{"Answer": "你的第二个游标结束时的c_showuser哪来的？是不是写错了？\r\n这个：\r\nfetch next from c_showuser into @temp_deptId,@temp_deptName,@temp_itemId,@temp_ticketNum,@temp_voteId; \r\n还有你的结束时的fetch是不是要写在begin end里面？\r\n这段是不是要改成这样：\r\n\r\n open cur_votedept  \r\n    fetch next from cur_votedept into @temp_deptId,@temp_deptName,@temp_itemId,@temp_itemName,@temp_ticketNum,@temp_voteId;\r\n      while(@@FETCH_STATUS=0) \r\n          begin\r\n            print @temp_deptId+@temp_deptName+@temp_itemId;\r\n            insert into #depe_records values(@temp_deptId,@temp_deptName,@temp_itemId,@temp_itemName,@temp_ticketNum,@temp_voteId);\r\n            fetch next from cur_votedept into @temp_deptId,@temp_deptName,@temp_itemId,@temp_ticketNum,@temp_voteId;\r\n          end\r\n      close cur_votedept;  \r\n      deallocate cur_votedept", "Konwledge_Point": "for循环的嵌套", "Question": ["sqlserver 存储过程，游标嵌套死循环，求指导。", ["[code=\"sql\"]if(OBJECT_ID('pro_fristCount','P') is not null)", "\n    drop procedure  pro_fristCount;", "\n\n", "go", "\ncreate procedure  pro_fristCount ", "\nas", "\ncreate table #depe_records(   -- 创建临时表", "\n    deptId nvarchar(100),", "\n    deptName nvarchar(100),", "\n    itemId nvarchar(100),", "\n    itemName nvarchar(100),", "\n    ticketNum int,", "\n    voteId nvarchar(100)", "\n);", "\ndeclare @temp_deptId nvarchar(100),@temp_deptName nvarchar(100),@temp_itemId nvarchar(100),@temp_itemName nvarchar(100),@temp_ticketNum int,@temp_voteId nvarchar(100);--临时表数据", "\ndeclare @deptId nvarchar(100);", "\ndeclare cur_group cursor  for select deptId from sp_vote_dept_records ;--按照部门分组", "\nopen cur_group ", "\nfetch next from cur_group into @deptId;", "\nwhile(@@FETCH_STATUS=0)", "\n    begin", "\n        print @deptId;", "\n        declare cur_votedept cursor  for select  top 10 * from sp_vote_dept_records ", "\n            where deptId=@deptId order by deptId desc ;--每个部门的十件大事", "\n        open cur_votedept", "\n        fetch next from cur_votedept into @temp_deptId,@temp_deptName,@temp_itemId,@temp_itemName,@temp_ticketNum,@temp_voteId;", "\n            while(@@FETCH_STATUS=0) ", "\n                    begin", "\n                        print @temp_deptId+@temp_deptName+@temp_itemId;", "\n                        insert into #depe_records values(@temp_deptId,@temp_deptName,@temp_itemId,@temp_itemName,@temp_ticketNum,@temp_voteId);", "\n                    end", "\n            fetch next from c_showuser into @temp_deptId,@temp_deptName,@temp_itemId,@temp_ticketNum,@temp_voteId;", "\n            close c_showuser;", "\n            deallocate cur_votedept", "\n        fetch next from cur_group into @deptId;", "\n    end", "\nclose cur_group", "\ndeallocate cur_group ", "\nreturn select * from  #depe_records; [/code]", "\n\n", "第二个游标只会遍历不大于十条是数据，但是却总是死循环。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您好&amp;#xff0c;第一种情况每次没加一呢就跳出循环了&amp;#xff0c;所以都为一,第二种情况加一了后&amp;#xff0c;再跳出循环&amp;#xff0c;所以为1234。&lt;br /&gt;第一种情况for循环中再加一个x&amp;#43;&amp;#43;;就为一二三四了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,x&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n\n{\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(;x&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;x&amp;#43;&amp;#43;)\n\n{\n\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,x); &lt;span class=\"hljs-comment\"&gt;//结果全为1 &lt;/span&gt;\nx&amp;#43;&amp;#43;;\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n}\n\n}\n\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/096453009946175.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for语句没有写表达式1，为什么嵌套循环的时候循环变量还是原定义值？被空出的表达式1代表什么？", ["void main()", "{", "    int i,x=1;", "\n", "for(i", "=", "0", ";i<5;i++)", "\n{\n    for(", ";x<5;x++)", "\n    {\n        printf(", "\"%d\\n\"", ",", "x", ")", "; //结果全为1 ", "\n        break", ";", "\n    }\n}\n", "\n", "}", "\n", "\n", "void main()", "{", "    int i,x=1;", "\n", "for(i", "=", "0", ";i<5;i++)", "\n{\n    while(", "x", "<", "5", ")\n    {\n        printf(", "\"%d\\n\"", ",", "x", ")", ";//结果是1,2,3,4, ", "\n        ", "x", "++", "; ", "\n        break", ";", "\n    }\n}\n", "\n", "}", "//我的理解是在for的嵌套循环中都必须要求x=1；（我的疑惑是我空出了表达式1，但没得到我的预期。）", "//                 在while被嵌套在其中，其过程不必再计算x=1；"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;One way you may be able to speed this up it is lookup items in the cart using a map, instead of iterating through them.  Create the map like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cartMap := make(map[string]*CartType, len(cartSession.Cart))\nfor i := range cartSession.Cart {\n    cartMap[cartSession.Cart[i].Name] = cartSession.Cart[i]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then after building the map, you can look in the cart to see if it contains the affected and affectee, like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i := range promotions {\n    // See if affected item is in cart                                      \n    affected := promotions[i].Affected\n    cartItem, ok := cartMap[affected.Name]\n    if !ok {\n        // Did not find affected                                            \n        continue\n    }\n    // See if affectee is in cart                                           \n    affectee := promotions[i].Affectee\n    if _, ok = cartMap[affectee.Name]; !ok {\n        // Did not find affectee                                            \n        continue\n    }\n    // Apply promotion                                                      \n    if affected.CostPtg != 0 {\n        cartItem.Cost *= affected.CostPtg\n    } else {\n        cartItem.Cost = affected.CostFixed\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Golang中的嵌套循环", ["\n\n", "I have two arrays: Cart and Promotions, I need to find out what promotions can be applied to the cart.", "\n\n", "Promotions consist of Affectee and Affected, so what I do is search in my Cart array to see if I have any Affectee and if I do then I search for any Affected and then apply the promo. This however, forces me to implement three nested loops which is not ideal for an API that has a 3 second timeout.", "\n\n", "I'm wondering if golang's arrays has something or if there's a way I can make this faster", "\n\n", "Here's my code:", "\n\n", "  OUTER:\n  for i, item := range cartSession.Cart {\n    for _, promo := range promotions {\n      if item.Name == promo.Affected.Name {\n        // If an item in the cart can be affected by the promo\n        // then start investigating if we have the affectee\n        if item.Name == promo.Affectee.Name {\n          // If the item is the affected and affectee\n          if promo.Affected.CostPtg != 0 {\n            cartSession.Cart[i].Cost *= promo.Affected.CostPtg\n          } else {\n            cartSession.Cart[i].Cost = promo.Affected.CostFixed\n          }\n          continue OUTER\n        } else {\n          for _, subItem := range cartSession.Cart {\n            if subItem.Name == promo.Affectee.Name {\n              // We have both the affected & affectee\n              // time to apply the promo affect\n              if promo.Affected.CostPtg != 0 {\n                cartSession.Cart[i].Cost *= promo.Affected.CostPtg\n              } else {\n                cartSession.Cart[i].Cost = promo.Affected.CostFixed\n              }\n              continue OUTER\n            }\n          }\n        }\n      }\n    }\n  }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n #include&lt;stdio.h&gt;\r\nvoid main(){\r\n\tint i =0;\r\n\tint sum = 0;\r\n\tint a ;\r\n\tint tmp = 0;//第n项\r\n\tint n =0;\r\n\tprintf(\"input a: \");\r\n\tscanf(\"%d\",&amp;a);\r\n\tprintf(\"input n:\");\r\n\tscanf(\"%d\",&amp;n);\r\n\ttmp = a;\r\n\tfor(i = 0; i &lt; n; i++){\r\n\t\tsum += tmp;\r\n\t\ttmp = tmp * 10 + a;//通项公式A(n)=A(n-1)*10 + a\r\n\t}\r\n\tprintf(\"%d\\n\",sum);\r\n}\r\n```", "Konwledge_Point": "for循环的嵌套", "Question": ["请大神们用c语言编写，并且用for循环，尽量不要太复杂，谢谢", ["/**给定两个均不超过9的正整数a和n，要求编写程序求a+aa+aaa++⋯+aa⋯a（n个a）之和。", "\n\n", "输入格式：", "\n\n", "输入在一行中给出不超过9的正整数a和n。", "\n\n", "输出格式：", "\n\n", "在一行中按照“s = 对应的和”的格式输出。", "\n\n", "输入样例：", "\n2 3", "\n\n", "输出样例：", "\ns = 246", "\n**/"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;$i%$j=0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Assigns &lt;code&gt;$j&lt;/code&gt; as &lt;code&gt;0&lt;/code&gt; and then tries to do &lt;code&gt;$i % 0&lt;/code&gt;;&lt;/p&gt;\n\n&lt;p&gt;You want&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;($i % $j) == 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;There's another mistake in the same way with the &lt;code&gt;echo&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Consider also formatting your code with spaces to make it more readable.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套for循环中的“除以零”错误", ["\n\n", "The purpose of this script:", "\n\n", "Write a script that counts from 1 to 10 in steps of 1. For each number, display whether that\nnumber is an odd or even number, and also display a message if the number is a prime number.\nDisplay this information within an HTML table.", "\n\n", "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<title>Exercise 1</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"common.css\" />\n<style type=\"text/css\">\n  th { text-align: left; background-color: #999; }\n  th, td { padding: 0.4em; }\n  tr.alt td { background: #ddd; }\n</style>\n</head>\n<body>\n\n<h2>Exercise 1</h2>\n\n<table cellspacing=\"0\" border=\"0\" style=\"width: 20em; border: 1px solid #666;\">\n  <tr>\n    <th>Number</th>\n    <th>Parity</th>\n    <th>Primality</th>\n  </tr>\n    <?php \n    $n=10;\n    for ($i=1;$i<=$n;$i++){\n    echo ($i%2 != 0)? '<tr class = \"alt\">':'<tr>'; ?>\n    <td><?php echo $i; ?></td>\n    <td><?php echo ($i%2 != 0)? \"Odd\":\"Even\";?></td>\n    <td><?php \n\n    $k=0;\n    for ($j=1;$j<=$i;$j++){\n        if ($i%$j=0) $k++; //Where the error occurs\n    }\n    echo ($k=2 || $k=1)?\"Prime\":\"Composite\";?>\n    </td></tr>\n    <?php\n    }\n    ?>\n</table>\n</body>\n</html>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是先第二个for.之后再sum&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/023043347066125.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于for语句嵌套循环顺序问题", ["关于for语句嵌套循环顺序问题，求解", "\n", "在j自增为2后会到哪一步？"]], "Tag": "程序设计"}
{"Answer": "{{ d[i]['type'] == 1 ? '+' : '-' }}{{ d[i].money }}", "Konwledge_Point": "for循环的嵌套", "Question": ["for  循环内嵌套if判断", [" <script type=\"text/html\">\n            {{# for(var i = 0, len = d.length; i < len; i++){ }}\n            <li>\n                <div class=\"info\">\n                    <p class=\"name\">money：{{ d[i].money }}</p>\n                    <p class=\"text\">说明：{{ d[i].desc }}</p>\n                    <p class=\"fans\">时间：{{ d[i].time }}</p>\n                </div>\n            </li>\n            {{# } }}\n        </script>\n", "\n\n", "在money这个位置需要添加一个判断，如果 {{ d[i].type}}=1，则显示“+”，否则显示“-”，后面跟{{ d[i].money }}", "\n完整的就是：", "\nmoney：（“+”或“-”）{{ d[i].money }}", "\n这个判断应该怎么写？", "\n小白上路，求大神指点。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if(n%i!&amp;#61;0)时&amp;#xff0c;执行break是跳出while循环&lt;br /&gt;如果要跳出for循环&amp;#xff0c;i必须≥n(即i大于等于17)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环和while循环的嵌套", ["for里嵌套while循环，当while循环结束是不是整个循环就结束？", "\n", "#include<stdio.h>", "\nmain(){\n    ", "int", " i,n;\n    scanf(", "\"%d\"", ",&n);\n    ", "for", "(i=", "2", ";i<n;i++)\n    ", "while", "(n){\n        ", "if", "(n%i==", "0", ")              \n            ", "printf", "(", "\"%d\"", ",i);     \n        ", "else", " \n            ", "break", ";\n        n=n/i;                \n            ", "if", "(n>=i){\n                ", "printf", "(", "\"*\"", ");\n                ", "if", "(n==i)\n                    ", "break", ";}                  \n    ", "printf", "(", "\"%d\"", ",n);}\n\n", "\n", "如这个程序，如果n的值输入为16，当while循环结束时，整个循环是不是就结束了，i是不是就可以不用++了？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You create two random arrays, and print the first one. Since you use the second for your calculation, the sums won't match (unless md_rand returns the same result). I simply moved the declaration before the print are and used the result twice; everything else works fine.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://sandbox.onlinephpfunctions.com/code/071d4b964898fc4fcac96aa290e4d51c6a2458c8\" rel=\"nofollow noreferrer\"&gt;http://sandbox.onlinephpfunctions.com/code/071d4b964898fc4fcac96aa290e4d51c6a2458c8&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP中简单的“For”循环 - 嵌套Array值的SUM计算", ["\n\n", "I can't understand why my simple FOR loop in PHP can't properly calculate SUM of nested Array values (integers).", "\n\n", "Anyone can help me understanding this? ", "\n\n", "Sandbox:\n", "http://sandbox.onlinephpfunctions.com/code/6ec5385e297b8e1d24727305c8e644370e38b00b", "\n\n", "<?php\n\n//This function returns a random Array (one Array with two nested Arrays with random values):\nfunction ArrCreate() {\n    $n = 2; //Two nested Arrays declaration.\n    $newArray = [];\n    for ($i = 0; $i < $n; $i++) {\n        $newArray[$i] = [];\n        for ($j = 0; $j < $n; $j++) {\n            $newArray[$i][$j] = mt_rand(1, 2); //Random values declaration.\n        }\n    }\n    return $newArray;\n}\n\n//This function returns SUM of an Array values (simple FOR loop is used):\nfunction ArrSum($array) {\n    $sum = 0;\n    for ($i = 0; $i < count($array); $i++) {\n        for ($j = 0; $j < count($array[$i]); $j++) {\n            $sum += $array[$i][$j];\n        }\n    }\n    return $sum;\n}\n\n//Let's print the random Array using ArrCreate function:\necho '<pre>';\nprint_r(ArrCreate());\necho '</pre>';\n\n//Let's declare the random Array using $arr variable:\n$arr = ArrCreate();\n\n//Let's calculate SUM of declared Array values using ArrSum function:\necho \"Sum of an array values: \" .ArrSum($arr); //WRONG SUM RESULT :(\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "for(b=2;b&lt;a;b++)\r\n前面加上\r\nc = 1;", "Konwledge_Point": "for循环的嵌套", "Question": ["基础问题，附代码如下，求教 while和for嵌套使用，发现它并不进行循环！", ["#include", "\nint main()", "\n{", "\n    int a=6,b,c=1;", "\n\n", "while(a<100)\n{\n    for(b=2;b<a;b++)\n    {   if(a%b==0)\n            c=c+b;\n    }\n\nif(a==c) \n    printf(\"%d\",c);\na++;\n}\n\nreturn 0;\n", "\n\n", "}", "\n运行结果就只是6，我想让它找出100以内符合条件的数！"]], "Tag": "程序设计"}
{"Answer": "// 下面是相等就结束内层循环继续外层循环\r\nfor(String l1 : lst1) {\r\n\t\t\tfor(String l2 : lst2) {\r\n\t\t\t\tSystem.out.println(l2);\r\n\t\t\t\tif(l1.equals(l2)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n// 下面是相等就结束所有循环\r\nLABEL:for(String l1 : lst1) {\r\n\t\t\tfor(String l2 : lst2) {\r\n\t\t\t\tSystem.out.println(l2);\r\n\t\t\t\tif(l1.equals(l2)) {\r\n\t\t\t\t\tbreak LABEL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}", "Konwledge_Point": "for循环的嵌套", "Question": ["forEach 嵌套循环", ["for(String  str : List){", "\n\n", "for(String str1:List){", "\n\n", "if(str1.equles('a')){\n//如果相当等的话 结束内层循环， 继续父层循环 \n\n\n\n}\n", "\n\n", "}", "\n\n", "}", "\n怎么表示  break 是跳出 直接结束了循环 ，return  的话， 这是放到方法中的 需要返回String，所以语法不会通过 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;至少我没看出来代码有问题。&lt;br /&gt;既然你是用vscode写代码&amp;#xff0c;用底层的工具自己编译&amp;#xff0c;确定工具的正确&amp;#xff08;能运行demo&amp;#xff0c;确定目录能识别&amp;#xff08;运行程序要依赖一些代码的&amp;#xff09;&amp;#xff0c;确定目录权限是对的&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;看运行报错&amp;#xff0c;是权限问题&amp;#xff0c;你试着把文件拷贝到你编译环境目录下等操作&amp;#xff0c;一步步调试一下。&amp;#xff08;环境还是没搞好&amp;#xff0c;有瑕疵&amp;#xff09;&lt;br /&gt;再就是&amp;#xff0c;如果你是新手学习c/C&amp;#43;&amp;#43;&amp;#xff0c;你安装vs啊&amp;#xff0c;别再编译上耗费精力。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/574882994546154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么C语言中的for嵌套循环运行不了?", ["本人刚刚入门C，今天第一次遇到这种情况，虽然懂得看报错但是不懂解决，请求专业人士帮忙解答，附带图片"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是先执行上面那个&amp;#xff0c;再执行下面那个&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于for的循环嵌套的问题", ["想询问一下这个for的循环里面为什么可以同时有2个", "for(j=1)，上面一个for(j=1)中的j自加后不会影响到下面的j吗。比如上面的j自加后为2，为什么下面的j不变成2。"]], "Tag": "程序设计"}
{"Answer": "最上面加一句  set  serveroutput on试试", "Konwledge_Point": "for循环的嵌套", "Question": ["PLSQL循环嵌套查询，查询结果一直不打印输出", ["declare", "\n  -- Local variables here", "\n  i           integer := 1;", "\n  currentdate timestamp;", "\n  ninsdate    timestamp;", "\n  nseqid      number;", "\n  ndate       varchar2(10);", "\n  nspid       varchar2(10);", "\n  po       INTEGER;", "\nbegin", "\n  ndate := '201506';", "\n  nspid := '33474';", "\n  po:=0;", "\n  select sysdate + 1 / (24 * 60) into currentdate from dual;", "\n  ninsdate := currentdate + 1 / 1440;", "\n  for c in (select *", "\n              from userorder t", "\n             where t.producttype = '1'", "\n               and substr(t.ordertime, 1, 6) < '201506'", "\n               and t.spid = '33474') loop", "\n    if (i = 60) then", "\n      i        := 1;", "\n      ninsdate := ninsdate + 1 / (24 * 60);", "\n    end if;", "\n  --下面代码没执行输出，不确定为什么", "\n  select count(*)", "\n    into po", "\n    from sgip_report pt", "\n   where pt.usernumber = c.usernumber", "\n     and pt.insdate > TO_DATE('2015-06-07', 'yyyy-mm-dd')", "\n     and pt.state = '0';", "\n  dbms_output.put_line(po);--没有打印结果，我后续判断用", "\n    if po=0 then", "\n       --插入操作", "\n    end if;", "\n end loop;", "\nend;", "\n\n", " 后台没有打印信息，一直在执行，也没有结束，不是死循环呀，大神帮忙看看\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Because you are filling &lt;code&gt;x[i]&lt;/code&gt; with each of the values of &lt;code&gt;scores&lt;/code&gt;.&lt;br&gt;\nYou have one extra loop.&lt;/p&gt;\n\n&lt;p&gt;Since the last value of the slice &lt;code&gt;scores&lt;/code&gt; is 83, you are filling &lt;code&gt;x&lt;/code&gt; one more time, with 83 for each slot.&lt;/p&gt;\n\n&lt;p&gt;Simpler would be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i, _ := range x {\n    // fill up x array with elements of scores array\n    x[i] = scores[i]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/AbdPrIFnaQ\" rel=\"nofollow\"&gt;&lt;kbd&gt;play.golang.org&lt;/kbd&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Output: &lt;code&gt;[98 93 77 82 83]&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Go中的嵌套循环数组与其他语言的数组不一样", ["\n\n", "Why is this function printing out an array of ", "[83 83 83 83 83]", " instead of ", "[98 93 77 82 83]", " ?", "\n\n", "package main\n\nimport \"fmt\"\n\nfunc main() {\n    var x [5]float64\n    scores := [5]float64{ 98, 93, 77, 82, 83, }\n\n    for i, _ := range x {\n        for j, _ := range scores {\n            // fill up x array with elements of scores array\n            x[i] = scores[j]\n        }\n    }\n    fmt.Println(x)\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "用Set做一个myRoles和hasRoles的并集，然后判断这个并集的大小是不是等于myRoles和hasRoles的大小相加，如果不是的话，可定有重复了。\r\n\r\nSet&lt;String&gt; totalRoles = new HashSet&lt;String&gt;();\r\nList&lt;String&gt; myRoles = new ArrayList&lt;String&gt;();  \r\nList&lt;String&gt; hasRoles = new ArrayList&lt;String&gt;();  \r\n  \r\npublic boolean hasRole()  \r\n{  \r\n    // you can use addAll()\r\n    for (String my : myRoles)  \r\n    {  \r\n      totalRoles.add(my);\r\n    }\r\n    // you can use addAll()\r\n    for (String role : hasRoles)  \r\n      totalRoles.add(role);     \r\n    }  \r\n    return totalRoles.size()==(myRoles.size()+hasRoles.size());\r\n} \r\n\r\n查看下ArrayList.retainAll 和removeAll本质上都做了两个for循环", "Konwledge_Point": "for循环的嵌套", "Question": ["两层for循环判断，如何优化", ["[code=\"java\"]", "\n\n", "List myRoles = new ArrayList();", "\nList hasRoles = new ArrayList();", "\n\n", "public boolean hasRole()", "\n{", "\n    for (String my : myRoles)", "\n    {", "\n    for (String role : hasRoles)", "\n        {", "\n        if(my.equals(role))", "\n        {", "\n            return true;", "\n        }", "\n    }", "\n    }", "\n\n", "return false;\n", "\n\n", "}", "\n[/code]", "\n\n", "上面方面的逻辑是：myRoles集合中的字符串，只要有一个在hasRoles集合中存在，就返回true", "\n但是，这个方法嵌套了2层for循环，效率似乎很低", "\n\n", "求改进的方法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为i等于j&amp;#xff0c;所以j一直自加&amp;#xff0c;i也跟着加输出数字&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["数字金字塔，不懂过程，不懂循环嵌套，不懂这个过程的运行", ["求出每行的数字，不懂这个过程，好难"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Like other answerers, I'd definitely &lt;em&gt;prefer&lt;/em&gt; to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;code&gt;break&lt;/code&gt; with a label for the outer loop. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public class Test {\n    public static void main(String[] args) {\n        outerloop:\n        for (int i=0; i &amp;lt; 5; i++) {\n            for (int j=0; j &amp;lt; 5; j++) {\n                if (i * j &amp;gt; 6) {\n                    System.out.println(\"Breaking\");\n                    break outerloop;\n                }\n                System.out.println(i + \" \" + j);\n            }\n        }\n        System.out.println(\"Done\");\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This prints:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n2 2\n2 3\nBreaking\nDone\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在 Java 中突破嵌套的循环？", ["\n\n", "I've got a nested loop construct like this:", "\n\n", "for (Type type : types) {\n    for (Type t : types2) {\n         if (some condition) {\n             // Do something and break...\n             break; // Breaks out of the inner loop\n         }\n    }\n}\n", "\n\n", "Now how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.", "\n\n", "I don't want to put the inner loop in a different method.", "\n\n", "Update: I don't want to rerun the loops, when breaking I'm finished with the execution of the loop block.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/886955/how-to-break-out-of-nested-loops-in-java"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;再seven函数中将sum初始化为0&lt;br /&gt;sum &amp;#61; 0&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for和if嵌套为什么不执行if", ["如图", "自建seven函数的返回值直接打印可以正常输出，如果加一个if判断返回值是否为0则无法输出。", "附代码", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "seven", "(", "int", " n )", ";\n", "int", " ", "main", " ", "()", "{\n    ", "int", " a[", "10", "];\n    ", "int", " i;\n    ", "printf", "(", "\"请输入十个整数：\"", ");\n    ", "for", "(i = ", "0", ";i < ", "10", ";i++){\n    ", "scanf", "(", "\"%d\"", ",&a[i]);\n    }\n    ", "printf", "(", "\"数字之和为7的数有：\"", ");\n", "for", "(i = ", "0", ";i < ", "10", ";i++){\n", "printf", "(", "\"%d\\t\"", ",", "seven", "(a[i]));\n}\n}\n", "int", " ", "seven", "(", "int", " n )", "{\n    ", "int", " sum;\n    ", "int", " m;\n    m= n;\n    ", "while", "(n!=", "0", ")\n    {\n        sum += n%", "10", ";\n        n /= ", "10", ";\n    }\n    ", "if", " (sum==", "7", "){\n    ", "return", " m;", "//是7 ", "\n    }\n    ", "else", " \n    ", "return", " ", "0", ";\n}\n\n", "\n", "如上这样写就可以正常输出", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "seven", "(", "int", " n )", ";\n", "int", " ", "main", " ", "()", "{\n    ", "int", " a[", "10", "];\n    ", "int", " i;\n    ", "printf", "(", "\"请输入十个整数：\"", ");\n    ", "for", "(i = ", "0", ";i < ", "10", ";i++){\n    ", "scanf", "(", "\"%d\"", ",&a[i]);\n    }\n    ", "printf", "(", "\"数字之和为7的数有：\"", ");\n", "for", "(i = ", "0", ";i < ", "10", ";i++){\n", "if", "(", "seven", "(a[i]))\n", "printf", "(", "\"%d\\t\"", ",", "seven", "(a[i]));\n}\n}\n", "int", " ", "seven", "(", "int", " n )", "{\n    ", "int", " sum;\n    ", "int", " m;\n    m= n;\n    ", "while", "(n!=", "0", ")\n    {\n        sum += n%", "10", ";\n        n /= ", "10", ";\n    }\n    ", "if", " (sum==", "7", "){\n    ", "return", " m;", "//是7 ", "\n    }\n    ", "else", " \n    ", "return", " ", "0", ";\n}\n\n", "\n", "这样写就不会输出"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;FibonacciX&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || x&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;FibonacciX&lt;/span&gt;(x&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-built_in\"&gt;FibonacciX&lt;/span&gt;(x&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;);\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;FibonacciX&lt;/span&gt;(i);\n        sum &amp;#43;&amp;#61; n;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,&amp;#34;&lt;/span&gt;,n);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nSum &amp;#61;%d&amp;#34;&lt;/span&gt;,sum);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["利用c++循环与嵌套", ["c++编程实现：求斐波那契（Fibonacci）数列，1，1，2，3，5，8，… …的前20项及前20项和。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for url, favorites in zip(child_url_result, child_url_favorites_result):&lt;br /&gt;该循环没有进入是因为child_url_result 或 child_url_favorites_result 两个列表有一个是空列表&lt;br /&gt;你输出下child_url_result, child_url_favorites_result看看&lt;/p&gt;\n&lt;p&gt;zip()迭代的元素长度是由其中参数列表中长度最小的列表而定, 当其中列表有一个是空列表,zip()也就返回空的迭代&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[1,2,3,4,5,6]&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[7,8,9]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v1, v2 &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; zip(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,b):\n    print(v1,v2)\n\n输出\n&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\n\n循环&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;次, a中的&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;不会遍历\n\n如果b是&lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;空列表\n\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[1,2,3,4,5,6]&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v1, v2 &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; zip(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,b):\n    print(v1,v2)\n\n也就循环&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;次, 什么都不输出\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python：for循环内嵌套for不执行迭代器", ["新手写了一个抓取网址的爬虫，但是发现 for url, favorites in zip(child_url_result, child_url_favorites_result):这个循环没有进入或者进入之后什么都没做就出去了，是迭代器在嵌套for循环内有什么规则吗？我试了上面的[a,b,c]循环可以进入并打印，请问是什么问题", "\n", "\n", "\n", "class", " ", "Crawler", "(", "object", "):\n    ", "def", " ", "__init__", "(", "self", "):  ", "# __init__，构造，初始化，实例化。", "\n        self.child_url_no = ", "1", "\n        self.top_videos_home = ", "'http://#####/v.php?category=rf&viewtype=basic&page='", "\n        self.headers = {", "'Cookie'", ": ", "'Cookie'", ",\n                   ", "'User-Agent'", ": ", "'User-Agent'", ",\n                   ", "'Refer'", ": ", "'Refer'", "\n                   }\n        self.child_url_list = []\n        self.child_url_favorites_list = []\n\n    ", "def", " ", "get_child_url_list", "(", "self, page_num", "):\n        ", "for", " x ", "in", " ", "range", "(page_num):  ", "# 用page_num循环页数", "\n            ", "# 获取网页源码，用str(self.child_url_no)改变网址页码并遍历", "\n            child_url_resp = requests.get(self.top_videos_home + ", "str", "(self.child_url_no), verify=", "False", ", headers=self.headers)   \n            ", "#  获取两个迭代器用于筛选", "\n            child_url_favorites_resp = child_url_resp\n            child_url_resp.encoding = ", "'utf-8'", "\n            child_url_favorites_resp.encoding = ", "'utf-8'", "\n            time.sleep(", "2", ")\n            ", "#  建立正则表达规则", "\n            child_url_object = re.", "compile", "(", "r'well-sm videos-text-align\">\\\n        \\\n              <a href=\"(?P<child_url>.*?)\">'", ", re.S)\n            child_url_result = child_url_object.finditer(child_url_resp.text)\n\n            child_url_favorites_object = re.", "compile", "(", "'Favorites:</span> (?P<child_url_favorites>.*?)      <br>'", ", re.S)\n            child_url_favorites_result = child_url_favorites_object.finditer(child_url_favorites_resp.text)\n            ", "for", " i ", "in", " [", "'a'", ", ", "'b'", ", ", "'c'", "]:  ", "#  测试用", "\n                ", "print", "(i)  ", "#正常打印", "\n            ", "for", " url, favorites ", "in", " ", "zip", "(child_url_result, child_url_favorites_result): ", "#  该循环没有进入或者进入无动作", "\n                self.child_url_list.append(url.group(", "'child_url'", ")) ", "#  列表为空", "\n                self.child_url_favorites_list.append(favorites.group(", "'child_url_favorites'", ")) ", "#  列表为空", "\n            self.child_url_no += ", "1", " ", "#  正常递增", "\n  \n\n", "if", " __name__ == ", "'__main__'", ":\n    C9PV = Crawler()\n    C9PV.get_child_url_list(", "3", ")\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题已解决&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, m;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;m)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || m &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt;&amp;#61; m; j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || i &amp;#61;&amp;#61; n)\n                    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;* &amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || j &amp;#61;&amp;#61; m)\n                    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;* &amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;;\n            }\n            cout &amp;lt;&amp;lt; endl;\n        }\n        cout &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["OJ解决嵌套for循环超市问题", ["由于本人学识较浅，目前面对重复输出问题，只会使用嵌套for循环，可是有时嵌套for循环会有超时现象，请问有什么可以优化嵌套for循环的方法", "输入", "输入多组测试数据。", "对于每组测试数据，输入矩形的长和宽n，m(0<n<=100,0<m<=100)。输入数据直到n或m为0时结束。", "输出", "输出想要画的图形。每组图形之间用一个空行隔开。", "\n", "样例输入 Copy", "4  3", "4  4", "\n", "样例输出 Copy", "\n", "*", " ", "* *", " ", "*\n*", "     ", "*\n*", "     ", "*\n*", "     ", "*\n*", " ", "* *", " ", "*\n\n*", " ", "* *", " ", "* *", "\n", "*", "       ", "*\n*", "       ", "*\n*", "       ", "*\n*", " ", "* *", " ", "* *", "\n", "\n", "以下是我的代码", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n, m;\n    ", "while", " (", "1", ")\n    {\n        cin >> n >> m;\n        ", "if", " (n == ", "0", " || m == ", "0", ")\n            ", "break", ";\n        ", "for", " (", "int", " i = ", "0", "; i <= n; i++)\n        {\n            ", "for", " (", "int", " j = ", "0", "; j <= m; j++)\n            {\n                ", "if", " (i == ", "0", " || i == n)\n                    cout << ", "\"* \"", ";\n                ", "else", " ", "if", " (j == ", "0", " || j == m)\n                    cout << ", "\"* \"", ";\n                ", "else", "\n                    cout << ", "\"  \"", ";\n            }\n            cout << endl;\n        }\n        cout << endl;\n    }\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Like other answerers, I'd definitely &lt;em&gt;prefer&lt;/em&gt; to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;code&gt;break&lt;/code&gt; with a label for the outer loop. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public class Test {\n    public static void main(String[] args) {\n        outerloop:\n        for (int i=0; i &amp;lt; 5; i++) {\n            for (int j=0; j &amp;lt; 5; j++) {\n                if (i * j &amp;gt; 6) {\n                    System.out.println(\"Breaking\");\n                    break outerloop;\n                }\n                System.out.println(i + \" \" + j);\n            }\n        }\n        System.out.println(\"Done\");\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This prints:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n2 2\n2 3\nBreaking\nDone\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在 Java 中突破嵌套循环？", ["\n\n", "I've got a nested loop construct like this:", "\n\n", "for (Type type : types) {\n    for (Type t : types2) {\n         if (some condition) {\n             // Do something and break...\n             break; // Breaks out of the inner loop\n         }\n    }\n}\n", "\n\n", "Now how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.", "\n\n", "I don't want to put the inner loop in a different method.", "\n\n", "Update: I don't want to rerun the loops, when breaking I'm finished with the execution of the loop block.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/886955/how-to-break-out-of-nested-loops-in-java"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你也可以从二开始&amp;#xff0c;题目不一样可以自己改变&amp;#xff0c;j的初值&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套循环的j为什么每次都是从1开始", ["C语言 连续两个for循环 for(i=1;i<=3;i++) for(j=1;j<=2*i;j++) 为啥第二个循环里的j每次都是从1开始"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Sorry I just realized after hours that I have the following thing in functions.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function order_by_position($query){\n\n    if(is_post_type_archive( 'A')||is_post_type_archive( 'C')||is_post_type_archive( 'D')){\n        $query-&amp;gt;query_vars['meta_key']=\"position\";\n        $query-&amp;gt;query_vars['orderby']=\"meta_value_num\";\n    }\n    return $query;\n}\nadd_action( 'pre_get_posts', 'order_by_position' );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It's much more logical now.\nSorry for disturbing.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Wordpress嵌套循环，无法从查询中删除meta_key", ["\n\n", "I have two custom posts types A and B, linked together with a same custom taxonomy.\nWhile looping through A posts with the \"default\" loop, I want for each A to get all B with the same taxonomy.", "\n\n", "The code looks like this:", "\n\n", "<?php if(have_posts()): while(have_posts()): the_post(); ?>\n    <?php \n        $A_Bs=get_the_terms( $post->ID, 'A_B');\n    ?>\n\n    <?php if($A_Bs!=false && count($A_Bs)>0):?>\n\n        <?php\n\n            $A_B=$A_Bs[0];\n            $args = array(\n                'post_type'      => 'B',\n                'tax_query' => array(\n                  array(\n                    'taxonomy' => 'A_B',\n                    'field' => 'term_id',\n                    'terms' => $A_B->term_id,\n                  ),\n                ),\n            );\n\n            $loop = new WP_Query($args);\n            $saved_post=$post;\n        ?>\n\n        <?php while ($loop->have_posts()) : $loop->the_post();?>\n            blabla\n        <?php endwhile;?>\n        <?php $post=$saved_post;?>\n\n    <?php endif;?>\n<?php endwhile; endif;?>\n", "\n\n", "But the sub-loop is always empty. The reason is, in the query_vars I have these two guys:", "\n\n", "  'meta_key' => string 'position' (length=8)\n  'orderby' => string 'meta_value_num' (length=14)\n", "\n\n", "and I can't get rid of them. I never specified this ordering anywhere and my B posts don't have this custom field.", "\n\n", "It's generating this line in the SQL query:", "\n\n", "aaaa_postmeta.meta_key = 'position'\n", "\n\n", "and prevent me to list the posts.\nI tried to play with the $args, removing the tax_query and changing the post_type but it's always the same.", "\n\n", "Thank you for your time !", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Mostly it will be like the below.&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;The idea is &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Sort the rows with category. [you have done this part.] &lt;/li&gt;\n&lt;li&gt;Declare the category with a default value.  &lt;/li&gt;\n&lt;li&gt;If there is any change, update the category value with new one. [as it is sorted, it will always grouped by default. ]&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;The code will be like this.&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$stmt = $con-&amp;gt;prepare(\"SELECT * FROM wp_products ORDER BY cat\");\n$stmt-&amp;gt;execute();\n\n$category = '';  # Default value for category. \n\n$results = $stmt-&amp;gt;get_result();\necho \"&amp;lt;p&amp;gt;&amp;lt;center&amp;gt;&amp;lt;h4&amp;gt;Master List&amp;lt;/h4&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/p&amp;gt;\";\necho \"&amp;lt;table&amp;gt;\n&amp;lt;tr&amp;gt;\n&amp;lt;th&amp;gt;Product&amp;lt;/th&amp;gt;\n&amp;lt;th&amp;gt;Link&amp;lt;/th&amp;gt;\n&amp;lt;th&amp;gt;Status&amp;lt;/th&amp;gt;\n&amp;lt;/tr&amp;gt;\";\nif (mysqli_num_rows($results) &amp;gt; 0) {\n   while ($row = $results-&amp;gt;fetch_assoc()) {\n\n      # Category will be updated in this query \n      if($category != $row['cat']) { \n         $category = $row['cat']; \n         echo '&amp;lt;tr&amp;gt;&amp;lt;td colspan=\"3\"&amp;gt; Category ' . $category .' &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'; \n      }\n\n      echo \"&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;\" . $row['product'] . \"&amp;lt;/td&amp;gt;\";\n      echo \"&amp;lt;td&amp;gt;\" . $row['link'] . \"&amp;lt;/td&amp;gt;\";\n      echo \"&amp;lt;td&amp;gt;\" . $row['status'] . \"&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;\";\n   }\n}\necho \"&amp;lt;/table&amp;gt;\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Check on. :) &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["另一个嵌套循环php + mysql查询", ["\n\n", "I have searched this for hours and read numerous q/a's on foreach loops and while loops for the answer to my question but have yet to find a response that resembled my query. Mostly categorized menues...", "\n\n", "I have a mysql table setup like this", "\n\n", "cat | product | link  | status\n1   | milk    | https | in stock\n1   | eggs    | https | in stock\n2   | butter  | https | out of stock\n2   | bread   | https | in stock\n3   | bananas | https | in stock \n", "\n\n", "and would like to group the data in a php looped table like this;", "\n\n", "         Category 1\n milk    | https | in stock\n eggs    | https | in stock\n         Category 2\n butter  | https | out of stock\n bread   | https | in stock\n         Category 3\n bananas | https | in stock \n", "\n\n", "What sort of nested loop would I need? would I need to call a second mysqli query in the nested loop grouping rows by ", "cat", " ?", "\n\n", "Thanks :)", "\n\n", "PHP code added Edit", "\n\n", "$stmt = $con->prepare(\"SELECT * FROM wp_products ORDER BY cat\");\n$stmt->execute();\n\n$results = $stmt->get_result();\necho \"<p><center><h4>Master List</h4></center></p>\";\necho \"<table>\n<tr>\n<th>Product</th>\n<th>Link</th>\n<th>Status</th>\n</tr>\";\nif (mysqli_num_rows($results)>0){\nwhile($row = $results->fetch_assoc())\n{\n  echo \"<tr><td>\" . $row['product'] .\"</td>\";\n  echo \"<td>\". $row['link'] .\"</td>;\n  echo \"<td>\". $row['status'] .\"</td></tr>\";\n}\n}\necho \"</table>\";\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "退出当前循环，如果有多层循环要退出到指定的，可以加标签结合brreak 对应标签名实现退出到指定的for外\r\n\r\n```\r\n \r\n    i:for(var i=0;i&lt;10;i++)\r\n        j:for(var j=0;j&lt;10;j++)\r\n            for (var k = 0; k &lt; 10; k++) {\r\n                alert(i + '-' + j + '-' + k);\r\n                if (i == 2) break i;\r\n                if (k == 2) break j;\r\n            }\r\n    alert('finish')\r\n```", "Konwledge_Point": "for循环的嵌套", "Question": ["问一个基础一些的js问题，关于break语句的", ["js里面如果for循环嵌套了，那么调用break是全部循环都退出还是返回上一个循环？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The error you are getting is due to the way you are defining your &lt;code&gt;OrderAddresses&lt;/code&gt; struct. Instead of&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type OrderAddresses []struct {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you use&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type OrderAddresses struct {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;without the braces, your compile error should go away. &lt;/p&gt;\n\n&lt;p&gt;That being said, I'm not sure if your json will parse as you expect given the blob I'm looking at. It appears that &lt;code&gt;addresses&lt;/code&gt; in the json blob is an array. This means that instead of representing it as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Addresses map[string]OrderAddresses `json:\"addresses\"`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should simply make it a slice of &lt;code&gt;OrderAddresses&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Addresses []OrderAddresses `json:\"addresses\"`\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在Go中循环嵌套JSON元素", ["\n\n", "I am receiving a JSON response from an API that contains one or more \"entities\". The JSON looks like this:", "\n\n", "{\n    \"3211\": {\n        \"entity_id\": \"3211\",\n        \"status\": \"complete\",\n        \"coupon_code\": \"COUPON\",\n        \"shipping_description\": \"Shipping - AU Courier\",\n        \"customer_id\": \"2775\",\n        \"base_discount_amount\": \"-50.0000\",\n        \"base_grand_total\": \"149.0000\",\n        \"base_shipping_amount\": \"0.0000\",\n        \"base_shipping_tax_amount\": \"0.0000\",\n        \"base_subtotal\": \"199.0000\",\n        \"base_tax_amount\": \"0.0000\",\n        \"base_total_paid\": \"149.0000\",\n        \"base_total_refunded\": null,\n        \"discount_amount\": \"-50.0000\",\n        \"grand_total\": \"149.0000\",\n        \"shipping_amount\": \"0.0000\",\n        \"shipping_tax_amount\": \"0.0000\",\n        \"store_to_order_rate\": \"1.0000\",\n        \"subtotal\": \"199.0000\",\n        \"tax_amount\": \"0.0000\",\n        \"total_paid\": \"149.0000\",\n        \"total_refunded\": null,\n        \"base_shipping_discount_amount\": \"0.0000\",\n        \"base_subtotal_incl_tax\": \"199.0000\",\n        \"base_total_due\": \"0.0000\",\n        \"shipping_discount_amount\": \"0.0000\",\n        \"subtotal_incl_tax\": \"199.0000\",\n        \"total_due\": \"0.0000\",\n        \"increment_id\": \"200000423\",\n        \"base_currency_code\": \"AUD\",\n        \"discount_description\": \"COUPON\",\n        \"remote_ip\": \"123.123.123.123\",\n        \"store_currency_code\": \"AUD\",\n        \"store_name\": \"Australia\",\n        \"created_at\": \"2017-07-17 03:07:40\",\n        \"shipping_incl_tax\": \"0.0000\",\n        \"payment_method\": \"ewayrapid_ewayone\",\n        \"gift_message_from\": null,\n        \"gift_message_to\": null,\n        \"gift_message_body\": null,\n        \"tax_name\": null,\n        \"tax_rate\": null,\n        \"addresses\": [\n            {\n                \"region\": \"South Australia\",\n                \"postcode\": \"5000\",\n                \"lastname\": \"Doe\",\n                \"street\": \"Level 6\n25 Example Street\",\n                \"city\": \"Adelaide\",\n                \"email\": \"example@email.com\",\n                \"telephone\": \"+61 123 456 789\",\n                \"country_id\": \"AU\",\n                \"firstname\": \"John\",\n                \"address_type\": \"billing\",\n                \"prefix\": null,\n                \"middlename\": null,\n                \"suffix\": null,\n                \"company\": null\n            },\n            {\n                \"region\": \"South Australia\",\n                \"postcode\": \"5000\",\n                \"lastname\": \"Doe\",\n                \"street\": \"Level 6\n25 Example Street\",\n                \"city\": \"Adelaide\",\n                \"email\": \"example@email.com\",\n                \"telephone\": \"+61 123 456 789\",\n                \"country_id\": \"AU\",\n                \"firstname\": \"John\",\n                \"address_type\": \"shipping\",\n                \"prefix\": null,\n                \"middlename\": null,\n                \"suffix\": null,\n                \"company\": null\n            }\n        ]\n    }\n}\n", "\n\n", "I have written the following ", "struct", " types:", "\n\n", "type Orders map[string]Order\ntype Order struct {\n    EntityID                   string                    `json:\"entity_id\"`\n    Status                     string                    `json:\"status\"`\n    CouponCode                 string                    `json:\"coupon_code\"`\n    ShippingDescription        string                    `json:\"shipping_description\"`\n    CustomerID                 string                    `json:\"customer_id\"`\n    BaseDiscountAmount         string                    `json:\"base_discount_amount\"`\n    BaseGrandTotal             string                    `json:\"base_grand_total\"`\n    BaseShippingAmount         string                    `json:\"base_shipping_amount\"`\n    BaseShippingTaxAmount      string                    `json:\"base_shipping_tax_amount\"`\n    BaseSubtotal               string                    `json:\"base_subtotal\"`\n    BaseTaxAmount              string                    `json:\"base_tax_amount\"`\n    BaseTotalPaid              string                    `json:\"base_total_paid\"`\n    BaseTotalRefunded          string                    `json:\"base_total_refunded\"`\n    DiscountAmount             string                    `json:\"discount_amount\"`\n    GrandTotal                 string                    `json:\"grand_total\"`\n    ShippingAmount             string                    `json:\"shipping_amount\"`\n    ShippingTaxAmount          string                    `json:\"shipping_tax_amount\"`\n    StoreToOrderRate           string                    `json:\"store_to_order_rate\"`\n    Subtotal                   string                    `json:\"subtotal\"`\n    TaxAmount                  string                    `json:\"tax_amount\"`\n    TotalPaid                  string                    `json:\"total_paid\"`\n    TotalRefunded              string                    `json:\"total_refunded\"`\n    BaseShippingDiscountAmount string                    `json:\"base_shipping_discount_amount\"`\n    BaseSubtotalInclTax        string                    `json:\"base_subtotal_incl_tax\"`\n    BaseTotalDue               string                    `json:\"base_total_due\"`\n    ShippingDiscountAmount     string                    `json:\"shipping_discount_amount\"`\n    SubtotalInclTax            string                    `json:\"subtotal_incl_tax\"`\n    TotalDue                   string                    `json:\"total_due\"`\n    IncrementID                string                    `json:\"increment_id\"`\n    BaseCurrencyCode           string                    `json:\"base_currency_code\"`\n    DiscountDescription        string                    `json:\"discount_description\"`\n    RemoteIP                   string                    `json:\"remote_ip\"`\n    StoreCurrencyCode          string                    `json:\"store_currency_code\"`\n    StoreName                  string                    `json:\"store_name\"`\n    CreatedAt                  string                    `json:\"created_at\"`\n    ShippingInclTax            string                    `json:\"shipping_incl_tax\"`\n    PaymentMethod              string                    `json:\"payment_method\"`\n    TaxName                    string                    `json:\"tax_name\"`\n    TaxRate                    string                    `json:\"tax_rate\"`\n    Addresses                  map[string]OrderAddresses `json:\"addresses\"`\n}\n\ntype OrderAddresses []struct {\n    Region      string  `json:\"region\"`\n    Postcode    string  `json:\"postcode\"`\n    Lastname    string  `json:\"lastname\"`\n    Street      string  `json:\"street\"`\n    City        string  `json:\"city\"`\n    Email       string  `json:\"email\"`\n    Telephone   string  `json:\"telephone\"`\n    CountryID   string  `json:\"country_id\"`\n    Firstname   string  `json:\"firstname\"`\n    AddressType string  `json:\"address_type\"`\n    Prefix      *string `json:\"prefix\"`\n    Middlename  *string `json:\"middlename\"`\n    Suffix      *string `json:\"suffix\"`\n    Company     *string `json:\"company\"`\n}\n", "\n\n", "I am then trying to process it like so (the ", "getFromOrdersAPI(page)", " function returns the JSON mentioned above in the ", "Orders", " type):", "\n\n", "for page := 1; page < 3; page++ {\n    orders := getFromOrdersAPI(page)\n    for _, order := range orders {\n        //Process all the order items except addresses\n        fmt.Println(\"Processing entity:\", orders.EntityID)\n\n        for _, orderaddress := range order.Addresses {\n            //Trying to access address values - example below\n            fmt.Println(orderaddress.Region)\n        }\n    }\n}\n", "\n\n", "When running this, I get the error:", "\n\n", "\n  ", "orderaddress.Region undefined (type OrderAddresses has no field or method Region)", "\n", "\n\n", "Where am I going wrong?", "\n    "]], "Tag": "程序设计"}
{"Answer": "for (NSArray *a in [dict allValues])\r\n\r\n根据错误提示，你的关键字好像是(__NSCFString)。for (NSArray *s in dict) 是计算关键字的。", "Konwledge_Point": "for循环的嵌套", "Question": ["for的循环出现嵌套错误", ["我应用里的循环出现了一个错误。到达第二个循环时，应用崩溃了。", "\n\n", "代码：", "\n\n", "for (NSArray *a in dict)\n        {\n            for (NSString *s in a)\n            {\n\n            }\n        }\n", "\n\n", "错误：", "\n\n", "-[__NSCFString countByEnumeratingWithState:objects:count:]: unrecognized selector sent to instance 0x1c5b6810\n", "\n\n", "如能帮忙不胜感激。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            k&amp;#61;i*j;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;,i,j,k);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;j)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["不懂就问，c＋＋课堂作业", ["学习循环结构，要用for循环嵌套语句输出九九乘法表，该怎么表达"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解答如下&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/484465856456127.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t[][n])\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;n; j&amp;#43;&amp;#43;)\n        {\n            scanf(&amp;#34;%d&amp;#34;,&amp;amp;t[i][j]);\n        }\n    }\n}\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; put(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t[][n])\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;n; j&amp;#43;&amp;#43;)\n        {\n            printf(&amp;#34;%d &amp;#34;,t[i][j]);\n        }\n        printf(&amp;#34;\\n&amp;#34;);\n    }\n    printf(&amp;#34;\\n&amp;#34;);\n}\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; swap(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *b)\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c&amp;#61;*a;\n    *a&amp;#61;*b;\n    *b&amp;#61;c;\n}\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; trans(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t[][n])\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;i; j&amp;lt;n; j&amp;#43;&amp;#43;)\n        {\n            swap(&amp;amp;t[i][j],&amp;amp;t[j][i]);\n        }\n    }\n}\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t1[][n],&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t2[][n])\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;n; j&amp;#43;&amp;#43;)\n        {\n            t1[i][j]&amp;#43;&amp;#61;t2[i][j];\n        }\n    }\n}\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; mul(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t1[][n],&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t2[][n])\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;n; j&amp;#43;&amp;#43;)\n        {\n            t1[i][j]*&amp;#61;t2[i][j];\n        }\n    }\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    printf(&amp;#34;1,转置\\n&amp;#34;);\n    printf(&amp;#34;2,加法\\n&amp;#34;);\n    printf(&amp;#34;3,乘法\\n&amp;#34;);\n    printf(&amp;#34;other,退出\\n&amp;#34;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;option&lt;/span&gt;;\n    scanf(&amp;#34;%d&amp;#34;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;option&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;option&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        printf(&amp;#34;输入矩阵行数&amp;#xff1a;&amp;#34;);\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n        printf(&amp;#34;输入矩阵&amp;#xff1a;\\n&amp;#34;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t1[n][n];\n        &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(n,t1);\n        trans(n,t1);\n        printf(&amp;#34;--------\\n&amp;#34;);\n        put(n,t1);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;option&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    {\n        printf(&amp;#34;输入矩阵行数&amp;#xff1a;&amp;#34;);\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t1[n][n];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t2[n][n];\n        printf(&amp;#34;输入矩阵1&amp;#xff1a;\\n&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(n,t1);\n        printf(&amp;#34;输入矩阵2&amp;#xff1a;\\n&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(n,t2);\n        &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(n,t1,t2);\n        printf(&amp;#34;--------\\n&amp;#34;);\n        put(n,t1);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;option&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    {\n        printf(&amp;#34;输入矩阵行数&amp;#xff1a;&amp;#34;);\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t1[n][n];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t2[n][n];\n        printf(&amp;#34;输入矩阵1&amp;#xff1a;\\n&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(n,t1);\n        printf(&amp;#34;输入矩阵2&amp;#xff1a;\\n&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(n,t2);\n        mul(n,t1,t2);\n        printf(&amp;#34;--------\\n&amp;#34;);\n        put(n,t1);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言制作稀疏矩阵运算器，要求不使用三重及三重以上嵌套循环，时间复杂度较低", ["C语言做一个稀疏矩阵运算器，要求不使用三重及三重以上嵌套循环，并且时间复杂度较低，可以实现矩阵运算器的矩阵转置，矩阵加减法，矩阵乘法，退出运算五个功能，可以适当追加赏金。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use wordpress inbuilt method &lt;a href=\"https://codex.wordpress.org/Function_Reference/wp_dropdown_categories\" rel=\"nofollow\"&gt;wp_dropdown_categories()&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is the example..&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$args = [\n            'show_option_all'    =&amp;gt; 'All',\n            'orderby'            =&amp;gt; 'ID', \n            'order'              =&amp;gt; 'ASC',\n            'hide_empty'         =&amp;gt; 0, \n            'selected'           =&amp;gt; isset( $_REQUEST['your drop down name'] ) ? $_REQUEST['your drop down name'] : '' ,\n            'hierarchical'       =&amp;gt; 1, \n            'name'               =&amp;gt; 'your drop down name',\n            'taxonomy'           =&amp;gt; 'your custom post type name',\n            'hide_if_empty'      =&amp;gt; false,\n            'value_field'        =&amp;gt; 'term_id',\n        ];\n        wp_dropdown_categories( $args );\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["循环遍历嵌套数组的子元素wordpress get_terms和显示层次结构", ["\n\n", "I looked many guides over the net but nothing really completes the search what i need.", "\n\n", "I am making custom taxonomy list for custom post type, and that taxonomy is hierarchical and should be basically displayed as category, but i want to point out subcategories or child items in select dropdown, something similarly like wordpress wp_list_categories, except i need custom output with only id and name because of dropdown list.", "\n\n", "This is so far where i go, i managed to get them in line but as there are many subcategories i need to make it somehow dynamic.", "\n\n", "\n\n", "I have found custom function which get whole list of categories and shift array to arrange them by parent-child relationship", "\n\n", "function get_taxonomy_hierarchy( $taxonomy, $parent = 0 ) {\n // only 1 taxonomy\n  $taxonomy = is_array( $taxonomy ) ? array_shift( $taxonomy ) : $taxonomy;\n\n  // get all direct decendents of the $parent\n  $terms = get_terms( $taxonomy, array( 'parent' => $parent, 'hide_empty' => false ) );\n\n  // prepare a new array.  these are the children of $parent\n  // we'll ultimately copy all the $terms into this new array, but only after they\n  // find their own children\n  $children = array();\n\n // go through all the direct decendents of $parent, and gather their children\n  foreach ( $terms as $term ){\n    // recurse to get the direct decendents of \"this\" term\n   $term->children = get_taxonomy_hierarchy( $taxonomy, $term->term_id );\n\n   // add the term to our new array\n   $children[ $term->term_id ] = $term;\n  }\n\n  // send the results back to the caller\n  return $children;\n}\n", "\n\n", "And the output of that is next:", "\n\n", "(sorry for posting on pastebin but array is really too long)\nhttp://pastebin.com/ekZAFb3C\n", "\n\n", "So from that i can see the child categories and output foreach parrent-child but i don't know how to out put it multi level and recursively, i just did it manually which is not quite good idea.", "\n\n", "                        <select class=\"select2 form-control\" data-placeholder=\"All Categories\" data-allow-clear=\"true\">\n                        <option></option> \n                        <?php $hierarchy = get_taxonomy_hierarchy( 'listings_category' );\n                        foreach ($hierarchy as $list) {\n                            echo '<option value=\"' . $list->term_id . '\"><strong>' . $list->name . '</strong></option>';\n                            if (!empty($list->children)) {\n                               foreach ($list->children as $children) {\n                                    echo '<option value=\"' . $children->term_id . '\">- ' . $children->name . '</option>';\n                                            if (!empty($children->children)) {\n                                           foreach ($children->children as $subchildren) {\n                                                echo '<option value=\"' . $subchildren->term_id . '\">-- ' . $subchildren->name . '</option>';\n                                           }\n                                        }\n                               }\n                            }\n                        }\n\n                        ?>\n                    </select>\n", "\n\n", "So any ideas how can i make it dynamically and to have parent-child relationship", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是怎么测试出跳不出的&amp;#xff0c;断点跟了吗&lt;br /&gt;你catch都不打印任何东西&amp;#xff0c;你怎么确定走了catch的&lt;br /&gt;如果想异常了就不循环&amp;#xff0c;最简单的办法&amp;#xff0c;你把try包在for外面不就好了&amp;#xff0c;为什么非要放里面&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环和trycatch嵌套", ["\n", "for", " (", "int", " i = ", "0", "; i < ", "10", "; i++) {\n                ", "if", " (param.path != ", "null", " || (\"\").equals(param.path)) {\n                    SimpleDateFormat simpleDateFormat = ", "new", " SimpleDateFormat(\"yyyyMMdd\");\n                    println(\"cat \" + param.agoPath + simpleDateFormat.format(", "new", " ", "Date", "()) + \"/\" + param.path + i + param.suffix + \" |grep \" + param.keyword + \" |wc -l\");\n                    String s = i + ", "1", " + \"\";\n                    println(s);\n                    try {\n                        String lineStr = SshUtil.exec(param.ip, param.port, param.username, param.", "password", ",\n                                \"cat \" + param.agoPath + simpleDateFormat.format(", "new", " ", "Date", "()) + \"/\" + param.path + s + param.suffix + \" |grep \" + param.keyword + \" |wc -l\", param.timeout, param.", "encoding", ");\n                        println(lineStr);\n                        list.", "add", "(lineStr);\n                    } catch (", "Exception", " e) {\n                        break;\n                    }\n                }\n            }\n", "\n", "catch里的break跳不出外层的for循环，有其他方法处理吗？异常了就不循环了"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What you wish to achieve should be fairly straigtforward with Javascript rather than PHP - the following uses PHP only to generate the initial list and subsequent sub-lists are generated using javascript.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    echo \"&amp;lt;ul id='infinite-menu'&amp;gt;\";\n    for( $i=1; $i &amp;lt; 11; $i++ ){\n        echo \"&amp;lt;li&amp;gt;$i&amp;lt;/li&amp;gt;\";\n    }\n    echo \"&amp;lt;/ul&amp;gt;\";\n?&amp;gt;\n\n\n&amp;lt;script&amp;gt;\n\n    var children=10;\n\n    function newnodes(e){\n        if( e.target.childNodes.length==1 ){\n            var ul=document.createElement('ul');\n            e.target.appendChild(ul);\n\n            for( i=1; i &amp;lt; children+1; i++ ){\n                var li=document.createElement('li');\n                li.innerHTML=i;\n                ul.appendChild( li );\n            }\n        }\n    }\n    var col=document.querySelectorAll('ul#infinite-menu li');\n    if( col )for( n in col )if( col[n].nodeType==1){\n        col[n].addEventListener('click',newnodes,false);\n    }\n\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在PHP中创建无限的嵌套列表", ["\n\n", "I know, the headline is not very specific, but I dont't know how to title it.\n", "\nI want to create a list from 1 to 10. All those numbers should be clickable and open a sublist. Again with the numbers from 1-10. Like this:", "\n\n", "\n", "1", "\n", "2\n\n", "\n", "1", "\n", "2", "\n", "3", "\n", "\n", "\n", "\n", "and so on...\nHere is some code, I've got:", "\n\n", "<?php\n$num = $_GET['zahl'];\n$zahlen = array();\nwhile($num != 0){\n  $part = $num % 10;\n  array_push($zahlen, $part);\n  $num = floor($num/10);\n}\nforeach ($zahlen as $key => $value) {\n$runs = $value + 1;\nfor ($i=1; $i < $runs ; $i++) {\n  if ($i == 1) {\n    echo $ulon . \"\n\";\n  }\n  echo $lion . \"\n\";\n  echo $a . \"ordner.php?zahl=\" . $i . $amiddle . $i . $aoff . \"\n\";\n  echo $lioff . \"\n\";\n}\nfor ($i=1; $i < 11 ; $i++) {\n  if ($i == 1) {\n    echo $ulon;\n  }\n  echo $lion . \"\n\";\n  echo $a . \"ordner.php?zahl=\" . $zahlen[0] . $i . $amiddle . $i . $aoff;\n  echo $lioff . \"\n\";\n}\necho $uloff;\necho \"\n\" . \"</body>\";\n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;foreach不要放到双重for循环里面去&amp;#xff0c;这不变成3重for循环了吗&lt;br /&gt;你调用ReadAllLines是在反复读文件&amp;#xff0c;那能不慢才怪&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;你先把读到的内容放进List&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;&amp;gt; LL&amp;#xff0c;然后判断LL.&lt;span class=\"hljs-keyword\"&gt;contains&lt;/span&gt;(str)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["双重for循环中嵌套foreach操作DataGrid速度慢", ["DataGrid加载数据时很慢，要6秒左右才显示。。。", "是因为设置了单元格颜色才变慢的吗？", "\n", "\n ", "int", " row = excelDataGridViewX.Rows.Count;", "//得到总行数", "\n            ", "int", " cell = excelDataGridViewX.Rows[", "0", "].Cells.Count;", "//得到总列数", "\n            ", "for", " (", "int", " i = ", "0", "; i < row; i++)", "//得到总行数并在之内循环", "\n            {\n                ", "for", " (", "int", " j = ", "0", "; j < cell; j++)", "//得到总列数并在之内循环", "\n                {\n                    foreach (string ", "str", " ", "in", " System.IO.File.ReadAllLines(", "\"Fail_Number.txt\"", "))\n                    {\n                        ", "if", " ((", "str", " != ", "null", " && ", "str", " != ", "\"\"", ") && ", "str", " == excelDataGridViewX.Rows[i].Cells[j].Value.ToString())\n                        {\n                            ", "this", ".excelDataGridViewX[j, i].Style.BackColor = Color.Red;\n                            ", "break", ";\n                        }\n                    }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n        for (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; 10; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            for (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; k &amp;lt; 10; k&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n                String &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt; &amp;#61; k * j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n                System&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;print((&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;length() &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n            }\n            System&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;println()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["有会用嵌套的for循环在控制台如图显示乘法表的人嘛，please🥹", ["我会用嵌套的for循环在控制台显示乘法表、但我不会按照图中的形式显示。有会用嵌套的for循环在控制台如图显示乘法表的人嘛，please🥹", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里的程序是用FOR循环嵌套来进行枚举的&amp;#xff0c;因为循环层数太多&amp;#xff0c;导致程序运行时间过长。&lt;/p&gt;\n&lt;p&gt;要完成这样的计算&amp;#xff0c;可以考虑使用其他算法来实现。例如&amp;#xff0c;可以使用递归算法&amp;#xff0c;在满足条件的情况下直接返回结果&amp;#xff0c;而不是一直循环到最后。&lt;/p&gt;\n&lt;p&gt;这里提供一个类似的递归算法的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;FUNCTION recursive_calculate(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;, c, d, e, f, g, h, &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;, j, k, l, m, n, s, t, aa, bb, cc, &lt;span class=\"hljs-selector-tag\"&gt;dd&lt;/span&gt;, ee, ff, gg, hh)\n  IF 判断符合条件\n    RETURN 结果\n  ELSE\n    FOR &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; to hh\n      recursive_calculate(&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;, c, d, e, f, g, h, &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;,\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["VFP多循环嵌套，运算速度太慢，无法实现!", ["下面是VFP中FOR的多重循环，循环嵌套太多了，时间太慢了，根本无法完成（这里只是简单列出程序），请帮忙看看要完成这样的计算，用什么程序和算法才能快速完成（请具体给出程序代码）?", "\n", "FOR", " ", "A", "=1 ", "TO", " 6\n", "FOR", " ", "B", "=A+1 ", "TO", " 7\n", "FOR", " ", "C", "=B+1 ", "TO", " 8\n", "FOR", " ", "D", "=C+1 ", "TO", " 9\n", "FOR", " ", "E", "=D+1 ", "TO", " 10\n", "FOR", " ", "F", "=E+1 ", "TO", " 11\n", "FOR", " ", "G", "=F+1 ", "TO", " 12\n", "FOR", " ", "H", "=G+1 ", "TO", " 13\n\n", "FOR", " ", "I", "=1 ", "TO", " 6\n", "FOR", " ", "J", "=I+1 ", "TO", " 7\n", "FOR", " ", "K", "=J+1 ", "TO", " 8\n", "FOR", " ", "L", "=K+1 ", "TO", " 9\n", "FOR", " ", "M", "=L+1 ", "TO", " 10\n", "FOR", " ", "N", "=M+1 ", "TO", " 11\n", "FOR", " ", "S", "=N+1 ", "TO", " 12\n", "FOR", " ", "T", "=S+1 ", "TO", " 13\n", "FOR", " ", "AA", "=1 ", "TO", " 6\n\n", "FOR", " ", "BB", "=AA+1 ", "TO", " 7\n", "FOR", " ", "CC", "=BB+1 ", "TO", " 8\n", "FOR", " ", "DD", "=CC+1 ", "TO", " 9\n", "FOR", " ", "EE", "=DD+1 ", "TO", " 10\n", "FOR", " ", "FF", "=EE+1 ", "TO", " 11\n", "FOR", " ", "GG", "=FF+1 ", "TO", " 12\n", "FOR", " ", "HH", "=GG+1 ", "TO", " 13\n", "IF", " && 判断符合条件直接跳出最顶层循环，不符合条件继续循环\nRETURN\nENDIF \n\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\n\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\n\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\nENDFOR\n\nRETURN\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt; v-for&amp;#61;&amp;#34;(item,firstIndex) in listData1&amp;#34; :key&amp;#61;&amp;#34;&amp;#39;listData1&amp;#39;&amp;#43;firstIndex&amp;#34;\n\n v-for&amp;#61;&amp;#34;(item,secondIndex) in listData2&amp;#34; :key&amp;#61;&amp;#34;&amp;#39;listData2&amp;#39;&amp;#43;secondIndex&amp;#34;\n\n\n v-for&amp;#61;&amp;#34;(item,thirdIndex) in listData3&amp;#34; :key&amp;#61;&amp;#34;&amp;#39;listData3&amp;#39;&amp;#43;thirdIndex&amp;#34;\n\n\n这三个例子 看明白 你以后就知道怎么处理v-for 的key了&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["vue循环嵌套循环，警告：检测到重复的键", ["\n", "<view class=\"contents\" v-for=\"(item,index) in listData\" :key=\"item\">\n\t<view class=\"left\">\n\t\t<image  @click =\"tocontact()\" :src=\"item.WeiBoList.Photo\"></image>\n\t</view>\n\t<view class=\"right\">\n\t\t<div class=\"div1\">\n\t\t    <text class=\"text1\"  @click =\"tocontact()\">{{item.WeiBoList.Name}}</text>\n\t\t\t<view class=\"button\">联系TA</view>\n\t\t</div>\n\t\t<div class=\"div2\" @click=\"todetails()\">\n\t\t\t<text>{{item.WeiBoList.ArtContent}}</text>\n\t\t</div>\n\t\t<div class=\"div3\">\n\t\t\t<image v-for=\"(sitem,index) in item.WeiBoImagesList\" :key=\"sitem\" :src=\"$sltUrl+sitem.Photo\" mode=\"\"></image>\n\t\t</div>\n\t\t<div class=\"div4\">\n\t\t\t<text>{{item.AddTime}}</text>\n\t\t\t<view class=\"div4right\">\n\t\t\t\t<text><i class=\"iconfont icon-zhuanfa\"></i>分享</text>\n\t\t\t\t<text><i class=\"iconfont icon-weibiaoti-\"></i>评论</text>\n\t\t\t\t<text><i class=\"iconfont icon-zan\"></i>赞</text>\n\t\t\t</view>\n\t\t</div>\n\t</view>\n</view>", "\n\n", "[Vue warn]: Duplicate keys detected: '[object Object]'. This may cause an update error."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义了4个变量&amp;#xff0c;a,b,c,d&amp;#xff0c;代表四个可能是小偷的嫌疑人员。1代表该人员是小偷。&lt;br /&gt;为什么需要四个循环&amp;#xff1f;&lt;br /&gt;排列组合问题&amp;#xff0c;四个人都有可能是小偷&amp;#xff0c;情况就很多&amp;#xff0c;循环从0开始到1结束。通过循环&amp;#xff0c;再加上题目所给特征&amp;#xff0c;条件判断&amp;#xff0c;这些条件成立其中之一且此时对应的四个变量值其中之一为1&amp;#xff0c;那个为1的就是小偷。&lt;br /&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff0c;望采纳&amp;#xff01;&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言“判断谁是小偷”题型", ["能不能解答一下用那么多for循环嵌套是啥意思，实在是看不懂。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;        initial_plan&amp;#61;initial_2.copy()&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python在使用嵌套for语句中，为什么遍历的时候会有一些元素没有遍历到？", ["一个遍历寻取出列表中两个元素，后将第一个元素放置到第二个元素前面的搜索算法邻域变换的设计。但是我用赋值的方法将列表内容赋值给initial_2，并把改动后的列表用initial_plan来表示时，明明每次遍历后都会用initial_plan=initial_2的方法重置initial_plan为什么遍历的时候，intial_2会发生变化。", "\n\n", "而当我直接使用列表，而不是赋值变量时这个情况就不会发生。", "\n\n", "\n", "initial=['M0','M7','M6','M3','M8','M0']\ndel initial[-1]\ndel initial[0]\ninitial_2=initial#消除回路和M0后的\ndef first_way():#第一种邻域变换\n    \n    for i in initial:\n        initial_plan=initial_2\n        for j in initial:\n            initial_plan=initial_2\n            print(i,j)\n            #消除邻域变换带来的影响\n            if i!=j:  \n                first_choice=initial.index(i)#1\n                second_choice=initial.index(j)#0\n                if first_choice>second_choice:\n                    del initial_plan[first_choice]\n                    initial_plan.insert(second_choice,i)\n                    print(initial_plan)\n                elif first_choice<second_choice:\n                    del initial_plan[first_choice]#M7,M6\n                    initial_plan.insert(second_choice-1,i)\n                    print(initial_plan)\n            else:\n                print('两者选到了一样的算子')\nfirst_way()", "\n\n", "得到的结果是这样的，不是我需要的结果", "\n\n", "\n", "M7 M7\n两者选到了一样的算子    \nM7 M6\n['M7', 'M6', 'M3', 'M8']\nM7 M3\n['M6', 'M7', 'M3', 'M8']\nM7 M8\n['M6', 'M3', 'M7', 'M8']\nM3 M6\n['M3', 'M6', 'M7', 'M8']\nM3 M6\n['M3', 'M6', 'M7', 'M8']\nM3 M7\n['M6', 'M3', 'M7', 'M8']\nM3 M8\n['M6', 'M7', 'M3', 'M8']\nM3 M6\n['M3', 'M6', 'M7', 'M8']\nM3 M6\n['M3', 'M6', 'M7', 'M8']\nM3 M7\n['M6', 'M3', 'M7', 'M8']\nM3 M8\n['M6', 'M7', 'M3', 'M8']\nM8 M6\n['M8', 'M6', 'M7', 'M3']\nM8 M6\n['M8', 'M6', 'M7', 'M3']\nM8 M7\n['M6', 'M8', 'M7', 'M3']\nM8 M3\n['M6', 'M7', 'M8', 'M3']", "\n\n", "当我直接使用列表形式时，就是我需要的结果", "\n\n", "\n", "initial=['M0','M7','M6','M3','M8','M0']\ndel initial[-1]\ndel initial[0]\ninitial_=initial#消除回路和M0后的\ndef first_way():#第一种邻域变换\n    \n    for i in initial:\n        initial_plan=['M7','M6','M3','M8','M1']\n        for j in initial:\n            initial_plan=['M7','M6','M3','M8','M1']\n            \n            print(i,j)\n            #消除邻域变换带来的影响\n            if i!=j:  \n                first_choice=initial.index(i)#1\n                second_choice=initial.index(j)#0\n                \n                if first_choice>second_choice:\n                    del initial_plan[first_choice]\n                    initial_plan.insert(second_choice,i)\n                    print(initial_plan)\n                        \n                elif first_choice<second_choice:\n                    del initial_plan[first_choice]#M7,M6\n                    initial_plan.insert(second_choice-1,i)\n                    print(initial_plan)\n                    \n            else:\n                print('两者选到了一样的算子')\nfirst_way()", "\n\n", "得到结果如下", "\n\n", "\n", "M7 M7\n两者选到了一样的算子\nM7 M6\n['M7', 'M6', 'M3', 'M8', 'M1']\nM7 M3\n['M6', 'M7', 'M3', 'M8', 'M1']\nM7 M8\n['M6', 'M3', 'M7', 'M8', 'M1']\nM6 M7\n['M6', 'M7', 'M3', 'M8', 'M1']\nM6 M6\n两者选到了一样的算子\nM6 M3\n['M7', 'M6', 'M3', 'M8', 'M1']\nM6 M8\n['M7', 'M3', 'M6', 'M8', 'M1']\nM3 M7\n['M3', 'M7', 'M6', 'M8', 'M1']\nM3 M6\n['M7', 'M3', 'M6', 'M8', 'M1']\nM3 M3\n两者选到了一样的算子\nM3 M8\n['M7', 'M6', 'M3', 'M8', 'M1']\nM8 M7\n['M8', 'M7', 'M6', 'M3', 'M1']\nM8 M6\n['M7', 'M8', 'M6', 'M3', 'M1']\nM8 M3\n['M7', 'M6', 'M8', 'M3', 'M1']\nM8 M8\n两者选到了一样的算子", "\n\n", "在做毕业设计，碰到了困难。可能表达的不好，毕竟不是学代码专业的，请求各位大神解答。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;try this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n// Here I return a list of the distinct States:\n$stateQuery = 'SELECT DISTINCT office_state AS state FROM offices';\n$stateResult = mysql_query($stateQuery);\n\n// Here I return each office's information:\n$officeQuery = 'SELECT office_information, office_state FROM offices';\n$officeResult = mysql_query($officeQuery);\n\n// And here's where I'm stuck:\nwhile ($rows = mysql_fetch_array($stateResult)) {\n\n    // Here is my effort at listing each office within the State:\n    while($rows1 = mysql_fetch_array($officeResult)){\n        if ($rows['state'] == $rows1['office_state']) {\n          echo $rows1['office_information'];\n        }\n    }      \n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套'while'循环需要根据两个查询结果相等来返回信息", ["\n\n", "I am trying to display a set of offices ordered under a header that reflects the state in which the offices are located, like so:", "\n\n", "State\n Office\n Office\n ...\nState\n Office\n ...\n", "\n\n", "I have beat my head against this one for a while. There is a single table 'offices' in the MySQL db which has each office's State listed under 'office_state'. Here's what I've come up with - but nothing is returned.", "\n\n", "// Here I return a list of the distinct States:\n$stateQuery = 'SELECT DISTINCT office_state AS state FROM offices';\n$stateResult = mysql_query($stateQuery);\n\n// Here I return each office's information:\n$officeQuery = 'SELECT office_information, office_state FROM offices';\n$officeResult = mysql_query($officeQuery);\n\n// And here's where I'm stuck:\nwhile ($rows = mysql_fetch_assoc($stateResult)) {\n\n    // This returns the distinct States:\n    echo $rows['state'];\n\n    // Here is my effort at listing each office within the State:\n    $rows1 = mysql_fetch_assoc($officeResult);\n    if ($rows['state'] == $rows1['office_state']) {\n      echo $rows1['office_information'];\n\n    }      \n}\n", "\n\n", "Any help would be much appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;list本身只是一个引用&lt;br /&gt;如果list里的某一项是它自身&amp;#xff0c;本身不会有任何问题&lt;br /&gt;但是千万别对它进行递归&amp;#xff0c;那就造成无穷递归&lt;br /&gt;当然这说的仅仅是就定义层面上它是没问题的&amp;#xff0c;实际使用中&amp;#xff0c;涉及修改、删除某一项&amp;#xff0c;那又很可能产生更多的问题&lt;br /&gt;所以最好从源头上杜绝这种可能性&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["java自身List的循环嵌套会有问题吗？", ["问题遇到的现象和发生背景", "\n", "由于实体类自身设计的原因导致了java自身List的循环嵌套", "\n", "问题相关代码，请勿粘贴截图", "\n", "public ", "class", " SequenceControlUnit extends Observable implements Observer {\n\n    @", "ApiModelProperty(", "\"所属任务id\"", ")", "\n    @", "JSONField(", "serializeUsing", " = ToStringSerializer.", "class", ")", "\n    ", "private", " Long taskId;\n\n    ", "// 需要通过该操作步骤主键去判断操作结果", "\n    @", "ApiModelProperty(", "\"一键顺控操作步骤主键\"", ")", "\n    @", "JSONField(", "serializeUsing", " = ToStringSerializer.", "class", ")", "\n    ", "private", " Long sequenceControlOperateId;\n\n    ", "// 需要通过该操作顺序确定观察者链", "\n    @", "ApiModelProperty(", "\"操作顺序\"", ")", "\n    ", "private", " Integer operateOrder;\n\n    @", "ApiModelProperty(", "\"操作内容\"", ")", "\n    ", "private", " String operateContent;\n\n    @", "ApiModelProperty(", "\"预期目标\"", ")", "\n    ", "private", " String expectedTarget;\n\n    @", "ApiModelProperty(", "\"实际成功结果\"", ")", "\n    ", "private", " String actualSuccessResult;\n\n    @", "ApiModelProperty(", "\"实际失败结果\"", ")", "\n    ", "private", " String actualFailResult;\n\n    @", "ApiModelProperty(", "\"实际结果\"", ")", "\n    ", "private", " String actualResult;\n\n    ", "// 所关联的设备是否在运行", "\n    @", "ApiModelProperty(", "\"量测状态\"", ")", "\n    ", "private", " Integer measurementStatus;\n\n    ", "// 需要通过该结果通知观察者", "\n    @", "ApiModelProperty(", "\"单步结论\"", ")", "\n    ", "private", " String status;\n\n    ", "// 摄像头列表", "\n    @", "ApiModelProperty(", "\"摄像头列表\"", ")", "\n    ", "private", " List<SequenceControlCameraInfo> sequenceControlCameraInfoList;\n\n    ", "// 所在的单元列表", "\n    @", "ApiModelProperty(", "\"单元列表\"", ")", "\n    @", "JSONField(", "serialize", " = ", "false", ")", "\n    ", "private", " List<SequenceControlUnit> unitList;\n}\n\n", "// 2.创建观察者链", "\n        ", "for", " (", "int", " i = ", "0", "; i < unitList.size", "()", "; i++) {\n            SequenceControlUnit ", "unit", " = unitList.get(i);\n            ", "unit", ".set", "TaskId(", "taskId", ")", ";\n            ", "unit", ".set", "SequenceControlCameraInfoList(", "groupByOperateId", ".", "get", "(", "unitList", ".", "get", "(", "i", ")", ".get", "SequenceControlOperateId()", ").stream", "()", ".distinct", "()", ".collect(", "Collectors", ".", "to", "List()", "));\n            ", "unit", ".set", "UnitList(", "unitList", ")", ";\n            ", "if", " (i != unitList.size", "()", " - ", "1", ") {\n                ", "unit", ".add", "Observer(", "unitList", ".", "get", "(", "i", " + 1)", ");\n            }\n        }\n", "\n", "运行结果及报错内容", "\n", "\n", "这样会有问题吗？"]], "Tag": "程序设计"}
{"Answer": "怎么会呢，div是在循环里的呀，&lt;%=render :partial=&gt;\"dish_delect\" ,:locals=&gt;{%&gt;这句你先去掉看看，这句有点问题", "Konwledge_Point": "for循环的嵌套", "Question": ["怎么样用render :partial 实现div的内嵌套循环", ["这个是我的代码，但不能实现在“content”中的div循环管", "\n[code=\"java\"]", "\n\n", "\n  \n    ", "\n        \n        \"dish_delect\" ,:locals=>{%>\n        \n        \n        ", "\n", "\n  \n", "\n\n", "[/code]", "\n有那位高手可以帮我解决下，如何实现嵌套循环，上面的代码中只有第一个循环的在“content”的元素内。急求"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;So I'm a little confused about where the duplicate user is stemming from since I don't know exactly what you're querying but I have ideas what could be causing it. &lt;/p&gt;\n\n&lt;p&gt;First, if the inner loop is the problem, its a simple fix. Only show the 'user_id' on the first looping.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;                $alu=\"\";\n                $firstLoop = true;\n                while($row3 = mysqli_fetch_assoc($res_db2)){\n                        if($firstLoop){\n                             $alu.= '&amp;lt;img src=\"../../'.$row3['user_id'].'/lunch/'.$row3['image'].'\" width=\"100\" height=\"100\"&amp;gt;'\n                             $firstLoop = false;\n                         }\n                       $alu.= '&amp;lt;a href=\"../../'.$row3['user_id'].'/menu_item2.php\"&amp;gt;' .  row3['title'] . '&amp;lt;a&amp;gt;'\n\n                        . '&amp;lt;br/&amp;gt; '.$row3['detail'].'&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;' ;\n                  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Alternatively, it could be happening in the outter loop as Sean suggested. In which case, we can just keep track of the previous user to determine if $userx should be set and $page_owner used.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;     $prevUsr = '';\n     foreach ( $res[\"matches\"] as $doc =&amp;gt; $docinfo ) {\nswitch($docinfo['attrs']['table_id']) {\n   case 1:                         //if search come from index 1\n\n    $res_db = mysqli_query($connect3,'select id_2, image, user_id, title, detail from lunch_menu where id_2 = (('.$doc.'-300000))');\n        if ($res_db === false) {\n                echo \"Error in mysql query #\" . mysqli_errno($connect) . ' - ' . mysqli_error($connect);\n        } else {\n        $row = mysqli_fetch_assoc($res_db);\n                        $connect4=mysqli_connect('localhost', 'root', '','user');\n              $sql2=\"SELECT * FROM `user`.`user_det` WHERE id='\".$row['user_id'].\"' GROUP BY id ORDER\n              BY id DESC\";\n              $query2=mysqli_query($connect4,$sql2);\n              while($row2 = mysqli_fetch_assoc($query2)){\n              $userx=$row2['id'];\n              $image=$row2['img'];\n              $busi_title=$row2['busi_title'];\n\n              $page_owner.=\"\";\n\n              // only set the page owner if the user id is different\n              if($prevUsr != $userx){\n                   $page_owner.=\"&amp;lt;img src='../../account/$userx/$image' width='140'\n                   height='140'&amp;gt;&amp;lt;b&amp;gt;$busi_title&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;\";\n\n                   $prevUsr = $userx;\n              }\n\n                $res_db2 = mysqli_query($connect3,'select id_2, image, user_id, title, detail from\n                lunch_menu where id_2 in ((' . $doc . '-300000)) order by field(id_2,('.$doc.'-300000))');\n                $alu=\"\";\n                while($row3 = mysqli_fetch_assoc($res_db2)){\n                        $alu.=\n\n                        '&amp;lt;img src=\"../../'.$row3['user_id'].'/lunch/'.$row3['image'].'\" width=\"100\" height=\"100\"&amp;gt;'\n                        . '&amp;lt;a href=\"../../'.$row3['user_id'].'/menu_item2.php\"&amp;gt;' . $row3['title'] . '&amp;lt;a&amp;gt;'\n\n                        . '&amp;lt;br/&amp;gt; '.$row3['detail'].'&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;' ;\n                  }\n                $all=\"&amp;lt;div id='' style='border:2px solid black;'&amp;gt;\".$page_owner.\".\".$alu.\"&amp;lt;/div&amp;gt;\";\n                }\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I hope one of these helps you out. &lt;/p&gt;\n\n&lt;p&gt;Happy coding.\nRyan&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["foreach循环中嵌套while循环的结果集结构", ["\n\n", "I'm using Sphinx Search to search item on my website.I'm using foreach to find out the index,where the search is coming from? Foreach loop will iterate through all items that matches search term and will find out the index.", "\n\n", "All items in database have user_id that reference to user from user table.So,what I want to output is show few items(searches for) and put it together under that user.If search for 'Book',then output Like this", "\n\n", "Alex       //Book1,Book2,Book3 all of them has user_id of 2 which refers to Alex\n\nBook1\nBook2\nBook3\n\nJordan     //Book11,Book12,Book18 all of them has user_id of 5 which refers to Joradn\n\nBook11\nBook12\nBook18\n\nand so on.\n", "\n\n", "Here is the code for that", "\n\n", "foreach ( $res[\"matches\"] as $doc => $docinfo ) {\n    switch($docinfo['attrs']['table_id']) {\n       case 1:                         //if search come from index 1\n\n        $res_db = mysqli_query($connect3,'select id_2, image, user_id, title, detail from lunch_menu where id_2 = (('.$doc.'-300000))');\n            if ($res_db === false) {\n                    echo \"Error in mysql query #\" . mysqli_errno($connect) . ' - ' . mysqli_error($connect);\n            } else {\n            $row = mysqli_fetch_assoc($res_db);\n                            $connect4=mysqli_connect('localhost', 'root', '','user');\n                  $sql2=\"SELECT * FROM `user`.`user_det` WHERE id='\".$row['user_id'].\"' GROUP BY id ORDER\n                  BY id DESC\";\n                  $query2=mysqli_query($connect4,$sql2);\n                  while($row2 = mysqli_fetch_assoc($query2)){    //line X\n                  $userx=$row2['id'];\n                  $image=$row2['img'];\n                  $busi_title=$row2['busi_title'];\n\n                  $page_owner.=\"<img src='../../account/$userx/$image' width='140'\n                  height='140'><b>$busi_title</b><hr>\";\n\n                    $res_db2 = mysqli_query($connect3,'select id_2, image, user_id, title, detail from\n                    lunch_menu where id_2 in ((' . $doc . '-300000)) order by field(id_2,('.$doc.'-300000))');\n                    $alu=\"\";\n                    while($row3 = mysqli_fetch_assoc($res_db2)){\n                            $alu.=\n\n                            '<img src=\"../../'.$row3['user_id'].'/lunch/'.$row3['image'].'\" width=\"100\" height=\"100\">'\n                            . '<a href=\"../../'.$row3['user_id'].'/menu_item2.php\">' . $row3['title'] . '<a>'\n\n                            . '<br/> '.$row3['detail'].'<br><br><br><br>' ;\n                      }\n                    $all.=\"<div id='' style='border:2px solid black;'>\".$page_owner.\".\".$alu.\"</div>\";\n                    }\n    } \n", "\n\n", "But above code is giving me result like this", "\n\n", "Alex\nBook1\n\nAlex\nBook2\n\nAlex\nBook3\n\nJordan\nBook11\n\nJordan\nBook12\n\nJordan\nBook18\n\nand so on.\n", "\n\n", "What modification do I need to get my code work like expected.I have tried my best to find a solution,but didn't help.So,just made a SO account to post the question.", "\n\n", "Please help,if you can.That would be a really awesome.", "\n\n", "Thanks in advance", "\n\n", "Thank you Ryan for your reply.We are almost there", "\n\n", "1 more fix,then we are done.Now what I'm getting is", "\n\n", "Problem \nResult is almost the way,I was looking for except for the first one.This is what I'm getting\n\nAlex\nBook1\n\nJordan\nBook11\nBook12\nBook18\n\nAlex\nBook2\nBook3\n", "\n\n", "If I can do a temporary ", "order by user_id", " before echoing out ", "$all", ",this bug might be fixed.", "\n\n", "Because ", "$all", " prints ", "user", " and it's ", "corresponding item", " the way it is sorted out in database", "\n\n", "Please be informed,I'm using the second way,you showed.First one is not working.", "\n\n", "I have figured out Second part of the problem.To achieve that desired result,I needed to do this", "\n\n", "$cl->SetSortMode(SPH_SORT_EXTENDED, '@relevance DESC,user_id ASC');\n", "\n\n", "This line of code output most relevant search results first,and categorize by ", "user_id", " Ascending.", "\n\n", "Special Thanks to Ryan", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你也可以丢弃任意一个或几个用&amp;#34;_&amp;#34;代替&amp;#xff0c;比如&lt;br /&gt;for _, b, c in os.walk(path)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python的一个小疑问", ["python中os.walk()和for循环嵌套时，必须为for配置3个变量吗？", "\n", "for", " ", "a", ", ", "b", ", c ", "in", " os", ".walk", "(path)\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;  const arr &amp;#61;[\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;,\n      title:&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,\n      children:[\n        &lt;span class=\"hljs-built_in\"&gt;{id&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;33&amp;#39;&lt;/span&gt;,\n         title:&lt;span class=\"hljs-string\"&gt;&amp;#39;axx&amp;#39;&lt;/span&gt;,\n         children:[{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;121111&amp;#39;&lt;/span&gt;,title:&lt;span class=\"hljs-string\"&gt;&amp;#39;hh&amp;#39;&lt;/span&gt;},] \n        },\n        &lt;span class=\"hljs-built_in\"&gt;{id&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;34&amp;#39;&lt;/span&gt;,title:&lt;span class=\"hljs-string\"&gt;&amp;#39;xxddf&amp;#39;&lt;/span&gt;,}\n      ]\n    },\n    {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;,title:&lt;span class=\"hljs-string\"&gt;&amp;#39;bxx&amp;#39;&lt;/span&gt;}\n     //  略...\n]\n// 找出&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;为 &lt;span class=\"hljs-number\"&gt;121111&lt;/span&gt; 对象的路径, 返回一个数组: [第一层的 title,第三层的title ,第n层的 title ,自已的 title]\n \n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; pathCompute(arr,&lt;span class=\"hljs-built_in\"&gt; key&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt; &amp;#61; []){\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, len &amp;#61; arr.length; i &amp;lt; len; i&amp;#43;&amp;#43;){\n       &lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt;.push(arr[i].title);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( arr[i]&lt;span class=\"hljs-built_in\"&gt;.id&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt; key&lt;/span&gt;){\n            console.log(&lt;span class=\"hljs-string\"&gt;&amp;#39;找到了&amp;#39;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(arr[i].children &amp;amp;&amp;amp; arr[i].children.length &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(pathCompute(arr[i].children,&lt;span class=\"hljs-built_in\"&gt; key&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt;)!&lt;span class=\"hljs-built_in\"&gt;&amp;#61;false&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt;;\n          }\n       &lt;span class=\"hljs-built_in\"&gt; path&lt;/span&gt;.pop();\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt; false&lt;/span&gt;;\n}\nconsole.log(pathCompute(arr, &lt;span class=\"hljs-string\"&gt;&amp;#39;121111&amp;#39;&lt;/span&gt;)); \n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["js 数组中多层嵌套对象，怎么递归取得，某id 对象的路径", ["数组中多层嵌套对象，怎么递归取得，某id 对象的路径", "\n", "  ", "const", " arr =[\n    { ", "id", ":", "'1'", ",\n      title:", "'a'", ",\n      children:[\n        {", "id", ":", "'33'", ",\n         title:", "'axx'", ",\n         children:[{ ", "id", ":", "'121111'", ",title:", "'hh'", "},] \n        },\n        {", "id", ":", "'34'", ",title:", "'xxddf'", ",}\n      ]\n    },\n    { ", "id", ":", "'2'", ",title:", "'bxx'", "}\n     ", "//  略...", "\n  ]\n ", "// 找出 id为 121111 对象的路径, 返回一个数组: [第一层的 title,第三层的title ,第n层的 title ,自已的 title]", "\n", "\n", "下面这样写不行，只能找到自已这层，没有父级路径", "\n", "\n  ", "function", " pathCompute(arr,", " key", ",", " path", " = []){\n    ", "for", "( ", "let", " i = ", "0", ", len = arr.length; i < len; i++){\n     ", " path", ".push(arr[i].title)\n      ", "if", "( arr[i]", ".key", " ===", " key", "){\n         console.log(", "'找到了'", ",", " path", ")\n         ", "return", " path", "\n      } ", "else", " ", "if", "(arr[i].children && arr[i].children.length >= ", "1", "){\n        pathCompute(arr[i].children,", " key", ",", " path", ")\n      } ", "else", " {\n       ", " path", " = [] // 没找到就清空数组，下循环重新写路径，但这样写不行\n      }\n    }\n  }\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It seems that you might always be appending to &lt;code&gt;$renderProductMenuItemLv2&lt;/code&gt; when you actually need to reset the string with every iteration of the outer loop. Maybe all you need is a &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$renderProductMenuItemLv2 = '';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;above the line &lt;code&gt;if($result2 = $mysqli-&amp;gt;query(\"SELECT * FROM page ...&lt;/code&gt; ?&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["循环嵌套菜单", ["\n\n", "I have a table for a menu like below (see the HTML section):", "\n\n", "http://jsfiddle.net/6YZzb/", "\n\n", "I want to convert the data to a looping nested menu. I want it to be like:", "\n\n", "http://jsfiddle.net/aRSsZ/", "\n\n", "This outputs it as HTML:", "\n\n", "<ul>\n    <?php echo $renderProductMenuItemLv1; ?>\n</ul>​\n", "\n\n", "and the relevant PHP code:", "\n\n", "if($result = $mysqli->query(\"SELECT * FROM myTable WHERE type='Business_Line_Product_Level_1' AND parent='37' ORDER BY order_id ASC\"))\n{\n    while($row = $result->fetch_array())\n    {\n        $productLv1Title = $row[\"title\"];\n        $productLv1Body = $row[\"body\"];\n        $productLv1OriId = $row[\"id\"];\n\n        if($result2 = $mysqli->query(\"SELECT * FROM page WHERE type='Business_Line_Product_Level_2' AND parent='$productLv1OriId' ORDER BY order_id ASC\"))\n        {\n            while($row = $result2->fetch_array())\n            {        \n                $productLv2Title = $row[\"title\"];\n                $productLv2Body = $row[\"body\"];\n                $productLv2OriId = $row[\"id\"];\n\n                $renderProductMenuItemLv2 .= '\n                <li>\n                    <a href=\"businessLineProductLv2.php?p='. $productLv2Id .'\">\n                        '. $productLv2Title .'\n                    </a>\n                </li>\n                ';\n            } // eof while row\n        } // eof if result\n\n        $renderProductMenuItemLv1 .= '\n        <li>\n            <a href=\"businessLineProductLv1.php?p='. $productLv1Id .'\">\n                '. $productLv1Title .'\n            </a>\n            <ul>\n                '. $renderProductMenuItemLv2 .'\n            </ul>\n        </li>\n        ';\n    } // eof while row\n} // eof if result\n$result->free_result();\n", "\n\n", "​\nBut the result is I get additional sub menu items on every menu item. ", "\n\n", "How can I fix my code?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你前面好像也没声明过变量i&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["循环嵌套，内层找不到变量", ["for (int x = 0; x < 3; x++) {", "    System.out.println(\"请输入QQ账号\");", "    String line = sc.nextLine();", "    if (line.equals(账号)) {", "        for (int a = 0; a < 3; a++)", "            System.out.println(\"请输入QQ密码\");", "        String line1 = sc.nextLine();", "        if (line1.equals(密码)) {", "            System.out.println(\"登录成功\");//满足条件如何跳出全部循环", "            break;", "        } else if (i == 2) {//此处找不到变量i", "            System.out.println(\"3次密码错误,你的账号已经封禁\");", "            break;", "        } else {", "            System.out.println(\"密码错误你还有\" + (2 - i) + \"次机会\");//此处找不到变量i", "            break;", "        }", "    } else if (x == 2) {", "        System.out.println(\"3次错误,你的账号已经封禁\");", "    } else {", "        System.out.println(\"账号错误你还有\" + (2 - x) + \"次机会\");", "    }", "}", "\n", "\n", "- \n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没办法&amp;#xff0c;continue和break只能退出当前所在循环&amp;#xff0c;不能退出外层循环。如果能退出外层循环&amp;#xff0c;那么有些场景就说不清楚了。比如你嵌套三层循环&amp;#xff0c;最里层写个continue&amp;#xff0c;编译器也搞不清你到底要退出哪一层啊&lt;br /&gt;你可以在外层设定一个标志量&amp;#xff0c;通过标志量来通知各个循环层是否要break&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["[c语言]如何在嵌套语句中，内层循环里的continue直接跳到指定外层循环", ["dev C++运行环境，C语言", "如何在for嵌套语句中，内层循环里的continue可以直接跳到指定外层循环呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This code based off an example here should do it for you; &lt;a href=\"http://blog.golang.org/laws-of-reflection\" rel=\"nofollow\"&gt;http://blog.golang.org/laws-of-reflection&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import \"reflect\"\n\n\nfor _, value := range jsonParser.Data {\n            s := reflect.ValueOf(&amp;amp;value).Elem()\n            typeOfT := s.Type()\n            for i := 0; i &amp;lt; s.NumField(); i++ {\n            f := s.Field(i)\n            fmt.Print(\"key: \", typeOfT.Field(i).Name, \"\n\")\n            fmt.Print(\"value: \", f.Interface(), \"\n\")\n       }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that in your original code the loop is iterating items in the slice called &lt;code&gt;Data&lt;/code&gt;. Each of those things an object of that anonymous struct type. You're not dealing with the fields at that point, from there, you can leverage the &lt;code&gt;reflect&lt;/code&gt; package to print the names and values of fields in the struct. You can't just &lt;code&gt;range&lt;/code&gt; over a struct natively, the operation isn't defined.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在Go中嵌套[] struct循环？", ["\n\n", "I have a structure I'm working with, and I'm not sure how to loop through it properly. I would like to access the field names, but all it is doing is just incrementally counting at each loop.", "\n\n", "Here is my structure:", "\n\n", "type ImgurJson struct {\n      Status int16 `json:\"status\"`\n      Success bool `json:\"success\"`\n      Data []struct {\n            Width int16 `json:\"width\"`\n            Points int32 `json:\"points\"`\n            CommentCount int32 `json:\"comment_count\"`\n            TopicId int32 `json:\"topic_id\"`\n            AccountId int32 `json:\"account_id\"`\n            Ups int32 `json:\"ups\"`\n            Downs int32 `json:\"downs\"`\n            Bandwidth int64 `json:\"bandwidth\"`\n            Datetime int64 `json:\"datetime\"`\n            Score int64 `json:\"score\"`\n            Account_Url string `json:\"account_url\"`\n            Topic string `json:\"topic\"`\n            Link string `json:\"link\"`\n            Id string `json:\"id\"`\n            Description string`json:\"description\"`\n            CommentPreview string `json:\"comment_preview\"`\n            Vote string `json:\"vote\"`\n            Title string `json:\"title\"`\n            Section string `json:\"section\"`\n            Favorite bool `json:\"favorite\"`\n            Is_Album bool `json:\"is_album\"`\n            Nsfw bool `json:\"nsfw\"`\n             } `json:\"data\"`\n}\n", "\n\n", "Here is my function:", "\n\n", "func parseJson(file string) {\n      jsonFile, err := ioutil.ReadFile(file)\n      if err != nil {\n            ...\n            }\n      jsonParser := ImgurJson{}\n      err = json.Unmarshal(jsonFile, &jsonParser)\n      for field, value := range jsonParser.Data {\n            fmt.Print(\"key: \", field, \"\n\")\n            fmt.Print(\"value: \", value, \"\n\")\n      }\n}\n", "\n\n", "How do I loop through a nested, []struct in Go and return the fields? I've seen several posts about reflection, but I don't understand if that would assist me or not. I can return the values of each field, but I don't understand how to map the field name to the key value.", "\n\n", "Edit:", "\n\n", "Renamed \"keys\" to \"field\", sorry! Didn't realise they were called fields.", "\n\n", "I would like to be able to print:", "\n\n", "field: Width\nvalue: 1234\n", "\n\n", "I would like to learn how to do this so I can later call a specific field by name so I can map it to a SQL column name.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Collections;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.HashSet;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Solution {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt;  static &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] firstHelper(){\n        &lt;span class=\"hljs-comment\"&gt;/*\n           a &amp;#43; b - 9 &amp;#61;&amp;#61; 4 ||\n            a &amp;#43; c / f &amp;#61;&amp;#61; 4||\n            b - d * g &amp;#61;&amp;#61; 4||\n            c - d * e &amp;#61;&amp;#61; 4||\n            9 - e - h &amp;#61;&amp;#61; 4||\n            f &amp;#43; g - h &amp;#61;&amp;#61; 4||\n         */&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; []answer;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;a&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;b&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;b&amp;#43;&amp;#43;){\n\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a &amp;#43; b - &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;//第一行\n\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;c&amp;#43;&amp;#43;){\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;d&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;d&amp;#43;&amp;#43;){\n\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;e&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;e&amp;#43;&amp;#43;){\n\n                            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( c - d * e !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;//第二行\n\n                            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;f&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;f&amp;#43;&amp;#43;){//f不能为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n                                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a &amp;#43; c / f !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;// 第一列\n\n                                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; g&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;g&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;g&amp;#43;&amp;#43;){\n\n                                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( b - d * g !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;//第二列\n\n                                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; h &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;h&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;h&amp;#43;&amp;#43;){\n                                         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; - e - h &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;amp;&amp;amp; f &amp;#43; g - h &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) {// 第三列、第三行\n                                             answer &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[]{a, b, c, d, e, f, g, h};\n                                             &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; answer;\n                                         }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt;  static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; firstQuestion(){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] answer &amp;#61; Solution.firstHelper();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (answer.length &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(answer[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; &amp;#34; &amp;#34; &amp;#43; answer[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(answer[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;#43; &amp;#34; &amp;#34; &amp;#43; answer[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#43; &amp;#34; &amp;#34; &amp;#43; answer[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]);\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(answer[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;] &amp;#43; &amp;#34; &amp;#34; &amp;#43; answer[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;] &amp;#43; &amp;#34; &amp;#34; &amp;#43; answer[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;]);\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; hasRepeat(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] args){\n        &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; tempSet &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashSet();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n:args){\n            tempSet.&lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(n);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(args.length &amp;#61;&amp;#61; tempSet.size()){\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;false&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;/*\n        |a-b|&amp;gt;1\n        b &amp;lt; d\n        c % 2 &amp;#61;&amp;#61; 0\n        a - e &amp;#61;&amp;#61; 3\n        c &amp;#61; 2 / 4\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt;  static &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] secondHelper(){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] answer;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; a&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;b&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;b&amp;#43;&amp;#43;) {//|a-b|&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (Math.abs(a - b) &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; c &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; c &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {//c%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; b &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; d &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; d&amp;#43;&amp;#43;) {//d&amp;gt;b\n                            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (d &amp;gt; b) {\n                                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; e &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;; e&amp;#43;&amp;#43;) {\n                                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a - e &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n                                        answer &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[]{a, b, c, d, e};\n                                        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!hasRepeat(answer))\n                                            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; answer;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt;  static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; secondQuestion(){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] answer &amp;#61; Solution.secondHelper();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (answer.length &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n           &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n:answer){\n               &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(n&amp;#43;&amp;#34; &amp;#34;);\n           }\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[]args){\n        Solution.firstQuestion();\n        Solution.secondQuestion();\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/066211712436189.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["两道简单的java题目，eclipse", ["两道题目，第一题使用for循环嵌套，可以的话将代码和运行结果一起截图，并给一下可复制的代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i &amp;#61; 0&lt;br /&gt;d &amp;#61; 1&lt;br /&gt;For t&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    For 7&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call rw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        i &amp;#61; i &amp;#43; 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        d &amp;#61; d &amp;#43; 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Next&lt;/span&gt;&lt;br /&gt;Next&lt;/p&gt;\n&lt;p&gt;Sub rw&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Select Case i&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 0&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a2&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b2&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 2&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a3&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b3&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 3&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a4&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b4&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 4&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a5&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b5&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 5&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a6&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b6&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case 6&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call xjrw&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call a7&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call b7&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Call qysz&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        MoveTo 842, 652&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Delay 100&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        LeftClick 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Case Else&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        //否则&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    End Select&lt;/span&gt;&lt;br /&gt;End Sub&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["按键精灵 能不能实现若干个Sub 子程序的循环调用？(语言-按键精灵)", ["问题遇到的现象和发生背景", "\n", "定义了若干个sub子程序a1至a6，在一个for循环中需要依次执行子程序a1至a6", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "运行正常，想进一步优化、简短一下代码", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "在for循环中，在嵌套一个循环，以实现缩减代码", "原代码类似与如下：", "for 6", "call a1", "call a2", "call a3", "call a4", "call a5", "call a6", "i++", "next", "优化后希望得到如下代码并能正常运行：", "for 6", "  for 6", "   call aj", "    j++", " next", "i++", "next", "相关代码截图：", "for循环内部分代码：", "\n", "子程序a1代码,其他类似"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你要改的是for 改成 while而不是把if改成while&amp;#xff0c;for 、 while是循环语句&amp;#xff0c;if是比较判断分支的语句&amp;#xff0c;属于两种类型&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/815035619766148.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["for循环中while的嵌套", ["\n", "第一张图片是正确的程序，请问为什么把if改成while就不可以了啊？求指教"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_dict&lt;/span&gt; &amp;#61; {}\n\nall_guests &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;Alice&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;apples&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;pretzels&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;12&lt;/span&gt;},\n              &lt;span class=\"hljs-string\"&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;applse&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;han sandwiches&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;3&lt;/span&gt;},\n              &lt;span class=\"hljs-string\"&gt;&amp;#39;Carol&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;cups&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;apples pie&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;1&lt;/span&gt;}}\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; item &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; all_guests.values():&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k,v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; item.items():&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n        &lt;span class=\"hljs-meta\"&gt;#判断k在不在新的字典里面&amp;#xff0c;如果在&amp;#xff0c;就把现在的值和里面的值相加&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; k &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_dict&lt;/span&gt;.keys():&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n            v &amp;#43;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_dict&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(k)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-meta\"&gt;# 如果不在就直接赋值&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_dict&lt;/span&gt;[k] &amp;#61; v\n\n\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#39;带的东西数量:&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; name,num &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_dict&lt;/span&gt;.items():&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n    print(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{name}----:{num}&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python，字典嵌套循环遍历合并问题", ["python;字典嵌套：像循环字典内字典的值，并根据内部字典相同的key，把values相加；可能说的有点模糊 ，直接上代码和图：", "这是代码：", "\n", "all_guests = {", "'Alice'", ": {", "'apples'", ": 5, ", "'pretzels'", ": 12},\n              ", "'Bob'", ": {", "'applse'", ": 2, ", "'han sandwiches'", ": 3},\n              ", "'Carol'", ": {", "'cups'", ": 3, ", "'apples pie'", ": 1}}\n\n\ndef total_brought(guests,item):\n    num_brought = 0\n    ", "for", " k, v ", "in", " guests.items():\n        num_brought = num_brought + v.", "get", "(item,0)\n    return num_brought\n", "print", "(", "'带的东西数量:'", ")\n\n", "for", " k, v ", "in", " all_guests.items():\n    # ", "print", "(k)\n    # ", "print", "(v)\n    ", "for", " k1, v1 ", "in", " v.items():\n        ", "print", "(k1 + ", "'----:'", " + str(total_brought(all_guests, k1)))\n\n", "\n", "图片;", "\n", "\n", "我希望结果是apples可以相互合并：aplles的数量为7，而不是打印两个apples", "谢谢大家！！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You should clear the &lt;code&gt;$mKeys&lt;/code&gt; array on each iteration:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// ...\nwhile( (true == ($groups = mysql_fetch_assoc($allGroups))) &amp;amp;&amp;amp; ($i &amp;lt; 3) ) {\n    $mKeys = array();\n    $gid = $groups['ThisID'];\n    // ...\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套WHILE循环的问题", ["\n\n", "I've having trouble with nested while loops.  I've created this function to list three groups and WITHIN each group I want another loop to list up to four members of that group:", "\n\n", "function getBlockCode_MainBody() {\n    global $oSysTemplate;\n    $allGroups = db_res(\"SELECT g.*, g.id AS ThisID, COUNT(m.id_profile) AS members FROM bx_groups_main AS g LEFT JOIN bx_groups_fans AS m ON g.id = m.id_entry GROUP BY g.id HAVING members >= 1 ORDER BY RAND() LIMIT 3\");\n    $i = 0;\n    while( (true == ($groups = mysql_fetch_assoc($allGroups))) && ($i < 3) ) {\n       $gid = $groups['ThisID'];\n       $members = db_res(\"SELECT * FROM bx_groups_fans WHERE id_entry = {$gid}\");\n       while( $member = mysql_fetch_assoc($members) ) {\n          $gid = $member['id_profile'];\n          $mKeys[] = array(\n             'thumbnail' => $gid,\n          );\n       }\n       $gKeys[] = array(\n          'title' => $groups['title'],\n          'gid'   => $groups['id'],\n          'bx_repeat:members' => $mKeys,\n       );\n       $i++;\n    }\n    $aTemplateKeys = array(\n      'bx_repeat:groups'  => $gKeys,\n    );\n    return $oSysTemplate -> parseHtmlByName('groups_main.html', $aTemplateKeys);\n}\n", "\n\n", "It's listing the first loop fine (three groups are shown) but inside each group the nested loop isn't working.  I've used the member's ID for example content.  If there's only one user in each group, and say their member ID is 1, it outputs:", "\n\n", "GROUP 1 - 1 \nGROUP 2 - 1 1 \nGROUP 3 - 1 1 1\n", "\n\n", "So, for some reason, the nested loop keeps on running more than it should do.  Can anyone help?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Why not make this simpler by using the function &lt;code&gt;array_combine&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.php.net/manual/en/function.array-combine.php\" rel=\"nofollow\"&gt;http://www.php.net/manual/en/function.array-combine.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Example;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$newArray = array_combine($foreacharray[0], $foreacharray[1]);\nvar_dump($newArray);\n// will output\narray (\n     \"samsung\" =&amp;gt; 3,\n     \"sony\" =&amp;gt; 7,\n     \"philips\" =&amp;gt; 5,\n     \"acer\" =&amp;gt; 1, \n     \"hp\" =&amp;gt; 8,\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can easily get all values or display them like so...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($newArray as $key =&amp;gt; $val) {\n    echo $key . ' has a quantity of ' . $val . '.';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope this makes it easier.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套的foreach循环", ["\n\n", "I have an array that looks like this", "\n\n", "$foreacharray = array(\n    \"model\" => array (\"samsung\", \"sony\", \"philips\", \"acer\", \"hp\"),\n    \"qty\" => array(\"3\", \"7\", \"5\", \"1\", \"8\"),\n);\n", "\n\n", "What I'm trying to do is foreach model, draw the logo for  the amount of its qty so Samsung = 3, Sony = 7 and so on will draw 3 Sony logos and 7 Samsung logos.", "\n\n", "I came up with something like this", "\n\n", "foreach ($foreacharray[\"model\"] as $model)\n{\n    foreach($foreacharray[\"qty\"] as $qty)\n    {\n        echo $model;\n        echo '<br>';\n    }\n}\n", "\n\n", "But of course all that does is for each of the array entries, echo out the name so I end up with 5 samsungs being printed 5 sonys being printed etc.", "\n\n", "How can I make this use the value of the qty array rather than the number of entries?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you don't want to use nested loop, one solution is using recursive call and reflection to inject the attributes/properties into a struct. In the following implementation, attributes/properties to be injected is wrapped in a struct implement &lt;code&gt;Injectable&lt;/code&gt; interface. Working example can be found at &lt;a href=\"https://play.golang.org/p/b7_ZSqmrE4\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;. &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Define the interface.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Injectable interface {\n    InjectTo(v interface{})\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Define data structure that holds properties/attributes to be injected, e.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Property struct {\n    AID int\n    BID int\n}\n\ntype C struct {\n    // The properties will be injected here\n    Property\n    CID int\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Implement &lt;code&gt;InjectTo&lt;/code&gt; using reflection and recursive call.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//Method must be pointer receiver since p will be used \n//as temporary placeholder for parent properties/attributes.\nfunc (p *Property) injectRecursive(v reflect.Value, it reflect.Type, pv reflect.Value) {\n    switch v.Kind() {\n    case reflect.Struct:\n        vt := v.Type()\n        //Embedded struct is a 'value' type implement Injectable\n        if vt.Implements(it) {\n            //Inject value to embedded struct\n            ot := pv.Type()\n            for k := 0; k &amp;lt; pv.NumField(); k++ {\n                name := ot.Field(k).Name\n                f := v.FieldByName(name)\n                if f.CanSet() {\n                    f.Set(pv.Field(k))\n                }\n            }\n        } else {\n            for k := 0; k &amp;lt; v.NumField(); k++ {\n                fv := v.Field(k)\n\n                //Match by field name.\n                //For more robust and generic solution\n                //consider using other approach, e.g. tag\n                f := pv.FieldByName(vt.Field(k).Name)\n                if f.CanSet() {\n                    f.Set(fv)\n                } else {\n                    p.injectRecursive(fv, it, pv)\n                }\n            }\n        }\n    case reflect.Slice, reflect.Array:\n        for k := 0; k &amp;lt; v.Len(); k++ {\n            p.injectRecursive(v.Index(k), it, pv)\n        }\n    case reflect.Ptr:\n        if v.IsValid() {\n            p.injectRecursive(v.Elem(), it, pv)\n        }\n    }\n}\n\n//InjectTo must be Value (not pointer) receiver\nfunc (p Property) InjectTo(s interface{}) {\n    sv := reflect.Indirect(reflect.ValueOf(s))\n    pv := reflect.Indirect(reflect.ValueOf(&amp;amp;p))\n    it := reflect.TypeOf((*Injectable)(nil)).Elem()\n    p.injectRecursive(sv, it, pv)\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You can inject the properties by:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;res := Input{...}\nprop := Property{}\nprop.InjectTo(&amp;amp;res)\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何将嵌套结构成型为没有嵌套循环的另一个结构？", ["\n\n", "How can I inject A and B's selected values into children C below?", "\n\n", "decoder.go", " ", "(", "Playground link", ")", "\n\n", "package main\n\nimport (\n    \"fmt\"\n)\n\ntype Input struct {\n    A []A\n}\n\ntype A struct {\n    AID int\n    B []B\n}\n\ntype B struct {\n    BID int\n    C []C\n}\n\ntype C struct {\n    // I want to inject only AID and BID here\n    // But, without injecting A and B directly\n    //   (without recursively)\n    CID int\n}\n\nfunc main() {\n    res := Input{\n        A: []A {\n            A {\n                AID: 1,\n                B: []B {\n                    B{ BID: 11, C: []C{{ 111 }, { 111 }}},\n                    B{ BID: 12, C: []C{{ 121 }, { 122 }}},\n                },\n            },\n            A {\n                AID: 2,\n                B: []B {\n                    B{ BID: 21, C: []C{{ 211 }, { 211 }}},\n                    B{ BID: 22, C: []C{{ 221 }, { 222 }}},\n                },\n            },\n        },\n    }\n\n    // I want to inject AID and BID into C\n    // WITHOUT nested loops like this:\n    for _, a := range res.A {\n        for _, b := range a.B {\n            for _, c := range b.C {\n                fmt.Println(a.AID, b.BID, c.CID)\n            }\n        }\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;u&gt;&lt;strong&gt;可以先弄个数组&amp;#xff0c;循环赋值&amp;#xff0c;然后把输入的值作为索引&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言 while循环练习题 求教怎么写", ["题目要求在命令行输入输入一个数字，然后以另一种方式打印出来 ", "\n\n", "1，2，3，four，four-1，four-2，four-3，four-four，four-four-1，four-four-2，four-four-3，four-four-four，…以此类推来表达数字（每逢4就换成four）", "\n\n", "比如输入8 给出的是four-four 输入13 给出four-four-four-1", "\n\n", "之前试过for循环嵌套 但是总是\"-\"这里出问题，希望有大神可以指点一下"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;after doing some google search, i found that i can do this way&lt;/p&gt;\n\n&lt;p&gt;In the tpl(ex - mail.tpl)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{ php }\n//all php code here, in my case its the mailer\n{ /php }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and in the form action, just give \"mail.tpl\" .&lt;/p&gt;\n\n&lt;p&gt;fyi, i designed this contact with ajax way to just do the submission in the same page without navigating.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Smarty模板问题", ["\n\n", "i am new to smarty template and i am trying to do this.\nI have a html form in the tpl file and in that form action is for a php email function email.php. I am not able to get it to work. if i have the complete code(html form + php email code) and save as a php file, it works fine. ", "\n\n", "is there any way to call the php code from email.php inside that tpl file? i am completely new and i am just making some changes on the site.", "\n\n", "regards", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The outer range iterates over a map with the keys &lt;code&gt;result&lt;/code&gt; and &lt;code&gt;success&lt;/code&gt;. The inner range attempts to iterate over the values for these keys. The value for &lt;code&gt;success&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.  It's not possible to range on a bool. &lt;/p&gt;\n\n&lt;p&gt;Change the template range over &lt;code&gt;result&lt;/code&gt; only:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{{define \"index\"}}\n        {{range .Items.result}}\n            {{.Title}}\n        {{end}}\n{{end}}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, modify the code to check and handle the error returned from &lt;code&gt;ExecuteTemplate&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["正确显示所有内容时，范围不能迭代true？", ["\n\n", "I'm having a weird issue with Go templates. For some reason when I use double ", "range", " it stops rendering everything below it in the code.", "\n\n", "// Index.html\n{{define \"index\"}}\n    {{range $k, $element := .Items}}\n        {{range $element}}\n            {{.Title}}\n        {{end}}\n    {{end}}\n{{end}}\n", "\n\n", "This is my Go code:", "\n\n", "data := IndexData{\n    Items: items,\n}\n\nIndexTemplate := template.Must(template.New(\"skeleton.html\").Funcs(FuncTemplate).ParseFiles(\"skeleton.html\", \"index.html\"))\nIndexTemplate.ExecuteTemplate(w, \"skeleton\", data)\n", "\n\n", "It does show the data correctly on my page and there are no errors. The only problem here is that it stops the rendering of the page after the last item is displayed.", "\n\n", "In my skeleton I display my templates like this, depending on what page they're visiting:", "\n\n", "// Skeleton.html\n{{define \"skeleton\"}}\n    {{block \"index\".}}{{end}}\n    {{block \"account.register\".}}{{end}}\n    {{block \"account.login\".}}{{end}}\n    {{block \"account.profile\".}}{{end}}\n{{end}}\n", "\n\n", "Why does it stop rendering after the last item is displayed from the range?", "\n\n", "EDIT:", "\n\n", "Only error displayed is ", "executing \"index\" at <$element>: range can't iterate over true", "\n\n", "EDIT 2:", "\n\n", ".Item", " is a ", "map[string]interface{}", " that contains the following:", "\n\n", "map[result:[map[Title:Hello World2 Content:Lorem ipsum dolor sit amet2...] map[Title:Hello World Content:Lorem ipsum dolor sit amet...]] success:true]\n", "\n\n", "Solution", "\n\n", "I managed to solve this by properly returning the data I need to use without the ", "success:true", " part as well as using it as ", "interface{}", " so I don't have to use 2 range loops.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are getting two copies because of this line&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$JSONStringArray .= substr($JSONStringArray, 0, -1) . ']';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You do the &lt;code&gt;.=&lt;/code&gt; which is doing the substr, and adding it to the original, you should just do an &lt;code&gt;=&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;ie, should just be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$JSONStringArray = substr($JSONStringArray, 0, -1) . ']';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As a side note, there's no need to build a JSON string, PHP has a built in method to generate the json string.  Instead you can do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$data = array();\nwhile($row = $result-&amp;gt;fetch_row())\n{\n    $data += $row; // append returned array to the data array, since you wanted it future proof incase you added more columns to the SELECT query\n}\n// close connection\nreturn json_encode($data);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["php中mysql的双输出", ["\n\n", "I am selecting the tables names from an opencart install.\ntrying to output the result(single column) as a string formated like a JSON array.\nhere is the code:", "\n\n", "<?php\nfunction getTableNames()\n    {\n    //Change these variables depending on the server it will be used on\n    $server = 'localhost';\n    $user = 'User1';\n    $pass = 'pass';\n    $DBName = 'OpenCartTest';\n\n    //returns a single column of all tables in a mysql database named \"OpenCartTest\"\n    $tablesGetSQL = 'Select `table_name` from  `information_schema`.`TABLES` where `table_schema` like \"OpenCartTest\" AND `table_name LIKE \"oc_customer%\"';\n    $conn = new mysqli($server, $user, $pass, $DBName);\n    $JSONStringArray = '[';\n    if(mysqli_connect_errno())\n    {\n        echo '---unauthorized---';\n    }\n    else\n    {\n        $result = $conn->query($tablesGetSQL);\n        $l = $result->num_rows;\n        if($l > 0)\n        {\n            //for($i = 0;$i < $l;$i++)\n            while($row = $result->fetch_assoc())\n            {\n                //$row = $result->fetch_assoc();\n                foreach($row as $item)\n                {\n                    //echo $item . \"|\";\n                    $JSONStringArray .= \"'\" . $item . \"',\";\n                }\n            }\n        }\n        $JSONStringArray .= substr($JSONStringArray, 0, -1) . ']';\n        $conn->close();\n        return $JSONStringArray;\n    }\n}\n$output = getTableNames();\necho substr_count($output, \"[\") . '<br>';\necho $output;\n?>\n", "\n\n", "The output is doubled for some reason, there are 2 '[', yet I only set it once to the string. There is also no closing ']' on the first line.", "\n\n", "output:", "\n\n", "2\n['oc_address','oc_affiliate','oc_affiliate_activity','oc_affiliate_login','oc_affiliate_transaction','oc_api','oc_attribute','oc_attribute_description','oc_attribute_group','oc_attribute_group_description','oc_banner','oc_banner_image','oc_banner_image_description','oc_category','oc_category_description','oc_category_filter','oc_category_path','oc_category_to_layout','oc_category_to_store','oc_country','oc_coupon','oc_coupon_category','oc_coupon_history','oc_coupon_product','oc_currency','oc_custom_field','oc_custom_field_customer_group','oc_custom_field_description','oc_custom_field_value','oc_custom_field_value_description','oc_customer','oc_customer_activity','oc_customer_ban_ip','oc_customer_group','oc_customer_group_description','oc_customer_history','oc_customer_ip','oc_customer_login','oc_customer_online','oc_customer_reward','oc_customer_transaction','oc_download','oc_download_description','oc_event','oc_extension','oc_filter','oc_filter_description','oc_filter_group','oc_filter_group_description','oc_geo_zone','oc_information','oc_information_description','oc_information_to_layout','oc_information_to_store','oc_language','oc_layout','oc_layout_module','oc_layout_route','oc_length_class','oc_length_class_description','oc_location','oc_manufacturer','oc_manufacturer_to_store','oc_marketing','oc_modification','oc_module','oc_option','oc_option_description','oc_option_value','oc_option_value_description','oc_order','oc_order_custom_field','oc_order_fraud','oc_order_history','oc_order_option','oc_order_product','oc_order_recurring','oc_order_recurring_transaction','oc_order_status','oc_order_total','oc_order_voucher','oc_osapi_last_modified','oc_product','oc_product_attribute','oc_product_description','oc_product_discount','oc_product_filter','oc_product_image','oc_product_option','oc_product_option_value','oc_product_recurring','oc_product_related','oc_product_reward','oc_product_special','oc_product_to_category','oc_product_to_download','oc_product_to_layout','oc_product_to_store','oc_recurring','oc_recurring_description','oc_return','oc_return_action','oc_return_history','oc_return_reason','oc_return_status','oc_review','oc_setting','oc_stock_status','oc_store','oc_tax_class','oc_tax_rate','oc_tax_rate_to_customer_group','oc_tax_rule','oc_tg_tglite_revolution_slider','oc_upload','oc_url_alias','oc_user','oc_user_group','oc_voucher','oc_voucher_history','oc_voucher_theme','oc_voucher_theme_description','oc_weight_class','oc_weight_class_description','oc_zone','oc_zone_to_geo_zone',\n['oc_address','oc_affiliate','oc_affiliate_activity','oc_affiliate_login','oc_affiliate_transaction','oc_api','oc_attribute','oc_attribute_description','oc_attribute_group','oc_attribute_group_description','oc_banner','oc_banner_image','oc_banner_image_description','oc_category','oc_category_description','oc_category_filter','oc_category_path','oc_category_to_layout','oc_category_to_store','oc_country','oc_coupon','oc_coupon_category','oc_coupon_history','oc_coupon_product','oc_currency','oc_custom_field','oc_custom_field_customer_group','oc_custom_field_description','oc_custom_field_value','oc_custom_field_value_description','oc_customer','oc_customer_activity','oc_customer_ban_ip','oc_customer_group','oc_customer_group_description','oc_customer_history','oc_customer_ip','oc_customer_login','oc_customer_online','oc_customer_reward','oc_customer_transaction','oc_download','oc_download_description','oc_event','oc_extension','oc_filter','oc_filter_description','oc_filter_group','oc_filter_group_description','oc_geo_zone','oc_information','oc_information_description','oc_information_to_layout','oc_information_to_store','oc_language','oc_layout','oc_layout_module','oc_layout_route','oc_length_class','oc_length_class_description','oc_location','oc_manufacturer','oc_manufacturer_to_store','oc_marketing','oc_modification','oc_module','oc_option','oc_option_description','oc_option_value','oc_option_value_description','oc_order','oc_order_custom_field','oc_order_fraud','oc_order_history','oc_order_option','oc_order_product','oc_order_recurring','oc_order_recurring_transaction','oc_order_status','oc_order_total','oc_order_voucher','oc_osapi_last_modified','oc_product','oc_product_attribute','oc_product_description','oc_product_discount','oc_product_filter','oc_product_image','oc_product_option','oc_product_option_value','oc_product_recurring','oc_product_related','oc_product_reward','oc_product_special','oc_product_to_category','oc_product_to_download','oc_product_to_layout','oc_product_to_store','oc_recurring','oc_recurring_description','oc_return','oc_return_action','oc_return_history','oc_return_reason','oc_return_status','oc_review','oc_setting','oc_stock_status','oc_store','oc_tax_class','oc_tax_rate','oc_tax_rate_to_customer_group','oc_tax_rule','oc_tg_tglite_revolution_slider','oc_upload','oc_url_alias','oc_user','oc_user_group','oc_voucher','oc_voucher_history','oc_voucher_theme','oc_voucher_theme_description','oc_weight_class','oc_weight_class_description','oc_zone','oc_zone_to_geo_zone']\n", "\n\n", "I cannot spot where I've gone wrong. Maybe I Will try it on a diferent server next.", "\n    "]], "Tag": "程序设计"}
{"Answer": "楼主，单个for循环内容好提取，嵌套for循环在循环深度未知的情况下会比较麻烦的，首先包住循环体的花括号对应就比较麻烦(因为嵌套循环，花括号内还有许多未知的花括号)。\r\n如果知道循环深度的话，可以很快提取到你想要的文本内容。否则通过一个正则一步到位我觉得比较难。我能想到的解决办法是，先匹配单层的for循环，获取到循环体内容后，\r\n将整个文本中单层for循环replace为空。用新文本再去匹配单层for循环，递归实现。方法比较笨并且不能直接捕获到嵌套for内的内容，楼主自己忖度。", "Konwledge_Point": "for循环的嵌套", "Question": ["JAVA如何简单的提取可能存在多层花括号嵌套的内容？", ["RT。问题背景是在C语言代码中，提取for循环中相应循环体的内容", "\n举个例子", "\n\n", " #include<stdio.h>\n\nint main(){\n    ...1\n    for(int i=0;i<10;i++){\n\n        while(i<5){\n            ...2\n        }\n\n        for(int j=0;j<10;j++){\n            ...3\n        }\n    }\n    ...4\n    for(int r=0;r<5;r++){\n        ....5\n    }\n    ...6\n}\n\n", "\n\n", "要提取出 第一个", "\nwhile(i<5){", "\n            ...2", "\n        }", "\n        for(int j=0;j<10;j++){", "\n            ...3", "\n        }", "\n                第二个...3", "\n                第三个...5"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字典是按地址传递的&amp;#xff0c;当把同一个字典多次添加到列表中时&amp;#xff0c;列表中每个字典都是同一个地址。&lt;br /&gt;改变其中一个字典的属性&amp;#xff0c;列表中所有字典都会一起改变。&lt;br /&gt;new_alien &amp;#61; {&amp;#39;color&amp;#39;: &amp;#39;green&amp;#39;, &amp;#39;points&amp;#39;: 5, &amp;#39;speed&amp;#39;: &amp;#39;slow&amp;#39;} 放在循环中是在循环中每次都创建一个新的字典&amp;#xff0c;让列表中每个字典都是不同的地址。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;aliens &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\nnew_alien &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;points&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;speed&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;}  #new_alien在嵌套前定义\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien_number &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;):\n    aliens&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(new_alien)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; aliens&lt;span class=\"hljs-selector-attr\"&gt;[0:8]&lt;/span&gt;: #选择列表aliens0-&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;的字典\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;字典的地址都是同一个&amp;#34;&lt;/span&gt;,id(alien))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;: #修改键值\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;speed&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;points&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; aliens&lt;span class=\"hljs-selector-attr\"&gt;[0:12]&lt;/span&gt;: #选择列表aliens0-&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;字典\n    print(alien)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/204885103346155.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;aliens &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien_number &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;):\n    new_alien &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;points&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;speed&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;slow&amp;#39;&lt;/span&gt;}  #new_alien在嵌套前定义\n    aliens&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(new_alien)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; aliens&lt;span class=\"hljs-selector-attr\"&gt;[0:8]&lt;/span&gt;: #选择列表aliens0-&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;的字典\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;字典的地址不相同&amp;#34;&lt;/span&gt;,id(alien))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;green&amp;#39;&lt;/span&gt;: #修改键值\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;speed&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;\n        alien&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;points&amp;#39;&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; alien &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; aliens&lt;span class=\"hljs-selector-attr\"&gt;[0:12]&lt;/span&gt;: #选择列表aliens0-&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;字典\n    print(alien)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/755917103346191.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python列表嵌套字典选择性修改键值变成全部修改", ["学习python入门到实践这本书第六章", "\n", "\n", "aliens = ", "[]", " \nnew_alien = {", "'color'", ": ", "'green'", ", ", "'points'", ": ", "5", ", ", "'speed'", ": ", "'slow'", "}  #new_alien在嵌套前定义\n", "for", " alien_number ", "in", " range (", "0", ",", "30", "):    \n     aliens", ".append", "(new_alien)\n", "for", " alien ", "in", " aliens", "[0:8]", ": #选择列表aliens0-", "7", "的字典\n     ", "if", " alien", "[", "'color'", "]", " == ", "'green'", ": #修改键值\n         alien", "[", "'color'", "]", " = ", "'yellow'", " \n         alien", "[", "'speed'", "]", " = ", "'medium'", " \n         alien", "[", "'points'", "]", " = ", "10", " \n", "for", " alien ", "in", " aliens", "[0:12]", ": #选择列表aliens0-", "11", "字典\n print(alien) \n\n\n", "\n", "运行如下", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "Press any key to continue . . .#并没有达到选择性修改列表字典键值，并且输出aliens全部字典时发现键值全部被修改", "\n", "aliens = ", "[]", " \n", "for", " alien_number ", "in", " range (", "0", ",", "30", "):    \n     new_alien = {", "'color'", ": ", "'green'", ", ", "'points'", ": ", "5", ", ", "'speed'", ": ", "'slow'", "} #new_alien在嵌套内定义\n     aliens", ".append", "(new_alien)\n", "for", " alien ", "in", " aliens", "[0:8]", ": #选择列表aliens0-", "7", "的字典\n     ", "if", " alien", "[", "'color'", "]", " == ", "'green'", ": #修改键值\n         alien", "[", "'color'", "]", " = ", "'yellow'", " \n         alien", "[", "'speed'", "]", " = ", "'medium'", " \n         alien", "[", "'points'", "]", " = ", "10", " \n", "for", " alien ", "in", " aliens", "[0:12]", ": #选择列表aliens0-", "11", "字典\n print(alien) \n\n", "\n", "运行如下{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'yellow', 'points': 10, 'speed': 'medium'}", "{'color': 'green', 'points': 5, 'speed': 'slow'}", "{'color': 'green', 'points': 5, 'speed': 'slow'}", "{'color': 'green', 'points': 5, 'speed': 'slow'}", "{'color': 'green', 'points': 5, 'speed': 'slow'}", "Press any key to continue . . .#到达目的，aliens列表选择性字典键值被修改", "\n", "  于是有了疑惑，为什么new_alien在嵌套时位于for循环内外会有这么大差距"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每次执行内循环s重置0&amp;#xff0c;因此只需计算外循环最后一次循环的结果&amp;#xff0c;即&lt;code class=\"language-javascript\"&gt;i&amp;#61;3, j&amp;#61;{3,4}, s&amp;#61;3*3&amp;#43;3*4&amp;#61;21&lt;/code&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何解读该循环嵌套程序", ["\n", "#", "include", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n", "int", " i,j,s;\n", "for", "(i=", "2", ";i<", "4", ";i++)\n", "for", "(s=", "0", ",j=", "3", ";j<", "5", ";j++)\ns+=i*j;\n    ", "printf", "(", "\"%d\\n\"", ",s);\n ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;listcomp 应该是循环相关&amp;#xff0c;io 应该是读取文件&amp;#xff0c;建议是把重复数据提取出来&amp;#xff0c;不要放在循环里面&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["一个关于python使用Cprofile检测函数运算效率的问题？", ["通过Cprofile检测结果如下", "\n\n", "\n\n", "图中最费时的两个红色圈圈分别是哪一部分呢？程序的运算速度特别慢，多次用到了for循环嵌套对列表中字典的遍历并处理，有没有什么方法能够快速且方便地优化使程序运行时间缩短到100s以内？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use the &lt;strong&gt;&lt;a href=\"http://twig.sensiolabs.org/doc/filters/batch.html\" rel=\"nofollow\"&gt;&lt;code&gt;batch&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; filter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{% for section in images|batch(4) %}\n\n    &amp;lt;div class=\"container\"&amp;gt;\n        &amp;lt;div class=\"item\"&amp;gt;\n\n            {% for image in section %}\n                &amp;lt;img src=\"{{ image }}\" /&amp;gt;\n            {% endfor %}\n\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n\n{% endfor %}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Symfony2：如何渲染嵌套的foreach循环并限制内循环以创建图库？", ["\n\n", "How can I have a nested loop and then carry on from the previous loop?", "\n\n", "Example:", "\n\n", "{% for image in site_images[page.id].images %}\n<div class=\"container\">\n    <div class=\"item\">\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"item\">\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n        <img src=\"{{ image[loop.index0] }}\" />\n    </div>\n</div>\n....\n{% endfor %}\n", "\n\n", "How can I make it show 4 images in the first ", ".container > .item div", ", then come out create a new ", ".container > .item div", " and carry on so it would be ", "image[4]", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i,j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)):\n   &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,j)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于python嵌套循环的问题", ["\n\nfor i,j ", "in", " ", "range", "(", "3", "),", "range", "(", "3", "):\n   ", "pass", "\n", "\n", "这样写显示“too many varibles to unpack”，有什么简写方式吗？还是一定要写成嵌套循环", "/(ㄒoㄒ)/~~"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have two loops in a loop, therefore you'll always get an even number of lines.&lt;/p&gt;\n\n&lt;p&gt;You don't actually need that structure, see:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$number=9;\n$k=0;\n$sum=1;\nfor($i=1; $i&amp;lt;=$number; $i++) {\n    for($j=1; $j&amp;lt;=$number; $j++) {\n        $k+=$sum;\n        echo $k;\n    }\n    echo '&amp;lt;br&amp;gt;';\n    //Sum once again so in the next iteration $k is 0 or 10\n    $k+=$sum;\n    //Invert the sign of $sum so in the next iteration it substracts, and then adds, and so on\n    $sum*=-1;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also note that going from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;$number&lt;/code&gt; &lt;em&gt;inclusive&lt;/em&gt; (lower or equal comparation) you'll get one iteration more (from 0 to 9 there are 10 whole numbers).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["嵌套循环PHP", ["\n\n", "i have code :", "\n\n", "<?php\n$number =9;\n$number2 = $number / 2;\n    for ($b=0; $b<=$number2; $b++){\n        for ($i=$number; $i>=1; $i--){\n            echo $i;\n        }\n        echo \"<br/>\";\n        for ($a=1; $a<=$number; $a++)\n        {\n        echo $a;\n    }\n    echo \"<br/>\";\n}\n?>\n", "\n\n", "I want the result like this . ", "\n\n", "987654321\n123456789\n987654321\n123456789\n987654321\n123456789\n987654321\n123456789\n987654321\n", "\n\n", "why if i put odd number like 9 , why always the result 10 loop ?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;模板写错啦。&lt;br /&gt;写成这样就行了。&lt;br /&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/249069127626172.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/909189127626161.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["docxtemplate中表格含for存在空单元格，希望不显示", ["word模板有一表格，存在第一列合并的情况，表格使用for嵌套tr的形式，但是最终效果会有for的占用行（空行），不知道有没有遇到类似问题的解决方法。", "\n", "代码", "\n", "\n", "from", " docxtpl ", "import", " DocxTemplate\n", "import", " webbrowser\n\ntpl = DocxTemplate(\"word合并单元格.docx\")\ncontext = {", "'ilist'", ": [{\n    ", "'items1'", ": [\n        {", "'desc'", ": ", "'Python interpreters'", ", ", "'qty'", ": ", "2", ", ", "'price'", ": ", "'FREE'", "},\n        {", "'desc'", ": ", "'Django projects'", ", ", "'qty'", ": ", "5403", ", ", "'price'", ": ", "'FREE'", "},\n        {", "'desc'", ": ", "'Guido'", ", ", "'qty'", ": ", "1", ", ", "'price'", ": ", "'100,000,000.00'", "},\n    ],\n    ", "'category'", ": ", "'Book'", "},\n    {\n        ", "'items1'", ": [\n            {", "'desc'", ": ", "'Python'", ", ", "'qty'", ": ", "2", ", ", "'price'", ": ", "'FREE'", "},\n            {", "'desc'", ": ", "'Django'", ", ", "'qty'", ": ", "5403", ", ", "'price'", ": ", "'FREE'", "},\n            {", "'desc'", ": ", "'Guido11'", ", ", "'qty'", ": ", "1", ", ", "'price'", ": ", "'100,000,000.00'", "},\n        ],\n        ", "'category'", ": ", "'VCD'", "}\n]\n}\ntpl.render(context)\ntpl.save(\"aa.docx\")\n\nwebbrowser.", "open", "(\"aa.docx\")\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有问题再说&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; Print_tri(row):\n    &lt;span class=\"hljs-comment\"&gt;# 右半三角形&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, row&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*i)\n    &lt;span class=\"hljs-comment\"&gt;# 左半三角形&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, row&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0:&amp;gt;{1}}&amp;#34;&lt;/span&gt;.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*i, row))\n    &lt;span class=\"hljs-comment\"&gt;# 完整三角形&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*row ,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;):\n        &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0:^{1}}&amp;#34;&lt;/span&gt;.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*i, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*row-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n\n&lt;span class=\"hljs-comment\"&gt;# 测试&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;Print_tri&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/422327862666174.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["用python打印三角形", ["如何用python打印以下三种三角形？", "\n", "for循环嵌套语句", "测试输入：4；", "预期输出：", "\n", "*\n", "**\n", "***\n", "****\n   *\n  **\n ***\n****\n", "   *", "\n", "  ***", "\n", " *****", "\n*******\n\n", "\n", "说明：程序会根据函数参数pow打印三个三角形，每个三角形pow行。", "\n", "测试输入：8；", "预期输出：", "\n", "*", "\n", "**", "\n", "***", "\n", "****", "\n", "*****", "\n", "******", "\n", "*******", "\n", "********", "\n", "       *", "\n", "      **", "\n", "     ***", "\n", "    ****", "\n", "   *****", "\n", "  ******", "\n", " *******", "\n", "********", "\n", "       *", "\n", "      ***", "\n", "     *****", "\n", "    *******", "\n", "   *********", "\n", "  ***********", "\n", " *************", "\n", "***************", "\n\n", "\n", "row = int(input())\n'''\n", "    根据row值，打印三个三角形", "\n", "    :row:三角形行数", "\n", "    :return: 无返回值", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nek &amp;#61; np.array([[1,1,1,1,1],[0,0,0,0,0],[1,1,1,1,1],[0,0,0,0,0]])\ntau &amp;#61; np.array([[0,0,0,0,0],[1,1,1,1,1],[0,0,0,0,0],[1,1,1,1,1]])\nbeta &amp;#61; np.empty([4,5]) \nfor i in range(4):\n    for j in range(5):\n        beta[i][j] &amp;#61; ek[i][j]&amp;#43;tau[i][j]\nprint(beta)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;你可以参考一下这个&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["numpy的矩阵运算问题", ["\n\n", "已知矩阵ek和tau，在numpy中怎么写才能得到beta？？？", "\n\n", "之前在matlab写的，是两个for循环嵌套得到的，不知道在numpy怎么写，谢谢各位大佬！(matlab如下)", "\n\n", "for i=1:4", "\n\n", "for i=1:6", "\n\n", "beta（i，j）=sum(ek(:,i).*tau(:,j))", "\n\n", "end", "\n\n", "end"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; n 应该从j&amp;#43;1开始循环&lt;br /&gt;\nfor (int n &amp;#61; j&amp;#43;1; n &amp;lt; a.length; n&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;\n &lt;/p&gt;\n\n&lt;p&gt;n 不能小于 j&amp;#xff0c;这样才不会重复比较&lt;br /&gt;\n否则&amp;#xff0c;j为0&amp;#xff0c;n为1 时a[j] 与 a[n]互换&amp;#xff0c;&lt;br /&gt;\n等到&amp;#xff0c;j为1&amp;#xff0c;n为0时 a[j] 与 a[n]又互换回去了。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["JAVA选择排序中，使用循环嵌套，结果与想象的刚好相反？", ["\n\n        int[] a = new int[]{16, 62, 68, 82, 65, 9};\n\n        for (int i = 0; i < a.length; i++) {\n            System.out.println(a[i]);\n        }\n        System.out.println(\"\");\n\n        for (int j = 0; j < a.length; j++) {\n            for (int n = 0; n < a.length; n++) {\n                if (a[j] > a[n]) {\n                   int c = a[j];\n                    a[j] = a[n];\n                    a[n] = c;\n\n                }\n            }\n        }\n        for (int m = 0; m < a.length; m++) {\n            System.out.println(a[m]);\n\n        }\n    }\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不管什么 都要遵循浏览器的渲染    你执行的操作 肯定是基于你用浏览器操作的一个结果&amp;#xff0c;不能违背这个原则的。 &lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python+selenium报not attached to the page document", ["如图", "\n", "想要对这么一个下拉列表嵌套树结构进行遍历", "先从获得下拉框城市列表,用for循环遍历点击，每个城市下的树里都有多个元素，嵌套for循环继续遍历，但是在点击后需要继续执行一些操作导致页面刷新报错element is not attached to the page document！", "代码如下：", "\n", "driver.find_element(By.CSS_SELECTOR,", "\"下拉框\"", ").click()  ", "# 点击下拉框", "\ncity_arr = driver.find_elements_by_css_selector(", "\"城市列表\"", ")  ", "# 获取城市列表", "\n", "# print(", "'city_arr='", ",city_arr)", "\n", "for", " city ", "in", " city_arr:\n            driver.execute_script(", "\"arguments[0].click();\"", ", city)\n            time.", "sleep", "(", "1", ")\n            D=len(driver.find_elements_by_css_selector(", "\"#trainingMapTree > div > .el-tree-node\"", ") )\n            print(D)\n            ", "for", " i ", "in", " range(D):\n                maps = driver.find_elements_by_css_selector(", "\"#trainingMapTree > div > .el-tree-node\"", ")  ", "# 获取城市下maps列表", "\n                print(", "'maps='", ", maps[i])\n                print(i)\n                maps[i].click()  ", "# 点击地图名称", "\n                time.", "sleep", "(", "2", ")\n                driver.find_element_by_css_selector(", "\"操作A\"", ").click() \n                time.", "sleep", "(", "2", ")\n                driver.find_element_by_css_selector(", "\"操作B\"", ").click()  \n                time.", "sleep", "(", "2", ")\n                driver.find_element(By.CSS_SELECTOR, ", "\"操作C\"", ").click()  \n                time.", "sleep", "(", "2", ")\n                driver.find_element_by_css_selector(", "\".button-group-box > .el-button--primary > span\"", ").click()  ", "# 返回", "\n                time.", "sleep", "(", "2", ")\n", "\n", "由于点击操作C后再返回到这个页面的时候，页面已经被刷新了，报错element is not attached to the page document，该怎么办，求解！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有一种方式&amp;#xff0c;降低耦合&amp;#xff0c;减少bug&lt;br /&gt;在渲染数据之前&amp;#xff0c;对数据进行遍历&amp;#xff0c;给内层的数据添加一个字段&amp;#xff0c;可以是_index&amp;#xff0c;从0开始&amp;#xff0c;用来表示里面相对于外层来说排在第几&amp;#xff0c;然后渲染的时候&amp;#xff0c;内层循环直接取这个字段就可以了&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在嵌套v-for里面，如何获取内层下标", ["如图：", "外层循环下标用index，内层下标用key", "我现在想要获取，外内层联合的下标。", "\n", "这里，要用到第几次循环。比如外层it，第一个it.subscribe有3个，第二个it.subscribe有3个，当我在内层v-for循环时我取下标怎么从3开始取下标，而不是从0开始"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are on the right track. It would something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo '&amp;lt;table&amp;gt;';\nforeach ($userquery as $user) {\n  //load sites into $loadedsites\n\n  $rowheight = count($loadedsites);\n  $c = 0;\n\n  //if there is a user without any sites, the rowheight would be 0.\n  //You need to deceide what to do than, because now it wouldnt show the user at all.\n\n  foreach($loadedsites as $site) {\n\n    if ($c==0)\n      echo '&amp;lt;tr&amp;gt;&amp;lt;td rowspan=\"'.$rowheight.'\"&amp;gt;'.$user-&amp;gt;user_id.'&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;'.$site-&amp;gt;url.'&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;';\n    else\n      echo '&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;'.$site-&amp;gt;url.'&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;';\n\n    $c++;\n  }\n}\necho '&amp;lt;/table&amp;gt;';\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP嵌套的foreach循环显示表", ["\n\n", "I'm looking to generate an HTML table like below. ", "\n\n", "|nick_name| bookmarked_sites  |\n-------------------------------\n| admin   | http://test1.com  |\n|         | http://test2.com  |\n|         | http://test3.com  |\n-------------------------------\n| John    | http://mysite.com |\n-------------------------------\n", "\n\n", "I'm query the database using $wpdb and it's building an array of information which looks like this:", "\n\n", "$userquery = $wpdb->get_results(\"SELECT * FROM bookmarks\");\nprint_r($userquery);\n\nArray ( \n[0] => stdClass Object ( \n    [id] => 1 [user_id] => 1 [post_id] => 1654,1532,1672,1610,1676 ) \n[1] => stdClass Object ( \n    [id] => 3 [user_id] => 6 [post_id] => 1680,1654 ) )\n", "\n\n", "I started to build my first ", "foreach", " to extract the ", "user_id", ", then I had a nested ", "foreach", " to extract the ", "post_id", " for that user. But I'm realizing now that I can't easily build an HTML table off that concept. ", "\n\n", "I'm having a hard time conceptualizing the logic to put this all together. ", "\n\n", "Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n \n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n&lt;span class=\"hljs-attribute\"&gt;spd&lt;/span&gt;&amp;#61;[[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;]] #&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;段的限速上限值和下限值&amp;#xff0c;要n段就继续加\n&lt;span class=\"hljs-attribute\"&gt;lenth&lt;/span&gt;&amp;#61;[[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1500&lt;/span&gt;]] #&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;段速度的区间\n&lt;span class=\"hljs-attribute\"&gt;acc&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]#加速度区间\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.Figure()#创建绘画\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.subplot(&lt;span class=\"hljs-number\"&gt;111&lt;/span&gt;)#创建图画区域\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; cal(t,n):#计算和绘图方法\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(int(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*(acc[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]-acc[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)):#遍历加速度&amp;#xff08;单个段&amp;#xff09;\n        &lt;span class=\"hljs-attribute\"&gt;acct&lt;/span&gt;&amp;#61;acc[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;i*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;#计算每一个加速度\n        &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j in range(spd[n][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]-spd[n][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):#遍历限速&amp;#xff08;单个段&amp;#xff09;\n            &lt;span class=\"hljs-attribute\"&gt;spdt&lt;/span&gt;&amp;#61;spd[n][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;j#计算每一个速度\n            &lt;span class=\"hljs-attribute\"&gt;ttt&lt;/span&gt;&amp;#61;[acct,spdt]#产生本段的一个 加速度、速度 列表\n            &lt;span class=\"hljs-attribute\"&gt;tt&lt;/span&gt;&amp;#61;t.copy()#复制上一级传递进来的结果列表&amp;#xff08;前段的加速度、速度结果&amp;#xff09;\n            &lt;span class=\"hljs-attribute\"&gt;tt&lt;/span&gt;.append(ttt)#将本次生成的 本段加速度、速度列表添加进复制的列表\n            &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; n&amp;lt;len(spd)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:#如果没有遍历完所有的段速\n                &lt;span class=\"hljs-attribute\"&gt;cal&lt;/span&gt;(tt,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)#递归遍历\n            &lt;span class=\"hljs-attribute\"&gt;else&lt;/span&gt;:#否则\n                &lt;span class=\"hljs-attribute\"&gt;speed&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;#赋值初始速度为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                &lt;span class=\"hljs-attribute\"&gt;loc&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;#赋值初始位置为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                &lt;span class=\"hljs-attribute\"&gt;speeds&lt;/span&gt;&amp;#61;[]#创建速度列表\n                &lt;span class=\"hljs-attribute\"&gt;locs&lt;/span&gt;&amp;#61;[]#创建位置列表\n                &lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt; loc&amp;lt;&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;:#位置循环\n                    &lt;span class=\"hljs-attribute\"&gt;loc&lt;/span&gt;&amp;#43;&amp;#61;(speed*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)#新位置计算\n                    &lt;span class=\"hljs-attribute\"&gt;locs&lt;/span&gt;.append(loc)#添加新位置\n                    &lt;span class=\"hljs-attribute\"&gt;speeds&lt;/span&gt;.append(speed)#向列表内添加新速度\n                    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(len(spd)):#遍历速度段\n                        &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; loc&amp;gt;&amp;#61;lenth[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] and loc&amp;lt;lenth[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]:#判断是否在段内\n                            &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; speed&amp;lt;tt[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]:#如果速度低于设定\n                                &lt;span class=\"hljs-attribute\"&gt;speed&lt;/span&gt;&amp;#43;&amp;#61;(tt[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)#加速\n                            &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; speed&amp;gt;tt[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]:#如果速度高于设定\n                                &lt;span class=\"hljs-attribute\"&gt;speed&lt;/span&gt;-&amp;#61;(tt[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)#减速\n                &lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.plot(locs,speeds)#生成速度和位置列表后进行绘图\n&lt;span class=\"hljs-attribute\"&gt;cal&lt;/span&gt;([],&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)#调用方法&amp;#xff0c;传入空列表进行初始化&amp;#xff0c;初始段为&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.show()#显示图像\n \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/278164129536149.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于Python大量生成速度曲线", ["问题背景：", "绘制横坐标S（距离）、纵坐标V（速度）的曲线图，需要用到的是高中物理中的匀变速直线运动，总共会用得到的参数就是t（时间）、s（距离）、a（加速度）、v（速度）。总的来说就是假定在理想状况下，我只需要输入有几段限速路段，限速路段的距离（限速路段头尾相连），和其对应的限速值，加速度可以假定为0.5-1.1m/s²之类的，就可以生成总路程与其对应速度的曲线。", "代码中有部分地方如果要理解的话会用到如下图的公式，但是其实我觉得可以不用看这个公式，这个我可以自己完成，还是附上方便专家们理解，有劳了。", "img", "问题举例：", "输入路段全长：2000m", "第一段限速路段是：0-500m ，限速值是20km/h-30km/h", "第二段限速路段是：500-1500m ，限速值是30km/h-40km/h", "第三段限速路段是：1500-2000m ，限速值是25km/h-35km/h", "然后他就生成如图", "img", "问题要点、难点：", "1、为什么是大量绘制呢？因为加速度、限速值是一个区间，如上我假定的加速度是0.5-1.1m/s²，我取的步长是0.1，这样折线图中的第一段便有6种可能了，然后车辆达到指定限速值进行匀速行驶，这里的限速值假定是取20-26km/h，步长取1，这样便又是6种可能了。6*6，在第一段限速路段便有36种可能，以此类推，每一段都有几种可能，便是这个意思。", "如图我绘制的三段限速路段的图，但是我想要的是限速路段的数量是可变的，不然有四段限速路段的时候就又要改代码。", "img", "2、以下我的代码比较简单，没有考虑那么多情况，因为实力有限，见谅。我的三段是直接考虑两端加速两段减速到终点的，但实际肯定不是这样，得考虑一下，诺后面一段的限速值比前一段大或者小，那么加速度便要考虑其正负，这个判定条件我不知道该怎么写。此外，代码中间寻找加速度与速度时间之间关系，我这段可能看起来会很绕，大概就是我用速度路程加速度求出时间，我觉得不重要，我用的描点法绘制的，重要的是如何生成这些数据。", "img", "代码中我是把数据储存到数据库中绘制了，绘制步骤的代码如下：", "img", "3、有一个难点一直困惑着我，因为我一直想着是一开始就输入是几段限速，这样段数便是一个变量，然后依据我上面代码的思路，这样我的for循环嵌套也是变量，百度了好久没不知道如何去掉for循环，或者控制for循环嵌套的层数。", "本人交代：", "因为这是我第一段自己接触的代码，是刚学习没多久，有很多思路可能奇奇怪怪，但是我是真的诚心学习，问题如果有描述不清楚的地方，请指正，谢谢。", "不管是什么回答我都会认真思考回复的，感谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use Laravel's &lt;code&gt;groupBy()&lt;/code&gt; collection method;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://laravel.com/docs/5.4/collections#method-groupby\" rel=\"nofollow noreferrer\"&gt;https://laravel.com/docs/5.4/collections#method-groupby&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Controller:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function index(){\n    $filters = Filters::all();\n    $groups = $filters-&amp;gt;groupBy('group');\n    return view('frontend.request', compact('groups'));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;View:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@foreach ($groups as $group =&amp;gt; $filters)\n    &amp;lt;div class=\"panel panel-default\"&amp;gt;\n        &amp;lt;b&amp;gt;{{ $group }}&amp;lt;/b&amp;gt;\n        @foreach($filters as $filter)\n            &amp;lt;div id=\"collapseOne1\" class=\"panel-collapse collapse in\"&amp;gt;\n                &amp;lt;div class=\"panel-body\"&amp;gt;\n                    &amp;lt;div class=\"checkbox\"&amp;gt;\n                        &amp;lt;label&amp;gt;&amp;lt;input type=\"checkbox\" name=\"{{ $filter-&amp;gt;group }}\" value=\"{{ $filter-&amp;gt;any }}\"&amp;gt;{{ $filter-&amp;gt;label }}&amp;lt;/label&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                &amp;lt;/div&amp;gt;\n            &amp;lt;/div&amp;gt;\n        @endforeach\n    &amp;lt;/div&amp;gt;\n@endforech\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Laravel 5.4带有分组数据集的嵌套循环", ["\n\n", "\"Filters\" table looks like following:", "\n\n", "id |  group   |       label       |        value        \n----+----------+-------------------+----------------\n\n 12 | deadline | 1 to 3 days       | 1 AND 3            \n 14 | price    | Any               | 0                  \n 15 | price    | Less than 1000    | 0 AND 1000         \n 16 | price    | 1000 to 10000     | 1000 AND 10000     \n 22 | location | Any               | 0                  \n 23 | location | New York          | newyork            \n 24 | location | California        | california         \n 25 | location | Alabama           | alabama \n", "\n\n", "I need to show chunk of \"label\" under the \"group\". ", "\n\n", "My controller:", "\n\n", "public function index(){\n        $filters = Filters::all();\n        return view('frontend.request', compact('filters'));\n    }\n", "\n\n", "My view has:", "\n\n", "<?php foreach ($filters as $filter) { ?>\n                    <div class=\"panel panel-default\">\n                        <b>{{ $filter->group }}</b>\n                        <div id=\"collapseOne1\" class=\"panel-collapse collapse in\">\n                            <div class=\"panel-body\">\n                                <div class=\"checkbox\">\n                                    <label><input type=\"checkbox\" name=\"{{ $filter->group }}\" value=\"{{ $filter->any }}\">{{ $filter->label }}</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                <?php } ?>\n", "\n\n", "I want to show all labels under the group within one box and so on. The above codes create different boxes for each label which is not right.", "\n\n", "I believe, its got to be nested loop but I'm having difficult writing it on Laravel. Any idea how it should be?", "\n\n", "Note: This thread gives partial answer but we don't know chunk size in my case: ", "Laravel 5.1 - Nested Loop - Blade Templating", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;迭代是重复反馈过程的活动&amp;#xff0c;其目的通常是为了逼近所需目标或结果。每一次对过程的重复称为一次“迭代”&amp;#xff0c;而每一次迭代得到的结果会作为下一次迭代的初始值。&lt;br /&gt;重复执行一系列运算步骤&amp;#xff0c;从前面的量依次求出后面的量的过程。此过程的每一次结果&amp;#xff0c;都是由对前一次所得结果施行相同的运算步骤得到的。例如利用迭代法&lt;em&gt;求某一数学问题的解。&lt;br /&gt;对计算机特定程序中需要反复执行的子程序&lt;/em&gt;(一组指令)&amp;#xff0c;进行一次重复&amp;#xff0c;即重复执行程序中的循环&amp;#xff0c;直到满足某条件为止&amp;#xff0c;亦称为迭代。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["问题：python学到了for循环，有三个生词——集合、迭代、嵌套，分别是什么意思？", ["集合、迭代、嵌套，分别是什么意思？", "如果可以解答的话，那谢谢大家啦！", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个问题是每次最内层循环结束时&amp;#xff0c;要把 math 清零。\n第二个问题是内层的if缺少了大括号\n第三个问题是应该改成 math &amp;#43;&amp;#61; xxxx&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["有5,6,7,8共四个数，用c语言编程，判断能组成多少个三位数。", ["\n", "#include <stdio.h>\n\nvoid main(){\n\n    int finish()\n    { \n    int i,j,k,math,count;\n    math=0;\n    count=0;\n    for(i=5;i<9;i++)\n    for(j=5;j<9;j++)\n    for(k=5;k<9;k++)\n    {\n    if(i!=j&&j!=k&&i!=k)\n    math=math+i*100;\n    math=math+j*10;\n    math=math+k*1;\n    count++;\n    printf(\"此时符合条件的数个数为第%d个:\",count);\n    printf(\"%d\",math);\n    }\n    }\n}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为有bug&amp;#xff0c;p&amp;#xff0b;1应该写在这里s &amp;#43;&amp;#61; f(i, p&amp;#xff0b;1)&amp;#xff0c;不然在一个子元素是列表时p的值加了1&amp;#xff0c;下一个子元素是int时的乘的p是加了1的p&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python程序设计浙大版6-4列表数字元素加权求和", ["题目如下：", "输入一个嵌套列表，嵌套层次不限，根据层次，求列表元素的加权和。也就是说，每一层的数字元素都要乘以他所在的层数。", "例如：", "输入：[1,2,[3,4,[5,6],7],8]", "输出：72", "过程：72=1x1+2x1+3x2+4x2+5x3+6x3+7x2+8x1", "\n", "正确做法如下：", "\n", "\n", "def", " ", "f", "(", "l, p", "):\n    s = ", "0", "\n    ", "if", " ", "type", "(l) == ", "int", ":\n        s += p*l\n    ", "if", " ", "type", "(l) == ", "list", ":\n        p += ", "1", "\n        ", "for", " i ", "in", " l:\n            s += f(i, p)\n    ", "return", " s\n\nl = ", "eval", "(", "input", "())\n", "print", "(f(l, ", "0", "))\n", "\n", "我的做法如下：", "\n", "\n", "def", " ", "f", "(", "l, p", "):\n    s = ", "0", "\n    ", "for", " i ", "in", " l:\n        ", "if", " ", "type", "(i) == ", "int", ":\n            s += i*p\n        ", "if", " ", "type", "(i) == ", "list", ":\n            p += ", "1", "\n            s += f(i, p)\n    ", "return", " s\n\nl = ", "eval", "(", "input", "())\n", "print", "(f(l, ", "1", "))\n", "\n", "请问为什么我把循环放在外面结果就是错误的？这两种写法有什么区别吗？", "（以输入样例为例，不考虑其它输入，错误做法不会抛出错误，结果为87）"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The complexity of two-nested-foreach solution is &lt;code&gt;O(n * k)&lt;/code&gt;, where &lt;code&gt;n = len(array1)&lt;/code&gt; and &lt;code&gt;k = len(array2)&lt;/code&gt;. However you can achieve a smaller complexity &lt;code&gt;O(n + k)&lt;/code&gt; via using hash tables (assoc arrays in PHP world).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$twoByLinkedId = [];\nforeach ($arrayTwo as $x) {  // K iterations\n    if (empty($twoByLinkedId[$x['linkedId']])) {\n        $twoByLinkedId[$x['linkedId']] = [];\n    }\n    array_push($twoByLinkedId[$x['linkedId']], $x);\n}\n\nforeach ($arrayOne as $el) {  // N iterations\n    $entries = empty($twoByLinkedId[$el['id']]) \n        ? [] \n        : $twoByLinkedId[$el['id']];\n    foreach ($entries as $entry) {  // only few iterations\n        /* output $entry */\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you can see that the complexity of the solution is &lt;code&gt;O(k + n*t)&lt;/code&gt;, where &lt;code&gt;t&lt;/code&gt; is a a small number. &lt;/p&gt;\n\n&lt;p&gt;Of course, the trick makes sense only if the lengths of both arrays are really big, otherwise simple nested foreach is a good solution too.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["更好的方法来编写嵌套的foreach循环，多个数组比较php", ["\n\n", "I have 2 multidimensional arrays. I run the first one through a ", "foreach", " loop to gain data from it. then run the second ", "foreach", " loop inside the first creating a nested ", "foreach", " loop.then inside the second ", "foreach", " loop I run an if statement to compare a value from the first array to the second array and display some output which works, however I am a little concerned about long run-time. so my question is, is there a cleaner, neater way to write it with a shorter run type:", "\n\n", "@foreach($arrayOne as $firstArray)\n    @foreach($arrayTwo as $secondArray)\n        @if($firstArray['id'] == $secondArray['linkedId'])\n            /*output some data*/\n        @endif\n    @endforeach      \n@endforeach\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;See &lt;a href=\"https://blog.golang.org/json-and-go\" rel=\"noreferrer\"&gt;this&lt;/a&gt; blog entry which thoroughly covers this subject, specifically the section &lt;strong&gt;Decoding arbitrary data&lt;/strong&gt;. Using that you can do something like this:\n(&lt;a href=\"https://play.golang.org/p/5s8tVL7BgM\" rel=\"noreferrer\"&gt;playground example&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"    \n)\n\nfunc main() {\n    // Creating the maps for JSON\n    m := map[string]interface{}{}\n\n    // Parsing/Unmarshalling JSON encoding/json\n    err := json.Unmarshal([]byte(input), &amp;amp;m)\n\n    if err != nil {\n        panic(err)\n    }\n    parseMap(m)\n}\n\nfunc parseMap(aMap map[string]interface{}) {\n    for key, val := range aMap {\n        switch concreteVal := val.(type) {\n        case map[string]interface{}:\n            fmt.Println(key)\n            parseMap(val.(map[string]interface{}))\n        case []interface{}:\n            fmt.Println(key)\n            parseArray(val.([]interface{}))\n        default:\n            fmt.Println(key, \":\", concreteVal)\n        }\n    }\n}\n\nfunc parseArray(anArray []interface{}) {\n    for i, val := range anArray {\n        switch concreteVal := val.(type) {\n        case map[string]interface{}:\n            fmt.Println(\"Index:\", i)\n            parseMap(val.(map[string]interface{}))\n        case []interface{}:\n            fmt.Println(\"Index:\", i)\n            parseArray(val.([]interface{}))\n        default:\n            fmt.Println(\"Index\", i, \":\", concreteVal)\n\n        }\n    }\n}\n\nconst input = `\n{\n    \"outterJSON\": {\n        \"innerJSON1\": {\n            \"value1\": 10,\n            \"value2\": 22,\n            \"InnerInnerArray\": [ \"test1\" , \"test2\"],\n            \"InnerInnerJSONArray\": [{\"fld1\" : \"val1\"} , {\"fld2\" : \"val2\"}]\n        },\n        \"InnerJSON2\":\"NoneValue\"\n    }\n}\n`\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will print:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    //outterJSON\n    //innerJSON1\n    //InnerInnerJSONArray\n    //Index: 0\n    //fld1 : val1\n    //Index: 1\n    //fld2 : val2\n    //value1 : 10\n    //value2 : 22\n    //InnerInnerArray\n    //Index 0 : test1\n    //Index 1 : test2\n    //InnerJSON2 : NoneValue\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The key thing is that you have to use type assertion when working with interface types. The type switch makes it easy to determine the type as needed. The code will recursively range through any nested array or map so you can add as many levels as you wish and get all your values.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在go lang中循环/迭代第二层嵌套JSON", ["\n\n", "Consider the following code:", "\n\n", "package main\n\nimport (\n\"encoding/json\"\n\"fmt\"\n\"reflect\"\n)\n\n\nfunc main() {  \n    //Creating the maps for JSON\n    m := map[string]interface{}{}\n\n    //Parsing/Unmarshalling JSON encoding/json\n    err := json.Unmarshal([]byte(input), &m)\n\n    fmt.Println(\"\nReflect type of Parsing/Unmarshalling Error Object:\n\",reflect.TypeOf(err))\n    fmt.Println(\"\nParsing/Unmarshalling Error Object:\n\",err)\n    if err != nil {\n        panic(err)\n    }\n\n    fmt.Println(\"\nParsed JSON is as follows:\n\",m)\n    fmt.Println(\"\nReflect type of parsed json object:\n\", reflect.TypeOf(m))\n\n    for firstLvlkey, firstLvlValue := range m { \n        fmt.Println(\"First Level Key:\", firstLvlkey)\n        fmt.Println(\"First Level Key reflect type of :\", reflect.TypeOf(firstLvlkey))\n\n        fmt.Println(\"First Level Value:\", firstLvlValue)\n        fmt.Println(\"First Level Value reflect type of :\", reflect.TypeOf(firstLvlValue))\n         // <===============================>\n         //Here I want to iterate/loop over innerJSON1, InnerJSON2 then reach to level InnerInnerJSONArray - fld1 and fld2\n         // <===============================>\n\n    }\n}\n\nconst input = `\n{\n    \"outterJSON\":{\n        \"innerJSON1\":{\n            \"value1\":10,\n            \"value2\":22\n            ,\n            \"InnerInnerArray\": [ \"test1\" , \"test2\"],\n            \"InnerInnerJSONArray\": [ {\"fld1\" : \"val1\"} , {\"fld2\" : \"val2\"} ]\n            },\n            \"InnerJSON2\":\"NoneValue\"\n        }\n    }\n    `\n", "\n\n", "I have some requirement like I want to read/get all the Key and value in ", "String", " type for some processing adn I can't define the ", "struct", " because I will be getting dynamic JSON input (e.g ", "InnerInnerArray", " as a string then second level loop will give me index of array and process each JSON having key ", "fld1", " and ", "val1", "). ", "\n\n", "I wish to iterate over every key/value pair contained within it, what is the most efficient way of going through the map?", "\n\n", "Note: I am Newbie for Go-lang, your suggestion/improvement on question is also most welcome.", "\n    "]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/w3071206219/article/details/52573783\r\n这是最长的，看完之后只要智力没有问题，应该能举一反三写出最短的", "Konwledge_Point": "for循环的嵌套", "Question": ["C语言编程问题，求大神帮助", ["输入一行字符串，输出最长的单词和最短的单词。", "\n请尽量有简单语句编写(我是c语言初学者)，感谢！感谢！感谢！"]], "Tag": "程序设计"}
{"Answer": "TableLayout container_table = (TableLayout )findViewById(R.id.tl);\r\n\r\ncontainer_table.clearxxxxx;\r\n\r\nTabRow header = new TabRow(...)\r\n\r\nTextView column_1 = new TextView();\r\ncolumn_1.setText(\"column_1\");\r\n\r\nheader.add(column_1);\r\n\r\nTextView column_2 = new TextView();\r\ncolumn_2.setText(\"column_2\");\r\n\r\nheader.add(column_2);\r\ncontainer_table.add(header);\r\n\r\nfor(Item: List&lt;Item&gt;) {\r\n   TabRow row = new TabRow();\r\n    如上。。。。\r\n  \r\n  container_table.add(row);\r\n}", "Konwledge_Point": "for循环的嵌套", "Question": ["Android listview下面嵌套一个TableLayout问题？", ["UI的XML代码：main.xml ", "\n\n", " <?xml version=\"1.0\" encoding=\"utf-8\"?>   ", "\n\n", " <LinearLayout   ", "\n\n", "     android:id=\"@+id/LinearLayout01\"   ", "\n\n", "     android:layout_width=\"fill_parent\"   ", "\n\n", "     android:layout_height=\"fill_parent\"   ", "\n\n", "     xmlns:android=\"http://schemas.android.com/apk/res/android\">   ", "\n\n", "         ", "\n\n", "     <ListView android:layout_width=\"wrap_content\"   ", "\n\n", "               android:layout_height=\"wrap_content\"   ", "\n\n", "               android:id=\"@+id/MyListView\">   ", "\n\n", "     </ListView>   ", "\n\n", " </LinearLayout>  ", "\n\n", "    ", "\n\n", " my_listitem.xml的代码如下，my_listitem.xml用于设计ListView的Item  ", "\n\n", "    ", "\n\n", "  <?xml version=\"1.0\" encoding=\"utf-8\"?>    ", "\n\n", " <LinearLayout    ", "\n\n", "     android:layout_width=\"fill_parent\"    ", "\n\n", "     xmlns:android=\"http://schemas.android.com/apk/res/android\"    ", "\n\n", "     android:orientation=\"vertical\"   ", "\n\n", "     android:layout_height=\"wrap_content\"    ", "\n\n", "     android:id=\"@+id/MyListItem\"    ", "\n\n", "     android:paddingBottom=\"3dip\"    ", "\n\n", "     android:paddingLeft=\"10dip\">    ", "\n\n", "     <TextView    ", "\n\n", "             android:layout_height=\"wrap_content\"    ", "\n\n", "             android:layout_width=\"fill_parent\"    ", "\n\n", "             android:id=\"@+id/ItemTitle\"    ", "\n\n", "             android:textSize=\"30dip\">    ", "\n\n", "     </TextView>    ", "\n\n", "     <TextView    ", "\n\n", "             android:layout_height=\"wrap_content\"    ", "\n\n", "             android:layout_width=\"fill_parent\"    ", "\n\n", "             android:id=\"@+id/ItemText\">    ", "\n\n", "     </TextView>    ", "\n\n", "    ", "\n\n", "     <TableLayout  ", "\n\n", "         android:id=\"@+id/tl\" ", "\n\n", "         android:layout_width=\"fill_parent\" ", "\n\n", "         android:layout_height=\"wrap_content\" ", "\n\n", "         android:stretchColumns=\"0,1\">  ", "\n\n", "     <TableRow>  ", "\n\n", "         <TextView  ", "\n\n", "             android:layout_height=\"wrap_content\" ", "\n\n", "             android:text=\"a1\"/>  ", "\n\n", "         <TextView  ", "\n\n", "             android:layout_height=\"wrap_content\" ", "\n\n", "             android:text=\"a2\"/>  ", "\n\n", "     </TableRow>  ", "\n\n", "     <TableRow>  ", "\n\n", "         <TextView  ", "\n\n", "             android:id=\"@+id/a1\" ", "\n\n", "             android:layout_height=\"wrap_content\"/>  ", "\n\n", "         <TextView  ", "\n\n", "             android:id=\"@+id/a2\" ", "\n\n", "             android:layout_height=\"wrap_content\"/>  ", "\n\n", "     </TableRow>  ", "\n\n", "    </TableLayout>  ", "\n\n", " </LinearLayout> ", "\n\n", "如果没有TableLayout的情况下是这样的循环的：", "\n\n", " ", "\n\n", " public void onCreate(Bundle savedInstanceState) {    ", "\n\n", "     super.onCreate(savedInstanceState);    ", "\n\n", "     setContentView(R.layout.main);    ", "\n\n", "     //绑定XML中的ListView，作为Item的容器    ", "\n\n", "     ListView list = (ListView) findViewById(R.id.MyListView);    ", "\n\n", "     ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();    ", "\n\n", "     for(int i=0;i<30;i++)  {    ", "\n\n", "         HashMap<String, String> map = new HashMap<String, String>();    ", "\n\n", "         map.put(\"ItemTitle\", \"This is Titl\");    ", "\n\n", "         map.put(\"ItemText\", \"This is text\");    ", "\n\n", "         mylist.add(map);    ", "\n\n", "     }    ", "\n\n", "     SimpleAdapter mSchedule = new SimpleAdapter(this,     ", "\n\n", "         mylist,  ", "\n\n", "         R.layout.my_listitem,         ", "\n\n", "         new String[] {\"ItemTitle\", \"ItemText\"},   ", "\n\n", "         new int[] {R.id.ItemTitle,R.id.ItemText});    ", "\n\n", "     list.setAdapter(mSchedule);    ", "\n\n", " } ", "\n\n", " ", "\n\n", "问题：这个listview下面的TableLayout的数据我是从数据库取出来循环显示的，那么我怎么写呢？", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;l&lt;/span&gt;&amp;#61;[[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],[&amp;#39;&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;&amp;#39;,&amp;#39;hello&amp;#39;]]\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in l:\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;br /&gt; &lt;strong&gt;有帮助请&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何将嵌套列表分成一个一个的，并且打印出来", ["例如：[  [abc],    [abc],   [abc],   [abc],    [abc],   [abc],   [abc] ..   ]  列表里面多少组位置，每个里面的字符abc数量也是未知的，有长有短", "\n", "显示出来是这种：[abc]", "                             [abc]", "                             [abc]", "                               求解答谢谢~", "\n", "好像要用到for循环遍历~"]], "Tag": "程序设计"}
{"Answer": "import mysql.connector\r\n#数据库连接\r\nconn=mysql.connect.connector(\"连接参数\")\r\ncursor=conn.cursor()\r\nfor book_info in more_book_list:\r\n\t\tcursor.execute('insert into 表名 values(book_info['booksit'],...,book_info['burl'])')\r\n\t\tconn.commit()\r\n\t\r\n仅供参考，代码未补全，也不知道对不对", "Konwledge_Point": "for循环的嵌套", "Question": ["python如何把list中的字典结构 循环存储到MYSQL中？", ["def get_book_info(self,text):", "\nmore_book_list =[]", "\n        for i in range(20):", "\n           book_info = {}", "\n           book_info[\"booksit\"] = url_book_list[i]  if boname_list else None", "\n\n", "       book_info[\"boname\"] =  boname_list[i] if boname_list else None\n\n       book_info[\"auname\"] = auname_list[i] if auname_list else None\n\n       book_info[\"subname\"] = subname_list[i] if subname_list else None\n\n       book_info[\"subtype\"] = subtype_list[i] if subtype_list else None\n\n       book_info[\"bointro\"] = bointro_list[i] if bointro_list else None\n\n       book_info[\"charnu\"] = charnu_list[i] if charnu_list else None\n\n       book_info[\"uping\"] = uping_list[i] if uping_list else None\n\n       book_info[\"burl\"] = burl_list[i] if burl_list else None\n\n       more_book_list.append(book_info)\n\n    return more_book_list\n", "\n\n", "def ins_to_sql(self,sql):", "\n\n", "    conn=MySQLdb.connect(\"127.0.0.1\", \"root\", \"usbw\", \"carwbook\", 3307 )\n    cursor=conn.cursor()\n\n    for book_info in sql:\n\n        cursor.execute('INSERT INTO booktable(boname,auname,subname,subtype,bointro,charnu,uping,burl) VALUES (book_info[\"boname\"],book_info[\"auname\"],book_info[\"subname\"],book_info[\"subtype\"],book_info[\"bointro\"],book_info[\"charnu\"],book_info[\"uping\"],book_info[\"burl\"])')\n\n    conn.commit()\n    conn.close()\n", "\n\n", "if ", "name", " == '__main__':", "\n      url = 'https://www'", "\n    text = book.get_html(url)", "\n    sql = book.get_book_info(text)", "\n\n", "如何把上面的list 中的字典 循环 存储到下面的表中\n", "\n\n", "表的字段jie'gou\"booksit\",\"boname\",\"auname\",\"subname\",\"subtype\",\"bointro\",\"charnu\",\"uping\",\"burl\"", "\n\n", "def ins_to_sql(self,sql):中我好像循环不出来，到sql中，感觉 没有从列表中把字典拿出来，谁能帮我再看看，谢谢！", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Furthering @DarkDust's answer, a fairly efficient way of doing it (assuming you're using raw PHP as opposed to a framework) would be something along the lines of:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$files = array()\n$rows = array();\n\nwhile($add = mysql_fetch_array(mysql_query('SELECT filename FROM files')) {\n  $rows[] = $add[0]\n}\n\n...files code\n\nforeach(array_diff($files, $rows) as $deletable) {\n  unlink('/path/to/'.$deletable);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["帮助嵌套的foreach循环", ["\n\n", "I am trying to ultimately find files in a directory that are no longer being used and delete them. I am using a field in my database to match against the filenames; they are the same.", "\n\n", "The outer loop is for the database values and the inner loop is for the files in the directory. I'm using an if stmt inside the inner loop but I am getting files showing up in the output that should not be there. What am I doing wrong?", "\n\n", "If I have a file in my directory and no matching database value, I want to delete the file.", "\n\n", "                foreach( $ds as $id ){\n                    foreach( $out as $file ){\n                        if( $file != $id['patient_id'] ){\n                            echo $id['patient_id'];\n                        }\n                    }\n                }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;循环了2&lt;span class=\"hljs-number\"&gt;*3&lt;/span&gt;次&amp;#xff0c;所以&lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;&amp;#61;6\n最后&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;2&amp;#xff0c;j&amp;#61;3,m&amp;#61;2&amp;#43;3&amp;#61;5\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["求解foe里面的嵌套循环", ["求解", " 19.下 面程序的輸出結果是B)。", "#include <stdio.h>", "\n", "int k=0,m=0,ij;", "for(i-0;i<2; i++)", "{", "for j=0; j<3;j++)", "\n", "k++ ;", "k-j;", "\n", "}", "\n", "m=i+j;", "\n", "priff(*k= -%d,m=%d\",k,m) ;", "\n", "return 0;", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;try this I have just given the idea of how should you can open model and send data to the opened model:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; //Your Button HTML\n&amp;lt;button type=\"button\" class=\"your_next_button_class btn btn-warning\" \ndata-name=\"&amp;lt;?php echo $full_rows['name'];?&amp;gt;\" \ndata-toggle=\"modaSS\" data-target=\".print\" id=\"view\"&amp;gt;View&amp;lt;/button&amp;gt;\n\n$('body').on('click', '.your_next_button_class', function(e) {\n\n    var name = $(this).data('name');\n    //As abouve example you can get any data using data arrribute\n    // Now You can open a model on the same page you don't need to send data\n\n    $.ajax({\n        type: \"POST\",\n        url: \"modal.php\",\n        data: dataString,\n        //cache: false,\n        success: function(response) {\n        // Here in response you get the $get_number['identify']; data.\n          alert(response);\n\n        //Now To Send this response to the model\n        // If you are adding this value to hidden input then\n        $('.hidden_input_class').val(response);\n\n       // Or you for display this in as text\n        $('.your_class_where_want_to_display').text(response);\n\n\n          // THis is how you open the model\n          $('.your_model_class').modal('show');\n\n        }\n      });\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am assuming that your query correct and valid data to ajax success.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在单击嵌套在循环中的按钮时弹出显示模态", ["\n\n", "i'm trying to target   buttons in the loop. each button upon click is supposed to pop up a modal with details unique to that particular invoice. but my code seem to getting only the first invoice when any of the button is clicked.", "\n\n", "\n", "\n", "\n", "this is the loop with the modal\n\n\n\n<?php\nrequire 'connect.php'; \nrequire 'header.php'; \n \n\n?>\n\n\n  <!-- modal -->\n\n  <div class=\"modal fade print\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\">\n\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content row\" id=\"print\">\n        <address>\n            <img src=\"small.png\"><br/>\n            #32 Adelabu Street,Uwani,Enugu<br/>\n            Phone: 08045454554\n          </address>\n        <address>\n            Date:\n          </address>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Customer Name</th>\n              <th>Product name</th>\n              <th>Quantity</th>\n              <th>price</th>\n              <th>total</th>\n              <th>amount paid</th>\n              <th>balance</th>\n            </tr>\n          </thead>\n          <tbody class=\"details\">\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n\n              <td></td>\n\n\n\n            </tr>\n\n          </tbody>\n\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"printarea\">\n    <table class=\"table table-bordered\">\n\n      <tbody class=\"details\">\n        <?php  \n                            $get_invoice = \"SELECT * FROM invoice ORDER BY id DESC\";\n                            $invoice_query = mysqli_query($connect,$get_invoice);\n                            $invoice_rows = mysqli_num_rows($invoice_query);\n                            while($full_rows=mysqli_fetch_array($invoice_query)) {?>\n        <tr>\n          <!-- the php code inside the id bracket is supposed to generate a unique id for each loop-->\n          <td><input type=\"hidden\" value=\"<?php echo $full_rows['identify']; ?>\" id=\"but<?php echo $full_rows['name']; ?>\"></td>\n          <td>\n            <?php echo $full_rows['date']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['name']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['goods_description']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['quantity']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['price']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['total']; ?>\n          </td>\n          <td>\n            <?php echo $full_rows['amount_paid']; ?>\n          </td>\n\n          <td>\n            <?php echo $full_rows['balance'] ?>\n          </td>\n          <td><input type=\"button\" class=\"btn btn-success\" value=\"print\"></td>\n          <td><input type=\"button\" value=\"delete\" id=\"add\" class=\"btn btn-danger\"></td>\n\n          <!-- the unique id generated is passed inside the onclick function to target specific invoice in the modal-->\n          <td><button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modaSS\" data-target=\".print\" onclick=\"modal('but<?php echo $full_rows['name'];?>')\" id=\"view\">View</button></td>\n\n\n          <!--DISPLAYING MODAL WITH INVOICE DETAILS-->\n          <script type=\"text/javascript\">\n            function modal(invoice) {\n              var identify = $(\"[id^='but']\").val();\n              var dataString = 'identify=' + identify;\n              $.ajax({\n                type: \"POST\",\n                url: \"modal.php\",\n                data: dataString,\n                //cache: false,\n                success: function(html) {\n                  alert(html);\n                }\n              });\n              return false;\n            }\n          </script>\n        </tr>\n        <?php } ?>\n      </tbody>\n\n    </table>\n  </div>\n\n  </div>", "\n", "\n\n", "\n", "\n\n", "\n", "\n", "\n\n", "\n", "this is the this is where the ajax request is been proccessed\n\n\n<?php\n\n$identify = $_POST['identify'];\n//connecting to server and selecting database\n$connect = mysqli_connect('localhost','root','','sidney');\n\nif (isset($_POST['identify'])) {\n  $select = \"SELECT * FROM `invoice` WHERE identify='$identify'\";\n  $query = mysqli_query($connect,$select);\n  $get_number = mysqli_fetch_array($query,MYSQLI_ASSOC);\n  if ($get_number) {\n    echo $get_number['identify'];\n    return $get_number['identify'];\n  }else{\n    echo \"There was trouble locating the number\";\n  }\n}\n?>", "\n", "\n\n", "\n", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "应该是这样吧\r\n\r\n&lt;c:forEach items=\"action里传递到页面的集合1\" var=\"集合1\"&gt;\r\n    &lt;c:forEach items=\"action里传递到页面的集合2\" var=\"集合2\"&gt;\r\n        &lt;c:if test=\"集合2.属性==集合1属性\"&gt;\r\n        显示内容，既可以获取集合1的，也可以获取集合2的\r\n        &lt;/c:if&gt;\r\n    &lt;/c:forEach&gt;\r\n&lt;/c:forEach&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["这样嵌套循环，用什么标签<c:foreach>还是<logic>?第二个循环是根据第一个循环条件获得的", ["\npackage com.svse.struts.action;\n\nimport java.util.List;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.struts.action.ActionForm;\nimport org.apache.struts.action.ActionForward;\nimport org.apache.struts.action.ActionMapping;\nimport org.apache.struts.actions.DispatchAction;\n\nimport com.svse.struts.entity.TBoard;\nimport com.svse.struts.entity.TType;\nimport com.svse.struts.form.BoardForm;\nimport com.svse.struts.impl.BoardImpl;\nimport com.svse.struts.impl.TypeImpl;\nimport com.svse.struts.service.BoardService;\nimport com.svse.struts.service.TypeService;\n\npublic class BoardAction extends DispatchAction\n{\n\n    private BoardService boardService = new BoardImpl();\n    private TypeService typeService = new TypeImpl();\n\n    /***\n     * \n     */\n    public ActionForward all(ActionMapping mapping, ActionForm form,\n            HttpServletRequest request, HttpServletResponse response)\n    {\n        BoardForm boardForm = (BoardForm) form;\n\n//怎么在demo.jsp页面中显示所查询的type.getTName()和board.getBName（）的值，向这样嵌套循环，用什么标签<c:foreach>还是<logic>?第二个循环是根据第一个循环条件获得的\n        List<TType> typeList = typeService.getAllType();\n        for (TType type : typeList) {\n            System.out.println(type.getTName());\n            List<TBoard> title = boardService.getAllTitle(type.getTId());//根据ID查询所有版面信息\n\n            request.setAttribute(\"title\", title);\n            for (TBoard board : title) {\n                System.out.println(\"________________\"+board.getBName());\n            }\n        }\n        \n        return new ActionForward(\"/user/demo.jsp\",false);//请求转发\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$n = 5;\n\nfor ($i = 0; $i &amp;lt; $n; $i++) {\n    for ($j = 0; $j &amp;lt;= $n; $j++) {\n        if ($j &amp;lt;= $i) {\n            echo '*';\n        }\n        else {\n            echo $j;\n        }\n    }\n    echo '&amp;lt;br&amp;gt;';\n}\nfor ($i = $n; $i &amp;gt; 0; $i--) {\n    for ($j = 0; $j &amp;lt;= $n; $j++) {\n        if ($j &amp;lt;= $i) {\n            echo '*';\n        }\n        else {\n            echo $j;\n        }\n    }\n    echo '&amp;lt;br&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See the difference in incremental and decremental loops&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["具有嵌套循环的图像模式", ["\n\n", "Currently i'm practicing some exercises with loops and nested loops. I already created a code to \"draw\"  such pattern:", "\n\n", "* \n* * \n* * * \n* * * * \n* * * * * \n", "\n\n", "and to make it i wrote such code:", "\n\n", "$n = 5;\n\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j <= $n; $j++) {\n        if ($j <= $i) {\n            echo '*';\n        }\n        echo '<br>';\n    }\n}\n", "\n\n", "Now i'm trying to figure out how to \"draw\" such pattern:", "\n\n", "* 2 3 4 5\n* * 3 4 5\n* * * 4 5\n* * * * 5\n* * * * * \n* * * * * \n* * * * 5\n* * * 4 5\n* * 3 4 5\n* 2 3 4 5\n", "\n\n", "The only thing i concluded so far is to use something similar as in previous code but i'm really out of idea how to implement it. Could you help me on this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;童鞋&amp;#xff0c;我感觉你想复杂了&lt;br /&gt;python&amp;#xff0c;首先所有的变量都必须定义了才能用。如果想循环定义多级的dic&amp;#xff0c;可以直接像如下一样&amp;#xff0c;直接指定空变量&amp;#xff0c;再赋值就可以了&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/139581680336118.png\" /&gt;&lt;/p&gt;&lt;br /&gt;执行结果如下&amp;#xff1a;&amp;#xff08;如果需要&amp;#xff0c;还可以定义三级的dic&amp;#xff0c;all_days[year][month][day]等&amp;#xff09;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/836789580336124.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;希望帮到你&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python字典嵌套+循环使用的思路、用法", ["1，任务叙述：自学字典、元组、列表和集合几个概念，在这些概念中挑选适合的，想办法将缩进减少到小于等于3阶。并最后将年月日放到一个字典中，字典中的逻辑关系是一个年下12个月，各月下对应日期。", "1.1，任务简述：使用字典存储20世纪的每一天。", "2，任务难处：不知道怎么正确存储，合适的空字典应该如何创建，如何使用循环添加键对值", "3.1，自己尝试的思路：", "3.2自己尝试的代码：均有错误：", "\n", "'''dict={'1900':{                #将20世纪每一天存入字典中\n    '1':{'1','2'}\n}\n      }\nfor year in range(1900,2021):\n    new_year = [year:{'':{}}]\n    dict.append(new_year)\nfor year,month,day in dict.items():\n    for y in range(1900,2021):\n        year=y\nfor m in rang(1,13):\n        month=m\n    for d in range (2,5):\n        day=d   '''", "\n", "dict", "={", "'Year'", ":{}}\n", "for", " year ", "in", " ", "range", "(", "1900", ",", "2021", "):\n    ", "dict", ".setdefault(", "dict", ", [])\n    ", "dict", ".setdefault(", "dict", ", []).append(year)\n", "print", "(", "dict", ")\n\n", "\n", "希望给些指点"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;F                      //i&amp;#61;0,  j&amp;#61;0;j&amp;lt;i&amp;#43;1&amp;#61;1   &amp;#61;&amp;#61;&amp;gt;ch-0 &amp;#61; F&lt;br /&gt;FE                   //i&amp;#61;1,  j&amp;#61;0   &amp;#61;&amp;#61;&amp;gt;ch-0&amp;#61;F, j&amp;#61;1&amp;lt;i&amp;#43;1&amp;#61;2   &amp;#61;&amp;#61;&amp;gt; ch-1 &amp;#61; E ,j&amp;#61;2&amp;lt;i&amp;#43;1不成立&amp;#xff0c;printf(&amp;#34;\\n&amp;#34;)&lt;br /&gt;FED                //i&amp;#61;2,  j&amp;#61;0   &amp;#61;&amp;#61;&amp;gt;ch-0&amp;#61;F, j&amp;#61;1&amp;lt;i&amp;#43;1&amp;#61;3   &amp;#61;&amp;#61;&amp;gt; ch-1 &amp;#61; E, j&amp;#61;2&amp;lt;i&amp;#43;1&amp;#61;3  &amp;#61;&amp;#61;&amp;gt;ch-2 &amp;#61; D,  j&amp;#61;3&amp;lt;i&amp;#43;1&amp;#61;3不成立&amp;#xff0c;printf(&amp;#34;\\n&amp;#34;)&lt;br /&gt;FEDC             //i&amp;#61;3,   j&amp;#61;0......                                                          j&amp;#61;3&amp;lt;i&amp;#43;1&amp;#61;4  &amp;#61;&amp;#61;&amp;gt;ch-3 &amp;#61; C, j&amp;#61;4&amp;lt;i&amp;#43;1&amp;#61;4不成立&amp;#xff0c;printf(&amp;#34;\\n&amp;#34;)&lt;br /&gt;FEDCB          //i&amp;#61;4,  j&amp;#61;0......                                                           j&amp;#61;4&amp;lt;i&amp;#43;1&amp;#61;5  &amp;#61;&amp;#61;&amp;gt;ch-4 &amp;#61; B, j&amp;#61;5&amp;lt;i&amp;#43;1&amp;#61;5不成立&amp;#xff0c;printf(&amp;#34;\\n&amp;#34;)&lt;br /&gt;FEDCBA       //i&amp;#61;5,  j&amp;#61;0......                                                            j&amp;#61;5&amp;lt;i&amp;#43;1&amp;#61;6  &amp;#61;&amp;#61;&amp;gt;ch-5 &amp;#61; A, j&amp;#61;6&amp;lt;i&amp;#43;1&amp;#61;6不成立&amp;#xff0c;printf(&amp;#34;\\n&amp;#34;)&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["这个嵌套循环有人能给我详细讲讲吗？", ["#include<stdio.h>", "int main()", "{", "   int i,j;", "   char ch='F';", "\n", "   for(i=0;i<6;i++)", "   {", "        for(j=0;j<i+1;j++)", "              printf(\"%c\",ch-j);", "        printf(\"\\n\");", "   }", "   return 0;", "}", "i=0，<6，为真，进入内循环，内循环为真，打印字符F，然后第二次循环在到这里时，我以为只会打印字符D，为什么是FD呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Like other answerers, I'd definitely &lt;em&gt;prefer&lt;/em&gt; to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;code&gt;break&lt;/code&gt; with a label for the outer loop. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public class Test {\n    public static void main(String[] args) {\n        outerloop:\n        for (int i=0; i &amp;lt; 5; i++) {\n            for (int j=0; j &amp;lt; 5; j++) {\n                if (i * j &amp;gt; 6) {\n                    System.out.println(\"Breaking\");\n                    break outerloop;\n                }\n                System.out.println(i + \" \" + j);\n            }\n        }\n        System.out.println(\"Done\");\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This prints:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n2 2\n2 3\nBreaking\nDone\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何在 Java 中突破嵌套循环？", ["\n\n", "I've got a nested loop construct like this:", "\n\n", "for (Type type : types) {\n    for (Type t : types2) {\n         if (some condition) {\n             // Do something and break...\n             break; // Breaks out of the inner loop\n         }\n    }\n}\n", "\n\n", "Now how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.", "\n\n", "I don't want to put the inner loop in a different method.", "\n\n", "Update: I don't want to rerun the loops, when breaking I'm finished with the execution of the loop block.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/886955/how-to-break-out-of-nested-loops-in-java"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在这段代码中&amp;#xff0c;同一个变量输出结果不同的原因是因为在sample_group函数中&amp;#xff0c;将一个字典self.atrs赋值给了另一个字典self.atr_list[product]。在循环迭代过程中&amp;#xff0c;每次对self.atrs进行修改时&amp;#xff0c;实际上修改的是同一个字典对象的值。由于self.atr_list[product]实际上是指向同一个字典对象的引用&amp;#xff0c;因此在循环结束后&amp;#xff0c;self.atr_list中保存的是最后一次循环中self.atrs字典的值。&lt;/p&gt;\n&lt;p&gt;如果要每次将self.atrs字典的副本保存到self.atr_list[product]中&amp;#xff0c;可以使用copy方法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;self&lt;span class=\"hljs-selector-class\"&gt;.atr_list&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[product]&lt;/span&gt; &amp;#61; self&lt;span class=\"hljs-selector-class\"&gt;.atrs&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.copy&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样每次将self.atrs的副本保存到self.atr_list[product]中&amp;#xff0c;就不会出现同一个变量输出结果不同的情况了。&lt;/p&gt;\n&lt;p&gt;有用望采纳。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["这段python代码中用了字典的嵌套，为什么同一个变量输出结果会不一样？", ["这段python代码中用了字典的嵌套，为什么同一个变量输出结果会不一样？感觉第二个输出的结果里最后一组数值，把前面的数值都覆盖了。不知道是为什么。怎么样才能在第二个输出里得到每一组的正确数值。", "\n", "\n", "class", " ", "Backtest", ":", "\n  ", "def", " ", "__init__", "(", "self", ", n)", " -> ", "None:", "\n    ", "self", ".", "n:", "int =", "3", "\n    ", "self", ".", "atr_list:", "dict[str, dict]={}\n    ", "self", ".", "atrs:", "dict[str, dict]={}\n\n  ", "def", " ", "run_testing", "(", "self", ")", ":\n      ", "for", " product ", "in", " [", "'apple'", ",", "'orange'", ",", "'banana'", ",", "'lemon'", "]:\n        ", "self", ".sample_group(product,", "self", ".n)\n        ", "self", ".n += ", "1", "\n      print(", "\"在结束遍历后的输出\"", ",", "self", ".atr_list)\n\n  ", "def", " ", "sample_group", "(", "self", ", product, qty)", ":\n      ", "for", " j ", "in", " [", "'a'", ",", "'b'", ",", "'c'", ",", "'d'", ",", "'e'", ",", "'f'", ",]:\n        ", "self", ".atrs[j]= qty/", "1317", "\n      ", "self", ".atr_list[product] = ", "self", ".atrs\n      print(", "\"在遍历中逐个水果输出结果\"", ",product, ", "self", ".atrs)\n      \n", "if", " __name__ == ", "\"__main__\"", ":\n  a=Backtest(", "10", ")\n  a.run_testing()\n", "\n", "在方法sample_group中每次输出的self.atrs是这样的：", "\n", "\n", "但在run_testing 方法中输出的结果却是这样的：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;// heres a class\nclass thing {\npublic $ybob = 23;\n}\n\n// create an array of 8 of them\n$i = 0;\n$a= array();\nwhile(8&amp;gt; $i){\n$a[$i] = new thing;\n$i++;\n}\n//var_dump($a);\n\n// loop thru the array of objects\n$rows = 1;\nforeach($a as $ob){\n\n// use modulus operator to work out if a row is odd or even\necho ( ($rows % 2)  === 1 ) ?  '&amp;lt;br /&amp;gt;NEW ROW' : '' ;\necho $ob-&amp;gt;ybob . ' - ' ;  // output the objects data in any case\n$rows++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the ternary operator 4 rows up, you can add the extra row tag, or revert an if/else if you wanted to use many more lines of markup.&lt;/p&gt;\n\n&lt;p&gt;Gives:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;NEW ROW 23 - 23 - \nNEW ROW 23 - 23 - \nNEW ROW 23 - 23 - \nNEW ROW 23 - 23 -\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在php中为嵌套循环提供逻辑帮助", ["\n\n", "Let's say I have 8 php objects and I need to iterated through them and output various information into html differently according to their placement. I have developed the structure for the css and html and you can see it here: ", "http://jsfiddle.net/v3qcc/9/", "\nI just need help with the logic of placing them their dynamically.", "\n\n", "I need to take every two objects and place them in this wrapper:", "\n\n", "<div class=\"col\">\n    <div class=\"third\">\n        <div class=\"col-content\">         \n          **...Object One Here**\n        </div>\n    </div>\n\n    <div class=\"fourth\">\n        <div class=\"col-content\">         \n          **...Object Two Here**\n        </div>\n    </div>\n</div>\n\n<div class=\"col\">\n    <div class=\"third\">\n        <div class=\"col-content\">         \n          **...Object Three Here**\n        </div>\n    </div>\n\n    <div class=\"fourth\">\n        <div class=\"col-content\">         \n          **...Object Four Here**\n        </div>\n    </div>\n</div>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是Python开发者经常会出现的问题&amp;#xff0c;就是对闭包作用域不清晰。在 &lt;code class=\"language-javascript\"&gt;[lambda x:x*i for i in range(4)]&lt;/code&gt; 列表解析式中&amp;#xff0c;i在lambda声明之外&amp;#xff0c;也就是说&lt;code class=\"language-javascript\"&gt;i&lt;/code&gt;相对lambda来说是个外部变量。当列表解析式运行完后&amp;#xff0c;i的值就定格为3。&lt;/p&gt;\n&lt;p&gt;我们可以通过简单的方法来验证&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;m&lt;/span&gt;():\n    &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a.__code__.co_code&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你会发现&amp;#xff0c;对a的内部代码输出都是一样的&amp;#xff0c;这说明列表中的lambda的逻辑都是一样的。所以输出结果也是一样的。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python匿名函数的嵌套使用循环发现的问题", ["在python的匿名函数的测试中发现一个问题：", "\n", "def ", "m", "():\n    ", "return", " [lambda x:x*i ", "for", " i ", "in", " ", "range", "(4)]\n\na = ", "m", "()\n", "for", " a ", "in", " ", "m", "():\n    ", "print", "(a(1))\n", "\n", "运行的结果我本以为会是", "0", "1", "2", "3", "可是答案却是四个3，原因尚未了解。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最外层循环控制打印多少行&amp;#xff0c;内层第一个for控制打印出对应数字和换行&amp;#xff0c;第二个for打印空格&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["使用嵌套的循环语句，编写程序打印一副图案", ["\n", "#include", "using namespace std;", "\n", "int main()", "{", "    int a,b,c;", "    for(a=1;a<=6;a++)", "    {   for(b=1;b<=6-a;b++)", "           cout<<b<<'\\t';", "           for(c=6-a;c>0;c--)", "              cout<<\" \";", "              cout<<endl;", "\n", "}\n\n", "return", " ", "0", ";\n", "\n", "}", "\n", "我不知道第三个for语句是什么意思，为什么这么编写，感觉看不懂", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "r[i+1].num这个在条件最后一定后出现越界。条件要改为 i &lt; r.length-1", "Konwledge_Point": "for循环的嵌套", "Question": ["js里面如何让数组的元素进行前后比较？", ["这是一个聊天记录的数组，用时间升序和标识字段进行了排序，例如r=[name,num]为", "\n{x,1} , {x,1} , {x,1} ,{x,2} ,{x,2} , {x,2} ,{x,2}，其中x是随便的", "\n\n", "我自己写的代码是", "\n\n", "for ( let i =  0 ; i < r.length ; i++){\n   if ( r[i].num != r[i+1].num ){\n         this.data.a.push(r[i])\n     }\n}\n", "\n\n", "但发现这样写的话**Cannot read property '_num_' of undefined**", "\n用了嵌套循环也还是不行，请问这是为什么啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;No need to loop, just re-index using the &lt;code&gt;id&lt;/code&gt; and then reference that element.  This assumes that &lt;code&gt;id&lt;/code&gt; is unique:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array  = array_column($array, null, 'id');\n$result = $array[13484];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if you only need it once:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$result = array_column($array, null, 'id')[13484];\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP循环遍历嵌套数组以查找特定值，然后获取该数组中获取匹配项的所有元素", ["\n\n", "I have the following multi dimensional array:", "\n\n", "Array\n(\n[0] => Array\n    (\n        [name] => Botline\n        [description] => Kwese\n        [parent_team_id] => \n        [company_id] => 10554\n        [id] => 13482\n        [external_id] => 13482\n        [extras] => \n    )\n\n[1] => Array\n    (\n        [name] => Books Boutique\n        [description] => Kwese\n        [parent_team_id] => \n        [company_id] => 10554\n        [id] => 13483\n        [external_id] => 13483\n        [extras] => \n    )\n\n[2] => Array\n    (\n        [name] => Sij Investments\n        [description] => Kwese\n        [parent_team_id] => \n        [company_id] => 10554\n        [id] => 13484\n        [external_id] => 13484\n        [extras] => \n    )\n\n[3] => Array\n    (\n        [name] => Steamcard Investments\n        [description] => Kwese installations\n        [parent_team_id] => \n        [company_id] => 10554\n        [id] => 13549\n        [external_id] => 13549\n        [extras] => \n    )\n)\n", "\n\n", "I want to be able to loop through the array searching for a nested array which has a 'id' equal to lest say '13484'. After I find that 'id' I want to be able to get all the elements in that array and save them.", "\n\n", "The number of nested arrays which might come in the main array are undefined so I can not create a predetermined way of getting the right array which has the matching value. How can I achieve this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;dic &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;User1&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;123456&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;User2&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;111111&amp;#39;&lt;/span&gt;}\n\n&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    user,&lt;span class=\"hljs-keyword\"&gt;pwd&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入用户名和密码(用空格分开)&amp;#xff1a;&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;()\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; user in dic &lt;span class=\"hljs-built_in\"&gt;and&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;pwd&lt;/span&gt; &amp;#61;&amp;#61; dic[user]:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    elif user in dic &lt;span class=\"hljs-built_in\"&gt;and&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;pwd&lt;/span&gt; !&amp;#61; dic[user]:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;密码错误&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入错误&amp;#xff0c;请重新输入&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;登录成功&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;登录失败&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python问题求解决", ["Python字典章节，可能是用一个for进行循环嵌套，但就是运行不出来。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目意思不是很明确&amp;#xff0c;你先看看我写的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; arr &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;];\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; arr2 &amp;#61; [];\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i&amp;#43;&amp;#43;) {\n  &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; isDuplicate &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n  \n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; arr2.length; j&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[i] &amp;#61;&amp;#61;&amp;#61; arr2[j]) {\n      isDuplicate &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n    }\n  }\n  \n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!isDuplicate) {\n    arr2.push(arr[i]);\n  }\n}\n\nconsole.log(arr2); // Output: [&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;]\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["js的for循环和数组结合", ["只能用const和var和for和if和arr和arr2和[]和往后面添加，以及数组用的方式，嵌套两个for循环用逻辑思维：对比的方式和存在的话放进arr2中，完成以下练习：", "• 定义数组arr，值为[‘a’, ‘b’, ‘b’, ‘c’, ‘d’, ’d’]，去掉重复的字符，得到新的数组arr2，值为[‘a’, ‘b’, ‘c’, ‘d’]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;序数不代表每条语句执行顺序&amp;#xff0c;表示大致流程&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/610960691266147.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["请理清这个嵌套循环，请用通俗易懂的话解释一下", ["#include <stdio.h>", "int main()", "{", "    int j = 0;", "    for(int i = 0;i<=30;i++)", "     {", "         j  += i;", "       if( i%2==0 &&  i%3 == 0)", "       {", "           printf(\"%d\\n\",j);", "           j = 0;", "       }", "       while(j)", "       {", "           printf(\"hello\\n\");", "           break;", "       }", "    }", "\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "矩阵B一共(n^2)/2个数字要算，其中i个数字乘n-i次，计算次数和矩阵A的值无关，big O 和big Omega的值一样\r\nO(n^3)\r\nΩ(n^3)", "Konwledge_Point": "for循环的嵌套", "Question": ["时间复杂度：嵌套循环中加入阶乘的big O 和big Omega是多少？?", ["伪代码如下：", "\n\n", "function range_product(A)：\n\n    B ← 新的n*n矩阵\n\n    for i from 0 to n − 1 do\n\n        for j from i to n − 1 do\n\n            计算从A[i] 到 A[j] 的阶乘（ A[i] ∗ A[i + 1] ∗ · · · ∗ A[j] ）\n\n            储存结果到 B[i][j]\n\n    return B\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在内层循环中j是变化的&amp;#xff0c;但i在单次内层循环中保持不变&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["在一个嵌套循环中，把一个变量换成与之相等的另一个为什么结果会不对？", ["在一个冒泡排序算法中，i是等于j-1的，为什么在内层循环中把i换成j-1就出现了错误。", "\n", "这是用j-1的代码：", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "define", "   N   16", "\n", "typedef", "  ", "struct", "\n{  ", "char", "  num[", "10", "];\n   ", "int", "   s;\n} STREC;\n", "void", "  ", "fun", "( STREC  a[] )", "\n", "{\n  STREC tmp;\n  ", "int", " i,j;\n  ", "for", "(i = ", "0", "; i < N; i++)\n    ", "for", "(j = i+", "1", "; j < N; j++)\n    {   \n        ", "if", "(a[j", "-1", "].s<a[j].s)\n        {\n            tmp=a[j", "-1", "];\n            a[j", "-1", "]=a[j];\n            a[j]=tmp;\n        }\n    }\n\n}\n", "\n", "其排序结果为：", "\n", "用i的代码：", "\n", "int i,", "j;\n", "  for(i = ", "0", "; i < N; i++)", "\n    for(", "j ", "= i+", "1", "; j < N; j++)", "\n    {   \n        if(a[i].s<a[", "j].s)\n", "        {\n            tmp=a[i];\n            a[i]=a[", "j];\n", "            a[", "j]=tmp;\n", "        }\n    }\n", "\n", "其结果为"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;j&amp;#61;0,i&amp;#61;0,开始循环&amp;#xff0c;3与1交换&amp;#xff0c;3再与2交换&amp;#xff0c;遇到4时停止循环&amp;#61;&amp;#61;&amp;#61;谁跟你说遇到4的时候停止循环的呢&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;还会继续进行4和1的比较啊&amp;#xff0c;每一趟内循环的结果是将最大值移动到数组末尾&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c++中冒泡法有关for循环的一些小疑惑", ["\n", "如图，我对于这个冒泡法嵌套循环理解是：小的和大的交换，如果无法交换则终止小的for循环。", "1.但是我很疑惑，假设这里有一个一维数组b[i]={3,1,2,4,1}", "如果按照这个循环来讲，", "j=0,i=0,开始循环，3与1交换，3再与2交换，遇到4时停止循环，", "此时数组b[i]{1,2,3,4,1}。", "再次进入大层for循环，j=1,i=0,此时1<2直接退出循环了，那最终数组b[i]={1,2,3,4,1}。并未实现冒泡法所说的底层是最大的。这是为什么？", "2.其次，小层for循环的i<k-j-1是为什么？这样后面j增大时i不是永远都无法与最后一个就行交换了吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,i,j,i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["编程输出九九乘法表！", ["C语言", " （初学者）使用for语句（循环嵌套）编写九九乘法表    要求：简单、易懂、明了！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;计算个数的话那就是数学题了&amp;#xff0c;N&amp;#61;5个不同的数&amp;#xff0c;能够组合60个不同不重复数字的三位数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; member; &lt;span class=\"hljs-comment\"&gt;//不同数字的元素个数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; digit;&lt;span class=\"hljs-comment\"&gt;//想组合的位数;/&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input the Number of elements:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;member);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input digit :&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;digit);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; result&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ; i&amp;lt;digit;i&amp;#43;&amp;#43;){\n        result *&amp;#61; (member-i);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;所能组成的互不相同且无重复数字的三位数的个数为:%d&amp;#34;&lt;/span&gt;,result);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["求解C语言程序问题！非常感谢", ["统计由3 4 5 6 7五个数字所能组成的互不相同且无重复数字的三位数的个数，尽量避免使用循环嵌套，请问用三层for循环可以的话，怎么才能避免降低运算复杂度呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为数据类型有范围的。换成long long 类型。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n;\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; item;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n     &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; sum;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n        item&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n            item&amp;#61;item*j;\n        }\n        sum&amp;#61;sum&amp;#43;item;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;,sum);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["用嵌套循环求阶乘，为啥输入小一点的数是对的，到了十几就错了呢……", ["#include<stdio.h>", "\nint main()\n{\n    int i,n,item;\n    scanf(", "\"%d\"", ",&n);\n    double sum;\n    ", "if", "(n<0){\n        return 0;\n    }\n    ", "sum", "=0.0;\n    ", "for", "(", "i", "=1;i<=n;i++){\n        ", "item", "=1;\n        ", "for", "(int ", "j", "=1;j<=i;j++){\n            ", "item", "=item*j;\n        }\n        ", "sum", "=sum+item;\n    }\n    printf(", "\"%.0f\"", ",sum);\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The error states that the &lt;code&gt;$key&lt;/code&gt; variable that you passed into the for each isn't an array. For this to work the &lt;code&gt;player&lt;/code&gt; array would have to have arrays within it (i.e. be a multidimensional array), so the second &lt;code&gt;foreach&lt;/code&gt; can iterate through it.&lt;/p&gt;\n\n&lt;p&gt;If your player array doesn't have arrays within it, then you only need &lt;strong&gt;one&lt;/strong&gt; &lt;code&gt;foreach&lt;/code&gt; to loop through and then you can access the data using the index (i.e. &lt;code&gt;$key['pdga_number']&lt;/code&gt; instead of &lt;code&gt;$k['pdga_number']&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;For me to fully help though, I would need to know the contents of the &lt;code&gt;$player&lt;/code&gt; array.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I've just seen the example given, try doing a second &lt;code&gt;if(is_array($key)&lt;/code&gt; before calling the second foreach, i.e.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (is_array($player)) {\n    foreach($player as $key){\n        if(is_array($key)){\n            foreach($key as $k){             // &amp;lt;- this is line 103\n                echo \"&amp;lt;tr&amp;gt;\";\n                echo \"&amp;lt;td&amp;gt;\".$k['pdga_number'].\"&amp;lt;/td&amp;gt;\";\n                echo \"&amp;lt;td&amp;gt;\".$k['first_name'].\" \".$k['last_name'].\"&amp;lt;/td&amp;gt;\";\n                echo \"&amp;lt;td&amp;gt;\".$k['country'].\"&amp;lt;/td&amp;gt;\";\n                echo \"&amp;lt;td&amp;gt;\".$k['rating'].\"&amp;lt;/td&amp;gt;\";\n                echo \"&amp;lt;/tr&amp;gt;\";\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["PHP：从嵌套数组（json）创建HTML表但获取结果和“为foreach（）提供的无效参数”", ["\n\n", "I am trying to create a HTML table from an array that is obtained through api/json.", "\n\n", "It's a nested array (the actual data is nested within the session)", "\n\n", "Array\n(\n[sessid] => -hnkGi-k1rgwhnymkcScR0bom-RRKURn2S1pgMZoBX4\n[status] => 0\n[players] => Array\n    (\n        [0] => Array\n            (\n                [first_name] => Chris\n                [last_name] => Clausing\n                [pdga_number] => 31635\n                [rating] => 930\n                [year] => 2014\n                [class] => A\n                [gender] => M\n                [bracket] => Open\n                [country] => NL\n                [state_prov] => \n                [tournaments] => 11\n                [rating_rounds_used] => 36\n                [points] => 998\n                [prize] => 0.00\n            )\n\n        [1] => Array\n            (\n                [first_name] => Uwe Walter\n                [last_name] => Schlueter\n                [pdga_number] => 37788\n                [rating] => 902\n                [year] => 2014\n                [class] => A\n                [gender] => M\n                [bracket] => Master\n                [country] => NL\n                [state_prov] => \n                [tournaments] => 12\n                [rating_rounds_used] => 33\n                [points] => 970\n                [prize] => 0.00\n            )\n\n        [2] => Array\n            (\n                [first_name] => Mark\n                [last_name] => Steenhuis\n                [pdga_number] => 50574\n                [rating] => 859\n                [year] => 2014\n                [class] => A\n                [gender] => M\n                [bracket] => Master\n                [country] => NL\n                [state_prov] => \n                [tournaments] => 12\n                [rating_rounds_used] => 28\n                [points] => 678\n                [prize] => 0.00\n            )\n      )\n)\n", "\n\n", "And the warning mesages:", "\n\n", "Warning: Invalid argument supplied for foreach() in /home/surrealm/dvh/player_statistics.php on line 103\n\nWarning: Invalid argument supplied for foreach() in /home/surrealm/dvh/player_statistics.php on line 103\n", "\n\n", "See ", "http://vliegende-hollander.com/player_statistics.php?year=2014&class=A&gender=M&country=NL", " ", "\n\n", "As you can see i can extract the desired data, and create the HTML table from it.\nBut, I can not get rid of the two error messages.", "\n\n", "If i take away one of the foreach() i only get first character of first value only (in this case, the first character of the sessid).", "\n\n", "The actual bit of PHP i'm using to create the table is:", "\n\n", "<?\n\nif (is_array($player)) {\n foreach($player as $key){\n  foreach($key as $k){             // <- this is line 103\n   echo \"<tr>\";\n    echo \"<td>\".$k['pdga_number'].\"</td>\";\n    echo \"<td>\".$k['first_name'].\" \".$k['last_name'].\"</td>\";\n    echo \"<td>\".$k['country'].\"</td>\";\n    echo \"<td>\".$k['rating'].\"</td>\";\n    echo \"</tr>\";\n    }\n   }\n  }\n ?>\n", "\n\n", "Can anyone help me clean up this code, so i get rid of the two warnings?", "\n\n", "I'm not a full-time programmer, so it's probably just my not fully understanding the foreach() function.\nI usually extract and display data using MySQL, and while() loops instead.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-comment\"&gt;//输入&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &amp;#43;&amp;#43;j){\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i][j]);\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &amp;#43;&amp;#43;i){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &amp;#43;&amp;#43;j){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, a[i][j]);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言二维数组的输入与输出", ["如题，尝试过for循环的嵌套，但是不知道为什么，输入数值之后按enter只换行，不输出，希望有大师可以敲一下学习一下", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基本上是&amp;#xff0c;还要看你循环条件及中间的break条件&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于时间复杂度的问题", ["我想问一下如果for循环里嵌套一个while循环，那程序的时间复杂度是n的平方吗？假设数据规模都是n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以重新写下&amp;#xff0c;每个for循环都带上{}&amp;#xff0c;这样你就很容易看的懂了。&lt;br /&gt;这里是三层循环&amp;#xff0c;罗列了i,j,k的所有取值。&lt;br /&gt;111 112 113 ...119&lt;br /&gt;121 122 ...        129&lt;br /&gt;....&lt;br /&gt;191 192 193 ... 199&lt;br /&gt;...&lt;br /&gt;211 212         ...  219&lt;br /&gt;..&lt;br /&gt;991 992 ...           999&lt;br /&gt;到999就结束了&lt;/p&gt;\n&lt;p&gt;没带括号是因为一个for语句里面只有一个语句的话&amp;#xff0c;{}可以省略&lt;/p&gt;\n&lt;p&gt;多层循环肯定先执行内部的循环啊。因为程序都是顺序执行的呀&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["请问这个运算结果顺序是怎么看的呀，for语句这样写表达的是什么意思呀？", ["\n", "\n", "我不懂为啥是中间的先排，而且for后面没有跟花括号还是嵌套吗？循环的话是从哪里开始循环，不太懂呀！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考这个来做&amp;#xff0c;输出改下就行&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/yeluoyeqiushui/article/details/124655501\" id=\"textarea_1666940555879_1666940570273_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;输出数字金字塔&amp;#xff08;Python为例&amp;#xff09;_叶落夜秋水的博客-CSDN博客_python打印数字金字塔&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;使用Python输出数字金字塔一、目标二、分析三、编写思路1、循环控制当前行数2、输出空格3、输出数字4、控制换行四、补充完整代码一、目标生成如下格式的数字金字塔    1   121  12321 1234321123454321二、分析对结构进行分析&amp;#xff0c;可知共有前边空格和金字塔部分数字需要输出数字部分为对称结构每行数字最大值与当前行数一致对称的一半占位数目与当前行数一致三、编写思路1、循环控制当前行数使用循环控制当前行数&amp;#xff0c;在其中输出每行相应内容n &amp;#61; 5  # 这里&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/yeluoyeqiushui/article/details/124655501&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["一道有关#Python#的题，望专家解答", ["\n", "嵌套for循环怎么做啊，想做做这样的练习提升一下，发现自己有待提升"]], "Tag": "程序设计"}
{"Answer": "下面是我的代码，在没有打印的情况下在我机器上是1948ms\r\n[code]\r\n\t\tlong start = System.currentTimeMillis();\r\n\t\tint[] cubeArray = new int[1000];\r\n\t\tfor (int i = 0; i &lt; 1000; i++) {\r\n\t\t\tcubeArray[i] = i * i * i;\r\n\t\t}\r\n\t\tfor (int a = 1; a &lt;= 999; a++) {\r\n\t\t\tfor (int b = a; b &lt;= 999; b++) {\r\n\t\t\t\tfor (int c = b; c &lt;= 999; c++) {\r\n\t\t\t\t\tfor(int d=c+1;d&lt;=999;d++)\r\n\t\t\t\t\t\tif(cubeArray[a]+cubeArray[b]+cubeArray[c]==cubeArray[d]);\r\n//\t\t\t\t\t\t\tSystem.out.printf(\"a=%d,b=%d,c=%d,d=%d\\n\",a,b,c,d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(System.currentTimeMillis()-start);\r\n\t}", "Konwledge_Point": "for循环的嵌套", "Question": ["求一道java面试算法题 如下", ["求A³+B³+C³=D³   ABCD∈(0-999) 求ABCD", "\n :( 当时想到的最笨的方法就是for循环的嵌套，从效率方面考虑，请教其它算法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这百分之零的采纳率&amp;#xff0c;谁会给你回答&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["帮我看一下这题 速度解决java了", ["使用两个嵌套的for循环编程输出如下图形，写出代码 :", "\n", "*", "\n", "\n", "\n", "\n", "\n", "\n", "这个题怎么办"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为C&amp;#43;&amp;#43;的库更大。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于#for#的问题，如何解决？", ["今天上课讲循环嵌套", "有个问题1+1+2+1+2+3+1+2+3+4+...+1+2+3+...+100的问题", "讲了个", "#include<stdio.h>", "int main()", "{", "    int sum,i,j;", "    for(j=1,sum=0;j<=100;j++)", "        for(i=1;i<=j;i++)", "            sum=sum+i;", "    printf(\"sum=%d\",sum);", "}", "\n", "输出大小: 127.931640625 KiB", "编译时间: 1.98s", "但是我觉得可以不用", "#include<bits/stdc++.h>", "int main()", "{", "  int sum1,sum2,i;", "  for(sum1=0,i=1,sum2=0;i<=100;i++)", "  {", "  ", "sum1", "=sum1+i", ";", "\n  ", "sum2", "=sum2+sum1", ";", "\n", "\n", "  }", "  printf(\"%ld\",sum2);", "} ", "输出大小: 1.83457660675049 MiB", "编译时间: 2.16s", "但是他的大小大大增加了", "为什么呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每一次k的循环s都会赋给1&amp;#xff0c;然后重新计算&amp;#xff0c;也就是我们只需要考虑最后一次k循环的结果即可&amp;#xff0c;因为后面有两个k&amp;#43;&amp;#43;&amp;#xff0c;所以k的取值2&amp;#xff0c;4&amp;#xff0c;到6就会跳出循环&amp;#xff0c;所以考虑k&amp;#61;4的循环即可&amp;#xff0c;此时j&amp;#61;k&amp;#61;4,s&amp;#61;1,j从4到6&amp;#xff0c;循环两次&amp;#xff0c;分别是4&amp;#xff0c;5&amp;#xff0c;也就是s&amp;#61;1&amp;#43;4&amp;#43;5&amp;#61;10,好久没学过额&amp;#xff0c;我这只菜鸟也不知道对不对&amp;#xff0c;大哥带带我&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["一个c语言选择结构问题", ["嵌套循环 我不太懂", "我知道最后答案是 s＝s+j  j的值是两次for循环能得出来  我不知道j的值怎么求出来  希望大神能详细一点"]], "Tag": "程序设计"}
{"Answer": "其实，我觉得你应该是不会看内外层的嵌套，一般都是从最内层开始看 ，\r\n\r\n\r\ni  j    k\r\n\r\n所以一上来就是000   001  \r\n\r\n之后k都循环完了，再往外就是j = 1 的情况，而这时候i = 0 \r\n\r\n所以结果是  010  011 以此类推\r\n\r\nj的情况结束了，i = 1 情况就要开始了\r\n\r\n而j   k  还是要从0 开始算 ，所以是\r\n\r\n1 0 0   1 0 1\r\n\r\n注意此时变化的依然是最内层，所以  接下来就是\r\n\r\nj = 1 的变化\r\n\r\n1 1 0  1 1 1\r\n，你要用debug仔细看一下就会了，即便是我在分析，如果不看的你的图说，也还是可能做错的，\r\n\r\n总看看就不会出错了~~~希望对你有用", "Konwledge_Point": "for循环的嵌套", "Question": ["这道简单的编程题里，为啥运行结果会是这个？", ["\n以上题，结果是怎么出来的呢？？", "\n\n", "老师说for的嵌套循环语句时一笔带过，之前重点讲了道for的例题，", "\n但我发现，用这道例题的逻辑去思考嵌套循环语句，完全行不通嘛！im crazy！！求好心人解答..."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;tArray[i].tName &amp;#61; teacherName &amp;#43; nameSeed[i];&lt;br /&gt;这一行在VS2010上编译都通过不了&amp;#xff0c;string&amp;#43;char不支持&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c++写结构体嵌套   引发了异常: 读取访问权限冲突。 _Pnext 是 0xD0。", ["是在第二个for循环那报错了，但是不知道是什么错误，求指导", "\n", "\n", "struct", " Student\n{\n    ", "string", " stuName;\n    ", "int", " score;\n};\n\n", "struct", " Teacher\n{\n    ", "string", " tName;\n    Student stuArray", "[", "5", "]", ";\n};\n\nvoid allocate", "Space(Teacher ", "tArray", "[] , ", "int", " ", "len", ")", "\n{\n    ", "string", " teacherName = ", "\"Teacher_\"", ";\n    ", "string", " studentName = ", "\"Student_\"", ";\n    ", "string", " nameSeed = ", "\"ABCDE\"", ";\n    ", "for", " (", "int", " i = ", "0", "; i < len; i++)\n    {\n        tArray", "[", "i", "]", ".tName = teacherName + nameSeed", "[", "i", "]", ";\n\n        ", "for", " (", "int", " j = ", "0", "; j < ", "5", "; j++)", "//这里报错了", "\n        {\n            tArray", "[", "i", "]", ".stuArray", "[", "j", "]", ".stuName = studentName + nameSeed", "[", "j", "]", ";\n            tArray", "[", "i", "]", ".stuArray", "[", "j", "]", ".score = ", "100", ";\n        }\n    }\n}\n\n\nvoid print", "Info( Teacher ", "tArray", "[], ", "int", " ", "len", ")", "\n{\n    ", "for", " (", "int", " i = ", "0", "; i < len; i++)\n    {\n        cout << ", "\"教师姓名:\"", " << tArray", "[", "i", "]", ".tName << endl;\n        ", "for", " (", "int", " j = ", "0", " ; j < ", "5", " ; j++)\n        {\n            cout << ", "\"\\t学生姓名:\"", " << tArray", "[", "i", "]", ".stuArray", "[", "j", "]", ".stuName << ", "\"  分数: \"", " << tArray", "[", "i", "]", ".stuArray", "[", "j", "]", ".score << endl;\n        }\n    }\n\n}\n\n", "int", " main", "()", "\n{\n    Teacher tArray", "[", "3", "]", ";\n    ", "//传入参数", "\n    ", "int", " len = sizeof(tArray)", " / ", "sizeof(tArray", "[", "0", "]", ");\n    allocate", "Space(", "tArray", ", ", "len", ")", ";\n    ", "//打印信息", "\n    print", "Info(", "tArray", ", ", "len", ")", ";\n\n    system(", "\"pause\"", ");\n    return ", "0", ";\n}\n\n```c++\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "这个问题很简单，你加个连接缓冲池就OK了。因为你写了连接关闭，但是数据库连接没有立马关闭，需要等待一小段时间才会关闭。", "Konwledge_Point": "for循环的嵌套", "Question": ["mysql查询大量数据异常", ["The driver was unable to create a connection due to an inability to establish the client portion of a socket.", "\n\n", "This is usually caused by a limit on the number of sockets imposed by the operating system. This limit is usually configurable. ", "\n\n", "For Unix-based platforms, see the manual page for the 'ulimit' command. Kernel or system reconfiguration may also be required.", "\n数据库没问题，每次查询完执行：", "\nif(rs!=null){", "\n            try {", "\n                rs.close();", "\n            } catch (Exception e) {", "\n                // TODO: handle exception", "\n            }", "\n        }", "\n        //关闭资源[先开后闭];", "\n        if(ps!=null){", "\n            try {", "\n                ps.close();", "\n            } catch (SQLException e) {", "\n                // TODO Auto-generated catch block", "\n                e.printStackTrace();", "\n            }", "\n            ps=null;//使用垃圾回收.", "\n        }", "\n        if(ct!=null){", "\n            try {", "\n                ct.close();", "\n            } catch (SQLException e) {", "\n                // TODO Auto-generated catch block", "\n                e.printStackTrace();", "\n            }", "\n            ct=null;", "\n        }", "\n在一个方法里有个循环要反复去查询数据库，每次都是调用工具类去查询，也就是每次都执行了上面的关闭。可当查询到4000次左右时就抛出了上面的异常。请帮忙看看，万分感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT&lt;br /&gt;看一下注释&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;char s[]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;abaacda&amp;#34;&lt;/span&gt;,*p,*q,ch&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;\nint n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 使用指针 p 遍历字符串 s&amp;#xff0c;并将其指向字符串末尾的 &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt; 字符\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(p&amp;#61;q&amp;#61;s;*p!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;p&amp;#43;&amp;#43;); \n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 使用指针 q 遍历字符串 s\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(*q)\n{   \n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 如果当前字符是字符 &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*q&amp;#61;&amp;#61;ch)\n    {\n        n&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 记录字符 &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; 的个数\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 如果已经找到第三个字符 &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 将指针 p 移动到倒数第二个字符的位置\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p&amp;gt;&amp;#61;q)*(p&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#61;*p--;\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 将当前字符替换为字符 &lt;span class=\"hljs-string\"&gt;&amp;#39;H&amp;#39;&lt;/span&gt;\n            *q&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;H&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 退出循环\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }    \n    }\n    q&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 指针 q 向后移动\n}\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["2021年河北省专接本c语言真题求解", ["不理解这段代码中的for循环有什么意思，怎么还循环嵌套上了，还有中间圈起来的那段代码事有什么功能？", "\n", "#include<stdio.h>", "\nint main()\n{\n    char s[]=", "\"abaacda\"", ",*p,*q,", "ch", "=", "'a'", ";\n    int ", "n", "=0;\n    ", "for", "(", "p", "=q=s;*p!='\\0';p++); \n        ", "while", "(*q)\n        {    ", "if", "(*", "q", "==ch)\n            {\n                n++;\n                ", "if", "(", "n", "==3)\n                {\n                    ", "while", "(p>=q)*(p+1)=*p--;\n                    *", "q", "=", "'H'", ";\n                    break;\n                }    \n            }\n            q++;\n        }\n        printf(", "\"%s\"", ",s);\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;list_a&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[[&lt;span class=\"hljs-string\"&gt;&amp;#39;桔子&amp;#39;&lt;/span&gt;,20]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;香蕉&amp;#39;&lt;/span&gt;,12]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;苹果&amp;#39;&lt;/span&gt;,33]&lt;/span&gt;]\nlist_b&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;桔子&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;香蕉&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;哈密瓜&amp;#39;&lt;/span&gt;]&lt;/span&gt;\ndict_a&amp;#61;dict(list_a)\nres &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[[i,dict_a.get(i,0)]&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_b]\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(res)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于python两个列表计算的问题！", ["问题遇到的现象和发生背景", "\n", "有两个列表", "list_a=[[桔子，20],[香蕉，12],[苹果，33]]", "list_b=[桔子，香蕉，哈密瓜]", "求结果为[[桔子，20],[香蕉，12]，[哈密瓜，0]]", "\n", "这个应该怎么 弄？", "\n", "尽量不用或者少用for循环，数据量太大的时候嵌套两三层for循环计算太慢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那就把你的代码中if分支的break去掉呀&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["#python   列表中嵌套字典，怎么才能打印出value值相同的字典", ["问题遇到的现象和发生背景", "\n", "想取出两本平凡的世界，但是用for循环遍历只能取出一个，并且想要取出刘慈欣的两本书", "\n", "问题相关代码，请勿粘贴截图", "\n", "    ", "print", "(", "'**************图书管理系统**************'", ")\nlibrary = [{", "'name'", ":", "'三体'", ",", "'author'", ":", "'刘慈欣'", ",", "'price'", ":24,", "'number'", ":5},\n           {", "'name'", ":", "'流浪地球'", ",", "'author'", ":", "'刘慈欣'", ",", "'price'", ":26,", "'number'", ":5}\n    ,{", "'name'", ":", "'平凡的世界'", ",", "'author'", ":", "'路遥'", ",", "'price'", ":108,", "'number'", ":5},\n           {", "'name'", ":", "'平凡的世界'", ",", "'author'", ":", "'鲁瑶'", ",", "'price'", ":108,", "'number'", ":5}\n    ,{", "'name'", ":", "'活着'", ",", "'author'", ":", "'余华'", ",", "'price'", ":20,", "'number'", ":5}]\nname_list = []\nauthor_list = []\n", "for", " i ", "in", " library:\n    name_list.append(i.", "get", "(", "'name'", "))\n    author_list.append(i.", "get", "(", "'author'", "))\n\n\n", "print", "(name_list)\n", "print", "(author_list)\n", "while", " 1:\n    ", "print", "(", "'1.借书\\n2.还书\\n3.查询\\n4.书库\\n5.退出'", ")\n    choice = int(input(", "'请选择功能：'", "))\n\n    ", "if", " choice == 1:\n        i_name = input(", "'请输入所要借阅的书：'", ")\n        n_number = name_list.count(i_name)\n        ", "for", " i ", "in", " range(0,n_number):\n            ", "for", " book ", "in", " library:\n                ", "if", " book.", "get", "(", "'name'", ") == i_name:\n                    ", "print", "(", "'该书的相关信息为：\\n书名：{}\\t作者：{}\\t价格：{}元\\t库存量：{}本'", ".format(book.", "get", "(", "'name'", "), book.", "get", "(", "'author'", "), book.", "get", "(", "'price'", "),book.", "get", "(", "'number'", ")))\n                    break\n            ", "else", ":\n                ", "print", "(", "'书库中暂未收录该书'", ")\n\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "想要实现按照书名取书和按照作者名取书，并且全部取出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/67716047125619.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Java  while语句问题", ["我想输出一天的分钟和小时，第一次用的for循环能正常输出0-23时0-59分", "\n", "第二次想着用while语句", "只能输出0时0-59分", "我想问嵌套的while语句执行完之后跳出while循环是不是带着外面的while语句一起跳出了所以没有执行外面的while语句"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for i in range(1,10):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for j in range(1,i&amp;#43;1):&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        print(str(j)&amp;#43;&amp;#34;X&amp;#34;&amp;#43;str(i)&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;str(j*i)&amp;#43;&amp;#34;\\t&amp;#34;,end&amp;#61;&amp;#34;&amp;#34;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    print()&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["我这段有关九九乘法口诀表的代码，到底是哪里错了？", ["\n", "                     16.demo.py（使用嵌套的", "for", "循环语句打印九九乘法口快表）py:c:UsersV\n                    ", "File", " ", "Edit", " ", "Format", " ", "Run", " Options ", "Window", " ", "Help", "\n                    Loriin ", "range", "（1.10)\n                          torjinr\n LPython3.64Shell\n                                       (1.1+1)\n                                                         STR(1*J)+1\n                                                     #换行  ", "File", " ", "Edit", " ", "Shell", " Debug\n Python 3.6.4(3.6.4:0\n    ", "copyright", ".             CE\n                                                               CSyntaxErron\n                                                                                   stringlitera\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/778525363136181.jpg\" /&gt;&lt;/p&gt;&lt;br /&gt;把这两句互换下位置即可。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么c语言的两个题目，相同结构代码下，递归和循环的打印顺序一个相同，一个相反。", ["最近在自学c，环境是vs2019，联系的时候发现了一个问题", "两个题目，相同结构代码下，递归和循环的打印顺序一个相同，一个相反。", "帮忙解惑一下，感谢~", "\n", "十进制转二进制代码", "\n", "#", "include", "<stdio.h>", "\n", "//-------------------------二进制的转换-------------------------", "\n", "//                      >>>递归转二进制<<<", "\n", "int", " ", "bit2", "(", "unsigned", " ", "int", " num)", "\n", "{\n    ", "if", " (!num) \n    { \n        ", "return", " num;\n    }\n    ", "bit2", "(num / ", "2", ");\n    ", "printf", "(", "\"%d\"", ", num % ", "2", "); \n}\n\n", "//                      >>>循环转二进制<<<", "\n", "int", " ", "rbit2", "(", "unsigned", " ", "int", " num)", "\n", "{\n    ", "int", " i_count = ", "0", ";\n    ", "char", " c_output01[", "10", "] = { ", "0", " };\n\n    ", "for", " (; i_count < ", "10", " && num != ", "0", "; i_count++)\n    {\n        c_output01[i_count] = num % ", "2", "; \n        num /= ", "2", ";                                    \n    }\n\n    i_count--;                                                 \n\n    ", "for", " (; i_count >= ", "0", "; i_count--)                           \n    {\n        ", "printf", "(", "\"%d\"", ", c_output01[i_count]);\n    }\n\n    ", "return", " num;\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "unsigned", " ", "int", " i_num1 = ", "0", ";\n    ", "printf", "(", "\"-------------------------二进制的转化-------------------------\\n\"", ");\n    ", "printf", "(", "\"请输入一个小于1024的数字:\\n\"", ");\n    ", "scanf_s", "(", "\"%d\"", ",&i_num1);\n\n    ", "printf", "(", "\"\\n嵌套转二进制:\\t\"", ");\n    ", "bit2", "(i_num1);\n\n    ", "printf", "(", "\"\\n递归转二进制:\\t\"", ");\n    ", "rbit2", "(i_num1);\n\n    ", "return", " ", "0", ";\n}\n\n", "\n", "\n", "十进制获取数位上数值的代码", "\n", "#", "include", "<stdio.h>", "\n", "//-------------------------获取数位数字-------------------------", "\n", "//                      >>>递归获取数位<<<", "\n", "int", " ", "getDigit", "(", "int", " num)", "\n", "{\n    ", "if", " (!num)\n    {\n        ", "return", " num;\n    }\n    ", "printf", "(", "\"%d\\t\"", ", num % ", "10", ");\n    ", "getDigit", "(num / ", "10", ");\n}\n\n", "//                      >>>循环获取数位<<<", "\n", "int", " ", "rgetDigit", "(", "int", " num)", "\n", "{\n    ", "int", " i_count = ", "0", ";\n    ", "char", " c_output[", "10", "] = { ", "0", " };\n\n    ", "for", " (; i_count < ", "10", " && num != ", "0", "; i_count++)\n    {\n        c_output[i_count] = num % ", "10", ";\n        num /= ", "10", ";\n    }\n\n    i_count--;\n\n\n    ", "for", " (; i_count >= ", "0", "; i_count--)\n    {\n        ", "printf", "(", "\"%d\\t\"", ", c_output[i_count]);\n    }\n\n    ", "return", " num;\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i_num = ", "0", ";\n    ", "printf", "(", "\"-------------------------获取数位数字-------------------------\\n\"", ");\n    ", "printf", "(", "\"请输入一个数字:\\t\\n\"", ");\n    ", "scanf_s", "(", "\"%d\"", ", &i_num);\n\n    ", "printf", "(", "\"\\n递归获取数位\\t\"", ");\n    ", "getDigit", "(i_num);\n    ", "printf", "(", "\"\\n循环获取数位\\t\"", ");\n    ", "rgetDigit", "(i_num);\n\n    ", "return", " ", "0", ";\n}\n\n", "\n", "\n", "辛苦了！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次&amp;#xff1a;j &amp;#61; 3&amp;#xff0c;i &amp;#61; 3&amp;#xff0c;x &amp;#61; 2; x &amp;lt; j &amp;#61; true x &amp;#61; 2 &amp;#43; 1  --&amp;gt;  x &amp;lt; j &amp;#61; flase  i--&lt;/p&gt;\n\n&lt;p&gt;第二次&amp;#xff1a;j &amp;#61; 5&amp;#xff0c;i &amp;#61; 2&amp;#xff0c;x &amp;#61; 2; x &amp;lt; j &amp;#61; true x &amp;#61; 2 &amp;#43; 1 &amp;#61; 3  --&amp;gt;  x &amp;lt; j &amp;#61; true  x &amp;#61;3 &amp;#43; 1 &amp;#61;  4  --&amp;gt;  x &amp;lt; j &amp;#61; flase  i--&lt;/p&gt;\n\n&lt;p&gt;......&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["求大佬解释一下这个怎么算的！！！！", ["public class Qiu {", "\n    public static void main (string []args) {", "\n    int j=0;", "\n    for (int i=3;i>0;i--){", "\n    j+=i;", "\n   int x=2;", "\n   while(x<j){", "\n   x+=1;", "\n System.out.print(x)", "\n\n", "输出结果为33453456；第二个3怎么算出来的，这个for循环和while循环嵌套有什么注意的，我只算出了第一个3，后面的就不知道怎么来的，求大佬解释！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的结果集id 都是一样的&amp;#xff0c;要动态  &amp;#39;i&amp;#39; &amp;#43; i&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于#html#的问题，如何解决？", ["问题遇到的现象和发生背景", "\n", "html里面script脚本里面的嵌套for循环只遍历到第一个结果集", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "$.post('login',\n                function (data) {\n                    for (var i=0;i<data.length;i++){\n                        s =\"<span class=\"hljs-tag\"><", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", ">", "<", "hr", " ", "width", "=", "'650'", " ", "size", "=", "'1px'", " ", "color", "=", "'green'", ">", "</", "th", ">", "</", "tr", ">", "\"+\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", " ", "align", "=", "'left'", ">", "\" + data[i].theme + \"", "</", "th", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", ">", "<", "br", ">", "</", "th", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "td", " ", "colspan", "=", "'2'", " ", "align", "=", "'left'", ">", "\"  + data[i].details + \"", "</", "td", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", ">", "<", "br", ">", "</", "th", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "td", " ", "colspan", "=", "'2'", " ", "align", "=", "'left'", ">", "\" + data[i].times + \"", "</", "td", ">", "<", "td", " ", "align", "=", "'right'", ">", "<", "button", " ", "type", "=", "'button'", " ", "onclick", "=", "'todelete((\"+data[i].name+\"),(\"+data[i].id+\"))'", ">", "\"+\"删除\"+\"", "</", "button", ">", "</", "td", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", " ", "align", "=", "'left'", ">", "<", "button", "  ", "type", "=", "'button'", " ", "onclick", "=", "'comment(\"+data[i].id+\")'", ">", "\"+\"评论\"+\"", "</", "button", ">", "</", "th", ">", "</", "tr", ">", "\" +\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", ">", "<", "hr", " ", "width", "=", "'650'", " ", "size", "=", "'1px'", " ", "color", "=", "'green'", ">", "</", "th", ">", "</", "tr", ">", "\"+\n                            \"", "<", "tr", ">", "<", "th", " ", "colspan", "=", "'2'", ">", "<", "div", " ", "id", "=", "'i'", ">", "</", "th", ">", "</", "div", ">", "</", "tr", ">", "\"\n                        $('#tab').append(s);\n                        var userloData1 = {pid:data[i].id};\n                        $.post('comm',userloData1,\n                        function (data) {\n                            for (var j=0;j<data.length;j++){\n\n                                m=\"<span class=\"hljs-tag\"><", "tr", ">", "<", "th", ">", "\" + data.name + \"", "</", "th", ">", "<", "th", ">", "\" + ':' + \"", "</", "th", ">", "<", "th", ">", "\" + data[j].comment + \"", "</", "th", ">", "\" + \"", "<", "th", ">", "<", "br", ">", "</", "th", ">", "</", "tr", ">", "\";\n                                $('#i').append(m);\n                            }\n                        },'json');\n                    }\n                },'json');\n\n", "\n", "运行结果及报错内容", "\n", "\n", "\n", "我想要达到的结果", "\n", "我想要的结果是每一个第一个for循环的结果集下面紧跟着这二个for循环的结果集，而不是第二个for循环的所有结果集都在第一个for循环的第一个结果集下面，有没有学长学姐帮帮我"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x, s;\n\n    s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (x &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;x &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\n    {\n        s &amp;#43;&amp;#61; x;\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奇数和为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;, s);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2.不能&amp;#xff0c;C语言不支持在for循环中初始化变量&lt;/p&gt;\n&lt;p&gt;3.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hun, ten, ind, n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( n&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; n&amp;lt;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; n&amp;#43;&amp;#43; )  &lt;span class=\"hljs-comment\"&gt;/*整数的取值范围*/&lt;/span&gt;\n    {\n        hun &amp;#61; n / &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n        ten &amp;#61; (n-hun*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        ind &amp;#61; n % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;#61;&amp;#61; hun*hun*hun &amp;#43; ten*ten*ten &amp;#43; ind*ind*ind)  &lt;span class=\"hljs-comment\"&gt;/*各位上的立方和是否与原数n相等*/&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d  &amp;#34;&lt;/span&gt;, n);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n   \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;4.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num1, num2;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (num1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; num1 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; num1&amp;#43;&amp;#43;)\n    {\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (num2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; num2 &amp;lt;&amp;#61; num1; num2&amp;#43;&amp;#43;)\n        {\n\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%-3d&amp;#34;&lt;/span&gt;, num1, num2, num1*num2);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    }\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["大家再看看这四个题吧", ["1题", "请阅读下面的程序，在横线处填写正确的代码，该程序的功能是：求1-10的奇数和。", "#include <stdio.h>", "\n", "int main()", "{", "\n", "int x, s;", "\n", "s=0;", "\n", "for (x=1; x<=10; _______)", "\n", "{", "\n", "\n", "}", "\n", "printf(\"奇数和为：%d\", s);", "\n", "return 0;", "\n", "}", "\n", "2题", "\n", "请阅读下面的程序，分析程序是否能编绎通过并正确运行，如果不能，说明原因；如果能，请写出运行结果。", "#include <stdio.h>", "\n", "int main()", "{", "\n", "for (int i = 0; i <= 2; i++)", "\n", "{", "\n", "for (int j = 0; j <= i; j++)", "\n", "{", "\n", "printf(\"(%d,%d)\\n\", i, j);", "\n", "}", "\n", "}", "\n", "return 0;", "\n", "}", "\n", "3题", "编写程序，打印出所有的水仙花数。所谓水仙花数是指一个三位数，其各位数字立方和等于该数本身。例如153是一个水仙花数。", "\n", "提示：", "\n", "1）先把一个数的每个位上的数字分离出来      ", "\n", "2）所有的三位数，可以用循环语句去遍历", "\n", "4题", "编写程序，打印出九九乘法表；", "\n", "提示:", "\n", "每一行的列数都不相同，可以用循环嵌套"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;#64;&lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; off\n&lt;span class=\"hljs-built_in\"&gt;setlocal&lt;/span&gt; enabledelayedexpansion\n&lt;span class=\"hljs-built_in\"&gt;cd&lt;/span&gt; /d &amp;#34;%~dp0&amp;#34;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;%%i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; (*) &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; (\n    &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt; &amp;#34;name&amp;#61;&lt;span class=\"hljs-variable\"&gt;%%~&lt;/span&gt;ni&amp;#34;\n    &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt; &amp;#34;ext&amp;#61;&lt;span class=\"hljs-variable\"&gt;%%~&lt;/span&gt;xi&amp;#34;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &amp;#34;&lt;span class=\"hljs-variable\"&gt;!name:~20!&lt;/span&gt;&amp;#34; &lt;span class=\"hljs-keyword\"&gt;neq&lt;/span&gt; &amp;#34;&amp;#34; (\n        &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt; &amp;#34;newname&amp;#61;&lt;span class=\"hljs-variable\"&gt;!name:~0,15!&lt;/span&gt;&amp;#34;\n        &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt; &amp;#34;num&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#34;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;exist&lt;/span&gt; &amp;#34;&lt;span class=\"hljs-variable\"&gt;!newname!&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;!ext!&lt;/span&gt;&amp;#34; (\n            &lt;span class=\"hljs-built_in\"&gt;ren&lt;/span&gt; &amp;#34;&lt;span class=\"hljs-variable\"&gt;%%i&lt;/span&gt;&amp;#34; &amp;#34;&lt;span class=\"hljs-variable\"&gt;!newname!&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;!ext!&lt;/span&gt;&amp;#34;\n        ) &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; (\n            &lt;span class=\"hljs-keyword\"&gt;call&lt;/span&gt; :check_name\n            &lt;span class=\"hljs-built_in\"&gt;ren&lt;/span&gt; &amp;#34;&lt;span class=\"hljs-variable\"&gt;%%i&lt;/span&gt;&amp;#34; &amp;#34;&lt;span class=\"hljs-variable\"&gt;!newname!&lt;/span&gt;_&lt;span class=\"hljs-variable\"&gt;!num!&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;!ext!&lt;/span&gt;&amp;#34;\n        )\n    )\n)\n&lt;span class=\"hljs-built_in\"&gt;pause&lt;/span&gt;&amp;amp;&lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;\n\n:check_name\n &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;exist&lt;/span&gt; &amp;#34;&lt;span class=\"hljs-variable\"&gt;!newname!&lt;/span&gt;_&lt;span class=\"hljs-variable\"&gt;!num!&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;!ext!&lt;/span&gt;&amp;#34; (\n            &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt; /a &amp;#34;num&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#34;\n            &lt;span class=\"hljs-keyword\"&gt;call&lt;/span&gt; :check_name\n        )\n&lt;span class=\"hljs-keyword\"&gt;goto&lt;/span&gt; :eof\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["如何使用批处理批量截短文件名？", ["我的某个目录里下（当前目录）有很多文件，有些文件名太长了", "由于没学过batch ,来当伸手党了，顺便学习，谢谢！", "\n", "求一个脚本，在当前目录执行，将目录下所有文件名长度超过20的，取前15位重命名。", "如果某个文件前15位仍有重复，则按照每个文件 _1,_2,_3依次排列", "比如a_1,a_2,b_1,b_2这样。", "\n", "研究了半天，嵌套循环写不明白……，外层用for遍历每个文件。", "内层循环我想要使用while，结果被告知必须用goto ,可是每当我用goto ,又会跳出外层循环，麻烦提供一个脚本，感谢！"]], "Tag": "程序设计"}
{"Answer": "https://www.v2ex.com/t/632023", "Konwledge_Point": "for循环的嵌套", "Question": ["麻烦问下我的这段代码为什么运行结果跟我想的不一样，求指导？", ["主要问题是在下面的for嵌套循环的地方，按我的理解代码运行出来不应该是那样的结果，但是我不明白它为何会运行出来那样的结果，代码如下：", "\n\n", "unit=input('请输入单元号：')\nfloor=int(input('请输入楼层：'))\nend_number=[]\nfirst_room_info={}\nwhile True:\n    room_end_input=input('请输入户室尾数：（01，02的形式）：')\n    end_number.append(room_end_input)\n    room_number=int('1'+room_end_input)\n    direction=input('请输入房间朝向（南北输入1，东西输入2）：')\n    area=input('请输入房间面积（单位平米）：')\n    first_room_info[room_number]=[direction,area]\n    choice=input('是否输入下一个户室，y为继续输入，其他选择退出：')\n    if choice=='y':\n        pass\n    else:\n        break\nroom_info={}\nnext_room_info={}\nroom_info[1]=first_room_info\nfor a in range(2,floor+1):\n    for i in range(len(end_number)):\n        number=str(a)+end_number[i]\n        info=first_room_info[int('1'+end_number[i])]\n        next_room_info[number]=info\n    room_info[a]=next_room_info\n    print(next_room_info)\n    print(room_info)\n", "\n\n", "当我输入相应的信息后，终端得到的结果如下：", "\n\n", "注意标红线的地方，相当于在执行a为3的时候把已经保存在room_info字典里的数据用新得到的数据给替换了，但是我理解他这个for循环的嵌套不应该这么执行啊，应该是这样子的结果啊，如下图：", "\n\n", "这样子的话才应该是我觉得合理的结果，希望能得到大佬的讲解，不胜感激！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你指哪段嵌套循环啊&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["c语言：有一组两位数，其十位取值范围为2、4、6、8，个位取值范围为7、4、1。请编写程序，从小到大输出所有满足要求的两位数。", ["代码如下：", "#include <stdio.h>", "{int main()", "\n", "int a[3],b[3];\nint i,j,m,n,result;\nint temp1,temp2;\nprintf(", "\"请输入3个整数：\"", ");\n", "for", "(", "i", "=0;i<3;i++)\n{\n    scanf(", "\"%d\"", ",&a[i]);\n}\n", "for", "(", "i", "=0;i<2;i++)\n{\n    ", "for", "(", "j", "=0;j<2-i;j++)\n    {\n        ", "if", "(a[j]>a[j+1])\n        {\n            ", "temp1", "=a[j];\n            a[j]=a[j+1];\n            a[j+1]=temp1;\n        }\n    }\n}\nprintf(", "\"排列后顺序为：\"", ");\n", "for", "(", "i", "=0;i<3;i++)\n{\n    printf(", "\"%d \"", ",a[i]);\n}\nprintf(", "\"\\n\"", ");\nprintf(", "\"请输入4个整数：\"", ");\n", "for", "(", "m", "=0;m<4;m++)\n{\n    scanf(", "\"%d\"", ",&b[m]);\n}\n", "for", "(", "m", "=0;m<3;m++)\n{\n    ", "for", "(", "n", "=0;n<2-m;n++)\n    {\n        ", "if", "(b[n]>b[n+1])\n        {\n            ", "temp2", "=b[n];\n            b[n]=b[n+1];\n            b[n+1]=temp2;\n        }\n    }\n}\nprintf(", "\"排列后顺序为：\"", ");\n", "for", "(", "m", "=0;m<4;m++)\n{\n    printf(", "\"%d \"", ",b[m]);\n}\nprintf(", "\"\\n\"", ");\n", "for", "(", "m", "=0;m<=3;m++)\n{\n    ", "for", "(", "i", "=0;i<=2;i++)\n    ", "result", "=a[i]+b[m]", "*10", ";\n    printf(", "\"%d\"", ",result);\n    printf(", "\" \"", ");\n}\nreturn 0;\n", "\n", "}", "\n", "为什么我的嵌套循环只循环外层啊"]], "Tag": "程序设计"}
{"Answer": "定时器当中做一个标志位，时间到了置为true 在While判断这个标志位，来实现跑马灯。。", "Konwledge_Point": "for循环的嵌套", "Question": ["关于定时计数编写延时函数应用于跑马灯的问题,单片机初学者求解", ["单片机C语言跑马灯定时计数器_cror_和_crol_ 是P0.0、P0.1、P0.2三口各接一个电阻再接高电平，之前用普通循环嵌套写的延时函数可用，而这次用定时计数器延时2s的延时函数，配上原先的主程序就出问题了，发现_crol_和_cror_移位函数出问题了，求改错，下面是我的代码:", "\n#include \"reg51.h\"", "\n#include \"intrins.h\"", "\n#define uint unsigned int", "\n#define uchar unsigned char", "\nvoid DELAYms( uint x )", "\n{", "\nuint t;", "\n t=x/50;", "\nwhile(1)", "\n{", "\nif(TF0==1)", "\n  { ", "\n  t--;", "\n  TF0=0;", "\n  if(t==0)", "\nbreak;", "\nTH0=0x3c;", "\n    TL0=0xb0;", "\n  }", "\n  }", "\n}", "\n\n", "void main(void)", "\n{", "\n uchar i;", "\nTMOD=0x01;", "\n  TH0=0x3c;", "\n  TL0=0xb0;", "\n  TR0=1;", "\nP0=0xfe;", "\n while(1)", "\n { ", "\n for(i=0;i<2;i++)", "\n   {", "\nDELAYms(2000);", "\n   P0=_crol_(P0,1);", "\n   }", "\n for(i=0;i<2;i++)", "\n   {", "\nDELAYms(2000);", "\n   P0=_cror_(P0,1);", "\n   }", "\n }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,N,j;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入打印层数:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;N);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入起始字符:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;c);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;N;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,c);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;isalpha&lt;/span&gt;(c&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n            c&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;isupper&lt;/span&gt;(c))\n                c&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                c&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["根据问题写出一个程序", ["编写一个带有嵌套for语句的程序，以显示如下模式。", "A.", "BB", "CCC", "DDDD", "﻿提示：", "（1） 外环数为打印行数；", "（2） 内环数是每行打印的字母数，这个数字与外环的循环变量之间的关系是什么？", "（3） 字母变化的规则是什么？", "Write a program with nested for statements to display a pattern as follows.", "A", "BB", "CCC", "DDDD", "﻿Hint:", "(1) The number of outer loop is the number of printed rows;", "(2) The number of inner loop is the number of printed letters on each row, and what is the relationship between this number and the loop variable of the outer loop?", "(3) What are the rules of the change of letters?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为n&amp;#61;1的时候i是range(0,1)&amp;#xff0c;所以取值只能为0&amp;#xff0c;而j就是range(0,0)&amp;#xff0c;不会进入循环&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/784118913546170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["组合数C(0,0)没有返回值？", ["def", " ", "fact", "(", "n", "):\n    ", "if", " n==", "1", " ", "or", " n==", "0", ":\n        a = ", "1", "\n    ", "else", ":\n        a = n * fact(n-", "1", ")", "#嵌套循环，依次往后乘", "\n    ", "return", " a\n", "def", " ", "pailie", "(", "n,m", "):\n    a = fact(n)//fact(n-m)\n    ", "return", " a\n", "def", " ", "zuhe", "(", "n,m", "):\n    a = pailie(n,m)//fact(m)\n    ", "return", " a\n", "print", "(zuhe(", "0", ",", "0", "))\nn = ", "eval", "(", "input", "())\n", "for", " i ", "in", " ", "range", "(", "0", ",n):\n    ", "for", " j ", "in", " ", "range", "(", "0", ",i):\n        ", "print", "(zuhe(i,j))\n\n\n\n", "\n", "为什么我n=1输入没有返回值", "而zuhe（0,0）就有呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;iteration &amp;#61; int(iterative_number)&lt;br /&gt;iterative_number_change &amp;#61; 0 &amp;#43; iteration&lt;br /&gt;typing_value &amp;#61; str(prefix) &amp;#43; str(iterative_number_change)&lt;br /&gt;traversal &amp;#43;&amp;#61; 1&lt;br /&gt;iterative_number_change &amp;#43;&amp;#61; 1&lt;br /&gt;问题出在这几行上。你的iterative_number_change 一直都是定值。影响这个主要是这五行的第二行。它的值一直是定值&amp;#xff0c;因为iteration没有变过。iteration一直是interative_number&amp;#xff0c;而且iterative_number也是定值。这样一推理&amp;#xff0c;你的这个number change就一直在while的一次循环开始的时候就变成了0&amp;#43;iteration&amp;#xff0c;所以这个typingvale得到的这个值也是一样的。尽管后面iterative number change&amp;#43;&amp;#61;1了&amp;#xff0c;但是在typing value之前有一个让他变成定值的语句。你只需要把我这里放的这五句 的前两句放到while循环之前就好&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于 openpyxl + pyqt5按钮 自动办公录入 用户输入的数值无法迭代，如何解决？", ["问题遇到的现象和发生背景", "\n", "项目首先用pyqt5制作了一个交互界面，并且赋予了pushbutton用于激活程序，数个lineEdit来获取需要写入Excel的数据。", "需要写入的数据由用户决定从上到下输入几行，数据以字符串+数字组成，使用while循环希望实现数字的部分可被迭代，但始终只能输出最初用户键入的值。", "\n", "问题相关代码，请勿粘贴截图", "\n", "def writing():", "    first_title = ui.lineEdit_1.text()", "    prefix = ui.lineEdit_2.text()", "    iterative_number = ui.lineEdit_3.text()", "    executions_number = ui.lineEdit_4.text()", "    password = ui.lineEdit_5.text()", "    traversal = 0", "    traversal_column = sheet1.max_column", "    while traversal < int(executions_number) + 1:", "        iteration = int(iterative_number)", "        iterative_number_change = 0 + iteration", "        typing_value = str(prefix) + str(iterative_number_change)", "        traversal += 1", "        iterative_number_change += 1", "        account_writing = sheet1.cell(traversal, int(traversal_column))", "        account_writing.value = typing_value", "        print(iterative_number_change)", "        account_writing = sheet1.cell(1, int(traversal_column + 2))", "        first_title_2 = str(first_title)", "        account_writing.value = first_title_2", "        wb.save('test.xlsx')", "\n", "if ", "name", " == '", "main", "':", "    import sys", "\n", "app = RPSM.QApplication(sys.argv)\napp.setStyle(", "'Fusion'", ")\nMainWindow = QtWidgets.QMainWindow()\nui = Ui_MainWindow()\nui.setupUi(MainWindow)\nui.pushButton.clicked.connect(lambda: writing())\nMainWindow.show()\nsys.", "exit", "(app.exec_())\n", "\n", "运行结果及报错内容", "\n", "希望实现的换行和行输入都没有问题，但iterative_number_change并没有在预期中被迭代，始终保持最初键入的数值。", "\n", "我的解答思路和尝试过的方法", "\n", "我的基础十分的不扎实，最初甚至尝试了使用for循环，后来在意识到for循环存在的迭代器问题之后转用了while循环，暂时有想是否while嵌套能解决问题，不过感觉会变得更加复杂和代码量增加，所以还没有尝试，由于日常需求所以想要完成这个项目。", "\n", "我想要达到的结果", "\n", "解决代码typing_value的值iterative_number_change的数字无法迭代的问题，并大致能在用户点击pushbutton后如下向excel内录入数据。", "prefix321", "prefix322", "prefix323", "prefix324"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您好&amp;#xff01;我们都知道在微磁模拟中&amp;#xff0c;有限差分法会将整个空间容器(atlas)使用网格(mesh)划分为尺寸相同的单元格&amp;#xff08;单元格的中心位置表示空间坐标&amp;#xff09;&amp;#xff0c;接着根据单元格的空间坐标来划分不同的区域&amp;#xff0c;于是可以方便的根据区域名称来为一个范围内的单元格分配磁性参数&amp;#xff0c;注意&amp;#xff0c;对于无磁性的单元格&amp;#xff08;即缺陷&amp;#xff09;&amp;#xff0c;只需将其饱和磁化强度(Ms)设置为0即可。对于初始磁化的设置也有讲究&amp;#xff1a;在进行动态模拟之前&amp;#xff0c;我们需要将磁体系弛豫到亚稳态&amp;#xff0c;并将该状态保存成一个文件作为后续模拟时的基态磁化状态。&lt;/p&gt;\n&lt;p&gt;对于问题中的核壳模型来说&amp;#xff0c;可以看到是由6X6X6个晶粒结构组成的微磁模型。&lt;br /&gt;首先&amp;#xff0c;假设这个模型中只有一个晶粒&amp;#xff0c;想必题主对于划分单个晶粒的核壳区域是没有任何问题的&amp;#xff0c;无非就是使用一个 if 语句去判断每一个单元格的空间坐标是属于核区域还是壳区域&amp;#xff0c;由此所有单元格便分为了两类&amp;#xff0c;接着便可以根据单元格所在的区域来整体分配磁性参数&amp;#xff01;&lt;br /&gt;那么&amp;#xff0c;对于这种单个晶粒重复排列多次的模型来说&amp;#xff0c;只需利用一个 “ 取余 ” 的运算&amp;#xff0c;便可以将其他晶粒中的单元格空间坐标换算到单个晶粒中&amp;#xff0c;然后和上面情况一样处理即可&amp;#xff0c;示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-shell\"&gt;\n##########################划分模型的物理尺寸和单元格尺寸##########################\n\n#容器的尺寸&amp;#xff0c;即&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;个晶粒组成的微磁模型总尺寸&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;nm\nParameter atlas_x &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\nParameter atlas_y &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\nParameter atlas_z &lt;span class=\"hljs-number\"&gt;144&lt;/span&gt;\nset atlas_x [expr {$atlas_x * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset atlas_y [expr {$atlas_y * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset atlas_z [expr {$atlas_z * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\n\n#单个晶粒的尺寸&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;nm\nParameter grain_x &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\nParameter grain_y &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\nParameter grain_z &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\nset grain_x [expr {$grain_x * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset grain_y [expr {$grain_y * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset grain_z [expr {$grain_z * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\n\n#晶粒的核尺寸&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;nm\nParameter coreRegion_x &lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;\nParameter coreRegion_y &lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;\nParameter coreRegion_z &lt;span class=\"hljs-number\"&gt;22.5&lt;/span&gt;\nset coreRegion_x [expr {$coreRegion_x * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset coreRegion_y [expr {$coreRegion_y * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset coreRegion_z [expr {$coreRegion_z * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\n\n#晶粒的壳厚度&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;nm\nParameter shellRegion_thick &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;\nset shellRegion_thick [expr {$shellRegion_thick * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\n\n#根据每一个单元格的坐标分配到核区域&amp;#xff0c;和壳区域\nproc setRegions { x y z } {\n    global grain_x grain_y grain_z\n    global coreRegion_x coreRegion_y coreRegion_z\n    global shellRegion_thick\n    \n    #将整个微磁模型所有单元格的位置坐标都换算到相对于一个晶粒内的坐标\n    #即rx&amp;#xff0c;ry&amp;#xff0c;rz的值都被限制在一个晶粒尺寸范围内\n    #如此&amp;#xff0c;只需按照单个晶粒的核壳分配规则&amp;#xff0c;就可实现按规律将整个微磁模型所有单元格分配至所在的核或壳区域\n    set rx [expr {fmod($x,$grain_x)}]\n    set ry [expr {fmod($y,$grain_y)}]\n    set rz [expr {fmod($z,$grain_z)}]\n    \n    #单元格在单个晶粒中核壳的分配规则\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; {$rx &amp;gt;&amp;#61; $shellRegion_thick &amp;amp;&amp;amp; $rx &amp;lt;&amp;#61; ($shellRegion_thick &amp;#43; $coreRegion_x) &amp;amp;&amp;amp;\n        $ry &amp;gt;&amp;#61; $shellRegion_thick &amp;amp;&amp;amp; $ry &amp;lt;&amp;#61; ($shellRegion_thick &amp;#43; $coreRegion_y) &amp;amp;&amp;amp;\n        $rz &amp;gt;&amp;#61; $shellRegion_thick &amp;amp;&amp;amp; $rz &amp;lt;&amp;#61; ($shellRegion_thick &amp;#43; $coreRegion_z) \n    } {\n    #分配属于核区域的单元格\n    return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    } else {\n    #分配壳的区域\n    return &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    }\n    #其余位置点定义为universe\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n}\n\n#定义容器\nSpecify Oxs_ScriptAtlas:atlas [subst {\n    comment &lt;span class=\"hljs-string\"&gt;&amp;#34;使用脚本函数定义模型&amp;#34;&lt;/span&gt;\n    xrange { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; $atlas_x }\n    yrange { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; $atlas_y }\n    zrange { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; $atlas_z }\n    regions {coreRegion shellRegion}\n    script_args rawpt\n    script setRegions\n}]\n\n#单元格尺寸&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;nm&amp;#xff08;单元格尺寸小于交换长度Lex&amp;#xff09;\nParameter cellsize_x &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;\nParameter cellsize_y &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;\nParameter cellsize_z &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;\nset cellsize_x [expr {$cellsize_x * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset cellsize_y [expr {$cellsize_y * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\nset cellsize_z [expr {$cellsize_z * &lt;span class=\"hljs-number\"&gt;1e-9&lt;/span&gt;}]\n\n#定义网格尺寸\nSpecify Oxs_RectangularMesh:mesh [subst {\n    cellsize {$cellsize_x $cellsize_y $cellsize_z}\n    atlas :atlas\n}]\n\n##########################划分模型的物理尺寸和单元格尺寸##########################\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接着就是根据区域名称分配磁性参数的示例&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-shell\"&gt;\n##########################指定材料的磁性参数和磁性能量##########################\n\n#定义一个标量场对象来为不同区域分配交换系数\nSpecify Oxs_AtlasScalarField:exchange {\n    atlas :atlas\n    default_value &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    values {\n    coreRegion &lt;span class=\"hljs-number\"&gt;13e-12&lt;/span&gt;\n    shellRegion &lt;span class=\"hljs-number\"&gt;13e-12&lt;/span&gt;\n}\n}\n#定义交换能&amp;#xff0c;其中的交换系数是逐单元格指定的\nSpecify Oxs_ExchangePtwise {\n    A :exchange\n}\n\n#定义退磁能\nSpecify Oxs_Demag {}\n\n#定义一个标量场对象来为不同区域分配标量值&amp;#xff08;单轴各向异性常数&amp;#xff09;\nSpecify Oxs_AtlasScalarField:anisotropy_K1 { \n    atlas :atlas\n    default_value &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    values {\n    coreRegion &lt;span class=\"hljs-number\"&gt;3.6e6&lt;/span&gt; \n    shellRegion &lt;span class=\"hljs-number\"&gt;4.5e6&lt;/span&gt;\n}\n}\n#定义一个矢量场对象来为不同区域分配矢量值&amp;#xff08;各向异性的方向&amp;#xff09;\nSpecify Oxs_AtlasVectorField:anisotropy_axis {\n  atlas :atlas\n    values {\n    coreRegion {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}\n    shellRegion {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}\n}\n}\n#定义单轴各向异性能\nSpecify Oxs_UniaxialAnisotropy {\n  K1 :anisotropy_K1\n  axis :anisotropy_axis\n}\n\n#定义核区域的饱和磁化强度Ms&amp;#xff08;&lt;span class=\"hljs-number\"&gt;1.31&lt;/span&gt;T&amp;#61;&lt;span class=\"hljs-number\"&gt;1041450&lt;/span&gt;A/m&amp;#xff09;\nParameter coreRegion_Ms &lt;span class=\"hljs-number\"&gt;1041450&lt;/span&gt;\n#定义壳区域的饱和磁化强度Ms&amp;#xff08;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;A/m&amp;#xff09;\nParameter shellRegion_Ms &lt;span class=\"hljs-number\"&gt;1041450&lt;/span&gt;\n#定义一个标量场对象来设置不同区域的饱和磁化强度\nSpecify Oxs_AtlasScalarField:regions_Ms [subst {\n    atlas :atlas\n    comment &lt;span class=\"hljs-string\"&gt;&amp;#34;只有核和壳有磁性&amp;#xff0c;其他区域无磁性&amp;#34;&lt;/span&gt;\n    default_value &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    values {\n    coreRegion $coreRegion_Ms\n    shellRegion $shellRegion_Ms\n    }\n}]\n\n#定义阻尼系数\nproc setAlpha { x y z } {\n    #####TODO#####\n    return &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;\n}\n#定义一个标量场对象来设置不同区域的阻尼系数\nSpecify Oxs_ScriptScalarField:regions_alpha {\n    script setAlpha\n    script_args rawpt \n    atlas :atlas\n}\n\n##########################指定材料的磁性参数和磁性能量##########################\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;后面省略外加磁场&amp;#xff0c;演化器和驱动器&amp;#xff0c;保存文件相关的设置。。。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["oommf核壳结构建模的一些问题", ["\n", "oommf建模结构如图", "\n", "问题描述", "\n", "1.用大小晶粒嵌套结构定义多个晶粒", "2.在一个mif文件中同时设置不同区域不同各向异性能（未解决）", "3.各项异性能如何使各易轴随机取向（未解决）", "4.for循环定义6", "6", "6个晶胞", "\n", "只写了一部分的代码", "\n", "set", " pi [", "expr", " {", "4", "*atan(", "1.0", ")}]\n", "set", " mu0 [", "expr", " {", "4", "*", "$pi", "*", "1e-7", "}]\n\nParameter cellsize ", "2", "；\n", "set", " cellsize [", "expr", " {", "$cellsize", "*", "1e-9", "}]；\n\nParameter RandomAnisotropy ", "0.0", "；\n\nparameter length ", "24e-9", "\nparameter grainsize1 ", "24e-9", "\nparameter grainsize2 ", "21e-9", "\nparameter boundarysize ", "1.5e-9", "\n\nSpecify Oxs_BoxAtlas:atlas {\n  xrange {", "0", " ", "6", "*grainsize1}\n  yrange {", "0", " ", "6", "*grainsize1}\n  zrange {", "0", " ", "6", "*grainsize1}\n  name grain1\n}\n\n", "for", " {", "set", " k ", "0", "} {", "$k", "<", "6", "} {", "incr", " k} {\n  ", "for", " {", "set", " j ", "0", "} {", "$j", "<", "6", "} {", "incr", " j} {\n    ", "for", " {", "set", " i ", "0", "} {", "$i", "<", "6", "} {", "incr", " i} {\n        ", "set", " atlas_string_grain2 [", "subst", " {Oxs_BoxAtlas {\n              xrange {[", "expr", " {", "$i", "*", "$length", "+boundarysize}] \n                      [", "expr", " {", "$i", "*", "$length", "+", "$grainsize2", "+boundarysize}]}\n              yrange {[", "expr", " {", "$j", "*", "$length", "+boundarysize}] \n                      [", "expr", " {", "$j", "*", "$length", "+", "$grainsize2", "+boundarysize}]}\n              zrange {[", "expr", " {", "$k", "*", "$length", "+boundarysize}] \n                      [", "expr", " {", "$k", "*", "$length", "+", "$grainsize2", "+boundarysize}]}\n              name   {grain2_", "$i", "$j", "$k", "}\n         }}]\n        ", "lappend", " grain2_list ", "\"atlas\"", " ", "$atlas_string_grain2", "\n\nSpecify Oxs_MultiAtlas:boundary [", "subst", " {\n  ", "$grain2_list", "\n  atlas grain1\n  xrange {", "0", " ", "6", "*grainsize1}\n  yrange {", "0", " ", "6", "*grainsize1}\n  zrange {", "0", " ", "6", "*grainsize1}\n}]\n\n\n\n\nSpecify Oxs_RectangularMesh:mesh [", "subst", " {\n  cellsize {", "$cellsize", " ", "$cellsize", " ", "$cellsize", "}\n  atlas :atlas\n}]\n", "\n", "不知道自己的解决方案是不是有问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以考虑用dictionary记录每个父节点对应的节点&amp;#xff0c;不存在就创建&amp;#xff0c;key为前3列的组合依次&amp;#xff0c;代码如下&amp;#xff0c;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/083525128036169.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;Imports&lt;/span&gt; System.Data\n&lt;span class=\"hljs-keyword\"&gt;Imports&lt;/span&gt; System.Collections.Generic\n\n&lt;span class=\"hljs-keyword\"&gt;Public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Class&lt;/span&gt; Form1\n    &lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; Form1_Load(sender &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Object&lt;/span&gt;, e &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; EventArgs) &lt;span class=\"hljs-keyword\"&gt;Handles&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;MyBase&lt;/span&gt;.Load\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; data &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; DataTable &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; DataTable\n        data.Columns.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;全宗号&amp;#34;&lt;/span&gt;)\n        data.Columns.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;分类号&amp;#34;&lt;/span&gt;)\n        data.Columns.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;年度&amp;#34;&lt;/span&gt;)\n        data.Columns.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;期限&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;100&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2016&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;30年&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;100&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2016&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;永久&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;100&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;G&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2016&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;30年&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;100&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;G&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2017&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;永久&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;101&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2016&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;30年&amp;#34;&lt;/span&gt;)\n        data.Rows.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;101&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;2016&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;永久&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; kv &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; Dictionary(&lt;span class=\"hljs-keyword\"&gt;Of&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;, TreeNode) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; Dictionary(&lt;span class=\"hljs-keyword\"&gt;Of&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;, TreeNode)\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; key0, key1, key2 &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;&amp;#39;Dim pNode As TreeNode&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; parentNode &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; TreeNode &amp;#61; &lt;span class=\"hljs-keyword\"&gt;Me&lt;/span&gt;.TreeView1.Nodes.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;Q_M_ATREE&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;文书档案&amp;#xff08;目录树&amp;#xff09;&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; node &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; TreeNode\n        &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Each&lt;/span&gt; row &lt;span class=\"hljs-keyword\"&gt;In&lt;/span&gt; data.Rows\n            key0 &amp;#61; row(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;).ToString()\n            key1 &amp;#61; row(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;amp; row(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            key2 &amp;#61; row(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;amp; row(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;amp; row(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\n            &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Not&lt;/span&gt; kv.ContainsKey(key0) &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;1级节点&lt;/span&gt;\n                node &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; TreeNode\n                node.&lt;span class=\"hljs-keyword\"&gt;Text&lt;/span&gt; &amp;#61; row(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;).ToString()\n                parentNode.Nodes.Add(node)\n                kv.Add(key0, node)\n            &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n\n            &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Not&lt;/span&gt; kv.ContainsKey(key1) &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;2级节点&lt;/span&gt;\n                node &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; TreeNode\n                node.&lt;span class=\"hljs-keyword\"&gt;Text&lt;/span&gt; &amp;#61; row(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).ToString()\n                kv(key0).Nodes.Add(node)\n                kv.Add(key1, node)\n            &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;&amp;#39;添加3级节点&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Not&lt;/span&gt; kv.ContainsKey(key2) &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;2级节点&lt;/span&gt;\n                node &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; TreeNode\n                node.&lt;span class=\"hljs-keyword\"&gt;Text&lt;/span&gt; &amp;#61; row(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).ToString()\n                kv(key1).Nodes.Add(node)\n                kv.Add(key2, node)\n            &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;&amp;#39;4级节点&lt;/span&gt;\n            node &amp;#61; &lt;span class=\"hljs-built_in\"&gt;New&lt;/span&gt; TreeNode\n            node.&lt;span class=\"hljs-keyword\"&gt;Text&lt;/span&gt; &amp;#61; row(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;).ToString()\n            kv(key2).Nodes.Add(node)\n        &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Class&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["【急】如何根据表格数据动态创建treeview节点", ["数据库数据表", "\n", "\n", "通过SQL查询生成了一份数据表如图", "\n", "在根据这个表自动生成目录树，达到常用数据的快速筛选查询，达到如下效果", "\n", "\n", "Private", " ", "Sub", " creat_tree()\n        ", "Dim", " parentNode ", "As", " TreeNode = ", "Me", ".MLTREE_TreeView.Nodes.Add(", "\"Q_M_ATREE\"", ", DA_TYPETreeView.SelectedNode.", "Text", " & ", "\"（目录树）\"", ") ", "'生成根节点", "\n        ", "Dim", " Tables ", "As", " ", "New", " DataTable(", "\"mytables\"", ")\n        mydataset = ", "New", " DataSet\n        ", "'查询数据库，查询字段根据用户设置生成", "\n        SQL_STR = ", "\"SELECT \"", " & GDML_TREE_str(", "0", ") & ", "\" ,\"", " & GDML_TREE_str(", "1", ") & ", "\",\"", " & GDML_TREE_str(", "2", ") & ", "\",\"", " & GDML_TREE_str(", "3", ") & ", "\" FROM [sddazh].[dbo].[T_GDDA_GDFILE]    WHERE ARCHIVE_TYPE_ID='\"", " & DA_TYPE & ", "\"' AND IS_DELETE=0 group by \"", " & GDML_TREE_str(", "0", ") & ", "\",\"", " & GDML_TREE_str(", "1", ") & ", "\",\"", " & GDML_TREE_str(", "2", ") & ", "\",\"", " & GDML_TREE_str(", "3", ") & ", "\" having count(\"", " & GDML_TREE_str(", "2", ") & ", "\")>0 \"", " ", "'order by cast([FOND_CODE]as int),[vchar_1],[YEAR_CODE]\"", "\n\n        mydataset.Tables.Add(Tables)\n\n        con.ConnectionString = My.Settings.sddazhConnectionString\n        Adapter = ", "New", " SqlDataAdapter(SQL_STR, con)\n        Adapter.Fill(Tables)\n        MYFOLDER_DV = ", "New", " DataView(Tables)\n      ", "'创建节点", "\n        ", "If", " MYFOLDER_DV.Count > ", "0", " ", "Then", "\n            ", "'行循环", "\n            ", "For", " ", "Each", " rr ", "As", " DataRowView ", "In", " MYFOLDER_DV\n                ", "Dim", " nodeId ", "As", " ", "String", " = ", "\"\"", " ", "'用于存储节点名称name", "\n                ", "'列循环，即查询字段数，也就是treeview的节点深度", "\n                ", "For", " i ", "As", " ", "Integer", " = ", "0", " ", "To", " GDML_TREE_str.Length - ", "1", "\n                    ", "Dim", " NewNode ", "As", " TreeNode = ", "New", " TreeNode\n                    nodeId = nodeId & rr.Item(GDML_TREE_str(i))\n                    NewNode.", "Text", " = rr.Item(GDML_TREE_str(i))\n                    NewNode.Name = nodeId\n                    NewNode.Tag = nodeId\n                    ", "If", " parentNode.Nodes.ContainsKey(NewNode.Name) = ", "False", " ", "Then", " ", "'判断节点name是否存在", "\n                        parentNode.Nodes.Add(NewNode)\n                        parentNode = NewNode\n                    ", "Else", "\n                        parentNode = NewNode ", "'如果存在，把此节点作为父节点", "\n                    ", "End", " ", "If", "\n                  ", "Next", "\n\n                parentNode = MLTREE_TreeView.Nodes(", "0", ") ", "' 返回根节点", "\n\n            ", "Next", "\n        ", "End", " ", "If", "\n    ", "End", " ", "Sub", "\n\n", "\n", "思考过递归，但写了很久没写出来，后面用循环嵌套写，功能不完善，请各位指点迷津。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;line1和line2是list&lt;br /&gt;list是可变值类型&lt;br /&gt;所以你在给形参append或者del的时候会直接改变实参&lt;br /&gt;但是如果你给形参执行等号赋值&amp;#xff0c;就是将它们重新指向了新的地址&amp;#xff0c;那么就跟实参无关了&lt;br /&gt;其实抛开形参实参不谈&amp;#xff0c;你执行下面的代码试试就知道了&lt;br /&gt;a&amp;#61;[]&lt;br /&gt;b&amp;#61;a&lt;br /&gt;b.append(1)&lt;br /&gt;print(a)&lt;br /&gt;你会发现你修改的是b&amp;#xff0c;但是a也变了&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["为何python里没有使用global函数但是函数里对于变量的操作影响到了外面", ["Hi 大家好。我是一个高中生，没系统学习过python，靠着学过的一些c++的皮毛和看论坛还有一些实践学的python", "最近在写竞赛编程题的时候遇到了这么一个问题", "__", "我在自己定义的函数内的局部变量（好像是叫这个）和函数外面的变量取了相同的名字（我知道不应该这么做，但是我想着理论上应该没什么问题），除了algo1函数外所有调用全局变量的形式都是写在函数后面的括号里而不是用global进行的操作。可是当我在第一个副函数里操作完函数引入变量以后，line1和line2这两个函数变成了全局变量，我在函数里对他们进行的操作直接影响了函数外面的部分", " __", "我另起了一个程序，极度简单的复刻了一下重要的操作，可是并没有什么用。", "我一开始在想会不会是因为一开始写的时候用了global，导致下面编译了以后的操作会直接影响，可是在我删除了以后还是这样。就很奇怪", " __", "为了方便理解我的史山代码，这里是题目：", "给予两串字符串形式的句子，要求把第一串字符串中每一个单词都和第二串字符串中的每一个单词做比较，如果存在于第二串字符串中则把这个单词记下来，并且把第二串中的这个单词的部分删掉。", "然后为第二串字符串比较第一串字符串，运用相同的规则", "例：第一串中的单词“jump”存在于第二串中的单词“overjump”，那么记住单词“jump”，把第二串中的”overjump“中的”jump“部分删除，留下”over“", " __", "由于第一次为了让别人看懂我的代码写注释不知道应该怎么写，可能写的有点迷惑，见谅", "代码下面符了一张报错的内容", "\n", "def", " ", "algo1", "(", "line1,line2", "):          ", "#主要的大函数，用来套住两次比较", "\n  ", "#global line1                         这里是原来写的global的位置", "\n  ", "#global line2                         这里是原来写的global的位置", "\n  ans1=FtoS(line1,line2)      ", "#这个函数用来比较第一个和第二个", "\n  ", "print", "(", "\"////\"", ")\n  ans2=StoF(line1,line2)      ", "#这个函数用来比较第二个和第一个，内容本质上没什么区别，可能有逻辑错误", "\n  ", "return", " ans1,ans2\n\n", "def", " ", "FtoS", "(", "line1,line2", "):        ", "#这个函数用来比较第一个和第二个", "\n  result=[]       ", "#储存相同单词", "\n  ", "for", " i ", "in", " line1:\n    ", "for", " pos,j ", "in", " ", "enumerate", "(line2):    ", "#循环嵌套来比较", "\n      ", "if", " ", "len", "(i)<=", "len", "(j):    ", "#排除单词1比单词2多的情况，避免超出下标", "\n        ans=judge(i,j)    ", "#将比较的返回值存进去", "\n        ", "if", " ans!=j:            ", "#如果不相等，说明单词2有更新，那么进行操作", "\n          ", "# print(type(i))", "\n          result.append(i)   ", "#把这个单词添加进result内", "\n          ", "# print(ans)", "\n          line2[pos]=ans     ", "#把list内的这个单词替换掉", "\n          ", "break", "\n  ", "return", " result\n\n", "def", " ", "StoF", "(", "line1,line2", "):   ", "#本质上和前面那个一模一样，只是把两个list的位置换了一下", "\n  result=[]\n  ", "print", "(line2)\n  ", "for", " i ", "in", " line2:\n    ", "print", "(i)\n    ", "for", " pos,j ", "in", " ", "enumerate", "(line1):\n      ", "if", " ", "len", "(i)<=", "len", "(j):\n        ans=judge(i,j)\n        ", "if", " ans!=j:\n          result.append(i)\n          line1[pos]=ans\n          ", "break", "\n  ", "return", " result\n\n", "def", " ", "judge", "(", "s1,s2", "):    ", "#用来比较单词", "\n  ", "print", "(s1,s2)    ", "#debug用", "\n  l1=[i ", "for", " i ", "in", " s1]   ", "#将单词1变成字符", "\n  l2=[i ", "for", " i ", "in", " s2]   ", "#将单词1变成字符", "\n  ", "# print(l1,l2)", "\n  ans=", "''", "    ", "#整合字符用", "\n  stt=", "0", "     ", "#记录状态", "\n  pos=", "0", "   ", "#记录位置", "\n  ", "for", " i ", "in", " ", "range", "(", "len", "(l2)):   ", "#先通过循环来寻找有没有相同的字母，有并定位。但是这个不完善，可能会出现无法识别的情况，但是先不去考虑", "\n    ", "# print(l1[0],l2[i])", "\n    ", "if", " l2[i]==l1[", "0", "]:\n      pos=i   ", "#定位", "\n      ", "break", "\n  ", "for", " i ", "in", " ", "range", "(", "len", "(l1)):   ", "#定位后判断是不是后面的是不是都一样。这个应该写在前面那个循环break的位置，但是能跑起来我就别去动了", "\n    ", "if", " l2[pos+i]!=l1[i]:\n      stt=", "1", "    ", "#如果发现有位置不一样，那么状态变量变成1", "\n      ", "break", "\n  ", "if", " stt==", "0", ":   ", "#如果状态变量是0，说明找到了", "\n    ", "for", " i ", "in", " ", "range", "(", "len", "(l1)):\n      l2.pop(pos)   ", "#将相同的部分去除", "\n  ", "for", " i ", "in", " l2:   ", "#整合", "\n    ans+=i\n  ", "return", " ans   ", "#返回值", "\n\n\n\n", "# line1=input(\"1:\")", "\n", "# line2=input(\"2:\")", "\nline1=", "'The quick brown fox did jump over a log'", "                ", "#句子1", "\nline2=", "'The brown rabbit quickly did outjump the fox'", "         ", "#句子2", "\nline1=line1.split(", "' '", ")      ", "#把句子分隔成单词", "\nline2=line2.split(", "' '", ")      ", "#把句子分隔成单词", "\n", "print", "(algo1(line1,line2))       ", "#调用主函数并输出", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主的写法之错误是显而易见的&amp;#xff1a;当递归到数值型元素时&amp;#xff0c;继续递归&amp;#xff0c;就会执行for i in l这一句&amp;#xff0c;此时l不是列表&amp;#xff0c;而是数值了&amp;#xff0c;会抛出异常。&lt;/p&gt;\n&lt;p&gt;浙大这本Python程序设计也够烂的&amp;#xff0c;纯粹是误人子弟&amp;#xff0c;居然能写出type(l) &amp;#61;&amp;#61; type(1)、type(l) &amp;#61;&amp;#61; type([])这样的语句&amp;#xff0c;真给浙大抹黑。两个if看起来也怪怪的&amp;#xff0c;毫无逻辑上的美感。&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python程序设计浙大版 6-4 列表数字元素加权求和", ["如下：", "输入一个嵌套列表，根据层次，求列表元素的加权和。第一层：元素值", "1，第二层：元素值", "2 ,以此类推！", "输入", "[1,2,[3,4,[5,6],7],8]", "输出", "72", "\n", "我的做法是", "\n", "def f(l, ", "p", "):\n    s = ", "0", "\n    for i in l:\n        if ", "type", "(i) == ", "type", "(", "1", "):\n            s += i*p\n        if ", "type", "(i) == ", "type", "([]):\n            p += ", "1", "\n            s += ", "f", "(i, p)\n    return s\n\nl = ", "eval", "(", "input", "())\n", "print", "(", "f", "(l, ", "1", "))\n", "\n", "正确做法是：", "\n", "def f(l, ", "p", "):\n    s = ", "0", "\n    if ", "type", "(l) == ", "type", "(", "1", "):\n        s += p*l\n    if ", "type", "(l) == ", "type", "([]):\n        p += ", "1", "\n        for i in l:\n            s += ", "f", "(i, p)\n    return s\n\nl = ", "eval", "(", "input", "())\n", "print", "(", "f", "(l, ", "0", "))\n\n", "\n", "请问这两种做法有什么区别？为什么我把循环写在外面就是错的？"]], "Tag": "程序设计"}
{"Answer": "SWT里有ProgressBar这个控件呀\r\n\r\n创建的时候\r\n\r\nprivate ProgressBar createProgressBar(Composite parent) {\r\n  ProgressBar progressBar = new ProgressBar(parent, SWT.SMOOTH);\r\n  progressBar.setMinimum(0); // 最小值\r\n  progressBar.setMaximum([b]armsize[/b]);// 最大值\r\n  return progressBar;\r\n}\r\n\r\n\r\n然后最外层循环每次调用\r\n\r\nprogressBar.setSelection(a);\r\n\r\n\r\narmsize最好大于100，如果觉得进度条动的粒度太大，就用最大值 armsize*bodysize的方法，然后在第二个循环里setSelection(a*armsize + b)\r\n\r\n还是不行就最大值armsize*bodysize*headsize ，在第三个循环里setSelection(a*armsize*bodysize + b*bodysize + c)\r\n\r\n依次类推....", "Konwledge_Point": "for循环的嵌套", "Question": ["JAVA  SWT怎么开一个进度条（其中有具体要求）", ["[code=\"java\"]", "\npublic class SearchEquipmentDao{", "\n    XMLDao xml=new XMLDao();", "\n    private int armsize;", "\n    private int bodysize;", "\n    private int headsize;", "\n    private int legsize;", "\n    private int wstsize;", "\n    private List armList=new ArrayList();", "\n    private List bodyList=new ArrayList();", "\n    private List headList=new ArrayList();", "\n    private List legList=new ArrayList();", "\n    private List wstList=new ArrayList();", "\n    private List equipmentList=new ArrayList();", "\n    public List getEquipmentList() {", "\n        return equipmentList;", "\n    }", "\n    public void init(Skill skill){", "\n        armList=xml.getArm(skill);", "\n        bodyList=xml.getBody(skill);", "\n        headList=xml.getHead(skill);", "\n        legList=xml.getLeg(skill);", "\n        wstList=xml.getWst(skill);", "\n        armsize=armList.size();", "\n        bodysize=bodyList.size();", "\n        headsize=headList.size();", "\n        legsize=legList.size();", "\n        wstsize=wstList.size();", "\n    }", "\n    public SearchEquipmentDao(Skill skill){", "\n        this.init(skill);", "\n        boolean isequipment;", "\n        int[] SID=xml.getSIDByName(skill.getSkillname());", "\n        int[] skillNum=skill.getSkillnum();", "\n        for(int a=0;a<armsize;a++){", "\n            for(int b=0;b<bodysize;b++){", "\n                for(int c=0;c<headsize;c++){", "\n                    for(int d=0;d<legsize;d++){", "\n                        for(int e=0;e<wstsize;e++){", "\n                            Equipment equipment=new Equipment(armList.get(a),bodyList.get(b),headList.get(c),legList.get(d),wstList.get(e),SID,skillNum);", "\n                            isequipment=equipment.isequipment();", "\n                            if(isequipment){", "\n                                this.equipmentList.add(equipment);", "\n                            }", "\n                        }", "\n                    }", "\n                }", "\n            }", "\n        }", "\n    }", "\n}", "\n[/code]", "\n\n", "大致要求是当我循环完那几个嵌套for的时候 会得到一个list  然后把结果在界面那边显示 但是有时候这个过程会很久(根据条件不一样时间不同) 所以我想在界面上弄一个进度条描述这个方法执行的大概时间  在此先感谢大家了 我用的是swt"]], "Tag": "程序设计"}
{"Answer": "char m, n;\r\n\tn = 'A';   \r\n\tint i, k;\r\n\tprintf(\"Please input a capital:\\n\");\r\n\tscanf_s(\"%c\", &amp;m);   \r\n\tfor (i = 0; i &lt;= (int)m - (int)n; i++)\r\n\t{\r\n\t\tfor (k = i; k &lt;= (int)m - (int)n; k++)\r\n\t\t{\r\n\t\t\tprintf(\" \");\r\n\t\t}\r\n\t\tfor (k = 0; k &lt; 2 * i + 1;k++)\r\n\t\t{\r\n\t\t\tif ((int)(n + k) &lt;= (int)(n+i))\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\", n + k);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\", n+2*i-k);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tfor (k = i; k &lt;= (int)m - (int)n; k++)\r\n\t\t{\r\n\t\t\tprintf(\" \");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\t\r\n\t该程序是我修改的，测试过了，", "Konwledge_Point": "for循环的嵌套", "Question": ["求大神帮忙，高手赐教，小白感激不尽", ["题目：", "\n\n", "绘制金字塔（4分）", "\n题目内容：", "\n要求用户从键盘输入一个大写字母，使用嵌套循环产生像下面这样的金字塔图案：", "\n    A", "\n   ABA", "\n  ABCBA", "\n ABCDCBA", "\n\n", "程序运行结果示例1：", "\nPlease input a capital:", "\nD↙", "\n____A", "ABA", "\n__ABCBA", "\n_ABCDCBA", "\n程序运行结果示例2：", "\nPlease input a capital:", "\nF↙", "\n_", "__A", "\n_____ABA", "\n____ABCBA", "\n___ABCDCBA", "\n__ABCDEDCBA", "ABCDEFEDCBA", "\n（说明：上面运行结果示例中，每行字母前面的下划线\"", "\"代表屏幕上实际输出的是空格，最后一行前面有一个空格，倒数第二行有两个空格，以此类推。）", "\n\n", "输入提示信息：\"Please input a capital:\\n\"", "\n输入格式: \"%c\"", "\n输出格式：\"%c\"", "\n为避免出现格式错误，请直接拷贝粘贴题目中给的格式字符串和提示信息到你的程序中。", "\n小白的程序：", "\n#include", "\nint main()", "\n{", "\n    char m,n;", "\n    n='A';", "\n    int i,k;", "\n    printf(\"Please input a capital:\\n\");", "\n    scanf(\"%c\",&m);", "\n    for(i=1;i<=(int)m-(int)n;i++)", "\n   {", "\n        for(k=(int)n;k<=(int)m-(int)n-i+1;k++)", "\n        {", "\n            printf(\" \");", "\n        }", "\n           for(k=(int)n;k<=(int)n+i-1;k++)", "\n           {", "\n            printf(\"%c\",k);", "\n           }", "\n                for(k=(int)n+i-2;k<=(int)n;k--)", "\n                {", "\n                 printf(\"%c\",k);", "\n                }", "\n                   for(k=(int)n;k<=(int)m-(int)n-i+1;k++)", "\n                   {", "\n                    printf(\" \");", "\n                   }", "\n    printf(\"\\n\");", "\n}", "\n}", "\n为什么运行的时候乱码了？", "\n求大神赐教。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看了半天没看出啥问题&amp;#xff0c;跑了一下才突然发现51行这里多了个分号&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for(i&amp;#61;0;i&amp;lt;result;i&amp;#43;&amp;#43;)&lt;/span&gt;&lt;strong&gt;;&lt;/strong&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    arr[countNum&amp;#43;&amp;#43;]&amp;#61;0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["请各位看看为什么我的万年历日期不会变", ["是想把这个万年历的每个日期就像贴图一样贴到页面上，但做好后发现每次重新输入查询日期页面布局都不会改变。请问是哪里出了错", "\n", "#include<iostream>", "\n", "#include<stdio.h>//c++头文件", "\n", "#include<graphics.h>//图形库头文件", "\n", "#include<conio.h>", "\nusing namespace std;\n\n\n\nint year,month,day;\nint runnian[", "12", "]={", "31", ",", "29", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31", "};", "//", "数组存放每个月有多少天（闰年）\nint pingnian[", "12", "]={", "31", ",", "28", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31", ",", "31", ",", "30", ",", "31", ",", "30", ",", "31", "};", "//", "(平年)\nchar weekday[", "7", "][", "20", "]={", "\"一\"", ",", "\"二\"", ",", "\"三\"", ",", "\"四\"", ",", "\"五\"", ",", "\"六\"", ",", "\"日\"", "};", "//", "定义字符数组存储七天\nint arr[", "6", "*", "7", "]={", "0", "};", "//", "定义数组（一维数组，初始化为", "0", "）\nint map[", "6", "][", "7", "]={", "0", "};", "//", "二维数组，初始化为", "0", "\nIMAGE dateimg[", "32", "];", "//", "定义图片变量（共", "32", "张图）\nvoid loadResource(){", "//", "加载图片（用函数）\n    ", "for", "(int i=", "0", ";i<", "32", ";i++){", "//", "批量加载的方式\n    char fileName[", "20", "]=", "\"\"", ";", "//", "设定它的名字，给他初始化为空,设定它的长度不会超过", "20", "\n    sprintf(fileName,", "\"%d.bmp\"", ",i);", "//", "格式化打印函数(%d=数组里的元素像是", "0", ".bmp，", "1", ".bmp....)\n    loadimage(&dateimg[i],fileName);", "//", "开始批量加载,把", "32", "张图加载进去\n    }\n}\n\nint leap(int year){", "//", "判断输入的年份是不是闰年\n    ", "if", "(year%", "4", "==", "0", "&&year%", "100", "!=", "0", "||(year%", "400", "==", "0", "))", "//", "如果year÷", "4", "能整除并且÷", "100", "不能整除，或者year÷", "400", "能整除（知乎找的求闰年方法）\n        return ", "1", ";", "//", "返回值是", "1", "就是闰年，\n    ", "else", "\n        return ", "0", ";", "//", "否则就是平年\n}\nint daysum(int year,int month,int day,int runnian[],int pingnian[]){", "//", "计算到现在一共多少天（求和）\n        int sum=", "0", ";\n        int i=", "0", ";\n        ", "for", "(i=", "1900", ";i<year;i++){", "//", "计算去年到", "1900", "年一共多少年有多少天（年份的天数）\n        ", "if", "(leap(i)==", "1", ")\n            sum+=", "366", ";\n        ", "else", "\n            sum+=", "365", ";\n        }\n        ", "for", "(i=", "0", ";i<month-", "1", ";i++){", "//", "(month-", "1", ":", "3", "月对应的数组下标是", "2", ")？\n        ", "if", "(leap(year)==", "1", ")", "//", "判断月份的天数\n            sum+=runnian[i];\n        ", "else", "\n            sum+=pingnian[i];\n        }\n        return sum;    \n}\nvoid initarr(int sum,int year,int month){", "//", "初始化一维数组\n    int countNum=", "0", ";\n    int i=", "0", ";", "//", "定义下标\n    int result=sum%", "7", ";", "//", "总天数除以", "7", "取余，余数就是空余天数(空余天数用", "0", "表示)\n    ", "for", "(i=", "0", ";i<result;i++);{\n    arr[countNum++]=", "0", ";\n    }\n    ", "if", " (leap(year)==", "1", "){", "//", "初始化后面剩下的日期，从", "1", "号开始※\n    ", "for", "(i=", "1", ";i<runnian[month-", "1", "];i++){", "//", "循环判断月份 i要小于闰年的月份-", "1", "\n        arr[countNum++]=i;\n    }\n}\n    ", "else", "{", "//", "else", "是平年（和闰年一样的判断方法）\n        ", "for", "(i=", "1", ";i<=pingnian[month-", "1", "];i++){", "//", "可以有", "31", "天，但如果只是小于只能到", "30", "天\n        arr[countNum++]=i;\n        }\n    }\n}\nvoid initmap(){", "//", "初始化二维数组※\n    int count=", "0", ";\n    ", "for", "(int i=", "0", ";i<", "6", ";i++){\n        ", "for", "(int j=", "0", ";j<", "7", ";j++){", "//", "嵌套循环\n    map[i][j]=arr[count++];\n        }\n        }\n}\nvoid printText(){", "//", "打印文字的函数\n    setbkmode(TRANSPARENT);", "//", "字体背景设成透明\n    settextstyle(", "30", ",", "0", ",", "\"楷体\"", ");", "//", "设字体的高，宽，要什么字体\n    settextcolor(BLUE);", "//", "文字颜色\n    ", "//", "打印标题\n    outtextxy(", "150", ",", "10", ",", "\"万年历\"", ");", "//", "在指定地方打印文字（用坐标）\n    int x=", "50", ",y=", "100", ";\n    ", "for", "(int i=", "0", ";i<", "7", ";i++){", "//", "用", "for", "循环打印一~日的日期\n    outtextxy(x+i*", "50", ",y,weekday[i]);\n    }\n    ", "//", "贴图：贴日期↓\n    ", "for", "(int i=", "0", ";i<", "6", ";i++){\n        ", "for", "(int j=", "0", ";j<", "7", ";j++){\n            int x=", "50", "+j*", "50", ";", "//", "先定义第一张图是", "50", "，然后x和贴了多少列有关（图片像素大小都是", "50", "x50）所以要一直+", "50", "每一个都加", "50", "\n            int y=", "200", "+i*", "50", ";", "//", "因为标题占了", "50", "所以是", "100", "\n            putimage(x,y,&dateimg[map[i][j]]);", "//", "把图片贴出来\n        }\n    }\n}\n", "//", "一般日历开始日期是", "1900", "年（", "1900", "年", "1", "月", "1", "号是周一（b站看到的））\nint main(){\n    loadResource();\n    printf(", "\"输入年,月,日：\"", ");\n    scanf(", "\"%d%d%d\"", ",&year,&month,&day);", "//", "输入三个整数，是year，month，day\n    int sum=daysum(year,month,day,runnian,pingnian);", "//", "定义一个sum，把他初始化为", "0", "\n    initarr(sum,year,month);", "//", "?\n    initgraph(", "500", ",", "500", ");", "//", "初始化图形环境\n    IMAGE img;", "//", "定义图片变量\n    loadimage(&img,", "\"background.bmp\"", ");", "//", "加载图\n    putimage(", "0", ",", "0", ",&img);", "//", "把图片显示出来的代码（左上角是原点）\n    initmap();\n    printText();\n    _getch();", "//", "不闪屏的代码，可以让客户输字。包含在conio.h头文件里\n    closegraph();\n    return ", "0", ";\n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "你要弄懂Spring事务实现原理，是通过AOP实现的。Spring使用JDK Proxy或cglib重写一个类，代替原来的类，使用拦截器拦截原来的方法调用。\r\nController A调用Service A的方法是，实际是调用TransactionInterceptor,方法被拦截，加上事务处理\r\n你这儿是Service A类a方法调用自己的方法b方法，是内部调用，b方法还是Service A类的，而不其AOP 代理类，所有只有a方法的事务，若其他类调用b方法才有事务。", "Konwledge_Point": "for循环的嵌套", "Question": ["spiring 事务 PROPAGATION_REQUIRES_NEW", ["外事务A为PROPAGATION_REQUIRED，嵌套事务为一个循环B为PROPAGATION_REQUIRES_NEW.", "\n\n", "[code=\"java\"]function A{", "\n  for(...){", "\n   funciton B(", "\n   save();", "\n);", "\n}", "\n}[/code]", "\n为什么不能每次循环保存到数据库中，而是只有当A事务执行完后,B中的才可保存到数据空中？", "\n[code=\"java\"]\n        class=\"org.springframework.transaction.interceptor.TransactionProxyFactoryBean\"", "\n        abstract=\"true\">", "PROPAGATION_REQUIRED,readOnly", "PROPAGATION_REQUIRED,readOnly", "\n                    PROPAGATION_REQUIRED,-Exception", "\n                    PROPAGATION_REQUIRED,-Exception", "\n                    PROPAGATION_REQUIRED,-Exception", "\n                    PROPAGATION_REQUIRED,-Exception", "PROPAGATION_REQUIRED,-Exception", "\n                    PROPAGATION_REQUIRED,-Exception", "\n                    PROPAGATION_REQUIRES_NEW,-Exception", "[/code]"]], "Tag": "程序设计"}
{"Answer": "兄弟，自己说取模发牌结果最后变成了除法...", "Konwledge_Point": "for循环的嵌套", "Question": ["为什么我的结果不是一个人有十几个编号 而是一个人只有三个编号  有没有大佬给看一下", ["package cz.bxg.demo08;", "\n\n", "import java.util.*;", "\n\n", "/*", "\n需求：模拟斗地主发牌", "\n步骤：", "\n1.买牌", "\n2.洗牌", "\n3.发牌", "\n4.看牌", "/", "\npublic class SendPokerText {", "\n    public static void main(String[] args) {", "\n        //1.买牌", "************************************************************************", "\n\n", "    //1.1定义一个双列集合，键：表示牌的编号，值：表示具体的牌。规则：编号越小，牌越小.|\n    Map<Integer, String> pokers = new HashMap<>();\n    //1.2定义一个单列集合，用来存储所有牌的编号.\n    List<Integer> list = new ArrayList<>();\n    //1.3具体的买牌动作。\n    //普通牌52.\n    String[] colors = {\"♠\", \"♥\", \"♣\", \"♦\"};\n    String[] numbers = {\"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\", \"2\",};\n\n    int num = 0;//表示牌的编号\n    //通过循环嵌套 造 普通牌\n    for (String number : numbers) {//外循环，来获取所有的点数\n        for (String color : colors) {//内循环，获取所有的花色  内循环一圈外循环一次\n            String poker = color + number;\n            //将牌的编号，具体的牌放入双列集合中\n            pokers.put(num, poker);\n            //将牌的编号放在单列集合中\n            list.add(num);\n            //每增加一张牌，编号要自增1\n            num++;\n        }\n    }\n    //大小王\n    pokers.put(num, \"小王\");\n    list.add(num++);\n    pokers.put(num, \"大王\");\n    list.add(num++);\n    //打印牌就可以了。\n    System.out.println(\"所有的牌\" + pokers);\n    System.out.println(\"牌的编号\" + list);\n", "\n\n", "//**********************************************************************************************************", "\n        //2.洗牌", "\n        Collections.shuffle(list);", "\n        System.out.println(\"洗牌后\" + list);", "\n//**********************************************************************************************************", "\n        //3.发牌", "\n\n", "//        3.1定义4个集合  分别表示3个玩家和底牌", "\n        List liuYiFei = new ArrayList<>();", "\n        List zhaoliying = new ArrayList<>();", "\n        List xiaohei = new ArrayList<>();", "\n        List dipai = new ArrayList<>();", "\n//        3.2具体的发牌动作，具体的索引和取模，决定发给谁", "\n        for (int i = 0; i < list.size(); i++) {", "\n            //获取编号", "\n            Integer pokerNum = list.get(i);", "\n            System.out.println(pokerNum);//牌的顺序", "\n            if (i >= list.size() - 3) {//如果牌剩余3张那么久是底牌", "\n                dipai.add(pokerNum);//最后三张放入dipai的集合中", "\n            } else if (i / 3 == 0) {", "\n                liuYiFei.add(pokerNum);", "\n            } else if (i / 3 == 1) {", "\n                zhaoliying.add(pokerNum);", "\n            } else if (i / 3 == 2) {", "\n                xiaohei.add(pokerNum);", "\n\n", "        }\n\n\n    }\n    //        3.3查看玩家\n    System.out.println(\"刘亦菲：\" + liuYiFei);\n    System.out.println(\"赵丽颖：\" + zhaoliying);\n    System.out.println(\"小黑：\" + xiaohei);\n    System.out.println(\"底牌：\" + dipai);\n\n}\n", "\n\n", "}", "\n\n", "结果是：", "\n刘亦菲：[9, 27, 34]", "\n赵丽颖：[12, 26, 13]", "\n小黑：[15, 28, 25]", "\n底牌：[4, 36, 31]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;import Levenshtein\n\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;GGAGTTATGGCTGAGTGGTT&amp;#39;&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;GGTGGAAGGGCTAGGGAGCA&amp;#39;&lt;/span&gt;\n\nres &amp;#61; Levenshtein&lt;span class=\"hljs-selector-class\"&gt;.hamming&lt;/span&gt;(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;, b)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(res)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;--result&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["关于#python#的问题：一条序列中的元素与另一条序列中的元素一一对应的比较方法", ["刚刚学python，想写一个关于文本内容比对的代码，这是从文本中摘取的几列内容", "#Sequence                                      Barcode                                      Count           Percentage(%)", "AAGAGTGTATGTAGGGAGGA     barcodeMD-AS-17MD-S-50     73974821     1.240810", "GGTGGAAGGGGGAGGTGGTG     barcodeMD-AS-21MD-S-61     73670799     1.235710", "GGTGGAAGGGCTAGGGAGCA     barcodeMD-AS-21MD-S-50     73627661     1.234987", "GGAGTTATGGCTGAGTGGTT     ambiguous                             22315579     0.374308", "我需要比对的ambiguous这一行的Sequence和其他列的Sequence中不同的碱基，如果超过3个碱基不同，就将他舍弃，如果是三个碱基以下则将其写入文本文件中，并输出一共有多少有个碱基差异小于3个序列。", "现在代码写完了，但是我嵌套了三个循环导致代码运行速度很慢，有办法可以提高他跑的速度呢？", "目前我采用的方法是，一条序列中的元素与另一条序列中的元素，一一对应进行比较，还有别的方法可以达到这样的效果吗？", "\n", "allcount = ", "0", " ", "#定义一个计数器 ", "\n", "for", " w in range(", "0", ",listAmbiguousLen): ", "#我将所有的ambiguous列添加到了一个列表中，listAmbiguousLen 指的是ambiguous一共有多少行", "\n    ", "for", " u in range(", "0", ",lenSeq): ", "#Seq是整个文本，lenSeq指的是这个文本一共有多少行", "\n        count = ", "0", "  ", "# 定义一个计数器", "\n        uncount = ", "0", " \n        ", "for", " ", "x", " in range(", "0", ",lenAmbiguous): ", "# lenAmbiguous 指的是Sequence列中，碱基的个数，一般为20个", "\n            ", "if", " listAmbiguous[w][", "x", "] == Se", "q[u]", "[", "x", "]: ", "#如果first的元素与list的元素相同", "\n                count = count + ", "1", "  \n            ", "else", ": ", "# 如果不相同", "\n                uncount = uncount+", "1", "  \n            ", "if", " uncount>", "3", ": ", "# 如果碱基不同的个数大于3个，则舍弃", "\n                ", "break", "\n            elif count > lenAmbiguous-number: ", "#如果碱基小于三个，就把他写入文档中", "\n                allcount = allcount + ", "1", " ", "#allcount+1", "\n                l.write(str(uncount)+", "\"\\t\"", "+listAmbiguous[w]+", "\"\\t\\t\"", "+Se", "q[u]", ")\n                ", "break", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;请求参数你都没有变过&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["python 请求每次请求数据量不同，且没办法一次获取全部的数据", ["请问为什么这个网站每次请求只能获得900-1000个地区呀，而且每次获取的地区都会有一些不一样的，我用循环请求10000次，程序挂了好久然后才获取到六千个不同地区，我想要的是获取这个世界全部地区的url里面对应的idx", "单个地区的数据保存在 ", "https://api.waqi.info/api/attsse/", " {idx} /yd.json 这个包里面，现在的问题就是没办法获取网站：", "https://aqicn.org/map/world/cn/", "  中世界全部地区的idx", "\n", "\n\n", "def", " ", "get_idx", "():\n    ", "\"\"\"\n    :return: 得到所有地区的idx和name,返回列表与元组嵌套类型[(idx,name),]\n    \"\"\"", "\n    url = ", "'https://api.waqi.info/mapq2/bounds'", "\n    data = {\n        ", "'bounds'", ": ", "\"-306.21093750000006,-62.10388252289787,306.5625,78.42019327591201\"", ",\n        ", "'country'", ": ", "\"\"", ",\n        ", "'inc'", ": ", "\"placeholders\"", ",\n        ", "'viewer'", ": ", "\"webgl\"", ",\n        ", "'zoom'", ": ", "2", "\n    }\n    request = requests.post(url, data=data, headers=headers).text\n    a = json.loads(request)\n    result = []\n    ", "for", " j ", "in", " a[", "\"data\"", "]:\n        idx = j[", "'idx'", "]\n        ", "if", " idx.isdigit():\n            result.append(idx)\n    ", "return", " result\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;ESP8266有文件管理系统的库&amp;#xff0c;你可以直接用那个库写文件到里面。更方便。库是FS.h&lt;br /&gt;这篇文章可能对你有帮助&lt;br /&gt;&lt;a id=\"textarea_1667362729433_1667362789083_0\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://www.taichi-maker.com/homepage/esp8266-nodemcu-iot/iot-c/spiffs/spiffs-operation/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["ESP8266 EEPROM读写遇到问题，读取结果比预期多一个字节", ["使用ESP8266在Arduino平台编写程序", "试图制作Web配网并保存到EEPROM的程序，遭遇问题：配网成功后（连上提供的WiFi后）调用 write() 存入SSID和PSWD的输出都是正常的，并且调用 readEEPROM() 读取SSID输出结果也是正常的，但读取PSWD的结果就会多出来一个字节，可以给看一下咋回事？", "附上不太完整的代码：", "初始化部分：", "\n", "#", "include", " ", "<ESP8266WiFi.h>", "\n", "#", "include", " ", "<DNSServer.h>", "\n", "#", "include", " ", "<ESP8266WebServer.h>", "\n", "#", "include", " ", "<NTPClient.h>", "\n", "#", "include", " ", "<WiFiUdp.h>", "\n", "#", "include", " ", "<EEPROM.h>", "\n\n", "#", "define", " _DEBUG", "\n\n", "#", "define", " ssidlenth 24", "\n", "#", "define", " pswdlenth 24", "\n", "#", "define", " ssidstart 0", "\n", "#", "define", " pswdstart ssidstart + ssidlenth", "\n", "//存储wifi账号密码", "\n", "String", " sta_ssid = ", "\"\"", ";\n", "String", " sta_pswd = ", "\"\"", ";\n\n", "/*---------------------Web配网功能部分------------------------*/", "\n", "bool", " wifiGot = ", "false", ";\n", "const", " ", "char", "* AP_ssid = ", "\"WiFi配网\"", ";     ", "//wifi名字", "\n", "const", " ", "char", "* AP_pswd = ", "\"sssssssssss\"", ";  ", "//wifi密码", "\n", "//配网页面代码略", "\n", "\n", "EEPROM读写函数：", "\n", "String", " ", "readEEPROM", "(", "unsigned", " ", "int", " start, ", "unsigned", " ", "int", " length)", " ", "{\n  ", "String", " _data = ", "\"\"", ";\n  ", "unsigned", " ", "int", " i = start;\n  ", "unsigned", " ", "int", " readmax = start + length;\n  ", "char", " _char;\n  ", "for", " (; i < readmax; i++) {\n    _char = ", "char", "(", "EEPROM", ".", "read", "(i));\n    ", "if", " (!_char) {\n", "#", "ifdef", " _DEBUG", "\n      ", "Serial", ".", "println", "(", "\"NonChar\"", ");\n", "#", "endif", "\n      ", "break", ";\n    }\n    _data += _char;\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"Read:\"", ");\n    ", "Serial", ".", "println", "(_char);\n", "#", "endif", "\n  }\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(", "\"Read String:\"", ");\n  ", "Serial", ".", "println", "(_data);\n", "#", "endif", "\n  ", "return", " _data;\n}\n\n", "void", " ", "writeEEPROM", "(", "String", " _data, ", "unsigned", " ", "int", " start)", " ", "{\n  ", "unsigned", " ", "int", " length = _data.", "length", "();\n  ", "if", " (!length) {\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"Wrint String Lengt h= 0\"", ");\n", "#", "endif", "\n    ", "return", ";\n  }\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(_data);\n", "#", "endif", "\n  ", "unsigned", " ", "int", " i = start;\n  ", "unsigned", " ", "int", " j = ", "0", ";\n  ", "unsigned", " ", "int", " writemax = start + length;\n  ", "for", " (; i < writemax; i++, j++) {\n    ", "EEPROM", ".", "write", "(i, _data[j]);\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"Write:\"", ");\n    ", "Serial", ".", "println", "(_data[j]);\n", "#", "endif", "\n  }\n  i++;\n  ", "EEPROM", ".", "write", "(i, ", "'\\0'", ");\n  ", "EEPROM", ".", "commit", "();\n}\n\n", "\n", "连接wifi的函数（包括调用EEPROM读写来存取WIFI信息的函数）", "\n", "void", " ", "readWiFi", "()", " ", "{\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(", "\"readWiFi\"", ");\n", "#", "endif", "\n  sta_ssid = ", "readEEPROM", "(ssidstart, ssidlenth);\n  sta_pswd = ", "readEEPROM", "(pswdstart, pswdlenth);\n}\n", "void", " ", "saveWiFi", "()", " ", "{\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(", "\"saveWiFi\"", ");\n", "#", "endif", "\n  ", "writeEEPROM", "(sta_ssid, ssidstart);\n  ", "writeEEPROM", "(sta_pswd, pswdstart);\n}\n\n", "void", " ", "connectWifi", "(", "void", ")", " ", "{      ", "//采用两层循环嵌套，内层为每一次连接计算延时，判断是否成功，外层负责一次次获取wifi信息（通过eeprom或者web配网获得）启动连接，在连接成功后存密码或者失败后调用web配网相关方法", "\n  ", "readWiFi", "();\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(sta_ssid);\n  ", "Serial", ".", "println", "(sta_pswd);\n", "#", "endif", "\n  ", "while", " (", "true", ") {\n    ", "WiFi", ".", "disconnect", "(", "true", ");\n    ", "WiFi", ".", "mode", "(WIFI_STA);             ", "//切换为STA模式", "\n    ", "WiFi", ".", "setAutoConnect", "(", "true", ");       ", "//设置自动连接", "\n    ", "WiFi", ".", "begin", "(sta_ssid, sta_pswd);  ", "//连接上一次连接成功的wifi", "\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"\"", ");\n    ", "Serial", ".", "print", "(", "\"Connect to wifi\"", ");\n", "#", "endif", "\n    ", "int", " count = ", "0", ";\n    ", "while", " (", "WiFi", ".", "status", "() != WL_CONNECTED) {\n      ", "delay", "(", "500", ");\n      count++;\n      ", "if", " (count > ", "20", ") {  ", "//如果10秒内没有连上，就开启Web配网 可适当调整这个时间", "\n", "#", "ifdef", " _DEBUG", "\n        ", "Serial", ".", "println", "(", "\"Need Web!\"", ");\n", "#", "endif", "\n        ", "getWiFi", "();\n        ", "break", ";  ", "//跳出 防止无限初始化", "\n      }\n", "#", "ifdef", " _DEBUG", "\n      ", "Serial", ".", "print", "(", "\".\"", ");\n", "#", "endif", "\n    }\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"\"", ");\n", "#", "endif", "\n    ", "if", " (", "WiFi", ".", "status", "() == WL_CONNECTED) {  ", "//如果连接上 就输出IP信息 防止未连接上break后会误输出", "\n", "#", "ifdef", " _DEBUG", "\n      ", "Serial", ".", "println", "(", "\"WIFI Connected!\"", ");\n      ", "Serial", ".", "print", "(", "\"IP address: \"", ");\n      ", "Serial", ".", "println", "(", "WiFi", ".", "localIP", "());  ", "//打印esp8266的IP地址", "\n", "#", "endif", "\n      ", "// server.stop();", "\n      ", "// dnsServer.stop();", "\n      ", "saveWiFi", "();\n      ", "break", ";\n    }\n  }\n}\n", "\n", "基础结构代码", "\n", "void", " ", "setup", "()", " ", "{\n  ", "Serial", ".", "begin", "(", "115200", ");\n  ", "delay", "(", "100", ");\n", "#", "ifdef", " _DEBUG", "\n  ", "Serial", ".", "println", "(", "\"\"", ");\n", "#", "endif", "\n  ", "EEPROM", ".", "begin", "(", "1024", ");\n  ", "WiFi", ".", "hostname", "(", "\"CYQ's WeatherClock\"", ");  ", "//设置ESP8266设备名", "\n  ", "connectWifi", "();\n  timeClient.", "begin", "();\n}\n\n", "void", " ", "loop", "()", " ", "{\n  ", "if", " (", "WiFi", ".", "status", "() != WL_CONNECTED) {\n", "#", "ifdef", " _DEBUG", "\n    ", "Serial", ".", "println", "(", "\"WiFi Break!\"", ");\n", "#", "endif", "\n    ", "connectWifi", "();\n    ", "return", ";\n  }\n}\n", "\n", "串口打印的信息：", "\n", "got ssid:testzuo\ngot password:zuosaiwen123\n\nsaveWiFi\n", "//省略大量无效行，总之就是存一位打印一位，都是如下格式，正确输出", "\n", "Write", ":\n", "1", "\n", "Write", ":\n", "2", "\n", "Write", ":\n", "3", "\nreadWiFi\n\nz\n", "Read", ":\nu\n", "Read", ":\no\nNonChar    ", "//代表读到空白字符，直接结束，不存这一位（因为用的String，不去手动存储结束符号）", "\n", "Read", " ", "String", ":\ntestzuo\n", "//读密码时就会多出来一位（w）", "\n", "Read", ":\n", "3", "\n", "Read", ":\nw\nNonChar\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题出在这儿&amp;#xff0c;因为你这些for循环出来的只有前面几个是字典&amp;#xff0c;后面的是字符串&amp;#xff0c;那肯定会有问题的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/242062074356125.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python 利用字典设计学生成绩信息系统 能帮忙看一下是哪出问题了吗", ["Python 利用字典设计学生成绩信息系统", "结果操作的时候出现问题", "说有关遍历的操作的循环有问题，请问是哪出问题了吗》如何解决呢？", "\n", "\n\n", "\n", "while True:", "    students = {'1001': {'name': \"Janis Joplin\", 'gender': 'male', 'age': 19, 'score': 598, 'subject1': '高等数学',", "                         'subject2': \"珠宝设计\", 'score1': \"高等数学78\", 'score2': \"珠宝设计99\"},", "                '1002': {'name': \"Kurt Cobain\", 'gender': 'female', 'age': 18, 'score': 556, 'subject1': 'C语言程序设计',", "                         'subject2': \"艺术鉴赏\", 'score1': \"C语言程序设计82\", 'score2': \"艺术鉴赏67\"},", "                '1003': {'name': \"Gogo\", 'gender': 'female', 'age': 20, 'score': 588, 'subject1': \"离散数学\",", "                         'subject2': \" 数据结构\", 'score1': \"离散数学78\", 'score2': \"数据结构99\", },", "                '1004': {'name': \"Jimi\", 'gender': 'male', 'age': 18, 'score': 568, 'subject1': \"Python程序设计\",", "                         'subject2': \"html基础\", 'score1': \"Python程序设计89\", 'score2': \"html基础77\"},", "                \"1001 高等数学\": {\"score\": 78},", "                \"1001 珠宝设计\": {\"score\": 99},", "                \"1002 C语言成句设计\": {\"score\": 82},", "                \"1002 艺术鉴赏\": {\"score\": 67},", "                \"1003 离散数学\": {\"score\": 78},", "                \"1003 数据结构\": {\"score\": 99},", "                \"1004 Python程序设计\": {\"score\": 89},", "                \"1004 html基础\": {\"score\": 77},", "                }", "\n", "print", "(", "\"1.字典中存储字典\"", ")\n", "print", "(", "\"2.输入ID是1001的信息\"", ")\n", "print", "(", "\"3.按照输入的ID进行查询\"", ")\n", "print", "(", "\"4.字典嵌套的遍历\"", ")\n", "print", "(", "\"5.统计男女各有多少人，输入年龄大于18岁的学生的姓名\"", ")\n", "print", "(", "\"6.输出成绩最高的学生信息\"", ")\n", "print", "(", "\"7.遍历学生所选课程\"", ")\n", "print", "(", "\"8.遍历学生各科成绩\"", ")\n", "print", "(", "\"9.查找学生指定学科成绩\"", ")\n", "print", "(", "\"10.退出系统\"", ")\nn = int(input(", "\"请输入你的操作选项：\"", "))\n", "if", " n == 1:\n    students = {", "'1001'", ": {", "'name'", ": ", "\"Janis Joplin\"", ", ", "'gender'", ": ", "'male'", ", ", "'age'", ": 19, ", "'score'", ": 598, ", "'subject1'", ": ", "'高等数学'", ",\n                         ", "'subject2'", ": ", "\"珠宝设计\"", ", ", "'score1'", ": ", "\"高等数学78\"", ", ", "'score2'", ": ", "\"珠宝设计99\"", "},\n                ", "'1002'", ": {", "'name'", ": ", "\"Kurt Cobain\"", ", ", "'gender'", ": ", "'female'", ", ", "'age'", ": 18, ", "'score'", ": 556, ", "'subject1'", ": ", "'C语言程序设计'", ",\n                         ", "'subject2'", ": ", "\"艺术鉴赏\"", ", ", "'score1'", ": ", "\"C语言程序设计82\"", ", ", "'score2'", ": ", "\"艺术鉴赏67\"", "},\n                ", "'1003'", ": {", "'name'", ": ", "\"Gogo\"", ", ", "'gender'", ": ", "'female'", ", ", "'age'", ": 20, ", "'score'", ": 588, ", "'subject1'", ": ", "\"离散数学\"", ",\n                         ", "'subject2'", ": ", "\" 数据结构\"", ", ", "'score1'", ": ", "\"离散数学78\"", ", ", "'score2'", ": ", "\"数据结构99\"", ",},\n                ", "'1004'", ": {", "'name'", ": ", "\"Jimi\"", ", ", "'gender'", ": ", "'male'", ", ", "'age'", ": 18, ", "'score'", ": 568, ", "'subject1'", ": ", "\"Python程序设计\"", ",\n                         ", "'subject2'", ": ", "\"html基础\"", ", ", "'score1'", ": ", "\"Python程序设计89\"", ", ", "'score2'", ": ", "\"html基础77\"", "},\n                ", "\"1001 高等数学\"", ": {", "\"SCORE\"", ": 78},\n                ", "\"1001 珠宝设计\"", ": {", "\"SCORE\"", ": 99},\n                ", "\"1002 C语言成句设计\"", ": {", "\"SCORE\"", ": 82},\n                ", "\"1002 艺术鉴赏\"", ": {", "\"SCORE\"", ": 67},\n                ", "\"1003 离散数学\"", ": {", "\"SCORE\"", ": 78},\n                ", "\"1003 数据结构\"", ": {", "\"SCORE\"", ": 99},\n                ", "\"1004 Python程序设计\"", ": {", "\"SCORE\"", ": 89},\n                ", "\"1004 html基础\"", ": {", "\"SCORE\"", ": 77},\n                }\n\n    ", "print", "(students)\n    ", "print", "(", "\" ------------------------\"", ")\nelif n == 2:\n    ", "print", "(students[", "'1001'", "])\n    ", "print", "(students[", "'1001'", "][", "'name'", "])\n    ", "print", "(", "\"-----------------------\"", ")\n\nelif n == 3:\n    xh = input(", "\"please input ID:\"", ")\n    ", "if", " xh ", "in", " students:\n        ", "print", "(students[xh])\n    ", "else", ":\n        ", "print", "(", "\"not find\"", ")\n        ", "print", "(", "\"--------------------------\"", ")\n\nelif n == 4:\n    ", "for", " k, v ", "in", " students.items():\n        ", "print", "(k,v[", "'nmae'", "], v[", "'gender'", "], v[", "'age'", "], v[", "'score'", "])\n        ", "print", "(", "\"----------------------------------\"", ")\n\nelif n == 5:\n    cnt = {}\n    xm = []\n    ", "for", " k, v ", "in", " students.items():\n        cnt[v[", "'gender'", "]] = cnt.", "get", "(v[", "'gender'", "], 0) + 1\n        ", "if", " v[", "'age'", "] > 18:\n            xm.append(v[", "'name'", "])\n    ", "print", "(", "\"female=%d male=%d\"", " % (cnt[", "'female'", "], cnt[", "'male'", "]))\n    ", "print", "(", "\">18\"", ", xm)\n    ", "print", "(", "\"-----------------------------------------\"", ")\n\nelif n == 6:\n    MAX = max(students, ", "key", "=lambda x: students[x][", "'score'", "])\n    ", "print", "(MAX)\n    ", "print", "(students[MAX])\n    ", "print", "(", "\"--------------------------------------\"", ")\n\nelif n == 7:\n    ", "for", " c, d ", "in", " students.items():\n        ", "print", "(c,d[", "'name'", "],d[", "'subject1'", "],d[", "'subject2'", "])\n        ", "print", "(", "\"----------------------------------\"", ")\n\nelif n == 8:\n    ", "for", " a, b ", "in", " students.items():\n        ", "print", "(a, b[", "'name'", "],b[", "'score1'", "],b[", "'score2'", "])\n\nelif ", "n", "==9:\n    ", "j", "=input((\"请输入所查成绩学生姓名和科目：\"))\n    ", "if", " j ", "in", " students:\n        ", "print", "(students[j])\n    ", "else", ":\n        ", "print", "(", "\"输入错误!\"", ")\n        break\n\nelif n == 10:\n    break\n", "else", ":\n    ", "print", "(", "\"输入错误！\"", ")\n    ", "print", "(", "\"-----------------------------------------------------------\"", ")\n", "print", "(", "\"-----------程序运行结束--------------\"", ")\n"]], "Tag": "程序设计"}
{"Answer": "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt; \r\n&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\"&gt; \r\n&lt;title&gt;井底的蛙&lt;/title&gt; \r\n&lt;script type=\"text/javascript\"&gt; \r\n/********************我添加的代码********************/\r\ndocument.write(\r\n\t\"&lt;div id='menuDiv' style='width:100px;height:60px;position:absolute;visibility:hidden;border:1px solid red;font-size:12px;background-color:white'&gt;\"\r\n\t+ \"&lt;table&gt;\"\r\n\t+ \"\t&lt;tr&gt;\"\r\n\t+ \"\t\t&lt;td&gt;技术支持&lt;/td&gt;\"\r\n\t+ \"\t&lt;/tr&gt;\"\r\n\t+ \"\t&lt;tr&gt;\"\r\n\t+ \"\t\t&lt;td&gt;留言反馈&lt;/td&gt;\"\r\n\t+ \"\t&lt;/tr&gt;\"\r\n\t+ \"\t&lt;tr&gt;\"\r\n\t+ \"\t\t&lt;td&gt;在线帮助&lt;/td&gt;\"\r\n\t+ \"\t&lt;/tr&gt;\"\r\n\t+ \"&lt;/table&gt;\"\r\n\t+ \"&lt;/div&gt;\");\r\n\t\r\n\tfunction getLeft(e) {\r\n\t\tvar x=e.offsetLeft;\r\n\t\twhile(e=e.offsetParent){\r\n\t\tx+=e.offsetLeft;\r\n\t\t}\r\n\t\treturn x;\r\n\t}\r\n\tfunction getTop(e) {\r\n\t\tvar y=e.offsetTop;\r\n\t\twhile(e=e.offsetParent){\r\n\t\ty+=e.offsetTop;\r\n\t\t}\r\n\t\treturn y;\r\n\t}\r\n/***********************结束*********************/\r\n\r\n/* \r\n选项卡封装 \r\nby 井底的蛙 \r\n2008-2-4 \r\n*/ \r\nopCard = function() \r\n{ \r\nthis.bind = new Array(); \r\nthis.index = 0; //默认显示哪个选项卡，从0开始 \r\n\r\nthis.style = new Array(); //[\"\",\"\",\"\"] \r\nthis.overStyle = false; //选项是否有over, out变换样式事件，样式为this.style[2] \r\nthis.overChange = false; //内容是否用over, out直接激活 \r\nthis.menu = false; //菜单类型 \r\nthis.nesting = [false,false,\"\",\"\"]; //是否嵌套，后面2个参数是指定menu,info的子集深度所用id \r\n\r\nthis.auto = [false, 1000]; //自动滚动[true,2000] \r\nthis.timerID = null; //自动播放的 \r\nthis.menutimerID = null; //菜单延时的 \r\n\r\nthis.creat = function(func) \r\n{ \r\nvar _arrMenu = document.getElementById(this.bind[0]).getElementsByTagName(this.bind[1]); \r\nvar _arrInfo = document.getElementById(this.bind[2]).getElementsByTagName(this.bind[3]); \r\nvar my = this, i; \r\nvar argLen = arguments.length; \r\nvar arrM = new Array(); \r\n\r\nif(this.nesting[0] || this.nesting[1]) // 有选项卡嵌套 \r\n{ // 过滤出需要的数据 \r\nvar arrMenu = this.nesting[0]?getChilds(_arrMenu,this.bind[0],2):_arrMenu; \r\nvar arrInfo = this.nesting[1]?getChilds(_arrInfo,this.bind[2],3):_arrInfo; \r\n} \r\nelse \r\n{ \r\nvar arrMenu = _arrMenu; \r\nvar arrInfo = _arrInfo; \r\n} \r\n\r\nvar l = arrMenu.length; \r\n//if(l!=arrInfo.length){alert(\"菜单和内容必须拥有相同的数量\\n如果需要，你可以放一个空的在那占位。\")} \r\n\r\n// 修正 \r\nif(this.menu){this.auto=false;this.overChange=true;} //如果是菜单，则没有自动运行，有over, out直接激活 \r\n\r\n// 循环添加各个事件等 \r\nfor(i=0;i&lt;l;i++) \r\n{ \r\narrMenu[i].cName = arrMenu[i].className; \r\narrMenu[i].className = (i!=this.index || this.menu)?getClass(arrMenu[i],this.style[0]):getClass(arrMenu[i],this.style[1]); //加载样式，菜单的话统一样式 \r\n\r\nif(arrMenu[i].getAttribute(\"skip\")) // 需要跳过的容器 \r\n{ \r\nif(this.overStyle || this.overChange) // 有over, out 改变样式 或者 激活 \r\n{ \r\narrMenu[i].onmouseover = function(){changeTitle(this, 2);autoStop(this, 0);} \r\narrMenu[i].onmouseout = function(){changeTitle(this, 0);autoStop(this, 1);} \r\n}\r\narrMenu[i].onclick = function(){if(argLen==1){func()}} \r\narrInfo[i].style.display = \"none\"; \r\ncontinue; \r\n} \r\n\r\nif(i!=this.index || this.menu){arrInfo[i].style.display=\"none\"}; //隐藏初始化，菜单的话全部隐藏 \r\narrMenu[i].index = i; //记录自己激活值[序号] \r\narrInfo[i].index = i; \r\n\r\n\r\nif(this.overChange) //有鼠标over, out事件 \r\n{\r\narrMenu[i].onmouseover = function(){changeOption(this);my.menu?changeMenu(1):autoStop(this, 0);} \r\narrMenu[i].onmouseout = function(){changeOption(this);my.menu?changeMenu(0):autoStop(this, 1);} \r\n} \r\nelse //onclick触发 \r\n{ \r\narrMenu[i].onclick = function(){changeOption(this);autoStop(this, 0);if(argLen==1){func()}} \r\nif(this.overStyle) // 有over, out 改变样式 \r\n{ \r\narrMenu[i].onmouseover = function(){changeTitle(this, 2);autoStop(this, 0);} \r\narrMenu[i].onmouseout = function(){changeTitle(this, 0);autoStop(this, 1);} \r\n} \r\nelse // 没有over, out 改变样式 \r\n{ \r\nif(this.auto[0]) // 有自动运行 \r\n{ \r\narrMenu[i].onmouseover = function(){autoStop(this, 0);} \r\narrMenu[i].onmouseout = function(){autoStop(this, 1);} \r\n} \r\n} \r\n} \r\n\r\nif(this.auto[0] || this.menu) //arrinfo 控制自动播放 \r\n{ \r\narrInfo[i].onmouseover = function(){my.menu?changeMenu(1):autoStop(this, 0);} \r\narrInfo[i].onmouseout = function(){my.menu?changeMenu(0):autoStop(this, 1);} \r\n} \r\n} //for结束 \r\n\r\nif(this.auto[0]) \r\n{ \r\nthis.timerID = setTimeout(autoMove,this.auto[1]) \r\n} \r\n\r\n// 自动播放 \r\nfunction autoMove() \r\n{ \r\nvar n; \r\nn = my.index + 1; \r\nif(n==l){n=0}; \r\nwhile(arrMenu[n].getAttribute(\"skip\")) // 需要跳过的容器 \r\n{ \r\nn += 1; \r\nif(n==l){n=0}; \r\n} \r\nchangeOption(arrMenu[n]); \r\nmy.timerID = setTimeout(autoMove,my.auto[1]); \r\n} \r\n\r\n// onmouseover时，自动播放停止。num：0为over，1为out。 obj暂时无用。 -_-!! \r\nfunction autoStop(obj, num) \r\n{ \r\nif(!my.auto[0]){return;} \r\n//if(obj.index==my.index) \r\nnum == 0 ? clearTimeout(my.timerID) : my.timerID = setTimeout(autoMove,my.auto[1]); \r\n} \r\n\r\n// 改变选项卡 \r\nfunction changeOption(obj) \r\n{ \r\narrMenu[my.index].className = getClass(arrMenu[my.index],my.style[0]); //修改旧内容 \r\narrInfo[my.index].style.display = \"none\"; //隐藏旧内容 \r\n\r\nobj.className = getClass(obj,my.style[1]); //修改为新样式 \r\narrInfo[obj.index].style.display = \"\"; //显示新内容 \r\n\r\nmy.index = obj.index; //更新当前选择的index \r\n} \r\n\r\n/* \r\n只有onclick时，overStyle的onmouseover,onmouseout事件。用来预激活 \r\nobj：目标对象。 num：1为over，0为out \r\n*/ \r\nfunction changeTitle(obj, num) \r\n{ \r\nif(!my.overStyle){return;}; \r\nif(obj.index!=my.index){obj.className = getClass(obj,my.style[num])} \r\n/********************我添加的代码********************/\r\nif(obj.id == \"toshowmenu\")\r\n{\r\n\tif(num == 2)\r\n\t{\r\n\t\t//显示菜单\r\n\t\tvar menu = document.getElementById(\"menuDiv\");\r\n\t\tmenu.style.visibility = \"\";\r\n\t\tmenu.style.left = getLeft(obj);\r\n\t\tmenu.style.top = getTop(obj) + obj.offsetHeight;\r\n\t\t\r\n\t\tmenu.attachEvent(\"onmouseover\", function() {\r\n\t\t\tmenu.style.visibility = \"\";\r\n\t\t});\r\n\t\tmenu.attachEvent(\"onmouseout\", function() {\r\n\t\t\tmenu.style.visibility = \"hidden\";\r\n\t\t});\r\n\t}\r\n\telse if(num == 0)\r\n\t{\r\n\t\t//隐藏菜单\r\n\t\t//var menu = document.getElementById(\"menuDiv\");\r\n\t\t//menu.style.visibility = \"hidden\";\r\n\t} \r\n}\r\n\r\n/***********************结束*********************/\r\n} \r\n/* \r\n菜单类型时用 \r\nobj：目标对象。 num：1为over，0为out \r\n*/ \r\nfunction changeMenu(num) \r\n{ \r\nif(!my.menu){return;} \r\nnum==0?my.menutimerID = setTimeout(menuClose,1000):clearTimeout(my.menutimerID) \r\n} \r\n\r\n//关闭菜单 \r\nfunction menuClose() \r\n{ \r\narrInfo[my.index].style.display = \"none\"; \r\narrMenu[my.index].className = getClass(arrMenu[my.index],my.style[0]); \r\n} \r\n\r\n// 得到className（防止将原有样式覆盖） \r\nfunction getClass(o, s) \r\n{ \r\nif(o.cName==\"\"){return s} \r\nelse{return o.cName + \" \" + s} \r\n} \r\n\r\n//嵌套情况下得到真正的子集 \r\nfunction getChilds(arrObj, id, num) \r\n{ \r\nvar depth = 0; \r\nvar firstObj = my.nesting[num]==\"\"?arrObj[0]:document.getElementById(my.nesting[num]); //得到第一个子集 \r\ndo //计算深度 \r\n{ \r\nif(firstObj.parentNode.getAttribute(\"id\")==id){break}else{depth+=1} \r\nfirstObj = firstObj.parentNode; \r\n} \r\nwhile(firstObj.tagName.toLowerCase()!=\"body\") // body强制退出。 \r\n\r\nvar t; \r\nvar arr = new Array(); \r\nfor(i=0;i&lt;arrObj.length;i++) //过滤出需要的数据 \r\n{ \r\nt = arrObj[i], d = 0; \r\ndo \r\n{ \r\nif(t.parentNode.getAttribute(\"id\")==id &amp;&amp; d == depth) \r\n{ \r\narr.push(arrObj[i]);break; //得到数据 \r\n} \r\nelse \r\n{ \r\nif(d==depth){break};d+=1; \r\n} \r\nt = t.parentNode; \r\n} \r\nwhile(t.tagName.toLowerCase()!=\"body\") // body强制退出 \r\n} \r\nreturn arr; \r\n} \r\n} \r\n} \r\nwindow.onload = function() \r\n{ \r\n\r\n// 默认的onclick中，第一个例子 \r\nvar bba = new opCard(); \r\nbba.bind = [\"a2\",\"li\",\"b2\",\"div\",\"c2\",\"div\"]; \r\nbba.style = [\"style1\",\"style2\",\"style3\"]; \r\nbba.overStyle = true; \r\nbba.creat(); \r\nbba = null; \r\n\r\n//菜单导航例子 \r\nvar gg = new opCard(); \r\ngg.bind = [\"a8\",\"li\",\"b8\",\"div\"]; \r\ngg.style = [\"style1\",\"style2\",\"style3\"]; \r\ngg.overStyle = true; \r\ngg.menu = true; \r\ngg.creat(); \r\ngg = null; \r\n} \r\n&lt;/script&gt; \r\n&lt;style type=\"text/css\"&gt; \r\nbody{font-size:12px; font-family:Verdana,\"宋体\";} \r\np,ul{margin:0px; padding:0px;} \r\ntd,div{font-size:12px} \r\n.a1_0 {border:1px dotted #3399FF; width:120px; background-color:#f5f5f5; margin:3px; padding:2px 0px; cursor:pointer;} \r\n.a1_1 {border:1px solid #FF9900; width:120px; margin:3px; padding:2px 0px; cursor:pointer;} \r\n.test{text-decoration:underline;} \r\n#b1 div.s{border:1px solid #999999; width:90%; height:500px; margin:3px; padding:10px; overflow-y:auto; line-height:18px;} \r\n#b1 div.s strong{color:#0066FF;} \r\n/* */ \r\n.style1{float:left; width:80px; background-color:#f5f5f5; border:1px solid #3399FF; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;} \r\n.style2{float:left; width:80px; background-color:#f5f5f5; border:1px solid #FF9900; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;} \r\n.style3{float:left; width:80px; background-color:#f5f5f5; border:1px solid #666666; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;} \r\n#a2,#a3,#a4,#a5,#a6,#a7,#a8 {height:22px;} \r\n#b2 div,#b3 div,#b4 div,#b5 div,#b6 div,#b7 div{border:1px solid #FF9900; height:100px; width:400px; padding:5px; overflow-y:auto;} \r\n#b8 div{border:1px solid #FF9900; height:20px; width:350px; padding:2px 5px;} \r\n#b8 div a{margin-right:20px;} \r\n.style4{float:left; background-color:#999999; text-align:left; list-style-type:none; padding:2px 5px; color:#FFFFFF;} \r\n&lt;/style&gt; \r\n&lt;/head&gt; \r\n&lt;body&gt; \r\n&lt;table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"&gt; \r\n  &lt;tr&gt; \r\n    &lt;td id=\"b1\" valign=\"top\"&gt; \r\n\r\n&lt;div class=\"s\"&gt; \r\n&lt;!--默认的onclick中，第一个例子--&gt; \r\n  &lt;div id=\"a2\" style=\"width: 297px\"&gt; \r\n&lt;ul&gt; \r\n  &lt;li&gt;规划报告&lt;/li&gt; \r\n  &lt;li id=\"toshowmenu\"&gt;规划工程库&lt;/li&gt;\r\n  &lt;li&gt;工程专题&lt;/li&gt;&lt;/ul&gt; \r\n  &lt;/div&gt; \r\n  &lt;div id=\"b2\"&gt; \r\n&lt;div style=\"width: 1080px; height: 412px;\"&gt; \r\n456 \r\n&lt;/div&gt; \r\n&lt;div style=\"width: 1080px; height: 412px;\"&gt; \r\nvar bba = new opCard();&lt;br&gt; \r\nbba.bind = [\"a2\",\"li\",\"b2\",\"div\"];&lt;br&gt; \r\nbba.style = [\"style1\",\"style2\",\"style1\"];&lt;br&gt; \r\nbba.overStyle = true;&lt;br&gt; \r\nbba.creat();&lt;br&gt; \r\nbba = null; \r\n&lt;/div&gt; \r\n&lt;div style=\"width: 1080px; height: 412px;\"&gt;33333&lt;/div&gt; \r\n  &lt;/div&gt; \r\n\r\n&lt;/div&gt; \r\n\r\n\r\n&lt;/td&gt; \r\n  &lt;/tr&gt; \r\n&lt;/table&gt; \r\n&lt;/body&gt; \r\n&lt;/html&gt;\r\n\r\n\r\n不好意思 之前有点忙\r\n在你的基础上加了点代码，能够显示一个菜单 \r\n具体的响应事件的话 需要你自己添加咯\r\n\r\n\r\n你这个写的不错\r\n有个缺陷是：\r\n很多地方的直接给控件的onmouseover直接赋值，这样的话有个坏处就是只能提供一个响应事件了\r\n\r\n建议改为\r\nxxx.attachEvent(\"onmouseover\", function()\r\n{\r\n// add code here\r\n});", "Konwledge_Point": "for循环的嵌套", "Question": ["菜鸟JS不会，希望帮忙。。", ["[b]这段代码只实现了选项卡切换的功能，现在想在第二个按钮上也是就规划工程库上做个2级菜单，然后点击2级菜单在进行窗体的切换。。希望大哥们帮忙指点~[/b]", "\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">", "井底的蛙\n/*\n    选项卡封装\n    by 井底的蛙\n    2008-2-4\n*/\nopCard = function()\n{\n    this.bind = new Array();\n    this.index = 0;     //默认显示哪个选项卡，从0开始\n    \n    this.style = new Array();       //[\"\",\"\",\"\"]\n    this.overStyle = false;     //选项是否有over, out变换样式事件，样式为this.style[2]\n    this.overChange = false;        //内容是否用over, out直接激活\n    this.menu = false;              //菜单类型\n    this.nesting = [false,false,\"\",\"\"];     //是否嵌套，后面2个参数是指定menu,info的子集深度所用id\n    \n    this.auto = [false, 1000];      //自动滚动[true,2000]\n    this.timerID = null;            //自动播放的\n    this.menutimerID = null;        //菜单延时的\n    \n    this.creat = function(func)\n    {\n        var _arrMenu = document.getElementById(this.bind[0]).getElementsByTagName(this.bind[1]);\n        var _arrInfo = document.getElementById(this.bind[2]).getElementsByTagName(this.bind[3]);\n        var my = this, i;\n        var argLen = arguments.length;\n        var arrM = new Array();\n        \n        if(this.nesting[0] || this.nesting[1])  // 有选项卡嵌套\n        {   // 过滤出需要的数据\n            var arrMenu = this.nesting[0]?getChilds(_arrMenu,this.bind[0],2):_arrMenu;\n            var arrInfo = this.nesting[1]?getChilds(_arrInfo,this.bind[2],3):_arrInfo;\n        }\n        else\n        {\n            var arrMenu = _arrMenu;\n            var arrInfo = _arrInfo;\n        }\n        \n        var l = arrMenu.length;\n        //if(l!=arrInfo.length){alert(\"菜单和内容必须拥有相同的数量\\n如果需要，你可以放一个空的在那占位。\")}\n        \n        // 修正\n        if(this.menu){this.auto=false;this.overChange=true;} //如果是菜单，则没有自动运行，有over, out直接激活\n        \n        // 循环添加各个事件等\n        for(i=0;i<l;i++)\n        {\n            arrMenu[i].cName = arrMenu[i].className;\n            arrMenu[i].className = (i!=this.index || this.menu)?getClass(arrMenu[i],this.style[0]):getClass(arrMenu[i],this.style[1]);      //加载样式，菜单的话统一样式\n            \n            if(arrMenu[i].getAttribute(\"skip\")) // 需要跳过的容器\n            {\n                if(this.overStyle || this.overChange)   // 有over, out 改变样式 或者 激活\n                {\n                    arrMenu[i].onmouseover = function(){changeTitle(this, 2);autoStop(this, 0);}\n                    arrMenu[i].onmouseout = function(){changeTitle(this, 0);autoStop(this, 1);}\n                }\n                arrMenu[i].onclick = function(){if(argLen==1){func()}}\n                arrInfo[i].style.display = \"none\";\n                continue;\n            }\n            \n            if(i!=this.index || this.menu){arrInfo[i].style.display=\"none\"};    //隐藏初始化，菜单的话全部隐藏\n            arrMenu[i].index = i;   //记录自己激活值[序号]\n            arrInfo[i].index = i;\n            \n            \n            if(this.overChange) //有鼠标over, out事件\n            {\n                arrMenu[i].onmouseover = function(){changeOption(this);my.menu?changeMenu(1):autoStop(this, 0);}\n                arrMenu[i].onmouseout = function(){changeOption(this);my.menu?changeMenu(0):autoStop(this, 1);}\n            }\n            else    //onclick触发\n            {\n                arrMenu[i].onclick = function(){changeOption(this);autoStop(this, 0);if(argLen==1){func()}}\n                if(this.overStyle)  // 有over, out 改变样式\n                {\n                    arrMenu[i].onmouseover = function(){changeTitle(this, 2);autoStop(this, 0);}\n                    arrMenu[i].onmouseout = function(){changeTitle(this, 0);autoStop(this, 1);}\n                }\n                else    // 没有over, out 改变样式\n                {\n                    if(this.auto[0])    // 有自动运行\n                    {\n                        arrMenu[i].onmouseover = function(){autoStop(this, 0);}\n                        arrMenu[i].onmouseout = function(){autoStop(this, 1);}\n                    }\n                }\n            }\n            \n            if(this.auto[0] || this.menu)   //arrinfo 控制自动播放\n            {\n                arrInfo[i].onmouseover = function(){my.menu?changeMenu(1):autoStop(this, 0);}\n                arrInfo[i].onmouseout = function(){my.menu?changeMenu(0):autoStop(this, 1);}\n            }\n        }   //for结束\n        \n        if(this.auto[0])\n        {\n            this.timerID = setTimeout(autoMove,this.auto[1])\n        }\n        \n        // 自动播放\n        function autoMove()\n        {\n            var n;\n            n = my.index + 1;\n            if(n==l){n=0};\n            while(arrMenu[n].getAttribute(\"skip\"))      // 需要跳过的容器\n            {\n                n += 1;\n                if(n==l){n=0};\n            }\n            changeOption(arrMenu[n]);\n            my.timerID = setTimeout(autoMove,my.auto[1]);\n        }\n        \n        // onmouseover时，自动播放停止。num：0为over，1为out。 obj暂时无用。 -_-!!\n        function autoStop(obj, num)\n        {\n            if(!my.auto[0]){return;}\n            //if(obj.index==my.index)\n            num == 0 ? clearTimeout(my.timerID) : my.timerID = setTimeout(autoMove,my.auto[1]);\n        }\n        \n        // 改变选项卡\n        function changeOption(obj)\n        {\n            arrMenu[my.index].className = getClass(arrMenu[my.index],my.style[0]);  //修改旧内容\n            arrInfo[my.index].style.display = \"none\";   //隐藏旧内容\n            \n            obj.className = getClass(obj,my.style[1]);      //修改为新样式\n            arrInfo[obj.index].style.display = \"\";  //显示新内容\n            \n            my.index = obj.index;   //更新当前选择的index\n        }\n        \n        /*      \n            只有onclick时，overStyle的onmouseover,onmouseout事件。用来预激活\n            obj：目标对象。   num：1为over，0为out\n        */\n        function changeTitle(obj, num)\n        {\n            if(!my.overStyle){return;};\n            if(obj.index!=my.index){obj.className = getClass(obj,my.style[num])}\n        }\n        \n        /*      \n            菜单类型时用\n            obj：目标对象。   num：1为over，0为out\n        */\n        function changeMenu(num)\n        {\n            if(!my.menu){return;}\n            num==0?my.menutimerID = setTimeout(menuClose,1000):clearTimeout(my.menutimerID)\n        }\n        \n        //关闭菜单\n        function menuClose()\n        {\n            arrInfo[my.index].style.display = \"none\";\n            arrMenu[my.index].className = getClass(arrMenu[my.index],my.style[0]);\n        }\n        \n        // 得到className（防止将原有样式覆盖）\n        function getClass(o, s)\n        {\n            if(o.cName==\"\"){return s}\n            else{return o.cName + \" \" + s}\n        }\n        \n        //嵌套情况下得到真正的子集\n        function getChilds(arrObj, id, num)\n        {\n            var depth = 0;\n            var firstObj = my.nesting[num]==\"\"?arrObj[0]:document.getElementById(my.nesting[num]);      //得到第一个子集\n            do  //计算深度\n            {\n                if(firstObj.parentNode.getAttribute(\"id\")==id){break}else{depth+=1}\n                firstObj = firstObj.parentNode;\n            }\n            while(firstObj.tagName.toLowerCase()!=\"body\")   // body强制退出。\n            \n            var t;\n            var arr = new Array();\n            for(i=0;i<arrObj.length;i++)    //过滤出需要的数据\n            {\n                t = arrObj[i], d = 0;\n                do\n                {\n                    if(t.parentNode.getAttribute(\"id\")==id && d == depth)\n                    {   \n                        arr.push(arrObj[i]);break;      //得到数据\n                    }\n                    else\n                    {\n                        if(d==depth){break};d+=1;\n                    }\n                    t = t.parentNode;\n                }\n                while(t.tagName.toLowerCase()!=\"body\")  // body强制退出\n            }\n            return arr;\n        }\n    }\n}\nwindow.onload = function()\n{\n    \n    // 默认的onclick中，第一个例子\n    var bba = new opCard();\n    bba.bind = [\"a2\",\"li\",\"b2\",\"div\",\"c2\",\"div\"];\n    bba.style = [\"style1\",\"style2\",\"style3\"];\n    bba.overStyle = true;\n    bba.creat();\n    bba = null;\n    \n    //菜单导航例子\n    var gg = new opCard();\n    gg.bind = [\"a8\",\"li\",\"b8\",\"div\"];\n    gg.style = [\"style1\",\"style2\",\"style3\"];\n    gg.overStyle = true;\n    gg.menu = true;\n    gg.creat();\n    gg = null;\n    \n    \n}\n\nbody{font-size:12px; font-family:Verdana,\"宋体\";}\np,ul{margin:0px; padding:0px;}\ntd,div{font-size:12px}\n.a1_0 {border:1px dotted #3399FF; width:120px; background-color:#f5f5f5; margin:3px; padding:2px 0px; cursor:pointer;}\n.a1_1 {border:1px solid #FF9900; width:120px; margin:3px; padding:2px 0px; cursor:pointer;}\n.test{text-decoration:underline;}\n#b1 div.s{border:1px solid #999999; width:90%; height:500px; margin:3px; padding:10px; overflow-y:auto; line-height:18px;}\n#b1 div.s strong{color:#0066FF;}\n/* */\n.style1{float:left; width:80px; background-color:#f5f5f5; border:1px solid #3399FF; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;}\n.style2{float:left; width:80px; background-color:#f5f5f5; border:1px solid #FF9900; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;}\n.style3{float:left; width:80px; background-color:#f5f5f5; border:1px solid #666666; text-align:center; margin-right:2px; list-style-type:none; cursor:pointer;}\n#a2,#a3,#a4,#a5,#a6,#a7,#a8 {height:22px;}\n#b2 div,#b3 div,#b4 div,#b5 div,#b6 div,#b7 div{border:1px solid #FF9900; height:100px; width:400px; padding:5px; overflow-y:auto;}\n#b8 div{border:1px solid #FF9900; height:20px; width:350px; padding:2px 5px;}\n#b8 div a{margin-right:20px;}\n.style4{float:left; background-color:#999999; text-align:left; list-style-type:none; padding:2px 5px; color:#FFFFFF;}\n", "\n\n", "\n", "\n        \n        ", "\n        \n          ", "\n            ", "\n", "规划报告", "\n              ", "规划工程库", "\n              ", "工程专题", "\n", "\n", "\n          ", "\n            ", "\n            456\n            ", "\n            ", "\n                var bba = new opCard();", "\n                bba.bind = [\"a2\",\"li\",\"b2\",\"div\"];", "\n                bba.style = [\"style1\",\"style2\",\"style1\"];", "\n                bba.overStyle = true;", "\n                bba.creat();", "\n                bba = null;\n            ", "\n            ", "33333", "\n          ", "\n        \n        ", "\n\n    \n    ", "\n  "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以下答案由GPT-3.5大模型与博主波罗歌共同编写&amp;#xff1a;&lt;br /&gt;首先&amp;#xff0c;卡死问题可能与以下因素有关&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;时钟源设置不正确或时钟频率过高&amp;#xff0c;导致systick定时中断无法正常触发。&lt;/li&gt;&lt;li&gt;嵌套循环或计算量过大&amp;#xff0c;导致systick定时中断中的延时函数无法正常执行。&lt;/li&gt;&lt;li&gt;可能存在某些变量或指针未初始化或指向错误的内存地址&amp;#xff0c;导致程序出现意外错误。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;针对这些问题&amp;#xff0c;建议你按照以下步骤逐个排查&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;确认时钟源设置是否正确&amp;#xff0c;可以通过查看时钟频率是否与预期一致来判断。如果时钟频率过高&amp;#xff0c;可以尝试将其降低&amp;#xff0c;或者使用硬件定时器来代替systick定时中断实现延时功能。&lt;/li&gt;&lt;li&gt;如果嵌套循环和计算量过大&amp;#xff0c;可以尝试优化代码&amp;#xff0c;如将计算结果缓存起来以减少重复计算&amp;#xff0c;或者将循环中的计算分解成多个步骤&amp;#xff0c;以便在每次systick定时中断中执行部分计算。&lt;/li&gt;&lt;li&gt;通过逐个检查变量和指针的初始化情况&amp;#xff0c;可以排除这种可能性。另外&amp;#xff0c;建议在代码中加入断言&amp;#xff08;assert&amp;#xff09;等调试手段&amp;#xff0c;以确保程序正确性。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;同时&amp;#xff0c;建议你提供更详细的代码、调用堆栈和硬件平台信息&amp;#xff0c;以便更准确地定位问题。&lt;br /&gt;如果我的回答解决了您的问题&amp;#xff0c;请采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["delay里systick->crtl卡死奇怪问题", ["图一是我自己写的逆运动学函数，可以看到有三条算式pypxpz。现在的状态是运行不了的，会卡死在函数里面的一个Delay_ms里面（卡死在systick->crtl这一步），如下图。但是当我删除pz，py，px任意一条算式，或者删除for循环，函数都能正常运行（Delay_ms不会卡死）。下图是delay函数。", "\n", "这些函数我在几个小时前测试过，全部都是能用的，但是后来我加入了蓝牙模块，将这些函数放进串口接收函数的中断函数里调用，但是调用不成功，也是在delay那里卡死（systick->crtl那里死循环）。然后当我去掉串口，拔掉蓝牙后，就发生了上的情况，连独立调用都不成功了，然后换过板子试过，也是如此，可以排除板子问题。唯一解决问题的办法是改掉delay的时钟源。但是改完之后只有上述的函数运行速度快了1000倍，所以要在函数里加Delay_ms（100000）才能正常使用（同样的，如果去掉某算式，或者去掉循环，函数恢复正常速度）。总结问题如下：", "\n", "\n", "时钟源改成FCLK后的Delay_ms:", "\n", "目标是不需要去除任何代码也能成功运行。猜测是算力不足？或者代码量过大？嵌套过多导致？板子是合泰公司的ht32f52352，基本逻辑架构和stm32f1是一样的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;稍等&amp;#xff0c;帮你写一个&lt;/p&gt;\n&lt;p&gt;说白了&amp;#xff0c;这就是鸡兔同笼问题&amp;#xff0c;只不过2种动物你分别认为有20和10只脚而已。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\ntotal &amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;# 需要支付的总额&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;# 统计方案总数&lt;/span&gt;\n\nfor i in range(&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 枚举20元数量&lt;/span&gt;\n    for &lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;in range(&lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 枚举10元数量&lt;/span&gt;\n        if i * &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;* &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#61;&amp;#61; total:  &lt;span class=\"hljs-comment\"&gt;# 判断是否可以凑出总额&lt;/span&gt;\n            print(&lt;span class=\"hljs-string\"&gt;&amp;#34;20元&amp;#xff1a;%d张&amp;#xff0c;10元&amp;#xff1a;%d张&amp;#xff0c;总数&amp;#xff1a;%d&amp;#34;&lt;/span&gt; % (i, &lt;span class=\"hljs-keyword\"&gt;j, &lt;/span&gt;i &amp;#43; &lt;span class=\"hljs-keyword\"&gt;j))\n&lt;/span&gt;            &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#34;共有%d种支付方式。&amp;#34;&lt;/span&gt; % &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "for循环的嵌套", "Question": ["Python计算付款方式", ["只想到用for循环的嵌套，不知道这个思路对不对，还是不知道从哪开始写写，应该从哪里入手"]], "Tag": "程序设计"}
