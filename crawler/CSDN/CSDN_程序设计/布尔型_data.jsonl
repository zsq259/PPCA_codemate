{"Answer": "&lt;p&gt;在JAVA中&amp;#xff0c;对于boolean字节的判定&amp;#xff0c;1个字节或者4个字节。&lt;br /&gt;这道题C语言可以解答&amp;#xff0c;Java不行&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["1022：整型与布尔型的转换", ["【题目描述】", "将一个整型变量的值赋给一个布尔型变量，再将这个布尔型变量的值赋给一个整型变量，得到的值是多少？", "\n", "【输入】", "一个整型范围内的整数，即初始时整型变量的值。", "\n", "【输出】", "一个整数，经过上述过程后得到的结果。", "\n", "【输入样例】", "3", "【输出样例】", "1", "\n", "请问Java如何做"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff01;&lt;br /&gt;bool索引的意思就是&amp;#xff0c;是True的对应那一行就索引到了&amp;#xff0c;是False对应的那一行就不会索引。&lt;br /&gt;这里的mask&amp;#61;[1,0,1]&amp;#xff0c;mask的类型为bool&amp;#xff0c;因为mask放在索引的行下标位置&amp;#xff0c;所以mask第一个值True对应arr第一行&amp;#xff0c;mask第二个值False对应arr第二行&amp;#xff0c;mask第三个值True对应arr第三行&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["jupyter中使用布尔值索引访问数据", ["In〔42〕中这个布尔数组索引的是第一三行的元素，为什么，怎么看出来的？[1，0，1]怎么对应的第一三行？", "\n"]], "Tag": "程序设计"}
{"Answer": "可以的  对于HTTP来说 布尔值跟字符串 数组 都是一样的  都是字符串\r\n区别是在后端拿到参数以后解析之后 才有数据类型的。\r\n比如PHP传数组的时候这样写 index.php?a[]=1,2,3", "Konwledge_Point": "布尔型", "Question": ["http ,get请求参数可以是布尔类型吗？可以数组吗？", ["如 get  :  http://host/user?gender=true", "\n\n", "都支持哪些类型？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;){\n        string strX, strY;\n        &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; x &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;, y &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;x &amp;#61; &amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; strX;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strX &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;true&amp;#34;&lt;/span&gt;) {\n            x &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        }\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;y &amp;#61; &amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; strY;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strY &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;true&amp;#34;&lt;/span&gt;) {\n            y &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        }\n\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;x xor y &amp;#61; &amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x ^ y){\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;true&amp;#34;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;false&amp;#34;&lt;/span&gt;;\n        }\n        cout &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "布尔型", "Question": ["c++布尔变量问题，如何解决", ["异或相关的结果怎么表示呢", "异或相关的结果怎么表示呢", "异或相关的结果怎么表示呢"]], "Tag": "程序设计"}
{"Answer": "do{}while()不管flag初始值是true还是false，它都会先执行一次{}再进行判断，该程序的运行结果是一样的，while()do{}则不一样。", "Konwledge_Point": "布尔型", "Question": ["在do-while循环语句中关于定义，判断布尔类型的问题", ["当定义boolean flag=false或者boolean flag=true时，该程序的运行结果是一样的。", "\nwhile(flag)或者while(!flag)与定义的flag没有关系吗？while(flag)的含义永远是falg=true时继续，而while(！flag)的含义永远是!falg=true时继续吗？", "\n\n", "public class Test {", "\n    public static void main(String[]args){", "\n        Scanner input=new Scanner(System.in);", "\n        boolean flag=false;", "\n        do{", "\n            System.out.println(\"请输入数据：\");", "\n            int num=input.nextInt();", "\n            if(num<10){", "\n                System.out.println(\"继续执行：\");", "\n                flag=true;", "\n            }", "\n            else{", "\n                System.out.println(\"程序中止！\");", "\n                flag=false;", "\n            }", "\n        }while(flag);", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;stdbool.h中对bool的定义&amp;#xff0c;就是1和0&amp;#xff0c;可以用%d输出。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;ifndef&lt;/span&gt; _STDBOOL&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _STDBOOL&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; __bool_true_false_are_defined 1&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;ifndef&lt;/span&gt; __cplusplus&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; bool  _Bool&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; false 0&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; true  1&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;endif&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;/* __cplusplus */&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;endif&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;/* _STDBOOL */&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "布尔型", "Question": ["布尔型数据用printf输出时是用%d吗？", ["布尔型数据用printf输出时是用%d吗？整型赋值给布尔型数据时是怎么赋的？"]], "Tag": "程序设计"}
{"Answer": "Java 语言中非零就是真，布尔本质就是 int 数值类型，存的是 0和1 。\r\n布尔类型主要用来存储逻辑结果的，是否满足某种条件之类的业务都可以定义为该类型，但是实际开发时数据库映射字段时有坑，建议去看看阿里开发者手册里面有讲布尔字段的使用事项。", "Konwledge_Point": "布尔型", "Question": ["关于Java语言中布尔运算的意思，布尔运算在实际开发中有意义么？需要掌握么", ["关于Java语言中布尔运算的意思，布尔运算在实际开发中有意义么？需要掌握么", "\n关于Java语言中布尔运算的意思，布尔运算在实际开发中有意义么？需要掌握么"]], "Tag": "程序设计"}
{"Answer": "```\r\n\t public static void main(String[] args) {\r\n\t\tboolean[] booleans = {false,true,false,false,true,false};\r\n\t\t\r\n\t\tboolean res = false ;\r\n\t\t\r\n\t\tfor(boolean b : booleans){\r\n\t\t\tres |= b;\r\n\t\t\tSystem.out.println(res);\r\n\t\t}\r\n\t\t\r\n\t}\r\n```", "Konwledge_Point": "布尔型", "Question": ["小白求教！布尔类型的数组，所有元素做或运算，用Java应该怎么写啊？", ["小白求教！布尔类型的数组，所有元素做或运算，用JAVA应该怎么写啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It's actually not as strange it seems. &lt;a href=\"http://php.net/manual/en/language.operators.precedence.php\" rel=\"noreferrer\"&gt;&lt;code&gt;(bool)&lt;/code&gt; has higher precedence than &lt;code&gt;==&lt;/code&gt;&lt;/a&gt;, so this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump((bool) 1==2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is equivalent to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump(  ((bool) 1)   == 2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump(true == 2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Due to &lt;a href=\"http://www.php.net/manual/en/types.comparisons.php#types.comparisions-loose\" rel=\"noreferrer\"&gt;type juggling&lt;/a&gt;, the &lt;code&gt;2&lt;/code&gt; also essentially gets cast to &lt;code&gt;bool&lt;/code&gt; (since this is a \"loose comparison\"), so it's equivalent to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump(true == true);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump(true);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["类型转换为布尔值", ["\n\n", "Can someone explain me why this:", "\n\n", "var_dump((bool) 1==2);\n", "\n\n", "returns", "\n\n", "bool(true)\n", "\n\n", "but ", "\n\n", "var_dump(1==2);\n", "\n\n", "returns", "\n\n", "bool(false)\n", "\n\n", "Of course the second return is correct, but why in the first occasion php returns an unexpected value?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In your case you can give the arguments numeric values when calling the function (you want to use them as numeric in your query anyway).&lt;/p&gt;\n\n&lt;p&gt;Try: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function list_products($sold = 0, $featured = 0) {\n    global $link;\n    $result = mysqli_query($link, \"SELECT * FROM products product JOIN images image ON product.id = image.product_id WHERE product.main_image = image.id AND product.sold = $sold AND product.featured = $featured\") or die(mysqli_error($link));\n}\n\nlist_products(0, 1);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["如何将布尔参数传递给php函数？", ["\n\n", "When I try to get the value of \"sold\" and \"featured\" I get nothing. What am I doing wrong?", "\n\n", "function list_products($sold = false, $featured = false) {\n    global $link;\n    $result = mysqli_query($link, \"SELECT * FROM products product JOIN images image ON product.id = image.product_id WHERE product.main_image = image.id AND product.sold = $sold AND product.featured = $featured\") or die(mysqli_error($link));\n}\n\nlist_products(false, true);\n", "\n\n", "Edit: If I try to echo $sold or $featured, they are blank. A 1 or 0 should show.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes you can do it with or without a form. But better with form &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;form method=\"post\" action=\"/visitas\"&amp;gt;\n    &amp;lt;input type=\"hidden\" name=\"visitaID\" value=\"$visita-&amp;gt;id\"/&amp;gt;\n    &amp;lt;button class=\"btn btn-lg btn-success\" type=\"submit\"&amp;gt;\n        Confirmar Visita\n    &amp;lt;/button&amp;gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Define the route&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Route::post('visitas', 'VistaController@update');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Write the function the controller&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function update(Request $request)\n{\n    $visita = Visita::find($request-&amp;gt;visitaID);\n    $visita-&amp;gt;confirmacao = 1;\n    $visita-&amp;gt;update();\n\n    return redirect()-&amp;gt;back()-&amp;gt;with('message', 'visita updated');\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That's one way of doing it.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["LARAVEL  - 按钮更改DB中的布尔值", ["\n\n", "when i click the success button i have to change 'confirmação' value to 1.", "\n\n", "Is that possible?\nI have to create a form to do this?", "\n\n", " Schema::create('visitas', function (Blueprint $table) {\n            $table->increments('id');\n            $table->date('data');\n            $table->time('hora');\n            $table->boolean('confirmacao')->default(0);\n            $table->integer('imovel_id');\n            $table->integer('client_id');\n            $table->timestamps();\n", "\n\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes, you've had too much coffee. You need to use &lt;code&gt;microtime(true)&lt;/code&gt; otherwise your date calculations are working on the milliseconds but completely ignoring seconds. Also, use &lt;em&gt;current time&lt;/em&gt; - &lt;em&gt;start time&lt;/em&gt; to measure duration, not &lt;em&gt;start time&lt;/em&gt; - &lt;em&gt;current time&lt;/em&gt;, or else you get a negative time. Try the following code instead:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$how_many = 5000000;\n$counter1 = 0;\n$counter2 = 0;\n\n$abc = array('boolean_lookup'=&amp;gt;TRUE, 'string_lookup'=&amp;gt;'something_else');\n\n$start = microtime(true);\nfor($i = 0; $i &amp;lt; $how_many; $i++)\n{\n    if($abc['boolean_lookup'])\n    {\n        $counter1++;\n    }\n\n}\n\necho \"FIRST: \", (microtime(true) - $start), \"\n\";\n\n$start = microtime(true);\nfor($i = 0; $i &amp;lt; $how_many; $i++)\n{\n    if($abc['string_lookup'] == 'something_else')\n    {\n        $counter2++;\n    }\n\n}\n\necho \"SECOND: \", (microtime(true) - $start), \"\n\";\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["PHP字符串vs布尔速度测试", ["\n\n", "I'm looking at trying to optimise a particular function in a PHP application and foolishly assumed that a boolean lookup in an 'if' statement would be quicker than a string compare. But to check it I put together a short test (see below) using ", "microtime", ". To my surprise, the string lookup was quicker.", "\n\n", "Is there anything wrong with my test (I'm wired on too much coffee, so I'm suspicious of my own code)? If not, I would be interested in any comments people have around string versus boolean lookups in PHP.", "\n\n", "The result for the first test (boolean lookup) was 0.168 seconds.", "\n\n", "The result for the second test (string lookup) was 0.005 seconds.", "\n\n", "<?php\n    $how_many = 1000000;\n    $counter1 = 0;\n    $counter2 = 0;\n\n    $abc = array('boolean_lookup'=>TRUE, 'string_lookup'=>'something_else');\n\n    $start = microtime();\n    for ($i = 0; $i < $how_many; $i++)\n    {\n        if ($abc['boolean_lookup'])\n        {\n            $counter1++;\n        }\n    }\n\n    echo ($start - microtime());\n\n    echo '<hr>';\n\n    $start = microtime();\n    for ($i = 0; $i < $how_many; $i++)\n    {\n        if ($abc['string_lookup'] == 'something_else')\n        {\n            $counter2++;\n        }\n    }\n\n    echo ($start - microtime());\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;c里没有bool类型&amp;#xff0c;用int代替&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["在VS2019中这个布尔变量有什么问题吗？为啥不对呢？", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/843320869646192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这样看&amp;#xff0c;还觉得初始化了吗&amp;#xff0c;看代码当然知道for里面一定会走&amp;#xff1b;但是编译器并不会这样觉得&amp;#xff0c;for里面只有第一个定义会走&amp;#xff0c;其他的不一定会走&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["java中关于布尔型变量遇到的问题", ["问题：对布尔型变量定义之后，明明后面对变量赋了值，但在使用时依然提醒没有初始化", "\n", "\n", "public", " ", "class", " ", "ArrayFind", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n\n        ", "//线性查找", "\n        ", "String", "[] arr = ", "new", " ", "String", "[]{", "\"AA\"", ", ", "\"BB\"", ", ", "\"CC\"", ", ", "\"DD\"", ", ", "\"EE\"", ", ", "\"FF\"", "};\n        ", "String", " dest = ", "\"BB\"", ";\n        ", "boolean", " isFind;\n        ", "for", " (", "int", " i = ", "0", "; i < arr.length;i++){\n            isFind = ", "true", ";\n            ", "if", " (dest.", "equals", "(arr[i])){\n                isFind = ", "false", ";\n                System.out.", "println", "(i);\n                ", "break", ";\n            }\n        }\n        ", "if", " (isFind)\n        {\n            System.out.", "println", "(", "\"很遗憾没找到\"", ");\n        }\n\n\n    }\n}\n\n\n", "\n", "\n", "F:\\Java_workspace\\Day3\\src\\ArrayFind.java:16:13", "java: 可能尚未初始化变量isFind", "\n", "将boolean isFind那一句改成Boolean isFind = true;后面可以使用", "\n", "我想知道里面的内在原因是什么，后面对isFind变量赋了值，为什么提示没有初始化。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You aren't doing anything wrong per se, it's just that when it gets posted, it looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;operation=add_cart&amp;amp;isClass=true&amp;amp;itemId=1234\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;PHP can't tell what the data type is because it isn't passed, it's always just a string of POST data, so compare it to &lt;code&gt;\"true\"&lt;/code&gt; to do your checks, like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if($_POST['isClass'] === \"true\")\n{\n  //Code to add class to session cart\n}\nelse\n{\n  //Code to add pack to session cart\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["通过AJAX发布的布尔变量在服务器端被视为字符串", ["\n\n", "Following is a part of an AJAX functionality to add classes and packs to session cart:-", "\n\n", "The jquery part", "\n\n", "function addClassToCart(itemId)\n{\n   addItemToCart(itemId,true);\n}\n\nfunction addPackToCart(itemId)\n{\n   addItemToCart(itemId,false);\n}\n\nfunction addItemToCart(itemId,isClass)\n{   \n     $.post(url+\"/ajax/add_cart\", { operation: 'add_cart','isClass':isClass, 'itemId': itemId},\n        function(data)\n        {\n               if(data.success)\n               {\n                      alert(\"item added to cart\");\n               }\n        }, \"json\");\n\n}\n", "\n\n", "The AJAX request processing php part -", "\n\n", "//Checking operation and other posted parameters\nif($_POST['isClass'])\n{\n  //Code to add class to session cart\n\n}\nelse\n{\n  //Code to add pack to session cart\n}\n", "\n\n", "The strange thing", "\n\n", "No matter whether I pass true/false (by calling addClassToCart() and addPackToCart()), always the code to add class to session cart executes.", "\nIf I put echo statements there like this:-", "\n\n", "    if($_POST['isClass'])\n    {\n      echo \"see if condition \".$_POST['isClass'];\n    }\n    else\n    {\n      echo \"see else condition \".$_POST['isClass'];\n    }\n", "\n\n", "This is the output:-  ", "\n\n", "addClassToCart()    ", "see if condition true", "\naddPackToCart()     ", "see if condition false", "\n\n", "Putting conditions like this in the jquery code however works fine:-", "\n\n", "function addItemToCart(itemId,isClass)\n {  \n     if(isClass)\n        alert(\"is class\");\n     else\n        alert(\"is pack\");\n }\n", "\n\n", "Finally, if I alter the server side code to this:-", "\n\n", "if($_POST['isClass'] === true)\n        {\n          echo \"see if condition \".$_POST['isClass'];\n        }\n        else\n        {\n          echo \"see else condition \".$_POST['isClass'];\n        }\n", "\n\n", "These are the outputs - ", "\n\n", "addClassToCart()    ", "see else condition true", "\naddPackToCart()     ", "see else condition false", "\n\n", "So, why is the boolean variable treated as a string here? Am I doing something wrong in posting parameters?", "\n\n", "Thanks,\nSandeepan", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while(true)就是死循环&amp;#xff0c;一直执行while循环的循环体&amp;#xff0c;直到运行程序,guessNumber &amp;#61; number 即猜对数字时执行else分支&amp;#xff0c;break语句退出while循环。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/973319443466148.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["请问这个，while（true）{}循环部分，下面没有布尔型，问什么这里循环判断条件使用true时运行还是正确的呢", ["请问这个，while（true）{}循环部分，下面没有布尔型，问什么这里循环判断条件使用true时运行还是正确的呢", "电脑怎么知道什么时候是true？？", "（重点在下图的while循环这里）"]], "Tag": "程序设计"}
{"Answer": "-_-!\r\n\r\n三元表达式\r\ntrue就赋值?后的，false就赋值:后的值", "Konwledge_Point": "布尔型", "Question": ["isConnected = (isSink) ? true : false这是什么格式啊 这个？什么意思=。=看不懂啊", ["currentLevel = tmpLevel = isSink ? 0 : NO_LEVEL;", "\n    currentSinkID = tmpSinkID = isSink ? self : NO_SINK;", "\n\n", "isConnected = (isSink) ? true : false;\nisScheduledNetSetupTimeout = false;\ncurrentSequenceNumber = 0;\n"]], "Tag": "程序设计"}
{"Answer": "全局变量是可以改变的，但是你确定userurl.getText().toString() 有内容吗？可以打印出来看看", "Konwledge_Point": "布尔型", "Question": ["JAVA无法修改全局变量的问题", ["public class constants{", "\n        public static string URL；", "\n}", "\npublic class SeturlActivity extends Activity{", "\n    EditText userurl;", "\n    Button newurl;", "\n    protected void onCreate(Bundle savedInstanceState) {", "\n    super.onCreate(savedInstanceState);", "\n        setContentView(R.layout.layout_seturl);", "\n        initView();", "\n        newurl.setOnClickListener(new OnClickListener() {", "\n            @Override", "\n            public void onClick(View v) {", "\n                Constants.URL = userurl.getText().toString();", "\n                System.out.println(Constants.URL);", "\n                Toast.makeText(getBaseContext(), \"设置完成！\", Toast.LENGTH_SHORT).show();", "\n            }", "\n        });", "\n}", "\ninitView类我就不放出来的就是定义控件而已。在这里显示URL的值是我填上去的，可是在后面的打印和LOG中显示的URL值是NULL，想问一下这是为什么呢？是因为全局变量的值没办法改变吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;d;\n    &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt; b&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;d;\n    String c&amp;#61;&amp;#34;hello&amp;#34;,d&amp;#61;&amp;#34;bye&amp;#34;;\n    &lt;span class=\"hljs-type\"&gt;Boolean&lt;/span&gt; Result &amp;#61; (!(b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;d &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;d) &amp;amp;&amp;amp;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;d &amp;lt;b)) ||(&amp;#34;N&amp;#34;.equals(d))&amp;amp;&amp;amp;((b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;d &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;d)||(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;d&amp;lt;b)) ||(&amp;#34;N&amp;#34;.equals(d));\n    &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt; Total &amp;#61; c.length()&amp;#43;Math.pow(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    //或者&lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt; Total &amp;#61; c.length()&amp;#43;(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;Result&amp;#61;&amp;#34;&amp;#43;Result);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;,Total&amp;#61;&amp;#34;&amp;#43;Total);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "布尔型", "Question": ["用常用的运算符和表达式，并熟练地进行计算和判断。声明下列变量并赋值，计算下列表达式的值，用布尔型变量Result和Double型变量Total存放结果，运行并观察计算结果。", ["a=3，b-4，c-\"hello\",d \"bye\"", "表达式为", "c.Length+15*2/4^2", "(!(b = 3 + 1) &&(2 <b)) |(d = \"N\")((b=3+1)||(2<b)) /|(d =\"N\")"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're comparing the actual function to true, not the function result, you need to call the function, e.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func d() bool {\n    var e bool\n    return e\n}\n\nif d() {\n    fmt.Printf(\"true\")\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "布尔型", "Question": ["高朗的布尔型", ["\n\n", "How do I return a true or false from a function and then check it. This code returns an error: ", "mismatched types func() bool and bool", "\n\n", "func d() bool {\n    var e bool\n    return e\n}\n\nif d == true {\n    fmt.Printf(\"true\")\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "char类型的默认值是'\\u0000'，表示每个二进制位都为0的Unicode字符。至于为何显示为一个框，和你的编码有关。", "Konwledge_Point": "布尔型", "Question": ["java中char类型的默认值到底是什么？", ["java中char类型的默认值到底是什么？", "\n直接po代码和截图", "\n\n", "public class TestJavaDataType {\n\n    //字符型\n    char flag;\n\n    //布尔型\n    boolean sex;\n\n    /*数值型*/\n    //整数类型\n    byte number;\n\n    short age;\n\n    int workYears;\n\n    long money;\n\n    //浮点类型(小数类型)\n\n    float score;\n\n    double income;\n\n    public static void main(String[] args) {\n        TestJavaDataType testJavaDataType = new TestJavaDataType();\n        testJavaDataType.printJavaDataDefaultValue();\n    }\n\n    //打印java中8个基本数据类型的默认值\n    public void printJavaDataDefaultValue() {\n        System.out.println(\"**********打印java中8个基本数据类型的默认值**********\");\n        System.out.println(\"char / flag = \" + flag);\n        System.out.println(\"boolean / sex = \" + sex);\n        System.out.println(\"byte / number = \" + number);\n        System.out.println(\"short / age = \" + age);\n        System.out.println(\"int / workYears = \" + workYears);\n        System.out.println(\"long / money = \" + money);\n        System.out.println(\"float / score = \" + score);\n        System.out.println(\"double / income = \" + income);\n        System.out.println(\"**********打印java中8个基本数据类型的默认值**********\");\n    }\n}\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201807/30/1532881307_117357.gif)", "Konwledge_Point": "布尔型", "Question": ["用random.randint()方法定义一个整数型随机二维矩阵，返回布尔值。", ["用np.random.randint()方法定义一个整数型随机二维矩阵，并判断其中有没有一整列数为0，返回布尔值,写成一个函数，求大神指点。", "\n用python写，谢谢。"]], "Tag": "程序设计"}
{"Answer": "属性值只能是字符串，你加不加引号浏览器解析时都会帮你加上，自定义属性要用dom.getAttribute获取，至于布尔字符串值是什么，你最好直接按照字符串true/false来对比，js没有提供字符串转为布尔变量的方法，如parseInt，parseFloat等的字符串转换操作", "Konwledge_Point": "布尔型", "Question": ["div元素自定义的属性问题", ["一个div里面的自定义属性是“布尔型”，那么属性值要不要加双引号？即属性show=true还是show=\"true\"？"]], "Tag": "程序设计"}
{"Answer": "char没有默认值，这个文章很详细https://blog.csdn.net/eurus_/article/details/82714951", "Konwledge_Point": "布尔型", "Question": ["java中char类型的变量默认值显示的很奇怪？", ["java中char类型的变量默认值显示的很奇怪？", "\n大家直接看截图和代码吧！", "\n\n", "public class TestJavaDataType {\n\n    //字符型\n    char flag;\n\n    //布尔型\n    boolean sex;\n\n    /*数值型*/\n    //整数类型\n    byte number;\n\n    short age;\n\n    int workYears;\n\n    long money;\n\n    //浮点类型(小数类型)\n\n    float score;\n\n    double income;\n\n    public static void main(String[] args) {\n        TestJavaDataType testJavaDataType = new TestJavaDataType();\n        testJavaDataType.printJavaDataDefaultValue();\n    }\n\n    //打印java中8个基本数据类型的默认值\n    public void printJavaDataDefaultValue() {\n        System.out.println(\"**********打印java中8个基本数据类型的默认值**********\");\n        System.out.println(\"char / flag = \" + flag);\n        System.out.println(\"boolean / sex = \" + sex);\n        System.out.println(\"byte / number = \" + number);\n        System.out.println(\"short / age = \" + age);\n        System.out.println(\"int / workYears = \" + workYears);\n        System.out.println(\"long / money = \" + money);\n        System.out.println(\"float / score = \" + score);\n        System.out.println(\"double / income = \" + income);\n        System.out.println(\"**********打印java中8个基本数据类型的默认值**********\");\n    }\n\n\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;效果图如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"图片.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/583973803036175.png\" /&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# 1.输入一个整型的数a&amp;#xff0c;将其转换为浮点型以及布尔型。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 2.输入两个数a、b,计算a/b的值&amp;#xff0c;并将结果保留两位小数打印处理。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 3.输入字符串“人生苦短&amp;#xff0c;我用Python&amp;#34;,倒序输出。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 4.去掉字符串’python是一种解释型语言&amp;#39; 的空格&amp;#xff0c;并把小写p改为大写输出。&lt;/span&gt;\n\nten &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Enter a number:&amp;#39;&lt;/span&gt;)\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(ten)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt;(x))\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Enter a,b:&amp;#39;&lt;/span&gt;)\na, b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;a/b: {:.2f}&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(a/(b*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;)))\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Enter 人生苦短&amp;#xff0c;我用Python&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[::-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Enter python是一种 解释 型语言 &amp;#34;&lt;/span&gt;)\nstr2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(str2.replace(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;).replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;P&amp;#34;&lt;/span&gt;))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "布尔型", "Question": ["Python，有人会不", ["1.输入一个整型的数a，将其转换为浮点型以及布尔型。", "\n", "2.输入两个数a、b,计算a/b的值，并将结果保留两位小数打印处理。", "\n", "3.输入字符串“人生苦短，我用Python\",倒序输出。", "\n", "4.去掉字符串’python是一种解释型语言' 的空格，并把小写p改为大写输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Demo&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt;[] fig&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] fig1&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-comment\"&gt;//遍历赋值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;i&amp;#43;&amp;#43;){\n           fig[i]&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            fig1[i]&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//遍历打印&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(fig[i]);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(fig1[i]);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;测试如图&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/811518468336150.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "布尔型", "Question": ["我好难，教教我吧，JAVA编程题", ["编程实现：定义一个长度为8的布尔型数组，数组名为fig，并用循环语句将数组所有元素赋值为false。", "\n", "编程实现：定义一个长度为10的整型数组，数组名为fig，并用循环语句将数组所有元素赋值10。"]], "Tag": "程序设计"}
{"Answer": "好吧，简单的问题，却找不道答案，最后还是靠自己亲自答：\r\n\r\n在AS中如何方便的可以查看变量的变化，方法有多种，本人的方法如下：\r\n**运行app**，然后启动**debugge**,在**debugge**窗口下找到**Variables（变量视图）**，在此视图中点开this，其中找到相应的变量名即可。\r\n此时图还可以看到默认值，所以这是一个很方便的技巧，而不用花大量时间去log.X(....)。\r\n\r\n最终还是要谢谢回答者。", "Konwledge_Point": "布尔型", "Question": ["Android studio 怎么知道变量的默认值", ["\n\n", "上图是自己创建要用的布尔型数组", "\n\n", "\n\n", "用什么办法可以把它的默认值打印在这个地方"]], "Tag": "程序设计"}
{"Answer": "数字是new Number  ,Boolean  是 new Boolean()  new String(),只不过,这种声明方式有歧义,而且不简洁,基本上没人用..\r\n例如 new Array(1); 是声明一个长度为1 的数字 ,new Array(1,2);是声明一个长度为2 ,成员为数字1和2 的数字,\r\n但是你发现没有,你没有办法通过 new Array()声明一个长度为1,且第一个成员为数字1的数组..   so ...", "Konwledge_Point": "布尔型", "Question": ["javascript 构造函数的 疑惑", ["javascript权威指南中的一句话：“javascript语言核心中的原始类型都包含内置构造函数”。这是什么意思啊，原始类型不是布尔型，数字和字符串吗，它们的内置构造函数是什么东西？构造函数不是给对象初始化的吗，难道我 var a=1 的时候也是在用数字的内置构造函数在进行初始化吗？"]], "Tag": "程序设计"}
{"Answer": "小项目的话没那么严格，返回数字，字符串，抛异常都可以的。自己看着弄，这个没有硬性规定或者套路。。。", "Konwledge_Point": "布尔型", "Question": ["基于spring的web应用，如何处理服务层的错误？", ["比如我有个下订单的服务，PlaceOrderService，里面有个提交订单的方法，submitOrder()。如果提交订单失败，原因可能有很多，有业务相关的错误，也可能是IOException这种错误，显然，简单的返回 成功/失败 这种布尔型的值到Controller/Action里是不够的，大家是如何处理类似的情况的？", "\n是返回整形或者字符串型的状态码？", "\n还是返回各种自定义异常？", "\n还是有别的更好的办法？"]], "Tag": "程序设计"}
