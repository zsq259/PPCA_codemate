{"Answer": "&lt;p&gt;第10行改为v&amp;#61;(4&lt;em&gt;pi&lt;/em&gt;r&lt;em&gt;r&lt;/em&gt;r)/3;或v&amp;#61;(4/3.0)&lt;em&gt;pi&lt;/em&gt;r&lt;em&gt;r&lt;/em&gt;r;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请计算圆周长、圆面积和球的体积\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r,c,s,v;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;r);\n    &lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; pi 3.14159265&lt;/span&gt;\n    c&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi*r;\n    s&amp;#61;pi*r*r;\n    v&amp;#61;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*pi*r*r*r)/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆周长为%.2f\\n&amp;#34;&lt;/span&gt;,c);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆面积为%.2f\\n&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;球体积为%.2f\\n&amp;#34;&lt;/span&gt;,v);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["1.输入一个半径值，分别计算圆周长、圆面积和球的体积。要求使用符号常量定义圆周率。", ["不知道哪里出问题了，算出来的球的体积就是不对", "\n", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "printf", "(", "\"请计算圆周长、圆面积和球的体积\\n\"", ");\n    ", "float", " r,c,s,v;\n    ", "scanf", "(", "\"%f\"", ",&r);\n    ", "#", "define", " pi 3.14159265", "\n    c=", "2", "*pi*r;\n    s=pi*r*r;\n    v=(", "4", "/", "3", ")*pi*r*r*r;\n    ", "printf", "(", "\"圆周长为%.2f\\n\"", ",c);\n    ", "printf", "(", "\"圆面积为%.2f\\n\"", ",s);\n    ", "printf", "(", "\"球体积为%.2f\\n\"", ",v);\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "C99标准中这样规定：\r\n\r\n&gt; A variable declared without an explicit type name is assumed to be of type int.\r\n\r\n选项A等同于：\r\n\r\n\r\n\r\n```\r\n const int M = 10 \r\n```\r\n所以答案是A和C\r\n\r\n**用心回答每个问题，如果有帮助，请采纳答案好吗，谢谢~~~**", "Konwledge_Point": "符号常量", "Question": ["C++，下面哪个选项是错误的，答案为C，求解为什么", ["下列的符号常量定义中，错误的定义是（）", "\nA const M = 10 ", "\nB const int M = 10", "\nC const char ch", "\nD const bool mark = true ", "\n\n", "我觉得A和C都错啊！一个没有声明一个没有初始化！"]], "Tag": "程序设计"}
{"Answer": "# 问题解决请点采纳\r\n```\r\n#include &lt;stdio.h&gt;\r\n#define M 3\r\n#define N 4\r\nint main()\r\n{\r\nint aa[M][N],i=0,j=0,pp[M];\r\nprintf(\"Input 12 numbers:\\n\");\r\nfor(i=0; i &lt; M; i++)\r\nfor(j=0;j &lt; N; j++)\r\nscanf(\"%d\",&amp;aa[i][j]);\r\nfor(i=0;i&lt; M; i++)\r\n{\r\nint min=aa[i][0];\r\nfor (j = 1; j &lt; N; j++)\r\nif(min&gt;aa[i][j])\r\nmin=aa[i][j];\r\npp[i]=min;\r\n}\r\nfor(i=0;i&lt; M; i++)\r\nprintf(\"%d\\t\",pp[i]);\r\nprintf(\"\\n\");\r\nreturn 0;\r\n}\r\n```", "Konwledge_Point": "符号常量", "Question": ["请编写程序，定义一个M行N列（M和N是符号常量其数值分别是3和4）的二维数组aa并从键盘取值，求出二维数组每行中最小元素，并依次放入一维数组pp中，并输出这个一维数组。", ["对于这个问题我本人不清楚的地方是，我这个程序最后输出的结果好像是他的地址，所以我这个程序需要做怎样的修改才能正确的做出这道题目。", "\n\n", "#include", "\n#define M 3", "\n#define N 4", "\nint main()", "\n{", "\n    int aa[M][N],i=0,j=0,pp[12];", "\n    int min=aa[0][i];", "\n    printf(\"Input 12 numbers:\\n\");", "\n    for(i=0;i\n        for(j=0;j\n            scanf(\"%d\",&aa[i][j]);", "\n    for(j=0;j\n        if(min>aa[i][j])", "\n            min=aa[i][j];", "\n    pp[12]=min;", "\n    printf(\"%d\\t\",pp);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "js \r\nlet str = '10.92.221.19;10.92.221.20;10.92.221.21;10.92.221.23;10.92.221.24;10.92.221.25;10.92.221.26;10.92.221.27;10.92.221.28;10.92.221.29;10.92.221.30;10.92.221.31;10.92.221.32'\r\n    let arr = str.split(';');\r\n    let strs = '';\r\n    let num = 0;\r\n    arr.forEach((val,index) =&gt; {\r\n        let number = Number(val.replace(/\\./g, ''));\r\n        if (index === 0) {\r\n            strs += val + '-';\r\n            num = number\r\n        } else if (index === arr.length - 1) {\r\n            strs += val\r\n        } else {\r\n            if (num !== number - index) {\r\n                strs += arr[index-1] + ';' + val + '-'\r\n                num =  number - index\r\n            }\r\n        }\r\n    })\r\n    console.log(strs);", "Konwledge_Point": "符号常量", "Question": ["在写一个处理算法，想看看大家思路，可以用代码表示最好，任意语言均可", ["有这样的一系列用分号分开的ip地址", "\n\n", "10.92.221.19;10.92.221.20;10.92.221.21;10.92.221.23;10.92.221.24;10.92.221.25;10.92.221.26;10.92.221.27;10.92.221.28;10.92.221.29;10.92.221.30;10.92.221.31;10.92.221.32", "\n\n", "现在需要将连续的ip地址进行优化显示，变成", "\n\n", "10.92.221.19-21;10.92.221.23-32"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-objectivec\"&gt;#include&amp;lt;stdio.h&amp;gt;\nint main()\n{\n    int arr[6] &amp;#61; {4,7,11,5,10,3};\n    int *pi;\n    pi &amp;#61; &amp;amp;arr[0];\n    for (int i &amp;#61; 1; i &amp;lt; 6; i&amp;#43;&amp;#43;)\n    {\n        if (*pi &amp;lt; arr[i])\n            pi &amp;#61; &amp;amp;arr[i];\n    }\n    printf(&amp;#34;最大值 %d\\n&amp;#34;,*pi);\n    float sum &amp;#61; 0;\n    for (int i &amp;#61; 0; i &amp;lt; 6; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; arr[i];\n    }\n    printf(&amp;#34;平均数 %f\\n&amp;#34;,sum/6);\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"52\" src=\"https://img-ask.csdnimg.cn/upload/1620575594414.png\" width=\"133\" /&gt;&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["利用指针编写程序，对具有6个元素的整型数组，找出其中最大值并计算出该数组的平均数。怎么写呀？", ["利用指针编写程序，对具有6个元素的整型数组，找出其中最大值并计算出该数组的平均数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里的&lt;code class=\"language-javascript\"&gt;符号名&lt;/code&gt;就指的是一个不是数字的其他元素&amp;#xff0c;&lt;strong&gt;比如用a来代替1&amp;#xff0c;代码中所有a都表示1&lt;/strong&gt;(当然scanf里面那个a可不算哈&amp;#xff09;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;#define就是定义符号常量一种方法&amp;#xff0c;其中的&lt;code class=\"language-javascript\"&gt;标识符&lt;/code&gt;其实就是一个&lt;code class=\"language-javascript\"&gt;符号名&lt;/code&gt;&lt;/li&gt;&lt;li&gt;另外一种是枚举类型&amp;#xff0c;通过枚举定义枚举常量&lt;/li&gt;&lt;/ul&gt;\n&lt;blockquote&gt;\n&lt;p&gt;枚举类型见我的博客&amp;#x1f449;&lt;a href=\"https://blog.csdn.net/muxuen/article/details/122734810?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1644045516536_1644045564847_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/muxuen/article/details/122734810?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/186372540446180.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如果对你有帮助&amp;#xff0c;还请点个采纳&amp;#xff0c;万分感谢&amp;#xff01;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "符号常量", "Question": ["用符号名表示的常量叫符号常量", ["这句话里的“符号名”和“#define 标识符 常量”这句定义里的“标识符”有什么区别"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#define MAXSIZE 15&lt;br /&gt;while(i&amp;lt;&amp;#61;MAXSIZE)&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["c语言如何用符号常量替换while循环中的数值", ["如何用符号常量替换while中的15啊，希望各位学长学姐帮帮忙吧！大一新生一枚，不懂得如何编程，求指点"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-xml\"&gt;int fun(int a&lt;span class=\"hljs-comment\"&gt;[M]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[N]&lt;/span&gt;)\n{\n    int sum &amp;#61; 0;\n    int i;\n    for (i &amp;#61; 0; i &amp;lt; M; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; a&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt; &amp;#43; a&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[N - 1]&lt;/span&gt;;\n    }\n    for (i &amp;#61; 0; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt; &amp;#43; a&lt;span class=\"hljs-comment\"&gt;[M - 1]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt;;\n    }\n    return sum - a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt; - a&lt;span class=\"hljs-comment\"&gt;[M - 1]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[N - 1]&lt;/span&gt; - a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[N - 1]&lt;/span&gt; - a&lt;span class=\"hljs-comment\"&gt;[M - 1]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/1625404942137image.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["二维数组：求周边元素之和", ["二维数组：求周边元素之和", "通过函数求M行N列的二维数组周边元素之和（即第0行、M-1行、0列、N-1列所在的元素）。注意每个元素不重复加。", "\n", "函数接口定义：", "int fun(int a[M][N]) ;", "函数返回二维数组a周边（每个数不重复加）元素的和。", "\n", "裁判测试程序样例：", "\n", "#define M 5", "#define N 4", "#include \"stdio.h\"", "int fun(int a[M][N]) ;", "int main( )", "{", "  int a[M][N] , i , j ;", "    int y;", "    for(i=0;i<M;i++)", "     for(j=0; j<N; j++)", "            scanf(\"%d\", &a[i][j])  ;", "  y=fun(a) ;", "  printf(\"s=%d\",y) ;", "  return 0 ;", "}", "\n", "/* 请在这里填写答案 */", "输入样例：", "1 2 3 4", "3 4 5 6", "5 6 7 8", "8 9 0 1", "1 2 3 5", "输出样例：", "s=52"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;之前写了一个&amp;#xff0c;稍微有点差别&amp;#xff0c;你自己改改&amp;#xff0c;改不好在私信我&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\nstruct Student\n{\n\tint nmb;\n\tchar name[20];\n\tint score[3];\n};\n//录入数据\nvoid inputinfo(struct Student a[])\n{\n\tint i;\n\tprintf(&amp;#34;输入10个学生的学号&amp;#xff0c;姓名&amp;#xff0c;三门课的成绩&amp;#xff1a;\\n&amp;#34;);\n\tfor (i &amp;#61; 0;i&amp;lt; 10;i&amp;#43;&amp;#43;)\n\t{\n\t\tscanf(&amp;#34;%d %s %d %d %d&amp;#34;,&amp;amp;a[i].nmb,a[i].name,&amp;amp;a[i].score[0],&amp;amp;a[i].score[1],&amp;amp;a[i].score[2]);\n\t}\n}\n//科目成绩最高的学生信息\nvoid maxinfo(struct Student a[])\n{\n\tint i;\n\tint max1,max2,max3;\n\tint index1 &amp;#61; 0,index2 &amp;#61; 0,index3 &amp;#61; 0;\n\tmax1 &amp;#61; a[0].score[0];\n\tmax2 &amp;#61; a[0].score[1];\n\tmax3 &amp;#61; a[0].score[2];\n\tfor (i &amp;#61; 1;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t{\n\t\tif (a[i].score[0] &amp;gt; max1)\n\t\t{\n\t\t\tmax1 &amp;#61; a[i].score[0];\n\t\t\tindex1 &amp;#61; i;\n\t\t}\n\n\t\tif (a[i].score[1] &amp;gt; max2)\n\t\t{\n\t\t\tmax2 &amp;#61; a[i].score[1];\n\t\t\tindex2 &amp;#61; i;\n\t\t}\n\n\t\tif (a[i].score[2] &amp;gt; max3)\n\t\t{\n\t\t\tmax3 &amp;#61; a[i].score[2];\n\t\t\tindex3 &amp;#61; i;\n\t\t}\n\t}\n\n\tprintf(&amp;#34;科目1成绩最高的学生&amp;#xff1a;%d\\t%s\\t%d\\n&amp;#34;,a[index1].nmb,a[index1].name,a[index1].score[0]);\n\tprintf(&amp;#34;科目2成绩最高的学生&amp;#xff1a;%d\\t%s\\t%d\\n&amp;#34;,a[index2].nmb,a[index2].name,a[index2].score[1]);\n\tprintf(&amp;#34;科目3成绩最高的学生&amp;#xff1a;%d\\t%s\\t%d\\n&amp;#34;,a[index3].nmb,a[index3].name,a[index3].score[2]);\n\n}\n//平均成绩最高的学生信息\nvoid avginfo(struct Student a[])\n{\n\tint i &amp;#61; 0;\n\tfloat avg &amp;#61; 0.0;\n\tfloat maxavg &amp;#61; (a[0].score[0] &amp;#43; a[0].score[1]&amp;#43;a[0].score[2])/3.0;\n\tint index &amp;#61;0;\n\tfor (i &amp;#61; 1;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t{\n\t\tavg &amp;#61; (a[i].score[0] &amp;#43; a[i].score[1]&amp;#43;a[i].score[2])/3.0;\n\t\tif (avg &amp;gt; maxavg)\n\t\t{\n\t\t\tmaxavg &amp;#61; avg;\n\t\t\tindex &amp;#61; i;\n\t\t}\n\t}\n\tprintf(&amp;#34;平均分最高的学生&amp;#xff1a;%d\\t%s\\t%.2f\\n&amp;#34;,a[index].nmb,a[index].name,maxavg);\n}\n\n//按平均分从高到低排序\nvoid Sort(struct Student a[])\n{\n\tint i,j;\n\tfloat avg1,avg2;\n\tstruct Student tmp;\n\tfor (i &amp;#61; 0;i&amp;lt; 9;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (j &amp;#61; 0;j&amp;lt; 9-i;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tavg1 &amp;#61; (a[j].score[0] &amp;#43; a[j].score[1]&amp;#43;a[j].score[2])/3.0;\n\t\t\tavg2 &amp;#61; (a[j&amp;#43;1].score[0] &amp;#43; a[j&amp;#43;1].score[1]&amp;#43;a[j&amp;#43;1].score[2])/3.0;\n\t\t\tif(avg1 &amp;lt; avg2)\n\t\t\t{\n\t\t\t\ttmp &amp;#61; a[j];\n\t\t\t\ta[j] &amp;#61; a[j&amp;#43;1];\n\t\t\t\ta[j&amp;#43;1] &amp;#61; tmp;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(&amp;#34;number\tname\tmath\tChinese\tEnglish\taverage\\n&amp;#34;);\n\tfor (i &amp;#61; 0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t{\n\t\tavg1 &amp;#61; (a[i].score[0] &amp;#43; a[i].score[1]&amp;#43;a[i].score[2])/3.0;\n\t\tprintf(&amp;#34;%d\\t%s\\t%d\\t%d\\t%d\\t%.2f\\n&amp;#34;,a[i].nmb,a[i].name,a[i].score[0],a[i].score[1],a[i].score[2],avg1);\n\t}\n}\n\nint main()\n{\n\tstruct Student a[10];\n\tinputinfo(a);\n\tmaxinfo(a);\n\tavginfo(a);\n\tSort(a);\n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["编写程序处理M个学生N门课程的成绩（M，N定义为符号常量），分别用函数实现以下功能：", ["编写程序处理M个学生N门课程的成绩（M，N定义为符号常量），分别用函数实现以下功能：", "\n（1）从键盘输入学号、姓名、课程名称、及各科成绩，并保存到文本文件“inputdata.txt”中；", "\n（2）计算每个学生的平均分；", "\n（3）计算每门课的平均分；", "\n（4）对成绩信息按学生平均分进行排序（降序，最高分排第1位）。", "\n（5）将已排好序的成绩信息输出到文本文件“outputdata.txt”中，包括学号、姓名、课程名称、及各科成绩（注意输出信息对齐），参考效果如下：", "\n ", "\n\n", "要求：", "\n1、    相关变量及数组在主函数中定义； ", "\n2、    用结构体类型的指针变量完成相应功能；"]], "Tag": "程序设计"}
{"Answer": "并没有定义far啊？\r\n\r\n你define的是FAR，那个define的意思是把FAR替换成far，但far本身没有被定义。所以编译器看到了`typedef void far`，认为你给void起了个别名far，所以让你在far后面，也就是*前面加一个分号。", "Konwledge_Point": "符号常量", "Question": ["C++ void 符号常量指针", ["初学 C++", "\n编译器（vs2012）上有这样一段代码无法编译：typedef void far * XMSDRIVER;", "\n在 * 处提示错误 “应输入；”", "\n\n", "关于 far 的定义如下：", "\n#ifndef FAR", "\n#ifdef NEED_FAR_POINTERS", "\n#define FAR  far", "\n#else", "\n#define FAR", "\n#endif", "\n#endif"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; M 6&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d[N]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x[M];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; maxv&amp;#61;d[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],maxIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,minv&amp;#61;d[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],minIndex &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; avg &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//给x赋值&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个大小不等的浮点型数据&amp;#xff1a;&amp;#34;&lt;/span&gt;,M);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;M;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;x[i]);\n\n    &lt;span class=\"hljs-comment\"&gt;//找d中的最大值和最小值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d[i] &amp;gt; maxv)\n        {\n            maxv &amp;#61; d[i];\n            maxIndex &amp;#61; i;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d[i] &amp;lt; minv)\n        {\n            minv &amp;#61; d[i];\n            minIndex &amp;#61; i;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数组d中的最大值为%d,下标为%d\\n&amp;#34;&lt;/span&gt;,maxv,maxIndex);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数组d中的最小值为%d,下标为%d\\n&amp;#34;&lt;/span&gt;,minv,minIndex);\n\n    &lt;span class=\"hljs-comment\"&gt;//计算平均值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;M;i&amp;#43;&amp;#43;)\n        avg &amp;#43;&amp;#61; x[i];\n    avg&amp;#61;avg/M;\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数组x的平均值为%.2f\\n&amp;#34;&lt;/span&gt;,avg);\n    &lt;span class=\"hljs-comment\"&gt;//求小于平均值的下标和&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数组x中小于平均值的值及其下标&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;M;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x[i] &amp;lt; avg)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;值&amp;#xff1a;%.2f 下标&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,x[i],i);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["C语言查找数组中的最大值和最小值、计算平均值", ["1、定义一个大小为10的整型一维数组d和大小为6的单精度浮点型数组x，要求使用符号常量代替10和6(如 #define M  6，M即为符号常量，代表6)，将数组d初始化为“10, 2, 3, 4, 5, 50, 11, 20, 10, 9”。应用循环语句，从键盘给数组x的各元素输入数据，注意数据类型和输入格式字符匹配，要求数据大小不相等。", "2、查找并输出数组d中的最大值和最大值对应的下标; 查找并输出数组d中的最小值和最小值对应的下标。在不同行输出最大值和最小值及其下标。", "3、求数组x中各元素之和的平均值并输出平均值(保留2位小数)，另外输出x中元素小于平均值的所有元素的下标和元素值，输出元素数据保留2位小数，数据项之间有空格，每个元素输出在不同的行。", "按以上要求编写程序。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先定义一个 double 型的sum 变量 在读入数据的同时将数组元素累加起来&lt;br /&gt;2.求平均值&lt;br /&gt;3.扫描一遍数组&amp;#xff0c;每次求元素与平均值差的平方并累加方差变量 p 中&lt;br /&gt;4.最后再输出 p/N 即可&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["有人能用c语言编写求数组方差吗", ["vc中的声明一个长度为N的数组。从用户处读取N个数字，将其存储到数组中，并计算方差。（您可以使用符号常量来给出N，也可以使用scanf（）函数来输入N。）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入时用两层循环进行输入&amp;#xff0c;一层循环M次&amp;#xff0c;一层循环N次&amp;#xff0c;能理解吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\nfor(&lt;span class=\"hljs-keyword\"&gt;j&amp;#61;0; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;j&amp;lt;M; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;j&amp;#43;&amp;#43;)\n&lt;/span&gt;    {\n        for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i&amp;lt;N; i&amp;#43;&amp;#43;)&lt;/span&gt;\n        {\n           &lt;span class=\"hljs-keyword\"&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;aa[j][i]);\n&lt;/span&gt;        }\n        \n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["请问这个要怎么改？🙏🏻", ["请编写程序，定义一个M行N列（M和N是符号常量其数值分别是3和4）的二维数组aa并从键盘取值，编写函数fine_min求出二维数组每行中最小元素，并依次放入一维数组中。", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n #define RATE 0.5\r\nint main()\r\n{\r\nint 里程;\r\nscanf(\"%d\", &amp;里程);\r\nprintf(\"费用=%lf\"), 里程 * (8.85*8.5/100.0+RATE));\r\n}\r\n```", "Konwledge_Point": "符号常量", "Question": ["求一个C++的问题，尽量详细一些，谢谢", ["求大佬帮看一个简单的编程问题假定高速公路的通行费按实际行驶里程进行收费，现行标准为收费比率RATE=0.50元/公里。某车百公里耗油量为8.5升，编写程序求该车的费用.(汽油价格为8.85元/升)     将收费比率定义为符号常量"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a[N],*p&amp;#61;a,max;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,p&amp;#43;i);\n    max &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f &amp;#34;&lt;/span&gt;,*(p&amp;#43;i));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max &amp;lt; *(p&amp;#43;i)) max &amp;#61; *(p&amp;#43;i);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nmax&amp;#61;%.2f&amp;#34;&lt;/span&gt;,max);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["c语言指针的一般问题", ["编写程序，定义N个元素的实型数组a（N是符号常量），定义指向这种数组元素的指针p。用指针p和scanf函数获取用户输入的N个数值存储在数组a中。用指针p求数组a中的最大值并输出。用指针p输出数组a的元素。", "环境要求:vs c++ 2010"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; M 6&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[M][M])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;M;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;M;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;j)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;M-j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n                    a[i][j] &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    a[i][j] &amp;#61; M-j;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;lt;M-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n                    a[i][j] &amp;#61; j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    a[i][j] &amp;#61; M-i;\n            }\n        }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[M][M];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;M;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;M;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i][j]);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["利用c语言编写数学矩阵", ["编写void  fun(int  a[M][M])函数，建立M*M的如下矩阵a，M为定义好的符号常量。", "若M为6矩阵a为", "1  1  1  1  1  1", "1  2  2  2  2  1", "1  2  3  3  2  1", "1  2  3  3  2  1", "1  2  2  2  2  1", "1  1  1  1  1  1", "若M为3矩阵a为", "1  1  1", "1  2  1", "1  1  1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样应该可以&lt;br /&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include&amp;lt;math.h&amp;gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    double weight,a,b,c,sum;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int num;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a&amp;#61;b&amp;#61;c&amp;#61;0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;apple num 1;banana num 2; watermelon num 3;total price 0\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        scanf(&amp;#34;%d&amp;#34;,&amp;amp;num);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        switch(num)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 0:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                sum &amp;#61; a &amp;#43; b &amp;#43; c;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;the total price is %.2f\\n&amp;#34;,sum);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 1:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;please input apple weight\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                scanf(&amp;#34;%lf&amp;#34;,&amp;amp;weight);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                a&amp;#61;weight&lt;/span&gt;&lt;em&gt;1.8;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 2:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;please input banana weight\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                scanf(&amp;#34;%lf&amp;#34;,&amp;amp;weight);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                b&amp;#61;weight&lt;/span&gt;&lt;/em&gt;1.9;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 3:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;please input watermelon weight\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                scanf(&amp;#34;%lf&amp;#34;,&amp;amp;weight);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                c&amp;#61;weight*2.2;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            default:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;no this fruit\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(num&amp;#61;&amp;#61;0)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["用c语言编一个程序，尽量容易懂", ["模拟超市的前台收款过程。以几种水果为例，设苹果每斤 1.8 元，香蕉每斤 1.9 元，", "西瓜每斤 2.2 元。输入水果的编号和重量，打印应付的钱数，再输入顾客付款数，打印出", "应找的钱数，设编号 0 表示结帐。", "【要求】", "1）利用符号常量预先规定各种水果的价格；", "2）如果输入的编号合法，则输出“input ** weight”，输入重量后，打印该水果的单", "价、重量及金额；如果输入的水果编号不存在，则打印相应的提示信息“no this fruit”，重", "新输入；如果输入的编号为 0，则打印“the total price is: **”。", "用c语言写一个程序 我不太行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#define M 20\n#define N 3\nstruct Student\n{\n\tint nmb;        //学号\n\tchar name[20];  //姓名\n\tint score[N];   //N门课程的成绩\n};\n//录入N门课程的课程名\nvoid InputKecheng(char b[][30])\n{\n\tint i;\n\tsystem(&amp;#34;cls&amp;#34;);\n\tprintf(&amp;#34;请输入%d门课程的名称:\\n&amp;#34;,N);\n\tfor (i &amp;#61; 0;i&amp;lt;N;i&amp;#43;&amp;#43;)\n\t{\n\t\tscanf(&amp;#34;%s&amp;#34;,b[i]);\n\t}\n}\n\n//录入学生成绩\nstruct Student * Inputinfo(struct Student *a,int n)\n{\n\tint i,j;\n\ta &amp;#61; (struct Student *)malloc(M*sizeof(struct Student));\n\tprintf(&amp;#34;输入%d个学生的学号&amp;#xff0c;姓名&amp;#xff0c;%d门课的成绩&amp;#xff1a;\\n&amp;#34;,n,N);\n\tfor (i &amp;#61; 0;i&amp;lt; n;i&amp;#43;&amp;#43;)\n\t{\n\t\tscanf(&amp;#34;%d %s&amp;#34;,&amp;amp;a[i].nmb,a[i].name);\n\t\tfor(j &amp;#61; 0;j&amp;lt;N;j&amp;#43;&amp;#43;)\n\t\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i].score[j]);\n\t}\n\treturn a;\n}\n\n\n//计算单个学生的平均成绩\nfloat Average(struct Student a)\n{\n\tint j;\n\tfloat avg &amp;#61; 0.0;\n\tfor (j &amp;#61; 0;j&amp;lt;N;j&amp;#43;&amp;#43;)\n\t{\n\t\tavg &amp;#43;&amp;#61; a.score[j];\n\t}\n\tavg /&amp;#61; N;\n\treturn avg;\n}\n//统计学生的平均成绩\nvoid TongjiAvg(struct Student *a,int n)\n{\n\tint i;\n\tsystem(&amp;#34;cls&amp;#34;);\n\tprintf(&amp;#34;学生的平均成绩分别为&amp;#xff1a;\\n&amp;#34;);\n\tfor (i &amp;#61; 0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n\t{\n\t\tprintf(&amp;#34;%d%20s\\t%.2f\\n&amp;#34;,a[i].nmb,a[i].name,Average(a[i]));\n\t}\n}\n\n\n//统计课程的平均成绩\nvoid TongjiKcAvg(struct Student *a,int n,char b[][30])\n{\n\tint i,j;\n\tfloat avg &amp;#61; 0.0;\n\tsystem(&amp;#34;cls&amp;#34;);\n\tprintf(&amp;#34;%d门课程的平均成绩分别为:\\n&amp;#34;,N);\n\tfor (i &amp;#61; 0;i&amp;lt;N;i&amp;#43;&amp;#43;)\n\t{\n\t\tavg &amp;#61; 0.0;\n\t\tfor (j &amp;#61; 0;j&amp;lt;n;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tavg &amp;#43;&amp;#61; a[j].score[i];\n\t\t}\n\t\tavg &amp;#61; avg/n;\n\t\tprintf(&amp;#34;%s\\t%.2f\\n&amp;#34;,b[i],avg);\n\t}\n}\n\n//按平均分从高到低排序\nvoid Sort(struct Student *a,int n,char b[][30])\n{\n\tint i,j;\n\tfloat avg1,avg2;\n\tstruct Student tmp;\n\tchar szt[] &amp;#61; &amp;#34;name&amp;#34;;\n\tfor (i &amp;#61; 0;i&amp;lt; n-1;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (j &amp;#61; 0;j&amp;lt; n-1-i;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tavg1 &amp;#61; Average(a[j]);\n\t\t\tavg2 &amp;#61; Average(a[j&amp;#43;1]);\n\t\t\tif(avg1 &amp;lt; avg2)\n\t\t\t{\n\t\t\t\ttmp &amp;#61; a[j];\n\t\t\t\ta[j] &amp;#61; a[j&amp;#43;1];\n\t\t\t\ta[j&amp;#43;1] &amp;#61; tmp;\n\t\t\t}\n\t\t}\n\t}\n\tsystem(&amp;#34;cls&amp;#34;);\n\tprintf(&amp;#34;number%10s&amp;#34;,szt);\n\tfor(i &amp;#61; 0;i&amp;lt;N;i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34;%10s&amp;#34;,b[i]);\n\tprintf(&amp;#34;\\taverage\\n&amp;#34;);\n\tfor (i &amp;#61; 0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n\t{\n\t\tavg1 &amp;#61; Average(a[i]);\n\t\tprintf(&amp;#34;%d%10s&amp;#34;,a[i].nmb,a[i].name);\n\t\tfor(j&amp;#61;0;j&amp;lt;N;j&amp;#43;&amp;#43;)\n\t\t\tprintf(&amp;#34;%10d&amp;#34;,a[i].score[j]);\n\t\tprintf(&amp;#34;\\t%.2f\\n&amp;#34;,avg1);\n\t}\n}\n\n//写文件\nvoid WriteFile(struct Student *a,int n,char b[][30],const char* filename)\n{\n\tFILE* fp;\n\tint i,j;\n\tchar szt[] &amp;#61; &amp;#34;姓名&amp;#34;;\n\tif((fp &amp;#61; fopen(filename,&amp;#34;w&amp;#34;)) &amp;#61;&amp;#61; 0)\n\t{\n\t\tprintf(&amp;#34;文件打开失败\\n&amp;#34;);\n\t\treturn;\n\t}\n\tfprintf(fp,&amp;#34;学号%10s&amp;#34;,szt);\n\tfor (i &amp;#61;0;i&amp;lt;N;i&amp;#43;&amp;#43;)\n\t{\n\t\tfprintf(fp,&amp;#34;%10s&amp;#34;,b[i]);\n\t}\n\t//fprintf(fp,&amp;#34;\\taverage&amp;#34;); //这一行是写平均值&amp;#xff0c;如果需要&amp;#xff0c;把注释放开\n\tfprintf(fp,&amp;#34;\\n&amp;#34;);\n\n\tfor (i&amp;#61;0;i&amp;lt;n;i&amp;#43;&amp;#43;)\n\t{\n\t\tfprintf(fp,&amp;#34;%d%10s&amp;#34;,a[i].nmb,a[i].name);\n\t\tfor(j &amp;#61;0;j&amp;lt;N;j&amp;#43;&amp;#43;)\n\t\t\tfprintf(fp,&amp;#34;%10d&amp;#34;,a[i].score[j]);\n\t\t//fprintf(fp,&amp;#34;\\t%.2f&amp;#34;,Average(a[i]));//这一行是写平均值&amp;#xff0c;如果需要&amp;#xff0c;把注释放开\n\t\tfprintf(fp,&amp;#34;\\n&amp;#34;);\n\t}\n\tfclose(fp);\n\tprintf(&amp;#34;文件写入完毕\\n&amp;#34;);\n}\n\nint main()\n{\n\tstruct Student *a &amp;#61; 0;\n\tchar kecheng[N][30] &amp;#61; {0};\n\tint n &amp;#61; 0;\n\tint opt &amp;#61; 9;\n\tint bgo &amp;#61; 1;\n\twhile(bgo)\n\t{\n\t\tsystem(&amp;#34;cls&amp;#34;);\n\t\tprintf(&amp;#34;------------学生管理系统------------\\n&amp;#34;);\n\t\tprintf(&amp;#34;|     1.录入学生信息               |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|     2.统计学生的平均成绩         |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|     3.统计每门课程的平均成绩     |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|     4.按照平均分排序并保存到文件 |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|     9.退出系统                   |\\n&amp;#34;);\n\t\tprintf(&amp;#34;------------------------------------\\n&amp;#34;);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;opt);\n\t\tswitch(opt)\n\t\t{\n\t\tcase 1:\n\t\t\tInputKecheng(kecheng);   //录入课程信息\n\t\t\tprintf(&amp;#34;请输入学生的数量:&amp;#34;);\n\t\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n\t\t\ta &amp;#61; Inputinfo(a,n);//录入学生信息\n\t\t\tWriteFile(a,n,kecheng,&amp;#34;inputdata.txt&amp;#34;); //保存文件\n\t\t\tprintf(&amp;#34;\\n按任意键返回上一层菜单\\n&amp;#34;);\n\t\t\tgetchar();\n\t\t\tgetchar();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tTongjiAvg(a,n); //统计每个学生的平均成绩\n\t\t\tprintf(&amp;#34;\\n按任意键返回上一层菜单\\n&amp;#34;);\n\t\t\tgetchar();\n\t\t\tgetchar();\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tTongjiKcAvg(a,n,kecheng); //统计每门课程的平均成绩\n\t\t\tprintf(&amp;#34;\\n按任意键返回上一层菜单\\n&amp;#34;);\n\t\t\tgetchar();\n\t\t\tgetchar();\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tSort(a,n,kecheng);\n\t\t\tWriteFile(a,n,kecheng,&amp;#34;outputdata.txt&amp;#34;); //保存文件\n\t\t\tprintf(&amp;#34;\\n按任意键返回上一层菜单\\n&amp;#34;);\n\t\t\tgetchar();\n\t\t\tgetchar();\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tbgo &amp;#61; 0;\n\t\t\tif(a){free(a);}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["C语言 综合问题处理", ["编写程序处理M个学生N 门课程的成绩(M，N定义为符号常量)，分别用函数实现以下功能:", "\n\n", "(1) 从键盘输入学号、姓名、课程名称、及各科成绩，并保存到文本文件“inputdata.txt\"中;", "\n\n", "(2)计算每个学生的平均分;", "\n\n", "(3)计算每门课的平均分; ", "\n\n", "(4)对成绩信息按学生平均分进行排序(降序,最高分排第1位)。", "\n\n", "(5)将已排好序的成绩信息输出到文本文件“outputdata.txt\"中，包括学号、姓名、课程名称、及各科成绩(注意输出信息对齐)，参考效果如下:", "\n\n", "要求:", "\n\n", "1、相关变量及数组在主函数中定义;", "\n\n", "2、用结构体类型的指针变量完成相应功能;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提问标签是C&amp;#43;&amp;#43;&amp;#xff0c;所以按C&amp;#43;&amp;#43;写的。&lt;br /&gt;有问题可以沟通&amp;#xff0c;已在C&amp;#43;&amp;#43; 11下经过测试。&lt;br /&gt;满意请采纳&amp;#xff0c;谢谢。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; MAXSTU&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;&lt;span class=\"hljs-comment\"&gt;//学号&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Course&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;&lt;span class=\"hljs-comment\"&gt;//学生数&lt;/span&gt;\n    Student stus[MAXSTU];\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input_cs_info&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Course &amp;amp;cs)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id,n;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    cout&amp;lt;&amp;lt;    &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入课程ID号 课程名称 学生数(学生数不能超过100):&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;id&amp;gt;&amp;gt;name&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;||n&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){\n        cout&amp;lt;&amp;lt;    &lt;span class=\"hljs-string\"&gt;&amp;#34;注意:输入的学生数125错误,请重新输入课程信息!&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    cs.id&amp;#61;id;\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(cs.name,name);\n    cs.n&amp;#61;n;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print_cs_info&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Course cs)&lt;/span&gt;\n&lt;/span&gt;{\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;课程ID号:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;cs.id&amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; 课程名称:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;cs.name&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; 学生数:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;cs.n&amp;lt;&amp;lt;endl;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    Course cs;\n    &lt;span class=\"hljs-built_in\"&gt;input_cs_info&lt;/span&gt;(cs);\n    &lt;span class=\"hljs-built_in\"&gt;print_cs_info&lt;/span&gt;(cs);    \n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["卡了一天，都是错，真的不会啊，", ["两个要求：", "（1）声明学生结构体类型 Student 和课程结构体类型Course。", "（2）定义函数input_cs_info 和 print_cs_info 函数。", "学生结构体类型 Student 和课程结构体类型 Course 的要求如下 ：", "Student的成员有整型学号num、姓名name(最长不能超过50个字符)、float型课程分数score。", "Course 的成员有整型课程编号id、课程名name不超过50个字符、该课程的学生数n、学生Student类型数组stus[MAXSTU]（最多100个学生）。MAXSTU 为符号常量。", "特别提醒： 本题的两个结构体类型，在后面题目中都是按照本题定义的成员内容。", "函数接口定义：", "void input_cs_info(Course &cs); // 输入课程信息", "void print_cs_info(Course cs); // 输出课程信息", "其中 &cs用户传入的参数cs，类型为类型Course类型的引用。", "input_cs_info函数运行时先输出提示信息如下：", "请输入课程ID号 课程名称 学生数(学生数不能超过100):", "接下来按如下格式（课程编号 课程名 学生数）输入课程信息:", "1 c++ 3", "如果输入的学生数不在[1,100]之间，例如学生数输入了125则需要输出错误提示信息如下：", "注意:输入的学生数125错误,请重新输入课程信息!", "print_cs_info函数运行时输出类似以下信息：", "课程信息如下:", "课程ID号:1 课程名称:c++ 学生数:3"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,n,s;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;999&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(i);j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;gt;&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(i)){\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,i);\n                n&amp;#43;&amp;#43;;s&amp;#43;&amp;#43;;\n            }\n    }&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n100~999之间的素数个数为%d&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["每个复合语句怎么连接啊", ["编程计算并输出 100～999 之间的所有素数（每个数占 6 位宽度），最后并", "输出素数的个数（单独占一行）。 编程要求如下：", "①定义符号常量：N=999；", "②定义复合语句 1：外循环 for(;exp1;)控制项数值（100～999）,exp1 用到逻辑运算的", "特殊规则，形如 a&&b；内循环 while(exp2)实现计算各数是否素数，是素数时则输出该素数，", "并统计素数的个数；每行输出 10 个素数（用 if 语句控制），每个数占 6 列宽，最后换行输出", "素数个数。", "③定义复合语句 2：外循环 for(;;)控制项数值（100～999）,循环条件省略；内循环", "while(exp1)实现计算各数是否素数，是素数时则输出该素数，并统计素数的个数；每行输出", "10 个素数（用 if 语句控制），每个数占 6 列宽，最后换行输出素数的个数。", "④定义复合语句 3：外循环 for(;exp;)控制项数值（100～999）,exp 用到逻辑运算的特殊", "规则，形如 a&&b；内循环 for(;;)，循环条件省略，内循环实现计算各数是否素数，是素数时", "则输出该素数，并统计素数的个数；每行输出 10 个素数（用 if 语句控制），每个数占 6 列宽。", "最后换行输出素数的个数。"]], "Tag": "程序设计"}
{"Answer": "Java 只有变量和常量两种哦，建议还是去找本Java编程基础学习哈。", "Konwledge_Point": "符号常量", "Question": ["Java语言中什么叫符号变量，什么叫做常量，两者是不是一回事，相互之间怎么转换", ["Java语言中什么叫符号变量，什么叫做常量，两者是不是一回事，相互之间怎么转换"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不是已经提问了一个了吗&amp;#xff1f;只是排序一个if语句不同。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/354574423256172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n#include &amp;lt;malloc.h&amp;gt;\n#include &amp;lt;stdio.h&amp;gt;\n#define &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\ntypedef int(*&lt;span class=\"hljs-symbol\"&gt;MATRIX&lt;/span&gt;)[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;];\nvoid read(int(*a)[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;], int n) {\n    int i, j;\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        for (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i][j]);\n}\nint insert_row(int a[][&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;], int n, int b[][&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;], int m) {\n    int sum1, sum2;\n    int i, j, k, tmp;\n    //&lt;span class=\"hljs-number\"&gt;1.&lt;/span&gt;先将b插入a中\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n    {\n        for (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            a[n &amp;#43; i][j] &amp;#61; b[i][j];\n    }\n    //&lt;span class=\"hljs-number\"&gt;2.&lt;/span&gt;排序\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n &amp;#43; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        for (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n &amp;#43; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;)\n        {\n            //计算第j行的前两列的和\n            sum1 &amp;#61; a[j][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; a[j][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            sum2 &amp;#61; a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            //比较\n            if (sum1 &amp;gt; sum2)\n            {\n                //第j行和第j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;行交换\n                for (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;; k&amp;#43;&amp;#43;)\n                {\n                    tmp &amp;#61; a[j][k];\n                    a[j][k] &amp;#61; a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][k];\n                    a[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][k] &amp;#61; tmp;\n                }\n            }\n        }\n    }\n\n    return (m&amp;#43;n);\n\n}\nvoid print(int(*a)[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;], int m) {\n    int i, j;\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n    {\n        for (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, a[i][j]);\n        putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    }\n}\nint main() {\n    int m, n;\n    int(*a)[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;], (*b)[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;];\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);\n    a &amp;#61; (&lt;span class=\"hljs-symbol\"&gt;MATRIX&lt;/span&gt;)malloc(&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt; * sizeof(int) * (n &amp;#43; m));\n    b &amp;#61; (&lt;span class=\"hljs-symbol\"&gt;MATRIX&lt;/span&gt;)malloc(&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt; * sizeof(int) * m);\n    read(a, n); //读入n行\n    read(b, m); //读入m行\n    n &amp;#61; insert_row(a, n, b, m);\n    print(a, n);\n    free(a);\n    free(b);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["一个二维数组中的若干行数据按要求插入到另一个二维数组中", ["5.（", "江苏省二级C等级考试题目", "）", "【程序功能】", "将一个二维数组中的若干行数据按要求插入到另一个二维数组中。", "【编程要求】", "1 .定义符号常量N代表4", "2 .编写函数int insert_row(int a[][N], int n, int b[][N], int m)。已知形参a指向的二维数组(简称a数组)前n行数据已按每行数据前两列之和升序排列，形参b指向的二维数组中有m行数据。insert_row函数实现将b数组中m行数据插入到a数组中，完成插入操作后a数组中所有行的数据仍按每行前两列数据之和升序排列。函数返回a数组中有效数据的行数。", "3 .编写main函数。读入两个二维数组a，b的行数，再读入a和b，用a和b数组作为实参调用insert_row函数将b数组中的数据插入到a数组中。输出a数组中全部数据到屏幕", "【测试数据与运行结果】", "输入数据：", "2 2", "2 2 3 4", "9 10 11 12", "1 4 5 7", "5 10 15 20", "输出数据：", "2 2 3 4", "1 4 5 7", "5 10 15 20", "9 10 11 12", "【注意】：以下程序代码只允许添加不允许修改。", "#include <malloc.h>", "#include <stdio.h>", "#define N 4", "typedef int (*MATRIX)[N];", "void read(int (*a)[N],int n){", "   int i, j;", "   for (i = 0; i < n; i++)", "       for (j = 0; j < N; j++)", "           scanf(\"%d\", &a[i][j]);", "}", "int insert_row(int a[][N], int n, int b[][N], int m){", "}", "void print(int(*a)[N], int m){", "   int i, j;", "   for (i = 0; i < m; i++)", "   {", "       for (j = 0; j < N; j++)", "           printf(\"%d \", a[i][j]);", "       putchar('\\n');", "   }", "}", "int main(){", "   int m, n;", "   int(*a)[N],(*b)[N];", "   scanf(\"%d%d\", &n, &m);", "   a = (MATRIX)malloc(N * sizeof(int) * (n+m));", "   b = (MATRIX)malloc(N * sizeof(int) * m);", "   read(a,n);    //读入n行", "   read(b,m);    //读入m行", "   n=insert_row(a, n, b, m);", "   print(a, n);", "   free(a);", "   free(b);", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实就是排序算法的变种&amp;#xff0c;可以先将b插入a中&amp;#xff0c;然后&amp;#xff0c;计算a中所有行数据前两列的和&amp;#xff0c;并根据和进行排序即可。&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["【程序功能】 将一个二维数组中的若干行数据按要求插入到另一个二维数组中。", ["5.（", "江苏省二级C等级考试题目", "）", "【程序功能】", "将一个二维数组中的若干行数据按要求插入到另一个二维数组中。", "【编程要求】", "1 .定义符号常量N代表4", "2 .编写函数int insert_row(int a[][N], int n, int b[][N], int m)。已知形参a指向的二维数组(简称a数组)前n行数据已按每行数据前两列之和降序排列，形参b指向的二维数组中有m行数据。insert_row函数实现将b数组中m行数据插入到a数组中，完成插入操作后a数组中所有行的数据仍按每行前两列数据之和降序排列。函数返回a数组中有效数据的行数。", "3 .编写main函数。读入两个二维数组a，b的行数，再读入a和b，用a和b数组作为实参调用insert_row函数将b数组中的数据插入到a数组中。输出a数组中全部数据到屏幕", "【测试数据与运行结果】", "输入数据：", "2 2", "2 3 3 4", "1 2 11 12", "1 5 5 7", "5 10 15 20", "输出数据：", "5 10 15 20", "1 5 5 7", "2 3 3 4", "1 2 11 12", "【注意】：以下程序代码只允许添加不允许修改。", "#include <malloc.h>", "#include <stdio.h>", "#define N 4", "typedef int (*MATRIX)[N];", "void read(int (*a)[N],int n){", "   int i, j;", "   for (i = 0; i < n; i++)", "       for (j = 0; j < N; j++)", "           scanf(\"%d\", &a[i][j]);", "}", "int insert_row(int a[][N], int n, int b[][N], int m){", "}", "void print(int(*a)[N], int m){", "   int i, j;", "   for (i = 0; i < m; i++)", "   {", "       for (j = 0; j < N; j++)", "           printf(\"%d \", a[i][j]);", "       putchar('\\n');", "   }", "}", "int main(){", "   int m, n;", "   int(*a)[N],(*b)[N];", "   scanf(\"%d%d\", &n, &m);", "   a = (MATRIX)malloc(N * sizeof(int) * (n+m));", "   b = (MATRIX)malloc(N * sizeof(int) * m);", "   read(a,n);    //读入n行", "   read(b,m);    //读入m行", "   n=insert_row(a, n, b, m);", "   print(a, n);", "   free(a);", "   free(b);", "}"]], "Tag": "程序设计"}
{"Answer": "```\r\nlong long t = 11ll * 50000000ll;\r\n```\r\n可以通过在数字后面添加ll来表示这种类型是ll类型的。当然这个可能因为编译器不同而结果不同。", "Konwledge_Point": "符号常量", "Question": ["在VS2019 C++中，用‘*’计算时出现如图所示的值溢出的原因是什么？如何修复？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;无符号整型的意思是所有数值都是大于等于0的&amp;#xff0c;不存在负数。&lt;br /&gt;-1和65535在内存中都是0xFFFF&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["为什么将-1赋给无符号变量a时，生成后a =65535？", ["unsigned short a;", "short int b=-1;", "a=b;", "cout<<\"a=\"<<a<<endl;", "\n", "最后显示的是a =65535这是为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;很简单啊&amp;#xff0c;head是链表头&amp;#xff0c;end是链表尾。当新增一个节点时&amp;#xff0c;先判断head是否为空&amp;#xff0c;如果是&amp;#xff0c;那么新节点就是head&amp;#xff1b;如果不是&amp;#xff0c;那么使用尾插法&amp;#xff0c;新节点就挂接到当前尾节点end的next。在这个函数最后&amp;#xff0c;end会指向新增的节点&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["c语言学生成绩管理系统", ["看不懂78到85函数，谁能解释一下", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<windows.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "define", " LEN sizeof(struct Student)", "\n", "int", " ", "main", "()", "{                 ", "//首先定义主函数 ", "\n    ", "void", " ", "Menu", "()", ";\n    ", "void", " ", "Add", "()", ";\n    ", "void", " ", "View", "()", ";\n    ", "void", " ", "Delete", "()", ";\n    ", "void", " ", "Repair", "()", ";\n    ", "void", " ", "ViewAll", "()", ";\n    ", "void", " ", "Sclsearch", "()", ";\n    ", "Menu", "();\n    \n}\n", "struct", " ", "Student", "{                 ", "//声明结构体类型为student ", "\n    ", "char", " number[", "20", "];        ", "//学号   //定义结构体成员 ", "\n    ", "char", " name[", "10", "];        ", "//姓名 ", "\n    \n    ", "float", " Chinese[", "30", "];            ", "//c成绩 ", "\n    \n    ", "struct", " ", "Student", "* next;    ", "//指向下一个数据的指针 ，用于输入多个数据 ", "\n}Stud[", "100", "]; \n", "struct", " ", "Student", "* head = ", "NULL", ";    ", "// 定义结构体的指针变量，后面做链表节点，而且要先对指针变量进行赋值0空地址，防止指向一个 事先未指定的单元 ", "\n", "struct", " ", "Student", "* end = ", "NULL", ";\n", "void", " ", "Menu", "()", "{\n     ", "void", " ", "Menu", "()", ";\n    ", "void", " ", "Add", "()", ";\n    ", "void", " ", "View", "()", ";\n    ", "void", " ", "Delete", "()", ";\n    ", "void", " ", "Repair", "()", ";\n    ", "void", " ", "ViewAll", "()", ";\n    ", "void", " ", "Sclsearch", "()", ";\n    ", "system", "(", "\"cls\"", ");\n    ", "printf", "(", "\"1、学生信息录入\\n\"", ");\n    ", "printf", "(", "\"2、学生单个成绩查询\\n\"", ");\n    ", "printf", "(", "\"3、查询全部学生成绩\\n\"", ");\n    ", "printf", "(", "\"4、修改学生信息\\n\"", ");\n    ", "printf", "(", "\"5、删除学生信息\\n\"", ");\n    ", "printf", "(", "\"6、显示出某个分数段学生的信息\\n\"", ");\n    ", "printf", "(", "\"7、退出系统\\n\"", ");\n    ", "int", " choice;\n    ", "printf", "(", "\"请选择要使用的功能：\\n\"", ");\n    loop:\n    ", "scanf", "(", "\"%d\"", ",&choice);\n    ", "switch", " (choice) {\n    ", "case", " ", "1", ":\n        ", "Add", "();\n        ", "Menu", "();\n    ", "case", " ", "2", ":\n        ", "View", "();\n        ", "Menu", "();\n    ", "case", " ", "3", ":\n        ", "ViewAll", "();\n        ", "Menu", "();\n    ", "case", " ", "4", ":\n        ", "Repair", "();\n        ", "Menu", "();\n    ", "case", " ", "5", ":\n        ", "Delete", "();\n        ", "Menu", "();\n    ", "case", " ", "6", ":\n        ", "Sclsearch", "();\n        ", "Menu", "(); \n         \n    ", "case", " ", "7", ":\n        ", "exit", "(", "0", ");\n    ", "default", ":\n            ", "printf", "(", "\"输入有误，请重新选择：\"", ");\n            ", "goto", " loop;    \n    }\n}                             ", "//每一个节点都包含一个指针变量，用来存放下一个地址 ", "\n ", "void", " ", "Add", "()", "{\n    ", "system", "(", "\"cls\"", ");  ", "//进行清屏 ", "\n    ", "int", " count;       ", "//声明一个count变量 ,用于计数 ", "\n    ", "printf", "(", "\"请输入要录入信息的个数：\"", ");\n    ", "scanf", "(", "\"%d\"", ",&count);\n    ", "struct", " ", "Student", " *s1,*s2,*temp;     ", "//定义指向struct student类型数据的指针变量 ", "\n    s1=s2=(", "struct", " Student*)", "malloc", "(LEN);  ", "//malloc用于开辟动态储存空间用于存储输入的学生数据 ", "\n    ", "if", "(head==", "NULL", "){         ", "//NUll符号常量0，空地址 ", "\n        head = s1;\n    }", "else", "{\n        end->next = s1 ;   ", "//使用指向运算符 ，使其指向下一个节点 ", "\n    }\n    ", "int", " i = ", "1", ";    \n    ", "while", "(count>", "0", "){\n        ", "printf", "(", "\"请输入第%d位学生信息：\\n\"", ",i++);\n        ", "printf", "(", "\"学号：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ",&s1->number);  ", "//s1指向结构体变量中的成员number，代表了学生的结构体成员的数据，相当于 （*s1）.number ", "\n        ", "printf", "(", "\"姓名：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ",&s1->name);\n        \n        ", "printf", "(", "\"c语言成绩：\\n\"", ");\n        ", "scanf", "(", "\"%f\"", ",&s1->Chinese[", "0", "]);\n        \n        count--;\n        s2->next=s1;\n        s2=s1;\n        s1=(", "struct", " Student*)", "malloc", "(LEN);\n        ", "printf", "(", "\"添加成功！\\n\"", ");\n        ", "system", "(", "\"pause\"", ");\n        ", "system", "(", "\"cls\"", ");\n    }\n    s2->next= ", "NULL", ";\n    end = s2;\n    ", "printf", "(", "\"全部添加成功！\\n\"", ");\n    ", "system", "(", "\"pause\"", ");\n}\n", "void", " ", "View", "()", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *VS;\n    ", "int", " choice;\n    ", "printf", "(", "\"请输入查询方式：\\n\"", ");\n    ", "printf", "(", "\"1、按学号查询\\n\"", ");\n    ", "printf", "(", "\"2、按姓名查询\\n\"", ");\n    loop:\n    ", "scanf", "(", "\"%d\"", ",&choice);\n    ", "if", " (choice != ", "1", " && choice != ", "2", ") {\n        ", "printf", "(", "\"输入有误，请重新选择：\"", ");\n        ", "goto", " loop;\n    }\n    ", "char", " str[", "20", "];\n    ", "if", " (choice == ", "1", ") {\n        ", "printf", "(", "\"请输入要查询信息的学生学号：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ", str);\n        ", "for", "(VS=head;VS!=", "NULL", ";VS=VS->next){\n            ", "if", "(", "strcmp", "(VS->number,str)==", "0", "){\n                ", "printf", "(", "\"成功找到！\\n\"", ");\n                ", "printf", "(", "\"学号：%s\\t姓名：%s\\n\"", ",VS->number,VS->name);\n                ", "printf", "(", "\"c语言：%f\\n\"", ",VS->Chinese[", "0", "]);\n                ", "system", "(", "\"pause\"", ");\n                ", "return", ";\n            }\n        }\n    } ", "else", " ", "if", " (choice == ", "2", ") {\n        ", "printf", "(", "\"请输入要查询信息的学生姓名：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ", str);\n        ", "for", "(VS=head;VS!=", "NULL", ";VS=VS->next){\n            ", "if", "(", "strcmp", "(VS->name,str)==", "0", "){\n                ", "printf", "(", "\"成功找到！\\n\"", ");\n                ", "printf", "(", "\"学号：%s\\t姓名：%s\\n\"", ",VS->number,VS->name);\n                ", "printf", "(", "\"c语言：%f\\n\"", ",VS->Chinese[", "0", "]);\n                ", "system", "(", "\"pause\"", ");\n                ", "return", ";\n            }\n        }\n    }\n    ", "printf", "(", "\"不好意思，未找到！\\n\"", ");\n    ", "system", "(", "\"pause\"", ");\n}\n", "void", " ", "ViewAll", "()", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *VA;\n    ", "if", "(head!=", "NULL", "){\n        ", "printf", "(", "\"所有学生成绩如下：\\n\"", ");\n        ", "for", "(VA=head;VA!=", "NULL", ";){\n            ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",VA->number,VA->name,VA->Chinese[", "0", "]);\n         \n            VA=VA->next;   ", "//指向下一个节点 ", "\n        }\n    }", "else", "{\n        ", "printf", "(", "\"该系统中还未录入信息\"", ");\n    }    \n    ", "system", "(", "\"pause\"", ");\n}\n \n", "void", " ", "Repair", "()", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *RS;\n    ", "int", " choice;\n    ", "printf", "(", "\"请输入查询方式：\\n\"", ");\n    ", "printf", "(", "\"1.按照查询学号方式修改\\n\"", ");\n    ", "printf", "(", "\"2.按照查询姓名方式修改\\n\"", ");\n    loop:\n    ", "scanf", "(", "\"%d\"", ",&choice);\n    ", "if", " (choice !=", "1", "&&choice !=", "2", ") {\n        ", "printf", "(", "\"输入有误，请重新输入\"", ");\n        ", "goto", " loop;\n    }\n    ", "char", " str[", "20", "];\n \n \n   ", "if", " (choice == ", "1", ") {\n       ", "printf", "(", "\"请输入学号：\\n\"", ");\n       ", "scanf", "(", "\"%s\"", ",&str);\n \n    ", "for", "(RS=head;RS!=", "NULL", ";RS=RS->next){\n        ", "if", "(", "strcmp", "(RS->number,str)==", "0", "){\n            ", "printf", "(", "\"成功找到该学生\"", ");\n            ", "printf", "(", "\"学号：%s\\t姓名：%s\\n\"", ",RS->number,RS->name);\n            ", "printf", "(", "\"c语言：%f\\n\"", ",RS->Chinese[", "0", "]);\n  \n           \n            ", "printf", "(", "\"c语言成绩：\\n\"", ");\n            ", "scanf", "(", "\"%f\"", ",&RS->Chinese[", "0", "]);\n            ", "printf", "(", "\"修改成功\"", ");\n            ", "system", "(", "\"pause\"", ");\n            ", "return", ";\n        }\n    }\n    }\n   ", "else", "  ", "if", " (choice ==", "2", ") {\n       ", "printf", "(", "\"请输入姓名：\\n\"", ");\n       ", "scanf", "(", "\"%s\"", ",&str);\n \n       ", "for", "(RS=head;RS!=", "NULL", ";RS=RS->next) {\n           ", "if", "(", "strcmp", "(RS->name,str)==", "0", ") {\n               ", "printf", "(", "\"成功找到该学生\"", ");\n               ", "printf", "(", "\"学号：%s\\t姓名：%s\\n\"", ",RS->number,RS->name);\n            ", "printf", "(", "\"c语言：%f\\n\"", ",RS->Chinese[", "0", "]);\n \n           \n            ", "printf", "(", "\"c语言成绩：\\n\"", ");\n            ", "scanf", "(", "\"%f\"", ",&RS->Chinese[", "0", "]);\n            ", "printf", "(", "\"修改成功\"", ");\n            ", "system", "(", "\"pause\"", ");\n            ", "return", ";\n           }\n       }\n   }\n   ", "else", " {\n        ", "printf", "(", "\"输入信息有误，未查询到 \\n\"", ");\n        ", "system", "(", "\"pause\"", ");\n     \n    }\n}\n", "void", " ", "Delete", "()", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "int", " flag =", "1", ";\n    ", "while", "(flag){\n        ", "printf", "(", "\"请输入要删除的学生学号：\"", ");\n        ", "char", " num[", "10", "];\n        ", "scanf", "(", "\"%s\"", ",&num);\n        ", "struct", " ", "Student", " * DS,*temp;\n        ", "for", "(DS=head;DS!=", "NULL", ";){\n            ", "if", "(", "strcmp", "(DS->number,num)==", "0", "){\n                ", "if", "(DS==head){\n                    head = DS->next;\n                    flag = ", "0", ";\n                    ", "printf", "(", "\"删除成功！\\n\"", ");\n                    ", "system", "(", "\"pause\"", ");\n                }", "else", "{\n                    flag = ", "0", ";\n                    ", "printf", "(", "\"删除成功！\\n\"", ");\n                    temp->next= DS->next;\n                    ", "free", "(DS);\n                    ", "system", "(", "\"pause\"", ");\n                }\n                \n            }\n            temp = DS;\n            DS=DS->next;\n        }\n        ", "if", "(flag){\n            ", "printf", "(", "\"未找到该学生学号！\\n\"", ");\n            ", "system", "(", "\"pause\"", ");\n        }\n    }\n}\n", "void", " ", "Sclsearch", "()", " \n", "{ \n", "system", "(", "\"cls\"", ");\n", "struct", " ", "Student", " *SC;\n", "printf", "(", "\"90 分以上:\\n\"", "); \n", "printf", "(", "\"学号 姓名 c语言成绩\\n\"", ");\n", "for", "(SC=head;SC!=", "NULL", ";){\n    ", "if", "(SC->Chinese[", "0", "]>=", "90", ")\n    {\n        ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",SC->number,SC->name,SC->Chinese[", "0", "]);\n    }\n    SC=SC->next; \n}\n", "printf", "(", "\"80~89:\\n\"", "); \n", "printf", "(", "\"学号 姓名 c语言成绩\\n\"", "); \n", "for", "(SC=head;SC!=", "NULL", ";){\n    ", "if", "(SC->Chinese[", "0", "]>=", "80", "&&SC->Chinese[", "0", "]<", "90", ")\n    {\n        ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",SC->number,SC->name,SC->Chinese[", "0", "]);\n    }\n    SC=SC->next; \n}\n", "printf", "(", "\"70~79:\\n\"", "); \n", "printf", "(", "\"学号 姓名 c语言成绩\\n\"", "); \n", "for", "(SC=head;SC!=", "NULL", ";){\n    ", "if", "(SC->Chinese[", "0", "]>=", "70", "&&SC->Chinese[", "0", "]<", "80", ")\n    {\n        ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",SC->number,SC->name,SC->Chinese[", "0", "]);\n    }\n    SC=SC->next; \n}\n", "printf", "(", "\"60~69:\\n\"", "); \n", "printf", "(", "\"学号 姓名 c语言成绩\\n\"", "); \n", "for", "(SC=head;SC!=", "NULL", ";){\n    ", "if", "(SC->Chinese[", "0", "]>=", "60", "&&SC->Chinese[", "0", "]<", "70", ")\n    {\n        ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",SC->number,SC->name,SC->Chinese[", "0", "]);\n    }\n    SC=SC->next; \n}\n", "printf", "(", "\"60 分以下:\\n\"", "); \n", "printf", "(", "\"学号 姓名 c语言成绩\\n\"", "); \n", "for", "(SC=head;SC!=", "NULL", ";){\n    ", "if", "(SC->Chinese[", "0", "]<", "60", ")\n    {\n        ", "printf", "(", "\"学号：%s\\t姓名：%s\\tc语言：%f\\n\"", ",SC->number,SC->name,SC->Chinese[", "0", "]);\n    }\n    SC=SC->next; \n}\n", "system", "(", "\"pause\"", ");\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "原因找到了，a1,theta1,alpha1都是符号常量，但后面2个包含了a1", "Konwledge_Point": "符号常量", "Question": ["Matlab 符号运算，常量替换问题", ["\n如图，我用0替换矩阵A1中的theta1，没有替换成功，但是用0替换矩阵G中的x，成功了，这到底是为什么，该怎么解决呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 你的这个函数有问题&amp;#xff0c;int i,j;初始化不对&amp;#xff1b; &lt;/p&gt;\n\n&lt;p&gt;287行的op &amp;#61; getchar();&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;int playGame(int map1[][16], int map2[][16], int sum, int imp) {\n\tint i&amp;#61;0, j&amp;#61;0;\n\tint x, y;\n\tchar op;\n\tint num &amp;#61; 0;\n\twhile (1) {\n\t\tfor (; i &amp;lt; 14; i&amp;#43;&amp;#43;) {\n\t\t\tfor (; j &amp;lt; 16; j&amp;#43;&amp;#43;) {\n\t\t\t\tif (map1[i][j] &amp;#61;&amp;#61; PERSON) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (j &amp;lt; 16) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tx &amp;#61; i;\n\t\ty &amp;#61; j;\n\t\tsystem(&amp;#34;cls&amp;#34;);\n\t\tnum &amp;#61; printMap(map1, imp);\n\t\tif (num &amp;#61;&amp;#61; sum) {\n\t\t\tprintf(&amp;#34;Congratulations!\\n&amp;#34;);\n\t\t\tSleep(3000);\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t\top &amp;#61; getchar();\n\t\t\tif ((op &amp;#61;&amp;#61; &amp;#39;n&amp;#39;) || (op &amp;#61;&amp;#61; &amp;#39;N&amp;#39;)) {\n\t\t\t\treturn KEY_NEXT;\n\t\t\t}\n\t\t\telse if ((op &amp;#61;&amp;#61; &amp;#39;q&amp;#39;) || (op &amp;#61;&amp;#61; &amp;#39;Q&amp;#39;)) {\n\t\t\t\treturn KEY_RETURN;\n\t\t\t}\n\t\t}\n\t\tswitch (op) {\n\t\tcase KEY_UP:\n\t\t\tmoveBox(map1, x, y, 1, map2);\n\t\t\tbreak;\n\t\tcase KEY_LEFT:\n\t\t\tmoveBox(map1, x, y, 2, map2);\n\t\t\tbreak;\n\t\tcase KEY_RIGHT:\n\t\t\tmoveBox(map1, x, y, 3, map2);\n\t\t\tbreak;\n\t\tcase KEY_DOWN:\n\t\t\tmoveBox(map1, x, y, 4, map2);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["大佬们我这个推箱子代码哪里错了？", ["\n", "//---------------------头文件--------------------\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<ctype.h> \n#include<conio.h>\n#include<windows.h>\n//------------------符号常量----------------------\n#define KEY_UP 72\n#define KEY_DOWN 80\n#define KEY_LEFT 75\n#define KEY_RIGHT 77\n#define KEY_RETURN 2\n#define KEY_NEXT 4\n#define SPACE_OUT 0\n#define WALL 1\n#define SPACE 2\n#define TARGET 3\n#define BOX 4\n#define TARGET_IN 5\n#define PERSON 6\n//--------------函数声明---------------------\nvoid designUI();\nint welcomePage(); \nint printMap(int map1[][16], int imp);\nvoid selectColor(int color);\nvoid getLevel1();\nvoid getLevel2();\nvoid getLevel3();\nvoid getLevel4();\nint playGame(int map1[][16], int map2[][16], int sum, int imp);\nvoid moveBox(int map1[][16], int x, int y, int select, int map2[][16]);\n//---------------主函数-----------------------\nint main() {\n\twhile (1) {\n \t  designUI();\n    }\n}\nvoid designUI() {\n\tint ch;\n\tchar num;\n\tch = welcomePage();\n\tif (ch == 49) {\n\t\tgetLevel1();\n\t}\n\tif (ch == 50) {\n\t\tprintf(\"\\n\\t\\tPlease input level!(From 1 to 4):\");\n\t\tgetchar();\n\t\tnum = getchar();\n\t\tswitch(num) {\n\t\t\tcase '1' : \n\t\t\t  getLevel1();\n\t\t\t  break;\n\t\t\tcase '2' : \n\t\t\t  getLevel2();\n\t\t\t  break;\n\t\t\tcase '3' :\n\t\t\t  getLevel3();\n\t\t\t  break;\n\t\t\tcase '4' :\n\t\t\t  getLevel4();\n\t\t\t  break;\n\t\t\tdefault :\n\t\t\t  printf(\"Enter error!\\n\");\n\t\t\t  Sleep(1000);\n\t\t\t  exit(0);\n\t\t\t  break;  \n\t\t}\n\t}\n\telse if (ch == 51) {\n\t\tsystem(\"cls\");\n\t\texit(0);\n\t}\n}\n\nint welcomePage() {\n\tint i = 0;\n\tsystem(\"cls\");\n\tsystem(\"color 0E\");\n\tprintf(\"\\n\\n\\t\\t Welcome to play box!\\n\\n\");\n\tprintf(\"\\t\\t Person:♀Wall:■BOX:●Target:○Reach target:☆\\n\"); \n\tprintf(\"\\t\\t Up:↑\\n\\t\\t Down:↓\\n\\t\\t Left:←\\n\\t\\t Right:→\\n\\n\");\n\tprintf(\"\\t\\t Press number 1 to start new game\\n\\t\\t\\n\");\n\tprintf(\"\\t\\t Press number 2 to choose level\\n\\t\\t\\n\");\n\tprintf(\"\\t\\t Press number 3 to quit from game\\n\\t\\t\\n\");\n\tprintf(\"\\t\\t Press right number to continue:\"); \n\twhile (1) {\n\t\ti = getchar();\n\t\tif (i >= 49 && i <= 51) \n\t\t   return i;\n\t}\n}\nint printMap(int map1[][16], int imp) {\n\tint i, j;\n\tint count = 0;\n\tfor (i = 0; i < 14; i ++ ) {\n\t\tfor (j = 0; j < 16; j ++ ) {\n\t\t\tswitch(map1[i][j]) {\n\t\t\t  case 0 : \n\t\t\t    printf(\"  \");\n\t\t\t\tbreak;\n\t\t\t  case 1 :\n\t\t\t    selectColor(14);\n\t\t\t\tprintf(\"■\");\n\t\t\t\tbreak;\n\t\t\t  case 2 : \n\t\t\t    printf(\"  \");\n\t\t\t\tbreak;\n\t\t\t  case 3 : \n\t\t\t    selectColor(11);\n\t\t\t\tprintf(\"○\");\n\t\t\t\tbreak;\n\t\t\t  case 4 : \n\t\t\t    selectColor(11);\n\t\t\t\tprintf(\"●\");\n\t\t\t\tbreak;\n\t\t\t  case 5 :\n\t\t\t    count ++ ;\n\t\t\t\tselectColor(9);\n\t\t\t\tprintf(\"☆\");\n\t\t\t\tbreak;\n\t\t\t  case 6 :\n\t\t\t    selectColor(10);\n\t\t\t\tprintf(\"♀\");\n\t\t\t\tbreak;\t\t   \n\t\t    }\n\t    }\n\t    printf(\"\\n\"); \n    } \n    selectColor(14);\n    printf(\"\\n\");\n    printf(\"\\tYou are in Level %d!\\t\\t\\n\", imp);\n    printf(\"\\tPress arrow keys to play the game!\\t\\n\");\n    printf(\"\\tPress N to the next level!\\t\\n\");\n    printf(\"\\tPress Q to return the home page!\\t\\n\");\n    return count;\n}\nvoid selectColor(int color) {\n\tHANDLE console = GetStdHandle((STD_OUTPUT_HANDLE));\n\tSetConsoleTextAttribute(console, color);\n}\nvoid getLevel1() {\n\tint map2[14][16];\n\tint i, j, sum = 0;\n\tint map1[14][16]={\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 1, 3, 4, 2, 1, 1, 2, 1, 1, 0, 0, 0},\n\t\t{0, 0, 0, 1, 2, 3, 4, 6, 4, 2, 2, 3, 1, 0, 0, 0},\n\t\t{0, 0, 0, 1, 2, 3, 2, 4, 2, 4, 3, 1, 1, 0, 0, 0},\n\t\t{0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, \n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t};\n\tfor (int i = 0; i < 14; i ++ ) {\n\t\tfor (int j = 0; j < 16; j ++ ) {\n\t\t\tmap2[i][j] = map1[i][j];\n\t\t\tif (map1[i][j] == TARGET || map1[i][j] == TARGET_IN) {\n\t\t\t\tsum ++ ;\n\t\t\t}\n\t\t}\n\t}\n    if (playGame(map1, map2, sum, 1) != KEY_RETURN) \n       getLevel2(); \n}\nvoid getLevel2() {\n\tint map2[14][16];\n\tint i, j, sum = 0;\n\tint map1[14][16] = {\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 2, 2, 1, 1, 2, 2, 2, 1, 0, 0, 0, 0}, \n\t\t{0, 0, 0, 1, 2, 2, 2, 4, 2, 2, 2, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 2, 2, 1, 1, 1, 2, 4, 1, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 2, 1, 3, 3, 3, 1, 2, 1, 0, 0, 0, 0},\n\t\t{0, 0, 1, 1, 2, 1, 3, 3, 1, 1, 2, 1, 1, 0, 0, 0},\n\t\t{0, 0, 1, 2, 4, 2, 2, 4, 2, 2, 4, 2, 1, 0, 0, 0},\n\t\t{0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 6, 2, 1, 0, 0, 0},\n\t\t{0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t};\n\tfor (int i = 0; i < 14; i ++ ) {\n\t    for (int j = 0; j < 16; j ++ ) {\n\t    \tmap2[i][j] = map1[i][j];\n\t \t    if (map1[i][j] == TARGET || map1[i][j] == TARGET_IN) {\n\t\t\t\tsum ++ ;\n\t\t\t}\n\t\t}\n\t}\n    if (playGame(map1, map2, sum, 2) != KEY_RETURN) \n       getLevel3(); \n}\nvoid getLevel3() {\n\tint map2[14][16];\n\tint i, j, sum = 0;\n\tint map1[14][16] = {\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0},\n\t\t{0, 0, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 0, 0},\n\t\t{0, 0, 1, 2, 4, 2, 1, 1, 1, 1, 4, 2, 2, 1, 0, 0},\n\t\t{0, 0, 1, 2, 2, 4, 3, 3, 3, 3, 2, 4, 2, 1, 0, 0},\n\t\t{0, 0, 1, 1, 2, 2, 2, 2, 1, 2, 6, 2, 1, 1, 0, 0},\n\t\t{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n\t\t{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, \n\t};\n\tfor (int i = 0; i < 14; i ++ ) {\n\t    for (int j = 0; j < 16; j ++ ) {\n\t    \tmap2[i][j] = map1[i][j];\n\t \t    if (map1[i][j] == TARGET || map1[i][j] == TARGET_IN) {\n\t\t\t\tsum ++ ;\n\t\t\t}\n\t\t}\n\t}\n\tif (playGame(map1, map2, sum, 3) != KEY_RETURN) \n       getLevel4(); \n}\nvoid getLevel4() {\n\tint map2[14][16];\n\tint i, j, sum = 0;\n    int map1[14][16]={\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n      {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},\n      {0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 3, 2, 1, 0, 0, 0},\n      {0, 0, 0, 0, 1, 1, 2, 2, 4, 3, 3, 3, 1, 0, 0, 0},\n      {0, 0, 0, 0, 1, 2, 2, 4, 2, 1, 5, 3, 1, 0, 0, 0},\n      {0, 0, 0, 1, 1, 2, 1, 1, 4, 1, 2, 1, 1, 0, 0, 0},\n      {0, 0, 0, 1, 2, 2, 2, 4, 2, 2, 4, 2, 1, 0, 0, 0},\n      {0, 0, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0},\n      {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 6, 2, 1, 0, 0, 0},\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0},\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\n    };\n    for (int i = 0; i < 14; i ++ ) {\n\t    for (int j = 0; j < 16; j ++ ) {\n\t    \tmap2[i][j] = map1[i][j];\n\t \t    if (map1[i][j] == TARGET || map1[i][j] == TARGET_IN) {\n\t\t\t\tsum ++ ;\n\t\t\t}\n\t\t}\n\t}\n\tplayGame(map1, map2, sum, 4);\n} \nint playGame(int map1[][16], int map2[][16], int sum, int imp) {\n\tint i, j;\n\tint x, y;\n\tchar op;\n\tint num = 0;\n\twhile (1) {\n\t\tfor (int i = 0; i < 14; i ++ ) {\n\t\t\tfor (int j = 0; j < 16; j ++ ) {\n\t\t\t\tif (map1[i][j] == PERSON) {\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\t\t\tif (j < 16) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tx = i;\n\t\ty = j;\n\t\tsystem(\"cls\");\n\t\tnum = printMap(map1, imp);\n\t\tif (num == sum) {\n\t\t\tprintf(\"Congratulations!\\n\");\n\t\t\tSleep(3000);\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t    op = getch();\n\t\t    if ((op == 'n') || (op == 'N')) {\n\t\t\t\treturn KEY_NEXT;\n\t     \t}\n\t\t\telse if ((op == 'q') || (op == 'Q')) {\n\t\t\t\treturn KEY_RETURN; \n\t\t\t}\t\n\t\t}\n\t\tswitch(op) {\n\t\t\tcase KEY_UP : \n\t\t\t\tmoveBox(map1, x, y, 1, map2);\n\t\t\t\tbreak;\n\t\t\tcase KEY_LEFT : \n\t\t\t\tmoveBox(map1, x, y, 2, map2);\n\t\t\t\tbreak;\n\t\t\tcase KEY_RIGHT : \n\t\t\t    moveBox(map1, x, y, 3, map2);\n\t\t\t\tbreak;\n\t\t\tcase KEY_DOWN : \n\t\t\t\tmoveBox(map1, x, y, 4, map2); \n\t\t\t\tbreak;\n\t\t\tdefault : \n\t\t\t\tbreak;     \n\t\t}\n    }\n}\nvoid moveBox(int map1[][16], int x, int y, int select, int map2[][16]) {\n\tint x1, y1;\n\tint x2, y2;\n\tswitch(select) {\n\t\tcase 1 : \n\t\t   x1 = x - 1;\n\t\t   y1 = y;\n\t\t   x2 = x - 2;\n\t\t   y2 = y;\n\t\t   break;\n\t\tcase 2 :\n\t\t   x1 = x;\n\t\t   y1 = y - 1;\n\t\t   x2 = x;\n\t\t   y2 = y - 2;\n\t\t   break;\n\t\tcase 3 :\n\t\t   x1 = x;\n\t\t   y1 = y + 1;\n\t\t   x2 = x;\n\t\t   y2 = y + 2;\n\t\t   break;\n\t\tcase 4 :\n\t\t   x1 = x + 1;\n\t\t   y1 = y;\n\t\t   x2 = x + 2;\n\t\t   y2 = y;\n\t\t   break;\n\t\tdefault : \n\t\t   break; \n\t}\n\tswitch(map1[x1][y1]) {\n\t\tcase WALL : \n\t\t     break;\n\t    case SPACE : \n\t    case TARGET : \n\t\t     map1[x1][x2] = PERSON;\n\t\t\t if (map2[x][y] == TARGET || map2[x][y] == TARGET_IN) {\n\t\t\t \tmap1[x][y] = TARGET;\n\t\t\t } \n\t\t\t else {\n\t\t\t \tmap1[x][y] = SPACE;\n\t\t\t }\n\t\t\t break;\n\t\tcase BOX : \n\t\tcase TARGET_IN : \n\t\t    if (map1[x2][y2] == TARGET)\t{\n\t\t    \tmap1[x2][y2] = TARGET_IN;\n\t\t    \tmap1[x1][y1] = PERSON;\n\t\t\t} \n\t\t\telse if (map1[x2][y2] == SPACE) {\n\t\t\t\tmap1[x2][y2] = BOX;\n\t\t\t\tmap1[x1][y1] = PERSON;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t break;\n\t\t\t}\n\t        if (map2[x][y] == TARGET || map2[x][y] == TARGET_IN) {\n\t        \tmap1[x][y] = TARGET;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmap1[x][y] = SPACE;\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\n\t", "\n\n", "选择关卡后，按下方向键，小人不会移动，而且程序自动结束。"]], "Tag": "程序设计"}
{"Answer": "你说对了，a因为是常量，所以a被编译器直接求值了。", "Konwledge_Point": "符号常量", "Question": ["C++中指针和常量的问题", ["如何理解这一段代码", "    ", "\n\n", "const int a = 0;\nint *p = (int *)&a;\n*p=1;\ncout << a << ' ' << *p << endl;\ncout << &a << ' ' << p << endl;\n", "\n\n", "不理解，a的地址和p的地址一样，但是输出为什么不一样？", "\n当我用：", "const int *p1 = &a;", " 解p1引用，则结果与p一致。", "\na莫非只是一个常量符号？望各位大佬解惑。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;必须是 常量&amp;#xff0c;不能是变量&lt;/p&gt;\n&lt;p&gt;可以定义成枚举&lt;/p&gt;\n&lt;p&gt;enum{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  RED,&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  YELLOW,&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  GREEN&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["C语言将常量符号化后，在switch语句中使用报错，这是什么原因？", ["C语言将常量符号化后，在switch语句中使用报错，这是什么原因啊？C语言将常量符号化后，在switch语句中使用报错，这是什么原因啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个好理解&amp;#xff0c;就是取了a[2]的地址&amp;#xff0c;第二个是先取了a[2]的地址&amp;#xff0c;a[2]&amp;#61;3&amp;#xff0c;后面再加上[1]&amp;#xff0c;就是a[2]的地址作为了后面数组的首地址&amp;#xff0c;[1]就是后面数组的第二个元素&amp;#xff0c;值为4&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["关于数组，为什么同样有取地址符号&，但是结果分别为取地址和输出常量呢？", ["\n", "关于数组，为什么同样有取地址符号&，但是结果分别为取地址和输出常量呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;浮点型常量并不一定要小数点&amp;#xff0c;只需要以大写字母D或者大写字母F或者小写字母d或者小写字母f结尾就行了&lt;br /&gt;e后面的加减2可以不要&lt;br /&gt;题主的判断都是对的&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["java怎么判断浮点常量", ["我这几个判断的对吗", "e后面的加减符号可以不要吗", "另外，这个浮点常量必须有小数点吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Symlinks (symbolic links) are \"shortcuts\" you can create in the filesystem to point one directory entry at any arbitrary other directory entry. On a *NIX shell, something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ ln -s /foo/bar.php /baz\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This establishes &lt;code&gt;/baz&lt;/code&gt; as a symlink to &lt;code&gt;/foo/bar.php&lt;/code&gt;. Whichever file you use now, they're effectively both the same.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Resolving symlinks&lt;/em&gt; means to look at a given path, recognise symlinks within it and replace them by the actual file path they point to. So, regardless of whether you do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ php /baz\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ php /foo/bar.php\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the &lt;code&gt;__FILE__&lt;/code&gt; constant will be resolved to the actual file path &lt;code&gt;/foo/bar.php&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "符号常量", "Question": ["在魔术常量__FILE__的描述中，“符号链接已解决”是什么意思？", ["\n\n", "I'm using ", "PHP 7.2.0", "\n\n", "Below is a description of magic constant ", "__FILE__", " :", "\n\n", "\n  ", "The full path and filename of the file with symlinks resolved. If used\n  inside an include, the name of the included file is returned.", "\n", "\n\n", "I didn't understand meaning of the clause ", "\"filename of the file with symlinks resolved\"", " ", "\n\n", "Someone please make me understand the meaning of this clause with demonstrative suitable example of usage of magic constant ", "__FILE__", " accompanied by appropriate explanation.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是 JMenuItem 的 I 写成小写的 l 了吗&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/246890759256166.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/478234759256161.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;我把报错都改了&amp;#xff0c;你试一下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.*;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.*;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.*;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;TestDraw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JFrame&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;MyCanvas&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;myc&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;TestDraw&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        initFrame();\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;initFrame&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        setSize(&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;);\n\n        &lt;span class=\"hljs-type\"&gt;JMenuBar&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;jbar&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenuBar&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;JMenu&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;draw&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenu&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;绘图&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;JMenuItem&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m_line&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenuItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;直线&amp;#34;&lt;/span&gt;);\n        m_line.addActionListener(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MenultemHandler&lt;/span&gt;());\n        &lt;span class=\"hljs-type\"&gt;JMenuItem&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m_circle&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenuItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;JMenuItem&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m_Rectangle&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenuItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;矩形&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;JMenuItem&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m_oval&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JMenuItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;椭圆&amp;#34;&lt;/span&gt;);\n        draw.add(m_line);\n        draw.add(m_circle);\n        draw.add(m_Rectangle);\n        draw.add(m_oval);\n        jbar.add(draw);\n        setJMenuBar(jbar);\n\n        myc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MyCanvas&lt;/span&gt;();\n        add(myc);\n        setVisible(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MenultemHandler&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ActionListener&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;actionPerformed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(ActionEvent e)&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (e.getActionCommand()) {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;直线&amp;#34;&lt;/span&gt;:\n                    myc.setType(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n                    myc.repaint();\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;圆&amp;#34;&lt;/span&gt;:\n                    myc.setType(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                    myc.repaint();\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;矩形&amp;#34;&lt;/span&gt;:\n                    myc.setType(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n                    myc.repaint();\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;椭圆&amp;#34;&lt;/span&gt;:\n                    myc.setType(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n                    myc.repaint();\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;TestDraw&lt;/span&gt;();\n        }\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MyCanvas&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Canvas&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;shapeType&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;paint&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Graphics g)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (shapeType) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                g.drawLine(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n\n                g.drawOval(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n\n                g.drawRect(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n\n                g.drawOval(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setType&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; shapeType)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.shapeType &amp;#61; shapeType;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["java做的图像绘图", ["import javax.swing.", ";", "import  java.awt.event.", "; ", "\n", "public class TestDraw extends JFrame{", "            MyCanvas myc = null;", "                 public TestDraw(){", "                         initFrame();", "                                             }", "public void initFrame(){", "                setSize(800,600);", "\n", "            JMenuBar jbar ", "=", " new JMenuBar()", ";", "\n            JMenu draw ", "=", " new JMenu(", "\"绘图\"", ")", ";", "\n            JMenultem m_line ", "=", " new JMenultem(", "\"直线\"", ")", ";", "\n            m.line.addActionListener(new MenultemHandler())", ";", "\n            JMenuItem m_circle ", "=", " new JMenultem(", "\"圆\"", ")", ";", "\n            JMenultem m_Rectangle ", "=", " new JMenultem(", "\"矩形\"", ")", ";", "\n           JMenultem m_oval ", "=", " new JMenultem(", "\"椭圆\"", ")", ";", "\n           draw.add(m_line)", ";", "\n           draw.add(m_circle)", ";", "\n           draw.add(m_Rectangle)", ";", "\n           draw.add(m_oval)", ";", "\n           jbar.add(draw)", ";", "\n           setJMenuBar(jbar)", ";", "\n\n           myc ", "=", " new MyCanvas()", ";", "\n           add(myc)", ";", "\n           setVisible(true)", ";", "\n                                }\n", "\n", "class MenultemHandler implements ActionListener{", "public void actionPerformed(ActionEvent e){", "switch(e.getActionCommand()){", "case \"直线\":", "myc.setType(0);myc.repaint();", "break;", "case \"圆\":", "myc.setType(1);myc.repaint();", "break;", "case \"矩形\":", "myc.setType(2);", "myc.repaint();", "break;", "case \"椭圆\":", "myc.setType(3);myc.repaint();", "break;", "                                             }", "                                                                   }", "public static void main(String[] args){", "new TestDraw();", "                                                          }", "                                                                             }", "}", "\n", "class MyCanvas extends Canvas{", "int shapeType = -1;", "public void paint(Graphics g){", "switch(shapeType){", "case 0:", "             g.drawLine(50,50, 400,200);", "             break;", "\n", "case 1:", "\n", "        ", "g", ".drawOval(", "50", ",", "50", ", ", "200", ",", "200", ");\n        ", "break", ";\n", "\n", " case 2:", "\n", "       ", "g", ".drawRect(", "50", ",", "50", ", ", "200", ",", "200", ");\n       ", "break", "; \n", "\n", "case 3:", "\n", "            g.drawOval(", "50", ",", "50", ", ", "400", ",", "200", ");\n            ", "break", ";\n                    }\n                                      }\n", "\n", "public void setType(int shapeType){", "this.shapeType = shapeType;", "                                                      }", "                                                        }", "TestDraw.java:15: 错误: 找不到符号", "                JMenultem m_line = new JMenultem(\"直线\");", "                ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:15: 错误: 找不到符号", "                JMenultem m_line = new JMenultem(\"直线\");", "                                       ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "\n", "TestDraw.java:17: 错误: 找不到符号", "                JMenuItem m_circle = new JMenultem(\"圆\");", "                                         ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:18: 错误: 找不到符号", "                JMenultem m_Rectangle = new JMenultem(\"矩形\");", "                ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:18: 错误: 找不到符号", "                JMenultem m_Rectangle = new JMenultem(\"矩形\");", "                                            ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:19: 错误: 找不到符号", "               JMenultem m_oval = new JMenultem(\"椭圆\");", "               ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:19: 错误: 找不到符号", "               JMenultem m_oval = new JMenultem(\"椭圆\");", "                                      ^", "  符号:   类 JMenultem", "  位置: 类 TestDraw", "TestDraw.java:49: 错误: 内部类TestDraw.MenultemHandler中的静态声明非法", "public static void main(String[] args){", "                   ^", "  修饰符 'static' 仅允许在常量变量声明中使用", "9 个错误"]], "Tag": "程序设计"}
{"Answer": "string a；这段代码是创建一个string类型的变量a，保存在栈内存空间中，他没有任何指向。\r\n\r\n\"aabb\"是创建了一个字符串对象，它首先会看常量池中存不存在这个对象，如果不存在，才创建后保存到常量池中。存在了就不会了。。。\r\n\r\nString a = \"aabb\";这句话就是把a指向常量池中字符串对象的地址，以后使用直接从地址中取值。\r\n\r\nps：多去理解一下java的内存模型和分区，建议看一下：http://blog.csdn.net/chenbaige/article/details/57115858", "Konwledge_Point": "符号常量", "Question": ["关于String类声明的一个小问题，想不明/(ㄒoㄒ)/~~", ["String a = \"aabb\";", "\n我看视频的老师说，字符串也是一个对象，\"aabb\"是常量，一旦赋值不可再改变，", "\n存放在方法去中的常量池，a指向这个字符串，可是String类型声明了a，为什么a是引用", "\n变量，它不是被String声明成常量了吗？", "\n难道说String只是为了加载String类的信息"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\n\r\nvoid main()\r\n{\r\n\tint arr[256];\r\n\tint i;\r\n\tfor (i = 0; i&lt; 256; i++) arr[i] = 0;\r\n\tchar str2 [] = \"helloworld12138\";\r\n\ti = 0;\r\n\twhile (str2[i++] != '\\0') arr[(int)str2[i]]++;\r\n\tint n = 0;\r\n\tfor (i = 0; i&lt; 256; i++) if (arr[i] &gt; 0) n++;\r\n\tprintf(\"%d\", n);\r\n}\r\n```", "Konwledge_Point": "符号常量", "Question": ["关于c语言字符中的问题", ["想了许久反而问题更多了的c语言题目，小白实在是无能为力了，求各位大神解惑。", "谢谢！", "\n\n", "Description", "\n字符串是由一个一个字符组成起来的字符数组，每一个字符都是它的一个元素，那么，现在给出字符串的初始化语句，要求你计算该字符串中不同元素个数。", "\nInput", "\n多组数据测试。", "\n输入包括一行字符，由“char”+“name[]=”+“Str”组成。", "\nname对应的一串由数字组成和字母组成的字符串Str，由双引号括起来，表示name字符串的初始化为Str。整行长度不超过100，题目保证变量名合法。", "\nOutput", "\n每组数据输出一行，每一行输出数组名及不同元素个数", "\nSample Input ", "\nchar str1 [] = \"helloworld\";", "\nchar str2 [] = \"helloworld12138\";", "\n\n", "Sample Output", "\nstr1 7", "\nstr2 11"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport &lt;span class=\"hljs-built_in\"&gt;math&lt;/span&gt;\n\nr &amp;#61; float(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆面积是%.2f&amp;#34;&lt;/span&gt; % (&lt;span class=\"hljs-built_in\"&gt;math&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;*r*r))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["禁止重复输入同样的词汇或符号", ["禁止重复输入同样的词汇或符号（使用math库的pi常量）", "\n", "输入格式:", "输入圆的半径，可以是小数，也可以是整数。", "\n", "输出格式:", "输出结果，要求面积保留2位小数。输出格式为：圆面积是", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "2", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "圆面积是12.57", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "静态引用就是说虽然是一个引用型的变量（比如String）但是指向的存储在常量区，这些对象由jvm初始化，不经过构造函数。这种例外主要是对常用的对象优化，提高性能和节约存储。", "Konwledge_Point": "符号常量", "Question": ["jvm静态引用是什么意思？", ["\n", "在Class文件的常量池中存有大量的符号引用，字节码中的方法调用指令就以常量池中指向方法的符号引用为参数。这些符号引用一部分会在类加载阶段或第一次使用的时候转化为直接引用，这种转化称为静态解析。", "\n\n", "常量池中存在大量的符号引用", "\n", "\n\n", "所谓的符号引用是什么意思？", "\n\n", "\n", "字节码中的指令以常量池中指向该方法的符号引用为参数", "\n", "\n\n", "懵逼了，谁能给解释下，最好举个实例"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;printf就是关键字啊。这是一个&lt;br /&gt;标识符就是两个括号&amp;#xff0c;以及最后的分号&amp;#xff0c;这就三个&lt;br /&gt;还有一个就是字符串&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["找到五个令牌，，，，", ["您好！我只能找到“Hello World!/n”这个字符串字面量，(      )以及；这个符号。那关键字和标识符以及常量是什么呢？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; PI (3.0f)&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r&amp;#61;&lt;span class=\"hljs-number\"&gt;10.0f&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;面积&amp;#xff1a;%f 周长&amp;#xff1a;%f\\n&amp;#34;&lt;/span&gt;,PI*r*r,&lt;span class=\"hljs-number\"&gt;2.0f&lt;/span&gt;*PI*r);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["这个要怎么去做哎，求c++的做法", ["请设计程序，计算圆的面积和周长并输出计算结果:，", "\n", "要求: (1) 半径设置变量r:初始值为", "\n", "10 (可以修改)，r的类型?", "\n", "(2)圆周率设置常量符号PI(3)精度控制:小数点后保留3位"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加载&amp;#xff0c;链接&amp;#xff0c;初始化见java虚拟机规范第5章&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["关于宋红康teacher讲授的JVM中有关对象实例化内存布局与访问定位中的对象创建步骤的疑问！", ["在宋红康teacher讲授JVM的视频中将对象创建的步骤分为了6个步骤，但是我在第一个步骤就不太理解了", "原话是这样的：", "\n", "我有两点疑惑", "第一个在jdk8中元空间不是没有常量池吗，所以这里我理解的常量池指的是运行时常量池，不知道对不对，还望解答", "第二个疑惑就是定位一个类的符号引用，这里我很不理解，在类加载子系统阶段不是已经将符号引用都转换为直接引用了吗，求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;JVM将类加载过程分为&amp;#xff1a;加载-&amp;gt;链接&amp;#xff08;验证&amp;#43;准备&amp;#43;解析&amp;#xff09;-&amp;gt;初始化&amp;#xff08;使用前的准备&amp;#xff09;-&amp;gt;使用-&amp;gt;卸载。&lt;/p&gt;\n&lt;p&gt;加载过程中会先检查类是否被已加载&amp;#xff0c;只要某个classloader已加载就视为已加载此类&amp;#xff0c;保证此类只所有ClassLoader加载一次。在虚拟机的生命周期中一个类只被加载一次。&lt;br /&gt;类加载的时机&amp;#xff1a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      1&amp;#xff09;第一次创建对象要加载类.&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      2&amp;#xff09;调用静态方法时要加载类,访问静态属性时会加载类。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      3&amp;#xff09;加载子类时必定会先加载父类。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      4&amp;#xff09;创建对象引用不加载类.&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      5) 子类调用父类的静态方法时&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      6&amp;#xff09;访问静态常量&amp;#xff0c;如果编译器可以计算出常量的值&amp;#xff0c;则不会加载类&lt;/span&gt;&lt;br /&gt;new 如果没有当然回去加载&amp;#xff0c;如果有了&amp;#xff0c;那就不会去加载。而是去初始化了。静态初始化是属于类加载的过程&amp;#xff0c;所以它只执行一次&amp;#xff0c;而实例初始化是每个对象创建时都会执行一次。&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["静态代码块和类的加载问题求解", ["静态代码块随着类的加载而加载", "\n", "创建一个对象或者访问一个类的静态成员时,一定会加载该类", "\n", "同一个类中多次创建该类或者访问该类的静态成员为什么只会加载一次?", "\n", "而不同的类没次访问都会加载一次?", "\n", "内存中不是以已经有了该类的字节码对象,为什么还会去加载", "\n", "JVM只有一个,类的符号引用已经有了  不同的类new为什么又会去加载", "\n", "JDK7后常量池在堆中,而堆又是线程共享的  JVM只有一个,那么堆也只有一个,常量池也是一个,共享,难道其他的类不知道常量池中已经有了该类的符号引用吗?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;\\0不等于EOF&amp;#xff0c;\\0的ascii码值是0&amp;#xff0c;EOF是文件结束符&lt;br /&gt;gets(s)从键盘读取一串字符串&amp;#xff0c;并以\\0结束&amp;#xff0c;这是函数的功能。&lt;br /&gt;c&amp;#61;getchar()从键盘读取单个字符&amp;#xff0c;\\0无法通过键盘输入&amp;#xff0c;但是EOF可以通过ctrl&amp;#43;z组合键来模拟输入。&lt;br /&gt;所以两者不能互换。&lt;br /&gt;另外&amp;#xff0c;你代码一中&amp;#xff0c;第9行的i&amp;#43;&amp;#43;应该放在if语句下面。&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["关于while循环的输入终止条件情况", ["引入问题：统计数字个数", "\n", "接收输入的一行字符，统计出字符串中包含数字的个数。", "输入格式:", "输入一行任意的字符串，可以包含包含数字、字母和特殊字符，也可以不包括", "输出格式:", "输出输入字符串中数字的个数", "\n", "输入样例1:", "在这里给出一组输入。例如：", "hello", "\n", "输出样例1:", "在这里给出相应的输出。例如：", "0", "\n", "现给出2种方法：", "1.", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n\n ", "int", " ", "main", "()", "{\n   ", "char", " s[", "100", "];\n   ", "int", " i=", "0", ",b=", "0", ";\n   ", "gets", "(s);\n   ", "while", " (s[i]!=", "'\\0'", "){                ", "//注意", "\n        i++;\n    ", "if", " (s[i]>=", "48", " && s[i]<=", "57", "){\n   b++;\n   }\n   }\n   ", "printf", "(", "\"%d\"", ",b);\n   ", "return", " ", "0", ";\n", "\n", " }", "2.", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " c;\n    ", "int", " digit=", "0", ";\n    ", "while", " ((c=", "getchar", "())!=EOF)                 ", "//注意", "\n    {\n        ", "if", " (c >= ", "'0'", " && c <= ", "'9'", "){\n            digit++;\n        }\n}\n    ", "printf", "(", "\"%d\"", ",digit);\n    ", "return", " ", "0", ";\n}\n", "\n", "为什么两种方法里while的循环终止条件不同，且不能互换，s[i]的'\\0'要是换成了EOF显示答案错误，getchar()的EOF要是换成了'\\0'显示运行超时", "由此引起了对while循环终止条件的思考，在一些要连续输入直到满足特定条件才跳出循环。", "问下都有哪些符号或者常量等经常被用作连续输入循环判断语句里的终止条件？", "'\\n'可以用作终止符吗？（潜意识里总是会先打个'\\n'试试）最好有具体例子"]], "Tag": "程序设计"}
{"Answer": "BootStrapClassLoader  ：加载java运行过程中的核心类库JRE\\lib\\rt.jar, sunrsasign.jar, charsets.jar, jce.jar, jsse.jar, plugin.jar 以及存放在JRE\\classes里的类\r\n\r\nAppClassLoader          ：加载CLASSPATH变量指定路径下的类  即指你自已编写的类\r\n\r\n所以Object和List会使用BootStrapClassLoader，因为它们是JDK提供的，而Test使用的是AppClassLoader，因为这是你自己编写的。\r\n\r\n\r\n1：BootStrapClassLoader  ：加载java运行过程中的核心类库JRE\\lib\\rt.jar, sunrsasign.jar, charsets.jar, jce.jar, jsse.jar, plugin.jar 以及存放在JRE\\classes里的类\r\n2：ExtClassLoader           ：加载JRE\\lib\\ext 或者目录下的库文件目录下的类（包括任何子目录，有别于其他两个ClassLoader）\r\n3：AppClassLoader          ：加载CLASSPATH变量指定路径下的类\r\n \r\nA、其中AppClassLoader的parent（并非父类）为ExtClassLoader, ExtClassLoader的parent为BootStrapClassLoader，根据ClassLoader的委托模型,当要加载一个class时候会先让其parent来加载，如果parent找不到的话，再由自己来加载。\r\nB、加载的第一个类的ClassLoader如果为BootStrapClassLoader的话，那么其他的所有类也必须又BootStrapClassLoader来加载，如果加载第一个类的ClassLoader为AppClassLoader的话，则类的加载按规则A来执行。\r\n \r\nBootStrapClassLoader的默认Load路径可以通过 System.getProperty(\"sun.boot.class.path\");来取得\r\nExtClassLoader的默认Load路径可以通过 System.getProperty(\"java.ext.dirs\");来取得\r\nAppClassLoader的默认Load路径可以通过 System.getProperty(\"java.class.path\");来取得\r\n \r\n其中ExtClassLoader,AppClassLoader的load可以通过命令：java -Djava.ext.dirs xxx xxx，java -Djava.class.path xxx xxx来改变\r\n而BootStrapClassLoader的路径是用C++写死在JVM里面的，即使通过java -Dsun.boot.class.path xxx xxx来改变路径也不起任何作用。", "Konwledge_Point": "符号常量", "Question": ["关于classLoader命名空间的问题", ["大家好 目前在看关于java虚拟机的书籍", "\n\n", "书上说 个各类装载器都使用单独的命名空间 一个类型无法看到不在同一个命名空间装载的其它类型", "\n\n", "书上还说 没个被加载到方法区的class类型都有一个常量区 常量区中存放着其他类型的名字 字段 方法", "\n\n", "在jvm解析阶段 需要把常量区中的其它类型的符号引用指向正确的类型地址 而且在解析过程中使用当前类的classLoader的命名空间去搜索和加载其它类型 比如Cat类是被一个用户自定义的类加载器加载的，当虚拟机解析指向Mouse的引用时，会检查Mouse是否已经被Cat所属的命名空间加载 如果没有 就是用Cat的类加载器加载Mouse类 即使Mouse已经被加载到另一个命名空间中", "\n\n", "于是我写了一个测试小程序", "\n\n", "public class Test {", "\n\n", "public static void main(String[] args) throws Exception{\n    Object o = new Object();\n    List<String> l = new ArrayList<String>();\n\n    System.out.println(o.getClass().getClassLoader());\n    System.out.println(l.getClass().getClassLoader());\n    System.out.println(Test.class.getClassLoader());\n}\n", "\n\n", "}", "\n\n", "为什么Test类使用的是AppClassLoader 而Object 和 List 还是使用的Bootstrap ClassLoader? 和上面的观点有矛盾啊", "\n\n", "请大侠帮助解决 小弟谢谢了"]], "Tag": "程序设计"}
{"Answer": "```\r\n  XSTR(A)\".\"XSTR(B)\".\"XSTR(C) 被宏替换后是字符串：\r\n\t\"A.B.C\"\r\n\tcpVersionString是指针变量，指向一个版本字符串如：“3.2.1”\r\n```", "Konwledge_Point": "符号常量", "Question": ["请c++大牛帮回答下一个 关于宏的问题", ["代码如下：", "\n#define STR(s) #s", "\n\n", "#define XSTR(s) STR(s)", "\n\n", "#define CP_VERSION_M 6", "\n\n", "#define CP_VERSION_MI 1", "\n\n", "#define CP_VERSION_RE 2", "\n\n", "const char *cpVersionString = XSTR(CP_VERSION_M)\".\"XSTR(CP_VERSION_MI)\".\"XSTR(CP_VERSION_RE);", "\n\n", "其中 XSTR(A)\".\"XSTR(B)\".\"XSTR(C)  ,A,B,C代表常量，  \".\"是什么符号？作用是什么？", "\n\n", "＊cpVersionString 最终是什么值？  因为很奇怪这个语法在别的版本不报错，\".\" 在vs2015会报错！", "\n报\"未找到用户定义的文本运算符\"。。。大家帮帮，谢谢了先"]], "Tag": "程序设计"}
{"Answer": "对于Protected的权限理解\r\nBut a subclass in another package can access the protected members in the super-class via only the references of subclass or its subclasses. A subclass in the same package doesn’t have this restriction. This ensures that classes from other packages are accessing only the members that are part of their inheritance hierarchy.\r\n例如：\r\n在不是一个包的情况之下：\r\n子类的引用在子类中可以调用父类的Protected方法或属性，非子类的话只能调用public方法或属性", "Konwledge_Point": "符号常量", "Question": ["protected 修饰符与继承", ["问题1", "\n\n", "//父类\npackage com.itheima.day_06;\n\npublic class Supper {\n    protected void show() {\n        System.out.println(\"this is Supper show\");\n    }\n}\n\n//子类\npackage com.itheima.day_07;\n\nimport com.itheima.day_06.Supper;\n\npublic class Subber extends Supper {\n    public static void main(String[] args) {\n        Supper sub = new Subber();\n        sub.show();//报错，说明调用的是父类的方法，sub的动态绑定哪里去了？\n    }\n}\n\n", "\n\n", "子类调用show()时实际调用的是父类的方法？我查看了字节码文件，发现子类字节码中没有该方法，在子类调用该方法，常量池保存的方法符号引用却是指向子类的。", "\n\n", "问题2", "\n\n", "//父类\npackage com.itheima.day_06;\n\npublic class Supper {\n    protected static void show() {\n        System.out.println(\"this is Supper show\");\n    }\n}\n//子类\npackage com.itheima.day_07;\n\nimport com.itheima.day_06.Supper;\n\npublic class Subber extends Supper {\n    public static void main(String[] args) {\n        Supper.show();//不报错？？？\n    }\n}\n", "\n\n", "为什么子类可以直接调用父类的protected static 方法？"]], "Tag": "程序设计"}
{"Answer": "不敢再混乱折腾vs了，把cocos2dx换成3.2版本的，编译终于通过了。。。", "Konwledge_Point": "符号常量", "Question": ["cocos2d-x v3.10在vs2012中编译出错", ["我从cocos官网下载了最新的cocos2d-x V3.10版本，本地解压后，打开build文件夹下的相应的win32的sln解决文件后，", "\n 在vs2012（中文旗舰版）中，编译出错了，望各路大神不吝赐教，感激不尽！！！（我电脑的os是win7的）", "\n\n", "↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓Log如下↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓", "\n 1>------ 已启动生成: 项目: libcocos2d, 配置: Debug Win32 ------", "\n1>项目文件包含 ToolsVersion=\"12.0\"。此工具集可能未知或缺失。在这种情况下，通过安装 MSBuild 的正确版本，或许可以解决此问题。否则，该 build 可能已因策略原因而被强制为某个特定 ToolsVersion。将该项目视为其已具有 ToolsVersion=\"4.0\"。有关详细信息，请参阅 ", "http://go.microsoft.com/fwlink/?LinkId=291333。", "\n1>项目文件包含 ToolsVersion=\"12.0\"。此工具集可能未知或缺失。在这种情况下，通过安装 MSBuild 的正确版本，或许可以解决此问题。否则，该 build 可能已因策略原因而被强制为某个特定 ToolsVersion。将该项目视为其已具有 ToolsVersion=\"4.0\"。有关详细信息，请参阅 ", "http://go.microsoft.com/fwlink/?LinkId=291333。", "\n1>项目文件包含 ToolsVersion=\"12.0\"。此工具集可能未知或缺失。在这种情况下，通过安装 MSBuild 的正确版本，或许可以解决此问题。否则，该 build 可能已因策略原因而被强制为某个特定 ToolsVersion。将该项目视为其已具有 ToolsVersion=\"4.0\"。有关详细信息，请参阅 ", "http://go.microsoft.com/fwlink/?LinkId=291333。", "\n1>项目文件包含 ToolsVersion=\"12.0\"。此工具集可能未知或缺失。在这种情况下，通过安装 MSBuild 的正确版本，或许可以解决此问题。否则，该 build 可能已因策略原因而被强制为某个特定 ToolsVersion。将该项目视为其已具有 ToolsVersion=\"4.0\"。有关详细信息，请参阅 ", "http://go.microsoft.com/fwlink/?LinkId=291333。", "\n1>  UIScale9Sprite.cpp", "\n 1>..\\ui\\UIScale9Sprite.cpp(1172): error C2059: 语法错误:“{”", "\n1>..\\ui\\UIScale9Sprite.cpp(1172): error C2143: 语法错误 : 缺少“;”(在“{”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1172): error C2143: 语法错误 : 缺少“;”(在“}”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1176): error C2059: 语法错误:“{”", "\n1>..\\ui\\UIScale9Sprite.cpp(1176): error C2143: 语法错误 : 缺少“;”(在“{”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1176): error C2143: 语法错误 : 缺少“;”(在“}”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1210): error C2059: 语法错误:“{”", "\n1>..\\ui\\UIScale9Sprite.cpp(1210): error C2143: 语法错误 : 缺少“;”(在“{”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1210): error C2143: 语法错误 : 缺少“;”(在“}”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1299): error C2059: 语法错误:“{”", "\n1>..\\ui\\UIScale9Sprite.cpp(1299): error C2143: 语法错误 : 缺少“;”(在“{”的前面)", "\n1>..\\ui\\UIScale9Sprite.cpp(1299): error C2143: 语法错误 : 缺少“;”(在“}”的前面)", "\n2>------ 已启动生成: 项目: cpp-tests, 配置: Debug Win32 ------", "\n2>  复制了 0 个文件", "\n2>  找不到文件 - *.dll", "\n 2>  复制了 0 个文件", "\n2>  LabelTestNew.cpp", "\n 2>  NavMeshTest.cpp", "\n 2>  UIScale9SpriteTest.cpp", "\n 2>  controller.cpp", "\n 2>C:\\cocos2d-x-3.10\\external\\chipmunk\\include\\chipmunk\\chipmunk.h(26): warning C4005: “_USE_MATH_DEFINES”: 宏重定义 (..\\Classes\\controller.cpp)", "\n 2>          命令行参数: 参见前面的“_USE_MATH_DEFINES”定义", "\n2>..\\Classes\\UITest\\CocoStudioGUITest\\UIScale9SpriteTest.cpp(989): error C2552: “spriteFrameNameArray”: 不能用初始值设定项列表初始化非聚合", "\n2>          “std::vector<_Ty>”: 不聚合带基的类型", "\n2>          with", "\n 2>          [", "\n 2>              _Ty=std::string", "\n 2>          ]", "\n 2>  DrawPrimitivesTest.cpp", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\ActionManagerTest/ActionManagerTest.h(92): error C2864: “StopActionsByFlagsTest::kMoveFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\controller.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\ActionManagerTest/ActionManagerTest.h(93): error C2864: “StopActionsByFlagsTest::kScaleFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\controller.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\ActionManagerTest/ActionManagerTest.h(94): error C2864: “StopActionsByFlagsTest::kRotateFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\controller.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\ActionManagerTest/ActionManagerTest.h(95): error C2864: “StopActionsByFlagsTest::kRepeatForeverFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\controller.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\ActionManagerTest/ActionManagerTest.h(86): error C2512: “StopActionsByFlagsTest”: 没有合适的默认构造函数可用 (..\\Classes\\controller.cpp)", "\n 2>..\\Classes\\LabelTest\\LabelTestNew.cpp(1027): warning C4018: “<”: 有符号/无符号不匹配", "\n2>c:\\cocos2d-x-3.10\\external\\bullet\\bulletcollision\\broadphasecollision\\btDbvtBroadphase.h(62): warning C4099: “btDbvtBroadphase”: 类型名称以前使用“class”现在使用的是“struct” (..\\Classes\\NavMeshTest\\NavMeshTest.cpp)", "\n 2>          c:\\cocos2d-x-3.10\\cocos\\physics3d\\CCPhysics3DWorld.h(39) : 参见“btDbvtBroadphase”的声明", "\n2>..\\Classes\\LabelTest\\LabelTestNew.cpp(1841): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失", "\n2>..\\Classes\\LabelTest\\LabelTestNew.cpp(2524): error C2552: “labelTypes”: 不能用初始值设定项列表初始化非聚合", "\n2>          “std::vector<_Ty>”: 不聚合带基的类型", "\n2>          with", "\n 2>          [", "\n 2>              _Ty=std::string", "\n 2>          ]", "\n 2>..\\Classes\\NavMeshTest\\NavMeshTest.cpp(181): error C2143: 语法错误 : 缺少“;”(在“{”的前面)", "\n2>..\\Classes\\NavMeshTest\\NavMeshTest.cpp(181): error C2143: 语法错误 : 缺少“;”(在“}”的前面)", "\n2>..\\Classes\\LabelTest\\LabelTestNew.cpp(2665): error C2552: “labelTypes”: 不能用初始值设定项列表初始化非聚合", "\n2>          “std::vector<_Ty>”: 不聚合带基的类型", "\n2>          with", "\n 2>          [", "\n 2>              _Ty=std::string", "\n 2>          ]", "\n 2>  ActionManagerTest.cpp", "\n 2>..\\Classes\\DrawPrimitivesTest\\DrawPrimitivesTest.cpp(317): error C2552: “cocos2d::V3F_C4B_T2F::vertices”: 不能用初始值设定项列表初始化非聚合", "\n2>          “cocos2d::Vec3”: 不聚合带用户定义的构造函数的类型", "\n2>..\\Classes\\DrawPrimitivesTest\\DrawPrimitivesTest.cpp(318): error C2552: “cocos2d::V3F_C4B_T2F::vertices”: 不能用初始值设定项列表初始化非聚合", "\n2>          “cocos2d::Vec3”: 不聚合带用户定义的构造函数的类型", "\n2>..\\Classes\\DrawPrimitivesTest\\DrawPrimitivesTest.cpp(319): error C2552: “cocos2d::V3F_C4B_T2F::vertices”: 不能用初始值设定项列表初始化非聚合", "\n2>          “cocos2d::Vec3”: 不聚合带用户定义的构造函数的类型", "\n2>..\\Classes\\DrawPrimitivesTest\\DrawPrimitivesTest.cpp(320): error C2552: “cocos2d::V3F_C4B_T2F::vertices”: 不能用初始值设定项列表初始化非聚合", "\n2>          “cocos2d::Vec3”: 不聚合带用户定义的构造函数的类型", "\n2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\actionmanagertest\\ActionManagerTest.h(92): error C2864: “StopActionsByFlagsTest::kMoveFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\ActionManagerTest\\ActionManagerTest.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\actionmanagertest\\ActionManagerTest.h(93): error C2864: “StopActionsByFlagsTest::kScaleFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\ActionManagerTest\\ActionManagerTest.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\actionmanagertest\\ActionManagerTest.h(94): error C2864: “StopActionsByFlagsTest::kRotateFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\ActionManagerTest\\ActionManagerTest.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\actionmanagertest\\ActionManagerTest.h(95): error C2864: “StopActionsByFlagsTest::kRepeatForeverFlag”: 只有静态常量整型数据成员才可以在类中初始化 (..\\Classes\\ActionManagerTest\\ActionManagerTest.cpp)", "\n 2>c:\\cocos2d-x-3.10\\tests\\cpp-tests\\classes\\actionmanagertest\\ActionManagerTest.h(86): error C2512: “StopActionsByFlagsTest”: 没有合适的默认构造函数可用 (..\\Classes\\ActionManagerTest\\ActionManagerTest.cpp)", "\n========== 生成: 成功 0 个，失败 2 个，最新 4 个，跳过 0 个 ========== "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;LuRuCj()这个方法前面加个void&lt;br /&gt;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "符号常量", "Question": ["求解答，出现了新错误", ["import java.util.Scanner;", "class XueSheng {", "    String xueHao;", "    String xingMing;", "    String xingBie;", "    float yuWenCj;", "    float shuXueCj;", "    float waiYuCj;", "    float yswZf;", "    public XueSheng() {", "        Scanner sc=new Scanner(System.in);", "        System.out.print(\"请输入学号:\");", "        xueHao=sc.next();", "        System.out.print(\"请输入姓名:\");", "        xingMing=sc.next();", "        System.out.print(\"请输入性别:\");", "        xingBie=sc.next();", "    }", "    public void LuRuCj() {", "        Scanner sc=new Scanner(System.in);", "        System.out.print(\"请输入语文成绩\");", "        yuWenCj=sc.next();", "        System.out.print(\"请输入数学成绩\");", "        shuXueCj=sc.next();", "        System.out.print(\"请输入外语成绩\");", "        waiYuCj=sc.next();", "        float sum=yuWenCj+shuXueCj+waiYuCj;", "    }", "    public class L117{", "        public static void main(String[] args){", "            XueSheng[] lw=new XueSheng[3];", "            for(int i=0;i<3;i++){", "                System.out.println(\"第\"+(i+1)+\"个学生的基本信息:\");", "                lw[i]=new XueSheng();", "            }", "            for(int i=0;i<3;i++){", "                System.out.println(\"请分别录入\"+lw[i].name+\"的成绩:\");", "            }", "        }", "    }", "}", "\n", "   新错误", "B:\\lwl>javac L117.java", "L117.java:22: 错误: 不兼容的类型: String无法转换为float", "                yuWenCj=sc.next();", "                               ^", "L117.java:24: 错误: 不兼容的类型: String无法转换为float", "                shuXueCj=sc.next();", "                                ^", "L117.java:26: 错误: 不兼容的类型: String无法转换为float", "                waiYuCj=sc.next();", "                               ^", "L117.java:37: 错误: 找不到符号", "                                System.out.println(\"请分别录入\"+lw[i].name+\"的成绩:\");", "                                                                ^", "  符号:   变量 name", "  位置: 类 XueSheng", "L117.java:30: 错误: 内部类XueSheng.L117中的静态声明非法", "                public static void main(String[] args){", "                                   ^", "  修饰符 'static' 仅允许在常量变量声明中使用", "5 个错误"]], "Tag": "程序设计"}
{"Answer": "&lt;script type=\"text/javascript\"&gt;\r\n    \r\n     var str = prompt(\"请输入要加密的字符串:\").split(\"\");\r\n    \r\n     var newStr = [];\r\n     //小写字母表\r\n     var smallAlphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\r\n      //大写字母表\r\n      var capitalAlphabet=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"V\",\"U\",\"W\",\"X\",\"Y\",\"Z\"];\r\n    \r\n    \r\n     for (var n=0; n &lt; str.length; n++)\r\n     loop_1:  \r\n     for (var i=0; i&lt;=25; i++)\r\n    \r\n     switch (true) {\r\n    \r\n         case str[n] == smallAlphabet[i] &amp;&amp; i+5&lt;=25:\r\n    \r\n         newStr[n] = smallAlphabet[i+5]; \r\n    \r\n             break loop_1  ;\r\n    \r\n    \r\n         case str[n] == smallAlphabet[i] &amp;&amp; i+5 &gt;25:\r\n    \r\n         newStr[n] = smallAlphabet[i+5-26];\r\n    \r\n             break loop_1  ;\r\n    \r\n         case str[n] == capitalAlphabet[i] &amp;&amp;i+5 &lt;= 25:\r\n    \r\n         newStr[n] = capitalAlphabet[i+5];\r\n    \r\n             break loop_1 ;\r\n    \r\n         case str[n] == capitalAlphabet[i] &amp;&amp; i+5 &gt;25:\r\n    \r\n         newStr[n] = capitalAlphabet[i+5-26];\r\n    \r\n             break loop_1  ;\r\n         //如果str[]既不在小写字母表中，也不在大写字母表中\r\n         case str[n]!=smallAlphabet[i]&amp;&amp;str[n]!=capitalAlphabet[i]:\r\n    \r\n         newStr[n]=str[n];    \r\n    \r\n             break;\r\n    \r\n      }\r\n    \r\n    alert(\"加密后的新字符串是：\" + newStr.join(\"\"));\r\n    \r\n    &lt;/script&gt;\r\n\r\n问题不是你那段代码写错了，而是被执行了太多次了你可以试试直接输入一个z，它就会正常显示，在你之前的代码里break只是跳出选择但并没有跳出循环，这样你最后那段代码在每次里层循环会被执行25次，这样你前面得到的结果就被后面的覆盖掉了，所以效果就是没有加密成功。打个比方 当你输入a的时候，第一次会被第一个case执行newStr[0]=f，但是它跳出了switch而没有跳出循环，这样就会继续循环下去，当进行第二次判断的时候a就满足了最后那行代码这时候newStr[0]原来的值就被重新覆盖掉了又变回了a，所以你最后得到的结果还是a，除非你输入的是z他最后一次执行的时候会被第一个case执行从而在最后一次被覆盖成正确的值，你之前不是问过有关console.log()的使用么，用它查看每次循环后newStr[n]的值这样你就能知道错在哪了。我改的这个代码的目的是让他在找到对应的case（除最后一个）后就跳出里层的循环这样得到的结果就不会被覆盖掉了", "Konwledge_Point": "符号常量", "Question": ["用javascript写的字符串加密程序，用if判断程序正常，用switch出错", ["大家好，这段代码实现这样的功能：", "\n\n", "1、用户输入全是小写字母的字符串，不支持空格和标点符号；", "\n\n", "2、程序将字符串中的每个字母，按字母表顺序，向后移动5位，并输出新字符串；", "\n\n", "<script type=\"text/javascript\">\n\n  var str=prompt(\"请输入要加密的字符串:\").split(\"\");\n\n  var newStr=[];\n\n  var alphabet=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n\n  for(var n=0; n<=str.length; n++)\n\n  for(var i=0; i<=25;i++)\n\n  if(str[n]==alphabet[i])\n\n    if(i+5<=25)\n\n     newStr[n]=alphabet[i+5];\n\n  else\n\n     newStr[n]=alphabet[i+5-26];\n\n  alert(\"加密后的新字符串是：\"+newStr.join(\"\"))\n</script>\n", "\n\n", "上面代码可以正常运行，考虑到下一步想让程序区分大小写字母，并支持空格和标点符号，因此想用", "\n\n", "switch(str[n]){\n   case str[n]==alphabet[i]&&i+5<=25:\n   newStr[n]=alphabet[i+5];\n\n   break;\n\n   case str[n]==alphabet[i]&&i+5>25:\n   newStr[n]=alphabet[i+5-26];\n\n  }\n", "\n\n", "这段代码替换原代码中if判断，思路是：", "\n\n", "1、在switch(str[n]）语句中，程序先计算str[n]的值；", "\n2、比对str[n]的值符合哪一个case中的条件，然后决定程序的走向", "\n\n", "如果上面switch(str[n]）语句能正常运行，接下来程序就可以继续扩展，再增加一个大写的判断case，再增加一个空格及标点符号的判断case", "\n\n", "这样，这个javascript编写字符串加密程序的1.0版本就可以正式出炉了，后续会改善用户界面、由用户指定加密步长等；", "\n\n", "但现在恳请列位老师指点，为何用switch(str[n]）替代if语句，程序出错？出错代码如下：", "\n\n", "<script type=\"text/javascript\">\n\n  var str=prompt(\"请输入要加密的字符串:\").split(\"\");\n\n  var newStr=[];\n\n  var alphabet=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n\n  for(var n=0; n<=str.length; n++)\n\n  for(var i=0; i<=25;i++)\n\n  switch(str[n]){\n\n    case str[n]==alphabet[i]&&i+5<=25:\n    newStr[n]=alphabet[i+5];\n\n    break;\n\n    case str[n]==alphabet[i]&&i+5>25:\n    newStr[n]=alphabet[i+5-26];\n\n  }\n\n  alert(\"加密后的新字符串是：\"+newStr.join(\"\"));\n\n</script>\n", "\n\n", "补充说明，一本封皮画犀牛的书中提到，javascript中的switch有别于其他语言，因此case后面最好是常量，但没有说不可以是表达式，难道说case真的不能完成计算后面表达式的值，在与switch()中参数比对？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你需要看一个简单的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import tensorflow as tf\na&amp;#61;tf&lt;span class=\"hljs-selector-class\"&gt;.constant&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[[1,2,3,4]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[4,5,6,7]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[7,8,9,10]&lt;/span&gt;],\n            &lt;span class=\"hljs-selector-attr\"&gt;[[11,12,13,14]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[20,21,22,23]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[15,16,17,18]&lt;/span&gt;]])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(a.shape)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,c&amp;#61;tf&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  #参数&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;、张量  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;、获得的切片数 &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;、切片的维度     将两个切片分别赋值给&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,c\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(b.shape)&lt;/span&gt;&lt;/span&gt;\nprint(c&lt;span class=\"hljs-selector-class\"&gt;.shape&lt;/span&gt;\nwith tf&lt;span class=\"hljs-selector-class\"&gt;.Session&lt;/span&gt;() as sess:  #查看运行结果\n    print(sess&lt;span class=\"hljs-selector-class\"&gt;.run&lt;/span&gt;(b))\n    print(sess&lt;span class=\"hljs-selector-class\"&gt;.run&lt;/span&gt;(c))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出结果为&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;(&lt;span class=\"hljs-name\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n(&lt;span class=\"hljs-name\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n(&lt;span class=\"hljs-name\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n[[[ &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]\n  [ &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;]\n  [ &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]]]\n[[[&lt;span class=\"hljs-name\"&gt;11&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;13&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;]\n  [&lt;span class=\"hljs-name\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;]\n  [&lt;span class=\"hljs-name\"&gt;15&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;17&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;]]]\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注意到此时b,c均为三维张量数据&amp;#xff0c;若想转换为二维数组&amp;#xff0c;可使用tf.reshape命令&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;d&amp;#61;tf&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[3,4]&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(d.shape)&lt;/span&gt;&lt;/span&gt;      \n\n&lt;span class=\"hljs-selector-id\"&gt;#output&lt;/span&gt;\n(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "符号常量", "Question": ["tensorflow的tensor数据切片", ["问题遇到的现象和发生背景", "\n", "在程序中我已经实现了单因子输入进行预测，想进一步输入多因子以提高预测准确性", "\n", "问题相关代码，请勿粘贴截图", "\n", "#———————————————————定义神经网络变量—————————————————————\n", "import", " pandas ", "as", " pd\n", "import", " numpy ", "as", " np\n", "import", " matplotlib.pyplot ", "as", " plt\n", "import", " seaborn ", "as", " sns\n", "import", " tensorflow ", "as", " tf\n", "import", " os\nos.chdir(r", "'C:/dissertation'", ")\n#数据标准化\n", "from", " sklearn ", "import", " preprocessing\n#配置matplotlib画图的符号\nplt.rcParams[", "'font.sans-serif'", "] = [", "'SimHei'", "]  #显示中文\nplt.rcParams[", "'axes.unicode_minus'", "]=", "False", " #用来正常显示坐标中的负号\n\ndef read_data(", "code", "):\n    try:\n        data = pd.read_csv(", "'C:/dissertation/data/bar/'", " + ", "code", " + ", "'_bardata.csv'", ")\n        data = np.array(data.iloc[", "10", ":,", "2", ":])#还没对数据进行清洗，所以手动去除了有空值的部分\n        print(", "code", ",", "'股票数据读取完成！'", ")\n        return data\n    except Exception:\n        print(", "code", ",", "'股票数据读取失败！'", ")  \ndata = read_data(", "'000001.SZ'", ")\nnormalize_data = preprocessing.scale(data)#对每列分别进行数据标准化\n\n#———————————————————形成训练集—————————————————————\n#设置rnn网络的常量\ntime_step=", "20", "     #时间步 ，rnn每迭代", "20", "次，就向前推进一步\nrnn_unit=", "10", "       # hidden layer units\nbatch_size=", "60", "     # 每一批训练多少个样例\ninput_size=", "1", "      # 输入层数维度\noutput_size=", "1", "     # 输出层数维度\nlr=", "0.0006", "         # 学习率\ntrain_x,train_y=[],[]   #训练集\nfor i ", "in", " range(len(normalize_data)-time_step", "-1", "):\n    x=normalize_data[i:i+time_step]\n    y=normalize_data[i+", "1", ":i+time_step+", "1", "]\n    y=y[:,", "4", "]\n    train_x.append(x.tolist())\n    train_y.append(y.tolist()) \nX=tf.placeholder(tf.float32, [None,time_step,input_size])    #每批次输入网络的tensor\nY=tf.placeholder(tf.float32, [None,time_step,output_size])   # 每批次tensor对应的标签\n#输入层、输出层的权重和偏置\nweights={\n         ", "'in'", ":tf.Variable(tf.random_normal([input_size,rnn_unit])),\n         ", "'out'", ":tf.Variable(tf.random_normal([rnn_unit,", "1", "]))\n         } \nbiases={\n        ", "'in'", ":tf.Variable(tf.constant(", "0.1", ",shape=[rnn_unit,])),  \n        ", "'out'", ":tf.Variable(tf.constant(", "0.1", ",shape=[", "1", ",]))\n        }\n#———————————————————定义lstm网络—————————————————————\ndef lstm(batch):      #参数：输入网络批次数\n    pred = ", "0", "\n    for factor_number ", "in", " range(len(x[", "0", "])):\n        w_in=weights[", "'in'", "]\n        b_in=biases[", "'in'", "]\n########################问题句########################################################\n        input=tf.reshape(list(map(lambda x:[[y] for y ", "in", " x.tolist()],np.array(X)[:,:,factor_number])),[", "-1", ",input_size])  \n#此处X由后面的语句传入train_x，train_x为三层嵌套的list，经过X传入变为tensor，所以提示numpy不能处理\n#######################################################################################\n        input_rnn=tf.matmul(input,w_in)+b_in\n        input_rnn=tf.reshape(input_rnn,[", "-1", ",time_step,rnn_unit])   \n        cell=tf.nn.rnn_cell.BasicLSTMCell(rnn_unit)  \n        init_state=cell.zero_state(batch,dtype=tf.float32)\n        output_rnn,final_states=tf.nn.dynamic_rnn(cell, input_rnn,initial_state=init_state, dtype=tf.float32)\n        output=tf.reshape(output_rnn,[", "-1", ",rnn_unit])\n        w_out=weights[", "'out'", "]\n        b_out=biases[", "'out'", "]\n        pred+=tf.matmul(output,w_out)+b_out\n    pred = pred / len(x[", "0", "])\n    return pred,final_states\n#———————————————————对模型进行训练—————————————————————\ndef train_lstm():\n    global batch_size\n    ", "with", " tf.variable_scope(", "\"sec_lstm\"", "):\n        pred,_=lstm(batch_size)\n    #定义损失函数\n    loss=tf.reduce_mean(tf.square(tf.reshape(pred,[", "-1", "])-tf.reshape(Y, [", "-1", "])))\n    train_op=tf.train.AdamOptimizer(lr).minimize(loss)\n    saver=tf.train.Saver(tf.global_variables())\n    ", "with", " tf.Session() ", "as", " sess:\n        sess.run(tf.global_variables_initializer())\n        \n        for i ", "in", " range(", "100", "): #We can increase the number ", "of", " iterations to gain better result.\n            step=", "0", "\n            start=", "0", "\n            end=start+batch_size\n            while(end<len(train_x)):\n################################此处将train_x传入###########################################\n                _,loss_=sess.run([train_op,loss],feed_dict={X:train_x[start:end],Y:train_y[start:end]})\n                start+=batch_size\n                end=start+batch_size\n                #每训练", "10", "次保存一次参数\n                ", "if", " step%", "10", "==", "0", ":\n                    print(", "\"Number of iterations:\"", ",i,", "\" loss:\"", ",loss_) #输出训练次数，输出损失值\n                    print(", "\"model_save\"", ",saver.save(sess,", "'C:/dissertation/model_save1/modle.ckpt'", ")) \n                step+=", "1", "\n        print(", "\"The train has finished\"", ")\ntrain_lstm()\n\n", "\n", "由于我是初学者，所以我尝试在单因子能成功运行的基础上分别将不同因子输入，预测值求平均，希望程序可以运行。如果可以直接输入多因子那就更棒了，感谢！"]], "Tag": "程序设计"}
{"Answer": "工程右键-&gt;properties-&gt;Java Compiler\r\n看右边compiler compliance level 是不是4.0\r\n是的话钩上上边的复选框,改成5.0或6.0", "Konwledge_Point": "符号常量", "Question": ["MyEclipse无法实现AutoBoxing/AutoUnBoxing问题", ["程序代码如下：", "\n\n", "import java.util.HashMap;", "\nimport java.util.Map;", "\n\n", "public class WordConstants {", "\n    private static Map typeNameValue=new HashMap();", "\n    static{", "\n        [color=red]typeNameValue.put(\"a\", 1);", "\n        typeNameValue.put(\"an\", 2);", "\n        typeNameValue.put(\"i\", 3);", "\n        typeNameValue.put(\"j\", 4);", "\n        typeNameValue.put(\"l\", 5);", "\n        typeNameValue.put(\"Ng\", 6);", "\n        typeNameValue.put(\"n\", 7);", "\n        typeNameValue.put(\"nr\", 8);", "\n        typeNameValue.put(\"ns\", 9);", "\n        typeNameValue.put(\"nt\", 10);", "\n        typeNameValue.put(\"nz\", 11);", "\n        typeNameValue.put(\"v\", 12);", "\n        typeNameValue.put(\"vm\", 13);[/color]    }", "\n    public static int getTypeByName(String _sName){", "\n        [color=blue]return typeNameValue.get(_sName);[/color]    }", "\n}", "\n\n", "红色部分提示“The method put(String,Integer) in the type Map(String,Integer) is not applicable for the arguments(String,int)”", "\n蓝色部分提示“Tye mismatch: cannot convert from Integer to int”", "\n上段代码在命令行环境下运行却可顺利编译", "\n\n", "在同样的MyEclipse环境下，不同的工程中，另一段相似代码却没有提示出错信息。相似代码如下：", "\n\n", "package com.pureinfo.segword;", "\n\n", "import java.util.HashMap;", "\nimport java.util.Map;", "\n\n", "public class WordConstants {", "\n    /************************************************************/", "\n    //          常量定义部分                                      //", "\n    /************************************************************/", "\n//  public static int HL_CAL_OPT_KEYWORD = 0x1; //计算关键词附加标识", "\n//  public static int HL_CAL_OPT_FINGER = 0x2;  //计算文章语义指纹标识", "\n//  public static int HL_CAL_OPT_POS = 0x4;//计算词性标识", "\n//  public static int HL_CAL_OPT_SEARCH = 0x8;//输出面向检索的分词结果", "\n\n", "/************************************************************/\n//          词性定义部分                                      //\n/************************************************************/\npublic static final int NATURE_D_A = 0x40000000; // 形容词 形语素\npublic static final int NATURE_D_B = 0x20000000; // 区别词 区别语素\npublic static final int NATURE_D_C = 0x10000000; // 连词 连语素\npublic static final int NATURE_D_D = 0x08000000; // 副词 副语素\npublic static final int NATURE_D_E = 0x04000000; // 叹词 叹语素\npublic static final int NATURE_D_F = 0x02000000; // 方位词 方位语素\npublic static final int NATURE_D_I = 0x01000000; // 成语\npublic static final int NATURE_D_L = 0x00800000; // 习语\npublic static final int NATURE_A_M = 0x00400000; // 数词 数语素\npublic static final int NATURE_D_MQ = 0x00200000; // 数量词\npublic static final int NATURE_D_N = 0x00100000; // 名词 名语素\npublic static final int NATURE_D_O = 0x00080000; // 拟声词\npublic static final int NATURE_D_P = 0x00040000; // 介词\npublic static final int NATURE_A_Q = 0x00020000; // 量词 量语素\npublic static final int NATURE_D_R = 0x00010000; // 代词 代语素\npublic static final int NATURE_D_S = 0x00008000; // 处所词\npublic static final int NATURE_D_T = 0x00004000; // 时间词\npublic static final int NATURE_D_U = 0x00002000; // 助词 助语素\npublic static final int NATURE_D_V = 0x00001000; // 动词 动语素\npublic static final int NATURE_D_W = 0x00000800; // 标点符号\npublic static final int NATURE_D_X = 0x00000400; // 非语素字\npublic static final int NATURE_D_Y = 0x00000200; // 语气词 语气语素\npublic static final int NATURE_D_Z = 0x00000100; // 状态词\npublic static final int NATURE_A_NR = 0x00000080; // 人名\npublic static final int NATURE_A_NS = 0x00000040; // 地名\npublic static final int NATURE_A_NT = 0x00000020; // 机构团体\npublic static final int NATURE_A_NX = 0x00000010; // 外文字符\npublic static final int NATURE_A_NZ = 0x00000008; // 其他专名\npublic static final int NATURE_D_H = 0x00000004; // 前接成分\npublic static final int NATURE_D_K = 0x00000002; // 后接成分\npublic static final int NATURE_D_UN = 0x00000001; // 未知\n\nprivate static Map<String, Integer> typeNameValue = new HashMap<String, Integer>();\nstatic {\n    typeNameValue.put(\"a\", NATURE_D_A);\n    typeNameValue.put(\"b\", NATURE_D_B);\n    typeNameValue.put(\"c\", NATURE_D_C);\n    typeNameValue.put(\"d\", NATURE_D_D);\n    typeNameValue.put(\"e\", NATURE_D_E);\n    typeNameValue.put(\"f\", NATURE_D_F);\n    typeNameValue.put(\"i\", NATURE_D_I);\n    typeNameValue.put(\"l\", NATURE_D_L);\n    typeNameValue.put(\"m\", NATURE_A_M);\n    typeNameValue.put(\"mq\", NATURE_D_MQ);\n    typeNameValue.put(\"n\", NATURE_D_N);\n    typeNameValue.put(\"o\", NATURE_D_O);\n    typeNameValue.put(\"p\", NATURE_D_P);\n    typeNameValue.put(\"q\", NATURE_A_Q);\n    typeNameValue.put(\"r\", NATURE_D_R);\n    typeNameValue.put(\"s\", NATURE_D_S);\n    typeNameValue.put(\"t\", NATURE_D_T);\n    typeNameValue.put(\"u\", NATURE_D_U);\n    typeNameValue.put(\"v\", NATURE_D_V);\n    typeNameValue.put(\"w\", NATURE_D_W);\n    typeNameValue.put(\"x\", NATURE_D_X);\n    typeNameValue.put(\"y\", NATURE_D_Y);\n    typeNameValue.put(\"z\", NATURE_D_Z);\n    typeNameValue.put(\"nr\", NATURE_A_NR);\n    typeNameValue.put(\"ns\", NATURE_A_NS);\n    typeNameValue.put(\"nt\", NATURE_A_NT);\n    typeNameValue.put(\"nx\", NATURE_A_NX);\n    typeNameValue.put(\"nz\", NATURE_A_NZ);\n    typeNameValue.put(\"h\", NATURE_D_H);\n    typeNameValue.put(\"k\", NATURE_D_K);\n    typeNameValue.put(\"un\", NATURE_D_UN);\n}\n\npublic static int getTypeByName(String _sName) {\n    return typeNameValue.get(_sName);\n}\n", "\n\n", "}", "\n迫切希望各位能帮忙解答，谢谢~"]], "Tag": "程序设计"}
