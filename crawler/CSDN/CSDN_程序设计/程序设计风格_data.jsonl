{"Answer": "&lt;p&gt;1、顺势交易&amp;#xff1a;大多数交易系统都是顺势交易系统&amp;#xff0c;也存在一些逆势交易系统。&lt;br /&gt;2、纯粹技术分析性&amp;#xff1a;系统交易方法完全排除任何基本面分析的影响。&lt;br /&gt;3、客观性&amp;#xff1a;程序化交易系统以计算机为决策工具&amp;#xff0c;完全排除了决策主体的主观判断&amp;#xff0c;从而有效解决了交易者的情绪对交易的负面影响这个问题。&lt;br /&gt;4、数量化&amp;#xff1a;完全数量化。&lt;/p&gt;", "Konwledge_Point": "程序设计风格", "Question": ["程序化交易系统的特点是什么？", ["理论上来说程序化交易系统就是一种赢利模式，体现的应该是设计者的操作风格和手法，那程序化交易系统有什么特点？"]], "Tag": "程序设计"}
{"Answer": "产生该问题的根本原因请参考：[RegisterClass和RegisterClassEx有什么区别？](http://blog.csdn.net/testcs_dn/article/details/43672619 \"\")", "Konwledge_Point": "程序设计风格", "Question": ["用vs编写了一个程序，运行时窗口显示不出来，但是这个程序确实在运行，请问哪里出错了呢？", ["#include ", "\nstruct  //定义按钮的风格和显示文本", "\n{", "\n    long style;", "\n    char *text;", "\n}", "\nbutton[] = //定义9类按钮", "\n{", "\n    BS_PUSHBUTTON, \"按键按钮\",", "\n    BS_DEFPUSHBUTTON, \"默认按键按钮\",", "\n    BS_CHECKBOX, \"检查按钮\",", "\n    BS_AUTOCHECKBOX, \"自动检查按钮\",", "\n    BS_GROUPBOX, \"复选框\",", "\n    BS_3STATE, \"检查按钮\",", "\n    BS_AUTO3STATE, \"三状态自动检查按钮\",", "\n    BS_AUTORADIOBUTTON, \"自动圆按钮\",", "\n    BS_RADIOBUTTON, \"圆按钮\",", "\n};", "\n//取得按钮的数目", "\n#define NUM (sizeof button/sizeof button[0]) ", "\n//定义应用程序的名字", "\nstatic char szAppName[] = \"BtnLook\";", "\n//预先声明消息处理、窗口类申请和初始化函数", "\nLRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);", "\nATOM MyRegisterClass(HINSTANCE hInstance);", "\nBOOL InitInstance(HINSTANCE, int);", "\n//函数：WinMain", "\n//作用：主应用函数", "\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)", "\n{", "\n    MSG msg;", "\n    //申请窗口类", "\n    MyRegisterClass(hInstance);", "\n    //应用程序的初始化", "\n    InitInstance(hInstance, iCmdShow);", "\n    while (GetMessage(&msg, NULL, 0, 0))", "\n    {", "\n        TranslateMessage(&msg);", "\n        DispatchMessage(&msg);", "\n    }", "\n    return msg.wParam;", "\n}", "\n//函数：MyRegisterClass", "\n//作用：注册窗口类", "\nATOM MyRegisterClass(HINSTANCE hInstance)", "\n{", "\n    WNDCLASSEX wndclass;", "\n    wndclass.cbSize = sizeof(wndclass);", "\n    wndclass.style = CS_HREDRAW | CS_VREDRAW;", "\n    wndclass.lpfnWndProc = WndProc;", "\n    wndclass.cbClsExtra = 0;", "\n    wndclass.cbWndExtra = 0;", "\n    wndclass.hInstance = hInstance;", "\n    wndclass.hIcon = LoadIcon(NULL, IDI_APPLICATION);", "\n    wndclass.hCursor = LoadCursor(NULL, IDC_ARROW);", "\n    wndclass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);", "\n    wndclass.lpszMenuName = NULL;", "\n    wndclass.lpszClassName = szAppName;", "\n    return RegisterClassEx(&wndclass);", "\n}", "\n//函数：InitInstance", "\n//作用：初始化应用程序", "\nBOOL InitInstance(HINSTANCE hInstance, int nCmdShow)", "\n{", "\n    HWND hwnd;", "\n    hwnd = CreateWindow(szAppName, \"按钮设计\",", "\n        WS_OVERLAPPEDWINDOW,", "\n        CW_USEDEFAULT, CW_USEDEFAULT,", "\n        CW_USEDEFAULT, CW_USEDEFAULT,", "\n        NULL, NULL, hInstance, NULL);", "\n    ShowWindow(hwnd, SW_SHOWNORMAL);", "\n    UpdateWindow(hwnd);", "\n    return TRUE;", "\n}", "\n//函数：WndProc", "\n//作用：消息处理函数", "\nLRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam)", "\n{//窗口上显示提示信息", "\n    static char szTop[] = \"消息 参数wParam 参数lParam\",", "\n        szUnd[] = \"____ ______ ______\",", "\n        szFormat[] = \"%-16s%04X-%04X %04X-%04X\",", "\n        szBuffer[50];", "\n    //定义需要建立的按钮", "\n    static HWND hwndButton[NUM];", "\n    static RECT rect;", "\n    static int cxChar, cyChar;", "\n    HDC hdc;", "\n    PAINTSTRUCT ps;", "\n    int i;", "\n    TEXTMETRIC tm;", "\n    switch (iMsg)", "\n    {", "\n    case WM_CREATE:", "\n        //取得图形设备描述表的句柄", "\n        hdc = GetDC(hwnd);", "\n        SelectObject(hdc, GetStockObject(SYSTEM_FIXED_FONT));", "\n        GetTextMetrics(hdc, &tm);", "\n        cxChar = tm.tmAveCharWidth;", "\n        cyChar = tm.tmHeight + tm.tmExternalLeading;", "\n        ReleaseDC(hwnd, hdc);", "\n        //创建按钮", "\n        for (i = 0; i < NUM; i++)", "\n            hwndButton[i] = CreateWindow(\"button\",", "\n            button[i].text,", "\n            WS_CHILD | WS_VISIBLE | button[i].style,", "\n            cxChar, cyChar * (6 + 2 * i), 22 * cxChar,", "\n            7 * cyChar / 4,", "\n            hwnd,", "\n            (HMENU)i,", "\n            ((LPCREATESTRUCT)lParam)->hInstance,", "\n            NULL);", "\n        return 0;", "\n        //取得文本显示区域的大小", "\n\n", "case WM_SIZE:rect.left = 24 * cxChar;\n    rect.top = 2 * cyChar;\n    rect.right = LOWORD(lParam);\n    rect.bottom = HIWORD(lParam);\n    return 0;\n    //重画文本\n\ncase WM_PAINT:InvalidateRect(hwnd, &rect, TRUE);\n    hdc = BeginPaint(hwnd, &ps);\n    SelectObject(hdc, GetStockObject(SYSTEM_FIXED_FONT));\n    SetBkMode(hdc, TRANSPARENT);\n    //输出文本头\n    TextOut(hdc, 24 * cxChar, cyChar, szTop, sizeof(szTop) - 1);\n    TextOut(hdc, 24 * cxChar, cyChar, szUnd, sizeof(szUnd) - 1);\n    EndPaint(hwnd, &ps);\n    return 0;\n\ncase WM_DRAWITEM:\n\ncase WM_COMMAND:\n    ScrollWindow(hwnd, 0, -cyChar, &rect, &rect);\n    hdc = GetDC(hwnd);\n    SelectObject(hdc, GetStockObject(SYSTEM_FIXED_FONT));\n    //输出新的消息\n    TextOut(hdc, 24 * cxChar,\n        cyChar * (rect.bottom / cyChar - 1),\n        szBuffer, wsprintf(szBuffer,\n        szFormat,\n        iMsg == WM_DRAWITEM ? \"WM_DRAWITEM\" : \"WM_COMMAND\",\n        (int)(wParam), (int)(wParam),\n        HIWORD(lParam), LOWORD(lParam)));\n    //释放图形设备资源\n    ReleaseDC(hwnd, hdc);\n    //重新描绘客户区域\n    ValidateRect(hwnd, &rect);\n    //弹出消息对话框\n    switch (LOWORD(wParam))\n    {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n        MessageBox(hwnd, \"Good\", \"Yes\", MB_OKCANCEL);\n        break;\n        //推出应用程序\n\n\n    }   \ncase WM_DESTROY:\n    PostQuitMessage(0);\n    break;\ndefault:\n    return DefWindowProc(hwnd, iMsg, wParam, lParam);\n\n}   \nreturn 0;\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "去资源下载：http://download.csdn.net/detail/shanshanxiao/1807189", "Konwledge_Point": "程序设计风格", "Question": ["学生考勤管理系统（用C++语言编写  急用）", ["学生考勤管理系统", "\n考勤信息记录了学生的缺课情况，它包括：缺课日期、第几节课、课程名称、学生姓名、缺课类型（迟到、早退、请假及旷课）。试设计一考勤管理系统，使之能提供以下功能： ", "\n1．录入学生的缺课记录； ", "\n2．修改某个学生的缺课记录； ", "\n3．查询某个学生的缺课情况； ", "\n4．统计某段时间内，旷课学生姓名及旷课次数，按旷课次数由多到少排序； ", "\n5．统计某段时间内，有学生旷课的课程及旷课人次，按旷课人次由多到少排序；", "\n6．系统以菜单方式工作。", "\n具体要求如下： ", "\n1、 采取模块化方式进行程序设计，要求程序的功能设计、数据结构设计及整体结构设计合理。学生也可根据自己对题目的理解增加新的功能模块（视情况可另外加分）。 ", "\n2、 系统以菜单界面方式（至少采用文本菜单界面，如能采用图形菜单界面更好）工作，运行界面友好，演示程序以用户和计算机的对话方式进行。 ", "\n3、 程序算法说明清晰，理论分析与计算正确，运行情况良好，实验测试数据无误，容错性强（能对错误输入进行判断控制）。 ", "\n4、 编程风格良好（包括缩进、空行、适当注释、变量名和函数名见名知意，程序容易阅读等）；"]], "Tag": "程序设计"}
{"Answer": "呵呵~不能白写这么多呀~\r\n帮选个最佳答案吧~", "Konwledge_Point": "程序设计风格", "Question": ["\"MVC\" 在次对其迷惑了", ["刚学J2EE企业级应用的时候几乎所有人都谈到MVC那时候学JSP+SERVLET+JAVABEAN的过程，正好符合MVC三层，也自以为了解了", "\n\n", "后来看了《企业应用架构模式》，MF讲解J2EE企业应用分为 表现层-领域曾-数据层，我开始迷惑（姑且认为是V-C-M）吧", "\n\n", "等后来了解了SSH，发现不对劲了，按照MF的讲解，C层用来隔离VIEW层与MODEL层，为VIEW层的请求分配处理单元，并将V层数据封装成MODEL供处理单元处理，那可见在SSH中Struts的JSP为V，ActionServlet为C，FormBean为M，Struts自身已经提供了完整的MVC，那么Spring和Hibernate放在MVC什么位置看待呢？Spring更像一套管理工具集为开发者提供封装好的方法，在MVC中并没有指出有这样类似对应的一层，难道传统的MVC模式并不足以描述整个J2EE的框架，至少很多元素在MVC中找不到对应关系。。。", "\n\n", "而MF说的表现层-领域曾-数据层，仿佛MVC又全部集中在了表现层。。。", "\n[b]问题补充：[/b]", "\n这可这样理解，jsp，struts组成了C和V层 ", "\nHibernate组成了M层 ", "\n\n", "前一句认同，“Hibernate组成了M层 ”欠妥，其实我理解的M层也许就是POJO，Hibernate提供了M层向数据库的映射机制", "\n[b]问题补充：[/b]", "\n其实我认为说FormBean为M也没问题，没人规定非要领域对象才能称为 Model，而一般封装的数据对象就不属于Model吧？", "\n[b]问题补充：[/b]", "\naidiyuxin是说把业务数据的封装、业务的处理过程、对数据库的操作全归为模型层？", "\n\n", "我突然觉得MVC这种描述到M嘎然而止了，没有描述业务处理单元所在的位置，我猜想MVC作为一种软件设计风格被用作构建多种类型的程序，其中包括J2EE，WEB应用，可能MVC在描述其他比如一个窗口程序的时候可能不涉及业务单元、数据库的问题。这也是为什么MVC在描述单一J2EE，WEB类型应用的时候缺乏表达力的原因。而表现层-领域曾-数据层则是MF为J2EE量身定做的。", "\n\n", "另外一个现象就是：JSP+SERVLET时候，人们（包括书本）经常提到MVC，等到了SSH，EJB的时候很少人（书本）提到MVC，取而代之是表现层-领域曾-数据层。。。", "\n[b]问题补充：[/b]", "\n在ROSE建模里有一种划分类的方式“边界类”“实体类”“控制类”，我觉得这和MVC是对应的，ROSE里能引入这三类划分方式，可见M-V-C模式不是WEB应用特有的，相反，是WEB应用觉得使用M-V-C模式更容易构建。MVC是一种软件体系风格，任何软件都可以使用MVC风格构建，但是，一个桌面应用程序说什么也不可能使用表现层-领域曾-数据层构建，那是WEB应用特有的模式，这就是MVC和表现层-领域曾-数据层的区别，然而MVC在更高层次上描述WEB应用显然没有用WEB应用特有模式表现层-领域曾-数据层描述的更准确，《企业应用架构模式》名字也很能指出，这里描述的是企业应用“特有的”架构模式。", "\n[b]问题补充：[/b]", "\n\"个人觉得说这东西是风格有些不妥，他是一种设计模式，不应该数据风格，大家一般说的什么编程风格不是设计模式\"", "\n\n", "阎宏博士在《JAVA与模式》中将模式分为 架构模式-设计模式-代码模式，其中MVC属于架构模式，平常说的工厂什么的属于设计模式，明显MVC不是设计模式，23个设计模式里也没有MVC的赘述。", "\n\n", "另外在林巴斯在SEI写的那本软件体系风格的书中，提到了将软件习题风格分为：分层，黑板，管道过滤器等等风格，凌驾于具体模式之上，MF在《企业应用架构模式》中也提到了J2EE选择了分层风格，而且期待未来某天有人能实现管道风格的企业级应用框架，MVC又是分层风格中最经典的一种分层方式。", "\n\n", "[b]问题补充：[/b]", "\n“同样不明白楼主为什么叫mvc为：表现层-领域曾-数据层 ", "\nmvc这个设计模式兴起的时候领域模型的概念还没有风靡”", "\n其实按照MF的描述，我大概可以想象 表现层就已经实现了完整的MVC，实际上这里的V并不指JSP，只是表现层的MVC中的V是JSP，如果你想开发一个构建，这个构建只给构建使用者提供数据的统一视图，这个试图也可以称为VIEW，这个构建也能实现完整的MVC。", "\n[b]问题补充：[/b]", "\n\"这里要指出下，rose建模和现在楼主所说的mvc不是一回事，不要拿rose的这些东西去理解面向对象语言中的设计模式，两个是不一样的，有一定差别 \"", "\n\n", "在JSP+servlet+javabean时候，我们确实用ROSE的“边界类”“实体类”“控制类”来为WEB应用建模，表述的很清楚。", "\n\n", "[b]问题补充：[/b]", "\n\"狂晕，Hello World 还能实现mvc呢 \"", "\n\n", "你对表现层理解是不是狭隘了,表现层不仅包含这个页面该显示什么,还包含考虑这个页面的连接应该让这个页面跳转到哪个页面,这个完整过程才能是 表现层-领域曾-持久层 中的表现曾", "\n[b]问题补充：[/b]", "\n\"那还分什么层啊？这不又耦合在一起了么？\"", "\n\n", "我认为解藕不可能无限制的解,藕合低到一定程序再解就存在过度设计了,有可能复杂度反而上升,表现层和控制层的藕合肯定是解不掉,这是个下限", "\n[b]问题补充：[/b]", "\n\"咱们将了一周了，交个朋友吧~ \"", "\n好的啊,这个问题就此作罢吧"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大部分比较基础&amp;#xff0c;操作题有点费点时间。&lt;/p&gt;\n\n&lt;p&gt;一、选择题&lt;/p&gt;\n\n&lt;p&gt;1、D&lt;/p&gt;\n\n&lt;p&gt;2、C&lt;/p&gt;\n\n&lt;p&gt;3、B&lt;/p&gt;\n\n&lt;p&gt;4、A&lt;/p&gt;\n\n&lt;p&gt;5、B&lt;/p&gt;\n\n&lt;p&gt;6、C&lt;/p&gt;\n\n&lt;p&gt;7、C&lt;/p&gt;\n\n&lt;p&gt;8、B&lt;/p&gt;\n\n&lt;p&gt;9、A&lt;/p&gt;\n\n&lt;p&gt;10、D&lt;/p&gt;\n\n&lt;p&gt;11、C&lt;/p&gt;\n\n&lt;p&gt;12、A&lt;/p&gt;\n\n&lt;p&gt;13、D&lt;/p&gt;\n\n&lt;p&gt;14、D&lt;/p&gt;\n\n&lt;p&gt;15、B&lt;/p&gt;\n\n&lt;p&gt;二、填空题&lt;/p&gt;\n\n&lt;p&gt;1、[1,2]&lt;/p&gt;\n\n&lt;p&gt;2、[6, 7, 9, 11]&lt;/p&gt;\n\n&lt;p&gt;3、评分、降序&lt;/p&gt;\n\n&lt;p&gt;4、代码如下&amp;#xff0c;按照填空需求填空即可。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;list1&amp;#61;[&amp;#39;张杨华&amp;#39;,&amp;#39;韩冠浩&amp;#39;,&amp;#39;刘斯&amp;#39;,&amp;#39;李弘&amp;#39;,&amp;#39;关申海&amp;#39;,&amp;#39;李晓思&amp;#39;,&amp;#39;李思慧&amp;#39;,&amp;#39;刘潇斯&amp;#39;,&amp;#39;刘斯&amp;#39;]\nlist1[list1.index(&amp;#39;李弘&amp;#39;)]&amp;#61;&amp;#39;李泓&amp;#39;\nlist1.remove(&amp;#39;刘斯&amp;#39;)\nlist1.append(&amp;#39;张瀚&amp;#39;) \nprint(list1)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;5、代码如下&amp;#xff0c;按照填空需求填空即可。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;t_array&amp;#61;[(4,5,6,7),(8,9,10,11),(12,13,14,15),(16,17,18,19)]\nsum&amp;#61;0\nfor arr in t_array:\n    for i in range(4):\n        sum&amp;#43;&amp;#61;arr[i]\nprint(sum)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;三、操作题&lt;/p&gt;\n\n&lt;p&gt;1、代码如下&amp;#xff0c;网上有一模一样的题目&amp;#xff0c;不过代码有点问题&amp;#xff0c;改正如下&amp;#xff0c;思路就是排除法。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import string\ndef str_count(str):\n    count_en &amp;#61; count_dg &amp;#61; count_sp &amp;#61;count_zh &amp;#61; count_pu &amp;#61; 0\n    for s in str:\n        # 统计英文字母个数 \n        if s in string.ascii_letters:\n            count_en &amp;#43;&amp;#61; 1 \n        # 统计数字个数\n        elif s.isdigit(): \n            count_dg &amp;#43;&amp;#61; 1\n        # 统计空格个数 \n        elif s.isspace():\n            count_sp &amp;#43;&amp;#61; 1 \n        # 统计中文个数\n        elif s.isalpha():\n            count_zh &amp;#43;&amp;#61; 1\n        # 剩余就是标点符号 \n        else:\n            count_pu &amp;#43;&amp;#61; 1 \n    print(&amp;#39;英文字符:&amp;#39;, count_en)\n    print(&amp;#39;数字:&amp;#39;, count_dg) \n    print(&amp;#39;空格:&amp;#39;, count_sp) \n    print(&amp;#39;中文:&amp;#39;, count_zh) \n    print(&amp;#39;标点符号:&amp;#39;, count_pu)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2、代码如下&amp;#xff0c;网上有类似的题目&amp;#xff0c;不过这个题目要求更严格&amp;#xff0c;所以for循环中这样写。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import random\nrandom.seed(0x1010)\ns&amp;#61;&amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMOPQRSTUVWXYZ0123456789!&amp;#64;#$%&amp;amp;*-&amp;#34; \nls&amp;#61;[]\nexcludes&amp;#61;&amp;#34;&amp;#34;\n\nwhile len(ls)&amp;lt;20:\n    pwd&amp;#61;&amp;#34;&amp;#34;\n\n    for i in range(3):\n        pwd&amp;#43;&amp;#61;random.choice(s[:26])\n        pwd&amp;#43;&amp;#61;random.choice(s[26:53])\n        pwd&amp;#43;&amp;#61;random.choice(s[53:64])\n        pwd&amp;#43;&amp;#61;random.choice(s[64:len(s)&amp;#43;1])\n        \n    if pwd[0] in excludes:\n        continue\n    else:\n        ls.append(pwd)\n        excludes&amp;#43;&amp;#61;pwd[0]\n\n    with open(&amp;#39;激活码.txt&amp;#39;,&amp;#39;w&amp;#39;) as f:\n        f.write(&amp;#39;\\n&amp;#39;.join(ls))&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "程序设计风格", "Question": ["大佬们，可以帮我做做这张试卷吗。很快考试了。做一道也可以，给个答案就行了，", ["  全国高等学校计算机水平考试II级---《Python 程序设计》考试大纲 (试行)", "\n一、考试目标与要求", "\n考试目标:测试考生系统掌握 Python 基本概念及其编程思想，了解 Python 计算生态，利 用 Python 进行数据处理及解决问题的能力。", "\n考试要求:", "\n1. 熟练掌握 Python 语言基础语法，掌握模块化程序设计思想，了解面向对象基本概念。 2. 熟练掌握 Python 常用标准库及第三方库的使用。", "\n3. 能够阅读和分析 Python 程序，利用 Python 进行简单的数据处理及数据可视化。", "\n二、考试内容", "\n(一)基础知识", "\n【考试要求】", "\n掌握Python中的常量、变量、数据类型、运算符、表达式、内置函数和基本输入输出。 【主要考点】", "\n1.常量与变量", "\n2.基本数据类型 3.运算符与表达式 4.数据类型转换 5.字符串类型及相关函数/方法 6.基本输入输出", "\n7. Python常用内置函数 8.注释", "\n(二)流程控制", "\n【考试要求】 掌握Python程序格式框架及书写风格，掌握顺序、选择、循环结构在Python中的实现方", "\n法，能灵活运用不同的控制结构解决实际问题。 【主要考点】", "\n1.顺序结构", "\n2. 选择结构:单分支、双分支、多分支选择结构，选择结构的嵌套", "\n3. 循环结构:for 循环、while 循环，带有 else 子句的循环，break 与 continue 语句的作", "\n用", "\n4. 程序的异常处理:try ---except", "\n(三)高级数据类型", "\n【考试要求】 掌握Python中列表、元组、字典、集合的使用方法以及应用场合;了解不同数据类型的", "\n     1/7", "\n\n", "  优缺点和适用领域;学会综合应用多种数据类型解决实际问题。 【主要考点】 1.列表:创建、删除、修改、切片、访问、排序;多维列表", "\n2. 元组:创建、删除、切片、访问", "\n3. 字典:创建、删除、添加、修改及访问，有序字典的使用", "\n4. 集合:创建、删除、访问，集合的并、交、差以及对称差等运算 5. 列表、元组、集合的区别及相互转换", "\n(四)模块化程序设计", "\n【考试要求】 了解模块化程序设计思想，掌握分而治之的结构化程序设计方法;掌握函数定义、参数传", "\n递及高级函数的使用;了解变量作用域的含义;掌握匿名函数的定义及使用。 【主要考点】", "\n1. 函数定义与使用", "\n2. 函数参数:默认参数、可变参数、关键字参数", "\n3. 变量作用域:局部变量和全局变量", "\n4. 匿名函数的定义及使用", "\n5. 高级函数(map、reduce、filter)的使用", "\n(五)面向对象程序设计", "\n【考试要求】 了解Python中面向对象程序设计的基本方法，包括类的定义与使用、类的属性、类中的", "\n特殊方法。", "\n【主要考点】", "\n1. 类的定义与使用", "\n2. 类成员访问控制", "\n3. 继承与多态", "\n4. 特殊方法与运算符重载", "\n(六)文件操作", "\n【考试要求】 要求考生掌握文件的基本操作,掌握CSV、Excel文件的读取。", "\n【主要考点】", "\n1. 文件的使用:打开、读写、定位和关闭 2. 一二维数据组织:存储、处理及可视化 3. 读写CSV格式数据文件", "\n4. 读取Excel格式数据文件(pandas库)", "\n(七)模块与库", "\n【考试要求】 了解Python生态系统，掌握Python常用标准库，运用第三方库解决实际问题,包括但不限", "\n于网络爬虫、数据分析、文本处理、数据可视化、机器学习、Web应用开发、网络编程等领域。 【主要考点】", "\n     2/7", "\n\n", "  1. Python常用标准库:random、math、string、OS、time、datetime、urllib.request。 2.第三方库:Matplotlib、pandas、jieba、wordcloud、requests、BeautifulSoup4、XPath、 NumPy、Scrapy。", "\n三、考试方式", "\n机试(考试时间:105 分钟)", "\n考卷题型题量:卷面总分 100。单选题(15 题，30 分)、填空题(5 题，30 分)和操作题", "\n(程序代码挖空题)(2 题，40 分)。", "\n四、考试环境要求", "\nPython 3.7 及以上，可选装 PyScripter、Pycharm、Anaconda、VSCode 等 IDE 编程环境。", "\n五、考试样题", "\n(一)单选题(15 题，30 分) 1、下面__________不是 Python 合法标识符。", "\nA) __name32 B) name32", "\nC) __name32__ D) 32name", "\n2、关于 Python 内存管理，下面__________说法错误。", "\nA) 当 Python 运行时垃圾回收也会启动", "\nB) python 会自己管理内存，对于占用很大内存的对象，并不会马上释放 C) Python 采用了类似 Windows 内核对象一样的方式来对内存进行管理 D) Python 语言，对象的类型和内存都是在运行时确定的", "\n3、在 Python3 中，下列不支持的数字类型是__________。", "\nA) 浮点型 B) 分数 C) 复数 D) 长整型", "\n4、下列不能作为字典的键是__________。 A) 变量", "\nB) 字符 C) 元组 D) 数字", "\n5、关于单引号，双引号，三引号的说法错误的是__________。", "\nA) 单引号和双引号是等效的", "\nB) 单引号，双引号，三引号，如果要换行，需要符号(\\)，不可以直接换行 C) 三引号则可以直接换行，并且可以包含注释", "\nD) 三引号可以包含双引号，而不需要转义", "\n6、在 Python3 中下列__________语句是非法的。", "\n     3/7", "\n\n", "  A) m=(n=a+1) B) a,b=b,a", "\nC) m,n='ab' D) m,n=3,4", "\n7、在 Python3 中，关于模块说法错误的是__________。", "\nA) 模块是对象", "\nB)模块是一个 Python 文件", "\nC) 模块能定义函数和变量，但不能定义类", "\nD) 在不同的模块中可以存在相同名字的函数名和变量名", "\n8、关于变量的作用域说法错误的是__________。", "\nA) 如果一个局部变量和一个全局变量重名，则局部变量会覆盖全局变量 B) Python 变量的作用域不由变量所在源代码中的位置决定", "\nC) 全局变量如果是在函数内部赋值的话，必须经过声明", "\nD) 全局变量在函数内部不经过声明也可以使用", "\n9、以下关于异常处理的描述，正确的是__________。", "\nA) try 语句中有 except 子句，但也可以有 finally 子句", "\nB) Python 中不允许利用 raise 语句由程序主动引发异常 C)引发一个不存在索引的列表元素会引发 NameError 错误 D)Python 中，可以用异常处理捕获程序中的所有错误", "\n  10、以下语句会无限循环下去的是__________。", "\n A) for n in range(1000): time.sleep(5)", "\nC) while False: continue", "\nB) while 1<10: time.sleep(10)", "\nD) while True: break", "\n11、Python 变量命名规则说法错误的是__________。", "\nA) 变量名不能包含空格，但可使用下划线来分隔其中的单词。 B) 不论是类成员变量还是全局变量，均不使用 m 或 g 前缀 C) 变量名只能包含字母、数字和下划线。以字母或数字开头 D) 变量名不应带有类型信息，因为 Python 是动态类型语言", "\n12、关于 Python 的 lambda 函数，以下选项中描述错误的是__________。", "\nA) f = lambda x,y:x+y 执行后，f 的类型为数字类型", "\nB) lambda 函数是指一类无需定义标识符(函数名)的函数或子程序", "\nC) lambda 函数可以接收任意多个参数 (包括可选参数) 并且返回单个表达式的值 D) lambda 的主体是一个表达式，而不是一个代码块", "\n13、以下选项中，不是 Python 语言保留字的是__________。 A) pass", "\nB) continue C) except D) next", "\n14、关于 Python 程序中与“缩进”有关的说法中，以下选项中不正确的是__________。", "\nA) 缩进统一为 4 个空格且强制使用", "\nB) Python 中的每一条语句都有一个缩进级别，并且缩进级别会使用栈的数据结构进行存", "\n储", "\n  4/7", "\n\n", "  C) Python 中的缩进是有语法含义的，它用来表示一个代码块 D) 一条比较长的语句也可以用缩进分成多行", "\n15、关于 Python 循环结构，以下选项中描述错误的是__________。", "\nA) 每个 continue 语句只有能力跳出当前层次的循环", "\nB) continue 语句被用来告诉 Python 跳过当前循环块中的剩余语句，然后继续进行下一轮", "\n循环", "\nC) break 跳出并结束当前整个循环，执行循环后的语句", "\nD) while 循环不会迭代 list 或 tuple 的元素，而是根据表达式判断循环是否结束", "\n(二)填空题(5 题，30 分)", "\n1、表达式 [x for x in [1,2,3,4,5] if x<3]的值为 1", "\n2、设列表对象 aList 的值为[3, 4, 5, 6, 7, 9, 11, 13, 15, 17]，那么 aList[3:7]得到的值是 2 3、从猫眼电影热门榜单上爬取电影信息(包括电影名、主演、上映时间、评分)，结果保存 形式为 item= [('少年的你','主演:周冬雨','上映时间:06-27',9.5),┈],那么使用 item.sort(key=lambda x:x[3],reverse=True)语句的作用是对 3 (电影名/主演/上映时间/评 分)进行 4 (升序/降序)排列", "\n4、list1 中存放李小姐结婚请帖名单，她发现把“李泓”写成了“李弘”，少写“张瀚”， “刘 斯”名字有重复，得把第一删除，请补全横线处的代码，请你帮她更正过来。", "\nlist1=['张杨华','韩冠浩','刘斯','李弘','关申海','李晓思','李思慧','刘潇斯','刘斯'] 5 ('李泓')", "\n6 ('刘斯')", "\n7 ('张瀚') print(list1)", "\n5、t_array 中存放 4╳4 的二维数组，下列程序是计算该二维数组各元素的和，请完善下列代 码。", "\nt_array=[(4,5,6,7),(8,9,10,11),(12,13,14,15),(16,17,18,19)] sum= 8", "\nfor arr in t_array:", "\nfor i in 9 : 10", "\nprint(sum)", "\n(三)操作题(程序代码挖空题)(2 题，40 分)", "\n                  5/7", "\n\n", "  1、在考试操作试题文件夹里，打开“gdpython1.py”文件，按下面的要求完成操作: 从键盘上输入一段文字，调用下列函数，能统计出该段文字的中文个数、英文个数、数", "\n字个数和标点符号的个数。请完善代码。", "\nimport string", "\ndef str_count(str):", "\ncount_en = count_dg = count_sp =count_zh = count_pu = 0 for s in str:", "\n# 统计英文字母个数 if s in string. 1 :", "\ncount_en += 1 # 统计数字个数", "\nelifs. 2 : count_dg += 1", "\n# 统计中文个数 elifs. 3 :", "\ncount_zh += 1 # 统计空格个数", "\nelif s. 4 : count_sp += 1", "\n# 统计标点符号个数 else:", "\ncount_pu += 1 print('英文字符:', count_en)", "\nprint('数字:', count_dg) print('空格:', count_sp) print('中文:', count_zh) print('标点符号:', count_pu)", "\n2、在考试操作试题文件夹里，打开“gdpython2.py”文件，按下面的要求完善列代码，生产 随机激活码。具体要求如下:", "\n(1) 使用random库，采用0x1011作为随机种子。", "\n(2) 每次产生20条激活码，且首字不能一样。每条激活码单独一行。", "\n(3) 必须包含大写字母、小写字母和数字，必需包括“!@#$%&*-”8个特殊符号中的某", "\n一个。", "\n(4) 每次激活码产生的长度为12位。", "\n(5) 不能重复。", "\n(6) 程序所产生的激活码保存在“激活码.txt”文件中。", "\nimport random", "\nrandom. 1 s=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMOPQRSTUVWXYZ0123456789!@#$%&*-\" ls=[]", "\nexcludes=\"\"", "\nwhile 2 :", "\n          pwd=\"\"", "\n 6/7", "\n\n", "  for i in 3 : 4", "\nif pwd[0] in excludes:", "\n5", "\nelse:", "\nls. 6", "\nexcludes+= 7 with open('激活码.txt','w') as f:", "\nf.write('\\n'. 8 )", "\n           7/7"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没啥好说的&amp;#xff0c;多刷面试题&amp;#xff0c;简历看下教程做的好一点&amp;#xff0c;然后一年后跳槽。&lt;/p&gt;", "Konwledge_Point": "程序设计风格", "Question": ["我只想知道自己到底值多少钱？", ["今年刚毕业，能力嘛，说不上多好，java正常写代码没问题。", "spring玩的很顺手，后端平常问题写起来完全没问题。", "sql方面除了一些特别高深的以外，从表结构到数据都能写，sql优化也懂。", "编程风格还算可以，优化还是很注重的。", "jdk8那些特性都能用，也用的不错，随手写。", "常用设计模式，编程原则，aop，ioc，监听器也都会用。", "idea，postman，xshell，git这些相关软件用的也都没问题。", "linux命令用的也还行，操作数据库，执行个程序，修改个文件，写个简单的启动脚本也都能弄弄。", "\n", "剩下的用的不怎么好的能力就不说了，什么js，html，css，maven，画原型图，数据库建模。", "基本上日常工作开发的不会有问题。除业务外一般不会有问题。", "我就想知道我这个能力到底值多少钱？", "在北京。", "跟我差不多的人工资几乎都比我高。", "前几天有一个啥也不是的人入职了，我一打听，工资还比我高。那代码写的跟狗屎一样都比我工资高。", "我就想知道我到底值多少？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;缺少链接一个lib&amp;#xff0c;建议新手使用visual studio就没那么多问题了&lt;/p&gt;", "Konwledge_Point": "程序设计风格", "Question": ["C++报错:ld returned 1 exit status", ["######WinMain报错：C:\\Users*****\\Desktop\\新建文件夹\\c++\\collect2.exe    [Error] ld returned 1 exit status", "\n", "当我使用DevC++编译器编译代码时报了如上错误。", "\n", "代码：", "\n", "\n", "#include \"windows.h\"", "\n\n\n", "//", "6", "、处理消息（窗口过程）\n    ", "//", "CALLBACK代表__stdcall参数传递顺序  从右往左依次入栈，并且在函数返回前自动清空堆栈内容\nLRESULT CALLBACK WindowProc(\n    HWND hwnd,              ", "//", "消息所属窗口句柄\n    UINT uMsg,               ", "//", "具体消息名称，WM_XXX\n    WPARAM wparam,           ", "//", "键盘附加消息\n    LPARAM lparam                ", "//", "鼠标附加消息\n)\n{\n\n    switch (uMsg)\n    {\n    case WM_CLOSE:\n        DestroyWindow(hwnd);                ", "//", "触发WM_DESTROY\n        ", "break", ";\n    case WM_DESTROY:\n        PostQuitMessage(", "0", ");                  ", "//", "发送退出消息\n        ", "break", ";\n    case WM_LBUTTONDOWN:                      ", "//", "鼠标左键按下消息\n    {\n        int xPos;\n        int yPos;\n        xPos = LOWORD(lparam);\n        yPos = HIWORD(lparam);\n        ", "//", "打印操作，通常同MessageBox\n        TCHAR buf[", "1024", "];\n        wsprintf(buf, TEXT(", "\"x=%d,y=%d\"", "), xPos, yPos);\n        ", "//", "所属窗口、显示内容、标题内容、关联按键类型\n        MessageBox(hwnd, buf, TEXT(", "\"鼠标按下\"", "), MB_OK);\n        ", "break", ";\n    }\n    case WM_KEYDOWN:       ", "//", "键盘消息\n        MessageBox(hwnd, TEXT(", "\"键盘按下\"", "), TEXT(", "\"键盘消息\"", "), MB_OK);\n        ", "break", ";\n    case WM_PAINT:     ", "//", "绘图\n    {\n        PAINTSTRUCT ps;             ", "//", "绘图结构体\n        HDC hdc = BeginPaint(hwnd, &ps);\n        ", "//", "绘制文字\n        TextOut(hdc, ", "100", ", ", "100", ", TEXT(", "\"helloworld\"", "), strlen(", "\"helloworld\"", "));\n        EndPaint(hwnd, &ps);\n        ", "break", ";\n    }\n    default:\n        ", "break", ";\n    }\n    ", "//", "默认方式处理\n    return DefWindowProc(hwnd, uMsg, wparam, lparam);\n}\n\n\nint WINAPI WinMain(\n    HINSTANCE hInstance,           ", "//", "应用程序实例句柄\n    HINSTANCE hPrevInstance,       ", "//", "前一个应用程序实例句柄，在win32环境下基本值NULL，不起作用\n    LPSTR lpCmdLine,             ", "//", "char *argv[]  命令行参数数组\n    int nShowCmd)                ", "//", "窗口显示命令，最大化最小化\n{\n    ", "//", "实现底层窗口  ", "6", "步骤\n    ", "//", "1", "、设计窗口类\n    ", "//", "2", "、注册窗口类\n    ", "//", "3", "、创建窗口类\n    ", "//", "4", "、显示和更新窗口\n    ", "//", "5", "、通过循环取消息\n    ", "//", "6", "、处理消息（窗口过程）\n    \n\n    \n\n\n\n    ", "//", "1", "、设计窗口\n    WNDCLASS wc;\n    wc.cbClsExtra = ", "0", ";", "//", "类额外的内存，通常为零\n    wc.cbWndExtra = ", "0", ";", "//", "窗口额外的内存，通常为零\n    wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);", "//", "设置背景\n    wc.hCursor = LoadCursor(NULL, IDC_HAND);", "//", "设置光标，如果第一个参数为NULL，代表使用系统提供的默认光标\n    wc.hIcon = LoadIcon(NULL, IDI_WARNING);\n    wc.hInstance = hInstance;", "//", "当前实例句柄，WinMain函数中形参即可\n    wc.lpfnWndProc = WindowProc;", "//", "窗口过程函数，回调函数，名称可以随便起\n    wc.lpszClassName = TEXT(", "\"WINDOW\"", ");", "//", "指定窗口类名\n    wc.lpszMenuName = NULL;", "//", "菜单名，没有填NULL\n    wc.style = ", "0", ";", "//", "0", "代表默认风格\n\n    ", "//", "2", "、注册窗口类\n    RegisterClass(&wc);\n\n    ", "//", "3", "、创建窗口\n    /*\n    lpClassName,    ", "//", "类名\n    lpWindowName,    ", "//", "窗口名\n    dwStyle,        ", "//", "显示风格  WS_OVERLAPPEDWINDOW\n    x, y,\\    ", "//", "创建窗口的起始坐标  CW_USEDEFAULT\n    nWidth,nHeight,    ", "//", "创建窗口默认宽高\n    hWndParent,        ", "//", "父窗口，NULL\n    hMenu,       菜单  NULL\n    hInstance,    实例句柄，hInstance\n    lpParam       其他参数   NULL\n    */\n    HWND hwnd = CreateWindow(wc.lpszClassName, TEXT(", "\"TEXT WINDOW\"", "), WS_OVERLAPPEDWINDOW,\n        CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT ,\n        NULL, NULL, hInstance, NULL);\n    ", "//", "4", "、显示和更新\n    ShowWindow(hwnd, SW_SHOWNORMAL);\n    UpdateWindow(hwnd);\n    ", "//", "5", "、通过循环取消息\n\n    /*\n    HWND        hwnd;                  ", "//", "主窗口\n    UINT        message;               ", "//", "消息名称   WM_XXXXX（WINDOW MESSAGE)\n    WPARAM      wParam;                ", "//", "附加消息    键盘\n    LPARAM      lParam;                ", "//", "附加消息    鼠标左右键\n    DWORD       time;                  ", "//", "消息产生时间，\n    POINT       pt;                    ", "//", "附加消息   鼠标   x，y坐标\n    */\n    MSG msg;\n    ", "while", "(", "1", ")\n    {\n        /*\n        参数\n        _Out_ LPMSG lpMsg,               消息结构体\n        _In_opt_ HWND hWnd,            NULL  捕获所有窗口消息\n        _In_ UINT wMsgFilterMin,            过滤最小消息数量\n        _In_ UINT wMsgFilterMax             过滤最大消息数量       都写", "0", "代表捕获所有消息\n        */\n        ", "if", " (GetMessage(&msg, NULL,", "0", ",", "0", ") == FALSE)\n        {\n            ", "break", ";\n        }\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n    return ", "0", ";\n}\n\n", "\n", "结果：", "\n", "C:", "\\Users\\", "86158", "\\AppData\\Local\\Temp\\ccZgjR6P.o    zab.cpp:(.", "text", "+", "0", "x16f): undefined reference ", "to", " `__imp_TextOutA", "'", "\n", "C:", "\\Users\\", "86158", "\\AppData\\Local\\Temp\\ccZgjR6P.o    zab.cpp:(.", "text", "+", "0", "x1f3): undefined reference ", "to", " `__imp_GetStockObject", "'", "\n", "C:", "\\Users\\", "86158", "\\Desktop\\新建文件夹\\c++\\collect2.exe    [", "Error", "] ld returned ", "1", " ", "exit", " status\n\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试过加一个空的main但没有效果", "\n", "我想要达到的结果", "\n", "不知道如何能成功创建一个新的窗口并不报错。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;java中局部变量需要初始化一下&amp;#xff0c;记得first_day 就是一个局部变量&amp;#xff0c;所以你在声明的时候可以给他赋默认值0之类的。&lt;br /&gt;至于代码风格&amp;#xff0c;建议看下阿里巴巴java开发规约&amp;#xff0c;你这个变量命名习惯确实是c的&amp;#xff0c;java一般都是驼峰式&lt;/p&gt;", "Konwledge_Point": "程序设计风格", "Question": ["关于Java局部变量报错的问题", ["\n", "import", " java.util.Scanner;\n\n", "public", " ", "class", " MyCalendar {\n    ", "public", " static ", "void", " main(String[] args) {\n\n        Scanner scanner = ", "new", " Scanner(", "System", ".", "in", ");\n        ", "System", ".", "out", ".println(\"如果您想查看某年的日历，请输入1\");\n        ", "System", ".", "out", ".println(\"如果您想查看某天的星期，请输入2\");\n\n        ", "int", " user_input = scanner.nextInt();\n\n        ", "if", " (user_input == ", "1", ") {\n            ", "int", " year = scanner.nextInt();\n            //已知", "2023", "年一月一日是星期日\n            ", "int", " ", "temp", ";\n            ", "int", " first_day;\n\n            ", "if", " (year < ", "2023", ") {\n                ", "for", " (", "int", " i = year; i < ", "2023", "; i++) {\n                    ", "int", " days = ", "0", ";\n                    ", "if", " (i % ", "4", " == ", "0", " && i % ", "100", " != ", "0", " || i % ", "400", " == ", "0", ") {\n                        days += ", "366", ";\n                    } ", "else", " {\n                        days += ", "365", ";\n                    }\n                    ", "temp", " = days % ", "7", ";\n                    first_day = ", "7", " - ", "temp", ";  //每年的", "1", "月", "1", "日是星期几\n                    ", "if", " (", "temp", " == ", "0", ") {\n                        first_day = ", "0", ";  //将星期日记作", "0", "\n                    }\n                }\n            } ", "else", " ", "if", " (year == ", "2023", ") {\n                first_day = ", "0", ";  //", "2023", "一月一日是星期日\n            } ", "else", " {\n                ", "int", " days = ", "0", ";\n                ", "for", " (", "int", " i = ", "2023", "; i < year; i++) {\n                    ", "if", " (i % ", "4", " == ", "0", " && i % ", "100", " != ", "0", " || i % ", "400", " == ", "0", ") {\n                        days += ", "366", ";\n                    } ", "else", " {\n                        days += ", "365", ";\n                    }\n                    ", "temp", " = days % ", "7", ";\n                    first_day = ", "temp", ";\n                }\n            }\n\n            ", "int", " day = ", "1", ";\n            ", "int", "[] a;\n            ", "if", " (year % ", "4", " == ", "0", " && year % ", "100", " != ", "0", " || year % ", "400", " ==", "0", ") {\n                a = ", "new", " ", "int", "[]{", "31", ", ", "29", ", ", "31", ", ", "30", ", ", "31", ", ", "30", ", ", "31", ", ", "31", ", ", "30", ", ", "31", ", ", "30", ", ", "31", "};\n            } ", "else", " {\n                a = ", "new", " ", "int", "[]{", "31", ", ", "28", ", ", "31", ", ", "30", ", ", "31", ", ", "30", ", ", "31", ", ", "31", ", ", "30", ", ", "31", ", ", "30", ", ", "31", "};\n            }\n            \n            ", "int", " m;\n            ", "for", " (m = ", "1", "; m <= ", "12", "; m++) {\n                ", "System", ".", "out", ".println(\"Sun Mon Tue Wed Thu Fri Sat\");\n                ", "for", " (", "int", " i = ", "0", "; day < a[m]; day++) {\n                    ", "for", " (", "int", " j = ", "0", "; j < first_day; j++) {\n\n                    }\n                }\n            }\n\n        } ", "else", " ", "if", " (user_input == ", "2", ") {\n            \n        } ", "else", " {\n            ", "System", ".", "out", ".println(\"请输入有效的数字！\");\n        }\n\n    }\n}\n", "\n", "编写一个交互系统，用户输入年份即可查看当年的日历，输入日期即可查看星期。", "\n", "这个程序尚未完成，正在编写第一部分，我定义了一个first_day用来表示输入年份的1月1日是星期几，first_day是局部变量，但我在所有的if else下都对其赋值了，但是在后面的循环里报错：first_day可能尚未初始化，这是怎么回事？要怎么修改？望指点", "\n", "本人大一下学期初学Java，上学期学的C，有人说我代码风格有点乱，明显的C程序编程习惯，请问大家是怎么规划/设计自己的代码的？"]], "Tag": "程序设计"}
