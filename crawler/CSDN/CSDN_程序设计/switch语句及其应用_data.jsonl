{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int N;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(scanf(&amp;#34;%d&amp;#34;,&amp;amp;N)!&amp;#61;EOF)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(N&amp;lt;0||N&amp;gt;100)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            exit(0);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        switch(N/10)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 10:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 9:printf(&amp;#34;优\\n&amp;#34;);break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 8:printf(&amp;#34;良\\n&amp;#34;);break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 7:printf(&amp;#34;中\\n&amp;#34;);break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            case 6:printf(&amp;#34;及格\\n&amp;#34;);break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            default:printf(&amp;#34;不及格\\n&amp;#34;);break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言用Switch语句判断学生成绩等级", ["怎么用Switch语句判断学生成绩等级65分以上及格，75-85中，85-95良，95-100优，求求了，卡了太久了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch后面没有分号&amp;#xff0c;而且&amp;#xff0c;default中间必须写个分号&amp;#xff0c;可以没有语句&amp;#xff0c;但是需要分号&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/018101658346198.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["vs2022,switch语句错误", ["\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "float", " fenshu;\n    ", "printf", "(", "\"请输入分数：\"", ");\n    ", "scanf_s", "(", "\"%f\"", ",&fenshu);\n    ", "switch", " ((", "int", ")(fenshu / ", "10", "));\n    {\n           ", "case", " ", "10", ":\n            ", "case", " ", "9", ":", "printf", "(", "\"该生的等级为A、n\"", "); ", "break", ";\n           ", "default", ":\n\n    }\n}\n", "\n", "说case标签只能在开关内使用", "break只能在开关或循环内使用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 后的键是唯一的&amp;#xff0c;你只能在前面处理一下lirun&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;if(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;lirun&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\nelse if(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;lirun&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\nelse if(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;lirun&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\nelse if(&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;lirun&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\nelse if(&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;lirun&amp;lt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n\nswitch(key)\n//....\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++ Switch语句", ["范围的Switch语句不会用，麻烦大家教一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;1、效果如下&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/192895423746194.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/079146423746151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2、问题原因&lt;/strong&gt;&lt;br /&gt;代码缩进问题&amp;#xff0c;以及printf输出放错位置&amp;#xff0c;同时printf也不应该放到break后面&amp;#xff0c;因为break表示结束&amp;#xff0c;接在break后面代码不会执行&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;3、调整后代码&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ \n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; grade;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入分数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;score);\n    score&amp;#61;score/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(score){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n            grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n            grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n            grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n成绩等级是%c\\n\\n&amp;#34;&lt;/span&gt;,grade);\n            \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch语句为什么不输出", ["为什么这个输入成绩后不输出了这是什么问题请求解答", "就是就是手机上睡觉睡觉就升级升级十几集手机", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以的&amp;#xff0c;但尽量不要写在一行&amp;#xff0c;不要漏了break就行&lt;br /&gt;case 1: 和 beak; 之间多空几行&amp;#xff0c;里面写什么程序块都可以的&lt;br /&gt;例&amp;#xff1a;&lt;br /&gt;case 1:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for (xx){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;       ...&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    break;&lt;/span&gt;&lt;br /&gt;case 2:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for (xx){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;       ...&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    break;&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言中switch语句内case后的语句序列可以是复合语句吗，比如for语句之类的", ["\n", "这是我出现的问题，warning翻译过来是：格式字符串在此参数之前结束，我不清楚是哪里的问题，自己觉得是语句序列的问题，请各位大哥为我解惑"]], "Tag": "程序设计"}
{"Answer": "因为你是直接设置了值为 3 ，应该这样修改一下：\r\n\r\n```\r\nScanner scanner = new Scanner(System.in);\r\n\t\tint mingzi = scanner.nextInt();\r\n\t\tswitch (mingzi) {\r\n\t\t\r\n\t\t}//后面的不变，前面用一个 Scanner 对象接收用户输入的 int 值。\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["Java里switch语句没有报错，但是无法运行程序", ["1.小弟写了个switch语句，点击run没有问题，但是无法在程序框内输入文字", "\n\n", "package Student;", "\npublic class Main { ", "\n    public  static void main (String[] args) {  ", "\n\n", "System.out.println(\"----------请选择您想要查看的学生名单----------\");\nSystem.out.println(\"1:硕士生，2：本科生。\");\n    int mingzi =3 ;\n    switch (mingzi) {       \n    case 1:     \n    System.out.println(\"硕士生姓名：\");\n    System.out.println(\"硕士生姓名：\");\n    System.out.println(\"通过了CET6，发表了1篇文章，是优秀的\");\n    System.out.println(\"没通过了CET6，发表了0篇文章，不是优秀的\");\n    break;\n    case 2:\n    System.out.println(\"本科生姓名：\");\n    System.out.println(\"本科生姓名：\");\n    System.out.println(\"本科生姓名：\");\n    System.out.println(\"通过了CET4，上学年综合测评成绩是90，是优秀的\");\n    System.out.println(\"没通过了CET4，上学年综合测评成绩是47，不是优秀的\");\n    System.out.println(\"通过了CET4，上学年综合测评成绩是86，是优秀的\");      \n    break;\n    default:\n    System.out.println(\"感谢您的使用\");\n    break;\n}\n", "\n\n", "}", "\n}", "\n\n", "\n", "\n就是在这个输入框内就是无法打字....", "\n求问是哪里错了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (socre/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        grade &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        grade &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        grade &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["if语句转换switch语句", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为grade是char类型&lt;br /&gt;case后面的值加上单引号。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;/span&gt;()\n{\nchar grade,A,B,C,D,E;\ngrade&amp;#61;getchar();\nA&amp;#61;10,B&amp;#61;9,C&amp;#61;8,D&amp;#61;7,E&amp;#61;6;\nswitch(grade){\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;10&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;90&amp;#xff5e;100\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;80&amp;#xff5e;89\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;70&amp;#xff5e;79\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;60&amp;#xff5e;69\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#xff5e;59&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n}\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言怎么使用switch-case语句，输入等级，输出等级对应分数？", ["我尝试给A,B,C赋值，但好像是我太天真了。。", "#include <stdio.h>", "int main()", "{", "char grade,A,B,C,D,E;", "grade=getchar();", "A=10,B=9,C=8,D=7,E=6;", "switch(grade){", "case 10:", "printf(\"90～100\\n\");", "break;", "case 9:", " printf(\"80～89\\n\");", "break;", "case 8:", " printf(\"70～79\\n\");", "break;", "case 7:", " printf(\"60～69\\n\");", "break;", "case 6:", " printf(\"0～59\");", "break;", "}", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "```\r\n//char类型在c++里存的是ascii码，是int型，能直接用+1来获取下一个数\r\n #include &lt;stdio.h&gt;\r\n\r\nvoid main()\r\n{\r\n\tchar ch = getchar();\t//读字符\r\n\r\n\tif (ch &gt;= 'A'&amp;&amp;ch &lt;= 'Z')\t//A-Z\r\n\t{\r\n\t\tch = (ch - 'A' + 1) % 26 + 'A';\t\t//ch-'A'代表这个数距离字母A的偏移量；+1代表字母+1；%26代表26个字母循环，也就是Z+1=A；最后计算出的偏移值+A就是实际的值\r\n\t\tprintf(\"%c\\n\", ch);\r\n\t}\r\n\telse if (ch &gt;= 'a'&amp;&amp;ch &lt;= 'z')\t//a-z\r\n\t{\r\n\t\tch = (ch - 'a' + 1) % 26 + 'a';\t\t//同理\r\n\t\tprintf(\"%c\\n\", ch);\r\n\t}\r\n\telse    //其它\r\n\t{\r\n\t\tprintf(\"输入的字符不是字母\\n\");\r\n\t}\r\n}\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["关于if语句和switch语句  不知道怎么打  麻烦大家解一下了，万分感激!", ["#include ", "\nvoid main()", "\n  double a;", "\n    printf(\"%f\",a);", "\n    scanf(\"%f\",&a);", "\n    switch(a)", "\n    {", "\n        case 'a':printf(\"%f\",a);", "\n                 break;", "\n\n", "    default:printf(\"输入的字符不是字母\\n\");\n}\n", "\n\n", "}", "\n显示错误，不知道怎么打下去了  后面还有但是不知道怎么打了，求解！", "\n题目如下： 输入一个字符，判断字符必须为字母，为其它字符则输出“输入字符不是字母”", "\n        然后输入的字符改为当前字符的下一个字符，例:c改为d,Z改为A。注意大小写不能改变。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;return 0;就是退出 main()主函数&lt;br /&gt;当switch (decade) 中 decade等于1时执行case 1:分支中switch (unit) {.......}后遇到return 0;就退出  main()主函数了,后面的printf(&amp;#34;-&amp;#34;);就不执行了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中第二个switch语句后面为什么要加return 0 ？作用是什么", ["#include<stdio.h>", "int main()", "{", "    int num, unit, decade;", "    printf(\"Enter a two-digit number:\");", "    scanf_s(\"%d\", &num);", "    printf(\"You entered the number \");", "    decade = num / 10;", "    unit = num % 10;", "    switch (decade) {", "    case 9:printf(\"ninety\"); break;", "    case 8:printf(\"eighty\"); break;", "    case 7:printf(\"seventy\"); break;", "    case 6:printf(\"sixty\"); break;", "    case 5:printf(\"fifty\"); break;", "    case 4:printf(\"forty\"); break;", "    case 3:printf(\"thirty\"); break;", "    case 2:printf(\"twenty\"); break;", "    case 1:", "        switch (unit) {", "        case 9:printf(\"nineteen\"); break;", "        case 8:printf(\"eighteen\"); break;", "        case 7:printf(\"seventeen\"); break;", "        case 6:printf(\"sixteen\"); break;", "        case 5:printf(\"fifteen\"); break;", "        case 4:printf(\"fourteen\"); break;", "        case 3:printf(\"thirteen\"); break;", "        case 2:printf(\"twelve\"); break;", "        case 1:printf(\"eleven\"); break;", "        }", "        return 0;//为什么要加return 0?", "    }", "    printf(\"-\");", "    switch (unit) {", "    case 9:printf(\"nine\"); break;", "    case 8:printf(\"eight\"); break;", "    case 7:printf(\"seven\"); break;", "    case 6:printf(\"six\"); break;", "    case 5:printf(\"five\"); break;", "    case 4:printf(\"four\"); break;", "    case 3:printf(\"three\"); break;", "    case 2:printf(\"two\"); break;", "    case 1:printf(\"one\"); break;", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case &amp;#39;0&amp;#39;:&lt;br /&gt;不是字符型的嘛&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch case语句无法正常执行", ["#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<easyx.h>", "\n", "#", "include", " ", "<conio.h>", "\n", "#", "include", " ", "<time.h>", "\n", "#", "include", " ", "<graphics.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", "<mmsystem.h>", "\n", "#", "include", "<math.h>", "\n", "#", "include", " ", "<graphics.h>", "\n", "#", "include", " ", "<conio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "// 声明需要使用的函数", "\n", "void", " ", "carstart", "(", "int", " x, ", "int", " y, ", "int", " z)", ";\n", "void", " ", "drawbus", "()", ";\n", "void", " ", "init", "()", ";\n\n", "// 定义全局变量", "\nIMAGE img;\n", "// 初始化函数，初始化窗口大小，获取所画图片", "\n", "void", " ", "init", "()", "\n", "{\n    ", "// 初始化窗口大小", "\n    ", "initgraph", "(", "600", ", ", "600", ");\n\n    ", "// 等待按键按下", "\n    _getch();\n\n    ", "cleardevice", "();                        ", "// 清除上面的文字进入运行效果画面", "\n    ", "drawbus", "();                            ", "// 调用绘图函数，绘制 BUS", "\n    ", "getimage", "(&img, ", "80", ", ", "40", ", ", "180", ", ", "90", ");    ", "// 获取 BUS 图片位置，保存在 img 变量中", "\n}\n\n\n", "//", "\n", "// 车辆行驶程序，通过 putimge 函数，改变移动的像素来达到图片移动", "\n", "void", " ", "carstart", "(", "int", " x, ", "int", " y, ", "int", " z)", "\n", "{\n    ", "cleardevice", "();\n    ", "putimage", "(x, ", "40", ", &img);\n    ", "setlinestyle", "(PS_SOLID, ", "10", ");   ", "//设置画线的大小", "\n    ", "line", "(", "0", ", ", "135", ", ", "600", ", ", "135", ");\n    ", "putimage", "(y, ", "220", ", &img);\n    ", "line", "(", "0", ", ", "315", ", ", "600", ", ", "315", ");\n    ", "putimage", "(z, ", "380", ", &img);\n    ", "line", "(", "0", ", ", "475", ", ", "600", ", ", "475", ");\n}\n\n\n", "//", "\n", "// 绘制 BUS 函数，通过画一些线条，组合它们的位置，组合成一辆小车", "\n", "void", " ", "drawbus", "()", "\n", "{\n    ", "setcolor", "(RED);\n    ", "setfillstyle", "(BLUE);\n\n    ", "fillcircle", "(", "120", ", ", "120", ", ", "10", ");         ", "// 画车的轮胎", "\n    ", "fillcircle", "(", "200", ", ", "120", ", ", "10", ");         ", "// 画车的轮胎", "\n    ", "line", "(", "80", ", ", "120", ", ", "110", ", ", "120", ");        ", "// 画车的底部车板", "\n    ", "line", "(", "80", ", ", "40", ", ", "80", ", ", "120", ");         ", "// 画车的四周车板", "\n    ", "line", "(", "130", ", ", "120", ", ", "190", ", ", "120", ");        ", "// 画车的底部车板", "\n    ", "line", "(", "210", ", ", "120", ", ", "250", ", ", "120", ");        ", "// 画车的底部车板", "\n    ", "line", "(", "250", ", ", "40", ", ", "250", ", ", "120", ");         ", "// 画车的四周车板", "\n    ", "line", "(", "80", ", ", "40", ", ", "250", ", ", "40", ");        ", "// 画车的顶部车板", "\n\n    ", "// 画车窗", "\n    ", "for", " (", "int", " x = ", "90", ", y = ", "100", "; x < ", "190", " && y < ", "190", "; x += ", "15", ", y += ", "15", ")\n    {\n        ", "rectangle", "(x, ", "60", ", y, ", "70", ");\n    }\n\n    ", "// 画车门", "\n    ", "rectangle", "(", "220", ", ", "60", ", ", "240", ", ", "120", ");\n    ", "line", "(", "230", ", ", "60", ", ", "230", ", ", "120", ");\n    ", "circle", "(", "230", ", ", "90", ", ", "5", ");\n}\n\n\n", "void", " ", "fun", "()", "\n", "{\n    ", "init", "();\n    ", "int", " x = ", "0", ", y = ", "0", ", z = ", "0", ";\n    ", "BeginBatchDraw", "();\n\n    ", "while", " (!_kbhit())\n    {\n        x += ", "2", ";\n        y++;\n        z += ", "3", ";\n        ", "if", " (x > ", "600", ")    x = ", "-200", ";\n        ", "if", " (y > ", "600", ")    y = ", "-200", ";\n        ", "if", " (z > ", "600", ")    z = ", "-200", ";\n\n        ", "carstart", "(x, y, z);\n        ", "FlushBatchDraw", "();\n        ", "Sleep", "(", "5", ");\n    }\n\n    ", "EndBatchDraw", "();\n    ", "closegraph", "();\n}\n", "char", " ", "showMainMenu", "()", " ", "{\n    ", "char", " inputChar;\n    ", "//清屏", "\n    ", "system", "(", "\"cls\"", ");\n    ", "//获取输入", "\n    inputChar = _getch();\n    ", "return", " inputChar;\n}\n", "void", " ", "right", "()", " ", "{\n    ", "printf", "(", "\"1\"", ");\n}\n", "int", " ", "main", "()", "{\n    ", "char", " inputChar;\n        inputChar = ", "tolower", "(", "showMainMenu", "());\n         ", "switch", " (inputChar) {\n        ", "case", " ", "0", ":\n        ", "right", "();\n       ", "default", ":\n         ", "fun", "();\n}}\n\n\n\n", "\n", "为什么在输入0后无法正常的进入right函数printf“1\",请问怎么进行修改，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    float a,b;\n    char op,c;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please enter the expression:\\n&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f%1s%f&amp;#34;&lt;/span&gt;, &amp;amp;a,&amp;amp;op,&amp;amp;b);\n        switch (op)\n        {\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#43; %f &amp;#61; %f\\n&amp;#34;&lt;/span&gt;,a,b,a&amp;#43;b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f - %f &amp;#61; %f\\n&amp;#34;&lt;/span&gt;,a,b,a-b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f * %f &amp;#61; %f\\n&amp;#34;&lt;/span&gt;,a,b,a*b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Division by zero!\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f / %f &amp;#61; %f\\n&amp;#34;&lt;/span&gt;,a,b,a/b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n        default:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Unknown operator!\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Do you want to continue(Y/N or y/n)?&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%1s&amp;#34;&lt;/span&gt;, &amp;amp;c);\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句编程设计一个简单的计算器程序", ["(用switch语句编程设计一个简单的计算器程序，要求根据用户从键盘输入的表达式： 操作数1 运算符op 操作数2 计算表达式的值，指定的算术运算符为加（ ）、减（-）、乘（*）、除（/）。 要求如下：", "（1）要求程序能进行浮点数的算术运算，操作数1和2用float类型定义，运算符op用字符型定义。", "（2）要求输入的算术表达式中的操作数和运算符之间可以加入任意多个空白符 输入提示信息：“Please enter the expression:\\n” 输入数据格式：\"%f %c%f\" 输出数据格式：以加运算为例：\"%f   %f = %f\\n\"", "（3）要求连续做多次算术运算，每次运算结束后，程序都给出提示： Do you want to continue(Y/N or y/n)? 用户输入Y或y时，程序继续进行其他算术运算；否则程序退出运行状态。 输入提示信息：“Do you want to continue(Y/N or y/n)?” 输入数据格式：\" %c\"", "（4）如果输入错误的运算符，则输出\"Unknown operator!\\n\"，不结束程序运行，继续询问是否做下一次运算。", "(5)如果除数为0，则输出\"Division by zero!\\n\"，不结束程序运行，继续询问是否做下一次运算。", "(6)允许浮点数的误差在1e-7范围内。 提示：请直接拷贝粘贴题目中给定的格式字符串。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; n;               &lt;span class=\"hljs-comment\"&gt;//分数可以为整数&amp;#xff0c;也可以存在小数&amp;#xff1b;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;n);        &lt;span class=\"hljs-comment\"&gt;//键盘获取分数&amp;#xff1b;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; n &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)        &lt;span class=\"hljs-comment\"&gt;//限制分数范围&amp;#xff0c;俗称检查&amp;#xff1b;&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d&amp;#61;n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;       &lt;span class=\"hljs-comment\"&gt;//强制转换&amp;#xff0c;确定选项为“整数型”&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(d)           &lt;span class=\"hljs-comment\"&gt;//给出选项&amp;#xff0c;d 这个表达式的值与后面{...}中的 case 表达式匹配&amp;#xff0c;相等则执行&amp;#xff0c;不等则跳过&amp;#xff1b;&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;AAA\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;         &lt;span class=\"hljs-comment\"&gt;//在此处进行 break; 是因为成绩划分档次&amp;#xff0c;每一个档次都是单独&amp;#xff1b;&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;           &lt;span class=\"hljs-comment\"&gt;//break&amp;#xff1b;执行后&amp;#xff0c;执行划分档次后就不再执行 break&amp;#xff1b;之后的语句&amp;#xff1b;&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;             \n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;           &lt;span class=\"hljs-comment\"&gt;//注意&amp;#xff1a;这儿的 break; 与循环体中的 break; 区分开&amp;#xff1b;&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不及格\\n&amp;#34;&lt;/span&gt;);          \n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;              &lt;span class=\"hljs-comment\"&gt;//与 if 呼应&amp;#xff0c;保证成绩有效&amp;#xff1b;&lt;/span&gt;\n    {\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;switch waibu\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch语句划分成绩等级", ["本人c语言入门，用Switch语句划分成绩时如果以85，75，65为界限划分等级应该如何来设置，谢谢！"]], "Tag": "程序设计"}
{"Answer": "C语言的switch不支持字符串，可以用if ... else if 代替", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言新手 switch语句的问题", ["怎样在用switch语句检索一个字符串然后再用该语句替换其中的某个字符", "\n\n", "譬如 agsg..!!", "\n替换.为！", "\n替换!为！！", "\n求解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入不了&lt;br /&gt;你把2个数值放到数组里面&amp;#xff0c;写个双重循环去匹配&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句中如何输入两个数值", ["                                                         如题,在", "switch", "语句中如何输入两个数值,并让程序输出两个数值\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include&amp;lt;iostream&amp;gt;\nusing namespace std;\nint main(void){\n    int n;\n    cout&amp;lt;&amp;lt;&amp;#34;请输入一个数字&amp;#xff0c;按回车结束&amp;#34;&amp;lt;&amp;lt;endl;\n    cin&amp;gt;&amp;gt;n;\n    switch(n){\n        case 65:\n            cout&amp;lt;&amp;lt;&amp;#34;A&amp;#34;&amp;lt;&amp;lt;endl;\n            break;\n        case 66:\n            cout&amp;lt;&amp;lt;&amp;#34;B&amp;#34;&amp;lt;&amp;lt;endl;\n            break;\n        case 67:\n            cout&amp;lt;&amp;lt;&amp;#34;C&amp;#34;&amp;lt;&amp;lt;endl;\n            break;\n        default:\n            cout&amp;lt;&amp;lt;&amp;#34;END&amp;#34;&amp;lt;&amp;lt;endl;\n            break;\n    }\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++中用Switch case语句", ["C++中用Switch case语句写出：输入一个整数:为 65 时，显示“A”；为 66 时，显示“B”，为 67时，显示“C”,其它值显示“END”。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;b是char类型。case中的值&amp;#xff0c;加上单引号。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;switch (b)\n{ &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均数为:%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;及格率为:%.2f%%&amp;#34;&lt;/span&gt;,n/&lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch语句出现错误", ["```c", "\n", "#include <stdio.h>", "main()", "{    int a[10],i,n=0;", "    char b;", "    int sum=0;", "    for(i=0;i<10;i++)", "        {    printf(\"请输入第%d个学生的成绩:\",i+1);", "            scanf(\"%d\",&a[i]);", "            sum=sum+a[i];", "            if(a[i]>=60)", "            n++;", "        }", "    printf(\"学生的成绩为:\\n\");", "        for(i=0;i<10;i++)", "            printf(\"%d \",a[i]);", "        fflush(stdin);", "    printf(\"\\n你想要计算什么？\\n计算平均数请输入:0\\n计算及格率请输入:1\\n\");", "        scanf(\"%d\",&b);", "    switch (b)", "    {    case 0:", "            printf(\"平均数为:%d\",sum/10);break;", "        case 1:", "            printf(\"及格率为:%.2f%%\",n/10.0*100);break;", "    }", "}", "\n", "为什么输入0没有结果，而输入1却有结果```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;week的值是INT的写成字符自然不会正确运行,改为case 0&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句无法运行", ["#include<stdio.h>", "#include<stdlib.h>", "\n", "void main()", "{", "  int tick = 0;", "  printf(\"Please input a tick between 0~366\\n\");", "  scanf_s(\"%d\", &tick);", "  short month;", "  short day;", "  short week;", "  day = tick;", "  week = 0;", "typedef enum", "{Jan = 1,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec}EnumMonth;", " month = Jan;", " if (1 <= tick && tick <= 31) { month = Jan;day = tick;}", " else if (32 <= tick && tick <= 60) { month = Feb;day = tick - 31;}", " else if (61 <= tick && tick <= 92) { month = Mar;day = tick - 60;}", " else if (93 <= tick && tick <= 121) { month = Apr;day = tick - 91;}", " else if (122 <= tick && tick <= 152) { month = May;day = tick - 121;}", " else if (153 <= tick && tick <= 182) { month = Jun;day = tick - 152;}", " else if (183 <= tick && tick <= 213) { month = Jul;day = tick - 182; }", " else if (214 <= tick && tick <= 244) { month = Aug;day = tick - 213;}", " else if (245 <= tick && tick <= 274) { month = Sep;day = tick - 244;}", " else if (275 <= tick && tick <= 305) { month = Oct;day = tick - 274;}", " else if (306 <= tick && tick <= 335) { month = Nov;day = tick - 305;}", " else if (336 <= tick && tick <= 366) { month = Dec;day = tick - 335;}", " else { printf(\"error\"); }", " printf(\"Current time: 2020年%02d月%02d日-\", month, day);", " week = (tick + 2) % 7;", " switch (week)", " {", " case'0':printf(\"星期日\\n\"); break;", " case'1':printf(\"星期一\\n\"); break;", " case'2':printf(\"星期二\\n\"); break;", " case'3':printf(\"星期三\\n\"); break;", " case'4':printf(\"星期四\\n\"); break;", " case'5':printf(\"星期五\\n\"); break;", " case'6':printf(\"星期六\\n\"); break;", " }", " system(\"pause\");", "}", "\n", "还请各位帮忙看看，为什么switch语句无法运行，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main()\n{\nint i;\ndouble  d,b1,b2,b4,b6,b10;\nint  branch;\n&lt;span class=\"hljs-attribute\"&gt;bo1&lt;/span&gt;&amp;#61;100000*0.1;\n&lt;span class=\"hljs-attribute\"&gt;b2&lt;/span&gt;&amp;#61;b1&amp;#43;100000*0.075;\n&lt;span class=\"hljs-attribute\"&gt;b4&lt;/span&gt;&amp;#61;b2&amp;#43;200000*0.05;\n&lt;span class=\"hljs-attribute\"&gt;b6&lt;/span&gt;&amp;#61;b4&amp;#43;200000*0.03;\n&lt;span class=\"hljs-attribute\"&gt;b10&lt;/span&gt;&amp;#61;b6&amp;#43;400000*0.015;\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入利润i:&amp;#34;&lt;/span&gt;);\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n&lt;span class=\"hljs-attribute\"&gt;branch&lt;/span&gt;&amp;#61;i/100000;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (branch&amp;gt;10)  &lt;span class=\"hljs-attribute\"&gt;branch&lt;/span&gt;&amp;#61;10;\nswitch(branch)\n{  case 0:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;i*0.1;break;\ncase 1:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b1&amp;#43;(i-100000)*0.075;break;\ncase 2:\ncase 3: &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b2&amp;#43;(i-200000)*0.05;break;\ncase 4:\ncase 5:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b4&amp;#43;(i-400000)*0.03;break;\ncase 6:\ncase 7:\ncase 8:\ncase 9:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b6&amp;#43;(i-600000)*0.015;break;\ncase 10: &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b10&amp;#43;(i-1000000)*0.01;\n}\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金是 %10.2f\\n&amp;#34;&lt;/span&gt;,d);\nreturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问用switch语句怎么写啊", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n\n\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;)\n{\n        cin&amp;gt;&amp;gt;a;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n{\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;&lt;/span&gt;;\n}        \n        \n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n{\n\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(a/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n{      &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;优&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;优&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n         cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;良&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n         cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;中&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n         cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;及格&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;不及格&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl; \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }    \n}\n &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n {\n     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n }    \n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句实现多分支选择结构", ["switch语句用来实现多分支选择结构", "学生成绩等级判断（1）", "从键盘输入一个成绩，根据这个成绩显示：", "    优            （90以上）；", "    良            （80以上）；", "    中            （70以上）；", "    及格            （60以上）；", "    不及格        （60以下）。", "\n", "switch语句用来实现多分支选择结构", "学生成绩等级判断（2）", "    在上页等级1程序基础上增加功能：", "继续输入下一个成绩判断、一直重复不停；", "当输入成绩大于100时，提示错误，继续下一个；", "当输入成绩为负数时，整个程序结束。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n             System.out.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;您的性别是(M/F):&amp;#34;&lt;/span&gt;);\n            Scanner reader&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n            &lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt; er&amp;#61;reader.&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;().charAt(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            System.out.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的身高:&amp;#34;&lt;/span&gt;);\n            Scanner reader1&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n            &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; qi&amp;#61;reader.nextFloat();\n            System.out.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的体重:&amp;#34;&lt;/span&gt;);\n            Scanner reader2&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n            &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; xin&amp;#61;reader.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; BMI&amp;#61;xin&lt;span class=\"hljs-regexp\"&gt;/qi/&lt;/span&gt;qi;\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(er){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;){\n                        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型过轻!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型适中!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型过重!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;34&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型肥胖!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;){\n                        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型过轻!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型适中!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型过重!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(BMI&amp;lt;&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;||BMI&amp;gt;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的体型肥胖!&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n            }\n        }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch语句出现错误", ["import java.util.Scanner;", "public class Exp2_4{", "    public static void main(String args[]){", "        char[] erqi={'M','F'};", "        System.out.print(\"您的性别是(M/F):\");", "        Scanner reader=new Scanner(System.in);", "        char er=reader.next().charAt(0);", "        System.out.print(\"请输入你的身高:\");", "        Scanner reader1=new Scanner(System.in);", "        float qi=reader.nextFloat();", "        System.out.print(\"请输入你的体重:\");", "        Scanner reader2=new Scanner(System.in);", "        int xin=reader.nextInt();", "        float BMI=xin/qi/qi;", "        switch(er){", "            case 'M':", "            if(BMI<19)", "            System.out.println(\"你的体型过轻!\");break;", "            if(BMI<24||BMI>19)", "            System.out.println(\"你的体型适中!\");break;", "            if(BMI<29||BMI>24)", "            System.out.println(\"你的体型过重!\");break;", "            if(BMI<34||BMI>29)", "            System.out.println(\"你的体型肥胖!\");break;", "            case 'F':", "            if(BMI<20)", "            System.out.println(\"你的体型过轻!\");break;", "            if(BMI<25||BMI>20)", "            System.out.println(\"你的体型适中!\");break;", "            if(BMI<30||BMI>25)", "            System.out.println(\"你的体型过重!\");break;", "            if(BMI<35||BMI>30)", "            System.out.println(\"你的体型肥胖!\");break;", "        }", "    }", "}    "]], "Tag": "程序设计"}
{"Answer": "多个case写在一起，代表他们是共享一个入口的。", "Konwledge_Point": "switch语句及其应用", "Question": ["switch/case语句中判断问题", ["面试例题1：下面的switch语句输出什么。[日本著名软件企业F公司2013年2月面试题]", "\n\n", "int n='c';", "\n\n", "switch(n++)", "\n\n", "{default:printf(\"error\");break;", "\n\n", "case 'a':case'A':case 'b':case'B':printf(\"ab\");break;", "\n\n", "case 'c':case 'C':printf(\"c\");", "\n\n", "case 'd':case 'D':printf(\"d\");}", "\n\n", "A．cdd    B．cd   C．abcd   D．cderror", "\n\n", "解析：本题考的是switch中的“fall through”：如果case语句后面不加break，就依次执行下去。", "\n\n", "所以先顺序执行，考虑n的初始值，从'c'开始查找输出(default和ab直接略过)，输出c；没有break，那么继续输出后面的，输出d。", "\n\n", "答案：B", "\n\n", "我在这想问的是在case 'c':case 'C':printf(\"c\");这条语句中为什么能输出c？第二个case判断的是大写C ,而此时n是小写c，所以不应该直接跳过printf语句吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;isvowel&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; c&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (c)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;u&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; c;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;c);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, isvowel(c));\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/907054798636156.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;大概就是这样&amp;#xff0c;输入元音字母返回1&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["利用switch语句判断给定的字符是否为元音字符（a,e,i,o,u）", ["不知道为什么运行不出来", "#include <stdio.h>", "int isvowel(char c)", "{int is;", "switch(c)", "{case 'a':", "case 'e':", "case 'i':", "case 'o':", "case 'u':", "is=1;", "break;", "default:is=0;", "}", "return is;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把&amp;#39;9&amp;#39;,&amp;#39;8&amp;#39;,&amp;#39;7&amp;#39;这类字符都改成9&amp;#xff0c;8&amp;#xff0c;7这样的数字&amp;#xff0c;你switch是一个int&amp;#xff0c;case是个char&amp;#xff0c;怎么能匹配&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句，输入啥都是default那一项", ["编写了一个输入一个一到一百的数字，然后会输出ABCD或者error的switch语句，但就输入什么都是归入default的输出，有无大佬教一下怎么改。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could create class map, and special methods to create inputs from options.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class SSE { // please rename this\n\n    static private $mapClass = ['number' =&amp;gt; 'Number', 'checkbox' =&amp;gt; 'Checkbox'];\n\n    static function setSection($opt_name, array $settings) {\n        // var_dump($settings[\"fields\"]);\n\n        foreach ($settings[\"fields\"] as $field) {\n            self::processField($opt_name, $field);\n        }\n    }\n\n    static function processField($opt_name, array $field) {\n        // recognize class from class map\n        $class = self::$mapClass[$field[\"type\"]];\n        $input = $class::createFromOptions($field);\n        echo \"&amp;lt;br&amp;gt;$input\";\n    }\n\n}\n\nclass Input {\n\n    protected $title;\n    protected $desc;\n    protected $id;\n\n}\n\nclass Number extends Input {\n\n//protected $fields = array();\n\n    function __toString() {\n        return $this-&amp;gt;title;\n    }\n\n    public function __construct($title, $desc, $id) {\n        $this-&amp;gt;title = $title;\n        $this-&amp;gt;desc = $desc;\n        $this-&amp;gt;id = $id;\n    }\n\n    // create object from array\n    static public function createFromOptions(array $options) {\n        return new self($options[\"title\"], $options[\"desc\"], $options[\"id\"]);\n    }\n\n}\n\nclass Checkbox extends Input {\n\n//protected $fields = array();\n    protected $color;\n\n    function __toString() {\n        return $this-&amp;gt;title;\n    }\n\n    public function __construct($title, $desc, $id, $color) {\n        $this-&amp;gt;title = $title;\n        $this-&amp;gt;desc = $desc;\n        $this-&amp;gt;id = $id;\n        $this-&amp;gt;color = $color;\n    }\n\n    // create object from array\n    static public function createFromOptions(array $options) {\n        return new self($options[\"title\"], $options[\"desc\"], $options[\"id\"], $options[\"color\"]);\n    }\n\n}\n\n$test1 = array(\n    \"title\" =&amp;gt; \"Ssadassa\",\n    \"id\" =&amp;gt; \"basic\",\n    \"desc\" =&amp;gt; \"this is a test\",\n    \"fields\" =&amp;gt; array(\n        array(\n            \"title\" =&amp;gt; \"Checkbox input\",\n            \"id\" =&amp;gt; \"ba32132sic\",\n            \"desc\" =&amp;gt; \"this is a test\",\n            \"type\" =&amp;gt; \"checkbox\",\n            \"color\" =&amp;gt; \"This is only for checkbox no another input should have this\"\n        ),\n        array(\n            \"title\" =&amp;gt; \"Number input\",\n            \"id\" =&amp;gt; \"basic\",\n            \"desc\" =&amp;gt; \"this is a test\",\n            \"type\" =&amp;gt; \"number\"\n        )\n    )\n);\n\nSSE::setSection(\"da\", $test1);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, you could add options validator to make sure that all mandatory options has passed and there is no extra options.&lt;/p&gt;\n\n&lt;p&gt;Why not &lt;code&gt;ucfirst&lt;/code&gt;? Because you are able to use camel case class name, for example RichText (textarea with wysiwyg). Or write more smart class recognizer.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["OOP和switch语句", ["\n\n", "I have this OOP code in php", "\n\n", "class SSE {\n\nstatic function setSection($opt_name,array $settings){\n    var_dump($settings[\"fields\"]);\n\n    foreach ($settings[\"fields\"] as $field){\n        self::processField($opt_name,$field);\n    }\n\n}\n\nstatic function processField($opt_name,array $field){\n\n        switch ($field[\"type\"]){\n            case \"number\":\n                $number = new Number($field[\"title\"],$field[\"desc\"],$field[\"id\"]);\n                echo \"<br>$number\";\n                break;\n            case \"checkbox\":\n                $checkbox = new Checkbox($field[\"title\"],$field[\"desc\"],$field[\"id\"],$field[\"color\"]);\n                echo \"<br>$checkbox\";\n                break;\n        }\n}\n\n}\n\nclass Input {\n\nprotected $title;\nprotected $desc;\nprotected $id;\n\n}\n\nclass Number extends Input {\n\n//protected $fields = array();\n\nfunction __toString(){\n    return $this->title;\n}\n\npublic function __construct($title,$desc,$id){\n    $this->title = $title;\n    $this->desc = $desc;\n    $this->id = $id;\n}\n}\n\nclass Checkbox extends Input {\n\n//protected $fields = array();\nprotected $color;\nfunction __toString(){\n    return $this->title;\n}\n\npublic function __construct($title,$desc,$id,$color){\n    $this->title = $title;\n    $this->desc = $desc;\n    $this->id = $id;\n    $this->color = $color;\n}\n}\n\n$test1 = array(\n\"title\" => \"Ssadassa\",\n\"id\" => \"basic\",\n\"desc\" =>\"this is a test\",\n\"fields\" => array(\n    array(\n        \"title\" => \"Checkbox input\",\n        \"id\" => \"ba32132sic\",\n        \"desc\" =>\"this is a test\",\n        \"type\"  => \"checkbox\",\n        \"color\" => \"This is only for checkbox no another input should have this\"\n    ),\n    array(\n        \"title\" => \"Number input\",\n        \"id\" => \"basic\",\n        \"desc\" =>\"this is a test\",\n        \"type\"  => \"number\"\n    )\n)\n\n);\n\nSSE::setSection(\"da\",$test1);\n", "\n\n", "What to do about the switch statement?Later I may add textarea input and I have to go and edit the switch statemt.I have looked here ", "https://sourcemaking.com/design_patterns", " but I don't know with one fits this case maybe factory no idea.This is my first OOP try.\nBy the way the array $test1 must not be changed I mean the way some one uses those clases must be the same.Any help really appreciated.Thank you.\nEdit:The question is:Is anything wrong if I use the switch statement?Is a better way to do this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "楼主你好，这是我的真正号，刚才我忘记这个号的密码，所以用Q登录，希望你采纳我这个为满意答案。\r\n我来帮你\r\n我就在这里敲吧\r\n#include\r\n\r\nint main()\r\n{\r\nchar ch; //用来存储输入的字母\r\nprintf(\"输入字母\");\r\nscanf(\"%c\", &amp;ch);\r\n\r\n//下面两句是判断输入的是不是字母\r\nif ('A' &lt;= ch &amp;&amp; ch &lt;= 'Z' ）{\r\nprintf(\"该字母的下一个字母是%d, ch + );\r\n}\r\nelse if ('a' &lt;= ch &amp;&amp; ch &lt;= 'z' ）{\r\nprintf(\"该字母的下一个字母是%d, ch + );\r\n}\r\n//下面是判断如果不是字母，则输出下面语句\r\nelse{\r\nprintf(\"你输入字符不是字母\");\r\n}\r\n}", "Konwledge_Point": "switch语句及其应用", "Question": [" 关于if语句和switch语句 不知道怎么打 麻烦大家解一下了，万分感激! c语言 switch", ["#include\nvoid main()\ndouble a;\nprintf(\"%f\",a);\nscanf(\"%f\",&a);\nswitch(a)\n{\ncase 'a':printf(\"%f\",a);\nbreak;\n\n    default:printf(\"输入的字符不是字母\\n\");\n}\n\n}\n显示错误，不知道怎么打下去了 后面还有但是不知道怎么打了，求解！\n题目如下： 输入一个字符，判断字符必须为字母，为其它字符则输出“输入字符不是字母”\n然后输入的字符改为当前字符的下一个字符，例:c改为d,Z改为A。注意大小写不能改变。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你所定义的input应该是个int类型&amp;#xff0c;在读取控制台输入时&amp;#xff0c;会有一个转换操作&amp;#xff0c;你使用的是%d&amp;#xff0c;也就是识别为整数类型&amp;#xff0c;与input对应&amp;#xff0c;这是合理的。&lt;br /&gt;但是当你输入一些字母&amp;#xff08;非纯数字的字符或字符串&amp;#xff09;时&amp;#xff0c;依然会根据你的设定转换为整数类型&amp;#xff0c;这个时候值就会变为0。这与int与char变量之间的赋值是不同的&amp;#xff0c;所以建议你避开使用0这个数字。&lt;br /&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句判断0或1，如果不是就进入default，但是输入字母不进行default", ["#用switch语句判断所输入的数字0或1来决定游戏的进行，default是其他输入，但是输入了q、w……一系列字母之后就直接退出游戏，而不是按照default中的进行。", "代码如下：", "do", "    {", "        menu();", "        printf(\"请选择：\");", "        scanf(\"%d\", &input);//获取你输入的字符0或1", "        switch (input)//判断你所输入的字符", "        {", "            case 1:", "                game();//进入函数game（）", "                break;", "            case 0:", "                printf(\"退出游戏！\\n\");//程序结束", "                break;", "            default:", "                printf(\"注意：请输入0或1\\n\");//除0或1以外的情况", "                break;", "        }", "    } while (input);//do……while循环最少进行一次 ", "\n"]], "Tag": "程序设计"}
{"Answer": "调用的代码呢，switch (Maps[i])，这里i传入多少，是否越界", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句未经处理的异常？", ["萌新在学习写一个飞行棋", "\n运行时switch那里会出现“未经处理的异常”", "\nMaps是一个字段", "\n\n", "```public static int[] Maps = new int[100];", "\n   public static string Condition(int i)   //声明一个i，给方法里使用", "\n        {", "\n            string str = \" \";", "\n            if ((Player[0] == Player[1]) && Player[1] == i)//如果玩家A和玩家B在一起时", "\n            {", "\n                str = \"<>\";", "\n            }", "\n            else if (Player[0] == i)//玩家A", "\n            {", "\n                str = \"A\";", "\n            }", "\n            else if (Player[1] == i)//玩家B", "\n            {", "\n                str = \"B\";", "\n            }", "\n            else", "\n            {", "\n                switch (Maps[i])", "\n                {", "\n                    case 0://调用上面的用来定义道具得是数字，数组里未经改变的值都是0", "\n                        Console.ForegroundColor = ConsoleColor.White;", "\n                        str = \"□\";//普通格子", "\n                        break;", "\n                    case 1:", "\n                        Console.ForegroundColor = ConsoleColor.Green;", "\n                        str = \"☆\";//幸运星", "\n                        break;", "\n                    case 2:", "\n                        Console.ForegroundColor = ConsoleColor.Red;", "\n                        str = \"?\";//地雷", "\n                        break;", "\n                    case 3:", "\n                        Console.ForegroundColor = ConsoleColor.Blue;", "\n                        str = \"■\";//暂停", "\n                        break;", "\n                    case 4:", "\n                        Console.ForegroundColor = ConsoleColor.Yellow;", "\n                        str = \"卍\";//时空隧道", "\n                        break;", "\n                }", "\n            }", "\n            return str;", "\n        }", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加个default&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Monday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Tuesday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Wednesday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Thursday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Friday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Saturday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sunday&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NULL&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言用switch输入1-7输出星期数。有一个小错误求解", ["#include <stdio.h>", "int main()", "{", "    int n;", "    scanf(\"%d\",&n);", "    switch(n)", "    {", "    case 1:printf(\"Monday\");break;", "    case 2:printf(\"Tuesday\");break;", "    case 3:printf(\"Wednesday\");break;", "    case 4:printf(\"Thursday\");break;", "    case 5:printf(\"Friday\");break;", "    case 6:printf(\"Saturday\");break;", "    case 7:printf(\"Sunday\");break;", "\n", "}\n\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/813538704946170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么在Switch那里报错unreachable code", ["import java.util.Scanner;", "\n", "public class hellojava {", "    public static void main(String[] args) {", "        Scanner input = new Scanner(System.in);", "        int num=0;", "\n", "    ", "do", "{\n        System.", "out", ".println(", "\"请输入1-7，输入0退出\"", ");\n         num = input.nextInt();\n\n        ", "if", "(num>", "7", "|| num<", "0", ");{\n            System.", "out", ".println(", "\"输入数字不合格\"", ");\n            ", "continue", ";\n        }    \n        ", "switch", "(num) {\n        ", "case", " ", "1", ":\n            System.", "out", ".println(", "\"1\"", ");\n            ", "break", ";\n        ", "case", " ", "2", ":\n            System.", "out", ".println(", "\"2\"", ");\n            ", "break", ";\n        ", "case", " ", "3", ":\n            System.", "out", ".println(", "\"3\"", ");\n            ", "break", ";\n        ", "case", " ", "4", ":\n            System.", "out", ".println(", "\"4\"", ");\n            ", "break", ";\n        ", "case", " ", "5", ":\n            System.", "out", ".println(", "\"5\"", ");\n            ", "break", ";\n        ", "case", " ", "6", ":\n            System.", "out", ".println(", "\"6\"", ");\n            ", "break", ";\n        ", "case", " ", "7", ":\n            System.", "out", ".println(", "\"7\"", ");\n            ", "break", ";\n\n        }\n    }", "while", "(num!=", "0", ");\n    System.", "out", ".println(", "\"程序结束\"", ");\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我觉得应该是输入时错误了&amp;#xff0c;我的编译器这样用scanf输入的话&amp;#xff0c;a、b没有值成功输入&amp;#xff0c;只能输入运算符。建议用以下方式输入&amp;#xff0c;即先输入运算符&amp;#xff0c;再输入操作数&amp;#xff0c;最后在运算时在a或者b乘以1.0&amp;#xff0c;将该计算转换为浮点数类型的计算&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b; \n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s; \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; x&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    x&amp;#61;getchar();\n    getchar();  //获得输入x之后的换行符\\n&amp;#xff0c;以免影响a、b的输入\n    scanf_s(&amp;#34;%d %d&amp;#34;, &amp;amp;a,&amp;amp;b);\n    switch(x)\n    {\n    cas&lt;span class=\"hljs-string\"&gt;e&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;: printf(&amp;#34;%f&amp;#34;, s &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*a &amp;#43; b); break; \n    cas&lt;span class=\"hljs-string\"&gt;e&amp;#39;-&amp;#39;&lt;/span&gt;: printf(&amp;#34;%f&amp;#34;, s &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*a - b); break; \n    cas&lt;span class=\"hljs-string\"&gt;e&amp;#39;*&amp;#39;&lt;/span&gt;: printf(&amp;#34;%f&amp;#34;, s &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*a * b); break; \n    cas&lt;span class=\"hljs-string\"&gt;e&amp;#39;/&amp;#39;&lt;/span&gt;: printf(&amp;#34;%f&amp;#34;, s &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*a / b); break; \n    cas&lt;span class=\"hljs-string\"&gt;e&amp;#39;%&amp;#39;&lt;/span&gt;: printf(&amp;#34;%f&amp;#34;, s &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*a &amp;#43; b) ;break;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch语句模拟计算器五种运算", ["Switch语句模拟计算器的运算，请大家看看这个程序哪里出错了，麻烦高人指点，谢谢！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 3上一行的大括号删掉&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["有没有人知道为什么这样运行会提示[Error] case label '3' not within a switch statement", ["#include<stdio.h>", "#include<stdlib.h>", "#include<time.h>", "int main()", "{", "int a,b,numOfQues=0,numOfRight=0;", "char inquiry;", "srand(time(NULL));", "printf(\"欢迎你来做一位数的加减乘除法\\n\");", "do", "{", "    fflush(stdin);", "int temp=rand()%4;", "a=rand()%10;", "b=rand()%10;", "switch(temp)", "{", "    case 0:", "        {", "            int ans;", "            printf(\"%d+%d=\",a,b);", "            scanf(\"%d\",&ans);", "            if(ans==a+b)", "            {", "                numOfRight++;", "                printf(\"正确\\n\");", "             } else", "             printf(\"错误\\n\");", "             break;", "        }", "        case 1:", "            {", "                int ans;", "                printf(\"%d-%d=\",a,b);", "                scanf(\"%d\",&ans);", "                if(ans==a-b)", "                {", "                    numOfRight++;", "                    printf(\"正确\\n\");", "                }else", "                printf(\"错误\\n\");", "                break;", "            }", "            case2:", "                {", "\n", "            ", "int", " ans;\n        ", "printf", "(", "\"%d*%d=\"", ",a,b);\n        scanf(", "\"%d\"", ",&ans);\n        ", "if", "(ans==a*b){\n            numOfRight++;\n            ", "printf", "(", "\"正确\\n\"", ");\n        }", "else", "\n        ", "printf", "(", "\"错误\\n\"", ");\n        ", "break", ";        \n }\n", "\n", "}", "case 3:", "    {", "        if(b==0||(a%b!=0))continue;", "        int ans;", "        printf(\"%d / %d=\",a,b);", "        scanf(\"%d\",&ans);", "        if(ans==a/b)", "        {", "            numOfRight++;", "            printf(\"正确\\n\");", "        }else", "        printf(\"错误\\n\");", "        break;", "    }", "numOfQues++;", "printf(\"你还要做吗（N表示不要\");", "scanf(\"%d\",inquiry);", "}while(!('N'==inquiry||'n'==inquiry));", "printf(\"你的正确率为%d，再见\",numOfRight*100/numOfQues);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch语句会先检测它后面圆括号内的值&amp;#xff0c;然后扫描标签列表&amp;#xff08;case 列表&amp;#xff09;&amp;#xff0c;找到与其相同的值&amp;#xff0c;然后跳转到那条语句。&lt;br /&gt;其实你不是没有运行出来&amp;#xff0c;如果你输入1~4任意一个数的话&amp;#xff0c;你就会看到有相应的显示结果。另外&amp;#xff0c;case 后面的值只能是整型常数&amp;#xff0c;对于整数&amp;#xff0c;不需要再用单引号&amp;#39;&amp;#39;将其括起来&amp;#xff0c;除非你想它是一个字符&amp;#xff0c;如果是单字符则必须用单引号括起来。若还有问题&amp;#xff0c;可追问。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问这个switch为什么不能运行", ["这个switch不知道为什么不能运行出来，求指正！不知道是哪里出了问题，请求帮忙解决一下"]], "Tag": "程序设计"}
{"Answer": "对不起，理解错了。\r\n\r\n正确的写法应该是：\r\n\r\nswitch num\r\n  case num2cell(90:100)\r\n    disp ('the mark is 优')\r\n  .......\r\nend", "Konwledge_Point": "switch语句及其应用", "Question": ["一个关于matlab的switch语句的错误，求解", ["想用switch语句做一个简单的数值区间判断，求问大神哪里导致结果出错了", "\nnum=input('Enter the piont:')", "\nswitch (num)", "\n   case {90:1:100}", "\n       disp ('the mark is 优')", "\n   case {80:1:89}", "\n       disp ('the mark is 良')", "\n   case {70:1:79}", "\n       disp ('the mark is 中')", "\n   case {60:1:69}", "\n       disp ('the mark is 及格')", "\n   case {0:1:59}", "\n       disp ('the mark is 不及格')", "\n   otherwise", "\n       disp('a wrong piont')", "\nend", "\n输出结果：Enter the piont:95", "\n\n", "num =", "\n\n", "95\n", "\n\n", "a wrong piont"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;default没有break&amp;#xff0c;所以下边m&amp;#43;&amp;#43;也运行&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C＋＋ Switch语句 求解答！", ["第一个Switch语句做完后m＝1", "因为没有break 所以进入第二个Switch语句", "但是第二个Switch语句怎么做呀", "为什么正确答案是3呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码已经更改为&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;menu&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-----------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------即将进行体脂判断-------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要判断的体重&amp;#xff08;kg&amp;#xff09;、身高&amp;#xff08;m&amp;#xff09;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; w,h;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-built_in\"&gt;menu&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %f&amp;#34;&lt;/span&gt;,&amp;amp;w,&amp;amp;h);\n    t&amp;#61;w/h*h;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(t&amp;#61;w/h*h)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;少年&amp;#xff0c;要努力多吃点哦&amp;#xff01;体脂率偏低&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;&amp;lt;t&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;体脂率正常嘛&amp;#xff0c;好好保持!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;&amp;lt;t&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;多运动&amp;#xff0c;要少吃点啦!已经超重了&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;gt;&lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已经不是超重了&amp;#xff0c;而是肥胖了加油减肥!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个正常人的体重身高\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言基础，关于switch的用法", ["为什么会出错，头疼", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "void", " ", "menu", "()", "\n", "{\n    ", "printf", "(", "\"-----------------------------\\n\"", ");\n    ", "printf", "(", "\"-------即将进行体脂判断-------\\n\"", ");\n    ", "printf", "(", "\"请输入需要判断的体重（kg）、身高（m）\\n\"", ");\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "float", " w,h,t;\n    ", "menu", "();\n    ", "scanf", "(", "\"%f %f\"", ",&w,&h);\n    t=w/h*h;\n    ", "switch", "(t)\n    {\n        ", "case", " t<=", "18", ":\n                ", "printf", "(", "\"少年，要努力多吃点哦！体脂率偏低！\\n\"", ");\n                ", "break", ";\n        ", "case", " ", "18", "<t<=", "25", ":\n                ", "printf", "(", "\"体脂率正常嘛，好好保持!\\n\"", ");\n                ", "break", ";\n        ", "case", " ", "25", "<t<=", "27", ":\n                ", "printf", "(", "\"多运动，要少吃点啦!已经超重了！\\n\"", ");\n                ", "break", ";\n        ", "case", " t>", "27", ":\n                ", "printf", "(", "\"已经不是超重了，而是肥胖了加油减肥!\\n\"", ");\n                ", "break", ";\n        ", "default", ":", "printf", "(", "\"请输入一个正常人的体重身高\\n\"", ")\n    }\n    ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "msg是一个对象，what是其中的一个成员变量，没有什么特别的。", "Konwledge_Point": "switch语句及其应用", "Question": ["java中如何理解switch语句参数的对象.what", ["java中如何理解switch语句参数的对象.what", "\n\n", "switch (msg.what) {", "\n......}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch条件做一下处理&amp;#xff0c;除以10就可以少很多case语句了&amp;#xff1b;正确处理代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;import java.util.Scanner;\npublic class switch用法 {\n\n\tpublic static void main(String[] args) {\n\t\tScanner input &amp;#61; new Scanner(System.in);\n\t\tSystem.out.println(&amp;#34;请输入一个百分制成绩&amp;#34;);\n\t\tint a &amp;#61; input.nextInt();\n\t\tString chengji &amp;#61; &amp;#34;&amp;#34;;\n\t\tswitch (a/10) {\n\t\tcase 6:\n\t\t\tchengji &amp;#61; &amp;#34;及格&amp;#34;;\n\t\t\tbreak;\n\t\tcase 7:\n\t\tcase 8:\n\t\t\tchengji &amp;#61; &amp;#34;良好&amp;#34;;\n\t\t\tbreak;\n\t\tcase 9:\n\t\tcase 10:\n\t\t\tchengji &amp;#61; &amp;#34;优秀&amp;#34;;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tchengji &amp;#61; &amp;#34;不及格&amp;#34;;\n\t\t\tbreak;\n\t\t}\n\t\tSystem.out.print(&amp;#34;成绩&amp;#34; &amp;#43; chengji);\n\t}\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java中switch用法", ["import java.util.Scanner;\nimport java.util.Scanner;\n\npublic class ch35 {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        System.out.println(\"请输入一个百分制成绩\");\n        int a = input.nextInt();\n        String chengji = \"\";\n        switch (a){\n            case 60:\n        chengji = \"及格\";\n            break;\n            case 80:\n        chengji = \"良好\";\n                break;\n            case 90:\n        chengji = \"优秀\";\n                break;\n        }\n        System.out.print(\"成绩\" + chengji);\n    }\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;语句&amp;#xff1a;d &amp;#61; a &amp;gt; 30 ? b : c;  //d&amp;#61;b&amp;#61;40&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    因此进入switch的case 40&amp;#xff1a;输出“40”&amp;#xff1b;又因为没有break&amp;#xff1a;所以继续执行case 50的语句和default语句&amp;#xff0c;分别输出“50”和“#”。所以选D&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言基础题switch", ["这个为什么选d？五十是怎么输出的？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        Scanner s &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; score &amp;#61; s.nextInt();\n        &lt;span class=\"hljs-comment\"&gt;//在这个位置可以加入判断&amp;#xff0c;判断输入是否合法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;){\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;优&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;){\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;良&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;){\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;中&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;){\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;及格&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;不及格&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个合法的数&amp;#34;&lt;/span&gt;);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["要求用Java语言switch语句。", ["利用switch语句，实现对学生分数评级的功能。程序的输入是一个int类型的变量score，代表学生的分数取值范围【0，100】", "当分数范围为     0=<score<60 输出 不及格", "当分数范围为   60=<score<70 输出 及格", "当分数范围为   70=<score<80  输出 中", "当分数范围为    80=<score<90   输出 良", "当分数范围为    90=<score<=100  输出 优", "提示:可合理利用case穿越。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;swap&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[],&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s2[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buff[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(buff,s1);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(s1,s2);\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(s2,buff);\n\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s2[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;123&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;swap&lt;/span&gt;(s1,s2);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;s1&amp;#61;%s\\n&amp;#34;&lt;/span&gt;, s1);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;s2&amp;#61;%s\\n&amp;#34;&lt;/span&gt;, s2);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句char", ["写函数switch(char", "s1,char", "s2)，将两个数组中的数据进行互换。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每个case都没有break&amp;#xff0c;会从第一个匹配的case 8一直往下执行下面所有case中的代码。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;i&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, j&amp;#61;&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, k&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;) {\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;: k&amp;#43;&amp;#43;;   &lt;span class=\"hljs-comment\"&gt;//k&amp;#61;31&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;: k&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//k&amp;#61;33&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;: k&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//k&amp;#61;36&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; : k&lt;span class=\"hljs-regexp\"&gt;/&amp;#61;j;  /&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;/k&amp;#61;36 /&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有疑问在IDE里敲一遍&amp;#xff0c;断点一行一行执行就知道问题所在了。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h6 id=\"h6_若对你有帮助&amp;#xff0c;望采纳&amp;#xff01;_1648648910123\"&gt;若对你有帮助&amp;#xff0c;望采纳&amp;#xff01;&lt;/h6&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java switch语句", ["java switch语句，想知道具体的怎么算的啊，我算的是1，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch当然可以嵌套&amp;#xff0c;跟for循环差不多&amp;#xff0c;我这里有一段比较复杂的嵌套代码&amp;#xff0c;你看看能否看懂&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-comment\"&gt;//星期一到星期三就输出AAA&amp;#xff0c;星期四到星期五就输出BBB&amp;#xff0c;周末就输出CCC&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; week[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个星期:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,week);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num &amp;#61; !&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;) || !&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;) || !&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (num)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;AAA&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        \n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (!&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;) || !&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;))\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;BBB&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (!&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;) || !&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(week, &lt;span class=\"hljs-string\"&gt;&amp;#34;星期天&amp;#34;&lt;/span&gt;))\n            {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;CCC&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入格式错误&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言Switch语句", ["提示：我知道下面的语句错误", "\n", "Switch语句中能不能再包一个Switch？", "\n", "\n", "#", "include", "\"stdio.h\"", "\n", "int", " ", "main", "()", "\n", "{\n     ", "int", " a,b;\n     ", "scanf", "(", "\"%d\"", ",&a);\n     ", "switch", "(a)\n     {\n          ", "case", " ", "1", ":\n          {\n                ", "switch", "(b)\n                {                                                              ", "/*我想在Switch(a)里面再添加一个Switch(b)*/", "\n                    ", "case", " ", "1", ":", "break", ";\n                }\n          }\n          ", "case", " ", "2", ":\n          ", "case", " ", "3", ":", "printf", "(", "\"Hello Wolrd\\n\"", ");", "break", ";\n     }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 1中scanf函数中少了&amp;amp;&amp;#xff0c;没有赋值成功&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么case1只执行第一个print语句，而后面的语句都不再执行？是switch语句使用的问题吗？", ["\n", "\n", "\n", " 为什么case1只执行第一个print语句，而后面的语句都不再执行？是", "switch", "语句使用的问题吗？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入分数:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;d);\n    &lt;span class=\"hljs-comment\"&gt;//用if else&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (d &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d &amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt; &amp;amp;&amp;amp; d &amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;89&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d &amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt; &amp;amp;&amp;amp; d &amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;79&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d &amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt; &amp;amp;&amp;amp; d &amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;69&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;F\\n&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-comment\"&gt;//用switch&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(d/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;F\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言用Switch和else if 和Switch语句", ["要求按照考试成绩的等级输出百分制分数段，用switch语句实现：", "90-100，输出A;80-89，输出B；70-79，输出C，60-69输出D，其他情况输出F.", "注意：1)switch语句中，case后面只能是整型或者字符型，所以此题中，需要90-100转成整型，i/10;", "2)用两个方法：if-else语句和switch语句。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\nimport java.util.Scanner;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Demo&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        Scanner scanner &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; day &amp;#61; scanner.nextInt();\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (day) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期日&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java 键盘录入switch语言", ["根据键盘录入的数值1，2，3 ……7输出对应的星期一，星期二，星期三……星期日要求使用switch语言"]], "Tag": "程序设计"}
{"Answer": "switch 语句的参数只能是 String 和基础类型、枚举类。至于分支内部就需要根据分支确定规则继续走流程了。", "Konwledge_Point": "switch语句及其应用", "Question": ["Java语言怎么使用switch语句判断一个变量究竟是否包含哪些方法名，每个方法的调用", ["Java语言怎么使用switch语句判断一个变量究竟是否包含哪些方法名，每个方法的调用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;data.doornum的定义看一下&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么c语言switch里的case 1的语句多了程序就出错了", ["\n", "如题所示，如图所示，实在不懂，求求学霸们给个答案，多谢学霸们！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch只能处理多固定值判断&amp;#xff0c;但是逐一列举太多了&amp;#xff0c;可以考虑使用成绩的十位作为判据&lt;br /&gt;switch(成绩/10)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;case 10:case 9:&lt;br /&gt;//A&lt;br /&gt;break;&lt;br /&gt;case 8:case 7:case 6:&lt;br /&gt;//B&lt;br /&gt;break;&lt;br /&gt;default:&lt;br /&gt;//C&lt;br /&gt;break;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C#关于switch怎么搞范围的不会了", ["因为只学了switch判断变量是否等于固定值，对这个带范围的不知道怎么答了，想不出来，求解，要求使用switch解决", "题目：", "输入分数，如果", "成绩>=90；A", "90>成绩>=60;B", "成绩<60；C", "最后输出学生考试等级。", "用if会算，直接判定，用switch搞不定了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main()\n{\n  int i;\n  double  d,b1,b2,b4,b6,b10;\n  int  branch;\n  &lt;span class=\"hljs-attribute\"&gt;bo1&lt;/span&gt;&amp;#61;100000*0.1;\n  &lt;span class=\"hljs-attribute\"&gt;b2&lt;/span&gt;&amp;#61;b1&amp;#43;100000*0.075;\n  &lt;span class=\"hljs-attribute\"&gt;b4&lt;/span&gt;&amp;#61;b2&amp;#43;200000*0.05;\n  &lt;span class=\"hljs-attribute\"&gt;b6&lt;/span&gt;&amp;#61;b4&amp;#43;200000*0.03;\n  &lt;span class=\"hljs-attribute\"&gt;b10&lt;/span&gt;&amp;#61;b6&amp;#43;400000*0.015;\n  printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入利润i:&amp;#34;&lt;/span&gt;);\n  scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n  &lt;span class=\"hljs-attribute\"&gt;branch&lt;/span&gt;&amp;#61;i/100000;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (branch&amp;gt;10)  &lt;span class=\"hljs-attribute\"&gt;branch&lt;/span&gt;&amp;#61;10;\n  switch(branch)\n  {  case 0:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;i*0.1;break;\n     case 1:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b1&amp;#43;(i-100000)*0.075;break;\n     case 2:\n     case 3: &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b2&amp;#43;(i-200000)*0.05;break;\n     case 4:\n     case 5:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b4&amp;#43;(i-400000)*0.03;break;\n     case 6:\n     case 7:\n     case 8:\n     case 9:&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b6&amp;#43;(i-600000)*0.015;break;\n     case 10: &lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;b10&amp;#43;(i-1000000)*0.01;\n  }\n   printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金是 %10.2f\\n&amp;#34;&lt;/span&gt;,d);\n   return 0;\n }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;参考一下&amp;#xff0c;如果对你有帮助&amp;#xff0c;可以点击我这个回答右上方的【采纳】按钮&amp;#xff0c;给我个采纳吗&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++程序编写，关于switch语句的，求利润", ["企业发放的奖金来自利润提成。", "利润i低于或等于10万元的，可提成10%为奖金;", "100000 <i≤200000时，低于10万元的部分10%提成，高于10万元的部分可提成7.5%;", "20000<i≤400000时，低于20万的部分仍按上述办法提成(下同),高于20万元的部分按5%提成;", "400000<i≤600000时,高于40万元的部分按3%提成;", "600000<i≤1000000时,高于60万元的部分按1.5%提成;", "i>1000000时,超过100万元的部分按1%提成。", "从键盘输入当月利润i,求应发奖金总数。", "要求:  (1)用switch语句编程序。", "提示，switch表达式与利润有关，可以将利润压缩10万倍。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There is nothing in this code that would even output your default value. No matter the input, this outputs &lt;code&gt;Value&lt;/code&gt;. Look in &lt;code&gt;db.php&lt;/code&gt; or the files included by it for debugging &lt;code&gt;echo&lt;/code&gt;es.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP Switch语句错误", ["\n\n", " <?php\n include 'db.php';\n $mail=$_SESSION['session_u_e_mail'];\nif(!isset($_GET['edit']))\n{\n$_GET['edit']=0;\n}\nswitch($_GET['edit'])\n{\n case 1: echo \"Value\";\n         break;\n\n case 2: echo \"Value\";\n         break;\n\n default: echo \"Value\";\n         break;\n\n }\n", "\n\n", "I m facing problem that the values in every case is echoed twice.", "\n    "]], "Tag": "程序设计"}
{"Answer": "我猜可能是 default 没有 return 吧。", "Konwledge_Point": "switch语句及其应用", "Question": ["高分悬赏，Java语言switch中的break改写为函数的return但是报错了", ["高分悬赏，Java语言switch中的break改写为函数的return但是报错了", "\n报错信息如下图", "\n\n", "怎么解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议你把scanf(&amp;#34;%d&amp;#34;, &amp;amp;number);和scanf(&amp;#34;%c&amp;#34;, &amp;amp;A);改成 scanf(&amp;#34;%d&lt;u&gt;\\n&lt;/u&gt;&amp;#34;, &amp;amp;number);和scanf(&amp;#34;%c&lt;u&gt;\\n&lt;/u&gt;&amp;#34;, &amp;amp;A);在试一下&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句 选项内部如何跳出和结束switch", [" ", "\n\n", "目前主要出现在switch语句case4", "\n\n", "我输入4 再输入n的时候 虽然会结束switch 但是还是会重新进入一遍case4 导致打印出现两次", "\n\n", "调试的时候发现A = 10\\n", "\n\n", "而且输入y让程序继续通过switch运行的话 却没有什么反应 一直重复case4", "\n\n", "麻烦大佬帮帮我这个萌新 已经想了一天了 还是找不到解决方法", "\n\n", " ", "\n\n", " ", "\n\n", "\n", "#include<stdio.h>\nint main(){\nstart:\n    int A[100],B[100];\n    int number1,number2,i,j;\n    int a = 0;\n    //A B集合元素的个数计算 \n    int countA = 0;\n    int countB = 0;\n    printf(\"请输入你想输入A集合的元素个数(不超过100个):\\n\");\n    scanf(\"%d\", &number1);\n    printf(\"请输入集合A的元素:\\n\");\n    for(i = 0;i < number1;i++){\n        scanf(\"%d\", &A[i]);\n        countA++;\n    }\n    printf(\"请输入你想输入B集合的元素个数(不超过100个):\\n\");\n    scanf(\"%d\", &number2);\n    printf(\"请输入集合B的元素:\\n\");\n    for(i = 0;i < number2;i++){\n        scanf(\"%d\", &B[i]);\n        countB++;\n    }\n    //无序性判断 \n    if(countA == countB){\n        int count = 0;\n        for(i = 0;i < number1;i++){\n            for(j = 0;j < number2;j++){\n                if(A[i] == B[j]){\n                    count++;\n                }\n            }\n        }\n        if(count == number1){\n            printf(\"两个数组一样请重新输入\\n\");\n            goto start;\n        }\n    }\n    //互异性  （为了防止i，j同时取到最后一个元素，让j = i + 1） \n    for(i = 0;i < number1;i++){\n        for(j = i + 1;j < number1;j++){\n            if(A[i] == A[j]){\n                printf(\"数组A中含有一样的数请重新输入\\n\");\n                goto start;\n            }\n        }\n    }\n    for(i = 0;i < number2;i++){\n        for(j = i + 1;j < number2;j++){\n            if(B[i] == B[j]){\n                printf(\"数组B中含有一样的数请重新输入\\n\");\n                goto start;\n            }\n        }\n    }\n    printf(\"****************************************\\n\");\n    printf(\"请分别输入集合A和集合B的元素:\\n\");\n    printf(\"请选择（1-5）要进行的集合运算：\\n\");\n    printf(\"1-----集合的交运算（A ∩ B）\\n\");\n    printf(\"2-----集合的并运算（A ∪ B）\\n\");\n    printf(\"3-----集合的差运算（A-B）\\n\");\n    printf(\"4-----继续/退出（y/n）\\n\");\n    printf(\"****************************************\\n\");\nrestart:\n    while(a != 1){\n        int number;\n        scanf(\"%d\", &number);\n        switch(number){\n            case 1:\n                printf(\"结果为:\");\n                for(i = 0;i < number1;i++){\n                    for(j = 0;j < number2;j++){\n                        if(A[i] == B[j]){\n                            printf(\"%d\\t\", A[i]);\n                        }\n                    }\n                }\n                printf(\"\\n\");\n                printf(\"请继续选择\\n\");\n                break;\n            case 2:\n                printf(\"2\\n\");\n                break;\n            case 3:\n                printf(\"3\\n\");\n                break;\n            case 4:\n                char A;\n                printf(\"继续请输入y，退出请输入n\\n\");\n                scanf(\"%c\", &A);\n                if(A == 'n'){\n                    a = 1;\n                }else if(A == 'y'){\n                    goto restart;\n                }\n                break;\n            default:\n                printf(\"输入了错误的输入请重新输入\\n\");\n        }\n    }\n    return 0;\n}", "\n\n", "\n "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你case 1:中没有用    break; 跳出 switch&lt;br /&gt;在执行完case 1:后会接着执行    case 2:&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["while语句中的switch语句", ["想询问一下输入1的时候 为什么结果是65"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; (n&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt; &amp;#43; (n&lt;span class=\"hljs-number\"&gt;-10&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt; &amp;#43;(n&lt;span class=\"hljs-number\"&gt;-100&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch函数解决打车计费问题", ["打车计费", "2 公里内起步 7 元", "每公里 1.8 元计费。", "超过 10 公里，超过部分按每公里 2.1 元", "超过 100 公里，超过部分按每公里 3 元", "（使用switch函数）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先说结论&lt;br /&gt;不管是c、c&amp;#43;&amp;#43;、c#、java&amp;#xff0c;所有这些支持switch语法的语言&amp;#xff0c;都允许不写default&amp;#xff0c;这不是个语法错误&lt;br /&gt;但是写default是个好习惯&amp;#xff0c;哪怕什么都不做&amp;#xff0c;先摆在那放着也行&amp;#xff0c;起码能提醒你还有这个可能性&lt;br /&gt;再说c&amp;#43;&amp;#43;和c#里switch语法的不同之处&lt;br /&gt;c&amp;#43;&amp;#43;里允许case不加break贯穿标签&lt;br /&gt;c#里如果多个case对应同一段代码则允许这样&lt;br /&gt;但是只要前面的case里有代码则必须加break&amp;#xff0c;不允许继续贯穿&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c＃语言switch语句可以没有default吗？(语言-c#)", ["学c++的时候好像讲过switch语句不能没有default，做题的时候是要一定加的，不然会报错。今天听了c＃的课，说好像default可有可无。弄不清了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;硬要咬文嚼字的话&amp;#xff0c;break退出的是case语句&lt;br /&gt;然而switch一次只能匹配一个case&lt;br /&gt;当case退出&amp;#xff0c;switch必然结束&lt;br /&gt;类似这种题目&amp;#xff0c;你就不要纠结了&amp;#xff0c;考10次也不一定会出现一次&lt;br /&gt;还是把精力放到有用的地方去&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["break之于switch语句的作用 概念辨析", ["为什么“break语句用于switch语句，它表示退出该switch语句”这句话是错的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个程序使用一个for循环来遍历i的值&amp;#xff0c;从0到2。对于i的每个值&amp;#xff0c;使用switch语句检查它的值。如果i等于0或2&amp;#xff0c;它将打印两次i的值&amp;#xff0c;因为在每个case之后都没有break语句。如果i等于1&amp;#xff0c;它将只打印一次&amp;#xff0c;因为它将直接使用默认情况。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句和for循环语句求解", ["c语言switch语句和for循环语句求解", "\n", "\n", "不知道要怎么看怎么得出这个答案……希望朋友们可以解答一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch(a)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  case 1:&lt;/span&gt;&lt;br /&gt;printf(&amp;#34;xxx&amp;#34;);&lt;br /&gt;break;&lt;br /&gt;case 2:&lt;br /&gt;printf(&amp;#34;xxx&amp;#34;);&lt;br /&gt;break;&lt;br /&gt;}&lt;br /&gt;代码改成这样就可以了&amp;#xff0c;就是每个printf函数后面加个break&amp;#xff0c;switch语句中的case匹配成功后&amp;#xff0c;如果没有遇到break&amp;#xff0c;后面所有的项都认为是符合条件滴&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言中的Switch语句，值1为什么会匹配到case 2？", ["c语言中的Switch语句，值1为什么会匹配到case 2？如图所示，本人刚接触c语言"]], "Tag": "程序设计"}
{"Answer": "switch 实现不了，因为闰年判断是根据是能否被4整除且不能被100整除，或者能被100整除，是条件判断，而且有多个条件的情况。\r\n而 switch 必须是每个分支一个固定的值，闰年条件没法抽象成几个固定值，所以不行。", "Konwledge_Point": "switch语句及其应用", "Question": ["Java语言求助？！如何使用switch技术实现对闰年的判断，整除的技术怎么实现?", ["Java语言求助？！如何使用switch技术实现对闰年的判断，整除的技术怎么实现?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;啊这&amp;#xff0c;我一来就看到你scanf里面少了个&amp;amp;&amp;#xff0c;加上试试&amp;#xff0c;哈哈&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中使用switch语句如何与if一起使用。", ["我是刚学这个C语言的，teacher给我们留了一个任务。内容是输入任意一个百分位的分数，然后输出它的等级。如97分为A，60以下为E。", "我是用switch语句实现的，但是有一个地方我实在束手无策：就是输入分数后要判定一下输入的语句是否在0至100之间。", "但是运行结果总是直接转到最后一句（即输出ss和error），前面那些判定直接没用了，我不知道这是为啥。", "以下是我思考的两种方案，但是都达不到我想要的效果。", "\n", "#", "include", "<stdio.h>", "\n    ", "int", " ", "main", "(", "void", ")", "\n    ", "{  \n      ", "/*********Begin*********/", "\n     \n      ", "int", " number;\n            ", "scanf", "(", "\"%d\"", ",number);\n            ", "if", "(number>=", "0", "&&number<=", "100", "){\n            ", "switch", "(number/", "10", ")\n                {\n                  ", "case", " ", "10", ":\n                  ", "case", " ", "9", ":\n                  ", "printf", "(", "\"A\"", ");\n                  ", "break", ";\n                  ", "case", " ", "8", ":\n                  ", "printf", "(", "\"B\"", ");\n                  ", "break", ";\n                  ", "case", " ", "7", ":\n                  ", "printf", "(", "\"C\"", ");\n                  ", "break", ";\n                  ", "case", " ", "6", ":\n                  ", "printf", "(", "\"D\"", ");\n                  ", "break", ";\n                  ", "default", ":\n                  ", "printf", " (", "\"E\"", ");\n                  ", "break", ";\n                }\n            }                    \n           ", "else", "{\n           ", "printf", "(", "\"error!\"", ");            \n             }\n      ", "/*********End**********/", " \n       ", "return", " ", "0", ";\n    }\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use a dictionary:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def f(x):\n    return {\n        'a': 1,\n        'b': 2,\n    }[x]\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["替换 Python 中的 switch 语句？", ["\n\n", "I want to write a function in Python that returns different fixed values based on the value of an input index.  ", "\n\n", "In other languages I would use a ", "switch", " or ", "case", " statement, but Python does not appear to have a ", "switch", " statement.  What are the recommended Python solutions in this scenario?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入部分参数写错了,改为&lt;code class=\"language-javascript\"&gt;   scanf_s(&amp;#34;%1d%1d&amp;#34;, &amp;amp;a, &amp;amp;b);&lt;/code&gt;即可&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么switch里面的部分printf无法输出", ["#include<stdio.h>", "int main()", "{", "    int a, b ,n;", "    printf(\"Enetr a two-digit number:\");", "    scanf_s(\"%1d1%d\", &a, &b);", "    n = a * 10 + b;", "    printf(\"You entered the number \");", "    if (a != 1)", "    {", "        switch (a) {", "        case 2:printf(\"twenty-\"); break;", "        case 3:printf(\"thirty-\"); break;", "        case 4:printf(\"forty-\"); break;", "        case 5:printf(\"fifty-\"); break;", "        case 6:printf(\"sixty-\"); break;", "        case 7:printf(\"seventy-\"); break;", "        case 8:printf(\"eight-\"); break;", "        case 9:printf(\"nity-\"); break;", "        }", "        switch (b) {", "        case 1:printf(\"one.\"); break;", "        case 2:printf(\"two.\"); break;", "        case 3:printf(\"three.\"); break;", "        case 4:printf(\"four.\"); break;", "        case 5:printf(\"five.\"); break;", "        case 6:printf(\"six\"); break;", "        case 7:printf(\"seven.\"); break;", "        case 8:printf(\"eight.\"); break;", "        case 9:printf(\"nine.\"); break;", "        }", "    }", "    else{", "        switch (n) {", "        case 11:printf(\"eleven.\"); break;", "        case 12:printf(\"twelve.\"); break;", "        case 13:printf(\"thirteen.\"); break;", "        case 14:printf(\"fourteen.\"); break;", "        case 15:printf(\"fifteen.\"); break;", "        case 16:printf(\"sixteen.\"); break;", "        case 17:printf(\"seventeen.\"); break;", "        case 18:printf(\"eighteen.\"); break;", "        case 19:printf(\"nineteen.\"); break; fflush(stdout);", "        }", "    }", "    return 0;", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;Case&lt;/code&gt; statements are only &lt;strong&gt;labels&lt;/strong&gt;. This means the compiler will interpret this as a jump directly to the label. In C++, the problem here is one of scope. Your curly brackets define the scope as everything inside the &lt;code&gt;switch&lt;/code&gt; statement. This means that you are left with a scope where a jump will be performed further into the code skipping the initialization. The correct way to handle this is to define a scope specific to that &lt;code&gt;case&lt;/code&gt; statement and define your variable within it. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (val)\n{   \ncase VAL:  \n{\n  // This will work\n  int newVal = 42;  \n  break;\n}\ncase ANOTHER_VAL:  \n...\nbreak;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不能在 switch 语句中声明变量？", ["\n\n", "I've always wondered this - why can't you declare variables after a case label in a switch statement?  In C++ you can declare variables pretty much anywhere (and declaring them close to first use is obviously a good thing) but the following still won't work:", "\n\n", "switch (val)  \n{  \ncase VAL:  \n  // This won't work\n  int newVal = 42;  \n  break;\ncase ANOTHER_VAL:  \n  ...\n  break;\n}  \n", "\n\n", "The above gives me the following error (MSC):", "\n\n", "\n  ", "initialization of 'newVal' is skipped by 'case' label", "\n", "\n\n", "This seems to be a limitation in other languages too.  Why is this such a problem?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/92396/why-cant-variables-be-declared-in-a-switch-statement"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/692079076736170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句设计程序一年有12个月", ["一年有12个月,分属于春夏秋冬4个季节,键盘录入一个月份,请用程序实现判断该月份属于哪个季节,并输出。", "提示:12月、1月、2月属于冬季;3月、4月、5月属于春季;6月、7月、8月属于夏季;9月、10月、11月属于秋季。", "要求:用 switch 语句设计程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以的&amp;#xff0c;case就如同if...else一样&amp;#xff0c;可以有自己的代码逻辑&amp;#xff0c;可以用大括号&amp;#xff0c;定义的变量作用域就在case的代码逻辑范围内&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch里面case下可以用int定义变量吗？", ["switch (year)", "{", "case 1:", "int rate=0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your problem is that you are passing a pointer value (&lt;code&gt;*SegmentationFault&lt;/code&gt;) where you just want a value &lt;code&gt;SegmentationFault&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Instead of &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sf := new(SegmentationFault)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should do:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sf := SegmentationFault{}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句中的变量范围问题", ["\n\n", "I have a program that parses a log file and returns a slice of structs with populated data from the file. ", "\n\n", "Also I have written a function to add a struct item to the aforemetioned list.", "\n\n", "But there is an error that says \"Cannot use 'sf' (type *SegmentationFault) as type SegmentationFault\" which stems from this function. How am I to solve this problem?", "\n\n", "func (sfList *SegmentationFaultList) AddItem(item SegmentationFault) []SegmentationFault {\n    sfList.Items = append(sfList.Items, item)\n    return sfList.Items\n}\n\nfunc parseLogFile(logPath string) (s *SegmentationFaultList){\n    logFile, err := os.Open(logPath)\n    checkError(err, \"Could not open your log file\")\n    defer logFile.Close()\n\n    scanner := bufio.NewScanner(logFile)\n    parsing := false\n    sf := new(SegmentationFault)\n    sfs := []SegmentationFault{}\n    sfList := SegmentationFaultList{sfs}\n    var beginRegexp = regexp.MustCompile(`(?i).+\\[err\\]:F-(\\d+): Dump: Segmentation fault at ([\\da-z]+)$`)\n    var endRegexp = regexp.MustCompile(`(?i).+\\[info\\]:Engine child with pid \\d+ terminated`)\n    var sfTextRegexp = regexp.MustCompile(`(?i).+\\[err\\]:F-\\d+: Dump:(.+)`)\n\n    for scanner.Scan() {\n        beginMatch := beginRegexp.FindStringSubmatch(scanner.Text())\n        switch {\n        case beginMatch != nil:\n            sf.pid = beginMatch[1]\n            sf.sfAt = beginMatch[2]\n            parsing = true\n        case endRegexp.FindStringSubmatch(scanner.Text()) != nil:\n            parsing = false\n            sfList.AddItem(sf)\n        case parsing:\n            sf.sfText = append(sf.sfText, strings.TrimSpace(sfTextRegexp.FindStringSubmatch(scanner.Text())[1]))\n        }\n    }\n    if err := scanner.Err(); err != nil {\n        log.Fatal(err)\n    }\n    return sfList\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的需求是怎样&amp;#xff1f;目前具体是怎样&amp;#xff1f;可不可以代码或伪代码举例&amp;#xff1f;这也看不懂你想问啥啊&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["链表遍历后退出了switch语句", ["链表遍历后退出了switch，而当链表为空，switch语句可以继续执行"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your text consists of two bytes: &lt;code&gt;fmt.Print(len(text))&lt;/code&gt; is 2 and &lt;code&gt;fmt.Print(len(\"a\"))&lt;/code&gt; is one.&lt;/p&gt;\n\n&lt;p&gt;You the second symbol is invisible and you can try to remove it with &lt;code&gt;text = strings.TrimSpace(text)&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个go switch语句有什么问题？", ["\n\n", "Can anybody see why this switch won't work?", "\n\n", "func main() {\n\n    reader := bufio.NewReader(os.Stdin)\n    text, _ := reader.ReadString('\n')\n\n    fmt.Print(text)\n\n    switch text {\n    case \"a\":\n        fmt.Print(\"A\n\")\n    case \"b\":\n        fmt.Print(\"B\n\")\n    case \"c\":\n        fmt.Print(\"C\n\")\n    default:\n        fmt.Print(\"DEFAULT\n\")\n    }\n}   \n", "\n\n", "In this statement, the default value is always returned yet when hard coding the switch expression, the switch block works as it should. Looking at the ReadString() func code, it returns a string so I can't see any reason for my example to not work.", "\n\n", "Am I doing something wrong?!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The variable will be the same in your whole portion of code : there is not variable scope \"per block\" in PHP.&lt;/p&gt;\n\n&lt;p&gt;So, if &lt;code&gt;$something&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;, so you enter in one of the &lt;code&gt;case&lt;/code&gt; of the &lt;code&gt;switch&lt;/code&gt;, your code would output 1 or 2.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, if &lt;code&gt;$something&lt;/code&gt; is not &lt;code&gt;1&lt;/code&gt; nor &lt;code&gt;2&lt;/code&gt; &lt;em&gt;(for instance, if it's considered as &lt;code&gt;0&lt;/code&gt;, which is the case with the code you posted, as it's not initialized to anything)&lt;/em&gt;, you will not enter in any of the &lt;code&gt;case&lt;/code&gt; block ; and the code will output &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP switch语句变量范围", ["\n\n", "In PHP, how is variable scope handled in switch statements?", "\n\n", "For instance, take this hypothetical example:", "\n\n", "$someVariable = 0;\n\nswitch($something) {\n\n    case 1:\n        $someVariable = 1;\n        break;\n\n    case 2:\n        $someVariable = 2;\n        break;\n}\n\necho $someVariable;\n", "\n\n", "Would this print 0 or 1/2?", "\n    "]], "Tag": "程序设计"}
{"Answer": "已经解决了。采用多个transfer转换即可解决", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么kettle的switch/case 无效,所有的分支都执行", ["为什么kettle的switch/case 无效,所有的分支都执行？", "\n我有两个分支，两个分支的下一步都是表输入（查询表），", "\n结果两个分支都同时执行，起不到分支的效果，这到底是为什么？", "\n请教各位大佬，我到底是错在哪里？大家有什么好的解决方案吗？望各位大佬不吝赐教！", "\n截图如下："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;python3.10有了&amp;#xff0c;不过不是用switch做关键字&amp;#xff0c;而是match&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; get_tax(wages):\n    &lt;span class=\"hljs-attribute\"&gt;match&lt;/span&gt;(wages):\n        &lt;span class=\"hljs-attribute\"&gt;case&lt;/span&gt; x if x &amp;lt; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;: tax &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;case&lt;/span&gt; x if &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt; &amp;lt;&amp;#61; x &amp;lt; &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;: tax &amp;#61; wages * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;case&lt;/span&gt; x if &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt; &amp;lt;&amp;#61; x &amp;lt; &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;: tax &amp;#61; wages * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;case&lt;/span&gt; x if &lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt; &amp;lt;&amp;#61; x &amp;lt; &lt;span class=\"hljs-number\"&gt;4000&lt;/span&gt;: tax &amp;#61; wages * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;case&lt;/span&gt; _: tax &amp;#61; wages * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; tax\n\n&lt;span class=\"hljs-attribute\"&gt;get_tax&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;get_tax&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8000&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;2000&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;get_tax&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3200&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;640&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;get_tax&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1800&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;180&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;get_tax&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2500&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;375&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["一道python课习题，求解答 用switch", ["假设税前工资和税率如下（s代表税前工资，t代表税率）：", "s<1000    t=0%", "1000<=s<2000      t=10%", "2000<=s<3000  t=15%", "3000<=s<4000     t=20%", "4000<=s             t=25%", "编写一程序，要求用户输入税前工资额，然后用switch语句计算税后工资额。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since you are calling &lt;code&gt;.Print&lt;/code&gt;, you need to use an interface which has that method.  I think you are looking for something like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Printer interface {\n    Print()\n}\n\nfunc (s *struct1) Print() {\n  // ...\n}\n\nfunc (s *struct2) Print() {\n  // ...\n}\nvar result Printer\nswitch structPickingString {\ncase \"struct1\":\n    result = new(struct1)\ncase \"struct2\":\n    result = new(struct2)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://play.golang.org/p/W9r6UfeQSCz\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/W9r6UfeQSCz&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["通过switch语句分配类型/创建结构", ["\n\n", "I'm having a bit of trouble figuring out how to either create a struct in a switch statement or assign a type to it in a switch statement.\nHere's some non-working code illustrating what I'm trying to do:", "\n\n", "var result\n\nswitch structPickingString {\ncase \"struct1\":\n    result = new(struct1)\ncase \"struct2\":\n    result = new(struct2)\n}\n\n//unmarshall some json into the appropriate struct type\nif err := json.NewDecoder(resp.Body).Decode(&result); err != nil {\n    log.Println(err)\n}\n//print out that json with a function specific to that type of struct\nresult.Print()\n", "\n\n", "I ", "think", " something involving an empty ", "interface{}", " might be related to solving this issue but unfortunately I'm still a bit ignorant with golang and I'm not seeing how to make it work.", "\n\n", "Here's a link to a slightly modified version of the code for more context: ", "https://play.golang.org/p/Rb1oaMuvmU2", "\n\n", "The issue is not defining the print function, it's assigning a specific type of struct to the ", "result", " variable based on using the individual ", "Print", " function that the struct implements.", "\n\n", "Let me know if there's any more info I could provide.", "\n    "]], "Tag": "程序设计"}
{"Answer": "具体错误是什么？\r\n大致看一眼，应该是少了`switch`的括号对，需要用`{}`把`case .. default`内容括起来。\r\n还有`default`后面少了冒号。", "Konwledge_Point": "switch语句及其应用", "Question": ["小白看到看不懂的编译错误脸都绿了求大神不吝赐教", ["Q221.(10分)编程从键盘输入某年某月（包括闰年），用switch语句编程输出该年的该月拥有的天数。要求考虑闰年以及输入月份不在合法范围内的情况。已知闰年的2月有29天，平年的2月有28天。", "\n**输入格式要求：\"%d, %d\" 提示信息：\"Input year,month:\"", "\n**输出格式要求：\"31 days\\n\"  \"29 days\\n\"  \"28 days\\n\" \"Input error!\\n\"", "\n程序运行示例如下：", "\nInput year,month:2004,2", "\n29 days", "\n小白的程序：", "\n#include", "\nint main()", "\n{", "\n    int year,month;", "\n    printf(\"Input year,month:\"); ", "\n    scanf(\"%d,%d\",&year,&month);", "\n    switch(month)", "\n    case 1:", "\n    case 3:", "\n    case 5:", "\n    case 7:", "\n    case 8:", "\n    case 10:", "\n    case 12:", "\n    printf(\"31 days\\n\");", "\n    break;", "\n    case 4:", "\n    case 6:", "\n    case 9:", "\n    case 11:", "\n    printf(\"30 days\\n\");", "\n    break;", "\n    case 2:", "\n    if((year%4==0&&year%100!=0)||(year%400==0))", "\n    printf(\"29 days\\n\");", "\n    break;", "\n    else", "\n    printf(\"28 days\\n\");", "\n    break;", "\ndefault", "\n    printf(\"Input error!\\n\");", "\n    return 0;", "\n}", "\n哪里出了问题求大神讲讲"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/431353857866168.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;我帮你改装一下&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;score);\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; score &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(score/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//90~100的数字 除以10就是9或者10&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["有关Switch语句的问题", ["如图所示，为什么我运行出来长这样", "Switch语句的case后面是只能跟字符和数字吗？感谢回答，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, b &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, c &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (a &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//a &amp;gt; 0只有两种结果true(1)/false(0), a &amp;#61; 2, 因此执行case1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (b &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//只有两种结果true(1)/false(0)&amp;#xff0c;b &amp;#61; 7 因此执行case0&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#64;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;!&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//break;//缺少这个break导致执行完上面的程序后还会执行case 0&amp;#xff1a;下面的程序&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n       &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (c &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//只有两种结果true(1)/false(0)&amp;#xff0c;c &amp;#61; 5,因此执行case1&lt;/span&gt;\n       &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n           &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n              &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n       &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n           &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;#&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n       &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n           &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;#&amp;#34;&lt;/span&gt;);\n              &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n       }\n       &lt;span class=\"hljs-comment\"&gt;//break;//缺少这个break导致执行完上面的程序后还会执行default&amp;#xff1a;下面的程序&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;amp;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;某一个case结束后最好直接增加上break&amp;#xff0c;否则回顺序执行后面的case&amp;#xff0c;直到遇到break或者switch结束。&lt;br /&gt;当你很确定需要多个case执行同一段代码的时候才能把break去掉&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句", ["请问这个程序该如何运行，第二个switch输入c==5时该执行哪条语句，麻烦高人指点，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I fixed this by using the handler array and adding the position to the back of the url like /intake/1 , /intake/2 etc&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$handler_page = System::getHandlerArray()[0];\nif($handler_page == null){\n$handler_page = '1';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here I check if the user is at /intake. If he is and thus System::getHandlerArray()[0] == 0,\nI assign 1, for the first position, to the variable.&lt;/p&gt;\n\n&lt;p&gt;Then to use this variable in my template I do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$template-&amp;gt;assign_var('position', (int)$handler_page + 1); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I add 1 because I want to assign the current position + 1 to this variable because I will be using it to direct the page with an onClick to the next position as is seen here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;\nfunction next_module() {\n    window.location.href = ('/intake/' + {{ position }});\n}\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何通过OnClick返回带有新变量的switch语句？", ["\n\n", "I'm building an intake application for clubs. I'm having trouble getting the user from one page to another. Each page is a module, usually a form. And they can differ in position, as in the user can change the position a page has in the intake. ", "\n\n", "Here's how my database looks like approximately. A club can have 1 or more intakes. An intake consists of multiple modules. The database models look like this:", "\n\n", "table: intake               \nintake_id(P)   club_id\n       12345     99999\n       12346     99999\n       12347     99998\n\ntable: intake_has_module\nintake_id(P)   module_id   position\n       12345           1          2\n       12345           2          1\n       12345           3          3\n       12346           1          1\n       12346           2          2\netc.\n\ntable: module\nmodule_id(P)                   name\n           1   Personal Information\n           2   Terms and Conditions\n           3          Subscriptions\n\n(Dummy data)\n", "\n\n", "Here I get the intake_id from the corresponding club\n    ", "\n\n", "$intake_sql = $db->sql_query('SELECT intake_id FROM fit_vg_intake WHERE club_id = ' . (int)User::currentUser()->getClubID());\n$intake_sql_2 = $db->sql_fetchrow($intake_sql);\n", "\n\n", "Here I get the module_id that's in first position from the club's intake", "\n\n", "$module_sql = $db->sql_query('SELECT module_id FROM fit_vg_intake_has_module WHERE position = 1 AND intake_id = ' . $intake_sql_2['intake_id']);\n$module_sql_2 = $db->sql_fetchrow($module_sql);\n", "\n\n", "Then I use this module_id in a switch that looks like this:", "\n\n", "switch ($module_sql_2['module_id']) {\ncase 1:\n    generate_page('intake/personalinformation.twig');\n    break;\ncase 2:\n    generate_page('intake/termsandconditions.twig');\n    break;\ncase 3:\n    generate_page('intake/subscriptions.twig');\n    break;\ndefault:\n    generate_page('intake/main.twig');\n    break;\n}\n", "\n\n", "So this part is working correctly for me. The user can switch the position of each module in a settings panel.\nNow for my problem & question:", "\n\n", "Say a user is on the Terms and Conditions module. Which is module_id 2 and position 1. When he clicks a button which confirms that he has accepted the terms and conditions he should be moved to the module that has the position+1 of module_id=2.", "\n\n", "What I've tried:\nI've tried adding an onClick to the button. When clicked on a javascript function gets called named next_module() with an action called accepted-terms.\nI pass this action to the php file in which I use another switch:", "\n\n", "switch ($action) {\ncase 'accepted-terms':\n    $position_sql = $db->sql_query('SELECT position FROM intake_has_module WHERE module_id = 2 AND intake_id = ' . $intake_sql_2['intake_id']);\n    $position_sql_2 = $db->sql_fetchrow($position_sql);\n    break;\ndefault:\n    break;\n}\n", "\n\n", "In this switch as you can see I get the position of the module with module_id=2.\nIt returns 1 which is correct. Now I can get the module_id with a position of 1+1. This is how far I've come. Basically my question is: How do I return to the first switch with the new module_id when someone clicks a button?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Just revert your order of case statements and remove the break statements. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($var)\n{\n    case 'C':\n       $c = 3;\n    case 'B':\n       $b = 2;\n    case 'A':\n       $a = 1;\n       break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From &lt;a href=\"http://us2.php.net/manual/en/control-structures.switch.php\" rel=\"noreferrer\"&gt;the manual&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It is important to understand how the switch statement is executed in\n  order to avoid mistakes. The switch statement executes line by line\n  (actually, statement by statement). In the beginning, no code is\n  executed. Only when a case statement is found with a value that\n  matches the value of the switch expression does PHP begin to execute\n  the statements. PHP continues to execute the statements until the end\n  of the switch block, or the first time it sees a break statement. If\n  you don't write a break statement at the end of a case's statement\n  list, PHP will go on executing the statements of the following case.&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句多个变量赋值而不重复", ["\n\n", "Let's say I have a switch statement like this:", "\n\n", "switch ($var)\n{\n    case 'A':\n       $a = 1;\n       break;\n\n    case 'B':\n       $a = 1;\n       $b = 2;\n       break;\n\n    case 'C':\n       $a = 1;\n       $b = 2;\n       $c = 3;\n       break;\n}\n", "\n\n", "Is there a way that I can structure that switch statement to have the repeated ", "$a = 1", " and ", "$b = 2", " appear like once?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Switch statements with &lt;code&gt;String&lt;/code&gt; cases have been implemented in &lt;a href=\"http://openjdk.java.net/projects/jdk7/features/\" rel=\"noreferrer\"&gt;Java SE 7&lt;/a&gt;, at least 16 years &lt;a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=1223179\" rel=\"noreferrer\"&gt;after they were first requested.&lt;/a&gt; A clear reason for the delay was not provided, but it likely had to do with performance.&lt;/p&gt;\n\n&lt;h2&gt;Implementation in JDK 7&lt;/h2&gt;\n\n&lt;p&gt;The feature has now been implemented in &lt;code&gt;javac&lt;/code&gt; &lt;a href=\"http://blogs.oracle.com/darcy/entry/project_coin_string_switch_anatomy\" rel=\"noreferrer\"&gt;with a \"de-sugaring\" process;&lt;/a&gt; a clean, high-level syntax using &lt;code&gt;String&lt;/code&gt; constants in &lt;code&gt;case&lt;/code&gt; declarations is expanded at compile-time into more complex code following a pattern. The resulting code uses JVM instructions that have always existed.&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; with &lt;code&gt;String&lt;/code&gt; cases is translated into two switches during compilation. The first maps each string to a unique integer—its position in the original switch. This is done by first switching on the hash code of the label. The corresponding case is an &lt;code&gt;if&lt;/code&gt; statement that tests string equality; if there are collisions on the hash, the test is a cascading &lt;code&gt;if-else-if&lt;/code&gt;. The second switch mirrors that in the original source code, but substitutes the case labels with their corresponding positions. This two-step process makes it easy to preserve the flow control of the original switch.&lt;/p&gt;\n\n&lt;h2&gt;Switches in the JVM&lt;/h2&gt;\n\n&lt;p&gt;For more technical depth on &lt;code&gt;switch&lt;/code&gt;, you can refer to the JVM Specification, where the &lt;a href=\"http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10\" rel=\"noreferrer\"&gt;compilation of switch statements&lt;/a&gt; is described. In a nutshell, there are two different JVM instructions that can be used for a switch, depending on the sparsity of the constants used by the cases. Both depend on using integer constants for each case to execute efficiently. &lt;/p&gt;\n\n&lt;p&gt;If the constants are dense, they are used as an index (after subtracting the lowest value) into a table of instruction pointers—the &lt;code&gt;tableswitch&lt;/code&gt; instruction. &lt;/p&gt;\n\n&lt;p&gt;If the constants are sparse, a binary search for the correct case is performed—the &lt;code&gt;lookupswitch&lt;/code&gt; instruction. &lt;/p&gt;\n\n&lt;p&gt;In de-sugaring a &lt;code&gt;switch&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; objects, both instructions are likely to be used. The &lt;code&gt;lookupswitch&lt;/code&gt; is suitable for the first switch on hash codes to find the original position of the case. The resulting ordinal is a natural fit for a &lt;code&gt;tableswitch&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Both instructions require the integer constants assigned to each case to be sorted at compile time. At runtime, while the &lt;code&gt;O(1)&lt;/code&gt; performance of &lt;code&gt;tableswitch&lt;/code&gt; generally appears better than the &lt;code&gt;O(log(n))&lt;/code&gt; performance of &lt;code&gt;lookupswitch&lt;/code&gt;, it requires some analysis to determine whether the table is dense enough to justify the space–time tradeoff. Bill Venners wrote &lt;a href=\"http://www.artima.com/underthehood/flowP.html\" rel=\"noreferrer\"&gt;a great article&lt;/a&gt; that covers this in more detail, along with an under-the-hood look at other Java flow control instructions.&lt;/p&gt;\n\n&lt;h2&gt;Before JDK 7&lt;/h2&gt;\n\n&lt;p&gt;Prior to JDK 7, &lt;code&gt;enum&lt;/code&gt; could approximate a &lt;code&gt;String&lt;/code&gt;-based switch. This uses &lt;a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9.3\" rel=\"noreferrer\"&gt;the static &lt;code&gt;valueOf&lt;/code&gt;&lt;/a&gt; method generated by the compiler on every &lt;code&gt;enum&lt;/code&gt; type. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Pill p = Pill.valueOf(str);\nswitch(p) {\n  case RED:  pop();  break;\n  case BLUE: push(); break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不能在 String 上使用 switch 语句？", ["\n\n", "Is this functionality going to be put into a later Java version?", "\n\n", "Can someone explain why I can't do this, as in, the technical way Java's ", "switch", " statement works?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/338206/why-cant-i-use-switch-statement-on-a-string"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch 只能case 12345 这样&amp;#xff0c;不能用范围判断&amp;#xff0c;要不就用if判断范围&amp;#xff0c;要不就用分数/10再 case 987654&amp;#xff0c;代表90,80&amp;#xff0c;70&amp;#xff0c;有75分里边再嵌套一层&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch语句语法出现的问题", ["\n", "可以帮忙看看怎么回事吗？本人初学Switch语句有很多不清楚的地方。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入用逗号隔开&amp;#xff0c;scanf里边不是有逗号么 2000,3,5这样&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/267521444766192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么最后执行的switch case 输出default的值？", ["输入某年某月某日求是这年的第几天，我觉得这个代码没有问题但是为什么我输入值了最后输出的是default的值啊？", "\n"]], "Tag": "程序设计"}
{"Answer": "switch这个开关，他会去找是否有和num这个数值相等的case 值，有的话就会执行后面的输出语句，注意，一旦判断成功了，不管后面的case 值是多少，程序都会\r\n执行相应的输出语句，所以，通常情况下为了避免此错误，都会在每个case的逻辑语句后面加上一个 break，一旦执行成功，就会跳出switch。", "Konwledge_Point": "switch语句及其应用", "Question": ["关于Switch语句，求大神解答！感谢！", ["public class HelloWorld {", "\n    public static void main(String[] args) {", "\n        int num=1;", "\n        switch(num){", "\n        case 1:", "\n            System.out.println(\"1\");", "\n        case 2:", "\n            System.out.println(\"2\");", "\n            break;", "\n        case 3:", "\n            System.out.println(\"3\");", "\n            break;", "\n        default:", "\n            System.out.println(\"4\");", "\n\n", "    }\n}\n", "\n\n", "小弟学习Java时遇到的问题，：关于上述代码，如果把case1后面的break去掉，我能理解case1的语句能执行，到case2后面的break终止，但是switch中num的值和case2后面的值不匹配，为什么会执行case2后面的语句呢？", "\n\n", "十分感谢帮忙的大神！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use php to conditionally declare the POSTed data like Anshul demonstrates.&lt;/p&gt;\n\n&lt;p&gt;You can modify the form with jquery before it is POSTed like Prakash Pandey demonstrates.&lt;/p&gt;\n\n&lt;p&gt;If you are happy to employ a simple html solution, then you can merely add &lt;code&gt;&amp;lt;input type=\"hidden\" name=\"active\" value=1&amp;gt;&lt;/code&gt; before your checkbox line and add &lt;code&gt;value=2&lt;/code&gt; to your checkbox input.&lt;/p&gt;\n\n&lt;p&gt;The magic is in the shared &lt;code&gt;name&lt;/code&gt; attribute.  The hidden input field will act as a default setting which will be POSTed when the slider is set to OFF (the checkbox will not POST a value if set to OFF).  When the checkbox slider is set to ON, the hidden field's value will be overwritten.&lt;/p&gt;\n\n&lt;p&gt;*note, I am interpreting your question requirements to mean that you want &lt;code&gt;1&lt;/code&gt; for &lt;strong&gt;OFF&lt;/strong&gt; and &lt;code&gt;2&lt;/code&gt; for &lt;strong&gt;ON&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is the full form that I tested my solution with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;form method=\"post\"&amp;gt;\n &amp;lt;label class=\"switch\"&amp;gt;\n  &amp;lt;input type=\"hidden\" name=\"active\" value=1&amp;gt;\n  &amp;lt;input type=\"checkbox\" id=\"togBtn\" name=\"active\" checked=\"checked\" value=2&amp;gt;\n  &amp;lt;div class=\"slider round\"&amp;gt;\n    &amp;lt;span class=\"on\"&amp;gt;ON&amp;lt;/span&amp;gt;\n    &amp;lt;span class=\"off\"&amp;gt;OFF&amp;lt;/span&amp;gt;\n  &amp;lt;/div&amp;gt;\n&amp;lt;/label&amp;gt;\n&amp;lt;input type=\"submit\" name=\"submit\" value=\"Submit\" &amp;gt;\n&amp;lt;form&amp;gt;\n\n&amp;lt;?php\nvar_export($_POST);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output for ON:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;array ( 'active' =&amp;gt; '2', 'submit' =&amp;gt; 'Submit', )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output for OFF:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;array ( 'active' =&amp;gt; '1', 'submit' =&amp;gt; 'Submit', )\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch元素更新DB值", ["\n\n", "I have an html switch to toggle between ", "on", " and ", "off", ":", "\n\n", "<label class=\"switch\">\n    <input type=\"checkbox\" id=\"togBtn\" name=\"active\" checked=\"checked\">\n    <div class=\"slider round\">\n        <span class=\"on\">ON</span>\n        <span class=\"off\">OFF</span>\n    </div>\n</label>\n", "\n\n", "You can check it live here: ", "http://jsfiddle.net/tc4byzo8", "\n\n", "It's checked by default ", "on", "and it's inside a form:", "\n\n", "<form method=\"post\">\n    ..\n    <input type=\"submit\" name=\"submit\" value=\"Submit\" >\n<form>\n", "\n\n", "When the ", "Submit", " button is clicked, I insert the data into the DB:", "\n\n", "//Check if submit button is clicked.\nif( isset($_POST['submit']) ){\n\n     //Insert the data into the DB.\n    $stmt = $conn->prepare( /* Insert query */ );\n    $stmt->execute();\n\n}\n", "\n\n", "The DB has column which values could be ", "1", " or ", "0", ", So if the checkbox is checked, the value would be ", "1", ".", "\n\n", "How to check if the checkbox is checked or not to insert the values ", "1", " or ", "2", "?", "\n\n", "I added the attribute ", "checked=\"checked\"", ", So that it's checked by default, But when I switch it off, The ", "checked", " attribute still there.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为前面  scanf(&amp;#34;%f%c%f&amp;#34;,&amp;amp;a,&amp;amp;op,&amp;amp;b);用户输入了数据和换行符‘\\n’&amp;#xff0c;在读取了数据之后&amp;#xff0c;输入缓存里就残留了一个‘\\n’。&lt;br /&gt;再次使用scanf(&amp;#34;%c&amp;#34;)会读取输入缓存里上次残留的‘\\n’&amp;#xff0c;而不是读取新输入的字符。这样就造成了严重的错误。&lt;/p&gt;\n&lt;p&gt;可以在用 scanf(&amp;#34;%c&amp;#34;,&amp;amp;ch); 读取字符前用  setbuf(stdin, NULL); 清除输入缓存。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    setbuf(&lt;span class=\"hljs-name\"&gt;stdin&lt;/span&gt;, NULL)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;ch&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者用  scanf(&amp;#34;%1s&amp;#34;,&amp;amp;ch); 读取字符&amp;#xff0c;用&amp;#34;%1s&amp;#34;会跳过空格与换行符&amp;#xff0c;读取一个非空格与换行符的字符。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句结束后不能进行scanf操作?", ["其他都挺正常，就是最后几句出了问题，它不执行scanf语句，无法实现选择，求解一下", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "(", "int", " argc, ", "char", "** argv)", " \n", "{\n    ", "float", "  a,b;\n    ", "char", " op;\n    END:", "printf", "(", "\"请输入算式：\"", ");\n    ", "scanf", "(", "\"%f%c%f\"", ",&a,&op,&b);  \n    ", "switch", "(op)\n    {\n        ", "case", " ", "'+'", ":\n            ", "printf", "(", "\"%g+%g=%g\\n\"", ",a,b,a+b);", "break", ";\n        ", "case", " ", "'-'", ":\n            ", "printf", "(", "\"%g-%g=%g\\n\"", ",a,b,a-b);", "break", "; \n        ", "case", " ", "'*'", ":\n            ", "printf", "(", "\"%g*%g=%g\\n\"", ",a,b,a*b);", "break", ";\n        ", "case", " ", "'/'", ":\n            ", "if", " (", "0", "==b)\n            ", "printf", "(", "\"除数不能为零！\\n\"", ");\n            ", "printf", "(", "\"%g/%g=%g\\n\"", ",a,b,a/b);", "break", ";\n        ", "default", ":\n            ", "printf", "(", "\"运算符错误！\\n\"", "); \n    }\n    ", "char", " ch;\n    ", "printf", "(", "\"是否继续运算（Y/N or y/n):\"", ");\n    ", "scanf", "(", "\"%c\"", ",&ch); \n    ", "if", "(ch==", "'Y'", "||ch==", "'y'", ") \n    ", "goto", " END;\n    ", "else", "\n    ", "printf", "(", "\"over!\"", "); \n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This comparison is happening:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 == 'A'\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What happens is that PHP casts the string to an integer. This results in the letter A becoming zero because it doesn't represent a number.&lt;/p&gt;\n\n&lt;p&gt;Hence:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0 == 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And that case meets the switch, and is therefore executed. Very counter-intuitive, but it's the way PHP's type system works, and is unfortunately technically not a bug.&lt;/p&gt;\n\n&lt;p&gt;You can solve this by turning &lt;code&gt;$i&lt;/code&gt; into a string like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ((string) $i) {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or by just initializing it as a string if you can:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$i = '0';\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["是php switch语句错误吗？", ["\n\n", "I have a problem want to know answer,\nWhy the following code will print A not default?", "\n\n", "$i = 0;\nswitch ($i) {\n    case 'A':\n        echo \"i equals A\"; //will printed it\n        break;\n    case 'B':\n        echo \"i equals B\";\n        break;\n    case 'C':\n        echo \"i equals C\";\n        break;\n    default:\n       echo \"i equals other\";\n}\n", "\n\n", "Anyone can tell me why? I truely don't understand .\nMy PHP version is 5.2.17 \nTheanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$var = strtolower($var)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then in the switch cases write all lowercase&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何使switch语句不区分大小写？", ["\n\n", "In the following example, sometimes ", "$var", " can be \"Value\", \"value\" or even \"VALUE\". ", "\n\n", "switch ( $var ) {\n    case \"value\":\n        // Value and VALUE don't seem to match here.\n        break;\n}\n", "\n\n", "The comparison seems to be case sensitive (only the all-lowercase \"value\" matches). Is there a way to perform a case-insensitive comparison?", "\n\n", "Ref: ", "http://php.net/manual/en/control-structures.switch.php", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供对照参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (x) \n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ling\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yi\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;er\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;san\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//........&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["我这个switch为啥没有输出啊", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这简单啊&lt;br /&gt;int n;&lt;br /&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;br /&gt;switch(n)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      case 1:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;          printf(&amp;#34;你好&amp;#xff01;&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;          break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      case 2:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;          printf(&amp;#34;你坏&amp;#xff01;&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;          break;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["怎么用c语言编写一个程序，可以根据输入不同的数字输出不同的内容", ["怎么用c语言编写一个程序，可以根据输入不同的数字输出不同的内容"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 6怎么两个printf&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;score)!&amp;#61;EOF)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(score &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || score &amp;gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {  \n            &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(score / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用的switch语句，只能一个对上，可以看一看吗", ["\n", "\n", "用的switch语句，只能一个对上，可以看一看吗，才看懂Switch语句，但是写不对"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 有两个问题&amp;#xff1a;&lt;br /&gt;&lt;br /&gt;一是放置于switch中的变量应为month&amp;#xff0c;即为月份变量&amp;#xff0c;input是一个Scanner对象&amp;#xff0c;放置于switch中不符题意&amp;#xff1b;&lt;br /&gt;&lt;br /&gt;二是每个case在打印语句后面要加个break&amp;#xff0c;因为每个月份的打印都不同,且一次只需打印输入的那个月份对应的季节信息&amp;#xff0c;所以每个case的打印语句后面需要加个break。&lt;br /&gt;&lt;br /&gt;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;TestSwitch&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; static void main(String[] args) {\n        &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated method stub&lt;/span&gt;\n        Scanner input &amp;#61; new Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入月份&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        int month &amp;#61; input.nextInt();\n        \n        switch(month) {\n            case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;1月是冬天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;2月是冬天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;3月是春天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;4月是春天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;5月是春天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;6月是夏天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;7月是夏天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;8月是夏天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;9月是秋天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;10月是秋天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;11月是秋天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            case &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;12月是冬天&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/688643754676149.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["JAVA。switch语句", ["JAVA。", "还请麻烦看一下是什么问题，谢谢。", "\n", "请在start-end区域中，用switch语句在Begin-End区域补全代码，实现根据月份输出季节的功能。", "规则如下：", "\n", "一年有四季 春季（3，4，5）夏季（6，7，8）秋季（9，10，11） 冬季（12，1，2）", "\n", "测试说明", "\n", "我会对你的程序进行测试，如下：", "测试输入：1", "预期输出：1月是冬天", "\n", "测试输入：3", "预期输出：3月是春天", "\n", "测试输出：6", "预期输出：6月是夏天", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch 中每个case 的代码最后都要用  break; 跳出。&lt;/p&gt;\n\n&lt;p&gt;否则就会继续执行下一个case的代码。&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;while 是条件为真才继续循环&amp;#xff0c;应该是while (c!&amp;#61;&amp;#39;\\n&amp;#39;)才对&lt;/p&gt;\n\n&lt;p&gt;应该是c不等于\\n继续循环&amp;#xff0c;c等于\\n才跳出循环&amp;#xff0c; 你while (c&amp;#61;&amp;#61;&amp;#39;\\n&amp;#39;)这就成了c等于\\n继续循环&amp;#xff0c;c不等于\\n跳出循环&amp;#xff0c;第一次c是“A”&amp;#xff0c;不等于\\n就直接跳出循环了&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;ul&gt;&lt;li&gt; &lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中do while语句中的 switch语句使用", ["\n\n", "为啥这里满足了 c 不等于“\\n” 可是c仍然是A而不是\\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里是两个switch(){ case&amp;#xff1a;... }嵌套&amp;#xff0c;代码里switch(b){} 里的break只跳出到switch(b){}外面&amp;#xff0c;但还在switch(a){}的里面&amp;#xff0c;所以如果switch(a){  case 1: ....这句最后没有 break&amp;#xff1b;&amp;#xff0c;它就会去执行case 2&amp;#xff1a;......... 的内容。   &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问如果第一个switch语句", ["请问如果第一个switch语句的case1结尾（标蓝结尾）如果加了一个break，输出就没有", "2", "了", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have to switch on a specific field of the array and not the whole array.&lt;/p&gt;\n\n&lt;p&gt;Try this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//iterate through result and grab each score\nwhile ($row = $result-&amp;gt;fetch_array()){ // place scores into an array\n// use a switch statement to change numbered system to lettered\n    switch($row['score']) {\n        case 10:\n        case 9:\n            array_push($good, $row);\n            break;\n        case 8:\n        case 7:\n            array_push($ok, $row);\n            break;\n        default:\n            array_push($bad, $row);\n\n    } // endswitch\n}\n\nprint_r( $good );\nprint_r( $ok );\nprint_r( $bad );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you have the 3 new arrays each containing the result rows that fall into the 3 categories.&lt;/p&gt;\n\n&lt;p&gt;PS Dont use row[0] syntax, because as soon as you change your select statement and add another field to the front of the field list you will be testing the wrong field in your switch.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用带fetch_array的switch语句", ["\n\n", "Ok, I've created a simple page that allows me to calculate customer satisfaction for the leaders who work in my store. Basically, I have a mysql database that contains the names of all the leaders who work there, along with the dates and time that they work. I also have a database that contains the dates, and times of a customers visit and the rating that they gave their visit. ", "\n\n", "I've created a query that behaves in such that when I query a leader's name, it returns all of the ratings/scores that were submitted by customers on the dates and times that specific leader was working. ", "\n\n", "Customers usually rate their experiences from 1 - 10 with 10 being the best. I wanted to transform those scored responses to a simple lettered system where a score of 9-10 would equal \"G\" for Good, 7-8 would equal \"O\" for ok and anything below 6 would equal \"B\" for bad.", "\n\n", "Using mysqli_fetch_array and a switch statement, I tried to convert the numbers to the letters. However, I don't seem to be getting any results from this. I've tested the query and the fetch_array and if I use them by themselves (without the switch statement), they produce the correct scored responses (ie. Paul's score 10, 9, 9). But when I insert the switch statement, they do not convert to letters and nothing appears on the screen. ", "Question", ": Is there something wrong with the way i'm using this switch statement or mysqli_fetch_array. I'm very new to coding so I may have a misunderstanding of the way these are used.", "\n\n", "here's the php", "\n\n", "<html>\n<body>\n\n\n<?php \n\ninclude(\"db.php\");\n\necho $_POST['searched']; // temp. check to see if post came through\necho '<br>';\n\n$searched = $_POST[\"searched\"]; // create variable to put searched name in query.\n$good = array(); //create array to store good scores\n$ok = array(); //create array to store ok scores\n$bad = array(); //create array to store bad scores\n\n\n// Search the database and retrieve all ratings That matches a managers name\n\n$query = \"SELECT leaders.name, responses.score\n     FROM leaders\n     INNER JOIN responses\n     ON leaders.shift_date = responses.visit_date\n     AND leaders.shift_time = responses.visit_time\n     AND leaders.name = '$searched' ORDER BY leaders.id;\";    \n\n\n$result = $db->query($query); //store that query\n\n//iterate through result and grab each score\nwhile ($row = $result->fetch_array()){ // place scores into an array\n// use a switch statement to change numbered system to lettered\n    switch($row[1]) {\n        case 10:\n        case 9:\n            array_push($good, \"G\");\n        break;\n\n//echo $row[1] . ' '; temp check to ensure array call was successful\necho $good[0] . ' ';\n    }\n}\n//echo \"<script>window.location = 'http://localhost/~baronjon/ilotf/main.php'</script>\";\n\n ?>\n\n</body>\n</html>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;13行&amp;#xff0c;你都break了&amp;#xff0c;还switch也不执行呀&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句这样合并case对吗？", ["在第13行和第35行显示错误，switch语句合并case时怎么合并？需要加什么吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use a dictionary:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def f(x):\n    return {\n        'a': 1,\n        'b': 2,\n    }[x]\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["替换 Python 中的 switch 语句？", ["\n\n", "I want to write a function in Python that returns different fixed values based on the value of an input index.  ", "\n\n", "In other languages I would use a ", "switch", " or ", "case", " statement, but Python does not appear to have a ", "switch", " statement.  What are the recommended Python solutions in this scenario?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Unless I am misunderstanding your process, this is a very DRY / concise way to do it without the verbose &lt;code&gt;switch/case&lt;/code&gt; block:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$os_opts=[\n    'iOS'=&amp;gt;'iOS',\n    'Android'=&amp;gt;'android',\n    'Fire OS'=&amp;gt;'fireos',\n    'Safari'=&amp;gt;'safari',\n    'Chrome'=&amp;gt;'chrome',\n    'Firefox'=&amp;gt;'firefox'\n];\n\n$os=$this-&amp;gt;os;\n$sendPush=false;\nif(isset($os_opts[$os])){                           // deny empty and invalid options\n    $os_opt=\"{$os_opts[$os]}_pastPushSavedID\";     // build string for next two functions\n    if($post-&amp;gt;ID!=get_option($os_opt,$default=false)){\n        update_option($os_opt,$post-&amp;gt;ID,no);\n        $sendPush = true;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;$os_opts&lt;/code&gt; array has keys that match &lt;code&gt;$os&lt;/code&gt;, and values that work with &lt;code&gt;get_option()&lt;/code&gt; &amp;amp; &lt;code&gt;update_option()&lt;/code&gt;.  This will largely reduce code length, and make future modifications very easy to do.&lt;/p&gt;\n\n&lt;p&gt;Since the &lt;code&gt;get_option()&lt;/code&gt; result is only used once, it doesn't make sense to declare it as a variable; just use it in the if condition.&lt;/p&gt;\n\n&lt;p&gt;The first parameter of &lt;code&gt;get_option()&lt;/code&gt; and &lt;code&gt;update_option()&lt;/code&gt; always end with the same substring.  I makes sense to prepend the &lt;code&gt;$os_opts[$os]&lt;/code&gt; value to it and declare it as a variable.  The variable declaration is not &lt;em&gt;necessary&lt;/em&gt; but my personal rule is; if you are going to use data more than once use a variable, if only once don't declare it.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["改进PHP中的switch语句或建议替代解决方法", ["\n\n", "I am trying to improve the below switch statement. What's happening here is that the code is called multiple times based on an x amount of tokens found, so the below code runs once per token.", "\n\n", "If the ", "$post->ID", " is not found then a notification is sent to that token and the id gets added in the database.", "\n\n", "This works however at some point it's stopping after around 40% of tokens checked presumably because the ID is found? Since I am on wordpress, I used the ", "update_option", " to store the id in a table but perhaps an alternative approach can be used?", "\n\n", "$os = $this->os;\nswitch ($os) {\n\n    case \"iOS\":\n        $iOS_pastPushSavedID = get_option( 'iOS_pastPushSavedID',  $default = false);\n        if($post->ID != $iOS_pastPushSavedID) {\n            update_option( 'iOS_pastPushSavedID', $post->ID, no);\n            $sendPush = true;\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $iOS_pastPushSavedID . ' / postID: ' . $post->ID);   \n        } else {\n            //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $iOS_pastPushSavedID . ' / postID: ' . $post->ID); \n            $sendPush = false;\n        }\n    break;\n\n    case \"Android\":\n        $android_pastPushSavedID = get_option( 'android_pastPushSavedID',  $default = false);\n        if($post->ID != $android_pastPushSavedID) {\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $android_pastPushSavedID . ' / postID: ' . $post->ID);\n            update_option( 'android_pastPushSavedID', $post->ID, no);\n            $sendPush = true;           \n        } else {\n            //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $android_pastPushSavedID . ' / postID: ' . $post->ID);\n            $sendPush = false;\n        }\n    break;\n\n    case \"Fire OS\":\n        $fireos_pastPushSavedID = get_option( 'fireos_pastPushSavedID',  $default = false);\n        if($post->ID != $fireos_pastPushSavedID) {\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $fireos_pastPushSavedID . ' / postID: ' . $post->ID);\n            update_option( 'fireos_pastPushSavedID', $post->ID, no);\n            $sendPush = true;           \n        } else {\n            //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $fireos_pastPushSavedID . ' / postID: ' . $post->ID);\n            $sendPush = false;\n        }\n    break;\n\n    case \"Safari\":\n        $safari_pastPushSavedID = get_option( 'safari_pastPushSavedID',  $default = false);\n        if($post->ID != $safari_pastPushSavedID) {\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $safari_pastPushSavedID . ' / postID: ' . $post->ID);\n            update_option( 'safari_pastPushSavedID', $post->ID, no);\n            $sendPush = true;\n\n        } else {\n            //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $safari_pastPushSavedID . ' / postID: ' . $post->ID);\n            $sendPush = false;\n        }\n    break;\n\n    case \"Chrome\":\n        $chrome_pastPushSavedID = get_option( 'chrome_pastPushSavedID',  $default = false);\n        if($post->ID != $chrome_pastPushSavedID) {\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $chrome_pastPushSavedID . ' / postID: ' . $post->ID);\n            update_option( 'chrome_pastPushSavedID', $post->ID, no);\n            $sendPush = true;           \n        } else {\n            //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $chrome_pastPushSavedID . ' / postID: ' . $post->ID);\n            $sendPush = false;\n        }\n    break;\n\n    case \"Firefox\":\n        $firefox_pastPushSavedID = get_option( 'firefox_pastPushSavedID',  $default = false);\n        if($post->ID != $firefox_pastPushSavedID) {\n            //$title = ($os . '_New Push = ' . ' storedID: ' . $firefox_pastPushSavedID . ' / postID: ' . $post->ID);\n            update_option( 'firefox_pastPushSavedID', $post->ID, no);\n            $sendPush = true;\n\n        } else {\n        //$title = ($os . '_Duplicate Push = ' . ' storedID: ' . $firefox_pastPushSavedID . ' / postID: ' . $post->ID);\n            $sendPush = false;\n        }\n    break;\n\n    default:\n        $sendPush = false;\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果是数字字符&amp;#xff0c;应该case &amp;#39;1&amp;#39;&amp;#xff0c;而不是 case 1&lt;br /&gt;&amp;#39;1&amp;#39;是数字字符&amp;#xff0c;1是数值&lt;br /&gt;所以应该是 &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;score&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;:\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Zero&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;One&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n      ......\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句为什么输入数字不对", ["char不是包括了整型变量吗？那为什么我输入数字输出的是other？如果我把char换成int的话输入数字就对了，但输入字母的话又输出的是0错的是怎么回事？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一直执行到break&amp;#xff0c;跳出switch&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/067116289466111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句", ["53题如果switch和下面任何一个case都不匹配，那从第一行的default开始执行，执行完后面的case还执不执行了"]], "Tag": "程序设计"}
{"Answer": "```\r\n printf(\"\\n请选择一个字符:\");\r\n\t//getchar();  你在这里多读了一个字符，所以这一句去掉\r\n\tscanf(\"%c\",&amp;m);\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch这么用对吗，怎么没有语法错误，但是一运行就错误。", ["#include \"stdio.h\"#include#include \"malloc.h\"#define OK 1#define OVERFLOW -1#define ERROR 0#define LIST_INIT_SIZE 100#define LISTINCREMENT  10typedef char ElemType;typedef int Status;typedef struct  {    ElemType  ", "base; ElemType *top;  int stacksize;         }SqStack;Status InitStack(SqStack&S){ S.base=(ElemType", ")malloc(LIST_INIT_SIZE*sizeof(ElemType));S.top=S.base;S.stacksize=LIST_INIT_SIZE;return OK;}  Status StackEmpty(SqStack S)  {      if(S.base==S.top)          return 1;      else          return 0;  }  Status EmpyStack(SqStack S,ElemType e){e=*(S.top-1) ;return OK;}Status Push(SqStack&S,ElemType e){if (S.top-S.base>=S.stacksize){S.base=(ElemType*)realloc(S.base,(S.stacksize+LISTINCREMENT*sizeof(ElemType)));S.top=S.base+S.stacksize;S.stacksize+=LISTINCREMENT;}*S.top++=e;return OK;}Status Pop(SqStack &S,ElemType e){ if(S.top==S.base) return ERROR;e = * --S.top;return OK;}void OutputStack(SqStack &S){ElemType *q;q=S.top-1;for(int i=0;i<S.top-S.base;i++){printf(\"%3d \",*q);q--;}}int main(){ int a,b,c ;char m;char ch[100],*p;int e;  SqStack S;InitStack(S);printf(\"\\n请选择一个字符:\");getchar();scanf(\"%c\",&m);switch(m){case '1': {   printf(\"请输入要进栈的元素个数是:\");scanf(\"%d\",&a);printf(\"\\n请输入要进栈的%d个元素:\",a);for(b=0;b<a;b++) { scanf(\"%d\",&c);Push(S,c); }printf(\"\\n请选择一个字符:\");getchar();scanf(\"%c\",&m); printf(\"\\n输出的栈为:\");OutputStack(S);EmpyStack(S,c); printf(\"\\n栈顶元素为:%d\",c);printf(\"\\n输出的栈为:\");OutputStack(S); Pop(S,c);printf(\"\\n删除的栈顶元素:%d\",c);printf(\"\\n输出的栈为:\");OutputStack(S);printf(\"\\n\");}case '2':    p=ch;      printf(\"输一个含义有()[]{}的括号表达式:\\n\");      gets(ch);      while(*p)      {           switch (*p)          {          case '{':          case '[':          case '(':       Push(S,*p++);break;//只要是左括号就入栈          case '}':          case ']':          case ')':       Pop(S,e);      if ((e=='{' && *p=='}') ||(e=='[' && *p==']') || (e=='(' && *p==')'))      p++;                  else       {printf(\"括号不匹配!\");exit(OVERFLOW);}              break;          default :p++;//其他字符就后移          }      }      if (StackEmpty(S))        printf(\"括号匹配成功\");      else        printf(\"缺少右括号！\");      printf(\"\\n\");      break;}  }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用 (f-1)/10得出来的数&amp;#xff0c;作为case 后面的值&lt;br /&gt;switch( (f-1)/10)&lt;br /&gt;{case 0:i&amp;#61;0;break;&lt;br /&gt;case 1:i&amp;#61;f * 0.01;break;&lt;br /&gt;case 2:&lt;br /&gt;case 3:i&amp;#61;f * 0.02;break;&lt;br /&gt;.......................}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个怎么改成switch语句呀", ["\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n if(s&lt;0)\r\n    {\r\n        do\r\n        s=s+7;\r\n        while(s&gt;0);\r\n    }\r\n当s&lt;0的时候，做一次s+7，之后如果还小于0，就不循环了。\r\n\r\n    if(s&gt;7)\r\n    {\r\n        do\r\n        s=s-7;\r\n        while(s&lt;7);\r\n    }\r\n当s&gt;7（同时小于14）的时候，s减掉7，那么循环成立了，于是就拼命减，负数也满足&lt;7，直到下溢。\r\nif(c=0)\r\n=和==号也没分清楚。\r\n\r\n总之不谈你程序的问题，基本语法都不会\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["明明有赋值语句啊，为什么s还是乱码？（C语言新手求指导）", ["#include", "\n#include", "\nvoid main(void)", "\n{", "\n    int a,b,c,d,e,s=0;", "\n    printf(\"请输入要查询的年份：\");", "\n    scanf(\"%d\",&a);", "\n    b=2020-a;", "\n    c=b%4;", "\n    d=b/4;", "\n    e=365*3*d+366*d;", "\n\n", "if(b!=0)\n{\n    if(c!=0)\n    {\n        s=(7+b*(356%7));\n    if(s<0)\n    {\n        do\n        s=s+7;\n        while(s>0);\n    }\n    if(s>7)\n    {\n        do\n        s=s-7;\n        while(s<7);\n    }\n    }\n    if(c=0)\n    {\n        s=7+(e%7);\n        if(s<0)\n    {\n        do\n        s=s+7;\n        while(s>0);\n    }\n    if(s>7)\n    {\n        do\n        s=s-7;\n        while(s<7);\n    }\n    }\n\n    switch(s)\n        {\n            case 1:printf(\"%d年的3月1日是星期一\\n\",a);break;\n                case 2:printf(\"%d年的3月1日是星期二\\n\",a);break;\n                    case 3:printf(\"%d年的3月1日是星期三\\n\",a);break;\n                        case 4:printf(\"%d年的3月1日是星期四\\n\",a);break;\n                                case 5:printf(\"%d年的3月1日是星期五\\n\",a);break;\n                                    case 6:printf(\"%d年的3月1日是星期六\\n\",a);break;\n                                        case 7:printf(\"%d年的3月1日是星期日\\n\",a);break;\n    }\n}\n\nelse\nprintf(\"今年的3月1日是星期日\\n\");\nsystem(\"pause\");\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;public class Number {&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    public static void main(String[] args) {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        int number &amp;#61; 0,d1,d2,d3,d4,d5;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        Scanner reader &amp;#61; new Scanner(System.in);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        System.out.println(&amp;#34;输入一个1-99999之间的数&amp;#xff1a;&amp;#34;);&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;   &lt;span class=\"hljs-built_in\"&gt; number&lt;/span&gt; &amp;#61; reader.nextInt();\n\n    d5 &amp;#61;&lt;span class=\"hljs-built_in\"&gt; number&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;;\n    d4 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n    d3 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    d2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    d1 &amp;#61;&lt;span class=\"hljs-built_in\"&gt; number&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n\n    int length &amp;#61; String.valueOf(Math&lt;span class=\"hljs-built_in\"&gt;.abs&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt;)).length();\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (String.valueOf&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt;).length()){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:{\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                    System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n                    break;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是1位数&amp;#34;&lt;/span&gt;);\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是回文数&amp;#34;&lt;/span&gt;);\n            }\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:{\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (length){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                    System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n                    break;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是2位数&amp;#34;&lt;/span&gt;);\n                    System.out.println((d2 &amp;#61;&amp;#61; d1)?&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是回文数&amp;#34;&lt;/span&gt;):number &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文数&amp;#34;&lt;/span&gt;);\n            }\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:{\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (length){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                    System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n                    break;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是3位数&amp;#34;&lt;/span&gt;);\n                    System.out.println((d3 &amp;#61;&amp;#61; d1)?&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是回文数&amp;#34;&lt;/span&gt;):number &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文数&amp;#34;&lt;/span&gt;);\n            }\n            break;\n        } &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:{\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (length){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                    System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n                    break;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是4位数&amp;#34;&lt;/span&gt;);\n                    System.out.println((d4&amp;#61;&amp;#61;d1&amp;amp;&amp;amp;d3&amp;#61;&amp;#61;d2)?&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是回文数&amp;#34;&lt;/span&gt;):number &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文数&amp;#34;&lt;/span&gt;);\n            }\n            break;\n        } &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:{\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (length){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                    System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n                    break;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                    System.out.println&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是5位数&amp;#34;&lt;/span&gt;);\n                    System.out.println((d5&amp;#61;&amp;#61;d1&amp;amp;&amp;amp;d4&amp;#61;&amp;#61;d2)?&lt;span class=\"hljs-built_in\"&gt;(number&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;是回文数&amp;#34;&lt;/span&gt;):number &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文数&amp;#34;&lt;/span&gt;);\n            }\n            break;\n        }\n        default:{\n            System.out.printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n %d 不在1-99999之间&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;,number&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["if else语句怎么换switch语句", ["eclipse里，if else语句换eclipse语句，求哥大带带", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 末尾要加个break&amp;#xff0c;不然会一直往下执行。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么执行以后当i=1时case2的语句的也会被执行", ["为什么执行以后当i=1时case2的语句的也会被执行", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "void", " ", "main", "()", "\n", "{     ", "int", "    i;\n    ", "for", "(i=", "0", ";i<", "3", ";i++)\n        ", "switch", "(i)\n        {    ", "case", "    ", "1", ":    ", "printf", "(", "\"%d\"", ",i);\n            ", "case", "    ", "2", ":    ", "printf", "(", "\"%d\"", ",i);\n            ", "default", ":    ", "printf", "(", "\"%d\"", ",i);\n        }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Switch statements with &lt;code&gt;String&lt;/code&gt; cases have been implemented in &lt;a href=\"http://openjdk.java.net/projects/jdk7/features/\" rel=\"noreferrer\"&gt;Java SE 7&lt;/a&gt;, at least 16 years &lt;a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=1223179\" rel=\"noreferrer\"&gt;after they were first requested.&lt;/a&gt; A clear reason for the delay was not provided, but it likely had to do with performance.&lt;/p&gt;\n\n&lt;h2&gt;Implementation in JDK 7&lt;/h2&gt;\n\n&lt;p&gt;The feature has now been implemented in &lt;code&gt;javac&lt;/code&gt; &lt;a href=\"http://blogs.oracle.com/darcy/entry/project_coin_string_switch_anatomy\" rel=\"noreferrer\"&gt;with a \"de-sugaring\" process;&lt;/a&gt; a clean, high-level syntax using &lt;code&gt;String&lt;/code&gt; constants in &lt;code&gt;case&lt;/code&gt; declarations is expanded at compile-time into more complex code following a pattern. The resulting code uses JVM instructions that have always existed.&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; with &lt;code&gt;String&lt;/code&gt; cases is translated into two switches during compilation. The first maps each string to a unique integer—its position in the original switch. This is done by first switching on the hash code of the label. The corresponding case is an &lt;code&gt;if&lt;/code&gt; statement that tests string equality; if there are collisions on the hash, the test is a cascading &lt;code&gt;if-else-if&lt;/code&gt;. The second switch mirrors that in the original source code, but substitutes the case labels with their corresponding positions. This two-step process makes it easy to preserve the flow control of the original switch.&lt;/p&gt;\n\n&lt;h2&gt;Switches in the JVM&lt;/h2&gt;\n\n&lt;p&gt;For more technical depth on &lt;code&gt;switch&lt;/code&gt;, you can refer to the JVM Specification, where the &lt;a href=\"http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10\" rel=\"noreferrer\"&gt;compilation of switch statements&lt;/a&gt; is described. In a nutshell, there are two different JVM instructions that can be used for a switch, depending on the sparsity of the constants used by the cases. Both depend on using integer constants for each case to execute efficiently. &lt;/p&gt;\n\n&lt;p&gt;If the constants are dense, they are used as an index (after subtracting the lowest value) into a table of instruction pointers—the &lt;code&gt;tableswitch&lt;/code&gt; instruction. &lt;/p&gt;\n\n&lt;p&gt;If the constants are sparse, a binary search for the correct case is performed—the &lt;code&gt;lookupswitch&lt;/code&gt; instruction. &lt;/p&gt;\n\n&lt;p&gt;In de-sugaring a &lt;code&gt;switch&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; objects, both instructions are likely to be used. The &lt;code&gt;lookupswitch&lt;/code&gt; is suitable for the first switch on hash codes to find the original position of the case. The resulting ordinal is a natural fit for a &lt;code&gt;tableswitch&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Both instructions require the integer constants assigned to each case to be sorted at compile time. At runtime, while the &lt;code&gt;O(1)&lt;/code&gt; performance of &lt;code&gt;tableswitch&lt;/code&gt; generally appears better than the &lt;code&gt;O(log(n))&lt;/code&gt; performance of &lt;code&gt;lookupswitch&lt;/code&gt;, it requires some analysis to determine whether the table is dense enough to justify the space–time tradeoff. Bill Venners wrote &lt;a href=\"http://www.artima.com/underthehood/flowP.html\" rel=\"noreferrer\"&gt;a great article&lt;/a&gt; that covers this in more detail, along with an under-the-hood look at other Java flow control instructions.&lt;/p&gt;\n\n&lt;h2&gt;Before JDK 7&lt;/h2&gt;\n\n&lt;p&gt;Prior to JDK 7, &lt;code&gt;enum&lt;/code&gt; could approximate a &lt;code&gt;String&lt;/code&gt;-based switch. This uses &lt;a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9.3\" rel=\"noreferrer\"&gt;the static &lt;code&gt;valueOf&lt;/code&gt;&lt;/a&gt; method generated by the compiler on every &lt;code&gt;enum&lt;/code&gt; type. For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Pill p = Pill.valueOf(str);\nswitch(p) {\n  case RED:  pop();  break;\n  case BLUE: push(); break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不能在 String 上使用 switch 语句？", ["\n\n", "Is this functionality going to be put into a later Java version?", "\n\n", "Can someone explain why I can't do this, as in, the technical way Java's ", "switch", " statement works?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/338206/why-cant-i-use-switch-statement-on-a-string"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的stay是传值运算&amp;#xff0c;stay中的操作对外面的数据没有影响&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void stay(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; *y) \n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(*x&amp;gt;*y) \n    {\n        &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;&amp;#61;*x;\n        *x&amp;#61;*y;\n        *y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;main函数中使用的时候&amp;#xff0c;方法如下&amp;#xff1a;&lt;br /&gt;stay(&amp;amp;b,&amp;amp;c);&lt;br /&gt;stay(&amp;amp;a,&amp;amp;c);&lt;br /&gt;stay(&amp;amp;a,&amp;amp;b);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["输入三个整数，要求按照从小到大的顺序输出", ["我是想写一个void类型的字程序。但是不知道哪里有问题，萌新求大佬帮忙解答！", "\n", "\n", "#", "include", "<stdio.h>", "\n", "void", " ", "stay", "(", "int", " x,", "int", " y)", ";\n", "int", " ", "main", "()", " ", "{\n    ", "int", " a, b, c;\n    ", "scanf", "(", "\"%d %d %d\"", ", &a, &b, &c);\n    ", "stay", "(b,c);\n    ", "stay", "(a,c);\n    ", "stay", "(a,b);\n    ", "printf", "(", "\"%d%d%d\"", ",a,b,c);\n    ", "return", " ", "0", ";\n}\n", "void", " ", "stay", "(", "int", " x,", "int", " y)", " ", "{\n    ", "int", " t;\n    ", "if", "(x>y) {\n        t=x;\n        x=y;\n        y=t;\n    }\n    ", "return", " ;\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For any variables that contain the same value why use a switch at all?  Just define those variables before the switch statement.  Use the switch statement only for variables that contains different values.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;In that case there is no reason why you can't use 2 switch statements, like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch(strtolower($name))\n{\ncase \"dog\":\n    $pic = \"/images/itscute.jpg\";\n    break;\ncase \"cat\":\n    $pic = \"/images/cat.jpg\";\n    break;\ncase \"bird\":\n    $pic = \"/images/bird.jpg\";\n    break;\n}\nswitch(strtolower($name))\n{\ncase \"dog\":\ncase \"cat\":\n    $info = \"four legs\";\n    break;\ncase \"bird\":\n    $info = \"two legs\";\n    break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I do recommend that you use strtolower(), like my example shows, to avoid any case problems.  You can use any number of switch statements as you need.\nAs for turning \"dog\" into \"Dog's\" just add the \"'s\" to the variable, like this:\n&lt;code&gt;$name = ucwords($name . \"'s\");&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["SWITCH语句两种情况相同且条件不同的情况", ["\n\n", "Hi I wonder if this could be done in switch case. Here's the example code I wanna do", "\n\n", "switch($name)\ncase \"Dog\":\n    $pic = \"/images/itscute.jpg\";\n    $info =\"four legs\";\n    break;\ncase \"Cat\":\n    $pic = \"/images/cat.jpg\";\n    $info =\"four legs\";\n    break;\ncase \"bird\":\n    $pic = \"/images/bird.jpg\";\n    $info = \"two legs\";\n    break;\n", "\n\n", "Now you can see that both of dog and cat have the same value of $info.\nDoes it possible for me to make $info only one for both of them like this", "\n\n", "switch($name)\ncase \"Dog\":\ncase \"Cat\":\n    $info =\"four legs\";\n    break;\ncase \"bird\":\n    $info = \"two legs\";\n    break;\n", "\n\n", "then again I don't know how to place the $pic if the code like this.", "\n\n", "EDIT : $pic at dog is not \"/images/dog.jpg\";", "\n\n", "EDIT2 : added more case to be more clear question", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use an &lt;a href=\"http://php.net/manual/en/control-structures.if.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;if&lt;/code&gt; statement&lt;/a&gt; to check if the variable is set. If not, set &lt;code&gt;$item&lt;/code&gt; to a default value.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (isset($_GET['item'])) {\n    $item = $_GET['item'];\n} else {\n    $item = 'content1';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, there doesn't seem to be a need for the &lt;code&gt;switch/case&lt;/code&gt; statement, since every case is identical except for what you're using as the &lt;code&gt;explode&lt;/code&gt; delimiter.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$delimiter = '&amp;lt;div id=\"' . $item . '\"&amp;gt;';\n$start = explode($delimiter, $content);\n$end = explode(\"&amp;lt;/div&amp;gt;\", $start[ 1 ] );\necho $end[0];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It would probably be better to use &lt;code&gt;DOMDocument&lt;/code&gt; and &lt;code&gt;DOMXPath&lt;/code&gt; instead of string matching to parse your content.&lt;/p&gt;\n\n&lt;p&gt;You could also use the &lt;a href=\"https://stackoverflow.com/questions/1506527/\"&gt;shorthand if statement&lt;/a&gt; for this if you want to get really fancy.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP使用switch语句从DIV中提取内容", ["\n\n", "I've set up a section on my site, to switch out content, based on the DIV ID called, but the initial \"value\" results in an error, if the variable isn't in the url.", "\n\n", "the error i get:", "Undefined index: item", "\n\n", "item is my variable.", "\n\n", "My PHP is this:", "\n\n", "<?php\n    $url = 'file.php';\n    $content = file_get_contents( $url );\n\n\n    $item = $_GET[ 'item' ];\n    switch ( $item ) {\n        case \"content1\":\n            $start = explode( '<div id=\"content1\">', $content );\n            $end = explode( \"</div>\", $start[ 1 ] );\n            echo $end[ 0 ];\n            break;\n\n        case \"content2\":\n            $start = explode( '<div id=\"content2\">', $content );\n            $end = explode( \"</div>\", $start[ 1 ] );\n            echo $end[ 0 ];\n            break;\n\n        case \"content3\":\n            $start = explode( '<div id=\"content3\">', $content );\n            $end = explode( \"</div>\", $start[ 1 ] );\n            echo $end[ 0 ];\n            break;\n\n        default:\n            $start = explode( '<div id=\"content1\">', $content );\n            $end = explode( \"</div>\", $start[ 1 ] );\n            echo $end[ 0 ];\n    }?>\n", "\n\n", "So the code works fine if I append ", "?item=content1", " at the end of my url, however, on initial visit (without the ", "?item=", " at the end) i get the above error ( ", "Undefined index: item", ")", "\n\n", "What can I do so that if someone visits say index.php I won't get the error, and throw up the default called content?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'd suggest you add a &lt;code&gt;default&lt;/code&gt;, in case &lt;code&gt;$feed&lt;/code&gt; is something other than &lt;code&gt;full&lt;/code&gt; or &lt;code&gt;incremental&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If this is your actual code, I am not sure if there is a file called &lt;code&gt;path-to-json-feed&lt;/code&gt;, but it seems like it should be something else, like the actual path to a JSON file/feed.&lt;/p&gt;\n\n&lt;p&gt;Replace &lt;code&gt;path-to-json-feed&lt;/code&gt; with an actual file, and try with the below code and see what you get.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function store($feed) \n{\n    switch($feed)\n    {\n        case 'full':\n            $coupons = json_decode(file_get_contents('path-to-json-feed'), true);\n            break;\n        case 'incremental':\n            $coupons = json_decode(file_get_contents('path-to-json-feed'), true);\n            break;\n        default:\n            $coupons = json_decode(file_get_contents('path-to-json-feed'), true);\n            break;\n     }\n    var_dump($coupons);\n    die(); // DEBUGGING\n    $this-&amp;gt;Deal_model-&amp;gt;updateAllDeals($coupons);\n    echo 'Coupons Updated';     \n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在switch语句PHP之外分配的变量为空", ["\n\n", "public function store($feed) \n    {\n        switch($feed)\n        {\n            case 'full':\n                $coupons = json_decode(file_get_contents('path-to-json-feed'), true);\n                break;\n            case 'incremental':\n                $coupons = json_decode(file_get_contents('path-to-different-json-feed'), true);\n                break;\n         }\n        var_dump($coupons);die();\n        $this->Deal_model->updateAllDeals($coupons);\n        echo 'Coupons Updated';     \n    }\n", "\n\n", "I am trying to assign a value to ", "$coupons", " but ", "var_dump($coupons)", " returns an empty array.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're posting to all 3 pages, then setting the value of what it returns to $ar1 $ar2 and $ar3.&lt;/p&gt;\n\n&lt;p&gt;Store your options in an array, then call &lt;code&gt;post_to_url()&lt;/code&gt; once.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$urls = array(\n    array(\"http://examplesite1.com/cgi-bin/maxuseradmin.cgi\", $data2),\n    array(\"http://examplesite2?fid=6646588e54\", $data3),\n    array(\"http://examplesite1?fid=2fb44e3888\", $data4)\n);\n\n$x = rand(0,2);\npost_to_url ($urls[$x][0], $urls[$x][1]);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用PHP Switch语句将表单数据发送到随机URL", ["\n\n", "So i am trying to wrap my head around this logic. this is code that is on a form processing script. What i want to do is send form data to one of these urls randomly. I was reading to use the switch case logic, but when i use the code you see below, it submits the form data to all 3 URLS. Is there a way so that it only sends to one of them?", "\n\n", "function post_to_url($url, $data) {\n$fields = '';\nforeach($data as $key => $value) { \n  $fields .= $key . '=' . $value . '&'; \n}\nrtrim($fields, '&');\n\n$post = curl_init();\n\ncurl_setopt($post, CURLOPT_URL, $url);\ncurl_setopt($post, CURLOPT_POST, 1);\ncurl_setopt($post, CURLOPT_POSTFIELDS, $fields);\n\n\n$result = curl_exec($post);\n\ncurl_close($post);\n}\n\n\n\nreturn $result;\n\n$x = rand(1,3);\n\nswitch ($x) {\n    case 1:\n        post_to_url(\"http://examplesite1.com/cgi-bin/maxuseradmin.cgi\", $data2);\n        break;\n\n    case 2:\n        post_to_url(\"http://examplesite2?fid=6646588e54\", $data3);\n        break;\n\n    case 3:\n        post_to_url(\"http://examplesite1?fid=2fb44e3888\", $data4);\n        break;\n    }\n", "\n\n", "the $data variables are arrays --Thanks for the help", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can try something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (true) {\n    case ($i ==0):\n        echo '$i ==0';\n        break;\n    case ($i &amp;lt; 1):\n        echo '$i &amp;lt; 1';\n        break;\n    case ($i &amp;gt; 1):\n        echo '$i &amp;gt; 1';\n        break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For your case:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (true) {\n    case ($_GET[\"badge\"] &amp;amp;&amp;amp; $_GET[\"class\"]):\n        echo 'Badge and Class';\n        break;\n    case ($_GET[\"badge\"] &amp;amp;&amp;amp; !$_GET[\"class\"]):\n        echo 'Badge Only';\n        break;\n    case (!$_GET[\"badge\"] &amp;amp;&amp;amp; $_GET[\"class\"]):\n        echo 'Class only';\n        break;\n    default:\n        echo \"No badge or class\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["带有$ _GET变量的PHP switch语句", ["\n\n", "Pages such as this: ", "PHP switch case $_GET's variables and switch case $_GET's variable's values", " and others have helped, but I am at a loss as to why my switch statment does not work.", "\n\n", "A user may be directed to my page with ", "index.php?class=className&badge=badgeName", " or ", "index.php?class=className", " or ", "index.php?badge=badgeName", " or just plain old ", "index.php", "\n\n", "This code works just fine", "\n\n", "if ($_GET[\"badge\"] && $_GET[\"class\"]) {\necho 'Badge and Class'; \n} elseif ($_GET[\"badge\"] && !$_GET[\"class\"]) {\necho 'Badge only';   \n} elseif (!$_GET[\"badge\"] && $_GET[\"class\"]) {\necho 'Class only';  \n} else {\necho 'No variables';    \n} \n", "\n\n", "But I was trying to simplify with a switch statement, whereby all works well except for the default case:", "\n\n", "switch ($_GET) {\n    case $_GET[\"badge\"] && $_GET[\"class\"]:\n        echo 'Badge and Class';\n        break;\n    case $_GET[\"badge\"] && !$_GET[\"class\"]:\n        echo 'Badge Only';\n        break;\n    case !$_GET[\"badge\"] && $_GET[\"class\"]:\n        echo 'Class only';\n        break;\n    default:\n        echo \"No badge or class\";\n}\n", "\n\n", "Any help appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;x&amp;#61;5 先执行default的语句printf(&amp;#34;%d&amp;#34;, x);输出一个5&lt;br /&gt;因为default语句之后没有break跳出switch,  会继续执行case 1:之后的代码printf(&amp;#34;%d&amp;#34;, x);又输出一个5, 直到执行break才跳出switch&lt;/p&gt;\n&lt;p&gt;default:printf(&amp;#34;%d&amp;#34;, x); 之后要加上  break; 跳出switch,  就不会继续执行case 1:之后的代码了&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言的switch语句", ["\n", "第三题是这么输出55的default语句是case语句都不成立的时候会一直加一直到case成立吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你输入不对啊&amp;#xff0c;每个输入之间用换行或者空格。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java中switch语句和方法调用实现计算器的基本功能", ["\npackage test;\nimport java.util.Scanner;\npublic class calculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入：\");\n        while (scanner.hasNextDouble()) {\n            double sum = 0;\n            double i = scanner.nextDouble();\n            double j = scanner.nextDouble();\n            char name = scanner.next().charAt(0);\n            switch (name) {\n                case '+':\n                    add(i, j);\n                    break;\n                case '*':\n                    multiply(i, j);\n                    break;\n                case '-':\n                    minus(i, j);\n                    break;\n                case '/':\n                    if (j == 0) {\n                        System.out.println(\"0不能被除\");\n                        break;\n                    } else\n                        divide(i, j);\n                    break;\n                default:\n                    System.out.println(\"啥也不是!\");\n                    break;\n            }\n            System.out.println(\"输入任意字母退出\");\n        }\n        scanner.close();\n    }\n        public static void add(double i,double j) {\n        double sum = i + j;\n        System.out.println(\"你所计算的结果为\" + sum);\n    }\n    public static void multiply(double i,double j){\n        double sum = i * j;\n        System.out.println(\"你所计算的结果为\" + sum);\n    }\n    public static void divide(double i, double j){\n       double sum = i / j;\n        System.out.println(\"你所计算的结果为\" + sum);\n    }\n    public static void minus(double i, double j){\n        double sum = i - j;\n        System.out.println(\"你所计算的结果为\" + sum);\n    }\n}", "\n\n", "这是我的代码", "\n\n", "\n\n", "运行结果只能输入 没有输出结果", "\n\n", " ", "\n\n", "求大佬解答", "\n\n", "我是萌新 "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The reason for this behavior, in the current Go, is that the &lt;code&gt;switch&lt;/code&gt; is implemented like an &lt;code&gt;if-else-if&lt;/code&gt;.  Obviously, &lt;code&gt;if (1) else if (1)&lt;/code&gt; doesn't make sense, thus you get this error.&lt;/p&gt;\n\n&lt;p&gt;Right now, there is no way to force the compiler to do this.  You have to rewrite your statements to get the effect you want.&lt;/p&gt;\n\n&lt;p&gt;Per &lt;a href=\"https://code.google.com/p/go/issues/detail?id=4524#c7\" rel=\"nofollow\"&gt;this bug report comment supposedly quoting Rob Pike&lt;/a&gt;, this restriction will be lifted in a future Go version. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Go-switch语句中的重复大小写", ["\n\n", "I am new to ", "Go", ", and while attempting to remove some duplicate code across switch statements I added a case with ", "fallthrough", " like so:", "\n\n", "i := 1\nswitch i {\ncase 0, 1:\n    fmt.Println(\"common code\")\n    fallthrough\ncase 0:\n    fmt.Println(\"aux for 0\")\ncase 1:\n    fmt.Println(\"aux for 1\")\ndefault:\n    fmt.Println(\"other number\")\n\n}\n", "\n\n", "However, I received an error about the duplicate cases such as:", "\n\n", "prog.go:13: duplicate case 0 in switch\n    previous case at prog.go:10\nprog.go:15: duplicate case 1 in switch\n    previous case at prog.go:10\n", "\n\n", "Why is this an error? Is there some way to instruct the compiler to allow such code?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个表达式的结果只能是整型。当然整型是一个泛泛的概念&amp;#xff0c;包括基础整型&amp;#xff0c;如int ,short,long,long long等&amp;#xff0c;也包括char&amp;#xff0c;枚举等类型&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["课后练习,请用switch语句完成,最好有注释", ["\n", "我想用switch语句,但是只留了预习,还没有讲过,不会做,最好有注释,switch(表达式),这个表达式有啥规定吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;is_int($x)&lt;/code&gt; does not evaluate to true if x is an array.  This works because &lt;code&gt;array('one', 'two')&lt;/code&gt; is considered true, and &lt;code&gt;is_array()&lt;/code&gt; will evaluate to true.  This means it does not match &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;is_int($x)&lt;/code&gt; (the latter comes out to false).  If it's an int, then the opposite is true and &lt;code&gt;is_array($x)&lt;/code&gt; becomes false.  If &lt;code&gt;$x&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, it evaluates to &lt;code&gt;false&lt;/code&gt;, as does &lt;code&gt;null&lt;/code&gt; in the switch.  The &lt;code&gt;null&lt;/code&gt; case will be executed for any circumstance where &lt;code&gt;$x&lt;/code&gt; is false (try it with &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;array()&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and others).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP Switch语句：这是正确的吗？", ["\n\n", "I've taken a look at the documentation for switch on php.net and as best as I can tell it checks a equality comparison between the variable in the switch and the case. However, the following code seems to work properly for all possible values (int, null, array, other):", "\n\n", "$x = array('one','two');\n\nswitch ($x) {\n   case null:\n      echo \"is null!\";\n      break;\n   case is_int($x):\n       echo \"is int\";\n       break;\n   case is_array($x):\n      echo \"is array!\";\n      break;\n   default:\n      echo \"something else!\";\n      break;\n}\n", "\n\n", "From what I read, it should be comparing is_int($a) [true] to $x [an array, which evaluates to true] and giving an incorrect result.", "\n\n", "My question is ... why is this actually working?", "\n\n", "EDIT: sorry I had not copied it quite correctly as I'd been messing about with it. Its now in its working form", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch要打花括号&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["大一，有点不清楚那个switch语句哪里有问题", ["\n", "\n", "这个case那里为啥有问题，感觉没毛病，准大一，有点不清楚switch语句，顺便帮忙看一下代码其他地方对不对，多谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意数据类型 int char&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于switch语句中出现的问题", ["\n", "在运行框内输入A却什么也没显示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不可以直接case1| |case2&lt;br /&gt;你想case1和case2输出一样的话可以这样写&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-symbol\"&gt;case1:&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;case2:&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;!&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n这样&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;和&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;都是输出!\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch语句时能用与或非吗？", ["如果一个case1一个case2地打，要打多久呀", "我想用（case1| |case2）：这种形式可以吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;So I found the solution myself after a while...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;I had to update the Extension where the file with the error comes from.&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["TYPO3 PHP更新到7.0 | 日志说“Switch语句可能只包含一个默认子句”", ["\n\n", "I want to update PHP from 5.6 to 7.0 but I get a 500 HTML Error and in the logs it says: ", "\n\n", "[Mon Oct 22 09:42:14 2018] [-:error] [pid 12784] [client 5.158.158.123] [host www.mydomain.de] PHP Fatal error:  Switch statements may only contain one default clause in /is/htdocs/wp12731216_QEO0DONMD6/www/typo3conf/ext/dam/lib/class.tx_dam_db.php on line 547\n", "\n\n", "So I looked into the file and found as it says a dublicate default: statement:", "\n\n", "if ($appendType = $TCA['tx_dam']['columns'][$field]['config']['appendType']) {\n    $appended = true;\n    switch($appendType) {\n        case 'space':\n            $rowUpdate[$field] = trim($row[$field].' '.$value);\n            break;\n        case 'newline':\n            $rowUpdate[$field] = $row[$field].($row[$field]?\"\n\":'').$value;\n            break;\n        case 'comma':\n            $rowUpdate[$field] = $row[$field].($row[$field]?', ':'').$value;\n            break;\n        case 'charDef':\n            default:\n            list($type, $appendChar) = explode(':', $appendType);\n            $rowUpdate[$field] = $appendChar.$value;\n            break;\n        default:\n            $appended = false;\n            break;\n    }\n}\n", "\n\n", "So my Question is, is there a solution? Can I just edit this file and remove the last default statement? Or should I update to a different PHP Version?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;Case&lt;/code&gt; statements are only &lt;strong&gt;labels&lt;/strong&gt;. This means the compiler will interpret this as a jump directly to the label. In C++, the problem here is one of scope. Your curly brackets define the scope as everything inside the &lt;code&gt;switch&lt;/code&gt; statement. This means that you are left with a scope where a jump will be performed further into the code skipping the initialization. The correct way to handle this is to define a scope specific to that &lt;code&gt;case&lt;/code&gt; statement and define your variable within it. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (val)\n{   \ncase VAL:  \n{\n  // This will work\n  int newVal = 42;  \n  break;\n}\ncase ANOTHER_VAL:  \n...\nbreak;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不能在 switch 语句中声明变量？", ["\n\n", "I've always wondered this - why can't you declare variables after a case label in a switch statement?  In C++ you can declare variables pretty much anywhere (and declaring them close to first use is obviously a good thing) but the following still won't work:", "\n\n", "switch (val)  \n{  \ncase VAL:  \n  // This won't work\n  int newVal = 42;  \n  break;\ncase ANOTHER_VAL:  \n  ...\n  break;\n}  \n", "\n\n", "The above gives me the following error (MSC):", "\n\n", "\n  ", "initialization of 'newVal' is skipped by 'case' label", "\n", "\n\n", "This seems to be a limitation in other languages too.  Why is this such a problem?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/92396/why-cant-variables-be-declared-in-a-switch-statement"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Even though you could figure it out yourself by reading the &lt;a href=\"https://golang.org/ref/spec#Switch_statements\" rel=\"noreferrer\"&gt;doc&lt;/a&gt; here is what you should write:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch a.Type {\ncase \"v1\":\n    // ...\n    // no need to 'break' in go\ncase \"v2\":\n    // ...\ndefault:\n    // usual 'else' clause statements\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Golang switch语句", ["\n\n", "I am new to golang and switched from python to golang. How can I convert this if else statement in a \"switch\"", "\n\n", "type Client struct {\n    Type  string `json:\"type\"`\n} \n", "\n\n", "Then I am initializing this struct like this:", "\n\n", "a:= Client{\"v1\"}\n\nif a.Type == \"v1\" {\n    if err := apiClient.v1(\"I am version one\"); err != nil {\n        log.Printf(\" Error: Sending type v1\")\n        return err\n    }\n} else if a.Type == \"v2\" {\n    if err := apiClient.v2(\"I am version 2\"); err != nil {\n        log.Printf(\" Error: Sending type v2\n\")\n        return err\n    }\n}  else {\n        return errors.New(fmt.Sprintf(\" Error: Invalid mertype...This Type\"))\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could see the source code of &lt;code&gt;ParseBool&lt;/code&gt; &lt;a href=\"https://golang.org/src/strconv/atob.go?s=351:391#L1\" rel=\"nofollow noreferrer\"&gt;here&lt;/a&gt;. It uses switch too but with more cases. If the compiler inlines its code it, speed should be very similar to your code. If you want a definite answer you should benchmark different cases.&lt;/p&gt;\n\n&lt;p&gt;In general I discourage you from paying attention to this small details. It's just matter of some nano seconds but it make your codes more difficult to understand. Begin optimizations with profiling your code to find hotspots that take a lot of time and fix them.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["将参数解析为布尔值或仅在switch语句中使用字符串", ["\n\n", "I'm coming across a few situations where I would like to use routing to change some ", "Is_Active", " fields in my database but I'm curious about performance.", "\n\n", "Let's have a route handler as so:", "\n\n", "func testHandler(r *mux.Router) {\n    r.HandleFunc(\"/test/{status}\" statusHandler).Methods(\"GET\")\n}\n", "\n\n", "Now that parameter will only ever be 0 or 1, unless the user tries something else but either way nothing will happen unless it's  0 or 1. My question is, is it faster to parse the string into a boolean which would involve bringing in the ", "strconv", " package or would it be faster to just do a switch on the string?", "\n\n", "Example of both:", "\n\n", "func statusHandler(w http.ResponseWriter, r *http.Request) {\n    v := mux.Vars(r)\n    active, err := strconv.ParseBool(v[\"status\"])\n    // Handle err\n\n    if active {\n      // Do something\n    } else {\n      // Do something else\n    }\n}\n", "\n\n", "or", "\n\n", "func statusHandler(w http.ResponseWriter, r *http.Request) {\n    v := mux.Vars(r)\n\n    switch v[\"status\"] {\n        case \"0\":\n            // Do something\n        case \"1\":\n            // Do something else\n        default:\n            // Throw 500 Error\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 8后面少了个break;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["SWITCH语句问题", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "\n", "为什么输入什么输出的都只有一个最后一行的输入错误啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/724568316056150.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;单词错了&amp;#xff0c;是default&amp;#xff0c;望采纳&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言中switch语句一些细节", ["\n", "为什么输入switch语句的其他值default语句不执行", "\n", "\n", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "float", " arr[", "5", "]={", "3.00", ",", "2.50", ",", "4.10", ",", "10.20", "};\n    ", "int", " flag=", "0", ",m;\n    ", "printf", "(", "\"[1] apple\\n\"", ");\n    ", "printf", "(", "\"[2] pear\\n\"", ");\n    ", "printf", "(", "\"[3] orange\\n\"", ");\n    ", "printf", "(", "\"[4] grape\\n\"", ");\n    ", "printf", "(", "\"[0] exit\\n\"", ");\n    ", "for", "(", "int", " i=", "0", ";i<", "5", ";i++)\n    {\n        ", "scanf", "(", "\"%d\"", ",&m);\n        ", "switch", "(m)\n        {\n            ", "case", " ", "1", ":", "printf", "(", "\"price = %.2f\\n\"", ",arr[m", "-1", "]);", "break", ";\n            ", "case", " ", "2", ":", "printf", "(", "\"price = %.2f\\n\"", ",arr[m", "-1", "]);", "break", ";\n            ", "case", " ", "3", ":", "printf", "(", "\"price = %.2f\\n\"", ",arr[m", "-1", "]);", "break", ";\n            ", "case", " ", "4", ":", "printf", "(", "\"price = %.2f\\n\"", ",arr[m", "-1", "]);", "break", ";\n            ", "case", " ", "0", ":flag=", "1", ";", "break", ";\n            defalut :", "printf", "(", "\"price = 0.00\\n\"", ");\n                \n        }\n        ", "if", "(flag==", "1", ")\n        {\n            ", "break", ";\n        }\n    }\n    \n    \n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you want to keep using &lt;code&gt;switch&lt;/code&gt;, you'll have to combine both to one variable like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (array($_SERVER['SERVER_ADDR'], $_SERVER['SERVER_NAME'])){\n    case array('127.0.0.1', 'local'):\n    // stuff\n    break;\n    case array('111.222.333.444', 'gimmesomefunk.com'):\n    // stuff\n    break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, the more normal way would be to use &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elseif&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ( $_SERVER['SERVER_ADDR'] == '127.0.0.1' &amp;amp;&amp;amp; $_SERVER['SERVER_NAME'] == 'local' ) {\n    // stuff\n} elseif ( $_SERVER['SERVER_ADDR'] == '111.222.333.444' &amp;amp;&amp;amp; $_SERVER['SERVER_NAME'] == 'gimmesomefunk.com' ) {\n    // stuff\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用于检测服务器环境的多个switch语句的语法[重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "Switch case with three parameters?", "\n                \n                    7 answers\n                \n        ", "\n    ", "\n", "\n\n", "I need to detect different server environments in my site's config file. Up until now I was fine with detecting them using only the server's address.", "\n\n", "switch ( $_SERVER['SERVER_ADDR']){\n    case '127.0.0.1':\n    // stuff\n    break;\n    case '111.222.333.444';\n    // stuff\n    break;\n}\n", "\n\n", "But I now need to test my environment against both the ", "SERVER_ADDR", " and ", "SERVER_NAME", ". I'm no php'er, so I've had a stab at", "\n\n", "switch ( $_SERVER['SERVER_ADDR'] && $_SERVER['SERVER_NAME'] ){\n    case ('127.0.0.1','local'):\n    // stuff\n    break;\n    case ('111.222.333.444','gimmesomefunk.com');\n    // stuff\n    break;\n}\n", "\n\n", "But it's obviously wrong. Any clues?", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "选中项目名，按F4，打开Project Structure对话框，看看Modules里的sdk用的是什么", "Konwledge_Point": "switch语句及其应用", "Question": ["IntelliJ IDEA12.1.6 用的JDK1.7 Switch语句跟字符串报错", ["JDK1.7新特性，从Eclipse迁移过来的代码，和Eclipse用的同样的JDK1.7.0_07，在Eclipse中switch()括号中写字符串正常运行。", "\n\n", "到了IDEA中显示如下错误：\n", "\n\n", "[img]", "http://dl2.iteye.com/upload/attachment/0090/0287/5d1648eb-99d2-3455-bdf4-73c3c841ad2b.jpg[/img]", "\n\n", "[img]", "http://dl2.iteye.com/upload/attachment/0090/0289/63217753-b14c-3b70-9d8f-153a065aca77.jpg[/img]", "\n\n", "编译器版本也选了1.7，结果编译时报 java: -source 1.6 中不支持 switch 中存在字符串\n", "\n\n", "(请使用 -source 7 或更高版本以允许 switch 中存在字符串)", "\n\n", " 请教还有哪里要设置么？ \n"]], "Tag": "程序设计"}
{"Answer": "你英文不好，注意是labeled，也就是每个常量用标签标记的，所谓标签，就是一个带有冒号的标注。", "Konwledge_Point": "switch语句及其应用", "Question": ["求问读过TCPL的大神，关于C语言switch语句问题", ["The C Programming Language书中3.4 Switch 开头这么写到：", "\n\n", "3.4 Switch", "\nThe switch statement is a multi-way decision that tests whether an expression matches one of a number of constant integer values, and branches accordingly. ", "\n   switch (expression) {", "\n       case const-expr: statements", "\n       case const-expr: statements", "\n       default: statements", "\n   }", "\n\n", "_Each case is labeled by one or more integer-valued constants or constant expressions. _", "If a case matches the expression value, execution starts at that case. All case expressions must be different. The case labeled default is executed if none of the other cases are satisfied. A default is optional; if it isn't there and if none of the cases match, no action at all takes place. Cases and the default clause can occur in any order. ", "\n\n", "我不明白，就粗斜体部分，每一个标签应该只是一个整型常量值或者整型表达式。书上为什么写 one or more，意思是每个case标签也可以是多个整型常量值或整型表达式？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;语句与&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;语句的相同点与不同点\n                 相同点                                      不同点\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;语句          条件语句            适用于任意语句&amp;#xff0c;但嵌套的&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;要在&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;个以内使用更具可读性\n\n&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;语句    条件语句            仅适用于整数类型表达式&amp;#xff0c;但可嵌套多个语句\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["if句结构和switch语句结构转换要满足什么条件？并举例说明", ["if句结构和switch语句结构转换要满足什么条件？并举例说明，麻烦朋友们讲解一下啦"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case不可以用逻辑运算符&lt;/p&gt;\n&lt;p&gt;应该是这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; A;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个字母&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; A;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(A)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;u&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;:\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;原音&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;t&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;g&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;j&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;k&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;v&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;:\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;辅音&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; :\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;不是英文字母&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样会感觉很麻烦&amp;#xff0c;还不如用if&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在switch和if语句的条件判断中，为什么不能使用这样的判断语句？", ["（我是大一新生，还请多多包涵。叩谢各位）", "（并不是为了完成homework，是个人疑问，已经问过teacher，但是没有给我明确的回答，所以来问问看）", "在日常敲代码中，我遇到了一个问题：先是在switch语句中，switch语句的判断条件只能是一个常量，我写了如下的代码", "\n", "#include <iostream>", "\n\nusing namespace std;\n\nint main()\n{ char A;\n   cout<<", "\"请输入一个字母\"", ";\n   cin>>A;\n   switch(A)\n    {", "case", " ", "'a'", "||", "'u'", "||", "'O'", "||", "'i'", "||", "'e'", " ", ":cout<<", "\"原音\"", "<<endl", ";", "break", ";\n    ", "case", "  ", "'q'", "||", "'w'", "||", "'r'", "||", "'t'", "||", "'y'", "||", "'p'", "||", "'s'", "||", "'d'", "||", "'f'", "||", "'g'", "||", "'h'", "||", "'j'", "||", "'k'", "||", "'l'", "||", "'z'", "||", "'x'", "||", "'c'", "||", "'v'", "||", "'b'", "||", "'n'", "||", "'m'", " ", ":cout<<", "\"辅音\"", "<<endl", ";", "break", ";\n    default ", ":cout<<", "\"不是英文字母\"", " ;", "break", ";\n\n\n    }\n\n    ", "return", " ", "0", ";\n\n\n    }\n\n\n", "\n", "但是并不能跑起来（我觉得用单引号引用后就是常量了）", "我又换用了if语句，但是仍然不能正常运行，非常疑惑。", "我个人感觉是不是因为用逻辑运算符后，前两个判断后变为1，再与后边的继续进行逻辑判断，如果是这样，那应该最终可以输出一个数字，但是也不能输出一个数字，就很疑惑。"]], "Tag": "程序设计"}
{"Answer": "```\r\n SqlConnection conn = new SqlConnection(连接字符串);\r\nstring sql = \"select * from 表 where 用户等级 &gt; (select 用户等级 from 用户表 where id = \" + 当前用户id + \")\"\r\nSqlCommand cmd = new SqlCommand(sql, conn);\r\nSqlDataAdapter da = new SqlDataAdapter();\r\nda.SelectCommand = cmd;\r\nDataTable dt = new DataTable();\r\nda.Fill(dt);\r\nGridView.DataSource = dt;\r\nGridView.DataBind();\r\n```\r\n\r\n大概手写了一段，你稍微修改下。", "Konwledge_Point": "switch语句及其应用", "Question": ["利用for循环或者switch语句如何实现查询数据库信息？", ["就是一级会员可以查看二级三级四级会员的信息，二级会员可以查看三级四级五级会员的信息。。。依次类推。绑定数据库，如何实现？如何获取数据库某一列的值，如何输出筛选出来的信息？我真的是菜鸟，虽然心里有些想法，但是想要一份详细答案做参考，看自己有那些不足。求助。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;去掉圈出来的那个X字符。其他错误题主可以f12打开浏览器开发工具看下报什么错误&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/710270322646132.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;而且题主少了个case 10,100分给你分类到E级去了。。。-_-||。。&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/689476322646179.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么js中switch case语句中在浏览器输入成绩却没有反应？", ["js中有switch case语句中在浏览器输入成绩却没有反应？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;package com.wanzixi.test2;\n\nimport java.util.Scanner;\n\npublic class Demo1Switch {\n\t/*\n\t\t格式&amp;#xff1a;\n\t\t\tswitch(表达式) {\n\t\t\t\tcase 值1&amp;#xff1a;\n\t\t\t\t\t语句体1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 值2&amp;#xff1a;\n\t\t\t\t\t语句体2;\n\t\t\t\t\tbreak;\n\t\t\t\t\t…\n\t\t\t\tdefault&amp;#xff1a;\t\n\t\t\t\t\t语句体n&amp;#43;1;\n\t\t\t\t\t[break;]\n\t\t\t}\n\n\t\t1. 首先计算表达式的值。\n\t\t2. 依次和case后面的值进行比较&amp;#xff0c;如果有对应的值&amp;#xff0c;就会执行相应的语句\n\t\t\t在执行的过程中&amp;#xff0c;遇到break就会结束。\n\t\t3. 如果所有的case后面的值和表达式的值都不匹配\n\t\t\t就会执行default里面的语句体&amp;#xff0c;然后程序结束掉。\n\n\n\t*/\n\n    public static void main(String[] args) {\n\n        System.out.println(&amp;#34;-----------欢迎使用本系统给学生写评语-------------&amp;#34;);\n\n        while (true) {\n            System.out.print(&amp;#34;请您输入学生的成绩: 输入&amp;#39;999&amp;#39;退出程序:&amp;#34;);\n            System.out.println();\n            Scanner sc &amp;#61; new Scanner(System.in);\n            int score &amp;#61; sc.nextInt();\n            if (score &amp;#61;&amp;#61; 999) {\n                System.out.println(&amp;#34;感谢使用!&amp;#34;);\n                break;\n            } else if (score &amp;gt; 100 || score &amp;lt; 0) {\n                System.out.println(&amp;#34;输入成绩有误 请重新输入:&amp;#34;);\n            }\n\n\n            int key &amp;#61; 0;\n\n            if (score &amp;gt;&amp;#61; 10) {\n                key &amp;#61; score / 10;\n            } else {\n                System.out.println(&amp;#34;不及格&amp;#34;);\n            }\n\n            switch (key) {\n//\t\t\t学生成绩在60-69则打印“及格”\n                case 6:\n                    System.out.println(&amp;#34;及格&amp;#34;);\n                    break;\n                case 7:\n                case 8:\n//\t\t\t\t70-89“良好”\n                    System.out.println(&amp;#34;良好&amp;#34;);\n                    break;\n//\t\t\t\t9&amp;#xff0c;\n                case 9:\n                case 10:\n                    System.out.println(&amp;#34;优秀&amp;#34;);\n                    break;\n//\t\t\t\t60分以下“不及格”。\n                case 5:\n                case 4:\n                case 3:\n                case 2:\n                case 1:\n                    System.out.println(&amp;#34;不及格&amp;#34;);\n                    break;\n\n            }\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用swtich语句编写程序，给学生写评语，若学生成绩在60-69之间则打印“及格”，70-89为“良", ["用swtich语句编写程序，给学生写评语，若学生成绩在60-69之间则打印“及格”，70-89为“良好”，90-100为“优秀”，60分以下为“不及格”"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是因为第6行的&amp;amp;d&amp;#xff0c;把他改为%d再试试&amp;#xff0c;因为从输入获取一个整数是%d。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么switch语句可以编译 代码不运行呢(语言-c语言)", ["c语言使用switch语句判断月份对应天数", "\n", "在不加上年份判断是否闰二月情况下可以运行", "\n", "加上这个条件后 代码可以编译但不运行", "\n", "这是何故？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的x &amp;#61; 0所以只能运行case0&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言中的switch语句", ["这条语句是如何运行的，为什么不运行case1呢？麻烦高人指点，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(目标门牌号)\n{\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; 门牌号&amp;#xff1a;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; 门牌号&amp;#xff1a;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; 门牌号&amp;#xff1a;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; 门牌号&amp;#xff1a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;当case语句后面没有break的时候&amp;#xff0c;会继续往下执行&amp;#xff0c;知道结束或者遇到break&amp;#xff1b;&lt;br /&gt;第一题&amp;#xff1a;&lt;br /&gt;a&amp;#61;1的时候&amp;#xff0c;进入了case1&amp;#xff0c;执行完case1后执行case2&amp;#xff0c;直到遇到break&amp;#xff1b;所以答案是ab&lt;br /&gt;第二题&amp;#xff1a;因为a&amp;#61;2&amp;#xff0c;所以进入case2&amp;#xff0c;一直执行到case3&amp;#xff0c;所以答案是bc&lt;br /&gt;我这里有篇博客详细介绍了&amp;#xff0c;有时间可以看一下&amp;#xff1a;&lt;a id=\"textarea_1667353877592_1667353911351_0\"&gt;http://t.csdn.cn/6q5lV&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch语句实现分支结构", ["\n", "这两个中a的赋值不一样，switch(1)是表示真吗，switch(2)有是什么意思呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入和输出语句中%f改为%lf&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句求本金利息", ["switvh语句求本金利息合计，打完代码发现为什么算出来很奇怪，可以教我一下哪里写错了吗谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It's due to the scope of your variable declarations. You are shadowing the variable declaration inside the switch statement.&lt;/p&gt;\n\n&lt;p&gt;Simply change &lt;code&gt;car:=&lt;/code&gt; to &lt;code&gt;car=&lt;/code&gt; and you will be fine. You might also want to change &lt;code&gt;car:=&amp;amp;Car{}&lt;/code&gt; to &lt;code&gt;var car *Car&lt;/code&gt;. This will make your intent clearer and avoid an unnecessary allocation (as you are creating a new object which is never used).&lt;/p&gt;\n\n&lt;p&gt;Read about &lt;a href=\"http://www.tapirgames.com/blog/golang-block-and-scope\" rel=\"nofollow noreferrer\"&gt;blocks &amp;amp; scopes&lt;/a&gt; and see the &lt;a href=\"https://golang.org/ref/spec#Declarations_and_scope\" rel=\"nofollow noreferrer\"&gt;scoping&lt;/a&gt; section of the Go language reference.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何先声明struct然后再在switch语句中对其进行初始化？", ["\n\n", "I would like to declare a struct first and then initialize it inside a switch statement. The code I've written so far shows ", "declared and not used", " errors. However, I think the problem is different in my case and related to scope of declaration. ", "\n\n", "Could somebody please help me to make the below code work?", "\n\n", "Car.go", "\n\n", "package main\n\nimport \"fmt\"\nimport \"strconv\"\n\ntype Car struct{\n    Name string\n    Price int\n}\n\nfunc main(){\n    name := \"Fiat\"\n    car := &Car{}\n    switch name {\n        case \"Fiat\":\n            car := &Car{\n                Name : \"Fiat\",\n                Price: 600000,\n            }\n        case \"Mercedes-benz\":\n            car := &Car{\n                Name : \"Mercedes-benz\",\n                Price: 5600000,\n            }\n        default:\n            car := &Car{\n                Name : \"Toyota\",\n                Price: 1000000,\n            }\n\n    }\n    fmt.Println(\"Car Name : \" + car.Name + \" Price : \" + strconv.Itoa(car.Price));\n}\n", "\n\n", "Errors", "\n\n", " $go run Car.go\n./Car.go:19: car declared and not used\n./Car.go:24: car declared and not used\n./Car.go:29: car declared and not used\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\nswitch(a){\n    case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %f&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;苹果(apple)&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %f&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;梨子(pear)&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.5&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %f&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;桔子(orange)&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.1&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %f&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;葡萄(grape)&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10.2&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    default: &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;none&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句中的case语句该怎么写呢？", ["这个图片中的case语句后面应该写什么？具体case语句后面的内容应该怎么写呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Whether you get exactly the same results will vary based on what conditions you are evaluating, your equipment, settings, and other factors. But yes, generally &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elseif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; with strict comparison (&lt;code&gt;===&lt;/code&gt;) will outperform &lt;code&gt;switch&lt;/code&gt;. The reason is that &lt;a href=\"http://php.net/manual/en/control-structures.switch.php\" rel=\"nofollow\"&gt;&lt;code&gt;switch&lt;/code&gt; uses \"loose\" (i.e., type-insensitive) comparison (&lt;code&gt;==&lt;/code&gt;)&lt;/a&gt;, which is slower than type-sensitive comparison (&lt;code&gt;===&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;Keep in mind that these differences are extremely tiny and are going to be dwarfed by any inefficiencies in your algorithm. So, you should only tune for details like this after you are sure you have eliminated other major bottlenecks.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP switch语句VS if elseif语句基准", ["\n\n", "I check this ", "PHP website benchmark", " for check ", "switch statement", " VS ", "if else if statement", ". And I see this result:", "\n\n", "Is a there a difference between switch and if structures?. Call 1'000x", "\n\n", "\n", "\n", "141 %", " ", "*if and elseif (using ==)*", " Total time: 165 µsview code", "\n", "\n", "139 %", " ", "*if, elseif and else (using ==)*", " Total time: 162 µsview code", "\n", "\n", "110 %", " ", "*if and elseif (using ===)*", " Total time: 128 µsview code", "\n", "\n", "100 %", " ", "*if, elseif and else (using ===)*", " Total time: 117 µsview code", "\n", "\n", "149 %", " ", "*switch / caseTotal*", " time: 174 µsview code", "\n", "\n", "181 %", " ", "*switch / case / default*", " Total time: 211 µsview code", "\n", "\n", "In result i see ", "if else if", " is faster (", "+ **100 %** *if, elseif and else (using ===)* Total time: 117 µsview code", ").", "\n\n", "This benchmark is true and ", "if, elseif and else (using ===)", " is better and faster as switch statement?! ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; pTemp &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;) * pStrShuzu -&amp;gt;iRL); &lt;span class=\"hljs-comment\"&gt;//问题所在行&lt;/span&gt;\n这行改为&amp;#xff1a;\npTemp &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)*pStrShuzu-&amp;gt;iRL);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["vs2010虽然很老，但不明白为啥报错，问题见以下", ["int* pTemp = (int*)malloc(sizeof(int) * pStrShuzu ->iRL); 出在这里。", "报错提示： error C2143: 语法错误 : 缺少“;”(在“类型”的前面)", "\n", "另外我很纳闷为什么 这里代码有些在外头 有些在里头？ 什么鬼？", "void ZengJia(struct DongShuzu* pStrShuzu, int iShuJu)", "{", "        unsigned int i;", "    int ", "pTemp；", "    if(pStrShuzu ->iRL == pStrShuzu ->iNum)", "    {", "        pStrShuzu ->iRL += 10;", "            int", " pTemp = (int*)malloc(sizeof(int) * pStrShuzu ->iRL);   //问题所在行   指针符号存在的 不知道为什么提交问题就消失了，", "\n", "    ", "for", "(i = 0; i < pStrShuzu ->", "iNum; i++)\n    {\n        ", "pTemp", "[i] = pStrShuzu ->", "pSZT[i];\n\n    }\n\n    ", "free", "(pStrShuzu ->", "pSZT);\n\n    ", "pStrShuzu", " ->", "pSZT = pTemp;\n}\n\n", "pStrShuzu", " ->", "pSZT", "[pStrShuzu ->", " iNum] = iShuJu;\n", "pStrShuzu", " ->", "iNum++;\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将成绩对10取整&amp;#xff0c;然后再case判断。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt; &lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mark;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; grade;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input mark:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;mark);\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(mark/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n    grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n    grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n    grade&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;;\n  }\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;The grade is %c&amp;#34;&lt;/span&gt;,grade);\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/621685661946161.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["怎么改成switch语句", ["#include <stdio.h>", "#include <stdlib.h>", "int main(int argc, char *argv[]) {", "    int mark;", "    char grade;", "    printf(\"input mark:\");", "    scanf(\"%d\",&mark);", "    if(mark>=90)", "    grade='A';", "    else if(mark>=80)", "    grade='B';", "    else if(mark>=70)", "    grade='C';", "    else if(mark>=60)", "    grade='D';", "    else", "    grade='E';", "    printf(\"The grade is %c\",grade);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sale/10000还是浮点数&amp;#xff0c;不可以用switch&lt;br /&gt;改为(int)sale/10000&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句写工资薪水提成问题执行不对", ["问题遇到的现象和发生背景", "\n", "vc++2010学习版用switch语句写一个工资薪水提成的执行答案不对 大一刚学整懵了", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#include<stdio.h>", "#include<stdlib.h>", "    int main()", "{   int sale,total;", "    printf(\"请输入销售额\");", "    scanf(\"%f\" ,&sale);", "    switch((sale/10000))", "    {case 0:", "        total=1000;", "        break;", "    case 1:", "        total=1000+(sale-10000)*0.05;", "        break;", "    case 2:", "        total=1000+500+(sale-20000)*0.06;", "        break;", "    case 3:", "    case 4:", "    case 5:total=1000+500+1800+(sale-50000)*0.07;", "        break;", "    case 6:", "    case 7:", "    case 8:", "    case 9:", "    case 10:total=1000+500+1800+3500+(sale-100000)*0.08;", "        break;", " }", " printf(\"total=%d\");", " system(\"pause\");", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在switch case中&amp;#xff0c;从满足条件的第一个case开始&amp;#xff0c;只要没有break&amp;#xff0c;就会继续执行接下来的case&amp;#xff0c;哪怕这个case和这个值不符。&lt;br /&gt;这里的话&amp;#xff0c;case 0 满足条件 y &amp;#61; 0&amp;#xff0c;但是case 0 和接下来的 case 1都没有break&amp;#xff0c;所以执行完case 2之后才会break&amp;#xff0c;不会执行case 3&lt;br /&gt;这里先是case 0&amp;#xff0c;啥东西没有。然后case 1&amp;#xff0c;进入一个switch case&amp;#xff0c;因为x &amp;#61;1&amp;#xff0c;所以b&amp;#43;1&amp;#xff0c;变成1&amp;#xff0c;然后case2&amp;#xff0c;a&amp;#43;1&amp;#xff0c;b&amp;#43;1&amp;#xff0c;a变1&amp;#xff0c;b变2。最后输出a和b&amp;#xff0c;就是1&amp;#xff0c;2&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++问题 switch语句", ["为什么会输出1和2呀，那个case 0要怎么理解呀。非常感谢回答。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;conio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,judge,sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; month;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; date,day;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input a date in 2009\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;date);\n    month&amp;#61;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)date;\n    day&amp;#61;(date-month)*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(month&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        sum&amp;#61;day;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;month;i&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(i){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;:\n                sum&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                sum&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;:\n                sum&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        sum&amp;#43;&amp;#61;day;\n    }\n    judge&amp;#61;(sum&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(judge){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Monday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Tuesday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Wednesday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Thursday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Friday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Saturday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sunday\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["4  8关于#c++#的问题：用switch语句实现", ["已知2009年1月1号是星期四，给定2009年的任何一天（月日），求这天是星期几（输出最后结果要求用switch语句实现）。一周七天用以下标识：", "Monday，Tuesday，Wednesday，Thursday，Friday，Saturday，Sunday", "例如：输入 3.30 时应输出 Monday，输入 6.19 时应输出 Friday"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x&amp;#61;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)?&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:(n&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)?&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(x) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,x&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问这个代码如何用switch-case来写", ["0比较好处理", "但是正数如何归为一个数？", "负数也是？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;配合break;使用&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这段switch语句为什么输入1就会两个都执行", ["输入2会执行第二个，输入1会执行第一个和第二个", "尝试加过括号等的方法，没有作用啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Thank you very much for your contributions, I could come up with following examples. I hope they are the shortest possible variants for their language, if not, feel free to edit/correct.&lt;/p&gt;\n\n&lt;p&gt;Python dev2host.py:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python\ndef dev2host(device):\n    devices = [\n        \"n2\", \"nne2\", \"ne2\", \"ene2\", \"e2\", \"ese2\", \"se2\", \"sse2\", \"s2\", \"ssw2\", \"sw2\", \"wsw2\", \"w2\", \"wnw2\", \"nw2\", \"nnw2\", # 2ghz\n        \"n5\", \"nne5\", \"ne5\", \"ene5\", \"e5\", \"ese5\", \"se5\", \"sse5\", \"s5\", \"ssw5\", \"sw5\", \"wsw5\", \"w5\", \"wnw5\", \"nw5\", \"nnw5\", # 5ghz\n        \"n24\", \"nne24\", \"ne24\", \"ene24\", \"e24\", \"ese24\", \"se24\", \"sse24\", \"s24\", \"ssw24\", \"sw24\", \"wsw24\", \"w24\", \"wnw24\", \"nw24\", \"nnw24\", # 24ghz\n    ]\n    for host, key in enumerate(devices, start=1):\n        if device == key:\n            print host\n        result = 0\n    return;\ndev2host(\"ne5\")\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;PHP dev2host.php:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nfunction dev2host($device) {\n    $devices = [\n        \"n2\", \"nne2\", \"ne2\", \"ene2\", \"e2\", \"ese2\", \"se2\", \"sse2\", \"s2\", \"ssw2\", \"sw2\", \"wsw2\", \"w2\", \"wnw2\", \"nw2\", \"nnw2\", // 2ghz\n        \"n5\", \"nne5\", \"ne5\", \"ene5\", \"e5\", \"ese5\", \"se5\", \"sse5\", \"s5\", \"ssw5\", \"sw5\", \"wsw5\", \"w5\", \"wnw5\", \"nw5\", \"nnw5\", // 5ghz\n        \"n24\", \"nne24\", \"ne24\", \"ene24\", \"e24\", \"ese24\", \"se24\", \"sse24\", \"s24\", \"ssw24\", \"sw24\", \"wsw24\", \"w24\", \"wnw24\", \"nw24\", \"nnw24\", // 24ghz\n    ];\n    if ($host = array_search($device, $devices)) {\n        return $host+1;\n    }\n}\necho dev2host(\"ne5\");\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Bash dev2host.sh:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\nfunction dev2host() {\n    declare -A devices=(\n        [n2]='1' [nne2]='2' [ne2]='3' [ene2]='4' [e2]='5' [ese2]='6' [se2]='7' [sse2]='8' # 2ghz\n        [s2]='9' [ssw2]='10' [sw2]='11' [wsw2]='12' [w2]='13' [wnw2]='14' [nw2]='15' [nnw2]='16' # 2ghz\n        [n5]='17' [nne5]='18' [ne5]='19' [ene5]='20' [e5]='21' [ese5]='22' [se5]='23' [sse5]='24' # 5ghz\n        [s5]='25' [ssw5]='26' [sw5]='27' [wsw5]='28' [w5]='29' [wnw5]='30' [nw5]='31' [nnw5]='32' # 5ghz\n        [n24]='33' [nne24]='34' [ne24]='35' [ene24]='36' [e24]='37' [ese24]='38' [se24]='39' [sse24]='40' # 24ghz\n        [s24]='41' [ssw24]='42' [sw24]='43' [wsw24]='44' [w24]='45' [wnw24]='46' [nw24]='47' [nnw24]='48' # 24ghz\n    )\n    echo \"${devices[$1]}\"\n}\ndev2host ne5\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Javascript dev2host.js:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\"&gt;\r\n&lt;div class=\"snippet-code\"&gt;\r\n&lt;pre class=\"snippet-code-js lang-js prettyprint-override\"&gt;&lt;code&gt;function dev2host($device) {\r\n    var devices = {\r\n        \"n2\":1, \"nne2\":2, \"ne2\":3, \"ene2\":4, \"e2\":5, \"ese2\":6, \"se2\":7, \"sse2\":8, // 2ghz\r\n        \"s2\":9, \"ssw2\":10, \"sw2\":11, \"wsw2\":12, \"w2\":13, \"wnw2\":14, \"nw2\":15, \"nnw2\":16, // 2ghz\r\n        \"n5\":17, \"nnw5\":18, \"ne5\":19, \"ene5\":20, \"e5\":21, \"ese5\":22, \"se5\":23, \"sse5\":24, // 5ghz\r\n        \"s5\":25, \"ssw5\":26, \"sw5\":27, \"wsw5\":28, \"w5\":29, \"wnw5\":30, \"nw5\":31, \"nnw5\":32, // 5ghz\r\n        \"n24\":33, \"nnw34\":34, \"ne24\":35, \"ene24\":36, \"e24\":37, \"ese24\":38, \"se24\":39, \"sse24\":40, // 24ghz\r\n        \"s24\":41, \"ssw24\":42, \"sw24\":43, \"wsw24\":44, \"w24\":45, \"wnw24\":46, \"nw24\":47, \"nnw24\":48, // 24ghz\r\n    };\r\n    var host=devices[$device] || 0;\r\n    return host;\r\n}\r\ndocument.write(dev2host(\"ne5\"));&lt;/code&gt;&lt;/pre&gt;\r\n&lt;/div&gt;\r\n&lt;/div&gt;\r\n\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["有可能以某种方式缩短switch语句吗？ 也许有一个循环？", ["\n\n", "Independent of which programming language, what options are there to shorten long switch statements with many similar cases?", "\n\n", "From what I've searched, I found answers like ", "this one", " but my cases are all different with only one integer changing like in a loop.", "\n\n", "Regularly I use following switch statement construct in bash/PHP/Python/JavaScript and am looking for a shorter version:", "\n\n", "switch ($device) {\n    // 2ghz\n    case \"n2\":\n        return 1;\n        break;\n    case \"nne2\":\n        return 2;\n        break;\n    case \"ne2\":\n        return 3;\n        break;\n    case \"ene2\":\n        return 4;\n        break;\n    case \"e2\":\n        return 5;\n        break;\n    case \"ese2\":\n        return 6;\n        break;\n    case \"se2\":\n        return 7;\n        break;\n    case \"sse2\":\n        return 8;\n        break;\n    case \"s2\":\n        return 9;\n        break;\n    case \"ssw2\":\n        return 10;\n        break;\n    case \"sw2\":\n        return 11;\n        break;\n    case \"wsw2\":\n        return 12;\n        break;\n    case \"w2\":\n        return 13;\n        break;\n    case \"wnw2\":\n        return 14;\n        break;\n    case \"nw2\":\n        return 15;\n        break;\n    case \"nnw2\":\n        return 16;\n        break;\n\n    // 5ghz\n    case \"n5\":\n        return 17;\n        break;\n    case \"nne5\":\n        return 18;\n        break;\n    case \"ne5\":\n        return 19;\n        break;\n    case \"ene5\":\n        return 20;\n        break;\n    case \"e5\":\n        return 21;\n        break;\n    case \"ese5\":\n        return 22;\n        break;\n    case \"se5\":\n        return 23;\n        break;\n    case \"sse5\":\n        return 24;\n        break;\n    case \"s5\":\n        return 25;\n        break;\n    case \"ssw5\":\n        return 26;\n        break;\n    case \"sw5\":\n        return 27;\n        break;\n    case \"wsw5\":\n        return 28;\n        break;\n    case \"w5\":\n        return 29;\n        break;\n    case \"wnw5\":\n        return 30;\n        break;\n    case \"nw5\":\n        return 31;\n        break;\n    case \"nnw5\":\n        return 32;\n        break;\n\n    // 24ghz\n    case \"n24\":\n        return 33;\n        break;\n    case \"nne24\":\n        return 34;\n        break;\n    case \"ne24\":\n        return 35;\n        break;\n    case \"ene24\":\n        return 36;\n        break;\n    case \"e24\":\n        return 37;\n        break;\n    case \"ese24\":\n        return 38;\n        break;\n    case \"se24\":\n        return 39;\n        break;\n    case \"sse24\":\n        return 40;\n        break;\n    case \"s24\":\n        return 41;\n        break;\n    case \"ssw24\":\n        return 42;\n        break;\n    case \"sw24\":\n        return 43;\n        break;\n    case \"wsw24\":\n        return 44;\n        break;\n    case \"w24\":\n        return 45;\n        break;\n    case \"wnw24\":\n        return 46;\n        break;\n    case \"nw24\":\n        return 47;\n        break;\n    case \"nnw24\":\n        return 48;\n        break;\n\n    default:\n        return 0;\n        break;\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当 score 为 90-100 时输出A&amp;#xff0c;80-89 输出 B&amp;#xff0c;其他情况输出C&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;( score/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; )\n{\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; : &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;);\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; : &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;);\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; : &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#34;&lt;/span&gt;);\n  &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; : &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c＋＋，switch语句，给定一个百分制成绩，九十分及以上为A80-89为B", ["c＋＋，switch语句，给定一个百分制成绩，九十分及以上为A80-89为B"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,y;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        y &amp;#61; x&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; x&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n        y &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        y &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*x&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,y);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个用c语言中的if和switch语句怎么写？求解答！", []], "Tag": "程序设计"}
{"Answer": "写反了，可以用switch来判断，然后goto跳转", "Konwledge_Point": "switch语句及其应用", "Question": ["C++ 6.0语言goto语句能用switch判断当前源代码位置么？", ["C++ 6.0语言goto语句能用switch判断当前源代码位置么？请问怎么得到当前执行的源代码的代码？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main() {\n    &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; sum1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; , sum4&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum5&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; productnum;\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n\n        cin &amp;gt;&amp;gt; productnum;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (productnum)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; qua;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            cin &amp;gt;&amp;gt; qua;\n            {\n                sum1 &amp;#61; qua * &lt;span class=\"hljs-number\"&gt;2.98&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            cin &amp;gt;&amp;gt; qua;\n            {\n                sum2 &amp;#61; qua * &lt;span class=\"hljs-number\"&gt;4.50&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            cin &amp;gt;&amp;gt; qua;\n            {\n                sum3 &amp;#61; qua * &lt;span class=\"hljs-number\"&gt;9.98&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            cin &amp;gt;&amp;gt; qua;\n            {\n                sum4 &amp;#61; qua * &lt;span class=\"hljs-number\"&gt;4.49&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            cin &amp;gt;&amp;gt; qua;\n            {\n                sum5 &amp;#61; qua * &lt;span class=\"hljs-number\"&gt;6.87&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        }\n    \n    \n    &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; sum1 &amp;#43; sum2 &amp;#43; sum3 &amp;#43; sum4 &amp;#43; sum5;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/649598967576124.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++/switch语句例题", ["/", "问题是：", "一家公司销售5种不同的产品零售价分别是：产品1,2.98美元；产品2,4.50美元；产品3,9.98美元", "；产品4,4.49美元；产品5,6.87美元。请编写一个程序，要求用户输入一系列如下所示的数据：", "a)产品编号", "b)销售量", "您的程序应计算并显示所有销售产品的总零售价值。如果销售数量为负数，则将其设置为0。当程序读取产品数等于-l时，停止循环并显示最终结果。", "这是我写的程序：", "/", "\n", "#include<iostream>", "\n", "using", " ", "namespace", " std;\n\n\n\n", "int", " main() {\n    ", "double", " sum1=", "0", ", sum2=", "0", ", sum3=", "0", " , sum4=", "0", ", sum5=", "0", " ;\n    ", "int", " productnum;\n    cin >>productnum;\n    ", "int", " i = ", "0", ";\n    \n        ", "for", " (i=", "0", ";i<", "7", ";i++)\n        {\n            ", "switch", " (productnum) {\n                ", "int", " qua;\n            ", "case", " ", "1", ":\n                cin >> qua;\n                {\n                    ", "double", " sum1 = qua * ", "2.98", "; ", "break", "; }\n\n            ", "case", " ", "2", ":\n                cin >> qua;\n                {\n                    ", "double", " sum2 = qua * ", "4.50", "; ", "break", ";  }\n            ", "case", " ", "3", ":\n                cin >> qua;\n                {\n                    ", "double", " sum3 = qua * ", "9.98", ";  ", "break", "; }\n            ", "case", " ", "4", ":\n                cin >> qua;\n                {\n                    ", "double", " sum4 = qua * ", "4.49", ";  ", "break", "; }\n            ", "case", " ", "5", ":\n                cin >> qua;\n                {\n                    ", "double", " sum5 = qua * ", "6.87", "; ", "break", "; }\n\n\n            }\n        }\n    \n    \n    ", "double", " ", "sum", ";\n    ", "sum", " = sum1 + sum2 + sum3 + sum4 + sum5;\n    cout << ", "sum", " << endl;\n    system(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "\n", "后面的两个要求都还没有写。想请教大家我这个程序有什么问题，为什么无法计算五种产品销售额的总量？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/315218014946151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["ｃ语言ｓｗｉｔｃｈ分支语句", ["请问大家见过这样的c语言的switch分支语句吗?", "\n", "\n", "switch", "（op）\n{\n    ", "case", " ", "0xB1", " ... ", "0xB4", ":\n          ", "/*操作*/", "\n}\n\n", "\n", "这种写法是等效于下面的写法吗？　是下面写法的简写？　请大家指教一下", "\n", "switch", " (op)\n{\n    ", "case", " ", "0xB1", ":\n    ", "case", " ", "0xB2", ":\n    ...\n    ", "case", " ", "0xB4", ":\n              ", "/*操作*/", "\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个字符:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;ch);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c\\n&amp;#34;&lt;/span&gt;,ch);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(ch)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; ... &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该字符为数字&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; ... &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该字符为大写字母&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;        \n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; ... &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该字符为小写字母&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该字符为空格&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;其他字符\\n&amp;#34;&lt;/span&gt;);         \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;b&gt;如有帮助&amp;#xff0c;欢迎点赞&amp;#43;采纳哈&amp;#xff01;&lt;/b&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何使用了switch语句，但只能输出default后面的语句？(语言-c语言)", ["我的代码使用了一个switch语句，但是运行时只显示default的输出，麻烦帮忙解答一下，十分感谢", "\n", "#include <stdio.h>", "\nint ", "main", "()\n{\n    char ch;\n    ", "printf", "(", "\"请输入一个字符:\"", ");\n    scanf(", "\"%c\"", ",&ch);\n    ", "printf", "(", "\"%d\\n\"", ",ch);\n    switch(ch)\n    {\n        ", "case", " ", "'ch>=80&&ch<=89'", ":", "printf", "(", "\"该字符为数字\"", ");\n                ", "break", ";\n        ", "case", " ", "'ch>=65&&ch<=90'", ":", "printf", "(", "\"该字符为大写字母\"", ");\n                ", "break", ";        \n        ", "case", " ", "'ch>=97&&ch<=122'", ":", "printf", "(", "\"该字符为小写字母\"", ");\n                ", "break", ";\n        ", "case", " ", "'ch=32'", ":", "printf", "(", "\"该字符为空格\"", ");\n                ", "break", ";\n        default: ", "printf", "(", "\"其他字符\\n\"", ");\n                \n    \n    }\n", "return", " 0;\n}\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/741214549636187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["编写一个程序，判断一个学生的成绩是否达标。达标标准有两种", []], "Tag": "程序设计"}
{"Answer": "jdk1.7没有List&lt;String&gt; list=[\"list\"];新特性。\r\n\r\nhttp://docs.oracle.com/javase/7/docs/api/\r\n官网的api。", "Konwledge_Point": "switch语句及其应用", "Question": ["Myeclipse 使用jdk1.7", ["我用的Myeclipse2013 前段时间才发布的新版本。按道理说应该能支持jdk1.7 可是我测试switch 支持String能通过。测试List list=[\"list\"];，别的好像都能通过。", "\n\n", "就不能通过。怎么能让Myeclipse 支持jdk1.7 该配置的我已经都配置了啊？", "\n下面是我的配置", "\n\n", "[img]", "http://dl.iteye.com/upload/attachment/0083/0926/d9a17582-83fc-312a-aaf8-62aae525c1a4.png[/img]", "\n\n", "[img]", "http://dl.iteye.com/upload/attachment/0083/0928/96ce96ad-d8c1-389c-aaf3-95585264c3d0.png[/img]"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can not use a case statement inside a case. Try this corrected code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ( $type ) {\n\n            case 'heading':\n                echo '&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr valign=\"top\"&amp;gt;&amp;lt;td colspan=\"2\"&amp;gt;&amp;lt;h4&amp;gt;' . $desc . '&amp;lt;/h4&amp;gt;';\n                break;\n\n            case 'checkbox':\n                echo '&amp;lt;input class=\"checkbox' . $field_class . '\" type=\"checkbox\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"1\" ' . checked( $options[$id], 1, false ) . ' /&amp;gt; &amp;lt;label for=\"' . $id . '\"&amp;gt;' . $desc . '&amp;lt;/label&amp;gt;';\n\n                break;\n\n            case 'select':\n                echo '&amp;lt;select class=\"select' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\"&amp;gt;';\n\n                foreach ( $choices as $value =&amp;gt; $label )\n                    echo '&amp;lt;option value=\"' . esc_attr( $value ) . '\"' . selected( $options[$id], $value, false ) . '&amp;gt;' . $label . '&amp;lt;/option&amp;gt;';\n\n                echo '&amp;lt;/select&amp;gt;';\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            case 'radio':\n                $i = 0;\n                foreach ( $choices as $value =&amp;gt; $label ) {\n                    echo '&amp;lt;input class=\"radio' . $field_class . '\" type=\"radio\" name=\"' . $shortname_options . '[' . $id . ']' . '\" id=\"' . $id . $i . '\" value=\"' . esc_attr( $value ) . '\" ' . checked( $options[$id], $value, false ) . '&amp;gt; &amp;lt;label for=\"' . $id . $i . '\"&amp;gt;' . $label . '&amp;lt;/label&amp;gt;';\n                    if ( $i &amp;lt; count( $options ) - 1 )\n                        echo '&amp;lt;br /&amp;gt;';\n                    $i++;\n                }\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            case 'textarea':\n                echo '&amp;lt;textarea class=\"' . $field_class . '\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" placeholder=\"' . $std . '\" rows=\"5\" cols=\"30\"&amp;gt;' . wp_htmledit_pre( $options[$id] ) . '&amp;lt;/textarea&amp;gt;';\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            case 'password':\n                echo '&amp;lt;input class=\"regular-text' . $field_class . '\" type=\"password\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"' . esc_attr( $options[$id] ) . '\" /&amp;gt;';\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            case 'text':\n                echo '&amp;lt;input class=\"regular-text' . $field_class . '\" type=\"text\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" placeholder=\"' . $std . '\" value=\"' . esc_attr( $options[$id] ) . '\" /&amp;gt;';\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            case 'html':\n                echo $std;\n\n                if ( $desc != '' )\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                break;\n\n            default:\n               echo '&amp;lt;input id=\"' . $id . '\" class=\"upload-url' . $field_class . '\" type=\"text\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"' . esc_attr( $options[$id] ) . '\" /&amp;gt;&amp;lt;input id=\"st_upload_button\" class=\"st_upload_button\" type=\"button\" name=\"upload_button\" value=\"Upload\" /&amp;gt;';\n\n            if ( $desc != '' )\n               echo '\n               &amp;lt;span class=\"description\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n            echo '&amp;lt;div class=\"upload-img-preview\"&amp;gt;';\n            if (esc_attr( $options[$id] &amp;lt;&amp;gt; '')) {\n                echo '&amp;lt;img class=\"upload-img-preview\" src='.esc_attr( $options[$id]).' /&amp;gt;';\n                echo '&amp;lt;a class=\"removeupload\"&amp;gt;'. __('Delete Image', 'icore') .'&amp;lt;/a&amp;gt;';\n            }\n                echo '&amp;lt;/div&amp;gt;';\n                break;\n\n                case 'slide':\n                    if ( $desc != '' )\n                        echo '&amp;lt;span class=\"description' . $field_class . '\"&amp;gt;' . $desc . '&amp;lt;/span&amp;gt;';\n\n                    echo '&amp;lt;br /&amp;gt;&amp;lt;span id=\"slides-details-button\"&amp;gt;&amp;lt;/span&amp;gt;';\n                    echo '&amp;lt;ul id=\"slideshow_list\"&amp;gt;';\n\n                    if ( $options['slider'] &amp;lt;&amp;gt; '' ) {\n\n                        $slides = array();\n                        foreach ($options[$id]['title'] as $k =&amp;gt; $v) {\n                            $slides[] = array(\n                                'title' =&amp;gt; $v,\n                                'link' =&amp;gt; $options[$id]['link'][$k],\n                                'caption' =&amp;gt; $options[$id]['caption'][$k],\n                                'image' =&amp;gt; $options[$id]['image'][$k]\n                            );\n                        }\n\n                        $i = 1;\n                        foreach ($slides as $slide) {\n                            echo '&amp;lt;li class=\"slide\"&amp;gt;';\n                            echo '&amp;lt;a class=\"editslideimage\"&amp;gt;edit&amp;lt;/a&amp;gt;';\n                            echo '&amp;lt;div class=\"image-details slidedetails\"&amp;gt;';\n                            echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Title', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                            echo '&amp;lt;input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][title][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"'.$slide['title'].'\" type=\"text\" /&amp;gt;';\n\n                            echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Link', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                            echo '&amp;lt;input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][link][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"'.$slide['link'].'\" type=\"text\" /&amp;gt;';\n\n                            echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Caption', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                            echo '&amp;lt;textarea class=\"'.$field_class.'\" name=\"' . $shortname_options . '[' . $id . '][caption][]\" id=\"'. $id .'_caption_'.$i.'\" cols=\"40\" rows=\"4\"&amp;gt;'.$slide['caption'].'&amp;lt;/textarea&amp;gt;';\n\n                            echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Image', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                            echo '&amp;lt;input class=\"upload-input-text src\" name=\"' . $shortname_options . '[' . $id . '][image][]\" id=\"'. $id .'_image_'.$i.'\" type=\"text\" value=\"'.$slide['image'].'\" type=\"text\" /&amp;gt;\n                            &amp;lt;a href=\"'.get_option('siteurl').'/wp-admin/admin-ajax.php?action=choice&amp;amp;width=150&amp;amp;height=100\" id=\"'.$id.'_button\" class=\"button upbutton\"&amp;gt;' . __( 'Upload','InterStellar' ) . '&amp;lt;/a&amp;gt;';\n                            echo '&amp;lt;a class=\"doneslideimage\"&amp;gt;Done&amp;lt;/a&amp;gt;';\n                            echo '&amp;lt;/div&amp;gt;';\n                            echo '&amp;lt;div class=\"clear\"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=\"upload-img-preview\"&amp;gt;';\n                            if ( $slide['image'] != \"\" )\n                            {\n                                echo '&amp;lt;img class=\"upload-img-preview\" id=\"image_'. $id .'_image_'.$i.'\" src=\"'.$slide['image'].'\" /&amp;gt;';\n                            }\n                            echo '&amp;lt;/div&amp;gt;';\n                            echo '&amp;lt;a class=\"remove_slide submitdelete\"&amp;gt;' . __( 'Delete Slide', 'InterStellar' ) . '&amp;lt;/a&amp;gt;';\n                            echo '&amp;lt;/li&amp;gt;';\n                            $i++;\n                        }\n\n                    } else {\n                        $i = 1;\n                        echo '&amp;lt;li class=\"slide\"&amp;gt;';\n                        echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Title', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                        echo '&amp;lt;input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][title][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"\" type=\"text\" /&amp;gt;';\n\n                        echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Link', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                        echo '&amp;lt;input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][link][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"\" type=\"text\" /&amp;gt;';\n\n                        echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Caption', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                        echo '&amp;lt;textarea class=\"'.$field_class.'\" name=\"' . $shortname_options . '[' . $id . '][caption][]\" id=\"'. $id .'_caption_'.$i.'\" cols=\"40\" rows=\"4\"&amp;gt;&amp;lt;/textarea&amp;gt;';\n\n                        echo '&amp;lt;span class=\"description\"&amp;gt;' . __( 'Slide Image', 'icore' ) . '&amp;lt;/span&amp;gt;';\n                        echo '&amp;lt;input class=\"upload-input-text src\" name=\"' . $shortname_options . '[' . $id . '][image][]\" id=\"'. $id .'_image_'.$i.'\" type=\"text\" value=\"\" type=\"text\" /&amp;gt;\n                        &amp;lt;a href=\"'.get_option('siteurl').'/wp-admin/admin-ajax.php?action=choice&amp;amp;width=150&amp;amp;height=100\" id=\"'.$id.'_button\" class=\"button upbutton\"&amp;gt;' . __( 'Upload', 'icore' ) . '&amp;lt;/a&amp;gt;';\n\n                        echo '&amp;lt;div class=\"clear\"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=\"upload-img-preview\"&amp;gt;';\n                        echo '&amp;lt;/div&amp;gt;';\n                        echo '&amp;lt;a class=\"remove_slide submitdelete\"&amp;gt;' . __( 'Delete Slide','InterStellar' ) . '&amp;lt;/a&amp;gt;';\n                        echo '&amp;lt;/li&amp;gt;';\n                    }\n\n                    echo '&amp;lt;/ul&amp;gt;';\n                    break;\n\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["致命错误：Switch语句只能包含一个默认子句（php7）", ["\n\n", "I use php ver. 7.1.0 and now I have problem", "\n\n", "\n  ", "Fatal error: Switch statements may only contain one default clause in\n  /icore.php on line 477", "\n", "\n\n", "Here's the code:", "\n\n", "476  case 'html':\n477  default:\n478  echo $std;\n479\n480  if ( $desc != '' )\n481    echo '<br /><span class=\"description\">' . $desc . '</span>';\n482\n483  break;\n", "\n\n", "Can I fix it?", "\n\n", "Full code for switch:", "\n\n", "switch ( $type ) {\n\n                case 'heading':\n                    echo '</td></tr><tr valign=\"top\"><td colspan=\"2\"><h4>' . $desc . '</h4>';\n                    break;\n\n                case 'checkbox':\n                    echo '<input class=\"checkbox' . $field_class . '\" type=\"checkbox\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"1\" ' . checked( $options[$id], 1, false ) . ' /> <label for=\"' . $id . '\">' . $desc . '</label>';\n\n                    break;\n\n                case 'select':\n                    echo '<select class=\"select' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\">';\n\n                    foreach ( $choices as $value => $label )\n                        echo '<option value=\"' . esc_attr( $value ) . '\"' . selected( $options[$id], $value, false ) . '>' . $label . '</option>';\n\n                    echo '</select>';\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'radio':\n                    $i = 0;\n                    foreach ( $choices as $value => $label ) {\n                        echo '<input class=\"radio' . $field_class . '\" type=\"radio\" name=\"' . $shortname_options . '[' . $id . ']' . '\" id=\"' . $id . $i . '\" value=\"' . esc_attr( $value ) . '\" ' . checked( $options[$id], $value, false ) . '> <label for=\"' . $id . $i . '\">' . $label . '</label>';\n                        if ( $i < count( $options ) - 1 )\n                            echo '<br />';\n                        $i++;\n                    }\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'textarea':\n                    echo '<textarea class=\"' . $field_class . '\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" placeholder=\"' . $std . '\" rows=\"5\" cols=\"30\">' . wp_htmledit_pre( $options[$id] ) . '</textarea>';\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'password':\n                    echo '<input class=\"regular-text' . $field_class . '\" type=\"password\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"' . esc_attr( $options[$id] ) . '\" />';\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'text':\n                default:\n                    echo '<input class=\"regular-text' . $field_class . '\" type=\"text\" id=\"' . $id . '\" name=\"' . $shortname_options . '[' . $id . ']' . '\" placeholder=\"' . $std . '\" value=\"' . esc_attr( $options[$id] ) . '\" />';\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'html':\n                default:\n                    echo $std;\n\n                    if ( $desc != '' )\n                        echo '<br /><span class=\"description\">' . $desc . '</span>';\n\n                    break;\n\n                case 'upload':\n                default:\n                   echo '<input id=\"' . $id . '\" class=\"upload-url' . $field_class . '\" type=\"text\" name=\"' . $shortname_options . '[' . $id . ']' . '\" value=\"' . esc_attr( $options[$id] ) . '\" /><input id=\"st_upload_button\" class=\"st_upload_button\" type=\"button\" name=\"upload_button\" value=\"Upload\" />';\n\n                if ( $desc != '' )\n                   echo '\n                   <span class=\"description\">' . $desc . '</span>';\n                echo '<div class=\"upload-img-preview\">';\n                if (esc_attr( $options[$id] <> '')) {\n                    echo '<img class=\"upload-img-preview\" src='.esc_attr( $options[$id]).' />';\n                    echo '<a class=\"removeupload\">'. __('Delete Image', 'icore') .'</a>';\n                }\n                    echo '</div>';\n                    break;\n\n                    case 'slide':\n                        if ( $desc != '' )\n                            echo '<span class=\"description' . $field_class . '\">' . $desc . '</span>';\n\n                        echo '<br /><span id=\"slides-details-button\"></span>';\n                        echo '<ul id=\"slideshow_list\">';\n\n                        if ( $options['slider'] <> '' ) {\n\n                            $slides = array();\n                            foreach ($options[$id]['title'] as $k => $v) {\n                                $slides[] = array(\n                                    'title' => $v,\n                                    'link' => $options[$id]['link'][$k],\n                                    'caption' => $options[$id]['caption'][$k],\n                                    'image' => $options[$id]['image'][$k]\n                                );\n                            }\n\n                            $i = 1;\n                            foreach ($slides as $slide) {\n                                echo '<li class=\"slide\">';\n                                echo '<a class=\"editslideimage\">edit</a>';\n                                echo '<div class=\"image-details slidedetails\">';\n                                echo '<span class=\"description\">' . __( 'Slide Title', 'icore' ) . '</span>';\n                                echo '<input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][title][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"'.$slide['title'].'\" type=\"text\" />';\n\n                                echo '<span class=\"description\">' . __( 'Slide Link', 'icore' ) . '</span>';\n                                echo '<input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][link][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"'.$slide['link'].'\" type=\"text\" />';\n\n                                echo '<span class=\"description\">' . __( 'Slide Caption', 'icore' ) . '</span>';\n                                echo '<textarea class=\"'.$field_class.'\" name=\"' . $shortname_options . '[' . $id . '][caption][]\" id=\"'. $id .'_caption_'.$i.'\" cols=\"40\" rows=\"4\">'.$slide['caption'].'</textarea>';\n\n                                echo '<span class=\"description\">' . __( 'Slide Image', 'icore' ) . '</span>';\n                                echo '<input class=\"upload-input-text src\" name=\"' . $shortname_options . '[' . $id . '][image][]\" id=\"'. $id .'_image_'.$i.'\" type=\"text\" value=\"'.$slide['image'].'\" type=\"text\" />\n                                <a href=\"'.get_option('siteurl').'/wp-admin/admin-ajax.php?action=choice&width=150&height=100\" id=\"'.$id.'_button\" class=\"button upbutton\">' . __( 'Upload','InterStellar' ) . '</a>';\n                                echo '<a class=\"doneslideimage\">Done</a>';\n                                echo '</div>';\n                                echo '<div class=\"clear\"></div><div class=\"upload-img-preview\">';\n                                if ( $slide['image'] != \"\" )\n                                {\n                                    echo '<img class=\"upload-img-preview\" id=\"image_'. $id .'_image_'.$i.'\" src=\"'.$slide['image'].'\" />';\n                                }\n                                echo '</div>';\n                                echo '<a class=\"remove_slide submitdelete\">' . __( 'Delete Slide', 'InterStellar' ) . '</a>';\n                                echo '</li>';\n                                $i++;\n                            }\n\n                        } else {\n                            $i = 1;\n                            echo '<li class=\"slide\">';\n                            echo '<span class=\"description\">' . __( 'Slide Title', 'icore' ) . '</span>';\n                            echo '<input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][title][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"\" type=\"text\" />';\n\n                            echo '<span class=\"description\">' . __( 'Slide Link', 'icore' ) . '</span>';\n                            echo '<input class=\"regular-text' . $field_class . '\" name=\"' . $shortname_options . '[' . $id . '][link][]\" placeholder=\"' . $std . '\" id=\"'. $id .'_title_'.$i.'\"  value=\"\" type=\"text\" />';\n\n                            echo '<span class=\"description\">' . __( 'Slide Caption', 'icore' ) . '</span>';\n                            echo '<textarea class=\"'.$field_class.'\" name=\"' . $shortname_options . '[' . $id . '][caption][]\" id=\"'. $id .'_caption_'.$i.'\" cols=\"40\" rows=\"4\"></textarea>';\n\n                            echo '<span class=\"description\">' . __( 'Slide Image', 'icore' ) . '</span>';\n                            echo '<input class=\"upload-input-text src\" name=\"' . $shortname_options . '[' . $id . '][image][]\" id=\"'. $id .'_image_'.$i.'\" type=\"text\" value=\"\" type=\"text\" />\n                            <a href=\"'.get_option('siteurl').'/wp-admin/admin-ajax.php?action=choice&width=150&height=100\" id=\"'.$id.'_button\" class=\"button upbutton\">' . __( 'Upload', 'icore' ) . '</a>';\n\n                            echo '<div class=\"clear\"></div><div class=\"upload-img-preview\">';\n                            echo '</div>';\n                            echo '<a class=\"remove_slide submitdelete\">' . __( 'Delete Slide','InterStellar' ) . '</a>';\n                            echo '</li>';\n                        }\n\n                        echo '</ul>';\n                        break;\n\n            }\n        }\n", "\n\n", "Is this enought?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;c);\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(c)\n{\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A is 90~100&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B is 80~89&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C is 70~79&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D is 60~69&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E is 0~59&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input error&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["输入五级制成绩(A ~E)", ["【问题描述】输入五级制成绩(A ", "E)，输出相应的百分制成绩(0 ~100)区间，要求使用switch 语句。五级制成绩对应的百分制成绩区间为:", "A(90", "100)，B(80", "89)，C(70", "79)，D(60", "69)和E(0", "59)。若输入五级制成绩不在A到E之间，则打印“input error\"信息。", "\n", "【输入形式】输入成绩等级  (char型数据)", "\n", "【输出形式】输出结果为字符串", "\n", "【样例输入】B", "\n", "【样例输出】B is 80~89", "\n", "【样例输入】H", "\n", "【样例输出】input error", "\n", "【样例说明】英文字母区分大小写。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; %c接收的是字符型&amp;#xff0c; 应该用 case &amp;#39;1&amp;#39;,%d接收的整形才可以直接 case 1&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/799705057566141.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; score;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;score);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Your grade:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(score)\n{\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//90-100&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//80-89&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//70-79&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//60-69&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//0-59&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出数据错误&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//输出数据不在范围内&lt;/span&gt;\n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["利用switch语句进行成绩转换", ["#include<stdio.h>", "int main()", "{", "    char score;", "    scanf(\"%c\",&score);", "    printf(\"Your grade:\");", "    switch(score)", "    {", "        case 1:printf(\"A\\n\");break;//90-100", "        case 2:printf(\"B\\n\");break;//80-89", "        case 3:printf(\"C\\n\");break;//70-79", "        case 4:printf(\"D\\n\");break;//60-69", "        case 5:printf(\"E\\n\");break;//0-59", "     default:printf(\"输出数据错误\");break;//输出数据不在范围内", "     }", "     return 0;", " } ", "\n", "无论输入什么，输出的结果都是“输出数据错误”，这是为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; wk[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期日&amp;#34;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,buf);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;\n    \n\n\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(id)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句，case后面怎么把字符串转化成值", ["如果我想输入星期一到星期六，每个选择都有不同的答案，case后面该怎么把字符串星期一转化成值，求大佬帮忙"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;输入一个整数:&amp;#34;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num &amp;#61; sc.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;退出&amp;#34;);\n                break;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                switch (num % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;){\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;很抱歉&amp;#xff0c;你没获奖&amp;#xff0c;下次再来&amp;#xff01;&amp;#34;);\n                        break;\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;恭喜你获得一等奖&amp;#xff0c;一辆汽车&amp;#xff01;&amp;#34;);\n                        break;\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;恭喜你获得二等奖&amp;#xff0c;一台笔记本&amp;#xff01;&amp;#34;);\n                        break;\n                    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;恭喜你获得三等奖&amp;#xff0c;一个书包&amp;#xff01;&amp;#34;);\n                        break;\n                }\n            }\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["不知道如何在while语句中加入switch句式", ["在Java中，如何实现在循环语句中加入一个switch句式，实现题目所要求"]], "Tag": "程序设计"}
{"Answer": "case 4;后面是两个break;,最后一个for循环的两个getchar()看不出你想表达的意义在哪里,\r\n最重要的错误是在给c赋值时,你语句错了,\r\n你的是 scanf(\"%d,&amp;c\");\r\n应该是scanf(\"%d\",&amp;c);", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言switch语句出现access violation", ["#include ", "\n\n", "struct vote", "\n{", "\n    char name[20];", "\n    int  num;", "\n}vote[3];", "\n\n", "int main()", "\n{", "\n    int i,c;", "\n    printf(\"请输入三位候选人的名字\\n\");", "\n    for(i=0;i<3;i++)", "\n    {", "\n        scanf(\"%s\",&vote[i].name);", "\n        printf(\"%s为%d号\\n\",vote[i].name,i+1);", "\n    }", "\n\n", "while(1)\n{   \n    printf(\"请输入您支持的候选人号码,输入4则结束投票\\n\");\n    scanf(\"%d,&c\");\n    switch(c)\n    {\n    case 1:vote[0].num+=1;break;\n    case 2:vote[1].num+=1;break;\n    case 3:vote[2].num+=1;break;\n    case 4:break;break;\n    }\n}\n    for(i=0;i<3;i++)\n    {\n    printf(\"%s获得%d票\\n\",vote[i].name,vote[i].num);\n    }\n    getchar();\n    getchar();\n    return 0;\n", "\n\n", "}", "\n代码如上，运行到switch时错误。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;return呀&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于#c++#的问题：如何退出循环switch语句中的函数", ["如何退出循环switch语句中的函数", "比如说", "\n", "//在main中", "\n", "while", " (", "1", ") {\n        ", "switch", " (a) {\n        ", "case", " ", "1", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n            fun1();\n            ", "continue", ";\n        ", "case", " ", "2", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n                        fun2();\n            ", "continue", ";\n        ", "case", " ", "3", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n            ", "continue", ";\n                ……\n", "//在fun1中", "\n", "while", " (", "1", ") {\n        ", "switch", " (a) {\n        ", "case", " ", "1", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n            fun();\n            ", "continue", ";\n        ", "case", " ", "2", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n            ", "continue", ";\n        ", "case", " ", "3", ":\n            cout << ", "\"--\"", " << ", "endl", ";\n            ", "continue", ";\n                ……\n", "\n", "先输入1进入fun1，操作完成后我想退出fun1输入2进入fun2", "怎么做"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The &lt;code&gt;r interface{}&lt;/code&gt; that's being passed in does not necessarily match one of the cases that you have in the &lt;code&gt;switch&lt;/code&gt; block. &lt;/p&gt;\n\n&lt;p&gt;Essentailly the &lt;code&gt;switch&lt;/code&gt; is not exhaustive.&lt;/p&gt;\n\n&lt;p&gt;You could extend the &lt;code&gt;switch&lt;/code&gt; with a default case:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch g := r.(type) {\n case string:\n     ...\n case []interface{}:\n     ...\n default:\n     ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or just return something at the end of the function&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return \"\", nil&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何处理switch case语句中返回的两个对象", ["\n\n", "I'm writing type assertion helper method which accepts an ", "interface{}", " and returns ", "string", " along with ", "map[string]interface{}", ". I'm returning both objects within a case statement. Why is it asking for return at end of function? Am i missing a break? ", "\n\n", "func typeAssertionHelper(r interface{}) (string, map[string]interface{}) {\n    switch g := r.(type) {\n    case string:\n        return g, nil\n    case []interface{}:\n        for _, v := range g {\n            switch s := v.(type) {\n            case string:\n                return s, nil\n            case map[string]interface{}:\n                return \"\", s\n            }\n        }\n    }\n    // missing return end of function\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码里没有看到switch case语句&amp;#xff0c; 图贴错了&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch case语句出错", ["C语言switch case语句", "\n", "代码如下", "\n", "\n", "运行结果：case没有执行完。", "\n", "\n", "我的解答思路和尝试过的方法 ：一开始我以为case没能执行到指定case后面语句是问题出现在if else,结果改为else if又出错了", "\n", "我想要达到的结果：利用switch-case计算该日期是当年的第几天"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;getchar() 和 scanf(&amp;#34;%c&amp;#34;, &amp;amp;ch); 会读取任意的字符&amp;#xff0c;包括 &amp;#39;\\n&amp;#39;换行字符&lt;br /&gt;如果缓存区中遗留了&amp;#39;\\n&amp;#39;就会被getchar() 和 scanf(&amp;#34;%c&amp;#34;, &amp;amp;ch); 读取。&lt;br /&gt;可以在getchar()之前用 setbuf(stdin, NULL); 清除输入缓存&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    setbuf&lt;span class=\"hljs-comment\"&gt;(stdin, NULL)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//清除输入缓存&lt;/span&gt;\n    ch &amp;#61; getchar&lt;span class=\"hljs-comment\"&gt;()&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["while与switch嵌套重复输出的问题", ["while与switch嵌套，利用break跳出switch结构后，重新进行while循环，welcome函数被调用两次，如何删去重复输出，求解", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-javascript\"&gt;&amp;lt;Form.Item name&amp;#61;&amp;#34;switch&amp;#34; label&amp;#61;&amp;#34;Switch&amp;#34; valuePropName&amp;#61;&amp;#34;checked&amp;#34;&amp;gt;\n        &amp;lt;Switch /&amp;gt;\n&amp;lt;/Form.Item&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这样不行吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["antd-from中使用Switch点击保存按钮获取不到Switch状态", ["\n", " <Form.Item\n   name=\"req1\"\n   valuePropName=\"checked\"\n   style={{ display: 'inline-block', width: '50%' }}\n  >\n     <div className='req_list'>\n         1、<span className='req_span'>1111111</span>\n         222<Switch className='req_btn' defaultChecked />222\n     </div>\n</Form.Item>", "\n\n", "感觉是因为包括了一个div得原因但是要求这样布局。获取不到Switch状态该怎么解决.点击表单的保存按钮得到的req1值为undefined"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/783831572176148.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句判断数据库状态", ["为啥输出是open，不应该是mount吗，小百学习c++，大老勿喷，求大圣解答，感谢🙏"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;(1) 字符数组 输入&amp;#xff0c;用 %s&amp;#xff1b; 另外 输入密码之前&amp;#xff0c;用 getchar() 接收一下 换行符&amp;#xff0c;否则影响 密码的输入&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/182013895076135.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;(2) 跟上面 类似&amp;#xff0c; getchar() 接收了一个输入流里的换行符&amp;#xff0c;导致switch 没匹配上&amp;#xff0c; 在之前&amp;#xff0c;再用 getchar() 重新接收一下换行符&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/860207895076144.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["1.输入姓名后会直接运行一次循环并提示密码错误 2.if里的switch语句不执行并直接退出程序", ["1.输入姓名后会直接运行一次循环并提示密码错误 2.if里的switch语句不执行并直接退出程序", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/609059362846125.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/003669362846198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/783079362846199.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/180189362846153.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;switch语句的步骤是&amp;#xff1a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;       1.计算表达式的值&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;       2.找到与表达式值相同的case常量表达式&amp;#xff0c;执行&lt;/span&gt;&lt;br /&gt;case后边的语句序列&amp;#xff0c;之后转去执行Switch的后续语句。&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;   (也就是说只要&amp;#xff0c;它会先找与它值对应的case语句&amp;#xff0c;先执行自己对应的语句&amp;#xff0c;像case1后面是空&amp;#xff0c;所以它自己的&amp;#xff0c;就会是空的&amp;#xff0c;之后再继续执行后续的其他case对应的语句&amp;#xff0c;如果遇到beak这种会跳出语句的&amp;#xff0c;才不会执行语句)&lt;/span&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;总而言之&amp;#xff0c;只要没有遇到break&amp;#xff0c;就会继续执行其他后续语句;遇到break&amp;#xff0c;就会跳出语句。&lt;/p&gt;\n&lt;p&gt;可以结合前面图片再理解下。\n       &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["想问关于switch语句的问题，问题在//后面。", ["#", "include", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " grade;\n    ", "float", " score;\n    ", "printf", "(", "\"请输入成绩：\"", ");\n    ", "scanf", "(", "\"%f\"", ",&score);\n    \n    ", "if", "(score>", "100", "||score<", "0", ")\n    {\n        ", "printf", "(", "\"输入成绩错误\"", "); \n    }\n    ", "else", "\n    {\n        grade=(", "int", ")score/", "10", "; \n    }    \n    ", "switch", "(grade)\n    { \n        ", "case", " ", "0", ":\n        ", "case", " ", "1", ":\n        ", "case", " ", "2", ":\n        ", "case", " ", "3", ":\n        ", "case", " ", "4", ":\n        ", "case", " ", "5", ":", "printf", "(", "\"不及格\"", ");", "break", ";\n        ", "case", " ", "6", ":", "printf", "(", "\"及格\"", ");", "break", ";\n        ", "case", " ", "7", ":", "printf", "(", "\"中等\"", "); ", "break", ";\n        ", "case", " ", "8", ":", "printf", "(", "\"良好\"", ");", "break", ";\n        ", "case", " ", "9", ":\n        ", "case", " ", "10", ":", "printf", "(", "\"优秀\"", ");", "break", ";", "/*我了解到的switch语句的知识是执行对应case后面常量的部分，为什么case 9后面没输入命令但是会执行case10后面的语句呢*/", "\n     } \n     ", "return", " ", "0", ";\n}\n\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个使用switch多路判断语句实现&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;u&gt;&lt;strong&gt;如有帮助请在我的回答上点个【采纳】&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;#34;stdio.h&amp;#34;\nvoid main()\n{\n    int a,r;\n    printf(&amp;#34;请输入奖金&amp;#xff1a;&amp;#34;);\n    scanf(&amp;#34;%d&amp;#34;,&amp;amp;a);\n    switch(a/100){\n    \tcase 0:r&amp;#61;0;break;\n    \tcase 1:r&amp;#61;2;break;\n    \tcase 2:r&amp;#61;4;break;\n    \tcase 3:r&amp;#61;8;break;\n    \tcase 4:r&amp;#61;10;break;\n    \tdefault:r&amp;#61;10;\n    }\n    printf(&amp;#34;奖金%d&amp;#xff0c;应缴税率%d%%\\n&amp;#34;,a,r);\n    printf(&amp;#34;应缴税款%.2f&amp;#xff0c;实得奖金&amp;#xff1a;%.2f&amp;#34;,r/100.0*a,a-(r/100.0*a));\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"442\" src=\"https://img-ask.csdnimg.cn/upload/1624347645437.png\" width=\"677\" /&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言分支结构switch语句", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;残留字符保留在缓冲区里&amp;#xff0c;下次当作字符读入了&amp;#xff0c;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c,d;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; e;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;e);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();       &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf %lf %lf %lf&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();       &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(e){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#34;&lt;/span&gt;,(a*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/b)&amp;#43;(c*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/d));\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f\\n&amp;#34;&lt;/span&gt;,a&amp;#43;b&amp;#43;c&amp;#43;d);\n                     &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#34;&lt;/span&gt;,(a*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/b)-(c*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/d));\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f\\n&amp;#34;&lt;/span&gt;,a-b-c-d);\n                     &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#34;&lt;/span&gt;,(a*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/b)*(c*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/d));\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f\\n&amp;#34;&lt;/span&gt;,a*b*c*d);\n                     &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#34;&lt;/span&gt;,(a*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/b)/(c*&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/d));\n                     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f\\n&amp;#34;&lt;/span&gt;,a/b/c/d);\n                     &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(e !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;//(e !&amp;#61; 0) 修改&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case语句，多次输入输出字符运算", ["#include <stdio.h>", "int main()", "{", "    double a,b,c,d;", "    char e;", "    do{", "    scanf(\"%c\",&e);", "    scanf(\"%lf % % %\",&a,&b,&c,&d);", "    switch(e){", "        case '+':printf(\"%f \",(a", "1.0/b)+(c", "1.0/d)),printf(\"%f\\n\",a+b+c+d);break;", "        case '-':printf(\"%f \",(a", "1.0/b)-(c", "1.0/d)),printf(\"%f\\n\",a-b-c-d);break;", "        case '", "':printf(\"%f \",(a", "1.0/b)", "(c", "1.0/d)),printf(\"%f\\n\",a", "b", "c", "d);break;", "        case '/':printf(\"%f \",(a", "1.0/b)/(c*1.0/d)),printf(\"%f\\n\",a/b/c/d);break;", "        case '0':break;", "        default:break;", "        }", "    }while(e!=0);", "    return 0;", "}", "我不理解，为什么在+-先输入任何一个字符，第二次再次输入就变成了执行default语句", "(不让写重复字符，所以%lf省略)"]], "Tag": "程序设计"}
{"Answer": "strcpy(p,arr);\r\n错误在这里，p指向常量区，不能写入\r\n还有你看到的地址，都是逻辑地址。", "Konwledge_Point": "switch语句及其应用", "Question": ["段错误，求大神解释一下", ["6   int main(void) {", "\n(gdb) n", "\n7       char arr[] = \"hello\";", "\n(gdb) n", "\n8       char *p = \"world\";", "\n(gdb) n", "\n9       printf(\"pid:%d\\n\",getpid());", "\n(gdb) n", "\npid:10709", "\n10      printf(\"&arr:%p\\n&p:%p\\nworld:%p\\nhello:%p\\n\",&arr,&p,p,\"hello\");", "\n(gdb) n", "\n&arr:0x7fffffffdff0", "\n&p:0x7fffffffdfe8", "\nworld:0x400810", "\nhello:0x400841", "\n11      printf(\"arr:%s\\n\",arr);", "\n(gdb) n", "\narr:hello", "\n12      printf(\"p:%s\\n\",p);", "\n(gdb) n", "\np:world", "\n13      strcpy(p,arr);", "\n(gdb) n", "\n\n", "Program received signal SIGSEGV, Segmentation fault.", "\n0x00007ffff7ab14e6 in ?? () from /lib/x86_64-linux-gnu/libc.so.6", "\n(gdb) n", "\nCannot find bounds of current function", "\n(gdb) n", "\n\n", "0x00007ffff7ab14e6这个地址是什么意思，这个是虚拟地址？系统想告诉我这个虚拟地址没有对应的物理地址？"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这不是数组常量&amp;#xff0c; 这是变量&amp;#xff0c;a[1] 这值都是未知的&amp;#xff1b;&lt;/li&gt;&lt;li&gt;case 里要是明确的常量值&amp;#xff0c;不能是变量值&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java中switch语句case用法问题", ["case后面必须跟常量，我想知道可以用一个数组常量作为case后面的值吗，为什么会报错，我是打算用switch进行常数数组的比较大小取唯一最小值"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;ds &amp;#61; input(&amp;#39;请输入日期(格式:mm/dd/yyyy): &amp;#39;,&amp;#39;s&amp;#39; );\nif ~isempty(ds)\n    v0 &amp;#61; datenum(ds);\n    v &amp;#61; datevec(v0);\n    dd &amp;#61; v0-datenum(v(1),1,1)\nend&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["matlab输入某年某月某日,判断这一天是这一年的第几天?", ["就是要用matlab进行输入Matlab2017版进行编程"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出&amp;#xff1a;36687&lt;br /&gt;当输入&amp;#xff1a;125 时&amp;#xff0c;按字符逐个读入&amp;#xff0c;第一个被读入的是字符 ‘1’ &amp;#xff0c;ascII 值为 49 &amp;#xff0c;‘2’ ascii 码值为50&amp;#xff0c;c-&amp;#39;2&amp;#39; &amp;#61; 49-50 &amp;#61; -1, case 里没有符合条件的&amp;#xff0c;所以执行 default::putchar(c&amp;#43;2);  49&amp;#43;2&amp;#61;51 &amp;#61; &amp;#39;3&amp;#39;  输出字符&amp;#xff1a;‘3’  。当读入 c&amp;#61; &amp;#39;2&amp;#39; &amp;#61; 50, c-&amp;#39;2&amp;#39; &amp;#61; 0, case 0 , case 1 ,case 3 输出&amp;#xff1a;66 。当读入 c &amp;#61; &amp;#39;5&amp;#39; &amp;#xff0c;c-&amp;#39;2&amp;#39; &amp;#61; &amp;#39;5&amp;#39; - &amp;#39;2&amp;#39; &amp;#61; 3, case 3 , default: &amp;#xff0c; 输出&amp;#xff1a;87 。  &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言 while循环嵌套 switch语句", ["![alt]", "\n", "\n", "(url \"#left\")", "\n", "请教一下这个题目", "\n", "c-'2' 和 c+2 不太理解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;int main()&lt;br /&gt;{int a,b;&lt;br /&gt;scanf(&amp;#34;%d %d&amp;#34;,&amp;amp;a, &amp;amp;b);&lt;br /&gt;if((a%400&amp;#61;&amp;#61;0)||((a%4&amp;#61;&amp;#61;0)&amp;amp;&amp;amp;(a%100!&amp;#61;0)))&lt;br /&gt;//a为闰年&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {if (b&amp;#61;&amp;#61;1||b&amp;#61;&amp;#61;3||b&amp;#61;&amp;#61;5||b&amp;#61;&amp;#61;7||b&amp;#61;&amp;#61;8||b&amp;#61;&amp;#61;10||b&amp;#61;&amp;#61;12)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,31);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    else if(b&amp;#61;&amp;#61;2)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,29);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    else if(b&amp;#61;&amp;#61;4||b&amp;#61;&amp;#61;6||b&amp;#61;&amp;#61;9||b&amp;#61;&amp;#61;11)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,30);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;else if&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    (b&amp;#61;&amp;#61;1||b&amp;#61;&amp;#61;3||b&amp;#61;&amp;#61;5||b&amp;#61;&amp;#61;7||b&amp;#61;&amp;#61;8||b&amp;#61;&amp;#61;10||b&amp;#61;&amp;#61;12)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,31);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    else if(b&amp;#61;&amp;#61;2)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,28);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    else if(b&amp;#61;&amp;#61;4||b&amp;#61;&amp;#61;6||b&amp;#61;&amp;#61;9||b&amp;#61;&amp;#61;11)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;%d&amp;#34;,30);&lt;/span&gt;&lt;br /&gt;return 0;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["分别用多分支if语句和switch语句完成", ["计算某年某月有多少天，输入两个整数表示年和月，输出一个整数，即该月的天数", "\n", "分析:", "\n", "如果月份是1、3、5、7、8、10或12，输出31;", "\n", "如果月份是4、6、 9或11,输出30", "\n", "如果月份是2:", "\n", "如果年份是闰年，输出29", "\n", "否则输出28"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch(&amp;#34;ope&amp;#34;)把&amp;#34;&amp;#34;去掉&amp;#xff0c;改成switch(ope)&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["求教大神 最简单的在java中用switch语句实现简单的计算器，为什么输出值都是0.", ["jdk8；", "\n\n", "eclipse；", "\n\n", "\n", "public class Demo26 {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tSystem.out.println(\"欢迎使用本计算器！\");\n\t\tjava.util.Scanner s = new java.util.Scanner(System.in);\n\t\t//接受第一个数字\n\t\tSystem.out.println(\"请输入第一个数字：\");\n\t\tint num1 = s.nextInt();\n\t\t//接受运算符\n\t\tSystem.out.println(\"请输入运算符号：\");\n\t\tString ope = s.next();\n\t\t//接受第二个数字\n\t\tSystem.out.println(\"请输入第二个数字：\");\n\t\tint num2 = s.nextInt();\n\t\t\t\t\n\t\tint result = 0;\n\t\tswitch(\"ope\") {\n\t\t\tcase \"+\" : \n\t\t\t\tresult = num1 + num2;\n\t\t\t\tbreak;\n\t\t\tcase \"-\" :\n\t\t\t\tresult = num1 - num2;\n\t\t\t\tbreak;\n\t\t\tcase \"*\" :\n\t\t\t\tresult = num1 * num2;\n\t\t\t\tbreak;\n\t\t\tcase \"/\" : \n\t\t\t\tresult = num1 / num2;\n\t\t\t\tbreak;\n\t\t\tcase \"%\" :\n\t\t\t\tresult = num1 % num2;\n\t\t\t\tbreak;\n\t\t}\n\t\t//输出\n\t\t\n\t\tSystem.out.println(\"运算结果为：\" + num1 + ope + num2 + \"=\" + result);\n\t\t\n}\n}", "\n\n", "为什么不管我怎么输出都是默认值0，请问怎么修改", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你需要详细说明你的需求。给你答复过一次了。参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; wk[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;星期日&amp;#34;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,buf);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(wk[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],buf) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        id &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;\n \n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(id)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//你的操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句怎么实现数据类型的转化", ["switch如何实现数据类型的转化，如果想把case后面的字符串转化为值，该怎么操作"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把加减乘除的各输出语句如(加法举例)&amp;#xff1a;&lt;br /&gt;printf(&amp;#34;%f%c%f&amp;#61;%f&amp;#34;,a,c,b,a&amp;#43;b); 修改为&amp;#xff1a;printf(&amp;#34;%f&amp;#34;,a&amp;#43;b);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句编写简易计算器", ["帮我看一下哪里错了，输出结果不对，怎么让他的输出结果没有过程只有结果呢", "左边的是预期输出正确的，右边的是我的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch((int)s/10)&lt;br /&gt;case9&amp;#xff0c;case和9之间要加空格&amp;#xff0c;下面都一样&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch语句不太懂", ["这个怎么错了？break不是这样用的吗？怎么把float强制转换成int形？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;仔细看看 switch拼错了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java 的是switch语句报错", ["这是代码", "\n\n", "\n", "import java.io.*;\npublic class Score2 {\n\tpublic static void main(String args[])throws IOException\n\t{\n\t\tBufferedReader input=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tSystem.out.println(\"Please input s=\");\n\t\t\tString str=input.readLine();\n\t\t\tint s=Integer.parseInt(str);\n\t\t\tint flag=s/10;\n\t\t\tSystem.out.println(flag);\n\t\t\tswtich(flag)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\tcase 3:\n\t\t\t\tcase 4:\n\t\t\t\tcase 5:\n\t\t\t\tcase 6:System.out.println(\"不及格\");break;\n\t\t\t\tcase 7:System.out.println(\"及格\");break;\n\t\t\t\tcase 8:System.out.println(\"中\");break;\n\t\t\t\tcase 9:System.out.println(\"良\");break;\n\t\t\t\tcase 10:System.out.println(\"优\");break;\n\t\t\t\tdefault:System.out.println(\"Error!\");break;\n\t\t\t}\n\t}\n}", "\n\n", "这是显示的错误", "\n\n", "Exception in thread \"main\" java.lang.Error: Unresolved compilation problems: ", "\n    Syntax error on tokens, Label expected instead", "\n    Syntax error on token \"case\", assert expected", "\n    Syntax error on token \"case\", assert expected", "\n    Syntax error on token \"case\", assert expected", "\n    Syntax error on token \"case\", assert expected", "\n    Syntax error on token \"default\", invalid Label", "\n    Syntax error on token \"}\", delete this token", "\n\n", "    at Score2.main(Score2.java:12)", "\n "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use a &lt;code&gt;map[string]command&lt;/code&gt; similar to how the &lt;code&gt;net/http&lt;/code&gt; package registers handlers. Something akin to this:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://play.golang.org/p/9YzHyLodAQ\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/9YzHyLodAQ&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"errors\"\n)\n\ntype BotFunc func(string) (string, error)\n\ntype BotMap map[string]BotFunc\n\nvar Bot = BotMap{}\n\nfunc (b BotMap) RegisterCommand(command string, f BotFunc) error {\n    if _, exists := b[command]; exists {\n        return errors.New(\"command already exists\")\n    }\n    b[command] = f\n    return nil\n}\n\nfunc (b BotMap) Execute(statement string) (string, error) {\n    // parse out command and query however you choose (not this way obviously)\n    command := statement[:9]\n    query := statement[10:]\n\n    return b.ExecuteQuery(command, query)\n}\n\nfunc (b BotMap) ExecuteQuery(command, query string) (string, error) {\n    if com, exists := b[command]; exists {\n        return com(query)\n    }\n    return \"\", errors.New(\"command doesn't exist\")\n\n}\n\nfunc main() {\n    err := Bot.RegisterCommand(\"search me\", func(query string) (string, error) {\n        fmt.Println(\"search\", query)\n        return \"searched\", nil\n    })\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n    err = Bot.RegisterCommand(\"thesaurus me\", func(query string) (string, error) {\n        fmt.Println(\"thesaurus\", query)\n        return \"thesaurused\", nil\n    })\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n    result, err := Bot.Execute(\"search me please\")\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n    fmt.Println(result)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Obviously there's a lot of checks missing here, but this is the basic idea.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何避免在Go中使用长的switch-case语句", ["\n\n", "I'm writing a chat bot in Go and wondering how can I avoid a long switch-case statement similar to this one:", "\n\n", "switch {\n\n// @bot search me HMAC\ncase strings.Contains(message, \"search me\"):\n    query := strings.Split(message, \"search me \")[1]\n    return webSearch(query), \"html\"\n\n// @bot thesaurus me challenge\ncase strings.Contains(message, \"thesaurus me\"):\n    query := strings.Split(message, \"thesaurus me \")[1]\n    return synonyms(query), \"html\"\n", "\n\n", "Should I define those handlers each in a separate package or should I just use structs and interfaces? Which method will allow me to have a good structure, avoid switch-case and let external developers to easier create handlers?", "\n\n", "I think packages will be a better choice but I'm not sure how to register the handlers with the main bot. Would appreciate an example.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;flag&lt;/span&gt;&amp;#61;getch(); //将输入的字符赋值给flag\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;)//如果flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;&amp;#xff0c;在ascll码中&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;对应的字符为‘&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;’&amp;#xff0c;相当于&amp;#xff1a;如果输入字符为&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff0c;执行flag&amp;#61;getch()&amp;#xff0c;即再次输入一个字符。\n&lt;span class=\"hljs-attribute\"&gt;flag&lt;/span&gt;&amp;#61;getch();//满足flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;的话继续输入一个字符&amp;#xff0c;\n&lt;span class=\"hljs-attribute\"&gt;switch&lt;/span&gt;(flag-&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;)//在ascll表中&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;对应字符‘&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;’。相当于将字符的“&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;...”转换为int的“&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;...”。比如输入a&amp;#61;&amp;#39;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#39;&amp;#xff0c;因为是字符类型&amp;#xff0c;&amp;#39;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#39;相当于ascll码的&lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#xff0c;这就转换为了int型的数字&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["一个while语句包含着switch语句的关于校园门户的代码", ["flag=getch(); //这是什么意思啊", "if(flag==49)//什么意思", "flag=getch();//什么意思！", "switch(flag-48)//什么意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是用vuex吗&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["uni-app使用switch组件开关是灰色是什么原因？", ["uni-app使用switch组件开关是灰色是什么原因？uni-app使用switch组件开关是灰色是什么原因？"]], "Tag": "程序设计"}
{"Answer": "在case2的body内加入goto语句，在switch选择语句前加goto跳转的标志位\r\n\r\nL1:cin&gt;&gt;a;\r\nswitch(a)\r\n{\r\n\tcase 1:\r\n\t.......\r\n\tcase 2:\r\n\t\tgoto L1;\r\n}", "Konwledge_Point": "switch语句及其应用", "Question": ["我想完成一个switch case 的循环，就是当case 2之后，执行完case 2 的语句之后重新回到switch开关处，可以重新输入数字选择case", ["请问怎么实现，最好写一下代码。", "\n我想完成一个switch case 的循环，就是当case 2之后，执行完case 2 的语句之后重新回到switch开关处，可以重新输入数字选择case"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基本上可以放弃&lt;code class=\"language-javascript\"&gt;v-model&lt;/code&gt;&amp;#xff0c;改为&lt;code class=\"language-javascript\"&gt;value&lt;/code&gt;绑定&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"code.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/713654546826142.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["elementui里面的switch怎样避免多次点击频繁问题", ["项目中使用了switch按钮 当点击改变状态发一次请求 这样如果用户多次点击就频繁发请求了 怎么优化一下 类似于防抖 让他频繁点击只触发最后一次 怎样实现呀 ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if(month&amp;#61;1)判断也错了  if(month&amp;#61;&amp;#61;1) &amp;#xff0c;case后边要有空格&lt;br /&gt;switch(year)&amp;#xff1f;应该是 switch(month)&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/130841086666135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;可以参考下这个&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint main()\n{\n    int yy, mm, dd, sum1, sum2;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%d,%d&amp;#34;&lt;/span&gt;, &amp;amp;yy, &amp;amp;mm, &amp;amp;dd);\n    switch (mm)\n    {\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;:sum1&amp;#43;&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((yy % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; yy % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || yy % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; mm &amp;gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    {\n        sum2 &amp;#61; sum1 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; dd;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        sum2 &amp;#61; sum1 &amp;#43; dd;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d年%d月%d日是%d年的第%d天&amp;#34;&lt;/span&gt;, yy, mm, dd, yy, sum2);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch -case 语句", ["C语言switch case语句", "\n", "代码如下", "\n", "\n", "运行结果：case没有执行完。", "\n", "\n", "我的解答思路和尝试过的方法 ：一开始我以为case没能执行到指定case后面语句是问题出现在if else,结果改为else if又出错了", "\n", "我想要达到的结果：利用switch-case计算该日期是当年的第几天"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里是什么问题吗&amp;#xff1f;开关值已经绑定了列表字段&amp;#xff0c;这里写的能回显switch值&amp;#xff0c;同时switch的修改也能同步回到表格值字段上&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["vue element-ui列表中el-switch 开关", ["\n", "\n", "获取列表status的值，切换switch", "vue element-ui列表中el-switch 开关,使用0和1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.你的123.c根本没有保存&lt;br /&gt;2.case语法错误&amp;#xff0c;根本编译不过去&lt;br /&gt;3.你要先编译后运行&amp;#xff0c;不要直接运行exe&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["我的switch为啥不显示", ["我想用switch语句来显示不同存款年期五年后的本金，但是switch不显示", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case后面的字符按ascii码处理。&lt;br /&gt;字符串是字符数组&amp;#xff0c;是一个指针变量&amp;#xff0c;不能用到case后面&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case语句", ["问题：设置字符串类型变量，case后面难道不是应该跟整型常量或常量表达式吗？若是，那么case后跟字符为什么可以运行，跟ASULL码有关吗？刚接触知识点不熟练，求指教。", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n        ", "int", " op1, op2;\n        ", "char", " ch;\n        ", "float", " result;\n\n        ", "printf", "(", "\"请输入式子：\"", ");\n        ", "scanf", "(", "\"%d %c %d\"", ", &op1, &ch, &op2);\n\n        ", "switch", " (ch)\n        {\n                ", "case", " ", "'-'", ": op2 = -op2; ", "// no break", "\n                ", "case", " ", "'+'", ": result = (", "float", ")op1 + op2; ", "break", ";\n                ", "case", " ", "'*'", ": result = (", "float", ")op1 * op2; ", "break", ";\n                ", "case", " ", "'/'", ": \n                        ", "if", " (op2 != ", "0", ")\n                        {\n                                result = (", "float", ")op1 / op2;\n                                ", "break", ";\n                        }\n                        ", "else", "\n                        {\n                                ", "printf", "(", "\"除数不能为零！\\n\"", ");\n                                ", "break", ";\n                        }\n        }\n        ", "printf", "(", "\"结果是：%.2f\\n\"", ", result);\n\n        ", "return", " ", "0", ";\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nscanf_s语句后面加一条语句getchar()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么这个代码中的switch语句在执行了一次后直接进入了default中。", ["\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;欧克&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch—case问题，一直显示missing enclosing switch", ["后面几个case一直都是这样的，麻烦说一下，如果上面照片上没问题，说一下我把代码发一下"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Solved I should instead say:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php switch ($ext): case \"pdf\": ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Rather than &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php switch ($ext): ?&amp;gt; &amp;lt;?php case \"pdf\": ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["SWITCH语句语法错误[重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "PHP parse/syntax errors; and how to solve them?", "\n                \n                    17 answers\n                \n        ", "\n    ", "\n", "\n\n", "I get this error :\n", "Parse error: syntax error, unexpected '', expecting endswitch (T_ENDSWITCH) or case (T_CASE) or default (T_DEFAULT) in /var/www/mel-suhaib/application/modules/default/views/scripts/user/user.phtml on line 244", "\n\n", "<?php switch ($ext): ?>\n\n                     line244++>     <?php case  \"pdf\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"docx\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"zip\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"xlsx\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"pptx\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"rar\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"xls\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"jpg\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"ppt\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"doc\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case  \"3gp\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"mp4\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php case \"png\": ?>\n                                    <img class=\"timeline-img pull-left\" src=\"../../assets/admin/pages/media/blog/2.jpg\" alt=\"\">\n                                    <?php break; ?>\n                                    <?php endswitch; ?>\n", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;data3错了&amp;#xff0c;应该是data1&amp;#43;data2&lt;br /&gt;11到13行&amp;#xff0c;17行都应该换过来&amp;#43; - * /&lt;br /&gt;14行&amp;#xff0c;data2%2等于0就输入有误&amp;#xff1f;等于0只能说明data2是偶数&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言制作计算器（Switch语句）", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己对比一下啊&amp;#xff0c;add的case后面是多行代码&amp;#xff0c;其他的都是执行一行&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java中的switch语句有关问题。", ["代码如下：", "\n", "import", " java.util.Scanner;\n\n", "public", " ", "class", " ", "QueueDemo", " {\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n\n        Queue queue = ", "new", " ", "Queue", "(", "3", ");\n        Boolean loop = ", "true", ";\n        Scanner sc = ", "new", " ", "Scanner", "(System.in);\n        ", "while", "(loop) {\n            System.out.", "print", "(", "\"add:添加一个数\\n\"", " +\n                    ", "\"get:取出一个数\\n\"", " +\n                    ", "\"dispaly:展示所有数\\n\"", " +\n                    ", "\"exit:推出\\n\"", " +\n                    ", "\"请输入：\"", ");\n            ", "String", " str = sc.", "nextLine", "();\n            System.out.", "println", "(", "\"str = \"", "+str);\n            ", "switch", " (str) {\n                ", "case", " ", "\"add\"", ":\n                    System.out.", "println", "(", "\"输入一个要添加的数：\"", ");\n                    ", "int", " value = sc.", "nextInt", "();\n                    ", "//sc.next();", "\n                    queue.", "add", "(value);\n                    ", "break", ";\n                ", "case", " ", "\"get\"", ":\n                    ", "try", " {\n                        System.out.", "println", "(queue.", "get", "());\n                    } ", "catch", " (Exception e){\n                        e.", "printStackTrace", "();\n                    }\n                    ", "break", ";\n                ", "case", " ", "\"display\"", ":\n                    queue.", "display", "();\n                    ", "break", ";\n                ", "case", " ", "\"exit\"", " :\n                    sc.", "close", "();\n                    loop = ", "false", ";\n                    ", "break", ";\n                ", "default", ":\n                    System.out.", "println", "(", "\"输入有误！\"", ");\n                    ", "break", ";\n            }\n        }\n    }\n}\n\n", "\n", "问题是每次输入add后他会在添加完之后再循环一遍然后输出“输入有误”，其他的单词就不会这样。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-using\"&gt;&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; ConsoleApp1\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string[] args)&lt;/span&gt;\n        &lt;/span&gt;{\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入部门号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            string dept &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;();\n            &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (dept)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;: dept &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;自律会&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;: dept &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;学生会&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;: dept &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;团工委&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;: dept &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;艺术团&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;5&amp;#34;&lt;/span&gt;: dept &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;新媒体中心&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;期待你加入&amp;#34;&lt;/span&gt; &amp;#43; dept);\n\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadKey&lt;/span&gt;();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句编写新生报名系统", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; “stdio.h”&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; “conio.h”&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;                           \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;  sum;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入当月利润&amp;#xff1a;&amp;#34;&lt;/span&gt;);       &lt;span class=\"hljs-comment\"&gt;//加入此行便于运行时能够直观体现&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a);\n    b &amp;#61; a / &lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (b)                     \n    {  \n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; a * &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; (a - &lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.075&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;7500&lt;/span&gt; &amp;#43; (a - &lt;span class=\"hljs-number\"&gt;200000&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.05&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;7500&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; (a - &lt;span class=\"hljs-number\"&gt;400000&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;7500&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;6000&lt;/span&gt; &amp;#43; (a - &lt;span class=\"hljs-number\"&gt;600000&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.015&lt;/span&gt;); \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;              &lt;span class=\"hljs-comment\"&gt;//以上时前五种大的分类&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奖金总数&amp;#61;%.2f&amp;#34;&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;7500&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;6000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;6000&lt;/span&gt; &amp;#43; (a - &lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;);                   \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;             &lt;span class=\"hljs-comment\"&gt;//这是最后的一大分类&amp;#xff0c;需要明确区分&lt;/span&gt;\n    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["不太熟悉switch语句呀，只是参考", ["用switch()编程，企业发放的奖金根据利润提成。利润I低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入利润，求应发放奖金总数？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;头文件&amp;#xff1a;math.h&lt;br /&gt;double cos(double x);&lt;br /&gt;调用这个方法计算。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; y;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(x/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x&amp;#43;&lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x&amp;#43;&lt;span class=\"hljs-number\"&gt;7.5&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x&amp;#43;&lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%g\\n&amp;#34;&lt;/span&gt;,y);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n} \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于#c语言#的问题，请各位专家解答！求X的余弦值", ["关于#c语言#的问题，请各位专家解答！求X的余弦值。", "关于#c语言#的问题，请各位专家解答！求X的余弦值。", "关于#c语言#的问题，请各位专家解答！求X的余弦值。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大概这种写法&lt;br /&gt;我只写了星期一的情况,剩下的你大概补全一下即可&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *b[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Monday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Tuesday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Wednesday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Thursday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Friday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Saturday&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Sumday&amp;#34;&lt;/span&gt;};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, a);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;compare&lt;/span&gt;(a, b))\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期0&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;compare&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *a, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; **b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, b[i]);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(a, b[i]))\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言翻译英文星期（switch语句）", ["根据输入英文星期输出中文星期", "例如，如果输入的是“Monday”，程序输出“星期一”。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;Case&lt;/code&gt; statements are only &lt;strong&gt;labels&lt;/strong&gt;. This means the compiler will interpret this as a jump directly to the label. In C++, the problem here is one of scope. Your curly brackets define the scope as everything inside the &lt;code&gt;switch&lt;/code&gt; statement. This means that you are left with a scope where a jump will be performed further into the code skipping the initialization. The correct way to handle this is to define a scope specific to that &lt;code&gt;case&lt;/code&gt; statement and define your variable within it. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (val)\n{   \ncase VAL:  \n{\n  // This will work\n  int newVal = 42;  \n  break;\n}\ncase ANOTHER_VAL:  \n...\nbreak;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不能在 switch 语句中声明变量？", ["\n\n", "I've always wondered this - why can't you declare variables after a case label in a switch statement?  In C++ you can declare variables pretty much anywhere (and declaring them close to first use is obviously a good thing) but the following still won't work:", "\n\n", "switch (val)  \n{  \ncase VAL:  \n  // This won't work\n  int newVal = 42;  \n  break;\ncase ANOTHER_VAL:  \n  ...\n  break;\n}  \n", "\n\n", "The above gives me the following error (MSC):", "\n\n", "\n  ", "initialization of 'newVal' is skipped by 'case' label", "\n", "\n\n", "This seems to be a limitation in other languages too.  Why is this such a problem?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/92396/why-cant-variables-be-declared-in-a-switch-statement"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You would have to set &lt;code&gt;$ext&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and not '' because this isn't false for the if statement.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;default: $ext = false; break;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or you check if &lt;code&gt;$ext&lt;/code&gt; isn't an empty string:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($ext != '') {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To prevent the registration when an invalid filetype is uploaded you have to put &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$password = md5($password);\n$query = \"INSERT INTO users (first_name, last_name, email, password, image) VALUES ('$first_name', '$last_name', '$email', '$password', '$n')\";\nmysql_query($query) or die(\"Insert failed. \" . mysql_error() . \"&amp;lt;br /&amp;gt;\" . $query);\n$register_good_message = '&amp;lt;div class=\"alert alert-success\"&amp;gt;Registration successful!&amp;lt;/div&amp;gt;';?&amp;gt;\n&amp;lt;script&amp;gt;\n$('a.account-register').trigger('click');\n&amp;lt;/script&amp;gt;&amp;lt;?php\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Inside of &lt;code&gt;if($ext != '') { /*Put code at the end of if*/}&lt;/code&gt; or &lt;code&gt;if($ext) { /*Put code at the end of if*/ }&lt;/code&gt;. Otherwise it doesn't matter if there is a valid filetype.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用于个人资料照片上传的SWITCH语句", ["\n\n", "I have a switch statement which determines the filetype of an image uploaded for use as an avatar in my application, however it seems to be a little faulty, insofar as it allows for a successful registration regardless of whether an allowed filetype is present or not, and no error messages are being returned re. the filetype submitted not being allowed.", "\n\n", "$submit = $_POST['submit'];\n\nif ($submit == 'Sign up!') {\n    require_once(\"db_connect.php\");\n    $submit = clean_string($_POST['submit']);\n    $first_name = clean_string($_POST['first-name']);\n    $last_name = clean_string($_POST['last-name']);\n    $email = clean_string($_POST['email']);\n    $password = clean_string($_POST['password']);\n    $confirm_password = clean_string($_POST['confirm-password']);\n\n    //Output variables\n    $register_bad_message = '';\n    $register_good_message = '';\n\n    require_once($_SERVER['DOCUMENT_ROOT'] . '/recaptcha/recaptchalib.php');\n    $privatekey = \"6Ldbd8ASAAAAAFz8VT29H5w4WLNjsbI-mFY2QkaC\";\n    $resp = recaptcha_check_answer ($privatekey,\n                                    $_SERVER[\"REMOTE_ADDR\"],\n                                    $_POST[\"recaptcha_challenge_field\"],\n                                    $_POST[\"recaptcha_response_field\"]);\n    if (!$resp->is_valid) {\n        $errMessage = $resp->error;\n        $register_bad_message = '<div class=\"alert alert-error\">The reCAPTCHA you entered wasn\\'t correct. Please try again.</div>';?>\n        <script>\n            $('a.account-register').trigger('click');\n        </script><?php\n    } else {\n        if ($first_name&&$last_name&&$email&&$password&&$confirm_password) {\n            if ($password == $confirm_password) {\n                if (strlen($password) > 25 || strlen($password) < 6) {\n                    $register_bad_message = '<div class=\"alert alert-error\">Please enter a password between 6 and 25 characters.</div>';?>\n                    <script>\n                        $('a.account-register').trigger('click');\n                    </script><?php\n                } else {\n                    if($db_server) {\n                        $first_name = clean_string($first_name);\n                        $last_name = clean_string($last_name);\n                        $email = clean_string($email);\n                        $password = clean_string($password);\n                        mysql_select_db($db_database);\n\n                        $taken = mysql_query(\"SELECT email FROM users WHERE email='$email'\");\n                        $count = mysql_num_rows($taken);\n                        if ($count > 0) {\n                            $register_bad_message = '<div class=\"alert alert-error\">The email you have entered is already associated with a Screening account. Please choose another.</div>';?>\n                            <script>\n                                $('a.account-register').trigger('click');\n                            </script><?php\n                        } else {\n                            if ($_FILES) {\n                                //Put file properties into variables\n                                $file_name = $_FILES['profile-image']['name'];\n                                $file_size = $_FILES['profile-image']['size'];\n                                $file_tmp_name = $_FILES['profile-image']['tmp_name'];\n\n\n                                //Determine filetype\n                                switch ($_FILES['profile-image']['type']) {\n                                    case 'image/jpeg': $ext = \"jpg\"; break;\n                                    case 'image/png': $ext = \"png\"; break;\n                                    default: $ext = ''; break;\n                                }\n\n                                if ($ext) {\n                                    //Check filesize\n                                    if ($file_size < 5242880) {\n                                        //Process file - resize, clean up filename and move to safe location\n                                        $image = new SimpleImage();\n                                        $image->load($file_tmp_name);\n                                        $image->resizeToWidth(250);\n                                        $image->save($file_tmp_name);\n\n\n                                        $n = \"$file_name\";\n                                        $n = ereg_replace(\"[^A-Za-z0-9.]\", \"\", $n);\n                                        $n = strtolower($n);\n                                        $n = \"avatars/$n\";\n                                        move_uploaded_file($file_tmp_name, $n);\n                                    } else {\n                                        $register_bad_message = '<div class=\"alert alert-error\">Please ensure your chosen file is less than 5MB.</div>';?>\n                                        <script>\n                                            $('a.account-register').trigger('click');\n                                        </script><?php\n                                    }\n                                } else if (!empty($ext)) {\n                                    $register_bad_message = '<div class=\"alert alert-error\">Please ensure your image is of filetype .jpg or.png.</div>';?>\n                                    <script>\n                                        $('a.account-register').trigger('click');\n                                    </script><?php\n                                }\n                            }\n                            $password = md5($password);\n                            $query = \"INSERT INTO users (first_name, last_name, email, password, image) VALUES ('$first_name', '$last_name', '$email', '$password', '$n')\";\n                            mysql_query($query) or die(\"Insert failed. \" . mysql_error() . \"<br />\" . $query);\n                            $register_good_message = '<div class=\"alert alert-success\">Registration successful!</div>';?>\n                            <script>\n                                $('a.account-register').trigger('click');\n                            </script><?php\n                        }\n                    } else {\n                        $register_bad_message = '<div class=\"alert alert-error\">Error: could not connect to the database.</div>';?>\n                        <script>\n                            $('a.account-register').trigger('click');\n                        </script><?php\n                    }\n                    require_once(\"db_close.php\");\n                }\n            } else {\n                $register_bad_message = '<div class=\"alert alert-error\">Passwords failed to match. Please try again.</div>';?>\n                <script>\n                    $('a.account-register').trigger('click');\n                </script><?php\n            }\n        } else {\n            $register_bad_message = '<div class=\"alert alert-error\">Please fill in all fields before continuing.</div>';?>\n            <script>\n                $('a.account-register').trigger('click');\n            </script><?php\n        }\n    }\n}\n", "\n\n", "For example, uploading a .GIF file results in no errors and a 'Registration successful' message, however when logging into the profile, the uploaded profile photo is not shown. I'm thinking that the code is refusing the filetype and not storing it in the database, but is still processing the registration, rather than cancelling it, which is what it should do.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Add &lt;code&gt;break&lt;/code&gt; after any print.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array = [1,2,3];\n\nforeach($array as $n){\n  switch($n){\n    case 1:\n      print 1;\n      break;\n    case 2:\n      print 2;\n      break;\n    default:\n      print 3;\n      break;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you wouldn't had a &lt;code&gt;break&lt;/code&gt; keyword, then the code would be continue to be executed from the point of the case.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么总是在这个PHP switch语句中输入案例？  [关闭]", ["\n\n", "This is my code:", "\n\n", "$array = [1,2,3];\n\nforeach($array as $n){\n  switch($n){\n    case 1:\n      print 1;\n    case 2:\n      print 2;\n    default:\n      print 3;\n  }\n}\n", "\n\n", "It prints 123233", "\n\n", "I don't get it, shouldn't it print 123 ?? I'm confused because:", "\n\n", "\n", "1 is 1, but 2 is not 1, and 3 is not 1", "\n", "2 is not 1, 2 is 2, 2 is not 3", "\n", "3 is not 1, 3 is not 2, 3 is 3", "\n", "\n", "Why isn't it working as expected?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Get the rating class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function get_rating_class($thumbs_number) {\n    if ($thumbs_number &amp;lt; 0) return 'bad';\n    if ($thumbs_number &amp;lt; 2) return 'average';\n    if ($thumbs_number &amp;lt; 4) return 'good';\n    if ($thumbs_number &amp;lt; 6) return 'great';\n    if ($thumbs_number &amp;lt; 8) return 'excellent';\n    return 'brillant';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Print the rating class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function rating_class($thumbs_number) {\n    echo get_rating_class($thumbs_number);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Print the vote phrase:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function votes($thumbs_number) {\n    echo ($thumbs_number == 1 || $thumbs_number == -1) ? _e('vote') : _e('votes');\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Template code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    preg_match( '!&amp;lt;div class=\"thumblock \"&amp;gt;(.*)&amp;lt;/div&amp;gt;!si' , wp_gdsr_render_article_thumbs(0, false, \"\", 0, \"\", false) , $n );\n    $thumbs_number = strip_tags( $n[1] );\n?&amp;gt;\n\n&amp;lt;div class=\"topic-like-count &amp;lt;?php rating_class($thumbs_number); ?&amp;gt;\"&amp;gt;\n    &amp;lt;h4&amp;gt;&amp;lt;?php wp_gdsr_render_article_thumbs(); ?&amp;gt;&amp;lt;/h4&amp;gt;\n    &amp;lt;span&amp;gt;&amp;lt;?php votes($thumbs_number); ?&amp;gt;&amp;lt;/span&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["将此switch语句转换为函数（并将内容与逻辑分开）？", ["\n\n", "Basically, I would like to turn the following switch-statement (which is in a Wordpress template file):", "\n\n", "    <?php preg_match( '!<div class=\"thumblock \">(.*)</div>!si' , wp_gdsr_render_article_thumbs(0, false, \"\", 0, \"\", false) , $n );\n    $thumbs_number = strip_tags( $n[1] ); ?>\n\n    <div class=\"topic-like-count\n        <?php // Apply style based on number of votes\n            switch ($thumbs_number) {\n                case ($thumbs_number == 0):\n                case ($thumbs_number == 1): echo ' average'; break;\n                case ($thumbs_number == 2):\n                case ($thumbs_number == 3): echo ' good'; break;\n                case ($thumbs_number == 4):\n                case ($thumbs_number == 5): echo ' great'; break;\n                case ($thumbs_number == 6):\n                case ($thumbs_number == 7): echo ' excellent'; break;\n                default:\n                    if ($thumbs_number <= -1) echo \"bad\";\n                    else if ($thumbs_number > 7) echo \"brillant\";\n            }\n        ?>\n      \">\n        <h4><?php wp_gdsr_render_article_thumbs(); ?></h4>\n\n        <?php if ( $thumbs_number == 1 || $thumbs_number == -1 ) : ?>\n            <span><?php _e( 'vote' ); ?></span>\n        <?php else : ?>\n            <span><?php _e( 'votes' ); ?></span>\n        <?php endif; ?>\n    </div>\n", "\n\n", "into a function (stored in ", "functions.php", ") that I can use like this in a template:", "\n\n", "<?php rating_class(); ?>", "\n\n", "Any suggestions?", "\n\n", "(The question has a bit of Worpdress but I think it is more a php question)", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//1:编程判断输入整数的正负性和奇偶性&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;main&lt;/span&gt;()\n{\n &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个整数:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n%d是&amp;#34;&lt;/span&gt;,i);\n &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;正&amp;#34;&lt;/span&gt;);\n &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;负&amp;#34;&lt;/span&gt;);\n &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;偶数\\n&amp;#34;&lt;/span&gt;);\n &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奇数\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//2.在屏幕上显示一张如下所示的时间表&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;****TIME****\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.morning\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2.afternoon\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3.night\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Enter your choice:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Good morning\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Good afternoon\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Good night\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Selection wrong\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//3.输入a、b、c&amp;#xff0c;3个整数&amp;#xff0c;输出最大数。&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入三个整数:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c);\na &amp;#61;( a&amp;gt;&amp;#61;b)?a:b;\na &amp;#61; (a&amp;gt;&amp;#61;c)?a:c;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大的数为:%d&amp;#34;&lt;/span&gt;,a);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//4.一个工人的工资按如下方法计算:在正常工作时间内每小时位20元&amp;#xff0c;如果超出正常工作时间&amp;#xff0c;则在超过的时间内每小时30元&amp;#xff0c;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//其中&amp;#xff0c;每月正常工作时间为160小时&amp;#xff0c;编写程序计算并输出这个工人的工作收入&amp;#xff0c;月工作时间从键盘输入&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hour,money&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;hour);\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(hour&amp;gt;&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;){\n         money&amp;#61;&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;&amp;#43;(hour&lt;span class=\"hljs-number\"&gt;-160&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n     }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n         money&amp;#61;hour*&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;\n     }\n     &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;月工作收入为&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,money);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//5:输入三角形的三条边a&amp;#xff0c;b&amp;#xff0c;c&amp;#xff0c;判断它们是否能构成三角形&amp;#xff0c;若能构成三角形&amp;#xff0c;则指出是何种三角形&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; e 1e-1&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b,c;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input a,b,c:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f,%f,%f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;#43;b&amp;lt;c||b&amp;#43;c&amp;lt;a||a&amp;#43;c&amp;lt;b)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是三角形&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;#61;&amp;#61;b||b&amp;#61;&amp;#61;c||a&amp;#61;&amp;#61;c)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(a*a&amp;#43;b*b-c*c)&amp;lt;&amp;#61;e||&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(c*c&amp;#43;b*b-a*a)&amp;lt;&amp;#61;e||&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(a*a&amp;#43;c*c-b*b)&amp;lt;&amp;#61;e)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;等腰直角三角形&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;等腰三角形&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(a*a&amp;#43;b*b-c*c)&amp;lt;&amp;#61;e||&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(c*c&amp;#43;b*b-a*a)&amp;lt;&amp;#61;e||&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(a*a&amp;#43;c*c-b*b)&amp;lt;&amp;#61;e)\n         {\n             &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;直角三角形&amp;#34;&lt;/span&gt;);\n         }\n         &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;一般三角形&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//6.某商场为了促销商品&amp;#xff0c;采用购物打折来吸引顾客&amp;#xff0c;顾客一次性购物的折扣率为&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b,c;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入购物金额&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;a);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;)\n        b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,c&amp;#61;a*b;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)\n        b&amp;#61;&lt;span class=\"hljs-number\"&gt;0.95&lt;/span&gt;,c&amp;#61;a*b;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;)\n        b&amp;#61;&lt;span class=\"hljs-number\"&gt;0.9&lt;/span&gt;,c&amp;#61;a*b;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;)\n        b&amp;#61;&lt;span class=\"hljs-number\"&gt;0.85&lt;/span&gt;,c&amp;#61;a*b;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;)\n        b&amp;#61;&lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;,c&amp;#61;a*b;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;打折后%0.0f元\\n&amp;#34;&lt;/span&gt;,c);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//7. 判断一个三位数是否是“水仙花数”。&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i; \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i); \n    a&amp;#61;i/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;         &lt;span class=\"hljs-comment\"&gt;//求百位数&lt;/span&gt;\n    b&amp;#61;i/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;       &lt;span class=\"hljs-comment\"&gt;//求十位数&lt;/span&gt;\n    c&amp;#61;i%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;          &lt;span class=\"hljs-comment\"&gt;//求个位数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( i&amp;#61;&amp;#61;a*a*a&amp;#43;b*b*b&amp;#43;c*c*c ){\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是水仙花数&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是水仙花数&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言 用if，if-else，if-else-if，switch语句", ["1:编程判断输入整数的正负性和奇偶性。", "2:    在屏幕上显示一张如下所示的时间表：", "Time", "1 morning", "2 afternoon", "3 night", "Please enter your choice:", "操作人员根据提示进行选择，程序根据输入的时间序号显示相应的问候信息，选择1时显示“Good morning”，选择2时显示“Good afternoon”，选择3时显示“Good night”，对于其他选择显示“Selection error”。", "3.    输入a、b、c，3个整数，输出最大数。", "4.一个工人的工资按如下方法计算:在正常工作时间内每小时位20元，如果超出正常工作时间，则在超过的时间内每小时30元，其中，每月正常工作时间为160小时，编写程序计算并输出这个工人的工作收入，月工作时间从键盘输入", "5:输入三角形的三条边a，b，c，判断它们是否能构成三角形，若能构成三角形，则指出是何种三角形（等腰三角形，等边三角形，一般三角形）", "6.某商场为了促销商品，采用购物打折来吸引顾客，顾客一次性购物的折扣率为：", "（1）少于500元不打折", "（2）500元以上（包含500）1000元以下折扣为95折", "（3）1000元以上（包含1000）少于2000元者折扣为9折", "（4）2000元以上（包含2000）少于3000元者折扣为85折", "（5）3000元以上（包含3000）折扣为8折。", "请编写相应程序", "7.    判断一个三位数是否是“水仙花数”。所谓“水仙花数”是一个三位数，其各位数字的立方和等于该数本身。例如：153是一个水仙花数，", "因为：153=1^3+5^3+3^3"]], "Tag": "程序设计"}
{"Answer": "public static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\twhile (true) {\r\n\t\t\tSystem.out.println(\"1.查看全部用户信息\"); // 我想返回的地方\r\n\t\t\tSystem.out.println(\"2.按年龄查看用户信息\");\r\n\t\t\tSystem.out.println(\"3.修改自己的用户信息\");\r\n\t\t\tSystem.out.println(\"0.返回\");\r\n\t\t\tint k = sc.nextInt();\r\n\t\t\tswitch (k) {\r\n\t\t\tcase 1:\r\n\t\t\t\tSystem.out.println(\"用户ID\" + \"\\t用户名\" + \"\\t年龄\" + \"\\t地址\" + \"\\t电话\");\r\n\t\t\t\tSystem.out.println(\"请输入你的操作功能(0返回上一级操作、1、退出系统)：\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\t}\r\n\r\n\t\t\tk = sc.nextInt();\r\n\t\t\tswitch (k) {\r\n\t\t\tcase 0:\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsc.close();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}", "Konwledge_Point": "switch语句及其应用", "Question": ["小白求教，java中如何返回上一级", ["我定义了一个判断", "\n if(m==1){", "\n           System.out.println(\"1.查看全部用户信息\");       //我想返回的地方", "\n                   System.out.println(\"2.按年龄查看用户信息\");", "\n                   System.out.println(\"3.修改自己的用户信息\");", "\n                   System.out.println(\"0.返回\");", "\n                   int k=sc.nextInt();", "\n                   switch(k) {", "\n                       case 0: mm=1;break;//返回", "\n                       case 1: System.out.println(\"用户ID\"+\"\\t用户名\"+\"\\t年龄\"+\"\\t地址\"+\"\\t电话\");", "\n                               System.out.println(user1.selectall());", "\n                               System.out.println(\"请输入你的操作功能(0返回上一级操作、1、退出系统)：\");", "\n                              break;", "\n                                case 2:", "\n                                case 3:", "\n }", "\n 现在问题就是，当case1执行完后，我想返回\"查看全部用户信息\"，但我不知道怎么做，求各位大神指教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch里面只能是case&amp;#xff0c;然后在case代码块里才能加if...else代码块&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch，if语句", ["代码出了什么问题？", "报错 [Error] duplicate case value等问题", "希望各位帮帮忙，哪里出了问题", "#include <stdio.h>", "int main(void)", "{", "    int a,c,d;", "    float b,j;", "    scanf(\"%d,%f\",&a,&b);", "    c=b;", "    d=b+1;", "    if(a>=0&&a<=4)", "        {", "            switch(a)", "            {", "                if((2*c)%2==0)", "                {", "                case 0: j=10.0+(c-1)*3.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 1: j=10.0+(c-1)*4.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 2: j=15.0+(c-1)*5.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 3: j=15.0+(c-1)*6.5;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 4: j=15.0+(c-1)*10.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                }", "                else", "                case 0: j=10.0+(d-1)*3.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 1: j=10.0+(d-1)*4.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 2: j=15.0+(d-1)*5.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 3: j=15.0+(d-1)*6.5;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "                case 4: j=15.0+(d-1)*10.0;", "                        printf(\"Price: %.2f\\n\",j);", "                        break;", "\n", "        }\n    }\n", "else", "\n", "printf", "(", "\"Error in Area\\n\"", ");\n", "return", " ", "0", ";\n    \n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; year,month;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入年月:: &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;year,&amp;amp;month);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(year%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;year%&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;||year%&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; \n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(month){\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;31 天\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;29 天\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;28 天\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;30 天\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["求一个月有多少天，用switch完成。", ["求一个月有多少天，用switch完成。", "\n", "输入格式:", "输入两个整数，如2021 9，第一个表示年，第二个表示月，输出该月的天数。需要考虑闰年。如果月份错误，输出ERROR。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your issue is in this line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;resp, body, errs := req.Get(suburl)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The short variable declaration operator &lt;code&gt;:=&lt;/code&gt; &lt;em&gt;creates new variables&lt;/em&gt; and assigns values to them. These &lt;em&gt;new&lt;/em&gt; variables are said to \"shadow\" the variables you created in the outer scope, because they have the same names and thus they \"hide\" the outer-scoped variables from within that scope. To fix the issue, just assign the values to your existing variables from the outer scope, instead of creating new ones:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;resp, body, errs = req.Get(suburl)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note the use here of assignment &lt;code&gt;=&lt;/code&gt; instead of short declaration &lt;code&gt;:=&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Golang Switch变量范围", ["\n\n", "I'm trying to figure out simple switch in Golang and I'm stuck with variable scope.", "\n\n", "var body string\nvar errs error\nreq := gorequest.New()\nvar resp gorequest.Response\nswitch verb {\ncase 0:\n    resp, body, errs := req.Get(suburl).\n        Set(\"X-Auth-Token\", d.Token).\n        Set(\"Content-type\", \"application/json\").\n        End()\n}\nif errs != nil {\n    return &ConnResponse{resp.StatusCode, body, fmt.Errorf(\"%s\", errs)}\n}\n", "\n\n", "I've declared resp, body, errs and req before switch and I've thought that they will be available after the switch body. \nWhat compiler returns is below errors (from the case declaration)", "\n\n", "# command-line-arguments\n./conn.go:135:3: resp declared and not used\n./conn.go:135:9: body declared and not used\n./conn.go:135:15: errs declared and not used\n", "\n\n", "So I'm curious is the variable scope inside switch body is somehow different from declared in function? How would this piece of code look like to be able to get access to data after switch body.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;开关下面表达式完了要写跳出语句&amp;#xff0c;每个开关都要写&amp;#xff0c;不然默认全是第一个开关的表达式&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句不理解，这样不应该输出P吗？为什么输出PQ", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;())!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(ch) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;!&amp;#39;&lt;/span&gt; :\n                cnt&amp;#43;&amp;#43;;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;!!&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;:\n                cnt&amp;#43;&amp;#43;;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;!&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,ch);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        \n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n%d次替换&amp;#34;&lt;/span&gt;,cnt);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何用switch写出替换，并报告次数。", ["题目：使用 switch语句编写一个程序读取输入，读到#结束，用感叹号替换句号，用两个感叹号替换原来的感叹号，最后报告替换多少次替换。", "我的问题是如何用switch写出替换，并报告次数。", "我的代码", "\n", " ", "#", "include", " ", "<stdio.h>", "\n\n    ", "int", " ", "main", " ", "(", "void", ")", " ", "{\n", "char", " ch;\n", "scanf", "(", "\"%c\"", ",&ch);\n    ", "while", "((ch =", "getchar", "())!=", "'#'", ")\n{\n    ", "switch", "(ch){\n        ", "case", " ", "'!'", " :\n            ", "printf", "(", "\"!!\\n\"", ");\n            ", "break", ";\n        ", "case", " ", "','", ":\n            ", "printf", "(", "\"!\\n\"", ");\n            ", "break", ";\n    }\n    ", "return", " ", "0", ";\n}\n}\n", "\n", "后面就没有思路了(>﹏<)，求解答，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cur放外面而且&amp;#61;号改为&amp;#61;&amp;#61;&amp;#xff0c;你原来的代码是直接给cur赋值1,1为true所以一直执行第一个if判断&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt; if ((cur &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//改为&amp;#61;&amp;#61;&lt;/span&gt;\n            console&lt;span class=\"hljs-selector-class\"&gt;.log&lt;/span&gt;(cur);\n            cur&amp;#43;&amp;#43;;\n        } else if ((cur &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//改为&amp;#61;&amp;#61;&lt;/span&gt;\n            console&lt;span class=\"hljs-selector-class\"&gt;.log&lt;/span&gt;(cur);\n            cur&amp;#43;&amp;#43;;\n        } else if ((cur &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//改为&amp;#61;&amp;#61;&lt;/span&gt;\n            console&lt;span class=\"hljs-selector-class\"&gt;.log&lt;/span&gt;(cur);\n            cur&amp;#43;&amp;#43;;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;帮助到你能点个&lt;strong&gt;采纳&lt;/strong&gt;吗&amp;#xff0c;谢谢~&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语句里的变量cur递增，重复执行可以依次输出递增值if else 只输出1为啥？", ["btnContainer.addEventListener(\"click\", function (e) {\n    if (e.target.classList.contains(\"next\")) {\n        let cur = 1;\n        // switch (cur) {\n        //     case 1:\n        //         console.log(cur);\n        //         cur++;\n        //         break;\n        //     case 2:\n        //         console.log(cur);\n        //         cur++;\n        //         break;\n        //     case 3:\n        //         console.log(cur);\n        //         cur++;\n        //         break;\n        // }\n        if ((cur = 1)) {\n            console.log(cur);\n            cur++;\n        } else if ((cur = 2)) {\n            console.log(cur);\n            cur++;\n        } else if ((cur = 3)) {\n            console.log(cur);\n            cur++;\n        }\n}", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该使用i2作为switch的条件,i1是第一个选择,i2才是第二个选择&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java 中switch语句，case四个，但是不管选择1234的哪个，都是按照第一个输出", ["\n", "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage hz;\nimport java.io.*;\n/**\n *\n * @author user\n */\npublic class Hz {\n    public static void main(String[] args){\n    try\n    {\n                InputStreamReader isr = new  InputStreamReader (System.in);\n                BufferedReader br = new BufferedReader(isr);\n                System.out.println(\"请输入计算种类：\\n1.四则运算：\\n2.计算面积：\");\n                int i1 = Integer.valueOf(br.readLine());\n                if(i1==1)\n                {\n                    System.out.println(\"输入计算方法:\\n1.加法\\n2.减法\\n3.乘法\\n4.除法\");\n                    int i2 = Integer.valueOf(br.readLine());\n                    System.out.println(\"输入两个数用空格隔开：\");\n                    String[] s = br.readLine().split(\" \");\n                    double x = Double.valueOf(s[0]);\n                    double y = Double.valueOf(s[1]); \n                    switch(i1)\n                    {\n                        case 1:\n                                System.out.println(x+\"+\"+y+\"=\"+(x+y));\n                                break;\n                                \n                        case 2:\n                                System.out.println(x+\"-\"+y+\"=\"+(x-y));\n                                break;\n                        case 3:\n                                System.out.println(x+\"*\"+y+\"=\"+(x*y));\n                                break;\n                        case 4:\n                                System.out.println(x+\"/\"+y+\"=\"+(x/y));\n                                break;\n                    }   \n                }else\n                {\n                    System.out.println(\"选择图形：\\n1.正方形\\n2.矩形\\n3.图形\\n4.三角形\");\n                    int i2 = Integer.valueOf(br.readLine());\n                    System.out.println(\"输入两个数用空格隔开：\");\n                    String[] s = br.readLine().split(\" \");\n                    double x = Double.valueOf(s[0]);\n                    \n                    switch(i2)\n                    {\n                        case 1:\n                                System.out.println(\"正方形面积：\"+x*x);\n                                break;\n                        case 2:\n                                double y = Double.valueOf(s[1]);\n                                System.out.println(\"矩形面积：\"+x*y);\n                                break;\n                        case 3:\n                                System.out.println(\"圆形面积：\"+Math.PI*x*x);\n                                break;\n                        case 4:\n                                 double z = Double.valueOf(s[1]);\n                                System.out.println(\"三角形面积：\"+0.5*x*z);\n                                break;\n                }\n    }\n    }catch(Exception e)\n    {\n        e.printStackTrace();\n        \n    }}\n\n     \n    \n    \n    \n    \n    \n    \n    \n    \n}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; (n&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt; &amp;#43; (n&lt;span class=\"hljs-number\"&gt;-10&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt; &amp;#43;(n&lt;span class=\"hljs-number\"&gt;-100&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用Switch怎么求计程车费用问题啊", ["这样的问题，我先用if再用Switch输出老是有乱七八糟的数字，到底该怎么解啊😭"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;From the golang &lt;a href=\"http://golang.org/ref/spec#Fallthrough_statements\" rel=\"nofollow\"&gt;spec&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Fallthrough statements&lt;/p&gt;\n  \n  &lt;p&gt;A \"fallthrough\" statement transfers control to the first statement of\n  the next case clause in a expression \"switch\" statement. It may be\n  used only as the final non-empty statement in such a clause.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So the problem is: \"case i % FIZZ == 0\" has fallthrough at the end, so \"case i % BUZZ == 0\" branch is executed too, but the condition \"i % BUZZ == 0\" is not checked.&lt;/p&gt;\n\n&lt;p&gt;So to implement Fizz Buzz in golang using switch you need to remove fallthrough and add one more case branch to the top: &lt;a href=\"http://play.golang.org/p/CosqAK4AvO\" rel=\"nofollow\"&gt;play.golang.org&lt;/a&gt;. As you can see, \"if-version\" is more concise.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["fizzbuzz上的输出与switch case语句混淆", ["\n\n", "Here the famous \"fizz buzz\" program in Go using switch/case and if/else conditionals. The problem is that using switch/case is generating unexpected output while if/else (with same conditions) works fine. I know that switch/case in golang is different than other C-family languages, but what's wrong with this code fragment?", "\n\n", "func main() {\nconst (\n    FIZZ = 3\n    BUZZ = 5\n)\n\n//section with switch/case gives unexpected output\nfor i := 1; i <= 30; i++ {\n    switch {\n    case i % FIZZ == 0:\n        fmt.Printf(\"%d fizz\\t\", i%3)\n        fallthrough\n    case i % BUZZ == 0:\n        fmt.Printf(\"%d buzz\\t\", i%5)\n    }\n    fmt.Printf(\"\\t%d\n\", i)\n}\n\nfmt.Printf(\"now towards the if/else\n\")\n\n//section with if/else works as expected\nfor i := 1; i <= 30; i++ {\n    if i % FIZZ == 0 {\n        fmt.Printf(\"%d fizz\\t\", i%3)\n    }\n    if i % BUZZ == 0 {\n        fmt.Printf(\"%d buzz\\t\", i%5)\n    }\n    fmt.Printf(\"\\t%d\n\", i)\n}\n", "\n\n", "}", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有main()函数和头文件吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch语句实现多分支选择结构时，编译出错了，系统提示的错误我不理解", ["\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;回答引用ChatGPT&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;PCIe设备的上限确实受到BDF&amp;#xff08;Bus-Device-Function&amp;#xff09;编号的限制&amp;#xff0c;每个BDF编号都对应一个唯一的PCIe设备。根据PCIe规范&amp;#xff0c;Bus Number占用8位&amp;#xff0c;Device Number占用5位&amp;#xff0c;Function Number占用3位&amp;#xff0c;因此PCIe总线最多支持256个子总线&amp;#xff08;Bus Number取值范围为0255&amp;#xff09;&amp;#xff0c;每个子总线最多支持32个设备&amp;#xff08;Device Number取值范围为031&amp;#xff09;&amp;#xff0c;每个设备最多支持8个功能&amp;#xff08;Function Number取值范围为0~7&amp;#xff09;。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;除了BDF编号的限制之外&amp;#xff0c;还有其他因素可能影响PCIe设备的上限。其中一个可能的因素是系统中可用的PCIe资源的数量和分配方式&amp;#xff0c;例如PCIe Root Complex&amp;#xff08;PCIe根复杂&amp;#xff09;的数量和配置、PCIe交换机的数量和配置、PCIe资源分配的策略等。如果PCIe资源分配不合理&amp;#xff0c;可能会导致某些设备无法识别或无法正常工作。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;与PCIe BAR&amp;#xff08;Base Address Register&amp;#xff0c;基址寄存器&amp;#xff09;没有直接关系&amp;#xff0c;PCIe BAR主要用于描述PCIe设备的I/O端口和内存地址空间&amp;#xff0c;由操作系统或驱动程序进行配置和管理。PCIe BAR的数量和大小通常由PCIe设备的规格决定&amp;#xff0c;与设备的上限没有直接关系。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["pcie switch下的endpoint数量上限", ["想问下pcie系统中，子设备上限是多少。我网上查找说是受BDF限制，在BDF中，Bus Number占用8位，Device Number占用5位，Function Number占用3位。显然，PCIe总线最多支持256个子总线，每个子总线最多支持32个设备，每个设备最多支持8个功能。", "从上面来看我一个switch下面理论上最多可以接32个endpoint。但我实际接了13个endpoint就不能再多了，多了就无法识别。所以除了受BDF影响外，肯定还有其他地方影响pcie设备上限。是什么呢？和pcie bar有关系吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果itemScene type itemLevel 的值都是1到n&amp;#xff0c;比facilityItemList数组对应下标多1&amp;#xff0c;可以直接这样&lt;/p&gt;\n&lt;p&gt;facilityItemList[itemScene-1][type-1][itemLevel-1].Add(item);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c# switch嵌套过多，如何优化", ["        ", "switch", " (itemScene)\n        {\n            ", "case", " ", "1", ":\n                {\n                    ", "switch", " (", "type", ")\n                    {\n                        ", "case", " ", "1", ":\n                            {\n                                ", "switch", " (itemLevel)\n                                {\n                                    ", "case", " ", "1", ":\n                                        facilityItemList[", "0", "][", "0", "][", "0", "].Add(item);\n                                        ", "break", ";\n                                    ", "case", " ", "2", ":\n                                        facilityItemList[", "0", "][", "0", "][", "1", "].Add(item);\n                                        ", "break", ";\n                                        ", "//TODO", "\n\n                                }\n                            }\n                            ", "break", ";\n\n                    }\n                }\n                ", "break", ";\n        }\n", "\n", "框架类似这样，switch中嵌套switch，每一个switch有七八个case，这样这段代码会过于臃肿，请问有什么办法可以优化这部分结构呢"]], "Tag": "程序设计"}
{"Answer": "switch开关按钮选择了是，input框才可以输入，如果没选择就不能输入\r\n\r\n```\r\n根据你的描述哈，当按钮选择是就是文本框可以输出，那么，首先加载进来html的时候呢，input给他加个disabled=\"true\"属性，\r\n然后就是checkbox的change事件了，写 判断  是就移除input里的disabled=\"true\" ，否的话就在设置成disabled=\"true\"。\r\n\r\n```\r\n## 代码：\r\n\r\n```\r\n &lt;input type=\"text\" name=\"needTime\" id=\"needTime\" disabled=\"true\" class=\"layui-input\" style=\"border: 1px solid #c2c2c2;\" &gt;\r\n\t\t\t\t\t\r\n```\r\n## js  checkbox  change事件\r\n\r\n\r\n```\r\n$(\"#isEfectSendElec\").change(function() {\r\n        if(是){\r\n\t\t\t\t   $('#needTime').attr(\"disabled\",false);\r\n\t\t\t\t}else{\r\n\t\t\t\t $('#needTime').attr(\"disabled\",true);\r\n\t\t\t\t}\r\n});\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["switch开关按钮选择了是，input框才可以输入，如果没选择就不能输入", ["\n\n", "这个是input框", "\n\n", "                        <div class=\"layui-col-xs4\">\n                            <label class=\"layui-form-label\">预计下塔所需时间(分钟)</label>\n                            <div class=\"layui-input-block\">\n                                <input type=\"text\" name=\"needTime\" id=\"needTime\" class=\"layui-input\" style=\"border: 1px solid #c2c2c2;\"\n                                >\n                            </div>\n                        </div>\n", "\n\n", "这个是开关按钮", "\n\n", "                        <div class=\"layui-col-xs4\">\n                            <label class=\"layui-form-label\">是否影响线路强送电</label>\n                            <c:if test=\"${log.isEfectSendElec==null || log.isEfectSendElec=='不影响'}\">\n                                <input type=\"checkbox\" name=\"isEfectSendElecclose\" id=\"isEfectSendElec\" lay-skin=\"switch\" lay-filter=\"switchText\"\n                                       lay-text=\"是|否\">\n\n                            </c:if>\n                            <c:if test=\"${log.isEfectSendElec=='影响'}\">\n                                <input type=\"checkbox\" name=\"isEfectSendElecopen\" id=\"isEfectSendElec\" lay-skin=\"switch\" lay-filter=\"switchText\"\n                                       onclick=\"\"\n                                       lay-text=\"是|否\"\n                                       checked=\"checked\">\n                            </c:if>\n                        </div>\n", "\n\n", "这个是我写的js代码", "\n\n", "    form.on('switch', function(data){\n        var elem = data.elem;\n        var swithcData = data;\n        var id = data.value;// 获取要修改的ID\n        var state = this.checked ? '影响' : '不影响';// 当前状态值\n        if (state ==='影响'){\n\n            layer.msg('数据异常，操作失败！1111');\n        }\n", "\n\n", "各位大佬，在页面上选择了是input框才可以输入，没选就不给输入，想问一下怎么写呢？我是小白，谢谢各位了"]], "Tag": "程序设计"}
{"Answer": "先把以前的东西全部清理了再试试，matlab给出的错误是什么？", "Konwledge_Point": "switch语句及其应用", "Question": ["switch 错误: 表达式无效。请检查缺失或多余的字符.", ["MATLAB里面写的switch语句哪里有错误？我照着复制下来还是报题目的错误", "\n\n", "a = 100;\nb = 200;\nswitch(a)\n      case 100 \n         fprintf('This is part of outer switch %d', a );\n         switch(b) \n            case 200\n               fprintf('This is part of inner switch %d', a );\n         end\nend\nfprintf('Exact value of a is : %d', a );\nfprintf('Exact value of b is : %d', b );\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "你把sc.nextLine()换成sc.next(),就可以了", "Konwledge_Point": "switch语句及其应用", "Question": ["小白求教，switch有点问题", ["当我输入3时，为什么会在控制台连续输出两个system语句，不应该只有一个吗？我不用switch时，它是一个一个输出的啊"]], "Tag": "程序设计"}
{"Answer": "参考下：https://blog.csdn.net/Android_DEPON/article/details/69669160", "Konwledge_Point": "switch语句及其应用", "Question": ["请问java中switch的case语句里，为什么输入字符串只能用next()命令呢？", ["\n\n", "像图上这样，如果我用的是", "\n\n", "String f=input.nextLine();", "\n\n", "执行这个case的时候会跳过输入字符串环节直接进行下面的输出，而用", "\n\n", "String f=input.next();", "\n\n", "就可以正常进行字符串的输入，不懂为啥，大哥们能不能指点一下下qwq"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/briup_acmer/article/details/41383905", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch Game                 ", ["Problem Description", "\nThere are many lamps in a line. All of them are off at first. A series of operations are carried out on these lamps. On the i-th operation, the lamps whose numbers are the multiple of i change the condition ( on to off and off to on ).", "\n\n", "Input", "\nEach test case contains only a number n ( 0< n<= 10^5) in a line.", "\n\n", "Output", "\nOutput the condition of the n-th lamp after infinity operations ( 0 - off, 1 - on ).", "\n\n", "Sample Input", "\n1", "\n5", "\n\n", "Sample Output", "\n1", "\n0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch&amp;#xff08;c&amp;#43;&amp;#43;)&lt;br /&gt;c&amp;#43;&amp;#43;是后自增&amp;#xff0c;先使用c&amp;#xff0c;再对c进行自增。&lt;br /&gt;代码不清楚&amp;#xff0c;都可以通过验证的。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/686386213046187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["朋友们，switch（c++)是c直接加一还是switch（c）后再让c加一", ["朋友们，switch（c++)是c直接加一还是switch（c）后再让c加一"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;仔细看看区别在哪&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/100645590746126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什们我的switch不支持字符串类型，明明我的JDK是1.7的啊", ["问题相关代码", "\n", " Scanner sc = new Scanner(System.in);", "        String line = sc.nextLine();", "\n", "    ", "//用Switch语句完成操作的选择", "\n    ", "switch", " (line) {\n        ", "case", " ", "1", ":\n            System.", "out", ".println(", "\"添加学生\"", ");\n            ", "break", ";\n        ", "case", " ", "2", ":\n            System.", "out", ".println(", "\"删除学生\"", ");\n            ", "break", ";\n        ", "case", " ", "3", ":\n            System.", "out", ".println(", "\"修改学生\"", ");\n\n            ", "break", ";\n        ", "case", " ", "4", ":\n            System.", "out", ".println(", "\"查看所有学生\"", ");\n            ", "break", ";\n        ", "case", " ", "5", ":\n            System.", "out", ".println(", "\"谢谢使用\"", ");\n            ", "break", ";\n    }\n", "\n", "运行结果及报错内容", "\n", "case后跟的参数都报错", "int无法转换为java.lang.String", "\n", "我的解答思路和尝试过的方法", "\n", "我尝试过在网上找答案，但是普遍都是修改Modules里的设置，对我并没有什么帮助", "\n", "我想要达到的结果", "\n", "想问一下各位这个问题还有什么别的办法可以让我的switch支持字符串类型"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Because the first one uses &lt;code&gt;break&lt;/code&gt;, and the second snippet doesn't. &lt;/p&gt;\n\n&lt;p&gt;If you don't add &lt;code&gt;break&lt;/code&gt;, the code from the next case will also be executed, even if that condition isn't met. &lt;/p&gt;\n\n&lt;p&gt;That is just how &lt;code&gt;switch&lt;/code&gt; works in PHP, and in a couple of other C-like languages as well. It differs from the (similar) &lt;code&gt;case&lt;/code&gt; statement as you may know it from Pascal-like languages and SQL.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch Case，无法理解", ["\n\n", "I am trying to learn ", "switch case", " php code. Here is the program that is working fine when using break.", "\n\n", "for ($i=1;$i<=100;$i++) {\nswitch(true) {\n        case ( $i%5 == 0  && $i%3 == 0 ):\n            print 'foobar';\n            break;\n        case ( $i%3 == 0  ):\n            print 'foo';\n            break;\n        case ( $i%5 == 0 ):\n            print 'bar';\n            break;\n        case ( $i%5 != 0  && $i%3 != 0 ):\n            print $i;\n            break;\n    } \n    echo '<br>';\n}\n", "\n\n", "But when I use the following code, it is giving me unexpected results:", "\n\n", "for ($i=1;$i<100;$i++) {\nswitch(true) {\n    case ( $i%3 == 0  ):\n        print 'foo';\n    case ( $i%5 == 0 ):\n        print 'bar';\n    default:\n        print $i;\n}\necho '<br>';\n}\n", "\n\n", "What is wrong in the second example?? Will ", "default", " executes even when any above case is executed?? Also why ", "$i%5", " case is running for when ", "$i", " equals to 3??", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; day &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (day) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期天&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;错误输入&amp;#34;&lt;/span&gt;);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java switch基础", ["怎么用switch写出。定义一个变量这个变量是o-6 0是星期天6是星期6，如果超过这个数就显示输入错误输入1是星期一，二是星期二以此类推"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 0&lt;br /&gt;case 1&lt;br /&gt;不要用引号包括&lt;br /&gt;望采纳&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["代码如下：将信息录入后再次回到switch 语句，一直运行default，没法选择其他的选项，不知道是什么问题", ["\n", "#", "include", " ", "\"stdio.h\"", "\n", "#", "include", " ", "\"stdlib.h\"", "\n", "#", "include", " ", "\"assert.h\"", "\n\n\n", "typedef", " ", "struct", " ", "student", " {\n    ", "char", " Name[", "20", "];\n    ", "int", " StuID;\n    ", "int", " Grade;\n    \n}stu;\n\n", "//创建表", "\n", "struct", " ", "Node", " {\n    ", "struct", " ", "student", " data;\n    ", "struct", " ", "Node", "* next;\n};\n\n", "//创建表头", "\n", "struct", " ", "Node", "* ", "createList", "() {\n    ", "struct", " ", "Node", "* headNode = (", "struct", " Node*)", "malloc", "(", "sizeof", "(", "struct", " Node));\n    ", "assert", "(headNode);\n    headNode->next = ", "NULL", ";\n    ", "return", " headNode;\n}\n\n", "//创建结点", "\n", "struct", " ", "Node", "* ", "createNode", "(", "struct", " student data) {\n    ", "struct", " ", "Node", "* newNode = (", "struct", " Node*)", "malloc", "(", "sizeof", "(", "struct", " Node));\n    ", "assert", "(newNode);\n    newNode->data = data;\n    newNode->next = ", "NULL", ";\n    ", "return", " newNode;\n}\n\n", "//指定节点删除", "\n", "void", " ", "deleteAppointNodeByID", "(", "struct", " Node* headNode,", "int", " posID)", " ", "{\n    ", "struct", " ", "Node", "* posNode = headNode->next;\n    ", "struct", " ", "Node", "* posFrontNode = headNode;\n    ", "if", " (posNode == ", "NULL", ") {\n        ", "printf", "(", "\"数据为空，无法删除！\\n\"", ");\n        ", "return", ";\n    }\n    ", "while", " (posNode->data.StuID = posID) {\n        posFrontNode = posNode;\n        posNode = posFrontNode->next;\n        ", "if", " (posNode == ", "NULL", ") {\n            ", "printf", "(", "\"未找到指定位置，无法删除！\\n\"", ");\n            ", "return", ";\n        }\n    }\n    posFrontNode->next = posNode->next;\n    ", "free", "(posNode);\n\n}\n\n", "//查找功能", "\n", "struct", " ", "Node", "* ", "searchInfoByData", "(", "struct", " Node* headNode, ", "int", " posData) {\n    ", "struct", " ", "Node", "* posNode = headNode;\n    ", "while", " (posNode!=", "NULL", ") {\n        ", "if", " (posNode->data.StuID == posData)\n            ", "return", " posNode;\n        posNode = posNode->next;\n    }\n    ", "printf", "(", "\"无法找到结点\\n\"", ");\n    ", "return", " ", "NULL", ";\n}\n\n\n", "//插入结点", "\n", "void", " ", "insertNodeByHead", "(", "struct", " Node* headNode, ", "struct", " student data)", " ", "{\n    ", "struct", " ", "Node", "* newNode = ", "createNode", "(data);\n    newNode->next = headNode->next;\n    headNode->next = newNode;\n}\n\n", "//打印链表", "\n", "void", " ", "printList", "(", "struct", " Node* headNode)", " ", "{\n    ", "struct", " ", "Node", "* pMove = headNode->next;\n    ", "printf", "(", "\"Name\\tStuID\\tGrade\"", ");\n    ", "while", " (pMove) {\n        ", "printf", "(", "\"%s\\t%d\\t%d\"", ",pMove->data.Name,pMove->data.StuID,pMove->data.Grade);\n        pMove = pMove->next;\n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n\n", "//建表", "\n\n\n", "//按键交互", "\n", "void", " ", "keyDown", "()", " ", "{\n    ", "struct", " ", "Node", "* list = ", "createList", "();\n    ", "struct", " ", "student", " data;\n    ", "printf", "(", "\"请输入:(0`4)\\n\"", ");\n    ", "switch", " (", "getchar", "()) {\n    ", "case", " ", "'0'", ":\n        ", "printf", "(", "\"正常退出！\\n\"", ");\n        ", "system", "(", "\"pause\"", ");\n        ", "exit", "(", "0", ");\n        ", "break", ";\n    ", "case", " ", "'1'", ":\n        ", "printf", "(", "\"录入信息：\\n\"", ");\n        ", "//插入链表", "\n        ", "printf", "(", "\"请输入学生姓名,学号，成绩\\n\"", ");\n        ", "fflush", "(stdin);\n        ", "scanf_s", "(", "\"%s%d%d\"", ",data.Name,", "4", ",&data.StuID,&data.Grade);\n        ", "insertNodeByHead", "(list,data);\n        ", "break", ";\n    ", "case", " ", "'2'", ":\n        ", "printf", "(", "\"浏览信息：\\n\"", ");\n        ", "printList", "(list);\n        ", "break", ";\n    ", "case", " ", "'3'", ":\n        ", "printf", "(", "\"删除信息：\\n\"", ");\n        ", "break", ";\n    ", "case", " ", "'4'", ":\n\n        ", "printf", "(", "\"查找信息：\\n\"", ");\n        ", "break", ";\n    ", "default", ":\n        ", "printf", "(", "\"输入错误，请重新输入！\\n\"", ");\n        ", "break", ";\n    }\n}\n\n", "//菜单", "\n", "void", " ", "menu", "()", " ", "{\n    ", "printf", "(", "\"----------------------------\\n\"", ");\n    ", "printf", "(", "\"学生信息管理系统\\n\"", ");\n    ", "printf", "(", "\"1.录入信息\\n\"", ");\n    ", "printf", "(", "\"2.浏览信息\\n\"", ");\n    ", "printf", "(", "\"3.删除信息\\n\"", ");\n    ", "printf", "(", "\"4.查找信息\\n\"", ");\n    ", "printf", "(", "\"0.退出系统\\n\"", ");\n    ", "printf", "(", "\"----------------------------\\n\"", ");\n}\n\n\n\n", "int", " ", "main", "()", " ", "{\n\n\n    ", "while", " (", "1", ") {\n        ", "menu", "();\n        ", "keyDown", "();\n        ", "system", "(", "\"pause\"", ");\n        ", "system", "(", "\"cls\"", ");\n    }\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "最方便就用Map&lt;QString,int&gt; tb容器\r\ntb[\"CE\"] = 0;\r\ntb[\"BackSpace\"] = 1;\r\ntb[\"C\"] = 2;\r\n......\r\n一直下去构造一个映射表\r\n就能够转换为\r\nswitch(tb[s]) {\r\n  case 0: //do \"CE\" works\r\n  case 1: //do \"Backspace\" works\r\n..\r\n}", "Konwledge_Point": "switch语句及其应用", "Question": ["java计算器中switch的equals", ["想把if,else换成switch,case,但是不会把 equals里面的值转为char.请求帮忙..", "\n[code=\"ruby\"]", "\nif(s.equals(\"CE\"))", "\n        {", "\n            //如果是CE则清除文本框", "\n            tResult.setText(\"0.\");", "\n        }", "\n        else if(s.equals(\"BackSpace\"))", "\n        {", "\n            if(!tResult.getText().trim().equals(\"0.\"))", "\n            {", "\n                //如果文本框中有内容", "\n                if(str.length()!=1 && str.length()!=0)", "\n                {", "\n                    tResult.setText(str.delete(str.length()-1,str.length()).toString());", "\n                }", "\n                else", "\n                {", "\n                    tResult.setText(\"0.\");", "\n                    str.setLength(0);", "\n                }", "\n            }", "\n            op2 = Double.parseDouble(tResult.getText().trim());", "\n        }", "\n        else if(s.equals(\"C\"))", "\n        {", "\n            //如果是C删除当前计算", "\n            tResult.setText(\"0.\");", "\n            op1 = op2 = 0;", "\n            str.replace(0, str.length(), \" \");", "\n            preOp = currentOp = 0;", "\n        }", "\n        else if(s.equals(\"MC\"))", "\n        {", "\n            //如果是MC则清除缓冲区", "\n            String temp = \"\";", "\n            memory.replace(0, memory.length(), temp);", "\n            bM.setText(\" \");", "\n        }", "\n        else if(s.equals(\"MR\"))", "\n        {", "\n            //如果按键为MR则恢复缓冲区的数到文本框", "\n            tResult.setText(memory.toString());", "\n        }", "\n        else if(s.equals(\"MS\"))", "\n        {", "\n            //如果按键为MS则将文本框的数存入缓冲区", "\n            String s1 = tResult.getText().trim();", "\n            memory.replace(0, memory.length(), s1);", "\n            bM.setText(\"M\");", "\n        }", "\n        else if(s.equals(\"M+\"))", "\n        {", "\n            //如果按键为MS则将文本框值与缓冲区的数相加但不显示结果", "\n            String temp1 = tResult.getText().trim();", "\n            double dtemp = Double.parseDouble(temp1);", "\n            String temp2 = memory.toString();", "\n            dtemp += Double.parseDouble(temp2);", "\n            temp1 = String.valueOf(dtemp);", "\n            memory.replace(0, memory.length(), temp1);", "\n        }", "\n        else if(s.equals(\"1/x\"))", "\n        {", "\n            //如果按键为1/x则将文本框中的数据为它的倒数", "\n            String temp = tResult.getText().trim();", "\n            double dtemp = Double.parseDouble(temp);", "\n            tResult.setText(\"\"+1/dtemp);", "\n        }", "\n        else if(s.equals(\"sqrt\"))", "\n        {", "\n            //如果按键为sqrt则将文本框中的内容求平方根", "\n            String temp = tResult.getText().trim();", "\n            double dtemp = Double.parseDouble(temp);", "\n            tResult.setText(\"\"+Math.sqrt(dtemp));", "\n        }", "\n[/code]"]], "Tag": "程序设计"}
{"Answer": "```\r\nboolean loop = true;\r\n\r\nwhile(loop)\r\n\r\ncase 9:\r\n    loop = false;\r\n    break;\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["如何在switch里面停止循环？", ["怎么能在case9里面结束循环 ", "\n不再显示 ", "\n\n", "Please choose from one of the following menu options -  ", "\n\n", "1) Display levels and hourly rates of consultants ", "\n\n", "2) Display levels and hourly bill rates of consultants ", "\n\n", "3) Staff project ", "\n\n", "4) Display project staffing proposal ", "\n\n", "5) Calculate profit ", "\n\n", "9) Submit project staffing proposal and exit option:", "\n\n", "让结果显示如下：", "\n\n", "\n\n", "这是我现在的代码", "\n\n", "public static int displayMenu() {", "\n        Scanner input = new Scanner(System.in);", "\n\n", "    while (true) {\n        System.out.println();\n        System.out.println(\"Please choose from one of the following menu options -\");\n        System.out.println(\"1) Display levels and hourly rates of consultants\");\n        System.out.println(\"2) Display levels and hourly bill rates of consultants\");\n        System.out.println(\"3) Staff project\");\n        System.out.println(\"4) Display project staffing proposal\");\n        System.out.println(\"5) Calculate profit\");\n        System.out.println(\"9) Submit project staffing proposal and exit\");\n        System.out.println(\"option:\");\n        int option = input.nextInt();\n        switch (option) {\n  case 9:\n            System.out.println(\"You have successfully submitted your project proposal. Good-bye! \");\n            break;\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; case 1:3:5:7:8:10:12:  这样是不可以的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;                     &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (M)\n                     {\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;:\n                         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;);\n                         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                     &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;);\n                         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                     &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;);\n                         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                     }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case 语句，想知道哪里有语法错误", ["\n", "#", "include", "<stdio.h>", "\n         ", "int", " ", "main", "()", "\n         ", "{\n             ", "int", " Y, M;\n             ", "scanf", "(", "\"%d%d\"", ", &Y, &M);\n             ", "if", " (Y > ", "0", " && M >= ", "1", " && M <= ", "12", ")", "//合法输入", "\n             {\n                 ", "if", " (Y % ", "4", " == ", "0", " && Y % ", "100", " != ", "0", " || Y % ", "400", " == ", "0", ")\n                     ", "//闰年", "\n                 {\n                     ", "switch", " (M)\n                     {\n                     ", "case", " ", "1", ":", "3", ":", "5", ":", "7", ":", "8", ":", "10", ":", "12", ":\n                         ", "printf", "(", "\"%d\"", ", ", "31", ");\n                     ", "case", " ", "2", ":\n                         ", "printf", "(", "\"%d\"", ", ", "29", ");\n                     ", "case", " ", "4", ":", "6", ":", "9", ":", "11", ":\n                         ", "printf", "(", "\"%d\"", ", ", "30", ");\n                     }\n                 }\n\n                 ", "else", " ", "if", "\n                 {\n                     ", "switch", " (M)\n                     {\n                     ", "case", " ", "1", ":", "3", ":", "5", ":", "7", ":", "8", ":", "10", ":", "12", ":\n                         ", "printf", "(", "\"%d\"", ", ", "31", ");\n                     ", "case", " ", "2", ":\n                         ", "printf", "(", "\"%d\"", ", ", "28", ");\n                     ", "case", " ", "4", ":", "6", ":", "9", ":", "11", ":\n                         ", "printf", "(", "\"%d\"", ", ", "30", ");\n                     }\n                 }\n             }\n             ", "else", " ", "if", "\n             {\n                 ", "printf", "(", "\"error\"", ");\n             }\n\n         }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You must use the var $count  in switch statement  and the constant in case  this way &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   switch ($count) {\n    case  \"0\" :\n    echo \"invalid\";\n        break;\n\n    case \"15\":\n    echo $count;\n        break;\n\n    case \"16\":\n    $total = $count + \"1\";\n    echo $total;\n        break;\n    default:\n        echo \"hello\";\n        break;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何在php中使用switch", ["\n\n", "if (isset($_POST[\"submit\"])){\n$oride='';\n$count = \"25\";\n$origin = $_POST[\"origin\"];\n$destinataion = $_POST[\"destination\"];\n$oride = ($destination = $_POST[\"destination\"] - $origin= $_POST[\"origin\"]);\n\n    switch (true) {\n    case ($count<=\"0\"):\n    echo \"invalid\";\n        break;\n\n    case ($count===\"15\"):\n    echo $count;\n        break;\n\n    case ($count===\"16\"):\n    $total = $count + \"1\";\n    echo $total;\n        break;\n    default:\n        echo \"hello\";\n}  }\n", "\n\n", "The code will compute 1st then execute switch depending on what is the           result of the computation. I tried if else but it will be too long because the case will go up to 130.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;h1 id=\"h1_一、switch-case-用法_1639686852158\"&gt;一、switch case 用法&lt;/h1&gt;\n&lt;ul&gt;&lt;li&gt;switch 是另外一种选择结构的语句&amp;#xff0c;用来代替简单的、拥有多个分枝的 if else 语句&amp;#xff0c;基本格式如下&amp;#xff1a;&lt;pre&gt;&lt;code class=\"language-c\"&gt;switch(表达式){\n  case 整数1: 语句&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n  case 整数2: 语句&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        ...\n  case 整数n: 语句n;\n  default: 语句n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;对于 switch case 语句的执行过程&amp;#xff0c;如下&amp;#xff1a;&lt;br /&gt;  1&amp;#xff09;首先&amp;#xff0c;计算 &lt;strong&gt;表达式&lt;/strong&gt; 的值&amp;#xff0c;假设为 $x$&amp;#xff1b;&lt;br /&gt;  2&amp;#xff09;然后&amp;#xff0c;从第一个 &lt;strong&gt;case&lt;/strong&gt; 开始&amp;#xff0c;比较 $x$ 和 &lt;strong&gt;整数1&lt;/strong&gt; 的值&amp;#xff0c;如果相等&amp;#xff0c;就执行冒号后面的所有语句&amp;#xff0c;也就是从 &lt;strong&gt;语句1&lt;/strong&gt; 一直执行到 &lt;strong&gt;语句n &amp;#43; 1&lt;/strong&gt;&amp;#xff0c;而不管后面的 &lt;strong&gt;case&lt;/strong&gt; 是否匹配成功&amp;#xff08;这是平时开发的易错点&amp;#xff0c;需要特别注意&amp;#xff09;。&lt;br /&gt;  3&amp;#xff09;如果 $x$ 和  &lt;strong&gt;整数1&lt;/strong&gt; 不相等&amp;#xff0c;就跳过冒号后面的 &lt;strong&gt;语句1&lt;/strong&gt;&amp;#xff0c;继续比较第二个 case、第三个 case……&amp;#xff0c;一旦发现和某个 &lt;strong&gt;整数&lt;/strong&gt; 相等了&amp;#xff0c;就会执行后面所有的语句。假设 $x$ 和 &lt;strong&gt;整数6&lt;/strong&gt; 相等&amp;#xff0c;那么就会从 &lt;strong&gt;语句6&lt;/strong&gt; 一直执行到 &lt;strong&gt;语句n &amp;#43; 1&lt;/strong&gt;。&lt;br /&gt;  4&amp;#xff09;如果直到最后一个 &lt;strong&gt;整数n&lt;/strong&gt; 都没有找到相等的值&amp;#xff0c;那么就执行 &lt;strong&gt;default&lt;/strong&gt; 后的 &lt;strong&gt;语句n &amp;#43; 1&lt;/strong&gt;。&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;h1 id=\"h1_二、扩展阅读_1639686852204\"&gt;二、扩展阅读&lt;/h1&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/WhereIsHeroFrom/article/details/119077353\" id=\"textarea_1639686785143_1639686852206_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;☀️光天化日学C语言☀️&amp;#xff08;28&amp;#xff09;- switch case 语句 | 小孩才做选择&amp;#xff0c;成年人全都要&amp;#xff01;_英雄哪里出来-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;小孩才做选择&amp;#xff0c;成年人全都要&amp;#xff01;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/WhereIsHeroFrom/article/details/119077353&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言里面的switch支持那个数是浮点数", ["c语言里面的switch支持那个数是浮点数吗？", "试了下不行，为什么啊？"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/hurmishine/article/details/51347080", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch Game                               ", ["Problem Description", "\nThere are many lamps in a line. All of them are off at first. A series of operations are carried out on these lamps. On the i-th operation, the lamps whose numbers are the multiple of i change the condition ( on to off and off to on ).", "\n\n", "Input", "\nEach test case contains only a number n ( 0< n<= 10^5) in a line.", "\n\n", "Output", "\nOutput the condition of the n-th lamp after infinity operations ( 0 - off, 1 - on ).", "\n\n", "Sample Input", "\n1", "\n5", "\n\n", "Sample Output", "\n1", "\n0", "\n\n", "Hint", "\nhint", "\n\n", "Consider the second test case:", "\n\n", "The initial condition      : 0 0 0 0 0 …", "\nAfter the first operation  : 1 1 1 1 1 …", "\nAfter the second operation : 1 0 1 0 1 …", "\nAfter the third operation  : 1 0 0 0 1 …", "\nAfter the fourth operation : 1 0 0 1 1 …", "\nAfter the fifth operation  : 1 0 0 1 0 …", "\n\n", "The later operations cannot change the condition of the fifth lamp any more. So the answer is 0."]], "Tag": "程序设计"}
{"Answer": "动手实验下,一切明了...", "Konwledge_Point": "switch语句及其应用", "Question": ["think in java中一段代码的疑惑，关于switch", ["\n", "\n\n", "public Shape next() {\n    switch (random.nextInt(3)) {\n    default:\n    case 0:\n        return new Circle();\n    case 1:\n        return new Square();\n    case 2:\n        return new Triangle();\n    }\n}", "\n\n", " default放在'return new Triangle();'下面，eclipse会出现红x，you must return a result of type Shape，这很好理解", "\n\n", " ", "\n\n", "default放在'case 0'上面，就不会出现上面的编译错误，不懂是为什么，可能switch-case的机制还没有理解透？", "\n\n", " ", "\n\n", "哪位大虾帮忙解释解释", "问题补充", "这是怎么了。。20几个阅读，没有回复的", "问题补充", "gtssgtss 写道", "自动贯穿。。。。", "这是一个很垃圾的特性。。。。", "太基础了，大家都不想打字，详细还是去看书吧", "我被鄙视了。。还真不知道这特性", "问题补充", "gtssgtss 写道", "自动贯穿。。。。", "这是一个很垃圾的特性。。。。", "太基础了，大家都不想打字，详细还是去看书吧", "你说的是哪本书？自动贯穿这名称google没搜到", "问题补充", "确实是很纠结的一个特性。。", "实验了一把", "找到了一段话，自己也总结了一点", "没有case匹配的时候，执行default中的内容，default中没有退出switch-case的语句，默认执行default下面case下的语句，如果第一个case下没有return，会接着执行下面的case，一直执行到return 语句", "switch (10) {  ", "    default:  ", "    case 0:  ", "        System.out.println(\"0\");  ", "    case 1:  ", "        System.out.println(\"1\");  ", "    case 2:  ", "        return new Triangle();  ", "    }  ", "这样改的话，它就会打印出0,1,然后return", "问题补充", "lqixv 写道", "估计你是看书不仔细。你回头看看对 switch 语句的解释，在 case　里，如果没有 break 是不会跳出 switch 的。因此，你把 default 放在后面的话，就相当于 在找不到 0、1、2 时，没有return 值了。而你的方法本应该返回 Shape，那肯定报错了", "估计你问题没有看清楚吧，我知道case 没有break是不会跳出的，这里讨论的是如果没有case可以匹配上，default放在最上面，会执行default下的case，直到return或break为止。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i&amp;#61;9进来default执行后k&amp;#61;1 n&amp;#61;1&lt;br /&gt;i&amp;#61;10进来 case 0执行后&amp;#xff0c;先打印m&amp;#xff0c;这时m&amp;#61;0所有打印的第一个就是0&amp;#xff0c;再m n&amp;#43;1后就是m&amp;#61;1&amp;#xff0c;n&amp;#61;2&lt;br /&gt;i&amp;#61;11时&amp;#xff0c;case 1执行&amp;#xff0c;先打印n&amp;#xff0c;打印出2&amp;#xff0c;然后再n&amp;#43;1后n&amp;#61;3&lt;br /&gt;循环结束就最后输出&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch简单计算", ["#include<stdio.h>", "\n", "int main(){", "\n", "            ", "int", " i,m=", "0", ",n=", "0", ",k=", "0", ";\n\n           ", "for", "(i=", "9", "; i<=", "11", ";i++)\n\n                  ", "switch", "(i%", "10", "){\n\n                            ", "case", " ", "0", ":     printf(", "\"%d\\n\"", ",m);\n", "\n", "m++; n++; break;", "\n", "                          ", "case", " ", "1", ":    ", "printf", "(", "\"%d\\n\"", ",n);\n", "\n", "n++; break;", "\n", "                          default:  k++; n++;\n\n                    }\n\n            ", "printf", "(", "\"%d %d %d\\n\"", ",m,n,k); \n\n         ", "return", " ", "0", ";\n", "\n", "}", "\n", "答案0 2 1 3 1怎么来的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;x&amp;#61;20,判断x&amp;gt;&amp;#61;10成立&amp;#xff0c;进入case1&amp;#xff08;这里0表示假1表示真&amp;#xff09;&lt;br /&gt;再判断x&amp;gt;&amp;#61;30不成立&amp;#xff0c;进入case0&amp;#xff0c;y&amp;#61;62&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case", ["C语言程序设计，switch语句，这道题为什么不是135？而是62。//x=20", "我的思路是x=20,进入switch，case 0：y=7*x-5;break;不是已经结束循环了吗?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以定义一个id&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;  &amp;lt;input type&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;checkbox&amp;#34;&lt;/span&gt;  id&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;switch1&amp;#34;&lt;/span&gt; lay-skin&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;switch&amp;#34;&lt;/span&gt; lay-&lt;span class=\"hljs-keyword\"&gt;filter&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;switchTest&amp;#34;&lt;/span&gt;  required/&amp;gt;\n      \n\n    &lt;span class=\"hljs-comment\"&gt;// 回显判断&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(res.data.isSwitch &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n          $(&lt;span class=\"hljs-string\"&gt;&amp;#39;#switch1&amp;#39;&lt;/span&gt;).prop(&lt;span class=\"hljs-string\"&gt;&amp;#34;checked&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;checked&amp;#34;&lt;/span&gt;);\n       }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n          $(&lt;span class=\"hljs-string\"&gt;&amp;#39;#switch1&amp;#39;&lt;/span&gt;).prop(&lt;span class=\"hljs-string\"&gt;&amp;#34;checked&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n       }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["layui switch开关怎么通过数据库的值来改变他的开启状态啊", ["我数据存进去了 但是状态应该怎么改变啊 是使用什么方法才能让那状态根据数据库存进去的值而改变"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;&lt;code class=\"language-javascript\"&gt;switch&lt;/code&gt;括号里面不是&lt;strong&gt;字符串&lt;/strong&gt;,是&lt;code class=\"language-javascript\"&gt;char&lt;/code&gt;型的数值; - C语言中&lt;code class=\"language-javascript\"&gt;switch&lt;/code&gt;的条件只能为数值.&lt;/li&gt;&lt;li&gt;输出是&lt;code class=\"language-javascript\"&gt;b*&lt;/code&gt;,是因为&lt;code class=\"language-javascript\"&gt;a&lt;/code&gt;和&lt;code class=\"language-javascript\"&gt;b&lt;/code&gt;会输出,&lt;code class=\"language-javascript\"&gt;c&lt;/code&gt;不会被输出,只有&lt;code class=\"language-javascript\"&gt;*&lt;/code&gt;才退出,退出后输出&lt;code class=\"language-javascript\"&gt;*&lt;/code&gt;,应该能输出&lt;code class=\"language-javascript\"&gt;a&lt;/code&gt;,&lt;code class=\"language-javascript\"&gt;b&lt;/code&gt;个&lt;code class=\"language-javascript\"&gt;*&lt;/code&gt;三种字符.&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中的switch与字符串之间的运算", ["为什么输出的是b*？不懂，尤其switch括号中为字符串更不懂"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的第一行打印应该放在 scanf 下面&amp;#xff0c;同时要用%d。&lt;/p&gt;\n&lt;p&gt;还有 case 和数字之间应该要加个空格吧&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case语句为什么没输出结果", ["case里有printf，我输入90结果不应该输出A吗，为什么控制台没显示A", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、使用绝对路径&lt;br /&gt;2、在你使用的vscode命令行段&amp;#xff0c;cd 进入inputs所在的目录里面。&lt;br /&gt;因为vscode运行的时候&amp;#xff0c;默认的目录不是你py所在的目录&amp;#xff0c;所以你使用相对路径是不行的。 &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["vs code 运行switch，提示OSError: Cannot find file 'inputs\\periods.csv'该怎么办(语言-python)", ["vs code运行switch，开始报错FileNotFoundError: [Errno 2] No such file or directory: 'inputs\\periods.csv'", "\n", "输入路径", "\n", "之后又提示OSError: Cannot find file 'inputs\\periods.csv'", "\n", "\n", "该怎么办呀，求指点😭快崩溃了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 后面要加break语句&lt;br /&gt;case 1:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  //你的代码&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  break;  //加这句话&lt;/span&gt;&lt;br /&gt;case 2:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  //你的代码&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  break;//加这句话&lt;/span&gt;&lt;br /&gt;case 3:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  //你的代码&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  break;//加这句话&lt;/span&gt;&lt;br /&gt;default:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  //你的代码&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  break;&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["arduino中case判断不能用", ["\n", "int", " color;\nvoid setup", "()", " {\n  ", "// put your setup code here, to run once:", "\n  ", "Serial", ".", "begin", "(", "9600", ");\n  pin", "Mode(4,OUTPUT)", ";\n  pin", "Mode(8,OUTPUT)", ";\n  pin", "Mode(12,OUTPUT)", ";\n\n}\n\nvoid loop", "()", " {\n  ", "// put your main code here, to run repeatedly:", "\n  ", "Serial", ".", "println(", "\"which color led you want to light?\"", ");\n\n  ", "while", "(", "Serial", ".", "available", "()", "==", "0", "){\n    \n  }\n  color = ", "Serial", ".", "parse", "Int()", ";\n  switch(color){\n    case ", "1", ":\n    digital", "Write(4,1)", ";\n    digital", "Write(8,0)", ";\n    digital", "Write(12,0)", ";\n\n    case ", "2", ":\n    digital", "Write(4,0)", ";\n    digital", "Write(8,1)", ";\n    digital", "Write(12,0)", ";\n\n    case ", "3", ":\n    digital", "Write(4,0)", ";\n    digital", "Write(8,0)", ";\n    digital", "Write(12,1)", ";\n\n    default:\n    digital", "Write(4,1)", ";\n    digital", "Write(8,1)", ";\n    digital", "Write(12,1)", ";\n    ", "Serial", ".", "println(", "\"wrong input!\"", ");\n    \n    \n  }\n}\n", "\n", "arduino的一个小程序，输入不同数字亮不同的灯，为什么case判断不能用？", "不管输入1或2或3都只执行默认。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Mon不是int型变量名称&amp;#xff0c;应该相当于#define Mon 1&amp;#xff0c;Mon就代表1。跟什么左右值也没啥关系&amp;#xff0c;给一个数值起个别名而已&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言 enum +switch 字符串", ["最近在学习c语言的 enum与switch,想到了能不能用switch判断字符串 ,", "\n\n", "答案是可以 ,但是兜来兜去的还不如直接用while if ,", "\n\n", "新手的疑问总是那么多,而且总是颠覆语言本身,哈哈,", "\n\n", "那么接下来问题来了 ......", "\n\n", "新手的疑问也总是那么大胆, 于是搜索了char 转enum 发现有很多类似的,说明搜索的不只我一个人,", "\n\n", "没搜到自己想要的答案 ,于是仔细思考了一番,", "\n\n", "比如 :enum week{ Mon = 1, Tues = 2, Wed = 3, Thurs = 4, Fri = 5, Sat = 6, Sun = 7 };", "\n\n", "其中 Mon 是左值 ,1是右值  在switch 中应用就相当于mon是int 型变量名称,", "\n\n", "那么 c语言 中 有没有左值转右值 或右值转左值呢?(搜索这个的真没有 哈哈)", "\n\n", "所以说enum +switch 做字符串判断到底有没有更简单有效的方法呢?", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;答案不是-2&amp;#xff1f;你分析的过程没问题啊&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/871363632646137.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/51476363264611.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["递归与switch case结合考察", ["前面是 switch（6）", "前case 0:return 0", "这个我实在算不出正确答案", "求一个清晰的解题思路"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;【温馨提示&amp;#xff1a;若能帮到您&amp;#xff0c;望给个采纳该答案&amp;#xff0c;谢谢&amp;#xff01;】&lt;br /&gt;&lt;strong&gt;1、效果如下&lt;/strong&gt;&lt;br /&gt;其实就是增加一个循环判断标志&amp;#xff0c;不在枚举的就结束循环&amp;#xff0c;存在则在同一个屏幕输出信息&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/673624272846135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2、代码如下&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;enum&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Status_Code&lt;/span&gt;\n    {\n        ok&amp;#61;&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;,\n        moved_permanently&amp;#61;&lt;span class=\"hljs-number\"&gt;301&lt;/span&gt;,\n        forbidden&amp;#61;&lt;span class=\"hljs-number\"&gt;403&lt;/span&gt;,\n        not_found&amp;#61;&lt;span class=\"hljs-number\"&gt;404&lt;/span&gt;,\n        internal_server_error&amp;#61;&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;,\n        service_unavailable&amp;#61;&lt;span class=\"hljs-number\"&gt;503&lt;/span&gt;,\n        wrong_input&amp;#61;&lt;span class=\"hljs-number\"&gt;666&lt;/span&gt;,\n        byebye&amp;#61;&lt;span class=\"hljs-number\"&gt;886&lt;/span&gt;\n    };\n    \n    &lt;span class=\"hljs-keyword\"&gt;enum&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Status_Code&lt;/span&gt; code;\n    \n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input a http status code number?&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!flag)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;code);\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(code)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; ok:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;All is well!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; moved_permanently:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Moved somewhere!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; forbidden:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;forbidden!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; not_found:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;not_found!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; internal_server_error:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;internal_server_error!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; service_unavailable:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;service_unavailable!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; wrong_input:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;wrong_input!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; byebye:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;byebye!\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; :\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;None&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch问题", ["\n", "\n", "switch语句和枚举的连用，怎么样做到循环输入使所有case都输出在同一屏幕啊?"]], "Tag": "程序设计"}
{"Answer": "就是嘛，除了查询是executeQuery，更新，插入，删除都是executeUpdate", "Konwledge_Point": "switch语句及其应用", "Question": ["JSP操作mysql的SQL语句", ["......................", "\ntry{", "\nStatement st=getStatement();", "\nString name=request.getParameter(\"name\");", "\nString sex=request.getParameter(\"sex\");", "\nString age=request.getParameter(\"age\");", "\nswitch(type){", "\ncase 0:", "\nrs=st.executeQuery(\"select * from t1\");", "\nbreak;", "\n......................", "\ncase 4:", "\nname=new String(name.getBytes(\"ISO-8859-1\"));", "\nsex=new String(sex.getBytes(\"ISO-8859-1\"));", "\n\n", "String sql=\"update t1 set sex='\"+sex+\"',age='\"+age+\"' where name='\"+name+\"'\";", "\nst.executeQuery(sql);", "\nresponse.sendRedirect(\"friend.jsp\");", "\nbreak;", "\n.......................", "\n\n", "这一条语句不能实现：String sql=\"update t1 set sex='\"+sex+\"',age='\"+age+\"' where name='\"+name+\"'\";", "\n即修改功能不能实现！报错为：java.sql.SQLException: Can not issue data manipulation statements with executeQuery(). "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以使用引用传参&amp;#xff0c;&lt;/p&gt;\n\n&lt;p&gt;或者你哪里调用基类的时候&amp;#xff0c;又把该数组初始化了&amp;#xff0c;可以更改该数组初始化的地方&amp;#xff0c;或者设成静态全局变量 &amp;#xff08;关键字 static&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++ 关于switch和数组有关问题", ["问下大佬，c++  用switch写了一个二级菜单（二级菜单包含在一级菜单里面）。在二级菜单中给一个数组赋值，跳出二级菜单后回到一级菜单，之后再回到二级菜单那里输出数组，发现数组还在（数组刚开始是从0开始生成的），可是数组里面的数据没了，输出出来的是数组的初始值，也就是说我被赋值的数组都被初始化了。我记得第一次写完的时候是打印我输入的值的，过了一个星期就出问题了，有没有大佬知道怎么啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo date('n', strtotime('November')); // returns 11\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;If you have to do this often, you might consider using an array that has these values hardcoded:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$months = array( 1 =&amp;gt; 'January', 2 =&amp;gt; 'February', 3 =&amp;gt; 'March', 4 =&amp;gt; 'April',\n                 5 =&amp;gt; 'May',     6 =&amp;gt; 'June',     7 =&amp;gt; 'July',  8 =&amp;gt; 'August',\n                 9 =&amp;gt; 'September', 10 =&amp;gt; 'October', 11 =&amp;gt; 'November',\n                 12 =&amp;gt; 'December');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can also do it the other way round though, using the names for the keys and numbers for values. &lt;/p&gt;\n\n&lt;p&gt;With the names for values you do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo array_search('November', $months); // returns 11\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and with names for keys you do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo $months['November']; // returns 11\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I find using the numbers for the keys somewhat better &lt;em&gt;in general&lt;/em&gt;, though for your UseCase the names for keys approach is likely more comfortable. With just 12 values in the array, there shouldn't be much of a difference between the array approches.&lt;/p&gt;\n\n&lt;p&gt;A quick benchmark noted a difference of 0.000003s vs 0.000002s, whereas the time conversion takes 0.000060s on my computer (read: might differ on other computer).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在PHP给出一个月份字符串，如“十一月”，如何在不使用12部分switch语句的情况下返回11？", ["\n\n", "I.e.", "\n\n", "Month        Returns\nJanuary      1\nFebruary     2\nMarch        3\nApril        4\nMay          5\nJune         6\nJuly         7\nAugust       8\nSeptember    9\nOctober      10\nNovember     11\nDecember     12\n", "\n\n", "I've seen examples using mktime when given the number of the month and returning the month string, but not the reverse.", "\n    "]], "Tag": "程序设计"}
{"Answer": "在eclipse把jdk7设置成默认的，\r\n\r\n获取在新建项目选择jdk的时候直接使用7\r\n\r\n再不行，把项目重新build下", "Konwledge_Point": "switch语句及其应用", "Question": ["JDK7运行switch出错", ["大家好。我在运行jdk7的switch的时候出现了如下诡异事件：\n", "\n\n", "当我在Eclipse3.6和Eclipse3.7运行时switch不能识别String。我就上网查了，也确定了eclipse里面的配置properties——>java->installed jre 这个地方也改为了新安装的JDK7所指的路径了。但是当我在命令行用javac和java命令运行时switch却可以识别String类型。", "\n    如果有哪位大哥大姐知道原因希望帮下小弟。谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch ()中是一个常量表达式&amp;#xff0c;结果必须是一个整型或枚举类型&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["今天刚学switch语句，就想试一下对三个数据排序，结果就这样了，现在就想知道为什么啊>o<", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;So, &lt;code&gt;$variable&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, case &lt;code&gt;$variable &amp;gt; 0&lt;/code&gt; which is &lt;code&gt;0 &amp;gt; 0&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Compare &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. What do you get? Of course - true.&lt;/p&gt;\n\n&lt;p&gt;Rewrite your &lt;code&gt;switch&lt;/code&gt; to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// compare not `$variable` but result of some operation with `true`\nswitch (true) {           \n    case ($variable &amp;gt; 0):\n        echo \"You entered $variable!\";\n        break;\n\n    default:        \n        echo \"Either Your variable is less than 0, or not a Number!\";\n        break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Php Switch Case无法按预期工作", ["\n\n", "I made a pretty stupid Logic Error in a very Basic ", "PHP", " Script.", "\n\n", "See u_mulders Answer for the Conclusion.", "\n\n", "The Script accesses a $_GET[] Variable and should just determine if the Variable is set (wich works) and if its set to a value above 0 (this is not working as expected).", "\n\n", "Here comes the \"switch.php\" File:", "\n\n", "<?php\n\nif($_GET[\"variable\"]==NULL){\n    die('Set $_GET[\"variable\"] to use this Script!');\n}\n\n//Create Instance of $_GET[\"variable\"] casted to Integer\n$variable = (integer)$_GET[\"variable\"];\n\n//this var_dump displays that the $variable is succesfully casted to an Integer\nvar_dump($variable);\n\nswitch ($variable) {\n    case ($variable > 0):\n        echo \"You entered $variable!\";\n        break;\n\n    default:        \n        echo \"Either Your variable is less than 0, or not a Number!\";\n        break;\n}\n\n?>\n", "\n\n", "Now I expected the first case-Statement to only run if $variable is greater than 0.", "\n\n", "This is not the Case if I open the url: ", "http://www.someserver.com/switch.php?variable=0", "\n\n", "The Output is as follows:", "\n\n", ".../switch.php:11:int 0", "\n\n", "You entered 0!", "\n\n", "I hope You can help me.", "\n\n", "Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while没有break。&lt;br /&gt;case里的break是switch语法的。可以加一个布尔变量标识是否处理过&amp;#xff0c;在while语块结束时判断是否处理&amp;#xff0c;如果处理了就break。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为啥选择switch的序号后菜单还在循环（部分程序）", ["while (1)", "    {", "        printf(\"*", "\\n\");", "        printf(\"使用学生成绩管理系统\\n\");", "        printf(\"[1] 输入所有学生信息\\n\");", "        printf(\"[2] 输出所有学生成绩\\n\");", "        printf(\"[3] 按学号查找某个学生信息\\n\");", "        printf(\"[4] 按姓名查找某个学生信息\\n\");", "        printf(\"[5] 按总成绩对学生排序\\n\");", "        printf(\"[6] 按学号删除某个学生信息\\n\");", "        printf(\"[7] 按学号增加某个学生信息\\n\");", "        printf(\"[0] 退出程序\\n\");", "        printf(\"请输入您的选择（0 - 7）:\");", "        scanf(\"%d\", &xuhao);", "        printf(\"", "**)\\n\");", "        switch (xuhao)", "        {", "        case 1:", "        printf(\"请输入学生信息!\\n\");", "        head=creat();", "        break;", "        case 2:", "        print(head);", "        break;", "        case 3:", "        printf(\"请输入要查找的学号!\\n\");", "        research_1(head);", "        break;", "        case 4:", "        printf(\"请输入要查找的名字!\\n\");", "        research_2(head);", "        break;", "        case 5:", "        PX(head);", "        break;", "        case 6:", "        printf(\"请输入要删除的学号!\\n\");", "        scanf(\"%d\", &del_num);", "        del(head,del_num);", "        break;", "        case 7:", "        printf(\"请输入要插入的信息!\\n\");", "        printf(\"\\n学号:\");", "        scanf(\"%d\", &stu.num);", "        printf(\"\\n姓名:\");", "        scanf(\"%s\", stu.name);", "        printf(\"\\n语文成绩:\");", "        scanf(\"%d\", &stu.chinese);", "        printf(\"\\n数学成绩:\");", "        scanf(\"%d\", &stu.math);", "        printf(\"\\n英语成绩:\");", "        scanf(\"%d\", &stu.english);", "        insert(head,&stu);", "        break;", "        case 0:", "        printf(\"退出程序!\\n\");", "        exit(0);", "        break;", "        default:", "        printf(\"您输入的序号有误,请重新输入！\\n\");", "        }", "    }", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次循环&amp;#xff1a;i&amp;#61;1&amp;#xff0c;case后面没有1&amp;#xff0c;执行default后面的语句&amp;#xff0c;输出&amp;#xff1a;c&lt;br /&gt;          i&amp;#43;&amp;#43;&lt;br /&gt;第二次循环&amp;#xff1a;i&amp;#61;2&amp;#xff0c;执行case 2后面的语句&amp;#xff0c;由于没有break&amp;#xff0c;继续执行default后面的语句&amp;#xff0c;输出&amp;#xff1a;bc&lt;br /&gt;          i&amp;#43;&amp;#43;&lt;br /&gt;第三次&amp;#xff1a;i&amp;#61;3不小于3&amp;#xff0c;结束循环&lt;br /&gt;所以结果为cbc&lt;br /&gt;望采纳&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["没有break的switch，为什么答案是cbc", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(;;){\n  &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(xx){\n  &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; x:\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; y:\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; z:\n&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}  \n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c艹 switch case中很多个case,case能否进行循环？", ["c艹 switch case中很多个case,case能否进行循环？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 90-100这种写法是错误的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\nn &amp;#61; n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n)\n{\n   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["swtich语句的用法", ["switch语句为什么这个不能正常运行，学废了，大家帮忙看看"]], "Tag": "程序设计"}
{"Answer": "首先把需求描述清楚，这样大家才好帮你　", "Konwledge_Point": "switch语句及其应用", "Question": ["请求高手为我用C++编写一个程序", ["要求：（1）可以秒控", "\n（2）可以括兵营", "\n（3）免抓数据包", "\n（4）要全部源代码", "\n\n", "写好以后发", "ilovejunhongjing@163.com"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num, i, j, bit, c[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;], n[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please enter number: &amp;#34;&lt;/span&gt;);               &lt;span class=\"hljs-comment\"&gt;//输入一个整数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n    &lt;span class=\"hljs-comment\"&gt;//判断整数是否多于5位&amp;#xff0c;报错&amp;#xff0c;重新输入&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (num &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Error!\\nPlease enter number: &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n    }\n    &lt;span class=\"hljs-comment\"&gt;//判断整数是几位数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt; &amp;amp;&amp;amp; j !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i *&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n        j &amp;#61; num / i;\n    i /&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(i){\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: bit &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;: bit &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;: bit &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;: bit &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;: bit &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d is %d bits!\\n&amp;#34;&lt;/span&gt;, num, bit);\n    &lt;span class=\"hljs-comment\"&gt;//此处是一个为输出数字的中间模块&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; bit; i&amp;#43;&amp;#43;)\n        c[i] &amp;#61; num / &lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, bit-i);\n    &lt;span class=\"hljs-comment\"&gt;//分别输出整数的每位数字&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; bit; i&amp;#43;&amp;#43;){\n        n[i] &amp;#61; c[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - c[i] * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, n[i]);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-comment\"&gt;//逆序输出每位数字&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; bit&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, n[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言用switch如何做", ["2.提高题：给一个不多于5位的正整数，要求：1求出它是几位数；2分别打印出", "每一位数字；3按逆序打印出各位数字，例如原数是321，应输出123。"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/renyuan/archive/2013/05/21/3091506.html \r\n参考这个全面的去对比看看吧。。", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言，一个语句问题。", ["```#include \"stdafx.h\"", "\n\n", "define MAXNUM 70", "\n\n", "define FALSE 0", "\n\n", "define TRUE 1", "\n\n", "#include \"stdio.h\" ", "\n#include \"stdlib.h\" ", "\n#include \"string.h\" ", "\ntypedef struct Qnode {char data[MAXNUM]; struct Qnode ", "next; ", "\n}Qnodetype; ", "\n/", "定义队列的结点*/ ", "\ntypedef struct", "\n{", "\n    Qnodetype ", "front;/", "头指针*/ ", "\n    Qnodetype ", "rear; /", "尾指针*/", "\n    int number;/*短信数量*/", "\n }Lqueue;", "\nint initLqueue(Lqueue **q) {", "\n    /*创建一个空链队列q*/", "\n\n", "if (((*q)->front = (Qnodetype*)malloc(sizeof(Qnodetype))) == NULL)\n    return FALSE;\n(*q)->rear = (*q)->front;\nstrcpy((*q)->front->data, \"head\"); \n(*q)->front->next = NULL;\n(*q)->number = 0; \nreturn TRUE;\n", "\n\n", "}", "\nint LInQueue(Lqueue ", "q, char x[])", "\n{", "\n    /", "将元素x插入到链队列q中，作为q的新队尾*/ ", "\n\n", "Qnodetype *p;\n\nif ((p = (Qnodetype*)malloc(sizeof(Qnodetype))) == NULL) \n\nreturn FALSE;\n\nstrcpy(p->data, x);\n\np->next = NULL;   /*置新结点的指针为空*/\n\nq->rear->next = p;   /*将链队列中最后一个结点的指针指向新结点*/ \n\n\nq->rear = p;  /*将队尾指向新结点*/\n", "\n\n", "return TRUE;", "\n}", "\n\n", "char * LOutQueue(Lqueue *q){", "\n\n", "/*若链队列q不为空，则删除队头元素，返回其元素值*/ \nchar  x[MAXNUM]; Qnodetype *p;\n\n    if (q->front->next == NULL) return NULL;  /*空队列*/\n\n    p = q->front->next;            /*取队头*/\n\nq->front->next = p->next;           /*删除队头结点*/\n\nif (p->next == NULL) q->rear = q->front;strcpy(x, p->data); \n\n    free(p); \n        return x;\n", "\n\n", "}", "\nvoid get(Lqueue ", "q, char x[]) { /", "接受短信*/", "\n\n", "int n;\nif (q->number == 20)\n{\n    LOutQueue(q);q->number--;\n} LInQueue(q, x); q->number++;\n", "\n\n", "}", "\nvoid deleteall(Lqueue ", "q) { /", "删除所有短信*/", "\n    while (q->front != q->rear)", "\n        LOutQueue(q);", "\n    q->number = 0;", "\n}", "\nvoid deleteone(Lqueue ", "q, int n) {/", "删除第n条短信*/ ", "\n    Lqueue ", "p;Qnodetype *s; ", "\n    int i; ", "\n    p = q;", "\n    i = 1;", "\n    while (i\n    {", "\n        p->front = p->front->next; i = i + 1;", "\n    }", "\n    s = p->front->next;", "\n    p->front->next = p->front->next->next; free(s);", "\n    q->number--;", "\n}", "\nvoid displayall(Lqueue *q) {/", "显示所有短信*/", "\n    Lqueue ", "p;char x[MAXNUM]; p = q;", "\n    while (p->front != q->rear) {", "\n        p->front = p->front->next;", "\n        printf(\"%s\\n\", p->front->data);", "\n    } printf(\"\\n\");", "\n}", "\nvoid displayone(Lqueue *q, int n) {/", "显示第n条短信*/ Lqueue *p;Qnodetype *s; int i; p = q;i = 1; while (i\n{", "\n    p->front = p->front->next; i = i + 1;", "\n}", "\ns = p->front->next;", "\nprintf(\"%s\\n\", s->data);", "\n}", "\nvoid main()", "\n{", "\n    Lqueue *Lp; ", "\n    int i;", "\n    Qnodetype *headnode; ", "\n    char command,ch[MAXNUM];", "\n    initLqueue(&Lp);", "\n    headnode = Lp->front;", "\n    while (1)", "\n    {", "\n        printf(\"Get information(%d),please enter R\\n\", Lp->number);", "\n        printf(\"Display one information(%d),please enter L\\n\", Lp->number);", "\n        printf(\"Display all  information(%d),please enter A\\n\", Lp->number); ", "\n        printf(\"Delete one information(%d),please enter D\\n\", Lp->number);", "\n        printf(\"Delete all information(%d),please enter U\\n\", Lp->number);", "\n        printf(\"Quit,please enter Q\\n\"); ", "\n        printf(\"please input command:\"); ", "\n        scanf(\"%c\", &command); ", "\n        switch (command) {", "\n        case 'r'://case 'R': get(ch);Lp->front = headnode;get(Lp, ch);break; ", "\n        case 'l':case 'L':printf(\"enter No.:\"), ", "\n        scanf(\"%d\", &i); ", "\n        Lp->front = headnode;displayone(Lp, i);", "\n        break; ", "\n        case 'a':case 'A':Lp->front = headnode;displayall(Lp)", "\n        ;break; ", "\n        case 'd':case 'D':printf(\"enter No.:\"), scanf(\"%d\", &i); ", "\n        Lp->front = headnode;deleteone(Lp, i);", "\n        break; ", "\n        case 'u':case 'U':Lp->front = headnode;deleteall(Lp);break; ", "\n        case 'q':case 'Q':printf(\"quit!\");", "\n        }", "\n        if (command == 'q' || command == 'Q') ", "\n            break;", "\n    }", "\n}", "\n\n", "\n\ninitLqueue方法里\nif (((*q)->front = (Qnodetype*)malloc(sizeof(Qnodetype))) == NULL)\n\n总是报错，访问位置冲突。怎么解决？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use  &lt;code&gt;break;&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case($date &amp;gt; $s_year.'-'.$quart1 &amp;amp;&amp;amp; $date &amp;lt;= $s_year.'-'.$quart2):\n    $item['quarter'] = '1';\n    break;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["php Switch / case不起作用", ["\n\n", "I tried to find my answer in the other switch/case question. But i don't find the solution. ", "\n\n", "I got a switch that split my date values in 4 different quarters. \nBut when i want to print it out, it doesn't work. I don't know what i'm doing wrong. ", "\n\n", "is this a typo or? ", "\n\n", "Thanks in advance.", "\n\n", "MY CODE", "\n\n", "while (odbc_fetch_row($result)) { // while there are rows \n    $overweight = odbc_result($result, \"Weight1\") - 44000;\n    //$total_overweight += $overweight; \n    $date = date(\"Y-m-d\", strtotime(odbc_result($result, \"Date1\")));\n    $companies[] = odbc_result($result, \"String3\");\n    $weight = odbc_result($result, \"Weight1\");                                     \n    $item['nrplaat'] = odbc_result($result, \"String1\");\n    $item['tptcode'] = odbc_result($result, \"String3\");\n    $item['chrononr'] = odbc_result($result, \"String15\");\n    $item['projectcode'] = odbc_result($result, \"String4\");\n    $item['projectnaam'] = odbc_result($result, \"String8\");\n    $item['1eweging'] = $weight;\n    $item['overweighted'] = $overweight;\n    $item['date'] = $date;\n    $item['2eweging'] = odbc_result($result, \"Weight2\");\n    $item['netto'] = odbc_result($result, \"Nett\");                                                                     \n    switch($weight){\n        case($weight > '44000' && $weight <= '44500'):\n           $item['class'] = 'lichtgroen';\n        case($weight > '44500' && $weight <= '45000'):\n           $item['class'] = 'groen';\n        case($weight > '45000' && $weight <= '46000'):\n           $item['class'] = 'donkergroen';\n        case($weight > '46000' && $weight <= '47000'):\n           $item['class'] = 'bruingroen';\n        case($weight > '47000' && $weight <= '48000'):\n           $item['class'] = 'lichtbruin';\n        case($weight > '48000' && $weight <= '49000'):\n           $item['class'] = 'bruin';\n        case($weight > '49000' && $weight <= '50000'):\n           $item['class'] = 'lichrood';\n        case($weight > '50000'):\n           $item['class'] = 'rood';                                                                               \n    }                                    \n    switch($date){\n        case($date > $s_year.'-'.$quart1 && $date <= $s_year.'-'.$quart2):\n           $item['quarter'] = '1'; //kwartaal 1\n        case($date > $s_year.'-'.$quart2 && $date <= $s_year.'-'.$quart3):\n           $item['quarter'] = '2'; ////kwartaal 2\n        case($date > $s_year.'-'.$quart3 && $date <= $s_year.'-'.$quart4):\n           $item['quarter'] = '3'; ////kwartaal 3\n        case($date > $s_year.'-'.$quart4 && $date <= $s_year.'-'.$end):\n           $item['quarter'] = '4'; ////kwartaal 4                                        \n    }\n    //$item['quarter'] = 1; WHEN I DO THIS, ALL RESULTS WILL PRINT OUT!!!\n    switch($item['quarter']){\n        case '1': \n           print \"<tr>\n\";\n           print \"  <td>\" . $item['nrplaat'] . \"\n\";\n           print \"  <td>\" . $item['tptcode'] . \"\n\";\n           print \"  <td>\" . $item['chrononr'] . \"\n\";\n           print \"  <td>\" . $item['projectcode'] . \"\n\";\n           print \"  <td>\" . $item['projectnaam'] . \"\n\";\n           print \"  <td>\" . $item['1eweging'] . \"\n\";\n           print \"  <td>\" .  \"<span class=\\\"status\\\">\".$item['class'].\"</span>\" .\"\n\";\n           print \"  <td>\" . $item['overweighted'] . \"\n\";\n           print \"  <td>\" . $item['date'] . \"\n\";\n           print \"  <td>\" . $item['2eweging'] . \"\n\";\n           print \"  <td>\" . $item['netto'] . \"\n\";\n           print \"</tr>\n\";\n           break;\n    }                                    \n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是课本有误&amp;#xff0c;没有break语句的话确实是会把case 1后面的语句都执行一遍&amp;#xff0c;答案是 12 11&amp;#xff0c;你的想法应该是对的&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["一个关于switch的简单语句", ["请问答案是11，10", "而不是12，11，又双叒叕搞不懂了？", "求评论区详解", "\n"]], "Tag": "程序设计"}
{"Answer": "有没有指定编译器？？？？？？？", "Konwledge_Point": "switch语句及其应用", "Question": ["编译u-boot出现bad value (armv4) for -march= switch", ["下载了一个最新的u-boot2014.10", "\n配置", "\nmake smdk2410_config", "\n编译", "\nmake", "\n出现如下错误", "\ncc1: error: bad value (armv4) for -march= switch", "\ncc1: error: bad value (armv4) for -mtune= switch", "\nmake[2]: *** [include/autoconf.mk] Error 1", "\nmake[1]: *** [silentoldconfig] Error 1", "\nmake: *** No rule to make target ", "include/config/auto.conf', needed by", "include/config/uboot.release'.  Stop.", "\n谁知道怎么回事呢？？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Ok first, if this \"class name\" thing is the name of a class where you call this function why not passing it as a variable to this static function?&lt;/p&gt;\n\n&lt;p&gt;Second, if by class name you mean name of the \"Some_Class\", you might be able to access to this name through this code in a static function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$thisClassName = get_class(new self());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;!better:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$thisClassName = get_class();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$thisClassName = __CLASS__;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何在php中使用类名作为case的switch case语句？", ["\n\n", "Is there a way to use the class names as cases in the folowing example? (pseudo code)", "\n\n", "class Some_Class {\n\n    static function get_image_size() {\n\n        switch (get_class($image_size)) {\n\n            case 'Class_1':\n                        $image_size = 'related-post';\n                        break;\n                    }\n            case 'Class_2':\n                        $image_size = 'full';\n                        break;\n                    }                   \n\n                        return $image_size;\n\n                    }\n\n}\n", "\n\n", "I need this to call a specific variable form different php classes.\nBasically I need something like the following code but using switch statement:", "\n\n", "class Some_class {\n\n    static function get_image_size() {\n\n        if Class_Name_1 {\n            $image_size = 'related-post';\n        }\n\n        elseif Class_Name_2 {\n            $image_size = 'full';\n        }                   \n\n        return $image_size;\n\n    }\n\n}\n", "\n\n", "Thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "set集合是无序的，你遍历set怎么遍历方式需要看你代码才能知道结果。", "Konwledge_Point": "switch语句及其应用", "Question": ["java在switch case中遍历set的时候遍历次数出错", ["本人新手  做了一个学生管路系统（se） 有个排序功能，排完序后写入到txt文件中，然后在从文件中读取数据后显示出来，结果在case里显示的时候出现重复遍历的情况 如图", " 循环用的争强for 循环，单独测试这个方法没有问题正常显示 请问这是怎么回事？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;implicitly_wait隐式等待呀&amp;#xff0c;你整个页面加载完了就不在等待了呀&amp;#xff0c;要不你试试显式等待&amp;#xff0c;只等待你需要的元素&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Selenium switch_to.frame 等待问题", ["我需要用Selenium读取网站的数据，考虑加载速度的原因，我设置了等待implicitly_wait。这个网站含有Frame，需要切换frame才能读取数据。结果，我发现即使网页加载完成，switch_to.frame 还是会等待30秒才会完成，我把等待时间改了15秒，结果switch_to.frame等待了15秒完成。 我不明白为什么会这样。求解答。", "\n", "from selenium import webdriver\nimport datetime\n\nwb = webdriver", ".Edge", "()\nwb", ".get", "(", "'xxxxxx'", ")\nwb", ".implicitly_wait", "(", "30", ")\nmy_time = datetime", ".datetime", ".now", "()\nwb", ".switch_to", ".frame", "(", "1", ")\n", "print", "(datetime.datetime.now()", " - my_time )\n", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "title", ">", "Test", "</", "title", ">", "\n", "</", "head", ">", "\n", "<", "frameset", " ", "rows", "=", "\"40,73,*\"", ">", "\n    ", "<", "frame", " ", "noresize", "=", "\"\"", "  ", "name", "=", "\"header\"", " ", "src", "=", "\"xxxxxxxxxx.jsp\"", ">", "\n        #document\n            ", "<", "html", ">", "\n                ", "<", "head", ">", "\n                    ", "<", "title", ">", "Enquiry", "</", "title", ">", "\n                ", "</", "head", ">", "\n                ", "<", "body", " ", "class", "=", "\"Home\"", " ", "marginwidth", "=", "\"0\"", " ", "marginheight", "=", "\"0\"", " ", "topmargin", "=", "\"0\"", ">", "\n                    ", "<", "input", " ", "type", "=", "\"button\"", " ", "class", "=", "\"submit\"", " ", "value", "=", "\"Go\"", " ", "onclick", "=", "\"loadPage()\"", ">", "\n                ", "</", "body", ">", "\n            ", "</", "html", ">", "\n    ", "</", "frame", ">", "\n", "</", "frameset", ">", "\n", "</", "html", ">", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;刚写过一个类似的程序&amp;#xff0c;使用如下用法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# 切到新的页面&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;handles&lt;/span&gt; &amp;#61; driver.window_handles\n&lt;span class=\"hljs-attribute\"&gt;driver&lt;/span&gt;.switch_to.window(handles[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["selenium没有switch to window属性如何解决？", ["\n", "为什么呢？", "selenium没有switch to window属性如何解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;图片呢&amp;#xff1f;代码呢&amp;#xff1f;&lt;br /&gt;参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 两个整数四则运算&amp;#xff1a; \\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1、输入两个整数\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2、加法\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3、减法\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4、乘法\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;5、除法\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0、退出\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入&amp;#xff08;0或1&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; num, a, b, xz;\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; num!&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第一个整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第二个整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;b);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入数字选择运算程序&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;xz);\n        switch (xz) {\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#43;%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, a, b, a &amp;#43; b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d-%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, a, b, a - b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, a, b, a * b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d&amp;#61;%f\\n&amp;#34;&lt;/span&gt;, a, b, (float)a / b);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        default:&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的数字必须为2到5中间的数&amp;#xff01;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/905905182646146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/067215182646194.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用了两个switch嵌套，但是不知道哪里有问题开始读不进去", ["我在进行四则运算的时候，用了switch嵌套switch，但是不知道为什么电脑读不进去，然后就会卡在那一步，有没有神仙帮忙指点一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;按你设置的0、1&amp;#xff0c;在页面加载的函数中设置formModel.attleavetypeDto.isLeavePool&amp;#61;0或1&amp;#xff0c;或者data中定义时设置isLeavePool:&amp;#39;0&amp;#39;或&amp;#39;1&amp;#39;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["vue中怎么给switch组件默认值", ["vue里面，新增界面，用n-switch组件的如果不点一下获取不到值", "\n", " <n-switch\n                   v-", "model:", "value=", "\"formModel.attleavetypeDto.isLeavePool\"", "  \n                   ", ":active-value=", "\"1\"", "\n                  ", ":inactive-value=", "\"0\"", "\n                     />     \n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你想return 0&amp;#xff0c;那就把void Menu改成int Menu。否则直接写return&amp;#xff1b;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["While循环switch后有return", ["明天晚上就要交了😭😭", "这个是程序，然后它报错是那个最后面的return那", "return-statement with a value,in function returning 'void'[-fpermissve]", "void Menu() //菜单", "{", "    int i;", "    while(1){", "         Load();", "    printf(\"\\    1.录入运动员信息     2.修改运动员信息        |\\n\");", "    scanf(\"%d\",&i);", "       switch(i)", "     {", "       case 1:Input();break;", "       case 2:Edit();break;", "       default:  ;", "     }", "    Save();", "}", "     return 0;", "} "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The first version looks better to me, YMMV.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Benchmark it. Depends how good is the compiler at optimizing. The \"jump table\" version might be faster if the compiler doesn't try hard enough to optimize.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Depends on your definition of what is \"to declare function inline\". Go can declare and define functions/methods at the top level only. But functions are first class citizens in Go, so one can have variables/parameters/return values and structured types of function type. In all this places a &lt;a href=\"http://golang.org/ref/spec#Function_literals\" rel=\"nofollow\"&gt;function literal&lt;/a&gt; can [also] be assigned to the variable/field/element...&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Possibly. Still I would suggest to not keep the cpu state in a global variable. Once you possibly decide to go emulating multicore, it will be welcome ;-)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["功能表与golang中的switch", ["\n\n", "im am writing a simple emulator in go (should i? or should i go back to c?).\nanyway, i am fetching the instruction and decoding it. at this point i have a byte like 0x81, and i have to execute the right function.", "\n\n", "should i have something like this", "\n\n", "func (sys *cpu) eval() {\n    switch opcode {\n    case 0x80:\n        sys.add(sys.b)\n    case 0x81:\n        sys.add(sys.c)\n    etc\n    }\n}\n", "\n\n", "or something like this", "\n\n", "var fnTable = []func(*cpu) {\n    0x80: func(sys *cpu) {\n        sys.add(sys.b)\n    },\n    0x81: func(sys *cpu) {\n        sys.add(sys.c)\n    }\n}\nfunc (sys *cpu) eval() {\n    return fnTable[opcode](sys)\n}\n", "\n\n", "1.which one is better?", "\n2.which one is faster?", "\nalso", "\n3.can i declare a function inline?", "\n4.i have a ", "cpu", " ", "struct", " in which i have the registers etc. would it be faster if i have the registers and all as globals? (without the ", "struct", ")", "\n\n", "thank you very much.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;A &lt;code&gt;select&lt;/code&gt; is only used with channels. &lt;a href=\"https://gobyexample.com/select\" rel=\"noreferrer\"&gt;Example&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; is used with concrete types. &lt;a href=\"https://gobyexample.com/switch\" rel=\"noreferrer\"&gt;Example&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;select&lt;/code&gt; will choose multiple valid options at random, while a&lt;code&gt;switch&lt;/code&gt; will go in sequence (and would require a fallthrough to match multiple.)  &lt;/p&gt;\n\n&lt;p&gt;Note that a switch can also go over types for interfaces when used with the keyword &lt;code&gt;.(type)&lt;/code&gt; &lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;var a interface{}\na = 5\nswitch a.(type) {\ncase int:\n     fmt.Println(\"an int.\")\ncase int32:\n     fmt.Println(\"an int32.\")\n}\n// in this case it will print \"an int.\"\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Go中的switch和select有什么区别？", ["\n\n", "Is there any difference between ", "switch", " and ", "select", " in Go,", "\napart from the fact that one takes an argument and the other not?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 1&lt;br /&gt;case 2&lt;br /&gt;case 3&lt;br /&gt;case 4&lt;br /&gt;default&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch case时表示当输入的数大于四时怎么表示", ["用switch case时表示当输入的数大于四时怎么表示"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;if doesn't even need a loop&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (isset($dbs[$_GET['id']])) {\n    echo sprintf('On ID %s is %s', $_GET['id'], $dbs[$_GET['id']]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用数组中的值作为switch-case键", ["\n\n", "I’m working on an app, and I’m stuck.", "\n\n", "I want to do ", "foreach", " inside ", "switch", " like this:", "\n\n", "<?PHP\n$gtid = $_GET['id'];\n// ID(key) => value\n$dbs  = array(\n    \"ZTI10\" => \"Example1\",\n    \"O1JTQ\" => \"Example2\",\n    \"4V1OR\" => \"Example3\"\n);\n\nswitch($gtid){\n\nforeach ($dbs as $key => $value) {\n\n    case $key:\n        echo \"On ID $key is $value\";\n        break;\n\n  }\n}\n?>\n", "\n\n", "Is that even possible? Or is there any other way to do what I want here?", "\n\n", "Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用数量除以50&amp;#xff0c;&lt;br /&gt;case 0是一个&lt;br /&gt;case 1是一个&lt;br /&gt;case 2和case3是一个&lt;br /&gt;case 4和case 5 是一个&lt;br /&gt;case 6 和default 是一个&amp;#xff08;case 6不要也行&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++ switch的实例做法", ["如图", "救救孩子，知道这里大佬多，给个思路就行"]], "Tag": "程序设计"}
{"Answer": "把所有name值预先存放到List中，用indexOf方法来判断\r\n\r\nList&lt;String&gt; list= new ArrayList&lt;String&gt;();\r\nlist.add(\"name1\");\r\nlist.add(\"name2\");\r\n.\r\n.\r\n.\r\nif(list.indexOf(name)&gt;-1){//如果大于-1为存在的name\r\n\r\n}", "Konwledge_Point": "switch语句及其应用", "Question": [" 有好的方法可以替代 if else 和switch吗？", ["[code=\"java\"]if(name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\")||name.equals(\"name\"))", "\n  switch (name) {", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\ncase \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "case \"name\":", "\nbreak;", "\n\n", "}", "\n}[/code]", "\n我现在前台有很多种name值，大概有60多个不同name,每个name既可以对应不同值也可以多name值组合成一个值。", "\n我现在一个方法中条件语句判断用了大概40多个变量来判断，但是这样用if else 来判断性能显得不高。大家有什么好的方法替代if else 吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;   sel&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(sel !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Q&amp;#39;&lt;/span&gt;)\n    {\n         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Menu: A(dd) D(elete) S(ort) Q(uit),Select one:&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;sel);\n         &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n         &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(sel){\n                   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:\n                            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据已经增加.\\n&amp;#34;&lt;/span&gt;);\n                            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:\n                            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据已经删除.\\n&amp;#34;&lt;/span&gt;);\n                            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;S&amp;#39;&lt;/span&gt;:\n                            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据已经排序.\\n&amp;#34;&lt;/span&gt;);\n                            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                   &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;Q&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n    }\n   \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch语序和循环语序套用，不知道怎么办了，可不可以告诉我一个模板，顺便看看这一题", ["输出和格式都有错误，请问怎么办，试了几次都不知道怎么做，没办法了，请指点指点我", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;你想控制另一个页面的显隐的话&amp;#xff0c;可以用组件传参方式&amp;#xff0c;获取到switch绑定的值&amp;#xff0c;然后传递到那个页面&amp;#xff0c;再用这个参数控制显隐&lt;/li&gt;&lt;li&gt;或者用vuex&amp;#xff0c;存个公共数据&amp;#xff0c;switch操作这个公共数据&amp;#xff0c;另一个页面watch监听这个数据&amp;#xff0c;然后v-if绑定这个数据&lt;/li&gt;&lt;/ol&gt;\n&lt;hr /&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;麻烦点个【采纳此答案】 谢谢啦~&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["一个switch开关怎么用v-if控制另一个页面的", ["一个switch开关怎么用v-if控制另一个页面的显示隐藏，在哪条属性里添加另一个页面的地址。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;printf(&amp;#34;Price:%.2f\\n&amp;#34;,price);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言快递费用计算Switch", ["c语言快递费用计算", "实际输出整数部分都为零", "用switch这样为什么不行啊为什么呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static void main(String[] args) {&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Scanner input = new Scanner(System.in);&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.print(&amp;quot;Enter today&amp;#39;s day:&amp;quot;);&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;int today = input.nextInt();&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.print(&amp;quot;Enter the number of days elapsed since today:&amp;quot;);&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;int elapsedDay = input.nextInt();&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;String todayx = null;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;String todays = null;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;switch (today) {&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 0: todayx = &amp;quot;Sunday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 1: todayx = &amp;quot;Monday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 2: todayx = &amp;quot;Tuesday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 3: todayx = &amp;quot;Wesday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 4: todayx = &amp;quot;Thursday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 5: todayx = &amp;quot;Friday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 6: todayx = &amp;quot;Saturday&amp;quot;;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;switch ((today + elapsedDay) % 7) {&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 0: todays = &amp;quot;Sunday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 1: todays = &amp;quot;Monday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 2: todays = &amp;quot;Tuesday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 3: todays = &amp;quot;Wesday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 4: todays = &amp;quot;Thursday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 5: todays = &amp;quot;Friday&amp;quot;;break;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;case 6: todays = &amp;quot;Saturday&amp;quot;;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.print(&amp;quot;Today is &amp;quot; + todayx + &amp;quot; and the future day is &amp;quot; + todays);&lt;br /&gt;\n&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何调试我的代码？switch中的string出了问题", ["package thirdChapter;", "\n\n", "import java.util.Scanner;", "\n\n", "public class giveAFutureDate {", "\n\n", "public static void main(String[] args) {\n    Scanner input = new Scanner(System.in);\n\n    System.out.print(\"Enter today's day:\");\n    int today = input.nextInt();\n\n    System.out.print(\"Enter the number of days elapsed since today:\");\n    int elapsedDay = input.nextInt();\n\n    switch (today) {\n    case 0:string todayx = \"Sunday\";break;\n    case 1:string todayx = \"Monday\";break;\n    case 2:string todayx = \"Tuesday\";break;\n    case 3:string todayx = \"Wesday\";break;\n    case 4:string todayx = \"Thursday\";break;\n    case 5:string todayx = \"Friday\";break;\n    case 6:string todayx = \"Saturday\";\n\n    }\n\n    switch ((today + elapsedDay) % 7) {\n    case 0:string todays = \"Sunday\";break;\n    case 1:string todays = \"Monday\";break;\n    case 2:string todays = \"Tuesday\";break;\n    case 3:string todays = \"Wesday\";break;\n    case 4:string todays = \"Thursday\";break;\n    case 5:string todays = \"Friday\";break;\n    case 6:string todays = \"Saturday\";\n\n    }\n    System.out.print(\"Today is \" + todayx + \" and the future day is \" + todays);\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种情况需要加一个标志变量&amp;#xff0c;比如在第7行增加一个int变量flag &amp;#61; 1;当case 0中判断需要退出内层while时&amp;#xff0c;将flag设置为0&amp;#xff0c;然后在j&amp;#43;&amp;#43;行之前或之后判断flag是否为0&amp;#xff0c;如果为0就break跳出内层while循环&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["《关于如何跳出双重循环中的内循环（在switch（case）语句的条件下）的问题》", ["《关于如何跳出双重循环中的内循环（在switch（case）语句的条件下）的问题》", "\n", "......(省略头文件和主函数块)\n", "int", " i=", "0", ",j=", "0", ";\n", "while", "(i<", "999", ")\n{\n   ", "while", "（j<", "999", "）\n  {\n    ", "int", " ", "num", ";\n    cin>>", "num", ";\n    ", "switch", "(", "num", ")\n    {\n      ", "case", " ", "0", ":......(省略语句);", "break", ";", "//如果我要设置一个case 0:；时要跳出里面那个while循环，应该在在省略号那里写什么语句好？", "\n      .......;", "break", ";(省略所有", "case", "语句，和解题无关)\n    }\n    j++;\n  }\n  i++;\n}\n", "\n", "如果在解答问题的过程中您需要我的问题代码，请您告诉我一声！谢谢！"]], "Tag": "程序设计"}
{"Answer": "string b=“”，赋值", "Konwledge_Point": "switch语句及其应用", "Question": ["switch 未赋值的局部变量 求解 谢谢", ["        int a = 1;\n        string b;\n        switch (a)\n        {\n            case 0: b = \"0\"; break;\n            case 1: b = \"1\"; break;\n        }\n        textBox1.Text = b;\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;:)Welcome to the experiments of Euler&amp;#39;s constante.\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;:)The system has chosen four formulas to compute e.\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;:)Please picka choice shown on the menu:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;Menu&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a.Use formula(a) to compute e.\\n&amp;#34;&lt;/span&gt;);    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;b.Use formula(b) to compute e.\\n&amp;#34;&lt;/span&gt;);    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;c.Use formula(c) to compute e.\\n&amp;#34;&lt;/span&gt;);    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;d.Use formula(d) to compute e.\\n&amp;#34;&lt;/span&gt;);    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;e.Print e.\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f.Some action\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;q.Quit\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言简易菜单的制作", ["使用switch语句"]], "Tag": "程序设计"}
{"Answer": "这是switch..case中变量的作用域问题, 你这样声明的变量会被提前到switch前面所以的case共用该声明的变量;  但是给声明变量的case加大括号{..}就不会了...  \r\n你可以看下 https://zhidao.baidu.com/question/305369922252396084.html", "Konwledge_Point": "switch语句及其应用", "Question": ["Java switch遇到的小问题", ["public static void main(String[] args) {", "\n        int[] arr = {0,1,2,3,4,5,6,7};", "\n        switch (arr[2]) {", "\n        case 1:", "\n            ArrayList list = new ArrayList();", "\n            list.add(1);", "\n            list.add(2);", "\n            System.out.println(list.size()+\"PPPP\");", "\n            break;", "\n        case 2:", "\n            list = new ArrayList();", "\n            System.out.println(list.size());", "\n            break;", "\n        default:", "\n            break;", "\n        }", "\n\n", "    为什么这么写case 2 arraylist还可以定义?  依照代码case 1 应该没进行,那么case 2 是怎么定义的?arraylist也不是全局变量,求大神解答\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每个case最后要加上break;  不能会一直执行到有break的地方或者结束。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch的问题，求大佬来解答，用的DEV，老师叫用的", ["\n", "#include<stdio.h>\n#include<windows.h>\nvoid save();  //存钱 \nvoid draw();  //取钱 \ndouble count; //账户余额\nint main()\n{\n\tint sel,save,draw,count,newcount;\n\twhile(1)\n\t{\n\tsystem(\"ds\");\n\t\tprintf(\"|------------------存钱取钱程序--------------------|\\n\");\n\t\tprintf(\"|                  1.存钱                          |\\n\");\n\t\tprintf(\"|                  2.取钱                          |\\n\");\n\t\tprintf(\"|                  0.退出                          |\\n\");\n\t\tprintf(\"|--------------------------------------------------|\\n\");\n\t\tprintf(\"请输入您的选择:\",sel);//界面 \n\t\tscanf(\"%d\",&sel);//输入数据 \n\t\tprintf(\"您的账户余额:0.00\\n\",count); \n\t} \n\treturn 0;\n}\n\tvoid save();//存钱函数\n\tswitch(sel)\n\t{\t\t\n\t\tcase 1:printf(\"请输入你存储的数目:\",save);\n\t\t       scanf(\"%d\",&save);\n\t\t       printf(\"您的账户余额%d\",newcount==save+count);\t\t       \n\t}\n\tvoid draw();//取钱函数 \n\tswitch(sel)\n\t{\n\t\t\n\t\tcase 2:printf(\"请输入你的取走数目:\",draw);\n\t\t       scanf(\"%d\",&draw);\n\t\t       if(count<draw)\n\t\t       printf(\"余额不足，你无法取走，滚去充余额吧!\\n\");\n\t\t       else\n\t\t       printf(\"您已取走:%d\\n\",draw);\n\t\t       printf(\"剩余余额:%d\\n\",newcount==count-draw);\n\t\tcase 0:printf(\"正在退出系统.....\\n\");\n\t\t       break;\t\n\t} \t\t", "\n\n", "大佬们，switch那里怎么错了，不知道为什么，求助"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This error is possible occurring because, you are inserting &lt;code&gt;'&lt;/code&gt; character without using &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; around the values you insert into your MySQL query. I would suggest, you encapsulate your values like this &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ambid = mysql_real_escape_string($_POST['amb_id']); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, I don't recommed you use mysql_ functions at all, as it is very weak and vurnerable to mysql injections, just like your code. Learn PDO instead.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch case将PHP函数与array作为参数来更新MySQL db", ["\n\n", "HTML CODE:-", "\n\n", "<form action=\"run.php\" method=\"post\">\nAmbulance ID:<input type=\"text\" name=\"amb_id\">\nSelect the any of the point and submit:\n<input type=\"radio\" name=\"tposition\" value=\"1\">t1  (1 km away from the signal)\n<input type=\"radio\" name=\"tposition\" value=\"2\">t2 (before 500 mtrs point) \n<input type=\"radio\" name=\"tposition\" value=\"3\">a3 (500 Mtr from signal)\n<input type=\"radio\" name=\"tposition\" value=\"4\">t3 (before signal, after 500 mtrs)\n<input type=\"submit\" value=\"Submit\">\n</form>\n", "\n\n", "PHP CODE:-", "\n\n", "<?php\n$ambid = $_POST['amb_id'];\n//lattitude array\n$lat=array(13.092593,13.092781,13.093126,13.09344,13.093889,13.094349,13.094882,13.095485,13.096575);\n\n//longitude array\n$lon=array(77.586415,77.585009,77.583454,77.58251,77.581598,77.580793,77.580096,77.57946,77.578486);\n\n//connect to the db\n$con = mysql_connect('localhost', 'root','');\nmysql_select_db('traffic', $con);\n\n//check the radio button\n  if (isset($_POST['tposition'])) {\n     switch($_POST['tposition']) {\n    case 1:\n        updateDb($lat[0],$lon[0]);\n        break;\n    case 2:\n        updateDb($lat[1],$lon[1]);\n        break;\n\n        }\n}\n\n    else { echo \"Please select any of the tpositon radio button\"; }\n\nfunction updateDb($lati,$longi)\n{\n$query = \"UPDATE emergency SET e_latitude=$lati,e_longitude=$longi WHERE amb_id=$ambid \";\n$res= mysql_query($query) or die(\"Unable to update the latlong values because : \" . mysql_error());\n\n}\nmysql_close($con);\n\n?>\n", "\n\n", "While running the above script i am getting an error as \n\"Unable to update the latlong values because : You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1\" .", "\n\n", "But instead of function if use the same lines of code for every case it works. Why is that ? Can you help me thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改为 case 0: 这种样子&amp;#xff0c;&amp;#39;0&amp;#39;是数字字符&amp;#xff0c;和数字0不一样&lt;br /&gt;switch(s/1000)就可以&amp;#xff0c;不需要再定义一个m变量&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch过程，计算工资纳税，无问题，但计算错误", ["#include <stdio.h>", "int main()", "{", "    int s,m,p,n;", "    scanf(\"%d\",&s);", "    switch(m=s/1000)", "    {", "        case'0':printf(\"纳税款:%d,实得工资数:%d\",p=s", "0,n=s,p,n);break;", "        case'1':printf(\"纳税款:%d,实得工资数:%d\",p=s", "0.05,n=s-s", "0.05,p,n);break;", "        case'2':printf(\"纳税款:%d,实得工资数:%d\",p=s", "0.08,n=s-s", "0.08,p,n);break;", "        case'3':printf(\"纳税款:%d,实得工资数:%d\",p=s", "0.1,n=s-s", "0.1,p,n);break;", "        case'4':printf(\"纳税款:%d,实得工资数:%d\",p=s", "0.1,n=s-s", "0.1,p,n);break;", "        default:printf(\"纳税款:%d,实得工资数:%d\",p=s", "0.15,n=s-s*0.15,p,n);", "    }", "  }"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Two answers really.&lt;/p&gt;\n\n&lt;p&gt;You should be type hinting &lt;code&gt;$instance&lt;/code&gt; as the interface &lt;code&gt;Job&lt;/code&gt;. That is the whole purpose of an &lt;code&gt;Interface&lt;/code&gt; in OOP. You can do that with the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($type) {\n    case 'auto':\n        $instance = new Auto();\n        break;\n    // ...\n}\n\n/** @var \\Job $instance */\n$instance-&amp;gt;do();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can provide metadata to PHPStorm for type hinting factory methods if you want to go that route. The metadata file can be committed to source control just like your code &lt;a href=\"https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata\" rel=\"nofollow\"&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch-case按类型创建不同的对象？", ["\n\n", "Good day every one,", "\n\n", "We use a lot of statements like if-else or switch-case for creating different object depending on different conditions like:", "\n\n", "interface Job {\n    public function do();\n}\n\nclass Auto implement Job {\n    ...\n}\n\nclass Month implement Job {\n    ...\n}\n\n...\n// another script to run jobs\n...\nswitch($type) {\n    case 'auto':\n        $instance = new Auto();\n        break;\n    case 'month':\n        $instance = new Month();\n        break;\n    default:\n        throw new Exception('not support type!');\n}\n\n$instance->do();\n", "\n\n", "The problem is if we use if-else / switch-case make code grows fast with more and more types.", "\nWe can use reflection or dynamical instance initiation however the IDE (like PHPStorm) will not able to find the class usage..", "\nIs there any better way against using switch-case?", "\n    "]], "Tag": "程序设计"}
{"Answer": "可以，你看看这个http://bbs.csdn.net/topics/320023134可能会有帮助", "Konwledge_Point": "switch语句及其应用", "Question": ["多态真的能替换switch吗？", ["都说“多态替换switch” 或者“多态取消switch”我觉得是不是翻译错了？即使引入了多态，也只能简化switch吧，因为无论如何在实例化的时候还是需要判断啊！！！！ "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes it is possible&lt;/p&gt;\n\n&lt;p&gt;Here is an example to start with&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?\n      $i = 1;\n      $j = 10;\n\n      switch($i) {\n            case \"2\":\n                   echo \"The value is 2\";\n                   break;\n            case ($i==1 &amp;amp;&amp;amp; $j==10):\n                   echo \"Your exceptional Switch case is triggered\";\n                   break;\n            default:\n                   echo \"Invalid\";\n                   break;\n     }\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何在Switch方法中添加多个条件案例？", ["\n\n", "Is there a way to include multiple cases inside a switch method in php?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;main函数必须有返回值&amp;#xff0c;default中的return改成return 0;&lt;br /&gt;另外&amp;#xff0c;利息应该是在上一年的基础上计算的&amp;#xff0c;应该用pow函数计算&amp;#xff0c;我给你注释到相应的代码后面了。&lt;br /&gt;贴代码用代码段贴&amp;#xff0c;否则一些星号会被吃掉&amp;#xff0c;就不容易帮你找错误。&lt;br /&gt;代码修改如下&amp;#xff08;计算公式还是用的你的&amp;#xff0c;需要修改的我注释到相应的代码后面了&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choice;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; y;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 1---活期\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 2---一年期\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 3---三年期\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; 4---五年期\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input choice[1-4]: &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;choice);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(choice)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        y&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;0.0036&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        y&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;0.0225&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        y&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;0.0333&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//y&amp;#61;100*pow(1&amp;#43;0.333,3);三年期应该是这个公式&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        y&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;0.0360&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//y&amp;#61;100*pow(1&amp;#43;0.360,5);五年期应该是这个公式&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;对不起&amp;#xff0c;您的选择有误&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;100元到期本金及利息总和&amp;#xff1a;%f\\n&amp;#34;&lt;/span&gt;,y);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;谢谢&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch break的语句计算银行利率 C语言 不知道哪里错了 vs2010不能运行", ["#用switch break的语句计算银行利率 C语言 不知道哪里错了 vs2010不能运行", "\n", "#include<stdio.h>", "int main()", "{", "    int choice;", "    double y;", "    printf(\"  1---活期\\n\");", "    printf(\"  2---一年期\\n\");", "    printf(\"  3---三年期\\n\");", "    printf(\"  4---五年期\\n\");", "    printf(\"Please input choice[1-4]: \");", "    scanf(\"%d\", &choice);", "    switch(choice)", "    {", "        case 1:", "            y=100*(1+0.0036", "1);", "            break;", "        case 2:", "            y=100", "(1+0.0225", "1);", "            break;", "        case 3:", "            y=100", "(1+0.0333", "3);", "            break;", "        case 4:", "            y=100", "(1+0.0360*5);", "            break;", "        default:", "            printf(\"对不起，您的选择有误！\");", "            return;", "    }", "    printf(\"100元到期本金及利息总和：%f\\n\",y);", "    printf(\"谢谢！\\n\");", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个不太了解这个是整体折扣还是区间折扣&amp;#xff0c;所以写了两个。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;//这个是分区间打折&amp;#xff0c;不同的区间有不同的优惠&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Scanner&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(System.in);\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;price&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//打折后的价格&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;originalPrice&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; s.nextInt();    &lt;span class=\"hljs-comment\"&gt;//原价&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;){\n                    price &amp;#61; price &amp;#43; originalPrice;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n                price &amp;#61; price &amp;#43; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;){\n                    price &amp;#61; price &amp;#43; (originalPrice-&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.85&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n                price &amp;#61; price &amp;#43; (&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.85&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;){\n                    price &amp;#61; price &amp;#43; (originalPrice-&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.7&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n                price &amp;#61; price &amp;#43; (&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.7&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                price &amp;#61; price &amp;#43; (originalPrice-&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.6&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        System.out.println(price);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;下面这个是整体打折&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;import java.util.Scanner;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        Scanner s &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; price &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//打折后的价格&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; originalPrice &amp;#61; s.nextInt();    &lt;span class=\"hljs-comment\"&gt;//原价&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;){\n                    price &amp;#61; originalPrice;\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;未超过200元&amp;#xff0c;无优惠&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;){\n                    price &amp;#61; originalPrice*&lt;span class=\"hljs-number\"&gt;0.85&lt;/span&gt;;\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;价格在200元到600元&amp;#xff0c;85折&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (originalPrice&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;){\n                    price &amp;#61; originalPrice*&lt;span class=\"hljs-number\"&gt;0.7&lt;/span&gt;;\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;价格在600元到1000元&amp;#xff0c;7折&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                price &amp;#61; originalPrice*&lt;span class=\"hljs-number\"&gt;0.6&lt;/span&gt;;\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;价格在1000元以上&amp;#xff0c;6折&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(price);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;也没有个实例啥的&amp;#xff0c;可以跑下试试&amp;#xff0c;有问题再问我哦&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问这道题怎么用switch来写代码啊智者们？", ["商场消费折扣四个条件", "1.未超过200元全额", "2.不少于200元未超出600元，8.5折优惠", "3.不少于600元未超出1000元，7折优惠", "4.不少于1000元，6折优惠", "要求使用switch来写，并在控制台输出享受折扣与打折后需支付的金额。", "用if倒是可以写出来，用switch的话没办法在case后定义区间，只能定义常量值了。哪位智者帮我解答下"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You added a &lt;code&gt;PHP_EOL&lt;/code&gt; at the end of the URL, so all of your cases will fail because you're not checking for that. Remove your &lt;code&gt;PHP_EOL&lt;/code&gt; and you'll be fine. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP Switch使用简单的字符串无效", ["\n\n", "$url = $_SERVER['REQUEST_URI'];\n$url = basename($url).PHP_EOL;\n\nswitch ($url) {\n    case 'digital-marketing-and-seo':\n        $new_url = \"Digital Marketing & SEO\";\n        break;\n    case 'websites-digital-destinations':\n        $new_url = \"Websites & Digital Destinations\";\n        break;\n    case 'brand-identity-evolution':\n        $new_url = \"Brand Identity & Evolution\";\n        break;\n    case 'strategy-consulting':\n        $new_url = \"Strategy & Consulting\";\n        break;\n    case 'government-universities':\n        $new_url = \"Government & Universities\";\n        break;\n    case 'hospitality-travel':\n        $new_url = \"Hospitality & Travel\";\n        break;\n    case 'architecture-engineering':\n        $new_url = \"Architecture & Engineering\";\n        break;\n    case 'wine-spirits':\n        $new_url = \"Wine & Spirits\";\n        break;\n    default:\n        $new_url = '';\n        echo 'default derp';\n}\n", "\n\n", "So I have this block of code and it will not work for me. The url can say exactly what is in the case and it will default. I'm trying to get url structures to build out a shortcode and I need it to match what is entered. ", "\n\n", "I determined that if I enter just add a variable for a string for $url = 'brand-identity-evolution'; The switch works. I made sure it's a string with is_string function and can't figure out why this isn't working. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case1改为 case 1:&lt;br /&gt;case和1不能连在一起&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch中的break好像没起作用！？", ["question如下图", "我编的程序和运行结果↓", "\n", "\n", "总之只要输入不是0，price就一直是0", "我在default中加了一个语句，运行之后发现果然是break没起作用！？", "\n", "\n", "我实在不知道了，请求支援😣，这到底是为什么呀😭"]], "Tag": "程序设计"}
{"Answer": "使用函数指针代替location参数，让调用者把要做什么定义成函数传进来。", "Konwledge_Point": "switch语句及其应用", "Question": ["如何去除switch case，实现不同任务的调用", ["问题背景：", "\n嵌入式linux，应用", "\n通过串口获得了  形如  命令+参数 的字符串", "\n我是之前是通过switch case进行功能选择的？有没有什么更好的办法统一起来，有些约定的指令需要带参数，有些不需要。", "\n\n", "            switch(location)\n            {\n                case 0:command_getServerIp(); break;\n                case 1:command_setServerIp(); break;\n                case 2:command_getIpcIP(); break;\n                case 3:command_takephoto(); break;\n                case 4:command_standby(); break;\n                case 5:command_setStandbytime(); break;\n                case 6:command_GPIOCTRL(); break;\n                default:\n                    rdlen = 0;\n                    location = -1;\n                    memset(recbuffer,0,sizeof(recbuffer));\n                    sendmessage(\"BAD COMMAND!\\n\");\n            }\n            memset(recbuffer,0,sizeof(recbuffer));// cleanup\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;String Isay&amp;#61;sc.nextInt();  sc.nextInt的返回值是int&amp;#xff0c;你需要换成 sc.nextLine&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch表达式里面的值使用scanner语句输入字符串类型时显示报错", ["为什么我switch表达式里面的值使用scanner语句输入字符串类型时显示报错", "\n", "\n    ", "//设当我说要吃什么时，我妈就给我买什么", "\n    Scanner sc=", "new", " Scanner(System.", "in", ");\n    System.", "out", ".println(", "\"请输入你想吃的食物：\"", ");\n    String Isay=sc.nextInt();\n    ", "switch", "(Isay) {\n    ", "case", " ", "\"奶茶\"", ":\n        System.", "out", ".println(", "\"喝奶茶\"", ");\n        ", "break", ";\n    ", "case", " ", "\"螺蛳粉\"", ":\n        System.", "out", ".println(", "\"吃螺狮粉\"", ");\n        ", "break", ";\n    ", "default", ":\n        System.", "out", ".println(", "\"吃烤串\"", ");\n        ", "break", ";\n        \n    }\n    \n}\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf中的\\n删掉&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch 中break怎么用呀", ["在switch语句种输入对应的常量怎么才能直接跳出对应语句呀，为什么我总是必须把几个case的值都输一遍才能跳出来。怎么才能就是输入1就直接跳出1的语句，而不是必须输入case1和case2的值才会跳出1的值", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Today i found out the reason behind this.&lt;/p&gt;\n\n&lt;p&gt;When i was testing i was spoofing a json request with my browser. But everytime i would hit refresh, my browser would also send a request for the favicon.ico file. Since i didn't add the mod_rewrite rules for images it was handled as an regular html request by the code, therefore calling the html part of the switch.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP error_log仍然可以在switch中使用break", ["\n\n", "I thought i had a bug in my code but by isolating the problem i found out some 'weird' behaviour of error_log() inside a switch case.", "\n\n", "I added some error_log for debugging, but then wehenever i was running throught the switch, the error_log would always be triggered even if the call was made outside of the valid case.", "\n\n", "Here the exact part of my code that made me find out this wierdness:", "\n\n", "switch($LLTP->request()){\n\n  case 'json':\n    /* some code commented out for debug here */\n    error_log('json');\n    echo 'json';\n    break;\n\n  default:\n    /* some code commented out for debug here */\n    error_log('html');\n    echo 'html';\n    break;\n}\n", "\n\n", "the request method is plain and simple and return a string like ", "'json','html','ajax'", " etc..", "\n\n", " public function request(){\n    return $this->requests;\n  }\n", "\n\n", "so if the switch is html, the default kick in and i get the expepted results:", "\n\n", "\n  ", "echoing 'html' (expected)", "\n  \n  ", "errorlog 'html' (expected)", "\n", "\n\n", "BUT when i run it with the 'json' switch, i get the expected 'json' on screen and inside the error_log, but i also get the 'html' error entry (without the echo).", "\n\n", "\n  ", "echoing 'json' (expected)", "\n  \n  ", "errorlog 'json' (expected)", "\n  \n  ", "errorlog 'html, referer: ", "https://www.example.com/home.json", "' (unexpected)", "\n", "\n\n", "Is this normal behavior? Fisrt time i notice it and if i try to reproduce the 'weirdness' with another sample code:", "\n\n", "$vv='json';\nswitch($vv){\n  case 'json':\n    echo 'json';\n    error_log('json');\n    break;\n  default:\n    echo 'html';\n    error_log('html');\n    break;\n}\n", "\n\n", "i get, (in the errorlog)", "\n\n", "\n  ", "[error] json (expected)", "\n  \n  ", "[error] json, referer: ", "http://www.example.com/home.json", " (unexpeted as\n  it's the second entry in the log)", "\n", "\n\n", "i'm lost, there something i don't understand or expected results is not what I expected.", "\n\n", "PS: i don'T output the errors on the page, i only log errors in the logs. if this had anything to do with it o.O", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I found that the problem was in how the variable $plant is pulled into the query string. &lt;/p&gt;\n\n&lt;p&gt;Including it within the double-quotes worked outside of the array - in the original context of a switch statement. However, when pulled into an array as I am doing, the variable has to be outside of the double-quotes.&lt;/p&gt;\n\n&lt;p&gt;i.e.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\"query statement parts\".$string.\"other query string parts\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thanks to all who responded.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP数组的SQL语句", ["\n\n", "I am trying to refactor a switch statement to a collection. The switch statement selects the correct SQL query to run based on the switch conditional.", "\n\n", "The queries all have concatenations within the switch statement, which does not work in an array within a class. Here is an example query similar to what I am dealing with:", "\n\n", "\"select qqqq,wwww,eeee,rrrr,tttt, 'yyyy' as uuuu from \" . CONSTANT . \".aaaa as ssss inner join ' . CONSTANT2 . '.ddddd .... etc.\n", "\n\n", "Any suggestions? ", "\n\n", "EDIT", "\n\n", "Here is something close to the actual code. I made some changes for privacy:", "\n\n", " <?php\n", "\n\n", "namespace Collections;", "\n\n", "class ScheduleSQL {", "\n\n", "private $sql;\n\npublic function __construct($plant)\n{\n\n    $sql = [\n    'fgfghh' => \"select fdgsgdfg, sgfdfgfg, rotary_priority,sfgfgfddg,sgfsgf, JB_ULT_CUST,jbr_status, jb_cust_want_date, routing_done, jb_date_need, js_time_ship, js_ship_via, jb_job_desc, rot.job_nbr, rot.job_plt, rot.job_type, sdfgdfgdf, js_ship_to, js_shipto_name, js_state, js_city, jbr_created as cvbvbv,xbvbvb, xbvbvb,xvbvbbcvb, vbvbvbas job_class, ruling_completed,scheduled_rule_date, converter, scenario_id, scenario_subdomain, transfer_type,transfer_job, jb_slope, jb_inch\n                    from ' . DB_RASTER_LIB . 'jbraster as rot\n                    inner join  ' . DB_STR_LIB . '.sessions_and_jobs as str\n                        on rot.job_type = str.job_type and str.jb_job = rot.job_nbr and cgc.jb_plt = rot.job_plt\n                    inner join ' . DB_RASTER_LIB . '.rot_job_sp as rot_sp\n                        on rot_sp.jb_job = str.jb_job and rot_sp.jb_plt = str.jb_plt and rot_sp.job_type = rot.job_type\n                    left outer join ' . DB_RASTER_LIB . '.job_data as rot_jd\n                        on rot_jd.job_nbr = str.jb_job and rot_jd.job_plt = str.jb_plt and rot_jd.job_type = rot.job_type\n                    inner join ' . DB_STR_LIB . '.jobshp as shp\n                        on str.jb_job = shp.js_job and str.jb_plt = shp.js_plt and shp.job_type = rot.job_type and shp.js_primary = 1\n                    where rot.job_plt = $plant and rot.job_type <> A and (jbr_status is null or jbr_status<>99)\n                    order by jb_date_need asc\"\n];  \n} \n\npublic function getSQL($type)\n{\n    return $this->sql[$type];\n}\n", "\n\n", "}", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你第一 个 case 1 没有加break ,它就继续执行下面的语句了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["一开始Switch判断n，如n=1则执行，m变成3，我能懂，可是为什么下一句case 2时，n≠2啊，为什么也执行了", ["\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " n = ", "1", ";\n    ", "int", " m = ", "2", ";\n    ", "switch", "(n)\n    {\n        ", "case", " ", "1", ":\n            m++;\n        ", "case", " ", "2", ": \n            n++;\n        ", "case", " ", "3", ":\n            ", "switch", " (n)\n            {\n                ", "case", " ", "1", ":\n                    n++;\n                ", "case", " ", "2", ":\n                    m++;\n                    n++;\n                    ", "break", ";\n            }\n        ", "case", " ", "4", ":\n            m ++;\n            ", "break", ";\n        ", "default", " :\n            ", "break", ";\n    }\n    printf(", "\"m=%d,n=%d\"", ",m,n);\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你用字符串数组存周一到周日&amp;#xff0c;然后再通过number作为下标找到数组中的星期&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/711888733946190.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Scanner&lt;/span&gt;;\n &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;weekquestion&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args) {\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; number;\n&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt; &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;Sunday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Monday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Tuesday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Wednesday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Thursday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Friday&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;Saturday&amp;#34;&lt;/span&gt;};\nScanner reader &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new &lt;/span&gt;&lt;span class=\"hljs-class title_\"&gt;Scanner&lt;/span&gt;(System.&lt;span class=\"hljs-property\"&gt;in&lt;/span&gt;);\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; reader.&lt;span class=\"hljs-property\"&gt;nextInt&lt;/span&gt;();\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mouth &amp;#61; reader.&lt;span class=\"hljs-property\"&gt;nextInt&lt;/span&gt;();\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt; &amp;#61; reader.&lt;span class=\"hljs-property\"&gt;nextInt&lt;/span&gt;();\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; date &amp;#61; reader.&lt;span class=\"hljs-property\"&gt;nextInt&lt;/span&gt;();\nnumber &amp;#61; Math.&lt;span class=\"hljs-property\"&gt;abs&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;&amp;#43;(date-mouth))%&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\nSystem.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[number]);\n}\n}\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["怎么把switch转换成数组解题？", ["问题遇到的现象和发生背景", "\n", "问题描述：", "\n", "   在平时日常生活中通常需要回答当月的某日期为星期几的问题，常常通过提供你当月某天是星期几，然后需要计算当月的某日期为星期几。提供当月日期和星期的数（用阿拉伯数表示，", "0", "为", "Sunday", "，", "1", "为", "Monday", "，", "2", "为", "Tuesday", "，", "3", "为", "Wednesday", "，", "4", "为", "Thursday", "，", "5", "为", "Friday", "，", "6", "为", "Saturday", "），然后提供一个当月的日期号数，请计算该日期号数为星期几，使用英文单词输出星期几。\n", "\n", "输入：", "\n", "  标准输入，输入的第一行为计算用例数为整数", "n", "，接下来的", "n", "行，每行有", "3", "个由空格分开整数，其中第一个整数为当月的日期数,第二个整数为第一个整数表示的日期日的星期几，第三个整数是需要你回答当月该日期是星期几，如该行输入为：", "1", " ", "3", "  ", "10", "，表示当月的", "1", "号为星期三，请问当月的", "10", "号为星期几。\n", "\n", "输出：", "\n", " 标准输出：每一个计算的结果使用一行输出，输出使用英文单词输出星期几。\n", "\n", "输入样例：", "\n", "2", "1 3 10", "10 0 5", "\n", "输出样例：", "\n", "Friday", "Tuesday", "\n", "问题相关代码，请勿粘贴截图", "\n", "import java.util.Scanner;", "public class weekquestion{", "    public static void main(String[] args) {", "        int i = 0;", "        int number;", "        Scanner reader = new Scanner(System.in);", "        int n = reader.nextInt();", "        for(i=0;i<n;i++)", "        {", "            int mouth = reader.nextInt();", "            int day = reader.nextInt();", "            int date = reader.nextInt();", "            number = Math.abs((day+28+(date-mouth))%7);", "            switch (number)", "            {", "                case 0 :System.out.println(\"Sunday\");break;", "                case 1 :System.out.println(\"Monday\");break;", "                case 2 :System.out.println(\"Tuesday\");break;", "                case 3 :System.out.println(\"Wednesday\");break;", "                case 4 :System.out.println(\"Thursday\");break;", "                case 5 :System.out.println(\"Friday\");break;", "                case 6 :System.out.println(\"Saturday\");break;", "            }", "        }", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Do: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$visit = rand(0,2);\n$random = $banners[$visit];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of other way around. That way you keep the int value random in the $visit variable and not a image url.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP Switch案例帮助。 应该简单吗？", ["\n\n", "i'm creating this banner rotating PHP script (I'm new to PHP) and was wondering why my cases aren't working. I can get the random image to show via the array although I can't seem to make the cases work.", "\n\n", "I would like it so if the image from the random array is the 0 image, it will say visit jackhair.co.uk and if the random image from the array is 2 it will say jamiehair.co.uk", "\n\n", "<?php\n/*Creates an array called banners which holds all the images of banners */\n$banners=array(\"img/reversessh.jpg\",\"img/failtwo.jpg\",\"img/iptable.jpg\");\n$random = ($banners[(rand(0,2))]);\n$visit = $random;\n\nswitch($visit)\n{\ncase $visit = 0:\n    Echo \"Visit www.jackhair.co.uk\";\n    break;\ncase $visit = 1:\n    Echo \"Visit www.lukehair.co.uk\";\n    break;\ncase $visit = 2:\n     Echo \"Visit www.jamiehair.co.uk\";\n    break;\ndefault:\n    null;\n}\n\n?>\n\n<img src=\"<?= $random ?>\" alt=\"Rotating Banners\" />\n", "\n\n", "Hope you can help! Thankyou.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your first example is simply wrong. You need &lt;code&gt;elseif&lt;/code&gt; instead of just &lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you use &lt;code&gt;if..elseif...&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt; is mainly a matter of preference. The performance is the same.&lt;/p&gt;\n\n&lt;p&gt;However, if all your conditions are of the type &lt;code&gt;x == value&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt; being the same in every condition, &lt;code&gt;switch&lt;/code&gt; usually makes sense. I'd also only use &lt;code&gt;switch&lt;/code&gt; if there are more than e.g. two conditions.&lt;/p&gt;\n\n&lt;p&gt;A case where &lt;code&gt;switch&lt;/code&gt; actually gives you a performance advantage is if the variable part is a function call:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch(some_func()) {\n    case 1: ... break;\n    case 2: ... break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then &lt;code&gt;some_func()&lt;/code&gt; is only called once while with&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if(some_func() == 1) {}\nelseif(some_func() == 2) {}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it would be called twice - including possible side-effects of the function call happening twice. However, you could always use &lt;code&gt;$res = some_func();&lt;/code&gt; and then use &lt;code&gt;$res&lt;/code&gt; in your &lt;code&gt;if&lt;/code&gt; conditions - so you can avoid this problem alltogether.&lt;/p&gt;\n\n&lt;p&gt;A case where you &lt;strong&gt;cannot&lt;/strong&gt; use switch at all is when you have more complex conditions - &lt;code&gt;switch&lt;/code&gt; only works for &lt;code&gt;x == y&lt;/code&gt; with &lt;code&gt;y&lt;/code&gt; being a constant value.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["哪个更快更好，Switch Case还是其他如果？", ["\n\n", "Which is the better and fastest methods : if or switch ?", "\n\n", "if(x==1){\n  echo \"hi\";\n} else if (x==2){\n  echo \"bye\";\n}\n\nswitch(x){\n  case 1\n    ...\n  break;\n  default;\n} \n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; n,t;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;选择机加工制品输入1&amp;#xff0c;选择手工制品输入2:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;f);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入购买总额(元):&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (f&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; ((&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)(n/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;))\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: t &amp;#61; n; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.95&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.925&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.90&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; ((&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)(n/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;))\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.95&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.925&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.90&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: t &amp;#61; n*&lt;span class=\"hljs-number\"&gt;0.85&lt;/span&gt;; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;顾客应付%.2f元&amp;#34;&lt;/span&gt;, t);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch和if语句编写程序计算应付金额", ["求教该怎么设变量", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;中的逻辑判断出错了\nevent.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;ArrowUp&amp;#34;&lt;/span&gt; || &lt;span class=\"hljs-string\"&gt;&amp;#34;Up&amp;#34;&lt;/span&gt;  的执行时候  \n第一:先进行event.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;ArrowUp&amp;#34;&lt;/span&gt; 赋值\n第二在进行   前面赋值结果 || &lt;span class=\"hljs-string\"&gt;&amp;#34;Up&amp;#34;&lt;/span&gt;  \n加入按下 a  \n第一 a&amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;ArrowUp&amp;#34;&lt;/span&gt;    ----&amp;gt;返回&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;\n第二 &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;|| &lt;span class=\"hljs-string\"&gt;&amp;#34;Up&amp;#34;&lt;/span&gt;     -----&amp;gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;up&amp;#34;&lt;/span&gt;\n第三:&lt;span class=\"hljs-string\"&gt;&amp;#34;up&amp;#34;&lt;/span&gt; 在&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;中进行boolen转化 为&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;  所以只要按下key &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;条件始终都是&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;  \n需要调整为\nevent.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;ArrowUp&amp;#34;&lt;/span&gt;  || event.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Up&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(event.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;ArrowUp&amp;#34;&lt;/span&gt;  || event.key &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Up&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-meta\"&gt;{......}&lt;/span&gt;\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["求解：关于使用if与switch做相同判断时，判断结果不同的问题", ["现象：使用if与switch做判断时，判断结果不同", "\n", "\n```javascript\n", "<", "script", ">", "\n            ", "document", ".", "addEventListener", "(", "\"keydown\"", ", ", "(", "event", ") =>", " {\n                ", "if", " (event.", "key", " === ", "\"ArrowUp\"", " || ", "\"Up\"", ") {\n                    ", "console", ".", "log", "(", "\"if\"", ", event.", "key", ", ", "\"up\"", ");\n                } ", "else", " ", "if", " (event.", "key", " === ", "\"ArrowDown\"", " || ", "\"Down\"", ") {\n                    ", "console", ".", "log", "(event.", "key", ", ", "\"down\"", ");\n                } ", "else", " ", "if", " (event.", "key", " === ", "\"ArrowLeft\"", " || ", "\"Left\"", ") {\n                    ", "console", ".", "log", "(event.", "key", ", ", "\"left\"", ");\n                } ", "else", " ", "if", " (event.", "key", " === ", "\"ArrowRight\"", " || ", "\"Right\"", ") {\n                    ", "console", ".", "log", "(event.", "key", ", ", "\"right\"", ");\n                }\n                ", "switch", " (event.", "key", ") {\n                    ", "case", " ", "\"ArrowUp\"", " || ", "\"Up\"", ":\n                        ", "console", ".", "log", "(", "\"switch\"", ", event.", "key", ", ", "\"up\"", ");\n                        ", "break", ";\n                    ", "case", " ", "\"ArrowDown\"", " || ", "\"Down\"", ":\n                        ", "console", ".", "log", "(", "\"switch\"", ", event.", "key", ", ", "\"down\"", ");\n                        ", "break", ";\n                }\n            });\n        ", "</", "script", ">", "\n\n", "\n", "\n###### 运行结果及报错内容 \n控制台：\n\n```javascript\n测试.htm", "l:13", " ", "if", " ArrowUp ", "up", "\n测试.htm", "l:23", " switch ArrowUp ", "up", "\n测试.htm", "l:13", " ", "if", " ArrowDown ", "up", "\n测试.htm", "l:26", " switch ArrowDown down\n测试.htm", "l:13", " ", "if", " ArrowLeft ", "up", "\n测试.htm", "l:13", " ", "if", " ArrowRight ", "up", "\n\n", "\n", "为什么所有的按键都能过 event.key === \"ArrowUp\" || \"Up\" 判断"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch中支持的类型&amp;#xff1a;byte、char、short、int、enum、String&lt;br /&gt;&lt;strong&gt;修改如下:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; temp&amp;#61;sc.&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(temp)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么idea设置了jdk也不能在switch用string判断?", ["jdk和语言等级都设定好了，不知道为什么switch的判定不能用string", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\n\r\nvoid foo2(int n);\r\n \r\nvoid foo1(int n)\r\n{\r\nprintf(\"hello world %d\\n\", n);\r\nvoid (*pf[2])(int);\r\npf[0] = &amp;foo1;\r\npf[1] = &amp;foo2;\r\npf[n / 2000](n + 1);\r\nreturn;\r\n}\r\n\r\nvoid foo2(int n)\r\n{\r\nreturn;\r\n}\r\n\r\nint main()\r\n{\r\nfoo1(1);\r\nreturn 0;\r\n}\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["不使用if、goto、switch、while、for、do、?:运算", ["不使用if、goto、switch、while、for、do、?:运算，用C语言输出hello world 2000次。代码不能超过100行"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/fengyuanye/article/details/82858863", "Konwledge_Point": "switch语句及其应用", "Question": ["awk 执行语句语法问题", ["犹如下的文本内容：", "\n\n", "2020-07-22 17:27:21.933721 [INFO] mrcp_client.c:373 () Register RTP Termination Factory [voxeo-prophecy8.0-mrcp1]\n2020-07-22 17:27:21.933724 [INFO] mrcp_client.c:390 () Register RTP Settings [RTP-Settings]\n2020-07-22 17:27:21.933728 [INFO] mrcp_client.c:431 () Register Signaling Settings [Signaling-Settings]\n2020-07-22 17:27:21.933732 [INFO] mrcp_client.c:407 () Register Signaling Agent [voxeo-prophecy8.0-mrcp1]\n2020-07-22 17:27:21.933736 [INFO] mrcp_client.c:598 () Register Profile [voxeo-prophecy8.0-mrcp1]\n2020-07-22 17:27:21.933747 [INFO] mrcp_client.c:648 () Register Application [synth]\n2020-07-22 17:27:21.933766 [INFO] mrcp_client.c:648 () Register Application [recog]\n2020-07-22 17:36:22.450615 [INFO] mrcp_client.c:700 (TTS-0) Add MRCP Handle TTS-0 <new>\n2020-07-22 17:36:22.470612 [INFO] mrcp_client_connection.c:435 (TTS-0) Add Control Channel <d1518564cbfe11ea@speechsynth> 172.16.5.35:41610 <-> 172.16.5.90:1544 [1]\n2020-07-22 17:36:22.470612 [INFO] mrcp_client_connection.c:530 (TTS-0) Send MRCPv2 Data 172.16.5.35:41610 <-> 172.16.5.90:1544 [166 bytes]\n2020-07-22 17:36:22.470612 [INFO] mrcp_client_connection.c:635 () Receive MRCPv2 Data 172.16.5.35:41610 <-> 172.16.5.90:1544 [83 bytes]\n2020-07-22 17:36:24.770610 [INFO] mrcp_client_connection.c:635 () Receive MRCPv2 Data 172.16.5.35:41610 <-> 172.16.5.90:1544 [122 bytes]\nab1ae060-cca9-11ea-ad48-05ac15c48ae8 2020-07-23 13:59:28.801997 [DEBUG] switch_ivr_play_say.c:3025 OPEN TTS unimrcp\nab1ae060-cca9-11ea-ad48-05ac15c48ae8 2020-07-23 13:59:28.801997 [DEBUG] switch_ivr_play_say.c:3035 Raw Codec Activated\nab1ae060-cca9-11ea-ad48-05ac15c48ae8 2020-07-23 13:59:28.801997 [DEBUG] switch_ivr_play_say.c:2729 Speaking text: (null)\n", "\n\n", "我的业务是，根据关键字和日志级别以及日志时间分页过滤并返回查询到的日志，我使用下面两个查询，结果差异很大（不加关键字根本查询不出来）", "\n第一个（有关键字、日志日期、日志级别INFO，能查询出来）：", "\n\n", "awk 'BEGIN{i=1;j=i+99}\n{\n    isFirst = -1;\n    longDate= \"\"; \n    paramDate=\"\";\n    if(match($1, /[0-9]{4}-[0-9]{2}-[0-9]{2}/)>0)\n    {\n        isFirst = 1;\n        split($2, arr, \".\");\n        ymd=$1;\n        hms=arr[1];\n        gsub(\"-\", \" \", ymd);\n        gsub(\":\", \" \",hms);\n        newDate = (ymd\" \"hms);\n        longDate =  mktime(newDate);\n        paramDate=mktime(/2020 07 22 13 03 34/);\n    } else if(match($2, /[0-9]{4}-[0-9]{2}-[0-9]{2}/)>0)\n    {\n        isFirst = 0;\n        split($3, arr, \".\");\n        ymd=$2;\n        hms=arr[1];\n        gsub(\"-\", \" \", ymd);\n        gsub(\":\", \" \",hms);\n        newDate = (ymd\" \"hms);\n        longDate =  mktime(newDate);\n        paramDate=mktime(1);\n    }\n    if(longDate >= paramDate && $0  ~ /mrcp_client.c/ && i<=j && isFirst != -1)\n    {\n        if(isFirst == 1)\n        {\n            if($3 ~ /INFO/)\n                print $0 \n            }else\n            {\n                if($4 ~ /INFO/)\n                {\n                    $1=\"\"; \n                    print $0\n                }\n            }\n            i=i+1;\n        }\n    }' /usr/local/freeswitch/log/freeswitch.log\n", "\n\n", "第二个（无查询的关键字，仅仅根据日志级别INFO、日志时间去查询，直接查询不到）：", "\n\n", "awk 'BEGIN{i=1;j=i+99}\n{\n    isFirst = -1;\n    longDate= \"\"; \n    paramDate=\"\";\n    if(match($1, /[0-9]{4}-[0-9]{2}-[0-9]{2}/)>0)\n    {\n        isFirst = 1;\n        split($2, arr, \".\");\n        ymd=$1;hms=arr[1];\n        gsub(\"-\", \" \", ymd);\n        gsub(\":\", \" \",hms);\n        newDate = (ymd\" \"hms);\n        longDate =  mktime(newDate);\n        paramDate=mktime(/2020 07 22 13 03 34/);\n    } else if(match($2, /[0-9]{4}-[0-9]{2}-[0-9]{2}/)>0)\n    {\n        isFirst = 0;\n        split($3, arr, \".\");\n        ymd=$2;hms=arr[1];\n        gsub(\"-\", \" \", ymd);\n        gsub(\":\", \" \",hms);newDate = (ymd\" \"hms);\n        longDate =  mktime(newDate);\n        paramDate=mktime(1);\n    }if(longDate >= paramDate && i<=j && isFirst != -1)\n    {\n        if(isFirst == 1)\n        {\n            if($3 ~ /INFO/)\n            {\n                print $0 \n            }else\n            {\n                if($4 ~ /INFO/)\n                {\n                    $1=\"\"; \n                    print $0\n                }\n            }\n            i=i+1;\n        }\n    }' /usr/local/freeswitch/log/freeswitch.log\n", "\n\n", "这两个查询只有一个地方有差异，那就是在", "\n\n", "if(longDate >= paramDate && $0  ~ /mrcp_client.c/ && i<=j && isFirst != -1)", "\n\n", "一直搞不明白，为什么一个能查出来，一个就查不出来呢，是我的语法不标准吗？还请大佬们指点下。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Possibly on a more constructive note, lets see what you are actually trying to achieve here and do a bit of a brain reboot.&lt;/p&gt;\n\n&lt;p&gt;You appear the be trying to decide whether to do one of 2 queries, once they are done the output appears to be very similiar.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Query one:\n\"select * from product where bodytype='$bodytype' &amp;amp;&amp;amp; Companyname='$company' GROUP BY modelname\";\n\nQuery two:\n\"select * from product where bodytype='$bodytype' GROUP BY modelname\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Could this not be achieved so much more simply as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ( ! empty( $_GET['name2'] ) ) {\n    $query = \"select * from product where bodytype='$bodytype' &amp;amp;&amp;amp; Companyname='$company' GROUP BY modelname\";\n} else {\n    $query = \"select * from product where bodytype='$bodytype' GROUP BY modelname\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;PS&lt;/h3&gt;\n\n&lt;p&gt;Try not to use select * followed by $and[6]. Imagine what woudd happen to this code if someone changed the database and put a new column in and decided the logical place for it was in column 3. All your code would go bang in a very serious way.\nThink about the poor slob that gets the job of fixing it!! It may be you 6 months later. What fields was this guy tring to use???\nUse $ans['column_name'] at worst or better still fetch the result as an object and then you have self documenting code by addressing values using $table_name-&amp;gt;Column_Name.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在switch case中运行php语句[关闭]", ["\n\n", "is this possible?? if yes than whats wrong with the code cause its not working\nelse suggest another efficient method cause if i use (if else) statements it will become mess of about 24 to 26 if else conditions.... and 4 more case statements there", "\n\n", "rewritten code", "\n\n", "Code:", "\n\n", "    <?php\n        $c = mysql_connect(\"localhost\", \"abc\", \"xyz\");\n        mysql_select_db(\"root\");\n        $bodytype = $_GET[\"name\"]; //from another page through ajax\n        $company  = $_GET[\"name2\"]; //from another page through ajax    \n        $Array    = array($bodytype,$company );\n        $q=\"select * from product\";\n                $qc=mysql_query($q);\n                $ans=mysql_fetch_array($qc);\n                $ans[6];\n                $ans[1];\n    switch ($Array)\n    {\n        case array($ans[6],$ans[1]):\n                        $q=\"select * from product where bodytype='$bodytype'&& Companyname='$company' GROUP BY modelname\";\n                        $qc=mysql_query($q);\n                        $ans=mysql_fetch_array($qc);\n                        $count=0;\n                        while($ans=mysql_fetch_array($qc))\n                        {\n                                if ($count == 0 || $count == 1 || $count == 2)\n                                {\n\n                                $title=ucwords($ans[1].\" \".$ans[2]);\n\n                                print \"<div class='img-wrap'>\n                                        <img id='display_img' src='products/$ans[8]' width=300 height=200 title='$title'>\n                                        <div class='img-overlay'>\n                                        <input type='checkbox' id='compare_pro' /> Add to compare\n                                        <h4>\".$title.\"</h4>\n                                        <p>\".nl2br($ans[9]).\"</p>\n                                        <p>\".\"<b>Versions:</b> \".$ans[3].\"</p>\n                                        <p>\".\"<b>Starting Price:</b>\".\" &#x20B9 \".$ans[4].\"</p>\n                                        </div>\n                                        </div>\";\n                                }\n                                $count++;\n                                if($count==3)\n                                {\n                                    print \"<br />\";\n                                    $count = 0;\n                                }\n                        }\n      break;\n    case array($ans[6],'not'):\n                        $q=\"select * from product where bodytype='$bodytype' GROUP BY modelname\";\n                        $qc=mysql_query($q);\n                        $count=0;\n                        while($ans=mysql_fetch_array($qc))\n                        {\n                                if ($count == 0 || $count == 1 || $count == 2)\n                                {\n\n                                $title=ucwords($ans[1].\" \".$ans[2]);\n\n                                print \"<div class='img-wrap'>\n                                        <img id='display_img' src='products/$ans[8]' width=300 height=200 title='$title'>\n                                        <div class='img-overlay'>\n                                        <input type='checkbox' id='compare_pro' /> Add to compare\n                                        <h4>\".$title.\"</h4>\n                                        <p>\".nl2br($ans[9]).\"</p>\n                                        <p>\".\"<b>Versions:</b> \".$ans[3].\"</p>\n                                        <p>\".\"<b>Starting Price:</b>\".\" &#x20B9 \".$ans[4].\"</p>\n                                        </div>\n                                        </div>\";\n                                }\n                                $count++;\n                                if($count==3)\n                                {\n                                    print \"<br />\";\n                                    $count = 0;\n                                }\n                        }   \n      break;\n?>\n", "\n\n", "Is it possible to have multiple control variables in a switch statement?", "\n\n", "example :", "\n\n", "a=1;\n    b=2;\n\n        switch(a , b)\n            {\n                   case(1,2): print \"true\";\n                   break;\n                   case(2,1): print \"false\";\n                   break;               \n            } \n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a&amp;#61;2,b&amp;#61;1&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;x &amp;#61; 1,  y &amp;#61; 0 &lt;ul&gt;&lt;li&gt;case 1: &lt;ul&gt;&lt;li&gt; case 0 :    a&amp;#43;&amp;#43;;  a &amp;#61; 1&amp;#xff0c;退出这个swtich&lt;/li&gt;&lt;/ul&gt;\n&lt;/li&gt;&lt;li&gt;case 2:  a&amp;#43;&amp;#43;; b&amp;#43;&amp;#43;; &lt;ul&gt;&lt;li&gt;a &amp;#61; 2 , b &amp;#61; 1 ,  退出外层switch&lt;/li&gt;&lt;/ul&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;/li&gt;&lt;li&gt;最后打印 a&amp;#61;2,b&amp;#61;1&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言之switch计算a,b的值", ["a，b的值为多少", "\n", "​\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n", "int", " x=", "1", ", y=", "0", ", a=", "0", ", b=", "0", ";\n", "switch", " (x)\n{\n", "case", " ", "1", ":\n        ", "switch", " (y)\n        {\n        ", "case", " ", "0", ": a++; ", "break", ";\n        ", "case", " ", "1", ": b++; ", "break", ";\n}\n", "case", " ", "2", ": a++; b++; ", "break", ";\n", "case", " ", "3", ": a++; b++;\n}\n", "printf", "(“a=%d,b=%d\\n”, a, b);\n", "return", " ", "0", ";\n}\n\n​\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Personally, I find the switch a lot more readable.  Here's the reason:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($foo == 'bar') {\n} elseif ($foo == 'baz') {\n} elseif ($foo == 'buz') {\n} elseif ($fou == 'haz') {\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Condensed like that, you can easily see the trip up (be it a typo, or a honest difference).  But with a switch, you know implicitly what was meant:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($foo) {\n    case 'bar': \n        break;\n    case 'baz': \n        break;\n    case 'buz': \n        break;\n    case 'haz': \n        break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Plus, which is easier to read:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($foo == 'bar' || $foo == 'baz' || $foo == 'bat' || $foo == 'buz') {\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case 'bar':\ncase 'baz':\ncase 'bat':\ncase 'buz':\n    break;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From a performance standpoint...  Well, don't worry about the performance.  Unless you're doing a few thousand of them inside of a tight loop, you won't even be able to tell the difference (the difference will likely be in the micro-second range, if not lower).  &lt;/p&gt;\n\n&lt;p&gt;Go for the method that you find the most readable.  That's the important part.  Don't try to micro-optimize.  Remember, &lt;code&gt;Premature Optimization Is The Root Of All Evil&lt;/code&gt;...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["“if”与“switch”[重复]", ["\n\n", "\n  ", "Possible Duplicate:", "is “else if” faster than “switch() case” ?", "  ", "\n", "\n\n\n\n", "I've encountered a lot of situations lately where I have very simple conditionals and need to branch application flow. The \"simplest\" means of accomplishing what I'm doing is just a plain old ", "if", "/", "elseif", " statement:", "\n\n", "if($value == \"foo\") {\n    // ...\n} elseif($value == \"bar\") {\n    // ...\n} elseif($value == \"asdf\" || $value == \"qwerty\") {\n    // ...\n}\n", "\n\n", "...but I'm also considering something like:", "\n\n", "switch($value) {\n    case \"foo\":\n        // ...\n        break;\n    case \"bar\":\n        // ...\n        break;\n    case \"qwer\":\n    case \"asdf\":\n        // ...\n}\n", "\n\n", "This seems a little less readable, but perhaps it's more performant? However, when there are more and more \"or\" expressions in the conditional, it seems that the switch statement is much more readable and useful:", "\n\n", "switch($value) {\n    case \"foo\":\n        // ...\n        break;\n    case \"bar\":\n    case \"baz\":\n    case \"sup\":\n        // ...\n        break;\n    case \"abc\":\n    case \"def\":\n    case \"ghi\":\n        // ...\n        break;\n    case \"qwer\":\n    case \"asdf\":\n        // ...\n}\n", "\n\n", "I've also seen options where code flow is branched using arrays and functions:", "\n\n", "function branch_xyz() {/* ... */}\nfunction branch_abc() {/* ... */}\nfunction branch_def() {/* ... */}\n\n$branches = array(\n    \"xyz\"=>\"branch_xyz\",\n    \"abc\"=>\"branch_abc\",\n    \"def\"=>\"branch_def\"\n);\nif(isset($branches[$value])) {\n    $fname = $branches[$value];\n    $fname();\n}\n", "\n\n", "This last option also presumably has the benefit of being distributable across multiple files, though it is pretty ugly.", "\n\n", "Which do you feel has the most advantages with the fewest tradeoffs in terms of performance, readability, and ease of use?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Type switches require an interface to introspect.  If you are passing a value of known type to it it bombs out.  If you make a function that accepts an interface as a parameter, it will work:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func typeSwitch(tst interface{}) {\n    switch v := tst.(type) {\n        case Stringer:\n           fmt.Println(\"Stringer:\", v)\n        default:\n           fmt.Println(\"Unknown\")\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See the full code here &lt;a href=\"http://play.golang.org/p/QNyf0eG71_\"&gt;http://play.golang.org/p/QNyf0eG71_&lt;/a&gt; and the golang documentation on interfaces &lt;a href=\"http://golang.org/doc/effective_go.html#interfaces\"&gt;http://golang.org/doc/effective_go.html#interfaces&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["无法在非接口值上键入switch", ["\n\n", "I am playing with type assertion using the following dummy code, and I got the error: ", "\n\n", "\n  ", "cannot type switch on non-interface value", "\n", "\n\n", "Does anyone know what does that mean?", "\n\n", "package main\n\nimport \"fmt\"\nimport \"strconv\"\n\ntype Stringer interface {\n    String() string\n}\n\ntype Number struct {\n    v int\n}\n\nfunc (number *Number) String() string {\n    return strconv.Itoa(number.v)\n}\n\nfunc main() {\n    n := &Number{1}\n    switch v := n.(type) {\n    case Stringer:\n        fmt.Println(\"Stringer:\", v)\n    default:\n        fmt.Println(\"Unknown\")\n    }\n}\n", "\n\n", "http://play.golang.org/p/Ti4FG0m1mc", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch里面本来就是枚举&amp;#xff0c;所以你得用其它语句重构你的逻辑。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中，如何在switch函数中嵌入循环函数", ["\n", "#", "include", "<stdio.h>", "\n", "int", " main()\n", "switch", "（x)\n{\n  ", "case", " ", "1", ":\n  ", "case", " ", "2", ":\n  ", "case", " ", "3", ";", "\n..............\n", "case", " ", "99", ": printf(", "\"\"", ")", ";", "\n}\n不想从", "1", "抠到", "99", "啊 \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/181988331456141.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;触发点击事件&lt;br /&gt;点击事件里加入弹窗逻辑&amp;#xff0c;根据弹窗的选择&amp;#xff0c;修改check的值&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/364779331456186.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["基于antd vue ，首先是开关按钮 ，点击开关时状态不变出现弹窗后点击确认再改变按钮状态", ["问题", "\n", "基于antd vue ，首先是开关按钮 ，点击开关时状态不变出现弹窗后点击确认再改变按钮状态", "\n", "问题截图", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/507194065536180.png\" /&gt;&lt;/p&gt;&lt;br /&gt;我用你的代码 运行了一下报了这些错   然后把double a 改成了 int a  就没有报错了&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch为什么会报出不完整呢，救命啊😭😭", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=\"http://golang.org/pkg/database/sql/driver/\" rel=\"nofollow\"&gt;Package driver&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=\"http://golang.org/pkg/database/sql/driver/#Queryer\" rel=\"nofollow\"&gt;&lt;code&gt;type Queryer&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Queryer interface {\n    Query(query string, args []Value) (Rows, error)\n}\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;&lt;code&gt;Queryer&lt;/code&gt; is an optional interface that may be implemented by a\n  &lt;code&gt;Conn&lt;/code&gt;.&lt;/p&gt;\n  \n  &lt;p&gt;If a &lt;code&gt;Conn&lt;/code&gt; does not implement &lt;code&gt;Queryer&lt;/code&gt;, the &lt;code&gt;sql&lt;/code&gt; package's\n  &lt;code&gt;DB.Query&lt;/code&gt; will first prepare a query, execute the statement, and then\n  close the statement.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don't see where the &lt;a href=\"https://github.com/lib/pq\" rel=\"nofollow\"&gt;lib/pq&lt;/a&gt; PostgreSQL driver implements &lt;code&gt;Queryer&lt;/code&gt;. Therefore, the &lt;code&gt;DB.Query&lt;/code&gt; query is prepared before execution.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://pgfoundry.org/projects/pgbouncer\" rel=\"nofollow\"&gt;PgBouncer&lt;/a&gt; doesn't support the PREPARE feature for all pooling methods: &lt;a href=\"http://wiki.postgresql.org/wiki/PgBouncer#Feature_matrix_for_pooling_modes\" rel=\"nofollow\"&gt;Feature matrix for pooling modes&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["pq驱动程序：准备好的语句不存在", ["\n\n", "I'm trying to connect to a postresql database with the ", "pq driver", " in Go. When I do it on a local copy of the database, with a connection string like", "\n\n", "DB, err = sql.Open(\"postgres\", \"user=user password=pwd dbname=mydb sslmode=disable\")\n", "\n\n", "it all works well.", "\n\n", "However, when I switch to a production server where the connection goes through pgbouncer:", "\n\n", "DB, err = sql.Open(\"postgres\", \"user=user password=pwd host=/var/run/pgbouncer port=port dbname=mydb sslmode=disable\")\n", "\n\n", "I keep getting the same error for all queries, however simple:", "\n\n", "Database error: pq: S:\"ERROR\" M:\"prepared statement \\\"1\\\" does not exist\" C:\"26000\" F:\"prepare.c\" L:\"519\" R:\"FetchPreparedStatement\"\n", "\n\n", "(it's always \"prepared statement \\\"1\\\"\", independent of the query I'm trying to pass)", "\n\n", "The query in both cases is run simply as follows:", "\n\n", "res_rows, err := DB.Query(query)\nif err != nil {\n    log.Printf(\"Database error: %s\n\", err)\n}\nfor res_rows.Next() {\n    ...\n}\n", "\n\n", "Googling suggests to turn off prepared statements, but I don't know how to do that in Go and I'm not sure it is supported at all. Any help (even a suggestion to use something else entirely) would be greatly appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "建议看一下scanf的用法： https://blog.csdn.net/u012421456/article/details/18501309\r\n按你写的格式，要输入中文的“年月日”和冒号等，构成完整字符串才行。\r\n格式串是：“年：%d月：%d日：%d”，对应的例子：“年：2019月：10日：24”。不是只输入3个数字。", "Konwledge_Point": "switch语句及其应用", "Question": ["这是一个关于C语言的输入语句scanf的问题", ["\n/* zheng int is divided yinshu*/\n#include \"stdio.h\"\n#include \"conio.h\"\n\nint   main()\n{\n    int  year,month,day;\n    int sum=0;\n    int leap=0;\n    printf(\"请输入年月日\");\n    scanf(\"年：%d月：%d日：%d\",year,month,day);                                                   \n    int jan=31,feb=28+jan,may=31+feb,apr=30+may,mar=31+apr,june=30+mar,july=31+june,aug=31+july,\n        sept=30+aug,oct=31+sept,nov=30+oct;\n    if((year%400==0)||((year%4)&&(year%100!=0)))\n        leap++;\n    switch(month)\n    {\n    case 1:printf(\"天数：%d\",day);break;\n    case 2:printf(\"天数：%d\",jan+day);break;\n    case 3:printf(\"天数：%d\",feb+day+leap);break;\n\n    }\n\n\n\n\n  getch();\n  return 0;\n}\n\n\n\n\n", "\n\n", "这是我写的一个判断日子数的小程序。代码是没有问题的，我有个地方不太明白，scanf输入这块执行的时候，值不能都输进去。好奇怪。编译器也没有报错滴啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're very close, just need to break things up around the &lt;code&gt;foreach&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nswitch($order['status'])\n{\n    case 0:\n        echo  \n        '&amp;lt;div class=\"paiment\"&amp;gt;\n                &amp;lt;p&amp;gt;Some text&amp;lt;/p&amp;gt;\n                &amp;lt;ul&amp;gt;\n                    &amp;lt;li&amp;gt;More text&amp;lt;/li&amp;gt;\n                    &amp;lt;li&amp;gt;More text&amp;lt;/li&amp;gt;\n                    &amp;lt;li&amp;gt;Important text:';\n                        foreach($something as $item)\n                            echo HelperItem::displayItemPrice($item[\"price\"], true, $configuration);\n                    echo '&amp;lt;/li&amp;gt;\n                &amp;lt;/ul&amp;gt;\n        &amp;lt;/div&amp;gt;'\n        ;\n        break;\n    case 1:\n        echo 'Paid';\n        break;\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何在switch case中回显PHP代码", ["\n\n", "So I have this code that should display price in one case and \"Paid\" text in other:", "\n\n", "<?php\nswitch($order['status'])\n{\n    case 0:\n        echo  \n        '<div class=\"paiment\">\n                <p>Some text</p>\n                <ul>\n                    <li>More text</li>\n                    <li>More text</li>\n                    <li>Important text:\n                        <?php foreach($something as $item): ?>\n                            <?php\n                            $unitPrice = HelperItem::displayItemPrice($item[\"price\"], true, $configuration);\n                            ?>            \n                            <?php echo $unitPrice; ?>\n                        <?php endforeach; ?>\n                    </li>\n                </ul>\n        </div>'\n        ;\n        break;\n    case 1:\n        echo 'Paid';\n        break;\n}\n?>\n", "\n\n", "I need some way to make this \"foreach\" work inside \"echo\". I've tried with removing \"\" and doing something like this: echo 'xxxx' . code . 'xxxx' but all I got was errors. Is it even possible to make this work?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;-望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&amp;#96;&amp;#96;&amp;#96;java\npackage com.xt;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Test&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n\n        &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; score &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(score)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; :\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;优秀&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt; :\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt; :\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;良好&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt; :\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;及格&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt; :\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;不及格&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java的switch运用，如何书写✍️", ["【实验目的】", "学习分支结构的应用", "【实验要求】", "学生成绩分为A、B、C、D、E，其中A为“优秀”，B和C为“良好”，D为“及格”，E为“不及格”，请用switch语句编程实现该功能。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your second select statement is interpreted as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;v1 := &amp;lt;-g1\nv2 := &amp;lt;-g2\nselect {\ncase c &amp;lt;- v1:\ncase c &amp;lt;- v2:\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://golang.org/ref/spec#Select_statements\" rel=\"nofollow\"&gt;As described in the language spec&lt;/a&gt;, the RHS of each send operator will be evaluated up front when the statement is executed:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Execution of a \"select\" statement proceeds in several steps:&lt;/p&gt;\n  \n  &lt;ol&gt;\n  &lt;li&gt;For all the cases in the statement, the channel operands of receive operations and the channel and right-hand-side expressions of send statements are evaluated exactly once, in source order, upon entering the \"select\" statement. The result is a set of channels to receive from or send to, and the corresponding values to send. Any side effects in that evaluation will occur irrespective of which (if any) communication operation is selected to proceed. Expressions on the left-hand side of a RecvStmt with a short variable declaration or assignment are not yet evaluated.&lt;/li&gt;\n  &lt;li&gt;If one or more of the communications can proceed, a single one that can proceed is chosen via a uniform pseudo-random selection. Otherwise, if there is a default case, that case is chosen. If there is no default case, the \"select\" statement blocks until at least one of the communications can proceed.&lt;/li&gt;\n  &lt;li&gt;...&lt;/li&gt;\n  &lt;/ol&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So as step (1) both &lt;code&gt;&amp;lt;-g1&lt;/code&gt; and &lt;code&gt;&amp;lt;-g2&lt;/code&gt; will be evaluated, receiving values from each channel.  This may block if there is nothing to receive yet.&lt;/p&gt;\n\n&lt;p&gt;At (2), we wait until &lt;code&gt;c&lt;/code&gt; is ready to send a value and then randomly choose a branch of the select statement to execute: since they are both waiting on the same channel, they are both ready to proceed.&lt;/p&gt;\n\n&lt;p&gt;This explains the behaviour you saw where values are dropped and you got non-deterministic behaviour in which value was sent to &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you want to wait on &lt;code&gt;g1&lt;/code&gt; and &lt;code&gt;g2&lt;/code&gt;, you will need to use the first form for your statement as you've discovered.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["选择语句的细微差别", ["\n\n", "I read about select statements and its execution steps but I'm not fully understanding what's happening here.", "\n\n", "I created two examples of a Fan-In function (from the ", "Go Concurrency Patterns talk", ")", "\n\n", "The first one", ":", "\n\n", "select {\ncase value := <-g1:\n    c <- value\ncase value := <-g2:\n    c <- value\n}\n", "\n\n", "Prints from each channel as expected (each channel keeps its own counter):", "\n\n", "Bob  : 0\nAlice: 0\nBob  : 1\nAlice: 1\nBob  : 2\nAlice: 2\nAlice: 3\nAlice: 4\nBob  : 3\nAlice: 5\n", "\n\n", "The second one", ":", "\n\n", "select {\ncase c <- <-g1:\ncase c <- <-g2:\n}\n", "\n\n", "It is randomly selecting a channel and discarding the other one's value:", "\n\n", "Bob  : 0\nAlice: 1\nAlice: 2\nAlice: 3\nBob  : 4\nAlice: 5\nBob  : 6\nAlice: 7\nAlice: 8\nBob  : 9\n", "\n\n", "Update:", " while writing this question, I thought the second ", "select", " ", "was equal to", ":", "\n\n", "var v string\nselect {\ncase v = <-g1:\ncase v = <-g2:\n    c <- v\n}\n", "\n\n", "But I was wrong, because this one always prints from the second channel (as expected from a switch like statement because there isn't fallthrough in select statements):", "\n\n", "Bob  : 0\nBob  : 1\nBob  : 2\nBob  : 3\nBob  : 4\nBob  : 5\nBob  : 6\nBob  : 7\nBob  : 8\nBob  : 9\n", "\n\n", "Does someone understand why my second example creates a sequence?", "\n\n", "Thanks,", "\n    "]], "Tag": "程序设计"}
{"Answer": "你的除号貌似写反了呢，你修改一下试试，等那个break变成蓝色的就好了。还有就是你可以换一个编程工具，像codeblocks,eclipse,vs什么的都可以，都是带IDE环境的。然而你这个vc确实有些古老了，希望对你有用哈![图片说明](http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/monkey/26.gif)", "Konwledge_Point": "switch语句及其应用", "Question": ["大家好～我想请问一下在c++里用switch的第四个case总是失效呀？", ["大家好～我想请问一下在c++里用switch的第四个case总是失效呀？"]], "Tag": "程序设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;可以查看手册&amp;#xff1a;&lt;a href=\"https://docs.python.org/zh-cn/3/tutorial/controlflow.html#if-statements\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;python- if 语句&lt;/font&gt;&lt;/a&gt; 中的内容&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "switch语句及其应用", "Question": ["帮忙看看语句哪里不对？", ["\n", "import os\nfrom selenium import webdriver\nfrom WechatPCAPI import WechatPCAPI\nimport time\nfrom time import sleep\nimport xlwings as xw\nimport logging\nfrom queue import Queue\nlogging.basicConfig(level=logging.INFO)\nqueue_recved_message = Queue()\n\ndef on_message(message):\n    queue_recved_message.put(message)\ndef main():\n    help(WechatPCAPI)\nwx_inst = WechatPCAPI(on_message=on_message,log=logging)\nwx_inst.start_wechat (block=True)\nwhile not wx_inst.get_myself ():\n    time.sleep (2)\n    while True:\n        msg=queue_recved_message.get()\n        if msg.get(\"type\")==\"msg::single\":\n            data=msg.get('data')\n            send_or_recv=data.get('send_or_recv')\n            char_type=data.get(\"data_type\")\n            if send_or_recv=='发数据':\n                messageinfo=data.get('msg')\n                if messageinfo is not None:\n                    wx_id=str(data.get('from_wxid'))\n                break\n            else:\n                continue\ndef driver():\n    profile = webdriver.FirefoxProfile ()\n    profile.set_preference ('browser.download.dir', 'E:\\\\下载')\n    profile.set_preference ('browser.download.folderList', 2)\n    profile.set_preference ('browser.download.manager.showWhenStarting', False)\n    profile.set_preference ('browser.helperApps.neverAsk.saveToDisk', 'application/x-excel')\n    driver = webdriver.Firefox (firefox_profile=profile)\n    driver.get ('http://report2.hualife.cc:8071/WebReport/ReportServer?op=fs')\n    driver.maximize_window ()\n    time.sleep (3)\n    driver.find_element_by_xpath (\"/html/body/div[2]/div[3]/div[2]/input\").send_keys (\"******\")\n    driver.find_element_by_xpath (\"/html/body/div[2]/div[3]/div[3]/input\").send_keys (\"*******\")\n    driver.find_element_by_id (\"fs-login-btn\").click ()\n    time.sleep (3)\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[1]/div[1]/div/ul/li[1]/a/span[2]\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[1]/div[1]/div/ul/li[1]/ul/li[1]/a/span\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[1]/div[1]/div/ul/li/ul/li[1]/ul/li[1]/a/span\").click ()\n    time.sleep (2)\n    driver.switch_to.frame (driver.find_element_by_xpath (\"/html/body/div[1]/div[2]/div/div[4]/iframe[2]\"))\n    time.sleep (4)\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[2]/div/div[12]/div[2]/div\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[3]/div[3]/div[2]\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[2]/div/div[19]/div[2]/div\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[2]/div/div[19]/div[2]/div\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[3]/div[5]/table[1]/tbody/tr[1]/td[6]\").click ()\n    driver.find_element_by_xpath (\"/html/body/div[1]/div[1]/div[2]/div/div[16]/div/div/em/button\").click ()\n    time.sleep (7)\n    driver.find_element_by_xpath (\"/html/body/div[2]/table/tbody/tr/td[11]/div/div/div/em/button\").click ()\n    time.sleep (20)\n    driver.close ()\n\ndef read_exccel():\n    app = xw.App (visible=True, add_book=False)\n    wb = app.books.open (r'E:/䐁蕳/营销渠道保单清单.xlsx')\n    time.sleep (2)\n    sht = wb.sheets['sheet1']\n    sht.api.Rows (2).Delete ()\n    sht.api.Rows (1).Delete ()\n    sht.api.Columns (1).Delete ()\n    time.sleep (2)\n    exist_list = [\"正常有效\", \"标体通过\", \"承保\", \"人工核保\", \"新增险种\", \"自核通过\"]\n    rows = sht.api.UsedRange.Rows.count\n    cols = sht.api.UsedRange.columns.count\n    rng = sht[0, :cols]\n\n    for cell in rng:\n        if cell.value == '保单状态':\n            print (cell.address)\n            a = cell.address\n    a_range = sht.range (\"AO2:AO\" + str (rows))\n\n    cell_list = []\n    for cell in a_range:\n        cell_list.append (cell)\n    cell_list.reverse ()\n\n    print (\"   开始调整行和列……\")\n    for cell in cell_list:\n        if cell.value is not None:\n            find_flag = 0\n            for exist_value in exist_list:\n                if cell.value.find (exist_value) != -1:\n                    find_flag = 1\n                    break\n                else:\n                    continue\n            if find_flag == 0:\n                cell_to_del = cell.address\n                sht.range (cell_to_del).api.EntireRow.Delete ()\n    time.sleep (2)\n    driver.close ()\n    wb1 = app.books.open (r\"C:/Users/Administrator/Desktop/KPI2.xlsm\")\n    time.sleep (8)\n    sht1 = wb1.sheets['更新业绩表']\n    sht1.range (\"a1\").expand (\"table\").clear_contents ()\n    wb.sheets[\"sheet1\"].range (\"a1\").expand (\"table\").api.Copy (sht1.range ('a1').api)\n    wb.close ()\n    os.remove (r'E:/䐁蕳/营销渠道保单清单.xlsx')\n    app.calculate ()\n    time.sleep (10)\n    wb1.api.Application.Run (\"all\")\nif __name__ == '__main__':\n    main()"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Do this after &lt;code&gt;$marks = $_POST['marks'];&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (true) {\n    case ($marks &amp;gt; \"50\"):\n        $marks = \"B\";\n        break;\n    default:\n        $marks = \"C\";\n        break;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I edited the condition inside the switch block, as my original answer contained a wrong one. You can store multiple conditions in a &lt;code&gt;switch&lt;/code&gt;, substituing an &lt;code&gt;if-else-else-else...&lt;/code&gt; chain with a &lt;code&gt;switch (true)&lt;/code&gt; and conditions you want to check in each &lt;code&gt;case&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["我想使用switch值插入值。", ["\n\n", "I try solve the problem more but failed.  I want to input a number and then I want to change it via '", "switch", "' like 80= A+ . But I could not . Please help me and take a great thanks.", "\n\n", "<form method=\"post\" action=\" \" >\n\n            <table width=\"400\" align=\"center\">\n\n                <tr><td>     Marks <td><input type=\"text\" name=\"marks\"></td></tr>\n\n                <tr><td>      Click on the Button <td><input  type=\"submit\" value=\"Submit\"></td></tr>\n            </table>\n\n        </form>\n\n\n\n      <?php \n\n      $servername = \"localhost\"; \n      $username = \"root\"; \n      $password = \"\"; \n      $dbname = \"zidm\"; \n      $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    $marks=$_POST['marks'];\n\n\n     $marks = switch ($marks) {\n        case ($marks>\"50\"):\n            echo \"B\";\n            break;\n\n        default:\n            echo \"C\";\n            break;\n     }\n\n    $sql=\"INSERT INTO profile (id, name) VALUES ('', '$marks')\";\n    mysqli_query($conn, $sql);\n\n     ?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "N==0?func0():(N==1?func1:(N==2?func2():(N==3?func3():......)))就这样三目运算符嵌套", "Konwledge_Point": "switch语句及其应用", "Question": ["除了if和switch...case还可以怎么判断", ["\n\n", "下面是我的代码,想了很久只想到这一种,麻烦各位大牛说说看法", "\n\n", "int main()", "\n{", "\n    int n;", "\n    printf(\"请输入0-5的数字:\\n\");", "\n    scanf(\"%d\",&n);", "\n   while(n==0){F0();break;}", "\n   while(n==1){F1();break;}", "\n   while(n==2){F2();break;}", "\n   while(n==3){F3();break;}", "\n   while(n==4){F4();break;}", "\n   while(n==5){F5();break;}", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use a multi-dimensional table, where the dimensions correspond to the fonts, and the indexes correspond to whether that font is set:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$font_table = array(array(array('nothing', 'one'),\n                          array('two', 'three')),\n                    array(array('four', 'five'),\n                          array('six', 'seven')));\n\necho $font_table[!empty($a['Font3'])][!empty($a['Font2'])][!empty($a['Font'])];\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["比较数组键值以确定条件语句的OOP方式？", ["\n\n", "I have been looking at this problem for quite sometime and finally created my answer.", "\n\n", "I have three array keys that will output different values. The condition of each key will either be true or NULL and this is what I am testing for my array is simple and looks like this.", "\n\n", "$a = array();\n$a['Font'] = logix::templateParams('googleWebFont');\n$a['Font2'] = logix::templateParams('googleWebFont2');\n$a['Font3'] = logix::templateParams('googleWebFont3');\n", "\n\n", "I wanted to create output dependent on the collective condition of all three keys for example\nif one key is null then the output would be different then If I had 2 keys 'NULL'. I managed to create a simple switch which covered the range of values that I needed to cover my code looks like this.", "\n\n", "$a = array();\n$a['Font'] = logix::templateParams('googleWebFont');\n$a['Font2'] = logix::templateParams('googleWebFont2');\n$a['Font3'] = logix::templateParams('googleWebFont3');\n\nswitch (TRUE){\n\n\n    // No font selected  \n    case $a['Font'] == NULL && $a['Font2'] == NULL && $a['Font3'] == NULL:\n        echo 'nothing';\n        break;\n    // First googlefont selected only\n    case $a['Font'] && $a['Font2'] == NULL && $a['Font3'] == NULL:\n        echo 'one';\n        break;\n    // Second googlefont selected only\n    case $a['Font2'] && $a['Font'] == NULL && $a['Font3'] == NULL:\n        echo 'two';\n        break;\n    // Third googlefont selected only\n    case $a['Font3'] && $a['Font2'] == NULL && $a['Font'] == NULL:\n        echo  'three';\n        break;\n\n    // and Continues to cover another 10 more states....... \n", "\n\n", "So far this works fine and covers each possible variation that I need to cover. I was wondering if there was a more flexible way to do this. For example if I wanted to add another array value and compare the condition of the collective then this solution is not flexible enough to do so. I would have to completely re-write the case of the switch although this is unavoidable is there a more efficient way of doing this. Im completely new to PHP but I have been read a little on OOP and I just wondered what would be the OOP way of doing this. To be more clear of what I am trying to achieve.", "\n\n", "// 1. collect the array keys\n// 2. evaluate keys and check for certain conditions\n// 3. output based on conditions  \n", "\n\n", "Is there a more flexible way of doing this?", "\n\n", "regards", "\n\n", "w9914420", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;&amp;amp;a&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;c&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;b&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;前后数量不一致&lt;br /&gt; scanf(&amp;#34;%d,%c,%d&amp;#34;, &amp;amp;a,&amp;amp;c,&amp;amp;b);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在什么情况下,switch会不执行里面的case,直接跳过整个switch", ["？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;getdetails&lt;/code&gt; returns a value. To get that value, assign it to a variable like so:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$title = getdetails('title');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can use it as any other variable&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"title is: \" . $title;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["从另一个函数内的switch函数返回变量", ["\n\n", "I have this basic function ", "getdetails()", ", I simplified the code that way its easy to understand what I need. I would like to be able to echo (or use) the value of ", "title", " or ", "lname", " outside of the function ", "getdetails", ". Any help would be greatly appreciated", "\n\n", "function getdetails ($var){\n    $title = \"Hello World\";\n    $lname = \"John Doe\";\n    switch ($var)\n    {\n        case \"title\":return $title; break;\n        case \"lastname\":return $lname; break;\n    }\n}\n\necho \"title is: \".$title;\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "while (scanf_s(\"%c\", &amp;gg)){\r\n-&gt;\r\nwhile (1) {\r\nfflush(stdin);\r\nscanf_s(\"%c\", &amp;gg);\r\n...", "Konwledge_Point": "switch语句及其应用", "Question": ["二叉树赋值操作放在switch函数之后自动循环一次，无法正常使用", ["二叉树赋值操作放在switch函数之后自动循环一次，不放在switch函数内可以正常使用。", "\n\n", "Status CreatBiTree(BiTree &T){", "\n\n", "printf(\"xx\\n\");\n    TElemType ch;\n     gets(h);\n    h++;\n    if (ch == '*')\n        T = NULL;\n    else\n    {\n        T = (BiTree)malloc(sizeof(BiTNode));\n        if (!T)\n            return ERROR;\n        T->data = ch;\n        CreatBiTree(T->lchild);\n        CreatBiTree(T->rchild);\n    }\n\nreturn OK;\n", "\n\n", "}", "\n\n", "void menu(){", "\n\n", "BiTree T;\nTElemType gg;\nInitBiTree(T);\n\nprintf(\"n------------------------二叉树操作-----------------------\\n\");\nprintf(\"\\n|-                                                    -|\\n\");\nprintf(\"\\n|-              1-创建          2-销毁                 -|\\n\");\nprintf(\"\\n|-                   4- 先序输出                       -|\\n\");\nprintf(\"\\n|-              5-中序输出       6-后序输出             -|\\n\");\nprintf(\"\\n|-              7-层序输出       8-结点总数             -|\\n\");\nprintf(\"\\n|-              9-深度          0-退出                 -|\\n\");\nprintf(\"\\n|-                                                    -|\\n\");\nprintf(\"\\n|------------------------------------------------------|\\n\");\n//CreatBiTree(T); \nprintf(\"请输入数值进行操作：\");\nwhile (scanf_s(\"%c\", &gg)){\n\n\n    if (gg == '0')break;\n    switch (gg)                 \n    {           \n    case '1':\n        if (InitBiTree(T))\n            printf(\"创建成功\\n\"); \n        //CreatBiTree(T);\n        break;\n    case '2':\n        if (Destory(T))\n            printf(\"销毁成功\\n\");\n        else\n            printf(\"数为空\\n\"); break;\n    case '3':\n        printf(\"请输入二叉树的值，空用*表示：\");\n        CreatBiTree(T); break;\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一张图片  大括号忘记圈了(14-35)&lt;br /&gt;第二张头文件忘记添加了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个switch和rang（）给随机数的这个为啥错呀？", ["switch语句和rand（）括号里啥都没写，显示rand不属于这个范围，switch一写break和befault就显示错，视频里是这样敲的没错呀", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(a)\n{\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a);&lt;span class=\"hljs-comment\"&gt;//一开始a为0 0-&amp;gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a&amp;#43;&amp;#43;);&lt;span class=\"hljs-comment\"&gt;//先输出后自增 0-&amp;gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a&amp;#43;&amp;#43;);&lt;span class=\"hljs-comment\"&gt;//a在上一条结束后自增为1,先输出后自增 1-&amp;gt;2&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;#43;&amp;#43;a);&lt;span class=\"hljs-comment\"&gt;//先自增后输出,2-&amp;gt;3后输出 3&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a);&lt;span class=\"hljs-comment\"&gt;//输出3&lt;/span&gt;\n}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code class=\"language-javascript\"&gt;有帮助望采纳&lt;/code&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言switch函数如何运行的？", ["请问大佬为什么这个错误的C程序输出出来会是00133", "#include<stdio.h>", "void main()", "{", "    int a=0;", "    switch(a)", "    {", "         case 0:printf(\"%d\",a);", "         case 1:printf(\"%d\",a++);", "         case 2:printf(\"%d\",a++);", "         case 3:printf(\"%d\",++a);", "         default:printf(\"%d\",a);", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your example solution would not work well. Once one of them closed, it would always be available for communication immediately. This means your goroutine will never yield and other channels may never be ready. You would effectively enter an endless loop. I posted an example to illustrate the effect here: &lt;a href=\"http://play.golang.org/p/rOjdvnji49\" rel=\"noreferrer\"&gt;http://play.golang.org/p/rOjdvnji49&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So, how would I solve this problem? A nil channel is never ready for communication. So each time you run into a closed channel, you can nil that channel ensuring it is never selected again. Runable example here: &lt;a href=\"http://play.golang.org/p/8lkV_Hffyj\" rel=\"noreferrer\"&gt;http://play.golang.org/p/8lkV_Hffyj&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for {\n    select {\n    case x, ok := &amp;lt;-ch:\n        fmt.Println(\"ch1\", x, ok)\n        if !ok {\n            ch = nil\n        }\n    case x, ok := &amp;lt;-ch2:\n        fmt.Println(\"ch2\", x, ok)\n        if !ok {\n            ch2 = nil\n        }\n    }\n\n    if ch == nil &amp;amp;&amp;amp; ch2 == nil {\n        break\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As for being afraid of it becoming unwieldy, I don't think it will. It is very rare you have channels going to too many places at once. This would come up so rarely that my first suggestion is just to deal with it. A long if statement comparing 10 channels to nil is not the worst part of trying to deal with 10 channels in a select.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["当所有通道都关闭时中断选择语句", ["\n\n", "I have two goroutines independently producing data, each sending it to a channel. In my main goroutine, I'd like to consume each of these outputs as they come in, but don't care the order in which they come in. Each channel will close itself when it has exhausted its output. While the select statement is the nicest syntax for consuming inputs independently like this, I haven't seen a concise way for looping over each of until both of the channels have closed.", "\n\n", "for {\n    select {\n    case p, ok := <-mins:\n        if ok {\n            fmt.Println(\"Min:\", p) //consume output\n        }\n    case p, ok := <-maxs:\n        if ok {\n            fmt.Println(\"Max:\", p) //consume output\n        }\n    //default: //can't guarantee this won't happen while channels are open\n    //    break //ideally I would leave the infinite loop\n                //only when both channels are done\n    }\n}\n", "\n\n", "the best I can think to do is the following (just sketched, may have compile errors):", "\n\n", "for {\n    minDone, maxDone := false, false\n    select {\n    case p, ok := <-mins:\n        if ok {\n            fmt.Println(\"Min:\", p) //consume output\n        } else {\n            minDone = true\n        }\n    case p, ok := <-maxs:\n        if ok {\n            fmt.Println(\"Max:\", p) //consume output\n        } else {\n            maxDone = true\n        }\n    }\n    if (minDone && maxDone) {break}\n}\n", "\n\n", "But this looks like it would get untenable if you're working with more than two or three channels. The only other method I know of is to use a timout case in the switch statement, which will either be small enough to risk exiting early, or inject too much downtime into the final loop. Is there a better way to test for channels being within a select statement?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You look like you need an if or possible an if/elseif statement:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (( $pro_exists_row['date_aval'] == '0000-00-00' &amp;amp;&amp;amp; $sql_data['pro_qty'] == 0 ) || $sql_data['pro_date_avl'] &amp;gt; date('Y-m-d'))\n{\n    // This is the first two conditions of you case statement - either of the conditions are met\n    $sql_data['pro_st'] = '0' ;\n}\nelse\n{\n    // This is he default as neither of the others were met...\n    $sql_data['pro_st'] = '1' ;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在单个Switch Case中包含多个变量的“And”", ["\n\n", "I have the following statement, which has been summarised. I was wondering how to show two variables in a single case.", "\n\n", "As shown I want pro_st to = 0 when the criteria for both date_avl and pro_qty have been met, but not sure of the correct way to code it.", "\n\n", "case $insert_pro :\n    case $pro_exists_row['date_aval'] == '0000-00-00' : and $sql_data['pro_qty'] == 0 :\n    case $sql_data['pro_date_avl'] > date('Y-m-d') :\n      $sql_data['pro_st'] = '0' ;\n      break ;\n    default :\n      $sql_data['pro_st'] = '1' ;\n", "\n\n", "Any advise would be appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;除了while(0),其他条件都成立&amp;#xff0c;while&amp;#xff08;1&amp;#xff09; while&amp;#xff08;-1&amp;#xff09;都是成立的&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请输入一组同学的分数，直到-1为止。用while语句时，为什么判断条件是1", ["要求用continue语句，switch 语句和while语句作答", "请输入一组同学的分数，直到-1为止。如果超出零到一百，提示输入错误，继续下一个成绩。如果输入分数为零到一百之内，统计人数，分数。当输入-1，输出平均分，统计各分段人数。85以上为优秀，60～85中等，小于60不及格。", "输入分数：82 98 76 45 53 62 40 108 72 -1", "\n", "问题一：为什么使用循环语句while时，判断条件是1呢？", "\n", "问题二：如果想用switch语句来统计输出各分数段人数，应该如何编写这个程序？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;const int c &amp;#61;3&amp;#xff0c;加const弄成常量。你现在定义确实是变量&amp;#xff0c;因为里面的值是可以变的。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言中switch后的case所跟常量问题", ["\n", "int", " a=", "1", ",b=", "2", ",c=", "3", ";\n", "switch", " (a+b)\n", "case", " ", "1", ":\n          ", "break", ";\n", "case", " c:\n          ", "break", ";\n", "\n", "做题时遇见的，c不是常量吗，为什么case c语法错误，求解"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is &lt;strong&gt;interface satisfaction&lt;/strong&gt; in golang.&lt;/p&gt;\n\n&lt;p&gt;There are two kinds of type in golang: &lt;em&gt;interface type&lt;/em&gt; and &lt;em&gt;concrete type&lt;/em&gt;. &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;concrete type&lt;/code&gt; works exactly as you expected in &lt;code&gt;switch&lt;/code&gt;: the variable is an instance of the given type&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;interface type&lt;/code&gt; on the other hand works differently, it checks if the variable &lt;strong&gt;satisfies&lt;/strong&gt; the interface.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Hum, &lt;strong&gt;safisfies&lt;/strong&gt;? How does it work? &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;A (concrete) type satisfies an interface if it possesses all the methods the interface requires.&lt;/strong&gt;&lt;/p&gt;\n  \n  &lt;p&gt;-- the golang programming language&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In the case, &lt;code&gt;Stringer&lt;/code&gt; is an interface, declaring only one method: &lt;code&gt;String() string&lt;/code&gt;. And &lt;code&gt;fakeString&lt;/code&gt; satisfies it by having its own &lt;code&gt;String() string&lt;/code&gt; method.&lt;/p&gt;\n\n&lt;p&gt;Two things to note however:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;concrete type can have many other methods, it still satisfies the interface if it possesses all methods declared in interface&lt;/li&gt;\n&lt;li&gt;the methods order does not matter, all that matters is the set of methods.&lt;/li&gt;\n&lt;/ol&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么在golang的以下代码示例中switch匹配其他类型", ["\n\n", "Link:\n", "https://play.golang.org/p/69I8PAuoAV", "\n\n", "Extract:", "\n\n", "package main\n\nimport \"fmt\"\n\ntype Stringer interface {\n    String() string\n}\n\ntype fakeString struct {\n    content string\n}\n\n// function used to implement the Stringer interface\nfunc (s *fakeString) String() string {\n    return s.content\n}\n\nfunc printString(value interface{}) {\n    switch str := value.(type) {\n    case string:\n        fmt.Println(str)\n    case Stringer:\n        fmt.Println(str.String())\n    }\n}\n\nfunc main() {\n    s := &fakeString{\"Ceci n'est pas un string\"}\n    printString(s)\n    printString(\"Hello, Gophers\")\n\n}\n", "\n\n", "The ", "printString(s)", " function call when reaching case matches the ", "case Stringer", " part.\n", "s", " is of type ", "*fakeString", " not ", "Stringer", ".\nWhy does it match ", "Stringer", ".", "\n\n", "I did a ", "fmt.Println(reflect.TypeOf(str))", " and it confirmed the type as ", "*main.fakeString", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In conjunction with Mark's answer, am submitting the following as a complimentary answer and using some of my comments left under the OP's question.&lt;/p&gt;\n\n&lt;p&gt;Firstly, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; does not have a type. &lt;code&gt;type=\"text\"&lt;/code&gt; remove all of those.&lt;/p&gt;\n\n&lt;p&gt;Then, &lt;code&gt;$ourstory-&amp;gt;execute();&lt;/code&gt; is misplaced, it needs to go after &lt;code&gt;$ourstory-&amp;gt;bind_param(\"sss\",...&lt;/code&gt; once you've used Mark's answer and using placeholders as stated in the answer and from the manual &lt;a href=\"http://www.php.net/manual/en/mysqli.quickstart.prepared-statements.php\" rel=\"nofollow noreferrer\"&gt;http://www.php.net/manual/en/mysqli.quickstart.prepared-statements.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You shouldn't have &lt;code&gt;if (mysqli_query($conn, $ourstory)) {&lt;/code&gt; what you're looking to use is &lt;code&gt;affected_rows&lt;/code&gt; &lt;a href=\"http://php.net/manual/en/mysqli.affected-rows.php\" rel=\"nofollow noreferrer\"&gt;http://php.net/manual/en/mysqli.affected-rows.php&lt;/a&gt; in a conditional statement to check if the query was indeed successful.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;From your edit: &lt;a href=\"https://stackoverflow.com/revisions/31003865/4\"&gt;https://stackoverflow.com/revisions/31003865/4&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;printf(\"Affected rows (UPDATE): %d\n\", $ourstory-&amp;gt;affected_rows);\n$ourstory-&amp;gt;execute();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this needs to go after executing:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ourstory-&amp;gt;execute();\nprintf(\"Affected rows (UPDATE): %d\n\", $ourstory-&amp;gt;affected_rows);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I would use a conditional &lt;code&gt;if&lt;/code&gt; for that &lt;strong&gt;and it should be the connection's variable&lt;/strong&gt;, i.e. and from the manual:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int $mysqli-&amp;gt;affected_rows;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;so do:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;printf(\"Affected rows (UPDATE): %d\n\", $conn-&amp;gt;affected_rows);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://php.net/manual/en/mysqli.affected-rows.php\" rel=\"nofollow noreferrer\"&gt;http://php.net/manual/en/mysqli.affected-rows.php&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Example from the manual:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$mysqli = new mysqli(\"localhost\", \"my_user\", \"my_password\", \"world\");\n\n/* check connection */\nif (mysqli_connect_errno()) {\n    printf(\"Connect failed: %s\n\", mysqli_connect_error());\n    exit();\n}\n\n/* Insert rows */\n$mysqli-&amp;gt;query(\"CREATE TABLE Language SELECT * from CountryLanguage\");\nprintf(\"Affected rows (INSERT): %d\n\", $mysqli-&amp;gt;affected_rows);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["准备好的语句没有运行MYSQLI PHP", ["\n\n", "I have been attempting to switch over to prepared statements, however I cant figure out why my new code no longer functions. I am new to using these and still learning but i understand it is the best practice for security. any help would be appreciated. Thank You.", "\n\n", "<?php\n$servername = \"11.11.11.11\";\n$username = \"root\";\n$password = \"root\";\n$dbname = \"sit\";\n\n$conn = new mysqli($servername, $username, $password,$dbname);\n\n\nif ($conn->connect_error) {\ndie(\"Connection failed: \" . $conn->connect_error);\n}\necho \"Connected successfully\";\n$result = mysqli_query($conn, \"SELECT * FROM `ourstory` \");\n$values = mysqli_fetch_array($result);\n\n\nif(isset($_POST['ourstory_title'])){\n$ourstory_title = $_POST['ourstory_title'];\n$ourstory_testimonial = $_POST['ourstory_testimonial'];\n$ourstory_content = $_POST['ourstory_content'];\n$ourstory->execute();\n\n$ourstory = $conn->prepare(\"UPDATE ourstory SET\n    ourstory_title='$ourstory_title' ,\n    ourstory_content='$ourstory_content' ,\n    ourstory_testimonial='$ourstory_testimonial' \n    WHERE  ourstory_id='1'\");\n$ourstory->bind_param(\"sss\", $ourstory_title, $ourstory_content, $ourstory_testimonial);   \n\n\n\n\nif (mysqli_query($conn, $ourstory)) {\n    echo \"Record updated successfully\";\n} else {\n    echo \"Error updating record: \" . mysqli_error($conn);\n}   \n$ourstory->close();\n$conn->close();\n\n}\n\n?>\n<form id=\"comment_form\" method=\"post\" \n      action=\"<?php echo $ourstory?>\" \n      onsubmit=\"setTimeout(function () { \n             window.location.reload(); \n      }, 10), location.reload(true);\">\n\n<table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"2\">\n\n\n<tr>\n<td width=\"85%\">About Us Title</td>\n</tr>\n<tr>\n<td>\n   <input class=\"commentarea\" \n          name=\"ourstory_title\" type=\"text\" \n          id=\"ourstory_title\" value=\"<?php echo $values['ourstory_title']?>\">\n</td>\n</tr>\n<tr>\n<td width=\"85%\" >Testimonial</td>\n</tr>\n<tr>\n<td>\n   <pre>\n     <textarea class=\"commentarea\" \n      name=\"ourstory_testimonial\" type=\"text\" \n      id=\"ourstory_testimonial\" rows= \"10\" ><?php echo $values['ourstory_testimonial']?>\n     </textarea>\n   </pre>\n</td>\n</tr>\n<tr>\n<td width=\"85%\" >About Us Content</td>\n</tr>\n<tr>\n<td>\n  <pre>\n    <textarea class=\"commentarea\" name=\"ourstory_content\" \n        type=\"text\" id=\"ourstory_content\"  \n         rows= \"10\" ><?php echo $values['ourstory_content']?>\n    </textarea>\n  </pre>\n </td>\n</tr>\n\n\n<tr>\n\n<td>\n\n<input type=\"submit\" value=\"Update\">\n</td>\n</tr>\n</table>\n</form>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "正如楼上的代码那样，String直接就可以实现switch的选择分支，写在case条件中哦", "Konwledge_Point": "switch语句及其应用", "Question": ["Java语言中switch如何对字符串（String）类型实现一个选择的功能呢，要有个具体的代码才能理解", ["Java语言中switch如何对字符串（String）类型实现一个选择的功能呢，要有个具体的代码才能理解"]], "Tag": "程序设计"}
{"Answer": "char ch='s';\r\nswitch(ch/48+ch/58)\r\n  {\r\n case 0:System.out.println(ch+\" 既不是数字也不是字母\");break;\r\n case 1:System.out.println(ch+\" 是数字\");break;\r\n // case 1 说明ch介于48和57之间,是数字\r\n  default:\r\n  switch(ch/65+ch/91)\r\n    {\r\n   case 0:System.out.println(ch+\" 既不是数字也不是字母\");break;\r\n  case 1:System.out.println(ch+\" 是大写字母\");break;\r\n  // case 1: 说明ch介于65和90之间,是大写字母\r\n   default:\r\n   switch(ch/97+ch/123)\r\n  {\r\n   case 0:System.out.println(ch+\" 既不是数字也不是字母\");break;\r\n   case 1:System.out.println(ch+\" 是小写字母\");break;\r\n   // case 1  说明ch介于97和122之间,小写字母\r\n   default:System.out.println(ch+\" 既不是数字也不是字母\");break;\r\n }\r\n }\r\n }", "Konwledge_Point": "switch语句及其应用", "Question": ["java语言怎么判断字符串表示的数字所使用的类型是什么？用switch可以实现么", ["java语言怎么判断字符串表示的数字所使用的类型是什么？用switch可以实现么"]], "Tag": "程序设计"}
{"Answer": "看你 a 的定义 以及后面 i j 的范围，很明显 i应该小于 4的，你的 i &lt;6 数组访问越界了", "Konwledge_Point": "switch语句及其应用", "Question": ["大佬求救，为什么Switch会跳不出去，这是什么错误啊", ["\n\n", "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\nvoid display(char n) {\n    char a[4][6];\n    switch (n-'0') {\n    case 0:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if (j == 2 && ((i != 1) && (i != 5))) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 1:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if (j == 3) a[i][j] = 'X';\n                else a[i][j] = '.';\n            }\n        }break;\n    case 2:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j != 3) || (i == 4 && j != 1)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 3:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j != 3) || (i == 4 && j != 3)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 4:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((j == 2 && i != 3) || (i == 4 && j != 3) || (i == 5) && (j != 3)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 5:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j != 1) && (i == 4 && j != 3)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 6:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j != 1) && (i == 4 && j == 2)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 7:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if (i == 1 || j == 3) a[i][j] = 'X';\n                else a[i][j] = '.';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 8:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j == 2) || (i == 4 && j == 2)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    case 9:\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                if ((i == 2 && j == 2) || (i == 4 && j != 3)) a[i][j] = '.';\n                else a[i][j] = 'X';\n            }\n        }\n        for (int i = 1; i < 6; i++) {\n            for (int j = 1; j < 4; j++) {\n                cout << a[i][j];\n            }\n            cout << '\\n';\n        }\n        break;\n    }\n}\nint main() {\n    int x;\n    string s;\n    cin >> x;\n    cin >> s;\n    for (int i = 0; i < s.size(); i++) {\n        display(s[i]);\n    }\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'd do it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$sql_condition = '( 1=2 '; // one fake-condition, just to make it possible to start with 'OR' later\n\nforeach($option[0] as $key =&amp;gt; $value) {  // iterate through all possible conditions\n    if($value===1) { // maybe exclude $keys that should not be used here\n        $sql_condition.=' OR post_type=\"'.$key.'\"';\n    }\n}\n$sql_condition.=')';\n\n$results = $wpdb-&amp;gt;get_results( 'SELECT * FROM '.$wpdb-&amp;gt;prefix.'posts WHERE post_status=\"publish\" AND '.$sql_condition.' ORDER BY post_title ASC', OBJECT );\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["重构PHP中的if语句或if语句的其他解决方案（不是switch case）", ["\n\n", "I have some if statements in my code.\ne.g:", "\n\n", "if($option[0]->posts == 1 && $option[0]->pages == 1){\n    $results = $wpdb->get_results( 'SELECT * FROM '.$wpdb->prefix.'posts WHERE post_status=\"publish\" AND (post_type=\"page\" OR post_type=\"post\") ORDER BY post_title ASC', OBJECT );                          \n}\n\nif($option[0]->pages == 1 && $option[0]->posts == 0){\n   $results = $wpdb->get_results( 'SELECT * FROM '.$wpdb->prefix.'posts WHERE post_status=\"publish\" AND post_type=\"page\" ORDER BY post_title ASC', OBJECT );\n}\n\nif($option[0]->pages == 0 && $option[0]->posts == 1){\n   $results = $wpdb->get_results( 'SELECT * FROM '.$wpdb->prefix.'posts WHERE post_status=\"publish\" AND post_type=\"post\" ORDER BY post_title ASC', OBJECT );              \n} \n", "\n\n", "a bit pseudo code of the code above:", "\n\n", "if foo = 1 and bar = 1 -> return foo and bar", "\n\n", "if foo = 0 and bar = 1 -> return only bar", "\n\n", "if foo = 1 and bar = 0 -> return only foo", "\n\n", "if foo = 0 and bar = 0 -> return false", "\n\n", "You see:", "\n\n", "00", "\n\n", "10", "\n\n", "01", "\n\n", "11", "\n\n", "00", "\n\n", "If I insert another variable I'll get a lot of more opportunities and that is realy bad. Because I'll get realy big if statements.", "\n\n", "Can somebody tells me another opportunitie to achive the same result?", "\n\n", "Thank you.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是构造函数&amp;#xff0c;这个代码体确实没啥作用。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["swtich 语句作为断言的应用问题", ["从源代码中看到的，是一种断言，但是看不出具体作用。", "\n", "template", " <", "const", " ", "bool", " cond>\n", "class", " ", "ensure", "\n{\n", "public", ":\n    ", "inline", " ", "ensure", "()", " ", "{ ", "switch", " (", "false", ") { ", "case", " ", "false", ": ", "case", " cond: ", "break", "; } }\n};\n", "\n", "这个不论模板参数是true还是false，都是break，有什么用呢？还是写错了？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Ok, there are multiple problems. &lt;/p&gt;\n\n&lt;p&gt;First and foremost, it does not work because when something is read from a channel, it disappears (it is not a broadcast, only one thread can read the message).&lt;/p&gt;\n\n&lt;p&gt;So in order for your code to pseudo-work, you could do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; if msg == num {\n      fmt.Println(num, \"hello from\", msg)\n      return\n }else {\n      // not my number, put it back in the channel\n      jr &amp;lt;- num\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You will ge the expected result, but there is still a problem: your program won't shutdown properly. I guess this is only for experiment/learning purposes, but in a real program you would use a completely different code. Tell me if another version would interest you.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["go-如何使用golang goroutine，select和if语句返回？", ["\n\n", "I'm trying to make a \"if\" statement in goroutine.\nQuestion: how to make 10 from 10?", "\n\n", "var jr = make(chan int, 10)\nvar clients = 10 // The number of clients varies with time.\n\nfunc rpcMethod(num int) {\n    time.Sleep(time.Duration(rand.Intn(int(time.Second))))\n    jr <- num\n}\n\nfunc postHandler(num int) {\n    // wait RPC data\n    for {\n        select {\n        case msg := <-jr:\n            {\n                if msg == num {\n                    fmt.Println(num, \"hello from\", msg)\n                    return\n                }\n            }\n        }\n    }\n}\n\nfunc main() {\n    for i := 0; i < clients; i++ {\n        go postHandler(i)\n        go rpcMethod(i)\n    }\n    fmt.Scanln()\n}\n", "\n\n", "Result 2/10", "\n\n", "\n", "5 hello from 5", "\n", "2 hello from 2", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Given your code, the &lt;code&gt;g&lt;/code&gt; case will always evaluate to &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump('g' &amp;amp;&amp;amp; ((5==5) || (3==3 || 4==4))); // true\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;switch&lt;/code&gt; cases use loose comparison and when &lt;code&gt;$letter&lt;/code&gt; is &lt;code&gt;g&lt;/code&gt; it will be evaluated with &lt;code&gt;true&lt;/code&gt;.  Since &lt;code&gt;g&lt;/code&gt; is loosley &lt;code&gt;true&lt;/code&gt; it will execute that case:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump('g' == true);  // true\nvar_dump('g' == false); // false\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You probably need this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        case 'g':\n            if(($z || $y)) { echo \"g\"; }\n                break;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["对于Case的多个条件，Switch Statement无法正常工作", ["\n\n", "$letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']; \n$x = (1==1 || 2==2);\n$y = (3==3 || 4==4);\n$z = (5==5);\n\nforeach ($letters as $key => $letter) {\n        switch ($letter) {\n            case 'a':\n                echo \"a\";\n                    break;\n            case 'b':\n                echo \"b\";\n                    break;\n            case 'c':\n                echo \"c\";\n                    break;\n            case 'd':\n                echo \"d\";\n                    break;\n            case 'e':\n                echo \"e\";\n                    break;\n            case 'f':\n                echo \"f\";\n                    break;\n            case 'g' && ($z || $y):\n                echo \"g\";\n                    break;\n            case 'h' && ($x):\n                echo \"h\";\n                    break;\n        }\n}\n", "\n\n", "I don't know why but at the last two cases the ", "'g'", " and ", "'h'", " It doesn't work properly and gets a double ", "'g'", ", The result i expect is", "\n\n", "abcdefgh", " but i keep getting ", "abcdefgg", ", What am I doing wrong?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;分号问题&amp;#xff0c;&lt;br /&gt;default 后面需要&amp;#xff1a;&amp;#xff08;冒号&amp;#xff09;即 default : 语句&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["三处关于Switch错误不知道错哪", ["如题，报错在三个case有printf的位置，本人明早要交，请各位帮个忙谢谢大家"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己写代码的时候每个case都要加上break&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["第一题c语音switch语言题，求知欲", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HelloWorld&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; []args) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value &amp;#61; &lt;span class=\"hljs-number\"&gt;12345678&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 输入值&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(value);&lt;span class=\"hljs-comment\"&gt;// 转为字符串&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;// 长度&lt;/span&gt;\n        &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(len) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n                System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(value*value);&lt;span class=\"hljs-comment\"&gt;//平方&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n                &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;) {\n                   &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;substring&lt;/span&gt;(i,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                   sum&amp;#43;&amp;#61;Integer.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(num);\n                }\n                System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(sum);&lt;span class=\"hljs-comment\"&gt;// 和&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n                System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;substring&lt;/span&gt;(len&lt;span class=\"hljs-number\"&gt;-4&lt;/span&gt;,len));&lt;span class=\"hljs-comment\"&gt;// 高四位&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; low &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;substring&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n                &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;reverse&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--) {\n                   &lt;span class=\"hljs-built_in\"&gt;reverse&lt;/span&gt;&amp;#43;&amp;#61;low.&lt;span class=\"hljs-property\"&gt;substring&lt;/span&gt;(i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,i);\n                }\n                System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;reverse&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// 低四位逆数&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                \n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch试题：输入一个整数，根据这个数的位数输出下面的内容", ["switch试题：输入一个整数，根据这个数的位数输出下面的内容", "\n", "当位数=1、4时，输出这个数的平方", "\n", "当位数>=8时，输出这个数低四位所组成数字的逆数", "\n", "当位数=5、6时，输出这个数高四位的内容", "\n", "其它情况输出这个数各个位数上数字的和"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; f(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n){\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;*&amp;#61;i;    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;;    \n}\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n,i,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(n){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;#61;f(n);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d!&amp;#61;%d&amp;#34;&lt;/span&gt;,n,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用switch结构，输入1打印1！的值，输入2打印2！的值，……输入6打印6！的值", ["用switch结构，输入1打印1！的值，输入2打印2！的值，……输入6打印6！的值"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use this function to remove the undesired arrays.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func removearr(x interface{}) interface{} {\n    switch val := x.(type) {\n    case map[string]interface{}:\n        for k, v := range val {\n            val[k] = removearr(v)\n        }\n        return val\n    case []interface{}:\n        if len(val) == 1 {\n            // remove array only if the value is not an object\n            if _, ok := val[0].(map[string]interface{}); !ok {\n                return removearr(val[0])\n            }\n        }\n\n        for i, v := range val {\n            val[i] = removearr(v)\n        }\n        return val\n    default:\n        return x\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://play.golang.com/p/mwo7Y2rJ_lc\" rel=\"nofollow noreferrer\"&gt;https://play.golang.com/p/mwo7Y2rJ_lc&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在map [string] interface {}的值上键入switch到[] map [string] interface {}", ["\n\n", "Problem", "\n\n", "I'm facing the issue to remove not required arrays from an json object eg. arrays with only one element which is not an object or array. (No arrays as root of the input) ", "\n\n", "Example", "\n\n", "In: ", "\n\n", "{\"name\": [{ \"inner\": [\"test\"] }]}\n", "\n\n", "Wanted Out:", "\n\n", "{\"name\": [{ \"inner\": \"test\" }]}\n", "\n\n", "Approach", "\n\n", "I started with a simple type switch on the values of a parsed ", "map[string]interface{}", " and recognized that it wont switch to the case ", "[]map[string]interface{}", ". (Given example)", "\n\n", "So here is the implementation I came up with. It works for most of the scenarios but not for inner Objects within an array yet.", "\n\n", "type jsonMap map[string]interface{}\ntype jsonMapList []map[string]interface{}\n\nm := jsonMap{}\n\nerr := json.Unmarshal(s, &m)\nif err != nil {\n    panic(err)\n}\n\nres := removeFromObject(m)\n\nbytes, err := json.Marshal(res)\nif err != nil {\n    panic(err)\n}\nresult := string(bytes)\nlog.Infof(\"Parse Result: %s\", result)\n\nfunc removeFromObject(in jsonMap) jsonMap {\n    res := jsonMap{}\n\n    for k, v := range in {\n        switch value := v.(type) {\n        case jsonMap:\n            res[k] = removeFromObject(value)\n        case jsonMapList:\n            list := []jsonMap{}\n            for _, entry := range value {\n                list = append(list, removeFromObject(entry))\n            }\n            res[k] = list\n        case []interface{}:\n            if len(value) == 1 {\n                res[k] = value[0]\n            } else {\n                res[k] = value\n            }\n        default:\n            res[k] = value\n        }\n    }\n\n    return res\n}\n", "\n\n", "Question", "\n\n", "How do I switch case to an object array, so that I can recursively resolve the objects within that array too?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为selenium已经换了新的函数&amp;#xff0c;旧的没有删掉&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["请问我在用selenium的时候 遇到这样的情况 switch-to-frame", ["\n\n", "为什么上面you一条横线，运行是没有问题的，是被诅咒了吗"]], "Tag": "程序设计"}
{"Answer": "run 的定义在哪里？没有看到。", "Konwledge_Point": "switch语句及其应用", "Question": ["这个程序没办法运行switch啊求指教", ["#include", "\nvoid action1(int x,int y)", "\n{", "\nprintf(\"x+y=%d\\n\",x+y);", "\n}", "\nviod action2(int x,int y)", "\n{", "\nprintf(\"x-y=%d\\n\",x-y);", "\n}", "\nvoid action3(int x,int y)", "\n{", "\nprintf(\"x*y=%d\\n\",x*y);", "\n}", "\nvoid action4(int x,int y)", "\n{", "\nprintf(\"x/y=%d\\n\",x/y);", "\n}", "\nint main()", "\n{", "\nint a,b;", "\nprintf(\"请输入a与b的值:\\na:\\nb:\\n\");", "\nscanf(\"%d%d\",&a,&b);", "\nprintf(\"A加法B减法C乘法D除法\");", "\nrun=getchar();", "\nswitch(run)", "\n{", "\ncase 'A':action1(a,b);break;", "\ncase'B':action2(a,b);break;", "\ncase'C':action3(a,b);break;", "\ncase'D':action4(a,b);break;", "\ndefault:putchar('\\a');", "\n}", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.switch是选择结构&lt;br /&gt;2.default你后面没有加 break ,才导致default后面的代码都在执行&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++switch   了", ["在switch循环中 是不是default后面的case语句都要执行（除非跳出循环） 而且跳出循环的case也要继续执行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;day);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么我的switch运行不了", ["\n", "如图，感觉输入没错，但是运行就没有结果。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You probably just want to put the &lt;code&gt;switch&lt;/code&gt; statement into the &lt;code&gt;foreach&lt;/code&gt;?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach ($tables as $table) {\n    switch ($table) {\n        case 'table_one' :\n            // do something here\n            break;\n        case 'table_two' :\n            // do something here\n            break;\n        case 'table_three' :\n            // do something here\n            break;\n        default :\n            // do some error handling here\n            break;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Alternatively, a switch isn't that easy to read, consider going away from a &lt;code&gt;switch&lt;/code&gt; and using an array-powered &lt;code&gt;if&lt;/code&gt;, especially if you could &lt;em&gt;dynamically&lt;/em&gt; create what you want to do each &lt;code&gt;case&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$tables = array('table_one', 'table_two', 'table_three');\nif (in_array($table, $tables)) {\n    // do something here\n} else {\n    // do some error handling here\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That's a lot more readable, even if your array has a lot of elements.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在使用switch case循环时，我可以使用for循环来迭代这些情况吗？", ["\n\n", "In PHP, While using a switch case loop, can i use the for loop for iterating the cases? \n for example", "\n\n", "switch .....\n\nforeach($xyz as $abc)\n\n{\n CASE:$abc\n}\n\ndefault;\n", "\n\n", "\n  ", "UPDATE", "\n", "\n\n", "I am fetching the value from DB, this value is name of table, by using \"case\" I want to execute a particular query according to the table name..", "\n\n", "Is this possible?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;。。。。。for循环后面千万千万不能有分号&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么会显示[Error] break statement not within loop or switch", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int a &amp;#61; 0;&lt;br /&gt;        while (a &amp;#61;&amp;#61; 1)&lt;br /&gt;不满足while条件&amp;#xff0c;不进入while循环&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么我在while循环中使用switch时printn不输出，而去掉while循环之后就能输出", ["代码如下：", "\n", "import", " java.util.*;\n\n", "public", " ", "class", " ", "day730", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "Scanner", " ", "in", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "int", " ", "choice", " ", "=", " in.nextInt();\n        ", "int", " ", "a", " ", "=", " ", "0", ";\n        ", "switch", " (choice) {\n            ", "case", " ", "1", ":\n                System.out.println(", "\"999\"", ");\n                ", "break", ";\n            ", "case", " ", "2", ":\n                System.out.println(", "\"9999999\"", ");\n                ", "break", ";\n            ", "default", ":\n                System.out.println(", "\"please enter again\"", ");\n                a = ", "1", ";\n                ", "break", ";\n        }\n\n        in.close();\n    }\n}\n\n\n", "\n", "这是不带循环的，能正常输出999 或9999999", "\n", "\n", "import", " java.util.*;\n\n", "public", " ", "class", " ", "day730", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "Scanner", " ", "in", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "int", " ", "choice", " ", "=", " in.nextInt();\n        ", "int", " ", "a", " ", "=", " ", "0", ";\n        ", "while", " (a == ", "1", ") {\n            ", "switch", " (choice) {\n                ", "case", " ", "1", ":\n                    System.out.println(", "\"999\"", ");\n                    ", "break", ";\n                ", "case", " ", "2", ":\n                    System.out.println(", "\"9999999\"", ");\n                    ", "break", ";\n                ", "default", ":\n                    System.out.println(", "\"please enter again\"", ");\n                    a = ", "1", ";\n                    ", "break", ";\n            }\n        }\n        in.close();\n    }\n}\n\n", "\n", "这是带循环的，运行输入1或2都只是输出一个空行就结束了程序", "\n", "代码在vscode上用coderunner运行的，本人刚开始学习Java 轻点喷，ballball各位了"]], "Tag": "程序设计"}
{"Answer": "报错写着，orderdetail表少字段forderid", "Konwledge_Point": "switch语句及其应用", "Question": ["安卓，好像是sql语句报错了，怎么改", ["\nDBHelper.java", "\n\n", " package com.example.order;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteOpenHelper;\nimport android.database.sqlite.SQLiteDatabase.CursorFactory;\nimport android.widget.Toast;\n\npublic class DBHelper extends SQLiteOpenHelper{\n    private Context mContext;\n    public DBHelper(Context context,String name,CursorFactory factory,int version)\n    {\n        super(context,name,factory,version);\n        mContext=context;\n    }\n\n    public void onCreate(SQLiteDatabase db)\n    {\n        String DATABASE_CREATE=\"create table orderdetail(_id integer primary key autoincrement,orderid text,detailName text,num text,detailid text,menuid text,sate text,price text);\";\n        db.execSQL(DATABASE_CREATE);\n        Toast.makeText(mContext,\"创建成功!\",Toast.LENGTH_LONG).show();\n    }\n\n    public void onUpgrade(SQLiteDatabase db,int arg1,int arg2)\n    {\n        String sql=\"DROP TABLE IF EXISTS orderdetail\";\n        db.execSQL(sql);\n        this.onCreate(db);\n    }\n\n}\n\n", "\n\n", "MainActivity.java", "\n\n", " package com.example.order;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\npublic class MainActivity extends Activity implements OnClickListener {\n    private EditText tdetailid,torderid,tmenuid,tdetailName,tnum,tsate,tprice,morderid;\n    private Button insert,search;\n    DBHelper dbHelper;\n    SQLiteDatabase db;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        dbHelper=new DBHelper(this,\"orderdetail.db\",null,2);\n        insert=(Button)findViewById(R.id.insert);\n        insert.setOnClickListener(this);\n        search=(Button)findViewById(R.id.search);\n        search.setOnClickListener(this);\n        tdetailid=(EditText)findViewById(R.id.et1);\n        torderid=(EditText)findViewById(R.id.et2);\n        tmenuid=(EditText)findViewById(R.id.et3);\n        tdetailName=(EditText)findViewById(R.id.et4);\n        tnum=(EditText)findViewById(R.id.et5);\n        tsate=(EditText)findViewById(R.id.et6);\n        tprice=(EditText)findViewById(R.id.et7);\n        morderid=(EditText)findViewById(R.id.et8);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()) {\n        case R.id.insert:\n            String forderid=torderid.getText().toString().trim();\n            String fdetailName=tdetailName.getText().toString().trim();\n            String fnum=tnum.getText().toString().trim();\n            String fdetailid=tdetailid.getText().toString().trim();\n            String fmenuid=tmenuid.getText().toString().trim();\n            String fsate=tsate.getText().toString().trim();\n            String fprice=tprice.getText().toString().trim();\n            db=dbHelper.getWritableDatabase();\n            db.execSQL(\"insert into orderdetail(forderid,fdetailName,fnum,fdetailid,fmenuid,fsate,fprice) values(?,?,?,?,?,?,?)\",new String[]{forderid,fdetailName,fnum,fdetailid,fmenuid,fsate,fprice});\n            Toast.makeText(this, \"添加成功!\", Toast.LENGTH_LONG).show();\n            break;\n        case R.id.search:\n            String norderid=morderid.getText().toString().trim();\n            Bundle data=new Bundle();\n            Cursor curso = dbHelper.getReadableDatabase().rawQuery(\"select * from orderdetail where orderID=\"+norderid,null );\n            List<OrderDetail> OrderList = new ArrayList<OrderDetail>();\n            while(curso.moveToNext()){\n                int detailid = curso.getInt(curso.getColumnIndex(\"orderdetialid\"));\n                String orderid = curso.getString(curso.getColumnIndex(\"orderID\"));\n                int menuid = curso.getInt(curso.getColumnIndex(\"menuid\"));\n                String detailName = curso.getString(curso.getColumnIndex(\"detailName\"));\n                int num = curso.getInt(curso.getColumnIndex(\"quantity\"));\n                int sate = curso.getInt(curso.getColumnIndex(\"detailsate\"));\n                int price =curso.getInt(curso.getColumnIndex(\"price\"));\n                OrderDetail od = new OrderDetail(detailid,orderid,menuid,detailName,num,sate,price);\n                OrderList.add(od);\n            }\n\n            data.putSerializable(\"orderid\",norderid );\n            Intent intent=new Intent(MainActivity.this,OrderActivity.class);\n            intent.putExtras(data);\n            startActivity(intent);\n            break;\n        default:break;\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.main, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我来解释一下你的代码就清楚了&lt;br /&gt;switch(i&amp;#43;&amp;#43;)---这里switch会判断i当前值&amp;#xff0c;即11进行分支判断&amp;#xff0c;判断完成后&amp;#xff0c;i&amp;#43;&amp;#43;使i成为12&lt;br /&gt;由于分支判断i为11&amp;#xff0c;所以进入case 11,又一次i&amp;#43;&amp;#43;使得i成为13&lt;br /&gt;由于case 11没有break&amp;#xff0c;所以会继续执行下一个case&amp;#xff0c;即case 12&lt;br /&gt;case 12又一次i&amp;#43;&amp;#43;&amp;#xff0c;使得i成为14&amp;#xff0c;这时有break&amp;#xff0c;就结束switch分支判断&amp;#xff0c;default是不会执行的&lt;br /&gt;因此最终i的值为14&lt;br /&gt;对于本程序来说&amp;#xff0c;将i&amp;#43;&amp;#43;改为&amp;#43;&amp;#43;i会受到影响的是switch的判断&amp;#xff0c;&amp;#43;&amp;#43;i的话会进入case 12&amp;#xff0c;结果也就不一样了。其余单独的i&amp;#43;&amp;#43;和&amp;#43;&amp;#43;i效果是一样的&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["不清楚i++和++i的结果区别", ["\n", "既然i++运算之后结果暂时不加1为什么default结果+1了"]], "Tag": "程序设计"}
{"Answer": "这个问题。。 其实很好\r\n\r\n对于java而言，switch语句有一个特性叫 fallthrough, 就如楼上所说说，条件成立switch开始执行，直到遇到break为。 期间不会再进行case的判断.\r\n\r\n但对于C#而言，则没有这样的特性\r\n\r\n这个特性，有时候是很好用的，但也很危险，看你怎么用 具体讨论可以看\r\n\r\nhttp://stackoverflow.com/questions/188461/switch-statement-fallthrough-should-it-be-allowed", "Konwledge_Point": "switch语句及其应用", "Question": ["java，能否深入讲讲switch原理：没有break是真，但num也不等于3和default啊？为什么？", ["[b][color=red]没有break是真，但num也不等于3和default啊？为什么？num=2,为什么还会走case 3和default?[/color]", "\n[/b]", "\n\n", "[code=\"java\"]public class SwitchTest ", "\n{", "\n    public static void main(String[] args) ", "\n    {", "\n        int num = 2;", "\n        switch (num) ", "\n        {", "\n        case 1:", "\n            System.out.println(\"小白菜\");", "\n        case 2:", "\n            System.out.println(\"大白菜\");", "\n        case 3:", "\n            System.out.println(\"方便面\");", "\n        default:", "\n            System.out.println(\"什么也不吃\");", "\n        }", "\n    }", "\n}[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在多层switch嵌套中&amp;#xff0c;break只能终止距离它最近的switch。&lt;br /&gt;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么还有#&，难道不是break了么", ["我认为是a＞0所以执行case1进行第二个switch语句而b不小于0所以输出!而不表达case0之后那个关于c的switch语句"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.你看看你的页面id用一个隐藏组件接收了值&amp;#xff0c;你后台代码能找到当然有值&lt;br /&gt;2.你看看你switch1&amp;#xff0c;你都没有用隐藏组件接收值&amp;#xff0c;后台当然取不到。&lt;br /&gt;正确做法 你也搞个input  hidden组件接受下值就行。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["同一个表单中，id 能传回来值，为什么switch1就一直为空呢", ["\n", "\n", "希望解答，就是想通过不同请求的返回值不同，实现切换表，但是这个一直为空，同在一个表单的id却很正常的有值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cin输入接收的是字符数组&amp;#xff0c;而不是int,你需要将输入强转成int&amp;#xff0c;不然永远不会进入switch语句 所以一直返回alse&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++判断用于switch分支的变量有误 但陷入死循环", ["\n", "#include<string>\n#include<iostream>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::string;\n\n//定义结构体生日\ntypedef struct birthday {\n\tint year=0000, month=00, day=00;\n}Birthday;\n\n//定义结构体学生\nstruct Student {\n\tstring name=\"NULL\";\n\tint id=0, list_id=0;\n\tBirthday birthday;\n}stu[100];\n\nStudent* p = stu;\nint i = 0;\t\t//作为已录入信息个数的判断符\nbool IsOver = false;\n\nvoid setStuMes();\nbool checkInput();\nvoid welcomeText();\nbool switchInput();\nvoid checkStuMes();\nvoid getBirthday(int i);\n\n//主函数\nint main() {\n\twhile (!IsOver) {\n\t\twelcomeText();\n\t\tIsOver = switchInput();\n\t}\n}\n\n//记录学生信息\nvoid setStuMes() {\n\tchar temp;\n\t\tfor (; i < 100; i++) {\n\t\t\tdo {\n\t\t\t\tcout << \"请输入姓名:\";\n\t\t\t\tcin >> (p + i)->name;\n\t\t\t} while (!checkInput());\n\t\t\tdo {\n\t\t\t\tcout << \"请输入学号:\";\n\t\t\t\tcin >> (p + i)->id;\n\t\t\t} while (!checkInput());\n\t\t\tdo {\n\t\t\t\tcout << \"请输入生日(以空格为间隔):\";\n\t\t\t\tcin >> (p + i)->birthday.year >> (p + i)->birthday.month >> (p + i)->birthday.day;\n\t\t\t} while (!checkInput());\n\t\t\t(p + i)->list_id = i + 1;\n\t\t\tcout << \"信息已录入!是否继续?(y/n):\";\n\t\t\tfor (;;) {\n\t\t\t\tcin >> temp;\n\t\t\t\tif (temp == 'y')\n\t\t\t\t\tbreak;\n\t\t\t\telse if (temp == 'n')\n\t\t\t\t\treturn;\n\t\t\t\telse\n\t\t\t\t\tcout << \"输入有误!请重新输入:\";\n\t\t\t}\n\t\t}\n}\n\n//检查输入是否正确\nbool checkInput() {\n\tif (cin.fail()) {\n\t\tcout << \"输入数据有误!请重新输入!\" << endl;\n\t\tcin.clear();\n\t\tcin.sync();\n\t\treturn false;\n\t}\n\telse\n\t\treturn true;\n}\n\n\n//欢迎信息\nvoid welcomeText() {\n\tprintf(\"===========================\\n\");\n\tprintf(\"|欢迎进入学生信息录入系统!|\\n\");\n\tprintf(\"|1----------------录入信息|\\n\");\n\tprintf(\"|2----------查询已录入信息|\\n\");\n\tprintf(\"|0--------------------退出|\\n\");\n\tprintf(\"===========================\\n\");\n}\n\n//根据用户输入选择分支\nbool switchInput() {\n\tint x;\n\tdo {\n\t\tcout << \"请输入:\";\n\t\tcin >> x;\n\t} while (!checkInput());\n\tswitch (x) {\n\tcase 1:setStuMes(); break;\n\tcase 2:checkStuMes(); break;\n\tcase 0: {\n\t\tcout << \"已退出程序!\" << endl;\n\t\treturn true;\n\t}; break;\n\tdefault: {\n\t\tcout << \"输入有误!请重新输入!\" << endl; \n\t\tcheckInput();\n\t}; break;\n\t}\n\treturn false;\n}\n\n//输出已录入信息\nvoid checkStuMes() {\n\tint j = 0;\n\tif (i == 0) {\n\t\tcout << \"没有任何已录入数据！\" << endl;\n\t\treturn;\n\t}\n\tfor (; j <= i; j++) {\n\t\tcout << endl;\n\t\tcout << \"ID:\" << (p + j)->list_id << endl;\n\t\tcout << \"姓名:\" << (p + j)->name << endl;\n\t\tcout << \"学号:\" << (p + j)->id << endl;\n\t\tgetBirthday(j);\n\t\tcout << endl;\n\t}\n}\n\n//获得生日信息\nvoid getBirthday(int i) {\n\tcout << (p + i)->birthday.year << \"-\" << (p + i)->birthday.month << \"-\" << (p + i)->birthday.day << endl;\n}", "\n\n", "当给switchInput中的变量x输入字符时会陷入死循环 用了很多方法也没排除问题", "\n\n", "已经尝试用cin.fail()做判断并用checkInput重置错误但是没有效果"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/489291437439926612.html", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch                              ", ["There are N lights in a line. Given the states (on/off) of the lights, your task is to determine at least how many lights should be switched (from on to off, or from off to on), in order to make the lights on and off alternatively.", "\n\n", "Input", "\n\n", "One line for each testcase.", "\n\n", "The integer N (1 <= N <= 10000) comes first and is followed by N integers representing the states of the lights (\"1\" for on and \"0\" for off).", "\n\n", "Process to the end-of-file.", "\n\n", "Output", "\n\n", "For each testcase output a line consists of only the least times of switches.", "\n\n", "Sample Input", "\n\n", "3 1 1 1", "\n3 1 0 1", "\n\n", "Sample Output", "\n\n", "1", "\n0"]], "Tag": "程序设计"}
{"Answer": "这个for循环，3次。然后通过switch语句，判断i的值。", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言关于for循环和switch的问题。求解答！", ["程序如下：", "\n\n", "#include <stdio.h>\nvoid main()\n{\n    int i;\n    for(i=0;i<3;i++)\n    {\n        switch(i)\n        {\n        case 0:printf(\"this is 1\\n\");break;\n        case 1:printf(\"this is 1\\n\");break;\n        case 2:printf(\"this is 1\\n\");break;\n        }\n    }\n\n}\n\n", "\n\n", "运行结果"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-keyword\"&gt;SELECT&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;FROM&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;&amp;#96;数据库名称&amp;#96;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;WHERE&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;AND&lt;/span&gt; datediff(dd,cash_date,&lt;span class=\"hljs-string\"&gt;&amp;#39;2021-06-30 08:48:11&amp;#39;&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;AND&lt;/span&gt; cash_state &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;ORDER&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;BY&lt;/span&gt; id &lt;span class=\"hljs-keyword\"&gt;DESC&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;LIMIT&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n改为\n&lt;span class=\"hljs-keyword\"&gt;SELECT&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;FROM&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;&amp;#96;数据库名称&amp;#96;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;WHERE&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;AND&lt;/span&gt; datediff(cash_date,&lt;span class=\"hljs-string\"&gt;&amp;#39;2021-06-30&amp;#39;&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;AND&lt;/span&gt; cash_state &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;ORDER&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;BY&lt;/span&gt; id &lt;span class=\"hljs-keyword\"&gt;DESC&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;LIMIT&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["mysql 数据库 datediff() 函数查询报错，查询条件是时间范围+多条件查询语句", ["如下语句报错，cash_date是数据库中需要查询的字段名称，请懂的解答下，谢谢", "\n", "注意：本问题要查询的数据表中", "cash_date", "字段值的类型是“2021-06-11 20:10:09”\nPHP中的需拼接的部分查询条件语句是（pdo查询语句）：", "\n", " ", "if", " (", "$keyword", "[", "'timebucket'", "]) {\n        ", "$today", " = date(", "\"YYYY-mm-dd\"", ");;\n        ", "switch", "(", "$keyword", "[", "'timebucket'", "]) {\n            ", "case", " ", "'today'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,date('YYYY-mm-dd')) = 0 \"", "; ", "break", ";", "//今天", "\n            ", "case", " ", "'yesterday'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")=1 \"", "; ", "break", ";", "//昨天", "\n            ", "case", " ", "'week'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")<=7 \"", "; ", "break", ";", "//本周", "\n            ", "case", " ", "'las_week'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")>7 \"", "; ", "break", ";", "//7天前", "\n            ", "case", " ", "'30today'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")<=30 \"", "; ", "break", ";", "//30天内", "\n            ", "case", " ", "'month'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")=0 \"", "; ", "break", ";", "//本月", "\n            ", "case", " ", "'last_month'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")=1 \"", "; ", "break", ";", "//上月", "\n            ", "case", " ", "'year'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")=0 \"", "; ", "break", ";", "//今年", "\n            ", "case", " ", "'last year'", ": ", "$condition", " .= ", "\" AND datediff(cash_date,", "$today", ")=1 \"", "; ", "break", ";", "//去年", "\n        }\n    }\n", "\n", "完整sql语句及报错如下：", "\n", "Warning: SQL:\n", "SELECT", " * ", "FROM", " ", "`数据表名称`", " ", "WHERE", " id = ", "9", " ", "AND", " datediff(dd,cash_date,", "'2021-06-30 08:48:11'", ") = ", "0", " ", "AND", " cash_state = ", "0", " ", "ORDER", " ", "BY", " id ", "DESC", " ", "LIMIT", " ", "0", ",", "10", "\nParams:\n", "array", " ( )\nSQL Error:\nIncorrect parameter ", "count", " ", "in", " the ", "call", " ", "to", " native ", "function", " ", "'datediff'", "\n", "\n", "--------问题补充----------", "\n", "问题1：语句中的dd热心网友解答需要去掉，去掉dd后如何实现按天、月、年这种时间单位来查询；\n如下面的使用场景：\na、datediff(day,cash_date,$today)<=30 \";  //30天内\nb、datediff(month,cash_date,$today)=0 \"; //本月\nc、datediff(year,cash_date,getdate())=1 \";  //去年", "\n", "问题2：datediff(dd,cash_date,getdate()) ，该语句中当前时间获取方式getdate()写法是否错误，应该用什么写法？\n问题3：注意：本问题要查询的数据表中", "cash_date", "字段值的类型是“2021-06-11 20:10:09”，所以第二个参数是否也要用'Y-m-d H:i:s'的时间格式对应上？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;YesNo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;YesNo&lt;/span&gt;(ch);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;YesNo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (ch)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Yes.&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;No.&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["输入字符'y'或'Y'，则在屏幕上输出字符串\"Yes.\"；输入其它字符，则在屏幕上输出字符串\"No.\"。", ["输入字符'y'或'Y'，则在屏幕上输出字符串\"Yes.\"；输入其它字符，则在屏幕上输出字符串\"No.\"。要求定义和调用函数YesNo(ch)，当ch为'y'或'Y'时输出\"Yes.\"，当ch为其它字符时输出\"No.\"。", "\n", "#include <stdio.h>", "\n", "void YesNo (char ch); ", "\n", "int main(void)", "{", "    char ch;", "\n", "ch", " ", "=", " getchar()", ";", "\n", "\n", "￼", "3分", "\n", "return", " ", "0", ";\n", "\n", "}", "\n", "void YesNo (char ch)", "{", "    switch(ch){", "        case 'y':", "        case 'Y':", "￼", "3分", "\n", "    ", "default", ":  \n", "\n", "￼", "3分", "\n", "}\n"]], "Tag": "程序设计"}
{"Answer": "书本的 说法并没错，只是有点歧义。\r\ncase 8也是case 9后面的语句，不是吗。", "Konwledge_Point": "switch语句及其应用", "Question": ["我怎么感觉课本的解释错了。", ["switch(g/10)", "\n    {", "\n    case 10:", "\n    case 9:printf(\"A\\n\");", "\n    case 8:printf(\"B\\n\");break", "\n    这程序大概就如此，课本：当表达式的值与某一个case后面的常量表达式的值一样时", "\n    则执行case后面的语句，否则，执行default后面的语句。", "\n    然而当我输入g=90时，它怎么还输出B？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有问题啊&amp;#xff0c;每个case应该有break啊&lt;br /&gt;另外case和1不能连在一起啊&amp;#xff0c;要case 1:&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个switch的应用我写的有问题吗", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n    cin&amp;gt;&amp;gt;a;\n    getchar(); &lt;span class=\"hljs-comment\"&gt;// 读取换行符&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(a){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:{\n            cin&amp;gt;&amp;gt;b;\n            getchar(); &lt;span class=\"hljs-comment\"&gt;// 读取换行符&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(b){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:{\n                    cin&amp;gt;&amp;gt;c;\n                    getchar(); &lt;span class=\"hljs-comment\"&gt;// 读取换行符&lt;/span&gt;\n                    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:{\n                    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:{\n            &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何避免一次输入三个数字导致进入嵌套switch中的case", ["我正在使用嵌套循环switch语句", "比如说", "\n", "while", "(", "1", ")", "{\ncin>>\n", "switch", "(a)", "{\ncase ", "1", ":\ncin>>\n", "swtich", "(b)", "{\ncase ", "1", ":\ncin>>\ncase ", "2", ":\n}\ncase ", "2", ":\n...\n}\n}\n", "\n", "有三个cin，而我如果在第一处直接输入三个数字（比如说1 2 3）会直接进入最里面的case", "有什么办法可以避免这种情况吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if可以用来比较大范围的&amp;#xff0c;比如 if(a&amp;gt;0&amp;amp;&amp;amp;a&amp;lt;100)  case一般用来比较固定枚举值的,case 1: case :2 ...&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["else if 和 swich之间的关系", ["你好你好，我想请教一个问题就是教材说：“多分支else if语句比较复杂，不够直观，为此C语言提供直接实现多分支的switch语句”或“为了更清楚地表示多分支，除了多分支 else if语句之外另提供了 switch 语句”。你觉得怎么理解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第 78行是 times &amp;#61; 4啊 &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["想知道为什么用switch case没过oj，用if语句过了？？", ["//", "if", "()版本\n", "#include<stdio.h>", "\n", "int", " main()\n{\n   ", "char", " str[", "5000", "]={", "'\\0'", "};\n   gets(str);\n   ", "int", " sum=", "0", ";\n   ", "for", "(", "int", " i=", "0", ";str[i];i++)\n   {\n       ", "int", " numble=str[i];\n       ", "if", "(str[i] == ", "'a'", "||str[i] == ", "'d'", "||str[i] == ", "'g'", "||str[i] == ", "'j'", "||str[i] == ", "'m'", "||str[i] == ", "'p'", "||str[i] == ", "'t'", "||str[i] == ", "'w'", "||str[i] == ", "' '", ")\n            sum = sum + ", "1", ";\n       ", "else", " ", "if", "(str[i] == ", "'b'", "||str[i] == ", "'e'", "||str[i] == ", "'h'", "||str[i] == ", "'k'", "||str[i] == ", "'n'", "||str[i] == ", "'q'", "||str[i] == ", "'u'", "||str[i] == ", "'x'", ")\n            sum =sum + ", "2", ";\n       ", "else", " ", "if", "(str[i] == ", "'c'", "||str[i] == ", "'f'", "||str[i] == ", "'i'", "||str[i] == ", "'l'", "||str[i] == ", "'o'", "||str[i] == ", "'r'", "||str[i] == ", "'v'", "||str[i] == ", "'y'", ")\n            sum =sum + ", "3", ";\n       ", "else", " ", "if", "(str[i] ==  ", "'s'", "||str[i] == ", "'z'", ")\n            sum = sum + ", "4", ";\n\n   }\n   printf(\"%d\",sum);\n}\n//switch ", "case", "版本\n\n", "#include<stdio.h>", "\n", "int", " character_times(", "int", " ", "character", ");\n", "int", " main()\n{\n   ", "char", " str[", "5000", "]={", "'\\0'", "};\n   gets(str);\n   ", "int", " sum=", "0", ";\n   ", "for", "(", "int", " i=", "0", ";str[i];i++)\n   {\n       ", "int", " numble=str[i];\n       sum+=character_times(numble);\n\n   }\n   printf(\"%d\",sum);\n}\n\n", "int", " character_times(", "int", " ", "character", ")//次数\n{\n     ", "int", " times=", "0", ";\n     switch(", "character", ")\n        {\n            cas", "e'a'", ":\n            cas", "e'd'", ":\n            cas", "e'g'", ":\n            cas", "e'j'", ":\n            cas", "e'm'", ":\n            cas", "e'p'", ":\n            cas", "e't'", ":\n            cas", "e'w'", ":\n                times=", "1", ";\n                break;\n            cas", "e'b'", ":\n            cas", "e'e'", ":\n            cas", "e'h'", ":\n            cas", "e'k'", ":\n            cas", "e'n'", ":\n            cas", "e'q'", ":\n            cas", "e'u'", ":\n            cas", "e'x'", ":\n                times=", "2", ";\n                break;\n            cas", "e'c'", ":\n            cas", "e'f'", ":\n            cas", "e'i'", ":\n            cas", "e'l'", ":\n            cas", "e'o'", ":\n            cas", "e'r'", ":\n            cas", "e'v'", ":\n            cas", "e'y'", ":\n                times=", "3", ";\n                break;\n            cas", "e's'", ":\n            cas", "e'z'", ":\n                times=", "3", ";\n                break;\n            ", "case", " ", "' '", ":\n                times=", "1", ";\n\n        }\n        ", "int", " ret=times;\n        ", "return", " ret;\n}\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Read the The Go Programming Language Specification, the Go 1 compatibility guarantees, and the planning for Go 2.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=\"http://The%20Go%20Programming%20Language%20Specification\" rel=\"nofollow noreferrer\"&gt;The Go Programming Language Specification&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=\"https://golang.org/ref/spec#Blocks\" rel=\"nofollow noreferrer\"&gt;Blocks&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;Each clause in a \"switch\" or \"select\" statement acts as an implicit\n  block.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=\"https://golang.org/ref/spec#Switch_statements\" rel=\"nofollow noreferrer\"&gt;Switch statements&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;\"Switch\" statements provide multi-way execution. An expression or type\n  specifier is compared to the \"cases\" inside the \"switch\" to determine\n  which branch to execute.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=\"https://golang.org/doc/go1compat\" rel=\"nofollow noreferrer\"&gt;Go 1 and the Future of Go Programs&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;It is intended that programs written to the Go 1 specification will\n  continue to compile and run correctly, unchanged, over the lifetime of\n  that specification. At some indefinite point, a Go 2 specification may\n  arise, but until that time, Go programs that work today should\n  continue to work even as future \"point\" releases of Go 1 arise (Go\n  1.1, Go 1.2, etc.).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=\"https://blog.golang.org/toward-go2\" rel=\"nofollow noreferrer\"&gt;The Go Blog: Toward Go 2&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;This is the text of my [Russ Cox] talk today at Gophercon 2017, asking\n  for the entire Go community's help as we discuss and plan Go 2.&lt;/p&gt;\n  \n  &lt;p&gt;Finally, how will we ship and deliver Go 2?&lt;/p&gt;\n  \n  &lt;p&gt;I think the best plan would be to ship the backwards-compatible parts\n  of Go 2 incrementally, feature by feature, as part of the Go 1 release\n  sequence.&lt;/p&gt;\n  \n  &lt;p&gt;Once all the backwards-compatible work is done, say in Go 1.20, then\n  we can make the backwards-incompatible changes in Go 2.0.&lt;/p&gt;\n  \n  &lt;p&gt;This is all a bit speculative, and the specific release numbers I just\n  mentioned are placeholders for ballpark estimates, but I want to make\n  clear that we're not abandoning Go 1, and that in fact we will bring\n  Go 1 along to the greatest extent possible.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Compile and test a proof-of-concept program. For example,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc dosomething() {}\n\nfunc donothing() {}\n\nfunc main() {\n    var firstCommand, secondCommand string\n    switch strings.ToLower(firstCommand) {\n    default:\n        fmt.Println(\"Default 1st Nest\")\n    case \"c\":\n        fmt.Println(\"C CREATE\")\n        fallthrough\n    case \"u\":\n        fmt.Println(\"U UPDATE\")\n        fallthrough\n    case \"d\":\n        fmt.Println(\"D DELETE\")\n        dosomething()\n\n        switch strings.ToLower(secondCommand) {\n        default:\n            fmt.Println(\"Default 2nd Nest\")\n        case \"a\":\n            donothing()\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Playground: &lt;a href=\"https://play.golang.org/p/Q1ZdYqeNk67\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/Q1ZdYqeNk67&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Default 1st Nest\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Now, you have an authoritative answer.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["嵌套开关在golang中合法吗？  [关闭]", ["\n\n", "I hope golang syntax can be time resistant (meaning if I write my code now, 10 years time the syntax is still valid)", "\n\n", "            switch strings.ToLower(firstCommand) {\n            default:\n                    fmt.Println(\"Default 1st Nest\")\n\n            case \"c\":\n                    fmt.Println(\"C CREATE\")\n                    fallthrough\n            case \"u\":\n                    fmt.Println(\"U UPDATE\")\n                    fallthrough\n            case \"d\":\n                    fmt.Println(\"D DELETE\")\n                    dosomething()\n\n                    switch strings.ToLower(secondCommand) {\n                    default:\n                    fmt.Println(\"Default 2nd Nest\")\n\n                    case \"a\":\n                    donothing()\n\n                    }\n           }\n", "\n\n", "is the above code syntax legit?  I mean, will it stand the test of time? Otherwise, what is a better way to write this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最后不是有 while&amp;#xff08;i&amp;gt;0&amp;#xff09;判断么&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于#c++#的问题：我想的是case 0的时候i减减就等于1 ，continue是跳过下面的语句，然后直接回到do再执行次循环switch 1摸出2=0还执行cardS 0，就成死循环了求详解", ["我想的是case 0的时候i减减就等于1 ，continue是跳过下面的语句，然后直接回到do再执行次循环switch 1摸出2=0还执行cardS 0，就成死循环了", "求详解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码在下面&amp;#xff0c;具体代码注释应该解释的很详细了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入密码:&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(~&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;ch)) &lt;span class=\"hljs-comment\"&gt;// cin 读不到换行, 所以用 scanf &lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;// 因为只输入一行&amp;#xff0c;所以检测到换行就退出 &lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        ch -&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 往前移 3 位&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;// 如果得到的值比 &amp;#39;a&amp;#39; 还小&amp;#xff0c;说明越界了&lt;/span&gt;\n            ch &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;26&lt;/span&gt;; \n        &lt;span class=\"hljs-comment\"&gt;/*\n        往后移 26 位&amp;#xff0c;比如 ch 输入为 &amp;#39;a&amp;#39; 移动了之后是 &amp;#39;a&amp;#39; - 3 (不是字母) \n        加上 26 后相当于 &amp;#39;a&amp;#39; - 3 &amp;#43; 26 就是 &amp;#39;z&amp;#39; - 3 就是 &amp;#39;x&amp;#39;\n        这样就可以避免越界的问题 \n        */&lt;/span&gt;\n        cout &amp;lt;&amp;lt; ch;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++ 用循环语句破译密码", ["大一新生，课堂布置让我们用现有的知识做，必须要用循环语句(我们现在只学了if、 do while 、switch、 for循环语句)不能用字符数组。我真的被难到了，求指点"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n\nint main()\n{\n        double I,J;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入当月利润:&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;I);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(I&amp;lt;&amp;#61;100000)\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;I*0.1;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(I&amp;lt;&amp;#61;200000)\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;100000*0.1&amp;#43;(I-100000)*0.075;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(I&amp;lt;&amp;#61;400000)\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;100000*0.1&amp;#43;(200000-100000)*0.075&amp;#43;(I-200000)*0.05;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(I&amp;lt;&amp;#61;600000)\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;100000*0.1&amp;#43;(200000-100000)*0.075&amp;#43;(400000-200000)*0.05&amp;#43;(I-400000)*0.03;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(I&amp;lt;&amp;#61;1000000)\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;100000*0.1&amp;#43;(200000-100000)*0.075&amp;#43;(400000-200000)*0.05&amp;#43;(600000-400000)*0.03&amp;#43;(I-600000)*0.015;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;J&lt;/span&gt;&amp;#61;100000*0.1&amp;#43;(200000-100000)*0.075&amp;#43;(400000-200000)*0.05&amp;#43;(600000-400000)*0.03&amp;#43;(1000000-600000)*0.015&amp;#43;(I-1000000)*0.01;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;应得的奖金是:%f\\n&amp;#34;&lt;/span&gt;,J);\n        return 0;        \n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["各位，有人会写吗，用c语言", ["有没有人会用if语句和switch语句来解决该题，谢谢大家啦"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般来说 printf(&amp;#34;......&amp;#34;); 如果已经执行了&amp;#xff0c;&lt;br /&gt;那么后面的函数一定会被调用&amp;#xff0c;如果没有输出&amp;#xff0c;建议检查一下调用的这个函数是否正确。&lt;br /&gt;可以在这个调用下面加一行输出语句&amp;#xff0c;确定该函数是否真的已经被调用&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch调用之后进行到printf，之后再调用就不进行了为什么", ["整个编译系统都没有显示错误，但就是无法调用，不输出调用的部分，直接就结束了"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are calling &lt;code&gt;create_mailer('sitename1','mail1@sitename1.com','mailname');&lt;/code&gt; but are testing with &lt;code&gt;'site1'&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Either add a default to your switch, or call &lt;code&gt;create_mailer('site1','mail1@sitename1.com','mailname');&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["php邮件设置功能开关无法正常工作", ["\n\n", "I'm trying to make a function/switch for diffrent settings for the PHPmailer.\n(something like this:", "\n\n", "function create_mailer($current_site,$from,$from_name){\n\n    require_once 'classes/PHPMailer/PHPMailerAutoload.php';\n    $mailer = new PHPMailer;\n\n    switch ($current_site){\n        case 'site1':\n            $mailer->isSMTP();\n            $mailer->Host       = 'mail.site1.com';\n            $mailer->SMTPAuth   = true;\n            $mailer->SMTPSecure = 'tls';\n            $mailer->Port       = 587;\n            $mailer->Username   = 'username1';\n            $mailer->Password   = 'password1';\n            $mailer->From = $from;\n            $mailer->FromName = $from_name;\n            $mailer->isHTML(true);\n            return $mailer;\n        break;\n    case 'site2':\n            $mailer = new PHPMailer;\n            $mailer->isSMTP();\n            $mailer->Host       = 'mail.site2.com';\n            $mailer->SMTPAuth   = true;\n            $mailer->SMTPSecure = 'tls';\n            $mailer->Port       = 587;\n            $mailer->Username   = 'username2';\n            $mailer->Password   = 'password2';\n            $mailer->From = $from;\n            $mailer->FromName = $from_name;\n            $mailer->isHTML(true);\n            return $mailer;\n        break;\n    }\n}\n", "\n\n", "In de index.php I've made something like :", "\n\n", "require 'functions/create_mailer.php';\n$mailer = create_mailer('site1','mail1@sitename1.com','mailname');\n$mail = new Mailer($mailer);\n$mail->send('mailtemplate/new_bid.php',['something'=>'else'],function($m) {\n                $m->to('email@to.somebody');\n                $m->subject('mailsubject');\n});\n", "\n\n", "When i don't use the switch the mailer is working.\n(Iff the settings are just in the index.php i mean)\nI cant figure out why this isn't working beacause i alway thought that this kind must work:)", "\n\n", "please advice.", "\n\n", "thanks in advanced.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Just for completeness an example of what a transformation to a switch would look like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch(true) {\n    case (!filter_var($email, FILTER_VALIDATE_EMAIL)):\n          $error = array('type' =&amp;gt; 'error', 'value' =&amp;gt; 'email');\n          break;\n    case (!preg_match($regex_name, $username)):\n          $error = array('type' =&amp;gt; 'error', 'value' =&amp;gt; 'username');\n          break;\n    //...   \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the end this is just a complicated way to say &lt;code&gt;if this is true&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["将不同条件的if ... elseif链转换为case switch", ["\n\n", "Simple curiosity, is there any way to convert what this following into a switch loop?", "\n\n", "PHP :", "\n\n", "if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    $error = array('type' => 'error', 'value' => 'email');\n}\nelseif (!preg_match($regex_name, $username)) {\n    $error = array('type' => 'error', 'value' => 'username');\n}\nelseif (!preg_match($regex_name, $firstname) && preg_match($regex_name, $lastname)) {\n    $error = array('type' => 'error', 'value' => 'name');\n}\nelseif ($password !== $password_conf) {\n    $error = array('type' => 'error', 'value' => 'password');\n}\nelseif (checkdate($birthday_d, $birthday_m, $birthday_y) == false) {\n    $error = array('type' => 'error', 'value' => 'date');\n}\nelse {\n    $error = array('type' => 'success');\n}\n", "\n\n", "Thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The issues here turns out to be cross-domain cookies, a distinct non-no as it is one of the essential moves of an attack vector.&lt;/p&gt;\n\n&lt;p&gt;The browser is not accepting the cookies with the re-written domain names, as indeed it should not (neither in the response headers nor in javascript).&lt;/p&gt;\n\n&lt;p&gt;The proper solution can only be had by fully proxying the Client Server.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何代理页面并退出循环？", ["\n\n", "I have a service (in PHP):", "\n\n", "\n", "A User browser accesses Private URL at the Service", "\n", "Service decodes Private URL and fetches page from a Client Server (Curl)", "\n", "Service modifies page from Server according to Private URL info in a database\n\n", "\n", "Response headers (content length, set-cookie[server-domain])", "\n", "Add a ", "<base>", " tag for relative href's", "\n", "Add javascript to set form fields to initial values", "\n", "\n", "\n", "Service forwards modified page to User browser (and is done with any further interaction) as the form action attribute points at the Client Server.", "\n", "\n", "Question: the set-cookie headers do not seem to work, maybe just a debugging issue, BUT is this a good way to do this? If not, how better?", "\n\n", "And it is because a sales guy sold the service already.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已解决。被动模式需要设置数据传输端口 &lt;/p&gt;\n\n&lt;p&gt;listen_port&amp;#61;9095&lt;/p&gt;\n\n&lt;p&gt;pasv_address&amp;#61;192.168.0.105&lt;/p&gt;\n\n&lt;p&gt;pasv_min_port&amp;#61;50000&lt;/p&gt;\n\n&lt;p&gt;pasv_max_port&amp;#61;50002&lt;/p&gt;\n\n&lt;p&gt;这里的IP地址最好是公网IP&amp;#xff0c;当然内网IP也是可以的&amp;#xff08;FileZilla这类软件可以设置访问不到路由IP&amp;#xff0c;就直接替换服务器公网地址来访问&amp;#xff09;。&lt;/p&gt;\n\n&lt;p&gt;路由器上面必须要把用到的端口号全部映射出去&amp;#xff0c;9095&amp;#xff0c; 50000&amp;#xff0c;50001&amp;#xff0c;50002。不能使用默认端口号&amp;#xff0c;营运商默认封禁了21这类端口号的。&lt;/p&gt;\n\n&lt;p&gt;然后换个软件&amp;#xff0c;如FileZilla&amp;#xff0c;来进行访问。windows的资源管理是存在问题的。&lt;/p&gt;\n\n&lt;p&gt;另外的建议是使用sftp&amp;#xff0c;没有那么多问题。ssh内集成了的&amp;#xff0c;非常的方便。&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"804\" src=\"undefined\" width=\"1184\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"1904\" src=\"undefined\" width=\"2712\" /&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["连接ftp出现 200 Switching to ASCII mode. 500 Illegal PORT command. 500 Unknown command.", ["连接ftp出现 200 Switching to ASCII mode. 500 Illegal PORT command. 500 Unknown command.", "\n\n", "\n\n", "这是在一个windwos服务器上访问一个linux系统上的一个ftp。", "\n这个ftp在用自己的电脑访问时是正常的，但是用那个windows服务器访问就访问不到了。输入账号密码后就报这个错误"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; switch后边分号去掉&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/530587693766162.png\" class=\"md_img\" /&gt;&lt;/p&gt;\n &lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch选择结构的用法", ["switch选择结构怎么使用，不知道到底哪里不对？这个是一个输入分数得到相应排名的题，分数要去除错误超过一百的数字和小于零的数字，前面可以不用if语句实现吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; p,f,d;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;p);\n    temp&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(p)/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(temp)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: d&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: d&amp;#61;&lt;span class=\"hljs-number\"&gt;0.05&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: d&amp;#61;&lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;: d&amp;#61;&lt;span class=\"hljs-number\"&gt;0.15&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: d&amp;#61;&lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    f&amp;#61;p*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-d);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;折扣率:%f 实付金额:%f&amp;#34;&lt;/span&gt;,d,f);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["编写c语言代码：商场打折促销标准", ["\n", "商场进行打折促销活动，消费金额（p）越高，折扣（d)越大，用if语句和switch语句实现"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if条件&amp;#xff0c;判断相等用&amp;#61;&amp;#61;&amp;#xff0c;一个&amp;#61;是赋值&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言if语句问题 多支选择", ["\n", "这个程序哪里错了啊 算不出来值，多重if语句应该怎么使用啊？这个可以用switch来写吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;button3_Click&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, System.EventArgs e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (textBox1.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || textBox2.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || textBox3.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff01;&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt; a, b, s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;.Parse(textBox1.Text);\n    b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;.Parse(textBox2.Text);\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;.Parse(textBox3.Text);\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (c)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            s &amp;#61; a &amp;#43; b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            s &amp;#61; a - b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            s &amp;#61; a * b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;除数为零&amp;#xff01;&amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n            }\n            s &amp;#61; a / b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n            textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff01;&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n\n    }\n    textBox4.Text &amp;#61; s.ToString();\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/343219368866130.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C#窗体应用程序的问题", ["怎样用C#窗体来实现让用户输入两个整数，然后再输入0-3之间的一个数，0代表加法，1代表减法，2代表乘法，3代表除法,计算这两个数字的结果。用switch语句可以吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主要是case大部分没有带break&amp;#xff0c;会一直执行后续的case 代码&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["执行过程不懂！忘记的差不多了", ["#include <stdio.h>", "main( )", "{", "  int a=123456,b;", "  while(a){b = a%10;", "   a /= 10;", "   switch(b){", "   default: printf(\" %d\", b++);", "   case 1: break;", "   case 2: printf(\" %d\", b++); break;", "   case 3: printf(\"%d\", b++);", "   case 4: printf(\"%d\",b++);", "    case 5: printf(\" %d\" , b++);}}}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;做个数组来存储&amp;#xff0c;然后用序号做switch的判定就可以了。&lt;br /&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; mm[][&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;one&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;two&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;three&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;four&amp;#34;&lt;/span&gt; ,&lt;span class=\"hljs-string\"&gt;&amp;#34;five&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;six&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;seven&amp;#34;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,buf);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(mm[i],buf)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(i)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期日\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["输入英文数字one到seven判断星期几", ["就单单输入阿拉伯数字我用Switch语句和for语句就可以了  偏偏出个题目要英文数字(one two three four five six seven:)对应求星期几", "\n", "用Switch或者for那种"]], "Tag": "程序设计"}
{"Answer": "http://www.lxway.com/461661242.htm", "Konwledge_Point": "switch语句及其应用", "Question": ["Ice Climber                    ", ["Maybe many one have played or at least heard of The Family Computer(FC). And this problem is mainly about a classical game named \"Ice Climber\"", "\n\n", "In this game, our little Eskimo wants to climb higher and catch the big bird at last. In the climbing, little Eskimo may be faced with many troubles, like enemy or wall.", "\n\n", "The game field made up with several floors and floors are seperated by many pieces of bricks. The number of pieces between different floors and different positions are different. There may also be enimies and walls on these bricks. By jumping up Eskimo can decrease the number of pieces on the ceiling of his position or even jump to another floor.", "\n\n", "Each time Eskimo can choose on of the following steps:", "\n\n", "Move left or right one block as long as the block is empty and the block has supporting pieces of bricks, using t1 time.(That is, there will not be an enemy or a wall on the block and the block has at least one bricks)", "\nJump up and destroy one piece of brick of the ceil just above little Eskimo or Jump up to an upper floor if all bricks on the ceiling of his current position have been cleared. If he jumps to the next floor he can choose to land on either the left or the right adjacent position as long as there are no enimies or walls on them (Of course there must also be at least a supporting brick at that position). Both kind of jumping takes t2 time.", "\nKnock off one little enemy just next to little Eskimo in t3 time, and the enemy will disappear.", "\nEach block has several pieces. And only if the number of the pieces of the block is 0 can little Eskimo jump up through it to the next floor. Sometimes Eskimo may clear all the bricks of ceiling of a position where there is an enemy standing on it, in these cases this unlucky enemy will be cleared at once. If on the next floor, above one block there is a wall, then Eskimo can never jump up through this block no matter how much pieces it has even zero. If little Eskimo jumped up to the next floor successfully, for instance through the ith position, he can choose to land on either to the left, the i-1th block or to the right, the i+1th block as you like, but not the ith block itself. And you can never jump over the enemy or the wall or the zero pieces blocks.", "\n\n", "And in the whole process, little Eskimo can not land on to the side, that is, he can not land on to the 0th block or the w+1th block. Also, he cannot land on to where there are only zero pieces blocks or blocks with an enemy or blocks with a wall. And while moving, he cannot get to the 1st block from the nth block, or get to the nth block from the 1st block.", "\n\n", "And just like the picture below, the 2nd floor's floor is the 1st floor's ceil:", "\n\n", "picture", "\nNow, we have n floors, and each floor has the same width of w blocks, but the number of the pieces of each block can be different. Thus, we can get a map of these floors. Little Eskimo starts from the leftest block on the first floor, unlike the picture above, and we want to use the minimum time to get to the nth floor.(Any block on the nth is all right)", "\n\n", "Input", "\n\n", "The input contains multiple cases.", "\n\n", "In each case, the first line contains two integers represents n and w.(1<=n<=2000 , 1<=w<=100)", "\n\n", "The second line contains three integers represents t1, t2, andt3.(0<=t1,t2,t3<=100)", "\n\n", "Then the 2n lines, the odd lines contains w characters, describing what is on the floor: '#' represents the enemy, which we assume does not move, '|' represents wall, and '0' represents the block is empty. While the even lines contains w digits from '0' to '9' representing the number of the pieces of each block.", "\n\n", "[Notice]: the map inputs from the nth floor downto the 1st floor, that is, the first line of this map describes what is on the nth floor, and the second line of this map describes the number of the pieces of each block of nth floor, or the n-1th floor's ceil.", "\n\n", "Output", "\n\n", "In each case, output one line with an integer representing the minimum time little Eskimo can get to the nth floor. If there is no way to get to the nth floor, output -1.", "\n\n", "Sample Input", "\n\n", "This sample input just describe the picture above.", "\n\n", "5 22", "\n1 2 3", "\n0000000000000000000000", "\n2222212222122222221222", "\n0000000000000000000000", "\n2122222122222221112222", "\n000000000000000000000#", "\n2222212221222222222111", "\n0000000000000000000000", "\n2222222222112222222221", "\n0000#00000000000000000", "\n1111111111111111111111", "\nSample Output", "\n\n", "23"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;开始&amp;#34;&lt;/span&gt;);\n        Scanner scanner &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入周几&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (scanner.nextInt()) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期一&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期二&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期三&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期四&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期五&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期六&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;星期天&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数据有误&amp;#xff01;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["学习JAVA的第二天", ["写switch语句的时候出现bug不知道应该咋修改了，求指点。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If your switch contains real cases no, but if you do &lt;code&gt;default&lt;/code&gt; you need to validate the &lt;code&gt;$_GET&lt;/code&gt; if you use it in that case.&lt;/p&gt;\n\n&lt;p&gt;eg:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($_GET['input']) {\n    case 'one':\n        echo \"input is one\";\n        break;\n    case 'two':\n        echo \"input is two\";\n        break;\n    default:\n       // here `$_GET['input']` need to be validated, escaped, checked if you use it to avoid XSS or SQL injections\n       echo $_GET['input'];\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["切换语句验证", ["\n\n", "Does POST or GET data need to be validated if being thrown directly into a switch() statement? For example:", "\n\n", "switch($_GET['input']) {\n    //...\n}\n", "\n\n", "???", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没接收函数返回值呀 &amp;#xff0c;t&amp;#61;dijitian(year,month,day);&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/764993292766178.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["大一新生调用函数算天数", ["该程序编译显示没问题，但结果输出总是第0天，请问是哪里出了问题😭", "\n", "\n", "\n", "\n", "一定要用switch语句吗 用if语句可以吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if后边分号去掉  ,if判断条件也写错了&amp;#xff0c;不能直接 5&amp;lt;x&amp;lt;12 &amp;#xff0c;if else 括号对应起来&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x&amp;gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;amp;&amp;amp;x&amp;lt;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;switch&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;....\n}&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/859599745566166.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++中if…else和switch一起使用出现问题", ["if…else，if使用后，用switch，再输入else时，显示应输入一个语句，是不是哪里需要加花括号，还是另外新建立一次程序？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.在c语言和c&amp;#43;&amp;#43;中&amp;#xff0c;case可以不加break&amp;#xff0c;但会造成标签的贯穿&lt;br /&gt;2.在c#中&amp;#xff0c;case也可以不加break&amp;#xff0c;也会造成标签的贯穿&amp;#xff0c;但至少最后一个case要加break&amp;#xff0c;不能都不加&lt;br /&gt;3.一旦某个case里写了执行代码&amp;#xff0c;那么就必须加break或return&amp;#xff0c;不可以带着代码贯穿到下一个标签&amp;#xff08;这在c和c&amp;#43;&amp;#43;里是允许的&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C#中case的贯穿", ["C#中switch语句中的case后面必须要有跳转语句，为啥这个代码能够直接从A到C?不需要增加goto的语句吗？(在vs2019中运行的代码）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch不能针对浮点型&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么会报错，这个报错是由什么引起的", ["请问这个switch语句为什么会报错呢？请问是哪里写错了吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ScoreTest&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        Scanner scanner &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生成绩等级&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n\n\n        String level &amp;#61; scanner.nextLine();\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (level.&lt;span class=\"hljs-keyword\"&gt;equals&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;)) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;85&amp;#34;&lt;/span&gt;);\n\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (level.&lt;span class=\"hljs-keyword\"&gt;equals&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#34;&lt;/span&gt;)) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;70&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (level.&lt;span class=\"hljs-keyword\"&gt;equals&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#34;&lt;/span&gt;)) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;60&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;lt;60&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (level) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;85&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#34;&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;70&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#34;&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩 &amp;gt;&amp;#61;60&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n            &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩为D&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java的if语句有关的问题", ["怎么用分别用if跟switch", "实现输入ABCD，然后输出对应的语句。谢谢啦", "下面这个是用if写的一个，不过太丑了😂😂，比如我不会别的方法录入键盘的单个字符，只能用这个录入字符串然后在读取第一个字符。不过勉强能用"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;// 1. 方法一&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入成绩&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n    &lt;span class=\"hljs-built_in\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;score);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;A\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;B\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;C\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;D\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;E\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 2。方法二&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入成绩&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n    &lt;span class=\"hljs-built_in\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;score);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;A\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;B\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;C\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;D\\n&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩等级为&amp;#xff1a;E\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["编程划分学生成绩等级", ["90-100为A 80-89为B 70-79为C 60-69为D 60以下为E", "用多分支if语句编写", "用switch语句编写"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$obj = $_GET['obj']; \n\n$validArray = array('a','b','c','d','e');\n\nif (in_array($obj,$validArray)) {\n   include ($obj.'.php'); \n} else {\n   include ('f.php');\n} \n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在php中访问页面控件", ["\n\n", "I want to control the access in php website. ", "\n\n", "I have a solution right now with switch case.", "\n\n", "<?php\n      $obj = $_GET['obj'];\n      switch ($obj)\n        {\n      case a:\n         include ('a.php');\n         break;\n\n      default:\n         include ('f.php');\n }\n?>\n", "\n\n", "But when i have so many pages, it becomes difficult to manage them. Do you have better solutions?", "\n\n", "Right now, i develop the application using php4. And i want to use php5. Do you have any suggestions when i develop it using php5?", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入的每个变量之间要用空格隔开。&lt;br /&gt;发一下代码&amp;#xff0c;给你修改。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["我输入1+2*3为啥结果是130", ["\n", "后面还有些代码没写，如何改进才能用if-else语句和switch语句实现可以识别两个操作符的表达式，操作符可以是加减乘除"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;.NET 版本是多少&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C# switch中(case 条件:) 条件判断", ["\n", "class", " ", "BinaryTree", "<", "T", ">\n        ", "// where T:IComparable<T>", "\n        {\n            ", "public", " ", "BinaryTree", "(", "T item", ")", "\n            {\n                Item = item;\n            }\n            ", "public", " T Item { ", "get", "; ", "set", "; }\n            ", "public", " Pair<BinaryTree<T>> SubItem\n            {\n                ", "get", " { ", "return", " _SubItem; }\n                ", "set", "\n                {\n                    ", "//IComparable<T> first;", "\n                    ", "//first = value.First.Item;", "\n\n                    ", "switch", " (", "value", ")\n                    {\n                        ", "case", " { First: ", "null", " }:\n                            ", "break", ";\n                        ", "case", " { Second: ", "null", " }:\n                            ", "break", ";\n                        ", "case", "\n                        {\n                            First: { Item: IComparable<T> first },", "// First: { Item: T first },带接口约束", "\n                            Second: { Item: T second }\n                        }:\n                            ", "if", " (first.CompareTo(second) < ", "0", ")\n                            {\n                                Console.WriteLine(", "\"first is less than second\"", ");\n                                ", "// first is less than second", "\n                            }\n                            ", "else", "\n                            {\n                                Console.WriteLine(", "\"second is less than or equal to first\"", ");\n                                ", "// second is less than or equal to first", "\n                            }\n                            ", "break", ";\n                        ", "default", ":\n                            ", "throw", " ", "new", " InvalidCastException(\n                                @", "$\"Unable to sort the items as ", "{", "typeof", "(T)}", " does not support IComparable<T>.\"", ");\n                    }\n                    _SubItem = ", "value", ";\n                }\n\n            }\n            ", "private", " Pair<BinaryTree<T>> _SubItem;\n        }\n", "\n", "class", " ", "Pair", "<", "T", ">\n        {\n            ", "public", " ", "Pair", "(", "T first, T second", ")", "\n            {\n                First = first;\n                Second = second;\n            }\n\n            ", "public", " T First { ", "get", "; ", "set", "; }\n            ", "public", " T Second { ", "get", "; ", "set", "; }\n        }\n\n", "\n", "想询问BinaryTree中switch语句中case中的{First：null}是什么意思，是First is null？的意思吗？First: { Item: IComparable first }是什么意思？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch(op){&lt;!-- --&gt;&lt;br /&gt;缺了花括号&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["报错什么意思，要怎么修改？", ["switch语句不是这样用的吗？真的搞不懂了，有没有人解决一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入值说一下&amp;#xff0c;我帮你&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case", ["为什么我的输出结果是F,我跟着视频抄的代码啊？看不懂了（c语言初学者求指导）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入 x的值为 01234会进入switch&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["准大一，希望可以指出代码问题", ["为啥输出的只有 error in area", "switch语句有什么问题还是怎么回事，准大一，求指点"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/briup_acmer/article/details/41383905", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch Game                 ", ["Problem Description", "\nThere are many lamps in a line. All of them are off at first. A series of operations are carried out on these lamps. On the i-th operation, the lamps whose numbers are the multiple of i change the condition ( on to off and off to on ).", "\n\n", "Input", "\nEach test case contains only a number n ( 0< n<= 10^5) in a line.", "\n\n", "Output", "\nOutput the condition of the n-th lamp after infinity operations ( 0 - off, 1 - on ).", "\n\n", "Sample Input", "\n1", "\n5", "\n\n", "Sample Output", "\n1", "\n0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;在scanf读取字符后&amp;#xff0c;需要加getchar()来吸收回车符&amp;#xff0c;否则影响下一次输入&amp;#xff1b;&lt;br /&gt;&amp;#xff08;2&amp;#xff09;因为有输入错误的设置&amp;#xff0c;所以每次输入&amp;#xff0c;都需要放在while循环中&amp;#xff0c;否则当输入错误时&amp;#xff0c;不能重新输入。&lt;br /&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; e 2.718&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x1;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x2;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x3;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; k1;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; k2;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; k3;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; k4;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0.4&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; w3 &amp;#61; &lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; y;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; z;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; v &amp;#61; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改  添加一个变量&amp;#xff0c;用于控制while&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;今天的天气如何&amp;#xff1f;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A.晴天 B.阴天 C.雨天\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag) &lt;span class=\"hljs-comment\"&gt;//修改&amp;#xff0c;用while语句&amp;#xff0c;否则当输入错误时&amp;#xff0c;不能重新输入&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;k1);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//修改1&amp;#xff0c;这里增加这一句&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (k1) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:x1 &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//时while结束&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;:x1 &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;:x1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;选择有误&amp;#xff0c;请重新选择\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//重置flag&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n有没有人陪你去看电影?\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A.有&amp;#xff0c;男/女朋友 B.有&amp;#xff0c;好朋友 C.有&amp;#xff0c;家人 D.没有\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;k4);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//修改2&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (k4) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:x2 &amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;:x2 &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;:x2 &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:x2 &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;选择有误&amp;#xff0c;请重新选择\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n票价如何&amp;#xff1f;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A.0-30 B.30-60 C.60-90 D.90以上\\n&amp;#34;&lt;/span&gt;);\n    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;k3);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (k3) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:x3 &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;:x3 &amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;:x3 &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:x3 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;选择有误&amp;#xff0c;请重新选择\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    z &amp;#61; (x1*w1 &amp;#43; x2*w2 &amp;#43; x3 * w3) / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    y &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; / (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(e, -z));\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你去看电影的可能性为&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;, z);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (z &amp;gt;&amp;#61; v)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;去看电影&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不去看电影&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["当执行完第一个scanf语句后，第二个scanf语句像失效一样，直接跳到了第三个scanf语句，导致x2无法完成初始化，哪里错了呀", ["问题遇到的现象和发生背景", "\n", "当执行完第一个scanf语句后，第二个scanf语句像失效一样，直接跳到了第三个scanf语句，导致x2无法完成初始化，哪里错了呀", "\n", "#include<stdio.h>", "\n", "#include<math.h>", "#define e 2.718", "int main() {", "    int x1,；", "    int x2；", "    int x3;", "    char k1;", "    char k2;", "    char k3;", "    char k4;", "    double w1 = 0.3;", "    double w2 = 0.4；", "    double w3 = 0.3;", "    double y;", "    double z;", "    double v = 0.5;", "    printf(\"今天的天气如何？\\n\");", "    printf(\"A.晴天  B.阴天  C.雨天\\n\");", "    scanf(\"%c\", &k1);", "    switch (k1) {", "    case 'A':x1 = 9;", "        break;", "    case 'B':x1 = 6;", "        break;", "    case 'C':x1 = 0;", "        break;", "    default: printf(\"选择有误，请重新选择\\n\");", "    }", "    printf(\"\\n有没有人陪你去看电影?\\n\");", "    printf(\"A.有，男/女朋友  B.有，好朋友  C.有，家人  D.没有\\n\");", "    scanf(\"%c\", &k4);", "    switch (k4) {", "    case 'A':x2 = 8;", "        break;", "    case 'B':x2 = 6;", "        break;", "    case 'C':x2 = 5;", "        break;", "    case 'D':x2 = 2;", "        break;", "    default:printf(\"选择有误，请重新选择\\n\");", "    }", "    printf(\"\\n票价如何？\\n\");", "    printf(\"A.0-30  B.30-60  C.60-90  D.90以上\\n\");", "    scanf(\"%c\", &k3);", "    switch (k3) {", "    case 'A':x3 = 10;", "        break;", "    case 'B':x3 = 8;", "        break;", "    case 'C':x3 = 2;", "        break;", "    case 'D':x3 = 0;", "        break;", "    default:printf(\"选择有误，请重新选择\\n\");", "    }", "    z = (x1", "w1 + x2", "w2 + x3*w3) / 10;", "    y = 1 / (1 + pow(e, -z));", "    printf(\"你去看电影的可能性为：%d\\n\", z);", "    if (z >= v)", "        printf(\"去看电影\");", "    else", "        printf(\"不去看电影\");", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;How would you expect &lt;code&gt;fallthrough&lt;/code&gt; to work? In this type switch, the &lt;code&gt;i&lt;/code&gt; variable has a type that depends on the particular case that's invoked. So in the &lt;code&gt;case bool&lt;/code&gt; the &lt;code&gt;i&lt;/code&gt; variable is typed as &lt;code&gt;bool&lt;/code&gt;. But in &lt;code&gt;case string&lt;/code&gt; it's typed as &lt;code&gt;string&lt;/code&gt;. So either you're asking for &lt;code&gt;i&lt;/code&gt; to magically morph its type, which isn't possible, or you're asking for it to be shadowed by a new variable &lt;code&gt;i string&lt;/code&gt;, which will have no value because its value comes from &lt;code&gt;x&lt;/code&gt; which is not, in fact, a &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Here's an example to try and illustrate the problem:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch i := x.(type) {\ncase int:\n    // i is an int\n    fmt.Printf(\"%T\n\", i); // prints \"int\"\ncase bool:\n    // i is a bool\n    fmt.Printf(\"%T\n\", i); // prints \"bool\"\n    fallthrough\ncase string:\n    fmt.Printf(\"%T\n\", i);\n    // What does that type? It should type \"string\", but if\n    // the type was bool and we hit the fallthrough, what would it do then?\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The only possible solution would be to make the &lt;code&gt;fallthrough&lt;/code&gt; cause the subsequent case expression to leave &lt;code&gt;i&lt;/code&gt; as an &lt;code&gt;interface{}&lt;/code&gt;, but that would be a confusing and bad definition.&lt;/p&gt;\n\n&lt;p&gt;If you really need this behavior you can already accomplish this with the existing functionality:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch i := x.(type) {\ncase bool, string:\n    if b, ok := i.(bool); ok {\n        // b is a bool\n    }\n    // i is an interface{} that contains either a bool or a string\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么在类型开关中不允许掉线？", ["\n\n", "I'm wondering why fallthrough isn't allowed in a type switch statement in golang.", "\n\n", "According to the ", "specification", ": \"The \"fallthrough\" statement is not permitted in a type switch.\", which doesn't explain much about WHY it isn't allowed.", "\n\n", "The code attached is to simulate a possible scenario were a fallthrough in a type switch statement might have been useful.", "\n\n", "Notice!", " This code doesn't work, it will produce the error: \"cannot fallthrough in type switch\". I'm just wondering what possible reasons might have been for not allowing the fallthrough statement in a type switch.", "\n\n", "//A type switch question\npackage main\n\nimport \"fmt\"\n\n//Why isn't fallthrough in type switch allowed?\nfunc main() {\n    //Empty interface\n    var x interface{}\n\n    x = //A int, float64, bool or string value\n\n    switch i := x.(type) {\n    case int:\n        fmt.Println(i + 1)\n    case float64:\n        fmt.Println(i + 2.0)\n    case bool:\n        fallthrough\n    case string:\n        fmt.Printf(\"%v\", i)\n    default:\n        fmt.Println(\"Unknown type. Sorry!\")\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n#include &amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(void){\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;days&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d/%d&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;};\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) || (&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;))\n      a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;;\n    for (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;days&lt;/span&gt; &amp;#43;&amp;#61;a[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;days&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;希望你能采纳&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["本题要求编写程序计算某年某月某日是该年中的第几天", ["如题：", "求详细的解答谢谢了！", "不太理解应该怎么写，我看到有人是用Switch语句的！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你获取到的phpvar的值是0&amp;#xff0c;不会改变&amp;#xff0c;而且php是先于javascript执行的。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP:if语句条件失效", ["if语句条件失效", "\n", "因为班上每周要做红领巾爱学习，在班级群不好统计，于是就写了这个，用户POST提交信息至数据库，在观看了指定时间就会在数据库标注为已完成。但在写判断时间的时候，if语句没满足条件就直接执行，（switch语句也试过了，没有用）以下是代码，谢谢各位！若对我有帮助，我会通过打赏的方式·给予1-3元的酬金", "\n", "<", "html", " ", "xmlns", "=", "\"http://www.w3.org/1999/xhtml\"", ">", "\n", "<", "form", " ", "name", "=", "\"myform\"", ">", "\n", "<", "td", " ", "valign", "=", "\"top\"", " ", "width", "=", "\"135\"", ">", "\n\n    ", "<", "input", " ", "name", "=", "\"clock\"", " ", "size", "=", "\"10\"", " >", "\n", "</", "td", ">", "\n", "</", "form", ">", "\n", "<", "head", ">", "\n", "<?php", "\n\n", "$conn", " = mysqli_connect(", "'****'", ", ", "'****'", ", ", "'******'", ", ", "'****'", ");\n\n ", "?>", "\n \n", "<", "script", " ", "type", "=", "“text/javascript”", ">", "\n\n\n", "window", ".", "onbeforeunload", " = closing;\n\n", "<?php", "\n", "$name", " = ", "$_POST", "[", "'name'", "];\n", "$int1", " = ", "$_POST", "[", "\"xuehao\"", "];\n", "$sql_select", " = ", "\"INSERT INTO `tab_h` (`name`, `xuehao`, `ok`) VALUES ('", "$name", "', '", "$int1", "', '未完成');\"", "; \n", "$ret", " = mysqli_query(", "$conn", ", ", "$sql_select", ");\n\n", "?>", "\n\n", "</", "script", ">", "\n\n\n\n    ", "<", "script", " ", "language", "=", "\"JavaScript\"", ">", "\n        ", "var", " id, iM = ", "0", ", iS = ", "0", ";\n        start = ", "new", " ", "Date", "();\n        ", "function", " ", "go", "(", ") {\n            now = ", "new", " ", "Date", "();\n            time = (now.", "getTime", "() - start.", "getTime", "()) / ", "1000", ";\n            time = ", "Math", ".", "floor", "(time);\n            iS = time % ", "60", ";\n            iM = ", "Math", ".", "floor", "(time / ", "60", ");\n            ", "if", " (iS < ", "10", ")\n                ", "document", ".", "myform", ".", "clock", ".", "value", " = ", "\" \"", " + iM + ", "\" 分 0\"", " + iS + ", "\" 秒\"", ";\n                \n\n                \n            ", "else", "\n                ", "document", ".", "myform", ".", "clock", ".", "value", " = ", "\" \"", " + iM + ", "\" 分 \"", " + iS + ", "\" 秒\"", ";\n\n                \n            id = ", "setTimeout", "(", "\"go()\"", ", ", "1000", ");\n        }\n        ", "go", "();\n        \n    ", "</", "script", ">", "\n\n    \n", "</", "head", ">", "\n", "<", "body", ">", "\n", "<?php", "\n", "#判断从这里开始", "\n", "$phpvar", "=", "\"<script>document.write(iM);</script>\"", ";\n\n", "if", " (", "$phpvar", ">", "2", "#注：这个2加不加引号都试过了){", "\n    ", "$sql_select", " = ", "\"DELETE FROM `tab_h` WHERE `name`=", "$name", "\"", ";\n    ", "$ret", " = mysqli_query(", "$conn", ", ", "$sql_select", ");\n    ", "$sql_select", " = ", "\"INSERT INTO `tab_h` (`name`, `xuehao`, `ok`) VALUES ('", "$name", "', '", "$int1", "', '已完成');\"", ";\n    ", "$ret", " = mysqli_query(", "$conn", ", ", "$sql_select", ");    \n    ", "echo", " ", "\"OK\"", ";\n}\n", "#结束", "\n", "?>", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是从STDIN(控制台标准输入&amp;#xff09;中导入csv格式数据到数据库ratedb中的call_lte_914_202212_28表中&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-symbol\"&gt;COPY&lt;/span&gt; table_name [ ( column_name [, ...] ) ]\n    &lt;span class=\"hljs-symbol\"&gt;FROM&lt;/span&gt; { &lt;span class=\"hljs-string\"&gt;&amp;#39;filename&amp;#39;&lt;/span&gt; | &lt;span class=\"hljs-symbol\"&gt;STDIN&lt;/span&gt; }\n    [ [ &lt;span class=\"hljs-symbol\"&gt;WITH&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;BINARY&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;DELIMITER&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;delimiter_character&amp;#39;&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;NULL&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;null_string&amp;#39;&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;CSV&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;HEADER&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;QUOTE&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;quote_character&amp;#39;&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;ESCAPE&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;escape_character&amp;#39;&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;FORCE&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;NOT&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;NULL&lt;/span&gt; column_name [, ...] ] ] ]\n\n&lt;span class=\"hljs-symbol\"&gt;COPY&lt;/span&gt; { table_name [ ( column_name [, ...] ) ] | ( query ) }\n    &lt;span class=\"hljs-symbol\"&gt;TO&lt;/span&gt; { &lt;span class=\"hljs-string\"&gt;&amp;#39;filename&amp;#39;&lt;/span&gt; | &lt;span class=\"hljs-symbol\"&gt;STDOUT&lt;/span&gt; }\n    [ [ &lt;span class=\"hljs-symbol\"&gt;WITH&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;BINARY&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;DELIMITER&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;delimiter_character&amp;#39;&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;NULL&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;null_string&amp;#39;&lt;/span&gt; ]\n          [ &lt;span class=\"hljs-symbol\"&gt;CSV&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;HEADER&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;QUOTE&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;quote_character&amp;#39;&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;ESCAPE&lt;/span&gt; [ &lt;span class=\"hljs-symbol\"&gt;AS&lt;/span&gt; ] &lt;span class=\"hljs-string\"&gt;&amp;#39;escape_character&amp;#39;&lt;/span&gt; ]\n                [ &lt;span class=\"hljs-symbol\"&gt;FORCE&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;QUOTE&lt;/span&gt; { column_name [, ...] | * } ] ] ]\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=\"https://www.postgresql.org/docs/current/sql-copy.html\" id=\"textarea_1672982076852_1672982765612_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://www.postgresql.org/docs/current/sql-copy.html\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["postgresql语句解析", ["pg数据库的慢语句收集，结果出现了一条这种慢语句，完全看不懂呀，有大腿知道这语句是在干什么吗", "\n", "/* udaldump sql from 133.64.173.22-sxxa-4-1-c15-sev-nf8480m-04u30 */ COPY \"\"ratedb\"\".\"\"call_lte_914_202212_28\"\"(\"\"ticket_id\"\", \"\"ticket_seq\"\", \"\"source_id\"\", \"\"oper_list_id\"\", \"\"event_type_id\"\", \"\"latn_id\"\", \"\"partner_id\"\", \"\"home_area_code\"\", \"\"log_user_name\"\", \"\"mdn_nbr\"\", \"\"collect_id\"\", \"\"switch_id\"\", \"\"ori_domain\"\", \"\"start_time\"\", \"\"end_time\"\", \"\"duration\"\", \"\"input_octets\"\", \"\"output_octets\"\", \"\"lant_pro_id\"\", \"\"service_option\"\", \"\"billing_object\"\", \"\"counts\"\", \"\"ori_charge\"\", \"\"disct_charge\"\", \"\"roam_flag\"\", \"\"tai_mcc\"\", \"\"tai_mnc\"\", \"\"tai_id\"\", \"\"ecgi_mcc\"\", \"\"ecgi_mnc\"\", \"\"ecgi_cell_id\"\", \"\"ecgi_lac_id\"\", \"\"billing_area_code\"\", \"\"billing_nbr\"\", \"\"acct_item_type_id\"\", \"\"disct_item_type_id\"\", \"\"billing_duration\"\", \"\"disct_rule_id\"\", \"\"event_pricing_strategy_id\"\", \"\"prd_ofr_id\"\", \"\"prd_inst_id\"\", \"\"ratable_value\"\", \"\"disct_out_ratable\"\", \"\"group_id\"\", \"\"upcalling_area_code\"\", \"\"pgw_address_used\"\", \"\"charging_id\"\", \"\"pdn_connection_charging_id\"\", \"\"serving_node_address\"\", \"\"serving_node_address_ipv6\"\", \"\"serving_node_type\"\", \"\"pgw_plmn_identifier\"\", \"\"pdp_type\"\", \"\"served_pdp_address\"\", \"\"served_meid\"\", \"\"user_location_information\"\", \"\"serving_node_plmn_identifier\"\", \"\"begin_time\"\", \"\"stop_time\"\", \"\"local_seq_num\"\", \"\"local_rec_seq_num\"\", \"\"qos_information\"\", \"\"rating_group\"\", \"\"report_time\"\", \"\"service_condition_change\"\", \"\"service_identifier\"\", \"\"time_of_first_usage\"\", \"\"time_of_last_usage\"\", \"\"time_usage\"\", \"\"record_type\"\", \"\"cause_for_record_closing\"\", \"\"node_id\"\", \"\"apn_selection_mode\"\", \"\"segment_id\"\", \"\"reserver1\"\", \"\"reserver2\"\", \"\"start_year\"\", \"\"start_month\"\", \"\"start_day\"\", \"\"start_hour\"\", \"\"start_mmss\"\", \"\"cust_type\"\", \"\"payment_type\"\", \"\"bsid\"\", \"\"acct_id\"\", \"\"cause\"\", \"\"balanceinfo\"\", \"\"discount_fee\"\", \"\"accumlatorinfo\"\", \"\"prod_offer_inst_id\"\", \"\"platform\"\", \"\"fee_type\"\", \"\"cdr_flag\"\", \"\"card_total_volume\"\", \"\"reserver3\"\", \"\"reserver4\"\", \"\"reserver5\"\", \"\"measure_domain\"\", \"\"ratableinfo\"\", \"\"uuid\"\", \"\"accuinfo\"\", \"\"cust_id\"\", \"\"batchno\"\", \"\"charge\"\", \"\"visit_area_code\"\", \"\"jt_uuid\"\", \"\"pay_mode\"\", \"\"offer_code\"\", \"\"rate_trace\"\", \"\"visitctry\"\", \"\"jt_old_uuid\"\", \"\"rfi\"\", \"\"rst\"\", \"\"ret\"\", \"\"rdv\"\", \"\"ruv\"\", \"\"b42\"\", \"\"b43\"\", \"\"rpt\"\", \"\"chd\"\", \"\"source_inst_id\"\", \"\"oper_type\"\", \"\"ept_type\"\", \"\"pub_int_seq\"\", \"\"str_pricing_plan_id\"\", \"\"pub_int_flag\"\", \"\"sm_int_result_code\"\", \"\"sm_int_offline_flag\"\", \"\"sm_int_req_type\"\", \"\"ambrdl\"\", \"\"ambrul\"\", \"\"inv_seq\"\", \"\"session_id\"\", \"\"served_pdp_address_ipv6\"\", \"\"pdu_session_id\"\", \"\"pdu_type\"\", \"\"rat_type\"\", \"\"cdr_str_nr_cellid\"\", \"\"cdr_online_mod5g\"\", \"\"cdr_quota_manage_indicator\"\", \"\"day\"\", \"\"callback_source_id\"\", \"\"ldr_id\"\", \"\"cdr_pub_str_hostid\"\", \"\"servicescenarious\"\", \"\"ocp_str_session_id\"\", \"\"sourcefile\"\", \"\"pay_mod\"\", \"\"calling_area_code\"\", \"\"re_trail\"\", \"\"cnplmn\"\") FROM STDIN csv DELIMITER AS '^E' QUOTE AS '^C'"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在上面的if判断中&amp;#xff0c;你对y赋值为1,2,3,4数字&amp;#xff0c;而不是&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;,&amp;#39;3&amp;#39;,&amp;#39;4&amp;#39;字符&amp;#xff0c;所以case &amp;#39;1&amp;#39; &amp;#xff0c;case &amp;#39;2&amp;#39; ,case &amp;#39;3&amp;#39; 和 case &amp;#39;4&amp;#39;也分别需要改为 case 1 &amp;#xff0c; case 2&amp;#xff0c;case 3和 case 4 才行的 。&lt;br /&gt;数字1和字符‘1’并不相等&amp;#xff0c;所以你的结果不正确 &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch（）失败了", ["刚学switch", "在visual stdio上没有报错", "但是运行出来没有计算值", "不是很搞懂", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将奖金数除以10万&amp;#xff0c;然后用switch&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言中的switch语言怎么使用", ["这个题目应该怎么用switch语言啊，switch括号里应该写什么 case后面又应该跟什么来表示a的取值范围"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use a switch in the blade syntax instead, this is available from Laravel 5.5&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@switch($item-&amp;gt;confirmed)\n    @case('y')\n        Yes\n        @break\n\n    @case('n')\n        Not yet\n        @break\n\n    @default\n        Rejected\n@endswitch\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are running a version without the &lt;code&gt;switch&lt;/code&gt; directive, you can use a normal &lt;code&gt;if&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@if ($item-&amp;gt;confirmed == 'y')\n    Yes\n@elseif ($item-&amp;gt;confirmed == 'n')\n    Not yet\n@else\n    Rejected\n@endif\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; also chain the ternary operators, but its not as pretty. I would recommend going for either of the two above. This can easily be more difficult to read, particularly if you add more conditions - its better to use a switch.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{{ ($item-&amp;gt;confirmed == 'y') ? \"Yes\" : ($item-&amp;gt;confirmed == 'n' ? \"Not Yet\" : 'Rejected') }}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["laravel，如何获得3个选项的值，如果是，那么如果是，那么否则如果r则拒绝", ["\n\n", "in simple way I have this code which reads the result of two options but what if I want them to be 3", "\n\n", "I have 3 chars: ", "y", ", ", "n", " and ", "r", "\n\n", "y = yes\nn = not yet\nr = rejected\n", "\n\n", "\nHow can I print the last alternative?", "\n\n", "{{ ($item->confirmed =='y')?\"Yes\":\"Not Yet\" }}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你想要这样&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ElevenTest&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (i % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; :\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; :\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;个位数不是7&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; :\n                    System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;个位数是7&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n            i&amp;#43;&amp;#43;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["有没有人来教一下我这个刚学Java的", ["编写代码，使用switch语句完成对100以内，尾数为7的数字是否合格的判定，要求注释包括：break在swith语句中的功能，功能上实现case的合并，使用default语句完成对初次使用者的数值设置帮助"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If your WebEvents share a common functionality, define an explicit interface.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type WebEvent interface {\n    Foo()\n    Bar()\n}\n\ntype PageLoad struct{}\n\nfunc (*pl PageLoad) Foo() {\n    // do something\n}\n\nfunc (*pl PageLoad) Bar() {\n    // do something else\n}\n\nfunc Inspect(event WebEvent) {\n    switch event.(type) {\n    case PageLoad:\n        // inside this block you're operating on event.(PageLoad), not just event.(WebEvent)!\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Otherwise you can use an empty interface&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type PageLoad struct{}  // optionally with methods as above\n\nfunc Inspect(event interface{}) {\n    switch event.(type) {\n    case PageLoad:\n        // similarly, in here event is a PageLoad, not an interface{}\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Go中实现Rust式类型匹配的惯用方式是什么？", ["\n\n", "I understand that Go does not support enums of the kind shown in the Rust example below. What would be the idiomatic way of achieving the same effect, i.e., perform matching on types, in Go? For example, would I use an empty struct or an interface?", "\n\n", "enum WebEvent {\n    PageLoad,\n    KeyPress(char),\n}\n\nfn inspect(event: WebEvent) {\n    match event {\n        WebEvent::PageLoad => println!(\"page loaded\"),\n        WebEvent::KeyPress(c) => println!(\"pressed '{}'.\", c),\n    }\n}\n", "\n\n", "Example taken from ", "Rust By Example", ".", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The Facebook PHP SDK is interfering. It's probably throwing an error before Cake can properly redirect (the headers are already sent by &lt;code&gt;groofi__extra_facebook.php&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;Have a look what's happening in &lt;code&gt;groofi__extra_facebook.php&lt;/code&gt; where the error seems to be stemming from. Probably your new server configuration is missing a vital component, is &lt;code&gt;cURL&lt;/code&gt; present, for example?&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["路由在蛋糕上不能正常工作", ["\n\n", "I migrated a cake website from one server to another, but in statics pages is showing a blank page, this is happening in two case scenarios right now", "\n\n", "Scenario1:", "\n\n", "$this->redirect(Router::url(array('controller' => 'staticpages', \n                            'action' => 'message', 'messageSlug' => 'welcome')));\n", "\n\n", "Scenario2:", "\n\n", "$link = Router::url(array('controller' => 'staticpages',\n              'action' => 'message', 'messageSlug' => 'thanks-for-registering'));\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Test{\n  &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String args[]){\n        Scanner &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score &amp;#61; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;.nextInt();\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;85&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;A&amp;#34;);\n       }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt; &amp;amp;&amp;amp; score&amp;lt;&lt;span class=\"hljs-number\"&gt;85&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;B&amp;#34;);\n      }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(score&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt; &amp;amp;&amp;amp; score&amp;lt;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;C&amp;#34;);\n      }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;D&amp;#34;);\n      }\n\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["初学者希望有人来看看这个问题", ["一个初学者的问题     teacher给的课堂作业 实在没有头绪 要求用switch语句实现代码精简 不用一个一个打"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Add the &lt;code&gt;bson&lt;/code&gt; key used by the mgo BSON encoder.  The encoder ignores the &lt;code&gt;json&lt;/code&gt; key. See &lt;a href=\"https://godoc.org/gopkg.in/mgo.v2/bson#Marshal\" rel=\"nofollow noreferrer\"&gt;bson.Marshal&lt;/a&gt; documentation for the details.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Poll struct {\n    Id     bson.ObjectId `bson:\"_id\"`\n    Quest0 *Question     `json:\"quest0,omitempty\" bson:\"ques0:omitempty\"`\n    ...\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["结构中的遗漏不遗漏", ["\n\n", "I'm trying to store data to MongoDB without sending null data. The Struct in question is Poll and Question. Incoming data can range from have 2 questions, to 5. So if a user only enters 2 questions I wont have a need to use the 3 other fields in Poll struct. Id rather have the fields not appear at all than send null data to the server.", "\n\n", "package main\n\n// Omit Empty not working\ntype Poll struct {\nId     bson.ObjectId `bson:\"_id\"`\n  Quest0 *Question     `json:\"quest0,omitempty\"`\n  Quest1 *Question     `json:\"quest1,omitempty\"`\n  Quest2 *Question     `json:\"quest2,omitempty\"`\n  Quest3 *Question     `json:\"quest3,omitempty\"`\n  Quest4 *Question     `json:\"quest4,omitempty\"`\n  Quest5 *Question     `json:\"quest5,omitempty\"`\n}\n\ntype Question struct {\n  Count    *int    `json:\"count,omitempty\"`\n  Question *string `json:\"question,omitempty\"`\n}\n\ntype ReceivedPoll struct {\n  Quest0 string `db:\"quest0\"`\n  Quest1 string `db:\"quest1\"`\n  Quest2 string `db:\"quest2\"`\n  Quest3 string `db:\"quest3\"`\n  Quest4 string `db:\"quest4\"`\n  Quest5 string `db:\"quest5\"`\n}\n\nfunc main() {\n  fmt.Println(\"server running...\")\n\n  router := httprouter.New()\n\n  router.POST(\"/api/create\", api)\n  router.NotFound = http.FileServer(http.Dir(\"./public\"))\n  log.Fatal(http.ListenAndServe(\":5000\", router))\n}\n\nfunc api(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {\n\n  w.Header().Set(\"Content-type\", \"application/json\")\n\n  session, err := mgo.Dial(mkey)\n\n  if err != nil {\n    panic(err)\n  }\n\n  defer session.Close()\n  fmt.Println(\"is this running?\")\n\n  switch r.URL.String() {\n    case \"/api/create\":\n      // LOOK HERE\n      poll := &Poll{}\n\n      json.NewDecoder(r.Body).Decode(&poll)\n\n      poll.Id = bson.NewObjectId()\n      fmt.Println(*poll)\n\n      c := session.DB(\"abase\").C(\"polls\")\n      err = c.Insert(*poll)\n      if err != nil {\n        fmt.Println(err)\n      }\n\n      rz, _ := json.Marshal(poll.Id)\n      w.Write(rz)\n  }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/u010660276/article/details/45768895", "Konwledge_Point": "switch语句及其应用", "Question": ["Fluorescent                              ", ["Problem Description", "\nMatt, a famous adventurer who once defeated a pack of dire wolves alone, found a lost court. Matt finds that there are N fluorescent lights which seem to be the stars from the firmament. What’s more, there are M switches that control these fluorescent lights. Each switch is connected to a group of lights. When Matt touches a switch, all the lights connected to it will change their states (turning the dark on, turning the bright off).", "\n\n", "Initially, all the fluorescent lights are dark. For each switch, Matt will touch it with probability 1 .", "\n\n", "As a curious gentleman, Matt wants to calculate E[X3], where X represents the number of bright lights at the end, E[X3] represents the expectation of cube of X.", "\n\n", "Input", "\nThe first line contains only one integer T , which indicates the number of test cases.", "\n\n", "For each test case, the first line contains N, M (1 ≤ N, M ≤ 50), denoting the number of fluorescent lights (numbered from 1 to N ) and the number of switches (numbered from 1 to M ).", "\n\n", "M lines follow. The i-th line begins with an integer Ki (1 ≤ Ki ≤ N ). Ki distinct integers lij(1 ≤ lij ≤ N ) follow, denoting the fluorescent lights that the i-th switch controls.", "\n\n", "Output", "\nFor each test case, output a single line “Case #x: y”, where x is the case number (starting from 1) and y is the answer. To avoid rounding error, the answer you should output is:", "\n\n", "E[X3] × 2M mod (109 + 7)", "\n\n", "Sample Input", "\n2", "\n2 2", "\n1 1", "\n2 1 2", "\n3 1", "\n3 1 2 3", "\n\n", "Sample Output", "\nCase #1: 10", "\nCase #2: 27"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case里不可以写变量&amp;#xff0c;必须是常量&lt;br /&gt;你这东西就写不成switch&lt;br /&gt;但也没必要写一堆if&amp;#xff0c;else&lt;br /&gt;直接for循环&amp;#xff0c;判断if(c&amp;#61;&amp;#61;order[i])就行了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["if else 和 switch的区别，这个流程该怎么用switch实现", ["如下图所示代码", "\n", "这样是不报错的。", "\n", "但是这样", "\n", "就不行了，这是为什么？如果我想达到想要的流程的话，该怎么用switch实现?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;随机数产生的是 数字类型&amp;#xff0c;不是字符串类型呀&amp;#xff0c;生成随机数 Math.random就可以了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; random&amp;#61;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)(Math.random()*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(random) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; :System. &lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;天意如此&amp;#xff0c;那就一饭吧! &amp;#34;&lt;/span&gt;) ;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: System. &lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;天意如此&amp;#xff0c;那就二饭吧! &amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; :System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;天意如此&amp;#xff0c;那就三饭吧! &amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;天意如此&amp;#xff0c;那就四饭吧! &amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt; ;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;: System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;出去吃吧! &amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt; ;\n            &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt; : System. &lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;今天就叫外卖吧! &amp;#34;&lt;/span&gt;);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["随机生成的数字怎样和Switch结合", ["随机生成的数字如何和Switch形成关系，这个输出的数字就只是单单的数字，要输出Switch还要输入数字"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since you are updating the SalesDetails and not the Sale, I would reverse the query so that the update is actually on the SalesDetails instead of the Sale:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sales_details::whereHas('sale', function($query) use ($now){\n    $query-&amp;gt;where(DB::raw(\"(DATE_FORMAT(transaction_date,'%Y-%m-%d'))\"), '&amp;lt;', $now)\n})-&amp;gt;where('product_id', '&amp;lt;=', 24)-&amp;gt;where('switch', 1)-&amp;gt;update(['switch' =&amp;gt; 0]);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Laravel在WhereHas中更新关系列", ["\n\n", "I wanted to update a column in my model with a wherehas. However, I'm not sure how to do this. Here's my query below", "\n\n", "$unused = Sale::whereHas('salesdetails',function($query) {\n             $query->where('product_id', '<=', 24)->where('switch', 1);\n        })->where(DB::raw(\"(DATE_FORMAT(transaction_date,'%Y-%m-%d'))\"), '<', $now)->update(['switch' => 0]);\n", "\n\n", "Sale Model", "\n\n", "<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Sale extends Model\n{\n    protected $table = 'sales';\n\n    protected $primaryKey = 'id';\n    public $timestamps = false;\n\n    public function user()\n    {\n        return $this->belongsTo('App\\User', 'member_id', 'id');\n    }\n\n    public function guest()\n    {\n        return $this->belongsTo('App\\Guest', 'guest_id', 'id');\n    }\n\n    public function salesdetails()\n    {\n        return $this->hasOne('App\\Sales_details','sales_id', 'id');  \n    }\n\n    public function discount()\n    {\n        return $this->hasOne('App\\Discount','id', 'discount_id');  \n    }\n}\n", "\n\n", "Salesdetails Model", "\n\n", "<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Sales_details extends Model\n{\n    protected $table = 'sales_details';\n\n    protected $primaryKey = 'id';\n    public $timestamps = false;\n\n    public function sale()\n    {\n        return $this->belongsTo('App\\Sale', 'sales_id', 'id');\n    }\n\n    public function product()\n    {\n        return $this->belongsTo('App\\Product', 'product_id');\n    }\n\n\n}\n", "\n\n", "In the query above, I want to update all the switches to '0' from the salesdetails relationship. How can I do this one?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Although the answer here does not use PHP, I still think it's worth to add it here as it's the only complete working example of how to update a youtube video without displaying the consent screen to the user, at least I wasn't able to find a concrete working example.&lt;/p&gt;\n\n&lt;p&gt;I ended up using the Javascript library, I still wasn't able to find a single complete example, not even in the library docs, nor Google's, it took taking pieces of code from here and there, and connecting the dots.&lt;/p&gt;\n\n&lt;p&gt;First thing to do is to create the credentials, we do this by going to Google developer console, and under Credentials we create a new OAuth Client ID, choosing Web Application and adding our domain to the Authorized JavaScript origins field - eg. &lt;a href=\"http://www.example.com\" rel=\"nofollow\"&gt;http://www.example.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The only information we will need from these credentials is the Client ID, so we copy it and paste it in the Javascript file below.&lt;/p&gt;\n\n&lt;p&gt;Here's the HTML part, where we also load the API library:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;input type=\"button\" id=\"make-private\" value=\"private\" /&amp;gt; Make video private\n&amp;lt;input type=\"button\" id=\"make-public\" value=\"public\" /&amp;gt; Make video public\nCurrent privacy status: &amp;lt;span id=\"current-status\"&amp;gt;&amp;lt;/span&amp;gt;\n&amp;lt;script type=\"text/javascript\" src=\"update.js\"&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script src=\"https://apis.google.com/js/client.js?onload=googleApiClientReady\"&amp;gt;&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the Javascript code to make it happen - update.js in the code above, remember to update with your own client ID: &lt;a href=\"https://gist.github.com/andruxnet/2efe7898f5cd9722e0d42b71fce5d183\" rel=\"nofollow\"&gt;https://gist.github.com/andruxnet/2efe7898f5cd9722e0d42b71fce5d183&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The relevant Javascript code, once we figure out the authentication part that can be found in several places online, is this piece of code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// we first grab the video resource from Youtube, using youtube video id\nvar request = gapi.client.youtube.videos.list({\n    id: 'youtubevideoid',\n    part: 'status'\n});\n\n// once we get the video resource, we update the status and \n// run the update method\nrequest.execute(function(response) {\n    // since we looked for a video id, we only got one result - the first \n    // and only item in the array of result items\n    video = response.result.items[0];\n\n    // set the privacy status to one of public, private or unlisted\n    video.status.privacyStatus = 'private';\n\n    // prepare the update with the new privacy status\n    var updateRequest = gapi.client.youtube.videos.update({\n        part: 'status',\n        fields: 'status',\n        resource: video\n    });\n\n    // execute the update - I didn't see this part in the API documentation, \n    // I found it somewhere else in SO as part of another question, although \n    // I should've figured it out by looking at the first list() method above\n    updateRequest.execute();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I hope this saves someone's time in the future as it would have saved my own.&lt;/p&gt;\n\n&lt;p&gt;Cheers&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在我使用PHP授予对已安装应用程序的访问权限之后，我必须在哪里放置Google oAuth返回的代码？", ["\n\n", "This has been a nightmare to get right for the past few days. First I was struggling with redirect_uri_mismatch errors, or bad requests, but now that I thought I nailed it, I'm getting this message from Google after clicking the \"Allow\" button in the consent screen :", "\n\n", "Please copy this code, switch to your application and paste it there", "\n\n", "Where exactly do I need to paste this code? I'm using PHP in a web server, I went to the \"Other\" application type when creating the credentials, because I read that this was preferred if I didn't want my users to keep getting that auth link.", "\n\n", "I can't seem to find a concrete example of how to do this, I got it working this far by grabbing bits from here and there, but this one I just can't figure it out.", "\n\n", "https://gist.github.com/andruxnet/0f7fe237730c13846a690da12935a708", "\n\n", "I'm using a file client_secret.json that I downloaded from Google's oAuth credentials screen, it looks like this:", "\n\n", "{\"installed\":{\"client_id\":\"xxxxxxxxxxxxxxx.apps.googleusercontent.com\",\"project_id\":\"my-project-id\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"xxxxxxxxxxx\",\"redirect_uris\":[\"urn:ietf:wg:oauth:2.0:oob\",\"http://localhost\"]}}\n", "\n\n", "Anyone knows what else I need to do or where to put that code returned from Google after the consent screen?", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "啥都看不清楚，怎么回答", "Konwledge_Point": "switch语句及其应用", "Question": ["linuxs关于连接root问题", ["用虚拟机安装linuxs,安装系统过程中，出现了一个问题，如图"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;mask一直为1&amp;#xff0c;所以x&amp;#61;number/mask&amp;#61;number,等于输入值&amp;#xff0c;&lt;br /&gt;所以不在0--9范围吧&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch- case的用法", ["\n", "\n", "想问一下这个switch为什么没有输出啊？是我用法不对吗？该怎么改啊？程序没报错但就是没有输出的值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这是配置服务器吧&amp;#xff0c;上面要URL那 要填浏览器访问路径&amp;#xff0c;比如&lt;a id=\"textarea_1677301774929_1677301822536_0\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://localhost:8080/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/748947103776156.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["IDEA日常使用URL问题", ["IDEA如图,写代码时，switch语句判断月份是否为春夏秋冬时，其他代码能够运行，仅这个显示URL is not specified."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf输入后&amp;#xff0c;比如n&amp;#xff0c;那n&amp;#61;n&amp;#43;1&amp;#xff0c;switch&amp;#xff08;n&amp;#xff09;case……&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["求答案😇c语言的哦～～", ["7-9 输出月份 (20 分)", "分别用if、switch两种方法编写根据0～11的整数转换为十二月份的程序片断，假定数字0对应一月份。", "输入格式:", "每一行输入0~12之间的一个数字", "输出格式:", "输出该数字对应的月份", "输入样例:", "0", "结尾无空行", "输出样例:", "请输入月份：", "\n", "2", "\n", "三月份", "\n", "请输入月份：", "\n", "12", "\n", "请重新输入月份", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There are many technical choices for accomplishing this. In this situation, I would recommend using the technology that you already know -- .Net and C#. &lt;/p&gt;\n\n&lt;p&gt;re your criteria, is scalability really a big issue? Aren't we talking about hundreds of users, not millions?&lt;/p&gt;\n\n&lt;p&gt;And open source components? I don't think you really need them. This application will require some good thinking about security and about database design and UI design. Open source -- using somebody else's code -- doesn't help you address these issues. No matter whose code it is, you still must be certain you have the security worked out.&lt;/p&gt;\n\n&lt;p&gt;There is a lot of helpful information about ASP.Net &lt;a href=\"http://www.asp.net/get-started\" rel=\"nofollow\"&gt;here&lt;/a&gt;, including many excellent &lt;a href=\"http://www.asp.net/web-forms\" rel=\"nofollow\"&gt;videos&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: If you want to go with ASP.Net MVC (a good choice, I think), here is the &lt;a href=\"http://www.asp.net/mvc\" rel=\"nofollow\"&gt;main page&lt;/a&gt; for it, and even better, here are the &lt;a href=\"http://www.asp.net/mvc/videos\" rel=\"nofollow\"&gt;videos&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["管理应用程序的平台选择", ["\n\n", "Hi there\nI am desktop application developer but now i have to work on a School Management Application that needs to be web based.\nIt has mainly features ", "\n\n", "two login types School Administration and Students/Parents.\nSchool administrations will upload students Attendance ,Marks in quizzes ,performance etc", "\n\n", "and parents or students would be able to down load the data and view that.", "\n\n", "this seems preety straight forward but i want to know that what platform should be used?", "\n\n", "ZEND framework\nPHP\nASP.Net \nor any other.", "\n\n", "basically i have very less experience in php like stuff and have relatively much experience in c#,Wpf", "\n\n", "what would you recommend that suits best?", "\n\n", "*", "also i want to know what you as a professional would use.so that if necessary I can switch *", "\n\n", "Please Rate according to ", "\n\n", "\n", "flexibility", "\n", "Scalability", "\n", "Availability of open source components", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;blockquote&gt;\n&lt;p&gt;回答不易&amp;#xff0c;求求您采纳点赞哦&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;DolphinPHP里可以在修改switch状态的时候通过在代码里面同时修改数据表中的时间字段来实现自动插入操作时间的功能。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;$currentTime&lt;/span&gt; &amp;#61; date(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y-m-d H:i:s&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-variable\"&gt;$data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;array&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;status&amp;#39;&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-variable\"&gt;$newStatus&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-variable\"&gt;$currentTime&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;$this&lt;/span&gt;-&amp;gt;db-&amp;gt;where(&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;$id&lt;/span&gt;)-&amp;gt;update(&lt;span class=\"hljs-string\"&gt;&amp;#39;table_name&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;$data&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中$newStatus是switch按钮的新状态&amp;#xff0c;$id是当前项目的ID&amp;#xff0c;$currentTime是当前时间&amp;#xff0c;&amp;#39;table_name&amp;#39;是数据表名称。&lt;/p&gt;\n&lt;p&gt;这是一个简单的实现方式&amp;#xff0c;可以根据实际需求作出相应的修改。希望对您有所帮助。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["DolphinPHP里面switch功能如何实现自动提交操作时间", ["想问问DolphinPHP里面switch功能的使用", "\n", "目前我在列表页添加了switch按钮，已经实现了点击switch按钮改变该项目的状态并保存到相应的数据表中，但现在想实现改变switch状态同时自动在数据表里插入点击操作的时间，不知是否有朋友熟悉DolphinPHP这个快速开发框架，如何实现这个功能？"]], "Tag": "程序设计"}
{"Answer": "用访问者模式来做就很好.\r\n1.把每个条件作成一个类,比如 A条件\r\nclass A {\r\n   public void accept(){\r\n      //处理逻辑\r\n   }\r\n}\r\n\r\n然后把每个条件的处理方法都用一个类来管理.\r\npublic class CommonVisitor{\r\n\r\n   public void visit(A a){\r\n     a.accept();\r\n   }\r\n   //其他条件的访问方法\r\n    public void visit(B b){\r\n     b.accept();\r\n   }\r\n}\r\n\r\nmain里面就这样调用就行.\r\npublic static void main(Stirng args[]){\r\n   CommonVisitor visitor = new CommonVisitor();\r\n   //如果是想用A条件,则\r\n    visitor.visit(new A());\r\n}\r\n\r\n这样写的好处,以后先加条件的话我只需要定义新的条件类就行,还有就是在CommonVisitor添加新条件的访问方法就行,这样就很好作到一个条件管理一个逻辑", "Konwledge_Point": "switch语句及其应用", "Question": ["如何才能避免过多的case子句", ["一个switch语句里面 如果有50个case子句", "\n\n", "switch(pt){", "\n  case A:", "\n    break;", "\n  case B:", "\n    break;", "\n  .....", "\n}", "\n\n", "以后维护起来肯定很困难，有什么好的方法能避免 或者替换掉？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我做过类似的题&amp;#xff0c;当时我是这么想的&amp;#xff0c;就是你算出来&amp;#xff0c;这一天这距离第一天是多少天&amp;#xff0c;然后你取余 7 余数加五就能算出这天星期几&amp;#xff0c;&amp;#xff08;加起来大于七就减七就重新来礼拜一&amp;#xff09;我是这么想的不知道对不对&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于#c++#的问题，请各位专家解答！", ["已知2021年1月1日是星期五，计算某一年中某一天是星期几，考虑闰年，尽量运用上switch语句"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://so.csdn.net/so/search?q&amp;#61;c%E8%AF%AD%E8%A8%80%E6%8E%92%E5%BA%8F&amp;amp;t&amp;#61;blog&amp;amp;u&amp;#61;&amp;amp;urw&amp;#61;\"&gt;https://so.csdn.net/so/search?q&amp;#61;c%E8%AF%AD%E8%A8%80%E6%8E%92%E5%BA%8F&amp;amp;t&amp;#61;blog&amp;amp;u&amp;#61;&amp;amp;urw&amp;#61;&lt;/a&gt;   好好看看&amp;#xff0c;你可以学会的。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["大一C语言编程题（函数）", ["C语言题：", "\n\n", "设计一个程序，从键盘输入十名学生的五门成绩，比较总分，输出最高的总分及其对应的五门成绩。", "\n\n", "求解😢😢😢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case后边加空格 case 0&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["我这个代码为什么会报错呀", ["我这个Java代码为什么会报错呀，switch语句里面一写东西就会报错，string变量好像也一直在报错，不知道怎么办", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这句话可以写成这样&amp;#xff0c;理解看注释&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;flag&lt;/span&gt; &amp;#61; ((b &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;amp;&amp;amp; (c &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));  //如果b&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;且c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#xff0c;flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff0c;否则flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["flag=b>=2&&c<=3这条语句是上面意思？", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "main()", "{", "int a=1,b=2,c=3;", "char flag;", "flag=b>=2&&c<=3;", "switch(a)", "{", "case 1: switch(flag)", "{", "case 0:printf(\"* *\");break;", "case 1:printf(\"% %\");break;", "}", "case 0:switch(c)", "{", "case 1:printf(\" $ $\");break;", "case 2:printf(\" & &\");break;", "default:printf(\" # #\");", "}", "}", "printf(\"\\n\");", "}", "\n", "运行结果及报错内容", "\n", "不理解 flag=b>=2&&c<=3; 这条语句", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "希望有人帮忙解答 flag=b>=2&&c<=3 这条语句的意思"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;Wrong函数 调用 没有加 () &lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/758270602176188.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;getchar() 是接收一个字符&amp;#xff0c;包括空格&amp;#xff0c;换行符等等&amp;#xff0c;不过你这个 也没啥用呀&amp;#xff0c;你又不输入字符&amp;#xff0c;你输入的都是数字&amp;#xff0c; 把 getchar 都去掉吧&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;跳出 while&amp;#xff0c;自己加 标识flag &amp;#61; 0【默认】&amp;#xff0c; 输入一个数&amp;#xff0c;case里 设置 flag &amp;#61; 1&amp;#xff0c;然后 while(1) 最后判断 flag&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n{\n     int &lt;span class=\"hljs-built_in\"&gt;flag&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n     &lt;span class=\"hljs-comment\"&gt;// case 里设置flag &amp;#61; 1&lt;/span&gt;\n\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;flag&lt;/span&gt;) &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;b&gt;如有帮助&amp;#xff0c;欢迎点赞&amp;#43;采纳哈&amp;#xff01;&lt;/b&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个为什么有两个getchar（）这个是输入错误时要重新输入", ["主要是不太理解这个重新输入的怎么再给select进行switch语句，还有用while（1）不是就会一直循环，怎么跳出来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入格式应该是 scanf(&amp;#34;%d&amp;#34;, &amp;amp;m);&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c语言宏定义相关问题", ["\n", "如上图，输入任意整数后貌似会随机出现这两种结果", "想询问一下原因，是宏的定义有问题还是说switch语句写错了"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/u010795146/article/details/8972844'&gt;MFC简单计算器&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/langb2014/article/details/50095167'&gt;基于MFC的简单计算器&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/zhou_yujia/article/details/51198150'&gt;MFC简单计算器&lt;/a&gt;&lt;br/&gt;----------------------biu~biu~biu~~~在下问答机器人小D，这是我依靠自己的聪明才智给出的答案，如果不正确，你来咬我啊！", "Konwledge_Point": "switch语句及其应用", "Question": ["菜鸟提问：用mfc编写简单计算器", ["要求：用switch语句，实现加减乘除和小数点，temp表结果，former第一个数，later第二个数，其他常量不限……"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch case并不是匹配case就只执行case里的语句&amp;#xff0c;而是匹配了之后下面所有case里的语句都会执行&amp;#xff0c;比如i%3&amp;#61;1时,在case 1处匹配&amp;#xff0c;执行case 1下面所有的语句&amp;#xff0c;也就是printf(&amp;#34;one&amp;#34;);printf(&amp;#34;two&amp;#34;);都会执行&amp;#xff0c;但通常我们只想让它执行匹配到的case里的语句&amp;#xff0c;这时候就要加break&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; ( i%&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; )\n{\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;zero&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;one&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;two&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["输出为什么事onetwo？", ["int i=1;", "switch ( i%3 )", " {", "case 0: printf(\"zero\");", "case 1: printf(\"one\");", "case 2: printf(\"two\");", "}", "#我发现好像编译器无视了%3，如果事switch(i%3+1)的话程序会在case 2：printf（“”two“”）；开始。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;void main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;char ch;&lt;br /&gt;int a;&lt;br /&gt;ch&amp;#61;getchar();&lt;br /&gt;if(ch&amp;gt;&amp;#61;&amp;#39;a&amp;#39;&amp;amp;&amp;amp;ch&amp;lt;&amp;#61;&amp;#39;z&amp;#39;)&lt;br /&gt;ch&amp;#61;&amp;#39;1&amp;#39;;&lt;br /&gt;if(ch&amp;gt;&amp;#61;&amp;#39;A&amp;#39;&amp;amp;&amp;amp;ch&amp;lt;&amp;#61;&amp;#39;Z&amp;#39;)&lt;br /&gt;ch&amp;#61;&amp;#39;2&amp;#39;;&lt;br /&gt;if(ch&amp;#61;&amp;#61;&amp;#39; &amp;#39;)&lt;br /&gt;ch&amp;#61;&amp;#39;3&amp;#39;;&lt;br /&gt;switch(ch)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;case&amp;#39;1&amp;#39;:printf(&amp;#34;xiao\\n&amp;#34;);break;&lt;br /&gt;case&amp;#39;2&amp;#39;:printf(&amp;#34;da\\n&amp;#34;);break;&lt;br /&gt;case&amp;#39;3&amp;#39;:printf(&amp;#34;空格\\n&amp;#34;);break;&lt;br /&gt;default:printf(&amp;#34;qita&amp;#34;);&lt;br /&gt;}&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["编程问题，代码问题。", ["用C语言从键盘任意输入一个字符，编程判断该字符是数字字符、大写字符、小写字符、空格还是其他字符。请用switch语句实现"]], "Tag": "程序设计"}
{"Answer": "题主对ListView的机制理解有些不太对。\r\nAndroid将ListView与Adapter进行了接耦，当一个Item需要在ListView上进行展示的时候，ListView会调用与它绑定的adapter.getView()来获取\r\n这一个Item所需要的View,然后将这个View绑定到ListView的这一个Item上进行展示。\r\n所以Adapter的getView()是一个回调方法，有@Override标识，实际上ListView调用getView()获得View之后，内部还有一些操作来让这个View显示出来。\r\n题主的代码完成了“获取这一个Item”所需要的View，并且对View进行了内容设置，但是没有完成\"让ListView展示这个View\"这部分的操作。\r\n这部分的操作，对于调用者来说，在adapter.notifyDataSetChanged()方法里进行。\r\n所以题主应该在MyAdapter中通过一个变量来保存R.drawable.switch_on或者R.drawable.switch_off的值，例如\r\nprivate int imageButtonContent = R.drawable.switch_on;\r\n然后MyAdapter.getView()中通过imageButtonContent这个值来设置ImageButton的内容。\r\n当Activity接收到广播的时候，就将MyAdapter的imageButtonContent值根据你的需要切换，然后再调用adapter.notifyDataSetChanged()来刷新ListView的内容。\r\n\r\n希望能够帮到你，如果还不明白的话可以加我QQ271200723", "Konwledge_Point": "switch语句及其应用", "Question": ["在Activity中调用Adapter.getView更改不了某控件的状态", ["在activity中调用adapter.gerView方法(此adapter是继承baseAdapter的而来的)，得到了某个控件在listView列表项中的View，然后通过这个View.FindViewByID找到这个控件，最后更新控件的状态，但是为什么不起作用？", "\nPS : 下面那个state的值是在广播中收到的消息，由于太多就不一一贴出来了。", "\nMyAdapter adapter ＝ new MyAdapter(context);", "\n\n", "View view2 = adapter.getView(ListViewPostion, convertView, null);", "\n\n", "ImageButton btn = (ImageButton) view2.findViewById(R.id.btn__switch);", "\n\n", "if(state) {", "\n\n", "btn.setImageResource(R.drawable.switch_on);", "\n\n", "}else  {", "\n\n", "btn.setImageResource(R.drawable.switch_off);", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;查看name的数据类型吧&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["python flask数据库查询报错。", ["学习python flask报错找不到原因，数据库查询出错。非常感谢！", "\n", "builtins.TypeError", "TypeError: 'float' object is not callable", "\n", "Traceback (most recent call last)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1997, in ", "call", "return self.wsgi_app(environ, start_response)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1985, in wsgi_app", "response = self.handle_exception(e)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1540, in handle_exception", "reraise(exc_type, exc_value, tb)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask_compat.py\", line 33, in reraise", "raise value", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1982, in wsgi_app", "response = self.full_dispatch_request()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1614, in full_dispatch_request", "rv = self.handle_user_exception(e)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1517, in handle_user_exception", "reraise(exc_type, exc_value, tb)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask_compat.py\", line 33, in reraise", "raise value", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1612, in full_dispatch_request", "rv = self.dispatch_request()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask\\app.py\", line 1598, in dispatch_request", "return self.view_functions", "rule.endpoint", "File \"C:\\python\\Move\\app\\admin\\views.py\", line 15, in login", "if form.validate_on_submit():", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask_wtf\\form.py\", line 101, in validate_on_submit", "return self.is_submitted() and self.validate()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\wtforms\\form.py\", line 310, in validate", "return super(Form, self).validate(extra)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\wtforms\\form.py\", line 152, in validate", "if not field.validate(self, extra):", "File \"X:\\Python\\Python39\\Lib\\site-packages\\wtforms\\fields\\core.py\", line 204, in validate", "stop_validation = self._run_validation_chain(form, chain)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\wtforms\\fields\\core.py\", line 224, in _run_validation_chain", "validator(form, self)", "File \"C:\\python\\Move\\app\\admin\\forms.py\", line 46, in validate_account", "admin = Admin.query.filter_by(name=account).count()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 3113, in count", "return self.from_self(col).scalar()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2866, in scalar", "ret = self.one()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2837, in one", "ret = self.one_or_none()", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2807, in one_or_none", "ret = list(self)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2878, in ", "iter", "return self._execute_and_instances(context)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 2901, in _execute_and_instances", "result = conn.execute(querycontext.statement, self._params)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 948, in execute", "return meth(self, multiparams, params)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 269, in _execute_on_connection", "return connection._execute_clauseelement(self, multiparams, params)", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1055, in _execute_clauseelement", "ret = self._execute_context(", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1147, in ", "execute_context", "fn(self, cursor, statement, parameters,", "File \"X:\\Python\\Python39\\Lib\\site-packages\\sqlalchemy\\events.py\", line 624, in wrap_before_cursor_execute", "orig_fn(conn, cursor, statement,", "File \"X:\\Python\\Python39\\Lib\\site-packages\\flask_sqlalchemy_", "init", ".py\", line 252, in before_cursor_execute", "context._query_start_time = _timer()", "TypeError: 'float' object is not callable", "The debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.", "To switch between the interactive traceback and the plaintext one, you can click on the \"Traceback\" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.", "\n", "You can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:", "\n", "dump() shows all variables in the frame", "dump(obj) dumps all that's known about the object"]], "Tag": "程序设计"}
{"Answer": "将你的服务器启动方式设置为run方式，不要设置为debug方式。 \r\n\r\n具体采用的方法： \r\n如下： \r\nwindow-&gt;preferences  然后找到你的tomcat所在的目录，打开launch窗口，然后修改tomcat lanuch mode为Run mode。然后点击Apply,最后点击OK. \r\n这样设置之后，以后服务器就是在run mode下运行了 \r\n\r\n如果你不这样设置，那就在每次启动的时候，选择run server,而不是debug server.", "Konwledge_Point": "switch语句及其应用", "Question": ["myeclipse debug设置", ["我用的是myeclipse 装载tomcat始终是debug模式， 我用struts开发了个web工程，如果不开myeclipse直接从tomcat启动然后浏览器输入地址 运行正确，可用myeclips运行总弹出对话框 ", "\nconfirm perspective switch ", "\n\n", "this kind of launch.... ", "\n\n", "Do you want to open this perspective now? ", "\n\n", "点是 就跳出debug界面 然后要点两次resume才能出现结果 ", "\n点否 程序就停了不运行了。。。。 ", "\n哪位高人能告诉我怎么回事？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个逗号是中文的&amp;#xff1f;要么都改成英文&amp;#xff0c;输入数据要逗号隔开&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/237375550866128.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;scanf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f,%f,%f,%c&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;&amp;amp;x&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;&amp;amp;y&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;&amp;amp;z&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;service&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/163156550866183.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch怎么输入英文", ["为什么我的代码直接运行出error呀", "\n", "\n// 期中.cpp : 此文件包含 \"main\" 函数。程序执行将在此处开始并结束。\n//\n\n", "#include<stdio.h>", "\n", "#include<string.h>", "\n", "#include<ctype.h>", "\n", "#include<iostream>", "\n", "int", " main()\n{\n    ", "char", " service;\n    ", "float", " x=", "1", ", y=", "1", ", z=", "1", ", amount, m;\n    printf(\"请分别输入三种果汁的千克数与服务类型\");\n    scanf_s(\"%f,%f,%f，%c\", &x, &y, &z,&service);\n    amount = ", "1.6", " * x + ", "1.45", " * y + ", "1.28", " * z;\n    \n    switch (service)\n    {\n    cas", "e'f'", ":printf(\"应付款：%f\", amount); break;\n    cas", "e'm'", ":printf(\"应付款：%f\", amount*", "0.95", "); break;\n    cas", "e'e'", ":printf(\"应付款：%f\", amount*", "0.9", "); break;\n    ", "default", ":printf(\"error\\n\");\n    }\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch语句中case后面的值必须是常量。因为switch语句中&amp;#xff0c;会根据case标签后面的常量值&amp;#xff0c;生成跳转表&amp;#xff0c;只经过少数次数的比较&amp;#xff0c;就可以跳到对应标签下面&amp;#xff1b;如果允许变量&amp;#xff0c;switch对于一个数据也只能从头到尾地进行比较&amp;#xff0c;这就失去了意义&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch表达式可以含参吗", ["就像是这样", "switch(A)", "{", "case A<0:printf(“T”)；", "default:printf(“F”);", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf语句放在 I2&amp;#61;I1/100000前面&lt;br /&gt;还有case和数字之间要有空格&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于谭浩强第四章第十题的一些疑问", ["我自己写了这个程序，但是在switch语句中不论输入什么值，都会直接跳到default那儿，这是怎么回事，应该怎么改呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;time.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;  \n\nint CreateSocal()\n{\n    static int sran &amp;#61; 50;\n    srand(time(NULL) &amp;#43; (sran&amp;#43;&amp;#61;50));\n    int c &amp;#61; rand() % 6 &amp;#43; 1;\n    return c;\n}\nint main()\n{\n    int gameover &amp;#61; 0;\n    int c &amp;#61; CreateSocal();\n    int c2 &amp;#61; CreateSocal();\n\n    switch(c&amp;#43;c2)\n    {\n        case 7:\n        case 11:\n            gameover &amp;#61; 1;\n            printf(&amp;#34;Player rolled %d &amp;#43; %d &amp;#61; %d\\nPlayer wins\\n&amp;#34;, c, c2, c &amp;#43; c2);\n            break;\n        case 2:\n        case 3:\n        case 12:\n            gameover &amp;#61; 1;\n            printf(&amp;#34;Player rolled %d &amp;#43; %d &amp;#61; %d\\nPlayer failed\\n&amp;#34;, c, c2, c &amp;#43; c2);\n            break;\n        default:\n            printf(&amp;#34;Player rolled %d &amp;#43; %d &amp;#61; %d\\nPoint is %d\\n&amp;#34;, c, c2, c&amp;#43;c2, c&amp;#43;c2);\n            break;\n    }\n\n    if (gameover &amp;#61;&amp;#61; 1)\n    {\n        getchar();\n        return 0;\n    }\n\n    int n &amp;#61; 0, n2 &amp;#61; 0;\n    for (int i &amp;#61; 0; i &amp;lt; 7; i&amp;#43;&amp;#43;)\n    {\n        n&amp;#61;CreateSocal();\n        n2&amp;#61;CreateSocal();\n        if ( (n &amp;#43; n2 ) &amp;#61;&amp;#61; (c&amp;#43;c2))\n        {\n            printf(&amp;#34;Player rolled %d &amp;#43; %d &amp;#61; %d\\nPlayer wins\\n&amp;#34;, n, n2, n &amp;#43; n2);\n            getchar();\n            return 0;\n        }\n        else\n        {\n            printf(&amp;#34;Player rolled %d &amp;#43; %d &amp;#61; %d\\n&amp;#34;, n, n2, n &amp;#43; n2);\n        }\n    }\n    printf(&amp;#34;Player failed\\n&amp;#34;);\n    getchar();\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["掷骰子游戏，谢谢各位大佬", ["骰子游戏（作业）", "\n编写程序模拟掷骰子游戏。已知掷骰子游戏的游戏规则为：每个骰子有6面，这些面包含1、2、3、4、5、6个点，投两枚骰子之后，计算点数之和。如果第一次投的点数和为7或11，则游戏者获胜；如果第一次投的点数和为2、3或12，则游戏者输；如果第一次投的点数和为4、5、6、8、9或10，则将这个和作为游戏者获胜需要掷出的点数，继续投骰子，直到赚到该点数时算是游戏者获胜。如果投掷7次仍未赚到该点数，则游戏者输。", "\n验证结果如下", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入分数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;grade);\n    grade &amp;#61; grade/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(grade){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E&amp;#xff01;&amp;#34;&lt;/span&gt;); \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D&amp;#xff01;&amp;#34;&lt;/span&gt;); \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:    \n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#xff01;&amp;#34;&lt;/span&gt;); \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#xff01;&amp;#34;&lt;/span&gt;); \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#xff01;&amp;#34;&lt;/span&gt;); \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            \n    }\n    \n} \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入分数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;grade);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grade&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E&amp;#xff01;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grade&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt; &amp;amp;&amp;amp; grade&amp;lt;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D&amp;#xff01;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grade&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt; &amp;amp;&amp;amp; grade&amp;lt;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#xff01;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grade&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt; &amp;amp;&amp;amp; grade&amp;lt;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#xff01;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#xff01;&amp;#34;&lt;/span&gt;);        \n    }\n    \n} \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["这个该怎么弄，求帮助", ["输入学生的成绩,并按下面的等级分类输出该学生的成绩等级，使用if语句", "和switch语句两种方法实现。", "90—100分: A", "80—89分：B", "70—79分：C", "60—69分：D", "60分以下：E"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;if you want to show content after select then update this code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; &amp;lt;?php\nsession_start();\n$page = null;\nif (isset($_POST['page'])) {\n    $page = $_POST['page'];\n    $_SESSION['page'] = $page;\n} else {\n    $page = $_SESSION['page'];\n}\n\n?&amp;gt;\n    &amp;lt;form name=\"myform\" action=\"\" method=\"post\"&amp;gt;\n        &amp;lt;select name=\"page\" onchange=\"this.form.submit()\"&amp;gt;\n            &amp;lt;option value=\"page1\"&amp;lt;?php if ($page == \"page1\") {\n                echo \" selected\";\n            } ?&amp;gt;&amp;gt;Page 1\n            &amp;lt;/option&amp;gt;\n            &amp;lt;option value=\"page2\"&amp;lt;?php if ($page == \"page2\") {\n                echo \" selected\";\n            } ?&amp;gt;&amp;gt;Page 2\n            &amp;lt;/option&amp;gt;\n            &amp;lt;option value=\"page3\"&amp;lt;?php if ($page == \"page3\") {\n                echo \" selected\";\n            } ?&amp;gt;&amp;gt;Page 3\n            &amp;lt;/option&amp;gt;\n        &amp;lt;/select&amp;gt;\n    &amp;lt;/form&amp;gt;\n\n&amp;lt;?php\nswitch ($page) {\n    case 'page3':\n        include_once('/path/to/page3content.php');\n        break;\n    case 'page2':\n        include_once('/path/to/page2content.php');\n        break;\n    case 'page1':\n        include_once('/path/to/page1content.php');\n        break;\n    default:\n        include_once('/path/to/defaultcontent.php');\n        break;\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP使用<select>更改内容", ["\n\n", "I have select menu and I want to change content when I change values like jquery but with php. I find this in answers but it doesn't work.", "\n\n", "<?php\n$page = null;\nif(isset($_POST['page'])){\n$page = $_POST['page'];\n}\nswitch($page){\ncase 'page3': include_once('/path/to/page3content.php'); break;\ncase 'page2': include_once('/path/to/page2content.php'); break;\ncase 'page1': include_once('/path/to/page1content.php'); break;\ndefault: include_once('/path/to/defaultcontent.php'); break;\n}\n?>\n<form name=\"myform\" action=\"\" method=\"post\">\n<select name=\"page\" onchange=\"this.form.submit()\">\n    <option value=\"page1\"<?php if($page == \"page1\"){ echo \" selected\"; }?>>Page 1</option>\n    <option value=\"page2\"<?php if($page == \"page2\"){ echo \" selected\";}?>>Page 2</option>\n    <option value=\"page3\"<?php if($page == \"page3\"){ echo \" selected\";}?>>Page 3</option>\n</select>\n", "\n\n", "\n\n", "EDIT: The problem was in my browser. Now content is show before my form I want content to show after ", "</select>", " How to do this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Thanks for the help everyone, I figured it out! I needed to push arrays onto the $rows array instead of the values. I changed this section of code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$rows = array();\n    while ($row = $results-&amp;gt;fetchAssoc()) {\n        $rows[] = $row['title'];\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$rows = array();\n    while ($row = $results-&amp;gt;fetchAssoc()) {\n        $rows[] = array($row['title']);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在theme_table（）中为foreach（）提供的参数无效但我传递的是有效数组？", ["\n\n", "Ok, so I'm very new to Drupal and I'm trying to create a custom module that generates a page that the user can navigate to. When the user clicks on the page, I'm trying to retrieve the titles of all the content pieces from the database and arrange them in a table using table_theme. Everything is working except the generating of the rows in the table. It's giving me this message at the top of the page: ", "\n\n", "\"Warning: Invalid argument supplied for foreach() in theme_table() (line 2107 of /srv/bindings/4d0bbd3c7be847abb26f62e0dacbcc24/code/includes/theme.inc).\"", "\n\n", "This message appears once for each title that I retrieve from the database. Here is my content_titles.module file (my custom module file):", "\n\n", "<?php\n\n/**\n * @file\n * A module that creates a page to display all existing content titles\n */\n\n  /**\n   * Implements hook_help()\n   *\n   * Displays help and module information\n   *\n   * @param path\n   *    Which path of the site we're using to display help\n   * @param arg\n   *    Array that holds the current path as returned from arg() function\n   */\n  function content_titles_help($path, $arg) {\n    switch ($path) {\n        case \"admin/help#content_titles\":\n            return '' . t(\"Displays all existing content titles \n                on an overview page\") . '';\n            break;\n    }\n  }\n\n  /**\n   * Implements hook_menu()\n   * \n   * Enables the module to register a link to be placed in a menu\n   */\n  function content_titles_menu() {\n\n    $items['test/content_titles'] = array(\n        'title' => 'Overview Test Page',\n        'page callback' => 'content_titles_simple',\n        'access callback' => TRUE,\n        'expanded' => TRUE,\n        );\n\n    return $items;\n  }\n\n  /**\n   * Constructs the Content Titles page\n   */\n  function content_titles_simple() {\n    return array('#markup' => create_content_table());\n  }\n\n  /**\n   * This function will create the table to hold the content titles in\n   */\n  function create_content_table() {\n\n    // Retrieve content titles from the database\n    $results = db_query('SELECT title FROM {node}');\n\n    $header = array('Content Titles');\n\n    $rows = array();\n    while ($row = $results->fetchAssoc()) {\n        $rows[] = $row['title'];\n    }\n\n    print_r($rows); // FOR DEBUGGING PURPOSES\n\n    $output = theme('table', array('header' => $header,\n                                    'rows' => $rows));\n\n    return $output;     \n  }\n", "\n\n", "The problem appears to be with my use of the theme function. I don't see how any of my arguments are invalid though. I'm passing the theme type of 'table' and two arrays that I've checked aren't empty (that's why I use print_r to print the array that I store my titles from the database in). I'm pretty stumped here. Any idea what the problem could be?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;From &lt;a href=\"http://golangtutorials.blogspot.com/2011/06/control-structures-go-switch-case.html\" rel=\"noreferrer\"&gt;this Golang tutorial&lt;/a&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The code block of &lt;code&gt;default&lt;/code&gt; is executed if none of the other &lt;code&gt;case&lt;/code&gt; blocks match&lt;/li&gt;\n&lt;li&gt;the &lt;code&gt;default&lt;/code&gt; block can be anywhere within the &lt;code&gt;switch&lt;/code&gt; block, and not necessarily last in lexical order&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["go中的switch评估序列", ["\n\n", "I am learning Go language by reading \"Effective Go\". ", "\n\n", "I found a example about type switch:", "\n\n", "var t interface{}\nt = functionOfSomeType()\nswitch t := t.(type) {\ndefault:\n    fmt.Printf(\"unexpected type %T\n\", t)     // %T prints whatever type t has\ncase bool:\n    fmt.Printf(\"boolean %t\n\", t)             // t has type bool\ncase int:\n    fmt.Printf(\"integer %d\n\", t)             // t has type int\ncase *bool:\n    fmt.Printf(\"pointer to boolean %t\n\", *t) // t has type *bool\ncase *int:\n    fmt.Printf(\"pointer to integer %d\n\", *t) // t has type *int\n}\n", "\n\n", "My understanding is the cases in ", "switch", " is evaluated from top to bottom and stop at a match condition. So isn't the example about would always stop at ", "default", " and print \"unexpected type ...\"?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch得有default跳出&lt;br /&gt;不然一个case都不符合时会出错&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["怎么解决switch函数的鲁棒性？", ["switch函数当输入一个字符是运行出死循环，怎么解决？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Updated response to updated question: \nmodify \"a.php\" and prefix a return infront of the \"b.php\" include:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return include(\"b.php\");\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.php.net/manual/en/function.include.php\" rel=\"nofollow\"&gt;http://www.php.net/manual/en/function.include.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Handling Returns: It is possible to\n  execute a return() statement inside an\n  included file in order to terminate\n  processing in that file and return to\n  the script which called it. Also, it's\n  possible to return values from\n  included files. You can take the value\n  of the include call as you would a\n  normal function. This is not, however,\n  possible when including remote files\n  unless the output of the remote file\n  has valid PHP start and end tags (as\n  with any local file). You can declare\n  the needed variables within those tags\n  and they will be introduced at\n  whichever point the file was included.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;simple include()'s within your case/break sections?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch($var)\n{\n case 1:\n   include('case_1.php');\n   break;\n case 2:\n   include('case_2.php');\n   break;\n default:\n   include('case_default.php');\n  break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["php  - 在不同的文件中拆分开关案例", ["\n\n", "I have a php file in which i am using a really very long switch case. I want to split the cases in different files (keep logically connected cases in 1 file). ", "\n\n", "EDIT: Sorry everyone it was my code that was causing problem. The switch case was working as expected.", "\n\n", "file -> a.php", "\n\n", "echo \"<br>RES = \".test(1);\n\nfunction test($value) {\n    switch($value) {\n        case (1 || 2):\n                include(\"b.php\");\n                            **return $temp;**\n                break;\n\n        default: echo \"error\";\n                return 3;\n                break;\n    }\n}\n", "\n\n", "file -> b.php", "\n\n", "switch($value) {\n\n    case 1: echo \"value is 1\";\n                    **$temp = 1;**\n            return 1;\n            break;\n\n    case 2: echo \"value is 2\";\n                    **$temp = 2;**\n                    return 2;\n                    break;\n}\n", "\n\n", "How do i get proper result? if the switch case of b.php is in a.php file then everything works fine.Any idea/suggestion on how to do this?", "\n\n", "If i add $temp (bold lines) then it works...", "\n\n", "Thanks for help in advance.", "\n\n", "Regards", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/574345996666195.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于c语言谭浩强版第四章第十题", ["我自己写了这个，但是调试出来在switch语句中不论输入什么值，下一步都是直接到default那里，这是为什么呢，应该怎么改呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这代码肯定是错的&lt;br /&gt;case 0; 这里如果是分号&amp;#xff0c;肯定编译不了。&lt;br /&gt;如果是冒号&amp;#xff0c;那么会从default穿越到case 0&amp;#xff0c;加上前面的&amp;#xff0c;一共m&amp;#43;&amp;#43;有3次。&lt;br /&gt;所以选择B&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言 Switch case", ["想知道推出答案的全过程˃ʍ˂", "第二个Switch里面的case后面什么都没有，但是后面还有程序要咋运行啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;首先一开始k被初始化为16&lt;/strong&gt;&lt;br /&gt;即 k &amp;#61; 16&lt;br /&gt;switch(k%3) 也就是 &lt;strong&gt;switch(16%3) &amp;#61; switch(1)&lt;/strong&gt;&lt;br /&gt;1 也就是要选择 case1 此时输出 one&lt;br /&gt;因为&lt;strong&gt;输出one以后&amp;#xff0c;没有break&amp;#xff1b;&lt;/strong&gt;因此也顺带着输出了two。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;还请帮忙点下采纳&amp;#xff01;感谢&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["😥这是为什么，有朋友解释吗", ["不太明白这个是这么得到的结果，请大家帮忙看看，最好能有详细的解释，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;Or any performance wise difference between two??&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Forget about the performance difference on this level- there may be a microscopic one, but you'll feel it only when doing hundreds of thousands of operations, if at all. &lt;code&gt;switch&lt;/code&gt;  is a construct for better code readability and maintainability: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($value) \n {\n case 1:   .... break;\n case 2:   .... break;\n case 3:   .... break;\n case 4:   .... break;\n case 5:   .... break;\n default:  .... break;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is mostly much more clean and readable than&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($value == 1) { .... }\nelseif ($value == 2) { .... }\nelseif ($value == 3) { .... }\nelseif ($value == 4) { .... }\nelseif ($value == 5) { .... }\nelse { .... }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; Inspired by Kuchen's comment, for completeness' sake some &lt;a href=\"http://www.phpbench.com/\" rel=\"noreferrer\"&gt;benchmarks&lt;/a&gt; (results will vary, it's a live one). Keep in mind that these are tests that run &lt;strong&gt;1,000 times&lt;/strong&gt;. The difference for a couple of &lt;code&gt;if&lt;/code&gt;'s is &lt;strong&gt;totally negligeable&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;if and elseif (using ==) &lt;strong&gt;174 µs&lt;/strong&gt; &lt;/li&gt;\n&lt;li&gt;if, elseif and else (using ==) &lt;strong&gt;223 µs&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;if, elseif and else (using ===) &lt;strong&gt;130 µs&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;switch / case &lt;strong&gt;183 µs&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;switch / case / default &lt;strong&gt;215 µs&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;Conclusion (from phpbench.com)&lt;/strong&gt;:&lt;/p&gt;\n  \n  &lt;p&gt;Using a switch/case or if/elseif is almost the same. Note that the test is unsing === (is exactly equal to) and is slightly faster then using == (is equal to).&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch和IF有什么区别？", ["\n\n", "I know this may be simple question but want to know every ones opinion on this.", "\n\n", "what is the difference between switch and IF function in PHP?? What I can see is where ever \"switch\" function uses \"IF\" function also applies there..correct me if I am wrong..", "\n\n", "Or any performance wise difference between two??", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;好像默认就是这样&amp;#xff0c;一开始我也以为是需要按对面才能拨动过去&amp;#xff0c;但是实际上按哪里都行&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["android studio 制作一个switch按钮后", ["android studio 制作一个switch按钮后，为什么点击按钮周围，按钮仍然会滑动？"]], "Tag": "程序设计"}
{"Answer": "粘贴错误太多，把代码放到代码片里。给你改了一部分：\r\n\r\n\r\n```\r\n class Sphere:public Circle//球 \r\n{\r\npublic:\r\n\tSphere(double r):Circle(r){}\r\n\tdouble surface(){return 4*radius*radius*PI;}\r\n\tdouble volume(){return (4/3.0)*PI*radius*radius*radius;}//修改\r\nprotected:\r\n\tdouble radius;\r\n\r\n};\r\nclass Cone:public Cylinder//圆锥 \r\n{\r\npublic:\r\n\tCone(double r,double h):Cylinder(r,h){}//修改\r\n\tdouble volume(){return (1/3.0)*(PI*r*r*h);}//修改\r\n\tdouble surface(){return PI*r*r+PI*r*sqrt(r*r+h*h);}\r\nprotected:\r\n\tdouble r,h;\r\n\r\n};\r\nclass Rectangle:public Shape//长方形 //51 7 C:\\Users\\Administrator\\Desktop\\未.cpp [Note] because the following virtual functions are pure within 'Rectangle':\r\n{\r\npublic:\r\n\tRectangle(double w,double h):width(w),height(h){}\r\n\tvirtual double area(){return width*height;}\r\nprotected:\r\n\tdouble width,height;\r\n};\r\nclass Cuboid//长方体 \r\n{\r\npublic:\r\n\tCuboid(double l,double w,double h):length(l),width(w),height(h){}\r\n\tdouble surface(){return 2*(length*width+length*height+width*height);}//修改\r\n\tdouble volume(){return length*width*height;}//修改\r\nprotected:\r\n\tdouble length,width,height;\r\n};\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["求大神帮忙改一下，改了好多次了", ["改了两天了，还是没改好，不知怎么改才好，错的地方有注释", "\n\n", "#include ", "\n#include ", "\n#include ", "\nusing namespace std;", "\n#define PI  3.1415", "\n\n", "class Shape", "\n{", "\n    public:", "\n        virtual double area()=0;", "\n        virtual double volume()=0;//11  18  C:\\Users\\Administrator\\Desktop\\未.cpp  [Note] virtual double Shape::volume()", "\n        virtual double surface()=0;//12 24  C:\\Users\\Administrator\\Desktop\\未.cpp  [Note] virtual double Shape::surface()", "\n};", "\nclass Circle:public Shape//圆形 ", "\n{", "\n    public:", "\n        Circle(double r):radius(r){}", "\n        virtual double area(){return PI*radius*radius;}", "\n        virtual double volume(){return 0;}", "\n        virtual double surface(){return 0;}", "\nprotected:", "\n    double radius;", "\n};", "\nclass Cylinder:public Circle//圆柱 //24   7   C:\\Users\\Administrator\\Desktop\\未.cpp  [Note] Cylinder::Cylinder(const Cylinder&)", "\n{", "\n    public:", "\n        Cylinder(double r,double h):Circle(r),height(h){}  //27 3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Note] Cylinder::Cylinder(double, double)", "\n        virtual double surface(){return PI*radius*2*height+PI*radius*radius*2;}", "\n        virtual double volume(){return PI*(radius*2)*height;}", "\n    protected:", "\n        double height;", "\n};", "\nclass Sphere:public Circle//球 ", "\n{", "\n    public:", "\n        Sphere(double r):Circle(r){}", "\n        double surface(){return 4*radius*radius*PI;}", "\n        double volume(){return (4/3)*PI*radius*radius*radius;}", "\n    protected:", "\n        double radius;", "\n};", "\nclass Cone:public Cylinder//圆锥 ", "\n{", "\n    public:", "\n        Cone(double r,double h):Cylinder(r),Cylinder(h){}//45   49  C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] no matching function for call to 'Cylinder::Cylinder(double&)'", "\n        double volume(){return (1/3)*(PI*r*r*h);}", "\n        double surface(){return PI*r*r+PI*r*sqrt(r*r+h*h);}", "\n    protected:", "\n       double r,h;", "\n};", "\nclass Rectangle:public Shape//长方形 //51    7   C:\\Users\\Administrator\\Desktop\\未.cpp  [Note] because the following virtual functions are pure within 'Rectangle':", "\n{", "\n    public:", "\n        Rectangle(double w,double h):width(w),height(h){}", "\n        virtual double area(){return width*height;}", "\n    protected:", "\n            double width,height;", "\n};", "\nclass Cuboid//长方体 ", "\n{", "\n    public:", "\n        Cuboid(double l,double w,double h):length(l),width(w),height(h){}", "\n        double surface(){return 2*(l*w+l*h+w*h);}", "\n        double volume(){return l*w*h;}//64  26  C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] 'l' was not declared in this scope", "\n    protected:", "\n        double length,width,height;", "\n};", "\nint main()", "\n{", "\n    while(true)", "\n    {", "\n        cout<<\"1.圆形\"<\n        cout\n        cout\n        cout\n        cout\n        cout\n        cout\n        int choice;", "\n        cin>>choice;", "\n        system(\"cls\");", "\n        if(choice==0)", "\n        break;", "\n        default://84    3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label not within a switch statement", "\n             cout << \"error\" ;", "\n             system(\"pause\");", "\n        system(\"cls\") ;", "\n        switch(choice)", "\n        case 1:{double r=0;", "\n            cout<<\"请输入圆形的半径：\";", "\n            cin>>r;", "\n            Circle circle(r);", "\n            cout<<\"圆形的面积：\"<\n            system(\"pause\");", "\n            system(\"cls\") ;", "\n            break;", "\n        } ", "\n        case 2:{double w=0,h=0;//98 3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label '2' not within a switch statement", "\n                cout\n                cout>h;", "\n                cout<<\"宽:\";cin>>w;", "\n                Rectangle rectangle(h,w);//102  15  C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] cannot declare variable 'rectangle' to be of abstract type 'Rectangle'", "\n                cout<<\"长方形的面积：\"<\n                system(\"pause\");", "\n                system(\"cls\") ; ", "\n            break;", "\n        }", "\n        case 3:{  //108 3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label '3' not within a switch statement", "\n            double l=0,w=0,h=0;", "\n            cout\n            cout>l;", "\n            cout<<\"宽：\";cin>>w;", "\n            cout<<\"高：\";cin>>h;", "\n            Cuboid cuboid(l,w,h);", "\n            cout<<\"长方体的表面积：\"<\n            cout\n            system(\"pause\");", "\n            system(\"cls\") ; ", "\n            break;", "\n        }", "\n        case 4:{//121   3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label '4' not within a switch statement", "\n            double r=0,h=0;", "\n            cout\n            cout>r;", "\n            cout<<\"高：\";cin>>h;", "\n            Cylinder cylinder(r,h);", "\n            cout<<\"圆柱的表面积：\"<\n            cout\n            system(\"pause\");", "\n            system(\"cls\") ;  ", "\n            break;", "\n        }", "\n        case 5:{//133   3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label '5' not within a switch statement", "\n            double r=0,h=0;", "\n            cout\n            cout>r;", "\n            cout<<\"高：\";cin>>h;", "\n            Cone cone(r,h);", "\n            cout<<\"圆锥的表面积：\"<\n            cout\n            system(\"pause\");", "\n            system(\"cls\") ; ", "\n            break;", "\n        }", "\n        case 6:{//145   3   C:\\Users\\Administrator\\Desktop\\未.cpp  [Error] case label '6' not within a switch statement", "\n            double r=0;", "\n            cout\n            cin>>r;", "\n            Sphere sphere(r);", "\n            cout<<\"圆球的表面积：\"<<sphere.area()<<endl;", "\n            cout<<\"圆球的体积：\"<<sphere.volume()<<endl;", "\n            system(\"pause\");", "\n            system(\"cls\") ;", "\n            break;", "\n        }", "\n\n", "}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有default项&amp;#xff0c;以及所有的case都匹配不到switch后括号的表达式的时候会跳过了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在什么情况下,switch会不执行里面的case,直接跳过整个switch Block", ["\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a;\n    ", "scanf", "(", "\"%d\"", ", &a);\n    ", "switch", " (a)\n    {\n    case1:", "printf", "(", "\"Monday\\n\"", "); ", "break", ";\n    case2:", "printf", "(", "\"Tuesday\\n\"", "); ", "break", ";\n    case3:", "printf", "(", "\"Wednesday\\n\"", "); ", "break", ";\n    ", "default", ":", "printf", "(", "\"error\\n\"", ");\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;src&lt;/code&gt; is a slice whose element type is &lt;code&gt;interface{}&lt;/code&gt;. So each element you obtain is of static type &lt;code&gt;interface{}&lt;/code&gt;, so their \"kind\" will be &lt;code&gt;reflect.Interface&lt;/code&gt;. Adding a new &lt;code&gt;reflect.Interface&lt;/code&gt; case will reveal that:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case reflect.Interface:\n    fmt.Println(\"value\", each.Interface(), \"is interface\")\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output will be (try it on the &lt;a href=\"https://play.golang.org/p/TY0l0KrWrIO\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;value noval is interface\nvalue 0 is interface\nvalue &amp;lt;nil&amp;gt; is nil\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want the \"wrapped\" element in the interface, use &lt;a href=\"https://golang.org/pkg/reflect/#Value.Elem\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;Value.Elem()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;} else if each.Kind() == reflect.Interface {\n    switch each.Elem().Kind() {\n    case reflect.String:\n        fmt.Println(\"value\", each.Interface(), \"is string\")\n    case reflect.Int, reflect.Int16:\n        fmt.Println(\"value\", each.Interface(), \"is int\")\n    default:\n        fmt.Println(\"value\", each.Interface(), \"is ?\")\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then output will be (try it on the &lt;a href=\"https://play.golang.org/p/31k3afRfehv\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;value noval is string\nvalue 0 is int\nvalue &amp;lt;nil&amp;gt; is nil\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also note that you're \"switching\" over the &lt;em&gt;kind&lt;/em&gt; of the values, not over their actual &lt;em&gt;types&lt;/em&gt;. What this means is that values of multiple types may end up in specific cases, like in this one:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type mystr string\nsrc := []interface{}{\"noval\", 0, nil, mystr(\"my\")}\nsrcType := reflect.ValueOf(src)\n\n// ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output of this will be (try it on the &lt;a href=\"https://play.golang.org/p/F84qLLlVcY2\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;value noval is string\nvalue 0 is int\nvalue &amp;lt;nil&amp;gt; is nil\nvalue my is string\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The value &lt;code&gt;mystr(\"my\")&lt;/code&gt; is detected as &lt;code&gt;string&lt;/code&gt;, because it is of &lt;code&gt;string&lt;/code&gt; &lt;em&gt;\"kind\"&lt;/em&gt;, but its type is not &lt;code&gt;string&lt;/code&gt; but &lt;code&gt;mystr&lt;/code&gt;. This may or may not be what you want. If you want to distinguish between a value of type &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;mystr&lt;/code&gt;, then you should \"switch\" over the actual &lt;em&gt;type&lt;/em&gt; of values like in this example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;} else if each.Kind() == reflect.Interface {\n    switch each.Elem().Type() {\n    case reflect.TypeOf(\"\"):\n        fmt.Println(\"value\", each.Interface(), \"is string\")\n    case reflect.TypeOf(0):\n        fmt.Println(\"value\", each.Interface(), \"is int\")\n    case reflect.TypeOf(mystr(\"\")):\n        fmt.Println(\"value\", each.Interface(), \"is mystr\")\n    default:\n        fmt.Println(\"value\", each.Interface(), \"is ?\")\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then output will be (try it on the &lt;a href=\"https://play.golang.org/p/InetxrB5QeI\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;value noval is string\nvalue 0 is int\nvalue &amp;lt;nil&amp;gt; is nil\nvalue my is mystr\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see &lt;code&gt;\"nova\"&lt;/code&gt; is detected as a value of type &lt;code&gt;string&lt;/code&gt;, and &lt;code&gt;mystr(\"my\")&lt;/code&gt; is properly detected as a value of type &lt;code&gt;mystr&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also note that for what you're trying to do, you don't need reflection, just use a &lt;a href=\"https://golang.org/ref/spec#Switch_statements\" rel=\"nofollow noreferrer\"&gt;type switch&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;src := []interface{}{\"noval\", 0, nil}\nfor _, v := range src {\n    switch v.(type) {\n    case string:\n        fmt.Println(\"value\", v, \"is string\")\n    case int:\n        fmt.Println(\"value\", v, \"is int\")\n    case nil:\n        fmt.Println(\"value\", v, \"is nil\")\n    default:\n        fmt.Println(\"value\", v, \"is ?\")\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output (try it on the &lt;a href=\"https://play.golang.org/p/P0wytfG4Yq6\" rel=\"nofollow noreferrer\"&gt;Go Playground&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;value noval is string\nvalue 0 is int\nvalue &amp;lt;nil&amp;gt; is nil\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["检查reflect.Kind接口{}返回无效结果", ["\n\n", "I'm have some confusion over golang reflect behaviour.", "\n\n", "So basically I have a slice named ", "src", " with type ", "[]interface{}", ". I would like to get the actual type of each element. This is what I did:", "\n\n", "src := []interface{}{\"noval\", 0, nil}\nsrcType := reflect.ValueOf(src)\n\nfor i := 0; i < srcType.Len(); i++ {\n    each := srcType.Index(i)\n\n    if each.Interface() == nil {\n        fmt.Println(\"value\", each.Interface(), \"is nil\")\n    } else {\n        switch each.Kind() {\n        case reflect.String:\n            fmt.Println(\"value\", each.Interface(), \"is string\")\n        case reflect.Int, reflect.Int16:\n            fmt.Println(\"value\", each.Interface(), \"is int\")\n        default:\n            fmt.Println(\"value\", each.Interface(), \"is ?\")\n        }\n    }\n}\n", "\n\n", "Output:", "\n\n", "value noval is ?\nvalue 0 is ?\nvalue <nil> is nil\n", "\n\n", "I don't understand why type of elements ", "\"noval\"", " is not detected as ", "string", ", instead the ", "default", " is called from the ", "switch", ". ", "\n\n", "Also the ", "0", " value should be identified as ", "reflect.Int", " but the ", "default", " is called again.", "\n\n", "Can somebody enlighten me please, thank you in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case后面要存break&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C++中的switch循环结构", ["char c＝'B'；", "switch(c){", "case'A':cout<<\"1\";", "case'B':cout<<\"2\";", "case'C':cout<<\"2\";", "default:cout<<\"4\"；", "}", "为什么答案是234"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;b.(string)&lt;/code&gt; is called a &lt;strong&gt;&lt;a href=\"https://golang.org/ref/spec#Type_assertions\"&gt;type assertion&lt;/a&gt;&lt;/strong&gt;. As written in &lt;strong&gt;&lt;a href=\"https://golang.org/doc/effective_go.html#interface_conversions\"&gt;Effective Go&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;A type assertion takes an interface value and extracts from it a value of the specified explicit type.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So, yes, the value you get from a type assertion is not an interface value, but is of the explicit type. You can also test if the type assertion was successful by adding an untyped boolean value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;s, ok := b.(string) // s is of type string\nif !ok {\n    // b did not contain a value of type string!\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;To explain further to clear out any possible misunderstanding:&lt;/p&gt;\n\n&lt;p&gt;A type assertion doesn't &lt;em&gt;\"tell Go that b is a string\"&lt;/em&gt; as you suggested. What it does is that it will, in run time, try to extract a string from &lt;code&gt;b&lt;/code&gt;, and panic if &lt;code&gt;b&lt;/code&gt; contains some other type (unless assigning the optional bool value).&lt;/p&gt;\n\n&lt;p&gt;The value that you get from the assertion will indeed be of type &lt;code&gt;string&lt;/code&gt;, allowing you to do things like slicing (you cannot slice an interface value) or checking its &lt;code&gt;len&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["。（data_type）方法到底调用/做什么？", ["\n\n", "I came a cross a piece of code that used ", ".(string)", " method. Not knowing what this is called I had difficulties searching for it.", "\n\n", "Here is my try to understand it:", "\n\n", "package main\n\nimport \"fmt\"\nimport \"reflect\"\n\nfunc main(){\n    var b interface{}\n    b = \"silly\"\n\n    fmt.Println(reflect.TypeOf(b.(string))) // we know that b \n                                            // is a string                     \n                                            // at compile time\n\n    fmt.Println(reflect.TypeOf(b))          // we do not\n\n}\n", "\n\n", "Result:", "\n\n", "string\nstring\n", "\n\n", "However, I think that ", "reflect.TypeOf", " takes place at run time, while ", ".(string)", " would tell the compiler that ", "b", " is indeed a string, and this could be used to tell the compiler that a variable is of certain type. Is my understanding right?", "\n\n", "goplayground", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;nacos2.0需要开放两个8848&amp;#xff08;nacos服务端口&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;spring&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt;\n  &lt;span class=\"hljs-attribute\"&gt;cloud&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;nacos&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt;\n      &lt;span class=\"hljs-attribute\"&gt;discovery&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;server-addr&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;xxx.xx.xxx.xxx:8848&lt;/span&gt;\n      &lt;span class=\"hljs-attribute\"&gt;config&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#服务器地址&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;server-addr&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;xxx.xx.xxx.xxx:8848&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["nacos未知原因连接关闭怎么处理？", ["问题遇到的现象和发生背景", "\n", "nacos2.0.3部署到云服务器上进行测试，APP端在调用接口时第一次会报连接关闭的错，第二次才能成功。", "\n", "问题相关代码，请勿粘贴截图", "\n", "我的配置是这样的（脱敏）：", "\n", "spring", ":", "\n  ", "cloud", ":", "\n    ", "nacos", ":", "\n      ", "discovery", ":", "\n        ", "server-addr", ":", " ", "xxx.xx.xxx.xxx:8848", "\n", "\n", "运行结果及报错内容", "\n", "报错信息如下：", "\n", "2022", "-", "08", "-", "03", " ", "12", ":", "17", ":", "30.070", " ERROR ", "[nacos-grpc-client-executor-1087]", "com", ".alibaba", ".nacos", ".common", ".remote", ".client", ".grpc", ".GrpcClient", ".printIfErrorEnabled", ":", "99", " -", "[1659497178272_192.168.0.218_60084]", "Request stream error, switch server,error={}\ncom", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".StatusRuntimeException", ": UNKNOWN: channel closed\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".Status", ".asRuntimeException", "(Status", ".java", ":", "533", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".stub", ".ClientCalls", "$StreamObserverToCallListenerAdapter", ".onClose", "(ClientCalls", ".java", ":", "442", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".PartialForwardingClientCallListener", ".onClose", "(PartialForwardingClientCallListener", ".java", ":", "39", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "23", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", "$SimpleForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "40", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".CensusStatsModule", "$StatsClientInterceptor", "$", "1", "$", "1", ".onClose", "(CensusStatsModule", ".java", ":", "700", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".PartialForwardingClientCallListener", ".onClose", "(PartialForwardingClientCallListener", ".java", ":", "39", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "23", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", "$SimpleForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "40", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".CensusTracingModule", "$TracingClientInterceptor", "$", "1", "$", "1", ".onClose", "(CensusTracingModule", ".java", ":", "399", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", ".closeObserver", "(ClientCallImpl", ".java", ":", "510", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", ".access$", "300", "(ClientCallImpl", ".java", ":", "66", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", ".close", "(ClientCallImpl", ".java", ":", "630", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", ".access$", "700", "(ClientCallImpl", ".java", ":", "518", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", "$", "1", "StreamClosed", ".runInternal", "(ClientCallImpl", ".java", ":", "692", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", "$", "1", "StreamClosed", ".runInContext", "(ClientCallImpl", ".java", ":", "681", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ContextRunnable", ".run", "(ContextRunnable", ".java", ":", "37", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".SerializingExecutor", ".run", "(SerializingExecutor", ".java", ":", "123", ")\n        at java", ".util", ".concurrent", ".ThreadPoolExecutor", ".runWorker", "(ThreadPoolExecutor", ".java", ":", "1149", ")\n        at java", ".util", ".concurrent", ".ThreadPoolExecutor", "$Worker", ".run", "(ThreadPoolExecutor", ".java", ":", "624", ")\n        at java", ".lang", ".Thread", ".run", "(Thread", ".java", ":", "750", ")\nCaused by: java", ".nio", ".channels", ".ClosedChannelException", ": null\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".Utils", ".statusFromThrowable", "(Utils", ".java", ":", "202", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".NettyClientHandler", ".onConnectionError", "(NettyClientHandler", ".java", ":", "485", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".Http2ConnectionHandler", ".onError", "(Http2ConnectionHandler", ".java", ":", "641", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".DefaultHttp2ConnectionEncoder", ".writeHeaders", "(DefaultHttp2ConnectionEncoder", ".java", ":", "225", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".DecoratingHttp2FrameWriter", ".writeHeaders", "(DecoratingHttp2FrameWriter", ".java", ":", "53", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".StreamBufferingEncoder", ".writeHeaders", "(StreamBufferingEncoder", ".java", ":", "157", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".StreamBufferingEncoder", ".writeHeaders", "(StreamBufferingEncoder", ".java", ":", "141", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".NettyClientHandler", ".createStreamTraced", "(NettyClientHandler", ".java", ":", "571", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".NettyClientHandler", ".createStream", "(NettyClientHandler", ".java", ":", "554", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".NettyClientHandler", ".write", "(NettyClientHandler", ".java", ":", "315", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".invokeWrite0", "(AbstractChannelHandlerContext", ".java", ":", "716", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".invokeWrite", "(AbstractChannelHandlerContext", ".java", ":", "708", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".write", "(AbstractChannelHandlerContext", ".java", ":", "791", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".write", "(AbstractChannelHandlerContext", ".java", ":", "701", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".DefaultChannelPipeline", ".write", "(DefaultChannelPipeline", ".java", ":", "1026", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannel", ".write", "(AbstractChannel", ".java", ":", "288", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".WriteQueue", "$AbstractQueuedCommand", ".run", "(WriteQueue", ".java", ":", "200", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".WriteQueue", ".flush", "(WriteQueue", ".java", ":", "115", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".WriteQueue", ".access$", "000", "(WriteQueue", ".java", ":", "34", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".grpc", ".netty", ".WriteQueue$", "1", ".run", "(WriteQueue", ".java", ":", "46", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".util", ".concurrent", ".AbstractEventExecutor", ".safeExecute", "(AbstractEventExecutor", ".java", ":", "163", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".util", ".concurrent", ".SingleThreadEventExecutor", ".runAllTasks", "(SingleThreadEventExecutor", ".java", ":", "416", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".nio", ".NioEventLoop", ".run", "(NioEventLoop", ".java", ":", "515", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".util", ".concurrent", ".SingleThreadEventExecutor$", "5", ".run", "(SingleThreadEventExecutor", ".java", ":", "918", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".util", ".internal", ".ThreadExecutorMap$", "2", ".run", "(ThreadExecutorMap", ".java", ":", "74", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".util", ".concurrent", ".FastThreadLocalRunnable", ".run", "(FastThreadLocalRunnable", ".java", ":", "30", ")\n        ... ", "1", " common frames omitted\nCaused by: java", ".nio", ".channels", ".ClosedChannelException", ": null\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannel", "$AbstractUnsafe", ".newClosedChannelException", "(AbstractChannel", ".java", ":", "955", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannel", "$AbstractUnsafe", ".write", "(AbstractChannel", ".java", ":", "863", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".DefaultChannelPipeline", "$HeadContext", ".write", "(DefaultChannelPipeline", ".java", ":", "1378", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".invokeWrite0", "(AbstractChannelHandlerContext", ".java", ":", "716", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".invokeWrite", "(AbstractChannelHandlerContext", ".java", ":", "708", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".write", "(AbstractChannelHandlerContext", ".java", ":", "791", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".channel", ".AbstractChannelHandlerContext", ".write", "(AbstractChannelHandlerContext", ".java", ":", "701", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".DefaultHttp2FrameWriter", ".writeHeadersInternal", "(DefaultHttp2FrameWriter", ".java", ":", "528", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".DefaultHttp2FrameWriter", ".writeHeaders", "(DefaultHttp2FrameWriter", ".java", ":", "268", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".Http2OutboundFrameLogger", ".writeHeaders", "(Http2OutboundFrameLogger", ".java", ":", "60", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".netty", ".shaded", ".io", ".netty", ".handler", ".codec", ".http2", ".DefaultHttp2ConnectionEncoder", ".writeHeaders", "(DefaultHttp2ConnectionEncoder", ".java", ":", "208", ")\n        ... ", "23", " common frames omitted\n", "2022", "-", "08", "-", "03", " ", "12", ":", "18", ":", "30.227", " ERROR ", "[nacos-grpc-client-executor-1114]", "com", ".alibaba", ".nacos", ".common", ".remote", ".client", ".grpc", ".GrpcClient", ".printIfErrorEnabled", ":", "99", " -", "[1659500250080_192.168.0.218_33332]", "Request stream error, switch server,error={}\ncom", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".StatusRuntimeException", ": UNAVAILABLE: Network closed ", "for", " unknown reason\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".Status", ".asRuntimeException", "(Status", ".java", ":", "533", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".stub", ".ClientCalls", "$StreamObserverToCallListenerAdapter", ".onClose", "(ClientCalls", ".java", ":", "442", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".PartialForwardingClientCallListener", ".onClose", "(PartialForwardingClientCallListener", ".java", ":", "39", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "23", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", "$SimpleForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "40", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".CensusStatsModule", "$StatsClientInterceptor", "$", "1", "$", "1", ".onClose", "(CensusStatsModule", ".java", ":", "700", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".PartialForwardingClientCallListener", ".onClose", "(PartialForwardingClientCallListener", ".java", ":", "39", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "23", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".ForwardingClientCallListener", "$SimpleForwardingClientCallListener", ".onClose", "(ForwardingClientCallListener", ".java", ":", "40", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".CensusTracingModule", "$TracingClientInterceptor", "$", "1", "$", "1", ".onClose", "(CensusTracingModule", ".java", ":", "399", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", ".closeObserver", "(ClientCallImpl", ".java", ":", "510", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", ".access$", "300", "(ClientCallImpl", ".java", ":", "66", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", ".close", "(ClientCallImpl", ".java", ":", "630", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", ".access$", "700", "(ClientCallImpl", ".java", ":", "518", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", "$", "1", "StreamClosed", ".runInternal", "(ClientCallImpl", ".java", ":", "692", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ClientCallImpl", "$ClientStreamListenerImpl", "$", "1", "StreamClosed", ".runInContext", "(ClientCallImpl", ".java", ":", "681", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".ContextRunnable", ".run", "(ContextRunnable", ".java", ":", "37", ")\n        at com", ".alibaba", ".nacos", ".shaded", ".io", ".grpc", ".internal", ".SerializingExecutor", ".run", "(SerializingExecutor", ".java", ":", "123", ")\n        at java", ".util", ".concurrent", ".ThreadPoolExecutor", ".runWorker", "(ThreadPoolExecutor", ".java", ":", "1149", ")\n        at java", ".util", ".concurrent", ".ThreadPoolExecutor", "$Worker", ".run", "(ThreadPoolExecutor", ".java", ":", "624", ")\n        at java", ".lang", ".Thread", ".run", "(Thread", ".java", ":", "750", ")\n", "\n", "我的解答思路和尝试过的方法", "\n", "根据一些文档，我尝试的解决方案是1：开放云服务器的7848,8848,9848,9849四个端口，2：nginx确定配置为tcp转发。", "\n", "我想要达到的结果", "\n", "我认为是nacos的健康监测或心跳没有生效，但是云服务器的端口都已经开放，请问还有什么原因会造成这种问题？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/182940487046188.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;看我这么认真的份上采纳一下哦&amp;#xff01;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;所有的case后都没有 break,当i&amp;#61; 0 跳到default,输出0&amp;#xff1b;当i到1时 case 1 后面的三个printf都执行&lt;br /&gt;所以会有三个一 ,当i到2时 case 2 后面的两个printf都执行&lt;br /&gt;所以会有两个2&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["程序运行的结果为什么是011122", ["#include <stdio.h>", "void main()", "{int i;for(i=0;i<3;i++)", "        switch(i){case 1:printf(\"%d\",i);case 2:printf(\"%d\",i);default:printf(\"%d\",i);}", "}"]], "Tag": "程序设计"}
{"Answer": "两个程序都有问题，第一个根本没法编译\r\n\r\n\r\n```\r\n #include \"stdio.h\"\r\n\r\nint main()\r\n{\r\nint year,month,day,days2=0,days=0,days101=0;\r\nscanf(\"%d %d %d\",&amp;year,&amp;month,&amp;day);\r\nif(((year%4==0)&amp;&amp;year%100!=0)||(year%400==0))\r\ndays2=29;\r\nelse\r\ndays2=28;\r\nswitch(month - 1)\r\n{\r\ncase 12:\r\ndays=days+31;\r\ncase 11:\r\ndays=days+30;\r\ncase 10:\r\ndays=days+31;\r\ncase 9:\r\ndays=days+30;\r\ncase 8:\r\ndays=days+31;\r\ncase 7:\r\ndays=days+31;\r\ncase 6:\r\ndays=days+30;\r\ncase 5:\r\ndays=days+31;\r\ncase 4:\r\ndays=days+30;\r\ncase 3:\r\ndays=days+31;\r\ncase 2:\r\ndays=days+days2;\r\ncase 1:\r\ndays=days+31;\r\n}\r\ndays101=31+days2+31+30+31+30+31+31+30+1;\r\ndays=days+day;\r\nif(days&lt;days101) printf(\"%d days shy\",days101-days); //修改这里\r\nelse if(days&gt;=days101)\r\nprintf(\"over %d days\",days-days101);\r\nreturn 0;\r\n}\r\n```\r\n\r\n第二个程序\r\n\r\n\r\n```\r\n#include \"stdio.h\"\r\n\r\nint main()\r\n{\r\nint year,month,day,days=0,days2=0,days101=0;\r\nscanf(\"%d %d %d\",&amp;year,&amp;month,&amp;day);\r\nif((year%4==0&amp;&amp;year%100!=0)||(year%400==0))\r\n{\r\ndays2=29;\r\n}\r\nelse\r\n{\r\ndays2=28;\r\n}\r\nswitch(month-1)\r\n{\r\ncase 12: //这里和以下都缺少空格\r\ndays=days+31;\r\ncase 11:\r\ndays=days+30;\r\ncase 10:\r\ndays=days+31;\r\ncase 9:\r\ndays=days+30;\r\ncase 8:\r\ndays=days+31;\r\ncase 7:\r\ndays=days+31;\r\ncase 6:\r\ndays=days+30;\r\ncase 5:\r\ndays=days+31;\r\ncase 4:\r\ndays=days+30;\r\ncase 3:\r\ndays=days+31;\r\ncase 2:\r\ndays=days+days2;\r\ncase 1:\r\ndays=days+31;\r\n}\r\ndays=days+day;\r\ndays101=31+days2+31+30+31+30+31+31+30+1;\r\nif(days&gt;=days101)\r\n{\r\nprintf(\"over %d days\",days-days101);\r\n}\r\nelse\r\n{\r\nprintf(\"%d days shy\",days101-days);\r\n}\r\nreturn 0;\r\n}\r\n```\r\n\r\n因为你没有说你的程序打算干嘛，以上讨论仅仅是综合两个错误的程序给出的最可能的正确的版本。如果还有问题请追问。\r\n如果问题解决，请点我回答右边的采纳。\r\n\r\n希望你学会提问，回答你这种描述不清的问题特别艰难。", "Konwledge_Point": "switch语句及其应用", "Question": ["新人求解两个程序为什么输出不同？", ["#include", "\nint main()", "\n{", "\nint year,month,day,days2=0,days=0,days101=0;", "\nscanf(\"%d %d %d\",&year,&month,&day);", "\nif(((year%4==0)&&year%100!=0)||(year%400==0))", "\ndays2=29;", "\nelse", "\ndays2=28;", "\nswitch(month - 1)", "\n{", "\ncase 12:", "\ndays=days+31;", "\ncase 11:", "\ndays=days+30;", "\ncase 10:", "\ndays=days+31;", "\ncase 9:", "\ndays=days+30;", "\ncase 8:", "\ndays=days+31;", "\ncase 7:", "\ndays=days+31;", "\ncase 6:", "\ndays=days+30;", "\ncase 5:", "\ndays=days+31;", "\ncase 4:", "\ndays=days+30;", "\ncase 3:", "\ndays=days+31;", "\ncase 2:", "\ndays=days+days2;", "\ncase 1:", "\ndays=days+31;", "\n}", "\ndays101=31+days2+31+30+31+30+31+31+30+1;", "\ndays=days+day;", "\nif(days printf(\"%d days shy\",days101-days);", "\nelse if(days>=days101)", "\nprintf(\"over %d days\",days-days101);", "\nreturn 0;", "\n}", "\n\n", "#include", "\nint main()", "\n{", "\nint year,month,day,days=0,days2=0,days101=0;", "\nscanf(\"%d %d %d\",&year,&month,&day);", "\nif((year%4==0&&year%100!=0)||(year%400==0))", "\n{", "\ndays2=29;", "\n}", "\nelse", "\n{", "\ndays2=28;", "\n}", "\nswitch(month-1)", "\n{", "\ncase12:", "\ndays=days+31;", "\ncase11:", "\ndays=days+30;", "\ncase10:", "\ndays=days+31;", "\ncase9:", "\ndays=days+30;", "\ncase8:", "\ndays=days+31;", "\ncase7:", "\ndays=days+31;", "\ncase6:", "\ndays=days+30;", "\ncase5:", "\ndays=days+31;", "\ncase4:", "\ndays=days+30;", "\ncase3:", "\ndays=days+31;", "\ncase2:", "\ndays=days+days2;", "\ncase1:", "\ndays=days+31;", "\n}", "\ndays=days+day;", "\ndays101=31+days2+31+30+31+30+31+31+30+1;", "\nif(days>=days101)", "\n{", "\nprintf(\"over %d days\",days-days101);", "\n}", "\nelse", "\n{", "\nprintf(\"%d days shy\",days101-days);", "\n}", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;prompt 这个函数返回的是字符串&amp;#xff0c;而你switch中case代码用的是number&amp;#xff0c;当然就匹配不到了。&lt;br /&gt;改成下面这样(将case 标签改成字符串)&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(xz){\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; cq &amp;#61; prompt(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入你要存入的钱数&amp;#39;&lt;/span&gt;);\n            xy &amp;#61; xy &amp;#43; cq;\n            prompt(&lt;span class=\"hljs-string\"&gt;&amp;#39;目前为&amp;#xff1a;&amp;#39;&lt;/span&gt;&amp;#43;xy&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;元&amp;#39;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;:\n           &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; qq &amp;#61; prompt(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入取出的钱数&amp;#39;&lt;/span&gt;);\n           xy &amp;#61; xy - qq;\n           prompt(&lt;span class=\"hljs-string\"&gt;&amp;#39;目前为&amp;#xff1a;&amp;#39;&lt;/span&gt;&amp;#43;xy&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;元&amp;#39;&lt;/span&gt;);\n           &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;也可以将prompt的返回值转换成number&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;xz&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;parseInt&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;prompt&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请选择序号&amp;#xff1a;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["js选择不了switch", ["选择不了", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "meta", " ", "name", "=", "\"viewport\"", " ", "content", "=", "\"width=device-width, initial-scale=1.0\"", ">", "\n    ", "<", "meta", " ", "http-equiv", "=", "\"X-UA-Compatible\"", " ", "content", "=", "\"ie=edge\"", ">", "\n    ", "<", "title", ">", "Document", "</", "title", ">", "\n", "</", "head", ">", "\n", "<", "script", ">", "\n    ", "var", " xy =", "100", ";\n    ", "var", " xz = ", "prompt", "(", "'请选择序号：'", ")\n    ", "switch", "(xz){\n        ", "case", " ", "1", ":\n            ", "var", " cq = ", "prompt", "(", "'请输入你要存入的钱数'", ");\n            xy = xy + cq;\n            ", "prompt", "(", "'目前为：'", "+xy+", "'元'", ");\n            ", "break", ";\n        ", "case", " ", "2", ":\n           ", "var", " qq = ", "prompt", "(", "'请输入取出的钱数'", ");\n           xy = xy - qq;\n           ", "prompt", "(", "'目前为：'", "+xy+", "'元'", ");\n           ", "break", ";\n    }\n    \n    ", "alert", "(xz);\n    \n    \n", "</", "script", ">", "\n", "<", "body", ">", "\n    \n", "</", "body", ">", "\n", "</", "html", ">", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Nobody ever answered, so I'll answer myself for posterity. :-)&lt;/p&gt;\n\n&lt;p&gt;This method works very well for a staged deployment of a new codebase over an old codebase. In our particular situation, we did the rollout using a method similar to the above. Initially, all users started with the old system and the rewrite map file was about 800K in size. The server served more than 100K pages with no noticeable difference in speed due to the new rewrite directives.&lt;/p&gt;\n\n&lt;p&gt;I was surprised that Apache didn't have to be restarted after making changes to remove entries from the file (the documentation implies this file is read only at startup). Apache picked up changes to the map right away so it must look at it on every request, or more likely check timestamps/checksums to see if it's different.&lt;/p&gt;\n\n&lt;p&gt;A similar technique could be used not only for deployment but for A/B testing especially in situations where the data structure isn't changing.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Web应用程序部署到有限的用户群", ["\n\n", "I'm trying to determine the best way of deploying new versions of an established web application. In the past, I've done it a couple different ways but this time we're looking to do something a little different/better. ", "\n\n", "We're using development/staging/production servers. After the development is done and the basic functionality is tested, we run the development code with an upgraded production database on the staging server. If our internal QA doesn't find problems in the staging environment, we make those changes live.", "\n\n", "That last step has been done in the following two ways:", "\n\n", "\n", "Upgrade the code and the database\nschema at a time of low usage, do a\nbit of testing to make sure the\nupgrades went OK, then cross fingers\nand hope the users don't find some\nbug that QA missed, always ready to\nput out fires or revert to the\nprevious version in case of major\nfailure.", "\n", "Create the new version of the\napplication at a different URL. Copy\nthe production database to a new\nversion, empty it, then copy over\ndata for selected users and have\nthem use the new URL. I.e., they\nwould access the application from\nwww2.example.com instead of\nwww.example.com. Slowly move every\nuser to the new version then switch\nthe urls back.", "\n", "\n", "This time I'm looking at doing something like a combination of the two methods. Basically, I'm thinking of moving a small number of users to the new service while keeping the same url.", "\n\n", "Here's what I'm considering doing in the virtual host. Map.txt would be generated/updated when the new users are moved over. (I looked at using the prg rewrite map but am afraid of apache hanging waiting for the script.)", "\n\n", "<VirtualHost *:80>\nServerAdmin webmaster@lotsa.net\nDocumentRoot /web/www.example.com\nServerName www.example.com\n\nRewriteEngine  on\n\nRewriteMap deploymentmap txt:/web/map.txt\n\nRewriteRule ^/id/([0-9]+)/(.*)$ ${deploymentmap:$1}/id/$1/$2\n\n</VirtualHost>\n\nmap.txt:\n\n10001 /web/www2.example.com/\n10002 /web/www2.example.com/\n10003 /web/www2.example.com/\n10004 /web/www2.example.com/\n10005 /web/www2.example.com/\n", "\n\n", "Are there any obvious flaws in this deployment strategy? Am I missing some simple and effective, less painful, upgrade method?", "\n\n", "Thanks in advance for any assistance.", "\n\n", "-Paul", "\n    "]], "Tag": "程序设计"}
{"Answer": "switch 只能用于确定的值&amp;#xff0c;而不是范围&amp;#xff01;\n范围的只能用if", "Konwledge_Point": "switch语句及其应用", "Question": ["java中if和switch有啥区别？", ["java中if和switch有啥区别？有点迷糊了，有人简单明了说下没？"]], "Tag": "程序设计"}
{"Answer": "回复chezunyin: 不好说，不同的处理器执行不同的指令花费的时间不同，这是其一，其二，遇到for循环，编译器会翻译成一个条件判断和一个跳转，switch也是如此。\r\n现代处理器用硬件预测这个if是否成立，并且先行执行后续指令。如果if执行出来和预测的不同，然后再走另一个分支。\r\n因此对于现代处理器来说，很难通过静态代码评判它的效率。\r\n通常我们可以反汇编编译器产生的代码，根据产生的指令条数大概估测，这个你可以自己去看。\r\n\r\n总之，你在学校学习的是那种没有缓存机制，也没有超标量多发射，更没有分支预测的8086，它完全和你用的处理器不是一码事了。", "Konwledge_Point": "switch语句及其应用", "Question": ["关于循环这两个代码哪个效率更高?", ["代码1:", "\ni=0;", "\nwhile(1)", "\n{", "\n    for(i=0;i<25;i++)", "\n    {", "\n        a=1;", "\n    }", "\n    for(;i<50;i++)", "\n    {", "\n        a=0;", "\n    }", "\n    i=0;", "\n}", "\n\n", "代码2:", "\ni=0;", "\nwhile(1)", "\n{", "\n    i++;", "\n        switch(i)", "\n        {", "\n            case 1:", "\n                a=1;", "\n                break;", "\n            case 25:", "\n                a=0;", "\n                break;", "\n            case 50:", "\n                        i=0;", "\n                break;", "\n            }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getvalue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (s)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;: value&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;: value&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;{&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;}&amp;#39;&lt;/span&gt;: value&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; value;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;isValid&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * s)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; result&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ; i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;getvalue&lt;/span&gt;(s[i])&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getvalue&lt;/span&gt;(s[&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]))\n        {\n            result &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            result&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["刚学C语言，switch case问题", ["在力扣上做题，遇到有效的括号，因为还没学到栈，就使用了switch case 尝试一下，结果如图，请问case是不能用字符串吗？还是什么其他的原因？", "\n", "\n", "int", " ", "getvalue", "(", "char", " s", ")", "\n    {\n    ", "int", " ", "value", ";\n    ", "switch", " (s)\n        {\n            ", "case", " (", "'('", "||", "')'", "): ", "value", "=", "1", ";", "break", ";\n            ", "case", " (", "'['", "||", "']'", "): ", "value", "=", "2", ";", "break", ";\n            ", "case", " (", "'{'", "||", "'}'", "): ", "value", "=", "3", ";", "break", ";\n            }\n    ", "return", " ", "value", ";\n    }\n\n", "bool", " ", "isValid", "(", "char", " * s", ")", "{\n    \n    ", "bool", " result=", "0", ";\n    ", "for", " (", "int", " i=", "0", " ; i<strlen(s)/", "2", " ;i++)\n        {\n        ", "if", "(getvalue(s[i])==getvalue(s[strlen(s)", "-1", "]))\n            {\n            result = ", "true", ";\n            }\n        ", "else", "\n            {\n            result=", "false", ";\n            ", "break", ";\n        }\n        }\n", "return", " result;\n}\n    \n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This format is shown in the &lt;a href=\"https://www.php.net/manual/en/control-structures.switch.php\" rel=\"noreferrer\"&gt;PHP docs&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (i) {\n    case 1:\n    case 3:\n        code block A;\n        break;\n    case 2:\n        code block B;\n        break;\n    default:\n        code block default;\n        break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["切换多个case语句", ["\n\n", "Can someone suggest me how can I replace the below code\nHow to rewrite the code in order to avoid the repeatation of the block ", "case 3:{code block A; break;}", "\n\n", "switch(i){\n  case 1:{code block A; break;}\n  case 2:{code block b; break;}\n  case 3:{code block A; break;}\n  default: {code block default; break;}\n}\n", "\n\n", "How to have combined code for case 1 & case 3", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;That's just not a good function. It should be three functions, &lt;code&gt;edit_name&lt;/code&gt;, &lt;code&gt;edit_manager&lt;/code&gt; and &lt;code&gt;edit_liscencedata&lt;/code&gt;. you can move all the stuff that repeats between cases into the constructor of the &lt;code&gt;Change&lt;/code&gt; class that you should define.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何避免大转换语句？", ["\n\n", "I have an internal application in which one function is containing too many switch cases. ", "\n\n", "This is developed in php.This specific function is used to write changes  to database and also to keep a history of individual field values. So what it does is have a case for each field as different things needs to be applied for different fields.", "\n\n", "switch ($item){  \n    case 'item1':  \n        do_something();  \n    case 'item2':  \n        do_something_different():  \n}\n", "\n\n", "Is there a design pattern to follow in such cases. A function for each item doesn't look so future proof either.", "\n\n", "Update:", " \n", "pastebin link", "\n    "]], "Tag": "程序设计"}
{"Answer": "static enum FieldType {\r\n\t\tNULL, VARCHAR, BOOLEAN, INTEGER, BIGINT, FLOAT, DOUBLE, NUMERIC, TIMESTAMP, SMALLINT, BINARY\r\n\t}\r\n\r\nprivate static FieldType getType(Object prepareParam) {\r\n\t\tif (prepareParam == null)\r\n\t\t\treturn FieldType.NULL;\r\n\t\treturn FieldType.valueOf(prepareParam.getClass().getSimpleName().toUpperCase());//找不到对应的类型，valueOf会参数异常错误：IllegalArgumentException\r\n\t}\r\n\r\n\r\n枚举是最好的方式", "Konwledge_Point": "switch语句及其应用", "Question": ["求对多if else的重构方法", ["这段代码摘自我的blog：", "http://loin.iteye.com/admin/blogs/745323", "\n感觉这种多if else的代码太丑了，请问如何重构", "\n   /**", "\n     * 返回参数的sql类型，这段代码很丑，如何改", "\n     *", "\n     * @param prepareParam", "\n     * @return", "\n     */", "\n    private static int getType(Object prepareParam) {", "\n        // TODO Auto-generated method stub", "\n        if (prepareParam == null)", "\n            return Types.NULL;", "\n        if (prepareParam instanceof String) {", "\n            return Types.VARCHAR;", "\n        } else if (prepareParam instanceof Boolean) {", "\n            return Types.BOOLEAN;", "\n        } else if (prepareParam instanceof Integer) {", "\n            return Types.INTEGER;", "\n        } else if (prepareParam instanceof Long) {", "\n            return Types.BIGINT;", "\n        } else if (prepareParam instanceof Float) {", "\n            return Types.FLOAT;", "\n        } else if (prepareParam instanceof Double) {", "\n            return Types.DOUBLE;", "\n        } else if (prepareParam instanceof BigDecimal) {", "\n            return Types.NUMERIC;", "\n        } else if (prepareParam instanceof Date) {", "\n            return Types.TIMESTAMP;", "\n        } else if (prepareParam instanceof Short) {", "\n            return Types.SMALLINT;", "\n        } else if (prepareParam instanceof InputStream) {", "\n            return Types.BINARY;", "\n        } else {", "\n            throw new RuntimeException(\"没有此类型\");", "\n        }", "\n    }", "\n谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch 本来就是要求整数&amp;#xff0c;不能是小数&amp;#xff0c;如果是小数则要取整。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["貌似switch无法实现两位小数啊，如何解决？", ["刚开始学编程一个月碰到的题，眼睁睁看着12点截止没做出来，所以浮点数、switch case、保留小数点两位这三个要素如何同时实现？貌似switch无法实现两位小数啊？"]], "Tag": "程序设计"}
{"Answer": "我没用过这个方法。\r\n```\r\n&lt;form:input path=\"dtel\" name = \"dtel\" id = \"dtel\"/&gt;\r\n文本框不就是文本框吗？\r\n&lt;input&gt;f&lt;/input&gt;\r\n```\r\n\r\n```\r\nfunction check(formID){\r\n    var dp = $('#' + formID).val();               直接var dp=('#dname ‘).val();   获取部门文本框值\r\n    if(dp.dname==\"\" || dp.dname == null){            判断if(dp==\"\"||dp==null)\r\n    alert(\"部门名称不能为空!\");\r\n    return false;\r\n    }\r\n    if(dp.dtel==\"\"|| dp.del == null){\r\n    alert(\"电话不能为空!\");\r\n    return false;\r\n    }\r\n}\r\n```", "Konwledge_Point": "switch语句及其应用", "Question": ["请教一下这个前端JSP页面数据校正的时候点提交没反应是什么问题", ["<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ taglib prefix=\"form\" uri=\"http://www.springframework.org/tags/form\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<base href=\"<%=basePath%>\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>添加部门</title>\n<script>\nfunction check(formID){\n    var dp = $('#' + formID).val();\n    if(dp.dname==\"\" || dp.dname == null){\n    alert(\"部门名称不能为空!\");\n    return false;\n    }\n    if(dp.dtel==\"\"|| dp.del == null){\n    alert(\"电话不能为空!\");\n    return false;\n    }\n}\n</script>\n</head>   \n\n<body>\n    <form:form modelAttribute=\"department\" id=\"formID\"  method=\"post\">\n    <fieldset>\n        <legend>添加部门</legend>\n        <p>\n            <label>部门名:</label>\n            <form:input path=\"dname\" name = \"dname\" id=\"dname\"/>\n        </p>\n        <p>\n            <label>电话:</label>\n           <form:input path=\"dtel\" name = \"dtel\" id = \"dtel\"/>\n        </p>\n        <p>\n            <label>描述:</label>\n            <form:textarea path=\"describe\" rows=\"5\"/>\n        </p>\n        <p>\n            <label>上级部门:</label>\n            <form:select path=\"superdepartment\"> \n                <option value=\"0\"/>请选择上级部门\n                <form:options items=\"${superdepartment }\" itemLabel=\"dname\" itemValue=\"id\"/>\n            </form:select>\n        </p>\n        <p id=\"buttons\">\n            <input id=\"reset\" type=\"reset\">\n            <input type=\"submit\" value=\"提交\" onclick=\"return check(formID)\"> \n        </p>\n    </fieldset>\n</form:form>\n</body>\n</html>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这问答版目前比较混乱&amp;#xff0c;我不知道你问是那种语言&amp;#xff1f;C#么&lt;br /&gt;如果是C#&amp;#xff0c;switch现在是个多义词。除了传统分支以外&amp;#xff0c;现在也能用模式匹配。&lt;/p&gt;\n&lt;p&gt;那么用模式匹配算不算呢&amp;#xff1f;&lt;br /&gt;&lt;a href=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/fundamentals/functional/pattern-matching?view&amp;#61;netframework-4.5.2\" id=\"textarea_1664348281385_1664348815392_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;关系模式的例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c#\"&gt;&lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; WaterState(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; tempInFahrenheit) &amp;#61;&amp;gt;\n    tempInFahrenheit &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;\n    {\n        (&amp;gt; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;) and (&amp;lt; &lt;span class=\"hljs-number\"&gt;212&lt;/span&gt;) &amp;#61;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;liquid&amp;#34;&lt;/span&gt;,\n        &amp;lt; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;solid&amp;#34;&lt;/span&gt;,\n        &amp;gt; &lt;span class=\"hljs-number\"&gt;212&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;gas&amp;#34;&lt;/span&gt;,\n        &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;solid/liquid transition&amp;#34;&lt;/span&gt;,\n        &lt;span class=\"hljs-number\"&gt;212&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;liquid / gas transition&amp;#34;&lt;/span&gt;,\n    };\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["利润奖金问题switch不用break", ["题目", "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高 于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可以提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "\n", "要求用switch ,但不能用break"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;emm。就是说&amp;#xff0c;按照你的意思&amp;#xff0c;就是写个方法&amp;#xff0c;遍历一个List列表呗。然后用swich代替if进行判断。保存在对象的字段里那就用隐式参数。OK&amp;#xff0c;顺着这个思路&amp;#xff0c;我们写一个类&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; help.List;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Iterator;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.List;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; ListTest\n{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; small;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; middle;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; big;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; huge;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; getSMBN(LinkedList&amp;lt;Integer&amp;gt; smbn)\n    {\n        Iterator&amp;lt;Integer&amp;gt; iterator &amp;#61; smbn.iterator();\n        &lt;span class=\"hljs-comment\"&gt;//一个特殊的值。用来统计总数量&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; quantity &amp;#61; smbn.&lt;span class=\"hljs-keyword\"&gt;size&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (iterator.hasNext())\n        {\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (iterator.&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;())\n            {\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.small&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.middle&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.big&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n                    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.huge&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;源List列表中共有small值&amp;#34;&lt;/span&gt; &amp;#43; small &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个;&amp;#34;&lt;/span&gt;);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;middle值&amp;#34;&lt;/span&gt; &amp;#43; middle &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个;&amp;#34;&lt;/span&gt;);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;big值&amp;#34;&lt;/span&gt; &amp;#43; big &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个;&amp;#34;&lt;/span&gt;);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;huge值&amp;#34;&lt;/span&gt; &amp;#43; huge &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个.&amp;#34;&lt;/span&gt;);\n        \n        &lt;span class=\"hljs-comment\"&gt;//清点数据是否遗漏&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; inventory &amp;#61; small &amp;#43; middle &amp;#43; big &amp;#43; huge;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (quantity &amp;#61;&amp;#61; inventory)\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;源列表共&amp;#34;&lt;/span&gt; &amp;#43; quantity &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个值,实际清点数量&amp;#34;&lt;/span&gt; &amp;#43; inventory &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个值,数据清点正确&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;源列表共&amp;#34;&lt;/span&gt; &amp;#43; quantity &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个值,实际清点数量&amp;#34;&lt;/span&gt; \n                    &amp;#43; inventory &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个值,大约遗漏了&amp;#34;&lt;/span&gt; \n                    &amp;#43; (quantity - inventory) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;个值&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;现在再写一个测试类测试程序&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;package help.List;\n\nimport java.util.LinkedList;\n\npublic class Test\n{\n    public static void main(String[] args)\n    {\n        LinkedList&amp;lt;Integer&amp;gt; list &amp;#61; new LinkedList&amp;lt;&amp;gt;();\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(1);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(2);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(3);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(2);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(2);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(1);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(4);\n        list.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(3);\n        ListTest test &amp;#61; new ListTest();\n        test.getSMBN(list);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;来看运行结果&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/373626390346138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;可以看到&amp;#xff0c;程序成功清点出来了。不过我并没有使用List类。因为我没有用过这个类。里面很多方法都不一样。不过思路应该还是一样的。你就把几个方法和参数改改应该就能用了&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用Java写一个switch问题", ["switch", "我们希望编写一个函数，统计一个 List 列表中的数值分布，其中 1 是 small，2 是 middle, 3 是 big，3以上都是 huge 。列表中的数值全部都在 1 到 5之间，编写程序在对象的 small, middle, big, huge 四个字段 保存正确的统计结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的hashset写到循环里面了&amp;#xff0c;每循环一次都重新new一个出来&lt;br /&gt;所以它里面永远只会有一个东西&lt;br /&gt;之前的都没了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch中的对象添加到集合失败", ["为什么switch中对象无法添加到集合中去", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "\n", "运行结果及报错内容", "\n", "case1:：", "中users.add（）没有把内容添加到HashSet"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;选a&amp;#xff0c;交换机有多种&amp;#xff0c;傻瓜式的交换机是没有ip的&amp;#xff0c;只需要传递以太网帧&amp;#xff0c;三层交换机有ip&amp;#xff1b;但是它们均不能转发ip包&amp;#xff0c;因为设计是用于链路层转发&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Switch 不能在互联网上转发数据包的原因是什么？", ["交换机不能在互联网上转发数据包的原因是什么？", "以下选项对的是？", "a-链路层不处理IP地址", "b-Switch只查看链路层信息", "c-Switch不处理IP地址"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Counter&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; small &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; middle &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; bug &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; huge &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//... getter methods&lt;/span&gt;\n \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;read&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;List&amp;lt;Integer&amp;gt; numbers&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;: numbers){\n            &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                small &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                middle &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                big &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n                huge &amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用Java解决一个switch问题", ["switch", "我们希望编写一个函数，统计一个 List 列表中的数值分布，其中 1 是 small，2 是 middle, 3 是 big，3以上都是 huge 。列表中的数值全部都在 1 到 5之间，编写程序在对象的 small, middle, big, huge 四个字段 保存正确的统计结果"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Switch only checks if the first condition is equal to the second, this way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (CONDITION) {\n    case CONDITION2:\n        echo \"CONDITION is equal to CONDITION2\";\n    break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you have to do it this way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch (true) {\n    case $totaltime &amp;lt;= 1: #This checks if true (first condition) is equal to $totaltime &amp;lt;= 1 (second condition), so if $totaltime is &amp;lt;= 1 (true), is the same as checking true == true.\n        echo \"That was fast!\";\n    break;\n\n    case $totaltime &amp;lt;= 5:\n        echo \"Not fast!\";\n    break;\n\n    case $totaltime &amp;gt;= 10 &amp;amp;&amp;amp; $totaltime&amp;lt;=13:\n        echo \"That's slooooow\";\n    break;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of this i'll go for &lt;code&gt;if-elseif&lt;/code&gt; statements. Is easier to understand at first sight:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($totaltime &amp;lt;= 1) {\n    echo \"That was fast!\";\n} elseif($totaltime &amp;lt;= 5) {\n    echo \"Not fast!\";\n} elseif($totaltime &amp;gt;= 10 &amp;amp;&amp;amp; $totaltime&amp;lt;=13) {\n    echo \"That's slooooow\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP-使用条件开关切换case语句", ["\n\n", "Can i put conditional statement within switch statement. ex - switch ($totaltime<=13) Other than php how about other languages compatibility with it?", "\n\n", "$totaltime=15;\n\nswitch ($totaltime<=13) {\n\ncase ($totaltime <= 1):\necho \"That was fast!\";\nbreak;\n\ncase ($totaltime <= 5):\necho \"Not fast!\";\nbreak;\n\ncase ($totaltime >= 10 && $totaltime<=15):\necho \"That's slooooow\";\nbreak;\n}\n", "\n\n", "Edit", "\n\n", "$totaltime=12; \nswitch (false) { \ncase ($totaltime <= 1): \necho \"That was fast!\"; \nbreak; \ncase ($totaltime <= 5): \necho \"Not fast!\";\nbreak;\ncase ($totaltime >= 10 && $totaltime<=13): \necho \"That's slooooow\"; \nbreak; \ndefault: // do nothing break; \n} \n", "\n\n", "Gentleman in this case why alwyas show output as \"That was fast!\"?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;多个逻辑判断连写要写为&lt;code class=\"language-javascript\"&gt;b&amp;#61;&amp;#61;11&amp;amp;&amp;amp;c&amp;#61;&amp;#61;11&lt;/code&gt;这种形式,用逗号分割在语义上是错误的,逗号表达式会返回最后一个表达式的结果,前面的表达式实际上不会进行判断&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么if条件满足却不执行", ["#include<stdio.h>", "#include<math.h>", "int main(){", "    int a,b,c,d;", "    a", "0.75-75>0;", "    double cost;", "    scanf(\"%d %d %d %d\",&a,&b,&c,&d);", "    if(b==11,c==11){", "        switch(d){", "            case 1:cost=a", "0.75-75;break;", "            case 0:cost=a", "0.75;break;}", "        }", "    else if(b==12,c==12){", "        switch(d){", "            case 1:cost=a", "0.85-75;break;", "            case 2:cost=a*0.85;break;}", "    }", "    else cost=a;", "        printf(\"%.2f\",cost);", "    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(ch)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;安、艾\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;毕、白\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;陈、常\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;丁、党\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;鄂\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;其他\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用拼音首字母查姓氏。如：输入字母’a’，输出“安、艾”等，要求至少能 查 a 至 e 字母开头的 5 类姓氏，其余的可输出“其它”。", ["用拼音首字母查姓氏。如：输入字母’a’，输出“安、艾”等，要求至少能查 a 至 e 字母开头的 5 类姓氏，其余的可输出“其它”。可通过Switch语句形成多分支结构实现。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choice;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,s,pi&amp;#61;&lt;span class=\"hljs-number\"&gt;3.1415926&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;选择图形类型&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl; \n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;1、圆   2、长方形   3、正方形\\n输入数字选择&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;choice;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(choice &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入圆的半径&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin&amp;gt;&amp;gt;a;\n        s&amp;#61; pi*a*a;\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(choice &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;){\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入长方形的长和宽&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;\n        s&amp;#61;a*b;\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(choice &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;){\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入正方形的边长&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin&amp;gt;&amp;gt;a;\n        s&amp;#61;a*a;\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#34;&lt;/span&gt;; \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;面积为&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s; \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;br /&gt; 觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++问题，请问怎么样用c++表达", ["编程计算图形的面积。程序可以计算圆形、长方形、正方形的面积，运行时先提示用户选择图形的类型，然后要求用户对圆形输入半径，或要求用户对长方形输入长和宽的值，或要求用户对正方形输入边长的值，计算出面积的值然后显示出来，分别用if语句和switch语句实现。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your string &lt;code&gt;cases&lt;/code&gt; don't have &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt; statements, so they \"fall through\" to the next &lt;code&gt;case&lt;/code&gt;. Also, your &lt;code&gt;break&lt;/code&gt;s don't serve any purpose here. &lt;/p&gt;\n\n&lt;p&gt;I've added comments to your code to explain what's happening.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch ($value) {\n        case 'student': // keeps going with next line\n        case StudentClass::getInstance()-&amp;gt;getId();\n            return new StudentClass(); // handles both cases above\n            break; // unnecessary because of the return above\n        case 'teacher': // keeps going with next line\n        case TeacherClass::getInstance()-&amp;gt;getId();\n            return new TeacherClass(); // handles both cases above\n            break; // unnecessary because of the return above\n        default:\n            break; // pointless, but handles anything not already handled\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, PHP explicitly allows use of a semicolon (&lt;code&gt;;&lt;/code&gt;) after a &lt;code&gt;case&lt;/code&gt;, but it is not generally considered good style. &lt;a href=\"http://php.net/manual/en/control-structures.switch.php\" rel=\"noreferrer\"&gt;From the docs:&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It's possible to use a semicolon instead of a colon after a case...&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["在PHP中切换case语句", ["\n\n", "I am learning PHP. I have downloaded an open source project from a website and looking the workflow of each modules in that project. I noticed a switch case which is unfamiliar to me. ", "\n\n", "switch ($value) {\n        case 'student':\n        case StudentClass::getInstance()->getId();\n            return new StudentClass();\n            break;\n        case 'teacher':\n        case TeacherClass::getInstance()->getId();\n            return new TeacherClass();\n            break;\n        default:\n            break;\n    }\n", "\n\n", "The above patch is what I looked. \nWhen I give input:", "\n\n", "$value = 'student';\n", "\n\n", "It returns ", "StudentClass", " instance.", "\n\n", "If I give", "\n\n", "$value = 'teacher';\n", "\n\n", "then it returns ", "TeacherClass", " instance.", "\n\n", "If anyone explain the flow, it will be helpful to me to understanding PHP much better", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch 和打印并没有什么关系&amp;#xff0c; 是为了简化程序而设计的&amp;#xff0c; 比很多的 if-else 简明。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java Switch 有什么用，又不能键盘录入东西，是不是多此一举", ["首先case1，2，3……等等里装的东西都是已知的东西，然后呢Switch（）的括号里面装的也是死的东西也就是不能手动输入自己想输入的，键盘录入又不能在括号里输入变量，所以Switch发明有什么用，我知道Switch可以选择输出，但这相当于多此一举，直接打印不就行了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;90&amp;lt;&amp;#61;x&amp;lt;100是错误写法&amp;#xff0c;写成 if(x&amp;gt;&amp;#61;90  &amp;amp;&amp;amp;  x&amp;lt;100)&lt;br /&gt;后面的也一样。&lt;br /&gt;90&amp;lt;&amp;#61;x&amp;lt;100就成逻辑判断了&amp;#xff0c;假设x&amp;#61;95,则x&amp;gt;&amp;#61;90成立&amp;#xff0c;为真&amp;#xff0c;即1&amp;#xff0c;1&amp;lt;100成立&amp;#xff0c;所以整个表达式为真。x&amp;#61;85也一样&amp;#xff0c;0&amp;lt;100,最终表达式还是真。&lt;br /&gt;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于if else和switch的使用", ["关于if else和switch的使用，我遇到了以下问题，不知道如何解决", "#include <stdio.h>", "int main()", "{", "    int y, x;", "    printf(\"请输入学生成绩：\");", "    scanf(\"%d\", &x);", "    if (90 <=x < 100)", "        y = 1;", "    else", "        if (80<=x< 90)", "        y = 2;", "    else", "        if (70 <=x < 80)", "        y = 3;", "    else", "        if (60 <=x < 70)", "        y = 4;", "    else", "        if (50 <=x < 60)", "        y = 5;", "    switch (y)", "    {", "    case 1:", "            printf(\"成绩是  %d,相应的等级是A\\n\",x);", "            break;", "    case 2:", "                printf(\"成绩是  %d,相应的等级是B\\n\", x);", "                break;", "    case 3:", "                    printf(\"成绩是  %d,相应的等级是C\\n\", x);", "                    break;", "    case 4:", "                        printf(\"成绩是  %d,相应的等级是D\\n\", x);", "                        break;", "    case 5:", "                            printf(\"成绩是  %d,相应的等级是F\\n\", x);", "                            break;", "                        default:break;", "    }", "    return 0;", "}", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;i&amp;#61;1  k&amp;#61;1&lt;br /&gt;i&amp;#61;2  k&amp;#61;2 因为conitinue i不增加进入死循环&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["求程序段的运行结果！", ["#include ", "int main()", "{", "int  i =1,k=0;", "for(;i<6;)", "{", "      switch(i%3)", "{", "case 0:k++;", "case 1:k++;break;", "case 2:k++;continue;", "      }", "      i+=1;", "}", "cout<<K<<endl;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说白了就是用ch的值去跟下面每个case的值一一的去比较&amp;#xff0c;相当于写了一大堆if(ch&amp;#61;&amp;#61;&amp;#39;0&amp;#39;) {} else if (ch&amp;#61;&amp;#61;&amp;#39;1&amp;#39;)&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["怎么理解switch多路选择中的测试条件？", ["枚举型是什么呀", "char ch", "\n", "  略", "switch(ch)测试条件ch是什么意思呀", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;400000 - 600000之间&amp;#xff0c;递归应该扣除这200000&amp;#xff0c;不是400000&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n&amp;gt;&lt;span class=\"hljs-number\"&gt;400000&lt;/span&gt;&amp;amp;&amp;amp;n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;600000&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n        s&amp;#61;s&amp;#43;(n&lt;span class=\"hljs-number\"&gt;-400000&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;gg&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n&lt;span class=\"hljs-number\"&gt;-200000&lt;/span&gt;,s)&lt;/span&gt;&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["C语言关于奖金提成问题", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "float", " ", "gg", "(", "float", " n,", "float", " s)", "{\n    ", "if", "(n>", "1000000", "){\n        s=s+(n", "-1000000", ")*", "0.01", ";\n        ", "return", " ", "gg", "(n", "-1000000", ",s);\n    }\n    ", "else", " ", "if", "(n>", "600000", "&&n<=", "1000000", "){\n        s=s+(n", "-600000", ")*", "0.015", ";\n        ", "return", " ", "gg", "(n", "-600000", ",s);\n    }\n    ", "else", " ", "if", "(n>", "400000", "&&n<=", "600000", "){\n        s=s+(n", "-400000", ")*", "0.03", ";\n        ", "return", " ", "gg", "(n", "-400000", ",s);\n    }\n    ", "else", " ", "if", "(n>", "200000", "&&n<=", "400000", "){\n        s=s+(n", "-200000", ")*", "0.05", ";\n        ", "return", " ", "gg", "(n", "-200000", ",s);\n    }\n    ", "else", " ", "if", "(n>", "100000", "&&n<=", "200000", "){\n        s=s+(n", "-100000", ")*", "0.075", ";\n        ", "return", " ", "gg", "(n", "-100000", ",s);\n    }\n    ", "else", " ", "if", "(n<=", "100000", "){\n        ", "return", " s+n*", "0.1", ";\n    }\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "float", " n,a;\n    ", "int", " M;\n    ", "while", "(", "scanf", "(", "\"%f\"", ",&n)!=EOF){\n        a=", "0", ";\n        M=", "gg", "(n,a);\n        ", "printf", "(", "\"%d\\n\"", ",M);\n    }\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "第三行输入数据1000000，输出结果为33500，与正确结果不符，检查来检查去也不知道哪里错了……", "\n", "我想要达到的结果", "\n", "希望能帮我指出错误。"]], "Tag": "程序设计"}
{"Answer": "建议使用本地的tomcat自行部署项目试一下  感觉这个问题出在tomcat运行时找不到例如javax.servlet。。的jar包和json的jar包  我知道你项目里肯定到了 \r\n可能是使用maven的tomcat组件时，引入的这个组件没有这些jar", "Konwledge_Point": "switch语句及其应用", "Question": ["maven ci和在tomcat下的debug模式运行出一样的错，这是缺包还是什么错?", ["[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project feiliao91-common: Compilation failure: Compilation failure:", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoUtils.java:[21,39] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoUtils.java:[40,39] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoUtils.java:[49,36] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[12,30] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[12,58] 找不到符号", "\n[ERROR] 符号:   类 HttpServletResponse", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[19,32] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[19,60] 找不到符号", "\n[ERROR] 符号:   类 HttpServletResponse", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[25,28] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[36,36] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[36,64] 找不到符号", "\n[ERROR] 符号:   类 HttpServletResponse", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDtoByMobile.java:[33,17] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDtoByMobile", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDtoByMobile.java:[128,16] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDtoByMobile", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDtoByMobile.java:[132,35] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDtoByMobile", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDto.java:[50,17] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDto.java:[192,16] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/goods/OrdersDto.java:[196,35] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.goods.OrdersDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[17,35] 找不到符号", "\n[ERROR] 符号: 类 Filter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[32,30] 找不到符号", "\n[ERROR] 符号:   类 ServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[32,49] 找不到符号", "\n[ERROR] 符号:   类 ServletResponse", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[33,25] 找不到符号", "\n[ERROR] 符号:   类 FilterChain", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[33,64] 找不到符号", "\n[ERROR] 符号:   类 ServletException", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[176,26] 找不到符号", "\n[ERROR] 符号:   类 FilterConfig", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[176,54] 找不到符号", "\n[ERROR] 符号:   类 ServletException", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[232,56] 找不到符号", "\n[ERROR] 符号:   类 HttpServletRequest", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/trade/TradeLogDto.java:[16,17] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.trade.TradeLogDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/trade/TradeLogDto.java:[60,16] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.trade.TradeLogDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/dto/trade/TradeLogDto.java:[64,35] 找不到符号", "\n[ERROR] 符号:   类 JSONObject", "\n[ERROR] 位置: 类 com.ast.feiliao91.dto.trade.TradeLogDto", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[16,17] 找不到符号", "\n[ERROR] 符号:   变量 MemcachedUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[22,24] 找不到符号", "\n[ERROR] 符号:   变量 MemcachedUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[26,36] 找不到符号", "\n[ERROR] 符号:   变量 HttpUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[28,20] 找不到符号", "\n[ERROR] 符号:   变量 StringUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[33,17] 找不到符号", "\n[ERROR] 符号:   变量 MemcachedUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[37,36] 找不到符号", "\n[ERROR] 符号:   变量 HttpUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[39,20] 找不到符号", "\n[ERROR] 符号:   变量 StringUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SessionUtils.java:[41,25] 找不到符号", "\n[ERROR] 符号:   变量 HttpUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SessionUtils", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoUtils.java:[22,32] 找不到符号", "\n[ERROR] 符号:   类 HttpException", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[31,9] 方法不会覆盖或实现超类型的方法", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[185,20] 找不到符号", "\n[ERROR] 符号:   变量 StringUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[194,20] 找不到符号", "\n[ERROR] 符号:   变量 StringUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[203,20] 找不到符号", "\n[ERROR] 符号:   变量 StringUtils", "\n[ERROR] 位置: 类 com.ast.feiliao91.auth.SsoFilter", "\n[ERROR] /home/jiazekun/dev/feiliao91/feiliao91-common/src/main/java/com/ast/feiliao91/auth/SsoFilter.java:[175,9] 方法不会覆盖或实现超类型的方法", "\n[ERROR] -> [Help 1]", "\n[ERROR] ", "\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.", "\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.", "\n[ERROR] ", "\n[ERROR] For more information about the errors and possible solutions, please read the following articles:", "\n[ERROR] [Help 1] ", "http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException", "\n[ERROR] ", "\n[ERROR] After correcting the problems, you can resume the build with the command", "\n[ERROR]   mvn  -rf :feiliao91-common"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的UI肯定是要在主线程的&amp;#xff0c;不能放到子线程里去&lt;br /&gt;按钮点击之类的回调函数也必须在主线程里执行&amp;#xff0c;函数里可以再启动子线程或线程池或工作线程之类的&amp;#xff0c;把耗时的任务放到后台处理&lt;br /&gt;如果需要显示&amp;#xff0c;那么需要使用委托&amp;#xff0c;让UI线程执行修改UI的操作&amp;#xff0c;不要在子线程里直接操作UI对象&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Qt 无法连接信号槽？？", ["HPBrowserIcon *sub_", "file", " ", "=", " new HPBrowserIcon(file)", ";", "\n    QThread *t = new QT", "hread", ";", "\n    connect(t, ", "&", "QThread::finished, t, ", "&", "QObject::deleteLater)", ";", "\n    sub_file->moveToThread(t)", ";", "\n    ", "// 同步缩放值", "\n    sub_file->setScale(scale)", ";", "\n    connect(this, ", "&", "HPBrowserView::scaled, sub_file, ", "&", "HPBrowserIcon::setScale, Qt::BlockingQueuedConnection)", ";", "\n", "\n", "在主线程中创建子线程，并连接信号槽。", "connect的第五个参数若缺省，则不运行setScale，若为Qt：DirectConnection，可以运行，但是在主线程，不符合需求。", "若为QueuedConnection，则不运行setScale，若为BlockingQueuedConnection，主线程阻塞。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have two different types, &lt;code&gt;Validator&lt;/code&gt; and the pointer type &lt;code&gt;*Validator&lt;/code&gt;, and these two types have different method sets.&lt;/p&gt;\n\n&lt;p&gt;You have only defined an &lt;code&gt;Error()&lt;/code&gt; method for the pointer while &lt;code&gt;Validator&lt;/code&gt; doesn't have this method.&lt;/p&gt;\n\n&lt;p&gt;What you can do is the following change:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Error implements error interface\nfunc (v Validator) Error() string {\n    return \"\"\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case *Validator, Validator: // You are actually getting a *Validator\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This implements &lt;code&gt;Error()&lt;/code&gt; for both &lt;code&gt;Validator&lt;/code&gt; and &lt;code&gt;*Validator&lt;/code&gt;. As the &lt;strong&gt;&lt;a href=\"http://golang.org/ref/spec#Method_sets\" rel=\"noreferrer\"&gt;Go specification&lt;/a&gt;&lt;/strong&gt; says:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The method set of any other type T consists of all methods declared with receiver type T.\n  The method set of the corresponding pointer type *T is the set of all methods declared with\n  receiver *T or T (that is, it also contains the method set of T)&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["不可能开关盒", ["\n\n", "This program does not compile:", "\n\n", "package main\n\ntype Validator struct {\n}\n\n// Error implements error interface\nfunc (v *Validator) Error() string {\n    return \"\"\n}\n\nfunc test() error {\n    return &Validator{}\n}\n\nfunc main() {\n    switch test().(type) {\n    case nil:\n        println(\"No error\")\n    case Validator:\n        println(\"Validation error\")\n        return\n    default:\n        println(\"Unknown error\")\n        return\n    }\n}\n", "\n\n", "The error is:", "\n\n", "prog.go:19: impossible type switch case: test() (type error) cannot have dynamic type Validator (missing Error method)\n", "\n\n", "But ", "Validator", " struct has method ", "Error", ".", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The reason is that &lt;code&gt;bindParam&lt;/code&gt; binds the parameters by reference. You're binding all your parameters to the same variable &lt;code&gt;$value&lt;/code&gt;. So when you execute the prepared statement, it will use the last value of this variable for all the parameters. That's why it's inserting &lt;code&gt;2&lt;/code&gt; in every column.&lt;/p&gt;\n\n&lt;p&gt;Use &lt;code&gt;bindValue&lt;/code&gt; instead of &lt;code&gt;bindParam&lt;/code&gt; and I think it should solve your problem. Or get rid of your loop that calls &lt;code&gt;bindParam&lt;/code&gt; entirely, and just pass &lt;code&gt;$bindValues&lt;/code&gt; to &lt;code&gt;execute()&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PDO语句在预准备语句中插入字符串值的整数", ["\n\n", "My prepared statement is defined as a method of a generic mysql class. Inserts using this method which insert into a different table work fine. Inserts into a specific table replace all my interpolated values with integers. Prepared statement and query look fine. \nIt looks like the integers inserted are interpolated from the \"category_id\" field. ", "\n\n", "The statement preparation:", "\n\n", "$sql = \"INSERT INTO post_data (`headline`, `body`,`online`,`category_id`,`post_date`)\n        VALUES (:headline, :body, :online, :categoryId, NOW())\";\n$bindValues = array('headline' => (string) $headline\n, 'body' => (string) $body\n, 'online' => (int) $online\n, 'categoryId' => (int) $categoryId);\n$mysql->insert($sql, $bindValues);\n", "\n\n", "The $mysql->insert method (which works for another table but not the above query:", "\n\n", "public function insert($sql, array $bindValues) {\n$stmt = $this->pdoConn->prepare($sql);\nforeach ($bindValues as $name => $value) {\n    $type = PDOBindings::getType($value);\n    //see below for PDOBindings::getType()\n    $stmt->bindParam($name, $value, $type);\n}\ntry {\n     $this->pdoConn->beginTransaction();\n     $stmt->execute();\n     $this->lastInserted = $this->pdoConn->lastInsertId();\n     $this->pdoConn->commit();\n} catch(Execption $e) {\n     $this->pdoConn->rollback();\n     return $e->getMessage();\n}\nreturn ($this->lastInserted > 0) ? $this->lastInserted : null;\n", "\n\n", "The PDOBindings::getType() static method is fairly straightforward:", "\n\n", "public static function getType($bindValue) {\n    $itsType = gettype($bindValue);\n    switch ($itsType) {\n        case \"string\":\n            return PDO::PARAM_STR;\n        break;\n        case \"integer\":\n            return PDO::PARAM_INT;\n        break;\n        case \"boolean\":\n            return PDO::PARAM_BOOL;\n        break;\n        default :\n        return PDO::PARAM_STR;\n    }\n}\n", "\n\n", "An insert of:", "\n\n", "INSERT INTO post_data (`headline`, `body`,`online`,`category_id`,`post_date`)\nVALUES (:headline, :body, :online, :categoryId, NOW())\n", "\n\n", "with the following:", "\n\n", "$bindValues = array('headline' => (string) \"This is the headline\"\n       , 'body' => (string) \"This is the body field to be inserted\"\n       , 'online' => (int) 0\n       , 'categoryId' => (int) 2);\n", "\n\n", "Inserts the following row:", "\n\n", "\nid  headline    body    online  category_id     post_date\n\n7   2           2   2   2           2013-11-03 08:34:49\n", "\n\n", "Note that the categoryId had the value of 2. ", "\n\n", "Stepping through the query with Xdebug does not indicate any issues with the data being set incorrectly. ", "\n\n", "It's difficult to debug as I cannot step into the PDO libraries themselves to determine where it's overriding the interpolations.", "\n\n", "A quick note on the schemas. headline is a varchar, body is text, online is tinyint and category_id is a medium int. ", "\n\n", "Also, remember that this insert works just fine for another table. ", "\n\n", "Here's what didn't work:", "\n\n", "Re-arranging the order of the insert items, and bindings arrays.", "\n\n", "Removing date-time field. (throws exception.)", "\n\n", "What works is inserting directly into rows, or using old-school mysql query building.", "\n\n", "Additionally, this should ideally be a different question but PDO also seems not to be recognizing exception handlers:", "\n\n", "$this->pdoConn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n", "\n\n", "Doesn't throw exceptions in the above try block. execution just fails. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you wanted your switch statement to work .. You nee to &lt;code&gt;switch (gettype($value))&lt;/code&gt; -- Which checks the type of variable you have against the &lt;strong&gt;entire statement&lt;/strong&gt;... then &lt;code&gt;case 'boolean':&lt;/code&gt; for example would check for a &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;A literal translation of how that would look in your case is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$value = false;\nvar_dump($value);\n\nswitch (gettype($value)) {\n  case 'integer':\n    echo \"INT\";\n    break;        \n  case 'boolean':\n    echo \"BOOL\";\n    break;\n  case 'NULL':\n    echo \"NULL\";\n    break;\n  default:\n    echo \"DEFAULT\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With the following &lt;code&gt;types&lt;/code&gt; being what you can check for:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;boolean\ninteger\ndouble\nstring\narray\nobject\nresource\nNULL\nunknown type\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["PHP返回数据类型与Switch vs If Else", ["\n\n", "I'm trying to track down why the if/else logic returns the correct datatypes versus the switch that does not.", "\n\n", "IF/ELSE:", "\n\n", "$value = false;\nvar_dump($value);\n\nif(is_int($value)) {\n  echo \"INT\";\n} elseif (is_bool($value)) {\n  echo \"BOOL\";\n} elseif (is_null($value)) {\n  echo \"NULL\";\n} else {\n  echo \"DEFAULT\";\n}\n", "\n\n", "SWITCH:", "\n\n", "$value = false;\nvar_dump($value);\n\nswitch ($value) {\n  case is_int($value):\n    echo \"INT\";\n    break;        \n  case is_bool($value):\n    echo \"BOOL\";\n    break;\n  case is_null($value):\n    echo \"NULL\";\n    break;\n  default:\n    echo \"DEFAULT\";\n}\n", "\n\n", "I'm not using strict comparison in the if/else. Not sure what's going on. Anyone?", "\n    "]], "Tag": "程序设计"}
{"Answer": "这个应该是旧版登录界面，现在被隐藏了，原来的函数估计也删了。如果要找到对应事件调用的函数，推荐你使用chrome的Event Listeners 非常方便\r\n![图片说明](https://img-ask.csdn.net/upload/201604/09/1460190171_8314.png)", "Konwledge_Point": "switch语句及其应用", "Question": ["QQ邮箱登录页面有一个函数onmouseup=\"QMLogin.switchMode()找不到函数体", ["https://mail.qq.com/cgi-bin/loginpage", " QQ登录这个页面（不是毒）", "\n快速登录，账号密码登录切换时调用", "\n网页该位置的代码", "\n\n", "\n", "\n", "快速登录", "\n", "帐号密码登录", "\n", "\n", "\n\n", "\n", "\n怎么找到QMLogin.switchMode()函数体呢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;User cannot interact with your application canvas and application tab canvas while working in a \"Use as Page\" mode. He will be prompted to switch back to be a regular user before visiting canvas.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Just checked and is the same for Sites using Facebook JS-SDK. While old cookie set by JS-SDK is preserved and not removed and no auth related events is fired using &lt;code&gt;FB.login&lt;/code&gt; prompts user to switch to his normal account.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如何知道用户切换其帐户以用作页面帐户？", ["\n\n", "From FB PHP SKD", "\n\n", "How to know a user switch the their account to use as page account when the user switched \"Use Facebook as PAGE_NAME\"?", "\n\n", "Many thanks for any your advice.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/295596992846111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; zm&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,kg&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,sz&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,qt&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cin.&lt;span class=\"hljs-built_in\"&gt;sync&lt;/span&gt;();\n    cin.&lt;span class=\"hljs-built_in\"&gt;clear&lt;/span&gt;();\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入字符串&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(buf,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(buf[i])\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((buf[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; buf[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;) || (buf[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; buf[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) )\n            zm&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; buf[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n            sz&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n            kg&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            qt&amp;#43;&amp;#43;;\n        i&amp;#43;&amp;#43;;\n    }\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;字母有&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;zm&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;空格有&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;kg&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;数字有&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;sz&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;其他有&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;qt&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,fz&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,fm&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,t;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        cout &amp;lt;&amp;lt;fz&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;fm;\n        s &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*fz/fm;\n        t &amp;#61; fz;\n        fz &amp;#61; fz&amp;#43;fm;\n        fm &amp;#61; t;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n            cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s&amp;lt;&amp;lt;endl;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun3&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cin &amp;gt;&amp;gt; n;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n    {\n        cout &amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;!&amp;#34;&lt;/span&gt;;\n        r*&amp;#61;i;\n        s &amp;#43;&amp;#61; r;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;n)\n            cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;\n    }\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s&amp;lt;&amp;lt;endl;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;1.功能1&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;2.功能2&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;3.功能3&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;0.退出&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; op;\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(op)\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;fun1&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;fun2&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;fun3&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["将几个程序定义为函数，并在main函数中调用", ["用到switch  case 语句", "定义和声明两者如何运用", "函数的调用如何操作", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Don't put parameter placeholders inside quotes.&lt;/p&gt;\n\n&lt;p&gt;But that's just the start of your problems.  By interpolating &lt;code&gt;$_GET['where'.$i]&lt;/code&gt; into your query, you've opened yourself up to SQL injection attacks.  You've completely missed the point of secure programming.&lt;/p&gt;\n\n&lt;p&gt;You must not take a WHERE clause, or any expression, verbatim from the HTTP request and copy it into your SQL string.  But you can't use a query parameter for an SQL expression, you can only use a parameter in place of a single scalar value.  &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["sqli错误与prepare语句", ["\n\n", "this is my first time using Mysqli and i been stuck on this problem for about an hour now. I am getting this error", "\n\n", "mysqli_stmt::bind_param(): Number of variables doesn't match number of parameters \nin prepared statement in C:\\wamp\\www\\WebContent\\success.php on line 30\n", "\n\n", "i have counted like 10 times the questions marks in the prepare statement and there are 21, then i counted the s and the variables in bind_param and there are 21 too. I am new at Mysqli, I was wondering if i can get any suggestion on how to aproach and debug this problem, thank you for all your help", "\n\n", "<?php   \n\n\n$mysqli = new mysqli(\"localhost\", \"root\",\"\",\"test\");\nif (mysqli_connect_errno())\n {\n    printf(\"Connect failed: %s\n\", mysqli_connect_error());\n    exit();\n }\n\n\n    $i=0;\n\n if ($stmt = $mysqli->prepare(\"UPDATE `table` SET `Lan_ID` = '?', `Switching` = '?',\n   `Own` = '?',`Division` = '?',`Switch_Number` = '?',\n   `Telecom_Circuit_number` = '?', `Transmitter_Frequency` = '?',\n   `Receiver_Frequency` = '?', `Band_width` = '?', `Channel` = '?', \n   `Equipment` = '?', `Power` = '?', \n   `Line_designation` = '?', `Voltage` = '?', `Phase` = '?',\n   `Modulate` = '?', `Terms` = '?', `Trap` = '?',\n   `Ltunner` = '?', `Link` = '?', \n   `Comment` = '?' \". $_GET['where'.$i] ))\n    {\n        $stmt->bind_param('sssssssssssssssssssss', $_GET[$i.'LanID'],$_GET[$i.'Switching'],\n        $_GET[$i.'Own'], $_GET[$i.'Division'], $_GET[$i.'Switch_Number'], $_GET[$i.'Telecom_Circuit_number'],\n        $_GET[$i.'Trasmitter_frq'], $_GET[$i.'Receiver_frq'], $_GET[$i.'Band_width'], $_GET[$i.'Channel'],\n        $_GET[$i.'Equipment'], $_GET[$i.'Power'], $_GET[$i.'Line_designation'],$_GET[$i.'Voltage'],\n        $_GET[$i.'Phase'],$_GET[$i.'Modulate'],$_GET[$i.'Terms'], $_GET[$i.'Trap'],$_GET[$i.'Ltunner'],\n        $_GET[$i.'Link'], $_GET[$i.'Comment'] );//this is line 30 btw\n\n\n    }\n    else \n    {\n        printf(\"Prepared Statement Error: %s\n\", $mysqli->error);\n\n    }\n    $stmt->close();\n ?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是不是不含50个&lt;br /&gt;那么 (m - 1) / 50&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++switch打折问题", ["\n", "按照代码上的话50个就会打折不符合题目，我应该怎么操作区分开来，只能用switch"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不是35吗&amp;#xff1f;难道我的电脑坏了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/073796609366149.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["c++ Switch不理解", ["\n", "为什么用电脑输出是7，答案不应该是35么，求各位解答。（我是用来凑字数的）"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;switch case语句只能选择“是”或者“不是”&amp;#xff0c;没法判断范围&lt;/li&gt;&lt;li&gt;case 要这么写&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;:\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/857850720546151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch分支的问题", ["\n", "我想尝试一下输入分数输出等级，不知道要怎么改"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为case后面没有加break语句。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch case相关问题", ["8136187.jpg \"=600 #left\")", "为什么这个程序输出结果是onetwo而不是one啊，不是只满足了case1吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf_s输入字符串时&amp;#xff0c;后面要指定字符串最大长度&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["能不能看看这个C语言链表为什么跑不起来吧", ["#include<stdio.h>", "#include<stdlib.h>", "#include<string.h>", "struct stud_node {", "    int num;", "    char name[20];", "    int score;", "    struct stud_node* next;", "};", "struct stud_node* Create_Stu_Doc();//新建链表", "struct stud_node* InsrtDoc(struct stud_node* head, struct stud_node* stud);//插入", "struct stud_node* DeleteDoc(struct stud_node* head, int num);//删除", "void Print_stu_Doc(struct stud_node* head);//遍历", "int main()", "{", "    struct stud_node* head, * p;", "    int choice, num, score;", "    char name[20];", "    head = NULL;", "    int size = sizeof(struct stud_node);", "\n", "do", " {\n    printf(", "\"1:create 2:insert 3:delete 4:print 0:exit\\n\"", ");\n    scanf", "_s(", "\"%d\"", ", &", "choice", ")", ";\n    switch (choice) {\n    case ", "1", ":\n        head= ", "Create_Stu_Doc()", ";\n        break;\n    case ", "2", ":\n        printf(", "\"Input num,name and score:\\n\"", ");\n        scanf", "_s(", "\"%d%s%d\"", ",&", "num", ",", "name", ",&", "score", ")", ";\n        p = (", "struct", " stud_node*)malloc(size);\n        p->num = num;\n        strcpy", "_s(", "p", "->", "name", ", ", "name", ")", ";\n        p->score = score;\n        head = ", "InsrtDoc(", "head", ", ", "p", ")", ";\n        break;\n    case ", "3", ":\n        printf(", "\"Input num:\\n\"", ");\n        scanf", "_s(", "\"%d\"", ", &", "num", ")", ";\n        head = ", "DeleteDoc(", "head", ", ", "num", ")", ";\n        break;\n    case ", "4", ":\n        ", "Print_stu_Doc(", "head", ")", ";\n        break;\n    case ", "0", ":\n        break;\n    }\n} ", "while", " (choice != ", "0", ");\n\nreturn ", "0", ";\n", "\n", "}", "//新建链表", "struct stud_node* Create_Stu_Doc()", "{", "    struct stud_node* head, * p;", "    int num, score;", "    char name[20];", "    int size = sizeof(struct stud_node);", "\n", "head = NULL;\nprintf(", "\"Input num,name and score:\\n\"", ");\nscanf", "_s(", "\"%d%s%d\"", ",&", "num", ",", "name", ",&", "score", ")", ";\n", "while", " (num != ", "0", ")\n{\n    p = (", "struct", " stud_node*)malloc(size);\n    p->num = num;\n    strcpy", "_s(", "p", "->", "name", ", ", "name", ")", ";\n    p->score = score;\n    head = ", "InsrtDoc(", "head", ", ", "p", ")", ";     ", "//调用插入函数", "\n    scanf", "_s(", "\"%d%s%d\"", ", &", "num", ", ", "name", ", &", "score", ")", ";\n}\nreturn head;\n", "\n", "}", "//插入", "struct stud_node* InsrtDoc(struct stud_node* head, struct stud_node* stud)", "{", "    struct stud_node* ptr, * ptr1, * ptr2;", "    ptr2 = head;", "    ptr = stud;", "    if (head == NULL)", "    {", "        head = ptr;", "        head->next = NULL;", "    }", "    else{", "        while ((ptr->num > ptr2->num) && (ptr2->next != NULL)) {", "            ptr1 = ptr2;", "            ptr2 = ptr2->next;", "        }", "        if (ptr->num <= ptr2->num) {", "            if (head == ptr2) head = ptr;", "            else ptr1->next = ptr;", "            ptr->next = ptr2;", "        }", "        else {", "            ptr2->next = ptr;"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I have fixed several errors in upload.php you have submitted.\nYou need to assign value of the hidden field to a variable:\n&lt;code&gt;$staffNo = $_POST['staffNo'];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;upload.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;switch($_POST['submit']) \n{\n    case 'Submit':\n        if ($_FILES[\"upload\"][\"error\"] &amp;gt; 0)\n        {\n            echo \"Error: \" . $_FILES[\"upload\"][\"error\"] . \"&amp;lt;br /&amp;gt;\";\n        }\n        else\n        {\n            $staffNo = $_POST['staffNo']; // preform validation here\n            echo \"Upload: \" . $_FILES[\"upload\"][\"name\"] . \"&amp;lt;br /&amp;gt;\";\n            echo \"Type: \" . $_FILES[\"upload\"][\"type\"] . \"&amp;lt;br /&amp;gt;\";\n            echo \"Stored in: \" . $_FILES[\"upload\"][\"tmp_name\"];\n            // check if directory exists\n            if(!is_dir(\"documents/\".$staffNo)){\n                // if it doesn't - create it\n                mkdir(\"documents/\".$staffNo);\n            }\n            move_uploaded_file($_FILES[\"upload\"][\"tmp_name\"],\n            \"documents/\".$staffNo.\"/\".$_FILES[\"upload\"][\"name\"]);\n            echo \"Stored in: \" .\"./documents/\".$staffNo.\"/\".  $_FILES[\"upload\"][\"name\"];\n        }\n\n    break;\n\n    case 'others':\n    break;\n\n    default;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should probably validate &lt;code&gt;staffNo&lt;/code&gt; to prevent changing its value through firebug for example, and messing with the upload path.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["从PHP Switch调用变量", ["\n\n", "I can upload my document onto my main testing directory. But I wish to call out my variable which is staffNo and place it in the specific staffNo directory. But I'm not able to parse out the variable even though I have declared my appropriate name for my input.", "\n\n", "For example:", "\n\n", "Staff Page", "\n\n", "$staffNo = 1;\n<form id=\"Staff\" name=\"Staff\" method=\"post\" action=\"upload.php\" enctype=\"multipart/form-data\">\n\n//My staffno variable\n<input type=\"hidden\" id=\"staffNo\" name=\"staffNo\" value=\"<?php echo $staffNo ?>\"/>\n\n//Upload document\n<input name=\"upload\" id=\"upload\" type=\"file\"/>\n<input type=\"hidden\" name=\"upload\" value=\"upload\"/>\n\n//Submit button\n<input type=\"submit\" name=\"submit\" value=\"Submit\">\n</form>\n", "\n\n", "upload.php", "\n\n", "switch($_POST['submit']) \n{\ncase 'Submit':\n    if ($_FILES[\"upload\"][\"error\"] > 0)\n    {\n    echo \"Error: \" . $_FILES[\"upload\"][\"error\"] . \"<br />\";\n    }\n    else\n    {\n    echo \"Upload: \" . $_FILES[\"upload\"][\"name\"] . \"<br />\";\n    echo \"Type: \" . $_FILES[\"upload\"][\"type\"] . \"<br />\";\n    echo \"Stored in: \" . $_FILES[\"upload\"][\"tmp_name\"];\n\n    move_uploaded_file($_FILES[\"upload\"][\"tmp_name\"],\n  \"documents/\".\"staffNo\".\"/\".$_FILES[\"upload\"][\"name\"]);\n\n            echo \"Stored in: \" .\"./documents/\".\"staffNo\".\"/\".  $_FILES[\"upload\"][\"name\"];\n}\n\nbreak;\n\ncase 'others':\nbreak;\n\ndefault;\n", "\n\n", "My staffNo variable was not able to call out even though it is under the form already. Did I did wrong somewhere? And I also wanted to create a new folder for the staffNo if it's not found inside. But now the basic staffNo variable was unable to call out. Kindly advise.    ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a和b你不得输入两个数字&amp;#xff1f;&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch直接输出default", ["为什么不输出case里面的                                   而是直接表达式未被定义呢，一直调都弄不好", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case 2 上面的 }后面加上break;要不然 就算结果为1 ,也会执行下面的2&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["switch中case情况", ["这个不是很理解", "这个答案是2 1", "x等于1不是应该只执行case1情况吗"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you have a &lt;code&gt;$mysqli&lt;/code&gt; object (I'm assuming that you created one in conn.php), you're not passing it in as a function parameter for your custom function &lt;code&gt;showMonth()&lt;/code&gt;. Have a read up on &lt;a href=\"http://php.net/manual/en/language.variables.scope.php\" rel=\"nofollow\"&gt;variable scope&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["从MySQL切换到MYSQLi  - 循环不起作用", ["\n\n", "I'm changing my site from using mysql to mysqli. So far the changes have been quite simple but I have a calendar page with for loops which doesn't work after the switch. I'm pretty sure it's the loop which is causing the error, but I can't seem to find a fix.", "\n\n", "Here's a selection of the code, which works with the mysql_query (which I have commented out) but doesn't with the mysqli->query", "\n\n", "<?php include(\"conn.php\");\n\n$today = mktime(12,0,0,date(\"m\"),1,date(\"Y\"));\n$currentmonth = date(m, $today);\n$currentyear = date(Y, $today);\n$prevmonth = $currentmonth - 1;\n$prevyear = $currentyear;\n$prevdate = mktime(12, 0, 0, $prevmonth, 1, $prevyear);\n$pdim = date(\"t\", $prevdate);\n\nfunction showMonth($month, $year, $pdims, $prevmonths, $prevyears)\n{\n$caldate = mktime(12, 0, 0, $month, 1, $year);\n$offset = date(\"w\", $caldate);\n$pdimsplus = $pdims + 1;\n$enddays = $pdimsplus - $offset;\n\nfor($i = 1; $i <= $offset; $i++)\n{   \n$qryhead1 = \"SELECT * FROM photos WHERE day(date) = $enddays AND month(date) = $prevmonths AND year(date) = $prevyears LIMIT 1\";\n\n//$res1 = $mysqli->query($qryhead1);\n//$noofrec1 = $res1->num_rows;\n//if ($noofrec1 > 0) {    \n//while ($row1 = mysqli_fetch_object($res1)) {\n\n$res1 = mysql_query($qryhead1);\n$noofrec1 = mysql_num_rows($res1); \nif ($noofrec1 > 0) {\nwhile ($row1 = mysql_fetch_object ($res1)) {\n    $id = $row1->id;\n    $image = $row1->image; ?>\n    <div><?php print(\"$enddays\"); ?><a href=\"<?php print(\"$id\"); ?>\"><img src=\"/images/<?php print(\"$image\"); ?>\"></a></div>\n    <?php } \n    } else { ?>\n    <div><?php print(\"$enddays\"); ?></div>\n    <?php }\n    $enddays++;\n    }\n}\n?>\n\n<div>\n<?php showMonth($currentmonth, $currentyear, $pdim, $prevmonth, $prevyear); ?>\n</div>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你传的是个x&amp;#43;3&amp;#61;9满足第一个条件&amp;#xff0c;但是由于没有配合break语句使用&amp;#xff0c;于是会一直执行下去先是y&amp;#61;1&amp;#xff0c;然后y又被赋值8&amp;#xff0c;由于还是没有break跳出&amp;#xff0c;又乘于二得十六&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Java的switch问题", ["请问这个y不是应该输出1吗？ 不是特别理解16是怎么算出来的，不是应该输出1的吗？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你就算了输入当月的天数&amp;#xff0c;从1-(m-1)的天数要想加&amp;#xff0c;结果再&amp;#43;d&lt;br /&gt;z还没有初始化就&amp;#43;&amp;#61;了&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["为什么不可以直接写入switch(m)？", ["为什么要再设一个i，而不可以直接写入switch(m)？为什么我这种写法会出来31？", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不贴代码鬼知道为什么报错&lt;br /&gt;反正无非是&lt;br /&gt;1.拼写错误&lt;br /&gt;2.中文标点&lt;br /&gt;3.乱加分号&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["用c++写一个switch为什么break 和default 都报错嫩？", ["用c++写一个switch为什么break 和default 都报错嫩？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I think &lt;code&gt;preg_match&lt;/code&gt;is not necessary here.&lt;a href=\"http://us2.php.net/manual/en/function.stripos.php\" rel=\"nofollow noreferrer\"&gt;stripos&lt;/a&gt; is enough for it. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$url = $link-&amp;gt;hits;\n$pos_google = stripos($url,'google.com');\n$pos_yahoo = stripos($url,'yahoo.com');\nif($pos_google !== false)\n{\n     $class = 'google';\n}\nelseif($pos_yahoo !== false)\n{\n     $class = 'yahoo';\n}\nelse\n{\n     #code\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["帮助一个简单的开关语句", ["\n\n", "I need to find the value of a variable and use it to add a class to a div, based on a switch statement. ", "\n\n", "For example, my variable is $link and if $link has google.com IN IT at all, I need $class to equal 'google', if $link as yahoo.com IN IT at all, $class then needs to equal 'yahoo'", "\n\n", "So, I need something like this, but I'm not sure how/or if to use preg_match or something to check and see if the $link variable has the value we are looking for in it - see 'case' text below:", "\n\n", "\n    switch ($link) {\n        case 'IF link has Google.com in it':\n                        $class = 'google';\n            break;\n\n        case 'IF link has Yahoo.com in it':\n                        $class = 'yahoo';\n            break;\n\n        default:\n            # code...\n            break;\n}\n", "\n\n", "OR if there is a better way to do this, please let me know :D", "\n\n", "Also, I'm good with using an IF ELSE statement as well..", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;Why would you avoid using this function?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Many programmers would pick their reasons to avoid using \"switch\" statements, depending on the context.&lt;/p&gt;\n\n&lt;p&gt;For instance, a project might have many &lt;a href=\"http://c2.com/cgi/wiki?SwitchStatementsSmell\" rel=\"nofollow noreferrer\"&gt;\"switch\" statements with duplicated code&lt;/a&gt; to do something that would be solved with polymorphism.&lt;/p&gt;\n\n&lt;p&gt;The \"switch\", in this case, is being used to map HTTP methods with callables (except the \"default\"): you could map http methods to callables that could be replaced in runtime. Python programmers who follow the \"pythonic philosophy\" use dictionaries to do the same thing that \"switch\" statements do, but with the ability to change the map in runtime.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Is there a vulnerability in using the switch statement itself, or is\n  it the $_SERVER variable that makes it vulnerable?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, there aren't vulnerabilities in using \"switch\" by itself.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/4247704/how-tamper-proof-is-the-server-variable-in-php\"&gt;You should not thrust the values from $_SERVER&lt;/a&gt; because they're input from web clients (usually browsers). A simple \"curl\" script can send inaccurate or invalid data, such as the IP address, User-agent, the referer, etc. This is useful for web scraping (some websites are implemented to prevent naive scraping).&lt;/p&gt;\n\n&lt;p&gt;Check the \"&lt;a href=\"http://php.net/manual/en/function.filter-input.php\" rel=\"nofollow noreferrer\"&gt;filter_input&lt;/a&gt;\" function to filter values from global variables with input values ($_GET, $_POST, $_COOKIE, $_SERVER, $_ENV).&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;An answer in this post (Is $_SERVER['QUERY_STRING'] safe from XSS?)\n  recommends the use of htmlentities to protect $_SERVER values. Is this\n  sufficient?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It &lt;a href=\"https://www.inanimatt.com/php-output-escaping.html\" rel=\"nofollow noreferrer\"&gt;depends on the context&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;For instance, if you want to use it for javascript code, it would not be enough to protect from XSS. In this case, you'd need to to use a function to escape the strings for javascript (\"json_encode\" might be helpful in this case).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["使用switch确定HTTP方法是否安全？", ["\n\n", "I recently read a tutorial (", "http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest--net-16340", ") on determining the HTTP headers to change the action of a script. The tutorial gives an example of a PHP script to accomplish this ", "\n\n", "$method = $_SERVER['REQUEST_METHOD'];\n\nswitch($method) {\n  case 'PUT':\n    $this->create_contact($name);\n  break;\n\n  case 'DELETE':\n    $this->delete_contact($name);\n  break;\n\n  case 'GET':\n    $this->display_contact($name);\n  break;\n\n  default:\n    header('HTTP/1.1 405 Method Not Allowed');\n    header('Allow: GET, PUT, DELETE');\n   break;\n}\n", "\n\n", "...and mentions", "\n\n", "\n  ", "We use a switch statement, which should be avoided in a real\n  application:", "\n", "\n\n", "Several questions:", "\n\n", "\n", "Why would you avoid using this function?", "\n", "Is there a vulnerability in using the switch statement itself, or is it the $_SERVER variable that makes it vulnerable?", "\n", "An answer in this post (", "Is $_SERVER['QUERY_STRING'] safe from XSS?", ") recommends the use of htmlentities to protect $_SERVER values. Is this sufficient?", "\n", "\n", "Thanks very much!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;假如你这个table的列的键名叫status 那么 在 a-table中 给status列加 slots:{customRender:&amp;#39;status&amp;#39;}&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;#status &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;{record}&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &amp;lt;a-&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; v-model:checked&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;record.status&amp;#61;&amp;#61;2&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/a-&lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;&amp;gt;\n&amp;lt;/&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["ant vue3.0项目，Switch 开关怎么写？", ["ant vue3.0项目，表格里和编辑里，Switch 开关怎么写？我不太了解这个的写法，查也没有查到有用的，接口返回的1和2", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要让应用程序开机自启动&amp;#xff0c;您需要使用Android的“BroadcastReceiver”和“Service”来实现。Preference则是用于用户可以手动启用或禁用自启动功能的设置选项。下面是一个示例&amp;#xff0c;演示如何使用Preference实现开机自启动的功能&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1、在您的应用程序的“res/xml”文件夹下创建一个新的preference文件&amp;#xff0c;例如“preferences.xml”。添加一个SwitchPreference&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;lt;SwitchPreference\n    android:&lt;span class=\"hljs-attribute\"&gt;key&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;auto_start&amp;#34;&lt;/span&gt;\n    android:&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;开机自启动&amp;#34;&lt;/span&gt;\n    android:&lt;span class=\"hljs-attribute\"&gt;defaultValue&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;false&amp;#34;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2、在您的应用程序中的“AndroidManifest.xml”文件中添加以下权限&amp;#xff1b;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;lt;uses-permission android:&lt;span class=\"hljs-attribute\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;android.permission.RECEIVE_BOOT_COMPLETED&amp;#34;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3、创建一个名为“BootReceiver”的BroadcastReceiver类&amp;#xff0c;并在其onReceive方法中启动您的Service类。如果用户已经启用了自启动&amp;#xff0c;则自启动服务将在启动后启动。否则&amp;#xff0c;服务将在用户启用自启动后启动。确保在BroadcastReceiver中添加以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;public &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; BootReceiver extends BroadcastReceiver {\n    &amp;#64;Override\n    public void on&lt;span class=\"hljs-constructor\"&gt;Receive(Context &lt;span class=\"hljs-params\"&gt;context&lt;/span&gt;, Intent &lt;span class=\"hljs-params\"&gt;intent&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (intent.get&lt;span class=\"hljs-constructor\"&gt;Action()&lt;/span&gt;.equals(Intent.ACTION_BOOT_COMPLETED)) {\n            SharedPreferences sharedPreferences &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;PreferenceManager&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;DefaultSharedPreferences(&lt;span class=\"hljs-params\"&gt;context&lt;/span&gt;)&lt;/span&gt;;\n            boolean autoStart &amp;#61; sharedPreferences.get&lt;span class=\"hljs-constructor\"&gt;Boolean(&lt;span class=\"hljs-string\"&gt;&amp;#34;auto_start&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;false&lt;/span&gt;)&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (autoStart) {\n                Intent serviceIntent &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Intent(&lt;span class=\"hljs-params\"&gt;context&lt;/span&gt;, YourServiceClass.&lt;span class=\"hljs-params\"&gt;class&lt;/span&gt;)&lt;/span&gt;;\n                context.start&lt;span class=\"hljs-constructor\"&gt;Service(&lt;span class=\"hljs-params\"&gt;serviceIntent&lt;/span&gt;)&lt;/span&gt;;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;4、在您的应用程序中创建一个名为“YourServiceClass”的服务类&amp;#xff0c;实现应用程序的功能。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;YourServiceClass&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;Service&lt;/span&gt; {\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; IBinder &lt;span class=\"hljs-title function_\"&gt;onBind&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Intent intent&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;onCreate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-comment\"&gt;// 初始化您的服务&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; int &lt;span class=\"hljs-title function_\"&gt;onStartCommand&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Intent intent, int flags, int startId&lt;/span&gt;) {\n        &lt;span class=\"hljs-comment\"&gt;// 执行您的服务操作&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable constant_\"&gt;START_STICKY&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;onDestroy&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-comment\"&gt;// 清理资源&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;5、注册BroadcastReceiver和Service类。在您的应用程序中的“AndroidManifest.xml”文件中添加以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;application&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;android:icon&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#64;drawable/ic_launcher&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;android:label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#64;string/app_name&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;activity&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;.MainActivity&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;android:label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#64;string/app_name&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;action&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;category&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;android.intent.category.LAUNCHER&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;activity&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;service&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;.YourServiceClass&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;receiver&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;.BootReceiver&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;action&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;android:name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;android.intent.action.BOOT_COMPLETED&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;receiver&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;现在&amp;#xff0c;当用户启用了“开机自启动”选项时&amp;#xff0c;您的应用程序将在设备启动后自动启动您的服务。有用的话&amp;#xff0c;给个关注&amp;#xff0c;手抽筋了................................&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["Android怎么用preference写一个switch开关，让软件开机自启", ["Android怎么用preference写一个switch开关，让软件开机自启"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;5—8&lt;br /&gt;6—4&lt;br /&gt;7—9&lt;br /&gt;8—7&lt;br /&gt;9—2&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["关于#java#的问题：只确定if,do,try,switch的匹配", ["Column A", "\n", "   if", "   do", "   try", "   switch", "   System.out.", "   file", "   ArrayList", "   public", "   array", "\n", "Column B", "①catch", "②length", "③while", "④writer", "⑤case", "⑥else", "⑦class", "⑧println", "⑨  size", "\n", "只确定if,do,try,switch的匹配，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第3行的  mulCoef(int coef) 方法有一个参数&amp;#xff0c;而第19行调用的mulCoef( )没有放入一个int型参数&amp;#xff0c;根据上下文代码&amp;#xff0c;应该是要把num放入第19行的triplet.mulCoef( )方法里把&amp;#xff0c;即triplet.mulCoef( num). 仅供参考。&lt;/p&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["java无法将类 Triplet中的方法 mulCoef应用到给定类型;怎么办。。", ["\n  ", "// 给三元组的各分量同乘一个比例因子", "\n    ", "public", " ", "void", " ", "mulCoef", "(", "int", " coef)", " {  \n      System.out.println(", "\"请输入一个比例因子：\"", ");\n      ", "Scanner", " ", "sc", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n      coef=sc.nextInt();\n      e1=e1* coef;e2=e2* coef;e3=e3* coef;\n  \n    }\n\n", "public", " ", "class", " ", "TestTriplet", " {\n     ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n          ", "// 此处声明并创建Triplet类的实例化对象triplet ", "\n     ", "Triplet", " ", "triplet", " ", "=", " ", "new", " ", "Triplet", "();\n          ", "int", " num;         \n              ", "Scanner", " ", "sc", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n              num = sc.nextInt();\n              ", "switch", "(num) {\n                  ", "case", " ", "1", ": {triplet.mulCoef( );", "break", ";}\n              }\n          }     \n      }\n}\n", "\n", "运行结果及报错内容 ", "\n", "\n", "   谢谢解答！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;switch并不适用这样的分支判断&lt;br /&gt;switch只适用变量等于某一值的判断,不适用大于或小于的判断,&lt;br /&gt;这种判断应该用 if .... else if .... else ....&lt;br /&gt;一定要用switch可以这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;?&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:x&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;?&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["刚学习C语言，用switch来完成代码，", ["问题遇到的现象和发生背景", "\n", "刚学习到这里。", "需要输出的是：当x<0时，输出f(x)=-1.以此类推", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " x=", "0", ";\n    ", "scanf", "(", "\"%d\"", ",&x);\n    ", "switch", "(x<", "0", ")\n    {\n        ", "case", " ", "1", ":\n        ", "printf", "(", "\"f=%d\\n\"", ",", "-1", ");\n        ", "break", ";\n        ", "case", " ", "0", ":\n            ", "switch", "(x==", "0", "){\n            ", "case", " ", "1", ":\n            ", "printf", "(", "\"f=%d\\n\"", ",", "0", ");\n            ", "break", ";\n            ", "case", " ", "0", ":\n                ", "printf", "(", "\"f=%d\\n\"", ",", "2", "*x);\n                ", "break", ";\n        }\n        ", "default", ":\n            ", "printf", "(", "\"请重新输入\"", ");\n            ", "break", ";\n    }\n    ", "getchar", "();\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "而且输出的界面在我输入完X之后，直接结束。没有看到输出结果"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There are a number of ways you can check whether an INSERT worked correctly.&lt;/p&gt;\n\n&lt;h2&gt;1.  Return value from $stmt-&amp;gt;execute()&lt;/h2&gt;\n\n&lt;p&gt;As you said, &lt;code&gt;$stmt-&amp;gt;execute();&lt;/code&gt; returns true on success or false on failure.  So you can use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$result = $stmt-&amp;gt;execute();\nif ($result) {...}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/pdostatement.execute.php\" rel=\"nofollow\"&gt;PDO Execute documentation here&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;2. Row Count&lt;/h2&gt;\n\n&lt;p&gt;rowCount will return the number of rows afffected by a query.  After a successful insert, this should be 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$stmt-&amp;gt;execute();\n$affected_rows = $stmt-&amp;gt;rowCount();\nif ($affected_rows == 1) {...} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/pdostatement.rowcount.php\" rel=\"nofollow\"&gt;PDO rowCount documentation here&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;3. Last Inserted Id&lt;/h2&gt;\n\n&lt;p&gt;If your table has an ID column, you can return the ID of the last inserted row using &lt;code&gt;lastInsertId()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$stmt-&amp;gt;execute();\n$newCustomerInfoId = $pdo-&amp;gt;lastInsertId();\nif ($newCustomerInfoId) {...}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: You must call &lt;code&gt;lastInsertId&lt;/code&gt; on the PDO object, not the &lt;code&gt;$stmt&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/pdo.lastinsertid.php\" rel=\"nofollow\"&gt;PDO lastInsertId documentation here&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "switch语句及其应用", "Question": ["如果在PDO预处理语句中插入成功，则为if / else语句的语法", ["\n\n", "I'm trying to switch from mySql statements to PDO prepared statements, but I'm having trouble figuring out the correct syntax for the if/else statements that I have to use if the insert was successful (which were previously ", "if($result) {...}", "). ", "\n\n", "I know that  $stmt->execute();  returns true on success or false on failure, but I haven't been able to determine how to set the statement up to act on that. ", "\n\n", "The new code (PDO prepared statement)", " ", "\n\n", "$gender = $_POST['gender'];  \nif ($gender===\"female\" ) {\ntry {      \n   $stmt = $conn->prepare('INSERT INTO customer_info (fname...) VALUES(:fname...)');\n   $stmt->bindParam(':fname', $_POST['fname'], PDO::PARAM_STR);\n   $stmt->execute();   \n    } catch(PDOException $e) {\n  echo $e->getMessage();\n}\n", "\n\n", "This is the rest of the original ", "if ($gender===\"female\")", " function", " ", "\n\n", "$result = @mysql_query($qry);    \n    if($result) {          \n      $qry=\"SELECT * FROM customer_info WHERE user_name='$_POST['user_name']' AND password='$_POST['password']'\";\n      $result=mysql_query($qry);          \nif($result) {\n    if(mysql_num_rows($result) == 1) {\n        //user_name Successful\n        session_regenerate_id();\n        $member = mysql_fetch_assoc($result);\n        $_SESSION['SESS_USER_ID'] = $member['user_id'];\n        session_write_close();\n        header(\"location: flatter_iframe.html\");\n        exit();\n    }else {        \n        header(\"location: login_failed.html\");\n        exit();\n    }   \n", "\n\n", "I've deleted most of the variables in order to simplify things (since the code is the same)", "\n    "]], "Tag": "程序设计"}
