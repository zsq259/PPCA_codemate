{"Answer": "http://blog.csdn.net/jimoshuicao/article/details/17403327", "Konwledge_Point": "通过例子学习", "Question": ["用php实现注册用户名，密码到mysql数据库，简单例子学习下", ["用php实现注册用户名，密码到mysql数据库，简单例子学习下"]], "Tag": "程序设计"}
{"Answer": "已经给你发了一份，注意查收！", "Konwledge_Point": "通过例子学习", "Question": ["新手学习:谁能给我个SSH整合的例子", ["谁能给我发个SSH的简单整合例子，新手上路学习，能稍微详细点的代码！", "                   能Struts2.1+Spring3.0+Hibernate3.3的最好了，我先在这里谢过了！", "      本人邮箱 ", "lw592759897@163.com", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "通俗地说，模型就是机器学习采用的算法。“模型文件”一般说的是这个算法用到的各种输入、输出数据的值。\r\n因为机器学习往往需要大量的运算，所以有必要将中间变量也存入文件中，以便可以多次地运算。\r\n机器学习是一类算法的通称，具体到某个算法，那模型的差异就很大了，就算某一类算法（比如神经元网络），它的不同形态（CNN、RNN、DNN、LSTM）构成的模型也有很大的差异。\r\n\r\n我目前的工作是做深度神经网络，基于google的TF框架，在tf中，使用了计算图来组织模型，而tf可以tf.train.Saver的save/store自动存储/加载模型文件。这大致是一个json格式的文件。", "Konwledge_Point": "通过例子学习", "Question": ["机器学习的模型文件怎么理解，谁能解答一下", ["机器学习的模型文件是什么，通俗的解释是什么？怎么理解模型的概念呢，能举个例子吗？谢谢大佬们"]], "Tag": "程序设计"}
{"Answer": "打个简单的比方，\r\n我现在要你写一个求两个int和的方法，你怎么写？\r\n假如这么写：public int sum(int a,int b){\r\n\t\t\t\t\t\t\t\t\treturn a+b;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n好，接下来我的要求是写一个求两个double数和的方法，你怎么写？\r\n\r\n假如没有方法重载你只能这么写：public double sumDouble(double a,double b){\r\n\t\t\t\t\t\t\t\t\treturn a+b;\r\n\t\t\t\t\t\t\t\t\t}\r\n因为你要避免和前面的方法重名。\r\n现在有方法重载的机制，你可以这么写：\r\npublic double sum(double a,double b){\r\n\t\t\t\t\t\t\t\t\treturn a+b;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t那么接下来的问题我怎么调用它呢？\r\n\t你如果这么写：sum(1.0,2.0)，Java会自动调用public double sum(double a,double b)这个方法。\r\n\t如果这么写：sum(1,2),Java会自动调用public int sum(int a,int b)这个方法。\r\n\t\t\t\t\t\t\t\t\t\r\n## \t\t\t\t\t\t\t\t\t方法重载：简而言之，方法名可以相同，但参数类型和个数不相同，这样就构成了方法重载。", "Konwledge_Point": "通过例子学习", "Question": ["我就近在学习java，按照教程例子学习", ["http://www.runoob.com/java/java-methods.html", "\n这里这个方法重载怎么用？"]], "Tag": "程序设计"}
{"Answer": "[http://blog.csdn.net/wangyaninglm/article/details/41181731]( \"\")\r\n参考", "Konwledge_Point": "通过例子学习", "Question": ["OpenCV stereo matching 例子", ["OpenCV stereo matching 例子，给个例子学习一下啊！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;x是个数组 取第一个值为typeof y  其中typeof y因为y没有值 所以为undefined 所以x&amp;#61;undefined 而结果从右往左typeof x 的类型为string在一次的typeof string 最后值为string&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["学习了一段时间的JavaScript对于这个例子还是有点不太理解", ["学习了一段时间的JavaScript对于这个例子还是有点不太理解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;br /&gt;\n&lt;br /&gt;\n本次提问扣除的有问必答次数&amp;#xff0c;将会以问答VIP体验卡&amp;#xff08;1次有问必答机会、商城购买实体图书享受95折优惠&amp;#xff09;的形式为您补发到账户。&lt;br /&gt;\n&lt;br /&gt;\n​​​​因为有问必答VIP体验卡有效期仅有1天&amp;#xff0c;您在需要使用的时候【私信】联系我&amp;#xff0c;我会为您补发。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["跟网页上的一个例子学习一个MVC处理表单的例子，怎么搞不定啊？", ["跟网页上的一个例子学习一个MVC处理表单的例子，怎么搞不定啊？提交了表单没有效果，就是页面刷新一下，求助啊！", "\n", "\nokController页面位于Controller文件夹下，代码如下================", "\n", "\nusing System;", "\nusing System.Collections.Generic;", "\nusing System.Linq;", "\nusing System.Web;", "\nusing System.Web.Mvc;", "\n", "\nnamespace WebApplication1.Models", "\n{", "\n    public class okController : Controller", "\n    {", "\n        //", "\n        // GET: /ok/", "\n        public ActionResult Index()", "\n        {", "\n            return View();", "\n        }", "\n}", "\n    public class person", "\n    {", "\n        //[Required(ErrorMessage = \"请输入名字\")]", "\n        public string name { get; set; }", "\n        public string email { get; set; }", "\n", "\n    }", "\n   ", "\n}", "\n", "\nLoginController页面也是在Controller文件夹下，代码如下================", "\n", "\nusing System;", "\nusing System.Collections.Generic;", "\nusing System.Linq;", "\nusing System.Web;", "\nusing System.Web.Mvc;", "\n", "\nnamespace WebApplication1.Controllers", "\n{", "\n    public class LoginController : Controller", "\n    {", "\n        //", "\n        // GET: /Login/", "\n        public ActionResult Index()", "\n        {", "\n", "\n            Response.Write(\"不正确！\");       ", "\n            return View();", "\n        }", "\n        public ActionResult Login()", "\n        {", "\n", "\n            Response.Write(\"不正确！\");", "\n            return View();", "\n        }", "\n}", "\n}", "\n", "\nIndex.cshtml位于Views/Home下，代码如下：==================", "\n", "\n@model WebApplication1.Models.person", "\n@{", "\n    Layout = null;", "\n}", "\n", "\n<!DOCTYPE html>", "\n", "\n<html>", "\n<head>", "\n    <title>这是一个网页</title>", "\n</head>", "\n<body>", "\n    ", "\n   ", "\n    @using (Html.BeginForm())", "\n    {", "\n        ", "\n        <p>你的名字：@Html.TextBoxFor(model => model.name)</p>", "\n        <p>邮件地址:@Html.TextBoxFor(model => model.email)</p>", "\n        ", "\n        <input type=\"submit\" value=\"提交按钮\" />", "\n    }", "\n", "\n", "\n</body>", "\n", "\n</html>", "\n", "\n======================代码完============", "\n提交完了就是页面刷新一下，我粗学乍练，有点转向，请各位指教一下怎么才能开始处理，哪怕打出一个 \"不正确！\"？"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/m0_38133212/article/details/86664569", "Konwledge_Point": "通过例子学习", "Question": ["请问AttentionMechanism注意力机制例子中的图是怎么生成的呢？", ["\n\n", "在很多博客和外文文献都会看到类似这样的示意图，想请问一下具体要怎么做到打印这类图片呢？如果能有个小例子就最好了 :) 感谢。"]], "Tag": "程序设计"}
{"Answer": "XML做配置文件是有专门的解XML的库的，这个到处都是很多\r\nXML做数据传输的话，一般都不回这样做，太浪费网络流量\r\n如果是C类程序，就直接是数据包或者是字节流即可\r\n如果是WEB目前都是使用的json", "Konwledge_Point": "通过例子学习", "Question": ["求一个xml做数据传输和配置文件的例子", ["求一个xml做数据传输和配置文件的例子。我现在在学socket编程，感觉用xml传送数据比序列化对象传输较繁琐。但是都说xml是数据传输用的，应该是我不会用。现求一个例子学习，谢谢！"]], "Tag": "程序设计"}
{"Answer": "http://download.csdn.net/source/351344\r\nhttp://download.csdn.net/source/1102847", "Konwledge_Point": "通过例子学习", "Question": ["bpel2.0 例子文件谁有", ["谁有bpel2.0版本的例子文件，包括应用的相关xsd,wsdl，我想拿来学习学习。"]], "Tag": "程序设计"}
{"Answer": "机器学习分为监督学习和非监督学习，alphazero根据规则“学习”最好的下棋策略，是一种无监督学习，不需要大数据。但是如果是NLP，人类自然语言，因为“学习”的是人类的语法规则，所以必须有大量的预料数据。\r\n因此你的问题的答案是，要结合算法和场景。\r\n另外，同样是学习围棋，也可以从人类棋谱开始，此时学习的是人类下棋的策略（下棋的规则），而不是围棋本身的规则。因此alphago就是属于此类。\r\n坦率地说，虚假的数据样本和不足的数据样本对你做数据分析也好，机器学习也好，都是非常大的问题，而且无解。\r\n你的样本太少，会出现过拟合（在测试样本上表现良好，在实际数据上没有卵用）、梯度消失（局限在局部最优解，得不到全局最优解）的情况。\r\n如果样本很少，那么你可能需要使用领域知识来弥补，然而这和现在流行的深度学习是背道而驰的。\r\n所以拿不到数据的小公司、学校和个人，都是在闭门造车自欺欺人。然而获取数据这件事，已经超出了技术的范畴。", "Konwledge_Point": "通过例子学习", "Question": ["机器学习到底要不要大数据的支持，如果要数据的支持，支持到哪一步？", ["机器学习到底要不要大数据的支持，如果要数据的支持，支持到哪一步？", "\n\n", "众所周知AlphaGo是需要大量的数据来进行学习的，ZERO却只需要少量的数据样本即可达到甚至超过AlphaGo的水准，那么问题来了，这个数据量的多少从科学的角度来说它的一个标准是什么，或者说它怎么来度量？", "\n————————————————————————————————", "\n谢谢各位的回答，实际上我对我自己提出的两个问题中的前一个和大家的看法是差不多的，但实际上我希望得到第二个问题的解答。", "\n我们的共识是，机器学习在大部分时候都是需要大量数据的(实际上我没有见过不需要大量数据就能训练出来的智能)，然而在现实操作中总会面临数据量不是不够就是浪费的情况(且不说数据的质量)，所以去预测一个具体需要的数据量就是极其必要的。打个比方，在运用人工智能对医学影像进行分析的时候，我们需要极其大量的数据，但我们不可能去向医院索取它的全部数据，所以就会想要通过计算得到一个大概的数据量的值，而不需要三番五次地去向医院申请数据。", "\n再举一个例子，比如我们在打磨一个适用于某处的齿轮，我们当然可以一边打磨一边拿去比较大小是否合适，但这一点也不方便，我们通常通过测量来获取需要的数据，然后直接按照这个数据来打磨齿轮。", "\n所以精确计算每次训练时所需要的数据量，这显然是极其必要的，既可以让我们避免数据不足的情况又不至于让我们一直盲目地收集数据。", "\n可问题就出在这里，这个数据量如何去测量？", "\n————————————————————————————————", "\n回复caozhy：感谢你的回答：）。是的，数据的获取存在困难是一个现实存在的问题，例如医院里病人的数据签了保密协议，要取出是很麻烦的，其他领域也是一样，只有用钱把数据砸出来，从这方面来说估计一个需要的数据的量也是必要的。即使是能够获取到大量的数据，我们也希望能通过计算直接得到一个最优的数据量，如果这个计算方法真的存在并且被发现，自然是一桩好事。", "\n————————————————————————————————", "\n说明一下，这个问题是在最近的第194期双清论坛上由高文院士提出的，我有幸听到教授的转述，才会对此有所思考，当然才疏学浅，对人工智能的理解也不够深入，只能做上述的一些浅层解读，请点拨指正。"]], "Tag": "程序设计"}
{"Answer": "file2matrix函数里的\r\nclassLabelVector.append(listFromLine[-1])应该改成classLabelVector.append(int(listFromLine[-1]))\r\n\r\n同时，下面调用函数的时候应该是'datatingTestSet2'，楼主应该是粗心，没有看到2，datatingTestSet2里的最后一列就已经全是数字了。", "Konwledge_Point": "通过例子学习", "Question": ["机器学习中例子 可能因为python3出现错误 求指导", ["\n附代码", "\n\n", " from numpy import *\nimport operator\nimport matplotlib\nimport matplotlib.pyplot as plt\ndef file2matrix(filename):\n    fr = open(filename)\n    arrayOLines = fr.readlines() #逐行读取文件\n    numberOfLines = len(arrayOLines) #获取文件的行数\n    returnMat = zeros((numberOfLines,3)) #创建一个矩阵\n    classLabelVector = []\n    index = 0\n    for line in arrayOLines:\n        line = line.strip() #删除所有换行符\n        listFromLine = line.split('\\t') #通过指定分割符对字符串切分\n        returnMat[index,:]=listFromLine[0:3]\n        classLabelVector.append((listFromLine[-1]))\n        index+=1\n    return returnMat,classLabelVector\ndatingDataMat,datingLabels = file2matrix('datingTestSet.txt')\n#print(datingDataMat,datingLabels)\nfig = plt.figure()\nax = fig.add_subplot(111)\n'''\n''按照列进行划分\n'''\nax.scatter(datingDataMat[:,1],datingDataMat[:,2],15.0*array(datingLabels),15.0*array(datingLabels))\nplt.show()\n", "\n\n", "错误提示", "\n 'multiply' did not contain a loop with signature matching types dtype('<U32') dtype('<U32') dtype('<U32')"]], "Tag": "程序设计"}
{"Answer": "“激励函数”，其实不是“激励函数”，而是激活函数。用来增加一个非线性因素。和“激励”没有关系。\r\nmse（mean square error）是平均均方误差。公式就是所有的预测值和真实值的差的平方的平均值。\r\n性能函数，这个根据你后面的描述，应该叫做损失函数（loss function）\r\n学习函数、traingdx实在不知道什么意思，是不是trainingdx，有动量和自适应lr的梯度下降法，如果是的话，这个“学习函数”应该就是反向传播函数。你所有的名词都是不规范的，而这个连猜都猜不出了。", "Konwledge_Point": "通过例子学习", "Question": ["BP神经网络的训练函数和学习函数，还有性能函数分别代表什么", ["首先我现在知道激励函数是什么。但是经常说的训练函数、学习函数还有性能函数分别指的是什么？", "\n                例如以下例子：“ 设定网络隐层和输出层激励函数分别为tansig和logsig函数, 网络训练函数为traingdx, 网络性能函数为mse,隐层神经元数初设为6。设定网络参数。网络迭代次数epochs为5000次, 期望误差goal为0.00000001, 学习速率lr为0. 01。”", "\n                网络训练函数为traingdx，这个公式到底是什么？我在百度查半天都没有查到具体的公式。", "\n                网络性能函数为mse，mse的公式是什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在函数内部&amp;#xff0c;&lt;br /&gt;经过对x, w,b的公式处理后&amp;#xff0c;获得了一个y值&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; y\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;就是代表的将y作为函数的结果返回&amp;#xff0c;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;也就是说&lt;/strong&gt;&lt;br /&gt;你调用这个函数之后会获取到一个y值。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt;&amp;#61;forward(x,w,d)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请问这个例子里的return怎么解释的？", ["这是通过单一神经元学习的一个例子，我一直不明白这里面的return到底是啥意思。"]], "Tag": "程序设计"}
{"Answer": "[quote]对于问题一，请问fieldName是否是保留字？？ \r\n\r\n对于问题二，您可能还没有看太仔细题目，在JSP页面中指定的action是action=\"Login\" 而非action=\"Login_\"，所以我认为匹配不过去，但是实际上程序运行的时候是匹配过去了，呵呵，我搞不明白。 [/quote]\r\n\r\nfieldName 是关键字\r\n\r\n问题二中，，Login_*  Login是 LoginAction.java, *是LoginAction.java 中的方法", "Konwledge_Point": "通过例子学习", "Question": ["Struts2 自带的例子Struts2-blank 学习三问", ["我的Struts版本是：Struts2.2.3.1。 把它自身带的例子都导入到了Eclipse中。", "\n\n", " ", "\n\n", " ", "\n\n", "在其自带的例子Struts2-blank中，", "\n\n", "Package.properties 文件中包含：  requiredstring = ${getText(fieldName)} is required.", "\n\n", "我的理解如下：", "\n\n", "${getText(fieldName)}是一个OGNL表达式。getText是ActionSupport的方法。 ", "\n\n", "问题一：", "\n\n", "请问 fieldName", "是什么，怎么理解？可以向上追溯到哪里？为什么必须写成fieldName", "，不能写成Foo?", "\n\n", " ", "\n\n", "在example.xml文件中有如下配置：", "\n\n", "<action name=\"Login_*\" method=\"{1}\" class=\"example.Login\">", "\n\n", "            <result name=\"input\">/example/Login.jsp</result>", "\n\n", "            <result type=\"redirectAction\">Menu</result>", "\n\n", "</action>", "\n\n", "在login.jsp文件中的form定义如下:", "\n\n", "<s:form action=\"Login\">", "\n\n", "    <s:textfield key=\"username\"/>", "\n\n", "    <s:password key=\"password\" />", "\n\n", "    <s:submit/>", "\n\n", "</s:form>", "\n\n", " ", "\n\n", "如果我填写的信息不完整，点击确定提交以后，这个form提交给了Login.action。", "\n\n", "如果我填写的信息完整，则会转到Menu.action。", "\n\n", "问题二：", "\n\n", "请问，配置文件中分明配置的是Login_*", "，那么login.jsp", "文件form", "的目的地Login", "怎么能够匹配过去呢？分明有一个下划线不匹配啊？", "\n\n", "另外，Login.java", "中，没有定义execute", "意外的方法，那么，配置文件中用通配符配置action", "，还有什么意义吗？如在本例中，jsp", "页面没有明确指定method", "，那么struts", "框架会自动调用execute", "方法吗？", "\n\n", " ", "\n\n", "在eclipse中，Login-validation.xml会出现", "\n\n", "The file cannot be validated as the host \"www.opensymphony.com\" is currently unreachable.", "\n\n", "这样的waring。", "\n\n", "原因在于Login-validation.xml中有这样一句", "\n\n", "<!DOCTYPE validators PUBLIC", "\n\n", "        \"-//OpenSymphony Group//XWork Validator 1.0.2//EN\"", "\n\n", "        \"http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd\">", "\n\n", "问题三：", "\n\n", "请问如何能够避免出现这样的提示信息？能用xwork-core-2.2.3.1.jar", "中的xwork-validator-1.0.2.dtd", "来替换掉吗？如果能，如何替换？"]], "Tag": "程序设计"}
{"Answer": "别人给你例子的可能性很小的\r\n\r\n\r\n给你思路到可以\r\n\r\n后台建立一个权限表,权限表的id和用户表关联.\r\n设定用户权限的时候可以弹出来一个窗体,窗体里面可以用复选框来表示是否拥有该权限.\r\n每个复选框的名字都不一样.复选框只是用来表示权限的,并不用作表单提交,所以你还需要做同样数量的隐藏域放到表单中.每个隐藏域对应一个复选框,复选框的值发生变化时影响到隐藏域的value.提交到后台,取的是隐藏域的value\r\n\r\n\r\n前台权限控制可以通过数来控制,可以看见树节点的就是拥有这个节点的权限.否则无权限.这个树是用户登录后读取权限表动态生成的.你可以自己通过判断来拼返回给extjs的json串,也就是树节点.  我是这样弄的.", "Konwledge_Point": "通过例子学习", "Question": ["求一个用户角色管理的ExtJS + JSP 例子?", ["求一个用户角色管理的ExtJS + JSP 例子?", "\n\n", "可以自定权限, 是否能进入某个组件, 等", "\n\n", "有没有人可以给我一个学习例子"]], "Tag": "程序设计"}
{"Answer": "不求给分，不知道用的啥后台框架，这给个springmvc的例子\r\nhttp://blog.csdn.net/bjjoy2009/article/details/54386416\r\n具体全代码请看前3节内容", "Konwledge_Point": "通过例子学习", "Question": ["给个 ajax小例子 进入页面直接显示数据库中的东西", ["给个短点的代码 学习学习 前台的没啥问题   主要是后台部分ResponseBody 那里  有点不明白  望大神指点 给个小例子  我琢磨琢磨"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数据存储至数据库&amp;#xff0c;建议使用后端语言进行处理&amp;#xff0c;java/python 等&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["怎么实现登录注册功能，有例子吗", ["初学前端", "我想要实现一个登录注册的功能，数据储存在数据库中", "但是我看网上的帖子好像只有IE才行？Edge能做得到吗", "有没有一些例子可以学习呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Python len() 方法返回对象&amp;#xff08;字符、列表、元组等&amp;#xff09;长度或项目个数。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请问这个例子里的len是啥意思？", ["人工智能单一神经元学习中的问题，这个len在这个例子里到底能干啥的？具体解释一下。"]], "Tag": "程序设计"}
{"Answer": "http://download.csdn.net/download/ustcwudi/9801621?web=web\r\nhttp://download.csdn.net/download/mengyouyouzi/10127942\r\nhttp://download.csdn.net/download/u013294278/9912322\r\n\r\n`采纳本回答可以代下载以上3个资源给你`", "Konwledge_Point": "通过例子学习", "Question": ["关于oauth2四种实现方式 求密码和授权码的例子  框架是spring boot", ["本人刚入行小白一枚正在自学学前后发端分离开发   前端是vue 后端是spring boot", "\n刚刚又被通知要赶紧学习oauth2授权  一脸懵  百度了一下了解了一些但是没找到", "\n整合spring boot 的例子", "\n所以就是求一个例子或者文章什么  能让我这小白能看懂", "\n最好不是英文的  我的英文不好谢谢了"]], "Tag": "程序设计"}
{"Answer": "applet如果要访问servlet，可以在applet代码中模拟HTTP请求/响应啊，servlet该怎么连数据库就怎么连，跟applet没one毛钱关系~", "Konwledge_Point": "通过例子学习", "Question": ["请问怎么applet怎么通过servlet连接数据库", ["请问怎么applet怎么通过servlet连接数据库。请各位大侠给个例子学习一下。万分感谢！"]], "Tag": "程序设计"}
{"Answer": "public class struts2 extends ActionSupport{\r\nprivate String name;\r\nprivate String password;\r\nget and set 方法\r\npublic String execute() throws Exception {\r\n\t\tif(this.name==\"sdfsd\"andthis.pwd==“123”){\r\n\r\nreturn SUCCESS；\r\n     }\t\r\n   }\r\n}\r\n  STRUTS.XML\r\npackage\r\n配置一下  \r\n记得action要配置正确\r\njsp \r\n form \r\n&lt;input type=“text” name=“name”&gt;\r\n&lt;input type=\"password\" name=\"password\"&gt;", "Konwledge_Point": "通过例子学习", "Question": ["求struts登陆例子", ["最近学习struts2 看了下视频 怎么总是出错"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;影响就是1920x1080的图片在保持长宽比缩放&amp;#xff08;注意是长边缩放到640&amp;#xff0c;短边不够的用0填充)到640x640的情况下&amp;#xff0c;你的目标不会变成太小&amp;#xff0c;原本5x5大小的物体缩放之后变成一个像素点之类的那肯定就有影响了&amp;#xff0c;其他情况下影响就不是很大。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请教一下 yolo 深度学习 训练图像和推理图像 大小的问题", ["想问一下  训练数据 图像分辨率有没有特殊需求", "比如弄了  很多图片大小不同 举个例子有的是 640 x 480   有的就是1920 x 1080   这样训练对结果有什么影响", "还有就是如果训练集训练时图片是640 x 640  但是推理给出的图片是   1920 x 1080  这样会不会有什么影响", "我测试了好几次  电脑不是很好  效果很差​", "\n"]], "Tag": "程序设计"}
{"Answer": "你是学习阶段？struts2的好处就是配置了struts.xml，它就可以根据配置自己跳转。有调理，简单。现在目前都不咋用struts2了，因为有更方便简单的框架。比如SpringMVC等等", "Konwledge_Point": "通过例子学习", "Question": ["学习struts2框架的疑惑", ["我丝毫感受不到struts2框架的好处，求指点一下，这个东西在实际开发中的用处是什么，能举个例子吗", "\n谢谢了"]], "Tag": "程序设计"}
{"Answer": "你自己回答到了\r\n\r\nx=x+1确实不是原子操作所以可能出现两个1\r\n\r\nx++,++x等都不是原子操作", "Konwledge_Point": "通过例子学习", "Question": ["volatile可见性", ["我在学习volatile的时候，知道它的作用是保证线程的可见性，意思是说当共享变量发生改变时，其它线程可以见。但我不明白其它线程可见是什么意思？", "\n  例如共享变量x=0加了volatile这个关键字； A，B两个线程", "\n  A读到x=0；", "\n  B也读到x=0；", "\n  A做了加一操作，此时x=1。那么B线程也应该知道x=1；", "\n  可是B做加一操作时，x也等于1。", "\n  那么我想知道这个B线程知道了x已经改变是什么意思？最好有个volatile例子能说明下。", "\n\n", "我突然想到是这个可能：", "\n  因为x=x+1不是原子操作，分二个步骤，加操作和赋值操作。", "\n  当B的加操作比A线程快一步，但B的赋值操作比A线程慢一步时", "\n  B已经用0做完了加操作得到的结果是1，但是没赋值给x。", "\n  A已经做完了加操作，x值此时已经更新到主内存中。", "\n  按照可见性，B重新读取x=1。此时B线程内x=1，是从主内存中更新的。", "\n  再做赋值操作把B线程做的加操作结果赋值给x，x=1。", "\n  所以出现2个1。", "\n\n", "不知道我突然想出的步骤是不是正确的，希望大家指导。"]], "Tag": "程序设计"}
{"Answer": "A 是候选码 ，同时 B也是候选码 ，因为A，B都可以用一个法则推出关系ABC，这个法则相信你应该学过。名字叫什么忘了。\r\n满足3NF 但不是BC范式。 范式之间的具体区分如下： \r\n第一范式： 关系之间的属性必须是原子型。 最基本的数据库模式\r\n第二范式： 消除了非主属性对主属性的部分函数依赖。\r\n第三范式： 消除了非主属性对主属性的传递函数依赖。\r\nBC范式： 消除了主属性对除主属性之外的候选码的函数依赖（包括部分函数依赖和传递依赖）。\r\n还有第四范式：（你没有提到过）： 这里是消除了属性之间的多值依赖。\r\n此题中A，B 都是候选码 ，但是候选码之间存在依赖，所以不是BCNF 只是3NF。", "Konwledge_Point": "通过例子学习", "Question": ["在学习关系数据库的过程中遇到的一个例子，让我开始纠结起了候选码和范式的问题", ["设关系模式R（ABC）,函数依赖F=（A->B,B->A,A->C）满足3NF还是满足BCNF,为什么？", "\n这个问题困扰我很久了，在这个关系模式中候选码有哪些呢？A是候选码，那B是不是候选码呢？希望各位前辈指导指导，最好能扩展一下关于范式之间判断的一些方法，和相关知识。", "\n\n", "另外怎么追加悬赏啊...."]], "Tag": "程序设计"}
{"Answer": "presistence.xml 里没定义JPA实现吧\r\n把toplink的JPA实现类定义到里面看下", "Konwledge_Point": "通过例子学习", "Question": ["JPA最基础的例子问题", ["小弟今天才开始学习JPA", "\n\n", "1.在oracle下建了一张employee表:id,name,salary", "\n\n", "2.建一个实体", "\n        package examples.model;", "\n        @Entity", "\n        public class Employee {", "\n    @Id", "\n    private int id;", "\n    private String name;", "\n    private long salary;", "\n\n", "public Employee() {\n}\n    ...省了get()和set()\n    }\n", "\n\n", "3.presistence.xml", "examples.model.Employee", "\n问题：@Entity为什么提示我The table Employee cannot be found on the database", "\n      可是我有这张表了啊，为什么啊？", "\n[b]问题补充：[/b]", "\norcale中分大小写吗？", "\n[b]问题补充：[/b]", "\n我是不是那个地方没有配置对？", "\n[b]问题补充：[/b]", "\n刚才那个问题重起了一下eclipse就没了", "\n一运行测试类就出这个异常时说明原因", "\n测试类：", "\nEntityManagerFactory emf = Persistence", "\n                .createEntityManagerFactory(\"EmployeeService\");", "\n        EntityManager em = emf.createEntityManager();", "\n        EmployeeService service = new EmployeeService(em);", "\n\n", "    em.getTransaction().begin();\n    Employee emp = service.createEmployee(158, \"John Doe\", 45000);\n    em.getTransaction().commit();\n    System.out.println(\"Persisted:\" + emp);\n", "\n\n", "异常:", "\n\n", "Exception in thread \"main\" javax.persistence.PersistenceException: No Persistence provider for EntityManager named EmployeeService", "\n    at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:89)", "\n    at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:60)", "\n    at EmployeeTest.main(EmployeeTest.java:11)", "\n[b]问题补充：[/b]", "\n配置文件不是放在src/META-INF/persistence.xml???", "\n为什么找不到？", "\n[b]问题补充：[/b]", "\n          oracle.toplink.essentials.PersistenceProvider", "\n\n", "加上这句也不行啊，你们谁有一个简单jpa的例子，发个我，我照着做一下", "\n怎么也要先弄个jpa的helloworld出来啊！~~~", "\n\n", "邮箱:", "lovellj2002@163.com", "\n[b]问题补充：[/b]", "\n经过一番折腾", "\n异常换成", "\n\n", "指定了无效的 Oracle URL", "\n我的oracle驱动是ojbc14.jar", "\noracle.jdbc.OracleDriver 这个不对？", "\n[b]问题补充：[/b]", "\njdbc:oracle:thin:@localhost:1521:ZFKGL", "\n\n", "哥们成功了！~~谢谢各位太高兴了", "\n\n", "刚才少了个:"]], "Tag": "程序设计"}
{"Answer": "```\r\n &lt;script src=\"../react-15.2.1/build/react.min.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"../react-15.2.1/build/react-dom.min.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"http://cdn.bootcss.com/babel-core/5.8.32/browser.min.js\"&gt;&lt;/script&gt;\r\n\r\n```", "Konwledge_Point": "通过例子学习", "Question": ["react效果不出来,学习时，按照教程写了第一个例子，页面上什么都没有，不知道哪里出了问题。", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;都是参考前人设计&amp;#xff0c;然后基于此进行创新或者革新&amp;#xff0c;设计新的网络结构&amp;#xff0c;我举几个简单例子&amp;#xff1a;&lt;br /&gt;1.loss部分调整&amp;#xff1a;比如&amp;#xff1a;我们可以修改loss&amp;#xff0c;之前用的交叉熵loss&amp;#xff0c;完全可以改成focalloss&amp;#xff0c;tripleloss&amp;#xff0c;aslloss等等&amp;#xff0c;当然可以自己设计一个新的loss。&lt;br /&gt;2.常见模型结构微调&amp;#xff1a;可以对网络结构加入一些常规的操作&amp;#xff0c;dropout&amp;#xff0c;fgb都是有可能的&amp;#xff1b;另外&amp;#xff0c;有的loss可能输入需要多个样本&amp;#xff0c;这样可能就得让模型的调整模型的编码结构。&lt;br /&gt;3.结构借鉴&amp;#xff1a;可能提出一个新的结构组件&amp;#xff0c;同时融合已有结构取得很好效果&amp;#xff0c;比如&amp;#xff0c;transformer&amp;#xff0c;他的整体其实编解码结构&amp;#xff0c;这个早就有了&amp;#xff0c;但是他会把其中某个组件做了优化&amp;#xff0c;做了并行&amp;#xff0c;做了self-attention等等&amp;#xff0c;当然这个attention机制在cv中早就有了&amp;#xff0c;他可能对其中做了self&amp;#xff0c;然后用了layNorm&amp;#xff0c;做了另外的归一化等等&amp;#xff1b;当然也有cv反过来&amp;#xff0c;借鉴transformer&amp;#xff0c;把输入调整成和NLP类似&amp;#xff0c;对其中的mask的比例做了新的探索&amp;#xff0c;对次序进行了变化等等&lt;/p&gt;\n&lt;p&gt;上面的例子没有先后顺序&amp;#xff0c;没有高端还是低端&amp;#xff0c;完全是看能否有效的解决问题&amp;#xff0c;比如&amp;#xff0c;&lt;br /&gt;1.调整loss看起来好像没啥&amp;#xff0c;实际上可能你用了一个好的loss&amp;#xff0c;取得好的效果&amp;#xff0c;就是一个不错的工作&amp;#xff0c;很多大牛可能就是提出了一个新的loss&amp;#xff0c;取得了一个新的结构。&lt;br /&gt;2.调整其他结构也一样&amp;#xff0c;有点大佬可能就是加了一个残差效果就上去了&amp;#xff0c;可能加了一个attention等等&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["机器学习网络结构如何设计", ["机器学习、深度学习的模型网络结构是如何确定的？前不久和人聊天，他说他们可以通过数学计算的方式来确定网络结构，从而完成对现有经典网络进行修改，或直接自己设计网络，来提升模型的精度和性能。说实话，这颠覆了我的认知，我原以为是靠经验和不断尝试才设计出的新的有效网络。那么该如何通过数学方式计算呢？能举个简单的例子么？"]], "Tag": "程序设计"}
{"Answer": "list.__init__([ ])包含三个部分，一个是list这是对象，__init__是一个函数，进一步说是初始化函数，[]是这个函数需要的一个参数，它是一个空列表。", "Konwledge_Point": "通过例子学习", "Question": ["一个继承例子中list.__init__([ ])的作用是什么?", ["这是Python学习手册（第四版）中的一个继承的例子，", "\n\n", " class Set(list):\n        def __init__(self, value=[ ]):\n                list.__init___([ ])\n                slef.concat(value)\n        def concat(self,value):\n                ...\n                ...\n                ...\n", "\n\n", "这个类的目的是新建一个扩展列表类型的类，在list.__init__（[ ]）中传入空的列表是为了什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;刚好都是回答过的问题  有些可能题和你的有些差异&amp;#xff0c;你自己稍微修改一下&lt;br /&gt;1题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n \ndef date_format(date):\n    m &amp;#61; date.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(&lt;span class=\"hljs-regexp\"&gt;m[0]&lt;/span&gt;) &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-regexp\"&gt;m[0]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-regexp\"&gt;m[0]&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(&lt;span class=\"hljs-regexp\"&gt;m[1]&lt;/span&gt;) &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-regexp\"&gt;m[1]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-regexp\"&gt;m[1]&lt;/span&gt;\n \n \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (&lt;span class=\"hljs-regexp\"&gt;m[2]&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-regexp\"&gt;m[0]&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-regexp\"&gt;m[1]&lt;/span&gt;).replace(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n \n \n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(date_format(&lt;span class=\"hljs-string\"&gt;&amp;#34; 12/1/1978 &amp;#34;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;l1 &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;]\n \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt;  to_calculate(int_a, int_b, op):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; op in l1:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; op &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; int_a &amp;#43; int_b\n        elif op &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; int_a - int_b\n        elif op &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; int_a * int_b\n        elif op &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; int_a / int_b\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Error&amp;#34;&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    l2 &amp;#61; []\n    l2.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(to_calculate(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;))\n    l2.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(to_calculate(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;))\n    l2.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(to_calculate(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;))\n    l2.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(to_calculate(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(l2)\n \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt; \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;card_hide&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(number)) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(number)[-&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:]\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;That is not a valid number.&amp;#39;&lt;/span&gt;\n \n \n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(card_hide(&lt;span class=\"hljs-number\"&gt;1234123456785678&lt;/span&gt;))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["根据图中给的例子进行重写发现还是无法运行", ["#刚开始学习 发现一些例题的代码写出来无法运行或者单行出现错误", "\n"]], "Tag": "程序设计"}
{"Answer": "你在前台jsp页面上做一个文件上传，选择你需要的文件（txt,word,excel）,把文件传到servlet（这是个是处理你传过来的文件），对文件进行解析（这里可以用文件流或者你直接从网上去搜搜很多这方面的），解析的数据安装你数据库字段对应的方式存进去，前台去读取数据库的信息这就不用说了吧，就是简单的访问数据库读取数据。", "Konwledge_Point": "通过例子学习", "Question": ["通过web页面读取一个文件，将文件中的用户名密码存到数据库中", ["我刚学习java web，想通过页面读取一个文件，然后识别出文件中的用户名和密码，然后存入到数据库中。然后可以在页面上面可以查到的功能。希望有大神可以帮助到我。做好有点例子可以提供谢谢啦。"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;你可以参考下这个问题的回答, 看看是否对你有帮助, 链接: &lt;a href=\"https://ask.csdn.net/questions/7798826\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7798826&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;这篇博客你也可以参考下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/Cyril_KI/article/details/108589078\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;粒子群算法(PSO)的Python实现&amp;#xff08;求解多元函数的极值&amp;#xff09;&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;这篇博客也不错, 你可以看下&lt;a href=\"https://blog.csdn.net/Cyril_KI/article/details/108589078\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;粒子群算法(PSO)的Python实现&amp;#xff08;求解多元函数的极值&amp;#xff09;&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "通过例子学习", "Question": ["关于#python#的问题：python PSO 粒子群算法 多元函数求极小值问题 运行结果和迭代次数每次都不一样", ["python PSO 粒子群算法 多元函数求极小值问题 运行结果和迭代次数每次都不一样", "\n", "\n", "\n", "# -*- coding: utf-8 -*-", "\n\n", "import", " math\n", "import", " random\n", "import", " numpy ", "as", " np\n", "import", " matplotlib.pyplot ", "as", " plt\n", "import", " pylab ", "as", " mpl\nmpl.rcParams[", "'font.sans-serif'", "] = [", "'SimHei'", "]\n\n\n", "class", " ", "PSO", ":\n    ", "def", " ", "__init__", "(", "self, dimension, time, size, low, up, v_low, v_high, a, b", "):\n        ", "# 初始化", "\n        self.dimension = dimension  ", "# 变量个数", "\n        self.time = time  ", "# 迭代的代数", "\n        self.size = size  ", "# 种群大小", "\n        self.bound = []  ", "# 变量的约束范围", "\n        self.bound.append(low)\n        self.bound.append(up)\n        self.v_low = v_low\n        self.v_high = v_high\n        self.x = np.zeros((self.size, self.dimension))  ", "# 所有粒子的位置", "\n        self.v = np.zeros((self.size, self.dimension))  ", "# 所有粒子的速度", "\n        self.p_best = np.zeros((self.size, self.dimension))  ", "# 每个粒子最优的位置", "\n        self.g_best = np.zeros((", "1", ", self.dimension))[", "0", "]  ", "# 全局最优的位置", "\n        self.a = a\n        self.b = b\n\n        ", "# 初始化第0代初始全局最优解", "\n        temp = ", "1000000", "\n        ", "for", " i ", "in", " ", "range", "(self.size):\n            ", "for", " j ", "in", " ", "range", "(self.dimension):\n                self.x[i][j] = random.uniform(self.bound[", "0", "][j], self.bound[", "1", "][j])\n                self.v[i][j] = random.uniform(self.v_low, self.v_high)\n            self.p_best[i] = self.x[i]  ", "# 储存最优的个体", "\n            fit = self.fitness(self.p_best[i])\n            ", "# 做出修改", "\n            ", "if", " fit < temp:\n                self.g_best = self.p_best[i]\n                temp = fit\n\n    ", "def", " ", "fitness", "(", "self, x", "):\n        ", "\"\"\"\n        个体适应值计算\n        \"\"\"", "\n        x1 = x[", "0", "]\n        x2 = x[", "1", "]\n        x3 = x[", "2", "]\n        x4 = x[", "3", "]\n        ", "for", " i ", "in", " ", "range", "(", "11", "):\n            y = (a[i] - (x1 * (", "1", " + b[i] * x2))/(", "1", " + b[i] * x3 + x4 * b[i] * b[i]))**", "2", "\n        ", "# print(y)", "\n        ", "return", " y\n\n    ", "def", " ", "update", "(", "self, size", "):\n        c1 = ", "1.5", "  ", "# 学习因子", "\n        c2 = ", "1.5", "\n        w = ", "0.8", "  ", "# 自身权重因子", "\n        ", "for", " i ", "in", " ", "range", "(size):\n            ", "# 更新速度(核心公式)", "\n            self.v[i] = w * self.v[i] + c1 * random.uniform(", "0", ", ", "1", ") * (\n                    self.p_best[i] - self.x[i]) + c2 * random.uniform(", "0", ", ", "1", ") * (self.g_best - self.x[i])\n            ", "# 速度限制", "\n            ", "for", " j ", "in", " ", "range", "(self.dimension):\n                ", "if", " self.v[i][j] < self.v_low:\n                    self.v[i][j] = self.v_low\n                ", "if", " self.v[i][j] > self.v_high:\n                    self.v[i][j] = self.v_high\n\n            ", "# 更新位置", "\n            self.x[i] = self.x[i] + self.v[i]\n            ", "# 位置限制", "\n            ", "for", " j ", "in", " ", "range", "(self.dimension):\n                ", "if", " self.x[i][j] < self.bound[", "0", "][j]:\n                    self.x[i][j] = self.bound[", "0", "][j]\n                ", "if", " self.x[i][j] > self.bound[", "1", "][j]:\n                    self.x[i][j] = self.bound[", "1", "][j]\n            ", "# 更新p_best和g_best", "\n            ", "if", " self.fitness(self.x[i]) < self.fitness(self.p_best[i]):\n                self.p_best[i] = self.x[i]\n            ", "if", " self.fitness(self.x[i]) < self.fitness(self.g_best):\n                self.g_best = self.x[i]\n\n    ", "def", " ", "pso", "(", "self", "):\n        best = []\n        self.final_best = np.array([", "1", ", ", "2", ", ", "3", ", ", "4", "])\n        ", "for", " gen ", "in", " ", "range", "(self.time):\n            self.update(self.size)\n            ", "if", " self.fitness(self.g_best) < self.fitness(self.final_best):\n                self.final_best = self.g_best.copy()\n            ", "print", "(", "'当前最佳位置：{}'", ".", "format", "(self.final_best))\n            temp = self.fitness(self.final_best)\n            ", "print", "(", "'当前的最佳适应度：{}'", ".", "format", "(temp))\n            best.append(temp)\n        t = [i ", "for", " i ", "in", " ", "range", "(self.time)]\n        plt.figure()\n        plt.plot(t, best, color=", "'red'", ", marker=", "'.'", ", ms=", "15", ")\n        plt.rcParams[", "'axes.unicode_minus'", "] = ", "False", "\n        plt.margins(", "0", ")\n        plt.xlabel(", "u\"迭代次数\"", ")  ", "# X轴标签", "\n        plt.ylabel(", "u\"适应度\"", ")  ", "# Y轴标签", "\n        plt.title(", "u\"迭代过程\"", ")  ", "# 标题", "\n        plt.show()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    time = ", "100", "\n    size = ", "100", "\n    dimension = ", "4", "\n    v_low = -", "0.5", "\n    v_high = ", "0.5", "\n    low = [-", "5", ", -", "5", ", -", "5", ", -", "5", "]\n    up = [", "5", ", ", "5", ", ", "5", ", ", "5", "]\n    a = [", "0.1957", ", ", "0.1947", ", ", "0.1735", ", ", "0.16", ", ", "0.0844", ", ", "0.0627", ", ", "0.0456", ", ", "0.0342", ", ", "0.0323", ", ", "0.0235", ", ", "0.0246", "]\n    b = [", "0.25", ", ", "0.5", ", ", "1", ", ", "2", ", ", "4", ", ", "6", ", ", "8", ", ", "10", ", ", "12", ", ", "14", ", ", "16", "]\n    pso = PSO(dimension, time, size, low, up, v_low, v_high, a, b)\n    pso.pso()\n\n", "\n", "\n", "\n", "\n", "是代码哪里错误了吗，还是粒子群算法结果就是这样的，希望能给出错误地方或者解决这个问题的代码。"]], "Tag": "程序设计"}
{"Answer": "主要线索是错误提示：\r\n&gt;TypeError: run() got an unexpected keyword argument 'argv'\r\n\r\n目测应该是你的tensorflow版本问题。\r\n在[r0.11](https://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/python/platform/app.py)及以前的版本里， `tf.app.run`：\r\n\r\n```\r\n def run(main=None):\r\n  f = flags.FLAGS\r\n  flags_passthrough = f._parse_flags()\r\n  main = main or sys.modules['__main__'].main\r\n  sys.exit(main(sys.argv[:1] + flags_passthrough))\r\n```\r\n没有`argv`参数，`argv`参数是r0.12后加入。\r\n所以，推测你的tensorflow版本在r0.11及以下，你需要更新你的tensorflow版本到r0.12或以上。", "Konwledge_Point": "通过例子学习", "Question": ["在运行tensorflow MNIST 里的例子时报错", ["/tensorflow-master/tensorflow/examples/tutorials/mnist$ python fully_connected_feed.py", "\n/usr/local/lib/python2.7/dist-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.", "\n  \"This module will be removed in 0.20.\", DeprecationWarning)", "\nTraceback (most recent call last):", "\n  File \"fully_connected_feed.py\", line 277, in ", "\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)", "\nTypeError: run() got an unexpected keyword argument 'argv'", "\n我是从GITHUB上下载的包，代码也没改，运行的fully_connceted_feed.py时报错"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;鸢尾花数据集&amp;#xff08;部分&amp;#xff09;&amp;#xff0c;共计150条记录&amp;#xff0c;包含 setosa,versicolor,virginica 三种花型。&lt;br /&gt;示例代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# coding: utf-8&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.neighbors import KNeighborsClassifier\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.naive_bayes import GaussianNB\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.linear_model import LogisticRegression\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.svm import SVC\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.tree import DecisionTreeClassifier\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.ensemble import RandomForestClassifier\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.neural_network import MLPClassifier\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.model_selection import train_test_split\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.metrics import classification_report\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.datasets import load_iris\nimport argparse\n\n&lt;span class=\"hljs-comment\"&gt;# 根据参数选择模型&lt;/span&gt;\nap &amp;#61; argparse.ArgumentParser()\nap.add_argument(&lt;span class=\"hljs-string\"&gt;&amp;#34;-m&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;--model&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;type&lt;/span&gt;&amp;#61;str, &lt;span class=\"hljs-attribute\"&gt;default&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;knn&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;help&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入模型简称&amp;#34;&lt;/span&gt;)\nargs &amp;#61; vars(ap.parse_args())\n\nmodels &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;knn&amp;#34;&lt;/span&gt;: KNeighborsClassifier(&lt;span class=\"hljs-attribute\"&gt;n_neighbors&lt;/span&gt;&amp;#61;1),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;naive_bayes&amp;#34;&lt;/span&gt;: GaussianNB(),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;logit&amp;#34;&lt;/span&gt;: LogisticRegression(&lt;span class=\"hljs-attribute\"&gt;solver&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;lbfgs&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;multi_class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;svm&amp;#34;&lt;/span&gt;: SVC(&lt;span class=\"hljs-attribute\"&gt;kernel&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;rbf&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;gamma&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;decision_tree&amp;#34;&lt;/span&gt;: DecisionTreeClassifier(),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;random_forest&amp;#34;&lt;/span&gt;: RandomForestClassifier(&lt;span class=\"hljs-attribute\"&gt;n_estimators&lt;/span&gt;&amp;#61;100),\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;mlp&amp;#34;&lt;/span&gt;: MLPClassifier()\n}\n\n&lt;span class=\"hljs-comment\"&gt;# 载入鸢尾花数据集&amp;#xff0c;然后进行训练集和测试集的划分&amp;#xff0c;75%数据作为训练集&amp;#xff0c;其余25%作为测试集&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# random_state是随机状态&amp;#xff0c;类似随机种子&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;载入鸢尾花数据集...&amp;#34;&lt;/span&gt;)\ndataset &amp;#61; load_iris()\n(trainX, testX, trainY, testY) &amp;#61; train_test_split(dataset.data, dataset.target, &lt;span class=\"hljs-attribute\"&gt;random_state&lt;/span&gt;&amp;#61;3, &lt;span class=\"hljs-attribute\"&gt;test_size&lt;/span&gt;&amp;#61;0.25)\n\n&lt;span class=\"hljs-comment\"&gt;# 训练模型&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;正在使用模型&amp;#xff1a;&amp;#39;{}&amp;#39;&amp;#34;&lt;/span&gt;.format(args[&lt;span class=\"hljs-string\"&gt;&amp;#34;model&amp;#34;&lt;/span&gt;]))\nmodel &amp;#61; models[args[&lt;span class=\"hljs-string\"&gt;&amp;#34;model&amp;#34;&lt;/span&gt;]]\nmodel.fit(trainX, trainY)\n\n&lt;span class=\"hljs-comment\"&gt;# 预测并输出一份分类结果报告&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;生成结果报告&amp;#34;&lt;/span&gt;)\npredictions &amp;#61; model.predict(testX)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(classification_report(testY, predictions, &lt;span class=\"hljs-attribute\"&gt;target_names&lt;/span&gt;&amp;#61;dataset.target_names))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["鸢尾花数据集的使用举例子", ["机器学习常用数据集鸢尾花数据集的使用举例子，同时对数据集进行相应的介绍。"]], "Tag": "程序设计"}
{"Answer": "按照你的要求，再改了一下：\r\n\r\n\r\n    public static void main(String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        String choose = null;\r\n\r\n        while (!\"2\".equals(choose)) {\r\n            System.out.println(\"1.计算乘法 \");\r\n            System.out.println(\"2.退出 \");\r\n            System.out.println(\"请选择：\");\r\n\r\n            choose = scanner.next();\r\n\r\n            if (\"1\".equals(choose)) {\r\n                String num1 = scanner.next();\r\n                String num2 = scanner.next();\r\n\r\n                int n1 = Integer.parseInt(num1);\r\n                int n2 = Integer.parseInt(num2);\r\n\r\n                System.out.println(n1 * n2);\r\n            }\r\n        }\r\n    }", "Konwledge_Point": "通过例子学习", "Question": ["上学时，java基础课上的一个例子，我忘了，大家记得不？", ["上学时，java基础课上的一个例子，我忘了，大家记得不？", "\n\n", "比如有一个类 A.class ", "\n在cmd 下输入 java A", "\n\n", "然后在屏幕命行上显示几行文字", "\n\n", "1.计算乘法", "\n2.退出", "\n.........", "\n\n", "然后你在命令行下接着能输出 1 2 3 回车", "\n命令行就能返回结果 6", "\n\n", "输入 2回车 就退出程序", "\n\n", "就是这样一个例子，还是上学时的，发现自己竟然想不起来怎么实现的。天天学习各种框架， 可是连上学时学的基础都想不起来了， 真是惭愧。", "\n[b]问题补充：[/b]", "\n草草的改一下 异常兄的", "\n\n", "[code=\"java\"]", "\nimport java.io.BufferedReader;", "\nimport java.io.InputStreamReader;", "\n\n", "public class Test7 {", "\n\n", "public static void main(String[] arg){   \n    System.out.println(\"1.one\");   \n    System.out.println(\"2.ext\");   \n     while(true){   \n        String a;\n        try {\n\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n            if((a=br.readLine())!=null){\n                if(a==\"1\"){   \n                       System.out.println(\"16624478\");    \n                 }else if(a==\"2\"){   \n                        break;   \n                 }\n            }\n\n\n        } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }   \n\n     }   \n    } \n", "\n\n", "}", "\n[/code]", "\n\n", "没有截获到命令", "\n\n", "草草的改一下 taopian兄的", "\n[code=\"java\"]", "\nimport java.util.Scanner;", "\n\n", "public class Test6{", "\n\n", "public static void main(String args[]) {", "\n    System.out.println(\"1.计算乘法 \");", "\n    System.out.println(\"2.退出 \");", "\n    System.out.println(\"请选择：\");   ", "\n\n", "Scanner scanner = new Scanner(System.in);   \n\nString choose = scanner.next();   \n\n\nif (choose.equals(\"1\")) {   \n    // String num1 = scanner.next();   \n    // String num2 = scanner.next();   \n\n    // int n1 = Integer.parseInt(num1);   \n    // int n2 = Integer.parseInt(num2);   \n\n    System.out.println(\"n1 * n2\");   \n}\n", "\n\n", "}  ", "\n\n", "}", "\n[/code]", "\n\n", "不过只能计算一遍，我记得还可以多次计算直到按2退出。", "\n\n", "[b]问题补充：[/b]", "\n认真的结合两位的指点改一下，应该是这样了，谢谢。", "\n\n", "[code=\"java\"]", "\nimport java.util.Scanner;", "\n\n", "public class Test6{", "\n  public static void main(String args[]) {", "\n    System.out.println(\"1.计算乘法 \");", "\n    System.out.println(\"2.退出 \");", "\n    System.out.println(\"请选择：\");   ", "\n\n", "Scanner scanner = new Scanner(System.in);   \nString choose = \"\";   \nString[] a;\nint n1,n2;\n\nwhile(true) {\n  choose = scanner.next();\n\n    if(choose.equals(\"2\"))break;        \n    if((a = choose.split(\"\\\\*\")).length==2){\n      try{\n        n1 = Integer.parseInt(a[0]);\n        n2 = Integer.parseInt(a[1]);\n        System.out.println(choose + \" = \"+ (n1*n2));}catch(Exception e){}           \n    }\n}   \n", "\n\n", "} ", "\n}", "\n\n", "[/code]"]], "Tag": "程序设计"}
{"Answer": "线程通讯说的是同一个进程里的两个线程传递数据，如果是两个客户端，甚至不同计算机，那么是网络通讯，而不是线程通讯。google“socket多线程通讯 java”就有", "Konwledge_Point": "通过例子学习", "Question": ["学习java时多用户登录，教材里说采用多线程实现。那么如何实现线程之间的通讯呢？", ["学习java时多用户登录，教材里说采用多线程实现。那么如何实现线程之间的通讯呢？也就是客户端与客户端的通讯？最好能给个小例子？"]], "Tag": "程序设计"}
{"Answer": "模糊查询 首先使用关键字like 前后用%%，具体需要看需求，\r\nwhere name like '%张三%'\r\n后面的查询query写法与正常查询一致", "Konwledge_Point": "通过例子学习", "Question": ["ssh实现分页和模糊查询", ["求帮助，ssh实现分页和模糊查询，求发个小例子，学习学习  谢谢"]], "Tag": "程序设计"}
{"Answer": "项目经验很重要，这能加深你对你所学的东西，看的书的理解。\r\n\r\n你喜欢web，那好，你就可以多关注这方便的东西。首先是一些J2EE规范，一些servlet，filter等等，然后一些常用的框架的使用，然后就可以研究一些开源框架等等。\r\n\r\n还是要说基础，基础一定要好，不仅会用还要知道为什么，多看看think in java不错，然后是java核心，接着是 effective java 第二版。这些看了你的基础就差不多了，可以选择了解《深入java虚拟机》。。\r\n\r\n然后可以看一些设计模式，这是要知道的，看《重构-改善代码设计》的等还有其他，可以一步步摸索着来。多去一些论坛，看大家都在谈论什么！", "Konwledge_Point": "通过例子学习", "Question": ["再遇学习中的迷茫，请前辈们点播。。", ["记得上次我在JE上提过这样的问题，当时各位前辈们有积极的对我进行了指点和帮助，这么长时间过去了，之间也做了项目，但是却没有停止我学习的脚步，前一段时间一直在看pl/sql编程指南，对着上面的例子，反复学习，推敲，并且亲身去体验，知道了oracle是如此这般的强大，我们知道的还很少，但是，看了之后发现，上面的知识，离我的应用好远好远，基本上用到的为零。当然了，他的强大还远不止这些，再次陷入迷茫，大家都说中国做不出优秀的软件，那是因为许多项目，是在代码的相互copy之间做成的。现在请前辈们指点，接下来的学习之路，我该怎样走下去，苦我不怕，但是，我却没有了方向，这是最可怕的。。"]], "Tag": "程序设计"}
{"Answer": "hbxiao135 ,我就是从Java转过来的啦。\r\n\r\n你不要怕什么啦，反正都是OO的语言，web开发敏捷之道，跟一次以后，当然不行啦，很多东西都不明白的，只是觉得很神奇。这时你要自己来做一个东西，比如说做一个 个人博客，你会遇到 问题，然后通过各种方法来解决问题。 我一般在www.railsforum.com上问Rails相关的问题。\r\n\r\n随着你对Rails的了解越来越多，你就有有需要去更多的了解ruby了。在这个过程 中你就进步 了。\r\n\r\n如果 你还有什么不明白的，站内信我，另外我这还有一个RubyOn Rails开发群的，里面的人很热心的哦。", "Konwledge_Point": "通过例子学习", "Question": ["请问下java转学ror，有什么途径能比较快的学习？", ["请问下java转学ror，有什么途径能比较快的学习？", "\n看了点儿ruby的基础语法 感觉自己写肯定不会那么写", "\n看了  web开发敏捷之道   按照说明  把购物车的例子做了   感觉好多细节都没有介绍清楚", "\n大概的流程也不太清楚。期待大家的指点。。。"]], "Tag": "程序设计"}
{"Answer": "System.arraycopy()是复制运行栈中的内容, \r\n- 对于基本类型, 内容就是value.\r\n- 对于引用类型, 内容就是reference.\r\n\r\n你自已写的数组里面是User对象, 所以复制是reference, 他们都指向运行堆中的相同地址,这个地址存着对象的内容.\r\n\r\n不知道是否解析清楚, 详解可以阅读JVM内存模型资料.", "Konwledge_Point": "通过例子学习", "Question": ["新手学习JAVA，关于System.arraycopy的一个问题", ["为啥我写的arraycopy 不像是例子中那样 copy的引用。。。。但他们又是相等的。。。", "\n\n", "\n\n", "\n网页地址：", "http://blog.csdn.net/angjunqiang/article/details/42031351", "\n\n", "用它分别 copy二维数组 和 copy一维数组", "\n\n", "为啥二维数组copy的时候像是把它源数组的地址给目的数组了", "\n\n", "一维数组copy的时候 和 源数组 没关系一样"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;权值的调整&amp;#xff0c;你可以直接对原始数据比例大小进行调整&amp;#xff0c;将样本整个调大或者调小&lt;br /&gt;这里有我写的一个例子你可以看一下&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq_18560985/article/details/115055058\" id=\"textarea_1663549600290_1663549741350_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_18560985/article/details/115055058&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["机器学习 AdaBoost算法", ["AdaBoost算法原理可以概括为：", "1.先初始化数据训练弱模型 ->> 得到第一个弱模型", "2. 通过初始化的权重去计算误差", "3. 根据这个误差去调整弱模型的权重", "4. 更新训练集数据集权值的分布", "\n", "其中，每次迭代都会训练一个弱模型，第一次迭代之后，每个样本得到了新的权值分布。我不理解的是这个权值分布怎么参与进后续模型的训练？（或者说样本权重怎么使用）", "假设以决策树模型作为基础模型，并给定需要假设的每个参数，能否举个例子详细叙述一下，从训练第一个分类器开始，往后每一步都是怎么做的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;两个循环体嵌套,比如&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in range(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n  for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,j)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;不仅仅限制于此,for while,while for 都可以,while while 也可以,根据需要进行选择&lt;/p&gt;\n&lt;h1 id=\"有帮助请点击右上角采纳有问题继续交流你的采纳是对我回答的最大的肯定和动力\"&gt;&lt;font style=\"color:#f00\"&gt;有帮助请点击右上角采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/h1&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Python双重循环寻求帮助初级者学习", ["Python双重循环是什么意思？可以举个例子吗（我是高中生，懂的比较少）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有必要把头尾写在循环中吧&amp;#xff1f;写在循环外判断效率高&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C语言学习，插入一个数到数列中", ["\n", "\n", "\n", "不知道自己哪里错了，例子运行都是正确的，但是系统显示答案错误"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的函数写错了&lt;br /&gt;你写的是_mm_castpd_si128&lt;br /&gt;示例中是_mm_castps_si128&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["在学习DirectX中遇到的问题", ["这个是我写的", "\n", "\n", "这个是官方文档中写的例子", "\n", "\n", "为什么这个a会报错啊？有没有人知道错误的原因"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.runoob.com/cplusplus/cpp-multithreading.html\" id=\"textarea_1651148505125_1651148525970_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.runoob.com/cplusplus/cpp-multithreading.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C++多线程编程是怎么回事，可以用一两句解释吗", ["C++的线程和CPU的线程有什么关系，有没有比较好的多线程例子，想系统地学习多线程编程有没有好的程序例子或者教程以供学习。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在机器学习领域&amp;#xff0c;的确存在类似题主的困惑&amp;#xff0c;其原因就在于没有厘清数组的维度和数据特征维度的区别。&lt;/p&gt;\n&lt;p&gt;数据集通常是指由若干个样本数据组成的二维数组&amp;#xff0c;数组的每一行表示一个样本的数据。数据集的列&amp;#xff0c;也被称为特征维或特征列。题主的第一張图是二维数组&amp;#xff0c;有12个特征维。所谓降维&amp;#xff0c;并非是将数据集从二维变成一维&amp;#xff0c;而是减少数据集的特征维。如果有兴趣&amp;#xff0c;可以参考我的这一篇博客。&lt;a href=\"https://blog.csdn.net/xufive/article/details/117291777\" id=\"textarea_1666837372453_1666837835523_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;21句话入门机器学习_天元浪子的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;这是一篇关于机器学习工具包Scikit-learn的入门级读物。对于程序员来说&amp;#xff0c;机器学习的重要性毋庸赘言。也许你还没有开始&amp;#xff0c;也许曾经失败过&amp;#xff0c;都没有关系&amp;#xff0c;你将在这里找到或者重拾自信。只要粗通Python&amp;#xff0c;略知NumPy&amp;#xff0c;认真读完这21句话&amp;#xff0c;逐行敲完示例代码&amp;#xff0c;就可以由此进入自由的王国。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/xufive/article/details/117291777&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["机器学习的数据维度 定义", ["现在在做机器学习，想问下下面这个数据维度是多少？ ", "\n", "是12维还是2维", "\n", "\n", "我之所以会疑惑，是因为下面这个例子。 这的1 我理解就是表格，为什么这个是三维? 而如果以1的定义，2 的例子应该是个三维数据，为什么是二维呢？我很疑惑", "1、输入4个3维的数据，然后通过t-SNE降维称2维的数据", "\n", "import numpy as np\nfrom sklearn", ".manifold", " import TSNE\nX = np", ".array", "(", "[[0, 0, 0]", ", ", "[0, 1, 1]", ", ", "[1, 0, 1]", ", ", "[1, 1, 1]", "])\ntsne = TSNE(n_components=", "2", ")\ntsne", ".fit_transform", "(X)\n", "print", "(tsne.embedding_)", "\n\n", "\n", "\n", "from", " time ", "import", " time\n", "import", " matplotlib.pyplot ", "as", " plt\n", "from", " matplotlib.ticker ", "import", " NullFormatter\n", "from", " sklearn ", "import", " manifold, datasets\n", "from", " mpl_toolkits.mplot3d ", "import", " Axes3D\n\n", "# X是一个(1000, 3)的2维数据，color是一个(1000,)的1维数据", "\nn_points = ", "1000", "\nX, color = datasets.samples_generator.make_s_curve(n_points, random_state=", "0", ")\nn_neighbors = ", "10", "\nn_components = ", "2", "\n\n", "# 创建了一个figure，标题为\"Manifold Learning with 1000 points, 10 neighbors\"", "\nfig = plt.figure(figsize=(", "8", ", ", "8", "))\nplt.suptitle(", "\"Manifold Learning with %i points, %i neighbors\"", " % (", "1000", ", n_neighbors), fontsize=", "14", ")\n\n", "'''绘制S曲线的3D图像'''", "\nax = fig.add_subplot(", "211", ", projection=", "'3d'", ")\nax.scatter(X[:, ", "0", "], X[:, ", "1", "], X[:, ", "2", "], c=color, cmap=plt.cm.Spectral)\nax.view_init(", "4", ", -", "72", ")  ", "# 初始化视角", "\n\n", "'''t-SNE'''", "\nt0 = time()\ntsne = manifold.TSNE(n_components=n_components, init=", "'pca'", ", random_state=", "0", ")\nY = tsne.fit_transform(X)  ", "# 转换后的输出", "\nt1 = time()\n", "print", "(", "\"t-SNE: %.2g sec\"", " % (t1 - t0))  ", "# 算法用时", "\n\nax = fig.add_subplot(", "2", ", ", "1", ", ", "2", ")\nplt.scatter(Y[:, ", "0", "], Y[:, ", "1", "], c=color, cmap=plt.cm.Spectral)\nplt.title(", "\"t-SNE (%.2g sec)\"", " % (t1 - t0))\nax.xaxis.set_major_formatter(NullFormatter())  ", "# 设置标签显示格式为空", "\nax.yaxis.set_major_formatter(NullFormatter())\nplt.show()\n\n"]], "Tag": "程序设计"}
{"Answer": "因为2用二进制表示就是10，和10.0000是一样的，写成10.0000是为了和后面对应吧，至于结果就按二进制的减法一减就出来了。不过我觉得你没必要纠结定义这些东西，只要知道负数补码是取反加1就好了", "Konwledge_Point": "通过例子学习", "Question": ["计算机组成原理中，关于小数补码的定义问题", ["在唐塑飞老师的《计算机组成原理》第6章讲到补码的定义的时候举了个例子：", "\n当x=-0.0110时，[x]补=2+x=10.0000-0.0110=1.1010；", "\n2是为什么是转换成10.0000的？1.1010又是怎么算出来的？", "\n不按照定义走的话，我知道“补码=反码+1”就可以算出来了，但是定义一出来人就懵了。", "\n我是在自学计算机组成原理，请前辈们赐教！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;官方的文档最权威&amp;#xff0c;方法、例子和注意事项都有详细描述&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.microsoft.com/zh-cn/dotnet/api/system.net?view&amp;#61;netframework-4.5\"&gt;https://docs.microsoft.com/zh-cn/dotnet/api/system.net?view&amp;#61;netframework-4.5&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C#求一个system.net类的详细教程", ["大佬，我想做一个爬虫，可以实现我们公司ERP上的数据下载和上传更新，我应该学哪个类，", "\n我百度出来用system.net的比较多", "\n另外想找个大佬较一下我用这个类，给我发例子教程就可以了，然后我有不懂的可以问一问", "\n\n", "哪位愿意，带带我", "\n\n", "有偿，教学费私聊。"]], "Tag": "程序设计"}
{"Answer": "JMS即java消息服务，JMS通过消息的形式来降低组件之间的耦合度。\r\nJMS由两部分组成消息发送者和消息监听者。\r\n\r\nEJB只是实现JMS的一个方案之一，比如还有spring JMS。\r\n所以EJB不是JMS的先决条件。\r\n 关于第二个问题，你用spring实现JMS就可以了。\r\n希望能帮到你。", "Konwledge_Point": "通过例子学习", "Question": [" 什么是jms 如何学习jms", ["最近想了解下jms 上网找了很多 例子 很多资料但是没一个能看懂的 我感觉是我有什么jms的技术支持不知道", "\n\n", "问题1", "\n学jms要先学ejb吗 jms是在什么环境下开发的 网上上来就一堆代码 完全不知道在些什么", "\n我学jms要先学什么", "\n问题2", "\n我现在就会ssh 有ssh+jms这种组合吗  感觉网上没有过这个内容"]], "Tag": "程序设计"}
{"Answer": "简单的理解，\r\n1、就是第一个页面作为发送端，而第二页面接收端，把你写的string类型的参数传递到第二个页面去了。\r\n2、传递的值通过QueryString()方法接收。", "Konwledge_Point": "通过例子学习", "Question": ["新人问一下一个问题，ASP.net", ["如图", "\n\n", "最后一句代码是什么意思？&是什么意思，谢谢各位啦。", "\n这个问题是书上的，网页间的参数传递例子", "\n\n", "这是第二个网页"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实无论是int类型&amp;#xff0c;还是字符串类型&amp;#xff0c;他们都有内置的函数&amp;#xff0c;叫做__str__()&amp;#xff0c;print一个变量的时候&amp;#xff0c;print函数会去找变量的__str__方法&amp;#xff0c;如果是自己定义的一个class类而没有内部编写__str__()方法的话&amp;#xff0c;就无法成功print这个变量。&lt;/p&gt;\n\n&lt;p&gt;说回到你的问题&amp;#xff0c;无论是int变量还是str变量&amp;#xff0c;当你使用{variable_name}将其括住的时候&amp;#xff0c;print这个字符串会将其使用__str__方法嵌入到需要格式化的字符串当中。所以最后你看到无论是int还是str&amp;#xff0c;都可以成功将其打印出来了。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Python学习之”函数“中，数字与字符串的关系？", ["小白入门，问的问题对于大佬们来说可能较为幼稚。不过我还是想把疑惑写在这里，万一有其他刚入门的小伙伴有同样的疑惑，或许这会对大家有所帮助。", "\n\n", " ", "\n\n", "在学习语言时，我们都提到了字符串和数字之间的格式不能搞混淆，所以str( )、int( )等是我们常用的函数。那么同样的，在学习Python时，就函数这一章而言 ，我所学习到的例子是这样的：", "\n\n", " ", "\n\n", "\n", "def describe_pet(animal_type, pet_name)\n    \"\"\"显示宠物信息\"\"\"\n    print(\"\\nI have a \" + animl_type + “.”)\n    print(\"My ” + animal_type + \" 's name is \" + pet_name.title() + “.”)\n\ndef describe_pet('dog', 'harry')", "\n\n", "可以看到，定义函数时，animal_type 和 pet_name 的格式都是字符串形式。也就是说，形参的格式是字符串，那么调用函数时，实参的格式也是字符串，所以才会有 ‘dog'  和 ’harry‘。", "\n\n", " ", "\n\n", "我按照例子编写了相似的程序，但是", "问题来了", "！", "\n\n", "\n\n", "\n\n", " ", "\n\n", "我调用函数时，实参中出现了数字，但是，经过测试，无论数字加不加引号，程序都能正常运行！难不成，", "在调用函数时，对数字和字符串之间格式的要求没那么多讲究？", "\n\n", " ", "\n\n", "如果有大佬愿意抽空解惑，我真的十分感谢，毕竟占用了您宝贵的时间~再次感谢（鞠躬.jpg）", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "Sping框架有两个核心：AOP和IOC。IOC是控制反转，将程序负责管理的代码反转到容器管理。依赖注入（DI）是IOC的实现，就是通过依赖关系根据配置文件（xml）在程序运行时自动为对象注入值。AOP是面向切面编程，是一种思想。而代理算是AOP的实现，目的是为其他对象提供一种代理以控制对这个对象的访问", "Konwledge_Point": "通过例子学习", "Question": ["spring学习遇到问题，请求帮助", ["书名叫spring入门到精通，出版日期有些年头了，因为最近看的比较头晕，希望各位给点建议:前几章还勉强看得下去，对于bean就简单理解成Android里面的activity，xml配置也顺着Android的xml感觉走，（之前看了点Android基础）。依赖 呢 入我就当成使用构造器的参数或者set方法完成对象的初始化，反向控制不太明白，貌似是面向接口编程？然后就是Application context，只知道它能getBean（），然后是aop ，proxyfactorybean，看了两种代理的例子，自动代理什么的，事务处理感觉跟数据库有关系，没细看，再然后就看不下去了，【大哭】。spring web框架咋跟前面这么不连贯呢，一会出来个jsp 一会又是servlet，我是不是要专门找本书研究通这些吗？html我倒是会点，后面的真纠结，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以看下这个有实例&lt;a href=\"https://blog.csdn.net/yuangan1529/article/details/115034475\" id=\"textarea_1668991498490_1668991563930_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;学习weka&amp;#xff08;2&amp;#xff09;&amp;#xff1a;weka软件使用实例&amp;#xff1a;针对kdd99数据集进行训练和测试_蓝亚之舟的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;前言kdd99 数据集之前介绍过&amp;#xff0c;没有看的可以参考&amp;#xff1a;KDD CUP99数据集预处理&amp;#xff08;Python实现&amp;#xff09;这里拿 kdd99 数据集练练手&amp;#xff0c;主要目的是熟悉一下 weka 的使用。1、数据集准备使用 WEKA 作数据挖掘&amp;#xff0c;面临的第一个问题往往是我们的数据不是 ARFF 格式的。幸好&amp;#xff0c;WEKA 还提供了对 CSV 文件的支持&amp;#xff0c;而这种格式是被很多其他软件所支持的。虽然 weka 也支持 csv 格式&amp;#xff0c;但是建议还是转为 ARFF 格式最好。1.1 简单打开一个 csv 文件&amp;#xff08;加载数据&amp;#xff09;&amp;#xff08;1&amp;#xff09;加载数据方式&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/yuangan1529/article/details/115034475\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["weka机器学习疑问，想咨询一下最基础的预测流程", ["各位好，最近在业余时间自主学习weka，但是悟性比较差，看了好多参考感觉一头雾水，大概知道可以用来预测，或者挖掘相关数据，也知道软件有几种挖掘方法（比如相关性分析、关联分析、分类、聚类之类的），但是实际使用时完全不知怎么下手，配合着翻译翻译着功能以及网上示例（发现和实际软件操作不同），想咨询一下软件最基础的操作以及预测流程，比如我想预测一段彩票为例子，我怎么才能让他预测下面的id，号码，日期等等……", "这一段是arff格式的weka文件里面的内容示例来着（可以直接粘到记事本保存为arff）", "\n", "@relation", " 彩票\n\n", "@attribute", " id numeric\n", "@attribute", " number numeric\n", "@attribute", " time numeric\n\n", "@data", "\n", "10000", ",", "2413765", ",", "1666022400000", "\n", "10001", ",", "3935362", ",", "1665676800000", "\n", "10002", ",", "1752935", ",", "1665417600000", "\n", "10003", ",", "4184274", ",", "1665072000000", "\n", "10004", ",", "2216602", ",", "1664467200000", "\n", "10005", ",", "5360520", ",", "1664208000000", "\n", "10006", ",", "8506577", ",", "1663862400000", "\n", "10007", ",", "2643493", ",", "1663603200000", "\n", "10008", ",?,?\n", "10009", ",?,?\n", "\n", "这是有参考过的网址：", "https://article.itxueyuan.com/DaZ64B", "https://jingyan.baidu.com/article/2f9b480dfd88be41cb6cc283.html", "https://blog.csdn.net/yuangan1529/article/details/115588465", "https://blog.csdn.net/low5252/article/details/104451281", "\n", "比如说我预处理这两期彩票号码，我应该预处理还是进行聚类，在选完预处理算法或者对应的聚类算法后，我应该再继续操作什么来把这两行空值给预估出来……", "\n", "\n", "以及要是愿意给我科普一下聚类，关联分析之类的基础操作和用途就更感谢了"]], "Tag": "程序设计"}
{"Answer": "是linx虚拟机。具体我也不知道怎么说呢。", "Konwledge_Point": "通过例子学习", "Question": ["java上传图片到虚拟机", ["平时写过普通的上传图片代码。但是很少接触虚拟机。对这个是完全不懂。在网上搜了。例子也看不懂。希望能给个有注释的学习例子。谢谢。"]], "Tag": "程序设计"}
{"Answer": "select name=\"selectp\"  id=\"select1\" onchange=\"selectcity(this.value)\"&gt;\r\n&lt;option value=\"0\" selected&gt;-请选择地州&lt;/option&gt;\r\n&lt;option value=\"6501\"&gt;乌鲁木齐&lt;/option&gt;\r\n&lt;option value=\"6502\"&gt;克拉玛依&lt;/option&gt;\r\n&lt;option value=\"6521\"&gt;吐鲁番&lt;/option&gt;\r\n&lt;option value=\"6522\"&gt;哈密&lt;/option&gt;\r\n&lt;option value=\"6523\"&gt;昌吉&lt;/option&gt;\r\n&lt;option value=\"6527\"&gt;博州&lt;/option&gt;\r\n&lt;option value=\"6528\"&gt;巴州&lt;/option&gt;\r\n&lt;option value=\"6529\"&gt;阿克苏&lt;/option&gt;\r\n&lt;option value=\"6530\"&gt;克州&lt;/option&gt;\r\n&lt;option value=\"6531\"&gt;喀什&lt;/option&gt;\r\n&lt;option value=\"6532\"&gt;和田&lt;/option&gt;\r\n&lt;option value=\"6540\"&gt;奎屯&lt;/option&gt;\r\n&lt;option value=\"6541\"&gt;伊犁&lt;/option&gt;\r\n&lt;option value=\"6542\"&gt;塔城&lt;/option&gt;\r\n&lt;option value=\"6543\"&gt;阿勒泰&lt;/option&gt;\r\n&lt;option value=\"6590\"&gt;石河子&lt;/option&gt;\r\n&lt;/select&gt;\r\n&lt;/td&gt;\r\n&lt;td class=\"black_con9\" align=\"right\"&gt;县/市：&lt;/td&gt;\r\n&lt;td class=\"black_con9\"&gt;\r\n&lt;select name=\"select2\" id=\"select2\"  &gt;\r\n\r\n&lt;/select", "Konwledge_Point": "通过例子学习", "Question": ["html   select 控件联动从sqlserver数据库里取值。C#", ["现在要用三个select控件完成联动，数据从sqlserver里取，请大神给可用例子。", "\n譬如第一个select是省，第二个select是地州，第三个select是县级，三个select ", "\n都需要从数据库里取而且需要互相联动。请大神提供一个可用的例子便于学习。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;黑马和尚硅谷的视频很不错&lt;br /&gt;想快速入门的话可以看看遇见狂神说&lt;br /&gt;都在b站&amp;#xff0c;有用记得采纳呐&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["刚学Java这没弄明白帮着看看", ["\n", "帮忙看看这怎么做，做的时候老是错误，有没有例子参考，刚刚开始有什么推荐的学习视频嘛"]], "Tag": "程序设计"}
{"Answer": "这些是Http协议基础\r\n[url]http://zsxxsz.iteye.com/blog/568250[/url]\r\n[url]http://kb.cnblogs.com/page/130970/[/url]\r\n[url]http://www.cnblogs.com/li0803/archive/2008/11/03/1324746.html[/url]", "Konwledge_Point": "通过例子学习", "Question": ["求教：关于php学习中的一些基本网络技术", ["正在看ChinaITLab的PHP视频教程，第三集中有一个例子", "\n<?php", "\n    $fp = fsockopen(\"", "www.163.com\",80,&$errno,&$srrstr,10", ");", "\n    if(!$fp){", "\n        echo \"$errstr ($errno)", "\\n\";", "\n    }else{", "\n        fputs($fp,\"GET / HTTP/1.0\\nHost: ", "www.163.com\\n\\n\"", ");", "\n        while(!feof($fp)){", "\n            echo fgets($fp,128);", "\n        }", "\n        fclose($fp);", "\n    }", "\n?>", "\n我的问题是：", "\n    GET / HTTP/1.0\\nHost: ", "www.163.com\\n\\n", "  这串字符有什么用？为什么要这样写？是怎么知道这串字符的写法的？", "\n\n", "我现在了解的是：GET是HTTP协议里的命令，这串字符相当于向浏览器地址栏中输入www.163.com后按回车键，但是我不知道为什么要这样写，协议里规定的格式是怎么样的，这些内容从哪里可以学到？", "\n\n", "另外这个程序无法获得163的页面，但是百度可以。难道是163页面里有视频，百度页面简洁只有字符图片的原因？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单来说施密特正交化和QR分解都是针对矩阵的正交变换&amp;#xff08;orthogonal transformation&amp;#xff09;方法。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;施密特正交化&amp;#xff08;Schmidt orthogonalization&amp;#xff09;是一种将非正交向量组转化为正交向量组的方法&amp;#xff0c;可以使用Gram-Schmidt正交化算法实现。这种方法的优点是能够保证转换后的向量组正交&amp;#xff0c;但缺点是算法较为复杂&amp;#xff0c;而且在运算过程中有可能出现数值精度问题。&lt;/p&gt;\n&lt;p&gt;QR分解&amp;#xff08;QR decomposition&amp;#xff09;是一种将矩阵分解为正交矩阵和上三角矩阵的方法。QR分解的优点是算法相对简单&amp;#xff0c;而且可以利用Q矩阵的正交性质来解决线性方程组&amp;#xff0c;或者使用R矩阵的上三角结构来做矩阵运算。&lt;/p&gt;\n&lt;p&gt;举个例子&amp;#xff0c;在统计学中&amp;#xff0c;需要&lt;strong&gt;对数据进行降维处理来简化数据结构&lt;/strong&gt;&amp;#xff0c;其中一种方法就是主成分分析&amp;#xff08;PCA&amp;#xff09;。在PCA中&amp;#xff0c;使用QR分解来求解协方差矩阵的特征值和特征向量&amp;#xff0c;来找出数据主要的方向。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["关于线性代数里施密特正交化和QR分解的疑问", ["学习线代的时候，一直搞不明白矩阵施密特正交化和QR分解的动机是什么？", "这样做有什么好处呢？在百度上搜过，都说简便矩阵运算，但是没有具体的例子，我还是不明白为什么。", "希望解答能结合矩阵和现实中的一个例子，这样我好理解。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你typedef struct list 中这样&lt;br /&gt; Item enteries[MAXSIZE];  //项数组&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  int items;  //列表中项的个数&lt;/span&gt;&lt;br /&gt;定义是顺序表的方式, 不是链表啊&lt;/p&gt;\n&lt;p&gt;你顺序表和链表弄混了吧&lt;/p&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void InitializeList(List *plist)\n{\n   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;plist&amp;#61;(List *)malloc(sizeof(List));&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;plist已经初始化了,不需要再创建\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (plist !&amp;#61; NULL)(*plist).items&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(EXIT_FAILURE);\n\n}\nstatic void CopyToNode(Item item, List *plist)\n{\n   strcpy((*plist).enteries[(*plist).items].title,item.title);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;去掉-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n   (*plist).enteries[(*plist).items].rating &amp;#61; item.rating;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;去掉-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;该函数需要根据Item结构体进行修改&amp;#xff0c;以上是针对struct film修改的例子\n   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(*plist).enteries[(*plist).items-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; item;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/317806517056176.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C语言学习，链表的实现", ["我在编写下面程序时：", "film.c", "\n", "//使用抽象数据类型（ADT）风格的链表", "\n", "//与list.c一起编译", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "  ", "//提供exit()的原型", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "\"list.h\"", "  ", "//定义List、Item", "\n", "void", " ", "showmovies", "(Item item)", ";\n", "char", " *", "s_gets", "(", "char", " *st, ", "int", " n)", ";\n", "int", " ", "main", "(", "void", ")", "\n", "{\n   List movies;\n   Item temp;\n   ", "//初始化", "\n   ", "InitializeList", "(&movies);\n   ", "if", " (", "ListIsFull", "(&movies))\n   {\n      ", "fprintf", "(stderr, ", "\"No memory available! Bye!\\n\"", ");\n      ", "exit", "(", "1", ");\n   }\n\n   ", "//获取用户输入并存储", "\n   ", "puts", "(", "\"Enter first movie title:\"", ");\n   ", "while", " (", "s_gets", "(temp.title, TSIZE) != ", "NULL", " && temp.title[", "0", "] != ", "'\\0'", ")\n   {\n      ", "puts", "(", "\"Enter your rating <0-10>:\"", ");\n      ", "scanf", "(", "\"%d\"", ", &temp.rating);\n      ", "while", " (", "getchar", "() != ", "'\\n'", ")\n         ", "continue", ";\n      ", "if", "(", "AddItem", "(temp, &movies) == ", "0", ")\n      {\n         ", "fprintf", "(stderr, ", "\"Problem allocating memory\\n\"", ");\n         ", "break", ";\n      }\n      ", "if", " (", "ListIsFull", "(&movies))\n      {\n         ", "puts", "(", "\"The list is now full.\"", ");\n         ", "break", ";\n      }\n      ", "puts", "(", "\"Enter next movie title (empty line to stop):\"", ");\n   }\n\n   ", "//显示", "\n   ", "if", " (", "ListIsEmpty", "(&movies))\n      ", "printf", "(", "\"No data entered. \"", ");\n   ", "else", "\n   {\n      ", "printf", "(", "\"Here is the movie list:\\n\"", ");\n      ", "Traverse", "(&movies, showmovies);\n   }\n   ", "printf", "(", "\"You entered %d movies.\\n\"", ", ", "ListItemCount", "(&movies));\n\n   ", "//清理", "\n   ", "EmptyTheList", "(&movies);\n   ", "printf", "(", "\"Bye!\\n\"", ");\n\n   ", "return", " ", "0", ";\n}\n\n", "void", " ", "showmovies", "(Item item)", "\n", "{\n   ", "printf", "(", "\"Movie: %s Rating: %d\\n\"", ", item.title, item.rating);\n}\n\n", "char", " *", "s_gets", "(", "char", " *st, ", "int", " n)", "\n", "{\n   ", "char", " *ret_val;\n   ", "char", " *find;\n\n   ret_val = ", "fgets", "(st, n, stdin);\n   ", "if", " (ret_val)\n   {\n      find = ", "strchr", "(st, ", "'\\n'", ");  ", "//查找换行符", "\n      ", "if", "(find)  ", "//如果地址不是NULL", "\n         *find=", "'\\0'", ";  ", "//在此处放置一个空字符", "\n      ", "else", "\n         ", "while", " (", "getchar", "() != ", "'\\n'", ")\n            ", "continue", ";  ", "//处理输入行的剩余内容", "\n   }\n   ", "return", " ret_val;\n}\n\n", "\n", "list.c", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "\"list.h\"", "\n\n", "//局部函数的原型", "\n", "static", " ", "void", " ", "CopyToNode", "(Item item,List *plist)", ";\n\n", "//接口函数", "\n", "//把链表置空", "\n", "void", " ", "InitializeList", "(List *plist)", "\n", "{\n   plist=(List *)", "malloc", "(", "sizeof", "(List));\n   ", "if", " (plist != ", "NULL", ")(*plist).items=", "0", ";\n   ", "else", " ", "exit", "(EXIT_FAILURE);\n}\n\n", "//如果链表为空，返回1", "\n", "int", " ", "ListIsEmpty", "(", "const", " List *plist)", "\n", "{\n   ", "//使用items成员直接判别链表是否已为空", "\n   ", "if", " ((*plist).items==", "0", ")\n      ", "return", " ", "1", ";\n   ", "else", "\n      ", "return", " ", "0", ";\n}\n\n", "//如果链表已满，返回1", "\n", "int", " ", "ListIsFull", "(", "const", " List *plist)", "\n", "{\n   ", "int", " full;\n   ", "if", " ((*plist).items==MAXSIZE)\n      full=", "1", ";\n   ", "else", "\n      full=", "0", ";\n   ", "return", " full;\n}\n\n", "//返回节点数量", "\n", "unsigned", " ", "int", " ", "ListItemCount", "(", "const", " List *plist)", "\n", "{\n   ", "return", " (", "unsigned", " ", "int", ")(* plist).items;\n}\n\n", "//创建存储项的节点", "\n", "int", " ", "AddItem", "(Item item, List *plist)", "\n", "{\n   ", "if", " (", "ListIsFull", "(plist))\n      ", "return", " ", "0", ";\n   ", "//对于静态列表，需要判断链表是否已满", "\n   ", "CopyToNode", "(item, plist);\n   plist->items++;\n   ", "//复制节点进行数的下一个元素，下标表示为(*plist).items++", "\n\n   ", "return", " ", "1", ";\n}\n\n", "void", " ", "Traverse", "(", "const", " List *plist, ", "void", " (*pfun)(Item item))", "\n", "{\n   ", "int", " i=", "0", ";\n\n   ", "while", " (i<(*plist).items)\n      (*pfun)((*plist).enteries[i++]);\n   ", "//按照数组的形式遍历所有节点", "\n}\n\n", "void", " ", "EmptyTheList", "(List *plist)", "\n", "{\n   (*plist).items=", "0", ";\n}\n\n", "static", " ", "void", " ", "CopyToNode", "(Item item, List *plist)", "\n", "{\n   ", "strcpy", "((*plist).enteries[(*plist).items", "-1", "].title,item.title);\n   (*plist).enteries[(*plist).items", "-1", "].rating = item.rating;\n   ", "//该函数需要根据Item结构体进行修改，以上是针对struct film修改的例子", "\n   ", "//(*plist).enteries[(*plist).items-1] = item;", "\n}\n\n", "\n", "list.h", "\n", "//接口头文件，简单链表类型的头文件", "\n", "#", "ifndef", " LIST_H_", "\n", "#", "define", " LIST_H_", "\n\n", "//特定程序的声明", "\n\n", "#", "define", " TSIZE 45  ", "//存储电影名的数组大小", "\n", "struct", " ", "film", "\n{\n   ", "char", " title[TSIZE];\n   ", "int", " rating;\n};\n\n", "//一般类型定义", "\n\n", "typedef", " ", "struct", " ", "film", " Item;\n\n", "typedef", " ", "struct", " ", "node", "\n{\n   Item item;\n   ", "struct", " ", "node", " *next;\n} Node;\n\n", "#", "define", " MAXSIZE 100", "\n", "typedef", " ", "struct", " ", "list", "\n{\n   Item enteries[MAXSIZE];  ", "//项数组", "\n   ", "int", " items;  ", "//列表中项的个数", "\n} List;\n\n", "//函数原型", "\n\n", "//操作：初始化一个链表", "\n", "//前提条件：plist指向一个链表", "\n", "//后置条件：链表初始化为空", "\n", "void", " ", "InitializeList", "(List *plist)", ";\n\n", "//操作：确定链表是否为空，plist指向一个已初始化的链表", "\n", "//后置条件：如果链表为空，该函数返回true；否则返回false", "\n", "int", " ", "ListIsEmpty", "(", "const", " List *plist)", ";\n\n", "//操作：确定链表是否已满，plist指向一个已初始化的链表", "\n", "//后置条件：如果链表已满，该函数返回true；否则返回false", "\n", "int", " ", "ListIsFull", "(", "const", " List *plist)", ";\n\n", "//操作：确定链表中的项数，plist指向一个已初始化的链表", "\n", "//后置条件：该函数返回链表中的项数", "\n", "unsigned", " ", "int", " ", "ListItemCount", "(", "const", " List *plist)", ";\n\n", "//操作：在链表的末尾添加项", "\n", "//前提条件：item是一个待添加至链表的项，plist指向一个已初始化的链表", "\n", "//后置条件：如果可以，该函数在链表末尾添加一个项，且返回ture，否则返回false", "\n", "int", " ", "AddItem", "(Item item, List *plist)", ";\n\n", "//操作：把函数作用于链表中的每一项", "\n", "//plist指向一个已初始化的链表", "\n", "//pfun指向一个函数，该函数接受一个Item类型的参数，且无返回值", "\n", "//后置条件：pfun指向的函数作用于链表中的每一项一次", "\n", "void", " ", "Traverse", "(", "const", " List *plist, ", "void", "(*pfun)(Item item))", ";\n\n", "//操作：释放已分配的内存（如果有的话）", "\n", "//plist指向一个已初始化的链表", "\n", "//后置条件：释放了为链表分配的所有内存，链表设置为空", "\n", "void", " ", "EmptyTheList", "(List *plist)", ";\n\n", "#", "endif", "\n\n", "\n", "运行结果如下", "\n", "请问是什么问题？应该如何修改"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/misterliwei/article/details/976988，参考", "Konwledge_Point": "通过例子学习", "Question": ["求帮忙，关于内核对象", ["2）请结合具体的例子解释什么是内核对象，对内核对象的操纵与之前学习的对指针的操作方法有什么本质的区别？"]], "Tag": "程序设计"}
{"Answer": "还有一个文件没补充：\r\n/**\r\n * allows for downloading of grid data (store) directly into excel\r\n * Method: extracts data of gridPanel store, uses columnModel to construct XML excel document,\r\n * converts to Base64, then loads everything into a data URL link.\r\n *\r\n * @author\t\tAnimal\t\t&lt;extjs support team&gt;\r\n *\r\n */\r\n\r\n/**\r\n * base64 encode / decode\r\n *\r\n * @location \thttp://www.webtoolkit.info/\r\n *\r\n */\r\n\r\nvar Base64 = (function() {\r\n    // Private property\r\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n    // Private method for UTF-8 encoding\r\n    function utf8Encode(string) {\r\n        string = string.replace(/\\r\\n/g,\"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n &lt; string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c &lt; 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) {\r\n                utftext += String.fromCharCode((c &gt;&gt; 6) | 192);\r\n                utftext += String.fromCharCode((c &amp; 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c &gt;&gt; 12) | 224);\r\n                utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128);\r\n                utftext += String.fromCharCode((c &amp; 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    // Public method for encoding\r\n    return {\r\n        encode : (typeof btoa == 'function') ? function(input) {\r\n            return btoa(utf8Encode(input));\r\n        } : function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n            var i = 0;\r\n            input = utf8Encode(input);\r\n            while (i &lt; input.length) {\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n                enc1 = chr1 &gt;&gt; 2;\r\n                enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\r\n                enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\r\n                enc4 = chr3 &amp; 63;\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n                output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n            }\r\n            return output;\r\n        }\r\n    };\r\n})();\r\n\r\nExt.override(Ext.grid.GridPanel, {\r\n    getExcelXml: function(includeHidden) {\r\n        var worksheet = this.createWorksheet(includeHidden);\r\n        var totalWidth = this.getColumnModel().getTotalWidth(includeHidden);\r\n        return '&lt;xml version=\"1.0\" encoding=\"utf-8\"&gt;' +\r\n            '&lt;ss:Workbook xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns:o=\"urn:schemas-microsoft-com:office:office\"&gt;' +\r\n            '&lt;o:DocumentProperties&gt;&lt;o:Title&gt;' + this.title + '&lt;/o:Title&gt;&lt;/o:DocumentProperties&gt;' +\r\n            '&lt;ss:ExcelWorkbook&gt;' +\r\n            '&lt;ss:WindowHeight&gt;' + worksheet.height + '&lt;/ss:WindowHeight&gt;' +\r\n            '&lt;ss:WindowWidth&gt;' + worksheet.width + '&lt;/ss:WindowWidth&gt;' +\r\n            '&lt;ss:ProtectStructure&gt;False&lt;/ss:ProtectStructure&gt;' +\r\n            '&lt;ss:ProtectWindows&gt;False&lt;/ss:ProtectWindows&gt;' +\r\n            '&lt;/ss:ExcelWorkbook&gt;' +\r\n            '&lt;ss:Styles&gt;' +\r\n            '&lt;ss:Style ss:ID=\"Default\"&gt;' +\r\n            '&lt;ss:Alignment ss:Vertical=\"Top\" ss:WrapText=\"1\" /&gt;' +\r\n            '&lt;ss:Font ss:FontName=\"arial\" ss:Size=\"10\" /&gt;' +\r\n            '&lt;ss:Borders&gt;' +\r\n            '&lt;ss:Border ss:Color=\"#e4e4e4\" ss:Weight=\"1\" ss:LineStyle=\"Continuous\" ss:Position=\"Top\" /&gt;' +\r\n            '&lt;ss:Border ss:Color=\"#e4e4e4\" ss:Weight=\"1\" ss:LineStyle=\"Continuous\" ss:Position=\"Bottom\" /&gt;' +\r\n            '&lt;ss:Border ss:Color=\"#e4e4e4\" ss:Weight=\"1\" ss:LineStyle=\"Continuous\" ss:Position=\"Left\" /&gt;' +\r\n            '&lt;ss:Border ss:Color=\"#e4e4e4\" ss:Weight=\"1\" ss:LineStyle=\"Continuous\" ss:Position=\"Right\" /&gt;' +\r\n            '&lt;/ss:Borders&gt;' +\r\n            '&lt;ss:Interior /&gt;' +\r\n            '&lt;ss:NumberFormat /&gt;' +\r\n            '&lt;ss:Protection /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:ID=\"title\"&gt;' +\r\n            '&lt;ss:Borders /&gt;' +\r\n            '&lt;ss:Font /&gt;' +\r\n            '&lt;ss:Alignment ss:WrapText=\"1\" ss:Vertical=\"Center\" ss:Horizontal=\"Center\" /&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"@\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:ID=\"headercell\"&gt;' +\r\n            '&lt;ss:Font ss:Bold=\"1\" ss:Size=\"10\" /&gt;' +\r\n            '&lt;ss:Alignment ss:WrapText=\"1\" ss:Horizontal=\"Center\" /&gt;' +\r\n            '&lt;ss:Interior ss:Pattern=\"Solid\" ss:Color=\"#A3C9F1\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:ID=\"even\"&gt;' +\r\n            '&lt;ss:Interior ss:Pattern=\"Solid\" ss:Color=\"#CCFFFF\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"even\" ss:ID=\"evendate\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"yyyy-mm-dd\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"even\" ss:ID=\"evenint\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"0\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"even\" ss:ID=\"evenfloat\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"0.00\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:ID=\"odd\"&gt;' +\r\n            '&lt;ss:Interior ss:Pattern=\"Solid\" ss:Color=\"#CCCCFF\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"odd\" ss:ID=\"odddate\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"yyyy-mm-dd\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"odd\" ss:ID=\"oddint\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"0\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;ss:Style ss:Parent=\"odd\" ss:ID=\"oddfloat\"&gt;' +\r\n            '&lt;ss:NumberFormat ss:Format=\"0.00\" /&gt;' +\r\n            '&lt;/ss:Style&gt;' +\r\n            '&lt;/ss:Styles&gt;' +\r\n            worksheet.xml +\r\n            '&lt;/ss:Workbook&gt;';\r\n    },\r\n\r\n    createWorksheet: function(includeHidden) {\r\n        // Calculate cell data types and extra class names which affect formatting\r\n        var cellType = [];\r\n        var cellTypeClass = [];\r\n        var cm = this.getColumnModel();\r\n        var totalWidthInPixels = 0;\r\n        var colXml = '';\r\n        var headerXml = '';\r\n        var visibleColumnCountReduction = 0;\r\n        var colCount = cm.getColumnCount();\r\n        for (var i = 0; i &lt; colCount; i++) {\r\n            if ((cm.getDataIndex(i) != '')\r\n                &amp;&amp; (includeHidden || !cm.isHidden(i))) {\r\n                var w = cm.getColumnWidth(i)\r\n                totalWidthInPixels += w;\r\n                if (cm.getColumnHeader(i) === \"\"){\r\n                \tcellType.push(\"None\");\r\n                \tcellTypeClass.push(\"\");\r\n                \t++visibleColumnCountReduction;\r\n                }\r\n                else\r\n                {\r\n                    colXml += '&lt;ss:Column ss:AutoFitWidth=\"1\" ss:Width=\"' + w + '\" /&gt;';\r\n                    headerXml += '&lt;ss:Cell ss:StyleID=\"headercell\"&gt;' +\r\n                        '&lt;ss:Data ss:Type=\"String\"&gt;' + cm.getColumnHeader(i) + '&lt;/ss:Data&gt;' +\r\n                        '&lt;ss:NamedCell ss:Name=\"Print_Titles\" /&gt;&lt;/ss:Cell&gt;';\r\n                    var fld = this.store.recordType.prototype.fields.get(cm.getDataIndex(i));\r\n                    switch(fld.type) {\r\n                        case \"int\":\r\n                            cellType.push(\"Number\");\r\n                            cellTypeClass.push(\"int\");\r\n                            break;\r\n                        case \"float\":\r\n                            cellType.push(\"Number\");\r\n                            cellTypeClass.push(\"float\");\r\n                            break;\r\n                        case \"bool\":\r\n                        case \"boolean\":\r\n                            cellType.push(\"String\");\r\n                            cellTypeClass.push(\"\");\r\n                            break;\r\n                        case \"date\":\r\n                            cellType.push(\"DateTime\");\r\n                            cellTypeClass.push(\"date\");\r\n                            break;\r\n                        default:\r\n                            cellType.push(\"String\");\r\n                            cellTypeClass.push(\"\");\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var visibleColumnCount = cellType.length - visibleColumnCountReduction;\r\n\r\n        var result = {\r\n            height: 9000,\r\n            width: Math.floor(totalWidthInPixels * 30) + 50\r\n        };\r\n\r\n        // Generate worksheet header details.\r\n        var t = '&lt;ss:Worksheet ss:Name=\"' + this.title + '\"&gt;' +\r\n            '&lt;ss:Names&gt;' +\r\n            '&lt;ss:NamedRange ss:Name=\"Print_Titles\" ss:RefersTo=\"=\\'' + this.title + '\\'!R1:R2\" /&gt;' +\r\n            '&lt;/ss:Names&gt;' +\r\n            '&lt;ss:Table x:FullRows=\"1\" x:FullColumns=\"1\"' +\r\n            ' ss:ExpandedColumnCount=\"' + (visibleColumnCount + 2) +\r\n            '\" ss:ExpandedRowCount=\"' + (this.store.getCount() + 2) + '\"&gt;' +\r\n            colXml +\r\n            '&lt;ss:Row ss:Height=\"38\"&gt;' +\r\n            '&lt;ss:Cell ss:StyleID=\"title\" ss:MergeAcross=\"' + (visibleColumnCount - 1) + '\"&gt;' +\r\n            '&lt;ss:Data xmlns:html=\"http://www.w3.org/TR/REC-html40\" ss:Type=\"String\"&gt;' +\r\n            \r\n            //注意修改Excel标题\r\n            '&lt;html:B&gt;'+includeHidden+'&lt;/html:B&gt;&lt;/ss:Data&gt;&lt;ss:NamedCell ss:Name=\"Print_Titles\" /&gt;' +\r\n            '&lt;/ss:Cell&gt;' +\r\n            '&lt;/ss:Row&gt;' +\r\n            '&lt;ss:Row ss:AutoFitHeight=\"1\"&gt;' +\r\n            headerXml +\r\n            '&lt;/ss:Row&gt;';\r\n\r\n        // Generate the data rows from the data in the Store\r\n        for (var i = 0, it = this.store.data.items, l = it.length; i &lt; l; i++) {\r\n            t += '&lt;ss:Row&gt;';\r\n            var cellClass = (i &amp; 1) ? 'odd' : 'even';\r\n            r = it[i].data;\r\n            var k = 0;\r\n            for (var j = 0; j &lt; colCount; j++) {\r\n                if ((cm.getDataIndex(j) != '')\r\n                    &amp;&amp; (includeHidden || !cm.isHidden(j))) {\r\n                    var v = r[cm.getDataIndex(j)];\r\n                    if (cellType[k] !== \"None\") {\r\n                        t += '&lt;ss:Cell ss:StyleID=\"' + cellClass + cellTypeClass[k] + '\"&gt;&lt;ss:Data ss:Type=\"' + cellType[k] + '\"&gt;';\r\n                        if (cellType[k] == 'DateTime') {\r\n                            t += v.format('Y-m-d');\r\n                        } else {\r\n                            t += v;\r\n                        }\r\n                        t +='&lt;/ss:Data&gt;&lt;/ss:Cell&gt;';\r\n                    }\r\n                    k++;\r\n                }\r\n            }\r\n            t += '&lt;/ss:Row&gt;';\r\n        }\r\n\r\n        result.xml = t + '&lt;/ss:Table&gt;' +\r\n            '&lt;x:WorksheetOptions&gt;' +\r\n            '&lt;x:PageSetup&gt;' +\r\n            '&lt;x:Layout x:CenterHorizontal=\"1\" x:Orientation=\"Landscape\" /&gt;' +\r\n            '&lt;x:Footer x:Data=\"Page &amp;amp;P of &amp;amp;N\" x:Margin=\"0.5\" /&gt;' +\r\n            '&lt;x:PageMargins x:Top=\"0.5\" x:Right=\"0.5\" x:Left=\"0.5\" x:Bottom=\"0.8\" /&gt;' +\r\n            '&lt;/x:PageSetup&gt;' +\r\n            '&lt;x:FitToPage /&gt;' +\r\n            '&lt;x:Print&gt;' +\r\n            '&lt;x:PrintErrors&gt;Blank&lt;/x:PrintErrors&gt;' +\r\n            '&lt;x:FitWidth&gt;1&lt;/x:FitWidth&gt;' +\r\n            '&lt;x:FitHeight&gt;32767&lt;/x:FitHeight&gt;' +\r\n            '&lt;x:ValidPrinterInfo /&gt;' +\r\n            '&lt;x:VerticalResolution&gt;600&lt;/x:VerticalResolution&gt;' +\r\n            '&lt;/x:Print&gt;' +\r\n            '&lt;x:Selected /&gt;' +\r\n            '&lt;x:DoNotDisplayGridlines /&gt;' +\r\n            '&lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;' +\r\n            '&lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;' +\r\n            '&lt;/x:WorksheetOptions&gt;' +\r\n            '&lt;/ss:Worksheet&gt;';\r\n        return result;\r\n    }\r\n});", "Konwledge_Point": "通过例子学习", "Question": ["ext倒excel的问题？", ["最近学习ext，想从把girdPanel里的数据倒出生成excel，从网上看了一些例子 但是只能到出空的excel! grid的数据没有生成"]], "Tag": "程序设计"}
{"Answer": "A表本来有索引a,b\r\n现A表更新了，增加了c列,然后用程序自动的给c列加索引，这叫增量索引", "Konwledge_Point": "通过例子学习", "Question": ["什么是增量索引？", ["最近在学习lucene,看到里面提到“增量索引”的概念，但不是太清楚，请问一下，究竟什么才是增量索引，最好能给举一个例子。"]], "Tag": "程序设计"}
{"Answer": "commons-logging.jar 缺了这个包", "Konwledge_Point": "通过例子学习", "Question": ["DWR学习中遇到的问题请高人帮助", ["java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory ", "at org.directwebremoting.dwrp.PollHandler.<clinit>(PollHandler.java:443) ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source) ", "2008-10-28 9:24:46 org.apache.catalina.core.StandardWrapperValve invoke ", "严重: Allocate exception for servlet dwr ", "java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory ", "at org.directwebremoting.dwrp.PollHandler.<clinit>(PollHandler.java:443) ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source) ", "2008-10-28 9:24:46 org.apache.catalina.core.ApplicationContext log ", "严重: StandardWrapper.Throwable ", "java.lang.NoClassDefFoundError: Could not initialize class org.directwebremoting.servlet.PlainPollHandler ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source) ", "2008-10-28 9:24:46 org.apache.catalina.core.StandardWrapperValve invoke ", "严重: Allocate exception for servlet dwr ", "java.lang.NoClassDefFoundError: Could not initialize class org.directwebremoting.servlet.PlainPollHandler ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source) ", "2008-10-28 9:24:46 org.apache.catalina.core.ApplicationContext log ", "严重: StandardWrapper.Throwable ", "java.lang.NoClassDefFoundError: Could not initialize class org.directwebremoting.servlet.PlainPollHandler ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source) ", "2008-10-28 9:24:46 org.apache.catalina.core.StandardWrapperValve invoke ", "严重: Allocate exception for servlet dwr ", "java.lang.NoClassDefFoundError: Could not initialize class org.directwebremoting.servlet.PlainPollHandler ", "at java.lang.Class.forName0(Native Method) ", "at java.lang.Class.forName(Unknown Source) ", "at org.directwebremoting.impl.ContainerUtil.class$(ContainerUtil.java:97) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaults(ContainerUtil.java:150) ", "at org.directwebremoting.impl.ContainerUtil.setupDefaultContainer(ContainerUtil.java:125) ", "at org.directwebremoting.servlet.DwrServlet.init(DwrServlet.java:73) ", "at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161) ", "at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:806) ", "at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133) ", "at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175) ", "at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) ", "at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104) ", "at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ", "at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216) ", "at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844) ", "at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634) ", "at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445) ", "at java.lang.Thread.run(Unknown Source)", "\n\n", " ", "问题补充：", "zhjb2000 commons-logging.jar 缺了这个包", "在看DWR文档的时候 并没有说要引入这个包啊", "问题补充：", "zhjb2000 谢谢你的回答 但是你的回答还不能解决我的疑问。如果实在没有更好答案就给分给你了", "问题补充：", "疑问。。我第一次写DWR程序的时候是直接再我以前写的Struts项目下面写的DWR程序。当时并没有报缺少commons-logging.jar 错误（因为有这个包）。后来自己建了个工程写了个最简单的例子。就报了 我上面发的错误。实在不解，于是我导入了Struts jar包（包含commons-logging.jar ），新写的例子就可以用了。最后我又删除了Struts jar包（commons-logging.jar 也删除了）工程照样可以运行。。"]], "Tag": "程序设计"}
{"Answer": "我也学过一段时间javaFX，入门比较简单。不过很多人，包括SUN公司自己对他也不看好。对他的在线应用有sun自己的[url]http://javafx.com/samples/[/url]。还有2016年奥运会的官网，自己找一下吧。其他的我就不知道了，不过一定不少。", "Konwledge_Point": "通过例子学习", "Question": ["JavaFx有真正上线的应用吗?", ["JavaFx有真正上线的应用吗?", "\n最近学习了一段时间,", "\n可是在网上找了好久也没有找到相应的例子,", "\n不知道有没有人真的敢用这种技术."]], "Tag": "程序设计"}
{"Answer": "先定义根节点，如果是静态树就用appendchild方法来添加各个子节点，如是想要动态树那么根节点要定义成AsyncTreeNode，然后设置url来返回子节点就行。\r\n其实一个节点的基本属性有（text,id,leaf）就行", "Konwledge_Point": "通过例子学习", "Question": ["Ext中tree的问题（菜鸟提问）", ["看3.2 的API跟例子，不大明白其中的代码所含的意思。最近在学习Ext,想做个从数据库读取的数据，然后显示在tree上，要可选的"]], "Tag": "程序设计"}
{"Answer": "应该是rails版本不对,你换成rails2.1就可以了.", "Konwledge_Point": "通过例子学习", "Question": ["小弟刚开始学习ROR，参考的是web敏捷开发英文版，遇到了一点问题请指教！", ["我参考书中的例子在对表结构进行变更新增一个字段的时候，002_add_pice.rb内容：", "\n\n", "class AddPice < ActiveRecord::Migration", "\n  def self.up", "\n\n", "add_column :products, :price, :decimal, :precision => 8, :scale => 2, :default => 0\n", "\n\n", "end", "\n\n", "def self.down", "\n\n", "remove_column :products, :price\n", "\n\n", "end", "\nend", "\n以上完全是参照书上的，但是在运行rake db:migrate的时候报了错如下：", "\n\n", "(in D:/InstantRails-1.2-win/InstantRails/rails_apps/work/depot)", "\n== AddPice: migrating =========================================================", "\n-- add_column(:products, :price, :decimal, {:precision=>8, :scale=>2, :default=>0})", "\nrake aborted!", "\nYou have a nil object when you didn't expect it!", "\nYou might have expected an instance of Array.", "\nThe error occured while evaluating nil.[]", "\n\n", "请问这个是什么问题？"]], "Tag": "程序设计"}
{"Answer": "确认不是放在了target 文件夹下面", "Konwledge_Point": "通过例子学习", "Question": ["myeclipse写好的struts.xml文件消失", ["菜鸟一枚，最近在学习struts2，之前写一个小例子写好，完善修改后发现struts.xml不见了，以为是自己不小心删了，就又写了一个", "\n然后写第二个例子，配置好struts.xml后，就配置web.xml，但是配置完成后，发现classes下的struts.xml又不见了，在资源管理下打开搜索也没有", "\n很疑惑，求大神指导"]], "Tag": "程序设计"}
{"Answer": "简单的拆分用下面的代码就能做到, 但是类似 林市大厦 这种就无法分辨了, 只能作为一个市名去拆\r\n真要是想准确, 就穷举出所有省/市数据, 取出来时做匹配判断, 网上能找到相关的库\r\n\r\n```\r\n procedure TForm1.Button1Click(Sender: TObject);\r\nconst\r\n  nSA: Array[0..4] of string = ('省','市','区','县','镇');\r\nvar\r\n  nStr, nText: string;\r\n  nIndex, nPI, nL: Integer;\r\nbegin\r\n  Memo1.Lines.Clear;\r\n  nText := string(Edit1.Text);\r\n  nPI := 0;\r\n  for nStr in nSA do\r\n  begin\r\n    nL := nStr.Length;\r\n    nIndex := nText.IndexOf(nStr, nPI);\r\n    while nIndex &gt; -1 do\r\n    begin\r\n      Memo1.Lines.Add(nText.Substring(nPI, nIndex + nL - nPI));\r\n      nPI := nIndex + nL;\r\n      nIndex := nText.IndexOf(nStr, nPI);\r\n    end;\r\n  end;\r\n  Memo1.Lines.Add(nText.Substring(nPI, nText.Length));\r\nend;\r\n\r\n```", "Konwledge_Point": "通过例子学习", "Question": ["delphi 查找字符串，没有思路了？", ["江苏省苏州市昆山市朝阳北路88号林市大厦6楼；", "\n上海市闵行区龙吴路1100弄111号；", "\n安徽省阜阳市太和县插花镇胡海庄50户-2；", "\n\n", "有没有一个含税可以返回上面地址的，省、市、区、县、镇，镇后面的统一为地址。", "\n尤其是第一个地址比较难搞啊，里面有多个市不好判断额，老师们给个例子学习下。"]], "Tag": "程序设计"}
{"Answer": "代码简介可以使用三目表达式\r\nlong l = 10000000;\r\n\t\t  long a = l&lt;10000?l:l/10000;", "Konwledge_Point": "通过例子学习", "Question": ["java处理long型金额自动调整", ["对于一个long型变量，希望数值低于10000的时候，直接输出；10000到1亿之间，保留万以上的数字和小数点后两位，同样处理1亿以上。", "\nif else不想写，可又想不到简洁的代码，谁有好的例子能学习参考"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;class person 类名是小写p&amp;#xff0c;后面全都是大写P了&lt;/p&gt;\n&lt;p&gt;class Student前面缺个分号。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["c++一直编译不通过", ["学习虚拟类的一个例子，自己写一直编译不通过，不知道出什么问题了", "\n", "#", "include", " <iostream>\n#", "include", " <", "string", ".h>\nusing namespace std;\n", "class", " person{\n    public:\n        ", "Person(", "string", " ", "nam", ",", "char", " ", "s", ",", "int", " ", "a", ")", "\n        {\n            name=nam;\n            sex=s;\n            age=a;\n        }\n        protected:\n            ", "string", " name;\n            ", "char", " sex;\n            ", "int", " age;\n};\n", "class", " Teacher:", "virtual", " public Person\n{\n    public:\n        ", "Teacher(", "string", " ", "nam", ",", "char", " ", "s", ",", "int", " ", "a", ",", "string", " ", "t", ")", ":", "Person(", "nam", ",", "s", ",", "a", ")", "{\n            title=t;\n        }\n    protected:\n        ", "string", " title;\n}\n", "class", " Student:", "virtual", " public Person{\n    public:\n    ", "Student(", "string", " ", "nam", ",", "char", " ", "s", ",", "float", " ", "sco", ",", "int", " ", "a", ")", ":", "Person(", "nam", ",", "s", ",", "a", ")", ",score(sco){}\n    protected:\n    ", "float", " score; \n};\n", "class", " Graduate:public Teacher,public Student\n{\n    public:\n        ", "Graduate(", "string", " ", "nam", ",", "char", " ", "s", ",", "int", " ", "a", ",", "string", " ", "t", ",", "float", " ", "sco", ",", "float", " ", "w", ")", ":", "Person(", "nam", ",", "s", ",", "a", ")", ",", "Teacher(", "nam", ",", "s", ",", "a", ",", "t", ")", ",", "Student(", "nam", ",", "s", ",", "a", ",", "sco", ")", ",wage(w){}\n        void show", "()", "{\n            cout<<", "\"name:\"", "<<name<<endl;\n            cout<<", "\"age:\"", "<<age<<endl;\n            cout<<", "\"sex:\"", "<<sex<<endl;\n            cout<<", "\"score:\"", "<<score<<endl;\n            cout<<", "\"title:\"", "<<title<<endl;\n            cout<<", "\"wage:\"", "<<wage<<endl;\n        }\n    ", "private", ":\n        ", "float", " wage;\n};\n", "int", " main", "()", "\n{\n    Graduate gra1(", "\"Yangchong\"", ",", "22", ",", "'m'", ",", "\"assisant\"", ",", "98", ",", "12000", ");\n    gra1.show", "()", ";\n    return ", "0", ";\n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;推荐一本书 锋利的SQL 这本书比较好&amp;#xff0c;可以写出复杂的SQL&amp;#xff0c;我可以发你。或者我的博客也有很多sqlserver 经典文章&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["帆软报表数据集sql", ["有一定sql基础，想知道帆软报表数据集sql怎样学习，有没有啥书或者资料，之前看的例子有sql写几百行的，有点忙然。或者能分享下经验也行，第一次接触这个"]], "Tag": "程序设计"}
{"Answer": "楼主应该先搞清楚portlet是什么东东，然后在讨论他和struts，spring等的集成应用。portlet 其实是构建在servlet之上，是servlet的一个扩展（最低要求servlet 2.3）。遵循JSR-168（Java Portlet Specification V1.0)或JSR-268（Java Portlet Specification V2.0）。按照Java Portlet Specification 的描述，portlet 有一个portlet描述文件，就是portlet.xml，这个跟servlet是对应的；然而不同的是，portlet.xml中定义的portlet还必须在web.xml中一一做个servlet映射，其实配置工作也仅此而已。\r\n从直观上看，portlet就对应页面上的一个小窗口……他主要是用来开发门户系统的，这个说来话可长了，就不深讨论了。\r\n目前做的最好的门户应用当属http://my.msn.com/ 了，楼主可以注册一个帐号去体验一下他是什么样子的，能做些什么就看你自己如何运用了。\r\n关于portlet的入门，我的园子里面有一篇估计很适合你：\r\nhttp://zhaipuhong.iteye.com/blog/212518\r\n\r\n有需要大家可以在讨论一下 :)", "Konwledge_Point": "通过例子学习", "Question": ["Struts2 Portlet问题", ["小弟学习struts2，看到struts2自带的例子中有一个protlet的例子。本人也是初次接触portlet。", "  现在有些问题想问问各位大侠：", "       貌似portlet可以实现一个页面多个窗口的功能。本人下载了liferay-portal-tomcat-6.0-5.1.0，运行了里面的例子，真是漂亮，里面就有多窗口的例子。但是我运行struts2自带的portlet例子，貌似看不到多窗口的效果。貌似每一个页面都是通过一个action来指向的。这样访问一个action确实是只能只访问到一个jsp页面。", "       据我理解，protlet.xml文件中里面的3个模式只不过代表了web-inf下面的3个文件夹，而那3个文件夹只不过用来存放jsp页面。那这样protlet应用有啥用？貌似struts2自带的protlet例子直接用普通的struts2来写只有方便。", "      是不是这个例子是可以用多窗口的来看的，只不过我不知道相应的URL？(本人是绝对的新手)。直接把war包放到tomcat目录下不行，还是tomcat要装啥插件？", "      看了网上的Struts 2 Portlet Tutorial觉得它和struts2自带的protlet很像啊，而且也没有多窗口的介绍。看了之后还是没有解决我的疑问。", "      我接触protlet是因为同学对我说它可以实现多窗口功能，而且struts2框架有相应的jar包。在我看来如果不能实现多窗口功能(没办法第一印象太深了)，这样struts2框架集成protlet实在是多余啊。所以请各位大侠多多赐教，小弟在此感激不尽。 ", "     另外请问一般在做什么项目的时候使用portlet技术比较好？", "问题补充：", "是不是普通的tomcat不能跑portlet？", "看到了很多的的portlet容器，老兄的文章中写了在tomcat中搭建pluto运行环境的。", "PS：为什么我下载的jboss-portal-2.6.6.GA解压之后和它文档说的目录结构不一样？火大的是没有bin目录。", "下载地址是", "http://www.jboss.org/jbossportal/download/index.html"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff01;同学&amp;#xff0c;刚看到问题&amp;#xff0c;给一些简答的建议&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;1.首先是编程兴趣上的建议。&lt;/strong&gt; 大一和大二上基本以C语言、数据结构和算法为主&amp;#xff0c;整体代码还是比较枯燥的。到了大二下和大三会有很多专业课程&amp;#xff0c;尤其很多图形界面交互的课程&amp;#xff0c;需要动手实践和完成实验、作业&amp;#xff0c;包括《数字图像处理》或Qtcreator。个人建议这些课程一定要好好上&amp;#xff0c;别偷懒&amp;#xff0c;能当组长尽量当组长&amp;#xff0c;这些图形界面会进一步提升你的编程兴趣和代码能力。同时&amp;#xff0c;找工作或者本科毕业&amp;#xff0c;你会发现这些课程会让你的编程有个质的提升&amp;#xff0c;当然过程很痛苦&amp;#xff0c;得坚持。&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;strong&gt;2.课程学习建议。&lt;/strong&gt; 个人感觉Qtcreator和MFC都比较接近&amp;#xff0c;两者都可以学习的&amp;#xff0c;不知道你们是不是用Qtcreator来实现《数字图像处理》&amp;#xff0c;因为它们底层都是对图形进行算法的处理&amp;#xff0c;比如灰度处理、锐化处理&amp;#xff0c;都是读取像素再构建算法的过程&amp;#xff0c;同时通过图形界面显示。以我当年课程为例&amp;#xff0c;不论是MFC还是最终Android端&amp;#xff0c;其原理都一样。所以选择一个老师上课用到的工具就好&amp;#xff0c;这样能跟上他进度。再次强调&amp;#xff0c;老师的每个实验都要手动实现&amp;#xff0c;多花时间在这种专业课程上是值得的。&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/277867784776173.png\" alt=\"img\" align=\"center\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/332877784776151.png\" alt=\"img\" align=\"center\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;3.QT或MFC学习建议。&lt;/strong&gt; 两者很类似&amp;#xff0c;个人感觉QT使用某些功能封装得更好&amp;#xff0c;MFC可能更基础一些&amp;#xff0c;安装环境相对容易。在学习过程中&amp;#xff0c;建议抓紧把环境搭建起来&amp;#xff0c;第一步起来后就抓紧跟进学习。接着&amp;#xff0c;你从怎么搭建一个对话框程序开始&amp;#xff0c;如何读取图像至对话框中&amp;#xff0c;如何添加控件按钮&amp;#xff0c;并按照老师的要求一点点实现&amp;#xff0c;坚持一学期肯定会有收获。此外&amp;#xff0c;学习过程中会遇到过程问题&amp;#xff0c;包括编译之类的&amp;#xff0c;学会搜索独立解决&amp;#xff0c;这也是对你独立解决问题的提升。&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;strong&gt;4.学习资料建议。&lt;/strong&gt; 你们老师课程的学习资料挺多的&amp;#xff0c;一方面有书籍&amp;#xff0c;另一方面CSDN有很多博客&amp;#xff0c;B站有很多视频&amp;#xff0c;而且免费。建议一边学习这些知识&amp;#xff0c;一边分享出来&amp;#xff0c;分享尽量成专栏&amp;#xff0c;我们当时也是这样一点点进步的。&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;p&gt;最后&amp;#xff0c;祝好&amp;#xff01;加油&amp;#xff0c;推荐下我当时的MFC数字图像处理博客和一个本科四年学习的经验总结&amp;#xff0c;希望对你有所帮助。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;a href=\"https://blog.csdn.net/Eastmount/article/details/34619941\" id=\"textarea_1677488401297_1677488422938_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/Eastmount/article/details/34619941&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"https://blog.csdn.net/eastmount/category_9263993.html\" id=\"textarea_1677488401297_1677488422938_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/eastmount/category_9263993.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;因为太忙&amp;#xff0c;很少在CSDN回答问题&amp;#xff0c;今天刚好通过邹老师看到你的提问&amp;#xff0c;还挺感兴趣的。朋友&amp;#xff0c;一起加油&amp;#xff0c;希望对你有所帮助。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["大二学生有点迷茫请求建议", ["刚学完数据结构，可以写控制台程序运行树，图之类的，这学期一回来学校就要做一个有可交互图形界面的大程序，相关的知识还没学。课上的例子是Qtcreator，而有的人说可以用Visual Studio的mcf，请问我接下来是怎么继续学习"]], "Tag": "程序设计"}
{"Answer": "指针也是变量，如果想改变指针的值，需要给函数传递指针的指针。\r\n比如想交换两个int变量的值，我们给函数传递的是int型的指针，\r\n以此类推想改变两个int指针变量的值，我们就需要给函数传递int指针的指针。", "Konwledge_Point": "通过例子学习", "Question": ["C++中以数组指针为函数参数，为什么可以修改该数组指针的值？", ["\n", "刚学习C++，对立面的指针作为参数，有点不明白。", "\n", "按照C++函数参数传递的说法，在调用函数时，将实参赋值，传递赋值的值给形参，就是值传递，那么在函数内改变参数的值，不影响实参的值。", "\n", "比如在下面代码的第一段，把两个指向整数的指针传递给void sort(int* pint1, ", "\n", "int* pint2);  在sort(...)函数中调换两个指针的地址，但是不会改变实参的值。(这段和上一段是一行）", "\n", "但是如果把数组数组作为参数，如下面代码第二段，在函数void sort(int* pintA[]);中调换前两个元素的值，实参也随之改变。这是为什么呢？", "\n", "这个例子里，指针数组实际上就是指针的数组，当这个数组作为参数传递给形参是，理论上也应该是赋值一个样本，然后改变其中两个元素的地址，改变的也应该是形参的地址，不会影响到实参啊。", "\n这个问题实在想不明白，如果知道，还请指点一下，十分感谢！！！！", "\n\n", "    int int1 = 11;\n    int int2 = 22;\n\n    int* pint1 = &int1;           //第一段，将指针作为参数\n    int* pint2 = &int2;\n    cout<<endl\n        <<\"*pint1:\"<<*pint1<<endl\n        <<\"*pint2:\"<<*pint2<<endl;\n    void sort(int* pint1, int* pint2);       //交换两个指针指向的地址\n    sort(pint1,pint2);\n    cout<<\"After sort:\"\n        <<endl\n        <<\"*pint1:\"<<*pint1<<endl\n        <<\"*pint2:\"<<*pint2<<endl;\n\n    int* pintArray[] = {&int1,&int2};       //第二段，把指针数组作为参数\n    cout<<endl\n        <<\"*pintArray[0]:\"<<*pintArray[0]<<endl\n        <<\"*pintArray[1]:\"<<*pintArray[1]<<endl;\n    void sort(int* pintA[]);            //交换第0、1两个元素的地址\n    sort(pintArray);\n    cout<<\"After sort:\"\n        <<endl\n        <<\"*pintArray[0]:\"<<*pintArray[0]<<endl\n        <<\"*pintArray[1]:\"<<*pintArray[1]<<endl;\n", "\n\n"]], "Tag": "程序设计"}
{"Answer": "具体要看你的程序，如果你不使用batch，那么通常的做法是把当前的权重在所有数据之上跑一次（正向传播），然后算出梯度，根据梯度修正每个隐层的权重（反向传播），这个整个的过程算一个迭代。\r\n你说的每年的数据做一个迭代，实际上算迁移学习了，一些情况下，比如又要不断学习，又要部署，那么其实就是用你的类似的思路去计算。", "Konwledge_Point": "通过例子学习", "Question": ["BP神经网络模型，如果要预测数据，是每一个数据都迭代N次吗？", ["比如，以下例子：", "\n                某地区20年公路运量数据", "\n 年份         人口数量     机动车数量       公路面积         公路客运量      公路货运量", "\n1990         20.55             0.6                   0.09                5126                  1237", "\n1991           22.44             0.75                 0.11                6217                  1379", "\n1992           25.37             0.85                 0.11                7730                  1385", "\n1993           27.13             0.90                 0.14                9145                  1399", "\n1994           29.45             1.05                 0.20                10460                1663", "\n1995           30.1               1.35                 0.23                11387                1714", "\n1996           30.96             1.45                 0.23                12353                1834 ", "\n1997           34.06             1.60                 0.32                15750                 4322", "\n1998           36.42             1.70                 0.32                 18304                8132", "\n1999           38.09             1.85                 0.34                 19836                8936", "\n2000           39.13              2.15                0.36                  21024               11099", "\n2001           39.99              2.20                0.36                 19490                11203", "\n2002           41.93              2.25                0.38                  20433               10524", "\n2003           44.59               2.35                0.49                  22598               11115", "\n2004           47.30              2.50                0.56                     ？                      ？", "\n2005          52.89              2.60                0.59                      ？                      ？", "\n题目的要求要我们预测2004和2005两年的公路客运量与公路货运量。", "\n\n", "首先，我现在已经清楚了BP神经网络的原理，包括正向传播反向传播激励函数等等，我自己也编写了一套BP神经网络的运算程序。现在我只想搞清楚一个简单的问题，对于这个实例，具体的运算步骤，是否是将人口数量、机动车数量以及公路面积作为3个输入层节点，隐藏层节点数就自己定了，输出层节点是公路客运量和公路货运量2个节点。那么我如果设置学习迭代次数为1000次。步骤是否是：对1990年的数据进行迭代1000次的学习，然后再对1991年的数据进行迭代1000次学习，对1991年初始权重值和偏值为1990年迭代1000次后最终更新的各节点的权重值和偏值，然后依次往下，即每年都会迭代1000次学习。", "\n各位一定看懂我的问题，不要答非所问"]], "Tag": "程序设计"}
{"Answer": "1，BPEL 做开发，首先了解 Web Service相关协议（SOAP，WSDL。。），对 WSDL 和 SOAP 一定要有很深的认识，要不直接入手会很痛苦，\r\n2，当前免费的BPEL引擎很多，Apache 的ODE好像不是很成熟，我用过ActiveBpel，还不错\r\n3，ESB 跟 BPEL引擎是两回事， 我用过ActiveVos ，还不错，不过要看看它的英文文档\r\nJBOSS有没有自己的BPEL引擎就不知道了，不过其他的引擎也可以嵌入到上面吧。", "Konwledge_Point": "通过例子学习", "Question": ["问一点BPEL的一些相关的东西", ["最近开始学习使用 BPEL， BPEL是怎么回事，大概已经明白了，经过几天的学习有些问题想请教高手前辈们", "\n\n", "1：用BPEL来做开发，需要做哪些准备工作（我想问的是，BPEL有没有专门的开发工具，如果有的话，是什么？）", "\n\n", "2：当前免费的BPEL引擎有哪些（能在JBOSS环境下运行的BPEL引擎）？", "\n\n", "3：JBOSS ESB 是不是一个BPEL引擎？  JBOSS有自己的BPEL引擎吗？", "\n\n", "在网也看到一些BPEL的例子，多是一个XML文件，对该文件内容的一些解释", "\n我了下了一个 JBOSS ESB,已经成功部署，并且运行了里面的一个例子 叫做 helloworld_action", "\n老实说，我并不知道这个 JBOSS ESB 到底是个什么东西，我是在google 上搜索 JBOSSBPEL  时，在查找结果中点过去的", "\n因为以前从来没有接触过这方面的知识，所以，现在感到非常迷茫", "\n\n", "我在学习BPEL的最开始，我首先写了几个 webservice，用 axis2 写的，因为BPEL 是对 webservice的编排，所以第一个准备工作我做完之后就开始感到迷茫，不知道下步该做什么", "\n\n", "所以请前辈高人们，解答一下，谢谢"]], "Tag": "程序设计"}
{"Answer": "你的JSP页面中，表单form中的action属性值没有写对，\r\n\r\n首先你要从三个方面着手检查：\r\n[size=medium][color=red]1.web.xml文件[/color][/size]\r\n\r\n你的Struts的servlet映射应该这样写（注意红色部分，前面不要加/）：\r\n   &lt;servlet-mapping&gt;\r\n    &lt;servlet-name&gt;action&lt;/servlet-name&gt;\r\n    [color=red]&lt;url-pattern&gt;*.do&lt;/url-pattern&gt;[/color]\r\n  &lt;/servlet-mapping&gt;\r\n\r\n[size=medium]2.你的JSP页面表单部分这样写（注意红色字体部分，前面不要加任何东西）：[/size]\r\n\r\n&lt;form action=\"[color=red]login.do[/color]\" method=\"post\"&gt;\r\n     用户：&lt;input type=\"text\" name=\"username\"&gt;&lt;br&gt;&lt;br&gt;\r\n     密码: &lt;input type=\"password\" name=\"password\"&gt;&lt;br&gt;&lt;br&gt;\r\n     &lt;input type=\"submit\" value=\"登录\"&gt;\r\n&lt;/form&gt;\r\n\r\n[size=medium]3.你的struts-config.xml文件中action应该这样写（注意红色部分前面要加/）：[/size]\r\n\r\n&lt;action path=\"[color=red]/login[/color]\" \r\n\t\t        type=\"cn.com.newcom.LoginAction\"\r\n\t\t\t    name=\"loginForm\" \r\n\t\t\t    scope=\"request\"&gt;\r\n\t\t\t&lt;forward name=\"success\" path=\"/login_success.jsp\"&gt;&lt;/forward&gt;\r\n\t\t\t&lt;forward name=\"error\" path=\"/login_error.jsp\"&gt;&lt;/forward&gt;\r\n\t\t&lt;/action&gt;\r\n\r\n[size=medium][color=red]还有forward中path属性值前面也一定要加上/[/color][/size]", "Konwledge_Point": "通过例子学习", "Question": ["报错了", ["我现在正在学习struts但我安书上做，第一个例子就会报", "\ntype Status report", "\n\n", "message /struts/Login", "\n\n", "description The requested resource (/struts/Login) is not available.", "\n\n", "查了好久也不知道是那里的问题，谁有办法帮帮我啊。谢谢!!!"]], "Tag": "程序设计"}
{"Answer": "估计是拼多多的后台内部逻辑就是这么写的，也许是为了某些验证，拼多多我记得是单点登录，需求请求数据，然后拿到数据再去请求，这是单点登录的必走流程。", "Konwledge_Point": "通过例子学习", "Question": ["请问下拼多多APP搜索抓取为什么会把需要得到的数据作为参数去请求？", ["这两天在学习Python爬虫，以拼多多为例子。", "\n 然后在抓包时发现，拼多多在“输入搜索条件”-“提交”-“返回数据”这一系列流程时，抓包未找到按搜索条件查询的接口（或地址），而只有将返回的数据作为参数再次请求的接口，很疑惑，请各位大神指教。。。"]], "Tag": "程序设计"}
{"Answer": "如果你不想用递归或者数据量太大（主要是层次太深）而不适合递归，但是要写一个遍历/深度搜索的代码，就得用堆栈。\r\n但是作为面试的角度来说，肯定要考你知识储备的上限。而不是你的日常。\r\n\r\n就好比你去商场买个电视机，你总得让服务小姐给你播放一段4k的影片，然后凑上去看看细节清晰不清晰。你肯定不接受服务小姐的反驳：你日常使用会这么仔细地看这么高分辨率的影片么。", "Konwledge_Point": "通过例子学习", "Question": ["PHP堆栈具体的应用场景有哪些？", ["最近准备面试，发现面试对PHP堆栈的知识有要求，自己学了学，发现PHP的堆栈似乎就是一个先进后出的逻辑，我很难想到这样的应用场景，而且也没发现有什么难点值得作为面试要求特地提出来，麻烦举个例子，并告诉我堆栈的学习要点是什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;保存的图片是 PNG 吗&amp;#xff1f; 有没有选择JPG格式的&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Python针对excel截图之后获取到的是图层怎么办，想要完整实际图片。", ["我是一名学生，在自己学习时候遇到了这个问题，如题所示，我创建了一个例子的excel", "\n", "网上搜到的代码更改之后，只能得到这样的结果：", "\n", "\n", "请问有没有直接截出本身图片的功能，如果没有的话 我在后面进行空白图层的叠加可以实现吗？"]], "Tag": "程序设计"}
{"Answer": "就是包含websocketpp目录下的client.hpp头文件。", "Konwledge_Point": "通过例子学习", "Question": ["#include <websocketpp/client.hpp>这种形式的是什么意思?", ["这是我git下来的socket.io的代码来学习用，测试Qt的那个例子，碰到这个不是很理解。", "\n印象中Qt本身也有这样的形式，没使用过。现在碰到这样的，有点懵逼，我感觉是websocketpp下的client.hpp文件          请大牛有时间能帮小白解惑，感谢！"]], "Tag": "程序设计"}
{"Answer": "呵呵,看视频教程吧.这个速度快一些毕竟\r\n\r\n[url]http://bbs.flash-home.com/viewthread.php?tid=290&amp;page=1[/url]\r\n[url]http://www.verycd.com/topics/280538/[/url]\r\n\r\n[img]http://image-2.verycd.com/cd0e9b16cb12461d71bf5d731873357d106904(600x)/thumb.jpg[/img]", "Konwledge_Point": "通过例子学习", "Question": ["能介绍些Flex的入门资料吗？", ["[size=large]如题：", "\n本人学习过JAVA，最近对Flex3.0感兴趣，希望有好的入门书籍，特别会讲actionscript3.0的语法，以及UI的介绍，当然有例子更好。要是有像EXTJS的那些简明教程，更好。谢谢各位！[/size][/size][/size]"]], "Tag": "程序设计"}
{"Answer": "用mvp模式开发，一般网络请求都放在Presenter中实现，上传数据和返回数据的逻辑处理都放在Presenter层，数据返回的model层都有基层（公共）的数据成功失败model，对应公共的网络加载中成功和失败页面展示。\r\n第二个直接可以定义一个工具类来完成。", "Konwledge_Point": "通过例子学习", "Question": ["android开发的MVP架构中View与Presenter的职责分配问题", ["刚刚开始学习MVP准备应用到实践中，发现了一些问题", "\n\n", "举两个具体的职责作为例子：", "\n\n", "第一个，将获取到的图片上传到服务器。", "\n\n", "这个操作本身不涉及到UI的更新和展示，但同时也不需要与Model层交互，是否应该在Presenter中实现？", "\n\n", "第二个，拍摄照片", "\n\n", "这个功能虽然会有UI交互，但是在实现中是通过intent调用系统相机，并不直接调用UI，更像是逻辑处理。", "\n但是这个功能的实现需要context或者Activity，而在presenter中使用context或activity应该是不被建议的。（如果有错请dalao指出）", "\n类似的有动态权限请求", "\n\n", "像上述的function如果要在MVP架构中实现应该放到哪一层？具体如何实现？比如context或者Activity是否应该通过方法参数传递到Presenter？", "\n\n", "请dalao指教。"]], "Tag": "程序设计"}
{"Answer": "看这篇文章，讲的很详细，如有需要，可以直接邮件询问、http://www.cnblogs.com/davidwang456/p/4432410.html", "Konwledge_Point": "通过例子学习", "Question": ["关于Spring4里的注解应该去jar包哪个路径里找", ["在学习spring 4的过程中，会用到一些注解来代替在xml中写bean，比如说@resource、@service。", "\n我想问一下，这些注解例子的文档在官方jar包哪个包下面，如果只是某个注解不懂，我可以百度，但是我都不知道一共有哪些注解，还是想看一下文档，求教大神。"]], "Tag": "程序设计"}
{"Answer": "问题解决了，是批处理的命令有问题，bat内容是：\r\n“SET  GLOG_logtostderr=1 \r\nconvert_imageset.exe  train\\ mine\\train.txt  imagenet-train-leveldb --backend leveldb 0 --shuffle --gray true \r\npause”\r\n即exe所在路径+空格+数据（需处理的图片所在文件夹）+空格+数据列表以及标签的txt+空格+生成的leveldb数据存放的路径+ --backend leveldb+空格+归一化的图片宽高（也可选择默认值 0）+shuffle 1 --gray true", "Konwledge_Point": "通过例子学习", "Question": ["windows caffe 图片处理", ["大神们好，我现在学习使用windows caffe,没有用GPU，对caffe_windows_master编译通过，运行run_mnist.bat例子也可以正常运行，不过利用convert_imageset.exe对图片进行处理时出现db_lmdb.cpp:17]check failed :_mkdir(source.c_start())==0(-1vs.0)mkdir bin\\result\\imagenet-train-leveldb failed)的错误，肯请大神们帮忙分析一下，小女子不胜感激，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Dreamweaver&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["有没有可以免费编写html的工具", ["最近想学习前端，自己也从下载了一些网站模板。", "但是对于JavaScript完全属于两眼一抹黑的状态，实在是有点复杂。", "想请问一下大虾们制作网站用的都是什么工具。", "\n", "\n", "有没有那种可以直接设计网页而不是自己编写代码的工具。", "举个例子：类似于pyqt5这样能自己设计页面、绑定事件的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不太清楚你的表结构&lt;br /&gt;但是大致逻辑应该是用户表先连表查购买数量表 查出数量大于0的会员 的id&lt;br /&gt;再根据用户ID进行表更新&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["关于#spring#的问题：我有个字段是购买的数量，后端想写个遍历循环，则数据库会员字段自动变成会员，字段默认为非会员", ["自己写的一个前后端分离商城项目，现在想在后端加一个功能。买过产品的自动变为会员，没买过的不是会员。我有个字段是购买的数量，后端想写个循环遍历，如果购买数量>0，则数据库会员字段自动变成会员，数量=0，字段默认为非会员。有没有类似的例子推荐，想参考学习一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b[&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a0&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b0&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    scanf(&amp;#34;%d&amp;#34;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        scanf(&amp;#34;%d&amp;#34;, &amp;amp;a[i]);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)a0&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        scanf(&amp;#34;%d&amp;#34;, &amp;amp;b[i]);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)b0&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a0!&amp;#61;b0)printf(&amp;#34;-1&amp;#34;);\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]!&amp;#61;b[i]){\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j] &amp;#61;&amp;#61; b[i]) {\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p &amp;#61; j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; p &amp;gt;&amp;#61; i; p&lt;span class=\"hljs-comment\"&gt;--) {&lt;!-- --&gt;&lt;/span&gt;\n                        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                        &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; a[p];\n                        a[p] &amp;#61; a[p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                        a[p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n                        cnt&amp;#43;&amp;#43;;\n                    }\n                \n                    break;\n                }\n                        \n            }\n        } \n\n    }\n    \n    printf(&amp;#34;%d&amp;#34;, cnt);\n}\n    \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C语言编程问题求解答", ["题目描述", "最近小晨在计概课上学习到二进制之后对其产生了浓厚的兴趣，在每次操作仅能移动相邻的0和1的前提下，她想知道把一个二进制数转换成另一个二进制数的最小操作数。", "\n", "关于输入", "输入共三行：", "\n", "第一行为一个整数n (0 < n <= 200)，代表二进制数的位数", "\n", "第二行为第一个二进制数的每一位", "\n", "第三行为第二个二进制数的每一位", "\n", "关于输出", "输出将第一个二进制数转换为第二个二进制数的最少操作数，如果答案不存在，则输出-1", "\n", "例子输入", "7", "1 1 0 1 0 0 1", "0 1 1 0 0 1 1", "例子输出", "4"]], "Tag": "程序设计"}
{"Answer": "conn \"/ as sysdba\"\r\n\r\n@$ORACLE_HOME/demo/schema/human_resources/hr_main.sql", "Konwledge_Point": "通过例子学习", "Question": ["oracle 10g的HR用户安装问题", ["oracle 10 g 中hr用户需要单独安装，比较麻烦，书本上学习例子很多都是HR用户的案例 ，下载后释放到", "\n\n", "$ORACLE_HOME/demo/schema/human_resources/目录下，在SYS用户下运行", "\n\n", "$ORACLE_HOME/demo/schema/human_resources/hr_main.sql来创建就可以", "\n\n", "谁能给个具体的操作步骤 越详细越好"]], "Tag": "程序设计"}
{"Answer": "wcf需要被寄宿（host）才能被客户端调用。寄宿的方法有很多，比如iis寄宿，或者程序自寄宿。“直接发现本解决方案的服务”这个只是调试的时候加载一个iis express或者web development server来运行你的程序。在实际生产环境中没有这么做的。", "Konwledge_Point": "通过例子学习", "Question": ["想问一下WCF添加服务的问题", ["找了几篇教程学习WCF，", "\n刚才写了几个例子，有个疑问。", "\n\n", "\n我是这样写的，加一个WCF库，然后用代码的方式发布到服务端，再在客户端进行服务引用。", "\n\n", "写了几个例子，在添加服务引用的时候，有的是启动服务端后，在客户端引用服务输入URI，有的直接发现本解决方案的服务，不明白两者之间的区别， 看msdn上面之说两种方法都行。。。", "\n\n", "刚才我想手动添加地址，先启动了WCF库，复制了地址，然后再客户端添加，为什么服务端没有启动也能找到服务呢？  >_ < ?"]], "Tag": "程序设计"}
{"Answer": "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\r\n&lt;html&gt;\r\n &lt;head&gt;\r\n  &lt;title&gt; New Document &lt;/title&gt;\r\n  &lt;meta name=\"Generator\" content=\"EditPlus\"&gt;\r\n  &lt;meta name=\"Author\" content=\"\"&gt;\r\n  &lt;meta name=\"Keywords\" content=\"\"&gt;\r\n  &lt;meta name=\"Description\" content=\"\"&gt;\r\n  &lt;script type=\"text/javascript\" src=\"jquery-1.3.2.js\"&gt;&lt;/script&gt;\r\n  &lt;script type=\"text/javascript\" src=\"jquery.blockUI.js\"&gt;&lt;/script&gt;  \r\n  &lt;script type=\"text/javascript\"&gt;\r\n  &lt;!--\r\n\tfunction submitForm(){\r\n\tvar username=$(\"#username\").val();\r\n    $.ajax({ \r\n      type: \"POST\", \r\n      url: \"checkuser.php\", \r\n      data: \"username=\" + username, \r\n     success: function(data) { \r\n        \t $.blockUI({ \r\n\t\t\t\t  message: \"&lt;img src='${ctx}/image/loading.gif' /&gt;&lt;h4&gt;&lt;strong&gt;数据正在查询中,请稍后....&lt;/strong&gt;&lt;/h4&gt;\"\r\n\t\t\t\t\t  ,css: { background: 'none', color: '#000',border:'none' } \r\n\t\t\t\t  ,overlayCSS: {backgroundColor: '#C5E1F0',opacity:'0.4'}\r\n\t\t });           \r\n     } ,\r\n\t  error: function(data) { \r\n        \t $.blockUI({ \r\n\t\t\t\t  message: \"&lt;img src='${ctx}/image/loading.gif' /&gt;&lt;h4&gt;&lt;strong&gt;错误&lt;/strong&gt;&lt;/h4&gt;\"\r\n\t\t\t\t\t  ,css: { background: 'none', color: '#000',border:'none' } \r\n\t\t\t\t  ,overlayCSS: {backgroundColor: '#C5E1F0',opacity:'0.4'}\r\n\t\t });           \r\n     } \r\n  }); \r\n\r\n\r\n\r\n\t}\r\n  //--&gt;\r\n  &lt;/script&gt;\r\n &lt;/head&gt;\r\n\r\n &lt;body&gt;\r\n&lt;form id=\"myform\" method=\"post\" action=\"\"&gt;\r\n\t&lt;input type=\"text\" name=\"username\" id=\"username\" /&gt;\r\n\t&lt;input type=\"button\" value=\"提交\" onclick=\"submitForm()\"/&gt;  \r\n&lt;/form&gt;\r\n &lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n\r\njquery-1.3.2.js和jquery.blockUI.js假如你没有我给你发一下", "Konwledge_Point": "通过例子学习", "Question": ["提交表单，显示遮罩层的问题", ["最近初开始学习jquery，想尝试做一个效果，就是提交页面上的一个表单，点击提交按钮（submit类型）后，显示一个遮罩层，如果成功的话就在遮罩层上显示成功的小页面，如果失败的话就显示失败的小页面，请问各位达人高手们该效果如何实现，或者哪里有类似的例子给小弟参考一下，现在这里谢谢各位了！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是想要把这两段内容替换成空吗&amp;#xff1f;如果是的话sql语句就是&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;update&lt;/span&gt; zbp_post &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; log_Tiltle &amp;#61; &lt;span class=\"hljs-built_in\"&gt;REPLACE&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;span style&amp;#61;&amp;#34;font-size: medium;&amp;#34;&amp;gt;他来自北大&amp;#xff0c;是一位超级跨界学霸&amp;#xff0c;他通过提升自己的学习力&amp;#xff0c;实现了学渣的逆袭&amp;#xff0c;&amp;lt;/span&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;update&lt;/span&gt; zbp_post &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; log_Tiltle &amp;#61; &lt;span class=\"hljs-built_in\"&gt;REPLACE&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\n&amp;lt;span style&amp;#61;&amp;#34;display:none&amp;#34;&amp;gt;    大家听了赵无极的一番“阔论”后都不说话了&amp;#xff0c;不是不想说&amp;#xff0c;实在是不知道该怎么说&amp;#xff0c;说什么好了加上也不想参与两人的“辩论”之中&amp;#xff0c;得罪哪一方都不合适啊&amp;#xff0c;干脆来个禁言、慎言。&amp;lt;/span&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["sql表里有类似上面这样两段的内容替换成空", ["<", "span", " ", "style", "=", "\"font-size: medium;\"", ">", "他来自北大，是一位超级跨界学霸，他通过提升自己的学习力，实现了学渣的逆袭，", "</", "span", ">", "\n\n", "<", "span", " ", "style", "=", "\"display:none\"", ">", "    大家听了赵无极的一番“阔论”后都不说话了，不是不想说，实在是不知道该怎么说，说什么好了加上也不想参与两人的“辩论”之中，得罪哪一方都不合适啊，干脆来个禁言、慎言。", "</", "span", ">", "\n\n", "\n", "这个是个替换的例子:UPDATE zbp_post SET ", "log_Title", "=REPLACE(", "log_Title", ", '被替换关键词', '需要替换关键词')", "\n", "sql表里有类似上面这样两段的内容替换成空"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这应该是有 registry &amp;#xff08;注册表&amp;#xff09; 设置的&amp;#xff0c;网络上查一下就好&amp;#xff0c; &lt;/p&gt;\n&lt;p&gt;我看到的是&amp;#xff0c; 用 regedit 修改这个&amp;#xff1a; &lt;/p&gt;\n&lt;p&gt;HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced&lt;/p&gt;\n&lt;p&gt;LaunchTo DWORD&lt;/p&gt;\n&lt;p&gt;1 &amp;#61; This PC&lt;br /&gt;2 &amp;#61; Quick access&lt;br /&gt;3 &amp;#61; Downloads&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["如何编写一个程序能对windows系统设置进行更改", ["看看这是一个多么外行多么笼统的问题QAQ", "\n", "举个例子，就像这样，", "你可以在系统的文件夹选项中更改这个设置，让你点开资源管理器时直接显示我的电脑，但是当你使用dism或者其他系统优化软件时", "可以通过一个按钮就完成修改，在代码上时如何实现的", "\n", "有一丢丢C基础（大学课程。。水到爆炸（指我自己太水", "java稍微好点（稍微。。", "\n", "希望同志们能给个大致方向，让我知道往哪学习一下，想做这个的目的仅仅时因为重装电脑时很多设置太麻烦想方便一点（其实直接用现成的最方便哈哈），其实就是想折腾一下。感谢！"]], "Tag": "程序设计"}
{"Answer": "centos是redhat的社区版，免费的。基本命令和redhat都是一样的。\r\n\r\nredhat是企业版。\r\n\r\n鸟哥的linux私房菜，我练习的时候就是在redhat上，所以基本都是一样的。每天练一练，掌握多一点", "Konwledge_Point": "通过例子学习", "Question": ["关于RedHat与CentOS配置的Linux问题", ["本人想要在RedHat开始学Linux，只在学校学过一点皮毛，经查阅决定先从《鸟哥的Linux私房菜》入手，我想从基础篇的第三版入手，但是它是以CentOS5为例子的，我想知道能否用这个来学习RedHat配置的Linux吗，语法上会有不同吗，对小弟有什么好的建议吗，感谢各位大神指点！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这就是个开关量&amp;#xff0c;标志当前是不是输入单词。判断方法就是当前输入的字符是不是空格。如果是空格&amp;#xff0c;并且标志是输入单词标志&amp;#xff0c;那么就改成不是输入单词标志&amp;#xff1b;反之&amp;#xff0c;如果输入不是空格&amp;#xff0c;但标志不是输入单词标志&amp;#xff0c;则改为输入单词标志&lt;br /&gt;它最主要的作用是&amp;#xff1a;只有在输入字符&amp;#xff0c;并且标志不是输入单词状态时&amp;#xff0c;才需要将单词数量加1。也就是只有状态发生改变&amp;#xff0c;且改变为输入单词标志时&amp;#xff0c;才需要增加一个单词计数&amp;#xff0c;其它情况都不增加计数&lt;br /&gt;这段代码标志不能去掉&amp;#xff0c;去掉后你无法判断出字符切换状态&lt;br /&gt;如果想不用标志&amp;#xff0c;那么你就需要增加一个变量&amp;#xff0c;记录相邻两次输入的字符&amp;#xff0c;当前一个字符为空格&amp;#xff0c;后一个字符不是空格的时候&amp;#xff0c;单词的数量加1&amp;#xff0c;也能解决问题&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["希望细讲一下标记的工作原理和意图是什么", ["这是在书上所学习的一个代码的一部分，这里用到了那个 bool inword=false 以及 !inword 还有 inword=false ，书上讲的这是标记可以用于检查变量，但我没看懂这个标记对程序的影响是什么，我总感觉去掉并不耽误程序运行。希望能细讲一下这个标记的意义，最好能带上个例子，谢谢！"]], "Tag": "程序设计"}
{"Answer": "你理解错了；\r\n\r\n如果是项目外的jar包是可以直接复制黏贴到你的项目的Library文件夹下的；\r\n\r\n如果你要使用右击项目Build Path-&gt;add Libraries-&gt;User Library-&gt;然后点击窗口右边的按钮【User Library】就进入到了另一个窗口,这个窗口就是\r\n来定义自己的Library的;\r\n假设你创建了一个叫testjar的文件夹,然后就可以编辑,找到你jar文件所在的位置就可以添加进去；\r\n\r\n这么做的好处是这个jar就不用每次都还要到处找,还要复制黏贴到自己项目了;哪个项目想要用,根据上面的步骤直接将上次自定义的User Library导入就行了\r\n\r\n如果回答对您有帮助,请采纳", "Konwledge_Point": "通过例子学习", "Question": ["关于eclipse中Android项目导入jar包的问题", ["本人刚刚开始自学Android robotium自动化测试。", "\n学习写一个计算器测试的例子，", "\n可是新建完Android Test Project（已导入源代码），", "\n在工程下创建了libs文件夹，可是右键Build Path这一项中没有\"add to build path\"这一项", "\n\n", "另外有人告诉了我右键工程也可以直接添加jar包，我想知道右键直接在工程中添加跟新建文件夹添加有何区别？", "\n\n", "求大神指教！！！"]], "Tag": "程序设计"}
{"Answer": "你这个问题很有趣，我也是找了一下，据说在很多方面有应用，你可以自己去网上看。我找到的一个比较具体的例子如下：\r\n你是一个汽车修理商。马路上的汽车每天出问题的概率是0.001， 不出问题的概率就是0.999，一共有10000辆汽车，你想知道你要有多少修理厂比较合理。\r\n那么我们可以假设有n辆车出问题，则这样的概率是：C(10000, n)pow(0.001, n)pow(0.999,10000-n)。可以看到这就是一个二项式展开中的一项。\r\n这样你可以展开二项式而找到其中概率最高的一项。\r\n推而广之，可以认为二项展开在对于连续性的非此即彼的预测中是可以广泛应用的。", "Konwledge_Point": "通过例子学习", "Question": ["二次项定理的实际应用", ["我最近利用编程来学习以前学过的数学公式，我有点疑惑", "\n这些公式可以应用在什么地方", "\n\n", "以下是我自己用手写的，写成代码应该不太是问题", "\n但是在实际上的应用，能给我例子来举例吗？", "\n比如说A是菜色、B是米或是什么易懂的应用吗？"]], "Tag": "程序设计"}
{"Answer": "synchronized的increment方法保证了对count的修改是同步的，而get方法无需同步，因为读取不涉及到修改数据；lz只看到了volatile而忽视了synchronized的存在，可以这样认为：volatile的功能只是synchronized功能的一个子集，一个线程的increment方法不执行完，其他线程是没法访问的", "Konwledge_Point": "通过例子学习", "Question": ["关于线程中volatile的一点疑惑", ["我在学习线程时，了解volatile解决的是可见性问题。但是在某些地方，看到如下的例子：", "\n[code=\"java\"]class Counter {", "\n\n", "private volatile int count = 0;\n\npublic synchronized void increment() {\n    count++;\n}\n\npublic int get() {\n    return count;\n}\n", "\n\n", "}", "\n[/code]", "\n这个类被认为是线程安全的（见[url=", "http://www.ibm.com/developerworks/cn/java/j-jtp06197.html]链接[/url]中的最后一个例子），但get没有加synchronized标识，那么我就产生了一个疑惑：", "\n为什么它是线程安全的？", "\ncount是任何时刻都可见的，而count++不是原子性的，那么count的值就可能count++的中间状态.而且get()方法不需要得到对象锁，那么执行get()方法，没有可能得到count++的中间状态么？", "\n\n", "以下例子又显然是线程不安全的：", "\n[code=\"java\"]", "\nclass Counter {", "\n\n", "private volatile int count = 0;\n\npublic synchronized void increment() {\n    count++;\n    //something.else..\n    count++;\n}\n\npublic int get() {\n    return count;\n}\n", "\n\n", "}", "\n[/code]", "\n那么两者的区别又是在哪里呢？？好纠结啊...望高手能帮我解释一下。 :cry: "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;先看看下面文献&amp;#xff0c;理解一下&amp;#xff1a;&lt;br /&gt;函数依赖&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_56937141/article/details/127643455?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522167930841116800217252486%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;167930841116800217252486&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-127643455-null-null.142^v74^pc_search_v2,201^v4^add_ask,239^v2^insert_chatgpt&amp;amp;utm_term&amp;#61;%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96%E6%98%AF%E4%BB%80%E4%B9%88&amp;amp;spm&amp;#61;1018.2226.3001.4449\" id=\"textarea_1679308644775_1679308732999_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_56937141/article/details/127643455?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522167930841116800217252486%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;167930841116800217252486&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-127643455-null-null.142^v74^pc_search_v2,201^v4^add_ask,239^v2^insert_chatgpt&amp;amp;utm_term&amp;#61;%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96%E6%98%AF%E4%BB%80%E4%B9%88&amp;amp;spm&amp;#61;1018.2226.3001.4449&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;非平凡函数依赖&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_51656605/article/details/112513228?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522167930869116782427420482%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id&amp;#61;167930869116782427420482&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-112513228-null-null.142^v74^pc_search_v2,201^v4^add_ask,239^v2^insert_chatgpt&amp;amp;utm_term&amp;#61;%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%9E%E5%B9%B3%E5%87%A1%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96&amp;amp;spm&amp;#61;1018.2226.3001.4449\" id=\"textarea_1679308644775_1679308732999_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_51656605/article/details/112513228?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522167930869116782427420482%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id&amp;#61;167930869116782427420482&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-112513228-null-null.142^v74^pc_search_v2,201^v4^add_ask,239^v2^insert_chatgpt&amp;amp;utm_term&amp;#61;%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%9E%E5%B9%B3%E5%87%A1%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96&amp;amp;spm&amp;#61;1018.2226.3001.4449&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;下面是4个例子例子&amp;#xff0c;关于非平凡函数依赖&amp;#xff0c;你理解理解。&lt;br /&gt;1.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-constructor\"&gt;PROJECT(&lt;span class=\"hljs-params\"&gt;title&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;deadline&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;manager&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;manager&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;full&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;name&lt;/span&gt;)&lt;/span&gt;\ntitle → deadline\nmanager-number → manager-full-name\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;标题可以唯一地决定截止日期&amp;#xff0c;每个项目只有一个截止日期。经理的员工编号可以唯一地决定经理的全名&amp;#xff0c;因为每个员工只能管理一个项目。&lt;/p&gt;\n&lt;p&gt;2.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-constructor\"&gt;COURSE(&lt;span class=\"hljs-params\"&gt;course&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;code&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;credits&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;student&lt;/span&gt;#, &lt;span class=\"hljs-params\"&gt;full&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;name&lt;/span&gt;)&lt;/span&gt;\ncourse-code → credits\nstudent# → full-name\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;课程代码唯一地决定学分总数&amp;#xff0c;因为每个课程只有一个学分总数。学生的学号可以唯一地决定全名&amp;#xff0c;因为每个学生只有一个全名。&lt;br /&gt;3.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-constructor\"&gt;DEGREE(&lt;span class=\"hljs-params\"&gt;title&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;total&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;credits&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;department&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;head&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;of&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;department&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;course&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;code&lt;/span&gt;)&lt;/span&gt;\ntitle → total-credits\ndepartment → head-&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;-department\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;学位名称唯一地决定所需总学分&amp;#xff0c;因为每个学位只需要一定数量的学分。部门可以唯一地决定其负责人的全名&amp;#xff0c;因为每个部门只有一个负责人。&lt;/p&gt;\n&lt;p&gt;4.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-constructor\"&gt;ARTICLE(&lt;span class=\"hljs-params\"&gt;title&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;journal&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;author&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;keyword&lt;/span&gt;)&lt;/span&gt;\ntitle → journal\ntitle, author → keyword\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;标题可以唯一地决定期刊&amp;#xff0c;因为每篇文章只能在一个期刊上发表。另外&amp;#xff0c;标题和作者共同决定了关键字&amp;#xff0c;因为同一篇文章的关键字可能会因为不同的作者而不同。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["数据库非平凡函数依赖", ["对于每一个关系模式，找到所有在模式中有效的非平凡函数依赖", "\n", "PROJECT(title, deadline, manager-number, manager-full-name)", "关系表  PROJECT  包含有关项目的信息。项目由标题、截止日期、项目经理的员工编号和项目经理的全名来描", "述。一个项目有一个截止日期和一个经理。在截止日期之前不能更换经理。一名员工可以管理多个项目。", "\n", "COURSE(course-code, credits, student#, full-name)", "课程由课程代码和学分总数描述。课程由学生注册。一个学生可以报读多门课程，一门课程可以被很多学生 报读。学生由学号和全名描述", "\n", "DEGREE(title, total-credits, department, head-of-department,", "course-code)", "大学学位由名称、所需总学分、授予学位的部门和核心必修课程代码来描述。部门由其负责人的全名描述", "\n", "ARTICLE(title, journal, author, keyword)", "科学文章由一对唯一的标题和期刊属性标识。一篇文章也由作者姓名和一些关键字来描述。一篇文章可以由 许多作者撰写，并且可以被许多关键字索引。一个作者可以写很多文章", "\n", "对于非平凡函数依赖还不是太了解，希望能通过几个例子学习一下"]], "Tag": "程序设计"}
{"Answer": "下载gwt时可以下到例子\r\next-Gwt和Gwt-Ext\r\next-Gwt 是extJS公司开发，界面很漂亮，要收费，不过中国客户好像大多都没交钱，下了就用，呵呵\r\nGwt-Ext是google开发的，现在停止开发了，以后没新版本了，建议不要用", "Konwledge_Point": "通过例子学习", "Question": ["关于ext-Gwt和Gwt-Ext", ["大家好，我想学习有关Gwt的知识，但是网上关于Gwt的资料几乎是没有，大多就是一个配置而已。不知道哪有朋友有一些用Gwt做成的例子可以研究下。", "\n\n", "另外，想搞清楚的就是ext-Gwt和Gwt-Ext这两者有什么区别，如果要用的话，选择哪一个好些呢？谢谢了。"]], "Tag": "程序设计"}
{"Answer": "代码有几个问题：\r\n1）你的类 readFile 的方法是 public static 静态方法，静态方法的调用直接就是 类名称.方法名称。\r\n2）实例创建后面必须要有 （） ，通过实例访问静态方法，也是可以的，但是会有警告：new readFile().方法名称。前面有括号之后才是一个对象。\r\n3）类和方法的名称规约是：类名称首字母大写，而方法是首字母小写。\r\n修正代码：\r\n```\r\nreadFile.ReadFile(xxx) ：类名称.静态方法名称(参数)\r\n```", "Konwledge_Point": "通过例子学习", "Question": ["初学者关于java读取csv文件并建立数组中跨类调用数组找不到文件的问题？", ["这是读取csv文件并用构造参数person构建数组并返回数组的部分", "\n__但是在主类中会提示_", "\n_改了半天一头雾水不知道怎么改········", "\n希望有大佬能教一下怎么改", "\n1并且后续还需要做一个比较排序的方法排列第二项日期，不知道有没有什么好的参考例子可以学习一下。"]], "Tag": "程序设计"}
{"Answer": "1.4的线程处理有问题，\r\n\r\n现在都什么年代了，1.5都出了4年了，1.4退了，\r\n\r\n好好研究下1.5", "Konwledge_Point": "通过例子学习", "Question": ["socket and thread的烦恼！！！大家帮帮我", ["最近想学习 socket和多线程方面的知识，但是在网上搜出来的资料好像跟自己想学的不那么符合。。。", "\n  网上很多都是SWING+SOCKET+多线程做的例子。。。看上去不是很清楚。。而且又是基于JDK1.5的。", "\n  因为JDK1.4和1.5的线程处理方面不一样了。。。现在很迷茫是学1.4的还是1.5的处理方式。。。", "\n  很想请大家帮帮我。。。介绍点这方面在资料给小弟看看也好。。 谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code class=\"language-javascript\"&gt;computed&lt;/code&gt;比较特殊&amp;#xff0c;它类似与&lt;code class=\"language-javascript\"&gt;data&lt;/code&gt;&amp;#xff0c;但是它需要写成函数的形式(通过返回值来得到值)&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;在组件中&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;this&lt;/code&gt;代表这个组件&amp;#xff0c;获取数据 / 调用方法 都需要this&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请教关于vue中方法何时需要使用return和this问题", ["学习vue，例如图下例子中 必须return后我的插值表达式才能拿到T的数据，不return就拿不到。很不理解，也不知道什么时候需要用return。还是方法中只要有数据就必须return出去。还有一个有关this的问题，我便利的list数组是父组件中的date数据，不是我创建的vue对象中的数据，为什么要用this啊，并且不用this就拿不到数据。表示很不明白，根本不知道什么时候需要用return什么时候需要用this"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; math &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; log\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; operator\n \n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:创建测试数据集\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;createDataSet&lt;/span&gt;():\n    dataSet &amp;#61; [[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;],         &lt;span class=\"hljs-comment\"&gt;#数据集&lt;/span&gt;\n               [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;],\n               [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;]]\n    labels &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;年龄&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;有工作&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;有自己的房子&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;信贷情况&amp;#39;&lt;/span&gt;]        &lt;span class=\"hljs-comment\"&gt;#分类属性&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; dataSet, labels                           &lt;span class=\"hljs-comment\"&gt;#返回数据集和分类属性&lt;/span&gt;\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:计算给定数据集的经验熵(香农熵)\nParameters:\n    dataSet - 数据集\nReturns:\n    shannonEnt - 经验熵(香农熵)\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;calcShannonEnt&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dataSet&lt;/span&gt;):\n    numEntires &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(dataSet)                        &lt;span class=\"hljs-comment\"&gt;#返回数据集的行数&lt;/span&gt;\n    labelCounts &amp;#61; {}                                 &lt;span class=\"hljs-comment\"&gt;#保存每个标签(Label)出现次数的字典&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; featVec &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dataSet:                          &lt;span class=\"hljs-comment\"&gt;#对每组特征向量进行统计&lt;/span&gt;\n        currentLabel &amp;#61; featVec[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]                   &lt;span class=\"hljs-comment\"&gt;#提取标签(Label)信息&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; currentLabel &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; labelCounts.keys():   &lt;span class=\"hljs-comment\"&gt;#如果标签(Label)没有放入统计次数的字典,添加进去&lt;/span&gt;\n            labelCounts[currentLabel] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        labelCounts[currentLabel] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;               &lt;span class=\"hljs-comment\"&gt;#Label计数&lt;/span&gt;\n    shannonEnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;                                 &lt;span class=\"hljs-comment\"&gt;#经验熵(香农熵)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; key &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; labelCounts:                          &lt;span class=\"hljs-comment\"&gt;#计算香农熵&lt;/span&gt;\n        prob &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(labelCounts[key]) / numEntires  &lt;span class=\"hljs-comment\"&gt;#选择该标签(Label)的概率&lt;/span&gt;\n        shannonEnt -&amp;#61; prob * log(prob, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)            &lt;span class=\"hljs-comment\"&gt;#利用公式计算&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; shannonEnt                                &lt;span class=\"hljs-comment\"&gt;#返回经验熵(香农熵)&lt;/span&gt;\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:按照给定特征划分数据集\nParameters:\n    dataSet - 待划分的数据集\n    axis - 划分数据集的特征\n    value - 需要返回的特征的值\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;splitDataSet&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dataSet, axis, value&lt;/span&gt;):\n    retDataSet &amp;#61; []                                     &lt;span class=\"hljs-comment\"&gt;#创建返回的数据集列表&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; featVec &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dataSet:                             &lt;span class=\"hljs-comment\"&gt;#遍历数据集&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; featVec[axis] &amp;#61;&amp;#61; value:\n            reducedFeatVec &amp;#61; featVec[:axis]             &lt;span class=\"hljs-comment\"&gt;#去掉axis特征&lt;/span&gt;\n            reducedFeatVec.extend(featVec[axis&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:])     &lt;span class=\"hljs-comment\"&gt;#将符合条件的添加到返回的数据集&lt;/span&gt;\n            retDataSet.append(reducedFeatVec)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; retDataSet                                   &lt;span class=\"hljs-comment\"&gt;#返回划分后的数据集&lt;/span&gt;\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:选择最优特征\nParameters:\n    dataSet - 数据集\nReturns:\n    bestFeature - 信息增益最大的(最优)特征的索引值\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;chooseBestFeatureToSplit&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dataSet&lt;/span&gt;):\n    numFeatures &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(dataSet[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;                     &lt;span class=\"hljs-comment\"&gt;#特征数量&lt;/span&gt;\n    baseEntropy &amp;#61; calcShannonEnt(dataSet)                 &lt;span class=\"hljs-comment\"&gt;#计算数据集的香农熵&lt;/span&gt;\n    bestInfoGain &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;                                    &lt;span class=\"hljs-comment\"&gt;#信息增益&lt;/span&gt;\n    bestFeature &amp;#61; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;                                      &lt;span class=\"hljs-comment\"&gt;#最优特征的索引值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(numFeatures):                          &lt;span class=\"hljs-comment\"&gt;#遍历所有特征&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#获取dataSet的第i个所有特征&lt;/span&gt;\n        featList &amp;#61; [example[i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; example &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dataSet]\n        uniqueVals &amp;#61; &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(featList)                         &lt;span class=\"hljs-comment\"&gt;#创建set集合{},元素不可重复&lt;/span&gt;\n        newEntropy &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;                                   &lt;span class=\"hljs-comment\"&gt;#经验条件熵&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; uniqueVals:                           &lt;span class=\"hljs-comment\"&gt;#计算信息增益&lt;/span&gt;\n            subDataSet &amp;#61; splitDataSet(dataSet, i, value)           &lt;span class=\"hljs-comment\"&gt;#subDataSet划分后的子集&lt;/span&gt;\n            prob &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(subDataSet) / &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(dataSet))           &lt;span class=\"hljs-comment\"&gt;#计算子集的概率&lt;/span&gt;\n            newEntropy &amp;#43;&amp;#61; prob * calcShannonEnt(subDataSet)        &lt;span class=\"hljs-comment\"&gt;#根据公式计算经验条件熵&lt;/span&gt;\n        infoGain &amp;#61; baseEntropy - newEntropy                        &lt;span class=\"hljs-comment\"&gt;#信息增益&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第%d个特征的增益为%.3f&amp;#34;&lt;/span&gt; % (i, infoGain))             &lt;span class=\"hljs-comment\"&gt;#打印每个特征的信息增益&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (infoGain &amp;gt; bestInfoGain):                              &lt;span class=\"hljs-comment\"&gt;#计算信息增益&lt;/span&gt;\n            bestInfoGain &amp;#61; infoGain                                &lt;span class=\"hljs-comment\"&gt;#更新信息增益&amp;#xff0c;找到最大的信息增益&lt;/span&gt;\n            bestFeature &amp;#61; i                                        &lt;span class=\"hljs-comment\"&gt;#记录信息增益最大的特征的索引值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; bestFeature                                             &lt;span class=\"hljs-comment\"&gt;#返回信息增益最大的特征的索引值&lt;/span&gt;\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:统计classList中出现此处最多的元素(类标签)\nParameters:\n    classList - 类标签列表\nReturns:\n    sortedClassCount[0][0] - 出现此处最多的元素(类标签)\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;majorityCnt&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;classList&lt;/span&gt;):\n    classCount &amp;#61; {}\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; vote &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; classList:                                        &lt;span class=\"hljs-comment\"&gt;#统计classList中每个元素出现的次数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; vote &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; classCount.keys():\n            classCount[vote] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        classCount[vote] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    sortedClassCount &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(classCount.items(), key &amp;#61; operator.itemgetter(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), reverse &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)        &lt;span class=\"hljs-comment\"&gt;#根据字典的值降序排序&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sortedClassCount[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]                                &lt;span class=\"hljs-comment\"&gt;#返回classList中出现次数最多的元素&lt;/span&gt;\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:递归构建决策树\nParameters:\n    dataSet - 训练数据集\n    labels - 分类属性标签\n    featLabels - 存储选择的最优特征标签\nReturns:\n    myTree - 决策树\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;createTree&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dataSet, labels, featLabels&lt;/span&gt;):\n    classList &amp;#61; [example[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; example &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dataSet]               &lt;span class=\"hljs-comment\"&gt;#取分类标签(是否放贷:yes or no)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; classList.count(classList[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(classList):            &lt;span class=\"hljs-comment\"&gt;#如果类别完全相同则停止继续划分&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; classList[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(dataSet[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:                                       &lt;span class=\"hljs-comment\"&gt;#遍历完所有特征时返回出现次数最多的类标签&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; majorityCnt(classList)\n    bestFeat &amp;#61; chooseBestFeatureToSplit(dataSet)                   &lt;span class=\"hljs-comment\"&gt;#选择最优特征&lt;/span&gt;\n    bestFeatLabel &amp;#61; labels[bestFeat]                               &lt;span class=\"hljs-comment\"&gt;#最优特征的标签&lt;/span&gt;\n    featLabels.append(bestFeatLabel)\n    myTree &amp;#61; {bestFeatLabel:{}}                                    &lt;span class=\"hljs-comment\"&gt;#根据最优特征的标签生成树&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;del&lt;/span&gt;(labels[bestFeat])                                          &lt;span class=\"hljs-comment\"&gt;#删除已经使用特征标签&lt;/span&gt;\n    featValues &amp;#61; [example[bestFeat] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; example &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dataSet]        &lt;span class=\"hljs-comment\"&gt;#得到训练集中所有最优特征的属性值&lt;/span&gt;\n    uniqueVals &amp;#61; &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(featValues)                                   &lt;span class=\"hljs-comment\"&gt;#去掉重复的属性值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; uniqueVals:\n        subLabels&amp;#61;labels[:]\n        &lt;span class=\"hljs-comment\"&gt;#递归调用函数createTree(),遍历特征&amp;#xff0c;创建决策树。&lt;/span&gt;\n        myTree[bestFeatLabel][value] &amp;#61; createTree(splitDataSet(dataSet, bestFeat, value), subLabels, featLabels)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; myTree\n \n \n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n函数说明:使用决策树执行分类\nParameters:\n    inputTree - 已经生成的决策树\n    featLabels - 存储选择的最优特征标签\n    testVec - 测试数据列表&amp;#xff0c;顺序对应最优特征标签\nReturns:\n    classLabel - 分类结果\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;classify&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;inputTree, featLabels, testVec&lt;/span&gt;):\n    firstStr &amp;#61; &lt;span class=\"hljs-built_in\"&gt;next&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;iter&lt;/span&gt;(inputTree))             &lt;span class=\"hljs-comment\"&gt;#获取决策树结点&lt;/span&gt;\n    secondDict &amp;#61; inputTree[firstStr]             &lt;span class=\"hljs-comment\"&gt;#下一个字典&lt;/span&gt;\n    featIndex &amp;#61; featLabels.index(firstStr)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; key &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; secondDict.keys():\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; testVec[featIndex] &amp;#61;&amp;#61; key:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(secondDict[key]).__name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;dict&amp;#39;&lt;/span&gt;:\n                classLabel &amp;#61; classify(secondDict[key], featLabels, testVec)\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                classLabel &amp;#61; secondDict[key]\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; classLabel\n \n \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    dataSet, labels &amp;#61; createDataSet()\n    featLabels &amp;#61; []\n    myTree &amp;#61; createTree(dataSet, labels, featLabels)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(myTree)\n    testVec &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]     &lt;span class=\"hljs-comment\"&gt;# 测试数据&lt;/span&gt;\n    result &amp;#61; classify(myTree, featLabels, testVec)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; result &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;放贷&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; result &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;不放贷&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;原代码链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/asialee_bird/article/details/81118245\" id=\"textarea_1652509280375_1652509402714_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;决策树算法ID3算法&amp;#xff08;Python3实现&amp;#xff09;_Asia-Lee的博客-CSDN博客_id3算法的python实现&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;目录1、数据集准备2、使用ID3算法递归构建决策树并使用决策树执行分类2.1 ID3算法概述2.2 递归终止的条件&amp;#xff1a;2.3 代码实现如下&amp;#xff1a;3、Matplotlib实现决策树可视化4、决策树的存储与读取5、决策树优点和缺点1、数据集准备                               ...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/asialee_bird/article/details/81118245&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;望采纳&amp;#xff0c;谢谢&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "通过例子学习", "Question": ["python实现id3算法实例", ["求一个使用id3算法解决实际应用问题的例子，用python代码实现"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;聚类和演化算法&amp;#xff0c;利用聚类分析PSO粒子分布状况&lt;br /&gt;聚类还可以帮助演化算法选参&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["举例讨论聚类算法与其他算法的组合应用", ["聚类算法与其他算法的组合应用有哪些？请举出具体例子并进行讨论"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议看下这个&amp;#xff1a;&lt;a href=\"https://www.cnpython.com/pypi/uwg\"&gt;Python uwg包_程序模块 - PyPI - Python中文网 (cnpython.com)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;如有帮助请采纳~&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["城市热岛模拟的uwg模块使用案例？", ["我从github下载了一个uwg模块，却只给了这样一个很简单的例子。有没有大佬指导一下如何利用该模块去模拟城市热岛，有没有案例去学习了解一下该模块，不胜感激。 ", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "学习android 也不难的，你要是有一定的语言基础学起来很容易的。\r\n我也是干java的。\r\n现在也学习了android 有视频 有书看 有论坛 而且它的知识点也很透彻\r\n初学者入门时间 一个星期肯定ok\r\n掌握更多的话 就不段的做练习 熟悉android提供的接口 UI布局 事件\r\n介绍一个网站给你 那里有不错的视频可以看一看的。\r\n[url]http://www.cmd110.com[/url]", "Konwledge_Point": "通过例子学习", "Question": ["新手入手开发Android应用需要多久？", ["Q：学习android需要哪些基础？", "\n\n", "　　A：学习Android一定要有Java基础，最差也要类似Java的其他面对像对象语言的基础。很多朋友从来没有搞过编程，听说Android能赚钱，就疯了一样冲过来要学习。这明显是不靠谱的，甚至有的朋友一个字母一个字母的按照我的例子去敲代码，然后非常努力的把代码背下来。像背英文单词一样的背代码，编程学成这个样子，还真是让小生佩服啊！不管怎样，你最少也要掌握Java语言的如下知识点才能够开始学Android：", "\n\n", "       a)Java基本数据类型及其特点\n       b)Java分支语句和循环语句的使用\n       c)类和对象的创建和使用方法\n       d)函数的使用\n       e)抽象类和接口\n       f)继承和实现\n       g)对象的多态性\n       h)包和访问权限\n       i)异常的处理\n       j)类集框架\n       k)eclipse的基本用法\n", "\n\n", "刚才看了一个论坛的以上问题后，突然自己有个疑问，请问各位前辈，要是我以上的基础我都很熟练的掌握了，想入手Android方向的开发一般需要多久呢？我是广西的一个本科应届毕业生，今年7月我就可以毕业了，在大学，我主要便向就是java开发，自学掌握了jsp以及ssh2的相关基础，做过一些简单的web应用开发。恳请这里的前辈给我指点指点，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n\nuiComboBox3.SelectedText &amp;#61; “值”;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 对应你DisplayMember 绑定的DeptName的值\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;或者\nuiComboBox3.SelectedValue &amp;#61; “值”; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;值对应你ValueMember绑定的Did的值\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C# ComBox 如何编辑回显？", ["窗体里有一个下拉框，然后进行绑定数据源", "\n", "                //查询数据库操作\n                List<xxx> list ", "=", " xxxx().toList()", ";", "\n                uiComboBox3.DataSource ", "=", " list", ";", "\n                uiComboBox3.ValueMember ", "=", " ", "\"Did\"", ";", "\n                uiComboBox3.DisplayMember ", "=", " ", "\"DeptName\"", ";", "\n", "\n", "添加操作 和编辑操作是在同一个窗体内完成的。", "在选择完后添加数据，我取的是下拉框显示的文本值存到了数据库，但是我编辑时却不知道如何回显到我保存的那一个值，应该如何做，最好有个小例子让我参考下，让我学习下，感谢各位了"]], "Tag": "程序设计"}
{"Answer": "已找到，使用图网络模型可以实现。", "Konwledge_Point": "通过例子学习", "Question": ["神经网络能否不失一般性地解图的最短路径问题？", ["\n\n", "解最短路径问题，我看了一些网上的例子，多是训练DQN能够在某一特定图中找到最短路径（如图，在这个特定图中学习如何绕过黑点到达黄点）", "\n\n", "这种训练，相当于特定图的拓扑存储在了Q Matrix中，当图（环境）改变时则需要重新训练。", "\n问题：请问神经网络能否不失一般性地解图的最短路径问题？也就是不依赖某种特定的图拓扑，每次输入图拓扑和起点终点，输出最优路径"]], "Tag": "程序设计"}
{"Answer": "朋友，问题要自动关闭啦，结分哦，", "Konwledge_Point": "通过例子学习", "Question": ["讨论 JDO与Hibernate的比较", ["看了 JDO的实现， 并试了试 JDO的例子 ", "感觉JDO的优点：", "1. 用对象的方式来存储数据。（不是数据对象的方式 而是逻辑对象的方式）。 这样很大程度解决了对象实体与数据关系之间的描述。", "2. 学习曲线简单（1~4小时）", "请大家说说自己的看法", "问题补充：", "N年前的比较 有必要看吗？", "我看的是DataNucleus Access Platform 1.1.3 ", "我按照 DataNucleus的文档做 ", "建议 你看看 再评论", "问题补充：", "对与JDO  我也在学习之中。 ", "对于JPA 与JDO 的比较 可以参考下面连接", "http://db.apache.org/jdo/jdo_v_jpa.html"]], "Tag": "程序设计"}
{"Answer": "可以的，可以试试PhoneGap，参考：http://www.phonegap.cn/", "Konwledge_Point": "通过例子学习", "Question": ["关于Android和IOS网页代替控件的问题", ["http://jquerymobile.com/", "\n\n", "首先呢IOS我学习的程度只是刚刚开始入门吧，连有什么控件没都没真正的见过。但是Android虽然不是很熟悉，但是也有一点能力了。我知道IOS有一个类似于Android上的WebView控件。而Android上的网页可以用上面那个网站来实现快速生成。那么在IOS也可以吗？", "\n\n", "在Android的WebView上我可以实现JavaScript调用Java。那么在IOS上可以实现JavaScrip调用Objective-c吗？前面的因为语法比较接近。这没什么，而且我也有例子，但是后面的这样也可以吗？"]], "Tag": "程序设计"}
{"Answer": "不知道你知不知道强对象语言中的泛型，例如java 中的泛型 ，就是可以存储任意数据 的。\r\n在python这种弱对象语言中 ，一个数组，或者是字典，存储什么都是合法的。所以传入任何的数据，对于数组或者字典来说，没有区别，都只是数据而已\r\n这里只是初始化一个对象（数组等都是对象），传入这个对象的属性初始化它（可以是任意值，可以嵌套）；", "Konwledge_Point": "通过例子学习", "Question": ["Python中的类型和函数的区别", ["初学Python，在看书的时候，学习到list，tuple，str还有dict的时候，书上说这些其实是数据类型，理解上不是很困难，但是有这样一个例子把我搞混了", "\n item=[('name','Bill'),('age',23)]", "\n d=dict(item)", "\n 我看了这两行代码，始终认为dict其实就是一个函数，感觉就是item作为函数参数，传递给了dict，但是作为数据类型，像 INT 什么的，直接就是定义赋值，为什么这里dict却像函数一样使用？", "\n 在下先谢过各位了，感激不尽"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/nidayu/article/details/31409871'&gt;Android适配器的使用&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/qq_20751579/article/details/46974269'&gt;Android中适配器的使用&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/u010142437/article/details/9071661'&gt;Android中自定义适配器的使用&lt;/a&gt;&lt;br/&gt;----------------------同志你好，我是CSDN问答机器人小N，奉组织之命为你提供参考答案，编程尚未成功，同志仍需努力！", "Konwledge_Point": "通过例子学习", "Question": ["Android 适配器的使用配置？", ["关于安卓适配器有很多例子我知道，可是最近开发登记程序的时候就发现了一个或许对于大神来说算不了什么问题，但是这个问题对于刚刚接触Android开发不久的人来说却很重要，因为这个学习不好的话就意味着很多功能都做不了，下面就说正题。", "\n\n", "适配器的的编写，优化，以及如何将适配器所关联的每个条目信息都保存在配置文件Properties中，还有怎么提取配置文件资料等等方法，希望有人能帮忙解释下，最好是有事例源代码就更好了，我代表很多的初学者朋友先谢谢回答者了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;删除&lt;code class=\"language-javascript\"&gt;return&lt;/code&gt;&amp;#xff0c;改成用&lt;code class=\"language-javascript\"&gt;print&lt;/code&gt;输出&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;tuple1&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; each in tuple1:\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; each&amp;gt;temp:\n        &lt;span class=\"hljs-attribute\"&gt;temp&lt;/span&gt;&amp;#61;each\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(temp)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["在使用return返回结果值时，报错：SyntaxError: invalid syntax", ["大家好，我在学习python的max()的时候，书上作者说max()其实就是类似于索引出结果，于是他给出了一个例子，我在尝试时报错了，但我没看明白错误在哪，代码内容具体如下：", "\n", "\n", "tuple1=(1,2,3,4,5,6)", "temp=tuple1[4]", "for each in tuple1:", "     if each>temp:", "        temp=each", "return temp", "\n", "这段代码在运行的时候，报错将r标红并出现错误原因：SyntaxError: invalid syntax", "\n", "我搜索了该错误的出现情况但我没能看明白，请问这种该怎么解决？", "另，tuple1是我自己写的我觉得应该不影响中间循环代码的运行吧"]], "Tag": "程序设计"}
{"Answer": "android:name=\".ActivityMain\r\n这么写是因为在layout布局文件的&lt;manifest &gt;标签中已经配置了你的类文件路径属性，package=\"com.xxxxx.xxx.xx\".\r\n比如你的ActivityMain类是在一个叫activity包下面，那么package=“activity”\r\n这样你在配置activity的时候就直接用点就可以了。\r\nandroid:id=\"@+id/button1：\r\n\"@+id\" 这代表的是你要给标记声明一个新的id;\r\n“+”表示新建属性。\r\n其实@+无非就是一种特定的书写规定而已，就想你用java就得遵循JDK给的标准用里面的方法一样。", "Konwledge_Point": "通过例子学习", "Question": ["请教关于Android控件ID、name等标签属性的命名规则及含义？", ["[size=large]刚接触Android，再学习过程中经常遇到控件ID、name标签属性的命名包含“@”、“.”、“+”等等符号，实在是不解其中的含义，希望大家帮我解答下Android控件标签属性值的命名规则。先谢谢各位了。", "\n下面举几个例子 ：", "\n“android:name=\".ActivityMain\"”里面的“.”符号什么意思？", "\n“android:id=\"@+id/button1\"”里面包含“@”以及“+”符号，我知道“@”符号是将这个控件ID自动记载R文件中，但是“+”号又是表示什么意思呢？[/size]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二种写法省略了&amp;#61;&amp;#xff0c;但是里面必须是一个值&amp;#xff0c;不能写表达式&lt;br /&gt;第一种写法相当于高级语言里的if,then,else&lt;br /&gt;第二种写法相当于switch,case&lt;br /&gt;你不能在case里面再写大于小于&amp;#xff0c;只能写一些固定的值&lt;br /&gt;-&amp;#61;-&amp;#61;--&amp;#61;&amp;#61;-&amp;#61;&lt;br /&gt;这两种写法其实完全是两种不同的语法&amp;#xff0c;只不过复用了关键字&amp;#xff0c;你不要搞混了&amp;#xff0c;以为一个逻辑完全可以用另一个逻辑来代替&amp;#xff0c;他们完全是不一样的逻辑&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["新手入门，一个关于hive sql ,case 的提问", ["最近在学习hive sql，从一个初学者开始学习", "看了很多教程和简单的实例，打算开始自己实践一下", "但学习到case语句的时候出现了问题", "比如如下代码没有报错：", "select crf_gds_cd,                -第一种写法", "case", "when crf_gds_cd>88888 then '大额'", "when crf_gds_cd<88888 then '小额'", "end as yytr", "from default.lsy_test ", "\n", "但第二种写法就会报错，我不知道为什么会报错", "select crf_gds_cd,             -第二种写法", "case crf_gds_cd", "when >88888 then '大额'", "when <88888 then '小额'", "end as yytr", "from default.lsy_test", "\n", "第二种写法我也是根据教程写的            -", "\n      \n        ", "SQL 查询：SELECT CASE 条件赋值 | Hive SQL 教程 - 盖若", "\n        \n      ", "CASE 类型于编程中的 if else，可以将查询出的值按条件翻译成指定的内容，本文将介绍 case when then 的用法和使用场景。", "\n      ", "\n      ", "\n        ", "\n          ", "https://www.gairuo.com/p/sql-select-case-when-then", "\n        ", "\n      ", "原教材如下：", "将性别去重并翻译成英文，为了减少 Case 中 gender 的代码，可以在 case 后直接跟 gender，然后在分支中判断值 ：", "\n", "select distinct gender,", "        CASE gender", "            WHEN '男' THEN 'Male'", "            WHEN '女' THEN 'Female'", "            END as c_name", "from temp", "\n", "gender|c_name|", "------+------+", "男     |Male  |", "女     |Female|", "\n", "请指点，为什么不能以教程中的例子写第二种写法？"]], "Tag": "程序设计"}
{"Answer": "例如，如果服务器端返回的数据是这种格式：\r\n[{id:'001',name:'张三',age:'22'},\r\n{id:'002',name:'李四',age:'65'},\r\n{id:'003',name:'王五',age:'32'}]接收返回数据的变量为Msg，则可通过\r\nvar data=eval(Msg);这样，data就是一个由JSON生成的Array对象，包含了三个Object对象，Object对象拥有id,name和age三个属性。\r\n由于data自身就是一个对象，所以对其操作也会方便得多，可以和使用Javascript普通对象一样的方式操纵它。如：\r\nfor(var i=0;i&lt;data.length;i++){\r\n    var id=data[i][\"id\"];//得到元素中的id属性\r\n    var name=data[i][\"name\"];//得到元素中的name属性\r\n    var age=data[i][\"age\"];//得到元素中的age属性\r\n    alert(\"id=\"+id+\"\\n\"+\"name=\"+name+\"\\n\"+\"age=\"+age);\r\n}\r\n关于JSON的更多资料，楼主可以自己到网上搜索一下。", "Konwledge_Point": "通过例子学习", "Question": ["jquery小问题", ["学习JQuery不久，问题比较愚昧还望谅解。", "\n\n", "按照以下方法，可以成功返回jsp的结果。", "\n$.get('我的JSP.jsp', {'参数一':变量一, '参数二':变量二, '参数三':变量三}, ", "\n        function(msg) {", "\n            // alert(msg);", "\n            document.getElementById(\"Result\").innerHTML = msg;", "\n        });", "\n\n", "现在jsp要返回多条记录的话，应该如何处理?", "\n难道在前后端都自己解析xml吗？还是有其他好的方法，谢谢！", "\n[b]问题补充：[/b]", "\nto ham:", "\n能否给一个小例子参考一下，谢谢！"]], "Tag": "程序设计"}
{"Answer": "e texteditor 挺好的 轻巧 简洁 有提示.", "Konwledge_Point": "通过例子学习", "Question": ["新手入门ror的几点疑问, 望指点.", ["喜欢和关注ror很长时间了.. 终于决定入手了~ 京东刚购入\"web开发敏捷之道\" 第三版. 看起来还行. 但在学习过程中有几点疑问. 还望各位指点下. 谢谢.", "1. 目前学习环境windows+e texteditor. 之前是做java的. 脱离了对比e还算庞大的ide突然有点不习惯了.. 麻烦问下各位现在在windows下面开发的都用什么ide呢?", "2. 没有ruby知识做铺垫的话 直接上手ror是否有问题? 目前边看书边做例子感觉无难度.. 只是有些特殊的地方需要翻指南和上网查....", "以上两点小的疑问还望各位指点下... 表吝啬哦亲.. {坏笑}", "问题补充", "工欲善其事 必先利其器. 谢谢楼上朋友给的建议. 正在下nb..."]], "Tag": "程序设计"}
{"Answer": "LZ\r\n你把\r\n&lt;script type='text/javascript' src='dwr/interface/helloworld.js'/&gt; \r\n换成\r\n&lt;script type='text/javascript' src='dwr/interface/helloworld.js'&gt;&lt;/script&gt; \r\n试试\r\n希望能对您有所帮助", "Konwledge_Point": "通过例子学习", "Question": ["DWR问题", ["刚刚学习DWR,跟着教程一步步配置,运行后 ", "\n访问 http://localhost:8080/项目/dwr 测试通过. ", "\n然后我写了一个JSP ", "\n[color=red]<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"ISO-8859-1\"%> ", "\n\n", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"> ", " ", " ", " <br>\n  function dwrTest() <br>\n  { <br>\n  helloworld.showHelloWorld(&quot;123&quot;,function(data) <br>\n  { <br>\n  alert(data); <br>\n  }) </p>\n\n<p>} </p>\n\n<p>", "\n\n", " ", "\n    This is my JSP page. ", " [/color]", "\n访问这个JSP,http://localhost:8080/项目/页面,不能执行这个方法,出错行是引入DWR的JS出错 ", "\n[color=red] ", " [/color]\n\n", "DWR 配置 ", "\n[color=red]<?xml version=\"1.0\" encoding=\"UTF-8\"?> ", "\n<!DOCTYPE dwr PUBLIC \"-//GetAhead Limited//DTD Direct Web Remoting 2.0//EN\" \"", "http://getahead.org/dwr/dwr20.dtd\">", " ", "\n\n", "\n\n", "\n\n", "create javascript=\"helloworld\" creator=\"new\"> \n<param name=\"class\" value=\"com.helloworld.Hello\"> </param> \n</create> \n", "\n\n", " [/color]", "\nCLASS 文件", "\n\n", "[color=red]package com.helloworld; ", "\n\n", "public class Hello { ", "\n  public String showHelloWorld(String str) ", "\n  { ", "\n  System.out.println(\"HelloWorld\"); ", "\n  return \"HelloWorld\" + str; ", "\n  } ", "\n}[/color]", "\n不知道什么原因.测试都通过. 哪位大哥帮忙解答一下。。", "\n[b]问题补充：[/b]", "\n应该是对的吧。  我在DWR的例子中新建一个JSP,使用它的例子对象就没问题.", "\n我自己写的对象,就有这问题。", "\n配置我都跟它们一样。。", "\n测试都能通过,就是在JSP中访问就不行。"]], "Tag": "程序设计"}
{"Answer": "如果你不搞分布式cluster，HA（高可用），完全可以用Spring Cache，用的很多的。", "Konwledge_Point": "通过例子学习", "Question": ["实际项目中有没有使用spring自带的Spring Cache而不另外集成ehcache和redis？望告知", ["前提我要开发的这个系统，不集群。", "\n\n", "最近使用springboot开发一个系统，准备使用缓存 经过了解，学习了Spring Cache，并做了一个例子，体验了一下缓存。感觉还可以。但在网上查一般是集成第三方中间件如ehcache和redis，两个使用场景不一样，一个是类似单机版的缓存，缓存共享麻烦，集群分布式应用不方便不好做分布式。如果分布式一般用redis，不集群用ehcache。这是我初步了解了的信息。", "\n\n", "我想问的是：", "\n\n", "有没有朋友开发过一些系统，不用第三方缓存，就用springCache做缓存的，这样性能怎么样，可不可以这样使用，而一般到什么程度就得用第三方缓存如：ehcache。"]], "Tag": "程序设计"}
{"Answer": "在 自调用匿名函数 的作用域内，确保undefined是真的未定义。因为undefined能够被重写，赋予新的值。\r\nundefined = \"now it's defined\";\r\nalert( undefined );\r\nie             now it's defined    可以改变\r\nfirefox     undefined              不能改变\r\nchrome    now it's defined    可以改变\r\nopera      now it's defined     可以改变", "Konwledge_Point": "通过例子学习", "Question": ["JS中定义函数时的参数定义为undefined", ["看到大牛们写的js源码，想拜读学习一下。", "\n[code=\"java\"]var KISSY = (function (undefined) {", "\n\n", "var host = this,\n    S,\n    guid = 0,\n    EMPTY = '';\n\nS = {\n    __BUILD_TIME: '20130701201313',\n    ...\n};\n\n// exports for nodejs\nif (S.Env.nodejs) {\n    S.KISSY = S;\n    module.exports = S;\n}\n\nreturn S;\n", "\n\n", "})();[/code]", "\n\n", "请看以上的代码，为什么在定义匿名函数的时候要加上undefined的参数定义呢？ 在我看来该匿名函数执行的时候也没有传任何参数给它，这个的undefined定义是有啥特殊含义吗？谁知道的话能解释一下吗，最好给点例子什么的。"]], "Tag": "程序设计"}
{"Answer": "哈哈，解决了，原来我HDMI线接到主板上了，没接到显卡上，真的菜。。。。。。。。。。。。", "Konwledge_Point": "通过例子学习", "Question": ["求助啊，tensorflow-gpu的配置，4天没搞出来，崩溃了", ["大佬们求助，小弟用win7 64位+tensorflow-1.2.0rc0--gp+cuda8.0.61+cudnn5.1+gtx1080来配置深度学习的环境。", "\n\n", " 结果搞了4天，pycharm控制台一直出现 can not cuInit: CUDA_NO_DEVICE_ERROR......的错误，gpu也启动不了，只能用cpu。\n\n  而且更糟糕的是，nvdia的控制面板也打不开，总是出错，停止工作。因此,刚开始怀疑是驱动的问题，从官网上下载了最新的驱动，结果两个问题都没解决。\n\n  后来，我发现cuda的测试例子中的deviceQuery和bandwidthTest都运行失败，说明我连cuda都没装成功，简直吐血。对了，cuda自带的驱动是375.61.\n        重装驱动也没用\n\n  实在没办,法，谁来救救我\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;方案来自 &lt;a href=\"https://blog.csdn.net/hihell\" id=\"textarea_1676813569981_1676813736497_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;梦想橡皮擦&lt;/span&gt;&lt;/a&gt; 狂飙组基于 GPT 编写的 “程秘”&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;在概率论中&amp;#xff0c;可以通过边缘概率分布和条件概率分布的计算&amp;#xff0c;将高维随机事件的概率转化为一维随机变量随机事件的概率。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;假设有一个二维随机变量 $(X,Y)$&amp;#xff0c;其概率密度函数为 $f_{X,Y}(x,y)$&amp;#xff0c;现在我们要计算 $X$ 取值在区间 $[a,b]$ 内的概率 $P(a\\le X\\le b)$&amp;#xff0c;可以使用边缘概率分布计算&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/819286318676153.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;其中 $f_X(x)$ 表示 $X$ 的边缘概率密度函数&amp;#xff0c;可以通过二维随机变量的联合概率密度函数 $f_{X,Y}(x,y)$ 计算得出。类似的&amp;#xff0c;如果要计算 $Y$ 取值在区间 $[c,d]$ 内的概率 $P(c\\le Y\\le d)$&amp;#xff0c;也可以使用边缘概率分布计算&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/476107318676143.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;还可以使用条件概率分布来计算一维随机变量随机事件的概率。例如&amp;#xff0c;假设我们要计算在 $Y&amp;#61;y$ 的条件下 $X$ 取值在区间 $[a,b]$ 内的概率 $P(a\\le X\\le b|Y&amp;#61;y)$&amp;#xff0c;可以使用条件概率分布计算&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/942817318676156.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这里 $f_Y(y)$ 表示 $Y$ 的边缘概率密度函数。&lt;/p&gt;\n&lt;p&gt;总之&amp;#xff0c;通过边缘概率分布和条件概率分布的计算&amp;#xff0c;可以将高维随机事件的概率转化为一维随机变量随机事件的概率。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["如何将高维随机事件的概率转化为一维随机变量随机事件的概率？", ["请问一般如何将高维随机事件的概率转化为一维随机变量随机事件的概率？可以举一个相对应的例子吗？"]], "Tag": "程序设计"}
{"Answer": "第一个问题:\r\n1.1. OSGi中提供Service的方式  这是OSGI协议定义的方式.\r\n\r\n1.2. Plugin中使用Extension Point, 则是Eclipse (特指Eclipse的UI环境，　比如Eclipse IDE, Eclipse　RCP)自己的. 和OSGI没什么关系. 只是为了使得Ecipse　UI环境能够从插件中获得需要往Eclipse　UI环境中添加的UI元素(Extension Point).\r\n\r\n1.3 即使你使用了Eclipse的Equinox, 但不在Eclipse　UI环境下, 就算写了ｐｌｕｇｉｎ．ｘｍｌ也是没用的，因为OSGI是不认Extension Point的.\r\n\r\n1.4 所以,在新建一个Ecipse plugin项目时, 会提示你 是建一个Eclipse插件,还是Equinox插件,还是其他OSGI插件. 只有你去建Eclipse插件,它才允许你注册UI元素.\r\n\r\n\r\n第二个问题:\r\n1. 在Eclipse下, bundle就是plugin. \r\n2. 理论上说, 绝大部分OSGI环境下, 一个jar应该就是一个bundle. 同样的在Ecipse下,一个plugin就是一个jar, 也就是一个bundle.", "Konwledge_Point": "通过例子学习", "Question": ["OSGi 中为什么还有Eclipse Extension point的方式？", ["各位Java高手们，咨询大家一个问题", "\n\n", "我现在学习OSGi的问题，看了两个资料：OSGi实战和OSGi进阶。但在看到OSGi进阶的时候，里面有好多例子，都是用到了Extension Point的开发方式，我不太明白是说必须这样第一扩展点，才能达到动态扩展的效果么？", "\n\n", "难道不可以使用Declarative Services方式么？", "\n\n", "在OSGi中使用Extension point有什么好处，或者有什么作用么？", "\n\n", "谢谢大家：）", "\n[b]问题补充：[/b]", "\n谢谢lggege的回答，那也就是说：OSGi中提供Service的方式 和 Plugin中使用Extension Posint方式是同一级别的了？两种使用哪个都行是么？", "\n\n", "还有那就是说Bundle和Plugin是同一个概念楼？：）", "\n\n", "万分感谢~"]], "Tag": "程序设计"}
{"Answer": "例子1中\nfor(var i=0;i&lt;funcs.lenght;i++){  \n    document.write(funcs[i]() + \"&lt;br/&gt;\");     \n}  \n应该为:\nfor(var i=0;i&lt;funcs.length;i++){  \n    document.write(funcs[i]() + \"&lt;br/&gt;\");      \n}  \nlength是数组的长度，lenght不知道是什么。\n这个结果应该输出十个换行的10；\n\n例2的错误一样\n应该输入1、2、3...\n\n楼主注意length的拼写就可以了。\n\n最后两个问题：\n1. 需要的时候在使用闭包，并不是用闭包就好，这个和设计模式一样；\n2. 理论上不需要，高级这本书有提到过。", "Konwledge_Point": "通过例子学习", "Question": ["JavaScript的闭包的相关问题", ["    最近在学习《JavaScript高级程序设计》，其中关于闭包的两个例子，我照着书中的例子运行时，浏览器不打印也不报错，由于我是初学，才疏学浅，发现似乎是createFunctions()的循环不太对，但也没有调试成功，现在贴出来，还望大家共同讨论，各抒己见。", "     下面我把两个例子贴出来，希望有兴趣的朋友能够回复，看看是什么原因造成的：", "     例子1：", "\n<html>", "\n<head>", "\n    <title>对象</title>", "\n</head>", "\n<script type=\"text/javascript\">\n\n", "function createFunctions(){", "\n    var result = new Array();", "\n    for(var i=0;i<10;i++){", "\n        result[i] = function(){", "\n            return i;", "\n        };", "\n    }", "\n    return result;", "\n}", "\n\n", "var funcs = createFunctions();", "\n\n", "//分别输出0、1、2……9", "\nfor(var i=0;i<funcs.lenght;i++){", "\n    document.write(funcs", "i", " + \"<br/>\");", "\n\n", "}", "\n\n", "</script>", "\n<body>", "\n</body>", "\n</html>", "例子2：", "\n<html>", "\n<head>", "\n    <title>对象</title>", "\n</head>", "\n<script type=\"text/javascript\">\n\n", "function createFunctions(){", "\n    var result = new Array();", "\n    for(var i=0;i<10;i++){", "\n      result[i] = function(num){", "\n        return function(){", "\n            return num;", "\n        };", "\n      }(i);", "\n    }", "\n    return result;", "\n}", "\n\n", "var funcs = createFunctions();", "\n\n", "//分别输出0、1、2……9", "\nfor(var i=0;i<funcs.lenght;i++){", "\n    document.write(funcs", "i", " + \"<br/>\");", "\n}", "\n\n", "</script>", "\n<body>", "\n</body>", "\n</html>", "    另外，我对闭包的概念理解得也不透彻，不太明白闭包的定义：“闭包是指有权访问另一个函数作用域中的变量的函数:，那么在什么情况下使用闭包呢？", "     还有匿名函数的销毁，有一个疑问：匿名函数用完后，必须置为null吗？是因为闭包对活动对象的引用造成的吗？", "     期待同仁赐教，不胜感激。"]], "Tag": "程序设计"}
{"Answer": "静态 / 动态 第三方库都有可能\r\n\r\nlib 对应 a （静态库，代码会 copy 到成品中）\r\ndll 对应 so （动态链接库、共享库）\r\n文件格式不一样，不过 dll 这个后缀改名为 so 后缀其实是没问题的 ……\r\n\r\n参考一\r\n[url]http://learn.akae.cn/media/ch20.html[/url]\r\n\r\n参考二\r\n[url=\"http://book.douban.com/subject/3652388/\"]《程序员的自我修养》[/url] (书名很 orz 是没错啦 ……）", "Konwledge_Point": "通过例子学习", "Question": ["关于c++库调用", ["想知道如果做c++开发，第三方库一般都是以什么形式存在，静态的还是动态的？", "\nWindows下面的Lib和Dll分别和Linux下面的so与a有什么不同，分别都在代码里面如何调用？", "\n\n", "我看到有的是在g++编译的时候，用-I加入，有的是用#Progam comment(..)加入，有的是dlopen，", "\n而dlopen貌似是无需引入header文件，在代码中利用open的句柄，用函数指针来实现调用的，如果我引入的库不是函数，而是一个类的话，在不知道类定义声明的前提下如何调用；", "\n貌似所有的c++书中都没有详细的介绍和说明和例子，希望这方面能详细的讲解一下这几种方法，或者提供学习的链接，跪谢"]], "Tag": "程序设计"}
{"Answer": "没错的，这是相对路径 ，相对你应用根目录的路径。", "Konwledge_Point": "通过例子学习", "Question": ["请教关于jfinal框架官方提供的demo的一点小问题", ["\n", "最近学习jfinal框架，下载官网的demo例子，在本地部署后访问http://localhost:8080/jfinal_demo/进入demo项目首页。", "\n", "然后点击blog管理链接后url会跳转到http://localhost:8080/blog，tomcat会报404错误。", "\n", "查看代码发现demo中链接地址写的是<a href=\"/blog\">，我想请教下这种写法对吗，因为我想官方的demo应该不会有这种低级错误吧，", "\n", "还是我有什么地方弄错了导致demo运行不起来？？？", "\n"]], "Tag": "程序设计"}
{"Answer": "在客户端 工程文件夹下 输入 rake routes\r\n看看路由的规则，识别是从上向下的， 如果需要更改，在config/route.rb文件里加入新规则，每个控制器的 map.resources 之前加", "Konwledge_Point": "通过例子学习", "Question": ["Rails中的路由功能是如何对应的？", ["我才开始接触ROR，我是参照agile web development with rails这本书学习，按照上面的例子走，但是我发现我请求的地址似乎和config/routes.rb里面设定并不一样，比如说routes中是这样设置的：", "\n[code=\"ruby\"]", "\nmap.connect ':controller/:action/:id'", "\n[/code]", "\n可是我在浏览器中编辑的时候显示的是：http://localhost:3000/products/2/edit", "\n\n", "2是id编号，Edit是action名，这样不是和设置不一致么，为什么照样可以运行?", "\n而显示页面的地址是：http://localhost:3000/products/2, 默认不是找index么？怎么controller后面直接跟id了呢？", "\n\n", "这个机制到底是什么样的呢？ 还请知道的帮我解惑，先谢过了."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果静态成员常量被ODR使用&amp;#xff0c;比如取地址或引用&amp;#xff0c;那么该静态成员常量还必须在类外定义一次。&lt;br /&gt;C&amp;#43;&amp;#43;17引入了inline static data member概念&amp;#xff0c;inline static data member不需要在类外定义&amp;#xff0c;constexpr隐式包含inline&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;X&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;constexpr&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n};\n \n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *p &amp;#61; &amp;amp;X::n, *q &amp;#61; &amp;amp;X::m; &lt;span class=\"hljs-comment\"&gt;// X::n and X::m are odr-used&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; X::n;             &lt;span class=\"hljs-comment\"&gt;// … so a definition is necessary&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;constexpr&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; X::m;         &lt;span class=\"hljs-comment\"&gt;// … (except for X::m in C&amp;#43;&amp;#43;17)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=\"https://en.cppreference.com/w/cpp/language/static#Constant_static_members\" id=\"textarea_1648030054944_1648030346560_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://en.cppreference.com/w/cpp/language/static#Constant_static_members&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;If a const non-inline (since C&amp;#43;&amp;#43;17) static data member or a constexpr static data member (since C&amp;#43;&amp;#43;11)(until C&amp;#43;&amp;#43;17) is odr-used, a definition at namespace scope is still required, but it cannot have an initializer. A definition may be provided even though redundant (since C&amp;#43;&amp;#43;17).&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;a href=\"https://en.cppreference.com/w/cpp/language/inline\" id=\"textarea_1648030054944_1648030346560_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://en.cppreference.com/w/cpp/language/inline&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;Since C&amp;#43;&amp;#43;17&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The inline specifier, when used in a decl-specifier-seq of a variable with static storage duration (static class member or namespace-scope variable), declares the variable to be an inline variable.&lt;br /&gt;&lt;strong&gt;A static member variable (but not a namespace-scope variable) declared constexpr is implicitly an inline variable&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;a href=\"https://en.cppreference.com/w/cpp/language/static#Static_data_members\" id=\"textarea_1648030054944_1648030346560_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://en.cppreference.com/w/cpp/language/static#Static_data_members&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;Since C&amp;#43;&amp;#43;17&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A static data member may be declared inline. An inline static data member can be defined in the class definition and may specify an initializer. It does not need an out-of-class definition:&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C++ 静态成员类的内初始化的问题", ["学习 C++ Primer ，遇到点不解的问题", "\n", "示例代码：", "\n", "class", " ", "Account", "\n{\n    ", "//......", "\n", "private", ":\n    ", "static", " ", "constexpr", " ", "int", " period = ", "30", ";\n    ", "double", " daily_tbl[period];\n};\n\n", "\n", "“如果某个静态成员的应用场景仅限于编译器可以替换它的值的情况，则一个初始化的const或constexpr static 不需要分别定义。相反，如果我们将它用于值不能替换的场景中，则该成员必须有一条定义语句。”", "“例如，如果period的唯一用途就是定义daily_tbl的维度，则不需要在Account外面专门定义period。此时，如果我们忽略了这条定义，那么对程序非常微小的改动也可能造成编译错误，因为程序找不到该成员的定义语句。举个例子当需要把Account::period传递给一个接受const int&的函数时，必须定义period”", "\n", "就是对上面两端内容不是很理解，我也试验了一下给一个静态成员数据内类初始值后，不在类外再次定义，把它作为参数给其它函数，并没有引发错误。", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "void", " ", "print", "(", "const", " ", "int", "& p)", "\n", "{\n    cout << p << endl;\n}\n\n", "class", " ", "A", "\n{\n", "public", ":\n    ", "static", " ", "constexpr", " ", "int", " a = ", "2", ";\n};\n\n", "//constexpr double A::a;", "\n\n\n", "int", " ", "main", "()", "\n", "{\n    cout << A::a << endl;\n    ", "print", "(A::a);\n\n    ", "return", " ", "0", ";\n}\n\n", "\n", "是否可以举个简单的例子，说明一下 不在类外再次定义给了类内初始值的静态成员数据 会导致的问题吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不需要designer文件的。。检查page指令CodeFile文件路径对了没有&amp;#xff0c;还有Inherits的类名称和codefile的是否一致&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["asp.net窗体一定有designer代码吗？给我的源码程序编译报没有控件，求大神看看", ["第一个是示例代码，第二个是编译报错。我自己建的程序都是带Designer的，和winform一样。小白在学习，求大神看看。其实我第一次直接编译编过了的，后来想发布成网站或者后来就编不过了。  如何使用这种源码例子呢？       "]], "Tag": "程序设计"}
{"Answer": "tomcat的server.xml配置里面", "Konwledge_Point": "通过例子学习", "Question": ["求助，为什么我使用servlet访问的路径没有项目名称？", ["最近小弟在学习servlet相关的知识，参照网上的教程进行了一些尝试，使用的编译器为IDEA2017，tomcat版本为tomcat9。", "\n\n", "但是今天突然发现，我运行tomcat之后，弹出来的欢迎界面URL，以及转到某个servlet之后的URL均与教程不同", "\n\n", "举个例子，教程中跳转到servlet后的URL是", "\n\n", "http://localhost:8080/Projcet25/Servlet\n", "\n\n", "而我的URL是", "\n\n", "http://localhost:8080/Servlet\n", "\n\n", "也就是我的URL没有项目名称，再仔细研究了一下，发现我的欢迎界面（index.html）弹出的时候也没有项目名称，这导致了我在代码中书写路径时，Web服务器的参考路径和浏览器的参考路径都变成了", "\n\n", "http://localhost:8080\n", "\n\n", "请问各位大神，这是怎么回事呢，是哪个配置有问题吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以肯定的回答是固定用法&amp;#xff0c;express中get方法第二个参数是回调函数&amp;#xff0c;而回调函数包含req和res两个参数也是定义好的&lt;br /&gt;promise需要两个参数&amp;#xff0c;通过resolve进入.then&amp;#xff0c;通过reject进入.catch&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["对于express和nodejs里回调函数的一些疑惑", ["目前正在学习nodejs和express，但是对回调函数有些疑惑。", "举个例子：", "\n", "app.", "get", "(", "\"/login\"", ", ", "function", "(req, ", "res", "){})\n", "\n", "这个函数的作用我知道，但为什么那个回调函数的两个参数req res包含着客户端、服务器相关信息？", "我的意思是这是固定用法吗？get方法的回调函数里一定包含req res对象吗？这两个对象是从哪里传递过来的？", "\n", "还有这个：", "\n", "app", ".", "get", "(", "\"/login\"", ", ", "function", "(", "req", ", ", "res", "){\n    ", "req", ".", "on", "(", "\"data\"", ", ", "function", "(", "chunk", "){\n    })\n})\n", "\n", "req的on方法第一个参数一定对应一个固定的回调函数吗？比如，data就对应function(chunk)函数，而end则对应function()函数，里面的参数是不同的。这些也是固定用法吗？我的意思是data或者其他什么参数对应的回调函数function的参数是不一样的吗？他们的回调函数的参数包含的信息是不一样的吗？", "\n", "处理这两个例子，这里还有很多比如：", "\n", "Promise(", "function", "(", "resolve", ", ", "reject", ")", "{})", "//promise对象构造函数里的回调函数", "\n\nconst pool = mysql.create", "Pool(", "config", ")", ";\npool.get", "Connection(", "function", "(", "err", ", ", "con", ")", "{})\n", "//等等", "\n", "\n", "这些回调函数都是统一固定的用法吗？比如promise对象里的回调函数一定包含resolve, reject(不是这两个变量名，而是他们指向的对象所包含的操作和信息)两个参数。这些回调函数都该怎么理解呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;肯定是可以的&amp;#xff0c;keras的话调整搭建模型的输出层就行&amp;#xff08;layers.Dense(2)&amp;#xff09;&amp;#xff0c;matlab里的没咋用过&amp;#xff0c;等别人回答~&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Lstm神经网络能否调整输出层的节点数使其对于预测点输出两个值?", ["最近换方向到光伏区间预测了，对算法一头雾水……使用matlab自带的例子修改了numRespouce提示错误使用reshape，请问各位应该怎么改呢matlab或者python "]], "Tag": "程序设计"}
{"Answer": "其实就是变量表里存放了变量名、类型，并不是只有类型。", "Konwledge_Point": "通过例子学习", "Question": ["如何理解“局部变量表存放了编译期可知的各种基本数据类型”？", ["最近在学习JVM相关知识，在《深入理解Java虚拟机：JVM高级特性与最佳实践》(第2版)中，对于虚拟机栈中的局部变量表存放内容是这样描述的：“局部变量表存放了编译期可知的各种基本数据类型（boolean、byte、char、short、int、flat、long、double）”。\n\n关于这句话我的理解不是很深刻，举个例子顺带提出我的疑问：\n\nint i = 10;\nint j = 10;\n\n对Java内存结构有了解的都知道，对于判断 i == j 的结果为true，因为i和j的值都存储在常量池中。\n\n那么问题就是，对于这句代码，它在局部变量表中存访的内容是什么？\n\n我个人理解是存的 i 和 j，仅仅代表有int类型的这么两个变量（因为int类型长度固定故而局部变量表的空间在编译期就能确定）。\n\n请各位大神答疑解惑一下，感激不尽！\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议概览一下linux bash的源代码&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["终端指令是怎么设计的？", ["问题：", "如win的控制台和一些终端指令窗口", "，每行都会打印出 类似 （例子）: ", "路径$>", "(键入你的命令)   或者 一些符号 : ", "root:iSH$->", "(键入你的命令)", "           其次就是 如何 做到 不同的 指令 做不同的 事情， 并且 指令可以", "组合", "， 就是 怎么处理 字符串的，主要是 怎么设计的？，想不来怎么抽象这个 东西  。 我的想法是 把每一句 指令 都 拆解成对应的 class ， 就类似 学习英语的时候 那种 主语 谓语什么的 。", "           把每一个 指令(这里叫做 关键字吧 比如 ls ll rm - sudo 什么的 我也 不太熟悉）转换成 对应的 code 然后做对应的事情？", "           就想做出 这么 一个效果， 我表述的可能不清楚。想拿这个做我的  qi mo zuo ye (会C++） ，具体 每条指令 做什么， 这个 由我来写。"]], "Tag": "程序设计"}
{"Answer": "你可以用MoveWindow等来调整大小。控制到需要的大小", "Konwledge_Point": "通过例子学习", "Question": ["MFC 在 ToolBar 上创建 ComboBox 发现大小不符合期望值", ["正在学习 MFC，使用的教材是《MFC Windows 程序设计（第二版）》；", "\n学习到第十二章，跟着书上的例子 MYWORD 自己重头创建一个 MFC 工程；", "\n这个例子会在 ToolBar 上创建两个 ComboBox 供用户选择字体和字号；", "\n问题来了，我创建出来的 ComboBox 大小并不符合预期的大小；", "\n希望各位前辈帮忙看看是怎么回事，先谢谢各位了 ！！", "\n上面两张图片，第一章是书上例子的效果，第二章是我自己做出来的效果；", "\n下面是自己写的代码：", "\n\n", " int CStyleBar::OnCreate( LPCREATESTRUCT _cs ){\n    const int FONTSIZE[ ] = {\n        8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 32, 36, 48, 72\n    };\n    const int DIM = sizeof( FONTSIZE ) / sizeof( FONTSIZE[ 0 ] );\n    int char_w = 0;\n    int char_h = 0;\n    CRect rc_item;\n    CClientDC dc( this );\n    CFont * prev_font = nullptr;\n    TEXTMETRIC tm = { 0 };\n    CString tmp;\n\n    if( -1 == CToolBar::OnCreate( _cs ) )\n        return -1;\n    if( ! LoadToolBar( IDR_STYLEBAR ) )\n        return -1;\n\n    font.CreatePointFont( 80, _T( \"MS Sans Serif\" ) );\n    prev_font = dc.SelectObject( & font );\n    dc.GetTextMetrics( & tm );\n    char_w = tm.tmAveCharWidth;\n    char_h = tm.tmHeight + tm.tmExternalLeading;\n    dc.SelectObject( prev_font );\n\n    SetButtonInfo( 8, IDC_FONTNAME_LIST, TBBS_SEPARATOR, char_w * 32 );\n    GetItemRect( 8, & rc_item );\n    rc_item.bottom = rc_item.top + ( char_h * 16 );\n    if( ! font_name_list.Create( WS_CHILD | WS_VISIBLE | WS_VSCROLL |\n        CBS_DROPDOWNLIST | CBS_SORT, rc_item, this, IDC_FONTNAME_LIST ) )\n        return -1;\n    font_name_list.SetFont( & font );\n    initFontList( dc );\n    font_name_list.SetCurSel( 0 );\n\n    SetButtonInfo( 10, IDC_FONTSIZE_LIST, TBBS_SEPARATOR, char_w * 12 );\n    GetItemRect( 10, & rc_item );\n    rc_item.bottom = rc_item.top + ( char_h * 14 );\n    if( ! font_size_list.Create( WS_CHILD | WS_VISIBLE | WS_VSCROLL |\n        CBS_DROPDOWNLIST, rc_item, this, IDC_FONTSIZE_LIST ) )\n        return -1;\n    font_size_list.SetFont( & font );\n    for( int i = 0; i < DIM; ++ i ){\n        tmp.Format( _T( \"%d\" ), FONTSIZE[ i ] );\n        font_size_list.AddString( tmp );\n    }\n\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实很简单&amp;#xff0c;每个历程都能知道管道图&amp;#xff0c;但是nvidia并没有写那几行代码&amp;#xff0c;c的话参考这篇自己加上就可以了&amp;#xff0c;python的可以看我博客&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/u013554213/article/details/98078955\" id=\"textarea_1660832879024_1660833065750_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/u013554213/article/details/98078955&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["如何在Jetson系列的开发板上使用DeepStream时，从哪个文件可以看出这个例程中构建的pipeline都包含哪些插件？", ["在Jetson系列的开发板上使用DeepStream时，从哪个文件可以看出这个例程中构建的pipeline都包含哪些插件？以官方提供的任一例程作为例子皆可"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您可以尝试使用MATLAB中的eval函数将字符串形式的变量名转换为变量&amp;#xff0c;并将其作为参数传递给classify函数。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;如果您将重命名后的变量名保存在app.var1中&amp;#xff0c;您可以尝试以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;net&lt;/span&gt; &amp;#61; eval(app.var1)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt; &amp;#61; classify(net, picture)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这将使用eval函数将app.var1中保存的字符串形式的变量名转换为变量&amp;#xff0c;并将其传递给classify函数。请注意&amp;#xff0c;使用eval函数需要谨慎&amp;#xff0c;因为它可以执行任意代码&amp;#xff0c;并且可能存在安全风险。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["matlab关于classify（net，picture）中net是否可以使用公共属性来替换的问题", ["在深度学习网络的例子中，有label = classify(net,picture);", "（即让label=", "【加载的变量net，来区分picture的类别】）", "我想尝试在这里进行自己的改变。", "\n", "目前我已经实现，分别对训练得到的不同mat文件，分别修改对应的net变量的名称。", "但是在下一步label = classify(net,picture);", "我想尝试，用已经修改的名称来对应classify（）中的net。", "例如存一个公共属性app.var1，这个公共属性给赋值为：字符形式的，（重命名net变量后的）变量名字。", "结果出现如下报错。", "\n", "下面是我改名变量后的操作。", "\n", "\nsave(", "filename", ",", "variable", ");\n            \n                app.var1 = ", "variable", ";\n\n", "\n", "这里是一个被我重命名为Y1的变量，证明我确实把变量的名字给修改了，问题应该不是出在这里。", "\n", "最后，怎么才能用一个量，赋给他我重命名后的Y1变量，然后让classify（Y1，picture）呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先不说long int是不是8字节&amp;#xff0c;你这个printf的格式能打印8字节整型吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["取幂快速算法问题c语言", ["开始学习数据结构和算法，有一个取幂快速算法例子，自己写了一下", "发现2的62次方这种数打印的值是0，不知道为啥", "下面是代码", "\n", "#", "include", "<stdio.h>", "\n ", "long", " ", "int", " ", "pow", "(", "long", " ", "int", " x,", "unsigned", " ", "int", " n)", ";\n ", "long", " ", "int", " ", "pow", "(", "long", " ", "int", " x,", "unsigned", " ", "int", " n)", "\n", "{\n    \n    ", "if", "(n==", "0", ")\n    {\n        ", "return", " ", "1", ";\n        \n    }\n        ", "else", " ", "if", "(n==", "1", ")\n    {\n        ", "return", " x;\n        \n    }\n        ", "else", " ", "if", "(!(n%", "2", "))\n    {\n        ", "return", " ", "pow", "(x*x,n/", "2", ");\n        \n    }\n    ", "else", "\n    {\n        ", "return", " ", "pow", "(x*x,n/", "2", ")*x;\n        \n    }\n    \n    \n    \n    \n}\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " x,n;\n    ", "scanf", "(", "\"%d%u\"", ",&x,&n);\n", "printf", "(", "\"%d\"", ",", "pow", "(x,n));\n", "return", " ", "0", ";\n}    \n    \n```c\n\n\n![img](https:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/494102541236163.png \"=600 #left\")", "\n"]], "Tag": "程序设计"}
{"Answer": "已解决，因为元素9×9是固定的，所以直接切割出来并切成81份。\r\n然后有两种方式进行核对，对比元素图像：\r\n1.通过哈希算法进行像素对比   参考：https://blog.csdn.net/luoweifu/article/details/7733030\r\n2.通过提取样点进行颜色对比（我采用的这个，因为方法1误差太大）\r\n计算出来数据map后面就好办了，通过算法计算并提示。", "Konwledge_Point": "通过例子学习", "Question": ["安卓图片处理-怎么样在大图中识别到小图位置？（图中搜图）", ["安卓图片处理-怎么样在大图中识别到小图呢", "\n\n", "入移动端的坑，初入AS学习，直接上个例子：", "\n例如消消乐布局，怎么样把它转换为一个二位数组，详细说明：", "\n\n", "\n\n", "这里想具体问的技术是，怎么实现在总图里找到小图，并标记下来（有时需要模糊查找，有时匹配的图有细节的小变化）？", "\n\n", "\n\n", "说一下原来自己的思路：", "\n\n", "\n", "①bitmap读入图片 ", "\n", "②createScaledBitmap缩小图片 ", "\n", "③由于不会图搜图，所以getPixel()遍历像素", "\n", "④遍历背景灰色，确定有用部分边缘（图中红框部分）", "\n", "⑤根据图的宽高和刚刚确定的部分，确定下来几行几列", "\n", "⑥将有用部分根据几行几列进行分割", "\n", "⑦遍历每个分割部分的特征像素点颜色，根据颜色编码", "\n", "⑧最后完成数组", "\n", "最后自己的思路卡在了第③步，遍历时间久耗内存，导致程序崩溃，也许还有什么最好的方法，请教大神指点~~"]], "Tag": "程序设计"}
{"Answer": "set和get字面理解是设置和取得，在Java中也基本就是这种意思，你可以在一个类中进行设置变量值，然后又设置get方法可以让该变量值在别处让其它的类去得到。也就是get就是给别处一个得到的方法，所以你说的删除一些不影响因为这里不是别处。如果是其它的类去取得该值没有get方法就不行了，我的理解希望帮到你。", "Konwledge_Point": "通过例子学习", "Question": ["java中有关get方法的使用（具体程序分析）", ["最近在学习java，用的徐彩霞的java基础教程。", "\n有个例子不太明白。", "\n/* ", "/注释部分的get部分有和没有结果一样，想知道为什么要用get？", "\n又必须要用的情况吗？", "\n刚学，懂得比较少，谢谢了~", "\nclass Person", "\n{", "\n    private String name;", "\n    private int age;", "\n    private void talk()", "\n    {", "\n        System.out.print(\"I'm \"+name+\" and \" + age+\" years old\");", "\n    }", "\n    public void say()", "\n    {", "\n        talk();", "\n    }", "\n    public void setName(String str)", "\n    {", "\n        name=str;", "\n    }", "\n    public void setAge(int a)", "\n    {", "\n        if(a>0)", "\n            age=a;", "\n    }", "\n    /*public String getName()", "\n    {", "\n        return name;", "\n    }", "\n    public int getAge()", "\n    {", "\n        return age;", "\n    }", "/", "\n}", "\npublic class TestPersonDemo5 {", "\n\n", "public static void main(String[] args) \n{\n    // TODO Auto-generated method stub\n  Person p=new Person();\n  p.setName(\"John\");\n  p.setAge(30);\n  p.say();\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "这两个js是确实存在的，你浏览器输入的地址只是网络映射地址，而这两个js实际是放在dwr.jar包里面的，是通过org.directwebremoting.servlet.DwrServlet解析的，因为这个servlet拦截的就是/dwr/*的地址。", "Konwledge_Point": "通过例子学习", "Question": ["DWR 关于 自动生成的 js文件的疑惑。", ["本人今天开始学习DWR，按照参考书上做了一个Hello Name的例子，有三点不明白的地方。", "\n\n", "1.我在jsp页面引用", "\n这个service.js是哪里来的（当然了，我知道是自动生成的，但是这个东西放在哪里？）", "\n\n", "2.我按照书上的说明将engine.js和util.js两个js文件放置在工程目录下的jscript文件夹里，并在jsp页面引用", "\n[code=\"js\"]", "[/code]", "\n结果报错：[color=red]A request has been denied as a potential CSRF attack.[/color]", "\n\n", "3.我通过网上的方法，网上提供两种方法， 我只用第二种简单的，就是将jscript/engine.js和jscript/util.js改为：", "\ndwr/engine.js和dwr/util.js（也就是更改了js文件存放的目录），结果可以运行，但是我就郁闷了，dwr这个目录以及里面的js文件根本不存在啊，并且我在浏览器里输入：", "http://10.81.66.173/dwr_1/dwr/engine.js它又弹出engine.js的文件下载框，说明存在该文件，但是明明我找不到啊，自动生成的也应该至少存在把。怎么隐身了啊。", "\n\n", "在这里跟大家交个朋友，请大家帮我看看是什么原因。"]], "Tag": "程序设计"}
{"Answer": "你可以看看具体的实现Springmvc的  \r\n\r\n\r\n\r\n\t&lt;servlet&gt;\r\n\t    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\r\n\t    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\r\n\t    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\r\n\t&lt;/servlet&gt;\r\n\t\r\n\t&lt;servlet-mapping&gt;\r\n\t    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\r\n\t    &lt;url-pattern&gt;/&lt;/url-pattern&gt;\r\n\t&lt;/servlet-mapping&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请教servlet和spring整合的详细步骤", ["学习spring刚开始.想实现spring注入servlet....", "\n有这样一个简单的例子  我想实现用户的登录。", "\n定义了一个接口：", "\n[code=\"java\"]public interface Login {", "\n    public boolean login(String username,String password);", "\n}[/code]", "\n然后是一个实现类：", "\n[code=\"java\"]import com.rcg.interfaces.Login;", "\n\n", "public class Springlogin implements Login {", "\n\n", "public boolean login(String username, String password) {\n    if(username==\"allen\"&&password==\"123\")\n    {\n        return true;\n    }\n    return false;\n}\n", "\n\n", "}[/code]", "\n一个登录页面：", "\n[code=\"java\"]  ", " ", "\n   username:", "\n   password:", "[/code]\n\n", "问题就是servlet这里怎么写以及web.xml中是怎么配置的，要设置监听器？请了解的兄弟姐妹看看怎么解决了."]], "Tag": "程序设计"}
{"Answer": "看log,应该是你的程序或者引用的其它包邮用到了java.io这个包的东西，目前GAE for java，不支持这个包。\r\n\r\n具体现在GAE for Java支持什么看下面的连接：\r\n\r\n[url]http://groups.google.com/group/google-appengine-java/web/will-it-play-in-app-engine[/url]", "Konwledge_Point": "通过例子学习", "Question": ["google app engine  为什么不能debug", ["刚刚学习Google app engine时，想用debug模式启动但是报错。网上找不到相应的答案。", "\n只给出以下信息。不知如何入手，程序没有问题，可以用直接run as webapplication", "\n但是一debug就出错", "\njava.lang.RuntimeException: Cannot generate policy file.", "\n    at com.google.apphosting.utils.security.SecurityManagerInstaller.install(SecurityManagerInstaller.java:106)", "\n    at com.google.appengine.tools.development.DevAppServerFactory.createDevAppServer(DevAppServerFactory.java:67)", "\n    at com.google.appengine.tools.development.DevAppServerFactory.createDevAppServer(DevAppServerFactory.java:40)", "\n    at com.google.appengine.tools.development.DevAppServerMain$StartAction.apply(DevAppServerMain.java:153)", "\n    at com.google.appengine.tools.util.Parser$ParseResult.applyArgs(Parser.java:48)", "\n    at com.google.appengine.tools.development.DevAppServerMain.(DevAppServerMain.java:113)", "\n    at com.google.appengine.tools.development.DevAppServerMain.main(DevAppServerMain.java:89)", "\nCaused by: java.io.IOException: ????????????????", "\n    at java.io.WinNTFileSystem.createFileExclusively(Native Method)", "\n    at java.io.File.checkAndCreate(Unknown Source)", "\n    at java.io.File.createTempFile(Unknown Source)", "\n    at java.io.File.createTempFile(Unknown Source)", "\n    at com.google.apphosting.utils.security.SecurityManagerInstaller.generatePolicyFile(SecurityManagerInstaller.java:143)", "\n    at com.google.apphosting.utils.security.SecurityManagerInstaller.install(SecurityManagerInstaller.java:104)", "\n    ... 6 more", "\n\n", "[b]问题补充：[/b]", "\n我的程序里确实引用了一个java.io这个包。我参考Google上的文档做的一个小例子，参考例子是一个servlet，里面就引用了一个java.io这个包。文档里面还提示说使用debug，修改代码后可以自动重新编译。我就用了，结果报错了。", "\n如果我修改代码后，想重新部署怎么办？能否像tomcat那样，点击方便的部署？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以用tkinter&lt;br /&gt;参考下这个&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#-*- coding:utf-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; -*-\nfrom tkinter import&lt;span class=\"hljs-operator\"&gt; *\n&lt;/span&gt;import openpyxl\ndata &amp;#61; &lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    wb &amp;#61; openpyxl.load&lt;span class=\"hljs-constructor\"&gt;_workbook(&lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;data.xlsx&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    ws &amp;#61; wb.active\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; r &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(ws.rows)&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]&lt;/span&gt;:\n        data.append({&amp;#39;sno&amp;#39;: r&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt;.value, &amp;#39;name&amp;#39;: r&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;.value, &amp;#39;age&amp;#39;: &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(r&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&lt;/span&gt;.value), &amp;#39;score&amp;#39;: &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(r&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;/span&gt;.value)})\nexcept IOError:\n    pass\n\ntop &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Tk()&lt;/span&gt;\ntop.title(&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩管理&amp;#34;&lt;/span&gt;)\ntop.geometry(&lt;span class=\"hljs-string\"&gt;&amp;#34;400x800&amp;#43;400&amp;#43;50&amp;#34;&lt;/span&gt;)\n\ndef create&lt;span class=\"hljs-constructor\"&gt;Fun()&lt;/span&gt;:\n    addw &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Toplevel(&lt;span class=\"hljs-params\"&gt;top&lt;/span&gt;)&lt;/span&gt;\n    addw.title(&lt;span class=\"hljs-string\"&gt;&amp;#34;添加成绩&amp;#34;&lt;/span&gt;)\n    addw.geometry(&lt;span class=\"hljs-string\"&gt;&amp;#34;200x200&amp;#43;300&amp;#43;300&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;学号&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;年龄&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    sno &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Entry(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;)&lt;/span&gt;\n    sno.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    name &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Entry(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;)&lt;/span&gt;\n    name.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    age &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Entry(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;)&lt;/span&gt;\n    age.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    score &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Entry(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;)&lt;/span&gt;\n    score.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    def c&lt;span class=\"hljs-constructor\"&gt;Fun()&lt;/span&gt;:\n        data.append({&amp;#39;sno&amp;#39;: sno.get&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;, &amp;#39;name&amp;#39;: name.get&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;, &amp;#39;age&amp;#39;: &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(age.get&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;), &amp;#39;score&amp;#39;: &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(score.get&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;)})\n        addw.destroy&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n        upde&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    def q&lt;span class=\"hljs-constructor\"&gt;Fun()&lt;/span&gt;:\n        addw.destroy&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n\n    &lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;确定&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;command&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-params\"&gt;cFun&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;取消&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;command&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-params\"&gt;qFun&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    addw.transient(top)\n    addw.focus&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    addw.grab&lt;span class=\"hljs-constructor\"&gt;_set()&lt;/span&gt;\n    top.wait&lt;span class=\"hljs-constructor\"&gt;_window(&lt;span class=\"hljs-params\"&gt;addw&lt;/span&gt;)&lt;/span&gt;\n\n\ndef quit&lt;span class=\"hljs-constructor\"&gt;Fun()&lt;/span&gt;:\n    top.quit&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n\nbuttbox &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Frame(&lt;span class=\"hljs-params\"&gt;top&lt;/span&gt;)&lt;/span&gt;\nbuttbox.pack( side &amp;#61; TOP, fill &amp;#61; X )\n&lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;buttbox&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;添加&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;command&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-params\"&gt;createFun&lt;/span&gt;)&lt;/span&gt;.pack(side &amp;#61; LEFT)\n&lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;buttbox&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;退出&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;command&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-params\"&gt;quitFun&lt;/span&gt;)&lt;/span&gt;.pack(side &amp;#61; LEFT)\n\nfra &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Frame(&lt;span class=\"hljs-params\"&gt;top&lt;/span&gt;)&lt;/span&gt;\ndef upde&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;:\n    global fra\n    fra.destroy&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    fra &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Frame(&lt;span class=\"hljs-params\"&gt;top&lt;/span&gt;)&lt;/span&gt;\n    fra.pack( side &amp;#61; LEFT, fill &amp;#61; BOTH )\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;学号&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;年龄&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩&amp;#34;&lt;/span&gt;)&lt;/span&gt;.grid(row&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    def del&lt;span class=\"hljs-constructor\"&gt;Fun(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;:\n        del data&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;\n        upde&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(data)):\n        &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-params\"&gt;data&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#34;sno&amp;#34;&lt;/span&gt;])&lt;/span&gt;.grid(row&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-params\"&gt;data&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;])&lt;/span&gt;.grid(row&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-params\"&gt;data&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#34;age&amp;#34;&lt;/span&gt;])&lt;/span&gt;.grid(row&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        &lt;span class=\"hljs-constructor\"&gt;Label(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-params\"&gt;data&lt;/span&gt;[&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#34;score&amp;#34;&lt;/span&gt;])&lt;/span&gt;.grid(row&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        &lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;fra&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;text&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;删除&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;command&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-params\"&gt;lambda&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;: &lt;span class=\"hljs-params\"&gt;delFun&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;).grid(row&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, column&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n\n\nupde&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\ntop.mainloop&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n# 写入文件\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(data)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    wb &amp;#61; openpyxl.&lt;span class=\"hljs-constructor\"&gt;Workbook()&lt;/span&gt;\n    ws&amp;#61;wb.active\n    ws.title &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;成绩单&amp;#34;&lt;/span&gt;\n    ws.append(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(data&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;/span&gt;.keys&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; each &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; data:\n        ws.append(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(each.values&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;))\n    wb.save(r&lt;span class=\"hljs-string\"&gt;&amp;#34;data.xlsx&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "通过例子学习", "Question": ["新入门，想学着用python做个带界面的小工具，主要组报文并生成文件用，求指导应该用哪种接口或者库？", ["工作中测试很多协议，经常需要自己组报文，想做个小工具，带界面，实现封装报文的功能，并生成文件", "举个例子：", "比如一个故障报文共512个字节，有帧头帧尾ID号等等内容，其中200-208字段是故障代码，一共有30种故障类型，我们目前测试，就得自己组全部512个字节的报文，然后查协议文档，查出某种故障类型的代码，更改200-208字段内容，然后再算CRC，最后封装成特定格式的文件上传系统", "\n", "我希望能不能做个界面工具，工具配置文件里存着所有故障代码和报文结构，界面上有输入框，输入我需要的故障类型，工具能自动按格式组全报文，最后生成特定格式的文件。", "本人目前python入门水平，就是知道基本的语法、类、函数等等这些概念，给我一段代码我对着说明文档大概能看懂，但是自己写不出来的水平，求指导我应该用哪种接口做界面，又大概往哪个方向去学习，可以实现我想要的功能？我搜索python自带有个tkinter，可以用吗？"]], "Tag": "程序设计"}
{"Answer": "cas也没什么注册不注册应用的问题\r\n加入cas客户端jar包就等于这个web应用被cas管理起来了，认证就得通过cas", "Konwledge_Point": "通过例子学习", "Question": ["CAS如何实现单点登录", ["网上看到很多cas相关文章，包括一些原理图。学习了下，实现了简单的例子。但有几个问题不明白，请各位指点：", "\n\n", "A、B两个web客户端系统，A系统的用户表为：tuser 用户名：user密码：pswd", "\n   B系统的用户表：t_user 用户名：username 密码: password", "\n   用户在A 、B两个系统的用户名和密码都不相同。", "\n1、请问如何使用cas 实现单点登录？ ", "\n2、如果第一步不能实现，那么两个系统的用户名和密码相同是否能实现？", "\n\n", "本人是菜鸟，望各位帮忙  谢谢", "\n[b]问题补充：[/b]", "\n看了几位前辈的回答，有了很大的收获。但还有一点不明白", "\n      如果casServer有10个客户端应用，是不是客户注册某个应用时，等于同时注册了这10个应用？  如果想用户单独注册各客户端应用，有什么途径可以实现吗？  谢谢 ", "\n[b]问题补充：[/b]", "\nlovewhzlq 这位老师，我可以加你的msn吗？cas许多东西不懂，想向您请教", "\n[b]问题补充：[/b]", "\n谢谢，我先找找"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正常select后应该返回list&amp;#xff0c;这是select的根源码&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/261272055936111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;具体情况可能需要知道你的bs4版本&amp;#xff0c;我的是4.7.1版本的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/622443055936161.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["关于type后bs4对象一些属性出现奇怪问题", ["问题遇到的现象和发生背景", "\n", "跟着书里的例子学习bs4，通过向bs4.beautifulSoup()传递一个File对象后，type（）其类型。发现问题：", "\n", "按照书里讲述，type(exampleSoup)应该得到的是list类，而我返回的是：bs4.element.ResultSet, 请问是书写错了么？", "当我在第二行加入print（exampleFile.read()）后再运行，程序就提示我在type（elems[0]）的list index out of range越界了。这又是怎么回事儿？", "上面两个问题之间有关联么？", "问题相关代码，请勿粘贴截图", "\n", "\n", "exampleFile = open(", "'example.html'", ")\n", "# print(exampleFile.read())", "\nexampleSoup = bs4.BeautifulSoup(exampleFile,", "'html.parser'", ")\n", "print", "(type(exampleSoup))\nelems = exampleSoup.select(", "'#author'", ")\n", "print", "(type(elems)) \n", "print", "(len(elems))\n", "print", "(type(elems[0]))\n", "print", "(elems[0].getText()）\n", "print", "(str(elems[0]))\n", "print", "(elems[0].attrs)\n", "\n", "运行结果及报错内容", "\n", "问题1. 第二行返回类型不是书中说的list", "\n", "<", "class", " ", "'bs4.BeautifulSoup'", ">\n<", "class", " ", "'bs4.element.ResultSet'", ">\n", "1", "\n<", "class", " ", "'bs4.element.Tag'", ">\nSong Wei\n<span id=", "\"author\"", ">Song Wei</span>\n{", "'id'", ": ", "'author'", "}\n[Finished ", "in", " ", "327", "ms]\n\n", "\n", "问题2. 加入print（exampleFile.read()）后，程序报了list越界错", "\n", "<", "html", ">", "\n", "<", "head", ">", "<", "title", ">", "The Website Title", "</", "title", ">", "</", "head", ">", "\n", "<", "body", ">", "\n", "<", "p", ">", "Download my ", "<", "strong", ">", "Python", "</", "strong", ">", " book from ", "<", "a", " ", "href", "=", "\"http://www.baidu.com\"", ">", "my site", "</", "a", ">", ".", "</", "p", ">", "\n", "<", "p", " ", "class", "=", "\"slogan\"", ">", "Learn python the easy way!", "</", "p", ">", "\n", "<", "p", ">", "By ", "<", "span", " ", "id", "=", "\"author\"", ">", "Song Wei", "</", "span", ">", "</", "p", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "Traceback (most recent call", " last", "):\n\n<class ", "'bs4.BeautifulSoup'", ">\n<class ", "'bs4.element.ResultSet'", ">\n", "0", "\n  File ", "\"D:\\chwlsw\\py-test\\chapter11_web\\mapIt.py\"", ", line ", "38", ", ", "in", " ", "<", "module", ">", "\n    print(type(elems[0]))\nIndexError: list index out of range\n[Finished in 301ms]\n\n", "\n", "\n", "我想要达到的结果", "\n", "请帮忙勘误，感谢！"]], "Tag": "程序设计"}
{"Answer": "都是从程序员开始的,如果你能一直努力去学习各种编程思想,包括钻研源码,越努力越早达到你的目标.至于什么程度,多学多练,尤其是在公司练,现在别想太多一步一步的,如果不是混工资,肯定能达到你的目标.", "Konwledge_Point": "通过例子学习", "Question": ["现阶段怎么提高java技术？", ["自学java快一年半了，（由于我读到专科比较垃圾，没有java课程）最初的javaSE到现在的javaEE，从servlet到struts，hibernate， spring，dwr，从最初的javascript到ajax，这些技术不敢说精通，但部分能够理解，能熟练运用。期间做了一些小东西，不完整的，可是我老是感觉自己的水平停留在crud上，那我宿舍的一个同学来说，他没有vb基础，就看了一个简单的例子就做出了asp网站，而我学习javaEE开发是从09年开始的，其中学框架占用的时间有点多，到现在才正儿八经做了一个完整的oa项目，比较有难度的。和一个完整的个人网站。看到别人很快就有了成绩，不知道是不是asp很简单，而我却花费了大量的时间学到的东西也不就是那样，好自卑，没有成就感。", "\n\n", "而现在也快毕业了，陕西这块软件据我了解月薪很少，程序员不到2500，程序员就是民工，等等种种软件行业的负面消息严重的打击了我对java的热爱和软件开发的激情，现在也很渺茫。\n", "\n\n", "请问大家，到底该怎么提高水平，怎么样才能在java领域有所作为？作出成绩？赚到钱？谢谢。"]], "Tag": "程序设计"}
{"Answer": "这个的确要根据你的数据决定。决策树没有非线性化，支持向量机、逻辑回归需要你有特征，神经网络效果更好，但是要有足够的样本。没有什么绝对的选择。", "Konwledge_Point": "通过例子学习", "Question": ["关于模型选择的疑问？", ["正常情况下，手头拿到一定的数据，一般如何判断采取何种模型进行建模处理呢？", "\n举个例子，分类型模型会可能采用逻辑回归，支持向量机、决策树等模型，那如何进行判定采用哪种模型建模？还是说全部建模下，进行相应的评估？"]], "Tag": "程序设计"}
{"Answer": "[quote]如有具体解决办法请给出个例子那会更好! [/quote]\r\n :idea:", "Konwledge_Point": "通过例子学习", "Question": ["关于EXT的Panel值autoLoad配置项的问题?", ["学习EXT过程中遇到个问题,急需解决,忙了一天了,都没找到方法!", "简单描述下我的情况:", "\n\n", "     Viewport左边是accordion布局的两个panel,第一个panel是个tree", "\n\n", "     Viewport右边是一个id为content-panel的panel用于显示tree的页面", "\n\n", "     contentpanel的item配置项里放着若干panel(这些panel是通过autoLoad加载其它页面进来的,并且这些页面都有js文件)", "\n\n", " ", "\n\n", "     说道这儿相信大家知道我的问题了:", "\n\n", " ", "\n\n", " 写道", "\n\n", "tree.on('click',function(node){", "      if(node.leaf){", "          Ext.getCmp('content-panel').layout.setActiveItem(node.id + '-panel');", "       }", "     });", "\n\n", "    这边firebug回报错:", "\n\n", "                               Ext.getCmp('content-panel')未定义", "\n\n", "    当然要说明的是autoLoad加载html和js正常了,在firebug可以看出了,eclipse终端也看的出来,", "\n\n", "    我觉得是当加载完另一个js后,在那个js里找id为content-panel的panel那自然是找不到的,所以肯定会报错,请朋友帮我解决这个问题,真的很急切,谢谢...........", "问题补充：", "longterm朋友都说js加载正常了,你的建议首先就没看完我的问题", "yourgame朋友你理解错了,简单说就是id为content-panel的panel是在Viewport所在主要js文件中,", "而autoload加载的几个html,其各个js中定义的panel名放在id为content-panel的panel的item配置项中而已,其实终端看出加载都正常了,但是由于报了个错误导致整个页面无法显示", "如有具体解决办法请给出个例子那会更好!", "问题补充：", "longterm朋友都说js加载正常了,你的建议首先就没看完我的问题", "yourgame朋友你理解错了,简单说就是id为content-panel的panel是在Viewport所在主要js文件中,", "而autoload加载的几个html,其各个js中定义的panel名放在id为content-panel的panel的item配置项中而已,其实终端看出加载都正常了,但是由于报了个错误导致整个页面无法显示", "如有具体解决办法请给出个例子那会更好!", "问题补充：", "longterm朋友都说js加载正常了,你的建议首先就没看完我的问题", "yourgame朋友你理解错了,简单说就是id为content-panel的panel是在Viewport所在主要js文件中,", "而autoload加载的几个html,其各个js中定义的panel名放在id为content-panel的panel的item配置项中而已,其实终端看出加载都正常了,但是由于报了个错误导致整个页面无法显示", "如有具体解决办法请给出个例子那会更好!"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;类的属性不是必须&amp;#xff0c;类的属性是为了方便类中的所有方法调用&amp;#xff0c;类似全局变量&lt;/li&gt;&lt;li&gt;类的方法本质就是函数&amp;#xff0c;只不过多了一个入参&amp;#xff0c;self&lt;/li&gt;&lt;li&gt;self指的是类本身&amp;#xff0c;self.score是调用类属性&amp;#xff0c;所以要用self.来调用&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Python的疑难杂症", ["\n", "class", " ", "GuessSentenceGame", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        self.kv = KeyValueSet()\n        self.score = ", "0", "\n\n    ", "def", " ", "setup", "(", "self, sentences", "):\n        ", "# TODO(You): 请在此编写装载逻辑", "\n    \n    ", "def", " ", "guess", "(", "self, first_word", "):\n        ", "# TODO(You): 请在此编写猜测结果，返回 err, value", "\n    \n    ", "def", " ", "run", "(", "self", "):\n        self.score = ", "0", "\n        ", "for", " first_word ", "in", " self.kv.keys():\n            ret = ", "input", "(", "\"猜一猜下半句是什么？ {} -> :\"", ".", "format", "(first_word))\n            err, value = self.guess(first_word)\n            ", "if", " err==", "0", ":\n                ", "print", "(", "'你太厉害了，这都能猜得到！+10分！'", ")\n                self.score += ", "10", "\n            ", "else", ":\n                self.score -= ", "2", "\n                ", "print", "(", "'哈哈，肯定猜不到得啦：{}->{}，扣除2分！'", ".", "format", "(first_word, value))\n        ", "print", "(", "'游戏结束，你本次游戏得分：'", ", self.score)\n\n", "if", " __name__ == ", "'__main__'", ":\n\n    sentences = [\n        ", "\"hello world\"", ",\n        ", "'monkey king'", ",\n        ", "'tomorrow is another day'", ",\n        ", "\"good bye\"", "\n    ]\n\n    game = GuessSentenceGame()\n    game.setup(sentences)\n    game.run()\n", "'''\n一个示例输出是：\n\n猜一猜下半句是什么？ hello -> :world\n你太厉害了，这都能猜得到！+10分！\n猜一猜下半句是什么？ monkey -> :king\n你太厉害了，这都能猜得到！+10分！\n猜一猜下半句是什么？ tomorrow -> :is another day\n你太厉害了，这都能猜得到！+10分！\n猜一猜下半句是什么？ good -> :a\n哈哈，肯定猜不到得啦：good->bye，扣除2分！\n游戏结束，你本次游戏得分： 28\n'''", "\n", "\n", "上面是我学习“类”的一个例子，有几点不懂：", "1.类的属性不是必须的？（这个例子中就没有）或类的属性是用来干嘛的？", "2.类的方法就是函数？", "3. def ", "init", "(self):", "        self.kv = KeyValueSet()", "        self.score = 0", "self.kv中的小点是干嘛的？"]], "Tag": "程序设计"}
{"Answer": "this 不是指向createSingleLoginLayer的，指向window .其实这里的this没有用。\r\n之所以用fn.apply(this,arguments)而不用fn()，是因为要传参数，而且参数的个数不固定。", "Konwledge_Point": "通过例子学习", "Question": ["单例模式中 fn.apply(this,arguments) 问题", ["最近再学习 javascript 设计模式 ", "\n第一个 单例模式中 有个例子 如下：", "\n\n", " <body>\n<button id=\"loginBtn\">登录</button>\n<script type=\"text/javascript\">\n    var createLoginLayer = function(){\n        var div = document.createElement(\"div\");\n        div.innerHTML = '我是登录浮窗';\n        div.style.display = 'none';\n        document.body.appendChild(div);\n        return div;\n    };\n\n    var getSingle = function(fn){\n        var result;\n        return function(){\n            return result || (result = fn.apply(this,arguments));\n        }\n    };\n\n    var createSingleLoginLayer = getSingle(createLoginLayer);\n    document.getElementById('loginBtn').onclick = function(){\n        var loginLayer = createSingleLoginLayer();\n        loginLayer.style.display = 'block';\n    };\n</script>\n</body>\n", "\n\n", "实现是  需要登录框时 点击登录时 只出现一个登录框 其中", "\n\n", "  var getSingle = function(fn){\n        var result;\n        return function(){\n            return result || (result = fn.apply(this,arguments));\n        }\n    };\n", "\n\n", "这段代码中fn.apply(this,arguments) 不知道怎么理解 用断点查看 其中的this指向window 但是我用fn();替换也是可以的 不知道fn.apply(this,arguments)这段代码怎么理解 我知道apply() 这个第一个参数是绑定上下文用的， 是否当createSingleLoginLayer()被调用时this是否指向createSingleLoginLayer本身  请解答下\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;按字典和列表的key和下标取值既可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;d &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;room_display_id&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;21409771&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;room_real_id&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;21409771&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;DANMU_MSG&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;: {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;cmd&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;DANMU_MSG&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;: [[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;16777215&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1659962555600&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;124775867&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;178d1d3f&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;, {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;mode&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;show_player_type&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;{&amp;#34;&lt;/span&gt;send_from_me&lt;span class=\"hljs-string\"&gt;&amp;#34;:false,&amp;#34;&lt;/span&gt;mode&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;color&lt;span class=\"hljs-string\"&gt;&amp;#34;:16777215,&amp;#34;&lt;/span&gt;dm_type&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;font_size&lt;span class=\"hljs-string\"&gt;&amp;#34;:25,&amp;#34;&lt;/span&gt;player_mode&lt;span class=\"hljs-string\"&gt;&amp;#34;:1,&amp;#34;&lt;/span&gt;show_player_type&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;content&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;cddrjgtfj&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;user_hash&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;395124031&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;emoticon_unique&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;bulge_display&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;recommend_score&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;main_state_dm_color&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;objective_state_dm_color&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;direction&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;pk_direction&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;quartet_direction&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;anniversary_crowd&lt;span class=\"hljs-string\"&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;yeah_space_type&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;yeah_space_url&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;jump_to_url&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;space_type&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;space_url&lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;}&amp;#39;&lt;/span&gt;}, {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;activity_identity&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;activity_source&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;not_show&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;}], &lt;span class=\"hljs-string\"&gt;&amp;#39;测试123ceshi&amp;#39;&lt;/span&gt;, [&lt;span class=\"hljs-number\"&gt;291426330&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;残存の影子&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;旅行&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;地球频道&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9196015&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12478086&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12478086&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12478086&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12478086&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;290515513&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9868950&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;gt;50000&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], [&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;], &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None, {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;ts&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1659962555&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;ct&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;CB0A8807&amp;#39;&lt;/span&gt;}, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None, None, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;210&lt;/span&gt;]}}\nprint(d[&lt;span class=\"hljs-string\"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\nprint(d[&lt;span class=\"hljs-string\"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "通过例子学习", "Question": ["请问Python如何提取含有特殊字符的字符串", ["\n{", "'room_display_id'", ": ", "21409771", ", ", "'room_real_id'", ": ", "21409771", ", ", "'type'", ": ", "'DANMU_MSG'", ", ", "'data'", ": {", "'cmd'", ": ", "'DANMU_MSG'", ", ", "'info'", ": [[", "0", ", ", "1", ", ", "25", ", ", "16777215", ", ", "1659962555600", ", ", "124775867", ", ", "0", ", ", "'178d1d3f'", ", ", "0", ", ", "0", ", ", "0", ", ", "''", ", ", "0", ", ", "'{}'", ", ", "'{}'", ", {", "'mode'", ": ", "0", ", ", "'show_player_type'", ": ", "0", ", ", "'extra'", ": ", "'{\"", "send_from_me", "\":false,\"", "mode", "\":0,\"", "color", "\":16777215,\"", "dm_type", "\":0,\"", "font_size", "\":25,\"", "player_mode", "\":1,\"", "show_player_type", "\":0,\"", "content", "\":\"", "cddrjgtfj", "\",\"", "user_hash", "\":\"", "395124031", "\",\"", "emoticon_unique", "\":\"", "\",\"", "bulge_display", "\":0,\"", "recommend_score", "\":0,\"", "main_state_dm_color", "\":\"", "\",\"", "objective_state_dm_color", "\":\"", "\",\"", "direction", "\":0,\"", "pk_direction", "\":0,\"", "quartet_direction", "\":0,\"", "anniversary_crowd", "\":0,\"", "yeah_space_type", "\":\"", "\",\"", "yeah_space_url", "\":\"", "\",\"", "jump_to_url", "\":\"", "\",\"", "space_type", "\":\"", "\",\"", "space_url", "\":\"", "\"}'", "}, {", "'activity_identity'", ": ", "''", ", ", "'activity_source'", ": ", "0", ", ", "'not_show'", ": ", "0", "}], ", "'测试123ceshi'", ", [", "291426330", ", ", "'残存の影子'", ", ", "0", ", ", "0", ", ", "0", ", ", "10000", ", ", "1", ", ", "''", "], [", "15", ", ", "'旅行'", ", ", "'地球频道'", ", ", "9196015", ", ", "12478086", ", ", "''", ", ", "0", ", ", "12478086", ", ", "12478086", ", ", "12478086", ", ", "0", ", ", "1", ", ", "290515513", "], [", "10", ", ", "0", ", ", "9868950", ", ", "'>50000'", ", ", "1", "], [", "''", ", ", "''", "], ", "0", ", ", "0", ", None, {", "'ts'", ": ", "1659962555", ", ", "'ct'", ": ", "'CB0A8807'", "}, ", "0", ", ", "0", ", None, None, ", "0", ", ", "210", "]}}\n", "\n", "举个例子。上面那一串是我网站上爬到的内容。(看回答说是字典什么的，没学习过，不懂)现在我需要print以下内容:", "残存の影子说:测试123ceshi", "我网上找了很多个方法，都不能应对里面的特殊字符。各种报错。回答我的问题之前，可以先把我例子里面的字符串拿去试试看能不能正确print。"]], "Tag": "程序设计"}
{"Answer": "http://bbs.csdn.net/topics/390961976", "Konwledge_Point": "通过例子学习", "Question": ["在Qt运行HelloQtonAndroid出现[install_target]Error 1错误", ["我是QT菜鸟，卖了本版主的QT ON ANDROID核心编程想进行学习开发，我按照书本上所写配置好了环境，并按照要求写好了第一个例子，Hello Qt on Android，然后运行，结果在构建处出现了错误，问题显示为[install__target]Error 1，", "\n\n", "其编译输出相关文档如下：", "\n15:55:40: 进程\"C:\\Qt5.5.0\\Tools\\mingw492_32\\bin\\mingw32-make.exe\"正常退出。", "\n15:55:40: 正在启动 \"C:\\Qt5.5.0\\Tools\\mingw492_32\\bin\\mingw32-make.exe\" INSTALL_ROOT=\"E:\\QT Programming\\build-helloqtonandroid-Android_for_armeabi_GCC_4_9_Qt_5_5_0-Release\\android-build\" install", "\n\n", "The system cannot find the path specified.", "\nThe system cannot find the path specified.", "\nmakefile:1627: recipe for target 'install_target' failed", "\nmingw32-make: *** [install_target] Error 1", "\n15:55:40: 进程\"C:\\Qt5.5.0\\Tools\\mingw492_32\\bin\\mingw32-make.exe\"退出，退出代码 2 。", "\nError while building/deploying project helloqtonandroid (kit: Android for armeabi (GCC 4.9, Qt 5.5.0))", "\nWhen executing step \"Copy application data\"", "\n15:55:40: Elapsed time: 00:04.", "\n\n", "新手初来乍到，一点币也没有，希望高手们能够解答。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哎呀不好意识&amp;#xff0c;占用大家时间了&amp;#xff0c;问题已经搞明白了。&lt;br /&gt;1&amp;#xff1a;我自己的代码中&amp;#xff0c;把actions: [&amp;#39;updateNum1&amp;#39;]写成了action&amp;#xff0c;少了一个“s”&amp;#xff0c;导致.js中使用时报错&amp;#xff1a;updateNum1 is not a function。&lt;br /&gt;2&amp;#xff1a;对fields: [&amp;#39;num1&amp;#39;, &amp;#39;num2&amp;#39;, &amp;#39;sum&amp;#39;]中的对象&amp;#xff0c;赋值后在wxml页面中使用{&lt;!-- --&gt;{num1}}正常使用。在.js中如何使用呢&amp;#xff0c;我想了个办法&amp;#xff0c;在store中再写一个actions&amp;#xff0c;把值返回来&amp;#xff1a;return this.num1&amp;#xff0c;然后在.js中调用该函数&amp;#xff0c;就拿到了num1的值。&lt;br /&gt;特此留言。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["小程序全局数据共享，如何调用共享的字段和方法？", ["在刚开始学习全局数据共享时，就有一个疑问，今天一实践果然还是有问题：在store.js中定义了字段和方法，在页面中使用时不识别，字段是“not defined”，方法是“not a function”。", "\n", "\n", "import", " { createStoreBindings } ", "from", " ", "'mobx-miniprogram-bindings'", "\n", "import", " { store } ", "from", " ", "'../../store/store'", "\n\n", "Page", "({\n\n    ", "data", ": {\n\n    },\n    ", "onLoad", ": ", "function", " (", "options", ") {\n        ", "this", ".", "storeBindings", " = ", "createStoreBindings", "(", "this", ", {\n        store,\n        ", "fields", ": [", "'num1'", ", ", "'num2'", ", ", "'sum'", "],\n        ", "actions", ": [", "'updateNum1'", "]\n        })\n    },\n\n    ", "btnHandler1", "(", "e", ") {\n\n        ", "this", ".", "updateNum1", "(e.", "target", ".", "dataset", ".", "step", ")\n    },\n\n    ", "onUnload", ": ", "function", " (", ") {\n        ", "this", ".", "storeBindings", ".", "detroyStoreBindings", "()\n    }\n})\n\n", "\n", "就比如以上的代码，最常见的例子。在页面onLoad()中的 this.storeBindings中，引用了actions: ['updateNum1']，但是这个updateNum1并没有声明啊，在下面的 btnHandler1(e)怎么能直接引用呢？反正我的不出意外报错“updateNum1 is not a function”。不仅在onLoad()之外我的报错，在onLoad() 之内也报错，因为它在createStoreBindings(this, {}中的呀。", "\n", "不仅如此，字段也是一样，fields: ['num1', 'num2', 'sum']这三个字段全部报错：“…is not defined”", "\n", "谁知道如何解决？"]], "Tag": "程序设计"}
{"Answer": "知道原因了   要把  classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'   这句放到项目的build.gradle  而不是module的build.gradle   \r\n\r\n基于  Android studio", "Konwledge_Point": "通过例子学习", "Question": ["dagger2编译失败问题 无法运行", ["正在学习dagger2  ，但是写好一个例子，运行时 失败   请问是什么原因？？？", "\n\n", "报的异常如下：", "\n\n", "Error:Execution failed for task ':app:transformClassesWithDexForDebug'.", "\n\n", "\n", "com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command 'C:\\Program Files\\Java\\jdk1.7.0_79\\bin\\java.exe'' finished with non-zero exit value 3", "\nbuild.gradle的配置如下 ：", "\n", "\n\n", "apply plugin: 'com.android.application' apply plugin: 'com.neenbedankt.android-apt'  android {", "\n    compileSdkVersion 23  buildToolsVersion \"23.0.3\"   defaultConfig { applicationId \"com.example.app.simpledagger\"  minSdkVersion 15  targetSdkVersion 23  versionCode 1  versionName \"1.0\"  multiDexEnabled true  }", "\n    buildTypes {", "\n        release { minifyEnabled false  proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'  }", "\n    }", "\n}", "\nbuildscript {", "\n    repositories {", "\n        jcenter()", "\n    }", "\n    dependencies {", "\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'  }", "\n}", "\n\n", "dependencies {", "\n    compile fileTree(dir: 'libs', include: ['*.jar'])", "\n    testCompile 'junit:junit:4.12' //    compile 'com.android.support:appcompat-v7:23.4.0'  compile 'com.google.dagger:dagger:2.5'  compile 'com.google.dagger:dagger-compiler:2.5'  provided 'org.glassfish:javax.annotation:10.0-b28' }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;若依框架中这个POI可以看看&amp;#xff0c;应该可以满足你说的通用导出&amp;#xff0c;只需要加个注解就好&amp;#xff0c;代码网上就有&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"733\" src=\"https://img-ask.csdnimg.cn/upload/1615339045246.png\" width=\"1224\" /&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["使用poi进行excel导入导出纠结了", ["最近在使用poi做一个excel导入导出的功能，也看了不少例子，但是发现都是基于一张表进行的处理，也就是excel的导入导出操作的工具类或者是接口中都有导出后表头标题的定义，例如，数据库里有一列叫Name，在工具类中使用了setCellValue(\"名字\")直接给定了导出列的标题，这样的话万一我有好多张表都需要做excel的导入导出操作的话，岂不是每个表都要建立一个工具类了，大家有没有比较好的方法能够做一个通用工具类或者接口，或者是说有看到过这样写的文章，分享学习一下", "\n\n", "\n// 创建第一行\nXSSFRow row1 = sheet.createRow(0);\n// 创建第一行第一列\nXSSFCell row1Cell1 = row1.createCell(0);\nrow1Cell1.setCellValue(\"基本信息\");\nrow1Cell1.setCellStyle(titleStyle);\n\n// 创建第一行第二列\nXSSFCell row1Cell2 = row1.createCell(3);\nrow1Cell2.setCellValue(\"证件信息\");\nrow1Cell2.setCellStyle(titleStyle);\n"]], "Tag": "程序设计"}
{"Answer": "问题1 ，NGINX 将缓存放在proxy_cache 文件中\r\n\r\n  proxy_cache_path /se/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=3g;\r\n\r\nNGINX更依靠ETAG/Cache-Control/Expires/Last-Modified 这样的HTTP head 来控制 缓存的生命期\r\n\r\n问题2：\r\n\r\nexpires    30d;  是告诉浏览器，三十天内不用再来获取资源\r\n\r\n问题3：这个CACHE 是浏览器内部的cache。\r\n\r\n问题4：\r\n    CMS 将 动态内容用文件保存下来，是在没有外部缓存的情况下的做法。\r\n    NGINX 的缓存 控制太复杂，客户端可以强制透过缓存获取内容，给网络带来不安全因素。我现在就吧访问量大的页面，比如首页静态化，极大地提高了抗压能力。 \r\n\r\n\r\nnginx完全可以做做代理、web缓存、做负载均衡，我现在就是 NGINX + RESIN 直接使用。\r\n估计原来是APACHE+RESIN，APACHE做静态文件访问用。增加NGINX 只做了负载均衡。\r\n也算是对原有结构改变较小的方案。", "Konwledge_Point": "通过例子学习", "Question": ["web缓存的疑问，请大家帮忙", ["最近在学习nginx，很多问题不明白，请教各位大鸟们帮忙解答！！！", "\n问题1 使用nginx做web缓存，举个例子：将响应的html缓存到内存里，下次相同的URL访问的时候，nginx服务器判断缓存中是否存在以及是否过期失效，如果存在不失效就返回此html。我的理解正确吗？是一定要保存到内存里吗？", "\n过期时间在nginx里配置，会不会与html页面里的meta缓存设置冲突呢？", "\n\n", "问题2：有段nginx的配置如下,不知道是什么意思", "\nserver{", "\n....", "\n\n", "location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$", "\n{", "\n   expires    30d;", "\n}", "\n\n", "}", "\n它的意思将这些访问的资源缓存到nginx里吗？30天有效期？", "\n\n", "问题3：我用httpwatch查看", "\n如图：", "\n[img]", "http://dl.iteye.com/upload/attachment/468976/0797e032-4c3a-3a03-87b1-6851203baecc.jpg[/img]", "\n这个图片的result是Cache，是不是说明图片也缓存到nginx服务器里呢？", "\n一般做web缓存，图片、js、css也放入缓存中呢？", "\n\n", "问题4 一般网站有CMS生成html放到nginx服务器html目录下（我自己猜想的），这个与nginx缓存html没有关系吧？", "\n\n", "我没做过大型网站，对此很多没有经验，希望大鸟们能踊跃发言！", "\n某网站是 nginx+apache+resin，有经验的大鸟们，知道它们的任务是什么吗？我个人猜想是nginx做方向代理与web缓存，apache做负载均衡，不知道对不对，。。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1&amp;#xff09;类实例名称申明时&amp;#xff0c;可以用父类&amp;#xff08;或者继承了某个接口的接口名称&amp;#xff09;申明实例名&amp;#xff0c;实例化的类可以为子类或者父类名称。但是需要注意父类申明实例名&amp;#xff0c;实例化子类时&amp;#xff0c;只能调用父类有的方法和属性&amp;#xff0c;无法调用子类新增的其他方法。需要强制转化为子类后才能调用到子类方法。具体可以参考&amp;#xff1a;&lt;a id=\"textarea_1631783682626_1631783732135_0\" target=\"_blank\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;(原创)关于继承实例化的说明(c#) - 程序园&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;对于继承实例化的四种情况实际开发中遇到的挺多的,其中父类声明子类实现的情况,比如说Father f&amp;#61;new Sun();这种情况得到的到底是父类的实例还是子类的实例呢. 先看下面这个例子: 三个类,一个父类,一个子类,一个包含Main()函数的测试类; 1.父类: using System; namespace TestInherit {  /// &lt;summary&gt;  /// Father 的摘\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;http://www.voidcn.com/article/p-rlbepofn-eg.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/summary&gt;&lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;2&amp;#xff09;题主看的文章最后有总结&amp;#xff0c;new和override主要区别是当用父类申明变量&amp;#xff0c;但是实例化子类的时&amp;#xff0c;new调用子类方法&amp;#xff0c;而override调用父类的方法&lt;/p&gt;\n&lt;p&gt;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["C#中override和new重新方法的区别，以及实例化对象的原理是什么？", ["刚学习C#不久，今天学到面向对象，继承中new可以重新父类方法，然后又看到多态中override也可以重新父类方法。", "觉得很好奇，为什么有两种重新父类方法的途径。", "在网上找到有人介绍这两种方式的区别博客，举例代码如下", "\n", "\npublic ", "class", " C1\n{\n     public ", "virtual", " ", "string", " ", "GetName()", "   \n        {\n            return ", "\"叔祥\"", ";    \n        }\n}\n\npublic ", "class", " C2:C1\n{    \n     public override ", "string", " ", "GetName()", " \n        {        \n            return ", "\"xiangshu\"", ";    \n        }\n} \n\nC1 c1 = ", "new", " ", "C1()", "; \nConsole.", "WriteLine(", "c1", ".GetName()", ");", "//输出“祥叔” ", "\nC2 c2 = ", "new", " ", "C2()", "; \nConsole.", "WriteLine(", "c2", ".GetName()", ");", "//输出“xiangshu”", "\n\n ", "//重点看这里", "\n\nC1 c3 = ", "new", " ", "C2()", "; \nConsole.", "WriteLine(", "c3", ".GetName()", ");", "//输出“xiangshu” ", "\n\n", "\n", "这位博主说，如果把代码中的override更换成new，最后输出的就变成“祥叔”。", "\n", "这里我就有两个疑问，", "\n", "1.首先是搞不懂实例化对象的原理，以前只知道实例化的方法是： 原类名 新类名 = new 原类名();   这位博主所举的例子两个原类名竟然是不一样的。实例化对象的原理是什么，实例化时的这个等式的各个参数到底是什么意思？", "\n", "2.就是我原始的疑问：C#中类继承后override和new重新方法的区别是什么？", "\n", "望解答，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;可以检查一下 c:/opencv/wechat_qrcode/ 目录下是否存在 detect.prototxt&amp;#xff0c;detect.caffemodel&amp;#xff0c;sr.prototxt&amp;#xff0c;sr.caffemodel 这四个文件。如果没有这些文件&amp;#xff0c;则可能导致出现这个错误。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;在 Windows 系统中&amp;#xff0c;路径分隔符使用的是反斜杠 &amp;#39;&amp;#39;&amp;#xff0c;而不是斜杠 &amp;#39;/&amp;#39;。可以把代码中的斜杠全部改为反斜杠&amp;#xff0c;然后重新编译。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;将&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;const std::string detect_prototxt &amp;#61; &amp;#34;c:/opencv/wechat_qrcode/detect.prototxt&amp;#34;;&lt;/p&gt;\n&lt;p&gt;改为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;const std::string detect_prototxt &amp;#61; &amp;#34;c:\\opencv\\wechat_qrcode\\detect.prototxt&amp;#34;;&lt;/p&gt;\n&lt;p&gt;如果问题仍然存在&amp;#xff0c;还可以尝试检查一下项目中是否包含 opencv_wechat_qrcode 这个库&amp;#xff0c;或者检查一下这个库是否在系统中正确安装。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Qt使用wechat_qrcode，编译报错！", ["最近学习opencv，看见扩展库里有wechat_qrcode一项，忍不住想试一下。", "\n", "参照网上的例子，编写如下代码，但是报错，不知道错在哪里，百思不得解。", "\n", "#", "include", " ", "\"widget.h\"", "\n", "#", "include", " ", "\"ui_widget.h\"", "\n\n", "#", "include", " ", "<iostream>", "\n\n", "#", "include", " ", "<opencv2/core.hpp>", "\n", "#", "include", " ", "<opencv2/opencv.hpp>", "\n", "#", "include", " ", "<opencv2/highgui.hpp>", "\n", "#", "include", " ", "<opencv2/imgproc.hpp>", "\n\n", "#", "include", " ", "<opencv2/wechat_qrcode.hpp>", "\n\n", "using", " ", "namespace", " std;\n", "using", " ", "namespace", " cv;\n\nWidget::", "Widget", "(QWidget *parent)\n    : ", "QWidget", "(parent)\n    , ", "ui", "(", "new", " Ui::Widget)\n{\n    ui->", "setupUi", "(", "this", ");\n\n    Ptr<wechat_qrcode::WeChatQRCode> detector;\n\n    ", "const", " std::string detect_prototxt = ", "\"c:/opencv/wechat_qrcode/detect.prototxt\"", ";\n    ", "const", " std::string detect_caffe_model = ", "\"c:/opencv/wechat_qrcode/detect.caffemodel\"", ";\n    ", "const", " std::string sr_prototxt = ", "\"c:/opencv/wechat_qrcode/sr.prototxt\"", ";\n    ", "const", " std::string sr_caffe_model = ", "\"c:/opencv/wechat_qrcode/sr.caffemodel\"", ";\n\n    detector = ", "makePtr", "<wechat_qrcode::WeChatQRCode>(detect_prototxt, detect_caffe_model,sr_prototxt, sr_caffe_model);\n\n\n\n}\n\nWidget::~", "Widget", "()\n{\n    ", "delete", " ui;\n}\n\n", "\n", "运行结果及详细报错内容：", "C:\\Qt\\Qt5.12.10\\Tools\\mingw730_64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\ext\\new_allocator.h:136: error: undefined reference to `cv::wechat_qrcode::WeChatQRCode::WeChatQRCode(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&, std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&)'"]], "Tag": "程序设计"}
{"Answer": "说的很清楚，在项目属性-调试-运行模式中修改为IronPython解释器，现在是用的CPython\r\n如果你没有装IronPython，那么先从codeplex下载ironpython。", "Konwledge_Point": "通过例子学习", "Question": ["Python在Visual Studio2013编译出错", ["环境描述：", "\nPython 3.4", "\nVisual Studio 2013", "\nPTVS 2.1", "\n\n", "想开发一个桌机小程序，作为自己使用python的第一个学习例子，", "\n工程文件：", "\n    myWpfApplication1.py", "\n    myWpfApplication1.xaml", "\n\n", "已将python3.4添加到了Python enviorments中去，", "\n但是在启动调试时，出现了以下错误提示：", "\n\n", "我是刚入门学习，则进入社区还没有C币悬赏，请见谅，", "\n\n", "请各位大牛不吝指教~~", "\n\n", "附代码", "\n    myWpfApplication1.xaml", "\n\n", " <Window \n       xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n       xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" \n       Title=\"myWpfApplication1\" Height=\"300\" Width=\"300\"> \n       <Grid>\n        <Button x:Name=\"OkButton\" Content=\"OK\" HorizontalAlignment=\"Left\" Height=\"30\" Margin=\"26,204,0,0\" VerticalAlignment=\"Top\" Width=\"99\" Click=\"OkButton_Click\"/>\n        <Button x:Name=\"CancelButton\" Content=\"CancelButton\" HorizontalAlignment=\"Left\" Height=\"32\" Margin=\"157,204,0,0\" VerticalAlignment=\"Top\" Width=\"112\" Click=\"Button_Click\"/>\n        <Label Content=\"Input your Words\" HorizontalAlignment=\"Left\" Height=\"27\" Margin=\"65,10,0,0\" VerticalAlignment=\"Top\" Width=\"126\"/>\n        <Label Content=\"You Have Input\" HorizontalAlignment=\"Left\" Height=\"37\" Margin=\"65,98,0,0\" VerticalAlignment=\"Top\" Width=\"75\"/>\n        <TextBox HorizontalAlignment=\"Left\" Height=\"51\" Margin=\"65,42,0,0\" TextWrapping=\"Wrap\" Text=\"TextBox\" VerticalAlignment=\"Top\" Width=\"152\"/>\n        <TextBox HorizontalAlignment=\"Left\" Height=\"45\" Margin=\"65,140,0,0\" TextWrapping=\"Wrap\" Text=\"TextBox\" VerticalAlignment=\"Top\" Width=\"152\"/>\n    </Grid>\n</Window> \n", "\n\n", "myWpfApplication1.py\n", "\n\n", " import wpf\n\nfrom System.Windows import Application, Window\n\nclass MyWindow(Window):\n    def __init__(self):\n        wpf.LoadComponent(self, 'myWpfApplication1.xaml')\n\n    def OkButton_Click(self, sender, e):\n        textInput=self.InputText\n        textOutput=self.OutputText\n        textOutput.Text=textInput.Text\n\n\n    def CancelButton_Click(self, sender, e):\n        textInput=self.InputText\n        textOutput=self.OutputText\n        textInput.Text=''\n        textOutput.Text=''\n\n\nif __name__ == '__main__':\n    Application().Run(MyWindow())\n\n"]], "Tag": "程序设计"}
{"Answer": "你的线程是并发执行，第一个线程还没有对类加写锁，其他线程已经又对该类C加了读锁，导致前面的写锁阻塞。 \r\n直到最后一个线程释放了读锁，3个线程才开始去竞争写锁。 \r\n添加提示信息和消息如下：\r\n![图片说明](https://img-ask.csdn.net/upload/201610/02/1475390852_770011.jpg)", "Konwledge_Point": "通过例子学习", "Question": ["java ReadWriteLock的疑问", ["大神们，最近在学习并发的ReadWriteLock锁不明白一个地方。。。以下的代码是网上得到的，是描述ReadWriteLock很经典的一个例子，测试函数是我自己写的。", "\n我想问的是，为什么还是没锁住执行数据库那边，他还是执行了3次。。。按道理来说不应该只执行一次才能达到这个实验的目的吗？究竟是哪里的问题", "\n\n", "import java.util.HashMap;", "\nimport java.util.Map;", "\nimport java.util.concurrent.locks.ReadWriteLock;", "\nimport java.util.concurrent.locks.ReentrantReadWriteLock;", "\n\n", "public class CacheDemo {", "\n    private Map map = new HashMap();// 缓存器", "\n    private ReadWriteLock rwl = new ReentrantReadWriteLock();", "\n\n", "public static void main(String[] args) {\n    CacheDemo c = new CacheDemo();\n    for (int i = 0; i < 3; i++) {\n        new Thread() {\n            public void run() {\n\n                System.out.println(c.get(\"3\"));\n\n            }\n\n        }.start();\n    }\n}\n\npublic Object get(String id) {\n    Object value = null;\n    try {\n        rwl.readLock().lock();// 首先开启读锁，从缓存中去取\n        value = map.get(id);\n        if (value == null) { // 如果缓存中没有释放读锁，上写锁\n            try {\n                rwl.readLock().unlock();\n                rwl.writeLock().lock();\n                if (value == null) {\n                    System.out.println(\"执行了一次数据库\");\n                    value = \"queryDB\";\n                    // map.put(id, value);\n                }\n            } finally {\n                rwl.writeLock().unlock(); // 释放写锁\n            }\n            rwl.readLock().lock(); // 然后再上读锁\n        }\n    } finally {\n        rwl.readLock().unlock(); // 最后释放读锁\n    }\n    return value;\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一层循环 三行代码足以&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{     \n    &lt;span class=\"hljs-comment\"&gt;/*设大马中马小马各为x&amp;#xff0c;y&amp;#xff0c;z依据题意得到方程组\n    ①x&amp;#43;y&amp;#43;z&amp;#61;100&amp;#xff1b;\n    ②6x&amp;#43;4y&amp;#43;z&amp;#61;2*100&amp;#xff1b; \n    通过消元得到x与y、z关系\n    y&amp;#61;(100-5*x)/3;\n    z&amp;#61;&amp;#xff08;100&amp;#43;x)/3*2;\n    */&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x; &lt;span class=\"hljs-comment\"&gt;//x&amp;#xff1a;大马数量 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(x&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;x&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;x&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;大马有%d只&amp;#xff0c;中马有%d只&amp;#xff0c;小马有%d只\\n&amp;#34;&lt;/span&gt;,x,(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-5&lt;/span&gt;*x)/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;#43;x)/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["c语言三种百马百担问题解法", ["100匹马驮100担货，大马- -匹驮3担，中马一匹驮2担，小马两匹驮一担。", "\n", "当大马、中马、小马每种不能少于一-匹， 有多少种组合法?", "\n", "2.当可以缺少-种或缺:二种，又有多少种组合法?", "\n", "3.用while求第-一种组合法。", "\n", "4.用do-while求上述两种组合法。", "\n", "5.用三重或二重for循环求上述两种组合法。", "\n", "6.打印结果和多少种组合法", "\n", "7.自行设计一个程序，其中设计的循环次数能区分三种循环结构所费的计算时间，参照实验二获取系统时间的例子，尝试打印使用三种循环结构所费的机时是多少。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改进一下代码就行&amp;#xff0c; Grand* p; 改为 Grand* p &amp;#61; NULL; &lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["error C4703: 使用了可能未初始化的本地指针变量“p” - SDL检查已改为否，仍出现同样错误", ["在学习RTTI的使用中， 用到了一个C++ Primer Plus里的一个例子， 但是出现了上述错误，经过搜索， 全网唯一的解决方法是把配置中的SDL检查改为否。", "改过后，代码仍然报相同错误。求解！", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<cstdlib>", "\n", "#", "include", " ", "<ctime>", "\n\n", "using", " std::cout;\n\n", "class", " ", "Grand", "\n{\n", "private", ":\n    ", "int", " hold;\n", "public", ":\n    ", "Grand", "(", "int", " h = ", "0", ") :", "hold", "(h) {}\n    ", "virtual", " ", "void", " ", "Speak", "()", " ", "const", " ", "{ cout << ", "\"I am a grand class\\n\"", "; }\n    ", "virtual", " ", "int", " ", "Value", "()", " ", "const", " ", "{ ", "return", " hold; }\n};\n\n", "class", " ", "Superb", " :", "public", " Grand\n{\n", "public", ":\n    ", "Superb", "(", "int", " h = ", "0", ") :", "Grand", "(h) {}\n    ", "void", " ", "Speak", "()", " ", "{ cout << ", "\"Superb!\\n\"", "; }\n    ", "virtual", " ", "void", " ", "Say", "()", " ", "const", " ", "{ cout << ", "\"Superb Value is \"", " << ", "Value", "() << std::endl; }\n};\n\n", "class", " ", "Magnificant", " :", "public", " Superb\n{\n", "private", ":\n    ", "char", " ch;\n", "public", ":\n    ", "Magnificant", "(", "int", " h = ", "0", ", ", "char", " c = ", "'A'", ") :", "Superb", "(h), ", "ch", "(c) {}\n    ", "void", " ", "Speak", "()", " ", "const", " ", "{ cout << ", "\"I am a magnificant class!\\n\"", "; }\n    ", "void", " ", "Say", "()", " ", "const", "\n    ", "{\n        cout << ", "\"character: \"", " << ch << ", "\"and the integer is : \"", " << ", "Value", "() << std::endl;\n    }\n};\n    ", "Grand * ", "GetOne", "()", ";\n\n    ", "int", " ", "main", "()", "\n    ", "{\n        std::", "srand", "(std::", "time", "(", "0", "));\n        Grand *pg;\n        Superb *ps;\n        ", "for", " (", "int", " i = ", "0", "; i < ", "5", "; i++)\n        {\n            pg = ", "GetOne", "();\n            pg->", "Speak", "();\n            ", "if", " (ps = ", "dynamic_cast", "<Superb*> (pg))\n                ps->", "Say", "();\n        }\n        ", "return", " ", "0", ";\n    }\n\n    ", "Grand * ", "GetOne", "()", "\n    ", "{\n        Grand* p;\n        ", "switch", " (std::", "rand", "() % ", "3", ")\n        {\n        ", "case", " ", "0", ": p = ", "new", " ", "Grand", "(std::", "rand", "() % ", "100", ");\n            ", "break", ";\n        ", "case", " ", "1", ": p = ", "new", " ", "Superb", "(std::", "rand", "() % ", "100", ");\n            ", "break", ";\n        ", "case", " ", "2", ": p = ", "new", " ", "Magnificant", "(std::", "rand", "() % ", "100", ", ", "'A'", " + std::", "rand", "() % ", "26", ");\n            ", "break", ";\n        }\n        ", "return", " p;\n    }\n\n"]], "Tag": "程序设计"}
{"Answer": "这种需求可以用open flash chart来做，开源产品，商用免费，特别是2.0支持json格式的数据，和任何web框架都很容易集成。", "Konwledge_Point": "通过例子学习", "Question": ["我是新人有一些关于Flex的困惑，希望能够得到各位的解答", ["    最近这一两年Web客户端技术比较火，Ajax和Flex这两个名词到处都是。因为工作的关系我选需要学习J2EE开发，也利用空闲时间学习了些JavaScript，能够解决一些不太复杂的客户端交互问题。对于Flex虽然也一直关注但因为公司不用这方面做开发，加上自己是新人，需要学的东西太多了精力有限也就一直没能对Flex进行研究。", "      让我对Flex感兴趣是最近的一个项目。项目中需要一些比较漂亮的报表，当时我们首选了一个Flash控件叫AanyChart，效果没的说，但价格绝对可以杀人，最后只能选择自己开发了。当时我们的同事就推荐用Flex做，他也确实做了很快做了个折线图出来，效果还可以，可是和项目整合的时候就犯难了。不知道是我们设置有问题还是，Flex程序就这样，整个页面都在FlashPlayer里边了。我的同事也是按照帮助手册的例子稍加改造写的，对于这些具体的设置也不会，项目非常紧容不得我们耽搁，只能放弃。最好还是用JFreeChart来动态绘制图片来实现的，样子", "难看了些，但没有办法。", "      我想问一下各位以下几个问题：", "      1.)Flex程序一般是怎样在项目中应用的，是不是一旦采用了Flex客户端的东西就只能用Flex去写，而不能用HTML了", "      2.)Flex中用XML文件定义的程序好像能被编译成swf文件，这个文件能不能独立出来运行。也就是把编译好的swf文件部署到项目中，象使用一般用Flash开发的文件那样去使用，里边的JavaScript交互接口也不受影响。说白了也就是", "        想用Flex中成熟的类库去开发一些图表显示程序，数据由JS传入，swf作为外壳程序负责图像的渲染和显示。", "      3.)Flex中通过Ajax或其他技术访问后台的能力如何？", "      4.)Flex开发的费用如何（不考虑IDE费用我们可以用盗版），有什么商业上的限制没有？", "      4.)想我们单位这样的情况（以j2EE Ajax开发Web企业应用程序），是否适合在在项目的某些模块使用Flex？", "    这些问题困扰了我有一阵了。网上连篇累牍的资料大部分都是介绍ActionScript 或 Flex的一些简单入门更有的甚至直接Copy FlexBuilder的帮助文档，很少有介绍Flex如何在项目中使用或与原有旧项目整合的。象我们这种小公司，要一下子转换到Flex开发几乎是不可能的，只能在局部合适的模块使用。问题可能幼稚了些，但我对这一块没有什么概念，希望高手能够解答。", "[color=brown][/color]", "问题补充", "谢谢楼上的高手，那个控件我看过，很不错能满足我们部分需求。但我还是想问下Flex", "是否可以象我所期望的那样去使用。毕竟用人家的控件有时候是有局限的。而且更重要", "的一点就是，公司开发的都是内网应用程序，我们可以在局部用这种技术来小试牛刀，", "如果效果好的话可以慢慢推广或者慢慢的完全转移，毕竟RIA是大势所趋，Flex的界面", "效果也没的说。从我自己的角度来说我很喜欢这方面的技术，掌握它以后求职也是一种", "资本。但从公司角度来说，更换开发方式是有代价的，需要有一个充分的理由，但这种", "渐进的方式是大家都可以接受的。"]], "Tag": "程序设计"}
{"Answer": "不能执着SOA到底是什么，就跟你问别人信仰是什么一样，问题太飘渺，不过我们可以简单理解。有人信佛教、有人信天主教，还有人邪教，但不管什么教，我们都可以团结起来共同为和谐社会努力，这就是SOA。SOA就是一种概念，不同行业不同系统甚至可以是不同模块间的业务协同工作。\r\n    SOA这中业务协同依赖Webservice实现，但也不是绝对，它仅仅是一种指导思想。至于颗粒度问题，一般都是不同系统间的，这个可以靠自己灵活把握。", "Konwledge_Point": "通过例子学习", "Question": ["请问soa到底是什么？", ["最近想学习这方面的知识，看了一些关于soa的相关内容，但是感觉越看越晕", "\n我不拷贝粘贴看到的东西了，只打出自己的疑问，如果问题太肤浅了，请不要笑话", "\nsoa说白了是不是一个个类似webservice样的东西，这些ws可能是四处分布的，靠着esb这个东西，让发起方可以调到目的放（路由），保障网络安全监控等等这些辅助东西（辅助的可能还很多，我不粘贴了搞的好像很懂，我觉得esb最关键的似乎就是路由这块吧，当然，监控，保障网路的到达数据传输等等也重要）", "\n但是soa具体的服务到底是怎么个程度，都用粗粒度细粒度在描述，问题是具体的度的怎么样的，因为没有开发过，所以也是在不清楚，当然，未来会依靠开发搞清楚，但希望在投入前先搞清楚自己要搞的是什么，不要盲人走路", "\n总在描述soa里的构件重用性，甚至还有普元eos说的图形拖拉一下就出一个应用了，我是否可以这么理解。这里的服务，假设我们有2个单独的系统", "\n1。医疗系统数据报送的系统，有如下功能", "\n   a 用户登录（医疗单位用户）", "\n   b 企业信息管理（医疗单位信息）", "\n   c 填报任务管理", "\n   d 报送数据", "\n   e 填报数据查询", "\n2。科技系统数据报送系统，有如下功能", "\n   a 用户登录（科技单位单位用户）", "\n   b 企业信息管理（科技单位信息）", "\n   c 填报任务管理", "\n   d 报送数据", "\n   e 数据查询", "\n   f 项目执行情况提交 （假设，医疗系统没有的）", "\n   G 其他功能（医疗系统没有的）", "\n而我们如果想吧这些系统搞成soa的，是不是吧这些系统的功能进行分析，分析出共性，比如“用户登录”，“企业信息管理”，”报送数据“等，然后将这些功能实现为一个个的服务，然后假设有第3个系统，这些”用户登录“，”信息管理“，”报送数据“这些功能第3个系统也需要的话，就是调用soa里的服务，不用再次开发？soa里的服务是这么个概念么？", "\n如果我说的不对，可以麻烦能指导用的，用浅显点的例子回复我吗？不要用那种超理论的，那些不好理解，容易造成信息不对称，语义丢失"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;TestSeviceImpl&lt;br /&gt;import jakarta.annotation.Resource; &amp;#61;&amp;gt; import javax.annotation.Resource;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["ecplise中spring练习项目报错：Cannot invoke \"annotation.dao.TestDao.save()\" because \"this.testDao\" is null", ["问题遇到的现象和发生背景", "\n", "刚学习springboot,跟着陈恒的《SSM+Spring Boot+Vue.js3全栈开发从入门到实战》学习，刚练习到书中第二个小例子，就报错了，搜集挺多办法，有修改web.xml添加监听器（还是报错）,我用的spring-framework-5.8.3，tomcat为10.0.0，jdk版本为17，书中讲的版本为framwork-5.3.2,tomcat版本为9.0.30，应该不是版本问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "以下我将展示我所有的代码及相关截图", "\n", "1.annotation.controller包中的代码", "           TestControler.java", "\n", "package", " ", "annotation", ".controller;\n", "import", " org.springframework.beans.factory.", "annotation", ".Autowired;\n", "import", " org.springframework.stereotype.Controller;\n", "import", " ", "annotation", ".service.TestService;\n", "@Controller", "\n", "public", " ", "class", " ", "TestController", " ", "{\n    ", "@Autowired", "\n    ", "private", " TestService testService;\n    ", "public", " void save() {\n        testService.save();\n        System.", "out", ".println(", "\"testController save\"", ");\n    }\n}\n\n", "\n", "2.annotation.dao包中的", "     接口TestDao", "\n", "package", " annotation.dao;\n", "public", " ", "interface", " ", "TestDao", " ", "{\n    ", "public", " ", "void", " ", "save", "()", ";\n}\n\n", "\n", "   接口实例化", "\n", "package", " annotation.dao;\n", "import", " org.springframework.stereotype.Repository;\n", "@Repository", "(", "\"testDaoImpl\"", ")\n", "/**相当于", "@Respository", ",但如果在Service层使用", "@Resource", "(name=\"testDaoImpl\")testDaoImpl不能省略。testDaoImpl为Ioc容器中的对象名**/", "\n", "public", " ", "class", " ", "TestDaoImpl", " ", "implements", " ", "TestDao", "{\n    ", "@Override", "\n    ", "public", " ", "void", " ", "save", "()", " ", "{\n        System.out.println(", "\"testDao save\"", ");\n    }\n}\n\n", "\n", "3.annotation.service", "    TestService接口", "\n", "package", " annotation.service;\n", "public", " ", "interface", " ", "TestService", " ", "{\n    ", "public", " ", "void", " ", "save", "()", ";\n}\n\n", "\n", "   TestServiceImpl，接口实例化", "\n", "package", " ", "annotation", ".service;\n", "import", " org.springframework.stereotype.Service;\n", "import", " ", "annotation", ".dao.TestDao;\n", "import", " jakarta.", "annotation", ".Resource;\n", "@Service(", "\"testSeviceImpl\"", ")", "//相当于Service", "\n", "public", " ", "class", " ", "TestSeviceImpl", " ", "implements", " ", "TestService", "{\n    ", "@Resource(name=", "\"testDaoImpl\"", ")", "\n    ", "/**相当于", "@Autowired", "，", "@Autowird", "默认按照Bean类型注入**/", "\n    ", "private", " TestDao testDao;\n    ", "@Override", "\n    ", "public", " void save() {\n        testDao.save();\n        System.", "out", ".println(", "\"testService save\"", ");\n    }\n}\n", "\n", "4.annotation.test包，测试包", "     TestAnnotation.java", "\n", "package", " annotation.test;\n", "import", " org.springframework.context.ApplicationContext;\n", "import", " org.springframework.context.support.ClassPathXmlApplicationContext;\n", "import", " annotation.controller.TestController;\n", "public", " ", "class", " ", "TestAnnotation", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "@SuppressWarnings(\"resource\")", "\n        ", "ApplicationContext", " ", "appCon", " ", "=", " ", "new", " ", "ClassPathXmlApplicationContext", "(", "\"config/applicationContext.xml\"", ");\n        ", "TestController", " ", "tt", " ", "=", " (TestController)appCon.getBean(", "\"testController\"", ");\n        tt.save();\n    }\n}\n", "\n", "5.config包中的applicationConext.xml文件内容", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n", "<", "beans", " ", "xmlns", "=", "\"http://www.springframework.org/schema/beans\"", "\n    ", "xmlns:xsi", "=", "\"http://www.w3.org/2001/XMLSchema-instance\"", "\n    ", "xmlns:context", "=", "\"http://www.springframework.org/schema/context\"", "\n    ", "xsi:schemaLocation", "=", "\"http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd\"", ">", "\n    ", "<!-- 扫描annotation包及其子包中的注解 -->", "\n    ", "<", "context:component-scan", " ", "base-package", "=", "\"annotation\"", "/>", "\n", "</", "beans", ">", " \n", "\n", "6.web.xml文件内容", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n", "<", "web-app", " ", "xmlns:xsi", "=", "\"http://www.w3.org/2001/XMLSchema-instance\"", " ", "xmlns", "=", "\"https://jakarta.ee/xml/ns/jakartaee\"", " ", "xmlns:web", "=", "\"http://xmlns.jcp.org/xml/ns/javaee\"", " ", "xsi:schemaLocation", "=", "\"https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"", " ", "id", "=", "\"WebApp_ID\"", " ", "version", "=", "\"5.0\"", ">", "\n  ", "<", "display-name", ">", "ch1-2", "</", "display-name", ">", "\n  ", "<", "welcome-file-list", ">", "\n    ", "<", "welcome-file", ">", "index.html", "</", "welcome-file", ">", "\n    ", "<", "welcome-file", ">", "index.jsp", "</", "welcome-file", ">", "\n    ", "<", "welcome-file", ">", "index.htm", "</", "welcome-file", ">", "\n    ", "<", "welcome-file", ">", "default.html", "</", "welcome-file", ">", "\n    ", "<", "welcome-file", ">", "default.jsp", "</", "welcome-file", ">", "\n    ", "<", "welcome-file", ">", "default.htm", "</", "welcome-file", ">", "\n  ", "</", "welcome-file-list", ">", "\n", "</", "web-app", ">", "\n\n", "\n", "运行结果及报错内容", "\n", "Exception ", "in", " thread ", "\"main\"", " java", ".lang", ".NullPointerException", ": Cannot invoke ", "\"annotation.dao.TestDao.save()\"", " because ", "\"this.testDao\"", " is null\n    at annotation", ".service", ".TestSeviceImpl", ".save", "(TestSeviceImpl", ".java", ":", "13", ")\n    at annotation", ".controller", ".TestController", ".save", "(TestController", ".java", ":", "10", ")\n    at annotation", ".test", ".TestAnnotation", ".main", "(TestAnnotation", ".java", ":", "10", ")\n\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "在web.xml中添加监听器，在最后加上", "\n", "<!-- 监听器    spring有自带的 -->", "\n  ", "<", "listener", ">", "\n      ", "<", "listener-class", ">", "org.springframework.web.context.ContextLoaderListener", "</", "listener-class", ">", "\n  ", "</", "listener", ">", "\n", "\n", "连web.xml都报错", "\n", "我想要达到的结果", "\n", "能输出TestDaoImpl，TestServiceImpl,TestController它们仨个中的system出来的值，求各位指点迷津"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/qq_22475211/article/details/88815457?spm&amp;#61;1001.2014.3001.5502\"&gt;https://blog.csdn.net/qq_22475211/article/details/88815457?spm&amp;#61;1001.2014.3001.5502&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;这是我写的一个bp反向推导你可以看看&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["用BP算法完成3个输入，3个隐含，2个输出的神经网络模型的所有参数更新过程", ["如题，完成3个输入，3个隐含，2个输出的神经网络模型的所有参数更新过程就行。", "\n\n", "bp算法；", "\n\n", "需要有对应的过程；", "\n\n", "不用文字说明，我需要几个不同的例子", "\n\n", "（当然如果能同时告诉我x个输入，y个隐含，z个输出怎么算更好）", "\n\n", "急"]], "Tag": "程序设计"}
{"Answer": "其实你就是想隐藏js实现吧.貌似我是没想到办法.但是肯定不代表没办法.\r\n如果你不是想隐藏而是只想返回一个可以调用js的代码\r\n\r\n那你可以把你需要定义的代码写在包含页里 那么ajax返回页就可以调用了\r\n\r\n比如本例\r\n\r\n包含页\r\n&lt;%@page language=\"java\" contentType=\"text/html; charset=UTF-8\"%&gt;\r\n&lt;%@taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\r\n&lt;%@taglib prefix=\"sx\" uri=\"/struts-dojo-tags\"%&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;sx:head /&gt;\r\n[color=red]&lt;script type=\"text/javascript\" src=\"test.js\"&gt; &lt;/script&gt;[/color]\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id='show' style=\"width=200px; height=200px\"&gt;\r\n&lt;s:form action=\"test\"&gt;\r\n&lt;sx:submit value=\"submit\" executeScripts=\"true\" targets=\"show\"/&gt;\r\n&lt;/s:form&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\najax页\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;a href=\"javascript:test();\"&gt;test&lt;/a&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n希望能对你有帮助\r\n\r\n补充:如果在sx:submit调用onclick等会使ajax失效,原因不明,知道的兄弟请告知", "Konwledge_Point": "通过例子学习", "Question": ["struts2的ajax标签中executescripts的问题", ["我刚开始学习struts2中的ajax部分。立刻遇到一个问题", "\n我先按照书上的例子，写一个页面(test.jsp)，上面有1个submit按键，对应1个action，用来刷新div。其中action就是链接到另外一个页面，而页面中就是写了一个alert的警告框，这时如果点击按钮，就会出现对应的警告框，没有问题。", "\n而后我又写一个页面(test1.jsp)，里面是一个按钮，并且在此页面中有一段script程序，再点击这个按钮的时候会出现一个警告框，然后将上面说的按钮对应的action的result设置为此页面。也就是说当点击按钮的时候div会显示刚写的页面。但是这时候问题出现了：如果第三个按钮没有设置executescripts=“true”的话会显示页面中的按钮，但是点了没有反应；如果设置了为true的话div就会提示unfinder。请问这是怎么回事呀？", "\n大致代码如下：", "\ntest.jsp：", "\n[code=\"java\"]", "\n", "/s:form", "[/code]\n\n", "action配置：", "\n[code=\"java\"]", "/test1.jsp", "[/code]", "\n\n", "test1.jsp:", "\n[code=\"java\"]<br>\nfunction test(){<br>\nalert(&quot;test&quot;);<br>\n}<br>\n", "\n", "test", "[/code]", "\n[b]问题补充：[/b]", "\n恩，下面说如果是没有引入jacascript会导致错误，但是为什么设置了executescripts=“true”后还是执行不了js程序呢？", "\n[b]问题补充：[/b]", "\n哦。听了下面2L的介绍可能就是这个样子了。", "\n但如果我想用div层引用一个其他包含js程序的页面，而且还可以执行对应的js程序，该怎么办呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个就是缺少成长过程&amp;#xff0c;直接让你独挡一面。建议可以换个公司&amp;#xff0c;个人成长需要过程&amp;#xff0c;项目经验的积累&amp;#xff0c;也需要过程。你这边如果有啥疑问&amp;#xff0c;也可以找我私聊。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["还望各位大佬解惑（非专业性知识）", ["各位大佬好，我先说一下自身条件，我是微电子专科毕业（其实这个不重要），在深圳做了3年房产销售，然后因为疫情得原因，辞职回家，因为家中有事耽搁了一段时间，在去年，靠朋友关系进了一家芯片设计得公司，（重点来了）上头给我分配得是岗位是测试工程师（上位机和下位机开发），我是在公司自学得C++和QT ，花了一个半月得时间学完了（开玩笑，怎么可能，只能是看完了，看了一遍）然后就做一个大概十万行代码的项目，但是自己没有做过项目，再加上时间紧迫，根本没有时间去一个一个例子跟着去敲（或许是因为我自己能力的问题，那些21天学会C++我属实办不到），我知道，编成最忌讳的就是只看不做，但是没办法，因为时间的问题或许是我自身能力的问题，现在我处于一个你说什么，我知道一个大概，比如异常处理，多态等等，别人写出来我知道一个大概，但是自己动手去写的话，10行代码可能有11个报错，再加上项目那边给的压力，但是我真的不知道怎么去写，但是我的思路逻辑还是有的，需要调用到那些接口我也知道，但是就是下不去手，现在项目那边一直催，但是项目毫无进展（或者很慢），但是我心里面还是感觉C++和QT很简单的，这应该是我的幻觉吧，现在我的状态是代码写不出来，晚上睡不着觉，一躺下我满脑子都是怎么去写这个项目，但是就是不知道如何下手，求助大佬们，给一些学习的建议或者练习代码的方法吧（我自己尝试跟着网上的学习视频去敲代码，但是当自己做项目的时候，感觉完全不是一回事，就像你跟着学完1+1等于2，然后让你解答一个微积分方程一样），或者有什么好的建议（建议找个电子厂上班的就算了吧），在此叩谢各位大佬，对了，在此提一下，我们公司就我一个人做这个项目，其他人都不懂（他们是硬件我是软件），在此先谢过大佬了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您的代码中存在一些问题&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;在 delect() 函数中&amp;#xff0c;当链表头的值大于 k 时&amp;#xff0c;您直接让 head 指向当前节点 &lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt;&amp;#xff0c;但是却没有释放原来的头节点空间&amp;#xff0c;导致内存泄漏。可以先将当前节点 &lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt; 存到 p1 中&amp;#xff0c;再释放 p0。\n\n在 print() 函数中&amp;#xff0c;每输出一个节点的值后都应该将 &lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt; 指向下一个节点&amp;#xff0c;否则会造成死循环输出。\n\n在输出节点的值时&amp;#xff0c;应该加上换行符&amp;#xff0c;否则多个值会输出在同一行&amp;#xff0c;不易阅读。\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;下面是修改后的代码&amp;#xff0c;您可以参考一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; year;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *next;\n};\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *&lt;span class=\"hljs-built_in\"&gt;build&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *head, *p, *tmp;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    head &amp;#61; p &amp;#61; tmp &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; head;\n    }\n    p &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell));\n    p-&amp;gt;year &amp;#61; n;\n    p-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    head &amp;#61; p;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        tmp &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell));\n        tmp-&amp;gt;year &amp;#61; n;\n        tmp-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        p-&amp;gt;next &amp;#61; tmp;\n        p &amp;#61; p-&amp;gt;next;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; head;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *&lt;span class=\"hljs-built_in\"&gt;delect&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell *head, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k) {\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *p, *p0, *p1;\n    p &amp;#61; head;\n    p0 &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (head &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; head;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p-&amp;gt;year &amp;gt; k) {\n        p1 &amp;#61; p;\n        p &amp;#61; p-&amp;gt;next;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p1);\n    }\n\n    head &amp;#61; p;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;year &amp;gt; k) {\n            p1 &amp;#61; p;\n            p &amp;#61; p-&amp;gt;next;\n            &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p1);\n            p0-&amp;gt;next &amp;#61; p;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            p0 &amp;#61; p;\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; head;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell *head)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *p;\n    p &amp;#61; head;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (head &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NULL\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, p-&amp;gt;year);\n        p &amp;#61; p-&amp;gt;next;\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;release&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; cell *head)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *p0, *p;\n    p &amp;#61; head;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {\n        p0 &amp;#61; p;\n        p &amp;#61; p-&amp;gt;next;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p0);\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;cell&lt;/span&gt; *head;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;k);\n    head &amp;#61; &lt;span class=\"hljs-built_in\"&gt;build&lt;/span&gt;();\n\n    head &amp;#61; &lt;span class=\"hljs-built_in\"&gt;delect&lt;/span&gt;(head, k);\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(head);\n    &lt;span class=\"hljs-built_in\"&gt;release&lt;/span&gt;(head);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["c语言链表的删除节点这个代码有什么问题吗", ["利用c语言里的链表删除大于k的节点，以0为结尾，输入k和链表，输出删除后的链表。（只会c语言，还没有学习c++）", "不知道为什么代码运行错误，我是根据书上的链表删除的公式写的删除函数的，但是完全没发删除，感觉很苦恼", "例子：", "输入：2000", "2001 2002 1999 1998 2021 1997 0", "输出：1999 1998 1997", "\n", "\n```c\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<malloc.h>", "\n", "struct", " ", "cell", "\n{\n    ", "int", " year;\n    ", "struct", " ", "cell", "*next;\n};\n", "struct", " ", "cell", "*", "build", "(", "void", ")\n{\n    ", "struct", " ", "cell", "*head,*p,*tmp;\n    ", "int", " n;\n    head=p=tmp=", "NULL", ";\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "if", "(n==", "0", ")\n    {\n        ", "return", " head;\n    }\n    p=(", "struct", " cell*)", "malloc", "(", "sizeof", "(", "struct", " cell));\n    p->year=n;\n    p->next =", "NULL", ";\n    head=p;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "while", "(n!=", "0", ")\n    {\n        tmp=(", "struct", " cell*)", "malloc", "(", "sizeof", "(", "struct", " cell));\n        tmp->year=n;\n        tmp->next=", "NULL", ";\n        p->next=tmp;\n        p=p->next;\n        ", "scanf", "(", "\"%d\"", ",&n);\n    }\n    ", "return", " head;\n};\n", "struct", " ", "cell", "*", "delect", "(", "struct", " cell*head,", "int", " k)\n{\n    ", "struct", " ", "cell", "*p,*p0,*p1;\n    p=head;\n    p0=", "NULL", ";\n    ", "if", "(head==", "NULL", "){", "return", " head;}\n    ", "while", "(p->year>k)\n    {p=p->next;", "free", "(p0->next);p0->next=p;\n\n    }\n\n   head=p;\n\n    ", "while", "(p!=", "NULL", ")\n    {\n        ", "if", "(p->year>k){p=p->next;", "free", "(p0->next);p0->next=p;}\n        p0=p;p=p->next;\n\n    }\n    ", "return", " head;\n};\n", "void", " ", "print", "(", "struct", " cell*head)", "\n", "{\n    ", "struct", " ", "cell", "*p;\n    p=head;\n    ", "if", "(head==", "NULL", "){", "printf", "(", "\"NULL\"", ");", "return", ";}\n    ", "while", "(p!=", "NULL", ")\n    {\n        ", "printf", "(", "\"%d\"", ",p->year);\n        ", "if", "(p->next!=", "NULL", "){", "printf", "(", "\" \"", ");}\n    }\n}\n", "void", " ", "release", "(", "struct", " cell*head)", "\n", "{\n    ", "struct", " ", "cell", "*p0,*p;\n    p=head;\n    ", "while", "(p!=", "NULL", ")\n    {\n        p0=p;p=p->next;", "free", "(p0);\n    }\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "struct", " ", "cell", "*head;", "int", " k;\n    ", "scanf", "(", "\"%d\"", ",&k);\n    head=", "build", "();\n\n    head=", "delect", "(head,k);\n    ", "print", "(head);\n    ", "release", "(head);\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "org/dom4j/DocumentException 这个提示需要的包是\r\ndom4j jar包\r\n\r\nDocumentException出现的原因是因为解析XML时出错。\r\n\r\n[url]http://makeitjoy.iteye.com/blog/244225[/url]\r\n\r\n推荐你可以先看看&lt;hibernate in action&gt;前面几章的实例。虽然是书籍里面的使用Hibernate2.0的，但是原理基本上是一样的。\r\n\r\n[url]http://www.javaresearch.org/article/38986.htm[/url]", "Konwledge_Point": "通过例子学习", "Question": ["hibernate 日志异常", ["最近学习hibernate，看书感觉可以，实际操作怎么就那么难呢！", "\n我用的是：hibernate3.2 eclipse3.3 （没有Myeclipse插件） Mysql6.0", "\n一：main()函数", "\n     package org.first;", "\nimport org.hibernate.*;", "\nimport org.hibernate.cfg.*;", "\n\n", "public abstract class FirstM {", "\n\n", "/**\n * @param args\n */\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Configuration conf=new Configuration().configure();\n    SessionFactory sf=conf.buildSessionFactory();\n    Session sess=sf.openSession();\n    Transaction tx=sess.beginTransaction();\n    FirstBean fb=new FirstBean();\n    fb.setUserId(12);\n    fb.setUserName(\"thmei123\");\n    sess.save(fb);\n    tx.commit();\n    sess.close();\n}\n", "\n\n", "}", "\n二：持久化类：很简单，一个主键userId,和一个属性userName;", "\npublic class FirstBean {", "\n\n", "    private int userId;\n    private String userName;\n    public void setUserId(int userId)\n    {\n        this.userId=userId;\n    }\n    public int getUserid()\n    {\n        return this.userId;\n    }\n    public void setUserName(String userName)\n    {\n        this.userName=userName;\n    }\n    public String getUserName()\n    {\n        return this.userName;\n    }\n", "\n\n", "}", "\n三:影射文件和配置文件：", "\n  1：<?xml version=\"1.0\"?>", "\n<!DOCTYPE hibernate-mapping PUBLIC", "\n    \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"", "\n    \"", "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">", "\n\n", "\n2：", "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n<!DOCTYPE hibernate-configuration PUBLIC", "\n        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"", "\n        \"", "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">", "org.gjt.mm.mysql.Driver", "thmei123", "jdbc:mysql://localhost/user", "root", "org.hibernate.dialect.MySQLDialect", "20", "1", "5000", "100", "3000", "2", "true", "\n\n", "说明；在主函数main()中运行后提示：", "\n Exception in thread \"main\" java.lang.NoClassDefFoundError: org/dom4j/DocumentException", "\n    at org.first.FirstM.main(FirstM.java:12)", "\nCaused by: java.lang.ClassNotFoundException: org.dom4j.DocumentException", "\n    at java.net.URLClassLoader$1.run(Unknown Source)", "\n    at java.security.AccessController.doPrivileged(Native Method)", "\n    at java.net.URLClassLoader.findClass(Unknown Source)", "\n    at java.lang.ClassLoader.loadClass(Unknown Source)", "\n\n", "提示的是要文件：", "\n    log4j-1.2.11.jar 和commons-logging-1.0.4.jar", "\n 这两个jar文件我都拷贝到了SRC下面了，也不可以阿", "\n\n", "在网上查询说的是好像main()函数中不可以用日志文件，", "\n\n", "希望大家帮我了，", "\n\n", "另外 请大家给我一个详细的例子吧，最好是web工程的和java工程 各一个例子，", "\n\n", "同时天涯沦落人啊！！", "\n[b]问题补充：[/b]", "\n谢谢 楼上兄弟的给你资料和建议，我现在除了拷贝了log4j-1.2.11.jar 和commons-logging-1.0.4.jar  这两个文件外，还在hibernate下拷贝了一个log4j.property的属性文件，都放置到了src下面，但是现在又出下面错误：", "\n\n", "22:11:54,599  INFO Environment:514 - Hibernate 3.2.6", "\n22:11:54,619  INFO Environment:547 - hibernate.properties not found", "\n22:11:54,629  INFO Environment:681 - Bytecode provider name : cglib", "\n22:11:54,639  INFO Environment:598 - using JDK 1.4 java.sql.Timestamp handling", "\n22:11:54,850  INFO Configuration:1432 - configuring from resource: /hibernate.cfg.xml", "\n22:11:54,850  INFO Configuration:1409 - Configuration resource: /hibernate.cfg.xml", "\n22:11:55,501  INFO Configuration:559 - Reading mappings from resource : hib.hbm.xml", "\n22:11:56,212  INFO HbmBinder:300 - Mapping class: FirstBean -> student", "\norg.hibernate.InvalidMappingException: Could not parse mapping document from resource hib.hbm.xml", "\n    at org.hibernate.cfg.Configuration.addResource(Configuration.java:575)", "\n    at org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:1593)", "\n\n", "其中：", "\n一：22:11:54,619  INFO Environment:547 - hibernate.properties not found", "\n提示没有找到hibernate.properties 是怎么会事？我已经放置hibernate.properties,这个文件不是自己写，因为我不会写，就在hibernate下拷贝的一个，请大家给出建议，谢谢", "\n\n", "二：org.hibernate.InvalidMappingException: Could not parse mapping document from resource hib.hbm.xml", "\n这个实际上是提示没有找到hib.hbm.xml映射文件，我很是奇怪，无论我怎么修改的映射路径，都是不可以的！请大家帮助！！", "\n\n", "学习中，望大家指点 谢谢 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当然要下mysql了&amp;#x1f602;&amp;#x1f602;&amp;#xff0c;你下了mysql里面就会有mysqlworkbeach&amp;#xff08;这个是工作台&amp;#xff0c;不怎么用&amp;#xff09;&amp;#xff0c;一般是在控制面板上&amp;#xff0c;或者下个Navicat在这上面写好看一些。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["只有MySQLworkbench 没安装MySQL会有什么问题吗？", ["问题遇到的现象和发生背景", "\n", "MySQLworkbench已经安装了，但是发现打不开书上的例子,是不是因为只安装了SQL然后直接安装MYSQLworkbench所以打不开，我得安装MYSQL吗？才学习，不太懂。", "\n", "问题相关代码，请勿粘贴截图", "\n", "########################################\n# MySQL Crash Course\n# http:", "//www.forta.com/books/0672327120/", "\n# Example table creation scripts\n########################################\n\n\n########################\n# Create customers table\n########################\nCREATE TABLE customers\n(\n  cust_id      int       NOT NULL AUTO_INCREMENT,\n  cust_name    char(", "50", ")  NOT NULL ,\n  cust_address char(", "50", ")  NULL ,\n  cust_city    char(", "50", ")  NULL ,\n  cust_state   char(", "5", ")   NULL ,\n  cust_zip     char(", "10", ")  NULL ,\n  cust_country char(", "50", ")  NULL ,\n  cust_contact char(", "50", ")  NULL ,\n  cust_email   char(", "255", ") NULL ,\n  PRIMARY KEY (cust_id)\n) ENGINE=InnoDB;\n\n#########################\n# Create orderitems table\n#########################\nCREATE TABLE orderitems\n(\n  order_num  int          NOT NULL ,\n  order_item int          NOT NULL ,\n  prod_id    char(", "10", ")     NOT NULL ,\n  quantity   int          NOT NULL ,\n  item_price decimal(", "8", ",", "2", ") NOT NULL ,\n  PRIMARY KEY (order_num, order_item)\n) ENGINE=InnoDB;\n\n\n#####################\n# Create orders table\n#####################\nCREATE TABLE orders\n(\n  order_num  int      NOT NULL AUTO_INCREMENT,\n  order_date datetime NOT NULL ,\n  cust_id    int      NOT NULL ,\n  PRIMARY KEY (order_num)\n) ENGINE=InnoDB;\n\n#######################\n# Create products table\n#######################\nCREATE TABLE products\n(\n  prod_id    char(", "10", ")      NOT NULL,\n  vend_id    int           NOT NULL ,\n  prod_name  char(", "255", ")     NOT NULL ,\n  prod_price decimal(", "8", ",", "2", ")  NOT NULL ,\n  prod_desc  text          NULL ,\n  PRIMARY KEY(prod_id)\n) ENGINE=InnoDB;\n\n######################\n# Create vendors table\n######################\nCREATE TABLE vendors\n(\n  vend_id      int      NOT NULL AUTO_INCREMENT,\n  vend_name    char(", "50", ") NOT NULL ,\n  vend_address char(", "50", ") NULL ,\n  vend_city    char(", "50", ") NULL ,\n  vend_state   char(", "5", ")  NULL ,\n  vend_zip     char(", "10", ") NULL ,\n  vend_country char(", "50", ") NULL ,\n  PRIMARY KEY (vend_id)\n) ENGINE=InnoDB;\n\n###########################\n# Create productnotes table\n###########################\nCREATE TABLE productnotes\n(\n  note_id    int           NOT NULL AUTO_INCREMENT,\n  prod_id    char(", "10", ")      NOT NULL,\n  note_date datetime       NOT NULL,\n  note_text  text          NULL ,\n  PRIMARY KEY(note_id),\n  FULLTEXT(note_text)\n) ENGINE=MyISAM;\n\n\n#####################\n# Define ", "foreign", " keys\n#####################\nALTER TABLE orderitems ADD CONSTRAINT fk_orderitems_orders FOREIGN KEY (order_num) REFERENCES orders (order_num);\nALTER TABLE orderitems ADD CONSTRAINT fk_orderitems_products FOREIGN KEY (prod_id) REFERENCES products (prod_id);\nALTER TABLE orders ADD CONSTRAINT fk_orders_customers FOREIGN KEY (cust_id) REFERENCES customers (cust_id);\nALTER TABLE products ADD CONSTRAINT fk_products_vendors FOREIGN KEY (vend_id) REFERENCES vendors (vend_id);\n\n", "\n", "运行结果及报错内容", "\n", "结果是说不是MYSQL文件。文件是去网址里下载的mysql版本", "\n", "我的解答思路和尝试过的方法", "\n", "用sqlserver打开也是txt格式，是哪里不对吗？才学习SQL和MYSQL"]], "Tag": "程序设计"}
{"Answer": "用你的例子稍微变化一点来解释：\r\n假如\r\n原始字符串=\"ainging\"\r\n不用正向0宽匹配的正则表达式：/[a-z]ing/\r\n这时候得到的匹配结果是：aing\r\n//a后面有ing，但是因为第一次匹配完事后，aing已经消耗掉了，剩下的ing是不够再匹配[a-z]ing了\r\n\r\n使用正向0宽匹配的政策表达式：/[a-z](?=ing)/\r\n得到的匹配结果[\"a\",\"g\"]\r\n//因为a后面也有ing，g后面也有ing\r\n\r\n能看出区别了吗？0宽匹配组里面（?=ing）是不消耗匹配字数也不占匹配结果的。\r\n\r\n至于用在什么地方还是看你有什么需求了。", "Konwledge_Point": "通过例子学习", "Question": ["正则表达式 零宽断言", ["\n", "学习正则表达式零宽断言有点晕，看到这么一段", "\n", " ", "\n", " ", "\n", "零宽度正预测先行断言      (?=exp) 匹配exp前面的位置", "\n", "例：[a-z]*(?=ing) 可以匹配 cooking 和 singing 中的 cook 与 sing 。", "\n", "注意：先行断言的执行步骤是这样的先从要匹配的字符串中的最右端找到第一个 ing (也就是先行断言中的表达式)然后 再匹配其前面的表达式，", "\n", "若无法匹配则继续查找第二个 ing 再匹配第二个 ing 前面的字符串，若能匹配则匹配，符合正则的贪婪性。", "\n", " ", "\n", " ", "\n", "这个是可以看懂的，但问题是匹配了这个位置然后怎么用呢？", "\n", "哪位大神能用java写一个应用的例子看看，谢了！！！", "\n", " ", "\n", " ", "\n"]], "Tag": "程序设计"}
{"Answer": "怀疑\r\n&lt;aop:pointcut id='questPointCut' expression='execution(* *.embarkOnQuest(..)) and target(bean)' /&gt;  \r\n中的expression有误", "Konwledge_Point": "通过例子学习", "Question": ["为什么spring2.5 aop没有执行切入前后的方法呢？", ["我在学习spring in action 这本书的aop的例子时，为什么我编译没有报错，但是却没有执行我切入前后的方法？", "\n\n", "xml配置代码如下：", "\n\n", "<beans  xmlns=\"http://www.springframework.org/schema/beans\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \nxmlns:aop=\"http://www.springframework.org/schema/aop\" \nxmlns:tx=\"http://www.springframework.org/schema/tx\" \nxmlns:context=\"http://www.springframework.org/schema/context\" \nxsi:schemaLocation=\" \n    http://www.springframework.org/schema/beans \n    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  \n    http://www.springframework.org/schema/context \n    http://www.springframework.org/schema/context/spring-context-2.5.xsd \n    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  \n    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\"> \n\n   <bean id= \"quest\" class =\"com.knight.HolyGrailQuest\">\n   </bean>\n   <bean id = \"knight\" class = \"com.knight.KnightOfTheRoundTable\">\n      <constructor-arg value='sotomi' />\n      <property name='quest' ref='quest'></property>\n   </bean>\n\n   <bean id = \"minstrel\" class = \"com.knight.Minstrel\"></bean>\n   <aop:config>\n      <aop:aspect ref = 'minstrel' >\n          <aop:pointcut id='questPointCut' expression='execution(* *.embarkOnQuest(..)) and target(bean)' />\n          <aop:before method='singBefore' pointcut-ref='questPointCut' arg-names = 'bean' />\n          <aop:after-returning method='singAfter' pointcut-ref='questPointCut' arg-names = 'bean' />\n      </aop:aspect>\n   </aop:config>\n</beans>", "\n\n", " Minstrel类的方法如下：", "\n\n", "public class Minstrel {\n\n    private static final Logger Song =  Logger.getLogger(Minstrel.class);\n    \n    public void singBefore(Knight knight){\n        Song.info(\"Knight is so brave!\");\n        System.out.println(\"**********************before\");\n    }\n    \n    public void singAfter(Knight knight){\n        Song.info(\"Knight did quest the grail!\");\n    }\n}", "\n\n", "测试main函数：", "\n\n", "public class Test {\n\n   public static void main(String args[]){\n\n       BeanFactory factory = new XmlBeanFactory(new FileSystemResource(\"bean.xml\"));\n       Knight knight = (Knight)factory.getBean(\"knight\");\n       knight.embarkOnQuest();\n\n       \n   }\n}", "\n\n", " 但是执行后没有打印结果,我哪里设置错误了么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用汇编抓波形是 利用了示波器吗&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["GA8P46的MCU用汇编抓24C256的IIC协议波形", ["GA8P46的MCU用汇编抓24C256芯片的IIC协议波形", "\n", "现在已经出来Write的波形，但是没有Read的波形，有一起学习的吗？或者大家？", "\n", "//.asm代码", "\n", "include", " ", "\"mp01010.inc\"", "\n", "include", " ", "\"I2CRe.inc\"", "\n", "//include \"Branch.inc\"", "\n", "//include \"Calc.inc\"", "\n", "//include \"I2C.inc\"", "\n", "//include \"Pointer.inc\"", "\n", "ORG", "        ", "0xFFF", "\n        jmp        Main   ", "//开始(复位)", "\n\n", "ORG", "        ", "0x000", "\n        jmp        Main    ", "//hard interrupt", "\n", "ORG", "        ", "0x001", "   ", "//(硬件中断)   0x002(软件中断)", "\n        jmp        HardInterupt\n\n", "//ORG        0x060  //需要这个来结尾", "\n\n", "Main:", "\n", "sysyemInit:", "    \n        \n        ", "MOV", " A,", "@0x00", "\n        ", "MOV", " IOC5,A \n        ", "bs", "    port5, I2C_SCL    ", "//把I2C_SCL设置为1", "\n        ", "bs", "    port5, I2C_SDA        ", "//把I2C_SDA设置为1", "\n", "MainLoop:", "\n     call I2C_Start\n     call I2C_WByte\n     call I2C_Stop\n                        \n", "main_End:", "\n        jmp        MainLoop\n", "if", " ", "1", "\n", "//I2C_SDA高信号", "\n", "I2C_SDAH:", "  ", "//P5", "\n    \n    ", "bs", "    port5, I2C_SDA\n    \n    ret\n    \n", "//I2C_SDA低信号", "\n", "I2C_SDAL:", "  ", "//P5", "\n    \n    bc    port5, I2C_SDA\n    \n    ret    \n    \n", "//I2C_SCL高信号", "\n", "I2C_SCLH:", "   ", "//P5", "\n    \n    ", "bs", "    port5, I2C_SCL\n    \n    ret\n", "//I2C_SCL低信号", "\n", "I2C_SCLL:", "   ", "//P5", "\n    \n    bc    port5, I2C_SCL\n    \n    ret\n    \n", "//I2C_ACKH=1", "\n", "I2C_ACKH:", "\n    ", "MOV", " a,", "@1", "\n    ", "MOV", " ACK,a\n    \n    ret\n    \n", "//开始信号", "\n", "I2C_Start:", "\n    ", "//设SDA为高", "\n    call I2C_SDAH\n    \n    ", "nop", "\n    \n    ", "//设SCL为高", "\n    call I2C_SCLH\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SDA为低", "\n    call I2C_SDAL\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SCL为低", "\n    call I2C_SCLL\n    \n    ", "nop", "\n    ", "nop", "\n    \n    ret\n    \n", "//停止信号", "\n", "I2C_Stop:", "\n    ", "//设SDA为低", "\n    call I2C_SDAL \n    \n    ", "nop", "\n    \n    ", "//设SCL为高", "\n    call I2C_SCLH\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SDA为高", "\n    call I2C_SDAH\n     \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ret\n\n", "//发送应答信号    ", "\n", "I2C_SendACK:", "\n    ", "//设SDA为低", "\n    call I2C_SDAL\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SCL为高", "\n    call I2C_SCLH\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SCL为低", "\n    call I2C_SCLL\n\n    ", "nop", "\n    ", "nop", "\n    \n    ret\n    \n", "//发送非应答信号", "\n", "I2C_SendNACK:", "\n    ", "//设SDA为高", "\n    call I2C_SDAH\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SCL为高", "\n    call I2C_SCLH\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    ", "//设SCL为低", "\n    call I2C_SCLL\n    \n    ", "nop", "\n    ", "nop", "\n        \n    ret\n        \n", "//发送数据（W写）(带应答信号检验)", "\n", "I2C_WByte:", "\n    ", "//写入的数据0x70", "\n    ", "MOV", " a,", "@0x70", "\n    ", "MOV", " SendByte,a\n    \n    ", "MOV", " a,", "@8", "\n    ", "MOV", " count,a  ", "//循环八次的计数", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n", "WLOOP_for:", "        ", "//相当于循环8次for循环", "\n    ", "MOV", " a,SendByte\n    ", "MOV", " retc,a\n    ", "MOV", " a,", "@0x80", "\n    ", "AND", " retc,a\n    JBc status,z  ", "//JBS判断（if）是否为1还是其它", "\n    call I2C_SDAL   ", "//temp非1", "\n    JBs status,z\n    call I2C_SDAH\n    RLC SendByte\n    \n    \n    \n    ", "nop", "\n    \n    call I2C_SCLH   ", "//时钟拉高，开始接受数据", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    call I2C_SCLL     ", "//时钟拉低", "\n    \n    DJZ count       ", "//count开始-1", "\n    JMP WLOOP_for    ", "//非0时执行下的条件", "\n    ", "//ret                //为0时执行的条件", "\n    \n    \n    ", "nop", "\n    ", "nop", "\n    \n    call I2C_SDAH   ", "//发送完数据，释放数据线，准备接受应答", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "//nop", "\n    call I2C_SCLH   ", "//拉高时钟", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n", "//    call I2C_SCLH", "\n    ", "//判断SDA是否为高", "\n", "if", " ", "1", "\n    ", "bs", "    ioc5, I2C_SDA\n    jbs    port5, I2C_SDA\n    call I2C_SendACK  \n    jbc    port5, I2C_SDA\n    call I2C_SendNACK      \n", "else", "    \n    JBS status,Z\n    call I2C_SendACK     ", "//SDA非1的时候执行", "\n    JBC status,Z\n    call I2C_SendNACK        ", "//SDA为1的时候执行", "\n", "endif", "\n\n    bc    ioc5, I2C_SDA    \n    ", "//拉低SCL时钟", "\n    call I2C_SCLL\n    \n    ", "nop", "\n    ", "nop", "\n    \n    ret\n    \n", "//读取数据Read", "\n", "I2C_RByte:", "\n    clr ReceiveByte \n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n     \n    call I2C_SDAH   ", "//设置数据线的输入方式", "\n    \n    ", "//开始for循环", "\n    ", "MOV", " a,", "@8", "\n    ", "MOV", " count,a\n    \n", "RLOOP_for:", "   ", "//循环", "\n    \n    call I2C_SCLL   ", "//拉低时钟线，准备接受数据", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    call I2C_SCLH  ", "//拉高时钟线，使数据有效", "\n    \n    RLC ReceiveByte     \n    \n    ", "//if循环", "\n    JBS I2C_SDA,", "1", "\n    ", "MOV", " a,", "@10           //SDA非1的时候执行", "\n    INC ReceiveByte         ", "//SDA为1的时候执行    ", "\n        \n    \n    DJZ count       ", "//count开始-1", "\n    JMP RLOOP_for\n", "//    ret             //for循环结束", "\n    \n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    ", "nop", "\n    \n    call I2C_SCLL     ", "//拉低时钟线", "\n    \n    ", "nop", "\n    ", "nop", "\n    \n    ret     ", "//存储数据在ReceiveByte(读取出来的数据)", "\n", "endif", "                                        \n\n", "HardInterupt:", "    \n    reti\n", "\n", "//i2cre.inc", "\n", "ACK", "          ", "EQU", " ", "0x10", "\n", "ReceiveByte", "  ", "EQU", " ", "0x11", "\n", "count", "        ", "EQU", " ", "0x12", "\n", "temp", "         ", "EQU", " ", "0x13", "\n", "SendByte", "       ", "EQU", " ", "0x14", "\n", "retc", "         ", "EQU", " ", "0x15", "\n\n", "//port5", "\n", "I2C_SCL", "        ", "equ", " ", "0", "\n", "I2C_SDA", "        ", "equ", " ", "1", "\n", "\n", "\n", "写不出Read波形", "\n", "怎么写Read波形？网上的例子我找了，需要汇编语言的（有的我也找到，但是看不懂或者用我的MCU写不出来！），需要大家帮忙，非常感谢，如果想要一起学习的话也可以哈！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以这样来实现&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;patt &amp;#61; []\n\nfor i in range(10):\n    temp &amp;#61; []\n    temp1 &amp;#61; []\n    for j in range(3):\n        temp.append(j)\n    temp2 &amp;#61; [i]\n    temp.append(temp1)\n    temp.append(temp2)\n    patt.append(temp)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["Python创建数组问题", ["在pycharm中如何实现创建以下例子的数组：", "\n\n", "\n例：patt = [\n    [[1, 2, 5], [0]],\n    [[1, 3, 4], [1]],\n    [[1, 6, 2], [1]],\n    [[1, 5, 1], [0]],\n    [[1, 8, 4], [1]]\n]\n", "\n\n", "\n这个是要创建的数组，array_in共189*21行，12列；array_out共189*21行，1列：\npatt_1 = [\n    [[array_in[0][0], array_in[0][1], array_in[0][2], array_in[0][3], array_in[0][4], array_in[0][5],\n      array_in[0][6], array_in[0][7], array_in[0][8],\n      array_in[0][9], array_in[0][10], array_in[0][11]], [array_out[0][1]]]\n\n]"]], "Tag": "程序设计"}
{"Answer": "问题解决，应该是visual studio code的问题，换一个IDE就ok", "Konwledge_Point": "通过例子学习", "Question": ["pytorch  RuntimeError: already started", ["在visual studio code 中调试pytorch代码（debug）跳出错误 RuntimeError: already started", "\n\n", "跑的是pytorch官方", "例子", "\n\n", "当单步执行到", "\n\n", "inputs, classes = next(iter(dataloaders['train']))\n", "\n\n", "时候出错，错误提示如下", "\n\n", "E00012.128: Exception escaped from start_client\n\n            Traceback (most recent call last):\n              File \"/home/zeng/.vscode/extensions/ms-python.python-2019.3.6215/pythonFiles/lib/python/ptvsd/log.py\", line 110, in g\n                return f(*args, **kwargs)\n              File \"/home/zeng/.vscode/extensions/ms-python.python-2019.3.6215/pythonFiles/lib/python/ptvsd/pydevd_hooks.py\", line 74, in start_client\n                sock, start_session = daemon.start_client((host, port))\n              File \"/home/zeng/.vscode/extensions/ms-python.python-2019.3.6215/pythonFiles/lib/python/ptvsd/daemon.py\", line 214, in start_client\n                with self.started():\n              File \"/home/zeng/anaconda3/lib/python3.6/contextlib.py\", line 81, in __enter__\n                return next(self.gen)\n              File \"/home/zeng/.vscode/extensions/ms-python.python-2019.3.6215/pythonFiles/lib/python/ptvsd/daemon.py\", line 110, in started\n                self.start()\n              File \"/home/zeng/.vscode/extensions/ms-python.python-2019.3.6215/pythonFiles/lib/python/ptvsd/daemon.py\", line 145, in start\n                raise RuntimeError('already started')\n            RuntimeError: already started\n", "\n\n", "请教这是什么情况呀？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是一个好问题&amp;#xff0c;我将上一次的辛烷值做了一个运算&amp;#xff0c;生成一个辛烷值区间&amp;#xff0c;进行预测&amp;#xff08;预测的元素是4个也罢&amp;#xff0c;2个也行&amp;#xff0c;本质都是类似的&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;公式如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/620360620256186.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;数据修改后为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/783896620256131.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;之后2个预测代码都要进行修改才行&lt;/p&gt;\n&lt;p&gt;第1个修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-typescript\"&gt;&lt;span class=\"hljs-comment\"&gt;%% 此程序为matlab编程实现的BP神经网络&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 清空环境变量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% clear&lt;/span&gt;\nclose all  &lt;span class=\"hljs-comment\"&gt;%关闭所有图形窗口&lt;/span&gt;\nclc\n\n&lt;span class=\"hljs-comment\"&gt;%%第一步 读取数据&lt;/span&gt;\ninput&amp;#61;X;   &lt;span class=\"hljs-comment\"&gt;%载入输入数据&lt;/span&gt;\noutput&amp;#61;Y;  &lt;span class=\"hljs-comment\"&gt;%载入输出数据&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第二步 设置训练数据和预测数据&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 注意要将指标变为列向量&lt;/span&gt;\ninput_train &amp;#61; input(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;,:)&amp;#39;;\noutput_train &amp;#61;output(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;,:)&amp;#39;;\ninput_test &amp;#61; input(&lt;span class=\"hljs-number\"&gt;41&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,:)&amp;#39;;\noutput_test &amp;#61;output(&lt;span class=\"hljs-number\"&gt;41&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,:)&amp;#39;;\n&lt;span class=\"hljs-comment\"&gt;%节点个数&lt;/span&gt;\ninputnum&amp;#61;&lt;span class=\"hljs-number\"&gt;401&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 输入层节点数量&lt;/span&gt;\nhiddennum&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 隐含层节点数量&lt;/span&gt;\noutputnum&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;% 输出层节点数量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%% 第三本 训练样本数据归一化&lt;/span&gt;\n[inputn,inputps]&amp;#61;mapminmax(input_train);&lt;span class=\"hljs-comment\"&gt;%归一化到[-1,1]之间&amp;#xff0c;inputps用来作下一次同样的归一化&lt;/span&gt;\n[outputn,outputps]&amp;#61;mapminmax(output_train);\n&lt;span class=\"hljs-comment\"&gt;%% 第四步 构建BP神经网络&lt;/span&gt;\nnet&amp;#61;newff(inputn,outputn,hiddennum,{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;tansig&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;purelin&amp;#39;&lt;/span&gt;},&lt;span class=\"hljs-string\"&gt;&amp;#39;trainlm&amp;#39;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;% 建立模型&amp;#xff0c;传递函数使用purelin&amp;#xff0c;采用梯度下降法训练&lt;/span&gt;\n\nW1&amp;#61; net. iw{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};                  &lt;span class=\"hljs-comment\"&gt;%输入层到中间层的权值&lt;/span&gt;\nB1 &amp;#61; net.b{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};                      &lt;span class=\"hljs-comment\"&gt;%中间各层神经元阈值&lt;/span&gt;\n\nW2 &amp;#61; net.lw{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};                   &lt;span class=\"hljs-comment\"&gt;%中间层到输出层的权值&lt;/span&gt;\nB2 &amp;#61; net. b{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;};                     &lt;span class=\"hljs-comment\"&gt;%输出层各神经元阈值&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第五步 网络参数配置&amp;#xff08; 训练次数&amp;#xff0c;学习速率&amp;#xff0c;训练目标最小误差等&amp;#xff09;&lt;/span&gt;\nnet.trainParam.epochs&amp;#61;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;         &lt;span class=\"hljs-comment\"&gt;% 训练次数&amp;#xff0c;这里设置为1000次&lt;/span&gt;\nnet.trainParam.lr&amp;#61;&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;;             &lt;span class=\"hljs-comment\"&gt;% 学习速率&amp;#xff0c;这里设置为0.01&lt;/span&gt;\nnet.trainParam.goal&amp;#61;&lt;span class=\"hljs-number\"&gt;0.00001&lt;/span&gt;;        &lt;span class=\"hljs-comment\"&gt;% 训练目标最小误差&amp;#xff0c;这里设置为0.00001&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第六步 BP神经网络训练&lt;/span&gt;\nnet&amp;#61;train(net,inputn,outputn);&lt;span class=\"hljs-comment\"&gt;%开始训练&amp;#xff0c;其中inputn,outputn分别为输入输出样本&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第七步 测试样本归一化&lt;/span&gt;\ninputn_test&amp;#61;mapminmax(&lt;span class=\"hljs-string\"&gt;&amp;#39;apply&amp;#39;&lt;/span&gt;,input_test,inputps); &lt;span class=\"hljs-comment\"&gt;% 对样本数据进行归一化&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第八步 BP神经网络预测&lt;/span&gt;\nan&amp;#61;sim(net,inputn_test);                           &lt;span class=\"hljs-comment\"&gt;%用训练好的模型进行仿真&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%% 第九步 预测结果反归一化与误差计算     &lt;/span&gt;\ntest_simu&amp;#61;mapminmax(&lt;span class=\"hljs-string\"&gt;&amp;#39;reverse&amp;#39;&lt;/span&gt;,an,outputps);        &lt;span class=\"hljs-comment\"&gt;%把仿真得到的数据还原为原始的数量级&lt;/span&gt;\nerror&amp;#61;test_simu-output_test;                       &lt;span class=\"hljs-comment\"&gt;%预测值和真实值的误差&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;%%第十步 真实值与预测值误差比较&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;units&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;normalized&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;position&amp;#39;&lt;/span&gt;,[&lt;span class=\"hljs-number\"&gt;0.119&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.38&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;])\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(output_test,&lt;span class=\"hljs-string\"&gt;&amp;#39;bo-&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(test_simu,&lt;span class=\"hljs-string\"&gt;&amp;#39;r*-&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(error,&lt;span class=\"hljs-string\"&gt;&amp;#39;square&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;MarkerFaceColor&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;期望值&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;预测值&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;误差&amp;#39;&lt;/span&gt;)\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;数据组数&amp;#39;&lt;/span&gt;)\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;样本值&amp;#39;&lt;/span&gt;)\ntitle(&lt;span class=\"hljs-string\"&gt;&amp;#39;BP神经网络测试集的预测值与实际值对比图&amp;#39;&lt;/span&gt;)\n\n[c,l]&amp;#61;&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(output_test);\nMAE1&amp;#61;sum(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(error))/l;\nMSE1&amp;#61;error*error&amp;#39;/l;\nRMSE1&amp;#61;MSE1^(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;-----------------------误差计算--------------------------&amp;#39;&lt;/span&gt;])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;隐含层节点数为&amp;#39;&lt;/span&gt;,num2str(hiddennum),&lt;span class=\"hljs-string\"&gt;&amp;#39;时的误差结果如下&amp;#xff1a;&amp;#39;&lt;/span&gt;])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;平均绝对误差MAE为&amp;#xff1a;&amp;#39;&lt;/span&gt;,num2str(MAE1)])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;α的均方误差MSE为&amp;#xff1a;       &amp;#39;&lt;/span&gt;,num2str(MSE1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:))])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;β的均方误差MSE为&amp;#xff1a;       &amp;#39;&lt;/span&gt;,num2str(MSE1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,:))])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;α的均方根误差RMSE为&amp;#xff1a;  &amp;#39;&lt;/span&gt;,num2str(RMSE1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:))])\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;([&lt;span class=\"hljs-string\"&gt;&amp;#39;β的均方根误差RMSE为&amp;#xff1a;  &amp;#39;&lt;/span&gt;,num2str(RMSE1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,:))])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第2个修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-typescript\"&gt;clc;\npredict_y &amp;#61; zeros(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;); % 初始化predict_y\npre_test&amp;#61;mapminmax(&lt;span class=\"hljs-string\"&gt;&amp;#39;apply&amp;#39;&lt;/span&gt;,new_X&lt;span class=\"hljs-comment\"&gt;(:,:)&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;,inputps);% 对预测数据进行归一化\nfor i &amp;#61; 1: 10\n    result &amp;#61; sim(net, pre_test(:,i));\n    predict_y(i,1) &amp;#61; result(1);\n    predict_y(i,2) &amp;#61; result(2);\nend\ndisp(&amp;#39;&lt;/span&gt;预测值为&amp;#xff1a;&lt;span class=\"hljs-string\"&gt;&amp;#39;)\npredict_y&amp;#61;predict_y&amp;#39;&lt;/span&gt;;\npredict_y&amp;#61;mapminmax(&lt;span class=\"hljs-string\"&gt;&amp;#39;reverse&amp;#39;&lt;/span&gt;,predict_y,outputps); %把预测结果还原\ndisp(predict_y)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;最终结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/897552620256184.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;中间细节部分希望看博客&amp;#xff08;目前大三下&amp;#xff0c;时间紧张&amp;#xff0c;但尽力写的详细吧QAQ&amp;#xff0c;有不清楚的可以继续问&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/qq_45550375/article/details/122955089\" id=\"textarea_1652025922840_1652026750001_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_45550375/article/details/122955089&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["bp神经网络预测的问题", ["问题遇到的现象和发生背景", "\n", "关于bp神经网络的预测问题，我看到了csp给出的代码，但是他给出的例子是预测值只有一个，我照葫芦画瓢，可是需要预测的值有两个，所以我照着他的代码写就没法执行，大家能告诉我我哪里错了吗？应该怎么写？", "\n", "问题相关代码，请勿粘贴截图", "\n", "这是csp给出的代码，他要预测的元素只有一个，然后是10条", "predict_y = zeros(10,1); % 初始化predict_y", "pre_test=mapminmax('apply',new_X(:,:)',inputps);% 对预测数据进行归一化", "for i = 1: 10", "    result = sim(net, pre_test(:,i));", "    predict_y(i) = result;", "end", "disp('预测值为：')", "predict_y=mapminmax('reverse',predict_y,outputps); %把预测结果还原", "disp(predict_y)", "\n", "这是我写的代码，我要预测的元素有两个，是两条", "predict_y = zeros(2,4); % 初始化predict_y", "pre_test=mapminmax('apply',new_X(:,:)',inputps);% 对预测数据进行归一化", "for i = 1: 2", "    result = sim(net, pre_test(:,i));", "    predict_y(i) = result;", "end", "disp('预测值为：')", "predict_y=mapminmax('reverse',predict_y,outputps); %把预测结果还原", "disp(predict_y)", "原文链接：", "https://blog.csdn.net/qq_45550375/article/details/122955089", "\n", "运行结果及报错内容", "\n", "无法执行赋值，因为左侧和右侧的元素数目不同。"]], "Tag": "程序设计"}
{"Answer": "我试了一下，如果你用window系统，在绝对路经中用双“\\\\\", 列如： srcImage = cv2.imread('C:\\\\\\\\Users\\\\\\\\fw\\\\\\\\Anaconda3\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\skimage\\\\\\\\data\\\\\\\\rocket.jpg')。 这因该没问题。", "Konwledge_Point": "通过例子学习", "Question": ["python opencv 图片前景与背景的分割，拜大神求如何改错", ["在网上找到了一个用Kmeans算法对图片前景与背景的分割的例子，很适合现在的学习，可一直有一个错误不会修改，跪求大神了。", "\n\n", "\n```# -*- coding: utf-8 -*-\nimport cv2\nimport numpy as np\nimport math\ndef panelAbstract(srcImage):\n    #   read pic shape\n    imgHeight,imgWidth = srcImage.shape[:2]\n    imgHeight = int(imgHeight);imgWidth = int(imgWidth)\n    # 均值聚类提取前景:二维转一维\n    imgVec = np.float32(srcImage.reshape((-1,3)))\n    criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER,10,1.0)\n    flags = cv2.KMEANS_RANDOM_CENTERS \n    label,clusCenter = cv2.kmeans(imgVec,2,None,criteria,10,flags)\n    clusCenter = np.uint8(clusCenter)\n    clusResult = clusCenter[label.flatten()]\n    imgres = clusResult.reshape((srcImage.shape))\n    imgres = cv2.cvtColor(imgres,cv2.COLOR_BGR2GRAY)\n    bwThresh = int((np.max(imgres)+np.min(imgres))/2)\n    _,thresh = cv2.threshold(imgres,bwThresh,255,cv2.THRESH_BINARY_INV)\n    threshRotate = cv2.merge([thresh,thresh,thresh])\n# 确定前景外接矩形\n    #find contours\n    contours = cv2.findContours(thresh,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)\n    minvalx = np.max([imgHeight,imgWidth]);maxvalx = 0\n    minvaly = np.max([imgHeight,imgWidth]);maxvaly = 0\n    maxconArea = 0;maxAreaPos = -1\n    for i in range(len(contours)):\n        if maxconArea < cv2.contourArea(contours[i]):\n            maxconArea = cv2.contourArea(contours[i])\n            maxAreaPos = i\n    objCont = contours[maxAreaPos]\n    # 旋转校正前景\n    rect = cv2.minAreaRect(objCont)\n    for j in range(len(objCont)):\n        minvaly = np.min([minvaly,objCont[j][0][0]])\n        maxvaly = np.max([maxvaly,objCont[j][0][0]])\n        minvalx = np.min([minvalx,objCont[j][0][1]])\n        maxvalx = np.max([maxvalx,objCont[j][0][1]])\n    if rect[2] <=-45:\n        rotAgl = 90 +rect[2]\n    else:\n        rotAgl = rect[2]\n    if rotAgl == 0:\n        panelImg = srcImage[minvalx:maxvalx,minvaly:maxvaly,:]\n    else:\n        rotCtr = rect[0]\n        rotCtr = (int(rotCtr[0]),int(rotCtr[1]))\n        rotMdl = cv2.getRotationMatrix2D(rotCtr,rotAgl,1)\n        imgHeight,imgWidth = srcImage.shape[:2]\n        #图像的旋转\n        dstHeight = math.sqrt(imgWidth *imgWidth + imgHeight*imgHeight)\n        dstRotimg = cv2.warpAffine(threshRotate,rotMdl,(int(dstHeight),int(dstHeight)))\n        dstImage = cv2.warpAffine(srcImage,rotMdl,(int(dstHeight),int(dstHeight)))\n        dstRotimg = cv2.cvtColor(dstRotimg,cv2.COLOR_BGR2GRAY)\n        _,dstRotBW = cv2.threshold(dstRotimg,127,255,0)\n        contours = cv2.findContours(dstRotBW,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)\n        maxcntArea = 0;maxAreaPos = -1\n        for i in range(len(contours)):\n            if maxcntArea < cv2.contourArea(contours[i]):\n                maxcntArea = cv2.contourArea(contours[i])\n                maxAreaPos = i\n        x,y,w,h = cv2.boundingRect(contours[maxAreaPos])\n        #提取前景：panel\n        panelImg = dstImage[int(y):int(y+h),int(x):int(x+w),:]\n\n    return panelImg\nif __name__==\"__main__\":\n    srcImage = cv2.imread('11.jpg')\n    a=panelAbstract(srcImage)\n    cv2.imshow('figa',a)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()  \n\n\n这是原地址https://blog.csdn.net/Dawn__Z/article/details/82115160\n报错如下（知道错是什么意思就是不会改）：Traceback (most recent call last):\n  File \"D:\\Workspaces\\MyEclipse 2015\\pythonTest\\src\\cc.py\", line 70, in \n    a=panelAbstract(srcImage)\n  File \"D:\\Workspaces\\MyEclipse 2015\\pythonTest\\src\\cc.py\", line 7, in panelAbstract\n    imgHeight,imgWidth = srcImage.shape[:2]\nAttributeError: 'NoneType' object has no attribute 'shape'\n"]], "Tag": "程序设计"}
{"Answer": "JS运行时，DOM节点尚不可用。你可以把JS放到后面，如下：\r\n\r\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\r\n&lt;html&gt;\r\n    &lt;head&gt;\r\n        &lt;title&gt;index.jsp&lt;/title&gt;\r\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ext-all.css\" /&gt;\r\n        &lt;script type=\"text/javascript\" src=\"adapter/ext/ext-base.js\"&gt;&lt;/script&gt;\r\n        &lt;script type=\"text/javascript\" src=\"ext-all.js\"&gt;&lt;/script&gt;\r\n        \r\n    &lt;/head&gt;\r\n    &lt;body&gt;\r\n        &lt;div id=\"grid\"&gt;&lt;/div&gt;\r\n        &lt;script type=\"text/javascript\"&gt;\r\n            var cm = new Ext.grid.ColumnModel([\r\n                {header: '编号', dataIndex: 'id'},\r\n                {header: '名称', dataIndex: 'name'},\r\n                {header: '描述', dataIndex: 'descn'}\r\n            ]);\r\n            var data = [\r\n                ['1', 'name1', 'descn1'],\r\n                ['2', 'name2', 'descn2'],\r\n                ['3', 'name3', 'descn3'],\r\n                ['4', 'name4', 'descn4'],\r\n                ['5', 'name5', 'descn5']\r\n            ];\r\n            var ds = new Ext.data.Store({\r\n                proxy: new Ext.data.MemoryProxy(data),\r\n                reader: new Ext.data.ArrayReader({}, [\r\n                    {name: 'id'},\r\n                    {name: 'name'},\r\n                    {name: 'descn'}\r\n                ])\r\n            });\r\n            ds.load();\r\n           \r\n            var grid = new Ext.grid.GridPanel({\r\n                el: 'grid',\r\n                ds: ds,\r\n                cm: cm\r\n            });\r\n            grid.render();\r\n        &lt;/script&gt;\r\n    &lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n这里我简单的都放到后面去了，只有把关键一句grid.render();放到后面即可，后面这个也一样。\r\n或者把你的JS放到Ext.ready里面\r\n\r\nExt.ready(function(){\r\n var cm = new Ext.grid.ColumnModel([\r\n                {header: '编号', dataIndex: 'id'},\r\n                {header: '名称', dataIndex: 'name'},\r\n                {header: '描述', dataIndex: 'descn'}\r\n            ]);\r\n            var data = [\r\n                ['1', 'name1', 'descn1'],\r\n                ['2', 'name2', 'descn2'],\r\n                ['3', 'name3', 'descn3'],\r\n                ['4', 'name4', 'descn4'],\r\n                ['5', 'name5', 'descn5']\r\n            ];\r\n            var ds = new Ext.data.Store({\r\n                proxy: new Ext.data.MemoryProxy(data),\r\n                reader: new Ext.data.ArrayReader({}, [\r\n                    {name: 'id'},\r\n                    {name: 'name'},\r\n                    {name: 'descn'}\r\n                ])\r\n            });\r\n            ds.load();\r\n           \r\n            var grid = new Ext.grid.GridPanel({\r\n                el: 'grid',\r\n                ds: ds,\r\n                cm: cm\r\n            });\r\n            grid.render();\r\n});", "Konwledge_Point": "通过例子学习", "Question": ["this.el.dom为空或不是对象", ["刚开始学习ext不久，照着书上写的例子，就是在页面显示一个表格。", "\n\n", "但是运行不起来，抛出了 “this.el.dom为空或不是对象” 的错误。自己已经在网上找过了，也试了很多方法还是不行。", "\n\n", "不想在浪费时间，所以来这里寻求帮助，希望知道的朋友指点一二，感激不尽。下面是我全部的代码。", "\n\n", " ", "\n\n", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">", "<html>", "    <head>", "        <title>index.jsp</title>", "        <link rel=\"stylesheet\" type=\"text/css\"", "            href=\"ExtJS/resources/css/ext-all.css\" />", "        <script type=\"text/javascript\" src=\"ExtJS/adapter/ext/ext-base.js\"></script>", "        <script type=\"text/javascript\" src=\"ExtJS/ext-all.js\"></script>", "        <script type=\"text/javascript\">", "        ", "            var cm = new Ext.grid.ColumnModel([", "                {header: '编号', dataIndex: 'id'},", "                {header: '名称', dataIndex: 'name'},", "                {header: '描述', dataIndex: 'descn'}", "            ]);", "            var data = [", "                ['1', 'name1', 'descn1'],", "                ['2', 'name2', 'descn2'],", "                ['3', 'name3', 'descn3'],", "                ['4', 'name4', 'descn4'],", "                ['5', 'name5', 'descn5']", "            ];", "            var ds = new Ext.data.Store({", "                proxy: new Ext.data.MemoryProxy(data),", "                reader: new Ext.data.ArrayReader({}, [", "                    {name: 'id'},", "                    {name: 'name'},", "                    {name: 'descn'}", "                ])", "            });", "            ds.load();", "            ", "            var grid = new Ext.grid.GridPanel({", "                el: 'grid',", "                ds: ds,", "                cm: cm", "            });", "            grid.render();", "    ", "        </script>", "    </head>", "    <body>", "        <div id=\"grid\"></div>", "    </body>", "</html>", "\n\n", " ", "\n\n", "补充一点，我用的ExtJS是2.3版本的，难道是版本的问题导致的吗？"]], "Tag": "程序设计"}
{"Answer": "不知道你使用的是哪个版本, 在bean的配置文件中加上namespace, spring要做检查的, 给个spring2.5的例子\r\n\r\n\r\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n\r\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n\txmlns:context=\"http://www.springframework.org/schema/context\"\r\n\txsi:schemaLocation=\"\r\n          http://www.springframework.org/schema/beans \r\n          http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\r\n          http://www.springframework.org/schema/aop \r\n          http://www.springframework.org/schema/aop/spring-aop-2.0.xsd\r\n          http://www.springframework.org/schema/tx \r\n          http://www.springframework.org/schema/tx/spring-tx-2.0.xsd\r\n          http://www.springframework.org/schema/context\r\n          http://www.springframework.org/schema/context/spring-context-2.5.xsd\"&gt;\r\n&lt;bean id=\"TheAction\" class=\"net.xiaxin.spring.qs.UpperAction\"&gt;\r\n&lt;property name=\"message\"&gt;\r\n&lt;value&gt;HeLLo&lt;/value&gt;\r\n&lt;/property&gt;\r\n&lt;/bean&gt; \r\n&lt;/beans&gt;", "Konwledge_Point": "通过例子学习", "Question": ["spring入门提问", ["运行spring程序需要哪些包的? 谢谢！", "\n\n", "第一天学习spring，按照《Spring开发指南》中的第一个例子。", "\n-- Action.java", "\npackage net.xiaxin.spring.qs;", "\n\n", "public interface Action {", "\n\n", "public String execute(String str);\n", "\n\n", "}", "\n\n", "-- UpperAction.java", "\npackage net.xiaxin.spring.qs;", "\n\n", "public class UpperAction implements Action {", "\n\n", "private String message;\n\npublic String getMessage() {\n\n    return message;\n}\n\npublic void setMessage(String string) {\n    message = string;\n}\n\npublic String execute(String str) {\n    return (getMessage() + str).toUpperCase();\n}\n", "\n\n", "}", "\n\n", "-- LowerAction.java", "\npackage net.xiaxin.spring.qs;", "\n\n", "public class LowerAction implements Action {", "\n\n", "private String message;\n\npublic String getMessage() {\n    return message;\n}\n\npublic void setMessage(String string) {\n    message = string;\n}\n\npublic String execute(String str) {\n    return (getMessage()+str).toLowerCase();\n}\n", "\n\n", "}", "\n\n", "-- bean.xml", "Spring Quick Start", "HeLLo", "\n\n", "-- SimpleTest.java", "\npackage test;", "\n\n", "import net.xiaxin.spring.qs.Action;", "\n\n", "import org.springframework.context.ApplicationContext;", "\nimport org.springframework.context.support.FileSystemXmlApplicationContext;", "\n\n", "public class SimpleTest {", "\n\n", "public static void main(String[] args) {\n    ApplicationContext ctx = new FileSystemXmlApplicationContext(\"bean.xml\");\n    Action action = (Action) ctx.getBean(\"TheAction\");\n    System.out.println(action.execute(\"Rod Johnson\"));\n\n}\n", "\n\n", "}", "\n\n", "报如下错误", "\n2008-8-12 10:25:52 org.springframework.context.support.AbstractApplicationContext prepareRefresh", "\n信息: Refreshing org.springframework.context.support.FileSystemXmlApplicationContext@1bf52a5: display name [org.springframework.context.support.FileSystemXmlApplicationContext@1bf52a5]; startup date [Tue Aug 12 10:25:51 CST 2008]; root of context hierarchy", "\n2008-8-12 10:25:52 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions", "\n信息: Loading XML bean definitions from file [D:\\project\\SpringTest\\bean.xml]", "\nException in thread \"main\" org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 1 in XML document from file [D:\\project\\SpringTest\\bean.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.", "\n    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:404)", "\n    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:342)", "\n    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)", "\n    at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)", "\n    at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:80)", "\n    at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)", "\n    at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:423)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:353)", "\n    at org.springframework.context.support.FileSystemXmlApplicationContext.(FileSystemXmlApplicationContext.java:140)", "\n    at org.springframework.context.support.FileSystemXmlApplicationContext.(FileSystemXmlApplicationContext.java:84)", "\n    at test.SimpleTest.main(SimpleTest.java:11)", "\nCaused by: org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.", "\n    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)", "\n    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)", "\n    at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)", "\n    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)", "\n    ... 14 more"]], "Tag": "程序设计"}
{"Answer": "https://www.cnblogs.com/massquantity/p/8908859.html\r\n\r\naa = np.arange(10)\r\nnp.where(aa,1,-1)\r\n相当于\r\naa = np.arange(10)\r\nnp.where(aa != 0,1,-1)", "Konwledge_Point": "通过例子学习", "Question": ["np.where这个函数不太理解", ["\n", "\n", "\n", "aa = np.arange(10)", "\nnp.where(aa,1,-1)", "\narray([-1,  1,  1,  1,  1,  1,  1,  1,  1,  1])  # 0为False，所以第一个输出-1", "\n", "\n", "\n", "\n\n", "疑问1，where函数的第一个参数为条件，把序列当成条件是什么意思？条件不是大于小于等这一类的吗？总之结果怎么来的", "\n\n", "\n", "\n", "\n", "np.where([[True,False], [True,True]],", "\n             [[1,2], [3,4]],", "\n             [[9,8], [7,6]])", "\narray([[1, 8],", "\n       [3, 4]])", "\n", "\n", "\n", "\n\n", "疑问2，[[True,False], [True,True]]为条件，满足条件输出 [[1,2], [3,4]],不满足输出 [[9,8], [7,6]]。（where函数的用法是这样的），结果是怎么来的", "\n\n", "\n", "\n", "\n", "np.where([[0, 1], [1, 0]])", "\n(array([0, 1]), array([1, 0]))", "\n上面这个例子条件中[[0,1],[1,0]]的真值为两个1，各自的第一维坐标为[0,1]，第二维坐标为[1,0] 。", "\n", "\n", "\n", "\n\n", "疑问3，这个结果和解释到底怎么来的", "\n\n", "\n", "\n", "\n", "a = np.arange(27).reshape(3,3,3)", "\na", "\narray([[[ 0,  1,  2],", "\n        [ 3,  4,  5],", "\n        [ 6,  7,  8]],", "\n", "\n", "\n", "\n\n", "   [[ 9, 10, 11],\n    [12, 13, 14],\n    [15, 16, 17]],\n\n   [[18, 19, 20],\n    [21, 22, 23],\n    [24, 25, 26]]])\n", "\n\n", "\n", "\n", "\n", "np.where(a > 5)", "\n(array([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]),", "\n array([2, 2, 2, 0, 0, 0, 1, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 2, 2, 2]),", "\n array([0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2]))", "\n", "\n", "\n", "\n\n", "疑问4  这个结果得到的索引值也是完全看不懂"]], "Tag": "程序设计"}
{"Answer": "能不能正常启动？或许是hdfs://MASTER:9000这个所在的xml格式或者其他地方有错误", "Konwledge_Point": "通过例子学习", "Question": ["一个hadoop问题", ["刚刚学习hadoop，搭建起集群在运行hadoop自带例子时报如下错误。请高手帮我解决下", "hadoop jar c:/hadoop/hadoop-0.20.2/hadoop-0.20.2-examples.jar wordcount in/test.txt out 12/06/08 15:57:08 INFO input.FileInputFormat: Total input paths to process : 1 12/06/08 15:57:08 INFO mapred.JobClient: Running job: job_201206081518_0001 12/06/08 15:57:09 INFO mapred.JobClient: map 0% reduce 0% 12/06/08 15:57:18 INFO mapred.JobClient: map 100% reduce 0% 12/06/08 15:57:32 INFO mapred.JobClient: Task Id : attempt_201206081518_0001_r_000000_0, Status : FAILED java.io.IOException: Can not get the relative path: base = hdfs://MASTER:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_0 child = hdfs://master:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_0/part-r-00000 at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getFinalPath(FileOutputCommitter.java:200) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:146) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:165) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitTask(FileOutputCommitter.java:118) at org.apache.hadoop.mapred.Task.commit(Task.java:779) at org.apache.hadoop.mapred.Task.done(Task.java:691) at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:414) at org.apache.hadoop.mapred.Child.main(Child.java:170) 12/06/08 15:57:47 INFO mapred.JobClient: Task Id : attempt_201206081518_0001_r_000000_1, Status : FAILED java.io.IOException: Can not get the relative path: base = hdfs://MASTER:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_1 child = hdfs://master:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_1/part-r-00000 at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getFinalPath(FileOutputCommitter.java:200) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:146) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:165) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitTask(FileOutputCommitter.java:118) at org.apache.hadoop.mapred.Task.commit(Task.java:779) at org.apache.hadoop.mapred.Task.done(Task.java:691) at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:414) at org.apache.hadoop.mapred.Child.main(Child.java:170) 12/06/08 15:58:02 INFO mapred.JobClient: Task Id : attempt_201206081518_0001_r_000000_2, Status : FAILED java.io.IOException: Can not get the relative path: base = hdfs://MASTER:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_2 child = hdfs://master:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_2/part-r-00000 at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getFinalPath(FileOutputCommitter.java:200) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:146) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.moveTaskOutputs(FileOutputCommitter.java:165) at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitTask(FileOutputCommitter.java:118) at org.apache.hadoop.mapred.Task.commit(Task.java:779) at org.apache.hadoop.mapred.Task.done(Task.java:691) at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:414) at org.apache.hadoop.mapred.Child.main(Child.java:170) 12/06/08 15:58:20 INFO mapred.JobClient: Job complete: job_201206081518_0001 12/06/08 15:58:20 INFO mapred.JobClient: Counters: 12 12/06/08 15:58:20 INFO mapred.JobClient: Job Counters 12/06/08 15:58:20 INFO mapred.JobClient: Launched reduce tasks=4 12/06/08 15:58:20 INFO mapred.JobClient: Launched map tasks=1 12/06/08 15:58:20 INFO mapred.JobClient: Data-local map tasks=1 12/06/08 15:58:20 INFO mapred.JobClient: Failed reduce tasks=1 12/06/08 15:58:20 INFO mapred.JobClient: FileSystemCounters 12/06/08 15:58:21 INFO mapred.JobClient: HDFS_BYTES_READ=25 12/06/08 15:58:21 INFO mapred.JobClient: FILE_BYTES_WRITTEN=93 12/06/08 15:58:21 INFO mapred.JobClient: Map-Reduce Framework 12/06/08 15:58:21 INFO mapred.JobClient: Combine output records=5 12/06/08 15:58:21 INFO mapred.JobClient: Map input records=2 12/06/08 15:58:21 INFO mapred.JobClient: Spilled Records=5 12/06/08 15:58:21 INFO mapred.JobClient: Map output bytes=45 12/06/08 15:58:21 INFO mapred.JobClient: Combine input records=5 12/06/08 15:58:21 INFO mapred.JobClient: Map output records=5", "问题补充", "我觉得是hdfs://MASTER:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_0 child = hdfs://master:9000/user/Administrator/out/_temporary/_attempt_201206081518_0001_r_000000_0/part-r-00000 at ", "master 大小写的问题。但是不知道在哪里改?"]], "Tag": "程序设计"}
{"Answer": "[b]引入下面包org.w3c.dom[/b]\r\nimport org.w3c.dom.*", "Konwledge_Point": "通过例子学习", "Question": ["问一个jbpm的入门级问题，在线急等。。。", ["最近在学习jbpm，看了好多教程。试着编了一个例子", "\n首先创建一个web project ，在web project中创建了一个jbpm4 process definition", "\n然后写了定义了一下流程。", "\n然后写了一个index.jsp,里面大概就写了一行代码：", "\nProcessEngine processEngine = Configuration.getProcessEngine();", "\n结果访问的时候报错了。", "\n\n", "java.lang.NullPointerException", "\nat org.jbpm.pvm.internal.util.XmlUtil.attribute(XmlUtil.java:289)", "\nat org.jbpm.pvm.internal.cfg.ConfigurationParser.parseDocument(ConfigurationParser.java:64)", "\nat org.jbpm.pvm.internal.xml.Parser.execute(Parser.java:396)", "\nat org.jbpm.pvm.internal.xml.Parse.execute(Parse.java:158)", "\n.......", "\n但是我创建了一个测试的java类:", "\npublic class JbpmTest {", "\n\n", "/**", "\n\n", "\n", "@param args\n*/\npublic static void main(String[] args) {\n// TODO Auto-generated method stub\nProcessEngine processEngine = Configuration.getProcessEngine();\n}", "\n", "}", "\n运行的时候控制台打出来的信息应该是正常启动的 啊", "\n后台信息如下：", "\n\n", "21:28:11,457 FIN | [WireContext] eagerly initializing org.jbpm.pvm.internal.id.DatabaseIdComposer", "\n21:28:11,533 INF | [Environment] Hibernate 3.3.1.GA", "\n21:28:11,553 INF | [Environment] hibernate.properties not found", "\n21:28:11,578 INF | [Environment] Bytecode provider name : javassist", "\n21:28:11,588 INF | [Environment] using JDK 1.4 java.sql.Timestamp handling", "\n21:28:11,728 INF | [Configuration] configuring from resource: jbpm.hibernate.cfg.xml", "\n21:28:11,728 INF | [Configuration] Configuration resource: jbpm.hibernate.cfg.xml", "\n21:28:11,933 INF | [Configuration] Reading mappings from resource : jbpm.repository.hbm.xml", "\n21:28:12,283 INF | [Configuration] Reading mappings from resource : jbpm.execution.hbm.xml", "\n21:28:12,518 INF | [Configuration] Reading mappings from resource : jbpm.history.hbm.xml", "\n21:28:12,601 INF | [Configuration] Reading mappings from resource : jbpm.task.hbm.xml", "\n21:28:12,656 INF | [Configuration] Reading mappings from resource : jbpm.identity.hbm.xml", "\n21:28:12,676 INF | [Configuration] Configured SessionFactory: null", "\n21:28:12,741 INF | [DriverManagerConnectionProvider] Using Hibernate built-in connection pool (not for production use!)", "\n21:28:12,741 INF | [DriverManagerConnectionProvider] Hibernate connection pool size: 20", "\n21:28:12,741 INF | [DriverManagerConnectionProvider] autocommit mode: false", "\n21:28:12,821 INF | [DriverManagerConnectionProvider] using driver: org.hsqldb.jdbcDriver at URL: jdbc:hsqldb:mem:.", "\n21:28:12,821 INF | [DriverManagerConnectionProvider] connection properties: {user=sa, password=****}", "\n21:28:13,191 INF | [Dialect] Using dialect: org.hibernate.dialect.HSQLDialect", "\n21:28:13,201 INF | [TransactionFactoryFactory] Using default transaction strategy (direct JDBC transactions)", "\n21:28:13,201 INF | [TransactionManagerLookupFactory] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)", "\n21:28:13,206 INF | [ASTQueryTranslatorFactory] Using ASTQueryTranslatorFactory", "\n21:28:13,431 INF | [SessionFactoryImpl] building session factory", "\n21:28:14,381 INF | [SessionFactoryObjectFactory] Not binding factory to JNDI, no JNDI name configured", "\n21:28:14,406 INF | [SchemaExport] Running hbm2ddl schema export", "\n21:28:14,406 INF | [SchemaExport] exporting generated schema to database", "\n21:28:14,450 INF | [SchemaExport] schema export complete", "\n21:28:15,070 FIN | [HibernateSessionResource] ----- beginning hibernate tx 17988434 --------------------------------------------------------", "\n21:28:15,090 FIN | [SQL]", "\n  select", "\n  top ? propertyim0_.KEY_ as KEY1_2_,", "\n  propertyim0_.VERSION_ as VERSION2_2_,", "\n  propertyim0_.VALUE_ as VALUE3_2_", "\n  from", "\n  JBPM4_PROPERTY propertyim0_", "\n21:28:15,135 FIN | [SQL]", "\n  select", "\n  this_.KEY_ as KEY1_2_0_,", "\n  this_.VERSION_ as VERSION2_2_0_,", "\n  this_.VALUE_ as VALUE3_2_0_", "\n  from", "\n  JBPM4_PROPERTY this_", "\n  where", "\n  this_.KEY_=?", "\n21:28:15,135 FST | [StringType] binding 'next.dbid' to parameter: 1", "\n21:28:15,135 FIN | [SQL]", "\n  select", "\n  this_.KEY_ as KEY1_2_0_,", "\n  this_.VERSION_ as VERSION2_2_0_,", "\n  this_.VALUE_ as VALUE3_2_0_", "\n  from", "\n  JBPM4_PROPERTY this_", "\n  where", "\n  this_.KEY_=?", "\n21:28:15,135 FST | [StringType] binding 'next.dbid' to parameter: 1", "\n21:28:15,185 FIN | [SQL]", "\n  insert", "\n  into", "\n  JBPM4_PROPERTY", "\n  (VERSION_, VALUE_, KEY_)", "\n  values", "\n  (?, ?, ?)", "\n21:28:15,185 FST | [IntegerType] binding '0' to parameter: 1", "\n21:28:15,185 FST | [StringType] binding '1' to parameter: 2", "\n21:28:15,185 FST | [StringType] binding 'next.dbid' to parameter: 3", "\n21:28:15,190 FIN | [SQL]", "\n  select", "\n  this_.KEY_ as KEY1_2_0_,", "\n  this_.VERSION_ as VERSION2_2_0_,", "\n  this_.VALUE_ as VALUE3_2_0_", "\n  from", "\n  JBPM4_PROPERTY this_", "\n  where", "\n  this_.KEY_=?", "\n21:28:15,190 FST | [StringType] binding 'db.version' to parameter: 1", "\n21:28:15,190 INF | [CheckDbCmd] jBPM version info: library[4.3], schema[null]", "\n21:28:15,195 FIN | [HibernateSessionResource] ----- committing hibernate tx 25209015 -------------------------------------------------------", "\n\n", "请问着到底是什么问题，我怀疑是jsp里面引用的jar报出错了，但不知道是那个,大家帮忙啊"]], "Tag": "程序设计"}
{"Answer": "访问的地址应该是 http://localhost:3000/ ，不要死板的把 Tomcat 之类的部署方式照搬到其他语言上，何况对于那种方式估计也是一知半解", "Konwledge_Point": "通过例子学习", "Question": ["寻求帮助，关于Rails的路由问题.", ["在校生大三生,一直做JEE的项目,由于对Ruby的兴趣,买了本<<rails cookbook=\"\">>,按照例子想做个Demo,刚接触由于不太熟悉，在NetBeans中开发,服务启动后:在http://localhost:3000/WebList", "出错:", "Routing Error", "No route matches \"/WebList\" with {:method=>:get}", "以下是目录与代码:(项目名为WebList)", "~WebList/app/models/people.rb", "--------------------------------", "class People<activerecord::base <br=\"\">  ", "end", "--------------------------------", "~WebList/app/views/index.rhtml", "--------------------------------", "<%=flash[:notice]%>", " 建立People", "<form method=\"post\" action=\"create\">", "  ", "Name:", "  <%=text_field \"people\",\"name\",\"size\"=>20%>", "   ", "Email:", "  <%=text_field \"people\",\"email\",\"size\"=>20%>", "   ", "Phone:", "  <%=text_field \"people\",\"phone\",\"size\"=>20%>", "  <input type=\"submit\" value=\"Save\">", "</form>", "---------------------------------", "WebList/app/controllers/people_controllers.rb", "----------------------------------", "def create", "  @people=People.new(params[:people])", "  if @people.save", "    flash[:notice]=\"Ok,it's will be created!", "\"", "    redirect_to:action =>'list'", "  else", "    flash[:notice]=\"失败了\"", "    render:action =>'new'", "  end", "end", "--------------------------------------", "WebList/db/schema.rb", "----------------------------------------", "ActiveRecord::Schema.define(:version => 1) do", "    create_table \"people\",force => true do |t|", "      t.column \"name\",:string", "      t.column \"email\",string", "      t.column \"phone\",string", "    end", "end", "-----------------------------------------", "一切 ok,就是往数据库里写三个字段，可是问题来了，在config中不知道怎么配置这个路由,希望大家帮帮我，谢谢!~", "问题补充", "苹果侠 写道", "应该不需要做什么特别route设置呀，你是用netbeans自带的glashfish启动应用的吗？", "我使用的是rails自带的那个服务器啊。", "您能提供以下具体的解决方案么?谢谢", "问题补充", "nan1nan1 写道", "cookbook系列不是教你开发的，都是提供一些解决具体问题的tip。", "rails入门可以看看 敏捷开发 那本。", "引用", "\n", "由于对Ruby的兴趣,买了本<<rails cookbook=\"\">>", "\n", "要是对Ruby感兴趣，未必学rails哦", "主要是想用Ruby做点东西出来。呵呵~", "问题补充", "hozaka 写道", "访问的地址应该是 http://localhost:3000/ ，不要死板的把 Tomcat 之类的部署方式照搬到其他语言上，何况对于那种方式估计也是一知半解", "谢了。学到了~", "还在学生学习阶段，以后还请多多帮助~!", "问题补充", "苹果侠 写道", "你用rails自带的webrick的话，用http://localhost:3000/就可以了。", "那么那个路由配置文件不用自己手动配置吗?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就是提示中那个函数在提示中那个dll里面找不到。&lt;/p&gt;\n&lt;p&gt;查看xxx.dll中导出了哪些函数&amp;#xff1a;&lt;br /&gt;dumpbin.exe /exports xxx.dll&lt;/p&gt;\n&lt;p&gt;查看“乱码”函数名对应的函数原型&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;pragma&lt;/span&gt; comment(lib,&lt;span class=\"hljs-string\"&gt;&amp;#34;imagehlp&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;ImageHlp.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; dsn[&lt;span class=\"hljs-number\"&gt;8192&lt;/span&gt;];\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; **argv)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (argc&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)  {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Usage:       %s DecorateSymbolName\\n  to UnDecorateSymbolName.\\n&amp;#34;&lt;/span&gt;,argv[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;For example: %s ??4COleDateTime&amp;#64;&amp;#64;QAEABV0&amp;#64;N&amp;#64;Z\\n&amp;#34;&lt;/span&gt;,argv[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;public: class COleDateTime const &amp;amp; __thiscall COleDateTime::operator&amp;#61;(double)\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;UnDecorateSymbolName&lt;/span&gt;(argv[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],dsn,&lt;span class=\"hljs-number\"&gt;8192&lt;/span&gt;,UNDNAME_COMPLETE)) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;UnDecorateSymbolName %s ERROR %08lx!&amp;#34;&lt;/span&gt;,argv[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],&lt;span class=\"hljs-built_in\"&gt;GetLastError&lt;/span&gt;());\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,dsn);\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["无法定位程序输入点 于动态链接库opencv_highgui2412d.dll", ["最近在学习CUDA，我是在windows系统下的visual stdio2019下运行的cuda by example一书中的程序示例遇到的问题，安装的opencv2.4.12，按照一般配置步骤配置好后，执行程序出现以下报错，查看报错的“无法定位程序输入点 于动态链接库opencv_highgui2412d.dll”，该dll我文件在目录下，之前配置的时候环境变量也加了，不知道在路径加进去、文件也有的情况下，为啥会出现这种情况，不管我把这个文件复制到那个路径下，执行都会报这个错。有遇到过同样问题的前辈可以指点一下嘛~", "opencv环境变量配置好了：", "\n", "Visual stdio2019内的库目录配置，附加依赖项名字也都加进去了：", "\n", "\n", "\n", "程序代码：（就是cuda by example书中第六章例子）", "\n", "/*\n * Copyright 1993-2010 NVIDIA Corporation.  All rights reserved.\n *\n * NVIDIA Corporation and its licensors retain all intellectual property and\n * proprietary rights in and to this software and related documentation.\n * Any use, reproduction, disclosure, or distribution of this software\n * and related documentation without an express license agreement from\n * NVIDIA Corporation is strictly prohibited.\n *\n * Please refer to the applicable NVIDIA end user license agreement (EULA)\n * associated with this source code for terms and conditions that govern\n * your use of this NVIDIA software.\n *\n */", "\n\n\n", "#", "include", " ", "\"cuda.h\"", "\n", "#", "include", " ", "\"D:/exercise/cuda_demo/common/book.h\"", "\n", "#", "include", " ", "\"D:/exercise/cuda_demo/common/image.h\"", "\n\n", "#", "define", " DIM 1024", "\n", "#", "define", " PI 3.1415926535897932f", "\n", "#", "define", " MAX_TEMP 1.0f", "\n", "#", "define", " MIN_TEMP 0.0001f", "\n", "#", "define", " SPEED   0.25f", "\n\n ", "// these exist on the GPU side", "\ntexture<", "float", ">  texConstSrc;\ntexture<", "float", ">  texIn;\ntexture<", "float", ">  texOut;\n\n\n\n", "// this kernel takes in a 2-d array of floats", "\n", "// it updates the value-of-interest by a scaled value based", "\n", "// on itself and its nearest neighbors", "\n", "__global__ ", "void", " ", "blend_kernel", "(", "float", "* dst,\n    ", "bool", " dstOut)", " ", "{\n    ", "// map from threadIdx/BlockIdx to pixel position", "\n    ", "int", " x = threadIdx.x + blockIdx.x * blockDim.x;\n    ", "int", " y = threadIdx.y + blockIdx.y * blockDim.y;\n    ", "int", " offset = x + y * blockDim.x * gridDim.x;\n\n    ", "int", " left = offset - ", "1", ";\n    ", "int", " right = offset + ", "1", ";\n    ", "if", " (x == ", "0", ")   left++;\n    ", "if", " (x == DIM - ", "1", ") right--;\n\n    ", "int", " top = offset - DIM;\n    ", "int", " bottom = offset + DIM;\n    ", "if", " (y == ", "0", ")   top += DIM;\n    ", "if", " (y == DIM - ", "1", ") bottom -= DIM;\n\n    ", "float", "   t, l, c, r, b;\n    ", "if", " (dstOut) {\n        t = ", "tex1Dfetch", "(texIn, top);\n        l = ", "tex1Dfetch", "(texIn, left);\n        c = ", "tex1Dfetch", "(texIn, offset);\n        r = ", "tex1Dfetch", "(texIn, right);\n        b = ", "tex1Dfetch", "(texIn, bottom);\n\n    }\n    ", "else", " {\n        t = ", "tex1Dfetch", "(texOut, top);\n        l = ", "tex1Dfetch", "(texOut, left);\n        c = ", "tex1Dfetch", "(texOut, offset);\n        r = ", "tex1Dfetch", "(texOut, right);\n        b = ", "tex1Dfetch", "(texOut, bottom);\n    }\n    dst[offset] = c + SPEED * (t + b + r + l - ", "4", " * c);\n}\n\n", "// NOTE - texOffsetConstSrc could either be passed as a", "\n", "// parameter to this function, or passed in __constant__ memory", "\n", "// if we declared it as a global above, it would be", "\n", "// a parameter here: ", "\n", "// __global__ void copy_const_kernel( float *iptr,", "\n", "//                                    size_t texOffset )", "\n", "__global__ ", "void", " ", "copy_const_kernel", "(", "float", "* iptr)", " ", "{\n    ", "// map from threadIdx/BlockIdx to pixel position", "\n    ", "int", " x = threadIdx.x + blockIdx.x * blockDim.x;\n    ", "int", " y = threadIdx.y + blockIdx.y * blockDim.y;\n    ", "int", " offset = x + y * blockDim.x * gridDim.x;\n\n    ", "float", " c = ", "tex1Dfetch", "(texConstSrc, offset);\n    ", "if", " (c != ", "0", ")\n        iptr[offset] = c;\n}\n\n", "// globals needed by the update routine", "\n", "struct", " ", "DataBlock", " {\n    ", "unsigned", " ", "char", "* output_bitmap;\n    ", "float", "* dev_inSrc;\n    ", "float", "* dev_outSrc;\n    ", "float", "* dev_constSrc;\n    IMAGE* bitmap;\n\n    cudaEvent_t     start, stop;\n    ", "float", "           totalTime;\n    ", "float", "           frames;\n};\n\n", "void", " ", "anim_gpu", "(DataBlock * d, ", "int", " ticks)", " ", "{\n\n}\n\n", "// clean up memory allocated on the GPU", "\n", "void", " ", "cleanup", "(DataBlock * d)", " ", "{\n    ", "cudaUnbindTexture", "(texIn);\n    ", "cudaUnbindTexture", "(texOut);\n    ", "cudaUnbindTexture", "(texConstSrc);\n    ", "HANDLE_ERROR", "(", "cudaFree", "(d->dev_inSrc));\n    ", "HANDLE_ERROR", "(", "cudaFree", "(d->dev_outSrc));\n    ", "HANDLE_ERROR", "(", "cudaFree", "(d->dev_constSrc));\n\n    ", "HANDLE_ERROR", "(", "cudaEventDestroy", "(d->start));\n    ", "HANDLE_ERROR", "(", "cudaEventDestroy", "(d->stop));\n}\n\n\n", "int", " ", "main", "(", "void", ")", " ", "{\n    DataBlock   data;\n    ", "IMAGE ", "bitmap_image", "(DIM, DIM)", ";\n    data.bitmap = &bitmap_image;\n    data.totalTime = ", "0", ";\n    data.frames = ", "0", ";\n    ", "HANDLE_ERROR", "(", "cudaEventCreate", "(&data.start));\n    ", "HANDLE_ERROR", "(", "cudaEventCreate", "(&data.stop));\n\n    ", "int", " imageSize = bitmap_image.", "image_size", "();\n\n    ", "HANDLE_ERROR", "(", "cudaMalloc", "((", "void", "**)& data.output_bitmap,\n        imageSize));\n\n    ", "// assume float == 4 chars in size (ie rgba)", "\n    ", "HANDLE_ERROR", "(", "cudaMalloc", "((", "void", "**)& data.dev_inSrc,\n        imageSize));\n    ", "HANDLE_ERROR", "(", "cudaMalloc", "((", "void", "**)& data.dev_outSrc,\n        imageSize));\n    ", "HANDLE_ERROR", "(", "cudaMalloc", "((", "void", "**)& data.dev_constSrc,\n        imageSize));\n\n    ", "HANDLE_ERROR", "(", "cudaBindTexture", "(", "NULL", ", texConstSrc,\n        data.dev_constSrc,\n        imageSize));\n\n    ", "HANDLE_ERROR", "(", "cudaBindTexture", "(", "NULL", ", texIn,\n        data.dev_inSrc,\n        imageSize));\n\n    ", "HANDLE_ERROR", "(", "cudaBindTexture", "(", "NULL", ", texOut,\n        data.dev_outSrc,\n        imageSize));\n\n    ", "// intialize the constant data", "\n    ", "float", "* temp = (", "float", "*)", "malloc", "(imageSize);\n    ", "for", " (", "int", " i = ", "0", "; i < DIM * DIM; i++) {\n        temp[i] = ", "0", ";\n        ", "int", " x = i % DIM;\n        ", "int", " y = i / DIM;\n        ", "if", " ((x > ", "300", ") && (x < ", "600", ") && (y > ", "310", ") && (y < ", "601", "))\n            temp[i] = MAX_TEMP;\n    }\n    temp[DIM * ", "100", " + ", "100", "] = (MAX_TEMP + MIN_TEMP) / ", "2", ";\n    temp[DIM * ", "700", " + ", "100", "] = MIN_TEMP;\n    temp[DIM * ", "300", " + ", "300", "] = MIN_TEMP;\n    temp[DIM * ", "200", " + ", "700", "] = MIN_TEMP;\n    ", "for", " (", "int", " y = ", "800", "; y < ", "900", "; y++) {\n        ", "for", " (", "int", " x = ", "400", "; x < ", "500", "; x++) {\n            temp[x + y * DIM] = MIN_TEMP;\n        }\n    }\n    ", "HANDLE_ERROR", "(", "cudaMemcpy", "(data.dev_constSrc, temp,\n        imageSize,\n        cudaMemcpyHostToDevice));\n\n    ", "// initialize the input data", "\n    ", "for", " (", "int", " y = ", "800", "; y < DIM; y++) {\n        ", "for", " (", "int", " x = ", "0", "; x < ", "200", "; x++) {\n            temp[x + y * DIM] = MAX_TEMP;\n        }\n    }\n    ", "HANDLE_ERROR", "(", "cudaMemcpy", "(data.dev_inSrc, temp,\n        imageSize,\n        cudaMemcpyHostToDevice));\n    ", "free", "(temp);\n\n    ", "int", " ticks = ", "0", ";\n    bitmap_image.", "show_image", "(", "30", ");\n    ", "while", " (", "1", ")\n    {\n        ", "HANDLE_ERROR", "(", "cudaEventRecord", "(data.start, ", "0", "));\n        ", "dim3    ", "blocks", "(DIM / ", "16", ", DIM / ", "16", ")", ";\n        ", "dim3    ", "threads", "(", "16", ", ", "16", ")", ";\n        IMAGE * bitmap = data.bitmap;\n\n        ", "// since tex is global and bound, we have to use a flag to", "\n        ", "// select which is in/out per iteration", "\n        ", "volatile", " ", "bool", " dstOut = ", "true", ";\n        ", "for", " (", "int", " i = ", "0", "; i < ", "90", "; i++)\n        {\n            ", "float", "* in, * out;\n            ", "if", " (dstOut)\n            {\n                in = data.dev_inSrc;\n                out = data.dev_outSrc;\n            }\n            ", "else", "\n            {\n                out = data.dev_inSrc;\n                in = data.dev_outSrc;\n            }\n            copy_const_kernel << <blocks, threads >> > (in);\n            blend_kernel << <blocks, threads >> > (out, dstOut);\n            dstOut = !dstOut;\n        }\n        float_to_color << <blocks, threads >> > (data.output_bitmap,\n            data.dev_inSrc);\n\n        ", "HANDLE_ERROR", "(", "cudaMemcpy", "(bitmap->", "get_ptr", "(),\n            data.output_bitmap,\n            bitmap->", "image_size", "(),\n            cudaMemcpyDeviceToHost));\n\n        ", "HANDLE_ERROR", "(", "cudaEventRecord", "(data.stop, ", "0", "));\n        ", "HANDLE_ERROR", "(", "cudaEventSynchronize", "(data.stop));\n        ", "float", "   elapsedTime;\n        ", "HANDLE_ERROR", "(", "cudaEventElapsedTime", "(&elapsedTime,\n            data.start, data.stop));\n        data.totalTime += elapsedTime;\n        ++data.frames;\n        ", "printf", "(", "\"Average Time per frame:  %3.1f ms\\n\"", ",\n            data.totalTime / data.frames);\n\n        ticks++;\n        ", "char", " key = bitmap_image.", "show_image", "(", "30", ");\n        ", "if", " (key == ", "27", ")\n        {\n            ", "break", ";\n        }\n    }\n\n    ", "cleanup", "(&data);\n\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "说的很清楚，没有sqllite3数据库，请确认安装ruby的时候是否有\r\n  no such file to load -- sqlite3 ？\r\n或者使用mysql数据库！", "Konwledge_Point": "通过例子学习", "Question": ["ruby on rails 出错了", ["初学ruby on rails 按照 ruby on rails 学习第一个例子  安装了ruby  并且安装了rails.然后rails mybook 创建了一个工程。进入mybook 输入命令ruby script/server 启动服务，没有报错。", "\n打开链接", "http://127.0.0.1:3000", " 出现错误页面", "\n\n", "日志错误：", "\n/!\\ FAILSAFE /!\\  Thu Mar 19 16:48:05 +0800 2009", "\n  Status: 500 Internal Server Error", "\n  no such file to load -- sqlite3", "\n    C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in ", "gem_original_require'", "\n    C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in", "require'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/dependencies.rb:156:in ", "require'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/dependencies.rb:521:in", "new_constants_in'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/dependencies.rb:156:in ", "require'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/kernel/requires.rb:7:in", "require_library_or_gem'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/kernel/reporting.rb:11:in ", "silence_warnings'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/kernel/requires.rb:5:in", "require_library_or_gem'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:10:in ", "sqlite3_connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:223:in", "send'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:223:in ", "new_connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:245:in", "checkout_new_connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:188:in ", "checkout'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:184:in", "loop'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:184:in ", "checkout'", "\n    C:/Ruby/lib/ruby/1.8/monitor.rb:242:in", "synchronize'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:183:in ", "checkout'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:98:in", "connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:326:in ", "retrieve_connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_specification.rb:123:in", "retrieve_connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_specification.rb:115:in ", "connection'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/query_cache.rb:9:in", "cache'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/query_cache.rb:28:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-2.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:361:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/head.rb:9:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/methodoverride.rb:24:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/params_parser.rb:15:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/rewindable_input.rb:25:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/session/cookie_store.rb:93:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/reloader.rb:9:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/failsafe.rb:11:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/lock.rb:11:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/lock.rb:11:in ", "synchronize'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/lock.rb:11:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/dispatcher.rb:106:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/rails/rack/static.rb:31:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/urlmap.rb:46:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/urlmap.rb:40:in", "each'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/urlmap.rb:40:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/rails/rack/log_tailer.rb:17:in", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/content_length.rb:13:in ", "call'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/handler/webrick.rb:46:in", "service'", "\n    C:/Ruby/lib/ruby/1.8/webrick/httpserver.rb:104:in ", "service'", "\n    C:/Ruby/lib/ruby/1.8/webrick/httpserver.rb:65:in", "run'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:173:in ", "start_thread'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:162:in", "start'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:162:in ", "start_thread'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:95:in", "start'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:92:in ", "each'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:92:in", "start'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:23:in ", "start'", "\n    C:/Ruby/lib/ruby/1.8/webrick/server.rb:82:in", "start'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/vendor/rack-1.0/rack/handler/webrick.rb:13:in ", "run'", "\n    C:/Ruby/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/server.rb:111", "\n    C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in", "gem_original_require'", "\n    C:/Ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'", "\n    script/server:3"]], "Tag": "程序设计"}
{"Answer": "呼叫过程未结束时异常断开情况下，心跳和会话保活机制都保证不了100%的双向会话状态都是OK的。\r\n我以前做的时候注册注销这块也出现过类似的问题，当时是比较两次收到的请求头域中的callid是不是一样的，\r\n不一样代表是两个transaction，就得告诉底层将之前异常的transaction销毁。保证网路两端的回话是一一对应的", "Konwledge_Point": "通过例子学习", "Question": ["eXosip创建会话过程中接受到的事件的tid问题", ["刚开始学习eXosip，编译了网上一个大牛的代码，发现了一个问题。当UAC发送INVITE后，UAS收到后回发一个Ringing，他们的tid都为一，但是如果我把UAS关闭后再打开，UAC发送INVITE，UAS的tid为1，但是UAC收到的tid是2，这是为什么呢？", "\nUAS代码：", "\n\n", "include ", "\n\n", "include ", "\n\n", "include ", "\n\n", "include ", "\n\n", "int main (int argc, char *argv[])", "\n{", "\n   eXosip_event_t *je = NULL;", "\n   osip_message_t *ack = NULL;", "\n   osip_message_t *invite = NULL;", "\n   osip_message_t *answer = NULL;", "\n   sdp_message_t *remote_sdp = NULL;", "\n   int call_id, dialog_id;", "\n   int i,j;", "\n   int id;", "\n   char *sour_call = \"sip:140@127.0.0.1\";", "\n   char *dest_call = \"sip:133@127.0.0.1:15060\";//client ip", "\n   char command;", "\n   char tmp[4096];", "\n   int pos = 0;", "\n   //初始化sip", "\n   i = eXosip_init ();", "\n   if (i != 0)", "\n{", "\n   printf (\"Can't initialize eXosip!\\n\");", "\n   return -1;", "\n}", "\n   else", "\n{", "\n   printf (\"eXosip_init successfully!\\n\");", "\n}", "\n   i = eXosip_listen_addr (IPPROTO_UDP, NULL, 15061, AF_INET, 0);", "\n   if (i != 0)", "\n{", "\n   eXosip_quit ();", "\n   fprintf (stderr, \"eXosip_listen_addr error!\\nCouldn't initialize transport layer!\\n\");", "\n}", "\n   for(;;)", "\n{", "\n   //侦听是否有消息到来", "\n   je = eXosip_event_wait (0,50); ", "\n   //协议栈带有此语句,具体作用未知", "\n   eXosip_lock ();", "\n   eXosip_default_action (je);", "\n   //printf(\"call_id is %d,dialog_id is %d \\n\", je->cid, je->did);", "\n   eXosip_automatic_refresh ();", "\n   eXosip_unlock ();", "\n   if (je == NULL)//没有接收到消息", "\ncontinue;", "\n   // printf (\"the cid is %s, did is %s/n\", je->did, je->cid);", "\n   switch (je->type)", "\n{", "\ncase EXOSIP_MESSAGE_NEW://新的消息到来", "\n   printf (\" EXOSIP_MESSAGE_NEW!\\n\");", "\n   if (MSG_IS_MESSAGE (je->request))//如果接受到的消息类型是MESSAGE", "\n       {", "\n   {", "\n       osip_body_t *body;", "\n       osip_message_get_body (je->request, 0, &body); ", "\n       printf (\"I get the msg is: %s\\n\", body->body);", "\n       printf (\"the cid is %s, did is %s/n\", je->did, je->cid);", "\n   }", "\n   //按照规则，需要回复OK信息", "\n   eXosip_message_build_answer (je->tid, 200,&answer);", "\n   eXosip_message_send_answer (je->tid, 200,answer);", "\n       }", "\n   break;", "\ncase EXOSIP_CALL_INVITE:", "\n   //得到接收到消息的具体信息", "\n         printf (\"Received a INVITE msg from %s:%s, UserName is %s, password is %s\\n\",je->request->req_uri->host,", "\n      je->request->req_uri->port, je->request->req_uri->username, je->request->req_uri->password);", "\n   //得到消息体,认为该消息就是SDP格式.", "\n   remote_sdp = eXosip_get_remote_sdp (je->did);", "\n   call_id = je->cid;", "\n   dialog_id = je->did;", "\n   printf(\"call_id is %d,dialog_id is %d \\n\", je->cid, je->did);", "\n\n", "eXosip_lock ();", "\n   eXosip_call_send_answer (je->tid, 180, NULL);", "\n   printf(\"je->tid is  %d \\n\",je->tid);", "\n   i = eXosip_call_build_answer (je->tid, 200, &answer);", "\n   printf(\"je->tid is  %d \\n\", je->tid);", "\n   if (i != 0)", "\n       {", "\n      printf (\"This request msg is invalid!Cann't response!\\n\");", "\n      eXosip_call_send_answer (je->tid, 400, NULL);", "\n       }", "\n   else", "\n       {", "\n      _snprintf_s (tmp, 4096,", "\n            \"v=0\\r\\n\"", "\n            \"o=anonymous 0 0 IN IP4 0.0.0.0\\r\\n\"", "\n            \"t=1 10\\r\\n\"", "\n            \"a=username:rainfish\\r\\n\"", "\n            \"a=password:123\\r\\n\");", "\n\n", "  //设置回复的SDP消息体,下一步计划分析消息体\n  //没有分析消息体，直接回复原来的消息，这一块做的不好。\n  osip_message_set_body (answer, tmp, strlen(tmp));\n  osip_message_set_content_type (answer, \"application/sdp\");\n\n  eXosip_call_send_answer (je->tid, 200, answer);\n  printf (\"send 200 over!\\n\");\n   }\n", "\n\n", "eXosip_unlock ();", "\n\n", "//显示出在sdp消息体中的attribute 的内容,里面计划存放我们的信息", "\n   printf (\"the INFO is :\\n\");", "\n   while (!osip_list_eol ( &(remote_sdp->a_attributes), pos))", "\n       {", "\n      sdp_attribute_t *at;", "\n\n", "  at = (sdp_attribute_t *) osip_list_get ( &remote_sdp->a_attributes, pos);\n  printf (\"%s : %s\\n\", at->a_att_field, at->a_att_value);//这里解释了为什么在SDP消息体中属性a里面存放必须是两列\n\n  pos ++;\n   }\n", "\n\n", "break;", "\ncase EXOSIP_CALL_ACK:", "\n   printf (\"ACK recieved!\\n\");", "\n    //printf (\"the cid is %s, did is %s/n\", je->did, je->cid); ", "\n   break;", "\ncase EXOSIP_CALL_CLOSED:", "\n   printf (\"the remote hold the session!\\n\");", "\n   // eXosip_call_build_ack(dialog_id, &ack);", "\n   //eXosip_call_send_ack(dialog_id, ack); ", "\n   i = eXosip_call_build_answer (je->tid, 200, &answer);", "\n   if (i != 0)", "\n       {", "\n      printf (\"This request msg is invalid!Cann't response!\\n\");", "\n      eXosip_call_send_answer (je->tid, 400, NULL);", "\n\n", "  }\n", "\n\n", "else", "\n       {", "\n      eXosip_call_send_answer (je->tid, 200, answer);", "\n      printf (\"bye send 200 over!\\n\");", "\n       }", "\n   break;", "\ncase EXOSIP_CALL_MESSAGE_NEW://至于该类型和EXOSIP_MESSAGE_NEW的区别，源代码这么解释的", "\n/*", "\n// request related events within calls (except INVITE) ", "\n      EXOSIP_CALL_MESSAGE_NEW,          < announce new incoming request. ", "\n// response received for request outside calls ", "\n         EXOSIP_MESSAGE_NEW,          < announce new incoming request. ", "\n         我也不是很明白，理解是：EXOSIP_CALL_MESSAGE_NEW是一个呼叫中的新的消息到来，比如ring trying都算，所以在接受到后必须判断", "\n         该消息类型，EXOSIP_MESSAGE_NEW而是表示不是呼叫内的消息到来。", "\n         该解释有不妥地方，仅供参考。", "\n*/", "\n   printf(\" EXOSIP_CALL_MESSAGE_NEW\\n\");", "\n   if (MSG_IS_INFO(je->request) ) //如果传输的是INFO方法", "\n   {", "\n               eXosip_lock ();", "\n             i = eXosip_call_build_answer (je->tid, 200, &answer);", "\n             if (i == 0)", "\n            {", "\n               eXosip_call_send_answer (je->tid, 200, answer);", "\n            }", "\n             eXosip_unlock ();", "\n      {", "\n       osip_body_t *body;", "\n       osip_message_get_body (je->request, 0, &body);", "\n       printf (\"the body is %s\\n\", body->body);", "\n      }", "\n   }", "\n   break; ", "\ndefault:", "\n   printf (\"Could not parse the msg!\\n\");", "\n}", "\n}", "\n}", "\nUAC的代码：", "\n#include ", "\n#include ", "\n#include ", "\n#include ", "\n\n", "int main(int argc, char *argv[])", "\n{", "\n\n", "struct eXosip_t *context_eXosip;\n\neXosip_event_t *je;\nosip_message_t *reg = NULL;\nosip_message_t *invite = NULL;\nosip_message_t *ack = NULL;\nosip_message_t *info = NULL;\nosip_message_t *message = NULL;\n\nint call_id, dialog_id;\nint i, flag;\nint flag1 = 1;\n\nchar *source_call = \"sip:140@127.0.0.1\";//UAC1，端口是15060\nchar *dest_call = \"sip:133@127.0.0.1:15061\";//UAS,端口是15061\n//在这个例子中，uac和uas通信，则source就是自己的地址，而目的地址就是uac1的地址\nchar command;\nchar tmp[4096];\n\nprintf(\"i   发起呼叫请求\\n\\n\");\nprintf(\"h   挂断\\n\\n\");\nprintf(\"q   退出程序\\n\\n\");\nprintf(\"s   执行方法INFO\\n\\n\");\nprintf(\"m   执行方法MESSAGE\\n\\n\");\n\n//初始化\ni = eXosip_init();\n\nif (i != 0)\n{\n    printf(\"Couldn't initialize eXosip!\\n\");\n    return -1;\n}\nelse\n{\n    printf(\"eXosip_init successfully!\\n\");\n}\n\n//绑定uac自己的端口15060，并进行端口监听\ni = eXosip_listen_addr(IPPROTO_UDP, NULL, 15060, AF_INET, 0);\nif (i != 0)\n{\n    eXosip_quit();\n    fprintf(stderr, \"Couldn't initialize transport layer!\\n\");\n    return -1;\n}\nflag = 1;\n\nwhile (flag)\n{\n    //输入命令\n    printf(\"Please input the command:\\n\");\n    scanf_s(\"%c\", &command,1);\n    getchar();\n\n    switch (command)\n    {\n    case 'i'://INVITE，发起呼叫请求\n        i = eXosip_call_build_initial_invite(&invite, dest_call, source_call, NULL, \"This is a call for conversation\");\n\n        if (i != 0)\n        {\n            printf(\"Initial INVITE failed!\\n\");\n            break;\n        }\n        //格式vot必不可少，原因未知，估计是协议栈在传输时需要检查的\n        _snprintf_s(tmp, 4096,\n            \"v=0\\r\\n\"\n            \"o=anonymous 0 0 IN IP4 0.0.0.0\\r\\n\"\n            \"t=1 10\\r\\n\"\n            \"a=username:htc\\r\\n\"\n            \"a=password:070011\\r\\n\");\n\n        osip_message_set_body(invite, tmp, strlen(tmp));\n        osip_message_set_content_type(invite, \"application/sdp\");\n\n        eXosip_lock();\n        i = eXosip_call_send_initial_invite(invite); //invite SIP INVITE message to send\n        eXosip_unlock();\n\n        //发送了INVITE消息，等待应答\n        flag1 = 1;\n        while (flag1)\n        {\n            je = eXosip_event_wait(0, 200); //Wait for an eXosip event\n            //(超时时间秒，超时时间毫秒) \n            printf(\"je->tid is  %d \\n\", je->tid);\n            if (je == NULL)\n            {\n                printf(\"No response or the time is over!\\n\");\n                break;\n            }\n            switch (je->type)   //可能会到来的事件类型\n            {\n            case EXOSIP_CALL_PROCEEDING: //收到100 trying消息，表示请求正在处理中\n                printf(\"proceeding!\\n\");\n                break;\n            case EXOSIP_CALL_RINGING:   //收到180 Ringing应答，表示接收到INVITE请求的UAS正在向被叫用户振铃\n                printf(\"ringing!\\n\");\n                printf(\"je->tid is  %d \\n\", je->tid);\n                printf(\"call_id is %d,dialog_id is %d \\n\", je->cid, je->did);\n                break;\n            case EXOSIP_CALL_ANSWERED: //收到200 OK，表示请求已经被成功接受，用户应答\n                printf(\"ok!connected!\\n\");\n                call_id = je->cid;\n                dialog_id = je->did;\n                printf(\"call_id is %d,dialog_id is %d \\n\", je->cid, je->did);\n\n                //回送ack应答消息\n                eXosip_call_build_ack(je->did, &ack);\n                eXosip_call_send_ack(je->did, ack);\n                flag1 = 0; //推出While循环\n                break;\n            case EXOSIP_CALL_CLOSED: //a BYE was received for this call\n                printf(\"the other sid closed!\\n\");\n                break;\n            case EXOSIP_CALL_ACK: //ACK received for 200ok to INVITE \n                printf(\"ACK received!\\n\");\n                break;\n            default: //收到其他应答\n                printf(\"other response!\\n\");\n                break;\n            }\n            eXosip_event_free(je); //Free ressource in an eXosip event\n        }\n        break;\n\n    case 'h':   //挂断\n        printf(\"Holded!\\n\");\n\n        eXosip_lock();\n        eXosip_call_terminate(call_id, dialog_id);\n        eXosip_unlock();\n        break;\n\n    case 's': //传输INFO方法\n        eXosip_call_build_info(dialog_id, &info);\n        _snprintf_s(tmp, 4096, \"\\nThis is a sip message(Method:INFO)\");\n        osip_message_set_body(info, tmp, strlen(tmp));\n        //格式可以任意设定，text/plain代表文本信息;\n        osip_message_set_content_type(info, \"text/plain\");\n        eXosip_call_send_request(dialog_id, info);\n        break;\n\n    case 'm':\n        //传输MESSAGE方法，也就是即时消息，和INFO方法相比，我认为主要区别是：\n        //MESSAGE不用建立连接，直接传输信息，而INFO消息必须在建立INVITE的基础上传输\n        printf(\"the method : MESSAGE\\n\");\n        eXosip_message_build_request(&message, \"MESSAGE\", dest_call, source_call, NULL);\n        //内容，方法，      to       ，from      ，route\n        _snprintf_s(tmp, 4096, \"This is a sip message(Method:MESSAGE)\");\n        osip_message_set_body(message, tmp, strlen(tmp));\n        //假设格式是xml\n        osip_message_set_content_type(message, \"text/xml\");\n        eXosip_message_send_request(message);\n        break;\n\n    case 'q':\n        eXosip_quit();\n        printf(\"Exit the setup!\\n\");\n        flag = 0;\n        break;\n    }\n}\n\nreturn(0);\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml \r\n\r\n这句已经写的很明显了，没有找到sqlMap.T_User.xml啦\r\n如果你的T_User.xml是在sqlMap目录下，那将\r\n&lt;sqlMap resource=\"sqlMap.T_User.xml\" /&gt; \r\n改成\r\n&lt;sqlMap resource=\"sqlMap/T_User.xml\" /&gt; \r\n\r\n好好检查一下自己的各个配置文件", "Konwledge_Point": "通过例子学习", "Question": ["关于struts2 spring ibatis 结合问题", ["这2天 在学习IBATIS", "\n准备写一个  struts hibernate ibatis  的例子出来 ", "\n\n", "但是一直就没成功 我说一下我的配置步骤，请大家帮我指点一下我哪里错了", "\n\n", "1.首先我在WEB.XML文件里 加入 STRUTS2的主控制器", "\n\n", "<!-- struts2 主控制器 -->", "struts2", "org.apache.struts2.dispatcher.FilterDispatcher", "struts2", "/*", "\n\n", "2.然后添加SPRING支持", "\n\n\n\n", "<context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>\n        classpath:applicationContext*.xml\n    </param-value>\n</context-param>\n<!-- 整合Spring框架 -->\n<listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n", "\n\n", "3.在classpath 下创建 applicationContext.xml 文件 ", "\n\n", "文件内容如下", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "\n    xmlns:aop=\"http://www.springframework.org/schema/aop\"", "\n    xmlns:tx=\"http://www.springframework.org/schema/tx\"", "\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd", "\n    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd", "\n    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd\">", "\n\n", "<bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"\n    destroy-method=\"close\">\n    <property name=\"driverClassName\">\n        <value>com.mysql.jdbc.Driver</value>\n    </property>\n    <property name=\"url\">\n        <value>jdbc:mysql://localhost:3306/test</value>\n    </property>\n    <property name=\"username\">\n        <value>root</value>\n    </property>\n    <property name=\"password\">\n        <value>root</value>\n    </property>\n</bean>\n\n\n<bean id=\"sqlMapClient\"\n    class=\"org.springframework.orm.ibatis.SqlMapClientFactoryBean\">\n    <property name=\"configLocation\">\n        <value>classpath:SqlMapConfig.xml</value>\n    </property>\n    <property name=\"dataSource\">\n        <ref local=\"dataSource\" />\n    </property>\n</bean>\n\n\n\n\n<!-- 配置事务特性 -->\n<tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n    <tx:attributes>\n        <tx:method name=\"find*\" propagation=\"REQUIRED\"\n            read-only=\"true\" />\n        <tx:method name=\"*\" propagation=\"REQUIRED\" />\n    </tx:attributes>\n</tx:advice>\n<!-- 配置那些类的方法进行事务管理 -->\n<aop:config>\n    <aop:pointcut id=\"allManagerMethod\"\n        expression=\"execution(* org.fire.inoutstock.service.*.*(..))\" />\n    <aop:advisor advice-ref=\"txAdvice\"\n        pointcut-ref=\"allManagerMethod\" />\n</aop:config>\n", "\n\n", "\n\n", "然后在classpath下创建 sqlmapclient.xml文件 ", "\n\n", "文件内容", "\n\n", "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>", "\n\n", "<!DOCTYPE sqlMapConfig PUBLIC \"-//ibatis.apache.org//DTD SQL Map Config 2.0//EN\"", "\n    \"", "http://ibatis.apache.org/dtd/sql-map-config-2.dtd\">", "\n\n", "\n\n", "我就这样搭建的， 然后跑的时候出错   错误信息如下", "\n\n", "2009-6-30 12:36:33 org.apache.catalina.core.StandardContext listenerStart", "\n严重: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener", "\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlMapClient' defined in file [D:\\Program Files\\Apache Software Foundation\\Tomcat 6.0\\webapps\\test2\\WEB-INF\\classes\\applicationContext-common.xml]: Invocation of init method failed; nested exception is com.ibatis.common.exception.NestedRuntimeException: Error occurred.  Cause: com.ibatis.common.xml.NodeletException: Error parsing XML.  Cause: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.xml.NodeletException: Error parsing XML.  Cause: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1336)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)", "\n    at java.security.AccessController.doPrivileged(Native Method)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)", "\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)", "\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:423)", "\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)", "\n    at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)", "\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)", "\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)", "\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3843)", "\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4350)", "\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)", "\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)", "\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:525)", "\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:924)", "\n    at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:887)", "\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:492)", "\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1147)", "\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)", "\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)", "\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)", "\n    at org.apache.catalina.core.StandardService.start(StandardService.java:516)", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:578)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)", "\n    at java.lang.reflect.Method.invoke(Unknown Source)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error occurred.  Cause: com.ibatis.common.xml.NodeletException: Error parsing XML.  Cause: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.xml.NodeletException: Error parsing XML.  Cause: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\n    at com.ibatis.sqlmap.engine.builder.xml.SqlMapConfigParser.parse(SqlMapConfigParser.java:81)", "\n    at com.ibatis.sqlmap.client.SqlMapClientBuilder.buildSqlMapClient(SqlMapClientBuilder.java:62)", "\n    at org.springframework.orm.ibatis.SqlMapClientFactoryBean.buildSqlMapClient(SqlMapClientFactoryBean.java:329)", "\n    at org.springframework.orm.ibatis.SqlMapClientFactoryBean.afterPropertiesSet(SqlMapClientFactoryBean.java:280)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)", "\n    ... 39 more", "\nCaused by: com.ibatis.common.xml.NodeletException: Error parsing XML.  Cause: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\n    at com.ibatis.common.xml.NodeletParser.parse(NodeletParser.java:53)", "\n    at com.ibatis.sqlmap.engine.builder.xml.SqlMapConfigParser.parse(SqlMapConfigParser.java:78)", "\n    ... 44 more", "\nCaused by: com.ibatis.common.exception.NestedRuntimeException: Error parsing XPath '/sqlMapConfig/sqlMap'.  Cause: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\n    at com.ibatis.common.xml.NodeletParser.processNodelet(NodeletParser.java:114)", "\n    at com.ibatis.common.xml.NodeletParser.process(NodeletParser.java:75)", "\n    at com.ibatis.common.xml.NodeletParser.process(NodeletParser.java:93)", "\n    at com.ibatis.common.xml.NodeletParser.parse(NodeletParser.java:63)", "\n    at com.ibatis.common.xml.NodeletParser.parse(NodeletParser.java:51)", "\n    ... 45 more", "\nCaused by: java.io.IOException: Could not find resource sqlMap.T_User.xml", "\n    at com.ibatis.common.resources.Resources.getResourceAsStream(Resources.java:101)", "\n    at com.ibatis.common.resources.Resources.getResourceAsStream(Resources.java:86)", "\n    at com.ibatis.common.resources.Resources.getResourceAsReader(Resources.java:150)", "\n    at com.ibatis.sqlmap.engine.builder.xml.SqlMapConfigParser$11.process(SqlMapConfigParser.java:336)", "\n    at com.ibatis.common.xml.NodeletParser.processNodelet(NodeletParser.java:112)", "\n    ... 49 more", "\n2009-6-30 12:36:33 org.apache.catalina.core.StandardContext start", "\n严重: Error listenerStart", "\n2009-6-30 12:36:33 org.apache.catalina.core.StandardContext start", "\n严重: Context [/test2] startup failed due to previous errors", "\n2009-6-30 12:36:33 org.apache.catalina.core.ApplicationContext log", "\n\n", "就这样我没成功 ", "\n\n", "我导入的包有 ibatis-common-2.jar ibatis-sqlmap-2.jar ibatis-dao-2.jar 其他的包都和是STRUTS 和SPRING 还有其他的包了 ", "\n\n", "请教大家帮我看看那里有问题  最好能总结一下 struts2 spring ibatis 搭建的步骤和相关的 JAR包", "\n\n", "[b]问题补充：[/b]", "\n还有一个问题。。。", "\n\n", "就是ibatis 不能用spring 的aop来管理事物吗？ 如果能的话要怎样来写？？", "\n\n \n\n", "tx:attributes", " ", "\nread-only=\"true\" /> ", "/tx:attributes", " ", "/tx:advice", " ", "\n\n", "提示创建txAdvice错误  ", "\n\n", "错误信息", "\n Error creating bean with name 'txAdvice': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined", "\n\n", "谢谢PURAS 刚才的回答。。"]], "Tag": "程序设计"}
{"Answer": "&lt;h2 id=\"h2_基于monster-组和gpt的调写&amp;#xff1a;_1682129554297\"&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;/h2&gt;\n&lt;ul&gt;&lt;li&gt;你的疑惑在于递归调用中参数的传递和保存。实际上&amp;#xff0c;在递归调用中&amp;#xff0c;每次调用都会创建一个新的函数栈帧来保存该调用的参数和局部变量等信息&amp;#xff0c;这个新的函数栈帧是独立的&amp;#xff0c;不会影响到其他函数栈帧。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;在汉诺塔问题中&amp;#xff0c;当n等于1时&amp;#xff0c;会执行一次mov(0, &amp;#39;a&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;m&amp;#39;)&amp;#xff0c;然后直接返回到上一级调用&amp;#xff0c;也就是执行mov(1, &amp;#39;a&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;m&amp;#39;)中的第二个mov函数调用。因此&amp;#xff0c;在你的输出中&amp;#xff0c;虽然n在第一个mov调用中被输出为1&amp;#xff0c;但在后面的mov调用中仍然会被赋值为2&amp;#xff0c;因为这些调用都是独立的函数栈帧。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;另外&amp;#xff0c;由于递归调用是深度优先搜索&amp;#xff0c;所以在每个递归层级中&amp;#xff0c;只有最上面的一次输出语句会被执行&amp;#xff0c;因此你的输出结果可能并不是你期望的那样。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;如果你想更好地理解递归调用的机制&amp;#xff0c;可以尝试画出递归调用的函数调用图&amp;#xff0c;以便更清晰地看到每个函数栈帧的调用和返回。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "通过例子学习", "Question": ["递归调用函数，参数在内存中是怎么调用的", ["大家好，学习c++中遇到一个瓶颈问题", "在 用递归函数解决汉诺塔问题时，源程序是 这样的", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " k=", "0", ",n; \n", "void", " ", "mov", "(", "int", " n,", "char", " a,", "char", " c,", "char", " b)", "\n", "{", "if", "(n==", "0", ")", "return", ";\n", "mov", "(n", "-1", ",a,b,c);\nk++;\n cout<<k<<", "\":from\"", "<<a<<", "\"->\"", "<<c<<endl;\n", "mov", "(n", "-1", ",b,c,a);\n }\n", "int", " ", "main", "()", "\n", "{cout<<", "\"n=\"", ";\ncin>>n;\n", "mov", "(n,", "'a'", ",", "'c'", ",", "'b'", ");\n", "return", " ", "0", ";\n}\n\n\n", "\n", "这是课本上的例子", "因为我搞不明白 程序在运行时内存这块是怎么运行的，于是我这样改了这样来监督参数的具体值：", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " k=", "0", ",n; \n", "void", " ", "mov", "(", "int", " n,", "char", " a,", "char", " c,", "char", " b)", "\n", "{", "if", "(n==", "0", ")", "return", ";\ncout<<n<<", "\"???\"", "<<a<<b<<c<<endl;\ncout<<", "\"v\"", "<<endl;\n", "mov", "(n", "-1", ",a,b,c);\ncout<<n<<n<<a<<b<<c<<endl;\nk++;\ncout<<k<<", "\"?\"", "<<n<<a<<", "\"_>\"", "<<c<<endl;\ncout<<", "\"m\"", "<<endl;\ncout<<n<<a<<b<<c<<endl;\n", "mov", "(n", "-1", ",b,c,a);\ncout<<", "\"??\"", "<<n<<a<<b<<c<<endl;\n\n}\n", "int", " ", "main", "()", "\n", "{cout<<", "\"n=\"", ";\ncin>>n;\n", "mov", "(n,", "'a'", ",", "'c'", ",", "'m'", ");\n", "return", " ", "0", ";\n}\n\n", "\n", "如果把参数想象成在保存在内存中的一个盒子，修改后的运行", "\n", "递归调用到红线部分不就结束了，运行到红线n是1不覆盖了前面的值了吗，怎么n又突然 变成2了呢？实在想不出来程序在内存中是怎么运行，请教各路解释提点一下，谢谢，因为到这儿我实在搞不明白 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以下回答结合了ChatGPT&amp;#xff1a;&lt;br /&gt;你可以使用ASP.NET Web API来实现这个功能&amp;#xff0c;下面是一个简单的例子程序&amp;#xff0c;演示如何在C#端接收Vue传过来的数组&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;在Web API控制器中&amp;#xff0c;添加以下方法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;[&lt;span class=\"hljs-meta\"&gt;HttpPost&lt;/span&gt;]\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; IHttpActionResult &lt;span class=\"hljs-title\"&gt;PostData&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] myArray&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-comment\"&gt;// 处理传过来的数组&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; Ok();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在Vue中&amp;#xff0c;使用axios或其他HTTP库&amp;#xff0c;向Web API发送POST请求&amp;#xff0c;将数组作为请求体&amp;#xff08;body&amp;#xff09;发送。下面是一个简单的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; myArray &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n\naxios.post(&lt;span class=\"hljs-comment\"&gt;&amp;#39;/api/myController/postData&amp;#39;, myArray)&lt;/span&gt;\n    .&lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;response&lt;/span&gt; &amp;#61;&amp;gt; {\n        console.&lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;response&lt;/span&gt;);\n    })\n    .catch(&lt;span class=\"hljs-keyword\"&gt;error&lt;/span&gt; &amp;#61;&amp;gt; {\n        console.&lt;span class=\"hljs-keyword\"&gt;error&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;error&lt;/span&gt;);\n    });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在C#端&amp;#xff0c;你可以使用HttpContext.Current.Request.Form获取FormData类型的请求体&amp;#xff0c;然后将它反序列化为你需要的类型&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;[&lt;span class=\"hljs-meta\"&gt;HttpPost&lt;/span&gt;]\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; IHttpActionResult &lt;span class=\"hljs-title\"&gt;PostData&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; jsonString &amp;#61; HttpContext.Current.Request.Form[&lt;span class=\"hljs-string\"&gt;&amp;#34;myArray&amp;#34;&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] myArray &amp;#61; JsonConvert.DeserializeObject&amp;lt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[]&amp;gt;(jsonString);\n\n    &lt;span class=\"hljs-comment\"&gt;// 处理传过来的数组&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; Ok();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;我们首先从请求体中获取名为“myArray”的字符串&amp;#xff0c;然后使用Newtonsoft.Json库将其反序列化为string[]类型。&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["c# webservice 接收 对象数组", ["我有一个webservice,想接收vue传过来的一个数组，我怎么才能实现呢？有没有相关的例子程序可以学习一下。只要求实现C#端，", "\n", "下面只能实现接收字符串，我想实现接收数组。请给一个例子程序。", "\n", "\nstring myTempID= HttpContext.Current.", "Request", ".Form[", "\"GZQYMC\"", "].", "To", "String", "().", "Trim", "();\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;杞人忧天。&lt;br /&gt;社畜过来人告诉你&amp;#xff0c;你以为的工作就是写一写神经网络&amp;#xff0c;调参炼丹的吗&amp;#xff1f;不是的&amp;#xff0c;最主要的工作是跟产品和测试打架┓( ´∀&amp;#96; )┏&lt;br /&gt;另外还有一点&amp;#xff0c;chatGPT可以写代码没错&amp;#xff0c;但是前天是你要准确的告诉他你要什么。就以写一个神经网络来说&amp;#xff0c;他是能够给你写一个出来&amp;#xff0c;而且很快&amp;#xff0c;但是问题是怎么确定他写的没问题&amp;#xff0c;可以直接用到业务上面吗&amp;#xff1f;就目前而言&amp;#xff0c;要做到这点是不可能的&amp;#xff0c;因为业务多变&amp;#xff0c;并且小需求很多&amp;#xff0c;千篇一律的工作的确可以用gpt替代&amp;#xff0c;但是实际工作并不是这样的&amp;#xff0c;还是需要你有扎实的基础。就像我上面说的&amp;#xff0c;让一个没有基础的人去同chatGPT写一个网络&amp;#xff0c;和一个精通网络的去让他写&amp;#xff0c;结果是不一样的&amp;#xff0c;而且往往gpt的结果需要修改&amp;#xff0c;这修改谁来做呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "通过例子学习", "Question": ["深陷GPT带来的恐惧之中，关于#chatGPT#的问题，如何解决？", ["现在网上突然出现了一个非常厉害的人工智能想必大家都知道了，它叫chat GPT，我现在是大一，学习的专业也是人工智能，当初学这个专业也是认为这个专业是机器人替代不了的，未来的工作也不会出现被机器人代替，可就在前段时间我接触了chat GPT，我有了非常强的恐惧感，举个例子吧，我们写一串完整的代码要思考很久，也要写很久，可GPT只用了几秒，而且不管是什么内型的代码，GPT都能写出来，这是否能说明未来的程序员会被GPT彻底代替，就现在来看，程序员能写出来的代码的GPT都可以，而且可以做的更好，那我们的未来到底该面向什么方向才能做到不被人工智能代替？真的很讽刺，我自己是学这个的，可我真没想到，有一天我真的开始害怕这个了，害怕它真的超越了我们……"]], "Tag": "程序设计"}
{"Answer": "在使用Java Socket进行客户端和服务端通信时&amp;#xff0c;客户端接收到服务端的消息后&amp;#xff0c;需要将消息返回给前端。这个过程可以通过以下步骤实现&amp;#xff1a;&lt;br /&gt;1. 在客户端中&amp;#xff0c;使用Socket类的InputStream对象读取服务端发送的消息。可以使用BufferedReader类来读取消息&amp;#xff0c;代码如下&amp;#xff1a;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;BufferedReader in &amp;#61; new BufferedReader(new InputStreamReader(socket.getInputStream()));&lt;br /&gt;String message &amp;#61; in.readLine();&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;2. 将读取到的消息发送给前端。可以使用WebSocket或者HTTP协议将消息发送给前端。如果使用WebSocket协议&amp;#xff0c;可以使用Java-WebSocket库来实现。代码如下&amp;#xff1a;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;WebSocketServer server &amp;#61; new WebSocketServer(port) {&lt;!-- --&gt;&lt;br /&gt;    &amp;#64;Override&lt;br /&gt;    public void onOpen(WebSocket conn, ClientHandshake handshake) {&lt;!-- --&gt;&lt;br /&gt;        // 连接建立时的操作&lt;br /&gt;    }&lt;br /&gt;    &amp;#64;Override&lt;br /&gt;    public void onClose(WebSocket conn, int code, String reason, boolean remote) {&lt;!-- --&gt;&lt;br /&gt;        // 连接关闭时的操作&lt;br /&gt;    }&lt;br /&gt;    &amp;#64;Override&lt;br /&gt;    public void onMessage(WebSocket conn, String message) {&lt;!-- --&gt;&lt;br /&gt;        // 接收到消息时的操作&lt;br /&gt;    }&lt;br /&gt;    &amp;#64;Override&lt;br /&gt;    public void onError(WebSocket conn, Exception ex) {&lt;!-- --&gt;&lt;br /&gt;        // 发生错误时的操作&lt;br /&gt;    }&lt;br /&gt;};&lt;br /&gt;server.start();&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;3. 在onMessage方法中&amp;#xff0c;将接收到的消息发送给前端。代码如下&amp;#xff1a;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;&amp;#64;Override&lt;br /&gt;public void onMessage(WebSocket conn, String message) {&lt;!-- --&gt;&lt;br /&gt;    conn.send(message);&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;4. 前端可以使用WebSocket API或者HTTP请求来接收消息。如果使用WebSocket API&amp;#xff0c;可以使用以下代码&amp;#xff1a;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;var socket &amp;#61; new WebSocket(&amp;#34;ws://localhost:8080&amp;#34;);&lt;br /&gt;socket.onmessage &amp;#61; function(event) {&lt;!-- --&gt;&lt;br /&gt;    console.log(event.data);&lt;br /&gt;};&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;5. 在onmessage回调函数中&amp;#xff0c;处理接收到的消息。可以将消息显示在页面上&amp;#xff0c;或者进行其他操作。&lt;br /&gt;总之&amp;#xff0c;Java Socket客户端在接收到服务端消息后&amp;#xff0c;可以通过WebSocket或者HTTP协议将消息发送给前端。前端可以使用WebSocket API或者HTTP请求来接收消息&amp;#xff0c;并进行相应的处理。&lt;pre&gt;&lt;/pre&gt;", "Konwledge_Point": "通过例子学习", "Question": ["JAVA socket客户端在接受消息之后如何返回前端呢", ["最近学习了socket 看了很多帖子和视频 讲的都是后端的客户端和服务端如何通信 明没有客户端在接受服务端消息之后如何返回前端的例子 我只做过简单的接口 通过controller接受参数然后返回 但socket显然不能这么做 如何做到客户端接收到消息就能实时返回给前端 "]], "Tag": "程序设计"}
