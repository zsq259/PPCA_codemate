{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,sum;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n         &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n         {\n             &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) sum&amp;#43;&amp;#61;i;\n         }\n         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,sum);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入n，求[1，n]范围内的所有奇数之和。", ["输入", "测试数据有多组。每组测试数据输入一个整数n（0<n<1000）。若n=0，则输入结束。", "\n", "输出", "对于每组测试，求[1，n]中的奇数之和。", "\n", "输入", "10", "9", "0", "输出", "25", "25"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;B&lt;br /&gt;scanf里面没有用特殊符号隔开的话&amp;#xff0c;就需要空格隔开你输入的内容&lt;br /&gt;如果&lt;code class=\"language-javascript\"&gt;scanf(&amp;#34;%d,%d&amp;#34;)&lt;/code&gt;&amp;#xff0c;那么你输入的时候就是&lt;code class=\"language-javascript\"&gt;3,4&lt;/code&gt;&lt;br /&gt;望采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据输入的正确的方式", ["这里数据输入方式不太明白，能不能解答一下这道题目，希望讲一下知识点"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;可以先解出U&amp;#xff0c;然后画图&amp;#xff0c;U有四个解&amp;#xff0c;但是U的平方只有两个解&amp;#xff0c;故可以画两幅图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;syms O2 Q U\neq &amp;#61; O2 - (&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*U.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;U.*sqrt(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-64&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*U.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;-Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)));\nU &amp;#61; solve(eq, U);\nUfun &amp;#61; matlabFunction(U);\nUfun &amp;#61; ...\n    &amp;#64;(O2,Q)...\n[-sqrt(O2.*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-sqrt(-(O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2-1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;).*(O2-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)).*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;);\n    -sqrt(O2.*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;sqrt(-(O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2-1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;).*(O2-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)).*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;);\n    sqrt(O2.*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-sqrt(-(O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2-1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;).*(O2-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)).*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;);\n    sqrt(O2.*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;sqrt(-(O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2-1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;).*(O2-O2.*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)).*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;./&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)];\n\nw&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"language-xml\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;&lt;span class=\"language-xml\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"language-xml\"&gt;;\nK&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;&lt;span class=\"language-xml\"&gt;;\nM&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"language-xml\"&gt;;\nc&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;&lt;span class=\"language-xml\"&gt;;\na&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;;\nwn&amp;#61;sqrt(K/M);\nQ&amp;#61;c/(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*M*wn);\nO2&amp;#61;w/wn;\n% O2&amp;#61;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*U.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)&amp;#43;U.*sqrt(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-64&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*U.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;-Q.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;));\nUs &amp;#61; Ufun(O2, Q);\nU2s &amp;#61; unique(Us.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;^2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;, &amp;#39;rows&amp;#39;);% U2就是U的平方\nfigure(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;);clf\nfor i &amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;:size(U2s,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;)\n    subplot(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"language-xml\"&gt;,i)\n    U2 &amp;#61; U2s(i,:);\n    Tr&amp;#61;sqrt(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#43;U2&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2.&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*U2.*(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"language-xml\"&gt;-O2&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0.75&lt;/span&gt;&lt;span class=\"language-xml\"&gt;*a.*U2)./O2);\n    plot(w,Tr);\nend\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/125049916336196.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有帮助望采纳&amp;#xff0c;有疑问可以继续问哦&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据必须为可转换为双精度值的数值、日期时间、持续时间或数组。", ["问题出现在plot这里，更换为fplot后程序运行不出来，像这种之前定义过，之后是用两个变量之间的等式表达关系的应该怎么画呢？用solve函数去解第9行，仍然是数据必须为可转换为双精度值的数值、日期时间、持续时间或数组。", "\n", "w", "=", "0", ":", "0", ".", "01", ":", "5", ";\n", "K", "=", "800", ";\n", "M", "=", "5", ";\n", "c", "=", "30", ";\n", "a", "=", "1", ";\n", "wn", "=sqrt(K/M);\n", "Q", "=c/(", "2", "*M*wn);\n", "O2", "=w/wn;\n", "O2", "==", "4", "*U.^", "2", "*(", "1", "-", "2", "*Q.^", "2", ")+U.*sqrt(", "16", "-", "64", "*U.^", "2", ".*Q.^", "2", ".*(", "1", "-Q.^", "2", "));\n", "Tr", "=sqrt(", "1", "+U.^", "2", "+", "2", ".*U.^", "2", ".*(", "1", "-O2+", "0", ".", "75", "*a.*U.^", "2", ")./O2);\n", "plot", "(w,Tr);\n", "hold", " ", "on", ";\n", "O2", "==", "4", "*U.^", "2", "*(", "1", "-", "2", "*Q.^", "2", ")-U.*sqrt(", "16", "-", "64", "*U.^", "2", ".*Q.^", "2", ".*(", "1", "-Q.^", "2", "));\n", "Tr", "=sqrt(", "1", "+U.^", "2", "+", "2", ".*U.^", "2", ".*(", "1", "-O2+", "0", ".", "75", "*a.*U.^", "2", ")./O2);\n", "plot", "(w,Tr);\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;j&amp;lt;&amp;#61;n;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n              sum &amp;#43;&amp;#61; j;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,sum); \n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入n，求[1，n]范围内的所有偶数之和", ["问题遇到的现象和发生背景", "\n", "输入n，求[1，n]范围内的所有偶数之和。", "\n", "输入格式:", "测试数据有多组。每组测试数据输入一个整数n（0<n<1000）。若n=0，则输入结束。", "\n", "输出格式:", "对于每组测试，求[1，n]中的偶数之和。", "\n", "输入样例:", "10", "9", "0", "输出样例:", "30", "20", "\n", "用代码块功能插入代码，请勿粘贴截图"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;],i,n;\n  &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n  {\n       &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a[i]);\n       &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;,%d&amp;#34;&lt;/span&gt;,a[i]);\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入n个数存入一维数组中，编程实现输出下标为奇数的元素。", ["从键盘输入n(<=100)个数存入一维数组中，编程实现输出下标为奇数的元素。", "输入格式:", "第一行输入n的值，第二行输入n个用空格隔开的整数。", "输出格式:", "输出数据之间用逗号,隔开，最后一个数据后换行。", "输入样例:", "10", "1 2 3 4 5 6 7 8 9 0", "输出样例:", "在这里给出相应的输出。例如：", "2,4,6,8,0", "我的编程", "#include<stdio.h>", "int main()", "{", "    int a[100],i,n;", "    for(i=0;i<n;i++)", "    {", "        scanf(\"%d\",&a[i]);", "    }", "    for(i=0;i<n;i++)", "    {", "        if(i%2!=0)", "        printf(\"%d,\",a[i]);", "    }", "    printf(\"\\n\");", "    return 0;", "}", "哪里错了呀"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; number;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade1;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade2;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade3;\n    \n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt; *next;\n};\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt; *first&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;insert&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt; *new_node;\n    \n    new_node&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; node *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; node));\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生信息及成绩&amp;#xff08;格式&amp;#xff1a;x x x x x&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;new_node-&amp;gt;number,&amp;amp;new_node-&amp;gt;name,&amp;amp;new_node-&amp;gt;grade1,&amp;amp;new_node-&amp;gt;grade2,&amp;amp;new_node-&amp;gt;grade3);\n\n    \n    new_node-&amp;gt;next&amp;#61;first;\n     first&amp;#61;new_node;\n    \n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt; *p;\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; number;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(p&amp;#61;first,i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;p&amp;#61;p-&amp;gt;next,i&amp;#43;&amp;#43;){\n        grade&amp;#61;p-&amp;gt;grade1 &amp;#43; p-&amp;gt;grade2 &amp;#43; p-&amp;gt;grade3;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号&amp;#xff1a;%c 姓名&amp;#xff1a;%c 平均成绩&amp;#xff1a;%d \\n&amp;#34;&lt;/span&gt;,p-&amp;gt;number,p-&amp;gt;name,(grade/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));\n        grade1&amp;#61;grade1&amp;#43;p-&amp;gt;grade1;\n        grade2&amp;#61;grade2&amp;#43;p-&amp;gt;grade2;\n        grade3&amp;#61;grade3&amp;#43;p-&amp;gt;grade3;\n        k&amp;#61;grade/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max&amp;lt;k){\n            max&amp;#61;k;\n            number&amp;#61;p-&amp;gt;number;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均分最高的学生的学号为%c 平均成绩为%d \\n&amp;#34;&lt;/span&gt;,number,max);\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;课程1的平均成绩:%d \\n&amp;#34;&lt;/span&gt;,(grade1/n));\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;课程2的平均成绩:%d \\n&amp;#34;&lt;/span&gt;,(grade2/n));\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;课程3的平均成绩:%d \\n&amp;#34;&lt;/span&gt;,(grade3/n));\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    \n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要插入学生的人数&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生%d的信息\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;();\n    }\n    \n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(n);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["有5个学生，每个学生的数据包括学号、姓名、三门课的成绩，从键盘输入5个学生数据，用动态链表的方式实现学生链表的创建、打印输出及相关操作", ["有5个学生，每个学生的数据包括学号、姓名、三门课的成绩，从键盘输入5个学生数据，用动态链表的方式实现学生链表的创建、打印输出及相关操作。", "要求：", "（1）5个学生数据的输入与链表创建。设计input函数动态创建学生数据链表，input函数的形参为学生链表的头指针，返回类型为void。", "（2）5个学生数据的输出。设计print函数输出所创建的5个学生的数据，print函数的形参为学生链表的头指针，返回类型为void。", "（3）在此基础上编写max函数，输出平均成绩最高分的学生的数据，函数的形参为学生链表的头指针，返回类型为void。", "（4）（加做）编写插入函数insert，插入一名新学生数据，函数的形参为学生链表的头指针，返回类型为void。并执行print函数验证插入结果。", "（5）（加做）编写删除函数delete，输入学号，如果链表中存在则从链表中删除该学生数据，函数的形参为学生链表的头指针，返回类型为void。并执行print函数验证插入结果。", "（6）贴实验代码和运行过程截图。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;需要给每一个控件编写回调函数&amp;#xff0c;也就是callback函数&amp;#xff0c;在控件上&amp;#xff0c;右击鼠标&amp;#xff0c;查看回调&amp;#xff0c;编写回调函数。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["MATLAB 做的一个app界面，如何输入数据，进行运算。", ["用matlab的app编辑功能简单做了一个界面，但是不知道输入的这些数据框怎么用", "\n\n", "再代码里面要怎么对他们赋值、公式计算、输出", "\n\n", "求大神解答", "\n\n", "感谢！", "\n\n", "\n\n", "\n", "classdef app1 < matlab.apps.AppBase\n\n    % Properties that correspond to app components\n    properties (Access = public)\n        UIFigure     matlab.ui.Figure\n        Menu         matlab.ui.container.Menu\n        Menu_3       matlab.ui.container.Menu\n        Menu_4       matlab.ui.container.Menu\n        GridLayout   matlab.ui.container.GridLayout\n        EditField    matlab.ui.control.NumericEditField\n        EditField_2  matlab.ui.control.NumericEditField\n        Slider       matlab.ui.control.Slider\n        Label_6      matlab.ui.control.Label\n        ListBox      matlab.ui.control.ListBox\n        Label_7      matlab.ui.control.Label\n        ListBox_2    matlab.ui.control.ListBox\n        Label_8      matlab.ui.control.Label\n        ListBox_3    matlab.ui.control.ListBox\n        Label_9      matlab.ui.control.Label\n        ListBox_4    matlab.ui.control.ListBox\n        Label_10     matlab.ui.control.Label\n        EditField_3  matlab.ui.control.NumericEditField\n        Label_11     matlab.ui.control.Label\n        Label_12     matlab.ui.control.Label\n        cmLabel      matlab.ui.control.Label\n        HzLabel      matlab.ui.control.Label\n        cm2Label     matlab.ui.control.Label\n        EditField_8  matlab.ui.control.NumericEditField\n        EditField_7  matlab.ui.control.NumericEditField\n        EditField_6  matlab.ui.control.NumericEditField\n        EditField_5  matlab.ui.control.NumericEditField\n        EditField_4  matlab.ui.control.NumericEditField\n        Wcm2Label    matlab.ui.control.Label\n    end\n    % Component initialization\n    methods (Access = private)\n\n        % Create UIFigure and components\n        function createComponents(app)\n\n            % Create UIFigure and hide until all components are created\n            app.UIFigure = uifigure('Visible', 'off');\n            app.UIFigure.Color = [0.9412 0.9412 0.9412];\n            app.UIFigure.Position = [100 100 719 543];\n            app.UIFigure.Name = 'UI Figure';\n\n            % Create Menu\n            app.Menu = uimenu(app.UIFigure);\n            app.Menu.Text = '目标类型';\n\n            % Create Menu_3\n            app.Menu_3 = uimenu(app.Menu);\n            app.Menu_3.Text = '点目标';\n\n            % Create Menu_4\n            app.Menu_4 = uimenu(app.Menu);\n            app.Menu_4.Text = '扩展源目标';\n\n            % Create GridLayout\n            app.GridLayout = uigridlayout(app.UIFigure);\n            app.GridLayout.ColumnWidth = {'1x', 77, '4x', '2.72x', '4x', 'fit', '11.16x'};\n            app.GridLayout.RowHeight = {'3.03x', 22, '1x', '1x', '1x', '1x', '1x', '1.1x', 24, '1x', 24, '1x', 24, 39, '3.23x'};\n\n            % Create EditField 大气透过率\n            app.EditField = uieditfield(app.GridLayout, 'numeric');\n            app.EditField.Layout.Row = 9;\n            app.EditField.Layout.Column = 5;\n\n            % Create EditField_2 目标辐射特性\n            app.EditField_2 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_2.Layout.Row = 11;\n            app.EditField_2.Layout.Column = 5;\n\n            % Create Slider 信号处理损失等因素系数（滑块）\n            app.Slider = uislider(app.GridLayout);\n            app.Slider.Limits = [3 4];\n            app.Slider.Layout.Row = 14;\n            app.Slider.Layout.Column = [3 4];\n            app.Slider.Value = 3;\n\n            % Create Label_6 红外系统参数\n            app.Label_6 = uilabel(app.GridLayout);\n            app.Label_6.HorizontalAlignment = 'center';\n            app.Label_6.FontWeight = 'bold';\n            app.Label_6.Layout.Row = 2;\n            app.Label_6.Layout.Column = 2;\n            app.Label_6.Text = '红外系统参数';\n\n            % Create ListBox\n            app.ListBox = uilistbox(app.GridLayout);\n            app.ListBox.Items = {'光学系统入射孔径直径', '红外探测器比探测度', '光学系统透过率', '等效噪声带宽', '信噪比', '红外探测器敏感元面积', ''};\n            app.ListBox.Layout.Row = [2 7];\n            app.ListBox.Layout.Column = [3 4];\n            app.ListBox.Value = '光学系统入射孔径直径';\n\n            % Create Label_7 大气透过率\n            app.Label_7 = uilabel(app.GridLayout);\n            app.Label_7.HorizontalAlignment = 'right';\n            app.Label_7.FontWeight = 'bold';\n            app.Label_7.Layout.Row = 9;\n            app.Label_7.Layout.Column = 2;\n            app.Label_7.Text = '大气透过率   ';\n\n            % Create ListBox_2\n            app.ListBox_2 = uilistbox(app.GridLayout);\n            app.ListBox_2.Items = {'大气透过率'};\n            app.ListBox_2.Layout.Row = 9;\n            app.ListBox_2.Layout.Column = 3;\n            app.ListBox_2.Value = '大气透过率';\n\n            % Create Label_8 目标辐射特性\n            app.Label_8 = uilabel(app.GridLayout);\n            app.Label_8.HorizontalAlignment = 'center';\n            app.Label_8.FontWeight = 'bold';\n            app.Label_8.Layout.Row = 11;\n            app.Label_8.Layout.Column = 2;\n            app.Label_8.Text = '目标辐射特性';\n\n            % Create ListBox_3\n            app.ListBox_3 = uilistbox(app.GridLayout);\n            app.ListBox_3.Items = {'红外辐射强度(W/cm^2)'};\n            app.ListBox_3.Layout.Row = 11;\n            app.ListBox_3.Layout.Column = [3 4];\n            app.ListBox_3.Value = '红外辐射强度(W/cm^2)';\n\n            % Create Label_9 其他\n            app.Label_9 = uilabel(app.GridLayout);\n            app.Label_9.HorizontalAlignment = 'center';\n            app.Label_9.FontWeight = 'bold';\n            app.Label_9.Layout.Row = 13;\n            app.Label_9.Layout.Column = 2;\n            app.Label_9.Text = '其他';\n\n            % Create ListBox_4\n            app.ListBox_4 = uilistbox(app.GridLayout);\n            app.ListBox_4.Items = {'信号处理损失等因素系数'};\n            app.ListBox_4.Layout.Row = 13;\n            app.ListBox_4.Layout.Column = [3 4];\n            app.ListBox_4.Value = '信号处理损失等因素系数';\n\n            % Create Label_10\n            app.Label_10 = uilabel(app.GridLayout);\n            app.Label_10.HorizontalAlignment = 'center';\n            app.Label_10.FontSize = 25;\n            app.Label_10.FontWeight = 'bold';\n            app.Label_10.Layout.Row = 1;\n            app.Label_10.Layout.Column = 2;\n            app.Label_10.Text = '参数';\n\n            % Create EditField_3 光学系统入射孔径直径\n            app.EditField_3 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_3.ValueChangedFcn = createCallbackFcn(app, @EditField_3ValueChanged, true);\n            app.EditField_3.Interruptible = 'off';\n            app.EditField_3.Layout.Row = 2;\n            app.EditField_3.Layout.Column = 5;\n\n            % Create Label_11\n            app.Label_11 = uilabel(app.GridLayout);\n            app.Label_11.HorizontalAlignment = 'center';\n            app.Label_11.FontSize = 25;\n            app.Label_11.FontWeight = 'bold';\n            app.Label_11.Layout.Row = [2 4];\n            app.Label_11.Layout.Column = 7;\n            app.Label_11.Text = '点目标作用距离';\n\n            % Create Label_12\n            app.Label_12 = uilabel(app.GridLayout);\n            app.Label_12.HorizontalAlignment = 'center';\n            app.Label_12.FontSize = 25;\n            app.Label_12.FontWeight = 'bold';\n            app.Label_12.Layout.Row = [9 11];\n            app.Label_12.Layout.Column = 7;\n            app.Label_12.Text = '扩展源目标作用距离';\n\n            % Create EditField_4 红外探测器比探测度\n            app.EditField_4 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_4.Layout.Row = 3;\n            app.EditField_4.Layout.Column = 5;\n\n            % Create EditField_5 光学系统透过率\n            app.EditField_5 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_5.Layout.Row = 4;\n            app.EditField_5.Layout.Column = 5;\n\n            % Create EditField_6 等效噪声带宽\n            app.EditField_6 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_6.Layout.Row = 5;\n            app.EditField_6.Layout.Column = 5;\n\n            % Create EditField_7 信噪比\n            app.EditField_7 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_7.Layout.Row = 6;\n            app.EditField_7.Layout.Column = 5;\n\n            % Create EditField_8 红外探测器敏感元面积\n            app.EditField_8 = uieditfield(app.GridLayout, 'numeric');\n            app.EditField_8.Layout.Row = 7;\n            app.EditField_8.Layout.Column = 5;\n\n            % Create cmLabel 单位\n            app.cmLabel = uilabel(app.GridLayout);\n            app.cmLabel.HorizontalAlignment = 'center';\n            app.cmLabel.Layout.Row = 2;\n            app.cmLabel.Layout.Column = 6;\n            app.cmLabel.Text = 'cm';\n\n            % Create HzLabel 单位\n            app.HzLabel = uilabel(app.GridLayout);\n            app.HzLabel.HorizontalAlignment = 'center';\n            app.HzLabel.Layout.Row = 5;\n            app.HzLabel.Layout.Column = 6;\n            app.HzLabel.Text = 'Hz';\n\n            % Create cm2Label 单位\n            app.cm2Label = uilabel(app.GridLayout);\n            app.cm2Label.HorizontalAlignment = 'center';\n            app.cm2Label.Layout.Row = 7;\n            app.cm2Label.Layout.Column = 6;\n            app.cm2Label.Text = 'cm^2';\n\n            % Create Wcm2Label 单位\n            app.Wcm2Label = uilabel(app.GridLayout);\n            app.Wcm2Label.HorizontalAlignment = 'center';\n            app.Wcm2Label.Layout.Row = 11;\n            app.Wcm2Label.Layout.Column = 6;\n            app.Wcm2Label.Text = 'W/cm^2';\n\n            % Show the figure after all components are created\n            app.UIFigure.Visible = 'on';\n        end\n    end\n\n    % App creation and deletion\n    methods (Access = public)\n\n        % Construct app\n        function app = app1(varargin)\n\n            % Create UIFigure and components\n            createComponents(app)\n\n            % Register the app with App Designer\n            registerApp(app, app.UIFigure)\n\n            % Execute the startup function\n            runStartupFcn(app, @(app)startupFcn(app, varargin{:}))\n\n            if nargout == 0\n                clear app\n            end\n        end\n\n        % Code that executes before app deletion\n        function delete(app)\n\n            % Delete UIFigure when app is deleted\n            delete(app.UIFigure)\n        end\n    end\nend"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;sstream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    cin &amp;gt;&amp;gt; t &amp;gt;&amp;gt; ws;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; t; i&amp;#43;&amp;#43;)\n    {\n        string line;\n        &lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(cin, line);\n        &lt;span class=\"hljs-function\"&gt;istringstream &lt;span class=\"hljs-title\"&gt;ss&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(line)&lt;/span&gt;&lt;/span&gt;;\n        string str;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (ss &amp;gt;&amp;gt; str)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;reverse&lt;/span&gt;(str.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;(), str.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;());\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; str;\n            c&amp;#43;&amp;#43;;\n        }\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["PAT单词逆置的问题", ["输入一个可能包含若干（至少1个）单词的句子（可以假设每个单词之间有且仅有一个空格，标点符号视为单词的组成部分），输出每个单词逆置后的英文句子（参看样例输出）。", "\n", "输入格式:", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试数据输入一个字符串（长度不超过80），表示英文句子。", "\n", "输出格式:", "对于每组测试，输出每个单词逆置后的英文句子。", "\n", "输入样例:", "1", "emoclew era uoY", "输出样例:", "welcome are You"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,max_p&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,min_p&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; total_score&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,total_student&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;score);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; || score&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;gt;max_p){\n                max_p&amp;#61;score;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (score&amp;lt;min_p){\n                min_p&amp;#61;score;\n            }\n            total_score&amp;#43;&amp;#61;score;\n            total_student&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; average&amp;#61;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*total_score/total_student;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;全班一共有学生:%d\\n&amp;#34;&lt;/span&gt;,total_student);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;全班平均分:%.1f\\n&amp;#34;&lt;/span&gt;,average);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;全班最高分:%d\\n&amp;#34;&lt;/span&gt;,max_p);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;全班最低分:%d&amp;#34;&lt;/span&gt;,min_p);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入某班c语言成绩，人数未知，用-1作为结束标志，若大于100分，则重新输入，计算全班的最高分，最低分与平均分", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;下面的代码是通过重载输入输出符来实现的&amp;#xff0c;也可通过函数的方式。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;person&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    string id;\n    string name;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; istream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;gt;&amp;gt;(istream&amp;amp; is,person &amp;amp;p)\n    {\n        is &amp;gt;&amp;gt; p.id &amp;gt;&amp;gt; p.name;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt;&amp;lt;(ostream&amp;amp; os,person&amp;amp; p)\n    {\n        os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;id:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; p.id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,name:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; p.name;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n};\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; person\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade; &lt;span class=\"hljs-comment\"&gt;//班级&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;&lt;span class=\"hljs-comment\"&gt;//成绩&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; istream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;gt;&amp;gt;(istream&amp;amp; is,Student&amp;amp; stu)\n    {\n        is &amp;gt;&amp;gt; stu.id &amp;gt;&amp;gt; stu.name &amp;gt;&amp;gt; stu.grade &amp;gt;&amp;gt; stu.score;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt;&amp;lt;(ostream&amp;amp; os,Student&amp;amp; stu)\n    {\n        os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;id:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; stu.id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,name:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; stu.name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,grade:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; stu.grade &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,score:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; stu.score;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;teacher&lt;/span&gt; :&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; person\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    string pro; &lt;span class=\"hljs-comment\"&gt;//职称&lt;/span&gt;\n    string partment; &lt;span class=\"hljs-comment\"&gt;//部门&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; istream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;gt;&amp;gt;(istream&amp;amp; is,teacher&amp;amp; t)\n    {\n        is &amp;gt;&amp;gt; t.id &amp;gt;&amp;gt; t.name &amp;gt;&amp;gt; t.pro &amp;gt;&amp;gt; t.partment;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt;&amp;lt;(ostream&amp;amp; os,teacher&amp;amp; t)\n    {\n        os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;id:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,name:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,pro:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.pro &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;,partment:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t.partment;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n};\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Student s1, s2;\n    teacher t1, t2;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生1的编号、姓名、班级和成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; s1;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;学生1的信息如下&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; s1 &amp;lt;&amp;lt; endl;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生2的编号、姓名、班级和成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; s2;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;学生2的信息如下&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; s2 &amp;lt;&amp;lt; endl;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入教师1的编号、姓名、职称和部门&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; t1;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;教师1的信息如下&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; t1 &amp;lt;&amp;lt; endl;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入教师2的编号、姓名、职称和部门&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; t2;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;教师1的信息如下&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; t2 &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["用C++编写相关程序1", ["实验内容：", "1、编写一个学生和教师数据输入和显示程序，学生数据有编号，姓名，班级和成绩，教师数据有编号，姓名，职称和部门。要求将编号，姓名输入和显示设计成一个类person，并作为学生数据操作类student和教师数据操作类teacher的基类。", "2、合理设计student类、 teacher类以及主函数，完成输入多个学生和教师的信息并显示。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/29003146286615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["编程计算80以内4的倍数或者6的倍数的正整数的和。", ["编程计算80以内4的倍数或者6的倍数的正整数的和。", "输入样例：无数据输入", "输入样例：1134", "程序及运行截图。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有两种方式&amp;#xff0c;一是输入数据后先建立链表&amp;#xff0c;然后排序&amp;#xff1b;二是在插入的时候直接排序。&lt;br /&gt;方法一&amp;#xff08;建立链表后再排序&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/752994440846180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\n\n\ntypedef struct link_node \n{\n    int &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;;\n    struct link_node* next;\n}node,*linklist;\n\nlinklist createList()\n{\n    linklist L;\n    linklist n,p;\n    char ch;\n    L &amp;#61; (linklist)malloc(sizeof(node));\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L &amp;#61;&amp;#61; NULL)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;error&amp;#34;&lt;/span&gt;);\n        return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    \n    p &amp;#61; L;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入数字&amp;#xff0c;并以回车结束&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;); \n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        n &amp;#61; (linklist)malloc(sizeof(node));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%d&amp;#34;,&amp;amp;n-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;n&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; n;\n        p &amp;#61; n;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( (ch&amp;#61;getchar()) &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;) break;\n    }\n    return L;\n}\n\nvoid print(linklist head)\n{\n    linklist p;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%d &amp;#34;,p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\nvoid BubbleSort(linklist List)\n{\n    node * p, * q, * tail;\n\n    tail &amp;#61; NULL;\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;((List-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next) !&amp;#61; tail)\n    {\n        p &amp;#61; List;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; List-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;(q-&amp;gt;&lt;/span&gt;next !&amp;#61; tail)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;data&lt;/span&gt; &amp;gt; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        tail &amp;#61; q;\n    }\n}\n\n\n&lt;span class=\"hljs-comment\"&gt;//释放内存&lt;/span&gt;\nvoid release(linklist head)\n{\n    linklist p;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(head)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n        free(head);\n        head &amp;#61; p;\n    }\n}\n\n\nint main()\n{\n    linklist head &amp;#61; createList();\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;链表信息&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    print(head);\n\n    BubbleSort(head);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    print(head);\n    release(head);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;方法二&amp;#xff08;输入时直接排序&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/690341540846189.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;代码&amp;#xff1a;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;link_node&lt;/span&gt; \n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;link_node&lt;/span&gt;* next;\n}node,*linklist;\n\n&lt;span class=\"hljs-function\"&gt;linklist &lt;span class=\"hljs-title\"&gt;createList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    linklist L;\n    linklist n,p,front;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    L &amp;#61; (linklist)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(node));\n    L-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;error&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入数字&amp;#xff0c;并以回车结束&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;); \n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        n &amp;#61; (linklist)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(node));\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n-&amp;gt;data);\n        n-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n\n        front &amp;#61; L;\n        p &amp;#61; front-&amp;gt;next;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p-&amp;gt;data &amp;gt; n-&amp;gt;data)\n            {\n                front-&amp;gt;next &amp;#61; n;\n                n-&amp;gt;next &amp;#61; p;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                front &amp;#61; p;\n                p &amp;#61; p-&amp;gt;next;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        {\n            front-&amp;gt;next &amp;#61; n;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( (ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;()) &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; L;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linklist head)&lt;/span&gt;\n&lt;/span&gt;{\n    linklist p;\n    p &amp;#61; head-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,p-&amp;gt;data);\n        p &amp;#61; p-&amp;gt;next;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n\n\n&lt;span class=\"hljs-comment\"&gt;//释放内存&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;release&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linklist head)&lt;/span&gt;\n&lt;/span&gt;{\n    linklist p;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(head)\n    {\n        p &amp;#61; head-&amp;gt;next;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(head);\n        head &amp;#61; p;\n    }\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    linklist head &amp;#61; &lt;span class=\"hljs-built_in\"&gt;createList&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;链表信息&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(head);\n    &lt;span class=\"hljs-built_in\"&gt;release&lt;/span&gt;(head);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["建立按元素值递增的有序单链表", ["设计一个算法，建立按元素值（设线性表元素为非负整数）递增的有序单链表。（数据输入次序任意）"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/xiaohuihui1994/article/details/83536752", "Konwledge_Point": "数据的输入", "Question": ["keras框架的数据输入维度问题", ["keras中数据shape分别是一下三种的，有什么区别，（batch_size,10）、（batch_size，1，10）和（batch_size，10,1）。这三种shape的类型数据输入神经网络有什么区别？"]], "Tag": "程序设计"}
{"Answer": "以前都是读文件数据，这次要输入，请问怎么设置正确的数据源？", "Konwledge_Point": "数据的输入", "Question": ["C#windows窗体如何进行datagridview1数据输入与输出", ["在C#windows窗体下创建了一个datagridview1控件，想对datagridview1中的单元格进行数据输入，然后想把数据转换成矩阵再datagridview2输出，可是datagridview2输出的值一直为0。怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t,n,m,i,j,b;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;t;i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {\n            n&amp;#43;&amp;#43;;\n            b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            m &amp;#61; n;\n            &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; {\n                b &amp;#61; b*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; m%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                m /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b!&amp;#61;n);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,n);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/542066344536140.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["请教一下各位，这个PAT实验怎么做？", ["若一个数正向看和反向看等价，则称做回文数。例如：6，2552，12321均是回文数。 给出一个正整数n，求比n大的最小的回文数。（n和运算结果均不会超出int类型范围）", "输入格式:", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试输入1个正整数n。", "\n", "输出格式:", "对于每组测试数据，输出比n大的最小回文数。", "输入样例:", "2", "12", "123456", "输出样例:", "22", "124421", "这个实验该怎么做，具体的代码是多少？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用EOF判断是否输入结束。&lt;br /&gt;比如下面的例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-C\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a, b;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;, &amp;amp;a, &amp;amp;b) !&amp;#61; EOF))//EOF文件结束标着符&amp;#xff0c;实际值为-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, a &amp;#43; b);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在测试平台上会自动判定&amp;#xff0c;如果是本地的IDE里ctrl&amp;#43;z结束输入&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["求解，C语言多组数据输入输出", ["多组数据输入输出。", "题目是不难的，但是是C语言初学者，这种类型开始的输入多组数据就不会写了，网上搜了用while(scanf())循环但还是不太明白，输入数据了还是一直退不出循环。求解析一下，我好比葫芦画瓢，主要就是多组数据的输入和输出，这个类型真的困了我好多题TT"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/chdcyt/article/details/89789309?utm_medium&amp;#61;distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-89789309-null-null.pc_agg_new_rank&amp;amp;utm_term&amp;#61;qt%E8%AE%BE%E7%BD%AEtextedit%E5%8F%AA%E8%83%BD%E8%BE%93%E5%85%A516%E8%BF%9B%E5%88%B6&amp;amp;spm&amp;#61;1000.2123.3001.4430\" id=\"textarea_1659343506976_1659344489568_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/chdcyt/article/details/89789309?utm_medium&amp;#61;distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-89789309-null-null.pc_agg_new_rank&amp;amp;utm_term&amp;#61;qt%E8%AE%BE%E7%BD%AEtextedit%E5%8F%AA%E8%83%BD%E8%BE%93%E5%85%A516%E8%BF%9B%E5%88%B6&amp;amp;spm&amp;#61;1000.2123.3001.4430&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何限制QTextEdit中的文本为16进制数", ["如何限制QTextEdit中输入的文本为16进制数，系统读取的为16进制数呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先读入一个数字,然后用读入的数字作为界限写一个for循环,在循环中读入剩余数据&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; a; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;b, &amp;amp;c);\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入数字n，表示输入n行数据", ["萌新想问，如何在第一行输入数字n，表示接下来要输入n行数据，每行数据输入两个整数"]], "Tag": "程序设计"}
{"Answer": "1。BeginPaint已经返回HDC了，不要再用GetDC获取DC句柄了\n2。如果直接在窗口上画可以直接在wndproc里用WM_PAINT，如果是控件需要先子类化控件\n3。获取数据后可以用代码立即重画窗口，否则需要在特定时机（比如最小化再还原）让系统重画", "Konwledge_Point": "数据的输入", "Question": ["大家帮我检查一下好吗？实在搞不明白，在对话框中输入数据，在主窗口绘直线", ["#include ", "\n#include \"resource.h\"", "\nLRESULT CALLBACK WndProc      (HWND, UINT, WPARAM, LPARAM) ;", "\nBOOL    CALLBACK AboutDlgProc (HWND, UINT, WPARAM, LPARAM) ;", "\nchar chr1[10], chr2[10], chr3[10],chr4[10];", "\nint number1, number2, number3,number4;", "\nint WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance,", "\n                    PSTR szCmdLine, int iCmdShow)", "\n{", "\n     static TCHAR szAppName[] = TEXT (\"About1\") ;", "\n     MSG          msg ;", "\n     HWND         hwnd ;", "\n     WNDCLASS     wndclass ;", "\n\n", " wndclass.style         = CS_HREDRAW | CS_VREDRAW ;\n wndclass.lpfnWndProc   = WndProc ;\n wndclass.cbClsExtra    = 0 ;\n wndclass.cbWndExtra    = 0 ;\n wndclass.hInstance     = hInstance ;\n wndclass.hIcon         = LoadIcon (hInstance, szAppName) ;\n wndclass.hCursor       = LoadCursor (NULL, IDC_ARROW) ;\n wndclass.hbrBackground = (HBRUSH) GetStockObject (WHITE_BRUSH) ;\n wndclass.lpszMenuName  = szAppName ;\n wndclass.lpszClassName = szAppName ;\n\n if (!RegisterClass (&wndclass))\n {\n      MessageBox (NULL, TEXT (\"This program requires Windows NT!\"),\n                  szAppName, MB_ICONERROR) ;\n      return 0 ;\n }\n\n hwnd = CreateWindow (szAppName, TEXT (\"********大学\"),\n                      WS_OVERLAPPEDWINDOW,\n                      CW_USEDEFAULT, CW_USEDEFAULT,\n                      CW_USEDEFAULT, CW_USEDEFAULT,\n                      NULL, NULL, hInstance, NULL) ;\n\n ShowWindow (hwnd, iCmdShow) ;\n UpdateWindow (hwnd) ; \n\n while (GetMessage (&msg, NULL, 0, 0))\n {\n      TranslateMessage (&msg) ;\n      DispatchMessage (&msg) ;\n }\n return msg.wParam ;\n", "\n\n", "}", "\nvoid PaintWindow (HWND hwnd)", "\n{", "\n     HBRUSH          hBrush ;", "\n     HDC             hdc ;", "\n     RECT            rect ; ", "\n     hdc = GetDC (hwnd) ;", "\n     MoveToEx (hdc, number1, number2, NULL) ;", "\n     LineTo (hdc, number3,number4) ;", "\n     ReleaseDC (hwnd, hdc) ;", "\n}", "\nLRESULT CALLBACK WndProc (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)", "\n{", "\n     static HINSTANCE hInstance ;", "\n          HDC         hdc ;", "\n     PAINTSTRUCT ps ;", "\n     switch (message)", "\n     {", "\n     case WM_CREATE :", "\n          hInstance = ((LPCREATESTRUCT) lParam)->hInstance ;", "\n          return 0 ;", "\n     case WM_PAINT:", "\n          hdc = BeginPaint (hwnd, &ps) ;", "\n          PaintWindow (hwnd);", "\n          EndPaint (hwnd, &ps) ;", "\n          return 0 ;", "\n\n", " case WM_COMMAND :\n      switch (LOWORD (wParam))\n      {\n      case IDM_APP_ABOUT :\n           DialogBox (hInstance, TEXT (\"ABOUTBOX\"), hwnd, AboutDlgProc) ;\n           break ;\n      }\n      return 0 ;\n\n\n case WM_DESTROY :\n      PostQuitMessage (0) ;\n      return 0 ;\n }\n return DefWindowProc (hwnd, message, wParam, lParam) ;\n", "\n\n", "}", "\n\n", "BOOL CALLBACK AboutDlgProc (HWND hDlg, UINT message, ", "\n                            WPARAM wParam, LPARAM lParam)", "\n{", "\n\n", "switch (message)\n {\n case WM_INITDIALOG :\n      return TRUE ;\n\n case WM_COMMAND :\n      switch (LOWORD (wParam))\n      {\n\n      case IDOK :\n", "\n\n", "GetDlgItem( hDlg,IDC_EDIT1);", "\nGetWindowText(IDC_EDIT1,chr1,10);", "\nGetDlgItem( hDlg,IDC_EDIT2);", "\nGetWindowText(IDC_EDIT2,chr2,10);", "\nGetDlgItem( hDlg,IDC_EDIT3);", "\nGetWindowText(IDC_EDIT3,chr3,10);", "\nGetDlgItem( hDlg,IDC_EDIT4);", "\nGetWindowText(IDC_EDIT4,chr4,10);", "\nnumber1=atoi(chr1);", "\nnumber2=atoi(chr2);", "\nnumber3=atoi(chr3);", "\nnumber4=atoi(chr4);", "\n EndDialog (hDlg, TRUE) ;", "\n       return TRUE ;", "\n          case IDCANCEL :", "\n               EndDialog (hDlg, 0) ;", "\n               return TRUE ;", "\n          }", "\n          break ;", "\n     }", "\n     return FALSE ;", "\n}"]], "Tag": "程序设计"}
{"Answer": "void get(char *p)\r\n{\r\nscanf(\"%s\", p);\r\n}\r\n调用\r\nchar buffer[100];\r\nget(buffer);", "Konwledge_Point": "数据的输入", "Question": ["如何用指针数组输入字符串？", ["Void get（char * p[ ],int n）", "\n{", "\n    for（int i=0;i\n    {", "\n        cin>>p[i];", "\n    }", "\n}", "\n总是有问题，怎么处理，求大神求解"]], "Tag": "程序设计"}
{"Answer": "https://wenku.baidu.com/view/91e820b405087632311212dc.html", "Konwledge_Point": "数据的输入", "Question": ["深度置信网络DBN的数据输入形式", ["在Reducing the Dimensionality of Data with Neural Networks中，作者给出关于MNIST的MATLAB程序的输入层是二进制向量的集合，那么当我想用连续数值输入时，应该以什么形式进行输入？需要对数据进行一些预处理吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;C语言的话用FILE* fp &amp;#61; fopen(&amp;#34;in.txt&amp;#34;,&amp;#34;w&amp;#34;)打开文件后写入就是了&lt;br /&gt;C&amp;#43;&amp;#43;可以用ifstream&lt;br /&gt;下面文章中的代码&amp;#xff0c;有读写文件的方法&amp;#xff0c;参考一下&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qfl_sdu/article/details/118186493?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1639552099374_1639552148669_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;学生成绩管理系统_qfl_sdu的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;功能1.从文件中读取数据2.按照平均分排名&amp;#xff0c;并写入文件&amp;#xff0c;按照学号排序&amp;#xff0c;写入文件3.统计每门课程的平均分&amp;#xff0c;统计各分数段的人数&amp;#xff0c;写入文件4.打印成绩条5.显示不及格学生信息&amp;#xff0c;写入文件6.显示优等生信息&amp;#xff0c;写入文件代码#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;//定义学生的最大数量#define MAXNMB 50//定义课程数量#define NMBKC 5st&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qfl_sdu/article/details/118186493?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Dev cpp  怎么将程序里面的数据存取到文本文件中", ["我想将 学生成绩管理系统 的源程序中写入的数据存入文本文件中 请问该怎么写"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\nint i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; sc.nextInt()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据输入 接收数据时 提示找不到符号.  符号:   方法 nexInt()   位置: 类型为Scanner的变量 sc 1 个错误", ["数据输入 接收数据时 提示找不到符号.  符号:   方法 nexInt()   位置: 类型为Scanner的变量 sc 1 个错误", "按照的源码敲 不知道问题出在哪", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目没有要求b&amp;gt;999999时要重新输入吧&amp;#xff0c;应该是输出一个什么错误信息之类的&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["格式化输入输出（限制输入数据的范围）", ["\n", "不知道是哪里有问题，编译器没有报错，输出数据也没问题，但上传上去之后还是显示错误，帮忙看一下哪里有问题。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把你代码贴出来&lt;br /&gt;看你的输入&amp;#xff0c;错误是 scanf()函数&amp;#xff0c;如果是字符串%s&amp;#xff0c;不需要加&amp;amp;符号&amp;#xff0c;也不要在scanf()里面加\\n&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["无法将数据输入结构体", ["\n"]], "Tag": "程序设计"}
{"Answer": "在 cin 之前加一句话， fflush(stdin);  //清空输入缓冲区", "Konwledge_Point": "数据的输入", "Question": ["c++的数据输入与输出    ", ["使用c++的cin结合for循环怎么实现多组数据的录入?", "\n我使用如下的方式是不行的，经调试后发现只有第一次正常录入，后来for循环就跳出了。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要实现多机数据输入&amp;#xff0c;需要使用PyTorch分布式数据并行模块&amp;#xff08;DistributedDataParallel&amp;#xff09;。该模块提供了多台机器之间分布式数据并行计算的机制。以下是具体的代码实现步骤&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;配置分布式环境&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;首先&amp;#xff0c;在每台机器上设置分布式训练的环境变量。假设有两台机器&amp;#xff0c;它们的IP地址分别为192.168.1.1和192.168.1.2&amp;#xff0c;端口号为1234。我们可以在每个机器上设置以下环境变量&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;MASTER_ADDR&lt;/span&gt;&amp;#61;192.168.1.1\n&lt;span class=\"hljs-built_in\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;MASTER_PORT&lt;/span&gt;&amp;#61;1234\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中&amp;#xff0c;MASTER_ADDR是主机的IP地址&amp;#xff0c;MASTER_PORT是端口号。需要注意的是&amp;#xff0c;必须在所有参与训练的机器上设置相同的环境变量。&lt;/p&gt;\n&lt;ol start=\"2\"&gt;&lt;li&gt;加载不同的数据集&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;在分布式训练中&amp;#xff0c;不同机器要加载不同的数据集。可以使用PyTorch的Dataset和DataLoader来加载数据。例如&amp;#xff0c;我们可以定义两个数据集MyDataset1和MyDataset2&amp;#xff0c;分别在两台机器上使用。在每个机器上&amp;#xff0c;可以创建一个DataLoader对象来加载数据。代码示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch.utils.data &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; data\n\n&lt;span class=\"hljs-meta\"&gt;# 创建MyDataset1和MyDataset2&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;dataset1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-type\"&gt;MyDataset1&lt;/span&gt;(...)\n&lt;span class=\"hljs-title\"&gt;dataset2&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-type\"&gt;MyDataset2&lt;/span&gt;(...)\n\n&lt;span class=\"hljs-meta\"&gt;# 在每个机器上创建DataLoader对象&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;train_loader1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.&lt;span class=\"hljs-type\"&gt;DataLoader&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;dataset1&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;batch_size&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title\"&gt;batch_size&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;shuffle&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-type\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;train_loader2&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.&lt;span class=\"hljs-type\"&gt;DataLoader&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;dataset2&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;batch_size&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title\"&gt;batch_size&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;shuffle&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-type\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=\"3\"&gt;&lt;li&gt;定义模型和优化器&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;接下来&amp;#xff0c;需要定义模型和优化器。在分布式训练中&amp;#xff0c;每台机器上定义的模型和优化器必须相同。代码示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch.nn &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; nn\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch.optim &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; optim\n\n&lt;span class=\"hljs-meta\"&gt;# 定义模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt; &amp;#61; nn.&lt;span class=\"hljs-type\"&gt;Sequential&lt;/span&gt;(...)\n&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; torch.cuda.is_available():\n    model.cuda()\n\n&lt;span class=\"hljs-meta\"&gt;# 定义优化器&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;optimizer&lt;/span&gt; &amp;#61; optim.&lt;span class=\"hljs-type\"&gt;Adam&lt;/span&gt;(model.parameters(), lr&amp;#61;learning_rate)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=\"4\"&gt;&lt;li&gt;初始化分布式训练模块&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;在使用DistributedDataParallel模块进行训练前&amp;#xff0c;需要先初始化该模块。代码示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import torch.distributed &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; dist\n\n# 初始化分布式环境\ndist.init&lt;span class=\"hljs-constructor\"&gt;_process_group(&lt;span class=\"hljs-params\"&gt;backend&lt;/span&gt;&amp;#61;&amp;#39;&lt;span class=\"hljs-params\"&gt;nccl&lt;/span&gt;&amp;#39;, &lt;span class=\"hljs-params\"&gt;init_method&lt;/span&gt;&amp;#61;&amp;#39;&lt;span class=\"hljs-params\"&gt;env&lt;/span&gt;:&lt;span class=\"hljs-operator\"&gt;/&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;/&lt;/span&gt;&amp;#39;)&lt;/span&gt;\n\n# 将模型包装为分布式模型\nmodel &amp;#61; nn.parallel.&lt;span class=\"hljs-constructor\"&gt;DistributedDataParallel(&lt;span class=\"hljs-params\"&gt;model&lt;/span&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里的backend参数指定使用的通信后端为nccl&amp;#xff0c;init_method参数指定使用环境变量来初始化进程组。&lt;/p&gt;\n&lt;ol start=\"5\"&gt;&lt;li&gt;开始训练&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;初始化完毕后&amp;#xff0c;可以开始进行训练了。这时需要在每个机器上分别执行训练代码。训练代码可以使用普通的PyTorch代码编写&amp;#xff0c;不需要做其他修改。代码示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt; epoch &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(num_epochs):\n    for batch_idx, (&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;, target) in enumerate(&lt;span class=\"hljs-title\"&gt;train_loader&lt;/span&gt;):&lt;/span&gt;\n        &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;, target &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.cuda(), target.cuda()&lt;/span&gt;\n        optimizer.zero_grad()\n        output &amp;#61; model(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;/span&gt;\n        loss &amp;#61; nn.&lt;span class=\"hljs-type\"&gt;CrossEntropyLoss&lt;/span&gt;()(output, target)\n        loss.backward()\n        optimizer.step()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在分布式训练中&amp;#xff0c;每台机器上的训练进程都是相互独立的。训练数据和模型参数会在进程之间进行分发和同步&amp;#xff0c;以保证全局梯度计算的正确性。&lt;/p&gt;\n&lt;ol start=\"6\"&gt;&lt;li&gt;结束训练&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;训练结束后&amp;#xff0c;需要在每个机器上进行收尾工作&amp;#xff0c;释放资源。代码示例如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# 释放分布式模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;.module\ndel &lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 释放分布式环境&lt;/span&gt;\ndist.destroy_process_group()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里需要注意的是&amp;#xff0c;分布式模型在训练过程中会有一层包装&amp;#xff0c;所以在释放模型时需要使用model.module来获取原始模型。同时&amp;#xff0c;也需要在所有进程上释放分布式环境。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["pytorch两个或多个不同的数据集多模态数据输入如何代码实现", ["请教各位，pytorch框架下，想采用深度学习模型，对两个或多个不同模态的数据集，进行多模态特征提取，然后再进行特征融合，该如何进行数据输入以及代码实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提供参考&amp;#xff0c;如果范围超过int请自行改为long long。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, sum,num;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (~&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n)) {\n        sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n--) {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n            sum &amp;#43;&amp;#61; num;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, sum);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言输入输出练习,测试数据有多组，处理到文件尾。每组测试求n个整数之和。", ["输入格式:", "测试数据有多组，处理到文件尾。每组测试数据在一行上先输入数据个数n，然后再输入n个整数，数据之间以一个空格间隔。", "输出格式:", "对于每组测试，在一行上输出n个整数之和。", "输入样例:", "4 1 2 3 4", "5 1 8 3 4 5", "输出样例:", "10", "21"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;\n#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;string.h&amp;gt;\nstruct student{\n    char studid[12];\n    char name[12];\n    int sub1;\n    int sub2;\n    int sub3;\n}data[5];\n\n    void input(struct student data[5]);\n    void print(struct student data[5]);\n    void max(struct student data[5]);\n    void average(struct student data[5]);\n\nvoid main()\n{\n    input(data);\n    print(data);\n\tmax(data);\n\taverage(data);\n\twhile(1);\n}\n\n void input(struct student data[])\n {\n     int i;\n     printf(&amp;#34;请输入相关的学生信息:\\n&amp;#34;);\n\t printf(&amp;#34;学号  姓名  科目一  科目二  科目三\\n&amp;#34;);\n     for(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;){\n\t\tscanf(&amp;#34;%s&amp;#34;,&amp;amp;data[i].studid[0],12);\n\t\tscanf(&amp;#34;%s&amp;#34;,data[i].name,12);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;data[i].sub1);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;data[i].sub2);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;data[i].sub3);\n     }\n\t printf(&amp;#34;输入结束:\\n&amp;#34;);\n}\n void print(struct student data[])\n {\n    int i;\n    \n    for(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;){\n        printf(&amp;#34;%s   %s    %d %d %d&amp;#34;,data[i].studid,data[i].name,data[i].sub1,data[i].sub2,data[i].sub3);\n        printf(&amp;#34;\\n&amp;#34;);\n    }\n}\nvoid max(struct student data[])\n{\n    int i&amp;#61;0;\n    int a[5];\n    float max&amp;#61;0.0;\n\tint max_name &amp;#61; 0;\n    max&amp;#61;(float)a[0];\n    for(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;){\n        a[i]&amp;#61;(data[i].sub1&amp;#43;data[i].sub2&amp;#43;data[i].sub3);\n\t\tif(a[i] &amp;gt; max){\n\t\t\tmax&amp;#61;(float)a[i];\n\t\t\tmax_name &amp;#61; i;\n\t\t}\n\t}\n\tmax &amp;#61; max/3;\n\tprintf(&amp;#34;student name &amp;#61;%s,max &amp;#61;%4f\\n&amp;#34;,data[max_name].name,max);\n}\n\nvoid average(struct student data[])\n{\n\tint i&amp;#61;0;\n    float all&amp;#61;0;\n    int a[5];\n    float average&amp;#61;0;    \n    for(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;){\n        a[i]&amp;#61;(data[i].sub1&amp;#43;data[i].sub2&amp;#43;data[i].sub3);\n        all&amp;#43;&amp;#61;(float)a[i];\n    }\n    average&amp;#61;all/5;\n    printf(&amp;#34;average &amp;#61; %4f\\n&amp;#34;,average);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["有5个学生，每个学生的数据包括学号、姓名、三门课的成绩，从键盘输入5个学生数据，并打印输出。", ["有5个学生，每个学生的数据包括学号、姓名、三门课的成绩，从键盘输入5个学生数据，并打印输出。要求用一个input函数输入5个学生数据；用一个print函数打印", "一个", "学生数据；并在主函数中调用input和print函数。在此基础上编写求max函数，求平均成绩最高分的学生的数据，编写函数average求总平均分，并在主函数中调用。", "\n\n", "#include<stdio.h>", "\n#include<string.h>", "\nstruct student{", "\n    char studid[12];", "\n    char name[12];", "\n    int sub1;", "\n    int sub2;", "\n    int sub3;", "\n}data[5];", "\nvoid main(){", "\n    void input(struct student data[5]);", "\n    void print(struct student data[5]);", "\n    void max(struct student data[5]);", "\n    void average(struct student data[5]);", "\n    input(data);", "\n    printf(\"学号  姓名  科目一  科目二  科目三\\n\");", "\n    print(data);", "\n}", "\n void input(struct student data[]){", "\n     int i;", "\n     printf(\"请输入相关的学生信息:\\n\");", "\n     for(i=0;i<5;i++){", "\n    scanf(\"%s\",data[i].studid);", "\n    scanf(\"%s\",data[i].name);", "\n    scanf(\"%d\",&data[i].sub1);", "\n    scanf(\"%d\",&data[i].sub2);", "\n    scanf(\"%d\",&data[i].sub3);", "\n     }", "\n}", "\n void print(struct student data[]){", "\n    int i;", "\n    ", "\n    for(i=0;i<5;i++){", "\n        printf(\"%s %s %d %d %d\",data[i].name,data[i].studid,data[i].sub1,data[i].sub2,data[i].sub3);", "\n        printf(\"\\n\");", "\n    }", "\n    ", "\n}", "\nvoid max(struct student data[]){", "\n    int i=0;", "\n    int a[5];", "\n    int max=0;", "\n    max=a[0];", "\n    for(i=0;i<5;i++){", "\n        a[i]=(data[i].sub1+data[i].sub2+data[i].sub3)/3;", "\n        if(strcmp(a[i],a[i+1])<0)", "\n        max=a[i+1];", "\n        printf(\"%d\\n\",max);", "\n}", "\n\n", "void average(struct student data[]){", "\n    int i=0;", "\n    int all=0;", "\n    int a[5];", "\n    int average=0;    ", "\n    for(i=0;i<5;i++){", "\n        a[i]=(data[i].sub1+data[i].sub2+data[i].sub3);", "\n        all+=a[i];", "\n    }", "\n    average=all/5;", "\n    printf(\"%d\\n\",average);", "\n}", "\n\n", "这是我自己写的，求大佬帮忙改正"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主你代码正常的&amp;#xff0c;有什么问题吗&amp;#xff1f;出了最后一个输出-1判断可能有bug&amp;#xff0c;输入非-1会没有输出&amp;#xff0c;需要改下逻辑。有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/649669734136190.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Scanner&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;oddeven&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args&lt;/span&gt;) {\n        &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;in&lt;/span&gt;);\n       \n        int countodd &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        int counteven &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        int &lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n           &lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;nextInt&lt;/span&gt;();\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n               &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)counteven&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n               &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; countodd&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n           }\n           &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt;!&amp;#61;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;number&lt;/span&gt;!&amp;#61;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(countodd&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;#43;counteven);\n        &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;close&lt;/span&gt;();\n    }\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["问题部分内容：  你的程序要读入一系列正整数数据，输入-1表示输入结束，-1本身不是输入的数据。程序输出读到的数据中的奇数和偶数的个数。 评论留言见啦~", ["有些自己的改动，新手上路，多多关照", "\n", "import java.util.Scanner;\n\npublic class oddeven {\n\n    public static void main(String[] args) {\n        ", "//", " TODO Auto-generated method stub\n        Scanner ", "in", " = new Scanner(System.", "in", ");\n        int number = ", "in", ".nextInt();\n        int countodd = ", "0", ";\n        int counteven = ", "0", ";\n", "//", "        ", "do", "\n", "//", "        {\n", "//", "            ", "if", "(number % ", "2", " == ", "0", ")\n", "//", "            {\n", "//", "                counteven = counteven + ", "1", ";        counteven++也可以（odd同理）\n", "//", "            }\n", "//", "            ", "else", "\n", "//", "            {\n", "//", "                countodd = countodd + ", "1", ";\n", "//", "            }\n", "//", "            number = ", "in", ".nextInt();\n", "//", "        }", "while", "(number>", "0", "&&number<", "100000", ");\n        ", "while", "(number>", "0", "&&number<", "100000", ")\n        {\n            ", "if", "(number % ", "2", " == ", "0", ")\n            {\n                counteven = counteven + ", "1", ";\n            }\n            ", "else", "\n            {\n                countodd = countodd + ", "1", ";\n            }\n            number = ", "in", ".nextInt();\n        }\n        ", "if", "(number+", "1", "==", "0", ")\n        {\n            System.out.println(countodd+", "\" \"", "+counteven);\n        }\n        ", "else", "\n        {\n            System.out.println(", "\"输入有误！\"", ");\n        }\n        ", "in", ".close();\n    }\n\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;func&lt;/span&gt;():\n    grade, flunk &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(), &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n        info &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;输入成绩&amp;#xff08;以#结束&amp;#xff09;&amp;#xff1a;\\n&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(grade) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;\n        item  &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(info)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; item &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            grade.append(&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(item))\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; grade[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;lt; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;:\n                flunk.append(grade[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;成绩&amp;#xff1a;%s&amp;#39;&lt;/span&gt; % &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#xff0c;&amp;#39;&lt;/span&gt;.join([&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(d) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; d &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; grade]))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;不及格课程门数&amp;#xff1a;%d&amp;#39;&lt;/span&gt; % &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(flunk))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;不及格成绩分别为&amp;#xff1a;%s&amp;#39;&lt;/span&gt; % &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#xff0c;&amp;#39;&lt;/span&gt;.join([&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(d) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; d &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; flunk]))\n\n    \nfunc()\n输入成绩&amp;#xff08;以&lt;span class=\"hljs-comment\"&gt;#结束&amp;#xff09;&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;79&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;59.5&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#&lt;/span&gt;\n成绩&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;98.0&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;79.0&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;58.0&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;80.0&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;59.5&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;75.0&lt;/span&gt;\n不及格课程门数&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n不及格成绩分别为&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;58.0&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;59.5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["怎么用Python多行输入数据，然后以#作为输入的结束？", ["\n", "救命，Python的实验报告，这道程序设计我已经摸了半天都摸不出来，主要还是卡在前面的多行输入，然后用#结束输入这里"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\nusing namespace std;\nint main()\n{\n    int a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;], &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;// for (int i &amp;#61; 1; i &amp;lt; 100; i&amp;#43;&amp;#43;)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; a[&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;])\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;7&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;amp;&amp;amp; a[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; * (a[i] - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;amp;&amp;amp; a[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; * (a[i] - &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;35&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; * (a[i] - &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-literal\"&gt;endl&lt;/span&gt;;\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Ctrl&amp;#43;Z结束&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/694872007376117.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言如何一次性输入多组数据", ["\n", "这是题目，我所疑惑的是如何像样例输入那样输入数据。", "我尝试用一维数组：", "\n", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<iomanip>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a[", "100", "];\n    ", "for", "(", "int", " i=", "1", ";i<", "100", ";i++)\n    {\n        cin>>a[i];\n    }\n    ", "for", "(", "int", " i=", "1", ";i<", "100", ";i++)\n    {\n        ", "if", "(a[i]<=", "2", ") cout<<", "\"7\"", "<<endl;\n        ", "else", " ", "if", "(a[i]>", "2", "&&a[i]<=", "5", ") cout<<", "7", "+", "5", "*(a[i]", "-2", ")<<endl;\n        ", "else", " ", "if", "(a[i]>", "5", "&&a[i]<=", "10", ") cout<<", "7", "+", "15", "+", "7", "*(a[i]", "-5", ")<<endl;\n        ", "else", " cout<<", "7", "+", "15", "+", "35", "+", "9", "*(a[i]", "-10", ")<<endl;\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "这是编译运行的两种情况：", "\n", "这是输入一个数据后回车再输入下一个。", "\n", "这是输入一个数据后空格再输入下一个。", "\n", "这个代码提交后显示“答案错误”，事实上我并不清楚哪里出错了，如果错因不是我所疑惑的“如何像样例输入那样输入”，恳请各位指点一二！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/179664520776150.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["结构体数组的数据输入错误", ["\n", "想试用一下结构体数组，结果开头就出现问题，想输入三个数据却只能输入两个，打印还有错，求告知错误！"]], "Tag": "程序设计"}
{"Answer": "LSTM主要用来学习序列，并且序列的变化的影响因子和序列本身有关或者周期性波动。\r\n比如说文本预测，每天每周每年的销量\r\n别的也可以学，但是效果未必很好。", "Konwledge_Point": "数据的输入", "Question": ["LSTM模型可以训练怎样的数据集？", ["现有数据集Y={X1,X2,X3.....Xn}，其中，X5与X4没有关系，但是X5与X2有关系，具有这种特点的数据集可以用LSTM模型进行训练吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;\nsum &amp;#61; 0\n\nwhile True:\n    a &amp;#61; input(&amp;#34;Please enter a number (enter letter a to stop): &amp;#34;)\n    if a &amp;#61;&amp;#61; &amp;#39;a&amp;#39;:\n        break;\n    sum &amp;#43;&amp;#61; int(a)\n\nprint(f&amp;#34;The sum of all the numbers is: {sum}.&amp;#34;)\n\n\n# Output \nPlease enter a number (enter letter a to stop): 1\nPlease enter a number (enter letter a to stop): 2\nPlease enter a number (enter letter a to stop): 3\nPlease enter a number (enter letter a to stop): 4\nPlease enter a number (enter letter a to stop): 5\nPlease enter a number (enter letter a to stop): 6\nPlease enter a number (enter letter a to stop): 7\nPlease enter a number (enter letter a to stop): 8\nPlease enter a number (enter letter a to stop): 9\nPlease enter a number (enter letter a to stop): 10\nPlease enter a number (enter letter a to stop): a\nThe sum of all the numbers is: 55.&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python循环从用户处获得一组数据,直到用户直接输入a退出，打印输出所有数据的和", ["\n\n", "请问这个怎么写"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/u013746460/article/details/21824253", "Konwledge_Point": "数据的输入", "Question": ["算法的数据结构，C语言根据输入的半径值，计算球的体积。", ["Problem Description", "\n根据输入的半径值，计算球的体积。", "\n\n", "Input", "\n输入数据有多组，每组占一行，每行包括一个实数，表示球的半径。", "\n\n", "Output", "\n输出对应的球的体积，对于每组输入数据，输出一行，计算结果保留三位小数。", "\n\n", "Sample Input", "\n1", "\n1.5", "\n\n", "Sample Output", "\n4.189", "\n14.137"]], "Tag": "程序设计"}
{"Answer": "直接对话框传值，datasource就是一个object\r\nhttp://bbs.csdn.net/topics/360140208", "Konwledge_Point": "数据的输入", "Question": ["datagridview1数据源为输入数据更新到数据源", ["datagridview1在输入数据后，使datagridview2能够输出输入的数据，并在datagridview2页面显示。该怎么样设置datagridview1与datagridview2的数据源？最好有代码或截图进行指导。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;sum_odd_even&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;isinstance&lt;/span&gt;(n, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; n &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;raise&lt;/span&gt; ValueError(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入必须是正整数&amp;#39;&lt;/span&gt;)\n    odd_sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    even_sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            even_sum &amp;#43;&amp;#61; i\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            odd_sum &amp;#43;&amp;#61; i\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; odd_sum, even_sum\n\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个正整数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n    odd_sum, even_sum &amp;#61; sum_odd_even(n)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt; 之内所有奇数的和为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{odd_sum}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt; 之内所有偶数的和为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{even_sum}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["一J一 编程实现：任意输入一个正整数，输出这个正整数之内的所有 奇数的和以及所有偶数的和。 要求：考虑数据输入的正确性，可用异常处理", ["一J一", "编程实现：任意输入一个正整数，输出这个正整数之内的所有", "奇数的和以及所有偶数的和。", "要求：考虑数据输入的正确性，可用异常处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;两个问题&amp;#xff1a;&lt;br /&gt;1&amp;#xff0c;第6行 &amp;#xff0c;scanf后面的l,r要加&amp;amp;&lt;br /&gt;2&amp;#xff0c;第12行c&amp;#61;c/10 &amp;#xff0c;当i &amp;#61;3&amp;#xff0c;4,5等个位不是2的数字时&amp;#xff0c;while就成死循环了&amp;#xff0c;这句要放在if 判断外面。&lt;/p&gt;\n&lt;p&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l,r,a,b,c;\n    b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;l,&amp;amp;r);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;l;i&amp;lt;&amp;#61;r;i&amp;#43;&amp;#43;)\n    {\n        c &amp;#61; i;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(c!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n            {\n                b&amp;#43;&amp;#43;;            \n            }\n            c&amp;#61;c/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;            \n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,b);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["求看看为什么输出为空", ["\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nl &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;python&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;java&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#43;&amp;#43;&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;原始列表:&amp;#39;&lt;/span&gt;, l)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入您要查找的关键字:&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l:\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#39;您输入的关键字在列表中的位置下标是:&amp;#39;&lt;/span&gt;, l&lt;span class=\"hljs-selector-class\"&gt;.index&lt;/span&gt;(a))\n    l&lt;span class=\"hljs-selector-class\"&gt;.pop&lt;/span&gt;(l&lt;span class=\"hljs-selector-class\"&gt;.index&lt;/span&gt;(a))\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#39;列表中的元素已经删除:&amp;#39;&lt;/span&gt;, l)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#39;您输入的关键字不在列表中&amp;#39;&lt;/span&gt;)\n    l&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(a)\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#39;列表中的元素已经添加:&amp;#39;&lt;/span&gt;, l)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["(2)从键盘输入一个数据，查找其在列表中的位置。如果该数据在列表中，输出其位置，然后将其从列表中删除;否则将其添加到列表。", ["从键盘输入一个数据，查找其在列表中的位置。如果该数据在列表中，输出其位置，然后将其从列表中删除;否则将其添加到列表。"]], "Tag": "程序设计"}
{"Answer": "https://www.oschina.net/code/snippet_166355_9332\r\n进行比较用strcmp就可以了。", "Konwledge_Point": "数据的输入", "Question": ["C++中如何让输入的数据与文件中的某数据进行比较", ["比如，我在文件中存了许多用户的登录名，密码，邮箱，性别等char数据，", "\n运行程序时当某个用户输入登录名和密码时，能分别与文件中的用户名和密码进行比较正确性？", "\n我想要读取数据并进行比较的详细的代码。"]], "Tag": "程序设计"}
{"Answer": "model.add(LSTM(50, input_shape=(train_x1.shape[1], train_x1.shape[2])))\r\n-&gt;\r\nmodel.add(LSTM(50, input_shape=(train_x1.shape[0],, train_x1.shape[1], train_x1.shape[2])))\r\n\r\n或者还有一个办法就是不用input_shape，而是指定下timesteps=1\r\n\r\n具体看下keras的文档。", "Konwledge_Point": "数据的输入", "Question": ["LSTM输入数据格式问题", ["输入样本train_x1 标签train_y1 ", "\n样本与标签都是（20000，10）", "\n然后我reshape变成三维（20000，1，10）报错 求该如何修改格式", "\n输入十个数值，输出十个数值。", "\n\n", "train_x1 = np.reshape(train_x1, (train_x1.shape[0],1，train_x1.shape[1]))", "\ntrain_y1 = np.reshape(train_y1, (train_y1.shape[0],1，train_y1.shape[1]))", "\n\n", "model = Sequential()", "\n\n", "model.add(LSTM(50, input_shape=(train_x1.shape[1], train_x1.shape[2])))", "\n\n", "model.add(Dense(10))", "\n\n", "model.compile(loss='mse', optimizer='adam')", "\n\n", "model.fit(train_x1, train_y1, nb_epoch = 300, batch_size = 10)", "\n\n", "model.save_weights('LSTM.model')"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a,b&amp;#61;input(&amp;#39;输入&amp;#xff1a;&amp;#39;).split(&amp;#39;,&amp;#39;)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/157780523136136.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python中如何输入两个数值并赋值给两个变量，输入变量之间用逗号隔开", ["python中如何输入两个数值并赋值给两个变量，输入变量之间用逗号隔开", "\n", "如上图所示，输入2000,2", "2000和2各自赋值给一个变量"]], "Tag": "程序设计"}
{"Answer": "1.立即寻址：在指令中直接给出操作数 MOV A, #80H 8位操作数 MOV A, #2000H 16位操作数 \r\n2.直接寻址：指令中直接给出操作数地址 \r\n(1)SFR，这一存储空间只能使用直接寻址 MOV PSW, #50H \r\n(2)内部数据RAM，这一存储空间可以使用直接寻址和寄存器间接寻址 MOV A, 30H \r\n3.寄存器寻址：以通用寄存器的内容作为操作数（通用寄存器包括A, B, DPTR, R0~R7） INC DPTR 注意：A、B既是通用寄存器，也是SFR（直接寻址） \r\n\r\n\r\n把课本上的东西搬上来了。楼主没学过？", "Konwledge_Point": "数据的输入", "Question": ["有关8051的内部间接寻址的问题", ["8051的内部间接寻址是不是只能使用R0和R1存储被寻址单元的地址"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;vector&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; n)\n    {\n        cin &amp;gt;&amp;gt; x;\n        i&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;amp;&amp;amp; x &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;999&lt;/span&gt;)\n            c&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; x / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n            c&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x % &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            c&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; x;\n            cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;no&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["指定数量的数据输入综合题，要求用while循环结合con导入。具体如下！", ["\n", "\n", "输入n个数，将符合以下至少两个条件的数进行输出、计数并求和。", "1.是一个三位数", "2.个位+十位刚好等于5", "3.能够被3整除"]], "Tag": "程序设计"}
{"Answer": "两个输入框如果在一个窗口，直接在change事件里面处理就行了，否则可以使用窗体子类化拦截消息。", "Konwledge_Point": "数据的输入", "Question": ["VB多个输入框之间互相获取对方输入的数据", ["VB多个输入框之间互相获取对方输入的数据，怎么判断对方正在输入数据，并且显示“正在输入”的提示？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;后台的do get 方法改为dopost&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["前端输入的数据没能传进数据库？", ["1.我在如下页面输入相应的信息，数据库没有成功插入记录。", "\n\n", "\n\n", "2.我已经排除了后段代码问题，在如下直接运行可以直接插入到数据库。", "\n\n", "\n\n", "所以可能是web.xml或者是控制端的问题", "\n\n", "\n\n", "3.下面是两个jsp文件的代码", "\n\n", "\n\n", "\n\n", "请大神们帮我看看哪里除了问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个 IP 我没用过&amp;#xff0c;也没研究过&lt;br /&gt;看你的说明 [47&amp;#xff1a;24]为虚部&amp;#xff0c;[23:0]为实部&lt;br /&gt;用法&amp;#xff1a;数据赋给[23&amp;#xff1a;0]&amp;#xff0c;而高位则直接赋了24位0&lt;br /&gt;感觉没问题&amp;#xff0c;你送的数据有正数、负数是有符号数&amp;#xff0c;这样做没问题。FFT 这样的IP输入端会正确识别负数的&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["VIVADO FFT中输入数据正负号问题", ["FFTIP核中输入端口数据如何调整正负？", "\n", "最近在使用FFT这一IP核时发现，当输入端的数据设置为有符号数时，在仿真界面上可以看出s端的数据与输入的数据波形完全不一样了。", "\n", "\n", "但是当输入数据调整为无符号数时，波形又一致了。", "\n", "\n", "查看手册时发现，s端输入数据送入时会区分实部虚部，以自己的代码为例，s端数据位共48位，[47：24]为虚部，[23:0]为实部，而送入的数据只是24位的实数，有正有负。我在这里选择将送入数据赋给[23：0]，而高位则直接赋了24位0。不知道这样是否合理？", "\n", "所以还想请问大家，当我送入的数据本身是有负数的时候，要如何解决fft的输入数据无法识别负数的问题呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#Python输入任意多个数字&amp;#xff0c;当按回车键时退出&amp;#xff0c;结束输入&amp;#xff0c;输出放存在列表&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;s中的数&amp;#xff0c;并统计输出最大的数和最小的数及最大的数和最小数的平均值\n&lt;span class=\"hljs-keyword\"&gt;ls&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;().&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;()))\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大的数:{},最小的数:{},最大的数和最小数的平均值:{}&amp;#34;&lt;/span&gt;.format(&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;ls&lt;/span&gt;),&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;ls&lt;/span&gt;),(&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;ls&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;ls&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入任意多个数字，按回车键时退出", ["Python输入任意多个数字，当按回车键时退出，结束输入，输出放存在列表1s中的数，并统计输出最大的数和最小的数及最大的数和最小数的平均值"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c#\"&gt;\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个整数:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;TryParse&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;(), out num))\n            {\n                &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误,请重新输入&amp;#34;&lt;/span&gt;);\n            }\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; num; i&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i % &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    sum &amp;#43;&amp;#61; i;\n            }\n\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;($&lt;span class=\"hljs-string\"&gt;&amp;#34;{num} 以内能被5整数的数的和为{sum}!&amp;#34;&lt;/span&gt;);\n\n            &lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadKey&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/984993516056173.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C#非法输入判断以及循环重新输入问题", ["“比如用户从控制台输入35，则控制台输出“35以内能被5整除的数的和为140”。程序中实现如果用户的输入非法就重新输入。”", "如何实现非法输入就不停循环进行重新输入？"]], "Tag": "程序设计"}
{"Answer": "[https://blog.csdn.net/xianfajushi/article/details/40684447](https://blog.csdn.net/xianfajushi/article/details/40684447 \"https://blog.csdn.net/xianfajushi/article/details/40684447\")", "Konwledge_Point": "数据的输入", "Question": ["从键盘上输入两个正整型数据，求这两个整数的最大公约数和最小公倍数。  要求 设计一个函数来同时实现求两个数的最大公约数和最小公倍数，主函数中调用该函数， 然后输出这两个数的最大公约数和最小公倍数。", ["#include ", "\nint f(int m,int n)", "\n{", "\n    int t;", "\n    int s;", "\n    s=m*n;", "\n    while(t>0)", "\n    {", "\n        t=m%n;", "\n        m=n;", "\n        n=t;", "\n    }", "\n    printf(\"%d %d\",m,s/m);", "\n    return 0;", "\n}", "\nint main()", "\n{", "\n    int a,b;", "\n    scanf(\"%d %d\",&a,&b);", "\n    f(a,b);", "\n    return 0;", "\n}", "\n自己在c-free上测试数据没有发现错误，提交以后全部错误，求大佬帮忙指出错误", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n#include \"stdlib.h\"\r\n\r\ntypedef struct node\r\n{\r\n\tchar x;\r\n\tnode * next;\r\n} LList;\r\n\r\nint main()\r\n{\r\n\tLList * header = NULL;\r\n\tnode * p;\r\n\tint n;\r\n\tscanf(\"%d\", &amp;n);\r\n\tfflush(stdin);\r\n\tfor (int i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tif (!header) \r\n\t\t{\r\n\t\t\theader = (node *)malloc(sizeof(node));\r\n\t\t\tp = header;\r\n\t\t\tscanf(\"%c\", &amp;(header-&gt;x));\r\n\t\t\theader-&gt;next = NULL;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tp-&gt;next = (node *)malloc(sizeof(node));\r\n\t\t\tp = p-&gt;next;\r\n\t\t\tscanf(\"%c\", &amp;(p-&gt;x));\r\n\t\t\tp-&gt;next = NULL;\r\n\t\t}\r\n\t}\r\n\tp = header;\r\n\tint i = 0;\r\n\twhile (p)\r\n\t{\r\n\t\tif (i++ % 2 == 0)\r\n\t\t\tprintf(\"%c\", p-&gt;x);\r\n\t\tp = p-&gt;next;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n\r\n```\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201812/16/1544968420_383190.gif)", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入一组数据建立单链表，然后输出奇数位上的元素。", ["输入", "\n第一行输入单链表长度n。", "\n第二行输入字符串。", "\n输出", "\n第一行：输出各奇数位元素", "\n样例输入", "\n7", "\nABCDEFG", "\n样例输出", "\nACEG"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是想直接退出程序还是回到开头&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何使得在数据输入错误后，不进行后续的语句", ["定义函数，然后输入1，2来选择函数，如果输入别的数字，会显示数据错误，但是仍有后续计算，如何使在得到数据错误后，不进行后续的语句"]], "Tag": "程序设计"}
{"Answer": "像Kattle这种用可视化的方式来进行配置以达到数据处理的目的，基本上是需要有明确的字段列表的，\r\n而你想要做的是一个相对通用的过程，现有的控件基本上是无法达到要求的\r\n你的第三种思路用java代码来分析进行更新理论上是可行的，\r\n但是有一个前提条件，你想要的结果是有则更新，无则插入\r\n这个判断是否存在，就要求必须有条件来识别是不是存在，大多数时候我们是用主键来判定的\r\n不同的表主键字段很可能不同，又想要做到通用，就要去动态获取主键字段\r\n这些用java代码去做肯定能做出来的，只是会比较麻烦。\r\n达到这个目的差不多就全是代码干的活，你用不用kattle已经关系不大了", "Konwledge_Point": "数据的输入", "Question": ["kettle中有源表和目标表，两个表的表输入的查询中的表名是一个变量，如何让源表中的数据更新到目标表中？", ["\n                如上图所示（不知道有没有显示出来，转换中有两个表输入，一个叫源表，一个叫目标表，他们来自两个不同的库，查询都是 select * from ${TABLENAME}  ）", "\n                那么，如何让源表中的数据插入或更新到目标表中呢？", "\n                尝试过的思路（PS：不可取的思路）：", "\n                1、暴力操作：执行sql脚本（清空目标表数据）-->  表输入（获取源表数据）-->表输出（将源表数据插入到目标表中） 因为表输出可以不用指定数据库字段，因此能实现需求，但太暴力，boss明确说明，这样不可取。", "\n                2、合并记录： 合并记录需要关键字段和数据字段，而我两个表输入都是用的变量的方式，因此不知道数据字段，并且每个表的主键也不一样，关键字段也不好填写。不知道有没有方式能够取到关键字段和数据字段。", "\n                3、两个表输入都指向java代码，利用java代码实现比较，然后再更新目标表（没有尝试不知道可不可行）", "\n\n", "            以上是尝试过的方法，以失败告终。不知道有没有好的方法能够解决这个问题。\n            求，急\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf这一行后面增加判断为负数则break&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-symbol\"&gt;score&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言输入负数后结束循环", ["输入负数后应该结束循环求均值，为什么把输入的负数加到sum里面了？请问如何解决，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;上一个代码有点问题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nl &amp;#61; [&lt;span class=\"hljs-meta\"&gt;int&lt;/span&gt;(i) for i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;input&lt;/span&gt;().split()]\nm &amp;#61; &lt;span class=\"hljs-meta\"&gt;sum&lt;/span&gt;(l)/le&lt;span class=\"hljs-meta\"&gt;n&lt;/span&gt;(l)\npr&lt;span class=\"hljs-meta\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{:.2f}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;format&lt;/span&gt;(m))\nfor i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i&amp;gt;m:\n        pr&lt;span class=\"hljs-meta\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{:&amp;gt;4d}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;format&lt;/span&gt;(i),&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/957069273546167.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用python编写程序，输入一组数据，求这组数的平均数并输出大于平均数的数。每个数后面有一个空格，输出的顺序和输入的相同。", ["【问题描述】输入一组数据，求这组数的平均数并输出大于平均数的数。每个数后面有一个空格，输出的顺序和输入的相同。", "【输入格式】在一行输入若干个正整数，以空格分隔。", "【输出格式】在一行输出平均数，小数点后保留两位；在另一行用4个字符宽度右对齐的格式输出超过平均数的数。", " 【输入样例1】", "143 174 119 127 117 164 110 128", "【输出样例1】", "135.25", " 143 174 164", "我试图通过创建列表来实现要求功能，但不知怎么创建，也不知思路是否正确？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;;\n    while (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            break;\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n            cnt&amp;#43;&amp;#43;;\n        }\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d  %f&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; / cnt);\n\n   return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["（c语言）随机输入一组整数直到输入能与11整除的数则停止输入", ["随机输入一组数直到输入能与11整除的数则停止输入，请统计输入数据中所有能和3整除的正整数的和及其均值。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sum[num1]&amp;#xff0c;你num1还没赋值呢&amp;#xff0c;是个随机数&amp;#xff0c;如果随机到一个负数&amp;#xff0c;那不崩溃了吗&lt;br /&gt;如果你需要动态初始化数组长度&amp;#xff0c;搜一搜&amp;#xff1a;C语言 数组 初始化&amp;#xff0c;不要凭感觉写&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么运行后未输入数据程序直接结束", ["\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n#include \"stdlib.h\"\r\n\r\ntypedef struct Node { int data; struct Node *next; } LList;\r\n\r\nint main()\r\n{\r\n\tLList * header = NULL;\r\n\tNode * p;\r\n\twhile (true)\r\n\t{\r\n\t\tint input;\r\n\t\tscanf(\"%d\", &amp;input);\r\n\t\tif (input == -1) break;\r\n\t\tif (!header)\r\n\t\t{\r\n\t\t\theader = (Node *)malloc(sizeof(Node));\r\n\t\t\tp = header;\r\n\t\t\theader-&gt;data = input;\r\n\t\t\theader-&gt;next = NULL;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tp-&gt;next = (Node *)malloc(sizeof(Node));\r\n\t\t\tp = p-&gt;next;\r\n\t\t\tp-&gt;data = input;\r\n\t\t\tp-&gt;next = NULL;\r\n\t\t}\r\n\t}\r\n\tp = header;\r\n\tNode * preP = NULL;\r\n\twhile (p)\r\n\t{\r\n\t\tif (p-&gt;data % 2 == 0)\r\n\t\t{\r\n\t\t\tNode * temp;\r\n\t\t\tif (!preP)\r\n\t\t\t{\r\n\t\t\t\ttemp = header;\r\n\t\t\t\theader = header-&gt;next;\r\n\t\t\t\tp = header;\r\n\t\t\t\tfree(temp);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp = p;\r\n\t\t\t\tp = p-&gt;next;\r\n\t\t\t\tpreP-&gt;next = p;\r\n\t\t\t\tfree(temp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tpreP = p;\r\n\t\tp = p-&gt;next;\r\n\t}\r\n\tp = header;\r\n\tint i = 0;\r\n\twhile (p)\r\n\t{\r\n\t\tprintf(\"%d \", p-&gt;data);\r\n\t\tp = p-&gt;next;\r\n\t}\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "数据的输入", "Question": ["输入若干个正整数（输入-1为结束标志），建立一个单向链表，将其中的偶数值结点删除后输出。", ["编程实现：输入若干个正整数（输入-1为结束标志），建立一个单向链表，将其中的偶数值结点删除后输出。链表节点定义为： struct Node{ int data; struct Node *next; }", "\n\n", "输入输出示例：括号内为说明", "\n\n", "输入样例:", "\n1 2 3 4 5 6 7 -1", "\n输出样例:", "\n1 3 5 7"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-sql\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;insert&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;into&lt;/span&gt; student (student_id,mingzi,xingbie,banji,sheng) &lt;span class=\"hljs-keyword\"&gt;values&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;陈一&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;男&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;2002年01月05日&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["创建的数据无法显示，输入查看后不显示我输入的数据", ["不显示创建的数据，输入查看后不显示我输入的数据，但并未报错", "（凑字数123456）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用追加写模式写&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&amp;#34;a&amp;#43;&amp;#34;&lt;br /&gt;它表示追加写&lt;br /&gt;如&amp;#xff1a;FILE *fp &amp;#61; fopen(&amp;#34;demo.txt&amp;#34;, &amp;#34;a&amp;#43;&amp;#34;);&lt;/li&gt;&lt;li&gt;&amp;#34;r&amp;#34;表示只读&lt;/li&gt;&lt;li&gt;&amp;#34;w&amp;#34;表示覆盖写&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/850094519646197.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言如何保存文件并在其后面继续输入？", ["C语言如何保存文件的数据，，并在下次继续输入后新的文件可以写到原文件下面， 而不是把原数据覆盖掉，，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你在21行printf后面加几个getchar()试试&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["vs2022中输入数据后回车没有输出，在线编译器能正常输出", ["\n", "\n", "代码本身应该是没有问题的，是不是vs的设置错误了呢，非计算机专业学生求解答，请说的详细一点，感谢"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/538324034.html", "Konwledge_Point": "数据的输入", "Question": ["输入数据每行包括一个实数，表示球的半径。输出对应的球的体积，C语言", ["Problem Description", "\n根据输入的半径值，计算球的体积。", "\n\n", "Input", "\n输入数据有多组，每组占一行，每行包括一个实数，表示球的半径。", "\n\n", "Output", "\n输出对应的球的体积，对于每组输入数据，输出一行，计算结果保留三位小数。", "\n\n", "Sample Input", "\n1", "\n1.5", "\n\n", "Sample Output", "\n4.189", "\n14.137"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码1里你也可以只输入一个数据。没有获取到足够的参数时&amp;#xff0c;对应的变量不被赋值&amp;#xff0c;而C语言是弱类型&amp;#xff0c;它不检测变量是否已经被正确赋值&amp;#xff0c;你随便定义一个int b&amp;#xff0c;那么程序运行时会给它分配一个内存地址&amp;#xff0c;这个地址不会被初始化&amp;#xff0c;里面原来是什么还是什么&amp;#xff0c;基本可以看做是个随机数。&lt;br /&gt;-&amp;#61;-&amp;#61;-&amp;#61;&lt;br /&gt;另&amp;#xff0c;逗号不是什么特殊语法&amp;#xff0c;它只是你指定的输入格式的一部分。你代码里要求%d,%d&amp;#xff0c;也就是两个数据之间用逗号分隔&amp;#xff0c;那么你输入的时候也必须按照相同的格式输入&amp;#xff0c;否则无法正确的识别。你也可以把逗号换成空格&amp;#xff0c;点&amp;#xff0c;换行&amp;#xff0c;tab&amp;#xff0c;等等其他任何符号。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["scanf里两个%d间加不加逗号产生的数据输入和输出差异", ["运行环境：dev C++5.10", "通通赋值a=b=0", "代码1    scanf(\"%d%d\",&a,&b);", "             printf(\"%d%d\",a,b);", "代码2    scanf(\"%d,%d\",&a,&b);", "             printf(\"%d%d\",a,b);", "代码一中需输入两个数据才能输出两个非0结果，代码二理应也输入两个数据(中间再加个逗号)才能输出两个非0结果。但是当我在代码2的情形下只输入了一个数据(比如5)并按下回车时，终端输出了一个5和一个0，这个现象应该怎么解释?"]], "Tag": "程序设计"}
{"Answer": "字符串不能用“=”、“！=”之类的比较。还有用for语句他是先判断后执行语句。下面代码可以实现：`enter code here`\r\n\r\n\t        Scanner in = new Scanner(System.in);\r\n\t\t\tString[] input = new String[26];\r\n\t\t\tint i = 0;\r\n\t\t\tdo {\r\n\t\t\t\tinput[i] = in.next();\r\n\t\t\t\ti++;\r\n\t\t\t} while (!input[i - 1] .equals(\"end\") );\r\n\t\t\tin.close();", "Konwledge_Point": "数据的输入", "Question": ["JAVA，当键盘输入多行字符串时，如何停止输入。", ["    Scanner in=new Scanner(System.in);\n    String[] input = new String[26];\n    for(int i = 0; input[i] != \"end\"; i++){\n        input[i] = in.next();\n    }\n    in.close();\n", "\n\n", "想要达到的效果：执行程序后由键盘输入：", "\nthisisthefistline", "\nthisisthesecondline", "\nend", "\n结束输入，进入下一行程序。", "\n\n", "但是事实上，即使输入了end，按下回车后，依然可以继续输入字符串和回车。", "\n想要知道，如果我需要使这个代码停下来执行下一段代码，在for中应该用什么替换“input[i] != \"end\"”，以及相应的是如何停止键盘录入的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是要输出每个输入中含0的数量&amp;#xff0c;还是要输出总共输入了多少个含0的字符串&amp;#xff1f;&lt;br /&gt;第一种情况&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入内容&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;你输入了&lt;span class=\"hljs-subst\"&gt;{num.count(&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)}&lt;/span&gt;个0&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第二种情况&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; True:\n    &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; input(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入内容&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;:\n        i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python循环接收用户输入的语句，直到输入q结束。", ["循环接收用户输入的语句，直到输入q结束。判断每次输入的语句中，", "包含数字0的数量", "\n", "设置死循环", "\n", "循环内输入内容", "\n", "判断是否为”q”", "\n", "是 --> 终止循环", "\n", "否 --> 设置统计0的数量的变量", "\n", "遍历字符串", "\n", "判断是否为0", "\n", "是 --> 数量+1", "\n", "遍历完后，输出结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我怎么觉着你是数据被覆盖了呢&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/474133520756154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这里是不是应该是frsd_data&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["怎么解决数据输入list后突然改变", ["如图，如果将数据放入posd_data这个list，第一个数据将变成31.0", "\n", "\n", "但如果不放入list，直接输出，第一个数据就是正确的，为32.1", "\n", "\n", "这是为什么？要怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是你编译器没有设置好&lt;/p&gt;\n&lt;p&gt;或者&lt;br /&gt;student st, stmax, stmin;&lt;br /&gt;改成&lt;br /&gt;struct student st, stmax, stmin;&lt;br /&gt;看看, 有的编译器声明变量时struct不能省略&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; st, stmax, stmin;&lt;span class=\"hljs-comment\"&gt;//加上    struct&lt;/span&gt;\n    FILE* fp;\n    stmax.score &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    stmin.score &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;file1.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!fp)\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %d&amp;#34;&lt;/span&gt;, &amp;amp;st.num, st.name, &amp;amp;st.score);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;gt; stmax.score)\n            stmax &amp;#61; st;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;lt; stmin.score)\n            stmin &amp;#61; st;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;high:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmax.num, stmax.name, stmax.score);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;low:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmin.num, stmin.name, stmin.score);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者改成这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n} student;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;就可以直接用   student st, stmax, stmin;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n} student;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    student st, stmax, stmin;\n    FILE* fp;\n    stmax.score &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    stmin.score &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;file1.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!fp)\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %d&amp;#34;&lt;/span&gt;, &amp;amp;st.num, st.name, &amp;amp;st.score);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;gt; stmax.score)\n            stmax &amp;#61; st;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;lt; stmin.score)\n            stmin &amp;#61; st;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;high:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmax.num, stmax.name, stmax.score);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;low:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmin.num, stmin.name, stmin.score);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["正确的应输出最高最低分。以文本形式建立初始数据文件，文件名为，file1.dat,请输入十个学生的学号，姓名及考试成绩，读入file1.dat中的数据，输出最高分与最低分", ["正确的应输出最高最低分。以文本形式建立初始数据文件，文件名为，file1.dat,请输入十个学生的学号，姓名及考试成绩，读入file1.dat中的数据，输出最高分与最低分", "\n", "\n \n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "define", " N 10", "\n", "struct", " ", "student", "\n{\n    ", "int", " num;\n    ", "char", " name[", "20", "];\n    ", "int", " score;\n};\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i;\n    student st, stmax, stmin;\n    FILE* fp;\n    stmax.score = ", "0", ";\n    stmin.score = ", "100", ";\n    fp = ", "fopen", "(", "\"file1.dat\"", ", ", "\"r\"", ");\n    ", "if", " (!fp)\n        ", "exit", "(", "0", ");\n    ", "for", " (i = ", "0", "; i < N; i++)\n    {\n        ", "fscanf", "(fp, ", "\"%d %s %d\"", ", &st.num, st.name, &st.score);\n        ", "if", " (st.score > stmax.score)\n            stmax = st;\n        ", "if", " (st.score < stmin.score)\n            stmin = st;\n    }\n    ", "fclose", "(fp);\n    ", "printf", "(", "\"high:%5d%15s%5d\\n\"", ", stmax.num, stmax.name, stmax.score);\n    ", "printf", "(", "\"low:%5d%15s%5d\\n\"", ", stmin.num, stmin.name, stmin.score);\n    ", "return", " ", "0", ";\n}\n", "\n", "为什么我运行的结果是这样的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以通过表单提交的方式提交到后台&amp;#xff0c;可以参考下这个&lt;br /&gt;&lt;a id=\"textarea_1665056029865_1665056071102_0\"&gt;http://t.csdn.cn/Tjkus&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/856070650566181.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["小程序怎么获取到用户输入的数据,并发送给后端", ["问题遇到的现象和发生背景", "\n", "用户会输入一个 留言信息，请问怎么将这个数据通过wx.request的方式传递给后端？", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您可以使用 Python 的 random 模块来生成随机数&amp;#xff0c;并使用内置的 open 函数来读写文件。具体实现方法如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import &lt;span class=\"hljs-built_in\"&gt;random&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 生成 10 个 [11,100] 的随机整数&lt;/span&gt;\nrandom_numbers &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;random&lt;/span&gt;.randint(&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)]\n\n&lt;span class=\"hljs-comment\"&gt;# 将随机数写入文件&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;随机数.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:\n    f.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;.join(str(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; random_numbers))\n\n&lt;span class=\"hljs-comment\"&gt;# 从文件读取随机数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;随机数.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:\n    numbers &amp;#61; list(map(int, f.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;().&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;()))\n\n&lt;span class=\"hljs-comment\"&gt;# 对随机数进行排序并输出&lt;/span&gt;\nnumbers.&lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;()\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sorted numbers:&amp;#34;&lt;/span&gt;, numbers)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;我们使用 random.randint 函数生成 10 个 [11,100] 的随机整数。然后&amp;#xff0c;我们使用 open 函数将其写入文件“随机数.txt”。最后&amp;#xff0c;我们再次使用 open 函数从文件读取随机数&amp;#xff0c;将其排序并输出。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python数据输入输出操作", ["产生10个11,100]的随机整数，以空格作为分隔符写入文件“随机数.txt”中。并从文件中读回这10个随机数，按升序排序并显示输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// 定义结构体类型&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; aver;\n}STU;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, n, sum;\n    STU a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    FILE* fp;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;stud.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//if(fp&amp;#61;fopen(&amp;#34;stud.dat&amp;#34;,&amp;#34;r&amp;#34;))&amp;#61;-NULL)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cannot open file\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入 n:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入第%d个学生的学号、姓名和3门课成绩:&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%ld&amp;#34;&lt;/span&gt;, &amp;amp;a[i].num);  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;a[i].num);&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, a[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i].score[j]);  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;a[i].score[i]);&lt;/span&gt;\n            sum &amp;#43;&amp;#61; a[i].score[j];\n        }\n        &lt;span class=\"hljs-comment\"&gt;//需要增加内容处&lt;/span&gt;\n        a[i].aver &amp;#61; (&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;)sum / &lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%ld %s %d %d %d %f\\n&amp;#34;&lt;/span&gt;, a[i].num, a[i].name, a[i].score[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], a[i].score[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], a[i].score[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;], a[i].aver); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入n(3<n≤10)个学生的数据，每个学生包括学号、姓名和3门课程的成绩，由程序计算出每个学生的平均成绩，将每个学生的输入数据和计算出的平均成绩写入文件stud.dat 中。", ["需要完善的源程序如下:", "#include \"stdio.h\"", "#include\"stdlib.h\"", "typedef struct student      /", "定义结构体类型", "/", "{  long num;", "char name[9];", "int score[3];", "float aver;", "}STU;", " void main()", "{int ij,n,sum;", " STU a[10];", " FILE *fp;", "if(fp=fopen(\"stud.dat\",\"r\"))=-NULL)", "{ printf(\"cannot open file\\n\");", "exit(0);", "printf(\"输入 n:\");", "scanf(\"%d\",&n);", "for(i=0;i<n;i++)", "{printf(\"输入第%d个学生的学号、姓名和3门课成绩:\",i+1);", "scanf(\"%d\",&a[i].num);", " scanf(\"%s\",a[i].name);", "sum=0;", "for(j=0;j<3;j++)", "{ scanf(\"%d\",&a[i].score[i]);", "sum+=a[i].score[j];}", "需要增加内容处", "fclose(fp); }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的函数实现在哪呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c++循环数据输入问题", ["计算裴波那切数列相邻项之比", "这是我的代码", "\n", "https://img-mid.csdnimg.cn/release/static/image/mid/ask/294940668086190.png", " \"#left\")", "\n", "这是答案代码", "\n", "\n", "这是我的输出", "\n", "这是答案输出", "\n", "为什么我的运行结果对比答案在结果更新到0.618034后值就不变了"]], "Tag": "程序设计"}
{"Answer": "下标没有计算对\r\n是x[i*n+j]不是m\r\n如果还有问题，检查你的x1 x2 y1 y2", "Konwledge_Point": "数据的输入", "Question": ["C++初学，关于动态指针中数据输入输出有点疑问，为什么下面的程序输出后会这样？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int a,b,c;&lt;br /&gt;while(scanf(&amp;#34;%d%d%d&amp;#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c) !&amp;#61;EOF)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;...&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入多组数据，每组一行", ["大佬们，如何在oj上输入多组数据每组一行啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有几个问题&amp;#xff1a;&lt;br /&gt;1.为啥一上来就把输入的数据追加到list里面&amp;#xff1f;&lt;br /&gt;2..lower函数没必要&lt;br /&gt;3.n是啥&amp;#xff1f;n未定义&lt;br /&gt;4.每次计算完毕&amp;#xff0c;list又被初始化&amp;#xff0c;存不了第二个数据&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["我先for输入数字，然后我就－1出来，大概问题不确定", ["输入一组三位正整数，输入-1表示输入结束，输入的数据如果是水仙花数, 就追加到列表sxh_list中, 最后输出这组数中水仙花数和它们的个数以及它们的和。", "\n", "水仙花数是这样一种数：它是三位正整数，它每个数位上的数的立方和等于它本身。", "\n", "例如：153=1³+5³+3³，所以153是一个水仙花数。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_28789499/article/details/117086537\" id=\"textarea_1652945839396_1652946033211_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;最小二乘法实验c语言实现,最小二乘法拟合C语言实现_匡雪婷的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;拟合直线#include #include #include #includefloat average(int n,float *x){int i; float av; av&amp;#61;0; for(i&amp;#61;0;iav&amp;#61;av/n; return(av); } //平方和 float spfh(int n,float *x){int i; float a; a&amp;#61;0; for(i&amp;#61;0;ia&amp;#43;&amp;#61;(*(x&amp;#43;i))*(...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_28789499/article/details/117086537&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;你可以参考一下&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["三个输入量，一个输出量，有70组数据，拟合系数", ["对于三个输入量，一个输出量，我有70组数据，怎么用最小二乘法拟合出这些系数，"]], "Tag": "程序设计"}
{"Answer": "public FileOutputStream(File file, boolean append) 构造方法有个已追加方式写入文件\r\n第二个构造函数设置为true就OK", "Konwledge_Point": "数据的输入", "Question": ["在 android 中的文件中输入数据", ["下面的代码重写了文件。", "\n我想让原来的数据还保持一致。", "\n\n", "osw..append (data);  \n", "\n\n", "但是没有获得结果。", "\n\n", "public void WriteSettings(Context context, String data){ \n             FileOutputStream fOut = null; \n             OutputStreamWriter osw = null;\n\n             try{\n              fOut = context.openFileOutput(\"abc.txt\",Context.MODE_PRIVATE);       \n              osw = new OutputStreamWriter(fOut); \n              osw.write(data); \n              osw.flush(); \n              Toast.makeText(context, \"Settings saved\",Toast.LENGTH_SHORT).show();\n              } \n              catch (Exception e) {       \n              e.printStackTrace(); \n              Toast.makeText(context, \"Settings not saved\",Toast.LENGTH_SHORT).show();\n              } \n              finally { \n                 try { \n                        osw.close(); \n                        fOut.close(); \n                        } catch (IOException e) { \n                        e.printStackTrace(); \n                        } \n              } \n         }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;%c不就是读取一个字符么&lt;br /&gt;你到底想输入什么呢&amp;#xff1f;输入提示中都用括号注明是&amp;#xff08;字符&amp;#xff09;&amp;#xff0c;怎么又说两位数分开读的事啊。链表元素到底是个整型还是char类型......&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["顺序表，数组的数据输入问题", ["求帮看，为什么读取数据的时候，只能一位一位读，一个两位数会被分开读进去呀", "\n"]], "Tag": "程序设计"}
{"Answer": "问题解决，请及时采纳，否则没法继续回答你以后的问题了。\r\n\r\n```\r\nfor i in range(int(input())):\r\n  sum = 0\r\n  for j in range(int(input())):\r\n    sum = sum + int(input())\r\n  print(sum)\r\n```", "Konwledge_Point": "数据的输入", "Question": ["python 求m组数据的和", ["描述", "\n\n", "多次求n个数的和\n", "\n\n", "输入", "\n    第一行是整数m，m>=1,表示有m组数据", "\n    接下来就是m组数据", "\n\n", "对于每组数据：\n第一行是整数n，n>= 1\n接下来是n行，每行一个整数\n", "\n\n", "输出", "\n    对每组数据，输出后面那n个整数的和", "\n样例输入", "\n\n", "2\n3\n1\n2\n3\n2\n10\n20\n", "\n\n", "样例输出", "\n\n", "6\n30\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;啥意思&amp;#xff1f;&lt;br /&gt;scanf(&amp;#34;%c,%c&amp;#34;,&amp;amp;a,&amp;amp;b)就可以啊&lt;br /&gt;可以在格式符之间加指定的分隔符进行分隔的&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用c语言输入char或者数字用逗号，分隔该怎样输入？", ["比如，需要输入几个数字或几个字母，", "输入", "3,4", "F,d,A,B", "之类的，是只能用gets吗？"]], "Tag": "程序设计"}
{"Answer": "```\r\n\r\n#include &lt;random&gt;\r\n#include &lt;stdio.h&gt;\r\n#define STUDENT_COUNT  10\r\n#define NAME_LEN  64\r\n\r\nstruct Student\r\n{\r\n\tint no;\r\n\tchar name[NAME_LEN];\r\n\tint score;\r\n};\r\n\r\nvoid sort(struct Student* students, int count)\r\n{\r\n\tint i = 0;\r\n\tint j = 0;\r\n\tstruct Student temp;\r\n\tfor (i = 0; i &lt; count; i++)\r\n\t{\r\n\t\tfor (j = 0; j &lt; count - 1; j++)\r\n\t\t{\r\n\t\t\tif (students[j].score &lt; students[j + 1].score)\r\n\t\t\t{\r\n\t\t\t\ttemp = students[j];\r\n\t\t\t\tstudents[j] = students[j + 1];\r\n\t\t\t\tstudents[j + 1] = temp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid main()\r\n{\r\n\tint i = 0;\r\n\tconst char* name_prefix = \"name\";\r\n\tstruct Student* students = (struct Student*)malloc(sizeof(struct Student) * STUDENT_COUNT);\r\n\r\n\tfor (i = 0; i &lt; STUDENT_COUNT - 2; i++)\r\n\t{\r\n\t\tstudents[i].no = i;\r\n\r\n\t\tmemset(students[i].name, 0, NAME_LEN);\r\n\t\tmemcpy(students[i].name, name_prefix, strlen(name_prefix));\r\n\t\tstudents[i].name[strlen(name_prefix)] = i + '0';\r\n\r\n\t\tstudents[i].score = rand() % 100;\r\n\t}\r\n\r\n\tprintf(\"输入学号，姓名，分数：\\n\");\r\n\tscanf(\"%d%s%d\", &amp;students[i].no, students[i].name, &amp;students[i].score);\r\n\ti++;\r\n\r\n\tprintf(\"输入学号，姓名，分数：\\n\");\r\n\tscanf(\"%d%s%d\", &amp;students[i].no, students[i].name, &amp;students[i].score);\r\n\r\n\t\r\n\tsort(students, STUDENT_COUNT);\r\n\r\n\tfor (i = 0; i &lt; STUDENT_COUNT; i++)\r\n\t{\r\n\t\tprintf(\"no:%d  name:%s  score:%d\\n\", students[i].no, students[i].name, students[i].score);\r\n\t}\r\n\r\n\tgetchar();\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["C语言有10个学生，每个学生数据包括学号、姓名和成绩，前8个学生的数据采用初始化，后2个学生键盘输入？", ["63.", "\n编程题", "\n有10个学生，每个学生数据包括学号、姓名和成绩，前8个学生的数据采用初始化，后2个学生键盘输入。编写一个程序，将这10个学生的信息按成绩由高到低的顺序排序并保存后输出所有学生的全部信息。", "\n请认真测试程序的正确性。将源代码以文本方式提交，不要直接提交文件。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    nums &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入多个非负整数逗号间隔&amp;#xff0c;-1结束程序&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nums &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-1&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    num_list &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tuple&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;, nums.replace(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(num_list)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;最大值是&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(num_list))}&lt;/span&gt;,最小值是&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(num_list))}&lt;/span&gt;, 平均值是&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(num_list)/&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(num_list))}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["用Python输入若干非负整数，当输入-1程序终止，计算输入程序的最大值和最小值以及平均值", ["输入若干非负整数，当输入-1程序终止，计算输入程序的最大值和最小值以及平均值"]], "Tag": "程序设计"}
{"Answer": "函数float ave_01(float a[100])：int i,j；请将j初始化后再使用，比如 int j = 0; 该函数里面的return ave；这句以后的代码都不会执行。以上", "Konwledge_Point": "数据的输入", "Question": ["用C语言实现求输入的一串数的平均值，方差和标准差（找错）", ["#include ", "\n#include ", "\n\n", "double FANG_01(float c,float a[100],int b); //函数声明", "\n\n", "void main()", "\n{", "\n    float a[100];", "\n    int i;", "\n    float ave;", "\n\n", "float ave_01(float a[100]); //定义函数时括号里得写完整\n\nprintf(\"please input:\\n\");\nfor(i=0;i<=99;i++)  //必须得有结束标志！否则得一直输入100个数字\n{\n    scanf(\"%d\",&a[i]);\n    if(a[i]==0)\n        break;\n}\nave=ave_01(a);\nprintf(\"平均数=%f\\n\",ave);\n", "\n\n", "}", "\n\n", "float ave_01(float a[100]) //函数定义", "\n{", "\n    int i,j;", "\n    float sum=0;", "\n    float ave=0;", "\n    double s;", "\n    double t;", "\n\n", "for(i=0;i<=99;i++)\n{\n    if(a[i]!='\\0') //直接引用从主函数传递过得来的实参\n    {\n        sum+=a[i];\n        ++j;\n    }\n    else break;\n}\nave=sum/j;\n\nreturn ave; \n\ns=FANG_01(ave,a,j); //在其他函数中调用，则应在外部声明\nprintf(\"方差=%lf\",s);\n\nt=sqrt(s); //求平方根的函数__\nprintf(\"标准差=%lf\",t);\n", "\n\n", "}", "\n\n", "double FANG_01(float ave,float a[100],int j)  //函数定义", "\n{", "\n    float b=0;", "\n    double s;", "\n    int i;", "\n    for(i=0;i<=100;i++)", "\n    {", "\n        if(a[i]!='\\0')", "\n            b+=pow((a[i]-ave),2); //求平方的函数pow", "\n        else break;", "\n    }", "\n    s=b/j;", "\n    return s;", "\n}", "\n\n", "编译后没有错误，但是显示结果是-0.000000，其他啥也没有，单步调试调不出来（会报错Loaded 'ntdll.dll', no matching symbolic information found.）实在是不知道程序哪里错了o(╥﹏╥)o求各路大佬帮帮忙。。。。。\n", "\n\n", "原题：假设有一堆数字（小于100个），需要对其做如下处理", "\n1.求平均数", "\n2.求标准差 ", "\n3.求方差", "\n可以用函数实现，也可以不用", "\n\n", "**下面是更改后的代码：", "\n#include ", "\n#include ", "\n\n", "double FANG_01(float c,float a[100],int b); //函数声明", "\n\n", "void main()", "\n{", "\n    float a[100];", "\n    int i,j;", "\n    float ave;", "\n    double s,t;", "\n\n", "float ave_01(float a[100]); //定义函数时括号里得写完整\n\nprintf(\"please input:\\n\");\nfor(i=0;i<=99;i++)  //必须得有结束标志！否则得一直输入100个数字\n{\n    scanf(\"%f\",&a[i]);\n    if(a[i]==0)\n        break;\n    ++j;\n}\nave=ave_01(a);\nprintf(\"平均数=%f\\n\",ave);\n\ns=FANG_01(ave,a,j); //在其他函数中调用，则应在外部声明\nprintf(\"方差=%lf\",s);\n\nt=sqrt(s); //求平方根的函数\nprintf(\"标准差=%lf\",t);\n", "\n\n", "}", "\n\n", "float ave_01(float a[100]) //函数定义", "\n{", "\n    int i,j;", "\n    float sum=0;", "\n    float ave=0;", "\n    double s;", "\n    double t;", "\n\n", "for(i=0;i<=99;i++)\n{\n    if(a[i]!='\\0') //直接引用从主函数传递过得来的实参\n    {\n        sum+=a[i];\n        ++j;\n    }\n    else break;\n}\nave=sum/j;\n\nreturn ave; \n", "\n\n", "}", "\n\n", "double FANG_01(float ave,float a[100],int j)  //函数定义", "\n{", "\n    float b=0;", "\n    double s;", "\n    int i;", "\n    for(i=0;i<=100;i++)", "\n    {", "\n        if(a[i]!='\\0')", "\n            b+=pow((a[i]-ave),2); //求平方的函数pow", "\n        else break;", "\n    }", "\n    s=b/j;", "\n    return s;", "\n}```", "\n\n", "**![图片说明](https://img-ask.csdn.net/upload/201903/25/1553485017_94211.png)这是运行后的结果，还是找不出错误\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;监听学号框的onchange事件&amp;#xff0c;触发JS函数&amp;#xff0c;JS函数里边用ajax异步查询数据库得到姓名返回&amp;#xff0c;然后通过JS显示到姓名框。学过jQuery的话&amp;#xff0c;这个问题很简单。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["JSP怎么实现，输入一个输入框，另一个输入框就会读取数据库的数据然后自动填充!!", ["JSP怎么实现，输入一个输入框，另一个输入框就会读取数据库的数据然后自动填充。", "\n\n", "在页面上我有两个输入框，一个是学号的，一个是姓名的。", "\n\n", "我想要在我输入完学号后，姓名的输入框给我查询到相应的名字后自动填充在姓名输入框中。", "\n\n", "用JSP和JS实现，在写java web的项目，求大佬指教。！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;所有数字类型都要加取地址符  &amp;amp;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Book&lt;/span&gt;\n{\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; title[&lt;span class=\"hljs-number\"&gt;124&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; author[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; price;\n&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; date;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; publisher[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n} book; &lt;span class=\"hljs-comment\"&gt;//变量另一种声明,此时是全局变量(在其他函数中也可以使用)&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入书名: &amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,book.title);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入作者: &amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,book.author);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入售价: &amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;book.price);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入出版日期: &amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;book.date);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入出版社: &amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,book.publisher);\n\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;数据录入完毕&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#34;&lt;/span&gt;);\n \n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;书名:%s\\n&amp;#34;&lt;/span&gt;,book.title);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;作者:%s\\n&amp;#34;&lt;/span&gt;,book.author);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;售价:%f\\n&amp;#34;&lt;/span&gt;,&amp;amp;book.price);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出版日期:%d\\n&amp;#34;&lt;/span&gt;,book.date);\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出版社:%s\\n&amp;#34;&lt;/span&gt;,book.publisher);\n \n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/860141350646138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["dev c++程序运行没输入完就结束", ["\n", "#include <stdio.h>", "\n", "struct Book", "{", "    char title[124];", "    char author[40];", "    float price;", "    unsigned int date;", "    char publisher[40];", "} book;  //变量另一种声明,此时是全局变量(在其他函数中也可以使用) ", "\n", "int main()", "{", "    printf(\"请输入书名: \");", "    scanf(\"%s\",book.title);", "    printf(\"请输入作者: \");", "    scanf(\"%s\",book.author);", "    printf(\"请输入售价: \");", "    scanf(\"%f\",&book.price);", "    printf(\"请输入出版日期: \");", "    scanf(\"%d\",book.date);", "    printf(\"请输入出版社: \");", "    scanf(\"%d\",book.publisher);", "\n", "printf", "(", "\"\\n======数据录入完毕=====\"", ");\n\n", "printf", "(", "\"书名:%s\\n\"", ",book.title);\n", "printf", "(", "\"作者:%s\\n\"", ",book.author);\n", "printf", "(", "\"售价:%f\\n\"", ",book.price);\n", "printf", "(", "\"出版日期:%d\\n\"", ",book.date);\n", "printf", "(", "\"出版社:%s\\n\"", ",book.publisher);\n\n", "return", " ", "0", ";\n", "\n", "}", "\n", "请问为什么会出现这种情况？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;又是这个cpno&amp;#61;5的案例&amp;#xff0c;几年间已经有不少网友都反馈这个几乎一模一样的问题&amp;#xff0c;表名字段名都一模一样&amp;#xff0c;报错的值也都是5&amp;#xff0c;你们这都是在哪学的呀&amp;#xff1f;&lt;br /&gt;大概率是因为这个表上建了个外键&amp;#xff0c;要求cpno必须来自于cno&amp;#xff0c;而你这个5不存在于cno里&amp;#xff0c;就报错了。&lt;br /&gt;所以你得先新增一行cno为5的数据进行&amp;#xff0c;然后才能添加cpno为u5的这条数据&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据库建表输入数据时出现错误", ["使用SQL server创建数据库，建表输入数据时出现错误，红色感叹号。后两列是允许空值的。"]], "Tag": "程序设计"}
{"Answer": "二维字符数组，最后拼接，插入“\\n”衔接就能一次性输出了，你是要这种效果么", "Konwledge_Point": "数据的输入", "Question": ["关于一次性多组处理问题", ["怎样一次性输入多组数据，一次性处理，例如，一次性输入3组数据，分三行，每行一组，然后输出所输入的数据，分三行输出", "\n输入", "\n3 2", "\n1 3", "\n2 4", "\n输出", "\n3 2", "\n1 3", "\n2 4"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;语法错误&amp;#xff1a;第13行 if arr[i]&amp;lt;arr[j]  加上括号&amp;#xff0c;变成  if (arr[i]&amp;lt;arr[j])&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;这道题的目标是找到最大值和最小值&amp;#xff0c;并不是排序&amp;#xff0c;所以在for循环中&amp;#xff0c;没必要做那么多交换&amp;#xff08;关键是还错了&amp;#xff09;&amp;#xff0c;&lt;br /&gt;只需额外定义两个变量max,min分别记住当前的最大值最小值即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{ &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[n];\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;arr[i]);\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min,max;\nmin&amp;#61;arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\nmax&amp;#61;arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (min &amp;gt; arr[i]) min &amp;#61; arr[i];\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max &amp;lt; arr[i]) max &amp;#61; arr[i];\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,max,min);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言：输入若干整数，找出其中的最大值和最小值，这段代码哪里错了？", ["【问题描述】编写一个程序，用户输入若干整数，试找出其中的最大数和最小数。", "【输入形式】用户在第一行待输入数据个数，在第二行输入数据。", "【输出形式】程序在下一行输出数据的最大值和最小值", "【样例输入】", " 5", " 89 62 96 74 52", "【样例输出】96 52", "【样例说明】用户第一次输入的为数据个数，在下一行依次输入数据。输出为5个数中的最大值和最小值，输出时候两个数之间用空格分隔。", "#include<stdio.h>", "int main()", "{    int n,i;", "    scanf(\"%d\",&n);", "    int arr[n];", "    for(i=0;i<n;i++)", "    {", "        scanf(\"%d\",&arr[i]);", "    }", "    for(i=0;i<n;i++)", "    {", "        int t,j=i+1;", "        if arr[i]<arr[j]", "        {", "            t=arr[i];", "            arr[i]=arr[j];", "            arr[j]=t;", "        }", "    }", "    printf(\"%d %d\",arr[0],arr[n]);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你应该获取的是data.categoryEntityList吧&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["后台正常，但是前端页面获取不到数据", ["问题遇到的现象和发生背景", "\n", "练习尚硅谷的谷粒商城，产品三级分类，用的他们的代码，运行也没有报错，但是我的数据获取不到", "\n", "问题相关代码，请勿粘贴截图", "\n", " methods: {\n    getMenus() {\n      ", "this", ".$http({\n        url: ", "this", ".$http.adornUrl(", "\"/product/category/list/tree\"", "),\n        method: ", "\"get\"", "\n      }).then(({ ", "data", " }) => {\n        console.log(", "\"成功获取到菜单数据...\"", ", ", "data", ".", "data", ");\n        ", "this", ".menus = ", "data", ".", "data", ";\n      });\n    },\n created() {\n    ", "this", ".getMenus();\n  },\n\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "https://bbs.csdn.net/topics/390751876", "Konwledge_Point": "数据的输入", "Question": ["输入n(n<=100)个整数，按照绝对值从大到小排序后输出", ["Problem Description", "\n输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。", "\n\n", "Input", "\n输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。 ", "\n\n", "Output", "\n对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。", "\n\n", "Sample Input", "\n3 3 -4 2", "\n4 0 1 2 -3", "\n0", "\n\n", "Sample Output", "\n-4 3 2", "\n-3 2 1 0"]], "Tag": "程序设计"}
{"Answer": "```\r\n 你的主程序不是mfc的，而是win32 sdk的。\r\n\r\n所以不需要重写什么PreTranslateMessage\r\n写在你的CALLBACK _ProcDlgMain里面就可以了\r\n\r\n在\r\nif(uMsg == WM_CLOSE)\r\n            EndDialog(hwnd,NULL);\r\n下面\r\nelse if(uMsg==WM_KEYDOWN &amp;&amp; wParam==VK_RETURN)\r\n{\r\n    keybd_event(vk_tab,0,0,0);\r\n　keybd_event(vk_tab,0,KEYEVENTF_KEYUP,0);\r\n }\r\n```", "Konwledge_Point": "数据的输入", "Question": ["MFC怎么实现编辑框回车输入数据", ["因为现在要交课程设计，暂时没时间系统学习mfc，不太理解其中的工作原理。", "\n做的是一个成绩统计系统，输入8个成绩，输出个分数段人数。界面如下：", "\n现在在就是想实现在输入框输入成绩后按回车，可以完成本次输入、清空编辑框再进行下一次输入。网上说是重写PreTranslateMessage：", "\n\n", " BOOL CGradeStatisticDlg::PreTranslateMessage(MSG* pMsg) \n{\n        if(pMsg->message==WM_KEYDOWN && pMsg->wParam==VK_RETURN) \n        {\n            p[i] = m_score; //m_score 为编辑框对应的cstring类型变量\n            m_score=\"0x0D\";\n            i++;\n            UpdateData(true);\n            return true;\n        } \n        return CDialog::PreTranslateMessage(pMsg);\n｝\n\n", "\n\n", "然后请问重写完后要怎么在主程序中加入它呢？", "\n主程序为", "\n\n", " #include <windows.h>\n#include <string.h>\n#include \"stdafx.h\" \n#include \"resource.h\"\n\n\n\nHINSTANCE hInstance;\n\nLRESULT CALLBACK _ProcDlgMain(HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam)\n {              BOOL szBuffer;\n                int a1;\n                short a2;\n                int i, b[8];\n                int q[6];\n                HICON hc;\n        if(uMsg == WM_CLOSE)\n            EndDialog(hwnd,NULL);\n        else if(uMsg == WM_COMMAND) \n        {   a1=wParam;\n            a2=a1;\n            if(a2 == B2)\n                EndDialog(hwnd,NULL);\n            else if (a2 == B1)      \n            {\n                    for (int j=0; j<8; j++) b[j]=89;        //b为输入成绩，q为统计成绩\n                    for(i=0;i<6;i++)        q[i]=0;\n\n                    __asm{              \n                                mov ecx, 8\n                                mov edi, 0\n                        again:\n                                mov edx, b[edi*4]\n                                cmp edx, 60\n                                jb  below60\n                                cmp edx, 70\n                                jb  below70\n                                cmp edx, 80\n                                jb  below80\n                                cmp edx, 90\n                                jb  below90\n                                cmp edx, 100\n                                jb  below100\n                        equal100:   \n                                inc q[5*4]\n                                jmp done\n                        below60:\n                                inc q[0*4]\n                                jmp done\n                        below70:\n                                inc q[1*4]\n                                jmp done\n                        below80:    \n                                inc q[2*4]\n                                jmp done\n                        below90:\n                                inc q[3*4]\n                                jmp done\n                        below100:\n                                inc q[4*4]\n                        done:\n                                inc edi\n                                loop again\n                    }  \n                    SetDlgItemInt(hwnd,E1,q[0],TRUE);\n                    SetDlgItemInt(hwnd,E2,q[1],TRUE);\n                    SetDlgItemInt(hwnd,E3,q[2],TRUE);\n                    SetDlgItemInt(hwnd,E4,q[3],TRUE);\n                    SetDlgItemInt(hwnd,E5,q[4],TRUE);\n                    SetDlgItemInt(hwnd,E6,q[5],TRUE); \n              }\n        }\n        else\n            return FALSE;\n\n        return TRUE;\n}\n\nint _stdcall WinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpCmdLine,int nCmdShow)\n{       hInstance=GetModuleHandle(NULL);\n        DialogBoxParam(hInstance,(LPCTSTR)D1,NULL,(DLGPROC)_ProcDlgMain,NULL);\n        ExitProcess(NULL);\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;int main(void){&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int fa[5], v, i;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;请输入5个整数&amp;#xff0c;每输入一个按回车键&amp;#xff1a;&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(scanf(&amp;#34;%d&amp;#34;, &amp;amp;fa[i]) !&amp;#61; EOF){ // 可以连续换行输入value&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        i &amp;#43;&amp;#43;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(i &amp;gt;&amp;#61; 5){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;请输入待查数据按回车键&amp;#xff1a;&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        scanf(&amp;#34;%d&amp;#34;, &amp;amp;v)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        for(i &amp;#61; 0; i &amp;lt; 5; i &amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            if(v &amp;#61;&amp;#61; fa[i]){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                printf(&amp;#34;待查数据下标为%d&amp;#xff1a;&amp;#34;, i);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入5个整数放入一个数组中，并且输入一个待查找数据，调用printf输出待查找数据的下标号。", ["大佬救命 救救孩子吧 C++基础的程序。  从键盘输入5个整数放入一个数组中，并且输入一个待查找数据，调用printf输出待查找数据的下标号。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符串分割&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Arduino 单片机怎么做到串口数据分开提取？", ["\n串口接收器内容:", "A", "1234.124 125", ".", "14480 88", ".", "8000", " ……\n希望识别如果是", "A", "就吧后面的内容以逗号和空格分开赋值给变量a，b，c，d……如果开头字不是", "A", "就清空串口缓冲区😳\n", "\n", "#include <Wire.h>", "#include<Stepper.h>", "\n", "String a=\"\";", "String c=\"\";", "String yc1=\"\";     //记录收到的数据赋值与清零", "String yc2=\"\";", "\n", "const int dj1 =4600;    //测试变量", "const int dj2 =4600;", "\n", "Stepper myStepper1 (dj1, 8, 9),", "        myStepper2 (dj2, 8, 9);", "\n", "void setup()", "{", "  Serial.begin(9600);     //设置波特率", "  (Serial.available()<=-1);    //清除缓存", "  Serial.println(\"就绪！\");    //返回状态", "\n", "}", "void loop()", "{", "\n", "  while (Serial.available()>0)    //判断串口是否有数据输入", "  {", "\n", "c += char(Serial.read());    ", "//", "读取输入数据赋值给c\nyc1=c;    ", "//", "收到结果另外赋值储存当前\nSerial.println(", "\"收到！\"", ");     ", "//", "串口输出信息\n", "\n", "  }", "  c=a;  //清除已经不需要的值", "  Serial.println(yc1);   //调试输出", "  Serial.println(dj1);", "\n", "}", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;import java.util.Scanner;\n\npublic class CalculateScore {\n    public static void main(String[] args) {\n        System.out.println(&amp;#34;请依次输入5个学生的数据&amp;#xff1a;学号、班级、姓名、三门课成绩&amp;#xff08;以空格隔开&amp;#xff09;&amp;#34;);\n        Scanner scanner &amp;#61; new Scanner(System.in);\n        // 5行7列&amp;#xff0c;最后一列用来存平均成绩\n        Object[][] array &amp;#61; new Object[5][7];\n        int enterCount &amp;#61; 0;\n        while (enterCount &amp;lt; 5) {\n            String line &amp;#61; scanner.nextLine();\n            String[] strings &amp;#61; line.split(&amp;#34; &amp;#34;);\n\n            array[enterCount][0] &amp;#61; strings[0];\n            array[enterCount][1] &amp;#61; strings[1];\n            array[enterCount][2] &amp;#61; strings[2];\n\n            double score1 &amp;#61; Double.parseDouble(strings[3]);\n            array[enterCount][3] &amp;#61; score1;\n\n            double score2 &amp;#61; Double.parseDouble(strings[4]);\n            array[enterCount][4] &amp;#61; score2;\n\n            double score3 &amp;#61; Double.parseDouble(strings[5]);\n            array[enterCount][5] &amp;#61; score3;\n\n            double avgScore &amp;#61; (score1 &amp;#43; score2 &amp;#43; score3) / 3;\n            array[enterCount][6] &amp;#61; avgScore;\n            enterCount&amp;#43;&amp;#43;;\n        }\n\n        double maxAvgScore &amp;#61; (double) array[0][6];\n        int maxAvgScoreStuIndex &amp;#61; 0;\n        for (int index &amp;#61; 0; index &amp;lt; array.length; index&amp;#43;&amp;#43;) {\n            double score &amp;#61; (double) array[index][6];\n            if (score &amp;gt; maxAvgScore) {\n                maxAvgScore &amp;#61; score;\n                maxAvgScoreStuIndex &amp;#61; index;\n            }\n        }\n\n        String format &amp;#61; &amp;#34;%.2f&amp;#34;; // 保留两位小数\n        System.out.println(&amp;#34;所有学生的平均成绩如下&amp;#xff1a;&amp;#34;);\n        for (int index &amp;#61; 0; index &amp;lt; array.length; index&amp;#43;&amp;#43;) {\n            System.out.println(\n                    array[index][2] &amp;#43; &amp;#34;: &amp;#34; &amp;#43; String.format(format, (double) array[index][6]));\n        }\n\n        System.out.println(&amp;#34;平均分最高分学生数据如下&amp;#xff1a;&amp;#34;);\n        StringBuilder str &amp;#61; new StringBuilder();\n        for (int index &amp;#61; 0; index &amp;lt; array[maxAvgScoreStuIndex].length; index&amp;#43;&amp;#43;) {\n            if (index &amp;#61;&amp;#61; array[maxAvgScoreStuIndex].length - 1) {\n                str.append(String.format(format, (double) array[maxAvgScoreStuIndex][index]));\n            } else {\n                str.append(array[maxAvgScoreStuIndex][index]);\n            }\n            str.append(&amp;#34; &amp;#34;);\n        }\n        System.out.println(str.toString());\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"350\" src=\"https://img-ask.csdnimg.cn/upload/1607770294257.png\" width=\"556\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["java数组练习，有 5 个学生，每个学生的数据包括学号、班级、姓名、三门课成绩。", ["有 5 个学生，每个学生的数据包括学号、班级、姓名、三门课成绩。从键盘输入5 个学生数据，要求打印出每个学生三门课的平均成绩，以及平均分最高分学生的所有数据。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;s1&lt;/span&gt;&amp;#61;s2&amp;#61;0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; 1:\n    &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;int(input())\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&amp;#61;0:\n        break\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n%&lt;span class=\"hljs-attribute\"&gt;3&lt;/span&gt;&amp;#61;&amp;#61;0:\n        s1&amp;#43;&amp;#61;1\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n%&lt;span class=\"hljs-attribute\"&gt;5&lt;/span&gt;&amp;#61;&amp;#61;0:\n        s2&amp;#43;&amp;#61;1\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Divided by 3 is {} and divided by 5 is {}.&amp;#39;&lt;/span&gt;.format(s1,s2))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;br /&gt; &lt;strong&gt;有帮助请&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用Python编程输入的数字以0结束", ["【问题描述】从键盘输入不确定个数的整数，以0结束。统计其中能被3整除的数的个数，能被5整除的数的个数并输出", "\n", "【问题输入】整数", "\n", "【问题输出】直接输出个数", "\n", "【输入样例】6", "\n", "                8\n", "\n", "                15\n", "\n", "                7\n", "\n", "               0", "\n", "\n", "【输出样例】Divided by 3 is 2 and divided by 5 is 1."]], "Tag": "程序设计"}
{"Answer": "//button事件里添加\r\nDataGridViewRow gridRow=this.DataGridView1.Rows[gvSick.Rows.Add()];\r\ngridRow..Cells[0].Value=this.textbox1.Text.Trim();\r\ngridRow..Cells[1].Value=\"\";", "Konwledge_Point": "数据的输入", "Question": ["C#新手，创建DataGridView，如何手动输入数据并让其显示？", ["我创建了一个DataGridView，在里面设置了两列。", "\n\n", "现在有一个textbox和一个button，我想实现当我每次在这个textbox里输入一个数字，按下button,可以在之前创建的DataGridView里插入新的一行，并在第一列里不断记录并显示我输入的这个数字，第二行留空。简而言之就是一个自己输入数字的记录器。", "\n\n", "请问该怎么实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不是等待你输入吗&amp;#xff1f;&lt;br /&gt;你断点打在输入上面&amp;#xff0c;需要望下一步走&amp;#xff0c;否则输入不了。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Visual Studio2019调试窗口无法输入是什么原因？", ["设置断点后，调试窗口无法输入是什么原因呀？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以新建两个list来存储&amp;#xff0c;每次输入各放进去一个元素&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何用Python实现一次输入两组整型数据", ["如何用Python实现一次输入两组整型数据?例如输入：8   2", "            9   7"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在int k&amp;#61; xl.nextInt();外面套一个while或者for循环&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["请问一下各位友友，怎么样才能让我这个程序输入数据执行完后接着又可以在控制台输入数据再次运行输出呢？", ["    Scanner xl=", "new", " Scanner(", "System", ".", "in", ");\n    ", "System", ".", "out", ".print(\"请输入乘法表的层数：\");\n    ", "int", " k= xl.nextInt();\n    ", "for", " (", "int", " i=", "1", ";i<=k;i++){\n        ", "for", " (", "int", " j=", "1", ";j<=i;j++){\n            ", "System", ".", "out", ".print(j+\"*\"+i+\"=\"+i*j+", "'\\t'", ");\n        }\n        ", "System", ".", "out", ".println(\"\");\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf里面的引号格式问题, 你加了\\n那输入就必须包括回车&lt;/p&gt;\n\n&lt;p&gt;double用%lf&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么第一次输入数据后要再输入一个才可以运行呀？（图一）\n为什么换了数据类型就只能输入一次数据，然后", ["为什么第一次输入数据后要再输入一个才可以运行呀？（图一）\n为什么换了数据类型就只能输入一次数据，然后就. .这样了\n小白⚽️⚽️[face]monkey2:019.png[/face]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; N &amp;#61; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t, n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[N][N];\n    cin &amp;gt;&amp;gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt; t; k&amp;#43;&amp;#43;)\n    {\n        cin &amp;gt;&amp;gt; n;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n                cin &amp;gt;&amp;gt; a[i][j];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(&amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; n);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n                cout &amp;lt;&amp;lt; a[i][j] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["PTA问题“n”阶方阵逐层排序问题", ["给你一个n阶方阵，请你把每行数据按数据从小到大排序并输出。", "\n", "输入格式:", "输入数据首先包含一个整数T，表示测试实例的个数，然后是T组测试数据。 每组测试数据的第一行输入1个整数n(1<n<20),接下来输入n行数据，每行n个整数。", "\n", "输出格式:", "对于每组测试，输出排好序后的结果。每行中各数据之间留一个空格。", "输入样例：", "2", "3", "4 9 2", "3 5 7", "8 1 6", "2", "3 5", "1 2", "输出样例：", "2 4 9", "3 5 7", "1 6 8", "3 5", "1 2"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把first, second在获取了text之后result&amp;#61;之前&amp;#xff0c;加上&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;first&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; str2num(first)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;second&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; str2num(second)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果是按照题主那样输入矩阵&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;eval([&lt;span class=\"hljs-string\"&gt;&amp;#39;first&amp;#61;&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;first&lt;/span&gt;),&lt;span class=\"hljs-string\"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;]);  \neval([&lt;span class=\"hljs-string\"&gt;&amp;#39;second&amp;#61;&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;second&lt;/span&gt;),&lt;span class=\"hljs-string\"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;]);  \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["MATLAB如何用appdesigner来输入矩阵进行计算？", ["我想用matlab的appdesigner来做一个简单的解多元一次方程组的程序，就是整一个比较简单的程序，想用 系数矩阵\\值向量 的方法来做，", "但是目前我用的输入组件好像没有可以直接能输入矩阵并直接进行计算的，试过了用了文本区域组件和编辑字段（文本）组件来录入矩阵，但最终APP在运行时总会报错。试了好久都没有找到合适的方法能够在appdesigner中输入矩阵进行计算。", "本人本科新生编程基础知识较为薄弱，还请多多指教。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这样子可以啊。不过1 &amp;lt; x &amp;lt; 3 &amp;amp;&amp;amp; 1 &amp;lt; y &amp;lt; 3是错误写法&amp;#xff0c;改为if(x&amp;gt;1 &amp;amp;&amp;amp; x&amp;lt;3 &amp;amp;&amp;amp; y&amp;gt;1 &amp;amp;&amp;amp; y&amp;lt;3)&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c++如何在输入时输入的数以逗号隔开😥，能用cin吗", ["\n", "\n", "c++输入时怎么以逗号隔开呢？能用cin吗？", "\n", "#include ", "#include ", "using namespace std;", "int main()", "{", "    double x, y;", "    char m;", "    cin >> x >> m>> y;", "    x = fabs(x);", "    y = fabs(y);", "    cout << x << y << endl;", "    if ((1 < x < 3 && 1 < y < 3) && (x - 2) * (x - 2) + (y - 2) * (y - 2) <= 1)", "        cout << 10 << endl;", "    else", "        cout << 0 << endl;", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;ls &amp;#61; []\nfor i in range(5):\n    n &amp;#61; input(&amp;#34;第%d次输入&amp;#xff1a;&amp;#34; % (i&amp;#43;1))\n    if n in ls:\n        pass\n    else:\n        ls.append(n)\nprint(ls)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["编写代码，请用户连续输入五次，将输入的内容中重复的内容剔除后输出", ["编写代码，请用户连续输入五次，将输入的内容中重复的内容剔除后输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;原来是因为idea和部分软件冲突了......关了之后正常了&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["scanner运行时控制台还未输入数据程序就自动结束，但是在debug的时候一切正常", ["\n", "System.out.println(\"请输入圆的半径\");", "\n", "double r=new Scanner(System.in).nextDouble();", "\n", "System.out.println(3.14", "r", "r);"]], "Tag": "程序设计"}
{"Answer": "记得点赞哦。主要问题是头结点的使用不一致，代码中有的地方直接存储数据，当数据节点使用，有的地方则当做纯粹的头结点使用，还有其他的一些问题，我修改了部分，可以使用beyondcompare 对比下代码修改的地方。\r\n\r\n```\r\n\r\n#include&lt;stdlib.h&gt;\r\n#include&lt;string.h&gt;\r\ntypedef struct node\r\n{\r\n\tchar name[20];                       //姓名\r\n\tchar age[3];                            //年龄\r\n\tchar native[20];                        //籍贯\r\n\tchar sex[20];                          //性别\r\n\tchar phone[20];                      //联系电话 \r\n\tchar pro[50];                          //专业 \r\n\tchar pos[50];                       //报考职位 \r\n\tchar yeargra[4];                        //毕业年份 \r\n\tchar pol[50];                          //政治面貌 \r\n\tint number;                          //考生编号 \r\n}table;\r\ntypedef struct List\r\n{\r\n\ttable data;\r\n\tstruct List *next;\r\n}list;\r\nint meau_1();\r\nint meau_2();\r\nint meau_3();\r\nint meau_4();\r\nvoid read_file(list *);\r\nvoid meau_total(list *);\r\nvoid add_one_list(list *);\r\nvoid del_one_list(list *, int);\r\nvoid mod_one_list(list *, int);\r\nvoid out_one_list(list *, int);\r\nvoid out_all_list(list *);\r\nvoid out_nape_list(list *, int);\r\nvoid write_file(list *);\r\n\r\nint main()\r\n{\r\n\tlist *head;\r\n\thead = (list *)malloc(sizeof(list *));\r\n\t//head = NULL;\r\n\tread_file(head);\r\n\tmeau_total(head);\r\n\treturn 0;\r\n}\r\n\r\nvoid meau_total(list *head)\r\n{\r\n\tint n, m, k, nap;\r\n\tfor (m = meau_1(); m != 3; m = meau_1()) //菜单一 选择合法用户 \r\n\t{\r\n\t\tif (m == 1)    //菜单二 选择查询考生信息 \r\n\t\t{\r\n\t\t\tfor (n = meau_2(); n != 3; n = meau_2())//查询单一考生信息 \r\n\t\t\t{\r\n\t\t\t\tif (n == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"请输入考生编号：\");//输入考生编号 \r\n\t\t\t\t\tscanf(\"%d\", &amp;n);\r\n\t\t\t\t\tout_one_list(head, n);//输出考生信息 \r\n\t\t\t\t}\r\n\t\t\t\tif (n == 2)//浏览所有考生信息  \r\n\t\t\t\t\tout_all_list(head);//输出所有考生信息 \r\n\t\t\t}\r\n\t\t}\r\n\t\tif (m == 2)\r\n\t\t{\r\n\t\t\tfor (n = meau_3(); n != 5; n = meau_3())\r\n\t\t\t{\r\n\t\t\t\tif (n == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (k = meau_4(); k != 4; k = meau_4())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (k == 1)//查询单一考生信息 \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"请输入考生编号：\");//输入考生编号 \r\n\t\t\t\t\t\t\tscanf(\"%d\", &amp;n);\r\n\t\t\t\t\t\t\tout_one_list(head, n);//输出考生信息 \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (k == 2)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\r\n\t\t\t\t\t\t\tprintf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  10-考生编号\\n\");\r\n\t\t\t\t\t\t\tprintf(\"请输入需要查询的项:\");\r\n\t\t\t\t\t\t\tscanf(\"%d\", &amp;nap);\r\n\t\t\t\t\t\t\tout_nape_list(head, nap);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (k == 3)\r\n\t\t\t\t\t\t\tout_all_list(head);\r\n\t\t\t\t\t\tif (k == 5)\r\n\t\t\t\t\t\t\texit(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (n == 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"请输入要插入的考生的信息：\\n\");                //输入插入考生信息 \r\n\t\t\t\t\tadd_one_list(head);\r\n\t\t\t\t}\r\n\t\t\t\tif (n == 3)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"请输入要修改的考生的编号：\");                                          //输入修改考生编号 \r\n\t\t\t\t\tscanf(\"%d\", &amp;n);\r\n\t\t\t\t\tmod_one_list(head, n);\r\n\t\t\t\t}\r\n\t\t\t\tif (n == 4)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"请输入要删除的考生的编号:\");            //输入删除考生编号\r\n\t\t\t\t\tscanf(\"%d\", &amp;n);\r\n\t\t\t\t\tdel_one_list(head, n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\twrite_file(head);\r\n}\r\n\r\nint meau_1()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tsystem(\"cls\");\r\n\t\tprintf(\"\\n\\t\\t\\t 公务员管理系统\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"\\t\\t 1--合法用户 2--管理员\\n\\n\");\r\n\t\tprintf(\"\\t\\t 3--退出系统\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"请选择(1-3): \");\r\n\t\tscanf(\"%d\", &amp;i);\r\n\t\tif (i &lt; 4 &amp;&amp; i &gt;= 1)break;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\nint meau_2()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tsystem(\"cls\");\r\n\t\tprintf(\"\\n\\t\\t\\t 公务员管理系统(合法用户栏)\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"\\t\\t 1--查询考生信息 2--浏览考生信息\\n\\n\");\r\n\t\tprintf(\"\\t\\t 3--返回上一层\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"请选择(1-): \");\r\n\t\tscanf(\"%d\", &amp;i);\r\n\t\tif (i &lt; 4 &amp;&amp; i &gt;= 1)break;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\nint meau_3()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tsystem(\"cls\");\r\n\t\tprintf(\"\\n\\t\\t\\t 公务员管理系统（管理员栏）\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"\\t\\t 1--查询考生信息 2--插入考生信息\\n\\n\");\r\n\t\tprintf(\"\\t\\t 3--修改考生信息 4--删除考生信息\\n\\n\");\r\n\t\tprintf(\"\\t\\t 5--返回上一层   \\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"请选择(1-6): \");\r\n\t\tscanf(\"%d\", &amp;i);\r\n\t\tif (i &lt; 7 &amp;&amp; i &gt;= 1)break;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\nint meau_4()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tsystem(\"cls\");\r\n\t\tprintf(\"\\n\\t\\t\\t 公务员管理系统（管理员查询栏）\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"\\t\\t 1--查询单一考生信息 2--查询某项总考生信息\\n\\n\");\r\n\t\tprintf(\"\\t\\t 3--查询所有考生信息 4--返回上一层\\n\\n\");\r\n\t\tprintf(\"\\t\\t **********************************************\\n\\n\");\r\n\t\tprintf(\"请选择(1-4): \");\r\n\t\tscanf(\"%d\", &amp;i);\r\n\t\tif (i &lt; 5 &amp;&amp; i &gt;= 1)break;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\nvoid read_file(list *head)\r\n{\r\n\tlist *p1, *p2, *p3;\r\n\tFILE *inFile;\r\n\tif ((inFile = fopen(\"公务员数据.txt\", \"r\")) == NULL)\r\n\t{\r\n\t\tprintf(\"文件不存在或无法打开!\\n\");\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tp3 = p1 = (list *)malloc(sizeof(list));\r\n\thead-&gt;next = p1;\r\n\tp1-&gt;next = NULL;\r\n\twhile (!feof(inFile))\r\n\t{\r\n\t\tfscanf(inFile, \"%s %s %s %s %s %s %s %s %s %d\", p1-&gt;data.name, p1-&gt;data.age, p1-&gt;data.native, p1-&gt;data.sex, p1-&gt;data.phone, p1-&gt;data.pro, p1-&gt;data.pos, p1-&gt;data.yeargra, p1-&gt;data.pol, &amp;p1-&gt;data.number);\r\n\t\tp2 = (list *)malloc(sizeof(list));\r\n\t\tp1-&gt;next = p2;\r\n\t\tp3 = p1;\r\n\t\tp1 = p2;\r\n\t\tp1-&gt;next = NULL;\r\n\t}\r\n\r\n\tfree(p1);\r\n\tp3-&gt;next = NULL;\r\n\tfclose(inFile);\r\n\treturn;\r\n}\r\n\r\nvoid write_file(list *head)\r\n{\r\n\tlist *p1;\r\n\tFILE *outFile = fopen(\"公务员数据.txt\", \"w\");\r\n\tp1 = head-&gt;next;\r\n\twhile (p1 != NULL)\r\n\t{\r\n\t\tfprintf(outFile, \"%s %s %s %s %s %s %s %s %s %d\\n\", p1-&gt;data.name, p1-&gt;data.age, p1-&gt;data.native, p1-&gt;data.sex, p1-&gt;data.phone, p1-&gt;data.pro, p1-&gt;data.pos, p1-&gt;data.yeargra, p1-&gt;data.pol, p1-&gt;data.number);\r\n\t\tp1 = p1-&gt;next;\r\n\t}\r\n\tfclose(outFile);\r\n\tprintf(\"\\n 保存完毕 \\n\");\r\n\tsystem(\"pause\");\r\n}\r\n\r\nvoid add_one_list(list *head)\r\n{\r\n\tlist *p1, *p2;\r\n\t\r\n\tp1 = head;\r\n\tp2 = (list *)malloc(sizeof(list));\r\n\r\n\tif (p1-&gt;next != NULL)\r\n\t{\r\n\t\tp1 = head;\r\n\t\twhile (p1-&gt;next != NULL)\r\n\t\t\tp1 = p1-&gt;next;\r\n\t\tp2-&gt;data.number = p1-&gt;data.number + 1;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//head = p1 = (list *)malloc(sizeof(list));\r\n\t\tp2-&gt;data.number = 1;\r\n\t}\r\n\tprintf(\"请输入姓名：\"); scanf(\"%s\", p2-&gt;data.name);\r\n\tprintf(\"请输入年龄：\"); scanf(\"%s\", p2-&gt;data.age);\r\n\tprintf(\"请输入籍贯：\"); scanf(\"%s\", p2-&gt;data.native);\r\n\tprintf(\"请输入性别：\"); scanf(\"%s\", p2-&gt;data.sex);\r\n\tprintf(\"请输入电话：\"); scanf(\"%s\", p2-&gt;data.phone);\r\n\tprintf(\"请输入专业：\"); scanf(\"%s\", p2-&gt;data.pro);\r\n\tprintf(\"请输入报考职位：\"); scanf(\"%s\", p2-&gt;data.pos);\r\n\tprintf(\"请输入毕业年份：\"); scanf(\"%s\", p2-&gt;data.yeargra);\r\n\tprintf(\"请输入政治面貌：\"); scanf(\"%s\", p2-&gt;data.pol);\r\n\tp1-&gt;next = p2;\r\n\tp1 = p2;\r\n\tp1-&gt;next = NULL;\r\n\r\n}\r\n\r\nvoid del_one_list(list *head, int num)\r\n{\r\n\tlist *p1, *p2, *p3;\r\n\tp3 = p1 = head-&gt;next;\r\n\twhile (p1 != NULL &amp;&amp; p1-&gt;data.number != num)\r\n\t{\r\n\t\tp3 = p1;\r\n\t\tp1 = p1-&gt;next;\r\n\t}\r\n\tif (p1 == NULL)\r\n\t{\r\n\t\tprintf(\"查无此人！！\");\r\n\t\tsystem(\"pause\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tp3-&gt;next = p1-&gt;next;\r\n\t\t//p1-&gt;next = NULL;\r\n\t\tp1 = NULL;\r\n\t\tfree(p1);\r\n\t\twhile (p3-&gt;next != NULL)\r\n\t\t{\r\n\t\t\tp3 = p3-&gt;next;\r\n\t\t\tp3-&gt;data.number--;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid mod_one_list(list *head, int num)\r\n{\r\n\tlist *p1;\r\n\tchar flag;\r\n\tint nap;\r\n\tp1 = head-&gt;next;\r\n\twhile (p1 != NULL &amp;&amp; p1-&gt;data.number != num)\r\n\t\tp1 = p1-&gt;next;\r\n\tif (p1 == NULL)\r\n\t{\r\n\t\tprintf(\"查无此人！！\");\r\n\t\tsystem(\"pause\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tprintf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\r\n\t\tprintf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  \\n\");\r\n\t\tprintf(\"请输入要修改的项：\");\r\n\t\tscanf(\"%d\", &amp;nap);\r\n\t\tfor (flag = 'y'; flag != 'n' || flag != 'N';)\r\n\t\t{\r\n\t\t\tswitch (nap)\r\n\t\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.name);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.age);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.native);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 4:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.sex);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 5:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.phone);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 6:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.pro);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 7:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.pos);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 8:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.yeargra);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 9:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入修改数据：\");\r\n\t\t\t\tscanf(\"%s\", p1-&gt;data.pol);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (nap &gt; 9 || nap &lt; 1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"输入错误！！请重新输入！\\n\");\r\n\t\t\t\tsystem(\"pause\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"是否再次查询？\\n\");\r\n\t\t\t\tprintf(\"y/Y 或者 n/N\");\r\n\t\t\t\tscanf(\"%c\", &amp;flag);\r\n\t\t\t\tfor (; flag != 'y'&amp;&amp;flag != 'Y'&amp;&amp;flag != 'N'&amp;&amp;flag != 'n';)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"输入错误！！请重新输入！\\n\");\r\n\t\t\t\t\tscanf(\"%c\", &amp;flag);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag == 'y'&amp;&amp;flag == 'Y')\r\n\t\t\t{\r\n\t\t\t\tsystem(\"cls\");\r\n\t\t\t\tprintf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\r\n\t\t\t\tprintf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  \\n\");\r\n\t\t\t\tprintf(\"请输入要修改的项：\");\r\n\t\t\t\tscanf(\"%d\", &amp;nap);\r\n\t\t\t}\r\n\t\t\tif (flag == 'n'&amp;&amp;flag == 'N')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid out_one_list(list *head, int num)\r\n{\r\n\tlist *p1;\r\n\tif (head == NULL)\r\n\t{\r\n\t\tprintf(\"没有数据！\");\r\n\t\tsystem(\"pause\");\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tp1 = head-&gt;next;\r\n\t\twhile (p1 != NULL &amp;&amp; p1-&gt;data.number != num)\r\n\t\t\tp1 = p1-&gt;next;\r\n\t\tif (p1 == NULL)\r\n\t\t{\r\n\t\t\tprintf(\"查无此人！！\");\r\n\t\t\tsystem(\"pause\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\tsystem(\"pause\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nvoid out_all_list(list *head)\r\n{\r\n\tlist *p1;\r\n\tif (head == NULL)\r\n\t{\r\n\t\tprintf(\"没有数据！\");\r\n\t\tsystem(\"pause\");\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tp1 = head-&gt;next;\r\n\t\tprintf(\"姓名 年龄  籍贯  性别   联系电话     专业   报考职位   毕业年份   政治面貌  编号\\n\");\r\n\t\twhile (p1 != NULL)\r\n\t\t{\r\n\t\t\tprintf(\"%s %s %s %s %s %s %s %s %s %d\\n\", p1-&gt;data.name, p1-&gt;data.age, p1-&gt;data.native, p1-&gt;data.sex, p1-&gt;data.phone, p1-&gt;data.pro, p1-&gt;data.pos, p1-&gt;data.yeargra, p1-&gt;data.pol, p1-&gt;data.number);\r\n\t\t\tp1 = p1-&gt;next;\r\n\t\t}\r\n\t\tsystem(\"pause\");\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nvoid out_nape_list(list *head, int nape)\r\n{\r\n\tlist *p1;\r\n\tchar nap[50];\r\n\tif (head == NULL)\r\n\t{\r\n\t\tprintf(\"没有数据！\");\r\n\t\tsystem(\"pause\");\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tp1 = head-&gt;next;\r\n\t\twhile (p1-&gt;next != NULL)\r\n\t\t\tswitch (nape)\r\n\t\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.name, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.age, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.native, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 4:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.sex, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 5:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.phone, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 6:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.pro, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 7:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.pos, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 8:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.yeargra, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 9:\r\n\t\t\t{\r\n\t\t\t\tprintf(\"请输入查询的数据：\");\r\n\t\t\t\tscanf(\"%s\", nap);\r\n\t\t\t\tif (strcmp(p1-&gt;data.pol, nap) == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"姓名：%s\", p1-&gt;data.name);\r\n\t\t\t\t\tprintf(\"年龄：%s\", p1-&gt;data.age);\r\n\t\t\t\t\tprintf(\"籍贯：%s\", p1-&gt;data.native);\r\n\t\t\t\t\tprintf(\"性别：%s\", p1-&gt;data.sex);\r\n\t\t\t\t\tprintf(\"电话：%s\", p1-&gt;data.phone);\r\n\t\t\t\t\tprintf(\"专业：%s\", p1-&gt;data.pro);\r\n\t\t\t\t\tprintf(\"报考职位：%s\", p1-&gt;data.pos);\r\n\t\t\t\t\tprintf(\"毕业年份：%s\", p1-&gt;data.yeargra);\r\n\t\t\t\t\tprintf(\"政治面貌：%s\", p1-&gt;data.pol);\r\n\t\t\t\t\tprintf(\"编号：%d\", p1-&gt;data.number);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\tsystem(\"pause\");\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\n```\r\n部分运行结果：![图片说明](https://img-ask.csdn.net/upload/201903/14/1552558082_302019.png)", "Konwledge_Point": "数据的输入", "Question": ["简单的使用链表的系统，为什么无法实现数据输入功能？", ["我是一个c语言萌新，这里我做了个简单的使用链表的系统，在输入数据之后无法在后面操作中找出数据，找了很久都找不到哪里出错，希望能够得到解答。", "\n\n", "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\ntypedef struct node\n{\n    char name[20];                       //姓名\n    char age[3];                            //年龄\n    char native[20];                        //籍贯\n    char sex[20];                          //性别\n    char phone[20];                      //联系电话 \n    char pro[50];                          //专业 \n    char pos[50];                       //报考职位 \n    char yeargra[4];                        //毕业年份 \n    char pol[50];                          //政治面貌 \n    int number;                          //考生编号 \n}table;\ntypedef struct List\n{\n    table data;\n    struct List *next;\n}list;\nint meau_1();\nint meau_2();\nint meau_3();\nint meau_4();\nvoid read_file(list *);\nvoid meau_total(list *);\nvoid add_one_list(list *);\nvoid del_one_list(list *,int);\nvoid mod_one_list(list *,int);\nvoid out_one_list(list *,int);\nvoid out_all_list(list *);\nvoid out_nape_list(list *,int);\nvoid write_file(list *);\n\nint main()\n{\n    list *head;\n    head=(list *)malloc(sizeof(list *));\n    head=NULL;\n    read_file(head);\n    meau_total(head);\n    return 0;\n}\n\nvoid meau_total(list *head)\n{   \n    int n,m,k,nap;\n    for(m=meau_1();m!=3;m=meau_1()) //菜单一 选择合法用户 \n    {\n        if(m==1)    //菜单二 选择查询考生信息 \n        {\n            for(n=meau_2();n!=3;n=meau_2())//查询单一考生信息 \n            {\n                if(n==1)\n                {   \n                     printf(\"请输入考生编号：\");//输入考生编号 \n                     scanf(\"%d\",&n);\n                     out_one_list(head,n);//输出考生信息 \n                }\n                if(n==2)//浏览所有考生信息  \n               out_all_list(head);//输出所有考生信息 \n            }                                \n       }\n       if(m==2)\n       {\n            for(n=meau_3();n!=5;n=meau_3())\n            {   \n                if(n==1)\n                {\n                    for(k=meau_4();k!=4;k=meau_4())                                         \n                    {   \n                        if(k==1)//查询单一考生信息 \n                        {\n                            printf(\"请输入考生编号：\");//输入考生编号 \n                            scanf(\"%d\",&n);\n                            out_one_list(head,n);//输出考生信息 \n                        }\n                        if(k==2)\n                        {\n                            printf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\n                            printf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  10-考生编号\\n\");\n                            printf(\"请输入需要查询的项:\");\n                            scanf(\"%d\",&nap);\n                            out_nape_list(head,nap);\n                        }\n                        if(k==3)\n                            out_all_list(head);\n                        if(k==5)\n                            exit(0);\n                    }\n                }  \n                if(n==2)\n                {\n                    printf(\"请输入要插入的考生的信息：\\n\");                //输入插入考生信息 \n                    add_one_list(head); \n                }\n                if(n==3)\n                {\n                    printf(\"请输入要修改的考生的编号：\");                                          //输入修改考生编号 \n                    scanf(\"%d\",&n);\n                    mod_one_list(head,n);                   \n                }\n                if(n==4)\n                {\n                    printf(\"请输入要删除的考生的编号:\");            //输入删除考生编号\n                    scanf(\"%d\",&n);\n                    del_one_list(head,n); \n                }\n            }               \n       }\n    }\n    write_file(head);\n} \n\nint meau_1()\n{\n    int i;\n    while(1)\n    {\n        system(\"cls\"); \n        printf(\"\\n\\t\\t\\t 公务员管理系统\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"\\t\\t 1--合法用户 2--管理员\\n\\n\");\n        printf(\"\\t\\t 3--退出系统\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"请选择(1-3): \");\n        scanf(\"%d\",&i);\n        if(i<4&&i>=1)break;\n    }\n    return i;\n}\n\nint meau_2()\n{\n    int i;\n    while(1)\n    {\n        system(\"cls\"); \n        printf(\"\\n\\t\\t\\t 公务员管理系统(合法用户栏)\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"\\t\\t 1--查询考生信息 2--浏览考生信息\\n\\n\");\n        printf(\"\\t\\t 3--返回上一层\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"请选择(1-): \");\n        scanf(\"%d\",&i);\n        if(i<4&&i>=1)break;\n    }\n    return i;\n}\n\nint meau_3()\n{\n    int i;\n    while(1)\n    {\n        system(\"cls\"); \n        printf(\"\\n\\t\\t\\t 公务员管理系统（管理员栏）\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"\\t\\t 1--查询考生信息 2--插入考生信息\\n\\n\");\n        printf(\"\\t\\t 3--修改考生信息 4--删除考生信息\\n\\n\");\n        printf(\"\\t\\t 5--返回上一层   \\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"请选择(1-6): \");\n        scanf(\"%d\",&i);\n        if(i<7&&i>=1)break;\n    }\n    return i;\n}\n\nint meau_4()\n{\n    int i;\n    while(1)\n    {\n        system(\"cls\"); \n        printf(\"\\n\\t\\t\\t 公务员管理系统（管理员查询栏）\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"\\t\\t 1--查询单一考生信息 2--查询某项总考生信息\\n\\n\");\n        printf(\"\\t\\t 3--查询所有考生信息 4--返回上一层\\n\\n\");\n        printf(\"\\t\\t **********************************************\\n\\n\");\n        printf(\"请选择(1-4): \");\n        scanf(\"%d\",&i);\n        if(i<5&&i>=1)break;\n    }\n    return i;\n}\n\nvoid read_file(list *head)\n{\n    list *p1,*p2,*p3;\n    FILE *inFile;\n    if((inFile=fopen(\"公务员数据.txt\",\"f\"))==NULL)\n    {\n        printf(\"文件不存在或无法打开!\\n\");\n        return;\n    }\n    head=p1=(list *)malloc(sizeof(list));\n    p1->next=NULL;\n    while(!feof(inFile))\n    {\n        fscanf(inFile,\"%s %s %s %s %s %s %s %s %s %d\",p1->data.name,p1->data.age,p1->data.native,p1->data.sex,p1->data.phone,p1->data.pro,p1->data.pos,p1->data.yeargra,p1->data.pol,&p1->data.number);\n        p2=(list *)malloc(sizeof(list));\n        p1->next=p2;\n        p3=p1;\n        p1=p2;\n        p1->next=NULL;\n    }\n    free(p2);\n    p3->next=NULL;\n    fclose(inFile);\n    return;\n}\n\nvoid write_file(list *head)\n{\n    list *p1;\n    FILE *outFile=fopen(\"公务员数据.txt\",\"w\");\n    p1=head;\n    while(p1!=NULL)\n    {\n        fprintf(outFile,\"%s %s %s %s %s %s %s %s %s %d\\n\",p1->data.name,p1->data.age,p1->data.native,p1->data.sex,p1->data.phone,p1->data.pro,p1->data.pos,p1->data.yeargra,p1->data.pol,&p1->data.number);\n        p1=p1->next;\n    }\n    fclose(outFile);\n    printf(\"\\n 保存完毕 \\n\");\n    system(\"pause\");\n}\n\nvoid add_one_list(list *head)\n{\n    list *p1,*p2;\n    p2=(list *)malloc(sizeof(list));\n    if(head!=NULL)\n    {\n        p1=head;\n        while(p1->next!=NULL)\n            p1=p1->next;\n        p2->data.number=p1->data.number+1;\n    }\n    else\n    {\n        head=p1=(list *)malloc(sizeof(list));\n        p2->data.number=1;\n    }\n    printf(\"请输入姓名：\");scanf(\"%s\",p2->data.name);\n    printf(\"请输入年龄：\");scanf(\"%s\",p2->data.age);\n    printf(\"请输入籍贯：\");scanf(\"%s\",p2->data.native);\n    printf(\"请输入性别：\");scanf(\"%s\",p2->data.sex);\n    printf(\"请输入电话：\");scanf(\"%s\",p2->data.phone);\n    printf(\"请输入专业：\");scanf(\"%s\",p2->data.pro);\n    printf(\"请输入报考职位：\");scanf(\"%s\",p2->data.pos);\n    printf(\"请输入毕业年份：\");scanf(\"%s\",p2->data.yeargra);\n    printf(\"请输入政治面貌：\");scanf(\"%s\",p2->data.pol);\n    p1->next=p2;\n    p1=p2;\n    p1->next=NULL;\n\n}\n\nvoid del_one_list(list *head,int num)\n{\n    list *p1,*p2,*p3;\n    p1=head;\n    while(p1->next!=NULL&&p1->next->data.number!=num)\n        {\n            p3=p1;\n            p1=p1->next;\n        }\n    if(p1->next==NULL&&p1->data.number!=num)\n    {\n        printf(\"查无此人！！\");\n        system(\"pause\");\n    }\n    else\n    {\n        p3->next=p1->next;\n        p1->next=NULL;\n        free(p1);\n        while(p3->next!=NULL)\n        {\n            p3=p3->next;\n            p3->data.number--;\n        }\n    }\n}\n\nvoid mod_one_list(list *head,int num)\n{\n    list *p1;\n    char flag;\n    int nap;\n    p1=head;\n    while(p1->next!=NULL&&p1->data.number!=num)\n        p1=p1->next;\n    if(p1->next==NULL&&p1->data.number!=num)\n    {\n        printf(\"查无此人！！\");\n        system(\"pause\");\n    }\n    else\n    {            \n        printf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\n        printf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  \\n\");\n        printf(\"请输入要修改的项：\");\n        scanf(\"%d\",&nap);\n        for(flag='y';flag!='n'||flag!='N';)\n        {   \n            switch(nap)\n            {\n                case 1:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.name);\n                            break;\n                        }\n                case 2:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.age);\n                            break;\n                        }\n                case 3:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.native);\n                            break;\n                        }\n                case 4:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.sex);\n                            break;\n                        }\n                case 5:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.phone);\n                            break;\n                        }               \n                case 6:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.pro);\n                            break;\n                        }               \n                case 7:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.pos);\n                            break;\n                        }               \n                case 8:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.yeargra);\n                            break;\n                        }               \n                case 9:\n                        {\n                            printf(\"请输入修改数据：\");\n                            scanf(\"%s\",p1->data.pol);\n                            break;\n                        }                                                                                   \n            }\n            if(nap>9||nap<1)\n            {\n                printf(\"输入错误！！请重新输入！\\n\");\n                system(\"pause\");\n            }\n            else\n            {\n                printf(\"是否再次查询？\\n\");\n                printf(\"y/Y 或者 n/N\");\n                scanf(\"%c\",&flag);\n                for(;flag!='y'&&flag!='Y'&&flag!='N'&&flag!='n';)\n                {\n                    printf(\"输入错误！！请重新输入！\\n\");\n                    scanf(\"%c\",&flag);\n                }       \n            } \n                if(flag=='y'&&flag=='Y')\n                {\n                    system(\"cls\");\n                    printf(\"\\t1--姓名  2--年龄      3--籍贯      4--性别      5--联系电话\\n\");\n                    printf(\"\\t6--专业  7--报考职位  8--毕业年份  9--政治面貌  \\n\");\n                    printf(\"请输入要修改的项：\");\n                    scanf(\"%d\",&nap);\n                }\n                if(flag=='n'&&flag=='N')\n                    break;\n        }\n    }\n}\n\nvoid out_one_list(list *head,int num)\n{\n    list *p1;\n    if(head==NULL)\n    {\n        printf(\"没有数据！\");\n        system(\"pause\");\n        return;\n    }\n    else\n    {\n        p1=head;\n        while(p1->next!=NULL&&p1->data.number!=num)\n            p1=p1->next;\n        if(p1->next==NULL&&p1->data.number!=num)\n        {\n            printf(\"查无此人！！\");\n            system(\"pause\");\n        }\n        else\n        {   \n            printf(\"姓名：%s\",p1->data.name);\n            printf(\"年龄：%s\",p1->data.age);\n            printf(\"籍贯：%s\",p1->data.native);\n            printf(\"性别：%s\",p1->data.sex);\n            printf(\"电话：%s\",p1->data.phone);\n            printf(\"专业：%s\",p1->data.pro);\n            printf(\"报考职位：%s\",p1->data.pos);\n            printf(\"毕业年份：%s\",p1->data.yeargra);\n            printf(\"政治面貌：%s\",p1->data.pol);\n            printf(\"编号：%d\",p1->data.number);\n            system(\"pause\");\n        }\n        return;\n    }\n}\n\nvoid out_all_list(list *head)\n{\n    list *p1;\n    if(head==NULL)\n    {\n        printf(\"没有数据！\");\n        system(\"pause\");\n        return;\n    }\n    else\n    {   \n        p1=head;\n        printf(\"姓名 年龄  籍贯  性别   联系电话     专业   报考职位   毕业年份   政治面貌  编号\\n\");\n        while(p1->next!=NULL)\n        {\n            printf(\"%s %s %s %s %s %s %s %s %s %d\",p1->data.name,p1->data.age,p1->data.native,p1->data.sex,p1->data.phone,p1->data.pro,p1->data.pos,p1->data.yeargra,p1->data.pol,p1->data.number);\n            p1=p1->next;\n        }\n        system(\"pause\"); \n        return;\n    }\n}\n\nvoid out_nape_list(list *head,int nape)\n{\n    list *p1;\n    char nap[50];\n    if(head==NULL)\n    {\n        printf(\"没有数据！\");\n        system(\"pause\");\n        return;\n    }\n    else\n    {\n        p1=head;\n        while(p1->next!=NULL)\n            switch(nape)\n                {\n                    case 1:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.name,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }\n                    case 2:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.age,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }\n                    case 3:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.native,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }\n                    case 4:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.sex,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }\n                    case 5:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.phone,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }               \n                    case 6:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.pro,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }               \n                    case 7:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.pos,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }               \n                    case 8:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.yeargra,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }               \n                    case 9:\n                            {\n                                printf(\"请输入查询的数据：\");\n                                scanf(\"%s\",nap);\n                                if(strcmp(p1->data.pol,nap)==0)\n                                {\n                                    printf(\"姓名：%s\",p1->data.name);\n                                    printf(\"年龄：%s\",p1->data.age);\n                                    printf(\"籍贯：%s\",p1->data.native);\n                                    printf(\"性别：%s\",p1->data.sex);\n                                    printf(\"电话：%s\",p1->data.phone);\n                                    printf(\"专业：%s\",p1->data.pro);\n                                    printf(\"报考职位：%s\",p1->data.pos);\n                                    printf(\"毕业年份：%s\",p1->data.yeargra);\n                                    printf(\"政治面貌：%s\",p1->data.pol);\n                                    printf(\"编号：%d\",p1->data.number);\n                                }\n                                break;\n                            }\n                }   \n        system(\"pause\");\n        return;\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;继2021-07-21 13:04写的解答&amp;#xff0c;这次已经解决了这个小问题。在回忆一下问题本身&amp;#xff0c;第一次新增之后第二次新增会有红色提示&amp;#xff0c;之前使用this.$refs[&amp;#39;addForm&amp;#39;].clearValidate()方法&amp;#xff0c;这个方法是用于清除数据校验的&amp;#xff0c;理论上是可以实现的&amp;#xff0c;但是控制台报错Cannot read property ‘clearValidate‘ of undefined“,经查验并参考网址&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_36437172/article/details/107348939%EF%BC%8C%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%EF%BC%8C%E4%BA%A7%E7%94%9F%E9%97%AE%E9%A2%98%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%98%AFDom\"&gt;https://blog.csdn.net/qq_36437172/article/details/107348939&amp;#xff0c;问题解决&amp;#xff0c;产生问题的原因是Dom&lt;/a&gt; 没有加载完成&amp;#xff0c;导致获取不到refs元素&amp;#xff0c;因此&amp;#xff0c;需要使用&lt;br /&gt;    this.$nextTick(()&amp;#61;&amp;gt;{&lt;!-- --&gt;&lt;br /&gt;        this.$refs[&amp;#39;addForm&amp;#39;].clearValidate();&lt;br /&gt;    })&lt;br /&gt;来实现这一功能&amp;#xff0c;那就得说一下$nextTick()函数的作用了&amp;#xff0c;这个方法的作用基本功能就是获取更新之后的DOM。具体细节有待查验。目前只能理解到这一步&amp;#xff0c;之后在来更新吧。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Vue新增表单数据增加了数据校验之后再次添加数据重置仍存在原始数据问题", ["以下图是在新增完一次数据之后，再次点击添加的两个界面", "图一：点击添加按钮出现的界面", "\n", "图二：点击重置之后原始数据出现的界面", "\n", "图二是产生的现象，经各种尝试无效。", "\n", "以下是vue关键代码：", "新增框：", "\n", "重置语句：", "        resetForm(formName) {", "          this.$refs[formName].resetFields();", "        }"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; tableData &amp;#61; [\n  {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt; name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt; }, {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt; name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt; }, {&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt; id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt; name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt; }\n]\ntableData &amp;#61; tableData&lt;span class=\"hljs-built_in\"&gt;.filter&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;item&lt;/span&gt; &amp;#61;&amp;gt; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;.id&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;.name&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;给你举个例子&amp;#xff0c;参考&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["html中如何在输入框里输入条件，对表格里的数据进行查询，点击查询并显示具体信息", ["问题遇到的现象和发生背景", "\n", "这是静态页面，没有链接 数据库，表格是死的，自己放进去的", "\n", "问题相关代码，请勿粘贴截图", "\n", "css相关代码：", "html,body{", "    width: 100%;", "    height: 100%;", "    padding: 0;", "    margin: 0;", "\n", "}", "#app{", "    width: 100%;", "    height: 100%;", "    background-size: cover;", "}", "/", "容器", "/", ".el-container{", "    width: 100%;", "    height: 100%;", "\n", "}", "/", "头部", "/", ".el-header{", "    width: 100%;", "    height: 10%; !important;/", "提高样式的优先级", "/", "    padding: 0;", "    margin: 0;", "    border-bottom: 1px solid silver;", "    font-size: 30px;", "    text-align: center;", "    background-image: url(\"../img/image12.jpg\");", "}", "/", "侧边栏", "/", ".el-aside{", "    width: 25%;", "    height: 90%;", "    padding: 0;", "    margin: 0;", "    font-size: 35px;", "    background-color: white;", "    font-weight: bolder;", "    text-align: left;", "    border-right: 2px black solid;", "    margin-top: 20px;", "}", "/", "主体", "/", ".el-main{", "    width: 75%;!important;", "    height: 100%;", "    padding: 0;", "    margin: 0;", "    text-align: left;", "    background-color: white;", "    margin-top: 20px;", "}", ".el-button{", "    width: 25%;", "    margin-left: 85px;", "}", ".el-input-number{", "    width: 390px;", "    height: 50px;", "}", ".el-input{", "    width: 390px;", "    height: 50px;", "}", "html代码：", "\n\n\n\n", "\n  \n    \n      ", "库存管理系统", "\n    \n    \n      \n        库存管理系统\n        ", "\n          ", "\n            账号：", "\n          ", "\n          ", "\n            等级： ", "\n          ", "\n        ", "\n        \n          \n            ", "\n              ", "\n              库存管理", "\n          \n          \n            ", "\n              ", "\n              库存查询", "\n          \n          \n            ", "https://ask.csdn.net/new?word=#", "\n          \n        \n      \n      \n        \n\n", "      ", "<", "el-row", ">", "\n        ", "<", "el-col", " ", ":span", "=", "\"8\"", " ", "style", "=", "\"\"", ">", "\n          ", "<", "el-form-item", " >", "\n            ", "<", "el-input", " ", "v-model", "=", "\"product\"", " ", "placeholder", "=", "\"产品名称\"", ">", "</", "el-input", ">", "\n          ", "</", "el-form-item", ">", "\n        ", "</", "el-col", ">", "\n        ", "<", "el-col", " ", ":span", "=", "\"8\"", ">", "\n          ", "<", "el-form-item", " >", "\n            ", "<", "el-input", " ", "v-model", "=", "\"business\"", " ", "placeholder", "=", "\"生产厂商\"", ">", "</", "el-input", ">", "\n          ", "</", "el-form-item", ">", "\n        ", "</", "el-col", ">", "\n        ", "<", "el-col", " ", ":span", "=", "\"8\"", " >", "\n          ", "<", "el-button", " ", "type", "=", "\"primary\"", " @", "click", "=", "\"select\"", ">", "搜索", "</", "el-button", ">", "\n          ", "<", "el-button", " ", "type", "=", "\"warning\"", " @", "click", "=", "\"reset\"", ">", "重置", "</", "el-button", ">", "\n\n        ", "</", "el-col", ">", "\n      ", "</", "el-row", ">", "\n    ", "</", "el-form", ">", "\n\n\n\n    ", "<", "hr", ">", "\n\n    ", "<", "el-table", " ", ":data", "=", "\"tableData\"", " ", "border", " ", "stripe", " ", "ref", "=", "\"tbl\"", ">", "\n\n      ", "<", "el-table-column", " ", "type", "=", "\"selection\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"product\"", " ", "label", "=", "\"产品名称\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"count\"", " ", "label", "=", "\"库存数量\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"count1\"", " ", "label", "=", "\"规格\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"address\"", " ", "label", "=", "\"产地\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"type\"", " ", "label", "=", "\"来源\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"price\"", " ", "label", "=", "\"价格\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"business\"", " ", "label", "=", "\"生产厂商\"", ">", "</", "el-table-column", ">", "\n      ", "<", "el-table-column", " ", "prop", "=", "\"phone\"", " ", "label", "=", "\"联系电话\"", ">", "</", "el-table-column", ">", "\n\n    ", "</", "el-table", ">", "\n\n  ", "</", "el-main", ">", "\n", "</", "el-container", ">", "\n", "\n  \n", "\n\n\n\n\n\n\n\n\n\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "想在输入框输入查询条件，点击查询就显示该条信息，点击重置就清除输入框条件"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你应该用&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;P&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; str2num(pp)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者干脆用&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;[f,p] &amp;#61; uigetfile(&lt;span class=\"hljs-string\"&gt;&amp;#39;*.xlsx&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Excel File&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt; &amp;#61; readtable([p,f], &lt;span class=\"hljs-string\"&gt;&amp;#39;preser&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-symbol\"&gt;P&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt;{:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何在matlab app designer中输入包含上百个元素的一维数组，作为计算输入", ["压力数据从Excel中复制进文本框中", "\n", "如何将其转换为一维矩阵的形式", "\n", "这样运行得到的只有一个元素，后面的计算显示矩阵维度不对。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-py\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;int(input())\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;int(input())\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;a\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;b\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;c\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;str(a)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34; b&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;str(b))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入两个整数，交换位置后输出", ["在一刚中用空格分隔输入两个整数a,b", "交换a,b的值后，按“a=？b=？”的格式输出"]], "Tag": "程序设计"}
{"Answer": "我实现了！！！！！！！！！！！！！！\r\n#include &lt;cmath&gt;\r\n#include &lt;algorithm&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint n;\r\n\tchar num[310][310];\r\n\tchar swap;\r\n\tcin&gt;&gt;n;\r\n\tfor(int i=1;i&lt;=n;i++)\r\n\t{\r\n\t\tif(i==1)\r\n\t\t\tscanf(\"%*c\");\r\n\t\tscanf(\"%c\",&amp;swap);\r\n\t\tint j=1;\r\n\t\twhile(swap!='\\n')\r\n\t\t{\r\n\t\t\tnum[i][++j]=swap;\r\n\t\t\tscanf(\"%c\",&amp;swap);\r\n\t\t}\r\n\t\tnum[i][0]=j;\r\n\t}\r\n\tfor(int i=1;i&lt;=n;i++)\r\n\t{\r\n\t\tfor(int j=2;j&lt;=num[i][0];j++)\r\n\t\t\tprintf(\"%c\",num[i][j]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "Konwledge_Point": "数据的输入", "Question": ["C语言新手求助。请问如何输入一组多行的数字，每行的长度可以任意", ["程序要求是首先输入一个数字确认行数，然后在每一行输入一组整数（长度是由输入者输入的数字个数决定），我想用二维数组键入，这一部分的代码如下", "\nint num[310][310];", "\nint main()", "\n{", "\n    int T;", "\n    int i;", "\n    int n=0;", "\n    int is = 0;", "\n    int sum = 0;", "\n    scanf_s(\"%d\", &T);", "\n    for (i = 0; i < T; i++)", "\n    {", "\n        for (int j = 0; j < 310; j++)", "\n        {", "\n            scanf_s(\"%d \", &num[i][j]);", "\n            char ch = getchar();", "\n            if (ch=='\\n')", "\n            {", "\n                num[i][j] = '\\0';", "\n                break;", "\n            }", "\n            但是并没有成功，请问有什么办法可以成功键入多组不同长度的数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把输入的数据作为字符串接收&amp;#xff0c;如果只用输出的话就直接输出字符串就行&amp;#xff0c;如果要计算的话就逐位存入另一个整型数组然后进行高精度运算就行。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入的数据超过了long long的范围该怎么办？", ["第一行输入一个数n,表示有n测试数据", "每组测试数据输入两个整数A,B(262<=AB<=2^62)", "Output", "计算A B的值", "Sample Input Copy", "2", "12", "6", "Sample Out"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;回答&amp;#xff1a;我之前也想过这个问题&amp;#xff0c;但请注意&amp;#xff0c;你可以不生成数据库&amp;#xff0c;而生成表格&amp;#xff0c;因为你的记录的格式相对固定的&amp;#xff08;就是字段目前就这么多&amp;#xff0c;这也是设计上的缺陷&amp;#xff0c;以后要修改字段&amp;#xff0c;肯定需要改很多内容&amp;#xff0c;不过先不要管&amp;#xff09;&amp;#xff1b;每次一个用户&amp;#xff0c;你可以生成一张表格&amp;#xff0c;另外对于已经登陆过&amp;#xff08;或者填写过表格的用户&amp;#xff0c;已经有了表格了&amp;#xff09;&amp;#xff0c;就不生成新的了&amp;#xff1b;这个可以通过将用户的名称放在新的一张独立的专门存放、比对用户名的表格&amp;#xff0c;最后通过表之间的关系&amp;#xff0c;进行关联&amp;#xff08;说真的&amp;#xff0c;这个我没学过&amp;#xff0c;但我同学学过&amp;#xff0c;他说是可以关联的&amp;#xff09;&amp;#xff0c;所以就可以生成单独的表格&amp;#xff0c;收集的信息成为独立条目&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如果想要写一个微信小程序收集不同用户的数据，并为该用户生成对应其输入内容的excel表格，选用哪种方法比较好？", ["我有两个想法,但是都有问题，希望哪位可以帮我梳理一下，我是刚开始自学，还比较混乱。", "我设想用户的数据大概是这种格式", "\n", "1.用微信小程序云开发的话，我不太理解收集到的用户数据如何存入，比如说收集到表头单独存入数据库，那么怎么和其他人的输入区分开呢？收集到的后续列表数据不能当作数据库的其中一条信息但是也不能针对每个用户创建一个单独的数据库呀？", "2.如果用传统的前端后端的话，我收集到的用户数据如何一起传到后端呢，难道地址，电话，姓名都分开传输吗？包括后面的每条数据？", "\n", "我一直在这两种方法中反复横跳，一个遇到困难去做另一种，但是现在都彻底迷糊了。"]], "Tag": "程序设计"}
{"Answer": "maxfd+1是不是真的最大Socket值。还有就是没看到你发给多个Socket的代码。这里不就是发送一个的么，\r\n我一般是把接收到的连接缓存起来。然后不断遍历send，把错误信号屏蔽了。你这段代码看不出啥。", "Konwledge_Point": "数据的输入", "Question": ["socket编程时采用select 查看网络和标准输入的数据，出错", ["在调试socket编程的服务端程序时，本打算服务端从标准输入中读取数据然后再将读到的数据发给客户端，所有的客户端都会收到数据，但是结果不是，采用的select查看socket文件描述符合标准输入描述符stdin，代码片段如下：", "\n        FD_ZERO(&fds);", "\n        FD_SET(sockfd, &fds);", "\n        FD_SET(fd_stdin, &fds);", "\n\n", "    if(select(maxfd+1, &fds, NULL, NULL, NULL) < 0)\n        ERR_EXIT(\"select\");\n    if(FD_ISSET(sockfd, &fds))\n    {...}\n\n    if(FD_ISSET(fd_stdin, &fds))\n    {\n        if(fgets(sendbuf.buf, sizeof(sendbuf.buf), stdin) < 0)\n        {\n            printf(\"read stdin err.\\n\");\n            break;\n        }\n        n = strlen(sendbuf.buf);\n        sendbuf.len = htonl(n);\n        write(sockfd, &sendbuf, 4+n);\n    }\n\n    在有一个客户端接入时没有问题，服务端从标准输入获取数据然后发给客户端，但是如果有多个客户端接入，原本设想是所有的客户端都会收到服务端的数据，但是实际情况是有时两个都收到服务端的数据，有时只有一个客户端收到。分析问题的原因要么是select不可重入，要么是使用fgets从stdin读走数据后清空了标准输入，另一个进程的select执行时就检测不到有数据输入。查了查select是可重入的，感觉原因还是第二种，或者其他别的。不知道大家怎么看，有什么解决方法吗?\n"]], "Tag": "程序设计"}
{"Answer": "这样就可以了.\r\n  var n = new Ext.form.NumberField({\r\n    renderTo:Ext.getBody(),\r\n    allowDecimals:false\r\n  })", "Konwledge_Point": "数据的输入", "Question": ["Ext.form.NumberField如何限制输入小数，只准输入整数", ["Ext.form.NumberField如何限制输入小数，只准输入整数"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;帮你找了个相似的问题, 你可以看下: &lt;a href=\"https://ask.csdn.net/questions/7706947?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7706947&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python考虑数据输入的正确性，可用异常处理", ["编程实现：输入n和a(a是一个数字)，求a+aa+…+aa…a。", "例如，n为4，a为2，则2+22+222+2222", "要求：考虑数据输入的正确性，可用异常处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个刚写过&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;sum_odd_even&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;isinstance&lt;/span&gt;(n, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; n &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;raise&lt;/span&gt; ValueError(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入必须是正整数&amp;#39;&lt;/span&gt;)\n    odd_sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    even_sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            even_sum &amp;#43;&amp;#61; i\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            odd_sum &amp;#43;&amp;#61; i\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; odd_sum, even_sum\n \n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个正整数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n    odd_sum, even_sum &amp;#61; sum_odd_even(n)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt; 之内所有奇数的和为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{odd_sum}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt; 之内所有偶数的和为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{even_sum}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e)\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python 要求：考虑数据输入的正确性，可用异常处理", ["一J一", "编程实现：任意输入一个正整数，输出这个正整数之内的所有", "奇数的和以及所有偶数的和。", "要求：考虑数据输入的正确性，可用异常处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给 input的绑定一个value值。然后。获取到赋值给他就行&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["element-ui  点击表格的一行数据，怎么把其中一行的某一个值，传给对话框的输入框内。", ["element-ui  点击表格的一行数据，怎么把其中一行的某一个值，传给对话框的输入框内。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "你这是从数据库查出来的吧，建议在sql层就将将数据转String.只能一个个来。", "Konwledge_Point": "数据的输入", "Question": ["ajax获取后台json数据，其中精度缺失问题", ["我后台查询表头、表体、集装箱数据，一起放到map中传到前台，前台用json格式接收", "\n，但是其中表头中一个bigdecimal数据，自动四舍五入导致与输入数据不符", "\n\n", "我试过把实体都改成String然后插入到map再传，不行。也试过直接把map转成String传到前端，但是前端纯文本接收数据后头不能分辨要插入哪个表单中"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;导包&amp;#xff0c;首先你得要知道你需要的类在哪个包里&amp;#xff0c;刚入门的应该是根本就不知道的&lt;br /&gt;Scanner&amp;#xff1a;import java.util.Scanner;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["JAVA，notepad++ 用scanner数据输入怎么自己手动导包", ["notepad++怎么自己手动导包，求教程，图片也行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/861066133056133.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;存在一些小问题&amp;#xff0c;马马虎虎能用。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何从键盘上输入一批正整数(如果遇到负数重新输入，如果遇到0停止输入)，输出: (1)输入的正整数的平均值; (2)高于平均值的正整数的个数。？(语言-c语言)", ["我的错误源码如下", "#include<stdio.h>", "int main()", "{", "    float ave;", "    int m,n, sum = 0;", "    int count = 0;", "    int num = 0;", "    printf(\"请输入一整数:\\n\");", "    scanf_s(\"%d\", &n);", "    while (n != 0) {", "        while (n > 0) {", "\n", "        ", "count", "++;\n        ", "sum", " = ", "sum", " + ", "n", ";\n        scanf_s(", "\"%d\"", ", &", "n", ");\n    }\n    while (", "n", " < ", "0", ") {\n        printf(", "\"输入出错，请重新输入：\\n\"", ");\n        scanf_s(", "\"%d\"", ", &", "n", ");\n    }\n}\nm = ", "count", ";\nave = ", "sum", " * ", "1.0", " / m;\nprintf(", "\"这列整数平均为:%f\\n\"", ", ave);\nreturn ", "0", ";\n", "\n", "}", "\n", "我尝试使用数组。", "因为如果是用数组的话，很容易就能封装成函数。但是这个要求它是让一个一个输入，而且中间牵扯到很多东西。朋友建议直接将ave封装成一个函数。但我们没成功。求同仁点拨！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;略有改动&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\nint main()\n{\n    int m,n,i,j,ma,p,begin,Begin,End,a[100][100];\n    scanf (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0;j&amp;lt;n;j&amp;#43;&amp;#43;)\n            scanf (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i][j]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;m;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-attribute\"&gt;ma&lt;/span&gt;&amp;#61;0; &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;0;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;0;j&amp;lt;n;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i][j]&amp;#61;&amp;#61;1)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;&amp;#61;0)\n                    &lt;span class=\"hljs-attribute\"&gt;begin&lt;/span&gt;&amp;#61;j;\n                p&amp;#43;&amp;#43;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ma&amp;lt;p)\n                {\n                    &lt;span class=\"hljs-attribute\"&gt;ma&lt;/span&gt;&amp;#61;p;\n                    &lt;span class=\"hljs-attribute\"&gt;Begin&lt;/span&gt;&amp;#61;begin;\n                    &lt;span class=\"hljs-attribute\"&gt;End&lt;/span&gt;&amp;#61;begin&amp;#43;p-1;\n                }\n                &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;0;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ma&amp;lt;p)\n        {\n            &lt;span class=\"hljs-attribute\"&gt;ma&lt;/span&gt;&amp;#61;p;\n            &lt;span class=\"hljs-attribute\"&gt;Begin&lt;/span&gt;&amp;#61;begin;\n            &lt;span class=\"hljs-attribute\"&gt;End&lt;/span&gt;&amp;#61;begin&amp;#43;p-1;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-attribute\"&gt;ma&lt;/span&gt;&amp;#61;&amp;#61;0)\n            printf (&lt;span class=\"hljs-string\"&gt;&amp;#34;-1 -1\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            printf (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d\\n&amp;#34;&lt;/span&gt;,Begin,End);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["关于#c++#的问题：输入说明输入第一行为两个整数m和n(0<=m,n<=100)表示二维数组行数和列数，输入数据中不会出现同一行有两个最长1序列的情况", ["标题", "0-1矩阵", "\n", "类别", "数组", "\n", "时间限制", "2S", "\n", "内存限制", "1000Kb", "\n", "问题描述", "查找一个只包含0和1的矩阵中每行最长的连续1序列。", "\n", "输入说明", "输入第一行为两个整数m和n(0<=m,n<=100)表示二维数组行数和列数，其后为m行数据，每行n个整数（0或1），输入数据中不会出现同一行有两个最长1序列的情况。", "\n", "输出说明", "找出每一行最长的连续1序列，输出其起始位置(从0开始计算)和结束位置(从0开始计算)，如果这一行没有1则输出两个-1,然后换行。", "\n", "输入样例", "5 6", "1 0 0 1 1 0", "0 0 0 0 0 0", "1 1 1 1 1 1", "1 1 1 0 1 1", "0 0 1 1 0 0", "\n", "输出样例", "3 4", "-1 -1", "0 5", "0 2", "2 3", "\n", "\n", "\n", "求解答本人代码中的错误（截图时多截了个if(L>l)｛   请忽略 )（示例运行结果无误）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哪不会&amp;#xff0c;循环输入不会还是排序&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入若干学生的成绩，统计并输出最高成绩和最低成绩，当输入负数时循环结束。", ["从键盘输入若干学生的成绩，统计并输出最高成绩和最低成绩，当输入负数时循环结束。", "\n", "输入格式:", "在一行中输入若干个用空格间隔的整数，最后输入负数结束输入，数据之间只能用1个空格间隔。", "\n", "输出格式:", "在一行中按照“max=最高分,min=最低分”的格式输出结果，最高分和最低分均原样输出，没有列宽控制"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;记录数量批处理的原理是使用了insert后面多个values的语句&amp;#xff0c;实际是一条SQL提交&amp;#xff0c;so 一个values出错所有都会回滚&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["kettle向数据库表中插入数据抛出异常数据问题", ["最近在做数据迁移，计划使用kettle做数据装载，数据输入使用文本文件输入，然后使用表输出，将数据插入到数据库中，在表输出这一步可以设置提交记录数量，默认为1000。然后设置异常抛出处理，此时问题就来了：", "提交记录数量为1000时，异常抛出会一下抛出1000条，正确的数据也会抛出。", "如果要想精确的抛出异常数据，只能给提交数量设置为1，也就是逐条提交，这样装载的时候效率巨慢无比", " 我不知道这个是kettle本身的设计问题还是我哪调的参数不对，希望能够为我解惑，不胜感激！"]], "Tag": "程序设计"}
{"Answer": "input().split(',')就可以，[x for x in input().split(',')]完全没有必要。\r\n\r\n[x for x in 迭代器] 的作用是把迭代器完全执行一次，结果放在列表里。\r\nsplit(',')返回的就已经是列表了，而列表本身也是一个迭代器（但是反过来说，迭代器未必是列表）。所以这里没有必要把已经是列表的结果再固定为列表。", "Konwledge_Point": "数据的输入", "Question": ["Python，获取逗号分隔的用户输入，并将分隔内容存入列表，为什么常见写法要用列表推导式", ["Python中，用户输入逗号分隔的序列，获取分隔内容并存入列表，网上常见的写法用列表推导式：", "\nn = [x for x in input().split(',')]", "\n\n", "但是split返回就是列表啊，那是不是写成：", "\nn = input().split(',')", "\n就行？", "\n\n", "说网上常见写法有什么优点，或者第二种写法有什么弊端？"]], "Tag": "程序设计"}
{"Answer": "你这个需要对你的输入值进行处理，比如你默认为你的输入值前四位表示你要查的表名，你就需要提取出前四位的值，在生成sql语句的时候再按你提取的值来生成sql语句比如你提取的表名放在t_name变量中，你sql语句就是:“select 大气温度 from“+t_name\r\n\r\ni=input(\"2号大气温度\")\r\nt_name=i[0:4]\r\nsql=select 大气温度 from“+t_name\r\n就改成这样吧", "Konwledge_Point": "数据的输入", "Question": ["怎么实现python输入文字在数据库中筛选出数据？", ["目前只能实现这个。", "\n\n", "我想运行程序时输入如“1号节点的大气温度”，就会select “大气温度”from“一号节点“，输入其他话时select不一样的东西，有人教一下我吗，万分感激。"]], "Tag": "程序设计"}
{"Answer": "就这样，已经解决了。", "Konwledge_Point": "数据的输入", "Question": ["请问英雄会，java编程，扫描输入如何结束输入？急", ["请问英雄会，java编程，扫描输入如何结束输入？急。有经验的大神们指导一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;循环对10取整遍历统计一下。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num,i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入一个正整数:&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(num!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n{\nnum&amp;#61;num/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\ni&amp;#43;&amp;#43;;\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该数是%d位数\\n&amp;#34;&lt;/span&gt;,i);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["4  3如何实现从键盘输入一个正整数，输出该正整数的位数？", ["．编写程序，实现从键盘输入一个正整数，输出该正整数的位数。例如输入1234输出 4 ，输入 123456输出6。"]], "Tag": "程序设计"}
{"Answer": "void query()\r\n{\r\n    int bh;\r\n    printf(\"请输入编号:\");\r\n    scanf(\"%d\",&amp;bh);\r\n    for(i=0;i&lt;100;i++)\r\n    {\r\n    if (bh==a[i].bh)\r\n    {\r\n    printf(\"编号:%d\\n\",a[i].bh);\r\n    printf(\"客户姓名:%s\\n\",a[i].name);\r\n    printf(\"订餐种类:%s\\n\",a[i].zl);\r\n    printf(\"订餐数量:%d\\n\",a[i].sl);\r\n    printf(\"送餐时间:%s\\n\",a[i].time);\r\n    printf(\"送餐地址:%s\\n\",a[i].add);\r\n    break;\r\n\t}\r\n}\r\nif(bh!=a[i].bh)\r\nprintf(\"查无此客户,请重新输入\\n\");\r\n}\r\n我试了下，这样就可以了。", "Konwledge_Point": "数据的输入", "Question": ["输入一组数据，再输入一组，就查询不出第一个输入的数据，这该怎么改大佬们", ["#include", "\n    struct student ", "\n    {", "\n        int bh;", "\n        char name[20];", "\n        char zl[20];", "\n        int sl;", "\n        char time[20];", "\n        char add[20];", "\n    }a[100];", "\n    int i=0;", "\n    int main()", "\n    {", "\n    void entering();", "\n    void query();", "\n    void xiugai();", "\n    void show();", "\n    void count();", "\n    int n;", "\n    do", "\n    {", "\n    printf(\"1.录入信息\\n\");", "\n    printf(\"2.信息修改\\n\");", "\n    printf(\"3.信息查询\\n\");", "\n    printf(\"4.信息显示\\n\");", "\n    printf(\"5.信息统计\\n\");", "\n    printf(\"6.退出\\n\");", "\n        scanf(\"%d\",&n);", "\n        switch(n)", "\n        {", "\n            case 1:entering();break;", "\n            case 2:xiugai();break;", "\n            case 3:query();break;", "\n            case 4:show();break;", "\n            case 5:count();break;", "\n            case 6:printf(\"退出\\n\");break;", "\n            default:printf(\"enter data error!\\n\");", "\n}", "\n}", "\n        while(n!=6);", "\n}", "\nvoid entering()", "\n{", "\n    i++;", "\n    printf(\"编号:\");", "\n    scanf(\"%d\",&a[i].bh);", "\n    printf(\"客户姓名:\");", "\n    scanf(\"%s\",a[i].name);", "\n    printf(\"订餐种类:\");", "\n    scanf(\"%s\",a[i].zl);", "\n    printf(\"订餐数量:\");", "\n    scanf(\"%d\",&a[i].sl);", "\n    printf(\"送餐时间:\");", "\n    scanf(\"%s\",a[i].time);", "\n    printf(\"送餐地址:\");", "\n    scanf(\"%s\",a[i].add);", "\n}", "\nvoid query()", "\n{", "\n    int bh;", "\n    printf(\"请输入编号:\");", "\n    scanf(\"%d\",&bh);", "\n    if (bh==a[i].bh)", "\n    {", "\n    printf(\"编号:%d\\n\",a[i].bh);", "\n    printf(\"客户姓名:%s\\n\",a[i].name);", "\n    printf(\"订餐种类:%s\\n\",a[i].zl);", "\n    printf(\"订餐数量:%d\\n\",a[i].sl);", "\n    printf(\"送餐时间:%s\\n\",a[i].time);", "\n    printf(\"送餐地址:%s\\n\",a[i].add);", "\n}", "\n    else ", "\n    printf(\"查无此客户,请重新输入\\n\");", "\n}"]], "Tag": "程序设计"}
{"Answer": "已解决：直接使用readLine()方法", "Konwledge_Point": "数据的输入", "Question": ["如何在Java小应用程序中输入数据？", ["在大佬们看来是个很蠢的问题，但是我百度了好久还是没有解决，希望道破一下", "\n源码太长，引入了GCanvas类。", "\n如何向这个小程序查看器中像控制台一样输入数据呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;/* Note:Your choice is C IDE */\n#include &amp;#34;stdio.h&amp;#34;\n\n//输入\nvoid input(int a[10]){\n\tint i;\n    for(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n    \tscanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);\n}\n//冒泡排序\nvoid choose(int a[10]){\n\tint i,j,temp;\n    for(i&amp;#61;1;i&amp;lt;10;i&amp;#43;&amp;#43;)\n    {\n    \tfor(j&amp;#61;9;j&amp;gt;&amp;#61;i;j--)\n    \t{\n    \t\tif(a[j]&amp;lt;a[j-1]){\n    \t\t\ttemp&amp;#61;a[j];\n    \t\t\ta[j]&amp;#61;a[j-1];\n    \t\t\ta[j-1]&amp;#61;temp;\n    \t\t}\n    \t}\t\n    }\t\n}\n//输出\nvoid output(int a[10]){\n\tint i;\n    for(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n    \tprintf(&amp;#34;%d\\t&amp;#34;,a[i]);\t\n}\nvoid main()\n{\n    \n    int a[10];\n    //输入\n    input(a);\n    //冒泡排序\n    choose(a);\n    //输出\n    output(a);\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["在一维数组中存入10整数并排序，其中数据的输入、排序和输出功能用自定义函数实现", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;刚好之前做过这道题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, a, b, i, j, sum;\n    sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, &amp;amp;n) !&amp;#61; EOF) \n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) \n        {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;b);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; b; j&amp;#43;&amp;#43;) \n            {\n                &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a);\n                sum &amp;#43;&amp;#61; a;\n            }\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, sum);\n            sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;详细内容见博客&amp;#xff0c;第V题就是这一道&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/muxuen/article/details/120979866?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1643512834036_1643512984978_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/muxuen/article/details/120979866?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;如果对你有帮助&amp;#xff0c;还请点个采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言简单运用，简单运用就行", ["共有T组测试数据，每组测试求n个整数之和。", "\n", "输入格式:", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试数据在一行上先输入数据个数n，然后再输入n个整数，数据之间以一个空格间隔。", "\n", "输出格式:", "对于每组测试，在一行上输出n个整数之和。", "\n", "输入样例:", "2", "4 1 2 3 4", "5 1 8 3 4 5", "输出样例:", "10", "21"]], "Tag": "程序设计"}
{"Answer": "在input标签上加一个焦点失去的事件，触发时使用ajax请求去后台数据库查询是否存在，如果存在就提示", "Konwledge_Point": "数据的输入", "Question": ["如何实现 input 输入结束时，实时查询数据库看输入值是否存在然后给出提示？", ["如题，如何实现 input 输入结束时，实时查询数据库看输入值是否存在然后给出提示？", "\n类似于注册账号的时候提示账号已存在的那种。", "\n新人求指教！"]], "Tag": "程序设计"}
{"Answer": "说错了，是ajax方法的第二行", "Konwledge_Point": "数据的输入", "Question": ["Ajax实现根据输入的账号自动显示账号对应的数据信息~~（请看内容）", ["Ajax实现根据输入的账号自动显示账号对应的数据信息~~", "\n\n", "public ActionForward getAccountInfo(ActionMapping mapping, ActionForm form,", "\n            HttpServletRequest request, HttpServletResponse response)", "\n            throws Exception {}", "\n我想在jsp页面上调用这个action类（继承自DispatchAction）中的方法，传到这个方法中两个参数，返回一个客户信息对象~~~", "\n\n", "该如何做呀？~~"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,x;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n--)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;x);\n        sum&amp;#43;&amp;#61;x;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,sum);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["小C带着自己不用的物品参加学校组织的跳蚤市场，共卖出了n件物品，请帮他计算一下总金额。", [" 小C带着自己不用的物品参加学校组织的跳蚤市场，共卖出了n件物品，请帮他计算一下总金额。", "输入格式:", "输入两行数据", "第一行输入n的值， 第二行输入n件物品的价格，用空格分隔。", "\n", "输出格式:", "以保留两位小数的形式输出。", "\n", "输入样例:", "3", "5.6 8.4 4.5", "输出样例:", "18.50"]], "Tag": "程序设计"}
{"Answer": "```\r\n scanf(\"%s%s%d\\n\",n,no,&amp;stu[i].score);\r\n-&gt;\r\nscanf(\"\\n%s%s%d\",n,no,&amp;stu[i].score);\r\n```", "Konwledge_Point": "数据的输入", "Question": ["请教一个问题，我的循环输入第一组数据和第二组数据一起输入了，但是最终 显示正常，求大神指教！！！", ["代码如下：", "\n#include", "\n#include", "\nstruct students", "\n{", "\n    char name[10];", "\n    char number[10];", "\n    int score;", "\n    struct students *next;", "\n};", "\nint main()", "\n{", "\n    int i,j,k;", "\n    struct students stu[5],*head,*p;", "\n    char n[10],no[10]; ", "\n    for(i=0;i\n    {", "\n        printf(\"input the information of %dth student:\\n\",i+1);", "\n        scanf(\"%s%s%d\\n\",n,no,&stu[i].score);", "\n        strcpy(stu[i].name,n);", "\n        strcpy(stu[i].number,no);", "\n    }", "\n    head=&stu[0];", "\n    stu[4].next=NULL;", "\n    for(i=0;i\n    {", "\n        stu[i].next=&stu[i+1];", "\n    }", "\n    p=head;", "\n    printf(\"students list:\\n\");", "\n    while(p!=NULL)", "\n    {", "\n        printf(\"%s\\t%s\\t%d\\n\",p->name,p->number,p->score);", "\n        p=p->next;", "\n    }", "\n}", "\n实际运行结果如下奇怪："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cin输入字符串时&amp;#xff0c;字符串中间是不能带空格符的&lt;br /&gt;cin自动认为空格符就是字符串输入结束&amp;#xff0c;所以只接收hello&lt;br /&gt;用getline输入吧&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; a;\ngetline(cin,a);&lt;span class=\"hljs-comment\"&gt;//输入一个含有空格的字符串&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据的输入修改字符串", ["各位能帮我看看为啥我这个字符串改完了出来只有一半吗？非常感谢（asdfghjklzxvbn）", "\n", "就是hello world那行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;IsLeapYear(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;)&lt;/span&gt;\n{\n    return ((y % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;y % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; || &lt;/span&gt;(y % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;));\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;DaysOfMonth(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]&lt;/span&gt; &amp;#61; { &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; };\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-constructor\"&gt;IsLeapYear(&lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;m&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) return a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    return a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;Show(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;year&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;month&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;day&lt;/span&gt;)&lt;/span&gt;\n{\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d\\n&amp;#34;&lt;/span&gt;, year, month, day);\n}\nvoid &lt;span class=\"hljs-constructor\"&gt;NextDate(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;year&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;month&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;day&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((*day)&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;DaysOfMonth(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;year&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;month&lt;/span&gt;)&lt;/span&gt;)\n    {\n        (*day) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((*month)&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;) {\n            (*month) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            (*year)&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            (*month)&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        (*day)&amp;#43;&amp;#43;;\n    }\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y, m, d;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;input\\n&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;, &amp;amp;y, &amp;amp;m, &amp;amp;d);\n\n    &lt;span class=\"hljs-constructor\"&gt;NextDate(&amp;amp;&lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)&lt;/span&gt;;\n\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;output\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-constructor\"&gt;Show(&lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)&lt;/span&gt;;\n \n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["程序测试输入年月日，满足条件", ["问题遇到的现象和发生背景", "\n", "怎么编写一个名为NextDate的小程序。用户在程序中输入三个数据（年、月、日）程序返回输入日期后面一天的日期。年、月、日都取整数值，且满足以下条件：", "\n", "• MONTH: 1", "12", "• DAY: 1", "31", "• YEAR:1912~2112", "\n", "用代码块功能插入代码，请勿粘贴截图"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你在p(int x)函数里加了scanf&amp;#xff0c;你可以把那一行注释了试试&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言程序输入完数据后回车不运行结果，需要按其他键才能输出结果，请问怎么解决？", ["C语言程序输入完数据后回车不运行结果，需要按其他键才能输出结果，请问怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%s&amp;#34;, goods[nInputtedNum].name);&lt;/p&gt;\n\n&lt;p&gt;这一句下面加一句&lt;/p&gt;\n\n&lt;p&gt;if(strcmp( goods[nInputtedNum].name,&amp;#34;END&amp;#34;)&amp;#61;&amp;#61;0) break;&lt;/p&gt;\n\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言，想问一下怎么样才能输入“END”以后直接停止程序呢？", ["\n", "int  Input_data(struct GOODS goods[], int nInputtedNum) {\n\tint result;\n\twhile (1) {\n\t\tprintf(\"请输入数据（输入END 1 1结束入库)，格式如下\\n\");\n\t\tprintf(\"货物名 产品的数量 价格\\n\");\n\t\tscanf(\"%s\", goods[nInputtedNum].name);\n      scanf(\"%d\", &goods[nInputtedNum].num);\n\t\tscanf(\"%f\", &goods[nInputtedNum].price);\n\t\t//如果用户在一行的开始输入了END,则表示用户要结束入库操作\n\t\tif (!strcmp(\"END\", goods[nInputtedNum].name))\n\t\t\tbreak;\n\t\t/*以下为处理scanf返回值的例子：即未成功输入一个数，则结束输入\n\t\tif (1 != scanf(\"%f\", &goods[nInputtedNum].price))\n\t\t\tbreak;*/\n\t\tnInputtedNum++; //已完成一数据输入，库存数+1\n\t}\n\treturn nInputtedNum;\n}", "\n\n", "现在的这个程序输入完END后还需要再输入2个数字才能结束程序，有什么办法能输入END后直接结束输入程序呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char s[]不行&amp;#xff0c;要指定数组大小&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["正确输入输出字符，字母与字符在scanf中的区别", ["问题遇到的现象和发生背景", "\n", "请编写程序从键盘读入数据，并按要求输出", "\n", "输入格式", "\n", "　　共三行。", "　　第一行：输入两个整数，中间用一个逗号隔开；", "　　第二行：输入两个浮点数，中间用空格隔开；", "　　第三行：输入两个字母，每个字母前面加一个空格，中间加一个逗号。", "\n", "输出格式", "\n", "　　按照输入的原样输入数据，其中的浮点数输出时保留小数点后1位。", "\n", "用代码块功能插入代码，请勿粘贴截图", "#include<stdio.h>", "main()", "{", "int a, b, f;", "float c, d;", "int i = 0;", "char s[];", "scanf(\"%d%d\", &a, &b);", "scanf(\"%f%f\", &c, &d);", "while ((f = getchar()) != EOF)", "{", "if (f != ' ' && ',' && '\\n' && '.')", "{", "s[i] = f;", "++i;", "}", "}", "printf(\"%d,%d\\n\", a, b);", "printf(\"%.1f %.1f\\n\", c, d);", "printf(\" %c, %c\", s[0], s[1]);", "}", "\n", "运行结果及报错内容", "s未定义内存大小", "\n", "我想要达到的结果", "正确解决题目"]], "Tag": "程序设计"}
{"Answer": "int k = Integer.parseInt(s);，这句话是把字符串类型的数据转换为Integer，如果s为总和，那么这个s数据不是\"123\"之类的数值字符串，所以会格式转换错误，把if里的这句话删掉\r\n \r\n```\r\nScanner sc = new Scanner(System.in);\r\n\t\t\r\n\t\tint sum = 0;\r\n\t\twhile (true){\r\n\t\t\tString s = sc.nextLine();\r\n\t\t\tif (s.equals(\"总和\")) {\r\n\t\t\t\tSystem.out.println(sum);\r\n\t\t\t\tbreak;\r\n\t\t\t}\t        \r\n\t        sum+=Integer.parseInt(s);\t           \r\n\t        System.out.println(sum);\t       \r\n\t    }\r\n```\r\n帮你修改了下", "Konwledge_Point": "数据的输入", "Question": ["不会就问系列，使用键盘输入数字并计算总和，直至用户输入词语“总和”为止。", ["public class Solution {", "\n    public static void main(String[] args) throws Exception {", "\n        Scanner sc = new Scanner(System.in);", "\n        int i = 0;", "\nint sum = 0;", "\n        while (true){", "\n\n", "        String s = sc.nextLine();\n        if (s.equals(\"总和\")){\n            int k = Integer.parseInt(s);\n            sum +=k;\n            System.out.println(sum);\n            break;\n        }\n        else {\n            int j = Integer.parseInt(s);\n            i+=j;\n            System.out.println(i);\n        }\n    }\n\n\n\n}\n", "\n\n", "}", "\n1.程序必须从键盘读取数据。", "\n2.用户输入词语“总和”并按 Enter 键之后，程序应停止从键盘读取数据。", "\n3.如果用户输入一个数字和词语“总和”，程序应正常运行。", "\n4.如果用户输入两个数字和词语“总和”，程序应正常运行。", "\n5.如果用户输入两个以上的数字和词语“总和”，程序应正常运行。", "\n6.程序应在屏幕上显示文本.", "\n我的程序哪里出错了，为什么只能满足前两个条件。求大佬告知！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/237874719946141.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["利用try-catch机制 让用户输入一个整数 如果不是整数就循环输入直到输入整数为止", ["\n", "这里一开始我用的是图2的方法 但是输入不是整数之后就会卡主不能进入下一次循环 ，不明白其中的缘由，求解"]], "Tag": "程序设计"}
{"Answer": "重定向控制台程序的输入输出\r\n\r\n```\r\n#include &lt;windows.h&gt;  \r\n#include &lt;tchar.h&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nBOOL WriteToPipe();\r\n// 读出stdout  \r\nBOOL ReadFromPipe();\r\n//定义句柄: 构成stdin管道的两端句柄  \r\nHANDLE  hStdInRead;         //子进程用的stdin的读入端  \r\nHANDLE  hStdInWrite;        //主程序用的stdin的读入端  \r\n \r\n//定义句柄: 构成stdout管道的两端句柄  \r\nHANDLE  hStdOutRead;     ///主程序用的stdout的读入端  \r\nHANDLE  hStdOutWrite;    ///子进程用的stdout的写入端  \r\n \r\n//定义一个用于产生子进程的STARTUPINFO结构体 （定义见CreateProcess,函数说明）  \r\nSTARTUPINFO siStartInfo;\r\n//定义一个用于产生子进程的PROCESS_INFORMATION结构体 （定义见CreateProcess,函数说明）  \r\nPROCESS_INFORMATION piProcInfo;\r\n \r\nvoid main()\r\n{\r\n\t//产生一个用于stdin的管道，得到两个HANDLE:  hStdInRead用于子进程读出数据，hStdInWrite用于主程序写入数据  \r\n\t//其中saAttr是一个STARTUPINFO结构体，定义见CreatePipe函数说明  \r\n\tSECURITY_ATTRIBUTES saAttr = {0};\r\n\tsaAttr.nLength = sizeof(saAttr);\r\n\tsaAttr.bInheritHandle = TRUE;\r\n\tif (!CreatePipe(&amp;hStdInRead, &amp;hStdInWrite, &amp;saAttr, 0))\r\n\t\treturn;\r\n \r\n\t//产生一个用于stdout的管道，得到两个HANDLE:  hStdInRead用于主程序读出数据，hStdInWrite用于子程序写入数据  \r\n\tif (!CreatePipe(&amp;hStdOutRead, &amp;hStdOutWrite, &amp;saAttr, 0))\r\n\t\treturn;\r\n \r\n\t//对STARTUPINFO结构体赋值，对stdin,stdout的Handle设置为刚才得到的管道HANDLE  \r\n\tZeroMemory(&amp;siStartInfo, sizeof(STARTUPINFO));\r\n\tsiStartInfo.cb = sizeof(STARTUPINFO);\r\n\tsiStartInfo.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;\t//允许设置showwindow和设置新进程的输入输出句柄参数\r\n\tsiStartInfo.hStdOutput = hStdOutWrite;     //意思是：子进程的stdout输出到hStdOutWrite  \r\n\tsiStartInfo.hStdError = hStdOutWrite;        //意思是：子进程的stderr输出到hStdErrWrite  \r\n\tsiStartInfo.hStdInput = hStdInRead;\r\n \r\n\t//CreateProcess()中使用了CREATE_NEW_CONSOLE后, 可以去掉下面这两句注释\r\n\t//siStartInfo.wShowWindow = SW_SHOW;\r\n\t//siStartInfo.lpTitle = \"新进程标题\";\r\n \r\n\tTCHAR CommandLine[] = _T(\"/c ping 127.0.0.1\");\t//\r\n\t// 产生子进程，具体参数说明见CreateProcess函数  \r\n\tBOOL bSuccess = CreateProcess(\"C:\\\\Windows\\\\System32\\\\cmd.exe\",\r\n\t\tCommandLine,    // 子进程的命令行  \r\n\t\tNULL,                   // process security attributes  \r\n\t\tNULL,                   // primary thread security attributes  \r\n\t\tTRUE,                   // handles are inherited  \r\n\t\tCREATE_NO_WINDOW,       // creation flags  如果想新进程显示窗口, 可以设置CREATE_NEW_CONSOLE\r\n\t\tNULL,                  // use parent's environment  \r\n\t\tNULL,                  // use parent's current directory  \r\n\t\t&amp;siStartInfo,      // STARTUPINFO pointer  \r\n\t\t&amp;piProcInfo);     // receives PROCESS_INFORMATION  \r\n \r\n\t//如果失败，退出  \r\n\tif (!bSuccess) return;\r\n \r\n\t//然后，就可以读写管道了  \r\n\t//写入stdin，具体代码在一个WriteToPipe函数中  \r\n\tWriteToPipe();\r\n \r\n\tDWORD process_exit_code = 0;\r\n\t//不断子检测进程有否结束  \r\n\twhile (GetExitCodeProcess(piProcInfo.hProcess, &amp;process_exit_code))\r\n\t{\r\n\t\t//读stdout,stderr  \r\n\t\tReadFromPipe();\r\n\t\t//如果子进程结束，退出循环  \r\n\t\tif (process_exit_code != STILL_ACTIVE) break;\r\n\t}\r\n \r\n\t::CloseHandle(hStdOutWrite);\r\n\t::CloseHandle(hStdInRead);\r\n \r\n\t::CloseHandle(piProcInfo.hProcess);\r\n\t::CloseHandle(piProcInfo.hThread);\r\n \r\n \r\n\tsystem(\"pause\");\r\n}\r\n \r\n \r\n//写入stdin  \r\nBOOL WriteToPipe()\r\n{\r\n\t// 本例子中这样写入参数  没有用\r\n\tDWORD dwWritten;\r\n\tBOOL bSuccess = FALSE;\r\n\tCHAR in_buffer[100] = \"/c ping 127.0.0.1\";\r\n\t//用WriteFile，从hStdInWrite写入数据，数据在in_buffer中，长度为dwSize  \r\n\tbSuccess = WriteFile(hStdInWrite, in_buffer, 100, &amp;dwWritten, NULL);\r\n\treturn bSuccess;\r\n}\r\n \r\n// 读出stdout  \r\nBOOL ReadFromPipe()\r\n{\r\n\tchar out_buffer[4096] = { 0 };\r\n\tDWORD dwRead;\r\n\tBOOL bSuccess = FALSE;\r\n \r\n\t//用WriteFile，从hStdOutRead读出子进程stdout输出的数据，数据结果在out_buffer中，长度为dwRead  \r\n\tbSuccess = ReadFile(hStdOutRead, out_buffer, 4096, &amp;dwRead, NULL);\r\n\tif ((bSuccess) &amp;&amp; (dwRead != 0))  //如果成功了，且长度&gt;0  \r\n\t{\r\n\t\t// 此处加入你自己的代码  \r\n\t\t// 比如：将数据写入文件或显示到窗口中  \r\n\t\tcout &lt;&lt; endl &lt;&lt; \"----得到的消息是---\" &lt;&lt; endl &lt;&lt; out_buffer;\r\n\t}\r\n\treturn bSuccess;\r\n}\r\n\r\n```\r\nhttps://blog.csdn.net/guyue35/article/details/47186797\r\n\r\n解决的话，采纳一下\r\n解决的话，采纳一下\r\n解决的话，采纳一下", "Konwledge_Point": "数据的输入", "Question": ["C语言怎么向输入缓冲区写入数据呢？", ["我想让getchar()获取到程序给出的数据而不是键盘输入的数据。", "\n\n", "getchar(）函数必须获取到一个字符才会继续运行后面的代码，", "\n但是我想把输入缓冲区写满某个键盘不能直接输入的字符，然后检验getchar（）", "\n获取的到字符是不是我程序放到缓冲区的这个字符，", "\n通过这样来检验用户有没有输入。", "\n这样即使用户没有输入程序也会继续运行。", "\n\n", "请问该如何实现呢？"]], "Tag": "程序设计"}
{"Answer": "星期几可以用 1 2 3 4 5 6 7 表示\r\n时间可以以这个时间距当天0:00的分钟数作为数据。比如8:05可以表示为485 11:20可以表示为680", "Konwledge_Point": "数据的输入", "Question": ["神经网络如何输入时间型变量？", ["我要做一个公交车到站时间的预测，影响因素里面就有时段，或者站点的时间，那我可以直接把站点的时间当做自变量输入进去吗，最后不是要求WX+B的形式吗，如果输入不是数值形式的怎么办？还有一些像星期几日期那种的自变量怎么输入呢"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int a,n,i,sum=0;\r\n    while(1)\r\n    {\r\n        cin&gt;&gt;n;\r\n        if(n==0)\r\n        return 0;\r\n        for(i=0;i&lt;n;i++)\r\n        {\r\n            cin&gt;&gt;a;\r\n            sum += a;\r\n        }\r\n        cout&lt;&lt;sum&lt;&lt;endl;\r\n        sum=0;\r\n    }\r\n    return 0;\r\n}\r\n\r\n```\r\n解决请采纳！谢谢！", "Konwledge_Point": "数据的输入", "Question": ["每个测试用例包含一个整数N，然后在同一行中跟随N个整数。以0开头的测试用例将终止输入，并且该测试用例将不被处理。", ["\n\n", "我输入第一组数据是对的，第二组就不对了。 怎么改呀？？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ndef student():\n    students &amp;#61; []\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;):\n        lis&amp;#61;[]\n        info &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号,姓名,三门成绩&amp;#xff0c;用逗号隔开&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n        data &amp;#61; info.&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n        lis.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]))/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        students.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(data&amp;#43;lis)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(students[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;])\n&lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["有关python有12个学生，每个学生的数据包括学号，姓名，三门课程的成绩及平均分。输入这12个学生的数据，然后计算平均分，并输出第6号学生", ["def student():", "    students = []", "    for i in range(12):", "        info = input(\"请输入学号 姓名 三门成绩\")", "         data = info.strip().split()", "        score = round(eval('%s+%s+%s'%(2,3,4))/3, 2)", "       data .append(score)", "        students.append(data)", "    print(students[5])", "\n", "运行没有错误，但就是什么都不会有显"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以以输入的空格键去判断啊&amp;#xff0c;比如123 789 一个空格键就两个数了&amp;#xff0c;按回车键就结束输入了&amp;#xff1b;然后取每个数的第一个数就可以了&amp;#xff0c;可以用字符串的形式输入&amp;#xff0c;合并字串成目标字串&amp;#xff0c;然后用atoi转化成整数型即可&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言 怎么判断我输入了多少个数再构建一个新的几位数", ["遇到这种问题 比如我输入一组整数 我输入了 四个数：409 901 20 0 ，然后取他们最高位构建成一个新的数 4920。这种程序用c语言需要怎么写", "我想知道首先怎么判断我是输入了四个数 然后可以让他构建成一个新的四位数。取最高位的话，取完放哪里，需要用到数组吗。我知道有个公式s=s+a[i]可以构建新的数，那这个a[i],要怎么遍历，就我怎么知道只有四个去遍历"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;示例程序&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; win32api\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; win32con\n&lt;span class=\"hljs-comment\"&gt;#按下组合键ctrl&amp;#43;V&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;win32api&lt;/span&gt;.keybd_event(&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  #ctrl键位码是&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;win32api&lt;/span&gt;.keybd_event(&lt;span class=\"hljs-number\"&gt;86&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  #v键位码是&lt;span class=\"hljs-number\"&gt;86&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;win32api&lt;/span&gt;.keybd_event(&lt;span class=\"hljs-number\"&gt;86&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,win32con.KEYEVENTF_KEYUP,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) #释放按键\n&lt;span class=\"hljs-attribute\"&gt;win32api&lt;/span&gt;.keybd_event(&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,win32con.KEYEVENTF_KEYUP,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;python 键码对应表&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;字母和数字键     数字小键盘的键       功能键         其它键 \n      键   键码      键   键码          键   键码       键      键码 \n      A  &lt;span class=\"hljs-number\"&gt; 65 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 0 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 96 &lt;/span&gt;           F1  &lt;span class=\"hljs-number\"&gt; 112 &lt;/span&gt;      Backspace   &lt;span class=\"hljs-number\"&gt; 8 &lt;/span&gt;\n      B  &lt;span class=\"hljs-number\"&gt; 66 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 1 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 97 &lt;/span&gt;           F2  &lt;span class=\"hljs-number\"&gt; 113 &lt;/span&gt;      Tab      &lt;span class=\"hljs-number\"&gt; 9 &lt;/span&gt;\n      C  &lt;span class=\"hljs-number\"&gt; 67 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 2 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 98 &lt;/span&gt;           F3  &lt;span class=\"hljs-number\"&gt; 114 &lt;/span&gt;      Clear     &lt;span class=\"hljs-number\"&gt; 12 &lt;/span&gt;\n      D  &lt;span class=\"hljs-number\"&gt; 68 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 3 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 99 &lt;/span&gt;           F4  &lt;span class=\"hljs-number\"&gt; 115 &lt;/span&gt;      Enter     &lt;span class=\"hljs-number\"&gt; 13 &lt;/span&gt;\n      E  &lt;span class=\"hljs-number\"&gt; 69 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 4 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 100 &lt;/span&gt;          F5  &lt;span class=\"hljs-number\"&gt; 116 &lt;/span&gt;     Shift     &lt;span class=\"hljs-number\"&gt; 16 &lt;/span&gt;\n      F  &lt;span class=\"hljs-number\"&gt; 70 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 5 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 101 &lt;/span&gt;          F6  &lt;span class=\"hljs-number\"&gt; 117 &lt;/span&gt;     Control    &lt;span class=\"hljs-number\"&gt; 17 &lt;/span&gt;\n      G  &lt;span class=\"hljs-number\"&gt; 71 &lt;/span&gt;       &lt;span class=\"hljs-number\"&gt; 6 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 102 &lt;/span&gt;          F7  &lt;span class=\"hljs-number\"&gt; 118 &lt;/span&gt;     Alt      &lt;span class=\"hljs-number\"&gt; 18 &lt;/span&gt;\n      H  &lt;span class=\"hljs-number\"&gt; 72 &lt;/span&gt;       &lt;span class=\"hljs-number\"&gt; 7 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 103 &lt;/span&gt;          F8  &lt;span class=\"hljs-number\"&gt; 119 &lt;/span&gt;     Caps Lock   &lt;span class=\"hljs-number\"&gt; 20 &lt;/span&gt;\n      I   &lt;span class=\"hljs-number\"&gt; 73 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 8 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 104 &lt;/span&gt;         F9  &lt;span class=\"hljs-number\"&gt; 120 &lt;/span&gt;     Esc      &lt;span class=\"hljs-number\"&gt; 27 &lt;/span&gt;\n      J   &lt;span class=\"hljs-number\"&gt; 74 &lt;/span&gt;        &lt;span class=\"hljs-number\"&gt; 9 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 105 &lt;/span&gt;         F10 &lt;span class=\"hljs-number\"&gt; 121 &lt;/span&gt;    Spacebar   &lt;span class=\"hljs-number\"&gt; 32 &lt;/span&gt;\n      K  &lt;span class=\"hljs-number\"&gt; 75 &lt;/span&gt;        *  &lt;span class=\"hljs-number\"&gt; 106 &lt;/span&gt;          F11 &lt;span class=\"hljs-number\"&gt; 122 &lt;/span&gt;     Page Up    &lt;span class=\"hljs-number\"&gt; 33 &lt;/span&gt;\n      L  &lt;span class=\"hljs-number\"&gt; 76 &lt;/span&gt;        &amp;#43;  &lt;span class=\"hljs-number\"&gt; 107 &lt;/span&gt;          F12 &lt;span class=\"hljs-number\"&gt; 123 &lt;/span&gt;     Page Down   &lt;span class=\"hljs-number\"&gt; 34 &lt;/span&gt;\n      M  &lt;span class=\"hljs-number\"&gt; 77 &lt;/span&gt;       Enter&lt;span class=\"hljs-number\"&gt; 108 &lt;/span&gt;                         End      &lt;span class=\"hljs-number\"&gt; 35 &lt;/span&gt;\n      N  &lt;span class=\"hljs-number\"&gt; 78 &lt;/span&gt;        -  &lt;span class=\"hljs-number\"&gt; 109 &lt;/span&gt;                             Home     &lt;span class=\"hljs-number\"&gt; 36 &lt;/span&gt;\n      O  &lt;span class=\"hljs-number\"&gt; 79 &lt;/span&gt;        .  &lt;span class=\"hljs-number\"&gt; 110 &lt;/span&gt;                             Left Arrow  &lt;span class=\"hljs-number\"&gt; 37 &lt;/span&gt;\n      P  &lt;span class=\"hljs-number\"&gt; 80 &lt;/span&gt;        /  &lt;span class=\"hljs-number\"&gt; 111 &lt;/span&gt;                             Up Arrow   &lt;span class=\"hljs-number\"&gt; 38 &lt;/span&gt;\n      Q  &lt;span class=\"hljs-number\"&gt; 81 &lt;/span&gt;                                               Right Arrow  &lt;span class=\"hljs-number\"&gt; 39 &lt;/span&gt;\n      R  &lt;span class=\"hljs-number\"&gt; 82 &lt;/span&gt;                                               Down Arrow   &lt;span class=\"hljs-number\"&gt; 40 &lt;/span&gt;\n      S  &lt;span class=\"hljs-number\"&gt; 83 &lt;/span&gt;                                               Insert     &lt;span class=\"hljs-number\"&gt; 45 &lt;/span&gt;\n      T  &lt;span class=\"hljs-number\"&gt; 84 &lt;/span&gt;                                               Delete     &lt;span class=\"hljs-number\"&gt; 46 &lt;/span&gt;\n      U  &lt;span class=\"hljs-number\"&gt; 85 &lt;/span&gt;                                               Help      &lt;span class=\"hljs-number\"&gt; 47 &lt;/span&gt;\n      V  &lt;span class=\"hljs-number\"&gt; 86 &lt;/span&gt;                                               Num Lock    &lt;span class=\"hljs-number\"&gt; 144 &lt;/span&gt;  \n      W &lt;span class=\"hljs-number\"&gt; 87 &lt;/span&gt;         \n      X  &lt;span class=\"hljs-number\"&gt; 88 &lt;/span&gt;     \n      Y  &lt;span class=\"hljs-number\"&gt; 89 &lt;/span&gt;     \n      Z  &lt;span class=\"hljs-number\"&gt; 90 &lt;/span&gt;     \n     &lt;span class=\"hljs-number\"&gt; 0 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 48 &lt;/span&gt;     \n     &lt;span class=\"hljs-number\"&gt; 1 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 49 &lt;/span&gt;     \n     &lt;span class=\"hljs-number\"&gt; 2 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 50 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 3 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 51 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 4 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 52 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 5 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 53 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 6 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 54 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 7 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 55 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 8 &lt;/span&gt; &lt;span class=\"hljs-number\"&gt; 56 &lt;/span&gt;      \n     &lt;span class=\"hljs-number\"&gt; 9 &lt;/span&gt;  57\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助点个采纳吧,谢谢&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python如何模拟键盘输入，向其它程序输入框的光标处输入字符串？", ["RS232-USB协议线破损无法使用的情况下，无法使用扫码枪直接将条码内容扫入excel表中，目前使用python进行端口监听，能够接收到信号和字符串内容，如何将接收到的信号模拟成键盘按键输入？"]], "Tag": "程序设计"}
{"Answer": "PDA扫描到信息后，先找到当前有焦点的控件\r\nView rootview = activity.getWindow().getDecorView();\r\nView focusView = rootview.findFocus();\r\n然后给他设置值\r\nif (focusView instanceof EditText) {\r\n  EditText et = (EditText) focusView;\r\n  et.setText(\"你要展示的值\")\r\n}", "Konwledge_Point": "数据的输入", "Question": ["Android 手持PDA 如何让扫描到的数据，跟随光标，输入到任意EditText", ["最近在研究Android 手持PDA的扫描系统", "\n从厂家获得到了demo的源代码，", "\n按照厂家的源代码修改完之后。发现扫描到的内容只能输入到固定的文本框内", "\n如果一个界面内有有两个文本框，就只能输入到第一个文本框内。", "\n\n", "请问如何能根据光标的位置，输入到不同的文本框内", "\n\n", "布局文件", "\n\n", "<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"50dp\"\n        android:text=\"Scan Test\"\n        android:id=\"@+id/tv_title\"\n        android:textSize=\"40dp\"/>\n    <EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:layout_below=\"@+id/tv_title\"\n        android:id=\"@+id/et1\"/>\n    <EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:layout_below=\"@+id/et1\"\n        android:id=\"@+id/et2\"/>\n    <Button\n        android:id=\"@+id/btnOpen\"\n        android:layout_below=\"@+id/et2\"\n        android:text=\"Scan\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"/>\n\n\n</RelativeLayout>\n", "\n\n", "JAVA文件", "\n\n", "import android.Manifest;\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.content.pm.PackageManager;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.Selection;\nimport android.text.Spannable;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\n\nimport com.qs.service.ScanService;\nimport com.zebra.sdl.SDLguiActivity;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private ScanBroadcastReceiver scanBroadcastReceiver;\n\n    Button btnOpen, btnEdit;\n    public static EditText et_code1;\n\n    List<Map<String, String>> listData = new ArrayList<Map<String, String>>();\n\n    String str2,str1,str;\n\n    String TAG=\"数据\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setContentView(R.layout.activity_main);\n\n        et_code1 = (EditText) findViewById(R.id.et1);\n\n        et_code1.setText(\"\");\n\n        btnOpen = (Button) findViewById(R.id.btnOpen);\n        btnOpen.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View arg0) {\n\n                //斑马头软解码方式\n                if(Build.MODEL.contains(\"mipi\")){\n\n                    SDLguiActivity.doDecode();\n\n                }else{\n                    //普通硬解码\n                    ScanService.openScan();\n                }\n\n\n            }\n        });\n\n        //斑马头软解码方式\n        if(Build.MODEL.contains(\"mipi\")){\n\n            //软解码为摄像头形式，需要加上权限\n            if (ContextCompat.checkSelfPermission(MainActivity.this, android.Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\n                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.CAMERA}, 1000);\n            } else {\n                //说明已经获取到摄像头权限了 想干嘛干嘛\n\n                Intent newIntent = new Intent(MainActivity.this, SDLguiActivity.class);\n                newIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                startService(newIntent);\n            }\n\n\n\n        }else{\n\n            Intent newIntent = new Intent(MainActivity.this, ScanService.class);\n            newIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            startService(newIntent);\n\n        }\n\n        scanBroadcastReceiver = new ScanBroadcastReceiver();\n        IntentFilter intentFilter = new IntentFilter();\n        intentFilter.addAction(\"com.qs.scancode\");\n        this.registerReceiver(scanBroadcastReceiver, intentFilter);\n\n    }\n\n    @Override\n    protected void onResume() {\n        System.out.println(\"onResume\" + \"open\");\n        Log.v(\"onResume\", \"open\");\n        super.onResume();\n    }\n\n    @Override\n    protected void onDestroy() {\n        this.unregisterReceiver(scanBroadcastReceiver);\n        super.onDestroy();\n    }\n\n    class ScanBroadcastReceiver extends BroadcastReceiver {\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            // TODO Auto-generated method stub\n            //text1为扫描信息\n            String text1 = intent.getExtras().getString(\"code\");\n            String str = et_code1.getText().toString().trim()+\"\\n\";\n            et_code1.setText(str + text1);\n            Editable text = et_code1.getText();\n            Spannable spanText = text;\n            Selection.setSelection(spanText, text.length());\n        }\n    }\n\n}\n\n", "\n\n", "求大神指点，本人是初学者，麻烦详细一点。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;time&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入您的姓名&amp;#xff1a;&amp;#39;&lt;/span&gt;)\ninputyear&amp;#61;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入您的出生年份&amp;#xff1a;&amp;#39;&lt;/span&gt;))\nyear&amp;#61;&lt;span class=\"hljs-type\"&gt;time&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;localtime&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;time&lt;/span&gt;.time()).tm_year\nage&amp;#61;year-inputyear\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#39;您好&amp;#xff01;{}&amp;#xff0c;您{}岁。&amp;#39;&lt;/span&gt;.format(&lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;,age))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python编写程序，输入年龄和出生年份，输入姓名和年龄", []], "Tag": "程序设计"}
{"Answer": "使用fprintf和fscanf读取文件的时候就能防止读取进去空格了，不行的话就fread然后清空格", "Konwledge_Point": "数据的输入", "Question": ["怎样解决C语言TXT文本输入数据时的空格问题？", ["题目如下：", " 1到40，一共四十个数，输入时一行不超过12个数，不超过10行，筛选出现一次的数字，出现两次的数字，三次及三次以上的数字，出现零次的数字，要求用TXT文本输入，输出。", "遇到的问题：", "输入数据后，发现结果错误。仔细查找发现，每行数据后会发现几个空格，", "，导致了只有第一行数据能够读入。笔者试过多次，发现貌似只有这一种空格形式会对结果造成影响，其他的情况，添加很多空格也不会有事。笔者咨询前辈，说可能由于中文或者英文状态下的原因，笔者试过两种状态下输入原数据的空格，发现均输出错误结果。现在比较迷惑，不知如何改进（其实用基本能用了），还请各位大神帮帮忙，也希望大家能对我的算法提出改进意见！", "代码如下：", "\n#include", "\n#include", "\n#define S 120", "\n#define T 40", "\n#define I 1", "\nint main()", "\n{", "\n    FILE*fp1;", "\n    FILE*fp2=fopen(\"output.txt\",\"w\");", "\n    int num1[S],num2[T],num3[T],num4[T],num5[T],num6[T],i,j=0,k=0,a=0,b=0,c=0,d=0,m,n;", "\n    if((fp1=fopen(\"input.txt\",\"r\"))==NULL)", "\n    {", "\n    printf(\"无法打开文件\\n\");", "\n    exit(0);", "\n    }", "\n    for(i=I;i<=T;i++)", "\n        num2[j++]=i;//将1至40赋给num2数组各元素", "\n    for(i=0;i\n    fscanf(fp1,\"%d\",&num1[i]);//从文件中读出120个的数据，并存入num1数组", "\n    fclose(fp1);", "\n    for(i=0;i\n    {", "\n            for(j=0;j\n            if(num1[j]==num2[i])k++;//比较", "\n            if(k==0) num3[a++]=num2[i];", "\n            else if(k==1) num4[b++]=num2[i];", "\n            else if(k==2) num5[c++]=num2[i];", "\n            else if(k>3||k==3) num6[d++]=num2[i];", "\n            k=0;", "\n    }", "\n    fprintf(fp2,\"出现过零次的数字是:\");", "\n    for(m=0;m<a;m++)", "\n        fprintf(fp2,\"%3d\",num3[m]);", "\n    fprintf(fp2,\"\\n\");", "\n    fprintf(fp2,\"出现过一次的数字是:\");", "\n    for(m=0;m<b;m++)", "\n        fprintf(fp2,\"%3d\",num4[m]);", "\n    fprintf(fp2,\"\\n\");", "\n    fprintf(fp2,\"出现过两次的数字是:\");", "\n    for(m=0;m<c;m++)", "\n        fprintf(fp2,\"%3d\",num5[m]);", "\n    fprintf(fp2,\"\\n\");", "\n    fprintf(fp2,\"出现过三次或三次以上的数字是:\");", "\n    for(m=0;m<d;m++)", "\n        fprintf(fp2,\"%3d\",num6[m]);", "\n    fprintf(fp2,\"\\n\");", "\n    fclose(fp2);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "https://wenku.baidu.com/view/fb00c1c2c4da50e2524de518964bcf84b8d52d62.html", "Konwledge_Point": "数据的输入", "Question": ["数据结构实验：单链表", ["实现线性结构上的单链表的产生以及元素的查找、插入与删除。具体实现要求：", "\n（1）从键盘输入20个整数，用前插法或尾插法输入结点值。", "\n（2）从键盘输入1个整数，在单链表中查找该结点的位置。若找到，则显示“找到了”；否则，则显示“找不到”。", "\n（3）从键盘输入2个整数，一个表示欲插入的位置i，另一个表示欲插入的数值x，将x插入在对应位置上，输出单链表所有结点值，观察输出结果。", "\n（4）从键盘输入1个整数，表示欲删除结点的位置，输出单链表所有结点值，观察输出结果。", "\n（5）将单链表中值重复的结点删除，使所得的结果表中个结点值均不相同，输出单链表所有结点值，观察输出结果。", "\n（6）删除其中所有数据值为偶数的结点，输出单链表所有结点值，观察输出结果。", "\n（7）将单链表分解成两个单链表A和B，使A链表中含有原链表中序号为奇数的元素，而B链表中含有原链表中序号为偶数的元素，且保持原来的相对顺序，分别输出单链表A和单链表B的所有结点值，观察输出结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接创建一个二维数组 String[4][5] 即可。输入成绩前提前把固定的表头和学生名称添加到数组中。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["java 将输入的数据打印成表格的问题", ["问题是关于：打印一个表格", "\n", "我现在的成果：", "输入这个表格的行数列数，并输入表格行x列个数据，得到了以上信息的二维数组，并把该数组打印下来", "比如：输入3，输入4，并输入了12个数据", "我把12个数据放到了一个3x4的二维数，意义是3个同学的4科成绩，共12个成绩", "并可以把他打印下来。输出结果RESULT1是这样", "98 76 77 92", "88 87 93 67", "98 76 58 97", "\n", "题目预期是RESULT2，输入3x4的信息，输出4x5的表格，多了一行一列", "                  1     2    3    4", " student1   98  76  77  92", "student2    88  87  93  67", "student3    98  76  58  97", "\n", "简言之，就是我现在的程序输出的是RESULT1,如何改进以让其输出RESULT2.", "有什么光标移动的代码吗？我想法是再创建两个一维String类型数组，第一个数组存储课1，课2，课3...，第二个存储student1，student2，student3....，按一定的打印方式把三个数组打印下来就行。但不知如何操作能打印出上面的样子"]], "Tag": "程序设计"}
{"Answer": "这个很简单的啊，把你后台的返回数据赋值到你的 data里就可以了啊，\r\norient: {\"center\",\r\n          left: 1100,\r\n          top:120,\r\n          data: [\"已拒绝\", \"待审批完成\", \"正在布控\"]\r\n        },\r\n\t\t\t\t\r\n\t\t\t\t你的接口返回的值this.orient=(就是你返回的值res.data里面的值)", "Konwledge_Point": "数据的输入", "Question": ["怎么使用echarts饼状图绑定动态数据呢？", ["各位大神，我的数据格式为这种：", "\napprovalPerson: 180", "\napprovalTask: 14", "\nrefusePerson: 180", "\nrefuseTask: 2", "\nunApprovalPerson: 180", "\nunApprovalTask: 2", "\n怎么使用echarts饼状图绑定动态数据呢？", "\n请求过来的数据只有数量。", "\n以下是我的具体dai'ma", "\n\n", "<template>\n  <div class=\"echarts\">\n    <div id=\"main\" style=\" width: 1241px;\n    height: 320px;\n    left: -166px;\n    top:-11px;\"></div>\n  </div>\n</template>\n\n<script>\nvar a;\nexport default {\n  data(){\n    return{\n      approvalTask:0,//任务正在布控中\n      refuseTask:0,//已拒绝任务\n      unApprovalTask:0//待审批任务\n    }\n  },\n  name: \"Echarts\",\n  methods: {\n    myEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = this.$echarts.init(document.getElementById(\"main\"));\n\n      this.$axios.post(\"/sjproject/task/getTaskAndPerson\").then(res=>{\n        console.log(res.data.data.detail);\n        this.approvalTask=res.data.data.detail.approvalTask\n        this.refuseTask=res.data.data.detail.refuseTask\n        this.unApprovalTask=res.data.data.detail.unApprovalTask\n        console.log(this.approvalTask);\n        console.log(this.refuseTask);\n        console.log(this.unApprovalTask);\n      })\n\n\n      // 指定图表的配置项和数据\n      var option = {\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"center\",\n          left: 1100,\n          top:120,\n          data: [\"已拒绝\", \"待审批完成\", \"正在布控\"]\n        },\n        series: [\n          {\n            name: \"布控任务统计\",\n            type: \"pie\",\n            color: [\"#F8C103\", \"#FF203A\", \"#3EAAEF\"],\n            radius: [\"50%\", \"70%\"],\n            label: {\n                show: true,\n              position: \"left\",\n              formatter:function(arg){\n                // console.log(arg);\n                return arg.name+ \"     \"+ arg.value\n              },\n            textStyle: {\n                    color: '#999'\n              },\n\n            },\n            labelLine: {\n              length:25,\n              length2: 150\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: \"20\",\n                fontWeight: \"bold\",\n                fontFamily:\"PingFangSC-Medium\",\n                color:\"#333\",\n              }\n            },\n            data: [\n              { value: 14, name: \"已拒绝\" },\n              { value:2, name: \"待审批完成\" },\n              { value: 2, name: \"正在布控\" }\n            ]\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  },\n  mounted() {\n    this.myEcharts();\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n\n\n", "\n\n", "新手学习中，谢谢大神帮助。"]], "Tag": "程序设计"}
{"Answer": "看你是怎样的一个情况，如果页面是运用easyui  datagrid传入值的话，你可以在页面获取datagrid的值判断是否重复(其他的也适用)，后台也检索判断下，毕竟前端的数据不一定都正确，可能会存在缓存等数据", "Konwledge_Point": "数据的输入", "Question": ["从页面输入的值，如何判断存入数据库中没有重复", ["我从页面输入值，jfinal中Java代码怎么判断存入数据库中这个值是唯一的。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;numbers&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一组成绩&amp;#xff08;以空格隔开&amp;#xff09;&amp;#xff1a;&amp;#39;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&lt;/span&gt;\n请输入一组成绩&amp;#xff08;以空格隔开&amp;#xff09;&amp;#xff1a;80 82 84 85\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;numbers&lt;/span&gt;\n[&amp;#39;80&amp;#39;, &amp;#39;82&amp;#39;, &amp;#39;84&amp;#39;, &amp;#39;85&amp;#39;]\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;numbers &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; m &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; numbers]&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;numbers&lt;/span&gt;\n[80, 82, 84, 85]\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;请采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何用input向一个list中输入一系列数据？", ["自己尝试了一些思路，但是都有错误，在此就不放上来给巨巨们看笑话了。", "请教巨巨们，怎么用input向列表中输入数据，如：某一科目一个班级的成绩分别是80,82,84,85，该怎么向numbers[ ]中输入呢？"]], "Tag": "程序设计"}
{"Answer": "可以让datagridview1与datagridview2都绑定一个数据源，为datagridview1输入数据时更新到数据源，并在datagridview2中显示出来。", "Konwledge_Point": "数据的输入", "Question": ["C#datagridview1输入数据，datagridview2输出", ["通过键盘为datagridview1输入n行m列数据，然后在datagridview2输出这n行m列数据的代码怎么写？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加个if判断一下&amp;#xff0c;正数才相加&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;                   \nn &amp;#61; eval( &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;( ) )        \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;( n !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;:           \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        s &amp;#61; s &amp;#43; n            \n    n &amp;#61; eval( &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;( ) ) \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;( “s&amp;#61;”, s )&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["编写程序：输入若干个整数（输入0表示结束），求其中所有正整数的和（用while语句！）", ["怎么样才能不算负整数的和？", "只会算整数的和www", "\n", "s = 0                   ", "n = eval( input( ) )        ", "while( n != 0 ):           ", "s = s + n            ", "    n = eval( input( ) ) ", "print( “s=”, s ）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff1f;不要加单引号&amp;#xff0c;赋值一般是setInt(xx),取值是getInt(),你不要搞混了&amp;#xff0c;另外添加语句记得写规范&lt;br /&gt;insert into 表名(字段一&amp;#xff0c;字段二&amp;#xff09;value(值1,值2)&lt;br /&gt;insert into 表名 values(值1&amp;#xff0c;值2)&lt;br /&gt;两者区别在于values可以省略前面的&amp;#xff0c;但是要求值的顺序和字段名一一对应&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/723019815046172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["在Java怎么将我输入的数据插入到数据库中", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "Incorrect integer value: '?' for column '?????·' at row 1", "\n", "我想要达到的结果", "\n", "在Java怎么将我输入的数据插入到数据库中"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;insert是没有条件判断的&amp;#xff0c;因为是新增插入的操作。将一张表的一些数据复制到另一张表中使用insert语句是可以带where条件的。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C#向数据库根据时间插入数据", ["insert into PassTestT (产品型号,测试时间],结果)VALUES ('\" + 型号 + \"','\" + dtStr + \"')where TestDate between time11 and time22", "将一些数据保存到datatable中，其中一列为时间，根据时间向数据库插入几条数据，insert语句应该怎么写，这种where会报错"]], "Tag": "程序设计"}
{"Answer": "输入的是字符0而不是数字0，字符0的ASCII码是0x31 非0\r\n\r\nint getString(char* buff,int bufflen){\r\n\tint i=0;\r\n\tfor(;i&lt;bufflen;i++){\r\n\t\tbuff[i] = getchar();\r\n\t\tif(buff[i] == '0'){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif(i==bufflen){\r\n\t\treturn -1;\r\n\t}\r\n\treturn 0;\r\n}", "Konwledge_Point": "数据的输入", "Question": ["用C语言实现从键盘输入一组非零整数(以输入零作为输入结束的标志)", ["\n功能：想通过这个函数实现输入一些数据，但是是以输入0作为输入结束标志的。", "\n问题：运行结果是当输入0时并不会结束循环，而是还可以一直输入数据。", "\n求各路大佬帮忙看看哪里错了？。。", "\n\n", "我改了一下：但是运行出来还是错的。。。。。", "\nfor(i=0;i<100;i++）", "\n{", "\n        scanf(\"%d\",&a[i]);", "\n            if(a[i]=='0')", "\n                break;", "\n}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "```java\r\n/**\r\n * 作者：WGS\r\n * 微信：w1150111308\r\n * Q  Q：1150111308\r\n * 邮箱：gosse0405@163.com\r\n */\r\npublic class Answer {\r\n\r\n\tstatic Scanner sc = new Scanner(System.in);\r\n\r\n\tstatic String[] cars = {\"\", \"奥迪A4\", \"马自达6\", \"皮卡雪6\", \"金龙\", \"松花江\", \"依维柯\"};\r\n\tstatic int[] prices = {0, 500, 400, 450, 800, 400, 1000};\r\n\tstatic int[] persons = {0, 4, 4, 4, 20, 0, 0};\r\n\tstatic int[] tons = {0, 0, 0, 2, 0, 4, 20};\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"欢迎使用租车系统\");\r\n\r\n\t\t// 输入的数字\r\n\t\tint whether = inputNum(\"您是否要租车：1是，0否\");\r\n\t\tswitch (whether) {\r\n\t\t\tcase 1:\r\n\t\t\t\t// 租车系统内容\r\n\t\t\t\tcontent();\r\n\t\t\t\t// 输入租车数量\r\n\t\t\t\tint num = 0;\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tnum = inputNum(\"请输入要租车的数量：\");\r\n\t\t\t\t\tif (num &gt; 0 &amp;&amp; num &lt; cars.length) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSystem.out.println(\"您输入的内容不在系统范围，请重新输入！\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 执行租车流程和账单结算\r\n\t\t\t\ttotal(inputGroupStr(\"请输入您要租车的序号和天数：\", num));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0:\r\n\t\t\t\tSystem.out.println(\"欢迎您下次使用本系统！\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.out.println(\"输入错误的数字\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 租车主体内容\r\n\t */\r\n\tpublic static void content() {\r\n\t\tSystem.out.println(\"您可租车的类型及其节目表如下：\");\r\n\t\tfor (int i = 1; i &lt; cars.length; i++) {\r\n\t\t\tSystem.out.println(\r\n\t\t\t\t\"序号-\" + i + \"\\t\"\r\n\t\t\t\t+ \"汽车名称：\" + cars[i] + \"\\t\"\r\n\t\t\t\t+ \"租金：\" + prices[i] + \"/天 \\t\"\r\n\t\t\t\t+ \"容量：\" + (persons[i] != 0 ? (\"最多载人\" + persons[i] + \"人\") : \"\")\r\n\t\t\t\t+ (persons[i] != 0 &amp;&amp; tons[i] != 0 ? \"，\" : \"\")\r\n\t\t\t\t+ (tons[i] != 0 ? (\"最多载货\" + tons[i] + \"吨\") : \"\")\r\n\t\t\t);\r\n\t\t}\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n\t/**\r\n\t * 账单计算\r\n\t */\r\n\tpublic static void total(int[][] orderDays) {\r\n\t\tSystem.out.println(\"您的账单如下：\");\r\n\t\tint total = 0;\r\n\t\tfor (int i = 0; i &lt; orderDays.length; i++) {\r\n\t\t\tint order = orderDays[i][0];\r\n\t\t\tint days = orderDays[i][0];\r\n\t\t\ttotal += prices[order] * days;\r\n\t\t\tSystem.out.println(cars[order] + \" \\t\" + days + \"天\");\r\n\t\t}\r\n\t\tSystem.out.println(\"总价格：\" + total);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 输入单个数字内容\r\n\t * @return\r\n\t */\r\n\tpublic static int inputNum(String info) {\r\n\t\tSystem.out.println(info);\r\n\t\tString s = sc.nextLine();\r\n\t\tint num = -1;\r\n\t\ttry {\r\n\t\t\tnum = Integer.parseInt(s);\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\t/**\r\n\t * 输入三组数字内容\r\n\t * @return\r\n\t */\r\n\tpublic static int[][] inputGroupStr(String infoGroup, int num) {\r\n\t\tint[][] nums = new int[num][2];\r\n\t\tSystem.out.println(infoGroup);\r\n\t\tfor (int i = 0; i&lt; num; i++) {\r\n\t\t\twhile (true) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tString[] s = sc.nextLine().split(\" \");\r\n\t\t\t\t\tint order = Integer.parseInt(s[0]);\r\n\t\t\t\t\tint days = Integer.parseInt(s[1]);\r\n\t\t\t\t\tif (order &gt;= cars.length || order &lt;= 0 || days &gt;= cars.length &amp;&amp; days &lt;= 0) {\r\n\t\t\t\t\t\tSystem.out.println(\"您输入的内容不在系统范围，请重新输入！\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnums[i][0] = order;\r\n\t\t\t\t\t\tnums[i][1] = days;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\tSystem.out.println(\"您输入的内容不规范，请重新输入！\");\r\n\t\t\t\t\tSystem.out.println(\"【示例】：2 3\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nums;\r\n\t}\r\n}\r\n```\r\nhttps://blog.csdn.net/qq_34417433/article/details/104808640", "Konwledge_Point": "数据的输入", "Question": ["java 在for循环中使用scanner然后，输入三组数据，然后判断", ["\n1. 就是红色圈出来这部分就是运行时的效果，应该怎么实现呢，想了for循环       for (int i = 0; i <carnum1 ; i++) {", "\n           Scanner input=new Scanner(System.in);", "\n           String temp =input.nextLine();", "\n           String a[]=temp.split(\" \");", "\n           int num1=Integer.parseInt(a[0]);", "\n           int num2=Integer.parseInt(a[1]);", "\n           switch (num1){", "\n               case 1: System.out.println(\"奥迪\");break;", "\n               case 2: System.out.println(\"马自达\");break;", "\n               case 3: System.out.println(\"皮卡雪\");break;", "\n               case 4: System.out.println(\"金龙\");break;", "\n               case 5: System.out.println(\"松花江\");break;", "\n               case 6: System.out.println(\"依维柯\");break;}", "\n但是输出以一次一次输出的，"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#define N 100\nvoid inputarr(int *p,int *n);\nvoid bubblesort(int *arr,int length);\nvoid outputarr(int *arr,int n);\nvoid swap(int *a,int *b);\nint main()\n{\n\tint a[N];\n\tint i,n;\n\tinputarr(a,&amp;amp;n);\n\tbubblesort(a,n);\n\toutputarr(a,n);\n\treturn 0;\n}\nvoid inputarr(int *p,int *n)\n{\n\t*n &amp;#61; 0;\n\tdo \n\t{\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;p[*n]);\n\t\t(*n)&amp;#43;&amp;#43;;\n\t} while (p[*n-1] !&amp;#61; 0);\n\t*n &amp;#61; *n -1;\n}\nvoid bubblesort(int *arr,int length)\n{\n\tint i,j;\n\tfor(i &amp;#61; 0; i &amp;lt; length -1; i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (j &amp;#61; 0; j &amp;lt; length -1-i;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tif(arr[j] &amp;gt; arr[j&amp;#43;1])\n\t\t\t\tswap(&amp;amp;arr[j],&amp;amp;arr[j&amp;#43;1]);\n\t\t}\n\t}\n}\nvoid outputarr(int *arr,int n)\n{\n\tint i &amp;#61; 0;\n\tfor (; i &amp;lt; n;i&amp;#43;&amp;#43;)\n\t{\n\t\tif(i &amp;lt; n-1)\n\t\t\tprintf(&amp;#34;%d &amp;#34;,arr[i]);\n\t\telse\n\t\t\tprintf(&amp;#34;%d&amp;#34;,arr[i]);\n\t}\n\tprintf(&amp;#34;\\n&amp;#34;);\n}\nvoid swap(int *a,int *b)\n{\n\tint tmp;\n\ttmp &amp;#61; *a;\n\t*a &amp;#61; *b;\n\t*b &amp;#61; tmp;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一批数，最多 100 个，当输入 0 时，结束输入，将这批整数按从小到大的顺序排列后输出。", ["\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "http://bbs.csdn.net/topics/340202832", "Konwledge_Point": "数据的输入", "Question": ["在汇编程序在屏幕上显示不出字符~", ["\n明明我已近将数据输入到B8000：0000中了为什么屏幕显示不出来？", "\n我用的虚拟机XP系统，直接打开EXE程序不显示，用DOS打开也不显示'W'"]], "Tag": "程序设计"}
{"Answer": "现在有两种方法，一种是你说的填充再resize，还有一种是直接resize。这两种各有好处，\r\n填充再resize的话，好处是可以保持物体的形状，物体形变对推断的时候是不利的。\r\n比如，人脸检测，一般都是高跟宽是接近的，但是可以形变成高比宽大个好几倍，这在世界上是不存在这种脸型的，从而影响模型的准确性。\r\n又比如，像0跟o，如果直接resize的话，那么就会变得难以分辨。\r\n坏处是，填充的话，假如，你模型的输入是128*128，但你要输入的图片是128*256，那么等于你经过填充resize，实际输出的图片有效像素是64*128\r\n这就等于模型输入的信息量减少了。\r\n所以，具体要选择哪种方法，不仅要视应用场景，也要看你模型的输入，图片的输入的像素。\r\n顺便一提，yolo是使用填充再resize的方法，但也有别的目标检测算法，是直接resize的。", "Konwledge_Point": "数据的输入", "Question": ["目标检测数据集不是等宽高的的处理方法", ["目标数据集不是等宽高的,比如说有一张600x600x3的输入网络,但是图片的大小是1200x800的,我可不可以将这章图片先在右边填充1200x400,变成1200x1200,然后在resize到600x600?"]], "Tag": "程序设计"}
{"Answer": "空格，便是NULL，但是也是存在，按回车是终止，结束。\r\n所以按回车之后，系统识别输出完成，所以读入输出，按空格认为你还要输入，就是输入操作还没有完成，所以继续输入，而输入很多只输出第一个字符，\r\n是因为你写的代码是没有存储的，所以只输出1.", "Konwledge_Point": "数据的输入", "Question": ["C++中有关输入流的问题：在输入过程中空格键和enter键的作用？为什么这样？还请大神帮忙分析", ["\n程序中，in是一个istream对象，因为IO对象不能进行拷贝和赋值操作，进行IO操作的函数经常以引用方式传递和返回流。>>运算符，用来从in中读取输入数据。While循环表示：每从输入中读取一个数，便输出该数并换行，当遇到文件结束标识符时结束输入。", "\n\n", "在输入过程中enter键的作用：每从输入中读取一个数到in中，按下enter键，便输出来。结果如下：", "\n\n", "在输入过程中空格键的作用：从输入中读取一个数到in中，按下空格键，再读取一个数，再按空格键，这样会一直显示输入的数。最后按下enter键后才会依次输出每一个数。结果如下："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;using System;&lt;br /&gt;using System.Collections.Generic;&lt;br /&gt;using System.Linq;&lt;br /&gt;using System.Text;&lt;br /&gt;using System.IO;&lt;/p&gt;\n&lt;p&gt;namespace ConsoleApplication1&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;    class Program&lt;br /&gt;    {&lt;!-- --&gt;&lt;br /&gt;        static void Main(string[] args)&lt;br /&gt;        {&lt;!-- --&gt;&lt;br /&gt;            string a &amp;#61; &amp;#34;nihao&amp;#34;;&lt;br /&gt;            string b &amp;#61; &amp;#34;world&amp;#34;;&lt;br /&gt;            string c &amp;#61; &amp;#34;!&amp;#34;;&lt;br /&gt;            string d &amp;#61; a &amp;#43; b &amp;#43; c;&lt;br /&gt;            string path&amp;#61;&amp;#64;&amp;#34;C:\\Users\\12847\\Desktop\\12.txt&amp;#34;;&lt;br /&gt;            FileStream fs &amp;#61; new FileStream(path, FileMode.OpenOrCreate, FileAccess.ReadWrite);&lt;br /&gt;            byte[] array&amp;#61;Encoding.UTF8.GetBytes(d);&lt;br /&gt;            fs.Write(array,0,array.Length);&lt;br /&gt;            fs.Close();&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c#怎么把数据存到缓冲区里面", ["c#怎么把数据存到缓冲区里面再写入TXT记事本里面", "\n", "例如 string a=\"nihao \"", "        string b=\"world\"", "       string c=\"!\"", "把三个类型拼接起来成string d=\"nihaoworld!\"", "将 string d 放入缓冲区 之后写入txt文档  注意必须放入缓冲区里面  因为string D有n 个", "\n", "求个DEMO。各位小可爱们爱你"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把Stu的定义贴出来&amp;#xff0c;我猜测是std.id溢出了&amp;#xff0c;你定义的长度是9字节吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言两个scanf输入数据，为什么前一个把后面的输入的数据也接收了啊", ["Stu stu;\n", "printf", "(", "\"请输入学生的各项信息：\\n\"", ");\n", "printf", "(", "\"请输入学生的各项信息：\\n\"", ");\n", "printf", "(", "\"学生学号：\"", ");\nscanf(", "\"%s\"", ", stu.id);\n", "printf", "(", "\"输入name前学号是：%s\\n\"", ", stu.id);\n", "printf", "(", "\"学生姓名：\"", ");\nscanf(", "\"%s\"", ", stu.name);\n", "printf", "(", "\"\\n 输入name后学号是：%s\\n\"", ", stu.id);\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路:用循环将你需要的数据存储进集合中&amp;#xff0c;再通过遍历集合查询是否存在第二阶段的数据&lt;/p&gt;\n&lt;p&gt;代码如下:&lt;br /&gt;import java.util.ArrayList;&lt;br /&gt;import java.util.Scanner;&lt;br /&gt;public class 输入数据和查询数据 {&lt;!-- --&gt;&lt;br /&gt;public static void main(String[] args) {&lt;!-- --&gt;&lt;br /&gt;    // TODO Auto-generated method stub              Scanner sc&amp;#61;new Scanner(System.in);&lt;br /&gt;    //第一阶段&amp;#xff1a;键盘录入数据&lt;br /&gt;       ArrayList array&amp;#61;new ArrayList();//创建array集合对象&lt;br /&gt;       System.out.println(&amp;#34;请输入数据,每输入一个数据请按回车&amp;#34;);&lt;br /&gt;    for(int i&amp;#61;0;;i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;            int input&amp;#61;sc.nextInt();&lt;br /&gt;            if(input&amp;gt;0) {&lt;!-- --&gt;&lt;br /&gt;    array.add(input);//将用户输入的数据放进array集合中&lt;br /&gt;    continue;&lt;br /&gt;    }&lt;br /&gt;else {&lt;!-- --&gt;&lt;br /&gt;    System.out.println(&amp;#34;你输入的数据出现0或负数,输入结束&amp;#xff01;&amp;#34;);&lt;br /&gt;    break;&lt;br /&gt;    }&lt;br /&gt;    }&lt;br /&gt;    for(int m&amp;#61;0;m&amp;lt;array.size();m&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;//遍历集合array&lt;br /&gt;     System.out.print(array.get(m)&amp;#43;&amp;#34;  &amp;#34;);&lt;br /&gt;    }                        &lt;/p&gt;\n&lt;p&gt;//第二阶段&amp;#xff1a;查询数据&lt;br /&gt;        System.out.println();&lt;br /&gt;    System.out.println(&amp;#34;请输入您需要查询的数据&amp;#34;);&lt;br /&gt;        for(int k&amp;#61;0;;k&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;    int querty&amp;#61;sc.nextInt();&lt;br /&gt;         if(querty&amp;gt;0) {&lt;!-- --&gt;&lt;br /&gt;    for(int m&amp;#61;0;m&amp;lt;array.size();m&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;  //遍历集合array&lt;br /&gt;    if(querty&amp;#61;&amp;#61;array.get(m)) {&lt;!-- --&gt;&lt;br /&gt;    System.out.println(&amp;#34;您要查询的数据在集合中存在&amp;#34;);&lt;br /&gt;        break;&lt;br /&gt;        }&lt;br /&gt;    else {&lt;!-- --&gt;&lt;br /&gt;        if(m&amp;#61;&amp;#61;array.size()-1) {&lt;!-- --&gt;&lt;br /&gt;    System.out.println(&amp;#34;查无此数据&amp;#xff01;&amp;#34;);                }&lt;br /&gt;    else {&lt;!-- --&gt;&lt;br /&gt;    continue;&lt;br /&gt;        }&lt;br /&gt;        }&lt;br /&gt;            }&lt;br /&gt;              }&lt;br /&gt;    else {&lt;!-- --&gt;&lt;br /&gt;    System.out.println(&amp;#34;你输入的查询数据中存在0或负数&amp;#xff0c;查询结束!&amp;#34;);&lt;br /&gt;       break;        }&lt;br /&gt;    }&lt;br /&gt;        }&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用JAVA完成输入数据和查询数据", ["问题描述：", "该问题分为两个阶段。", "第一阶段，输入数据。", "从键盘输入若干个正整数，直至输入0或负整数为止，即输入的正整数的个数不确定，可能0个，1个，100个，1000000000个，乃至更多。", "第二阶段，查询数据。", "从键盘输入一个正整数，查询该正整数是否在第一阶段输入的数据中。进行若干次查询，直至输入0或负整数为止。", "\n", "用Java编程语言实现。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nl1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;列表: &amp;#34;&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;()\nevg &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nsum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)):\n    sum &amp;#43;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(l1[i])\nevg &amp;#61; sum/&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)\n&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in l1:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(i) &amp;gt; evg:\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["（填空就行）输入一个班全部同学的身高，输出其中超过平均身高的那些同学的人数。", ["【题目描述】输入一个班全部同学的身高，输出其中超过平均身高的那些同学的人数。", "【输入描述】一行，包含若干个正整数，表示同学的身高，以空格分隔。", "【输出描述】一个整数，表示超过平均身高的那些同学的人数。", "【输入样例】143 174 119 127 117 164 110 128", "【输出样例】3", "【程序代码】", "a=【__1__】", "a=[【__2__】]", "n=len(a)", "aver=sum(a)/n", "k=【__3__】", "for i in range(n):", "    if a[i]>aver:", "        k+=1", "print(k)"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n#include &amp;lt;iostream&amp;gt;\n#include &amp;lt;iomanip&amp;gt;\nusing namespace std;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    for (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        cin &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    float ave &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; / &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;fixed&lt;/span&gt; &amp;lt;&amp;lt; setprecision(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;lt;&amp;lt; ave &amp;lt;&amp;lt; endl;\n\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["用C++求奇数和的平均数", ["输入若干个整数，求其中所有奇数之和。", "输入格式:", "输入一列数据，其中第一个整数n(n≤50)表示这列数据的总个数，后面是n个整数。", "输出格式:", "输出n个整数中所有奇数的平均数，要求输出结果精确到小数点后3位。", "输入样例:", "在这里给出一组输入。例如：", "5 6 5 18 -1 7", "输出样例:", "在这里给出相应的输出。例如：", "3.667"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;利用from workspace模块&amp;#xff0c;你出现的错位u只要把Configuration Parameter里面Data Import页面的input勾选框不要勾即可。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["simulink模式设置如何导入workspace理的数据", ["simu link进行状态空间仿真时从模型设置中导入workspace的数据仿真如下以下错误External input specified in the Configuration Parameters dialog box on the Data Import/Export page (or as an option to SIM command) to a model containing no root inports.  "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你自己耍来玩可以保存到localStorage中&amp;#xff0c;但是不能和其他用户和浏览器共享数据&amp;#xff0c;要共享数据需要搭建web服务器保存到数据库中&lt;/p&gt;\n&lt;p&gt;导出可以通过blob导出&amp;#xff0c;示例代码如下&amp;#xff0c;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;txt&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;保存&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;reset&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;清空&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;export&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;导出&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; txt &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;txt&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;localStorage&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;) || &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;;\n    txt.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt; &amp;#61; s;\n    &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;querySelector&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;#submit&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;onclick&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;localStorage&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setItem&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;, txt.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;alert&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;保存成功&amp;#xff0c;刷新页面值还存在&amp;#xff01;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;querySelector&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;#export&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;onclick&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; data &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Blob&lt;/span&gt;([txt.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;]);\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;createElement&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);\n        a.&lt;span class=\"hljs-property\"&gt;href&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-variable constant_\"&gt;URL&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;createObjectURL&lt;/span&gt;(data);\n        a.&lt;span class=\"hljs-property\"&gt;download&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;要保存的文件名.txt&amp;#39;&lt;/span&gt;;\n        a.&lt;span class=\"hljs-title function_\"&gt;click&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["html如何将输入文本框的内容进行导出", ["添加什么代码啊", "功能加上一个保存按钮，实现保存功能，最好是能够导出来"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;  Scanner sc &amp;#61;new Scanner(System.in);\n        int  n &amp;#61;0;\n        while (n&amp;lt;100||n&amp;gt;999){\n            System.out.println(&amp;#34;请输入n值&amp;#34;);\n            n &amp;#61;sc.nextInt();\n        }\n        // todo 接下来操作\n        System.out.println(&amp;#34;进行下一步操作&amp;#34;);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"272\" src=\"https://img-ask.csdnimg.cn/upload/1666945043176.png\" width=\"468\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何判断输入的数字是否为三位数", ["java中编写一段代码，判断输入的数字是否为三位数，不是就重新输入。是就进入下一步。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;只输入数字可以使用ProFormDigit&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["ProFormText 只显示输入的数字, 其他类型不显示", ["问题遇到的现象和发生背景", "\n", "ProFormText 只显示输入的数字, 其他类型不显示", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n\n          ", "<", "ProFormText", "\n            ", "style", "=", "{{ ", "width:", " ", "130", " }}", "\n            ", "label", "=", "\"手机号\"", "\n            ", "placeholder", "=", "\"请输入手机号\"", "\n            ", "fieldProps", "=", "{{\n              ", "onChange:", " (", "e", ") => setMobile(", "e.target.value.replace", "(", "/[^0-9-]", "+/, ", "''", ")),\n            }}", "\n          />", "\n\n", "\n", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "scanf(\"%d%d\",&amp;a,&amp;b)     3a5  \r\n根据你的定义格式，a=3，然后去a，格式不对就舍弃了。。b就是未初始化的值。。\r\n\r\n```\r\nint a,b\r\ncin &gt;&gt; a &gt;&gt; b;\r\nprintf(\"%d %d\\n\",a,b); \r\n```\r\n\r\n\r\n```\r\n int a,b;\r\n\tscanf(\"%d%d\",&amp;a,&amp;b);\r\n\r\n\tprintf(\"%d %d\\n\",a,b);\r\n```", "Konwledge_Point": "数据的输入", "Question": ["关于cin和scanf输入得数不一致的一个问题", ["定义int a,b", "\n用scanf(\"%d%d\",&a,&b)", "\n输入 3a5", "\n输出a，b", "\n得到的是3 37****（一个奇怪的数字）", "\n用cin>>a>>b", "\n输入还是3a5", "\n输出a b", "\n得到的是3 0", "\n这是为什么？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main () {\n &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\nwhile(&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#43;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n    }\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n}\n\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;sum: %d; count: %d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;);\nreturn &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言中用while求正整数和", ["#include <stdio.h>", "\n", "int main () {", "    // 请在此处完成你的程序", "\n", "printf", "(", "\"sum: %d; count: %d\\n\"", ");\n", "return", " ", "0", ";\n", "\n", "}", "\n", "使用while计算正数和", "编程题", "请用程序实现", "输入一些整数(使用空格分隔数据)，计算并输出其中所有正数的和，并统计出累加的项数。", "\n", "注意：使用 while 语句完成本题；输入负数时不累加个数；输入 0 时表示输入结束。", "\n", "示例 1", "输入", "1 2 3 -1 4 5 0", "输出", "sum: 15; count: 5", "示例 2", "输入", "1 3 5 7 0", "输出", "sum: 16; count: 4"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&amp;#61;readmatrix(&amp;#39;&lt;span class=\"hljs-title\"&gt;test&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;xlsx&amp;#39;&lt;/span&gt;,&amp;#39;&lt;span class=\"hljs-type\"&gt;Range&lt;/span&gt;&amp;#39;,&amp;#39;&lt;span class=\"hljs-type\"&gt;A1&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;A30&lt;/span&gt;&amp;#39;);&lt;/span&gt;\n% 均值\n&lt;span class=\"hljs-title\"&gt;mu&lt;/span&gt;&amp;#61;mean(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;/span&gt;\n\n% 方差\n&lt;span class=\"hljs-title\"&gt;sd2&lt;/span&gt;&amp;#61;var(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["用matlab提取Excel里的特定数据并求均值方差", ["现在有一个30行3列的Excel表格，我想提取第一列的30个数据并求这30个数据的均值和方差，请问怎么写", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;stdio.h&gt;\r\n#include&lt;string.h&gt;\r\n#define BUF_SIZE 20\r\nint main()\r\n{\r\n    int i,min,min_idx,arr[BUF_SIZE];\r\n    memset(arr,0x0,BUF_SIZE);\r\n    for(i=0;i&lt;BUF_SIZE;i++)\r\n    {\r\n        int temp;\r\n        scanf(\"%d\",&amp;temp);\r\n        if(temp == -1)\r\n            break;\r\n        arr[i] = temp;\r\n    }\r\n    int n = i;\r\n    min = arr[0];\r\n    min_idx = 0;\r\n    for(i=0;i&lt;n;i++)\r\n    {\r\n        if(min&gt;arr[i])\r\n        {\r\n            min = arr[i];\r\n            min_idx = i;\r\n        }\r\n    }\r\n    printf(\"Output###: Min=%d   Min Index=%d\",min,min_idx);\r\n    return 0;\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["c语言小白 数组问题！", ["# 数组中，怎么以-1为结束标志，但不作为读取数。", "\n\n", "输入一组数据以后，以-1作为结束标志，但是每次-1也会作为读取书参与运算，该怎么办？", "比如这题：", "\n输入一组数据（不超过20个），存入数组中，并找出最小值及其所在的下标（一组数据以-1作为结束标志）", "\n实在困惑！"]], "Tag": "程序设计"}
{"Answer": "这个是从数据库查询的结果，你可以用like '%好%'模糊查询", "Konwledge_Point": "数据的输入", "Question": ["java 后台如何通过用户输入的汉字 进行模糊匹配 比如姓名 输入好 获取所有姓名中有好的人名", ["java 后台如何通过用户输入的汉字 进行模糊匹配 比如姓名 输入好 获取所有姓名中有好的人名"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf_s(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);&lt;br /&gt;不可以是a[N]的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,d,max &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n{\n      &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;d);\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n          max &amp;#61;  a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n      &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max &amp;lt; d)\n          max &amp;#61; d;\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,max);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["帮我看一下这个错哪里了呢", ["问题描述确定用户输入的m个整数中的最大的数。", "预置代码输入先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的整数个数m， 第二行为m个用空格隔开的整数。", "输出每组数据输出只有一行，为用户输入的m个数中最大的数。", "输入样列2", "5", "2 3 7 5 3", "2", "-1 -9", "输出样例7", "-1", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把scanf里的&amp;#39;\\n&amp;#39;去掉&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么输入数据后按回车不会立即出现结果，而是要输入一个字符再回车才有答案", ["#include <stdio.h>", "int main()", "{", "    float r,h,c,s,v;", "    printf(\"输入圆柱的底面半径和高:\");", "    scanf(\"%f%f\\n\",&r,&h);", "    c=2", "3.1415926", "r;", "    s=3.1415926", "r", "r;", "    v=s*h;", "    printf(\"周长为%.2f,面积为%.2f,体积为%.2f\\n\",c,s,v);", "    return 0", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "可以参考参考\r\n\r\n```\r\n #include &lt;stdio.h&gt;\r\n#include &lt;windows.h&gt;\r\n\r\nvoid Input(int &amp;nDuty, int &amp;nInvigilate,int &amp;nClass);//获取值班天数、监考次数、上课次数\r\nvoid Calclate(int nDuty, int nInvigilate,int nClass);//计算工资、公积金等\r\n\r\n\r\nint main(int argc,char* argv[])\r\n{   \r\n\tint nDuty = 0,nInvigilate = 0,nClass = 0;\r\n\r\n\tInput(nDuty, nInvigilate, nClass);\r\n\tCalclate(nDuty, nInvigilate, nClass);\r\n\treturn 0;\r\n}\r\n\r\n//输入是否为合法数据 str为获取的字符串，minValue为合法的最小值，maxValue为合法的最大值\r\n//返回值 合法，返回输入的整数，不合法返回0\r\nint IsLegalInput(const char * str, int minValue, int maxValue)\r\n{\r\n\tint i = 0;\r\n\tint strValue = 0;\r\n\tint strLength = strlen(str);//数据长度\r\n\tfor (i = 0; i &lt; strLength; i++)\r\n\t{\r\n\t\tif(('0' == str[i]) || ('1' == str[i]) || ('2' == str[i]) || ('3' == str[i]) || ('4' == str[i]) || ('5' == str[i])\r\n\t\t\t|| ('6' == str[i]) || ('7' == str[i]) || ('8' == str[i]) || ('9' == str[i]))\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse // 输入的不是整数\r\n\t\t{\r\n\t\t\tprintf(\"输入数据有误，请输入整数！\\n\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\t//确认是整数了\r\n\tstrValue = atoi(str);\r\n\tif (strValue &lt; minValue || maxValue &lt; strValue )\r\n\t{\r\n\t\tprintf(\"输入范围有误，请输入%d到%d的整数！\\n\", minValue, maxValue);\r\n\t\treturn 0;\r\n\t}\r\n\treturn strValue;\r\n}\r\n\r\nvoid Input(int &amp;nDuty, int &amp;nInvigilate,int &amp;nClass)\r\n{\r\n\tint rt;\r\n\tchar input[10];\r\n\r\n\t//输入老师值班天数\r\n\tdo \r\n\t{\r\n\t\tprintf(\"输入老师值班天数(不少于5天，不能超过22天)：\");\r\n\t\tscanf(\"%s\",input);\r\n\t\trt = nDuty = IsLegalInput(input, 5, 22);//是否为合法输入\r\n\t} while (!rt);\r\n\r\n\r\n\t//输入老师监考次数\r\n\tdo \r\n\t{\r\n\t\tprintf(\"输入老师监考次数(不能超过10次)：\");\r\n\t\tscanf(\"%s\",input);\r\n\t\trt = nInvigilate = IsLegalInput(input, 1, 10);//是否为合法输入\r\n\t} while (!rt);\r\n\r\n\r\n\t//输入老师上课次数\r\n\tdo \r\n\t{\r\n\t\tprintf(\"输入老师上课次数(不能超过30次)：\");\r\n\t\tscanf(\"%s\",input);\r\n\t\trt = nClass = IsLegalInput(input, 1, 30);//是否为合法输入\r\n\t} while (!rt);\r\n}\r\n\r\n//计算工资、公积金等\r\nvoid Calclate(int nDuty, int nInvigilate,int nClass)\r\n{\r\n\tint nPerformance = 0;\r\n\tint nTemp = 0;\r\n\tint nBase = 1500;\r\n\tnPerformance = (nDuty * 60) + (nInvigilate * 30) + (nClass * 64);\r\n\tnTemp = nPerformance + nBase;\r\n\tdouble fReserve = 0.0;\r\n\tif (nTemp &gt; 5000)\r\n\t{\r\n\t\tfReserve = (nTemp - 5000) * 0.25 + 1000 * 0.2 + 2000 * 0.15 + 2000 * 0.1;\r\n\t}\r\n\telse if (nTemp &gt; 4000 &amp;&amp; nTemp &lt; 5000)\r\n\t{\r\n\t\tfReserve = (nTemp - 4000) * 0.2 + 2000 * 0.15 + 2000 * 0.1;\r\n\t}\r\n\telse if (nTemp &gt; 2000 &amp;&amp; nTemp &lt; 4000)\r\n\t{\r\n\t\tfReserve = (nTemp - 2000) * 0.15 + 2000 * 0.1;\r\n\t}\r\n\telse if (nTemp &lt; 2000)\r\n\t{\r\n\t\tfReserve = (float)(nTemp * 0.1);\r\n\t}\r\n\tprintf(\"绩效工资总额是%d\\n\",nPerformance);\r\n\tprintf(\"工资总额是%d\\n\",nTemp);\r\n\tprintf(\"需要缴纳的公积金是%0.2f\\n\",fReserve);\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["进一步实现其他任何非整型输入的情况，比如输入字符，用单独的函数实现判断，在主函数中调用此函数判断", [" #include <stdio.h>\n\nint main(int argc,char* argv[])\n{   \n    int nBase = 1500,nPerformance = 0,nTemp = 0,nRes = 0;\n    int nDuty = 0,nInvigilate = 0,nClass = 0;\n    double fReserve = 0.0;\n    printf(\"输入老师值班天数(不少于5天，不能超过22天)：\");\n    nRes = scanf(\"%d\",&nDuty);\n\n    while(nRes == 1)\n    {\n        if (nDuty >= 5 && nDuty <= 22)\n        {\n            break;\n        }\n        else if (nDuty < 0)\n        {\n            printf(\"输入数据有误，请输入整数！\\n\");\n        }\n        else\n        {           \n            printf(\"输入范围有误，请输入整数！\\n\");\n        }\n        printf(\"输入老师值班天数(不少于5天，不能超过22天)：\");\n        nRes = scanf(\"%d\",&nDuty);\n    }\n\n    printf(\"输入老师监考次数(不能超过10次)：\");\n    nRes = scanf(\"%d\",&nInvigilate);\n    while(nRes == 1)\n    {\n        if (nInvigilate >= 0 && nInvigilate <= 10)\n        {\n            break;\n        }\n        else if (nInvigilate < 0)\n        {\n            printf(\"输入数据有误，请输入整数！\\n\");\n        }\n        else\n        {           \n            printf(\"输入范围有误，请输入整数！\\n\");\n        }\n        printf(\"输入老师监考次数(不能超过10次)：\");\n        nRes = scanf(\"%d\",&nInvigilate);\n    }\n\n    printf(\"输入老师上课次数(不能超过30次)：\");\n    nRes = scanf(\"%d\",&nClass);\n    while(nRes == 1)\n    {\n        if (nClass >= 0 && nClass <= 30)\n        {\n            break;\n        }\n        else if (nClass < 0)\n        {\n            printf(\"输入数据有误，请输入整数！\\n\");\n        }\n        else\n        {           \n            printf(\"输入范围有误，请输入整数！\\n\");\n        }\n        printf(\"输入老师上课次数(不能超过30次)：\");\n        nRes = scanf(\"%d\",&nClass);\n    }\n\n    nPerformance = (nDuty * 60) + (nInvigilate * 30) + (nClass * 64);\n    nTemp = nPerformance + nBase;\n\n    if (nTemp > 5000)\n    {\n        fReserve = (nTemp - 5000) * 0.25 + 1000 * 0.2 + 2000 * 0.15 + 2000 * 0.1;\n    }\n    else if (nTemp > 4000 && nTemp < 5000)\n    {\n        fReserve = (nTemp - 4000) * 0.2 + 2000 * 0.15 + 2000 * 0.1;\n    }\n    else if (nTemp > 2000 && nTemp < 4000)\n    {\n        fReserve = (nTemp - 2000) * 0.15 + 2000 * 0.1;\n    }\n    else if (nTemp < 2000)\n    {\n        fReserve = (float)(nTemp * 0.1);\n    }\n    printf(\"绩效工资总额是%d\\n\",nPerformance);\n    printf(\"工资总额是%d\\n\",nTemp);\n    printf(\"需要缴纳的公积金是%0.2f\\n\",fReserve);\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/zkd758/article/details/80635600\" id=\"textarea_1636648185290_1636648202091_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;程序设计实训---判断两数据集是否相同_爱写Bug-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;【问题描述】从标准输入中读入两个整数集&amp;#xff0c;整数集中数据无序&amp;#xff0c;且可能有重复数据。当两个数据集中数据完全相同&amp;#xff08;去掉重复数据&amp;#xff0c;顺序不一定相同&amp;#xff09;&amp;#xff0c;则两个数据集相同。编写一程序判断输入的两数据集是否相同&amp;#xff1a;用1表示相同&amp;#xff0c;用0表示不同。【输入形式】先输入第一组整数集的个数&amp;#xff08;大于等于1&amp;#xff0c;小于等于20&amp;#xff09;&amp;#xff0c;然后输入第一组整数&amp;#xff08;以一个空格分隔&amp;#xff09;&amp;#xff1b;再输入第二组整数集的个数&amp;#xff08;大于等于1&amp;#xff0c;小于等于20&amp;#xff09;&amp;#xff0c;并输入第二...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/zkd758/article/details/80635600&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n\nint main() {\n    int num1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], num2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], num3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], num4[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    int n1,n2,i,&lt;span class=\"hljs-keyword\"&gt;j,k1&amp;#61;0,k2&amp;#61;0,tmp,flag&amp;#61;0;\n&lt;/span&gt;    &lt;span class=\"hljs-keyword\"&gt;scanf(&amp;#34;%d&amp;#34;, &lt;/span&gt;&amp;amp;n1);\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n1; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;num1[i]);\n&lt;/span&gt;    }\n    &lt;span class=\"hljs-keyword\"&gt;scanf(&amp;#34;%d&amp;#34;, &lt;/span&gt;&amp;amp;n2);\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n2; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;scanf(&amp;#34;%d&amp;#34;, &lt;/span&gt;&amp;amp;num2[i]);\n    }\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n1; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        for (&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; n1; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            if (num1[i] &amp;#61;&amp;#61; num1[&lt;span class=\"hljs-keyword\"&gt;j]) &lt;/span&gt;{\n                flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n\n        }\n        if (!flag) {\n            num3[&lt;span class=\"hljs-built_in\"&gt;k1&lt;/span&gt;] &amp;#61; num1[i];\n            &lt;span class=\"hljs-built_in\"&gt;k1&lt;/span&gt;&amp;#43;&amp;#43;;\n        }\n        flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n2; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        for (&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; n2; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            if (num2[i] &amp;#61;&amp;#61; num2[&lt;span class=\"hljs-keyword\"&gt;j]) &lt;/span&gt;{\n                flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n\n        }\n        if (!flag) {\n            num4[k2] &amp;#61; num2[i];\n            k2&amp;#43;&amp;#43;;\n        }    \n        flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    if (&lt;span class=\"hljs-built_in\"&gt;k1&lt;/span&gt; !&amp;#61; k2) {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;0\\n&amp;#34;&lt;/span&gt;);\n    }\n    else {\n        for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; k1; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            for (&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; k2; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n                if (num3[i] &amp;#61;&amp;#61; num4[&lt;span class=\"hljs-keyword\"&gt;j]) &lt;/span&gt;{\n                    flag&amp;#43;&amp;#43;;\n                }\n            }\n        }\n        if(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;k1&lt;/span&gt;){\n            printf (&lt;span class=\"hljs-string\"&gt;&amp;#34;1\\n&amp;#34;&lt;/span&gt;);\n        }else{\n            printf (&lt;span class=\"hljs-string\"&gt;&amp;#34;0\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; (k1-1); i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        for (&lt;span class=\"hljs-keyword\"&gt;j &lt;/span&gt;&amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;j &amp;lt; k1; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            if (num3[i] &amp;gt; num3[&lt;span class=\"hljs-keyword\"&gt;j]) &lt;/span&gt;{\n                tmp &amp;#61; num3[i];\n                num3[i] &amp;#61; num3[&lt;span class=\"hljs-keyword\"&gt;j];\n&lt;/span&gt;                num3[&lt;span class=\"hljs-keyword\"&gt;j] &lt;/span&gt;&amp;#61; tmp;\n            }\n        }\n    }\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; k1; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, num3[i]);\n    }\n\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言，劳烦大家找找问题🙏🏻", ["小白C语言编程遇到了问题，希望能有大神指导一下。究竟是哪里出了问题，困扰孩子两三天了。🙏🏻", "【问题描述】", "从标准输入中读入两个整数集，整数集中数据无序，且可能有重复数据。当两个数据集中数据完全相同（去掉重复数据，顺序不一定相同），则两个数据集", "相同。编写一程序判断输入的两数据集是否相同：用1表示相同，用0表示不同。", "【输入形式】", "先输入第一组整数集的个数（大于等于1，小于等于20），然后输入第一组整数（以一个空格分隔）；再输入第二组整数集的个数（大于等于1，小于等于2", "0），并输入第二组整数（以一个空格分隔）。", "【输出形式】", "若两数据集相同，则输出1，否则输出0，然后在下一行按照从小到大的顺序输出第一个数据集中的数据（去掉重复数据，以一个空格分隔数据）。", "【样例输入1】", "国", "100 56 7 89 -12 100 7-1298 100 56", "尼", "12 7 7 56 100 -12 100 56 89 100 56-1298", "【样例输出1】", "-1298 -12 7 56 89 100", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/memoryofyck/article/details/52059388", "Konwledge_Point": "数据的输入", "Question": ["分数加减法                      ", ["Description", "\n\n", "编写一个C程序，实现两个分数的加减法", "\nInput", "\n\n", "输入包含多行数据 ", "\n每行数据是一个字符串，格式是\"a/boc/d\"。 ", "\n\n", "其中a, b, c, d是一个0-9的整数。o是运算符\"+\"或者\"-\"。 ", "\n\n", "数据以EOF结束 ", "\n输入数据保证合法", "\nOutput", "\n\n", "对于输入数据的每一行输出两个分数的运算结果。 ", "\n注意结果应符合书写习惯，没有多余的符号、分子、分母，并且化简至最简分数", "\nSample Input", "\n\n", "1/8+3/8", "\n1/4-1/2", "\n1/3-1/3", "\nSample Output", "\n\n", "1/2", "\n-1/4", "\n0"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;//先给二维字符数组a赋值&amp;#xff0c;在把a[0]赋值给t数组\n#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;string.h&amp;gt;\nint main()\n{\n\tchar a[5][99],(*p)[99],t[99];\n\tp&amp;#61;a;\n\tint i;\n\tprintf(&amp;#34;请输入5串字符串&amp;#xff1a;\\n&amp;#34;);\n\tfor(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;)\n\t\tgets(p[i]);\n\tstrcpy(t,p[0]);\n\tfor(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;)\n\t\tif(strcmp(t,p[i])&amp;lt;0) \n\t\t\tstrcpy(t,p[i]);\n\tprintf(&amp;#34;其中最大的一串字符串为&amp;#xff1a;%s\\n&amp;#34;,t);\n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["编程，从键盘输入5个字符串，存入数组a中，编写程序，找出其中最大字符串并输出，要求使用指针完成。", ["##程序改错，不知道怎么改", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " a[", "5", "][", "99", "],(*p)[", "99", "],t[", "99", "];\n    p=a;\n    ", "strcpy", "(t,p[", "0", "]); \n    ", "int", " i;\n    ", "printf", "(", "\"请输入5串字符串：\\n\"", ");\n    ", "for", "(i=", "0", ";i<", "5", ";i++)\n        ", "gets", "(p[i]);\n    ", "for", "(i=", "0", ";i<", "5", ";i++)\n        ", "if", "(", "strcmp", "(t,p[i])<", "0", ") \n            ", "strcpy", "(t,p[i]);\n    ", "printf", "(", "\"其中最大的一串字符串为：%s\\n\"", ",t);\n    ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;内层for循环之前&amp;#xff0c;加上sum&amp;#61;0;&lt;br /&gt;每次内层循环是对新的测试用例进行统计&amp;#xff0c;sum应该恢复为0&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["帮我看看我这个为什么-1和-9平均值是-3", ["问题描述", "确定用户输入的m个数的平均值。", "预置代码", "输入", "先给出数据的组数T，对于每组数据，输入有两行，第一行是用户要输入的数的个数m，第二行是m个用空格隔开的int类型整数。", "输出", "每组输入数据输出只有一行，为用户输入的m个数的平均数，用double类型表示，保留两位小数。", "输入样列", "2", "5", "2 3 7 5 3", "2", "-1 -9", "\n", "输出样例", "4.00", "-5.00", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\nSystem.out.print(\"请输入一个大于 0 的数值作为数组长度\");\r\nScanner scanner  = new Scanner(System.in)\r\nint length = scanner.nextInt();\r\nif(length &gt;0){\r\n  int array [] = new int[length];\r\n}else{\r\n  System.out.print(\"错误输入\");\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["Java语言，定义数组并且实现键盘输入一个数组，怎么实现的", ["Java语言，定义数组并且实现键盘输入一个数组，怎么实现的，啊？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#include&amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; H(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; m, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; d);\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n    while(&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;--){\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d/%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, H(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;));\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;) printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; H(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; m, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; d)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i;\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (y % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; y % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || y % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;;\n            else\n                &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;;\n        }\n        else &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; || i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt; || i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; || i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n        else\n            &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n    }\n    return &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; d;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["一个有趣的#第几天#问题 C++/C/Java", ["题目描述", "\n", "给定一个日期，输出这个日期是该年的第几天。", "\n", "输入", "输入数据有多组，第一行输入一个整数n表示样例个数。每组占一行，数据格式为 year / month / day （年 / 月 / 日）组成，具体参见sample input ,另外，可以向你确保所有的输入数据是合法的。", "\n", "输出", "对于每组输入数据，输出一行，表示该日期是该年的第几天。", "\n", "样例输入", "\n", "2", "1985/1/20", "2006/3/12", "\n", "样例输出", "\n", "20", "71"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;  &lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;    &lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; maxn 100005  &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;    \nvector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; E[maxn], &lt;span class=\"hljs-built_in\"&gt;dp&lt;/span&gt;(maxn), &lt;span class=\"hljs-built_in\"&gt;v&lt;/span&gt;(maxn);    \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;dfs&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; u, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; fa)&lt;/span&gt; &lt;/span&gt;{    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; bo &amp;#61; (v[u] ? &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)E[u].&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(); i&amp;#43;&amp;#43;) {  \n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  t &amp;#61; E[u][i];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t !&amp;#61; fa) {\n             &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;dfs&lt;/span&gt;(t, u)) {  \n                bo &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  \n                dp[u] &amp;#43;&amp;#61; dp[t] &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;  \n            }\n        }    \n    }   \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; bo;    \n}    \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, m, s, t, k;  \n    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;  \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {  \n        cin &amp;gt;&amp;gt; s &amp;gt;&amp;gt; t;  \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s &amp;gt; t) &lt;span class=\"hljs-built_in\"&gt;swap&lt;/span&gt;(s, t);\n        E[s].&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(t);    \n        E[t].&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(s);\n    }   \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) {  \n        cin &amp;gt;&amp;gt; k, v[k] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  \n    }  \n    &lt;span class=\"hljs-built_in\"&gt;dfs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    cout &amp;lt;&amp;lt; dp[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;lt;&amp;lt; endl;    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n}    \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["算法与数据结构实验题 6.1 小明的果树", ["算法与数据结构实验题 6.1 小明的果树", "\n", "★实验任务", "\n", "小明种了一棵果树，这棵树有 n 个节点，树根为 1 号节点，现在这颗果树上有 m 个节 点长出果实(根节点 1 有可能长出果实)，小明要从节点 1 出发采集这些果实，从一个节点爬 到相邻的另一个节点所需要的时间为 1，采集果实不需要时间，问小明如果要采集这 m 个果 实，从节点 1 出发，并且最后需要回到节点 1，最少需要多少的时间。", "\n", "★数据输入", "\n", "第 1 行输入两个数字 n 和 m 第 2 行到第 n 行每行输入两个数字 a 和 b 表示节点 a 和节点 b 之间有一条边 第 n+1 行输入 m 个数字，第 i 个数字 v[i]表示在 v[i]号节点上长有果实 n<=100000 0<m<=n", "\n", "★数据输出", "\n", "对于每个输入，输出一个数字，表示最少需要花费的时间。", "输入：", "4 2", "1 2", "1 3", "2 4", "2 3", "输出：", "4"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要看是什么样的&amp;#xff0c;一般步骤是&lt;br /&gt;&amp;#xff08;1&amp;#xff09;如果没有表头直接&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; readtable(&amp;#39;&lt;span class=\"hljs-title\"&gt;your_excel_name&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;xlsx&amp;#39;&lt;/span&gt;); % 文件名自己换着写哦&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;{:,1};&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;{:,2};&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;plot&lt;/span&gt;(x,y)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;2&amp;#xff09;如果有表头&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; readtable(&amp;#39;&lt;span class=\"hljs-title\"&gt;your_excel_name&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;xlsx&amp;#39;&lt;/span&gt;,&amp;#39;&lt;span class=\"hljs-type\"&gt;ReadVariableNames&lt;/span&gt;&amp;#39;,&lt;span class=\"hljs-title\"&gt;true&lt;/span&gt;,&amp;#39;&lt;span class=\"hljs-type\"&gt;PreserveVariableNames&lt;/span&gt;&amp;#39; ,&lt;span class=\"hljs-title\"&gt;true&lt;/span&gt;); % 文件名自己换着写哦&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;{:,1};&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;{:,2};&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;plot&lt;/span&gt;(x,y)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["matlab如何读取Excel里的两列数值并分别为xy轴坐标进行绘图？", ["matlab如何读取Excel里的两列数值并分别为xy轴坐标进行绘图？", "谢谢回答。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define N 5&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main(){\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a[N];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; *p&amp;#61;a;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;输入操作\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,p&amp;#43;i);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,p&amp;#43;&amp;#43;);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价于scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价于scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a&amp;#43;i); &lt;span class=\"hljs-regexp\"&gt;//a&lt;/span&gt;代表数组首元素地址,它是一个指针型常量,程序运行期间值不变(不同于p)&amp;#xff0c;故不能用a&amp;#43;&amp;#43;;\n    }\n    \n    //输出方式一&amp;#xff1a;用 a[i] 或用 *(a&amp;#43;i) ; 但不能使用a&amp;#43;&amp;#43;(原因:a是指针型常量)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价于 &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,*(a&amp;#43;i));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    p&amp;#61;a;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;必须把指针重新指向a的首元素\n\n    //输出方式二&amp;#xff1a;用 *(p&amp;#43;i) 或者 *p&amp;#43;&amp;#43; ; 注意:要把指针重新指向a的首元素\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,*(p&amp;#43;i));&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价于 &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,*p&amp;#43;&amp;#43;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;输出方式三&amp;#xff1a;用*p\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(p&amp;#61;a;p&amp;lt;(a&amp;#43;N);p&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,*p);\n    }\n    putchar(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;等价于&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入五门成绩，通过指向数组的指针，将数组score中的值输出", ["定义数组int score[N]", "采用指针从键盘输入数组数据", "采用指针法输出数组a的全部元素"]], "Tag": "程序设计"}
{"Answer": "未测试，大概思路是定义一个where变量\r\n然后依次检查参数变量，如果参数非null，则where 加上比较 表达式。\r\n\r\n每次检查一下是否需要加上and运算符。\r\n\r\n\r\nset @sql= 'insert into #Test(ord ,GoodsCode,GoodsName ,Amount ,UnitPrice , \r\nSumMoney ,Brand ,Unit ) \r\nselect ROW_NUMBER() over(order by TbShGoods.GoodsCode) as ord,  TbShGoods.GoodsCode,i.GoodName,(i.Amount-isnull(0,o.Amount)) as Amount,i.UnitPrice \r\n     ,(i.Sum-isnull(0,o.Sum)) as Sum ,Brand,Unit \r\n      from tbshindetail i left join tbshoutdetail o on i.GoodsID=o.GoodsID \r\n      inner join TbShin on i.InID=TbShin.InID \r\n          inner join TbShGoods on i.GoodsID=TbShGoods.GoodsID '\r\nset @wheres = ''\r\nif @GoodName is not null then\r\n  @where = @where +'''+@GoodName+'''\r\nendif\r\n\r\nif @GoodName is not null then\r\n  if @where != '' then\r\n    @where = @where +' and '\r\n  endif\r\n  @where = @where +'''+@GoodName+'''\r\nendif\r\n.....\r\n\r\nif @where != '' then\r\n  @where = ' where '+@where\r\nendif\r\n\r\nexec(@sql+@where)", "Konwledge_Point": "数据的输入", "Question": ["请问在java 里调用存储过程，显示数据，当传的参数为NULL时，查询所有数据，这个怎处理呢？", ["请问在java 里调用存储过程，显示数据，当传的参数为NULL时，查询所有数据，这个怎处理呢？", "\n\n", "create procedure ProcInventory ", "\n @GoodsCode nvarchar(50),", "\n @GoodName nvarchar(50),", "\n @BeginDate  nvarchar(50),", "\n @EndDate  nvarchar(50)", "\n as", "\n declare @sql varchar(4000)", "\n\n", "create table #test(ord varchar(30),GoodsCode nvarchar(20),GoodsName nvarchar(50),Amount nvarchar(50),UnitPrice nvarchar(50),", "\n SumMoney nvarchar(10),Brand nvarchar(50),Unit nvarchar(50))", "\n set @sql= 'insert into #Test(ord ,GoodsCode,GoodsName ,Amount ,UnitPrice ,", "\n SumMoney ,Brand ,Unit )", "\n select ROW_NUMBER() over(order by TbShGoods.GoodsCode) as ord,  TbShGoods.GoodsCode,i.GoodName,(i.Amount-isnull(0,o.Amount)) as Amount,i.UnitPrice", "\n     ,(i.Sum-isnull(0,o.Sum)) as Sum ,Brand,Unit", "\n      from tbshindetail i left join tbshoutdetail o on i.GoodsID=o.GoodsID", "\n      inner join TbShin on i.InID=TbShin.InID", "\n          inner join TbShGoods on i.GoodsID=TbShGoods.GoodsID", "\n where   i.GoodName='''+@GoodName+''' and TbShin.EnterDate between  '''+@BeginDate+'''", "\n  and '''+@EndDate +''' and TbShGoods.GoodsCode='''+@GoodsCode+''''", "\n print '11'", "\n\n", "exec(@sql)", "\n print @sql "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为是按字符顺序排序的。。。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;input().split()  # &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;67&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;.join(str(i) for i in sorted(int(i) for i in m))\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(m)  # &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;67&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python 使用.join进行数据排序遇到了问题。求解答", ["将数据排序 (6 分)", "输入若干个正整数，升序排序后输出。", "\n", "输入格式:", "在一行中输入若干个数，以空格分隔。", "\n", "输出格式:", "输出升序排序后的数，以空格分隔，最后一个数后也有空格", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "4 5 67 3 99 2 7", "输出样例:", "在这里给出相应的输出。例如：", "\n", "2 3 4 5 7 67 99 ", "\n", "源码：", "\n", "m", "=", "input", "().split()", "\n", "m", "=", "\" \"", ".join(", "sorted", "(", "m", "))", "\n", "print", "(", "m", ")", "\n", "\n", "运行结果：", "\n", "D:\\python\\python.exe C:", "/Users/", "25090", "/PycharmProjects/", "pythonProject", "/venv/", "1", ".py\n", "4", " ", "5", " ", "67", " ", "3", " ", "99", " ", "2", " ", "7", "\n", "2", " ", "3", " ", "4", " ", "5", " ", "67", " ", "7", " ", "99", "\n\n进程已结束,退出代码", "0", "\n", "\n", "为什么输出结果并没有按大小来排序？（67 7）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;创建节点的时候&amp;#xff0c;应该是p-&amp;gt;data&amp;#61;x;&amp;#xff0c;而非x&amp;#61;p-&amp;gt;data;&lt;/p&gt;\n\n&lt;p&gt;按照之前的写法&amp;#xff0c;相当于没有将每次读入进来的x赋值给指针p指向结构体中的data元素。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入0时结束链表，输出两个链表的合并（0不输出），运行结果输出错误😢，有大佬教教孩子吗😭", ["代码如下：", "\n\n", "#include <stdio.h>", "\n#include<stdlib.h>", "\n\n", "typedef  int ElemType;", "\ntypedef  int Status;", "\n\n", "typedef struct LNode", "\n{", "\n    ElemType data;", "\n    struct LNode* next;", "\n}LNode, * LinkList;", "\n\n", "//创建单链表", "\nStatus InitList(LinkList& L)", "\n{", "\n    L = (LinkList)malloc(sizeof(LNode));", "\n    if (!L)", "\n        exit(0);", "\n    L->next = NULL;", "\n    return 1;", "\n}", "\n\n", "//向单链表中插入元素", "\nStatus CreateList(LinkList L)", "\n{", "\n    LinkList p, q;", "\n    p = L;    //第一步，取到头结点,两个指针指向同一内存，改变p指向的内存，L指向的内存不变，L仍为头结点", "\n    int x = 1;", "\n\n", "    while(x!=0)", "\n    {", "\n        q = (LinkList)malloc(sizeof(LNode));", "\n        if (!p)", "\n        {", "\n            printf(\"p的初始化出现问题！\\n\");", "\n            return 0;", "\n        }", "\n        x = q->data;", "\n      ", "\n        scanf_s(\"%d\", &x);", "\n        q->next = p->next;//第二步链接两个结点", "\n        p->next = q;//第二步链接两个结点", "\n        p = q;//关键的一步，更换位置，进行下次循环", "\n    }", "\n    return 1;", "\n}", "\n\n", "Status Mergelist(LinkList LA, LinkList LB)", "\n{", "\n    LinkList p = LA->next;  //指向LA的头结点", "\n    while (p->next)", "\n    {", "\n        p = p->next;       //一直指到表尾", "\n    }", "\n    p->next = LB->next;     //从LA的表尾指向LB的头结点", "\n    free(LB);", "\n    return 1;", "\n}", "\n\n", "//打印输出单链表", "\nStatus GetLinkList(LinkList L) //顺序输出这个链表", "\n{", "\n    LinkList p;", "\n    p = L->next;", "\n    while (p!=NULL)", "\n    {", "\n        printf(\"%d \", p->data);", "\n        p = p->next;", "\n    }", "\n    return 1;", "\n}", "\n\n", "int main()", "\n{", "\n    LinkList La,Lb;", "\n    InitList(La);", "\n    printf(\"输入链表La的元素，输入0时结束！\\n\");", "\n    printf(\"La = \");", "\n    CreateList(La);", "\n    InitList(Lb);", "\n    printf(\"输入链表Lb的元素，输入0时结束！\\n\");", "\n    printf(\"Lb = \");", "\n    CreateList(Lb);", "\n    Mergelist(La, Lb);", "\n    GetLinkList(La);", "\n\n", "}", "\n\n", " ", "\n\n", "运行结果：", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nvoid main()\n{\n\tint arr[100], num, maxIndex&amp;#61;0, minIndex&amp;#61;0;\n\tprintf(&amp;#34;请输入值的个数&amp;#xff1a;&amp;#34;);\n\tscanf_s(&amp;#34;%d&amp;#34;, &amp;amp;num);\n\tprintf(&amp;#34;请输入值&amp;#xff1a;&amp;#34;);\n\tfor (int i &amp;#61; 0; i &amp;lt; num; i&amp;#43;&amp;#43;)\n\t\tscanf_s(&amp;#34;%d&amp;#34;, &amp;amp;arr[i]);\n\tint max &amp;#61; arr[0], min &amp;#61; arr[0];\n\tfor (int i &amp;#61; 0; i &amp;lt; num; i&amp;#43;&amp;#43;)\n\t{\n\t\tif (max &amp;lt; arr[i])\n\t\t{\n\t\t\tmax &amp;#61; arr[i];\n\t\t\tmaxIndex &amp;#61; i;\n\t\t}\n\t\tif (min &amp;gt; arr[i])\n\t\t{\n\t\t\tmin &amp;#61; arr[i];\n\t\t\tminIndex &amp;#61; i;\n\t\t}\n\t}\n\tarr[maxIndex] &amp;#61; min;\n\tarr[minIndex] &amp;#61; max;\n\n\n\tprintf(&amp;#34;交换后的数据&amp;#xff1a;&amp;#34;);\n\tfor (int i &amp;#61; 0; i &amp;lt; num; i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34; %d&amp;#34;, arr[i]);\n\tgetchar();\n\tgetchar();\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"167\" src=\"https://img-ask.csdnimg.cn/upload/1624801302087.png\" width=\"351\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一组数据，将最大数与最小数互换，并输出互换后的数", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "服务器代码\r\n\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n#include&lt;string.h&gt;\r\n#include&lt;math.h&gt;\r\n#include&lt;sys/signal.h&gt;\r\n#include&lt;unistd.h&gt;\r\n#include&lt;sys/types.h&gt;\r\n#include&lt;sys/wait.h&gt;\r\n#include&lt;sys/stat.h&gt;\r\n#include&lt;sys/socket.h&gt;\r\n#include&lt;netinet/in.h&gt;\r\n#include&lt;arpa/inet.h&gt;\r\n#include&lt;sys/epoll.h&gt;\r\n#include&lt;fcntl.h&gt;\r\n#include&lt;time.h&gt;\r\n#include\"message.h\"\r\n\r\n#define PORT   6666      //服务器端口\r\n#define LISTEN_SIZE  1024   //连接请求队列的最大长度\r\n#define EPOLL_SIZE    1024   //监听的客户端的最大数目\r\n#define BUF_MAX     257     //读取缓存区最大字节 \r\n\r\ntime_t timep;     //记录当前时间\r\n\r\n\r\ntypedef struct cli_data   //记录在线用户信息的结构体\r\n{\r\n    int  cli_fd;    //记录连接的用户套接字\r\n    char username[21];   //记录账号，最大20位\r\n    struct cli_data* next;\r\n}cli_data;\r\ntypedef struct user      //记录用户账号信息的结构体\r\n{\r\n    char username[21];\r\n    char pwd[21];\r\n}user;\r\ntypedef struct group\r\n{\r\n    char username[100][21];\r\n    int groupfd[100];\r\n    char groupname[21];\r\n    int n;\r\n}group;\r\ngroup taolun[100];   //全局讨论组\r\nchar* my_time() //输出当前时间\r\n{\r\n    time(&amp;timep);\r\n    char* p=ctime(&amp;timep);\r\n    return p;\r\n}\r\n\r\ncli_data* head;     //创建头结点\r\ncli_data* create()  //创建一个带头节点的链表，储存已连接的用户\r\n{\r\n    cli_data* head;\r\n    head=(cli_data*)malloc(sizeof(struct cli_data));\r\n    head-&gt;next=NULL;\r\n    return head;\r\n}\r\ncli_data*  insert()   //插入链表\r\n{\r\n\r\n    cli_data* temp=head;\r\n    cli_data* new;\r\n    new=(cli_data*)malloc(sizeof(cli_data));\r\n    new-&gt;next=NULL;\r\n    \r\n    while(temp-&gt;next!=NULL)\r\n    {\r\n        temp=temp-&gt;next;\r\n    }  \r\n    temp-&gt;next=new;\r\n\r\n    return new;\r\n\r\n}\r\nvoid delete(cli_data* head,int cli_fd)   //链表的删除\r\n{\r\n    cli_data* temp,*last;\r\n    temp=head-&gt;next;\r\n    last=head;\r\n    while(temp!=NULL&amp;&amp;temp-&gt;cli_fd!=cli_fd)\r\n    {\r\n        last=temp;\r\n        temp=temp-&gt;next;\r\n    }\r\n    if(temp!=NULL&amp;&amp;temp-&gt;cli_fd==cli_fd)\r\n    {\r\n        last-&gt;next=temp-&gt;next;\r\n        free(temp);\r\n    }\r\n}\r\nvoid my_err(char* string)\r\n{\r\n    perror(string);\r\n    exit(1);\r\n}\r\nvoid my_path(char*dir,char* filename,char* path)  //将目录和文件名连接成一个路径\r\n{\r\n    strcpy(path,dir);\r\n    strcat(path,\"/\");\r\n    strcat(path,filename);\r\n}\r\nvoid send_message(struct message recv_buf,int conn_fd)   //向客户端发送信息\r\n{\r\n    struct message send_buf;\r\n    send_buf=recv_buf;\r\n    int n=send_buf.n;\r\n    int fd;\r\n    struct user user_data;\r\n    int ret=0;  //用来表示注册账号是否存在或账号密码信息是否匹配\r\n    FILE* fp;\r\n    cli_data* temp; //在线用户链表临时指针\r\n    char path[256];   //储存文件路径\r\n    char friendname[21];  //储存用户好友用户名\r\n    int i=0;\r\n    fp=fopen(\"passwd.txt\",\"a+\");\r\n    fclose(fp);\r\n\r\n\r\n    switch(n)\r\n    {\r\n        case 0:  {  //注册账号\r\n        if((fd=open(\"passwd.txt\",O_RDWR|O_APPEND))&lt;0)\r\n        {\r\n            my_err(\"open\");\r\n        }\r\n        while(read(fd,&amp;user_data,sizeof(struct user))&gt;0)\r\n        {\r\n            if(strcmp(user_data.username,send_buf.username)==0)\r\n            {\r\n                send_buf.n=-2;\r\n                ret=1;\r\n                break;\r\n            }\r\n        }\r\n        if(!ret)\r\n        {\r\n            strcpy(user_data.username,recv_buf.username);\r\n            strcpy(user_data.pwd,recv_buf.pwd1);\r\n            send_buf.n=22;\r\n            if(write(fd,&amp;user_data,sizeof(struct user))&lt;0)\r\n            {\r\n                my_err(\"write\");\r\n            }\r\n            close(fd);\r\n\r\n            int fd,stdoutfd;\r\n            fd=open(\"log_file\",O_RDWR|O_CREAT|O_APPEND);\r\n            stdoutfd=dup(1);\r\n            printf(\"a user register,username:%s,time:%s\",user_data.username,my_time());\r\n            dup2(fd,1);\r\n            printf(\"a user register,username:%s,time:%s\",user_data.username,my_time());\r\n            dup2(stdoutfd,1);\r\n            close(fd);\r\n            close(stdoutfd);\r\n\r\n            \r\n            mkdir(user_data.username,07777);  //创建用户所属目录\r\n            my_path(user_data.username,user_data.username,path);\r\n            fd=open(path,O_RDWR|O_CREAT|O_APPEND,0777);\r\n            if(fd&lt;0)\r\n            {\r\n                printf(\"创建用户好友文件失败\\n\");\r\n            }\r\n            close(fd);\r\n        \r\n\r\n            \r\n            \r\n        }\r\n        if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n        {\r\n            printf(\"向客户端发送数据失败\\n\");\r\n        }\r\n        break;\r\n    }\r\n\r\n        case 1:  {//登陆 \r\n        if((fd=open(\"passwd.txt\",O_RDONLY))&lt;0)\r\n        {\r\n            my_err(\"open\");\r\n        }\r\n        while(read(fd,&amp;user_data,sizeof(struct user))&gt;0)\r\n        {\r\n            if(strcmp(user_data.username,send_buf.username)==0)\r\n            {\r\n                if(strcmp(user_data.pwd,send_buf.pwd1)==0)\r\n                {\r\n                    ret=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(ret)\r\n        send_buf.n=11;\r\n        else\r\n        send_buf.n=-1;\r\n        if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n        {\r\n            printf(\"向客户端发送数据失败\\n\");\r\n            return;\r\n        }\r\n        if(send_buf.n==11)\r\n        {\r\n          int fd,stdoutfd;\r\n          fd=open(\"log_file\",O_CREAT|O_RDWR|O_APPEND);\r\n          printf(\"a user is login,username:%s,time:%s\",send_buf.username,my_time());\r\n          stdoutfd=dup(1);\r\n          dup2(fd,1);\r\n          printf(\"a user is login,username:%s,time:%s\",send_buf.username,my_time());\r\n          dup2(stdoutfd,1);\r\n          close(fd);\r\n          close(stdoutfd);\r\n\r\n          temp=insert();\r\n          temp-&gt;cli_fd=conn_fd;\r\n          strcpy(temp-&gt;username,send_buf.username);\r\n\r\n          my_path(\"lixian\",send_buf.username,path);  //发送离线消息\r\n          fd=open(path,O_RDONLY);\r\n          if(fd&gt;0)\r\n          {\r\n              send_buf.n=6;\r\n              while(read(fd,send_buf.time,sizeof(send_buf.time))!=0)\r\n              {\r\n                  read(fd,send_buf.from,sizeof(send_buf.from));\r\n                  read(fd,send_buf.chat,sizeof(send_buf.chat));\r\n                  if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n                  {\r\n                      printf(\"向客服端发送离线消息失败\\n\");\r\n                      return;\r\n                  }\r\n              }\r\n              close(fd);\r\n              fd=open(path,O_RDWR|O_CREAT|O_TRUNC);\r\n              close(fd);\r\n          }\r\n        }\r\n        \r\n        break;\r\n    }\r\n\r\n\r\n        case 3:   { //添加好友\r\n        temp=head-&gt;next;\r\n\r\n        my_path(send_buf.from,send_buf.from,path);           //防止重复添加好友\r\n        fd=open(path,O_RDONLY);\r\n        if(fd&lt;0)\r\n        {\r\n            printf(\"打开用户好友文件失败\\n\");\r\n            return;\r\n        }\r\n        while(read(fd,friendname,sizeof(friendname))!=0)\r\n        {\r\n            if(strcmp(friendname,send_buf.to)==0)\r\n            {\r\n                send_buf.n=-3;\r\n                if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n                {\r\n                    printf(\"向客户端发送数据失败\\n\");\r\n                    return;\r\n                }\r\n                close(fd);\r\n                return;\r\n            }\r\n        }\r\n        while(temp!=NULL)\r\n        {\r\n            \r\n            if(strcmp(temp-&gt;username,send_buf.to)==0)  //找到指定在线好友\r\n            { \r\n               ret=1;\r\n                break;\r\n            }\r\n            temp=temp-&gt;next;\r\n        }\r\n        if(ret)\r\n        {\r\n            \r\n            \r\n            int to_fd=temp-&gt;cli_fd;        //向另一用户征求是否同意添加好友\r\n\r\n\r\n            send(to_fd,&amp;send_buf,sizeof(struct message),0);\r\n            recv(to_fd,&amp;send_buf,sizeof(struct message),0);\r\n        \r\n\r\n            if(send_buf.n==33)\r\n            {\r\n                my_path(send_buf.from,send_buf.from,path);//写入用户好友文件\r\n                fd=open(path,O_RDWR|O_APPEND);\r\n                if(write(fd,&amp;send_buf.to,sizeof(send_buf.to))&lt;0)\r\n                {\r\n                  printf(\"写入用户好友失败\\n\");\r\n                  send_buf.n=-3;\r\n                }\r\n                close(fd);\r\n               my_path(send_buf.from,send_buf.to,path);   //创建用户与该好友的聊天记录文件\r\n               fd=open(path,O_RDWR|O_CREAT|O_TRUNC,0777);\r\n               close(fd);\r\n            \r\n            \r\n                my_path(send_buf.to,send_buf.to,path);    //写入另一用户好友文件\r\n                fd=open(path,O_RDWR|O_APPEND);\r\n                write(fd,&amp;send_buf.from,sizeof(send_buf.from));\r\n                close(fd);\r\n                my_path(send_buf.to,send_buf.from,path);  //创建另一用户与该好友的聊天记录文件\r\n                fd=open(path,O_RDWR|O_CREAT|O_TRUNC,0777);\r\n                close(fd);\r\n\r\n            }\r\n        }\r\n\r\n        else\r\n        send_buf.n=-3;\r\n        if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n        {\r\n            printf(\"send error\\n\");\r\n        }\r\n        break;\r\n    }\r\n\r\n        case 4:   {//查看好友列表 \r\n        my_path(recv_buf.username,recv_buf.username,path);  //连接用户好友文件路径\r\n        fd=open(path,O_RDONLY);\r\n        while(read(fd,send_buf.friendname[i++],sizeof(recv_buf.username))!=0);\r\n        send_buf.friendname[i][0]='\\0';\r\n\r\n        if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n        {\r\n            printf(\"send error\\n\");\r\n            \r\n        }\r\n        break;}\r\n        \r\n        case 44:    { //查看在线好友\r\n        my_path(recv_buf.username,recv_buf.username,path);  //连接用户好友文件路径\r\n        fd=open(path,O_RDONLY);\r\n        \r\n        \r\n        while(read(fd,friendname,sizeof(friendname))!=0)\r\n        {\r\n            int n=0;\r\n            temp=head-&gt;next;\r\n            while(temp!=NULL)\r\n            {\r\n                if(strcmp(temp-&gt;username,friendname)==0)\r\n                {\r\n                    n=1;\r\n                    break;\r\n                }\r\n                else\r\n                temp=temp-&gt;next;\r\n            }\r\n            if(n)\r\n            {\r\n                strcpy(send_buf.friendname[i++],friendname);\r\n            }\r\n            \r\n        }\r\n        send_buf.friendname[i][0]='\\0';\r\n        if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n        {\r\n           printf(\"send error\\n\");                                                    \r\n        }\r\n        break;\r\n       }\r\n\r\n        case 5:    //删除好友\r\n       {\r\n           int i=0;\r\n           int ret=0;\r\n           my_path(send_buf.from,send_buf.from,path);\r\n           fd=open(path,O_RDONLY);\r\n           if(fd&lt;0)\r\n           {\r\n               printf(\"打开用户好友文件失败\\n\");\r\n               send_buf.n=-5;\r\n           }\r\n           while(read(fd,send_buf.friendname[i++],sizeof(send_buf.username))!=0)\r\n           send_buf.friendname[i][0]='\\0';\r\n           i=0;\r\n           close(fd);\r\n           while(strlen(send_buf.friendname[i])!=0)\r\n           {\r\n               if(strcmp(send_buf.friendname[i],send_buf.to)==0)\r\n               {\r\n                   strcpy(send_buf.friendname[i],\"\\n\");\r\n                   ret++;\r\n               }\r\n               i++;\r\n           }\r\n           fd=open(path,O_RDWR|O_CREAT|O_TRUNC);\r\n           if(fd&lt;0)\r\n           {\r\n               printf(\"打开用户好友文件失败\\n\");\r\n               send_buf.n=-5;\r\n               \r\n           }\r\n           i=0;\r\n           while(strlen(send_buf.friendname[i])!=0)\r\n           {\r\n               if(strcmp(send_buf.friendname[i],\"\\n\")!=0)\r\n               {\r\n                   if(write(fd,send_buf.friendname[i],sizeof(send_buf.username))&lt;0)\r\n                   {\r\n                       printf(\"写入用户好友文件失败\\n\");\r\n                       send_buf.n=-5;\r\n                   }\r\n               }\r\n               i++;\r\n               \r\n           }\r\n           close(fd);\r\n\r\n\r\n           i=0;\r\n           my_path(send_buf.to,send_buf.to,path);\r\n           fd=open(path,O_RDONLY);      //读取删除对象的好友列表\r\n           if(fd&lt;0)\r\n           {\r\n               printf(\"打开删除对象好友文件失败\\n\");\r\n               send_buf.n=-5;\r\n           }\r\n           while(read(fd,send_buf.friendname[i++],sizeof(send_buf.username))!=0);\r\n           send_buf.friendname[i][0]='\\0';\r\n           close(fd);\r\n           i=0;\r\n        \r\n           while(strlen(send_buf.friendname[i])!=0)\r\n           {\r\n               if(strcmp(send_buf.friendname[i],send_buf.from)==0)\r\n               strcpy(send_buf.friendname[i],\"\\n\");\r\n               i++;\r\n           }\r\n           i=0;\r\n           fd=open(path,O_RDWR|O_CREAT|O_TRUNC);\r\n           if(fd&lt;0)\r\n           {\r\n               printf(\"打开删除对象好友文件失败\\n\");\r\n               send_buf.n=-5;\r\n           }\r\n           while(strlen(send_buf.friendname[i])!=0)\r\n           {\r\n               if(strcmp(send_buf.friendname[i],\"\\n\")!=0)\r\n               {\r\n                   if(write(fd,send_buf.friendname[i],sizeof(send_buf.username))&lt;0)\r\n                   {\r\n                       printf(\"写入删除对象好友文件失败\\n\");\r\n                       send_buf.n=-5;\r\n                   }\r\n               }\r\n               i++;\r\n           }\r\n           close(fd);\r\n           ret++;\r\n           if(ret==2)\r\n           send_buf.n=55;\r\n           else\r\n           send_buf.n=-5;\r\n\r\n           if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n           {\r\n               printf(\"向客户端发送信息失败\\n\");\r\n               return;\r\n           }\r\n           break;\r\n       }\r\n\r\n       case 6:   //私聊\r\n       {\r\n        \r\n           int i=0,ret=0;\r\n           my_path(send_buf.from,send_buf.from,path);\r\n           fd=open(path,O_RDONLY);\r\n           while(read(fd,send_buf.friendname[i++],sizeof(send_buf.username))!=0);\r\n           send_buf.friendname[i][0]='\\0';\r\n           close(fd);\r\n           i=0;\r\n           while(strlen(send_buf.friendname[i])!=0)\r\n           {\r\n               if(strcmp(send_buf.friendname[i],send_buf.to)==0)\r\n               {\r\n                   ret=1;\r\n                   break;\r\n\r\n               }\r\n               i++;\r\n           }\r\n           if(ret)\r\n           {\r\n               temp=head-&gt;next;\r\n               while(temp!=NULL)\r\n               {\r\n                   if(strcmp(temp-&gt;username,send_buf.to)==0)\r\n                   {\r\n                       my_path(send_buf.from,send_buf.to,path);\r\n                       fd=open(path,O_RDWR|O_CREAT|O_APPEND);\r\n                       if(fd&lt;0)\r\n                       {\r\n                           printf(\"打开记录用户聊天记录文件失败\\n\");\r\n                       }\r\n\r\n                       if(send(temp-&gt;cli_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n                       {\r\n                           printf(\"发送用户消息失败\\n\");\r\n                           return;\r\n                       }\r\n                       else\r\n                       {\r\n                           int stdoutfd=dup(1);\r\n                           dup2(fd,1);\r\n                           printf(\"%s\",send_buf.time);\r\n                           printf(\"我@%s:%s\\n\",send_buf.to,send_buf.chat);\r\n                           dup2(stdoutfd,1);\r\n                           close(fd);\r\n\r\n                           my_path(send_buf.to,send_buf.from,path);\r\n                           open(path,O_RDWR|O_CREAT|O_APPEND);\r\n                           if(fd&lt;0)\r\n                           {\r\n                               printf(\"打开记录用户聊天记录文件失败\\n\");\r\n                               return;\r\n                           }\r\n                           dup2(fd,1);\r\n                           printf(\"%s\",send_buf.time);\r\n                           printf(\"%s@我:%s\\n\",send_buf.from,send_buf.chat);\r\n                           dup2(stdoutfd,1);\r\n                           close(fd);\r\n                           close(stdoutfd);\r\n\r\n                           return;\r\n                       }\r\n                       \r\n                   }\r\n                   temp=temp-&gt;next;\r\n               }\r\n               my_path(\"lixian\",send_buf.to,path);\r\n               \r\n               fd=open(path,O_RDWR|O_CREAT|O_APPEND,0777);\r\n               if(fd&lt;0)\r\n               {\r\n                   printf(\"打开指定用户离线消息文件\\n\");\r\n                   return;\r\n               }\r\n               write(fd,send_buf.time,sizeof(send_buf.time));\r\n               write(fd,send_buf.from,sizeof(send_buf.from));\r\n               write(fd,send_buf.chat,sizeof(send_buf.chat));\r\n               close(fd);\r\n\r\n           }\r\n           else\r\n           {\r\n               send_buf.n=-6;\r\n               if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n               {\r\n                   printf(\"向客户端发送信息失败\\n\");\r\n                   return;\r\n               }\r\n           }\r\n           break;\r\n           \r\n       }\r\n       \r\n       case 77:   //创建讨论组\r\n       {\r\n           int i=1;\r\n           while(taolun[i].n!=0)\r\n           i++;\r\n           if(i&lt;100)\r\n           {\r\n               taolun[i].n=1;\r\n               send_buf.groupi=i;\r\n               strcpy(taolun[i].username[0],send_buf.from);\r\n               strcpy(taolun[i].groupname,send_buf.groupname);\r\n               taolun[i].groupfd[0]=conn_fd;\r\n           }\r\n           else\r\n           send_buf.n=-77;\r\n\r\n           if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n           {\r\n               printf(\"向客户发送信息失败\\n\");\r\n               return;\r\n           }\r\n           break;\r\n\r\n       }\r\n\r\n       case 777:   //邀请在线好友加入讨论组\r\n       {\r\n           int ret=0;\r\n           int i=0;\r\n           my_path(send_buf.from,send_buf.from,path);\r\n           fd=open(path,O_RDONLY);\r\n           if(fd&lt;0)\r\n           {\r\n               printf(\"打开用户好友文件失败\\n\");\r\n               send_buf.n=-777;\r\n           }\r\n           while(read(fd,send_buf.friendname[i],sizeof(send_buf.username))!=0)\r\n           {\r\n               if(strcmp(send_buf.to,send_buf.friendname[i])==0)\r\n               {\r\n                   ret=1;\r\n                   break;\r\n               }\r\n           }\r\n           if(ret)\r\n           {\r\n               temp=head-&gt;next;\r\n               while(temp!=NULL)\r\n               {\r\n                   if(strcmp(send_buf.to,temp-&gt;username)==0)\r\n                   {\r\n                       int j=0,k=send_buf.groupi;\r\n                       send(temp-&gt;cli_fd,&amp;send_buf,sizeof(struct message),0);\r\n                       while(taolun[k].groupfd[j]!=0)\r\n                       {\r\n                           j++;\r\n                       }\r\n                       taolun[k].groupfd[j]=temp-&gt;cli_fd;\r\n                       strcpy(taolun[k].username[j],send_buf.to);\r\n                       return;\r\n                   }\r\n                   temp=temp-&gt;next;\r\n               }\r\n           }\r\n           send_buf.n=-777;\r\n           send(conn_fd,&amp;send_buf,sizeof(struct message),0);\r\n           break;\r\n       }\r\n\r\n       case 7:  //群聊\r\n       {\r\n           \r\n           int i=send_buf.groupi,j=0;\r\n           while(taolun[i].groupfd[j]!=0)\r\n           {\r\n               if(taolun[i].groupfd[j]!=conn_fd&amp;&amp;taolun[i].groupfd[j]!=-1)\r\n               {\r\n                   send(taolun[i].groupfd[j],&amp;send_buf,sizeof(struct message),0);\r\n               }\r\n               j++;\r\n           }\r\n           break;\r\n       }\r\n\r\n       case -7: //退出讨论组\r\n       {\r\n           int i=send_buf.groupi,j=0;\r\n           while(taolun[i].groupfd[j]!=conn_fd)\r\n           {\r\n               j++;\r\n           }\r\n           if(j==0)\r\n           {\r\n               j=1;\r\n               send_buf.n=-7777;\r\n               while(taolun[i].groupfd[j]!=0&amp;&amp;taolun[i].groupfd[j]!=-1)\r\n               {\r\n                   send(taolun[i].groupfd[j],&amp;send_buf,sizeof(struct message),0);\r\n                   j++;\r\n               }\r\n               taolun[i].n=0;\r\n               memset(&amp;taolun[i],0,sizeof(taolun[i]));\r\n           }\r\n           else\r\n           taolun[i].groupfd[j]=-1;\r\n           break;\r\n       }\r\n\r\n       case 7777:  //查看讨论组成员\r\n       {\r\n           int i=send_buf.groupi,j=0,k=0;;\r\n           while(taolun[i].groupfd[j]!=0&amp;&amp;taolun[i].groupfd[j]!=-1)\r\n           {\r\n               strcpy(send_buf.friendname[k++],taolun[i].username[j]);\r\n               j++;\r\n           }\r\n           send_buf.friendname[k][0]='\\0';\r\n           send(conn_fd,&amp;send_buf,sizeof(struct message),0);\r\n           break;\r\n           \r\n       }\r\n\r\n       case 8:   //查看与好友聊天记录\r\n       {\r\n           int j=0,ret=0;\r\n           send_buf.n=-8;\r\n           temp=head-&gt;next;\r\n           my_path(send_buf.from,send_buf.from,path);\r\n           fd=open(path,O_RDONLY);\r\n           while(read(fd,send_buf.friendname[j++],sizeof(send_buf.username))!=0);\r\n           send_buf.friendname[j][0]='\\0';\r\n           j=0;\r\n           while(strlen(send_buf.friendname[j])!=0)\r\n           {\r\n               if(strcmp(send_buf.to,send_buf.friendname[j])==0)\r\n               {\r\n                  ret=1;\r\n                  break;\r\n               }\r\n               j++;\r\n               \r\n           }\r\n           if(ret)\r\n           {\r\n               FILE * fp;\r\n               j=0;\r\n               my_path(send_buf.from,send_buf.to,path);\r\n               fp=fopen(path,\"r+\");\r\n               while(!feof(fp))\r\n               {\r\n                   fgets(send_buf.chathistory[j],10000,fp);\r\n                   j++;\r\n                   if(j==100)\r\n                   break;\r\n               }\r\n               send_buf.n=8;\r\n           }\r\n           if(send(conn_fd,&amp;send_buf,sizeof(struct message),0)&lt;0)\r\n           {\r\n               printf(\"向客户端发送数据失败\\n\");\r\n               return;\r\n           }\r\n           \r\n       }\r\n    \r\n    }\r\n}\r\nint main()\r\n{\r\n    int sock_fd,conn_fd;  //储存套接字\r\n    struct sockaddr_in cli_addr,serv_addr;\r\n    struct message recv_buf;  //读取缓存区\r\n    socklen_t cli_len;\r\n    int epollfd;\r\n    struct epoll_event  event;\r\n    struct epoll_event*  events;\r\n    int fd;\r\n\r\n    memset(taolun,0,sizeof(taolun));\r\n\r\n    fd=open(\"log_file\",O_RDWR|O_CREAT|O_APPEND);\r\n    close(fd);\r\n    \r\n\r\n    //创建一个套接字\r\n    sock_fd=socket(AF_INET,SOCK_STREAM,0);\r\n    if(sock_fd&lt;0)\r\n    {\r\n        my_err(\"socket\");\r\n    }\r\n    //设置该套接字使之可以重新绑定端口\r\n    int optval=1;\r\n    if(setsockopt(sock_fd,SOL_SOCKET,SO_REUSEADDR,(void*)&amp;optval,sizeof(int))&lt;0)\r\n    {\r\n        my_err(\"setsockopt\");\r\n    }\r\n    //初始化服务器端地址结构\r\n    memset(&amp;serv_addr,0,sizeof(struct sockaddr_in));\r\n    serv_addr.sin_family=AF_INET;\r\n    serv_addr.sin_port=htons(PORT);\r\n    serv_addr.sin_addr.s_addr=htonl(INADDR_ANY);\r\n    if(bind(sock_fd,(struct sockaddr*)&amp;serv_addr,sizeof(struct sockaddr_in))&lt;0)\r\n    {\r\n        my_err(\"bind\");\r\n    }\r\n    //将套接字转化为监听套接字\r\n    if(listen(sock_fd,LISTEN_SIZE)&lt;0)\r\n    {\r\n        my_err(\"listen\");\r\n    }\r\n    cli_len=sizeof(struct sockaddr_in);\r\n    events=(struct epoll_event*)malloc(sizeof(struct epoll_event)*EPOLL_SIZE);\r\n    //创建一个监听描述符epoll,并将监听套接字加入\r\n    epollfd=epoll_create(EPOLL_SIZE);\r\n    if(epollfd==-1)\r\n    {\r\n        my_err(\"epoll_create\");\r\n    }\r\n    event.events = EPOLLIN;\r\n    event.data.fd = sock_fd;\r\n    if(epoll_ctl(epollfd,EPOLL_CTL_ADD,sock_fd,&amp;event)&lt;0)\r\n    {\r\n        my_err(\"epoll_ctl\");\r\n    }\r\n\r\n    mkdir(\"lixian\",0777);  //创建离线消息目录\r\n\r\n    head=create();  //创建链表\r\n    while(1)\r\n    {\r\n        int sum=0,i;\r\n        sum=epoll_wait(epollfd,events,EPOLL_SIZE,-1);\r\n        for(i=0;i&lt;sum;i++)\r\n        {\r\n            if(events[i].data.fd==sock_fd)    //有请求连接\r\n            {\r\n                int fd,stdoutfd;\r\n                fd=open(\"log_file\",O_RDWR|O_CREAT|O_APPEND);\r\n                stdoutfd=dup(1);\r\n\r\n                conn_fd=accept(sock_fd,(struct sockaddr*)&amp;cli_addr,&amp;cli_len);\r\n                if(conn_fd&lt;0)\r\n                {\r\n                    my_err(\"accept\");\r\n                }\r\n                \r\n                event.events = EPOLLIN | EPOLLRDHUP;\r\n                event.data.fd = conn_fd;\r\n                if(epoll_ctl(epollfd,EPOLL_CTL_ADD,conn_fd,&amp;event)&lt;0)   //将新连接的套接字加入监听\r\n                {\r\n                    my_err(\"epoll_ctl\");\r\n                }\r\n                printf(\"a connet is connected,ip is %s,time:%s\",inet_ntoa(cli_addr.sin_addr),my_time());\r\n                dup2(fd,1);\r\n                printf(\"a connet is connected,ip is %s,time:%s\",inet_ntoa(cli_addr.sin_addr),my_time());\r\n                dup2(stdoutfd,1);\r\n                close(fd);\r\n                close(stdoutfd);\r\n\r\n            }\r\n            else if(events[i].events&amp;EPOLLIN)    //有可读的套接字\r\n            {\r\n                \r\n                memset(&amp;recv_buf,0,sizeof(struct message));  \r\n                recv(events[i].data.fd,&amp;recv_buf,sizeof(struct message),0);\r\n                send_message(recv_buf,events[i].data.fd);\r\n                \r\n            }\r\n            if(events[i].events&amp;EPOLLRDHUP)\r\n            {\r\n                int fd,stdoutfd;\r\n                fd=open(\"log_file\",O_RDWR|O_CREAT|O_APPEND);\r\n                stdoutfd=dup(1);\r\n                delete(head,events[i].data.fd);\r\n                printf(\"a connet is quit,ip is %s,time:%s\",inet_ntoa(cli_addr.sin_addr),my_time());\r\n                dup2(fd,1);\r\n                printf(\"a connet is quit,ip is %s,time:%s\",inet_ntoa(cli_addr.sin_addr),my_time());\r\n                dup2(stdoutfd,1);\r\n                close(fd);\r\n                close(stdoutfd);\r\n                epoll_ctl(epollfd,EPOLL_CTL_DEL,events[i].data.fd,&amp;event);\r\n                close(events[i].data.fd);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n```\r\n \r\n```", "Konwledge_Point": "数据的输入", "Question": ["关于socket客户端发送数据正常，而服务器收到的数据为空", ["我写了一个简单的聊天程序，服务器和客户端接受发送数据都通过定义的同一个结构体，为什么在本机测试，开两个终端都没有问题，客户端和服务器分开在不同的电脑上测试时，客户端发送数据正常，而此时服务器收到的结构体里的数据为空是怎么回事？服务器用的epoll单线程，客户端用的双线程"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入的直接写文件即可&amp;#xff0c;js有API&lt;br /&gt; var blob &amp;#61; new Blob(data, { type: &amp;#34;text/csv,charset&amp;#61;UTF-8&amp;#34; });&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  var csvUrl &amp;#61; URL.createObjectURL(blob);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      var aEle &amp;#61; document.createElement(&amp;#34;a&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      aEle.download &amp;#61; folderName &amp;#43; &amp;#34;--&amp;#34; &amp;#43; fatherName &amp;#43; &amp;#34;--&amp;#34; &amp;#43; name &amp;#43; &amp;#34;.csv&amp;#34;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      aEle.href &amp;#61; csvUrl;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      aEle.click();&lt;/span&gt;&lt;br /&gt;data为字符串&amp;#xff0c;这可以写csv&amp;#xff0c;写txt&amp;#xff0c;json&amp;#xff0c;html都差不多&lt;br /&gt;具体百度&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["HTML里面输入框数据怎么自动保存成Excel表格数据", ["在HTML输入框里面输入的数据怎么自动保存成本地表格或者文本"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的实现仅仅是在输出上将数组以转置的形式输出&amp;#xff0c;数组本身并没有转置。题目的要求是将其转置并输出。我实现了一版&amp;#xff0c;供你参考。如果对你有帮助&amp;#xff0c;望采纳。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[n][n];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;arr[i][j]);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tmp &amp;#61; arr[i][j];\n            arr[i][j] &amp;#61; arr[j][i];\n            arr[j][i] &amp;#61; tmp;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, arr[i][j]);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j !&amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言问题（必采纳）", ["（我在pta做了很多次都不行）下图是我写的程序，模拟运行没有问题，但是就是显示我答案错误！", "输入一个n×n的方阵，把其转置并输出。", "\n", "输入格式:", "测试数据有多组，处理到文件尾。对于每组测试，第一行输入一个整数n（n≤10），接下来的n行每行输入n个不超过2位的整数。", "\n", "输出格式:", "对于每组测试，输出这n×n矩阵的转置方阵，每行的每两个数据之间留一个空格。", "\n", "输入样例:", "5", "5 51 96 80 45", "51 57 77 45 47", "72 45 58 83 21", "0 28 42 72 42", "91 61 7 73 66", "输出样例:", "5 51 72 0 91", "51 57 45 28 61", "96 77 58 42 7", "80 45 83 72 73", "45 47 21 42 66"]], "Tag": "程序设计"}
{"Answer": "发送里面写\r\nStstem.IO.File.AppendLines(\"1.txt\", new string[] { textBox1.Text });\r\ncomboBox1.Items.Add(textBox1.Text);\r\ntextBox1.Text = \"\";\r\n\r\nForm_Load里面写\r\nforeach (string s in Ststem.IO.File.ReadAllLines(\"1.txt\"));\r\ncomboBox1.Items.Add(s);", "Konwledge_Point": "数据的输入", "Question": ["C# textbox控件记录历史输入记录", ["运行写好的C#串口程序，在textbox输入内容，发送出去，", "\n然后删除textbox中的内容，鼠标点击在textbox中，", "\n此时显示之前的输入记录，", "\n\n", "如下图例所示，他把历史记录显示在一个combox控件中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你scanf里面要求输入一个回车,这个回车被scanf识别了,下一个回车才正常输出,把scanf内的&lt;code class=\"language-javascript\"&gt;\\n&lt;/code&gt;去掉即可&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言运行要输入两次才能运行是咋回事？", ["第一次输入按回车没有任何反应，重新输入一次按回车又有反应了，而且得到的正确答案，想请问一下哪里出了问题？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    student st, stmax, stmin;\n    FILE* fp;\n    stmax.score &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    stmin.score &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n    fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;file1.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!fp)\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(fp, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %d&amp;#34;&lt;/span&gt;, &amp;amp;st.num, st.name, &amp;amp;st.score);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;gt; stmax.score)\n            stmax &amp;#61; st;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st.score &amp;lt; stmin.score)\n            stmin &amp;#61; st;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;high:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmax.num, stmax.name, stmax.score);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;low:%5d%15s%5d\\n&amp;#34;&lt;/span&gt;, stmin.num, stmin.name, stmin.score);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["正确的应输出最高最低分。以文本形式建立初始数据文件，文件名为，file1.dat,请输入十个学生的学号，姓名及考试成绩，读入file1.dat中的数据，输出最高分与最低分", ["\n", "\n", "#include <stdio.h>", "#include <stdlib.h>", "#define N 10", "struct student", "{", "    int num;", "    char name[20];", "    int score;", "};", "int main()", "{", "    int i;", "    student st,stmax,stmin;", "    FILE *fp;", "    stmax.score=0;", "    stmin.score=100;", "    fp=fopen(\"file1.dat\",\"r\");", "    if(!fp)", "        exit(0);", "    for(i=0;i<N;i++)", "    {", "        fscanf(fp,\"%d %s %d\",&st.num,st.name,&st.score);", "        if(st.score>stmax.score)", "            stmax=st;", "        if(st.score<stmin.score)", "            stmin=st;", "    }", "    fclose(fp);", "    printf(\"high:%5d%15s%5d\\n\",stmax.num,stmax.name,stmax.score);", "    printf(\"low:%5d%15s%5d\\n\",stmin.num,stmin.name,stmin.score);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入 a&amp;#61;3b&amp;#61;7 8.5 71.82Aa 即可&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用下面的scanf函数输入数据，使a=3,b=7,x=8.5,y=71.82,c1='A',c2='a'。在键盘上应如何输入？", ["#include <stdio.h>", "int main()", "{", "    int a,b;", "    float x,y;", "    char c1,c2;", "    scanf(\"a=%db=%d\",&a,&b);", "    scanf(\"%f%e\",&x,&y);", "    scanf(\"%c%c\",&c1,&c2);", "    retutn 0;", "}"]], "Tag": "程序设计"}
{"Answer": "写java代码吧， 选择java代码选项，做分表插入操作 \r\n1.直接用java代码处理\r\n2.使用sql语句的视图做处理", "Konwledge_Point": "数据的输入", "Question": ["kettle从一张表抽取数据分别插入到多张表中", ["\n讲师表中需要生成UUID，中间表要存放这两张表的关联关系并且生成UUID", "\n这个该怎么做，跪求指导！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while(scanf(&amp;#34;%d&amp;#34;,&amp;amp;n)!&amp;#61;EOF)&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言中如何表示当没有输入的数字时跳出循环", ["如果需要多组测试数据，循环中，如何表示不输入数字时跳出循环，用break跳出去。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/827592214746132.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdlib.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ElemType;&lt;span class=\"hljs-comment\"&gt;/* ElemType类型根据实际情况而定&amp;#xff0c;这里假设为int */&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;\n{\n    ElemType data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; *next;\n} LNode,*linkList;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;initList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;inputList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList L)&lt;/span&gt;&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    linkList head;\n    &lt;span class=\"hljs-built_in\"&gt;initList&lt;/span&gt;(head);\n    &lt;span class=\"hljs-built_in\"&gt;inputList&lt;/span&gt;(head);\n    &lt;span class=\"hljs-built_in\"&gt;printList&lt;/span&gt;(head);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;initList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList &amp;amp;L)&lt;/span&gt;\n&lt;/span&gt;{\n    L&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; LNode;\n    L-&amp;gt;next&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;/*输入\n第1行输入一个整数n&amp;#xff0c;表示单链表中有n个结点\n第2行输入n个整数&amp;#xff08;数据之间用空格隔开&amp;#xff09;&amp;#xff0c;表示单链表中存储的具体数据\n输出\n第3行输出单链表中的数据&amp;#xff0c;数据之间用一个空格隔开\n样例输入 Copy\n4\n1 2 3 4\n样例输出 Copy\n1 2 3 4 */&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;inputList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList &amp;amp;L)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    linkList p,r&amp;#61;L;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tem; \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        Node *newnode &amp;#61; (Node*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node));\n        newnode -&amp;gt; next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;newnode-&amp;gt;data);\n        r-&amp;gt;next&amp;#61;newnode;\n        r&amp;#61;newnode;\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(linkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    linkList p&amp;#61;L-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,p-&amp;gt;data);\n        p&amp;#61;p-&amp;gt;next;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["初始化一个单链表（带有头结点），然后输入具体数据（要求用尾插法实现），最后打印该打印表。", ["\n", "#", "include", " ", "\"stdio.h\"", "\n", "#", "include", " ", "\"stdlib.h\"", "\n\n", "typedef", " ", "int", " ElemType;", "/* ElemType类型根据实际情况而定，这里假设为int */", " \n \n", "typedef", " ", "struct", " ", "Node", "\n{\n    ElemType data;\n    ", "struct", " ", "Node", " *next;\n}LNode,*linkList;\n", "void", " ", "initList", "(linkList &L)", ";\n", "void", " ", "inputList", "(linkList &L)", ";\n", "void", " ", "printList", "(linkList L)", ";\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\nlinkList head;\n", "initList", "(head);\n", "inputList", "(head);\n", "printList", "(head);\n", "return", " ", "0", ";\n}\n\n", "void", " ", "initList", "(linkList &L)", "\n", "{\n    L=", "new", " LNode;\n    L->next=", "NULL", ";\n}\n输入\n第", "1", "行输入一个整数n，表示单链表中有n个结点\n第", "2", "行输入n个整数（数据之间用空格隔开），表示单链表中存储的具体数据\n输出\n第", "3", "行输出单链表中的数据，数据之间用一个空格隔开\n样例输入 Copy\n", "4", "\n", "1", " ", "2", " ", "3", " ", "4", "\n样例输出 Copy\n", "1", " ", "2", " ", "3", " ", "4", " \n", "void", " ", "inputList", "(linkList &L)", "\n", "{\n", "int", " n;\nlinkList p,r=L;\n", "scanf", "(", "\"%d\"", ",&n);\n", "for", "(", "int", " i=", "0", ";i<n;i++)\n{\n   \n}\n}\n\n", "void", " ", "printList", "(linkList L)", "\n", "{\n    linkList p=L->next;\n    ", "while", "(p!=", "NULL", ")\n    {\n        ", "printf", "(", "\"%d \"", ",p->data);\np=p->next;    \n    }\n    ", "printf", "(", "\"\\n\"", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有大奖&amp;#xff0c;快来&amp;#xff0c;实物水晶&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["oj系统1160金币需要", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴描述", "\n", "国王将金币作为工资，发放给忠诚的骑士。第一天，骑士收到一枚金币；之后两天（第二天和第三天）里，每天收到两枚金币；之后三天（第四、五、六天）里，每天收到三枚金币；之后四天（第七、八、九、十天）里，每天收到四枚金币……这种工资发放模式会一直这样延续下去。当连续 n天每天收到 n 枚金币后，骑士会在之后的连续 n+1 天里，每天收到 n+1 枚金币（n 为正整数）。", "\n", "请编程确定从第一天开始的给定天数内，骑士一共获得了多少金币。", "\n", "输入", "输入包含至少一行，但不多于 1000 行。", "\n", "除最后一行外，输入的每行是一组输入数据，包含一个正整数 n，表示天数。", "\n", "输入的最后一行为 0，表示输入结束。", "\n", "输出", "对每个数据输出一行一个整数，表示该数据对应总金币数。", "\n", "输入样例 1 ", "\n", "10", "6", "7", "11", "15", "16", "100", "10000", "1000", "21", "22", "0", "输出样例 1", "\n", "30", "14", "18", "35", "55", "61", "945", "942820", "29820", "91", "98截图 ", "\n", "运行结果及报错内容", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "{\n    ", "int", " a,b=", "1", ",c=", "1", ",d=", "0", ",e=", "1", ";\n    ", "long", " ", "long", " x=", "1", ";\n    cin>>a;\n    ", "while", "(b<=a){\n        d+=c;\n        b++;\n        \n        ", "if", "(b>e){\n            c++;\n            e+=c;\n            x=c+d;\n            cout<<x<<endl;\n            \n        }\n    }\n    cout<<", "\"0\"", "<<endl;\n    cout<<d;\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "用double和longlong", "\n", "我想要达到的结果", "\n", "输出样例 1", "\n", "30", "14", "18", "35", "55", "61", "945", "942820", "29820", "91"]], "Tag": "程序设计"}
{"Answer": "问题已解决。mybatis中对应的Mapper.xml中的if条件多些了一个creditState!=\"\"，这个是专门针对字符串的，去掉这个条件就OK。", "Konwledge_Point": "数据的输入", "Question": ["查询数据时值为0时返回的是全部的数据。如何让返回值为0的数据而不返回其他数据？", ["mysql查询数据时Integer数据值为0时返回的是全部的数据。如何让返回值为0的数据而不返回其他数据？", "\n如下图，查询时值为0，但返回结果却是所有的数据，包含值为1的。", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;选A&amp;#xff0c;&lt;br /&gt;a表示指向数组起始位置的指针&amp;#xff0c;a&amp;#43;&amp;#xff08;i&amp;#43;&amp;#43;&amp;#xff09;&amp;#xff0c;等价于a&amp;#43;i,i&amp;#61;i&amp;#43;1&amp;#xff1b;a&amp;#43;i就是指向数组下标为i的指针&lt;br /&gt;B选项a[i&amp;#43;1]会导致数组越界&lt;br /&gt;C选项a&amp;#43;1一直向一个地址填充数据&lt;br /&gt;D选项int型数组不能通过数组名填充数据&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用scanf函数实现对数组数据的输入？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while(cin.hasNext())&lt;br /&gt;改为&lt;br /&gt;while (true)&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入数据中统计正整数和负整数的个数，如何以输入0为输入结束", ["输入数据，以输入0为输入结束", "\n", "代码如下：：", "\n", "import java.util.Scanner;", "\n", "public static void main(String[] args) {    ", "\n", "Scanner cin=new Scanner (System.in);", "\n", " int a[]", "=", "new int [", "100", "]", ";", "\n int i", "=", "0", ";", "\n", "\n", "System.out.println(\"请输入数组元素：\");", "while(cin.hasNext())", " { a[i]=cin.nextInt();", " if(a[i]==0)；", " break;", " else", " i++;", "\n", "```java", "\n", "``` }", "}", "}", "运行结果", "\n", "```java", "\n", "```：", "请输入数组元素：", "3 9 0 4 5", "\n", "_自己以为只要输入0就直接结束了，但是还是得输入回车才能算作结束", "望求解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目有没有约束n的取值范围呢&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;你定义为10&amp;#xff0c;够用吗&amp;#xff1f;&lt;br /&gt;国家名称&amp;#xff0c;20个字符够用吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入n和n个国家名字，按照字典顺序从小到大排序输出！", ["输入n和n个国家名字，按照字典顺序从小到大排序输出！", "例如：输入2行，第一行n；第二行n个国家名字，空格间隔。", "6", "Singapore Zambia Itlay China America Romania", "在这里给出相应的输出。例如：", "America", "China", "Itlay", "Romania", "Singapore", "Zambia", "这是我的代码", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " n,i,j;\n    ", "char", " str[", "10", "][", "20", "],*k;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "for", "(i=", "0", ";i<n;i++) {", "scanf", "(", "\"%s\"", ",str[i]);}\n    ", "for", "(i=", "0", ";i<n", "-1", ";i++)\n        ", "for", "(j=", "0", ";j<n-i", "-1", ";j++)\n            ", "if", "(", "strcmp", "(str[j],str[j+", "1", "])>", "0", "){", "strcpy", "(k,str[j]);\n                                       ", "strcpy", "(str[j],str[j+", "1", "]);\n                                       ", "strcpy", "(str[j+", "1", "],k);\n                                       }\n      ", "for", "(i=", "0", ";i<n;i++) ", "printf", "(", "\"%s\\n\"", ",str[i]);\n    ", "return", " ", "0", ";\n}\n\n", "\n", "在Dev-c++ 上的运行结果", "\n", "\n", "但是在PTA上会段错误，请赐教"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nstr1&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入字符串&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(str1)):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;19968&lt;/span&gt;&amp;lt;&amp;#61;ord(str1[i])&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;40869&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该字符串中的中文字符个数为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;%&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["描述 从健盘输入一个包含中文和字母的字符串，统计并输出字符串中中文的个数。 输入描述 输入一个中英文混合的字符串，如：word世界very精彩 输出描述 输出中文字符的个数，如：4", ["描述 从健盘输入一个包含中文和字母的字符串，统计并输出字符串中中文的个数。 输入描述 输入一个中英文混合的字符串，如：word世界very精彩", "输出描述 输出中文字符的个数，如：4"]], "Tag": "程序设计"}
{"Answer": "表单内容转成JSON,然后本地存储", "Konwledge_Point": "数据的输入", "Question": ["layui框架表单提交后，怎样保留上一次输入的信息", ["表单中有：文本框、下拉列表、单选框，表单提交成功后保留本次提交的表单所有的内容"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Windows系统终端下按Ctrl&amp;#43;Z再回车结束输入&lt;br /&gt;Linux系统终端下按Ctrl&amp;#43;D结束输入&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x1, y1, x2, y2;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; x1 &amp;gt;&amp;gt; y1 &amp;gt;&amp;gt; x2 &amp;gt;&amp;gt; y2)\n    {\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; dx &amp;#61; x2 - x1;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; dy &amp;#61; y2 - y1;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; d &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(dx * dx &amp;#43; dy * dy);\n        cout &amp;lt;&amp;lt; fixed &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;setprecision&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;lt;&amp;lt; d &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c++输入数据个数未知情况下输入方法", ["想知道c++输入数据个数未知情况下输入方法，并且什么时候停止"]], "Tag": "程序设计"}
{"Answer": "最简单的是用panda，直接就有read_csv方法\r\n你的数据需要将空格替换为逗号，就是标准的csv了，替换方法很简单，记事本打开txt，然后ctrl+h，第一行输入一个空格，第二行输入,（英文半角的）\r\n然后全部替换即可。\r\nread_csv的调用：https://www.cnblogs.com/datablog/p/6127000.html", "Konwledge_Point": "数据的输入", "Question": ["想写一个有21个输入，一个输出的神经网络，数据在txt中，以空格分开，读入数据部分该如何写？", ["我是用tensorflow的", "\n第一列是label，后面21列是21个输入，希望大佬教我怎么写，谢谢啦", "\n-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9", "\n\n", "我自己写过一下，但是报错了，说是 not enough values to unpack (expected 22, got 21)，但也明明有22个的啊，datax21也能正常输出9的啊，我完全搞不懂了", "\n\n", "f = open('neodata.txt','r')", "\nsourceInLine = f.readlines()", "\nf.close()", "\n\n", "result = []", "\n\n", "for line in sourceInLine:", "\n    data = []", "\n    total = []", "\n    label_y ,data_x1 ,data_x2,data_x3,data_x4,data_x5,data_x6,data_x7,data_x8,data_x9,data_x10,data_x11 ,data_x12,data_x13,data_x14,data_x15,data_x16,data_x17,data_x18,data_x19,data_x20,data_x21= line.strip('\\n').split()"]], "Tag": "程序设计"}
{"Answer": "首先，你这样分配空间是不行的，这样应该是通不过编译的才对，不知道你怎么通过编译了，int A[x]中的x必须为常量。如果你想要动态申请空间,可以按我下面的来，不然一开始你就要指定好大小。\r\n\r\n```\r\nint *A = NULL;//最好赋予初值为空指针，不然这里就是一个野指针，容易出毛病\r\n\r\ndo{\r\nprintf(\"请输入数组的长度n为:\");\r\nscanf(\"%d\",&amp;n);\r\ngetchar();\r\n\t}while(n&gt;=200 &amp;&amp; n&lt;=0);   //这里直接用个do-while做个循环，就能检测合法值了。\r\n\t\r\nA = malloc(sizeof(int) * n);//动态申请对应大小的数组\r\n\r\nfor().......输入数组部分\r\n\r\nfree(A);//前面动态申请空间后要释放\r\nreturn 0;\r\n```\r\n另外在C语言做输入时scanf后面最好加一个getchar();\r\n因为有时候scanf会连你的回车一起输入进去，所以需要你先把回车取出来丢掉。", "Konwledge_Point": "数据的输入", "Question": ["本人C语言小白，自己尝试做了一个关于数组的输入输出的程序，却输不出来", ["```int main()", "\n{", "\n    int i,n=0;", "\n    int A[n];", "\n    printf(\"请输入数组的长度n为:\");", "\n    scanf(\"%d\",&n);", "\n    if(n>200){", "\n        printf(\"请重新输入数组的长度:\");", "\n        scanf(\"%d\",&n);", "\n    }", "\n    else", "\n    printf(\"请输入数组里的值:\");", "\n    for(i=0;i<n;i++){", "\n        scanf(\"%d\",&A[i]);", "\n    }", "\n    for(i=0;i<n;i++){", "\n        printf(\"A[%d]=%d\\n\",i,A[i]);", "\n    }", "\n    return 0;", "\n}", "\n\n", "但是如果输入的值不一样又可以输出来，是哪里出了问题？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n  &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; *next;\n} Node, *Linklist;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;initLinklist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Linklist &amp;amp;l)&lt;/span&gt; &lt;/span&gt;{\n  l &amp;#61; (Node *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node));\n  l-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Linklist &amp;amp;l, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score)&lt;/span&gt; &lt;/span&gt;{\n  Node *p;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  p &amp;#61; l;\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; j &amp;lt; i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n    p &amp;#61; p-&amp;gt;next;\n  }\n\n  Node *s &amp;#61; (Node *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node));\n  s-&amp;gt;num &amp;#61; num;\n  s-&amp;gt;score &amp;#61; score;\n  s-&amp;gt;next &amp;#61; p-&amp;gt;next;\n  p-&amp;gt;next &amp;#61; s;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printLinklist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Linklist &amp;amp;l)&lt;/span&gt; &lt;/span&gt;{\n  Node *p &amp;#61; l-&amp;gt;next;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;[num&amp;#61;%d,score&amp;#61;%d]\\n&amp;#34;&lt;/span&gt;, p-&amp;gt;num, p-&amp;gt;score);\n    p &amp;#61; p-&amp;gt;next;\n  }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;destroyLinklist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Linklist &amp;amp;l)&lt;/span&gt; &lt;/span&gt;{\n  Node *p &amp;#61; l;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n    Node *q &amp;#61; p;\n    p &amp;#61; p-&amp;gt;next;\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(q);\n  }\n  l &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  Linklist L;\n  &lt;span class=\"hljs-built_in\"&gt;initLinklist&lt;/span&gt;(L);\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num, score;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;num, &amp;amp;score);\n    &lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(L, i, num, score);\n  }\n  &lt;span class=\"hljs-built_in\"&gt;printLinklist&lt;/span&gt;(L);\n  &lt;span class=\"hljs-built_in\"&gt;destroyLinklist&lt;/span&gt;(L);\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言，建立由这三组数据结点组成的简单链表", ["提交与自己学号相邻的两位同学的学号与一门考试成绩，编程建立由这三组数据结点组成的简单链表", "样例输入", "201 98  202 94  203 89", "样例输出", "[num=201,score=98]", "[num=202,score=94]", "[num=203,score=89]", "#include<stdio.h>", "#include<stdlib.h>", "typedef struct Node{", "int num;", "int score;", "struct Node *next;", "}Node,*Linklist;", "void initLinklist(Linklist &l)", "{", "l=(Node *)malloc(sizeof(Node));", "l->next=NULL;", "}", "void add(Linklist &l,int i,int num,int score)", "{", "Node *p;", "int j=0;", "p=l;", "for(;j<i-1;j++)", "{", "p=p->next;", "}", "Node *s;", "s->num=num;", "s->score=score;", "s->next=p->next;", "p->next=s;", "printf(\"%d %d\",s->num,s->score);", "}", "int main(){", "Linklist L;", "initLinklist(L);", "int num,score;", "int i;", "for(i=1;i<=3;i++)", "{", "scanf(\"%d,%d\",&num,&score);", "add(L,i,num,score);", "}", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;v-model&amp;#61;&amp;#34;loginForm.name&amp;#34;改成v-model&amp;#61;&amp;#34;loginForm.username&amp;#34;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&amp;lt;el-&lt;span class=\"hljs-keyword\"&gt;form&lt;/span&gt;-item &lt;span class=\"hljs-keyword\"&gt;prop&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&amp;gt;\n            &amp;lt;el-&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;\n              prefix-icon&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;iconfont icon-user&amp;#34;&lt;/span&gt;\n              placeholder&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入用户名&amp;#34;&lt;/span&gt;\n              v-model&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;loginForm.username&amp;#34;&lt;/span&gt;\n              &lt;span class=\"hljs-keyword\"&gt;table&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;用户名&amp;#34;&lt;/span&gt;\n            &amp;gt;&amp;lt;/el-&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;&amp;gt;\n          &amp;lt;/el-&lt;span class=\"hljs-keyword\"&gt;form&lt;/span&gt;-item&amp;gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["Vue 单文件组件中 element ui 为啥input 输入框总是提示请输入内容呢", ["问题遇到的现象和发生背景", "\n", "\n", "\n    ", "\n      ", "\n        ", "\n      ", "\n      \n      ", "\n        \n          \n          \n            \n          \n          \n            \n          \n          \n          \n            登录\n            重置\n          \n        \n        ", "{{loginForm.name}}", "\n      ", "\n    ", "\n  "]], "Tag": "程序设计"}
{"Answer": "下面的代码考虑输入的是否是整数\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\n\r\n#define N 10\r\n\r\nvoid input();\r\nvoid sort();\r\nvoid output();\r\n\r\nvoid main()\r\n{\r\n\tint a[N];\r\n\t\r\n\tinput(a, N);\r\n\t\r\n\tsort(a, N);\r\n\toutput(a, N);\r\n\t\r\n\tgetch();\r\n}\r\n\r\nvoid input(int *a, int n)\r\n{\r\n\tint i = 0;\r\n\tchar c;\r\n\t\r\n    printf(\"\\nEnter the %d of numbers: \", n);\r\n   \t\r\n    for (i = 0; i &lt; n; i++)\r\n    {\r\n\t\tprintf(\"Please input number %d : \", i + 1);\r\n\r\n\t\twhile(scanf(\"%d\", &amp;a[i]) != 1)\r\n\t\t{\r\n\t\t\tscanf(\"%s\", &amp;a[i]);\r\n\t\t\tprintf(\"Sorry, [%s] is not a number. Please input number %d : \", &amp;a[i], i);\r\n\t\t}\r\n    }\r\n}\r\n\r\nvoid sort(int *a, int n)\r\n{\r\n\tint i, j, temp;\r\n\t\r\n    for(i = 0; i &lt; n; i++)\r\n    {\r\n        for(j = i; j &lt; n; j++)\r\n        {\r\n            if(a[i] &gt; a[j])\r\n            {\r\n                temp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = temp;\r\n        \t}\r\n        }\r\n    }\r\n}\r\n\r\nvoid output(int *a, int n)\r\n{\r\n\tint i;\r\n\t\r\n    printf(\"\\nSorted array:\");\r\n    for(i = 0; i &lt; n; i++)\r\n    {\r\n    \tprintf(\"\\t%d\",a[i]);\r\n    }\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["编写程序，从键盘输入10个int类型数，按从小到大顺序进行排序，然后输出", ["编写程序，从键盘输入10个int类型数，按从小到大顺序进行排序，然后输出。要求用函数sort()进行排序, 用函数input（）输入数据，用函数output()输出数据。", "\n(1) 主函数定义数组a[N]，N定义为10", "\n(2) 函数声名：", "\n(3) 主函数调用函数实现程序功能。", "\n(4) 函数定义"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;请看&amp;#xff1a; &lt;a href=\"https://blog.csdn.net/findhappy117/article/details/79377416\"&gt;https://blog.csdn.net/findhappy117/article/details/79377416&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何用python基于flask写一个输入姓名密码提交数据库查询已存数据的网站？", ["我在写前端HTML的时候，只知道在from中提交表单数据发送至服务器，但具体与服务器和数据库怎么链接并不明白，也看过了W3Cschool的相关教程没看懂，以至于开发进程延误到现在已经有四五天。", "\n\n", "整个开发过程用的HTML语言直接写的前端，后台服务器和数据库用的python和SQLite3。python编写的文件知道该如何连接数据库和遍历查询，也知道如何返回。自认为卡住的位置是python编写的文件与HTML之间的连接。", "\n\n", "求助：在这么一个请求查询与展示返回数据的网站编制开发过程中，不懂得实在是太多了，还在努力学习中。请帮忙指教整个过程该如何写，从中学习透彻从前端到后端到数据库的交互与数据请求、数据展现的基本原理，自己再照着多写写。（也可以请大神们帮忙写一个前后端完整的思路也行，而后最好有注释，要不然只会抄搞不明白细节白白浪费了大神们的心意）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf中&amp;#xff0c;变量名前面要加&amp;amp;符号取地址才行&amp;#xff0c;不然程序就崩溃了&amp;#xff0c;当然没输出&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么输入数据之后，按回车键不显示结果", ["要求是输入学生的个数，以及学号姓名平时成绩与卷面成绩，计算max，min，平均分和及格率，通过平时成绩与卷面成绩算出每个同学的最终成绩，并输出，但是输入后未输出结果", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;n &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;))\n\nlines &amp;#61; []\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; _ in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n):\n    &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;)\n    t &amp;#61; sorted(&lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(), key&amp;#61;lambda &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)), &lt;span class=\"hljs-built_in\"&gt;reverse&lt;/span&gt;&amp;#61;True)\n    lines.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(t) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n    \n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in lines:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(i)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python如何实现“输入一个整数代表有多少组，每组占一行，每行有若干个整数用空格彼此隔开”", ["输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。", "输入", "首先输入一个整数代表有多少组，每组占一行，每行有若干个整数用空格彼此隔开", "输出", "对于每个每行的测试实例，输出排序后的结果，两个数之间用一个空格隔开（注意每行最后一个数的结尾也有空格）。每个测试实例占一行", "样例输入", "2", "3 -4 2", "0 1 2 -3", "样例输出", "-4 3 2", "-3 2 1 0"]], "Tag": "程序设计"}
{"Answer": "第一个写\r\nInputStreamReader\r\n第二个写\r\nbr.readLine()\r\n\r\n# 问题解决的话，请点下采纳。", "Konwledge_Point": "数据的输入", "Question": ["求助 小白一个  大佬帮忙看看", ["下列程序的功能是：不断从键盘输入数据，并显示在屏幕上。请补充完整。", "\n\n", "import java.io.*;\n\n//import java.util.Scanner;\n\npublic class test531{\n\npublic static void main(String args[]) throws IOException{\n", "\n\n", "BufferedReader br=new BufferedReader(new 【1】(System.in));\n\nSystem.out.print(\"请输入一个字符串：\");\n\nString s=【2】;\n\nSystem.out.println(\"输入的字符串是：\"+s);\n}\n", "\n\n", "}", "\n\n", "第一空填Scanner 或者FileReader 都报错呢 第二空br.nextLine()也错的；", "\n大佬帮忙看看 若解决了愿给悬赏"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/015324391556143.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ll long long&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; N &amp;#61; &lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\nll c[N];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,k,num;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n        c[i] &amp;#61; c[i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * i;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;k) !&amp;#61; EOF) {\n        ll ans &amp;#61; c[n];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; k; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n            ans /&amp;#61; c[num];\n            n -&amp;#61; num;\n        }\n \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%lld\\n&amp;#34;&lt;/span&gt;, ans);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["多项式展开后某个特定项系数", ["没有一点思路，", "输入包含若干组数据，每组有两行。第一行为两个整数n和k（0＜k，n＜13)。分别表示多项式的次数和变元数。第二行为k个非负整数n1，-，nk，满足n1＋  ＋nk＝n。", "输出", "对于每组输入数据，输出一行，仅包含一个整数，即多项式展开后的系数。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nd &amp;#61; {}\n#创建\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;()&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;()\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;()&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;()\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(a)):\n    d&lt;span class=\"hljs-selector-attr\"&gt;[a]&lt;/span&gt; &amp;#61; eval(b)\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(d)&lt;/span&gt;&lt;/span&gt;\n#查阅\n\nx &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(d[x])&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何做字典，有点不明白", ["从键盘输入两组数据，分别包含水果名称及其两组数据创建字典，输出该字典。", "输入一个水果名称，从字典中查询其价格。示例运行结果:", "请输入水果名称:香蕉苹果梨西瓜", "请输入水果价格: 4.5 5.8 5 3.5"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在&lt;code class=\"language-javascript\"&gt;ajax&lt;/code&gt;的&lt;code class=\"language-javascript\"&gt;success&lt;/code&gt;方法中解析和拼接到表格即可。如&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-js\"&gt;$.ajax({ \n    url: &lt;span class=\"hljs-string\"&gt;&amp;#34;/api-bill/income/list&amp;#34;&lt;/span&gt;, \n    success: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(result){\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;result就是你截图中的json对象&amp;#xff0c;如果想要获取里面的的数据&amp;#xff0c;可使用 &lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(result.code &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;这里模拟获取数据中的code&amp;#xff0c;如果想要获取里面的data中的数据&amp;#xff0c;可使用以下方式\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;data是一个数组&amp;#xff0c;\n            console.log(result.data[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].id)\n        }\n    }});\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["js怎么把后端传来的json数据显示到前端的表格中呢", ["我想把后端的json数据传到前端的表格中,前台是js写的.", "就是怎么使用ajax获取过来这个数据,然后拼接到表格中?", "表头长这样", "\n", "\n", "<", "table", " ", "id", "=", "\"table_id\"", ">", "\n    ", "<", "thead", ">", "\n    ", "<", "tr", ">", " ", "<!--共8项-->", "\n        ", "<", "th", ">", "项目", "</", "th", ">", "\n        ", "<", "th", ">", "金额", "</", "th", ">", "\n        ", "<", "th", ">", "项目", "</", "th", ">", "\n        ", "<", "th", ">", "金额", "</", "th", ">", "\n        ", "<", "th", ">", "项目", "</", "th", ">", "\n        ", "<", "th", ">", "金额", "</", "th", ">", "\n        ", "<", "th", ">", "项目", "</", "th", ">", "\n        ", "<", "th", ">", "金额", "</", "th", ">", "\n    ", "</", "tr", ">", "\n    ", "</", "thead", ">", "\n    ", "<", "tbody", " ", "id", "=", "\"body_form\"", ">", "\n    ", "</", "tbody", ">", "\n", "\n", "后台的数据json数据长这样,路径是 /api-bill/income/list", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def hobby(*arg):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;我的爱好有&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;join&lt;/span&gt;(arg))\n\n&lt;span class=\"hljs-built_in\"&gt;hobby&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;摄影&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-built_in\"&gt;hobby&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;运动&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;阅读&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;旅游&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;br /&gt;我的爱好有&amp;#xff1a;&lt;br /&gt;摄影&lt;br /&gt;我的爱好有&amp;#xff1a;&lt;br /&gt;运动&lt;br /&gt;阅读&lt;br /&gt;旅游&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["编写代码自定标一一个函数hobby（）", ["创建一个自定义函数hobby()，要让它的功能是每次调用该函数，根据用户输入数据的个数，显示不同的行数，每一行显示结果都是用户的爱好", "示例：", "\n", "下面是我自己写的", "\n", "运行结果为：", "\n", "但是如何实现根据输入数据的个数显示不同的行数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建议看看官网的资料&lt;br /&gt;&lt;a href=\"https://www.mathworks.com/help/ident/ug/motorized-camera-multi-input-multi-output-nonlinear-arx-and-hammerstein-wiener-models.html\" id=\"textarea_1649950835623_1649951651850_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.mathworks.com/help/ident/ug/motorized-camera-multi-input-multi-output-nonlinear-arx-and-hammerstein-wiener-models.html&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://www.mathworks.com/help/ident/ug/estimating-multiple-input-multi-output-process-models.html\" id=\"textarea_1649950835623_1649951651850_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.mathworks.com/help/ident/ug/estimating-multiple-input-multi-output-process-models.html&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a id=\"textarea_1649950835623_1649951651850_2\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://www.ece.northwestern.edu/local-apps/matlabhelp/toolbox/ident/ch1sip15.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["怎么在系统辩识工具箱导入多输入多输出数据", ["在input output这一步输入数据的时候只能输入单输入单输出数据，不知道怎么在matlab系统辩识工具箱导入多输入多输出数据"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-comment\"&gt;&amp;lt;!--假设输入框input如下--&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;cartype&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onfocus&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;getData()&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;lt;!--假设弹窗代码中点中的元素如下--&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;popup-3&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onclick&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;setInputData(&amp;#39;EC8&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;在javascript中定义getData()\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; getData(){\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.调用你的数据。。。并进行相应的处理这里省略具体实现\n ajax.get(xxxx)\n &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;.渲染显示你的弹出框。\n &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.加弹出框的点击事件\n}\n\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; setInputData(typeValue){\n let cartype_el &amp;#61; document.getElementById(&lt;span class=\"hljs-string\"&gt;&amp;#34;cartype&amp;#34;&lt;/span&gt;);\n cartype_el.value &amp;#61; typeValue;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.之后关闭弹出框\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["点击input输入框，触发弹窗，弹窗里选择信息到input里面，信息数据是后台传给我的，比如图片", ["点击input输入框，触发弹窗，弹窗里选择信息到input里面，信息数据是后台传给我的，比如图片", "类似这个input点击框", "弹出 这个  然后选择哪个信息，选择的信息到输入框内 只能自己选不能填", "ajax连接数据成功，数据暂时里面没有放数据 怎么做这个"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%lf&amp;#34;,&amp;amp;x);&lt;br /&gt;有帮助的话&amp;#xff0c;望采纳。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么这个程序运行输入数字按回车后一直有数字", ["\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n;\n    ", "double", " a,b,x;\n    ", "while", "(", "scanf", "(", "\"lf\"", ",x)!=EOF)\n    {\n        a=", "2.0", ";\n        n=", "1", ";\n        b=", "0", ";\n        ", "while", "(x>", "0", ")\n        {\n          a=a*", "0.98", ";\n        b+=a;\n        n++;\n      ", "if", "(b>x){\n    ", "printf", "(", "\"%d\\n\"", ",n);\n\n}\n    }\n    ", "return", " ", "0", ";\n    }\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "# 问题解决的话，请点`采纳`\r\n```\r\n#include &lt;iostream&gt;\r\n#define MAXN 100\r\n\r\nusing namespace std;\r\n\r\nvoid maxandmin(int arr[], int n, int&amp; max, int&amp; min)\r\n{\r\n\tmax = min = arr[0];\r\n\tfor (int i = 1; i &lt; n; i++)\r\n\t{\r\n\t\tif (max &lt; arr[i]) max = arr[i];\r\n\t\tif (min &gt; arr[i]) min = arr[i];\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin &gt;&gt; n;\r\n\tif (n &lt;= 0) return -1;\r\n\tif (n &gt; MAXN) n = MAXN;\r\n\tint arr[MAXN];\r\n\tfor (int i = 0; i &lt; n; i++)\r\n\t\tcin &gt;&gt; arr[i];\r\n\tint max, min;\r\n\tmaxandmin(arr, n, max, min);\r\n\tcout &lt;&lt; \"max = \" &lt;&lt; max &lt;&lt; \", min = \" &lt;&lt; min &lt;&lt; endl;\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["c++求n个数据中的最大值和最小值。具体要求如下：", ["要求：  1、要用函数求n个数据中的最大值和最小值  2、使用引用作为函数参数  3、在main函数中输出n个数的最大值和最小值  4、n以及n个数都在运行时输入"]], "Tag": "程序设计"}
{"Answer": "可以先reshape成40000,1152\r\n也就是输入数据40000条，输入维度1152\r\n然后用Dense层，可以用一个也可以用多个，最后输出到8\r\n本质上你这个属于降维，也可以google下github上的autoencoder", "Konwledge_Point": "数据的输入", "Question": ["keras怎么改输入的维度", ["是一个多分类问题，我现在读取出来的数据input.shape=（40000,1,576,2）", "\n我想让它最后的层unit是8。", "\n请问我应该怎么加一些代码呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;launch.json  中设置&lt;br /&gt;&amp;#34;externalConsole&amp;#34;: true,&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["VSCODE如何在DEBUG运行中输入数据？", ["问题遇到的现象和发生背景", "\n", "今天第一次使用VSCODE，不知道怎么在Debug运行中输入数据", "\n", "问题相关代码，请勿粘贴截图", "\n", "double x1", ";", "\n", "x1", " ", "=", " console.read()", ";", "\n", "\n", "运行结果及报错内容", "\n", "不知道在哪里输入x1的值 ", "\n", "我想要达到的结果", "\n", "希望网友们能够提点，到底在哪里输入X1"]], "Tag": "程序设计"}
{"Answer": "不只是算法没有输入，，很多也不需要输入啊", "Konwledge_Point": "数据的输入", "Question": ["为什么算法可以没有输入，可以举个具体的例子吗 急！！我刚学数据结构，好多都不理解，求大神支招！", ["为什么算法可以没有输入，可以举个具体的例子吗 急！！我刚学数据结构，好多都不理解，求大神支招！"]], "Tag": "程序设计"}
{"Answer": "可以通过form表单提交然后用实体类去接收，也可以通过ajax异步请求后台controller然后再刷新前台页面", "Konwledge_Point": "数据的输入", "Question": ["springmvc怎么获取前端（jsp）文件的数据", ["前端有一个文本框和一个按钮，在文本框输入内容后，点击提交，怎么把数据传到后台（springmvc），且此时页面不会跳转？", "\n+++++++++++++++++++++++++++", "\n前端", "\n\n", "<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<html>\n<head>\n    <title>Title</title>\n</head>\n<body>\n    <form>\n        <input type=\"text\" name=\"name\" id=\"word\" placeholder=\"请输入内容\">\n        <button id=\"btn\" type=\"submit\"></button>\n    </form>\n</body>\n</html>\n", "\n\n", "后台：", "\n不知道要用什么（ModelAndView、Model、session）？", "\n+++++++++++++++++++", "\n请大神指教，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;出现这种情况的原因是因为 scanner.nextInt() 出现异常后不能重新输入&amp;#xff0c; 你需要重新 new 一个 scanner&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Scanner输入异常", ["本人刚学Java,遇到了一个难以解决的问题", "代码如下:", "public class test1 {", "    public static void main(String[] args) {", "        Scanner sc = new Scanner(System.in);", "        try {", "            System.out.println(\"输入物品价格\");", "            int prise = sc.nextInt();", "            System.out.println(\"价格合理\");", "        } catch (Throwable e) {", "            e.printStackTrace();", "            System.out.println(\"数据不合法\");", "        }", "        System.out.println(\"输入a\");", "        int a = sc.nextInt();", "        System.out.println(\"输入b\");", "        int b = sc.nextInt();", "    }", "}", "\n", "\n", "具体问题:", "如果输入的prise为int类型,不触发异常的话,则接下来的代码都能正常运行,如果输入的prise为string类型或者别的类型,在执行了catch内部的语句后,当执行到int a = sc.nextint()时会直接结束进程,具体图片如下:"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的学号的后两位&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a);\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;8进制&amp;#xff1a;%o\\n&amp;#34;&lt;/span&gt;,a);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;16进制&amp;#xff1a;%x\\n&amp;#34;&lt;/span&gt;,a);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["求帮助 数据的输入和输出", ["屏幕上出现提示语：请输入你的学号后两位", "输入学号后，电脑以八进制和十六进制的形式输出学号后两位"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不能这样哦&amp;#xff0c;只能用这种方法替代&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-variable\"&gt;year&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入您要查询的年份: &amp;#xff08;输入格式为“XXXX年”&amp;#xff09;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python 中 input 后面怎么加单位？", ["问题：", "         year = int(input('请输入您要查询的年份:'))", "\n", "如何实现提示输入时：", "       请输入您要查询的年份：           ", "年"]], "Tag": "程序设计"}
{"Answer": "你从数据库获取数据的代码有问题，应该用List先获取到所有的数据，然后在遍历这个List，提前userId相同的账户问题信息。\r\n我给你完整代码如下：你只需要修改queryData过程将ResultSet的数据存入list中返回即可。你可以先运行看结果，再修改。祝好。\r\n代码如下：\r\n\r\n```\r\n import java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStreamWriter;\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\n\r\npublic class WeiboDataExtract {\r\n\tpublic  List&lt;WeiboData&gt; queryData(){\r\n\t\tList&lt;WeiboData&gt; list = new ArrayList&lt;WeiboData&gt;();\r\n\t\tlist.add(new WeiboData(\"1\",\"hello\"));\r\n\t\tlist.add(new WeiboData(\"1\",\"world\"));\r\n\t\tlist.add(new WeiboData(\"1\",\"I want to change you!\"));\r\n\t\t\r\n\t\tlist.add(new WeiboData(\"2\",\"Haha\"));\r\n\t\treturn list;\r\n\t}\r\n\t\r\n\tpublic void extract(List&lt;WeiboData&gt;datas){\r\n\t\tMap&lt;String,StringBuffer&gt; map = new HashMap&lt;String,StringBuffer&gt;();\r\n\t\t//遍历数据\r\n\t\tfor(WeiboData data:datas){\r\n\t\t\tStringBuffer buffer = map.get(data.getUserId());\r\n\t\t\t//map中没有该微博账户，新建数据并存储\r\n\t\t\tif(buffer==null){\r\n\t\t\t\tbuffer= new StringBuffer();\r\n\t\t\t\tmap.put(data.getUserId(), buffer);\r\n\t\t\t}\r\n\t\t\t//将该账户的文本信息收集起来\r\n\t\t\tbuffer.append(data.getText()+\"\\r\\n\");\r\n\t\t}\r\n\t\t\r\n\t\t//遍历map输出到文件\r\n\t\tfor(Entry&lt;String, StringBuffer&gt; entry:map.entrySet()){\r\n\t\t\tString userId = entry.getKey();\r\n\t\t\tStringBuffer value = entry.getValue();\r\n\t\t\twriteToFile(\"d:/\"+userId+\".txt\",value.toString(),true,\"GB2312\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * 将字符串以指定的编码方式写入文件\r\n\t * @param fileName   待写入的文件\r\n\t * @param content    待写入的文本\r\n\t * @param append     是否追加\r\n\t * @param charset    文件输出编码格式，默认为UTF-8\r\n\t */\r\n\tpublic  void writeToFile(String fileName, String content,boolean append,String charset){\r\n\t\tif(fileName==null||\"\".equals(fileName)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(content==null||\"\".equals(content)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t//默认编码格式为UTF-8\r\n\t\tif(charset==null){\r\n\t\t\tcharset = \"UTF-8\";\r\n\t\t}\r\n\t\t\r\n\t\t//将字符串写入到文件输出流中\r\n\t\tOutputStreamWriter osw = null;\r\n\t\ttry {\r\n\t\t\tosw = new OutputStreamWriter(new FileOutputStream(fileName, append), charset);\r\n\t\t\tosw.write(content + \"\\r\\n\");\r\n\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}finally{\r\n\t\t\tif(osw!=null){\r\n\t\t\t\ttry {\r\n\t\t\t\t\tosw.close();\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tWeiboDataExtract d = new WeiboDataExtract();\r\n\t\td.extract(d.queryData());\r\n\t}\r\n}\r\n```\r\n用到的一个类如下：\r\n\r\n```\r\n public class WeiboData {\r\n\tprivate String userId;\r\n\tprivate String text;\r\n\t\r\n\tpublic WeiboData(String userId, String text) {\r\n\t\tsuper();\r\n\t\tthis.userId = userId;\r\n\t\tthis.text = text;\r\n\t}\r\n\r\n\tpublic String getUserId() {\r\n\t\treturn userId;\r\n\t}\r\n\r\n\tpublic void setUserId(String userId) {\r\n\t\tthis.userId = userId;\r\n\t}\r\n\r\n\tpublic String getText() {\r\n\t\treturn text;\r\n\t}\r\n\r\n\tpublic void setText(String text) {\r\n\t\tthis.text = text;\r\n\t}\r\n\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["java 从数据库取数据并存入本地文本中", ["已经解决了！！！！大家可以不用来围观啦", "\n\n", "要求如下：", "\n\n", "1.连接数据库，取数据，weibo表中取出 uid和text", "\n2.判断 uid是否相同，如果相同，则把其对应的text存入路径为D:\\data1的同一文件中，并且以此uid命名文件。格式如下：", "\n3.表的样式如下：", "\n4.我自己已经写了连接数据库，取数据，weibo表中取出 uid和text这部分了，我用的是Map暂存数据，如下：", "\n\n", "  public HashMap<String, String> selectFromDb() throws SQLException, UnsupportedEncodingException{\n           sql = \"select * from weibo\";\n           Connection conn = getConnect();\n           res = new HashMap<String, String>();//存uid的字符串map     \n           try{\n               statement = conn.createStatement();//statement用来执行SQL语句\n               ResultSet rs = statement.executeQuery(sql);\n               String user_id = null;\n               String text = null;            \n               while(rs.next()){                      \n                    user_id = rs.getString(\"uid\");//选择uid这列数据\n                    text = rs.getString(\"text\");//选择text这列数据                    \n                    //首先使用ISO-8859-1字符集将name解码为字节序列并将结果存储新的字节数组中。\n                    //然后使用GB2312字符集解码指定的字节数组\n                    user_id = new String(user_id.getBytes(\"GBK\"),\"GB2312\");\n                    text = new String(text.getBytes(\"GBK\"),\"GB2312\");\n                    res.put(user_id, text);                 \n                    //System.out.println(rs.getString(\"uid\")+\"\\t\"+topic+\"\\t\"+text); //输出结果                                                                           \n               }              \n               rs.close();\n               statement.close();\n               conn.close();               \n           }catch(SQLException e){\n               e.printStackTrace();\n           }          \n           return res;         \n       }\n", "\n\n", "\n5.现在就是要判断并且按uid存在本地文件中，希望大家给完整的代码，连接数据库的不需要了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 20&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;   a[N]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2016001&lt;/span&gt;},i,j,n;\n   &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; b[N], x , sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ,ave &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//float(b[N])&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n       a[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;a[i]&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请按学号输入成绩: \\n&amp;#34;&lt;/span&gt;);\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n   {\n       &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n           &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d: &amp;#34;&lt;/span&gt;,a[i]);\n           &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;b[i]);&lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%f&amp;#34;,&amp;amp;b[1]);&lt;/span&gt;\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b[i] &amp;gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//if(b[i]&amp;gt; 100 || b[i]&amp;lt;0)&lt;/span&gt;\n              &lt;span class=\"hljs-comment\"&gt;//{&lt;!-- --&gt;&lt;/span&gt;\n             &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d成绩输入错误&amp;#xff0c;请从新输入 \\n&amp;#34;&lt;/span&gt;, a[i]);\n             &lt;span class=\"hljs-comment\"&gt;//goto ai;&lt;/span&gt;\n             &lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n       }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b[i] &amp;gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b[i] &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//当输入成绩为负值时&amp;#xff0c;输入结束&lt;/span&gt;\n       sum &amp;#43;&amp;#61; b[i];         &lt;span class=\"hljs-comment\"&gt;//修改 计算课程的总分&lt;/span&gt;\n   }\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) ave &amp;#61; sum / i; &lt;span class=\"hljs-comment\"&gt;//修改 计算课程的平均分&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (n &amp;#61; i,i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//for (i&amp;#61;0; i &amp;lt; N-1; i&amp;#43;&amp;#43;)&lt;/span&gt;\n   {\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j &amp;lt; n; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//for(j &amp;#61; i;j &amp;lt; n; j&amp;#43;&amp;#43;)&lt;/span&gt;\n       {\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b[i] &amp;lt; b[j])\n           {\n               x&amp;#61;b[j];\n               b[j]&amp;#61;b[i]; &lt;span class=\"hljs-comment\"&gt;// b[i]&amp;#61;b[j];&lt;/span&gt;\n               b[i]&amp;#61;x;    &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n               x&amp;#61;a[i];\n               a[i]&amp;#61;a[j];\n               a[j]&amp;#61;x;\n           }\n       }\n   }\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//for(i&amp;#61;0;i,N;i&amp;#43;&amp;#43;)&lt;/span&gt;\n   {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第%d名:%d\\t%f\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, a[i], b[i]);\n                      &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%f\\n&amp;#34;, b[i]);&lt;/span&gt;\n   }\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;sum&amp;#61;%.2f,ave&amp;#61;%.2f\\n&amp;#34;&lt;/span&gt;,sum,ave);\n   &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言学生成绩统计代码：从键盘输入一个班（全班人数在15~20之间）学生某门课的成绩", ["从键盘输入一个班（全班人数在15", "20之间）学生某门课的成绩，当输入成绩为负值时，输入结束，分别实现下列功能，并在一个主函数内全部实现：", "（1）录入每个学生的学号（学号：2016001", "2016020）和考试成绩；", "（2）计算课程的总分和平均分；", "（3）按成绩由高到低排出名次表；", "\n", "这是第三问，哪位同志知道哪错了，求指点", "#include <stdio.h>", "#define N 20", "void main()", "{ int a[N]={2016001},i,j;", "float(b[N]),x;", "for(i=0;i<N-1;i++)", "a[i+1]=a[i]+1;", "printf(\"请按学号输入成绩: \\n\");", "       for (i= 0; i<N;i++)", "       {", "ai:printf(\"%d: \",a[i]);", "   scanf(\"%f\",&b[1]);", "   if(b[i]> 100 || b[i]<0)", "   {", "printf(\"%d成绩输入错误，请从新输入  \\n\", a[i]);", "goto ai;", "   }", "       }", "for (i=0; i < N-1; i++)", "{", "    for(j=i;j<N;j++)", "    {", "        if(b[i]<b[j])", "        {", "x=b[j];", "b[i]=b[j];", "x=a[i];", "a[i]=a[j];a[j]=x;", "        }", "    }", "}", "for(i=0;i,N;i++)", "{", "    printf(\"第%d名:%d\\t\",i+1, a[i]);", "printf(\"%f\\n\", b[i]);", "}", "system(\"pause\");", "}"]], "Tag": "程序设计"}
{"Answer": "采纳后可以帮你完善sort和search的代码\r\n```\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nclass Student\r\n{\r\npublic:\r\n    Student(string n,float s):number(n),score(s){}\r\n    friend void max(Student *);  //声明友元函数\r\nprivate:\r\n    string number; //将学号声明为字符串\r\n    float score;\r\n};\r\nvoid max(Student *p)\r\n{\r\n    int i;\r\n    for(i=0;i&lt;5;i++)\r\n    {\r\n        if(p-&gt;score&lt;(p+i)-&gt;score)\r\n        {\r\n            p=(p+1);  //将指向较大值的指针赋给指向较小值的指针\r\n        }\r\n    }\r\n    cout&lt;&lt;\"最高成绩为：\"&lt;&lt;p-&gt;score&lt;&lt;endl;\r\n    cout&lt;&lt;\"学生学号为：\"&lt;&lt;p-&gt;number;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    Student Stud[5]={\r\n    Student(\"201024131101\",99),\r\n    Student(\"201024131102\",92),\r\n    Student(\"201024131103\",99.5),\r\n    Student(\"201024131104\",95),\r\n    Student(\"201024131105\",93)\r\n    };  //定义一个对象数组数组并初始化对象\r\n    Student *p=Stud;   //定义一个指向对象的指针\r\n    max(p);   //调用函数\r\n    return 0;\r\n}\r\n```\r\nhttps://blog.csdn.net/xiao_song_shu/article/details/69252661\r\n\r\n\r\n\r\n```\r\n// Q753145.cpp : Defines the entry point for the console application.\r\n//\r\n\r\n#include \"stdafx.h\"\r\n\r\n\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nclass Student\r\n{\r\npublic:\r\n    Student(string n, string na, float s):number(n),score(s),name(na) {} //构造函数\r\n    void max(Student *);\r\n\tvoid sort(Student *, int);\r\n\tvoid search(Student *, string, int);\r\n\tvoid display()\r\n\t{\r\n\t\tcout &lt;&lt; name &lt;&lt; \" \" &lt;&lt; number &lt;&lt; \" \" &lt;&lt; score &lt;&lt; endl;\r\n\t}\r\nprivate:\r\n    string number; //将学号声明为字符串\r\n\tstring name;\r\n    float score;\r\n};\r\nvoid Student::max(Student *p)\r\n{\r\n    int i;\r\n    for(i=0;i&lt;5;i++)\r\n    {\r\n        if(p-&gt;score&lt;(p+i)-&gt;score)\r\n        {\r\n            p=(p+1);  //将指向较大值的指针赋给指向较小值的指针\r\n        }\r\n    }\r\n    cout&lt;&lt;\"最高成绩为：\"&lt;&lt;p-&gt;score&lt;&lt;endl;\r\n\tcout&lt;&lt;\"学生姓名为：\"&lt;&lt;p-&gt;name&lt;&lt;endl;\r\n    cout&lt;&lt;\"学生学号为：\"&lt;&lt;p-&gt;number &lt;&lt; endl;\r\n}\r\n\r\nvoid Student::sort(Student *p, int n)\r\n{\r\n\tfor (int i = 0; i &lt; n - 1; i++)\r\n\t\tfor (int j = 0; j &lt; n - i - 1; j++)\r\n\t\t{\r\n\t\t\tif (p[j].score &lt; p[j + 1].score)\r\n\t\t\t{\r\n\t\t\t\tstring tn = p[j].number;\r\n\t\t\t\tstring tna = p[j].name;\r\n\t\t\t\tfloat ts = p[j].score;\r\n\t\t\t\tp[j].number = p[j + 1].number;\r\n\t\t\t\tp[j].name = p[j + 1].name;\r\n\t\t\t\tp[j].score = p[j + 1].score;\r\n\t\t\t\tp[j + 1].number = tn;\r\n\t\t\t\tp[j + 1].name = tna;\r\n\t\t\t\tp[j + 1].score = ts;\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nvoid Student::search(Student *p, string name, int n)\r\n{\r\n\tint found = 0;\r\n\tfor (int i = 0; i &lt; n - 1; i++)\r\n\t{\r\n\t\tif (p[i].name == name) \r\n\t\t{\r\n\t\t\tfound = 1;\r\n\t\t\tp[i].display();\r\n\t\t}\r\n\t}\r\n\tif (!found) cout &lt;&lt; \"no result\" &lt;&lt; endl;\r\n}\r\n\r\nint main()\r\n{\r\n    Student Stud[5]={\r\n    Student(\"201024131101\", \"a\",99),\r\n    Student(\"201024131102\", \"b\",92),\r\n    Student(\"201024131103\", \"b\",99.5),\r\n    Student(\"201024131104\", \"c\",95),\r\n    Student(\"201024131105\", \"cc\",93)\r\n    };  //定义一个对象数组数组并初始化对象\r\n    Student *p=Stud;   //定义一个指向对象的指针\r\n    p-&gt;max(p);   //调用函数\r\n\tcout &lt;&lt; \"search b:\" &lt;&lt; endl;\r\n\tp-&gt;search(p, \"b\", 5);\r\n\tcout &lt;&lt; \"sort:\" &lt;&lt; endl;\r\n\tp-&gt;sort(p, 5);\r\n\tfor (int i = 0; i &lt; 5; i++)\r\n\t\tp[i].display();\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n最高成绩为：99.5\r\n学生姓名为：b\r\n学生学号为：201024131103\r\nsearch b:\r\nb 201024131102 92\r\nb 201024131103 99.5\r\nsort:\r\nb 201024131103 99.5\r\na 201024131101 99\r\nc 201024131104 95\r\ncc 201024131105 93\r\nb 201024131102 92\r\nPress any key to continue . . .", "Konwledge_Point": "数据的输入", "Question": ["建立一个学生类，存放5个学生的数据（学号、姓名、成绩）", ["1.通过构造函数实现5个学生数据的初始化", "\n\n", "2.设立一个input函数实现学生数据的输入", "\n\n", "3.设立一个函数sort实现学生按成绩降序排序", "\n\n", "4.设立一个函数MAX，在MAX中找出5个学生中成绩最高的，并输出学号", "\n\n", "5.设立一个函数search，实现按姓名查找学生（考虑可能存在同名学生）", "\n\n", "6.写出主函数对上述函数的调用", "\n\n", " 跪求大佬指点！！！\n"]], "Tag": "程序设计"}
{"Answer": "student a = new student(b, \"nan\", 18);\r\n你写成了a", "Konwledge_Point": "数据的输入", "Question": ["C#中如何调用构造函数时候，把构造函数的实参用键盘输入?", ["string b=Console.ReadLine();", "\n\n", "student a = new student(a, \"nan\", 18);", "\n\n", "这样是错误的，为什么呢，以及如何实践构造函数的实参用键盘输入呢？", "\n\n"]], "Tag": "程序设计"}
{"Answer": "需要用到java.util.Date, \r\n\r\n先建立一个Date object 把你的日期放进去。\r\n\r\n    Date date = new Date(year,month,date);\r\n\r\n\r\n然后把这个date object放到你的java.util.Calendar里\r\n不过因为calendar是singleton的， 所以拿Calendar的instance需要用getInstance method\r\n\r\n之后在call calendar里的get method就好了\r\n\r\n    Calendar calendar = Calendar.getInstance();\r\n    calender.setTime(date);\r\n    int dayOfWeek = calender.get(Calendar.DAY_OF_WEEK);\r\n\r\n\r\noutput dayOfWeek的值会是1到7 代表星期一到星期天\r\nCalender的get method的input是Calendar 的 static field, 不同的static field有不同的作用。 具体可以看Calender的javadoc\r\nhttp://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html", "Konwledge_Point": "数据的输入", "Question": ["如何使用eclipse从键盘输入一个日期，显示星期几", ["刚开始学习java，请求帮助！", "\n希望能从CSDN中获得一些知识"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个类&amp;#xff0c;然后创建一个对象数组&amp;#xff0c;分别存入每个同学的成绩&amp;#xff0c;&amp;#xff0c;再按冒泡排序或者选择排序排列&amp;#xff0c;最后直接输出即可&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入10名学生4门课程的成绩，分别求出每个学生的总成绩并按总成绩降序排序后输出完整的成绩表。", ["输入10名学生4门课程的成绩，分别求出每个学生的总成绩并按总成绩降序排序后输出完整的成绩表。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;maxValue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* arr, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len)&lt;/span&gt;&lt;/span&gt;{\n\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(arr &amp;#61;&amp;#61; null){\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n  }\n\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max &amp;#61; arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr) / &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max &amp;lt; arr[i])\n    {\n      max &amp;#61; arr[i];\n    }\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; max;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;minValue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* arr, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(arr &amp;#61;&amp;#61; null){\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n  }\n\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min &amp;#61; arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr) / &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (min &amp;gt; arr[i])\n    {\n      min &amp;#61; arr[i];\n    }\n  }\n\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; min;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;average&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* arr)&lt;/span&gt;&lt;/span&gt;{\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(arr &amp;#61;&amp;#61; null){\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n  }\n  &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; varAge &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr) / &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n  {\n    sum &amp;#43;&amp;#61; arr[i]\n  }\n  varAge &amp;#61; (&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;)sum/len;\n\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; varAge;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; aver &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入20个整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr)/ &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]); i&amp;#43;&amp;#43;)\n  {\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;arr[i]);\n  }\n\n  max &amp;#61; &lt;span class=\"hljs-built_in\"&gt;maxValue&lt;/span&gt;(arr);\n  min &amp;#61; &lt;span class=\"hljs-built_in\"&gt;minValue&lt;/span&gt;(arr);\n  aver &amp;#61; &lt;span class=\"hljs-built_in\"&gt;average&lt;/span&gt;(arr);\n\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;max&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, max);\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;min&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, min);\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;aver&amp;#61;%f\\n&amp;#34;&lt;/span&gt;, aver);\n\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入20个整数存入数组，分别编写求数组的最大值、最小值和平均值得函数，主函数实现数据的输入、调用函数分别输出最大值、最小值和平均值。", ["从键盘输入20个整数存入数组，分别编写求数组的最大值、最小值和平均值得函数，主函数实现数据的输入、调用函数分别输出最大值、最小值和平均值。"]], "Tag": "程序设计"}
{"Answer": "这题我会，MFC可以不用HOOK，HOOK很卡，先获取扫描枪PID，再根据PID读取输入缓存区内容\r\nhttps://blog.csdn.net/qq_39554698/article/details/99586564\r\nhttps://blog.csdn.net/qq_39554698/article/details/99592077", "Konwledge_Point": "数据的输入", "Question": ["VS2010 MFC 如何接收USB二维码扫描枪的数据", ["如题，扫描枪用键盘模式，不要用扫描枪厂家的api，用PreTranslateMessage或者其他办法截取扫码枪数据，还要与键盘区分开。另外，最好MFC程序最小化以后也能读usb扫码枪。完全后台全局读取，", "\n\n", "还有，如果连接有多个usb扫描枪，需要能够从下来列表内选中一个扫描枪。", "\n\n", "求类似的完整的工程，谢谢。", "\n\n", "这里有一个网友贴了一些代码，", "https://blog.csdn.net/zqckzqck/article/details/90613721", "\n这里还有一个网友做的C#全局钩子，符合我的要求，但是没有找到c++，哪位有，传一个qq 363643312，重谢！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主键约束就是唯一&lt;br /&gt;你要一对多&lt;br /&gt;请不要把学号设置为主键  你可以增加个字段 id 来唯一标识你的记录&lt;br /&gt;案例成功是因为他的sid不是主键吧&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["问题：对于一对多类型的数据，设置主键后，如何在数据表中输入？", ["在学习自己创建数据表并向其中输入数据，但是当输入如下数据时，遇到了问题，问题如下：", "\n", "\n", "创建数据表时，对sid设置了主键，在对行数据进行补充时，sid列无法重复输入sid=01的数据。", "目前了解到的是，主键是唯一的，这无可争辩，但是对于“一个学生学习多门课程，拥有多个成绩单”的一对多类型的数据结构，在创建数据表时该如何输入数据呢？必须通过多表联结吗？", "以下是资料中的案例，这个案例是成功了，其sid有多行重复。（可能有些模糊，请见谅）", "\n", "\n", "问题整理如下，即：", "1、在面对一对多的数据结构时，如何在数据表中输入数据？", "2、在不使用SQL语句的情况下，如何通过界面操作完成一对多数据额输入？", "请各位不吝赐教。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-commonlisp\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m,n,i,T,arr[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;],j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;T);\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(T)\n{\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;m&amp;gt;n?n:m;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i--)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(m%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; n%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    arr[j&amp;#43;&amp;#43;]&amp;#61;i;\n    T--;\n}\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;j;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,arr[i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["最大公约数，有姐妹会嘛", ["循环程序", "求两个正整数m，n的最大公约数（Greatest Common Divisor，简称GCD）。", "输入格式：首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试输入2个整数m,n (0<m,n<10^9)。", "输出格式：对于每组测试，输出m，n的最大公约数。", "输入样式：", "2", "63 36", "20 15", "输出样式：", "9", "5"]], "Tag": "程序设计"}
{"Answer": "&lt;h1&gt;方法1.&lt;/h1&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;Scanner s&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&amp;#61;s.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; b&amp;#61;s.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输入时a b之间加空格就行,&lt;br /&gt;s.nextInt()的意思就是 获取键盘的输入&amp;#xff1a;如果执行到了这一行&amp;#xff0c;那么程序会暂停&amp;#xff0c;等待你在控制台输入&amp;#xff0c;然后把输入的整数值赋给整形变量&lt;/p&gt;\n&lt;h1&gt;方法2.&lt;/h1&gt;\n&lt;p&gt;也可以使用Scanner的nextLine获取一整行&amp;#xff0c;然后再用split方法切割为单个int&amp;#xff0c;用的时候强转就好了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;String str1 &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; sc.nextLine()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nString[] intstr &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; str.split()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;处理多行&amp;#xff1a;&lt;/h1&gt;\n&lt;p&gt;多行的话加一个&lt;code class=\"language-javascript\"&gt;do-while&lt;/code&gt;语句包裹起来。&lt;code class=\"language-javascript\"&gt;while&lt;/code&gt;中判断输入的变量是否为非法值即可。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["刚学Java，请问如何实现连续读入多个数据呢？", ["比如说用户连续输入多个数字", "6    36", "5    60", "13    78", "1    380", "5    225", "1    683599", "该怎么读入呢？", "总不可能用多个Scanner sc=new Scanner(System.in);", "                         int variable=sc.nextInt();", "解决吧。", "我想自己写循环，但又看到每行数据有回车，不知道怎么下手。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;重置方法中设置this.InquireTransferList.idx &amp;#61; &amp;#39;&amp;#39;&amp;#34;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["实现了清空el-input里面的数据，但是在不刷新的情况下，有个bug，就是不能再次输入，请问怎样写可以实现该效果呢？", ["问题遇到的现象和发生背景", "\n", "想实现点击重置按钮清空v-model里面的数值，然后再次输入就不能输了，只有刷新整个页面后才能再次输入。", "\n", "问题相关代码，请勿粘贴截图", "\n", "<!-- 查询区域 -->", "\n        ", "<", "transition", " ", "name", "=", "\"slide-fade\"", ">", "\n            ", "<", "div", " ", "class", "=", "\"Inquire\"", " ", "v-show", "=", "\"showInquirebox\"", ">", "\n                ", "<", "el-row", " ", "class", "=", "\"inquireRow\"", ">", "\n                    ", "<", "el-col", " ", ":span", "=", "\"6\"", ">", "\n                        开始登记单号\n                        ", "<", "el-input", " ", "size", "=", "\"mini\"", " ", "class", "=", "\"inputbox\"", " ", "v-model", "=", "\"InquireTransferList.idx\"", ">", "</", "el-input", ">", "\n                    ", "</", "el-col", ">", "\n                    ……\n                    ", "<", "el-col", " ", ":span", "=", "\"4\"", " ", "offset", "=", "\"2\"", ">", "\n                        ", "<", "el-button", " ", "size", "=", "\"mini\"", " ", "type", "=", "\"primary\"", " @", "click", "=", "\"resetShowInquirebox\"", ">", "重置", "</", "el-button", ">", "\n                        ", "<", "el-button", " ", "size", "=", "\"mini\"", " ", "type", "=", "\"success\"", ">", "确定", "</", "el-button", ">", "\n                        ", "<", "el-button", " ", "size", "=", "\"mini\"", " ", "type", "=", "\"danger\"", " @", "click", "=", "\"cancelShowInquirebox\"", ">", "取消", "</", "el-button", ">", "\n                    ", "</", "el-col", ">", "\n                ", "</", "el-row", ">", "\n            ", "</", "div", ">", "\n        ", "</", "transition", ">", "\n\n", "\n", "                ", "//", " 查询框的值\n                InquireTransferList:{\n                    idx:", "''", ",\n                    idx2:", "''", ",\n                    createDate:", "''", ",\n                    transferDate:", "''", ",\n                    personID:", "''", ",\n                    createMan:", "''", ",\n                },\n", "\n", "methods", ":{\n            ", "resetShowInquirebox", "(", "){\n                ", "this", ".", "InquireTransferList", " = ", "''", ";\n            },\n        }\n", "\n", "运行结果及报错内容", "\n", "没报错，只是没有达到想要的效果，点击重置按钮后，不能输入了，除非刷新整个页面", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "有找过类似的，但是基本上是form表单类的。不适合我这个，我这个没用到form表单来做", "\n", "我想要达到的结果", "\n", "想要达到的效果就是，还是点击事情，清空后，不需要刷新页面后才能再次输入。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;s &amp;#61; input()\ns &amp;#61; [int(i) for i in s.split(&amp;#39; &amp;#39;)]\nresult &amp;#61; [0]*10\nfor i in s:\n    result[i] &amp;#43;&amp;#61; 1\nprint(&amp;#39; &amp;#39;.join([str(i) for i in result]))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["编程题 2. 统计元素个数", ["【问题描述】输入若干个0~9之间的数字，并统计输出0~9出现的次数，打印在一行", "\n\n", " ", "\n\n", "【输入形式】", "\n\n", " ", "\n\n", "输入多个数据（空格分隔）", "\n\n", " ", "\n\n", "【输出形式】", "\n\n", " ", "\n\n", "【样例输入】", "\n\n", " ", "\n\n", "8 8 6 5 2 1 0 9 7 1 6 9 6 6 9 2 3 3 2 9", "\n\n", "【样例输出】", "\n\n", " ", "\n\n", "1 2 3 2 0 1 4 1 2 4", "\n\n", " ", "\n\n", "【样例说明】", "\n\n", " ", "\n\n", "对于所给样例，输出的数据表明0出现了1次，1出现2次，2出现3次，...", "\n\n", " ", "\n\n", "【评分标准】"]], "Tag": "程序设计"}
{"Answer": "这个要自己去实现.这里给你一个演示代码. \r\n你自己修改一下就可以了. \r\n\r\n/* \r\n在许多Windows应用程序里面，最常见的是IE的地址栏，当我们在ComboBox的文本框内容时， \r\n它的下拉列表中自动列出最匹配的项目，并且将最匹配的项目显示在输入框中。   \r\n在Java中有个JComboBox类，它可以实现下拉选择或者输入选择。 \r\n但是它本身没有提供自动查找和完成功能。我们现在就来   “改装”这个类，使它具有自动查找和完成功能。   \r\n  \r\n改装思路如下：   \r\n1.先继承一个JComboBox类，将其setEditable为true.   这样的话，用户才可以在combobox上输入文字。   \r\n2.我们知道combobox的输入框是一个JTextField,   可以通过comboBox.getEditor().getEditorComponent()取得这个文本框。   \r\n3.为这个文本框加上一个KeyListener.   \r\n4.当用户在文本框中按键时，会解发keyReleased事件，我们在这个事件里写主要的实现自动查找和完成的代码。   \r\n思想就是这么简单，而自动查找的算法，任何一个对编程不陌生的人都可以写出。以下我列出完整的程序代码：   \r\n*/ \r\n\r\nimport   java.awt.event.ItemEvent;   \r\nimport   java.awt.event.ItemListener;   \r\nimport   java.awt.event.KeyEvent;   \r\nimport   java.awt.event.KeyListener;   \r\nimport   java.util.List;   \r\nimport   java.util.Vector;   \r\nimport   javax.swing.ComboBoxModel;   \r\nimport   javax.swing.DefaultComboBoxModel;   \r\nimport   javax.swing.JComboBox;   \r\nimport   javax.swing.JFrame;   \r\nimport   javax.swing.JTextField;   \r\n\r\npublic   class   JAutoCompleteComboBox   extends   JComboBox   {   \r\n        private   AutoCompleter   completer; \r\n\r\n        public   JAutoCompleteComboBox() \r\n        { \r\n                super(); \r\n                addCompleter(); \r\n        } \r\n\r\n        public   JAutoCompleteComboBox(ComboBoxModel   cm)   { \r\n                super(cm); \r\n                addCompleter(); \r\n        } \r\n        \r\n        public   JAutoCompleteComboBox(Object[]   items)   { \r\n                super(items); \r\n                addCompleter(); \r\n        } \r\n        \r\n        public   JAutoCompleteComboBox(List   v)   { \r\n                super((Vector)   v); \r\n                addCompleter(); \r\n        } \r\n\r\n        private   void   addCompleter()   { \r\n                setEditable(true); \r\n                completer   =   new   AutoCompleter(this); \r\n        } \r\n\r\n        public   void   autoComplete(String   str)   { \r\n                this.completer.autoComplete(str,str.length()); \r\n        } \r\n\r\n        public   String   getText()   { \r\n                return   ((JTextField)   getEditor().getEditorComponent()).getText(); \r\n        } \r\n\r\n        public   void   setText(String   text)   { \r\n                ((JTextField)   getEditor().getEditorComponent()).setText(text); \r\n        } \r\n\r\n        public   boolean   containsItem(String   itemString) \r\n        { \r\n                for   (int   i   =   0;   i   &lt;   this.getModel().getSize();   i++)   { \r\n                        String   _item   =   \" \"   +   this.getModel().getElementAt(i); \r\n                        if   (_item.equals(itemString)) \r\n                                return   true; \r\n                } \r\n                return   false; \r\n        } \r\n        \r\n        public   static   void   main(String[]   args) \r\n        { \r\n                JFrame   frame   =   new   JFrame(); \r\n                Object[]   items   =   new   Object[] \r\n                {   \"abc \",   \"aab \",   \"aba \",   \"hpp \",   \"pp \",   \"hlp \"   }; \r\n                DefaultComboBoxModel   model   =   new   DefaultComboBoxModel(); \r\n                JComboBox   cmb   =   new   JAutoCompleteComboBox(model); \r\n                model.addElement( \"abc \"); \r\n                model.addElement( \"aab \"); \r\n                model.addElement( \"aba \"); \r\n                model.addElement( \"hpp \"); \r\n                model.addElement( \"pp \"); \r\n                model.addElement( \"hlp \"); \r\n                frame.getContentPane().add(cmb); \r\n                frame.setSize(400,   80); \r\n                frame.setVisible(true); \r\n        } \r\n}   \r\n  \r\n/**   \r\n  *   自动完成器。自动找到最匹配的项目，并排在列表的最前面。 \r\n  *   \r\n  *   @author   Turbo   Chen \r\n  */ \r\n\r\nclass   AutoCompleter   implements   KeyListener,   ItemListener   {   \r\n\r\n        private   JComboBox   owner   =   null; \r\n        private   JTextField   editor   =   null; \r\n\r\nprivate   ComboBoxModel   model   =   null;   \r\n\r\n        public   AutoCompleter(JComboBox   comboBox) \r\n        { \r\n                owner   =   comboBox; \r\n                editor   =   (JTextField)   comboBox.getEditor().getEditorComponent(); \r\n                editor.addKeyListener(this); \r\nmodel   =   comboBox.getModel();   \r\n                owner.addItemListener(this); \r\n        } \r\n        \r\n        public   void   keyTyped(KeyEvent   e)   {   } \r\n\r\n        public   void   keyPressed(KeyEvent   e)   {   } \r\n\r\n        public   void   keyReleased(KeyEvent   e) \r\n        { \r\n                char   ch   =   e.getKeyChar(); \r\n                if   (ch   ==   KeyEvent.CHAR_UNDEFINED||Character.isISOControl(ch)||ch   ==   KeyEvent.VK_DELETE) \r\n                        return; \r\n\r\n                int   caretPosition   =   editor.getCaretPosition(); \r\n                String   str   =   editor.getText(); \r\n                if   (str.length()   ==   0) \r\n                return; \r\n                autoComplete(str,   caretPosition); \r\n        } \r\n        \r\n        /** \r\n          *   自动完成。根据输入的内容，在列表中找到相似的项目. \r\n          */ \r\n        protected   void   autoComplete(String   strf,   int   caretPosition) \r\n        { \r\n                Object[]   opts; \r\n                opts   =   getMatchingOptions(strf.substring(0,   caretPosition)); \r\n                if   (owner   !=   null)   { \r\n                model   =   new   DefaultComboBoxModel(opts); \r\n                        owner.setModel(model); \r\n                } \r\n                if   (opts.length   &gt;   0)   { \r\n                        String   str   =   opts[0].toString(); \r\n                        editor.setCaretPosition(caretPosition); \r\n                        if   (owner   !=   null)   { \r\n                                try   { \r\n                                        owner.showPopup(); \r\n                                }   catch   (Exception   ex)   { \r\n                                        ex.printStackTrace(); \r\n                                } \r\n                        } \r\n                } \r\n        } \r\n        \r\n        /** \r\n          *   \r\n          *   找到相似的项目,   并且将之排列到数组的最前面。 \r\n          *   @param   str   \r\n          *   @return   返回所有项目的列表。 \r\n          */ \r\n        protected   Object[]   getMatchingOptions(String   str) \r\n        { \r\n                List   v   =   new   Vector(); \r\n                List   v1   =   new   Vector(); \r\n                \r\n                for   (int   k   =   0;   k   &lt;   model.getSize();   k++)   { \r\n                        Object   itemObj   =   model.getElementAt(k); \r\n                        if   (   itemObj!=null   )   { \r\n                                String   item   =   itemObj.toString().toLowerCase(); \r\n                                if   (item.startsWith(str.toLowerCase())) \r\n                                        v.add(model.getElementAt(k)); \r\n                                else \r\n                                        v1.add(model.getElementAt(k)); \r\n                        }else \r\n                                v1.add(model.getElementAt(k)); \r\n                } \r\n                for   (int   i   =   0;   i   &lt;   v1.size();   i++)   { \r\n                        v.add(v1.get(i)); \r\n                } \r\n                if   (v.isEmpty()) \r\n                        v.add(str); \r\n                return   v.toArray(); \r\n        } \r\n        public   void   itemStateChanged(ItemEvent   event) \r\n        { \r\n                if   (event.getStateChange()   ==   ItemEvent.SELECTED) \r\n                { \r\n                        int   caretPosition   =   editor.getCaretPosition(); \r\n                        if   (caretPosition   !=   -1)   { \r\n                                try   { \r\n                                        editor.moveCaretPosition(caretPosition); \r\n                                }   catch   (IllegalArgumentException   ex)   { \r\n                                        ex.printStackTrace(); \r\n                                } \r\n                        } \r\n                } \r\n        } \r\n}   \r\n \r\n祝成功~~", "Konwledge_Point": "数据的输入", "Question": ["JCombobox如何实现编辑数据而去检索下拉列表中的值", ["如何实现JCombobox的如下功能： ", "\n1：在JCombobox中编辑值时检索item,如：item中值为：ab，ac，bb，cc 我们输入a时：下拉框展示 ab ac两条数据 输入b时展示ab，bb ", "\n2：Jcombobox是在点击他时会弹出下拉列表，如何实现在编辑时自动弹出下拉列表。（其实1中就包含了2）。 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环后面的分号去掉&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["java题：输入10个学生的成绩,输出高于平均分的学生成绩", ["为什么下面读取数组里的数读不出来，这道题目是先依次输入10个学生的成绩，然后求出平均值--这个简单。接下来要依次输出高于平均值的成绩，例如第3位同学的成绩为69，高于平均值"]], "Tag": "程序设计"}
{"Answer": "修改后的代码如下，测试满足要求。\r\n\r\n\r\n\r\n```\r\n int main()\r\n{\r\n\tprintf(\"你输入什么我打印什么，输入q退出\\n\");\r\n\tchar ch = getchar();\r\n\twhile (ch != 'q')\r\n\t{\r\n\t\tputchar(ch);\r\n\t\tprintf(\"你输入什么我打印什么，输入q退出\\n\");\r\n\t\t\r\n\t\tdo\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t} while (ch == '\\n');\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201704/01/1490998684_41871.png)", "Konwledge_Point": "数据的输入", "Question": ["有没有除了清空输入缓存的其他办法能解决这个问题。", ["#include", "\nint main(void)", "\n{", "\n    printf(\"你输入什么我打印什么，输入q退出\\n\");", "\n        char ch = getchar();", "\n    while (ch != 'q')", "\n    {", "\n        putchar(ch);", "\n        printf(\"你输入什么我打印什么，输入q退出\\n\");", "\n            ch = getchar();//这里会读入回车，除了清空输入缓存的办法就没有能跳过读入回车嘛", "\n            }", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "cin &gt;&gt; n;\r\n这里产生了一个回车\r\n导致第一次getline，得到的是空行。\r\n修改方法，在for循环前面加上一个\r\ngetline(cin, str);", "Konwledge_Point": "数据的输入", "Question": ["c++在循环中使用getline为什么第一次循环无法输入数据", ["#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    string str;\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++)\n    {\n        getline(cin, str);\n        cout << str << endl;\n    }\n    return 0;\n }\n\n", "\n\n", "请问大佬为什么该程序在循环中，第一次循环时，getline无法输入？", "\n在调试中发现在第一次执行循环时，执行到了getline(cin,str);", "\n但是无法输入。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\naxios({\n  &lt;span class=\"hljs-attr\"&gt;method&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;,\n  &lt;span class=\"hljs-attr\"&gt;url&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;/XXX&amp;#39;&lt;/span&gt;,\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {},&lt;span class=\"hljs-comment\"&gt;//这里面传参数&lt;/span&gt;\n  headers:{},&lt;span class=\"hljs-comment\"&gt;//这个里面传请求头&lt;/span&gt;\n}).then(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;res&lt;/span&gt;&amp;#61;&amp;gt;&lt;/span&gt;{\n\n}).catch(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;err&lt;/span&gt;&amp;#61;&amp;gt;&lt;/span&gt;{\n  \n})\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["Vue如何接受后端的POST请求传输的数据？", [" 后端提供的接口如下，post类型的，前端想要获取下面的json字符串，现在只知道get类型的如何获取。", "post类型的也使用axios可以吗？具体怎么写呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;方法1 用try捕获异常\ntry:\n   n &amp;#61; int(input())\n   print(n)\nexcept ValueError:\n    print(&amp;#34;输入错误&amp;#34;)\n\n\n方法2 用n.isdigit()判断输入数据是否为纯数字&amp;#xff08;此方法不支持负数&amp;#xff09;\nn &amp;#61; input().strip()\nif n.isdigit():\n   n &amp;#61; int(n)\n   print(n)\nelse:\n    print(&amp;#34;输入错误&amp;#34;)\n\n\n方法3 用正则表达式\nimport re\nn &amp;#61; input().strip()\nif re.match(r&amp;#39;[&amp;#43;-]?\\d&amp;#43;&amp;#39;,n):\n   n &amp;#61; int(n)\n   print(n)\nelse:\n    print(&amp;#34;输入错误&amp;#34;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python中如何判断数据类型进行执行不同程序", ["我需要输入数据为纯数字，如果我设定输入为int类型，当输入字符串时会报错，程序执行不下去。如何设定才能实现:当输入数字时自动转化为int类型，当输入字符串时，输出一个报错提示"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def isSquare(d):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(d ** &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;) ** &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; d\n\ns &amp;#61; &lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一组整数&amp;#xff0c;空格分割&amp;#xff0c;回车结束&amp;#xff1a;&amp;#34;&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;())\n&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; [i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in s &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; isSquare(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(i))]\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;完全平方数有:&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;无符合要求的数&amp;#xff01;&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["编程，接收用户键盘输入一组整数数据（空格分割，回车结束），计算并返回序列中的完全平方数。", ["\n", "编程，接收用户键盘输入一组整数数据（空格分割，回车结束），计算并返回序列中的完全平方数。", "输出结果如图"]], "Tag": "程序设计"}
{"Answer": "1，一般按行读，再做逻辑处理，读取所有的。\r\n2，看看有没有seek方法。跳过一段大小，某处即可。", "Konwledge_Point": "数据的输入", "Question": ["c++文件读取     如何读取已知数据后面的数而跳过前面的数不读", ["假如文件A", "\n1 23 2016 xiaoming", "\n2 56 2016 xiaohua", "\n3 22 2016 xiaodong", "\n4 55 2016 xiaoqian", "\n你想要读取xiaodong的信息 你已经定义了一个整形变量来存放3 如何读取那一行的数据 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果数据之间是空格分开的话倒是可以&amp;#xff0c;但是回车的话只能在确定数据数量的情况下实现&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言中如何一次性输入多组数据，并将多组数据一一处理后，一次性输出对应结果？", ["Description", "\n", "输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下：", "90", "100为A;", "80", "89为B;", "70", "79为C;", "60", "69为D;", "0~59为E;", "\n", "Input", "\n", "输入数据有多组，每组占一行，由一个整数组成。", "\n", "Output", "\n", "对于每组输入数据，输出一行。如果输入数据不在0~100范围内，请输出一行：“Score is error!”。", "\n", "Sample Input", "\n", "56", "67", "100", "123", "Sample Output", "\n", "E", "D", "A", "Score is error!"]], "Tag": "程序设计"}
{"Answer": "# 如果问题得到解决，请点我回答做上角的采纳\r\n```\r\n#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\n\tint a[6];\r\n\tprintf(\"请输入5个数，用空格隔开：\\n\");\r\n\tfor (int i = 0; i &lt; 5; i++)\r\n\t\tscanf(\"%d\", &amp;a[i]);\r\n\tint num = a[5] + 1;\r\n\tprintf(\"数组排序前输出：\\n\");\r\n\tfor (int i = 0; i &lt; 5; i++)\r\n\t\tprintf(\"%d \", a[i]);\r\n\tprintf(\"\\n\");\r\n\tint n = 5;\r\n\twhile (n != 6)\r\n\t{\r\n\t\tif (a[5] == num) n = 6;\r\n\t\tfor (int i = 0; i &lt; n - 1; i++)\r\n\t\t\tfor (int j = 0; j &lt; n - 1 - i; j++)\r\n\t\t\t{\r\n\t\t\t\tif (a[j] &gt; a[j + 1])\r\n\t\t\t\t{\r\n\t\t\t\t\tint t = a[j];\r\n\t\t\t\t\ta[j] = a[j + 1];\r\n\t\t\t\t\ta[j + 1] = t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tif (n == 5)\r\n\t\t\tprintf(\"数组排序后输出：\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"插入后的数组元素：\\n\");\r\n\t\tfor (int i = 0; i &lt; n; i++)\r\n\t\t\tprintf(\"%d \", a[i]);\r\n\t\tprintf(\"\\n\");\r\n\t\tif (n == 5)\r\n\t\t{\r\n\t\t\tprintf(\"请输入一个要插入的数：\\n\");\r\n\t\t\tscanf(\"%d\", &amp;num);\r\n\t\t\ta[5] = num;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "数据的输入", "Question": ["(C语言)定义一个数组a[6]，输入5个整型数据", ["定义一个数组a[6]，输入5个整型数据，把它们排好序后输出，再输入一个整数num，将num插入到已排好序的数组中，并输出这个数组的所有数。", "\n\n", "输入输出范例", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符串的split方法可以用来分割字符串&amp;#xff0c;形成一个列表。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;1110x0f2220x0f333&amp;#34;&lt;/span&gt;\nprint(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.split(&lt;span class=\"hljs-string\"&gt;&amp;#34;0x0f&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-meta\"&gt;#输出&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#[&lt;span class=\"hljs-string\"&gt;&amp;#39;111&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;222&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;333&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python如何分割db2数据库导出的数据，分隔符是0x0f", ["python如何按0x0f分割字符串？是db2导出的数据想用python分割一下。🥹🥹"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(cin&amp;gt;&amp;gt;n){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,a;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n            cin&amp;gt;&amp;gt;a;\n            sum&amp;#43;&amp;#61;a;\n        }\n        cout&amp;lt;&amp;lt;sum&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n } \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["求输入n个数据并求和", ["Problem Description", "任务很简单：", "给定若干个整数，请编程输出它们的和。", "Input", "输入包含多组测试用例。", "每组测试数据首先是一个正整数N，表示本组数据有N个整数。", "请处理到文件结束。", "Output", "请计算每组数据的和，每组输出占一行。", "Sample Input", "4 1 3 4 9", "5 10 2 30 4 50", "Sample Output", "17", "96", "Hint", "提示：", "1、从整体上看，输入数据属于哪个类型？", "2、对于每组数据，输入又属于哪一类？", "\n", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n;\n    cin>>n;\n    ", "while", "(n!=", "0", "){\n        ", "int", " sum=", "0", ",a;\n        ", "for", "(", "int", " i=", "0", ";i<n;i++){\n            cin>>a;\n            sum+=a;\n        }\n        cout<<sum<<endl;\n        cin>>n;\n    }\n    ", "return", " ", "0", ";\n } \n", "\n", "不知道为什么总是通不过"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; minValue &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;lt;minValue){\n            minValue &amp;#61; a[i];\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,minValue);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入任意4个不同的整数，输出其中最小的数", ["从键盘输入任意4个不同的整数，输出其中最小的数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写代码试一下就知道&lt;br /&gt;1, 3, 6,&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["这是一道数据结构的题，有懂的吗", ["这是一道数据结构的题，有懂的吗。这是一道数据结构的题，有懂的吗。这是一道数据结构的题，有懂的吗"]], "Tag": "程序设计"}
{"Answer": "先自问自答一下，不会是先把输入的内容保存下来, 如保存成txt, 然后在再次打开界面的时候，在读入txt吧？\r\n有没有其他方法？", "Konwledge_Point": "数据的输入", "Question": ["请问各位大佬：如何保存pyqt5界面的内容并在下次打开界面时显示保存的内容？", ["举个例子：界面A中有文本输入框、下拉框等控件，并相应地输入有文本、下拉选项等。", "\n                现需要关闭界面A，然后在下一次打开界面A时能够自动地显示前面的输入内容。", "\n                请问各位大佬如何能实现上述功能！感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改成这样试一下是什么效果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void text&lt;span class=\"hljs-constructor\"&gt;Box1_KeyPress(&lt;span class=\"hljs-params\"&gt;object&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;sender&lt;/span&gt;, KeyPressEventArgs &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt; &amp;#61; this.textBox1.Text.&lt;span class=\"hljs-constructor\"&gt;Trim()&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (e.KeyChar&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; pattern &amp;#61; &amp;#64;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\d*-\\d*-\\d*&amp;#34;&lt;/span&gt;;\n                Regex regex &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Regex(&lt;span class=\"hljs-params\"&gt;pattern&lt;/span&gt;)&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!regex.&lt;span class=\"hljs-constructor\"&gt;IsMatch(&lt;span class=\"hljs-params\"&gt;val&lt;/span&gt;)&lt;/span&gt;)\n                {\n                    MessageBox.&lt;span class=\"hljs-constructor\"&gt;Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;格式错误&amp;#xff01;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n                    judgement &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (judgement&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    {\n                        judgement &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                        &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; sendjson &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;work_order_no&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt;;\n                        requestorder(&lt;span class=\"hljs-string\"&gt;&amp;#34;http://xxx&amp;#34;&lt;/span&gt;, sendjson, &lt;span class=\"hljs-string\"&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;);\n                    }\n                }\n                textBox1.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n            }\n        }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C#Winform文本框输入后清空，再次输入就有问题，不清空手工清空就没问题，为什么？", ["我的步骤是", "1、随便输会提示格式错误", "2、然后输入正确的格式，如果有textBox1.Text = \"\"，他就会报第二张图的错误，如果注释掉，手工全选清除再输入就正确", "\n", "这个工单为空是接口给的错误信息，我直接那来调用的", "但是如果我注释掉textBox1.Text = \"\";然后手工全选删除，再输入后就能获取到工单了！请问为什么", "\n", "\n        ", "private", " void text", "Box1_KeyPress(", "object", " ", "sender", ", KeyPressEventArgs ", "e", ")", "\n        {\n            ", "if", " (e.KeyChar", " == ", "13", ")\n            {\n                ", "string", " pattern = @", "\"\\d*-\\d*-\\d*\"", ";\n                Regex regex = ", "new", " ", "Regex(", "pattern", ")", ";\n                ", "if", " (!regex.", "IsMatch(", "this", ".", "textBox1", ".Text.Trim()", "))\n                {\n                    MessageBox.", "Show(", "\"格式错误！\"", ")", ";\n                    judgement = ", "1", ";\n                }\n                ", "else", "\n                {\n                    ", "if", " (judgement", " == ", "1", ")\n                    {\n                        judgement = ", "0", ";\n                        ", "string", " sendjson = ", "\"work_order_no=\"", " + textBox1.Text;\n                        requestorder(", "\"http://xxx\"", ", sendjson, ", "\"POST\"", ");\n                    }\n                }\n                textBox1.Text = ", "\"\"", ";\n            }\n        }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#include&amp;lt;iostream&amp;gt;\nusing namespace std&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nint main() {\n    int t&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; i&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; j&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; k&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cin &amp;gt;&amp;gt; t&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    for(k &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; k &amp;lt;&amp;#61; t; k&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n        cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; i &amp;gt;&amp;gt; j&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        for(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; x &amp;lt;&amp;#61; n; x&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            cin &amp;gt;&amp;gt; a[&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        for(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; x &amp;lt; i; x&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            cout &amp;lt;&amp;lt; a[&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        for(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; j&lt;span class=\"hljs-comment\"&gt;; x &amp;gt;&amp;#61; i; x--) {&lt;!-- --&gt;&lt;/span&gt;\n            cout &amp;lt;&amp;lt; a[&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        for(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; n&lt;span class=\"hljs-comment\"&gt;; x &amp;gt; j; x--) {&lt;!-- --&gt;&lt;/span&gt;\n            cout&amp;lt;&amp;lt;a[&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;]&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        cout&amp;lt;&amp;lt;endl&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["7-17 部分逆置 (10 分)", ["7-17 部分逆置 (10 分)", "\n", "输入n个整数，把第i个到第j个之间的全部元素进行逆置，并输出逆置后的n个数。", "输入格式:", "\n", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试先输入三个整数n，i，j（0 < n <= 100，1 ≤ i < j ≤ n），再输入n个整数。", "输出格式:", "\n", "对于每组测试数据，输出逆置后的n个数，要求每两个数据之间留一个空格。", "输入样例:", "\n", "1", "7 2 6 11 22 33 44 55 66 77", "\n", "输出样例:", "\n", "11 66 55 44 33 22 77"]], "Tag": "程序设计"}
{"Answer": "不设置主键没法修改数据。原因是如果两条数据在数据库中所有字段的值一样。你修改其中一条，怎么知道你修改的是哪一条还是两条都修改呢？\r\n虽然数据库允许没有主键的表，但是任何情况，定义任何表，都必须有主键。", "Konwledge_Point": "数据的输入", "Question": ["mysql为什么不设主键就不能输入数据", ["不知道怎么搞得，创建数据表的时候如果不设置主键的话这个表就会变成read only，不能输入数据，加上主键之后才能输入。这个是权限没弄对的问题吗？怎么改成不设置主键也可以输入数据？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;实现代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bubble&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; N)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; ; j&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - j; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt; a[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n            {\n                temp &amp;#61; a[i];\n                a[i] &amp;#61; a[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                a[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; temp;\n            }\n        }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;], * p;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i]);\n    p &amp;#61; &amp;amp;a;\n    &lt;span class=\"hljs-built_in\"&gt;bubble&lt;/span&gt;(p,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, a[i]);\n    \n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输入输出结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/722317295256128.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何用“起泡法”对输入的10个字符按由小到大的顺序排列？", ["写一个函数，用“起泡法”对输入的10个字符按由小到大的顺序排列。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;m,n&amp;#61;map(int,input().split())\nmat&amp;#61;[]\nfor i in range(m):\n    mat.append(list(map(int,input().split())))\n \nl&amp;#61;[0]*m  \nmatT&amp;#61;[l[:]for i in range(n)] \n \nfor i in range(n):  #行\n    for j in range(m):  #列\n        matT[i][j]&amp;#61;mat[j][i] #行列互换\n        \nfor i in matT:\n    for j in i:\n        print(j, end&amp;#61;&amp;#39; &amp;#39;)\n    print()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; 你的改一下输出就可以了&amp;#xff0c;或者用array.T&amp;#xff0c;如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nm,n&amp;#61;map(int,input().split())\nmat&amp;#61;[]\nfor i in range(m):\n    mat.append(list(map(int,input().split())))\n    \nmat &amp;#61; np.array(mat) \nfor i in mat.T:\n    for j in i:\n        print(j, end&amp;#61;&amp;#39; &amp;#39;)\n    print()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n3 5\n 1 2 3 4 5\n 1 2 3 4 5\n 1 2 3 4 5&lt;/pre&gt;\n\n&lt;pre&gt;\n1 1 1 \n2 2 2 \n3 3 3 \n4 4 4 \n5 5 5 &lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python代码解答", ["从键盘输入一个m(2<=m<=6)*n(2<=n<=6)阶的矩阵，编程输出它的转置矩阵。", "\n\n", "输入格式:", "\n\n", "在第一行输入矩阵的行数m和列数n的值，在第二行按照矩阵格式输入矩阵的数据，同行数据之间用空格隔开。", "\n\n", "输出格式:", "\n\n", "矩阵格式输出，同行数据之间用一个空格隔开。", "\n\n", "输入样例:", "\n\n", "\n", "3 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5", "\n\n", "输出样例:", "\n\n", "\n", "1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5", "\n\n", "\n", "m,n=map(int,input().split())\nmat=[]\nfor i in range(m):\n    mat.append(list(map(int,input().split())))\n\nl=[0]*m  \nmatT=[l[:]for i in range(n)] \n\nfor i in range(n):  #行\n    for j in range(m):  #列\n        matT[i][j]=mat[j][i] #行列互换\n        \nprint(*matT)\n\n", "\n\n", " 请问应该怎么改这一段代码？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考 这个&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_42248502/article/details/119184610\" id=\"textarea_1639878908237_1639879077992_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_42248502/article/details/119184610&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["element表格点击一行怎么根据id查询获取数据到自动到弹框的对应文本框框里", ["点击一行数据根据表格里的固定id 查询其他数据填入弹框里的对应列表还有文本框 进行修改 最后提交数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你想做什么&amp;#xff1f;大写转小写&amp;#xff0c;小写转大写&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言程序为什么输入数据后回车就不动了，按ctrl+z在空格，它又会额外输入一个z,有人能解释吗?", ["\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<math.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " a,q=", "'Z'", ",w=", "'a'", ";\n    ", "while", "(", "scanf", "(", "\"%c\"", ",&a)!=EOF)\n    {\n        ", "if", "((a>=", "65", "&&a<=", "90", ")||(a>=", "97", "&&a<=", "122", "))\n        {\n            ", "if", "(a<=q)\n            {\n                q=a;\n            }\n            ", "if", "(a>=w)\n            {\n                w=a;\n            }\n        }\n    } \n    ", "if", "(q>=", "65", "&&a<=", "90", ")\n    q=q+", "32", ";\n    ", "if", "(w>=", "65", "&&a<=", "90", ")\n    w=w+", "32", ";\n    ", "printf", "(", "\"%c-%c\"", ",q,w);\n    ", "return", " ", "0", ";\n}\n", "\n", "程序为什么输入数据后回车就不动了，按ctrl+z在空格，它又会额外输入一个z,有人能解释吗?"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;main&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please input:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%c%f&amp;#34;&lt;/span&gt;, &amp;amp;i, &amp;amp;ch, &amp;amp;f);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;The input integer is : %d \\nThe input character is : %c\\n&amp;#34;&lt;/span&gt;, i, ch);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;The input float is : %f&amp;#34;&lt;/span&gt;, f);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["改正程序中的错误，使其得出正确结果", ["由用户输入三个数据，算法如下，请改正程序中的错误，使它能得出正确的结果。", "用户输入：12a4.2，程序输出：", "The input integer is : 12", "The input character is : a", "The input float is : 4.200000", "\n", "#include <stdio.h>", "\n", "main()", "{", "    int i;", "    char ch;", "    float f;", "    printf(\"Please input:\\n\");", "    scanf(\"%d %c%f\", &i, ch, &f);", "    printf(\"The input integer is : %d \\nThe input character is : %c\\n\", i, ch);", "    printf(\"The input float is : %f\", f);", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.getchar一次从缓冲区中读取一个字符&amp;#xff0c;并将字符从缓冲区中删除&lt;br /&gt;如果缓冲区中没有任何字符&amp;#xff0c;那么代码会发生阻塞&amp;#xff0c;等待缓冲区中有数据&lt;br /&gt;2.你在控制台下输入字符的时候&amp;#xff0c;字符不会直接进入缓冲区&amp;#xff0c;要等你键入回车之后才会一起进入缓冲区&lt;br /&gt;3.输入了7654之后&amp;#xff0c;&amp;#39;7&amp;#39;-&amp;#39;2&amp;#39;的结果是5&amp;#xff0c;switch里没有这个条件&amp;#xff0c;直接略过了&amp;#xff0c;然后是&amp;#39;6&amp;#39;-&amp;#39;2&amp;#39;&amp;#xff0c;匹配4,&amp;#39;4&amp;#39;&amp;#43;4&amp;#61;&amp;#39;8&amp;#39;&amp;#xff0c;输出一个8&lt;br /&gt;下一个是5&amp;#xff0c;匹配3&amp;#xff0c;输出一个8&amp;#xff0c;因为case 3没有加break&amp;#xff0c;标签穿透了&amp;#xff0c;所以继续输出&amp;#39;5&amp;#39;&amp;#43;2&amp;#xff0c;输出一个7&lt;br /&gt;最后一个是4&amp;#xff0c;匹配2&amp;#xff0c;还是输出8&amp;#xff0c;结束&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["可以详细解释输入字符7654后得出该答案的过程吗，还有解释一下这段代码的含义和结构，还有为什么7654↙一次性输入，那这样输入后具体是什么过程运行的呢", ["可以详细解释输入字符7654后得出该答案的过程吗，还有解释一下这段代码的含义和结构，还有为什么7654↙一次性输入，那这样输入后具体是什么过程运行的呢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# 编程&amp;#xff0c;接收用户键盘输入一组整数数据&amp;#xff08;空格分割&amp;#xff0c;回车结束&amp;#xff09;&amp;#xff0c;计算并返回序列中的完全平方数。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# &amp;#xff08;完全平方数指该数是某一整数的平方。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 要求判断是否是完全平方数的功能用函数isSquare(d)实现&amp;#xff0c;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 该函数的形式参数d是需判断的整数&amp;#xff0c;函数返回值为True或False。&amp;#xff09;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; math\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt;  &lt;span class=\"hljs-title function_\"&gt;isSquare&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; math.sqrt(d) &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(math.sqrt(d)):\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\nsqrt_num &amp;#61; []\ninput_num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一组整数&amp;#xff0c;空格分割&amp;#xff0c;回车结束&amp;#xff1a;&amp;#34;&lt;/span&gt;)\nnum_list &amp;#61; input_num.split()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; num_list:\n    c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; isSquare(c)&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n        sqrt_num.append(c)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(sqrt_num) !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;完全平方数有:&amp;#34;&lt;/span&gt;,sqrt_num)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;无符合要求的数&amp;#xff01;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果有帮助庆点个采纳呀~&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["接收用户键盘输入一组整数数据（空格分割，回车结束），计算并返回序列中的完全平方数。", ["编程，接收用户键盘输入一组整数数据（空格分割，回车结束），计算并返回序列中的完全平方数。", "（完全平方数指该数是某一整数的平方。要求判断是否是完全平方数的功能用函数isSquare(d)实现，该函数的形式参数d是需判断的整数，函数返回值为True或False。）", "程序运行结果类似下图所示： ", "\n", "\n", "\n", "\n", "\n", "请输入一组整数，空格分割，回车结束：12 0 36 1 66 121", "完全平方数有 [0, 36, 1, 121]", "\n", "\n", "\n", "请输入一组整数，空格分割，回车结束：11 7 23 66", "无符合要求的数！", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;num&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入数字个数&amp;#xff1a;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;alist&lt;/span&gt; &amp;#61; []\n&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;num&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入数值&amp;#xff1a;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;alist.append&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;alist&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有用请采纳&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["怎么将输入的多个数据放入一个空列表中，怎么将输入的多个数据放入一个空列表中？", ["怎么将输入的多个数据放入一个空列表中，怎么将输入的多个数据放入一个空列表中？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;  num[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;  name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; math;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; english;\n}stu[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;], st[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    FILE* fp;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no.&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, stu[i].num);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;name.&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, stu[i].name);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;math.&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;stu[i].math);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;english.&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;, &amp;amp;stu[i].english);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;d:\\\\exp.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//if ((fp &amp;#61; fopen(&amp;#34;c:\\exp&amp;#34;, &amp;#34;w&amp;#34;)) &amp;#61;&amp;#61; NULL)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nCan&amp;#39;t open this file\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fwrite&lt;/span&gt;(stu, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; student), &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, fp); &lt;span class=\"hljs-comment\"&gt;//修改 写入文件&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;d:\\\\exp.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;//fp &amp;#61; fopen(&amp;#34;c:\\exp&amp;#34;, &amp;#34;r&amp;#34;);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fread&lt;/span&gt;(&amp;amp;st[i], &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; student), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, fp);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n%s,%s,%.2f,%.2f\\n&amp;#34;&lt;/span&gt;, st[i].num, st[i].name, st[i].math, st[i].english);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入4个学生信息（学号，姓名，数学成绩，英语成绩），然后把它们存到磁盘的二进制文件c:\\exp.txt中。", ["\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "struct", " ", "student", "\n{\n    ", "char", " num[", "10", "];\n    ", "char", " name[", "10", "];\n    ", "float", " math;\n    ", "float", " english;\n}stu[", "5", "];\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i;\n    FILE *fp;\n    ", "for", "(i=", "0", ";i<", "4", ";i++)\n    {\n        ", "printf", "(", "\"no.\"", ");\n        ", "scanf", "(", "\"%s\"", ",stu[i].num);\n        ", "printf", "(", "\"name.\"", ");\n        ", "scanf", "(", "\"%s\"", ",stu[i].name);\n        ", "printf", "(", "\"math.\"", ");\n        ", "scanf", "(", "\"%f\"", ",&stu[i].math);\n        ", "printf", "(", "\"english.\"", ");\n        ", "scanf", "(", "\"%f\"", ",&stu[i].english);\n    }\n    ", "if", "((fp=", "fopen", "(", "\"c:\\exp\"", ",", "\"w\"", "))==", "NULL", ")\n    {\n        ", "printf", "(", "\"\\nCan't open this file\\n\"", ");\n        ", "exit", "(", "0", ");\n    }\n    ", "fclose", "(fp);\n    fp=", "fopen", "(", "\"c:\\exp\"", ",", "\"r\"", ");\n    ", "for", "(i=", "0", ";i<", "4", ";i++)\n    {\n        ", "fread", "(&stu[i],", "sizeof", "(", "struct", " student),", "1", ",fp);\n        ", "printf", "(", "\"\\n%s,%s,%.2f,%.2f\\n\"", ",stu[i].num,stu[i].name,stu[i].math,stu[i].english);\n    }\n    ", "fclose", "(fp);\n", "return", " ", "0", ";\n}\n", "\n", "我不知道咋写，但好像没代码题目审核不成功。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个应该是没有编译&amp;#xff0c;首先要对temp.c编译&amp;#xff0c;然后生成一个可执行的文件out:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;gcc temp.&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后执行该文件到data1.in即可&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;./&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt; &amp;lt; data1.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["linux 怎么通过输入重定向符： <   向c语言源程序输入数据", ["![img](", "https://img-mid.csdnimg.cn/release/static/image/mid/ask/419479100056117.png", " \"#left", "其中date1.in是保存的数据，temp.c是C语言源程序，为什么无法成功向源程序成功输入数据呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组存储&amp;#xff0c;然后循环遍历每有一次&amp;#xff0c;计数加一&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n,t&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,x;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;#61;&amp;#61;a[i])\n        t&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,t);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/878498256746152.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["温度统计 C++/C语言", ["现有一段时间的温度数据，请统计指定温度出现的次数。", "\n", "时间限制：1000", "内存限制：65536", "输入", "第一行一个整数n,表示温度数据的个数。（0 < n ≤ 200） 第二行n个整数，以空格分隔，每个整数表示一个温度，温度的范围大于等于0，小于等于40。 第三行一个整数，表示需要查询的温度t。(0 ≤ t ≤ 40)", "输出", "输出一个整数，表示温度t出现的次数。", "样例输入", "10", "18 19 21 17 20 18 21 21 22 21", "21", "样例输出", "4"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为character是mysql的保留字&amp;#xff08;关键字&amp;#xff09;&amp;#xff0c;如果需要使用保留字&amp;#xff08;关键字&amp;#xff09;当做字段名或表名时&amp;#xff0c;则必须要在增删改查语句的字段名或表名中添加反引号&amp;#xff0c;否则会造成字段名和保留字&amp;#xff08;关键字&amp;#xff09;冲突&amp;#xff0c;从而引发错误&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nlet &lt;span class=\"hljs-keyword\"&gt;sql&lt;/span&gt; &amp;#61; &amp;#34;insert into catinfo (kw, name, ename, &amp;#96;character&amp;#96;, detail, imgUrl, imgList) values (?, ?, ?, ?, ?, ?, ?);&amp;#34;;\ndb.query(&lt;span class=\"hljs-keyword\"&gt;sql&lt;/span&gt;, [kw, &lt;span class=\"hljs-type\"&gt;name&lt;/span&gt;, ename, &lt;span class=\"hljs-type\"&gt;character&lt;/span&gt;, detail, imgUrl, imgList], &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(err, result) {\n  // 继续实现你的逻辑\n})\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["MySQL插入数据一直提示语法错误", ["在node中使用MySQL语句插入数据一直报语法错误，这里语法哪里有问题吗"]], "Tag": "程序设计"}
{"Answer": "你能不能再懒点？发了这个问题[编写程序，从键盘输入10个int类型数，按从小到大顺序进行排序，然后输出](http://ask.csdn.net/questions/158855 \"编写程序，从键盘输入10个int类型数，按从小到大顺序进行排序，然后输出\")，都有答案了，整数改成浮点的自己都不改。", "Konwledge_Point": "数据的输入", "Question": ["编写程序从键盘输入10个float类型数存入一维数组a中，求这10个数的平均值，", ["编写程序从键盘输入10个float类型数存入一维数组a中，求这10个数的平均值，然后用函数aver实现平均值计算，输出这10个数以及平均值,要求数组和元素个数作为参数传递。", "\n声明函数avar:", "\n    (3)主函数输入10个数据，用for循环语句输入："]], "Tag": "程序设计"}
{"Answer": "鉴于lz是三零用户（0采纳，0声望，0悬赏），就不详细写代码了，请参考：\r\nhttps://www.cnblogs.com/a-zhi/p/5785598.html", "Konwledge_Point": "数据的输入", "Question": ["java要求从键盘上输入多个学生的信息，并保存在数组中，最后显示每个学生的信息，怎么做啊？", ["\n\n", "定义测试类TextStu1，在类的main()方法中创建Student类（实验8中定义的）的数组型实例对象。", "\n\n", "public class Student {", "\n\n", "public static int iCounter=0;\n\nString sName;\nString bGender;\nString iAge;\nString dHeight; \nString dWeight; \n", "\n\n", "public static void getCounter() {", "\n        System.out.println(\"学生总数:\"+ ++iCounter);", "\n    }", "\n\n", "public void getInfo(){\n    System.out.print(\"姓名:\"+sName);\n    System.out.print(\"   性别:\"+bGender);\n    System.out.print(\"   年龄:\"+iAge+\"岁\");\n    System.out.print(\"   身高:\"+dHeight+\"厘米\");\n    System.out.println(\"   体重:\"+dWeight+\"公斤\");\n}\n\npublic void setInfo(String n,String g,String a,String h,String w){\n    sName=n;\n    bGender=g;\n    iAge=a;\n    dHeight=h;  \n    dWeight=w;   \n}\npublic Student() {\n\n}\npublic Student(String n,String g,String a,String h,String w) {\n    sName=n;\n    bGender=g;\n    iAge=a;\n    dHeight=h;  \n    dWeight=w;   \n}\n", "\n\n", "}", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "内存访问错误，可能是对常量字符串的非法访问。例如 char * s  = \"hello\"，char s[]=\"hello\"，这个可是不一样的，常量字符串是不可修改的！字符数组\r\n就不一样了，是变量。", "Konwledge_Point": "数据的输入", "Question": ["关于数据结构字符串问题", ["编译运行成功，数据输入之后弹窗报错break：", "\nUnhandled exception at 0x002b14e1 in project4b.exe: 0xC0000005: Access violation reading location 0xcccc0161.", "\n下面是代码里求字串定位的函数：", "\nint Index(SString *S,SString *T)", "\n{int i,j,k,m,n;", "\nm=T->length;\\箭头定位在这里", "\nn=S->length;", "\nfor(i=0;i<=n-m;i++)", "\n{j=0;k=i;", "\nwhile(jch[k]==T->ch[j])", "\n{k++;", "\nj++;}", "\nif(j==m)return i;}", "\nreturn -1;}", "\n\n", "结构体定义：#define MaxStrSize 256", "\ntypedef struct{char ch[MaxStrSize];int length;}SString;", "\n\n", "主函数在Index（）函数前面部分：", "\nSString *s,*p,*q;", "\nint i,j,x,y;", "\nprintf(\"输入字符串\\n\");", "\nscanf(\"%s\",&s);", "\nprintf(\"输入需要替换的字符串\\n\");", "\nscanf(\"%s\",&p);", "\nprintf(\"输入替换后的字符串\\n\");", "\nscanf(\"%s\",&q);", "\n\n", "x=Index(s,p);", "\n\n", "怎么修改？", "\n要不要给s,p,q用malloc分配空间？要的话能不能根据结构给个示例", "\ns->length会自动获取吗？还是要写代码？要的话怎么写"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、获取用户id跟密码值&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;var&lt;/span&gt;  user &amp;#61; document&lt;span class=\"hljs-selector-class\"&gt;.getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;userId&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.value&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;var&lt;/span&gt;  psw&amp;#61; document&lt;span class=\"hljs-selector-class\"&gt;.getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.value&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2、爱好跟用户ID对其&amp;#xff0c;把爱好放到td里面去&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/989488540456135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["HTML点击提交按钮后有一个窗口会提示输入的信息", ["\n", "用户点击登陆后然后就会弹出一个弹窗，提示用户在用户ID和密码输入的内容，这个怎么做啊，做了一个晚上还是没做好", "还有怎么把那个爱好跟用户ID对其啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;document.getElementById(&amp;#34;fpdm&amp;#34;).value&lt;br /&gt;\n &lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["网页输入框中输入的内容，在网页源码中找不到对应内容", ["拿国税局这个页面来举例，我在输入框中输入了12345，一般来说在对应的input标签的value值就会体现出这个12345的值，但在这类网站中就是无法通过获取value的值来判断自己到底输入了什么内容，求大神解答一下这个问题，我要怎么样才能通过代码知道自己输入了什么内容", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "公交站的起点建议做一个one-hot编码，其他列，都先做一个归一化。", "Konwledge_Point": "数据的输入", "Question": ["BP神经网络输入矩阵问题", ["最近我要做一个用BP预测公交车站间运行时间的问题，到输入矩阵的时候我有点不解。", "\n考虑到的影响因素有公交站点的起点（或者他的序号）和终点，那这两列都是1-30的自然数啊，他们跟输出好像没什么关系啊，我如何把这两个自变量输入呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加循环控制就可以了。&lt;br /&gt;第一种方法&amp;#xff1a;执行3次&amp;#xff0c;用个for循环控制一下就可以了&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; x &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; x&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-comment\"&gt;//把原来的代码放在这里&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第二种方法&amp;#xff1a;根据输入来判断是否继续&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-comment\"&gt;//原来的代码放在这里&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;//新增代码&amp;#xff0c;在这里根据用户的输入来判断是否继续输入年月日进行计算&lt;/span&gt;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续(输入1继续)&amp;#xff1f; &amp;#34;&lt;/span&gt;; \n        cin &amp;gt;&amp;gt; op;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (op !&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["循环输入日期(年月日)，求当前日期为这一年的第几天，且至少循环运行三次", ["循环输入日期(年月日)，求出当前日期是这一年的第几天。", "要求：1.年月日必须用结构体表示；", "2.计算天数最好用swith语句；注意判断是否为闰年；", "3.至少循环运行3次，输入3个不同日期(必须得有闰年)，得出不同结果。", "要求1.2都弄出来了，3弄不出来，哪位帮我看看怎么弄?", "我写的代码", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;你可以参考下这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/leader_ww/article/details/104342481\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;Python Tkinter 练习2---加入Treeview来显示数据&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "数据的输入", "Question": ["如何使用tkinter中treeview控件实现鼠标坐标值输入和换行？", ["大佬们好，我是一名初学者，现在想利用画布canvas和treeview两个控件实现一个功能，鼠标在画布点击后，在treeview中显示坐标。当鼠标点第二下时，treeview保存原先坐标，自动换行，显示新的坐标。找了很多资料看的一头雾水，跪求大佬救救我！"]], "Tag": "程序设计"}
{"Answer": "xml布局文件代码\r\n```\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\"&gt;\r\n\r\n    &lt;EditText\r\n        android:id=\"@+id/et\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:hint=\"输入double类型数据\" /&gt;\r\n\r\n    &lt;Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/et\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:onClick=\"getDouble\"\r\n        android:text=\"确定\" /&gt;\r\n\r\n&lt;/RelativeLayout&gt;\r\n```\r\nMainActivity的代码：\r\n\r\n```\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private EditText et;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        et = findViewById(R.id.et);\r\n\r\n    }\r\n\r\n    public void getDouble(View view) {\r\n        String s = et.getText().toString().trim();//trim 去除首尾空格\r\n        try {\r\n            double d = Double.valueOf(s);\r\n            Toast.makeText(this, d + \"\", Toast.LENGTH_SHORT).show();\r\n        } catch (NumberFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n如果还有问题就留言哈！", "Konwledge_Point": "数据的输入", "Question": ["安卓 控件EditText 如何获取输入的duoble型的数据？", ["安卓 控件EditText 如何获取输入的duoble型的数据？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;scores &amp;#61; [&lt;span class=\"hljs-number\"&gt;37&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;93&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;61&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;37&lt;/span&gt;]\n\n&lt;span class=\"hljs-comment\"&gt;# 计算总分&lt;/span&gt;\ns &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; scores:\n    s &amp;#43;&amp;#61; i\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;总分为&amp;#xff1a;&amp;#39;&lt;/span&gt;, s)\n\n&lt;span class=\"hljs-comment\"&gt;# 计算平均分&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;平均分为&amp;#xff1a;&amp;#39;&lt;/span&gt;, s//&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(scores))\n\n&lt;span class=\"hljs-comment\"&gt;# 计算不及格人数&lt;/span&gt;\nu &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; scores:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;:\n        u &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;不及格人数为&amp;#xff1a;&amp;#39;&lt;/span&gt;, u)\n\n&lt;span class=\"hljs-comment\"&gt;# 计算及格人数&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;及格人数为&amp;#xff1a;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(scores)-u)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/867027156766174.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;望采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何用python，根据输入分数计算班级总分、平均分，并统计及格和不及格人数？", ["用python，根据输入分数计算班级总分、平均分，并统计及格和不及格人数。(不使用sum()函数)  scores =[37, 99, 58, 93, 49, 9, 50, 8, 61, 37]", "实例输出：", "总分为：501", "平均分为：50", "不及格人数为7", "及格人数为3"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &amp;lt;stdio.h&amp;gt;\nstruct student \n{\n    int id;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    float score[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    float ave;\n};\n//从键盘录入&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;个学生的成绩\nvoid input(struct student stu[])\n{\n    int i;\n    for (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        //printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生%d的学号、姓名、3门课成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %f %f %f&amp;#34;&lt;/span&gt;,&amp;amp;stu[i].id,stu[i].name,&amp;amp;stu[i].score[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],&amp;amp;stu[i].score[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],&amp;amp;stu[i].score[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n        stu[i].ave &amp;#61; (stu[i].score[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; stu[i].score[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#43;stu[i].score[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])/&lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt;;\n    }\n}\n\nint main()\n{\n    int i;\n    int maxindex &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    float ave&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    struct student stu[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    input(stu);\n    //计算最高分\n    for (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        ave &amp;#43;&amp;#61; stu[i].ave;\n        if(stu[i].ave &amp;gt; stu[maxindex].ave)\n            maxindex &amp;#61; i;\n    }\n    ave /&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;NO. name score1 score2 score3 average\\n&amp;#34;&lt;/span&gt;);\n    for (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %.2f %.2f %.2f %.2f\\n&amp;#34;&lt;/span&gt;,stu[i].id,stu[i].name,stu[i].score[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],stu[i].score[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],stu[i].score[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],stu[i].ave);\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;average&amp;#61;%.2f\\n&amp;#34;&lt;/span&gt;,ave);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;The highest score is : student %d,%s\\n&amp;#34;&lt;/span&gt;,stu[maxindex].id,stu[maxindex].name);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;his scores are:%.2f %.2f %.2f,average:%.2f&amp;#34;&lt;/span&gt;,stu[maxindex].score[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],stu[maxindex].score[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],stu[maxindex].score[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],stu[maxindex].ave);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入5个学生数据，计算总平均成绩，各自平均分，以及最高的学生数据", ["输入5个学生数据，计算总平均成绩，以及最高分的学生数据", "有5个学生，每个学生的数据包括学号、姓名、3门课程的成绩，从键盘输入10个学生数据，要求输出3门课程总平均成绩，以及最高分的学生数据（包括学号、姓名、3门课程平均成绩、平均分数）", "输入用例", "1 A 100 90 80", "2 B 90 85 70", "3 C 66 79 95", "4 D 80 75 99", "5 E 97 60 71", "输出用例", "NO. name score1 score2 score3 average", "1 A 100.00 90.00 80.00 90.00", "2 B 90.00 85.00 70.00 81.67", "3 C 66.00 79.00 95.00 80.00", "4 D 80.00 75.00 99.00 84.67", "5 E 97.00 60.00 71.00 76.00", "average=82.47", "The highest score is : student 1,A", "his scores are:100.00, 90.00, 80.00,average:90.00."]], "Tag": "程序设计"}
{"Answer": "已解决\r\n```\r\nprivate void jTextField3FocusGained(java.awt.event.FocusEvent evt){\r\n\t\ttry{\r\n\t\t\tif(this.jTextField1.getText().isEmpty()&amp;&amp;this.jTextField2.getText().isEmpty()){\r\n\t\t\t\tthrow new NoOprandException(\"请在两输入框内分别输入两个整数!\");\r\n\t\t\t}\r\n\t\t\tif(this.jTextField1.getText().isEmpty()||this.jTextField2.getText().isEmpty()){\r\n\t\t\t\tthrow new OnlyOneException(\"请在输入框内输入另一个整数!\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}catch(NoOprandException e1){\r\n\t\t\tJOptionPane.showMessageDialog(this, e1.getMessage());\r\n\t\t}catch(OnlyOneException e){\r\n\t\t\tJOptionPane.showMessageDialog(this, e.getMessage());\r\n\t\t}\r\n\t\tint n1 = Integer.parseInt(jTextField1.getText());\r\n\t\tint n2 = Integer.parseInt(jTextField2.getText());\r\n\t\tint n3 = n1 + n2;\r\n\t\tjTextField3.setText(n3 + \"\");\r\n\t}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["在myeclipse中的可视化界面监听器自定义异常", ["求教大佬~为什么系统无法弹出消息框表明我自定义的异常\"请在输入框内输入整数！\"", "\n\n", "要求:读入两个数据（Java Aplication命令行参数输入、或通过GUI输入），并计算它们的和，然后将和显示输出。编程自定义异常OnlyOneException（只有一个参数）与NoOprandException（无参数）。如果参数的数目不足，显示相应提示信息并退出程序的执行。", "\n\n", "1.带参数异常代码", "\n\n", "2.无参数异常代码", "\n\n", "3.计算器的界面", "\n\n", "4.监听器代码如下：", "\n\n", "```private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {", "\n        if (jTextField1.getText().equals(null)", "\n                || jTextField2.getText().equals(null)) {", "\n            try {", "\n                throw new OnlyOneException(\"请在输入框内输入整数!\");", "\n            } catch (OnlyOneException e) {", "\n                JOptionPane.showMessageDialog(this, e.getMessage());", "\n            }", "\n        } else if (jTextField1.getText().equals(null)", "\n                && jTextField2.getText().equals(null)) {", "\n            try {", "\n                throw new NoOprandException();", "\n            } catch (NoOprandException e1) {", "\n                e1.printStackTrace();", "\n            }", "\n        }", "\n\n", "    int n1 = Integer.parseInt(jTextField1.getText());\n    int n2 = Integer.parseInt(jTextField2.getText());\n    int n3 = n1 + n2;\n    jTextField3.setText(n3 + \"\");\n\n}\n\nprivate void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {\n    Scanner sc = new Scanner(System.in);\n    String n2 = sc.next();\n    jTextField1.setText(n2);\n}\n\nprivate void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {\n    Scanner sc = new Scanner(System.in);\n    String n1 = sc.next();\n    jTextField1.setText(n1);\n}\n", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不能不用数组吧&lt;br /&gt;第一次遍历你可以算出来平均数&lt;br /&gt;可是你没有算出来平均数&amp;#xff0c;怎么求低于平均分的同学个数呢&amp;#xff1f;&lt;br /&gt;所以老老实实用数组吧&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入10个同学成绩，求平均分及低于平均分的同学个数", ["我想用两个for循环来写这个程序，不用数组，来输入十个同学的成绩，输出平均数及低于平均数同学的个数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个问题唯一的难题就是运算法则&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;加法&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;(a &amp;#43; bi) &amp;#43; (c &amp;#43; di) &amp;#61; (a &amp;#43; c) &amp;#43; (b &amp;#43; d)i&lt;/code&gt;&lt;/li&gt;&lt;li&gt;减法&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;(a &amp;#43; bi) - (c &amp;#43; di) &amp;#61; (a - c) &amp;#43; (b-  d)i&lt;/code&gt;&lt;/li&gt;&lt;li&gt;乘法&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;(a &amp;#43; bi) * (c &amp;#43; di) &amp;#61; (a*c - b*d) &amp;#43; (b*c &amp;#43; a*d)i&lt;/code&gt;&lt;/li&gt;&lt;li&gt;除法&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;(a &amp;#43; bi) / (c &amp;#43; di) &amp;#61; ((a*c &amp;#43; b*d) / (c*c &amp;#43; d*d)) &amp;#43; ((b*c - a*d) / (c*c &amp;#43; d*d))i&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-type\"&gt;#include&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;iostream&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;std&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;                                   &lt;span class=\"hljs-operator\"&gt;//&lt;/span&gt; 默认构造函数\n        &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;    &lt;span class=\"hljs-operator\"&gt;//&lt;/span&gt; 拷贝构造函数 \n        &lt;span class=\"hljs-operator\"&gt;~&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Add&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Sub&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Mul&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Div&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;private&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Add&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Sub&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Mul&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt; \n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Div&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;/&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;/&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt;    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;::display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;cout&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#43; &amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;endl&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;;&lt;/span&gt;\n    \n    &lt;span class=\"hljs-variable\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;cout&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Please input [&amp;#43; - * /]: &amp;#34;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;cin&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Add&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Sub&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;Mul&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Div&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;c3&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n        &lt;span class=\"hljs-variable\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n            &lt;span class=\"hljs-variable\"&gt;cout&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Error character, pleae input again.&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;endl&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n    &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt; \n\n    &lt;span class=\"hljs-variable\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["定义一个复数类Complex，复数的实部Real与虚部Image定义为私有数据成员。", ["定义一个复数类Complex，复数的实部Real与虚部Image定义为私有数据成员。用复数类定义复数对象c1、c2、c3。友元函数add,sub,mul,div分别用于复数的加、减、乘、除法运算，用公有成员函数Dispaly()显示复数运算结果。在主函数中，实例化两个复数，并输入一个运算符，按照运算符选择相应的友远函数进行复数运算，然后输出结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最后一个例子给错了吧&amp;#xff1f;1260不是8的倍数。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;from&lt;/span&gt; functools import reduce\n\ndef gys(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;):\n    if b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: return a\n    return &lt;span class=\"hljs-built_in\"&gt;gys&lt;/span&gt;(b, a%b)\n\ndef &lt;span class=\"hljs-built_in\"&gt;gbs&lt;/span&gt;(a, b):\n    return &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(a*b / &lt;span class=\"hljs-built_in\"&gt;gys&lt;/span&gt;(a, b))\n\nT &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\nres &amp;#61; []\nfor i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(T):\n    nums &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;().&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;()\n    nums &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i) for i in nums]\n    res.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;reduce&lt;/span&gt;(gbs,nums))\nfor i in res:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;3 &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;5 &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;8 &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;105&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;2520&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["R7-4 多个数的最小公倍数分数 10", ["全屏浏览题目", "切换布局", "作者 usx程序设计类课程组", "单位 绍兴文理学院", "两个整数公有的倍数称为它们的公倍数，其中最小的一个正整数称为它们两个的最小公倍数。当然，n个数也可以有最小公倍数，例如：5，7，15的最小公倍数是105。", "输入n个数，请计算它们的最小公倍数。", "输入格式:", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。", "每组测试先输入一个整数n（2≤n≤20），再输入n个正整数（属于[1，100000]范围内）。这里保证最终的结果在int型范围内。", "输出格式:", "对于每组测试，输出n个整数的最小公倍数。", "输入样例:", "3", "3 5 7 15", "5 1 2 4 3 5", "8 7 15 12 3 4 6 4 9", "输出样例:", "105", "60", "1260"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;如有帮助&amp;#xff0c;请点击一下采纳谢谢&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;input(&amp;#39;请输入天气&amp;#xff1a;&amp;#39;)\n&lt;span class=\"hljs-comment\"&gt;# 1&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;今天是星期3,摄氏15.50度&amp;#xff0c;天气%s&amp;#39;&lt;/span&gt;%i)\n&lt;span class=\"hljs-comment\"&gt;# 2&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;今天是星期3,摄氏15.50度&amp;#xff0c;天气{}&amp;#39;&lt;/span&gt;.format(i))\n&lt;span class=\"hljs-comment\"&gt;# 3&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;今天是星期3,摄氏15.50度&amp;#xff0c;天气{i}&amp;#39;&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["新手入门，求解答疑惑", ["已知有字符串'星期", "，温度", "℃，天气*'，其中*会随用户输入的数据而变化。请通过三种方式格式化该字符串并输出结果，操作如下：", "\n", "（1） 使用%格式化字符串并输出；", "\n", "（2） 使用format()方法格式化字符串并输出；", "\n", "（3） 使用f-string格式化字符串并输出。", "\n", "运行结果如下：", "今天是星期3,摄氏15.50度，天气多云", "今天是星期3,摄氏15.50度，天气多云", "今天是星期3,摄氏15.5度，天气多云"]], "Tag": "程序设计"}
{"Answer": "# 问题解决的话，请点下采纳\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main()\r\n{\r\n\tvoid sort1(int*,int);\r\n\tvoid sort2(int*,int);\r\n\tint n, a[100], i;\r\n\t\r\n\tprintf(\"please decide input how many digits:\");\r\n\tscanf(\"%d\",&amp;n);\r\n\t\r\n\tprintf(\"please input n digits:\");\r\n\tfor(i = 0; i &lt; n; i++) scanf(\"%d\", &amp;a[i]);\r\n\t\r\n\tsort(a,n);\r\n\tprintf(\"sorted digits:\");\r\n\tfor(i = 0; i &lt; n; i++) printf(\"%-5d\", a[i]);\r\n\t\r\n\treturn 0;\t\r\n } \r\n \r\n void sort(int*p,int n)\r\n {\r\n \tint i, j, t;\r\n \tfor(i = n-1; i &gt;= 1; i--){\r\n \t\tfor(j = 0; j &lt; i; j++){\r\n \t\t\tif(*(p+j) &gt; *(p+i)){\r\n \t\t\t\tt = *(p+i);\r\n \t\t\t\t*(p+i) = *(p+j);\r\n \t\t\t\t*(p+j) = t;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```", "Konwledge_Point": "数据的输入", "Question": ["将冒泡排序过程单独写成一个函数，再在主函数中通过调用该函数实现对任意输入的多个数据（数据个数不超过100个）进行排序，并输出排序结果。  有大神帮忙吗   我是JAVA开发的 这个c不太懂", ["将冒泡排序过程单独写成一个函数，再在主函数中通过调用该函数实现对任意输入的多个数据（数据个数不超过100个）进行排序，并输出排序结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;SD卡用文件系统直接写入文件&amp;#xff0c;RAM映射到地址空间后&amp;#xff0c;直接内存赋值&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["STM32如何将串口数据存到外扩的RAM中或SD卡内", ["STM32如何将通过串口读取的数据读取到SD中，或者是外扩的RAM中"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这是想让改错还是补全还是重写&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["数据结构，链表问题，如何将代码补充完整", ["完成如下任务。程序一，用上述基本方法，实现如下要求，在 main 函数中，对线性表操 作时，只能使用 b）中定义的函数，不可以直接对线性表进行操作： 1）初始化线性表", "2）从键盘依次读入 10 个字符并保存到线性表中； 3）将线性表的第 6 个存储位置的数据元素删除； 4）将线性表的第 4 个存储位置之前插入一个数据元素，其值为字符 # ； 5）将线性表的所有所有数据元素打印输出； 6）将线性表销毁。", " 程序二，修改上述链式存储的线性表的数据元素类型定义和基本操作函 数实现，将线性表修改为一个学生信息表，每个数据元素至少需要包含：", "姓名、学号、年龄，实现如下要求：", "\n", "初始化线性表", "实现一个线性表的插入函数，从键盘输入至少 5 名同学的信息并加 入到线性表中，要求选择时间复杂度为 O(1)的算法来实现。（注：输 入学生信息时，可以先要求输入学生信息数量；再依次输入每个学 生信息。）", "实现一个打印输出函数，在全部同学的信息从键盘输入完毕后，将", "线性表中的同学信息按输入顺序在屏幕打印输出。", "使用 ListDelete 函数将存储了第二个输入的学生信息的结点删除", "实现一个结点删除函数，将线性表中年龄超过某个年龄值（从键盘", "输入一个年龄）的所有节点都删除；", "按输入顺序打印输出剩余结点。", "销毁这个线性表。", "一二为两个不同程序，代码如有错误请进行修改", "#include<stdio.h>", "#include<stdlib.h>", "#define MAXSIZE 100", "typedef int ElemType;", "typedef struct LNode", "{", " ElemType data; ", "\n", "struct LNode *next;", "}LNode,*LinkList;", "bool InitList(LinkList& L);", "bool DestroyList(LinkList& L);", "int  ListLength(LinkList L);", "bool GetElem(LinkList L, int i, ElemType &e);", "bool ListInsert(LinkList &L, int i, ElemType e);", "bool ListDelete(LinkList &L, int i,ElemType e);", "void ListPrint(LinkList L);", "int main()", "{", "\n", "}", "\n", "bool InitList(LinkList &L)", "{", "L=new LNode;", "L->next=NULL;", "return true;", "}", "bool DestroyList(LinkList& L)", "{        if(!L) return 0;", "    LNode *p= L;", "    while (p) {", "        LNode * q= p->next;", "        free(p);", "        p=q;", "    }", "    L=NULL;", "}", "int  ListLength(LinkList L)", "{", "    if(!L) return 0;", "          int len=0;", "          LNode *p= L->next;", "          while (p)  {", "              ++len;", "              p= p->next;", "          }", "          return len;", "    }", "bool GetElem(LinkList L, int i, ElemType &e)", "{", "    if(!L) return 0;", "        LNode *p= L->next;", "        int j=1;", "          while ( p && j<i )  {", "             p= p->next;  ++j;", "        }", "        if ( !p || j>i ) return 0;", "        e= p->data;", "        return true;", "    }", "    bool ListInsert(LinkList &L, int i, ElemType e)", "    {", "        if(!L) return 0;", "            LNode *p=L;   int  j=0;", "            while (p  &&  j<i-1)    {", "                p=p->next;    j++;", "            }", "            if ( !p || j>i-1 )  return 0 ;", "            LNode * s = (LNode *)malloc(sizeof(LNode));", "            if(!s) return 0;", "            s->data= e ;", "\n", "        ", "s", "->", "next", "= p->", "next", ";    p->", "next= s;\n    \n        return ", "true", ";\n    \n}\n", "\n", "bool ListDelete(LinkList &L, int i,ElemType e)", "{", "    if(!L) return 0;", "\n", "    LNode *p = L;\n    ", "if", "(!p->", "next) \n        return ", "0", ";     \n    LN", "ode", " * q= p->", "next;\n    ", "p", "->", "next", "= q->", "next;\n    ", "e", "= q->", "data", ";    \n    free(q);\n    return ", "true", ";\n", "\n", "}", "    void ListPrint(LinkList L)", "    {", "    LNode *temp=L;", "    while(temp->next)", "        {temp=temp->next;", "        printf(\"%c\",temp->data);", "         }", "    }", "\n    "]], "Tag": "程序设计"}
{"Answer": "1、无焦点获取需要在厂商的配合下设置成串口模式安装驱动成功后，在计算机管理属性-&gt;设备管理器-&gt;端口中查看有新增的一个端口，监听该端口，怎么获取数据，具体百度一下串口通信\r\n2、有输入框、有焦点 的情况下，将扫码枪设置成USB接口模式就可以了。扫描的内容会直接在可输入的地方打印出来", "Konwledge_Point": "数据的输入", "Question": ["获取原封不动的扫码数据 纯java编程", ["问题情况分两个：", "\n        1、扫码枪无焦点，扫码的到的数据直接上传方法处理后显示", "\n        重点是怎样无焦点获取扫码枪数据", "\n        2、有输入框、有焦点，但用户不能通过键盘输入，只能通过扫码枪获取数据", "\n        重点是用户不可输入但扫码枪可以", "\n        关键是获取原封不动的扫码枪数据，第一次做扫码枪，新手"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你新增页面是不是保存没判断&amp;#xff0c;空值也进行了保存&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["vue项目为什么我进了新增页面，不输入数据，直接回到主页面会新增一条空的数据", ["vue项目为什么我进了新增页面，不输入数据，直接回到主页面会新增一条空的数据"]], "Tag": "程序设计"}
{"Answer": "scanf(\"%d\", &amp;time);输入完后，输入缓冲区还会遗留下一个回车符\r\n然后执行while((temp=cin.get())!='\\n')，会直接读取遗留的回车，temp就等于'\\n'了，所以楼主感觉跳过了这句\r\n可以在scanf(\"%d\", &amp;time);后加上fflush(stdin);用来清空输入缓冲区", "Konwledge_Point": "数据的输入", "Question": ["C++，如何将未知长度的string输入数组", ["如代码，我发现程序在运行时会跳过cin.get，这是怎么回事啊？另外，关于将未知长度的字符串输入数组，还有什么好办法吗？", "\n\n", " int main()\n{\n    int time;\n    scanf(\"%d\", &time);\n    int count=0;\n    while(count < time)\n    {\n        string str;\n        char temp;\n        int i;\n\n        while((temp=cin.get())!='\\n')\n        {\n                str +=temp;\n        }\n        length =str.length();\n\n        char* preorder = new char[length];\n        char* inorder = new char[length];\n\n        for(i = 0;i<length;i++)\n        {\n            preorder[i]=str[i];\n        }\n\n        for(i=0;i<length;i++)\n        {\n            scanf(\"%c\", inorder[i]);\n        }\n\n        sort(preorder, inorder, length);\n\n        count++;\n        delete preorder;\n        delete inorder;\n    }\n    return 0;\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你输入true&amp;#xff0c;编译器把它当做字符串了&amp;#xff0c;输入格式错误。flag的值不变&amp;#xff0c;所以输出0&amp;#xff08;false的值是0&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么输入true,输出的是0？", ["#include ", "using namespace std;", "int main()", "{", "   bool flag=false;", "   cin>>flag;", "   cout<<flag<<endl;", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 如果有帮助的话&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;public &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; a {\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n        List&amp;lt;Student&amp;gt; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;ArrayList()&lt;/span&gt;;\n        Student student&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Student()&lt;/span&gt;;\n        Scanner scanner&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;\n        String studentName &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Line()&lt;/span&gt;;\n        \n&lt;span class=\"hljs-comment\"&gt;//        查找集合中是否有学生姓名与输入的字符串相等&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;i&amp;#43;&amp;#43;){\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;.get(i).get&lt;span class=\"hljs-constructor\"&gt;Name()&lt;/span&gt;.equals(name)){\n&lt;span class=\"hljs-comment\"&gt;//               如果输入的学生姓名存在与集合中&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//               则执行继续添加数据&lt;/span&gt;\n               &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; studentId &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n               &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; studentSex &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n               String studentPhone &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Line()&lt;/span&gt;;\n           }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n               &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的学生姓名不存在&amp;#34;&lt;/span&gt;);\n           }\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何在Java中用ArrayList集合添加学生数据，输入一个学生姓名，在该学生所在的的位置添加一条学生数据？", ["在ArrayList中，输入一个学生姓名，在该学生的位置添加数据"]], "Tag": "程序设计"}
{"Answer": "下面写了个模版给参考，resultMap只列举了2个字段id和create_time，根据实际修改即可\r\n```\r\n&lt;resultMap id=\"ResultMap\" type=“dto类型”&gt;\r\n    &lt;id column=\"id\" property=\"id\" jdbcType=\"VARCHAR\"/&gt;\r\n      &lt;result column=\"create_time\" property=\"createTime\" jdbcType=\"TIMESTAMP\"/&gt;\r\n&lt;/resultMap&gt;\r\n\r\n&lt;select id=\"selectByDate” parameterType=\"java.lang.String\" resultMap=\"ResultMap\"&gt;\r\n    select\r\n    * \r\n    from 表名\r\n    where  date_format(时间字段名,'%Y%m') =DATE_FORMAT(#{传入的时间,jdbcType=TIMESTAMP}\r\n , '%Y%m' )\r\n &lt;/select&gt;\r\n```", "Konwledge_Point": "数据的输入", "Question": ["传入一个时间串mybatis怎样查询当月的数据？xml里怎样写？", ["数据库mysql，xml文件里的sql语句怎样写？", "\n数据库mysql，xml文件里的sql语句怎样写？"]], "Tag": "程序设计"}
{"Answer": "try\r\n\t{\r\n\t\tpRst = pConn-&gt;Execute((_bstr_t)sql, NULL, adCmdText);\r\n\t}\r\n\tcatch (_com_error e)\r\n\t{\r\n\t\tAfxMessageBox(L\"输入格式有误，请重新输入\");\r\n\t\treturn false;\r\n\t}\r\n\t以上是执行过程中出错的代码！", "Konwledge_Point": "数据的输入", "Question": ["为什么从编辑框获取的中文字符在插入到数据库时会报错：格式输入错误！如何解决？？", ["sql.Format(L\"insert into LPUSER values(%d,\\'%s\\',\\'%s\\',\\'%s\\',%d,\\'%s\\',\\'%s\\','0','0','0',\\'%s\\','0','0','0')\",", "\n                n, m_edit_pass, m_edit_niname, m_edit_IdNum, A, m_edit_phone, m_edit_email, date);", "\n                m_edit_niname编辑框中获取了中文字符，在执行sql语句前，在vs2015自动窗口中看到的sql语句内容没问题，所要插入的数据列类型为Nvarchar2,但执行db.Execute(sql）时报错：格式有误！求解？", "\n                已把服务器、客户端、vs2015、国家字符集都改为了UTF-8! "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当然是内存里了。。。。。。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Dev C++编译器中,写入的数据保存在哪里。关闭编译器是不是会自动释放掉", ["#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " a;\n    ", "printf", "(", "\"请输入一个数:\"", ");", "scanf", "(", "\"%d\"", ",&a);\n    ", "printf", "(", "\"你输入的数为:%d\"", ",a);\n} \n", "\n", "  像这样写入一个数，会不会被保存在硬盘里。还是说在内存里面，关闭编译器，系统自动释放该内存？"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/qq_37602287/article/details/79895036", "Konwledge_Point": "数据的输入", "Question": ["急！！！用串口助手采集传感器的数据，为什么只有一列有数据而其他的都是0？？？", ["通过51单片机采集传感器的数据，然后再发送到PC端。不知道是不是代码哪里写错了，求大佬告知！！！", "\n\n", "#include \"reg52.h\"           //此文件中定义了单片机的一些特殊功能寄存器", "\n#include \"intrins.h\"", "\n\n", "typedef unsigned int u16;     //对数据类型进行声明定义", "\ntypedef unsigned char u8;", "\n#define SIZE 28", "\n\n", "u8  AD_Value[SIZE];", "\n//---定义使用的IO口---//", "\nsbit DOUT = P3^7;     //输出", "\nsbit CLK  = P3^6;     //时钟", "\nsbit DIN  = P3^4;     //输入", "\nsbit CS   = P3^5;     //片选", "\n\n", "/****************************************************************************", "函数名：SPI_Start", "\n*输  入：无", "\n*输  出：无", "\n*功  能：初始化触摸SPI", "\n*", "**************************************************************************/", "\n\n", "void SPI_Start(void)", "\n{", "\n    CLK = 0;", "\n    CS  = 1;", "\n    DIN = 1;", "\n    CLK = 1;", "\n    CS  = 0;", "\n}", "\n/****************************************************************************", "函数名：SPI_Write", "\n*输  入：dat：写入数据", "\n*输  出：无", "\n*功  能：使用SPI写入数据", "\n*", "**************************************************************************/", "\n\n", "void SPI_Write(u8 dat)", "\n{", "\n    u8 i;", "\n    CLK = 0;", "\n    for(i=0; i\n    {", "\n        DIN = dat >> 7;     //放置最高位", "\n        dat <<= 1;", "\n        CLK = 0;            //上升沿放置数据", "\n\n", "    CLK = 1;\n\n}\n", "\n\n", "}", "\n/****************************************************************************", "函数名：SPI_Read", "\n*输  入：无", "\n*输  出：dat：读取 到的数据", "\n*功  能：使用SPI读取数据", "\n*", "**************************************************************************/", "\n\n", "u8 SPI_Read(void)", "\n{", "\n    u16 i, dat=0;", "\n    CLK = 0;", "\n    for(i=0; i<12; i++)     //接收12位数据", "\n    {", "\n        dat <<= 1;", "\n\n", "    CLK = 1;\n    CLK = 0;\n\n    dat |= DOUT;\n\n}\nreturn (u8)(dat>>4);    \n", "\n\n", "}", "\n\n", "/****************************************************************************", "函数名：Read_AD_Data", "\n*输  入：cmd：读取的X或者Y", "\n*输  出：endValue：最终信号处理后返回的值", "\n*功  能：读取触摸数据", "\n*", "**************************************************************************/", "\nvoid Read_AD_Data(u8 cmd)", "\n{", "\n    u8 i,j;", "\n    CLK = 0;", "\n    CS  = 0;", "\n    SPI_Write(cmd);          //写入命令 ", "\n    for(i=6; i>0; i--);     //延时等待转换结果", "\n    CLK = 1;                //发送一个时钟周期，清除BUSY", "nop", "();", "nop", "();", "\n    CLK = 0;", "nop", "();", "nop", "();", "\n    for(j=0;j<SIZE;j++)", "\n    {", "\n        AD_Value[j]=SPI_Read();", "\n    }", "\n    CS = 1; ", "\n}", "\n\n", "/*.....................串口初始化....................*/", "\nvoid rs232_init()", "\n{ ", "\n        TMOD=0x20;  //定时器T1，工作在方式2", "\n        TH1=0XF3;           //计数器初始值设置，注意波特率是4800的", "\n        TL1=0XF3;", "\n        PCON=0X80;          //波特率加倍", "\n        TR1=1;      //启动定时器T1", "\n\n", "     //SCON=0X50;\n     SM0=0;\n     SM1=1; //串口工作在方式1\n     REN=1;    //先设定好工作方式，在打开允许接收\n     //------\n     ES=1;     //打开串口中断\n     EA=1;      //打开总中断\n", "\n\n", "}", "\n\n", "void main()", "\n{", "\n    rs232_init();", "\n    while(1)", "\n    {", "\n        u8 k;", "\n        Read_AD_Data(0xE4);    //AIN3外部输入", "\n        for(k=0;k<SIZE;k++)", "\n        {", "\n            SBUF=AD_Value[k];", "\n            while(!TI);", "\n            TI=0;", "\n            //break;", "\n        }", "\n        break;", "\n    }", "\n}", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sum你定义的是int&amp;#xff0c;而不是double&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["求n个数的均值 但不知道哪错了", ["均值", "描述：", "给出一组样本数据，计算其均值。", "\n", "输入：", "输入有两行，第一行包含一个整数n（n小于100），代表样本容量；第二行包含n个绝对值不超过1000的浮点数，代表各个样本数据。", "输出：", "输出一行，包含一个浮点数，表示均值，精确到小数点后4位。", "\n", "我什么地方错了啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以注释的方式给解释&amp;#xff0c;你参考一下&amp;#xff0c;按题目要求应该是需要支持多组数据合并的&amp;#xff0c;只不过举例是两组&amp;#xff0c;输入样例T应该不能为1吧&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;T &amp;#61; int(input(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入测试数据的组数&amp;#xff1a;&amp;#34;&lt;/span&gt;))  &lt;span class=\"hljs-meta\"&gt;#输入要合并的组数T&amp;#xff0c;直接转int&lt;/span&gt;\ntest_data_arr &amp;#61; [] &lt;span class=\"hljs-meta\"&gt;#记录测试数据数组&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(T):&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n    data_str &amp;#61; input(f&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第{i&amp;#43;1}组测试数据&amp;#xff1a;&amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-meta\"&gt;#输入测试数据元素个数以及各元素&lt;/span&gt;\n    test_data_arr.append([int(n) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; data_str.split(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;]]) &lt;span class=\"hljs-meta\"&gt;#用空格分割&amp;#xff0c;去除第一个元素&amp;#xff0c;并转为数字数组放到test_data_arr中&lt;/span&gt;\nprint(test_data_arr)\n&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_arr&lt;/span&gt; &amp;#61; [] \n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; data &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; test_data_arr: &lt;span class=\"hljs-type\"&gt;&lt;/span&gt;#遍历测试数据并合并数组\n    &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_arr&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_arr&lt;/span&gt;&amp;#43;data\n&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_arr&lt;/span&gt;.sort() &lt;span class=\"hljs-meta\"&gt;#合并后的数组升序排列&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;_arr&lt;/span&gt;: &lt;span class=\"hljs-meta\"&gt;#遍历数组打印&amp;#xff0c;以空格结尾&lt;/span&gt;\n    print(i, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\b &amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-meta\"&gt;#回退一个空格&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/354357277946175.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;中间打印了一下中间状态的数组做对比&amp;#xff0c;如有帮助&amp;#xff0c;请采纳&amp;#xff01;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["python简单的归并", ["已知数组A和B各有m、n个元素，且元素按值非递减排列，现要求把A和B归并为一个新的数组C，且C中的数据元素仍然按值非递减排列。", "例如，若A=(3 5 8 11)，B=(2 6 8 9 11 15 20)", "则C=(2 3 5 6 8 8 9 11 11 15 20)", "\n", "输入格式:", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。", "每组测试数据输入两行，其中第一行首先输入A的元素个数m（1≤m≤100），然后输入m个元素。第2行首先输入B的元素个数n（1≤n≤100），然后输入n个元素。", "\n", "输出格式:", "对于每组测试数据。分别输出将A、B合并后的数组C的全部元素。输出的元素之间以一个空格分隔（最后一个数据之后没有空格）。", "\n", "输入样例:", "1", "4 3 5 8 11", "7 2 6 8 9 11 15 20", "\n", "输出样例:", "2 3 5 6 8 8 9 11 11 15 20"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you are on Linux, I would try opening a file descriptor to /dev/your_serial_port. Your php script will probably need permissions (root) to read from this port.  You may have a tty group or something similar that allows read from this device.  In that case, I would recommend starting your script as root, and using &lt;code&gt;posix_setgid()&lt;/code&gt; possibly with &lt;code&gt;posix_getgrnam()&lt;/code&gt; to change your process group and not parade around as root.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$groupInfo = posix_getgrnam(\"tty\");\nif (! isset($groupInfo[\"gid\"])) {\n    // \"Invalid worker group.\n} else if (! posix_setgid($groupInfo[\"gid\"])) {\n    // Failed to change worker group. (privilege required)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I feel bad that you are probably on windows, so I dug around and I think you can open the file 'com1:' on windows and probably read serial data.  If that doesn't work, look for a cli program that can dump serial data to stdout and use something like proc_open to read data from it.  I have no windows computer to try anything ;(&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何使用nodejs读取串口数据并使用rs232电缆将输出发送到PHP服务器？", ["\n\n", "I need to read a serial port to get data using a RS232 cable, and want to send the output to a PHP server, but i found a way using node.js.\nI searched a lot and also found ", "a solution in PHP", " but it doesn't work for me.\nHow to do this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "et.addTextChangedListener(new TextWatcher(){\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count,\r\n\t\t\t\t\tint after) {\r\n\t\t\t\t// TODO Auto-generated method stub\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before,\r\n\t\t\t\t\tint count) {\r\n\t\t\t\t// TODO Auto-generated method stub\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void afterTextChanged(Editable s) {\r\n\t\t\t\t// TODO Auto-generated method stub\r\n\t\t\t\tif(et.getText().toString().compareTo(\"1\") == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ttv.setText(\"11\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(et.getText().toString().compareTo(\"2\") == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ttv.setText(\"222\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttv.setText(\"3333\"+et.getText());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tet.getText().toString() == \"2\"  测试了下比较不了  用这个et.getText().toString().compareTo(\"1\") == 0就可以", "Konwledge_Point": "数据的输入", "Question": ["安卓工程中如何实现edittext中输入一段文字 在textview中弹出另一段文字（不同文字）", ["各位大神 恕我还是安卓新手中的新手 可能这个问题对你们来说太浅显了", "\n我想 如果是用if语句 要怎么写代码呢 还是只用监听就好？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加入一小段异常处理代码就可以了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入你的年龄&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        a&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(a)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;免费&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;lt;&amp;#61; a &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请缴费10元&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &amp;lt; a:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请缴费15元&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;quit&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#就是这里&amp;#xff0c;我想在输入quit时退出&amp;#xff0c;但是只能输入int类型的 输入str类型就报错&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python 进行判断输入的数据时，输入的数据可以同时是str 和 int 类型的吗", ["\n```python\n\n", "while", " ", "True", ":\n    a = ", "input", "(", "'请输入你的年龄'", ")\n    ", "if", " a < ", "3", ":\n        ", "print", "(", "'免费'", ")\n    ", "elif", " ", "3", " <= a <= ", "12", ":\n        ", "print", "(", "'请缴费10元'", ")\n    ", "elif", " ", "12", " < a:\n        ", "print", "(", "'请缴费15元'", ")\n    ", "elif", " a == ", "'quit'", ": ", "#就是这里，我想在输入quit时退出，但是只能输入int类型的 输入str类型就报错", "\n        ", "break", "\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "判断下\r\nint buff[100];\r\nint idx = 0;\r\nwhile (idx &lt; 100) {\r\nint input;\r\ninput &lt;&lt; cin;\r\nif (input == 0) break;\r\nbuff[idx] = input;\r\nidx++;\r\n}", "Konwledge_Point": "数据的输入", "Question": ["c++的输入格式，怎莫表示", ["有多组测试数据，每组测试数据以包含一个整数n(100<=n<1000)", "\n输入0表示程序输入结束。", "\n怎么表示？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数据库里存的6个1&amp;#xff0c;你查的时候写了7个1&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C# 窗体应用程序 DataGridView 控件按条件查询前正常 但点击查询按钮后不显示数据", ["1.登陆后可以正常显示", "\n", "\n", "2.输入要查询ID", "\n", "\n", "3.点击查询后但不显示数据", "\n", "\n", "4.部分代码", " private void button1_Click(object sender, EventArgs e)", "        {", "\n", "        ", "if", " (textBox1.Text", " == ", "\"\"", ")\n        {\n            MessageBox.", "Show(", "\"提示：用户名不能为空！\"", ")", ";\n        }\n        ", "else", "\n        {\n            String connString = ", "\"Data Source=.;Initial Catalog=Passwprd autentication;Integrated Security=True\"", ";\n            SqlConnection conn = ", "new", " ", "SqlConnection(", "connString", ")", ";\n            conn.", "Open()", ";\n            SqlDataAdapter Tableadapter = ", "new", " ", "SqlDataAdapter(", "\"select * from 普通用户 where ID='\"", " + ", "textBox1", ".Text.Trim()", " + ", "\"'\"", ", conn);\n            ", "//查询数据库后，将数据源绑定到dataGridView控件；使用数据集DataSet和适配器DtataAdapter", "\n            DataSet ds = ", "new", " ", "DataSet()", ";\n            this.全部基本情况TableAdapter1.", "Fill(", "this", ".", "passwprd_autenticationDataSet1", ".全部基本情况)", ";\n            ", "//将获取的数据填充到数据集ds中", "\n            ", "//数据源绑定到dataGridView", "\n            dataGridView1.DataSource = ds.Tables", "[\"全部基本情况\"]", ";\n            conn.", "Close()", ";\n        }\n", "\n", "在网上搜，说是要DataPropertyName和数据列名字相同，但查看之后，名字是一样的，但还是不显示数据，是为什么呀", "\n"]], "Tag": "程序设计"}
{"Answer": "可以再放一个ListCtrl，里面放5列，每次输入都把当前数据添加进去，并且清空界面的输入框\r\n\r\nhttp://www.cnblogs.com/chinazhangjie/archive/2011/01/01/1923696.html\r\nhttp://www.docin.com/p-760673423.html\r\nhttp://www.cppblog.com/xmli/archive/2011/06/11/148482.html", "Konwledge_Point": "数据的输入", "Question": ["MFC 录入多组数据问题，求解答", ["\n\n", "如图，举个例子，我想输入4组作业信息", "\n每组作业信息包括作业名，作业编号，提交时间，运行时间，", "\n点一次按钮实现输入一组信息，输入完4组信息点击提交，请问怎么做"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;main&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-comment\"&gt;//输入长整型数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; x;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%ld&amp;#34;&lt;/span&gt;,&amp;amp;x);\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x){\n    &lt;span class=\"hljs-comment\"&gt;//每次取出最后一位放进数组a&lt;/span&gt;\n    a[i]&amp;#61;x%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    i&amp;#43;&amp;#43;;\n    x/&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//由于每次都是取最后一位放进数组&amp;#xff0c;输出时要逆序输出&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--){\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;);\n}\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一个长整型数将其各位上的数字存放在一个一维数组中输出这个一维数组中的数据在每位数字之间用逗号分隔。例如：输入整数 12345则输出应😰", ["#include <stdio.h>", "main()", "{int i;", " int a[30];", "for(i=0;i<30;i++)", "{scanf(\"%d\",&a[i]);", " printf(\"%d\",a[i]);}", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; year&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;year)!&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//这里判断输入的是否是整数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input error!\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(year &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//这里判断输入的是否是一个正整数&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input error!\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            (((year % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&amp;amp;&amp;amp;(year % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)) || (year % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)) ? &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Yes\\n&amp;#34;&lt;/span&gt;) : &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;No\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以借助scanf的返回值判断&amp;#xff0c;当你输入的符合要求时&amp;#xff0c;他返回一个整数&amp;#xff0c;因为当前输入个数为一个数&amp;#xff0c;所以它的返回值为1&amp;#xff0c;当然&amp;#xff0c;输入一个负数也是整数&amp;#xff0c;它也会返回1&amp;#xff0c;所以负数我们单独判断。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/959689209566142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有帮助的话采纳一下哦&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["闰年判断中输入数据不合法的处理方法", ["这是学校题库里发现的，我感觉有点意思，所以就尝试了一下，结果做不出来（我是大一新生），想要请教一下有缘人，下面是题目：", "闰年判断", "题目内容：", "从键盘任意输入一个公元年份（大于等于1），判断它是否是闰年。若是闰年输出“Yes”，否则输出“No”。要求对输入数据进行合法性判断。", "\n", "已知符合下列条件之一者是闰年：", "（1）能被4整除，但不能被100整除；", "（2）能被400整除。", "\n", "运行结果示例1：", "2015↙", "No", "运行结果示例2：", "2016↙", "Yes", "运行结果示例3：", "-123↙", "Input error!", "运行结果示例4：", "a↙", "Input error!", "\n", "输入格式: \"%d\"", "输出格式：", "是闰年，输出：\"Yes\\n\"", "不是闰年，输出：\"No\\n\"", "输入数据不合法，输出：\"Input error!\\n\"", "\n", "有没有人可以帮我解答一下？", "我在前面求闰年的程序中都没有什么问题，就是最后这个输入数据不合法这块不会搞，", "试了好几种方法输出结果都会不可避免的带上Yes或No。", "这是我最后一次尝试的代码：", "#include<stdio.h>", "#include<math.h>", "int main()", "{", "char x;", "x=getchar();", "scanf(\"%d\\n\",&x);", "x>0;", "if((x%4==0&&x%100!=0)||(x%400==0))", "{printf(\"yes\\n\",x);}", "else", "{printf(\"No\\n\",x);}", "if((x<=0)||(x>='a'&&x<='z')||(x>='A'&&x<='Z'))", "{printf(\"Input error!\\n\",x);}", "return 0;", "}", "我怀疑可能是需要使用do while语句，但我对do while语句不怎么会，所以没有尝试。", "希望有人可以帮我解答一下，指正一下我的错误，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这么改&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;  a,b;\n   float &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;;\n    char c1,c2;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %e&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c %c&amp;#34;&lt;/span&gt;,&amp;amp;c1,&amp;amp;c2);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;%d,b&amp;#61;%d,x&amp;#61;%f,y&amp;#61;%e,c1&amp;#61;%c,c2&amp;#61;%c\\n&amp;#34;&lt;/span&gt;,a,b,&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,c1,c2);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/669626700666161.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["scanf函数如何输入数据", ["问题遇到的现象和发生背景", "\n", "#include<stdio.h>", "int main()", "{", "    int a,b;", "    float x,y;", "    char c1,c2;", "    scanf(\"a=%db=%d\",&a,&b);", "    scanf(\"%f%e\",&x,&y);", "    scanf(\"%c%c\",&c1,&c2);", "    return 0;", "}", "如何输入使a=3,b=7,x=8.5,y=71.82,c1='A',c2='a'.", "\n", "现在变成这样了？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;eval(expression [ , globals [ , locals ]] )&lt;br /&gt;实参是一个字符串&amp;#xff0c;以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映&lt;br /&gt;射对象。表达式解析参数 expression 并作为 Python 表达式进行求值。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#43;2&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n3\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;[1,2,3]&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n[1, 2, 3]\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;[&amp;#39;1&amp;#39;,2,3]&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n[&amp;#39;1&amp;#39;, 2, 3]\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;)&lt;/span&gt;\nTraceback (most recent call last):\n  File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;\n  File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;\nNameError: name &amp;#39;abc&amp;#39; is not defined\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;abc&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n100\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;001&amp;#34;&lt;/span&gt;)&lt;/span&gt;\nTraceback (most recent call last):\n  File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;\n  File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1\n    001\n      ^\nSyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;a&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;}&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n{&amp;#39;姓名&amp;#39;: &amp;#39;张三&amp;#39;}\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a[&amp;#39;姓名&amp;#39;]&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&amp;#39;张三&amp;#39;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;eval会执行参数字符串的值&amp;#xff0c;你输入字母它就会按照变量解析&amp;#xff0c;找不到就报错。即使是数字用0开始也会报错&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["各位大捞，我觉得我还是没理解python的eval函数，为什么我用input输入汉字和字母时，前面放了eval就会报错。。", ["各位大捞，我觉得我还是没理解python的eval函数，为什么我用input输入汉字和字母时，前面放了eval就会报错。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main() {\n    double n;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,b,c,d;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    a&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;%10;\n    b&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)n%10;\n    c&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)((n-(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)n)*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n    d&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)((n-&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(n))*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)%10;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d %d&amp;#34;&lt;/span&gt;,a,b,c,d);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;())!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(ch);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;br /&gt; &lt;strong&gt;有帮助请&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["1、从键盘输入一个小数，通过计算，分别输出其十位、个位，十分位，百分数的数据。", ["1、从键盘输入一个小数，通过计算，分别输出其十位、个位，十分位，百分数的数据。", "\n", "提示：运用强制类型转化", "\n", "2、使用getchar函数依次从键盘输入LOVE，再通过putchar函数输出该数据LOVE。"]], "Tag": "程序设计"}
{"Answer": "&lt;h1 id=\"h1_scanf_ssname40_1649557086381\"&gt;scanf_s(&amp;#34;%s&amp;#34;,name,40);&lt;/h1&gt;\n&lt;p&gt;scanf_s是考虑了字符串安全的&amp;#xff0c;必须指定字符串数组name的长度&amp;#xff0c;避免输入的字符串长度大于允许的长度而出现越界写入&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么vs2022  输入字符串后 就退出程序了 我用C free运行都没问题", ["#include <stdio.h>", "#define PRAISE \"You are a extraordinary being.\"", "int main(void)", "{", "    char name[40];", "    printf(\"What's your name?\\n\");", "    scanf_s(\"%s\", name);", "    printf(\"Hello, %s. %s\", name, PRAISE);", "    return 0;", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "之前那个采用适配器模式\r\n便于重构\r\n\r\n看看这个怎么样\r\n\r\npublic static void main(String[] args) {\r\n\t\tJFrame frame = new JFrame();\r\n\t\tframe.setSize(500, 400);\r\n\t\t\r\n\t\tJPanel panel = new JPanel();\r\n\t\tframe.add(panel);\r\n\t\t\r\n\t\tDefaultTableModel model = new DefaultTableModel();\r\n\t\tmodel.addColumn(\"Column 1\");\r\n\t\tmodel.addColumn(\"Column 2\");\r\n\t\tmodel.addColumn(\"Column 3\");\r\n\t\tJTable table = new JTable(model);\r\n\t\tJScrollPane pane = new JScrollPane(table);\r\n\t\tpanel.add(pane);\r\n\t\t\r\n\t\t/*\r\n\t\t * 此处写入\r\n\t\t */\r\n\t\tString[][] values = new String[][]{\r\n\t\t\t\t{\"a\", \"b\", \"c\"},\r\n\t\t\t\t{\"d\", \"e\", \"f\"},\r\n\t\t\t\t{\"g\", \"h\", \"i\"}\r\n\t\t};\r\n\t\tfor(int i = 0; i &lt; values.length; i++) {\r\n\t\t\tmodel.insertRow(model.getRowCount(), values[i]);\r\n\t\t}\r\n\t\t\r\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\t\tframe.setVisible(true);\r\n\t\t\r\n\t}", "Konwledge_Point": "数据的输入", "Question": ["向表格中写入数据", ["如何在一个已画好的界面表格中写入二维数组？最好有源码，可以参考下！", "\n 哪位熟悉的朋友指教一下！感激不尽。"]], "Tag": "程序设计"}
{"Answer": "你可以建立一个字符串，然后更新这个字符串。\r\nselect * from a where id like 'String%'\r\n这样的话，你第一次输入3就可以查询首数字是3的id\r\n第二次更新字符串变32，查询就是32开头的\r\n不是太确定字符串好不好使，如果不行就可以把字符串再转化为int类型，方法不变\r\nselect * from a where id like 'int%'", "Konwledge_Point": "数据的输入", "Question": ["如何使用SQL语句查询以固定字符开头为条件的数据", ["现在有ID 0~99999 然后我这里有一个edittext如果输入的是3这时候查询ID为3和30000~39999的数据，然后再输入一个2 查询出ID为32000~32999之间的数据 这样类推。。求指点啊~~"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n#define N &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\ntypedef &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; name&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; math;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; chinese;\n    double aver;\n}STU;\nvoid &lt;span class=\"hljs-constructor\"&gt;InputData(STU &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;;\nSTU *&lt;span class=\"hljs-constructor\"&gt;FindMaxIndex(STU &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(void)\n{\n    STU classone&lt;span class=\"hljs-literal\"&gt;[N]&lt;/span&gt;;\n    STU *pmax;\n    &lt;span class=\"hljs-constructor\"&gt;InputData(&lt;span class=\"hljs-params\"&gt;classone&lt;/span&gt;,N)&lt;/span&gt;;\n    pmax&amp;#61;&lt;span class=\"hljs-constructor\"&gt;FindMaxIndex(&lt;span class=\"hljs-params\"&gt;classone&lt;/span&gt;,N)&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;maxinfo:%d %s %d %d %.lf\\n&amp;#34;&lt;/span&gt;,pmax-&amp;gt;id,pmax-&amp;gt;name,pmax-&amp;gt;math,pmax-&amp;gt;chinese,pmax-&amp;gt;aver);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \nvoid &lt;span class=\"hljs-constructor\"&gt;InputData(STU &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;num;i&amp;#43;&amp;#43;)\n    {\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%s%d%d&amp;#34;&lt;/span&gt;,&amp;amp;p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.id,p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.name,&amp;amp;p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.math,&amp;amp;p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.chinese);\n        p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.aver &amp;#61; (p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.math &amp;#43; p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.chinese)/&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;;\n    }\n}\n\nSTU *&lt;span class=\"hljs-constructor\"&gt;FindMaxIndex(STU &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; maxidx &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;num;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;.aver &amp;gt; p&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;maxidx&lt;/span&gt;]&lt;/span&gt;.aver)\n            maxidx &amp;#61; i;\n    }\n    return p&amp;#43; maxidx;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["从键盘输入N名学生的数据，并计算出每个学生的平均成绩，最后显示最高平均分的学生的信息，包括学号，姓名，两门课的成绩，平均分数（保留小数点后一位）。", ["#include <stdio.h>", "#define N 5", "typedef struct", "{", "    int id;", "    char name[20];", "    int math;", "    int chinese;", "    double aver;", "}STU;", "void InputData(STU *p,int num);", "STU *FindMaxIndex(STU *p,int num);", "int main(void)", "{", "    STU classone[N];", "    STU *pmax;", "    InputData(classone,N);", "    pmax=FindMaxIndex(classone,N);", "    printf(\"maxinfo:%d %s %d %d %.1f\\n\",pmax->id,pmax->name,pmax->math,pmax->chinese,pmax->aver);", "    return 0;", "}", "\n", "/* 请在这里填写答案 */"]], "Tag": "程序设计"}
{"Answer": "添加编辑框，组合框\r\nctrl+w映射两个成员变量，一个对应编辑框（比如m_edit1），一个对应组合框（比如m_combo1），添加一个按钮。\r\n双击按钮，编写\r\nUpdateData(true); \r\nm_combo1.AddString(m_edit1);", "Konwledge_Point": "数据的输入", "Question": ["vc++6.0如何实现在模态对话框编辑框中输入数据，单击确定按钮将数据添加到组合框按钮中！", ["vc++6.0如何实现在模态对话框编辑框中输入数据，单击确定按钮将数据添加到组合框按钮中！我'是个新手，请求详解！"]], "Tag": "程序设计"}
{"Answer": "BufferedReader in=new BufferedReader(System.in);\r\nSystem.out.println(in.readline().reverse);\r\n\r\n手写的，可能有错", "Konwledge_Point": "数据的输入", "Question": ["怎样从键盘读入一组数据并且把它们倒序输出来？", ["从键盘输入一组数据，如：“测试，JAVAEYE！”,输出的结果为：“！JAVAEYE，试测”。", "\n并且把它们存储到一个TXT文本中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第9行后面加个getchar()&amp;#xff0c;否则mark接收的字符是换行符。而num2会接收加号。后面的代码挡住了&amp;#xff0c;看不到&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["vs中输入三个数据，分别是数字，字符，数字。结果输入字符，程序直接结束了", ["\n", "vs中输入三个数据，分别是数字，字符，数字。结果输入字符，程序直接结束了"]], "Tag": "程序设计"}
{"Answer": "https://www.cnblogs.com/wuyoucao/p/4562341.html", "Konwledge_Point": "数据的输入", "Question": ["输入一个百分制的成绩t，将其转换成对应的等级，C语言实现", ["Problem Description", "\n输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下：", "\n90~100为A;", "\n80~89为B;", "\n70~79为C;", "\n60~69为D;", "\n0~59为E;", "\n\n", "Input", "\n输入数据有多组，每组占一行，由一个整数组成。", "\n\n", "Output", "\n对于每组输入数据，输出一行。如果输入数据不在0~100范围内，请输出一行：“Score is error!”。", "\n\n", "Sample Input", "\n56", "\n67", "\n100", "\n123", "\n\n", "Sample Output", "\nE", "\nD", "\nA", "\nScore is error!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义学生对象&amp;#xff0c;读取文件内容时&amp;#xff0c;写入对象中&amp;#xff0c;最后是一个对象集合。然后对对象集合中每个学生对象进行判断。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Java如何读取文件文本并且对数据内容进行比较", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "已解决，是我的一个小疏忽。", "Konwledge_Point": "数据的输入", "Question": ["C#dataGridView控件显示数据自动消失。", ["我在一个窗口中添加了两个dataGridView控件。但是当我要显示另外一个时，有一个里的就不显示。点击刷新的时候，刷新按钮操作的数据显示，点击查看按钮，刷新里面的数据就消失。两个按钮用到一个数据库的不同视图。谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;请根据你的数据存储情况修改应用代码中的路径。如果匹配数据文件较多&amp;#xff0c;建议将debug设置为False&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; os, sys, time\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; scipy &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; interpolate\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;CurveMatchPipe&lt;/span&gt;:\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;时序数据匹配流水线&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, sample_file, data_folder, max_var&amp;#61;&lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;, debug&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;构造函数\n        \n        sample_file     - 样本数据文件名\n        data_folder     - 数据仓库路径\n        max_var         - 偏离方差&amp;#xff08;数值越小&amp;#xff0c;曲线越相似&amp;#xff09;\n        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        data_csv &amp;#61; self.read_csv(sample_file)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; data_csv &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;样本数据文件%s缺少time列或aim列&amp;#xff0c;程序终止运行。&amp;#39;&lt;/span&gt;%sample_file)\n            sys.exit(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        \n        stamp, data &amp;#61; self.data_cleaning(*data_csv, &lt;span class=\"hljs-string\"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;)\n        self.sample &amp;#61; (data - data.mean()) / data.std()\n        self.data_folder &amp;#61; data_folder\n        self.max_var &amp;#61; max_var\n        self.debug &amp;#61; debug\n        self.time_cost &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;()\n        self.result &amp;#61; {\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;数据文件&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(),\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;起始时间&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(),\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;截止时间&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(),\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;起始索引&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(),\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;截止索引&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(),\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;偏离方差&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;()\n        }\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;read_csv&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, fn&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;读取数据文件&amp;#xff0c;返回时间戳数组和aim数组&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        stamp, data &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(), &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;()\n        &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(fn, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; fp:\n            lines &amp;#61; fp.readlines()\n            col_names &amp;#61; lines[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;time&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; col_names:\n                idx_time &amp;#61; col_names.index(&lt;span class=\"hljs-string\"&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;aim&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; col_names:\n                idx_aim &amp;#61; col_names.index(&lt;span class=\"hljs-string\"&gt;&amp;#39;aim&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;\n            \n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; line &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; lines[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]:\n                items &amp;#61; line.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n                stamp.append(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(items[idx_time]))\n                data.append(&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(items[idx_aim]))\n        \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; np.array(stamp), np.array(data)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;is_continuous&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, stamp&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;判断时间戳是否连续&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; np.where(np.diff(stamp) !&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;data_cleaning&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, stamp, data, method&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;数据清洗。对于缺值数据默认线性插值&amp;#xff0c;可选样条插值&amp;#xff08;cubic&amp;#xff09;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.is_continuous(stamp):\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; stamp, data\n        \n        f &amp;#61; interpolate.interp1d(stamp, data, kind&amp;#61;method)\n        stamp_new &amp;#61; np.linspace(stamp[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], stamp[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], stamp[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]-stamp[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        data_new &amp;#61; f(stamp_new) \n        \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; np.int32(stamp_new), data_new\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;match&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;遍历数据仓库&amp;#xff0c;匹配样本数据&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; fn &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; os.listdir(self.data_folder):\n            t0 &amp;#61; time.time()\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.debug:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;正在处理文件%s...&amp;#39;&lt;/span&gt;%fn, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; os.path.splitext(fn)[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.debug:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;忽略&amp;#xff1a;文件格式错误&amp;#39;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n            \n            data_csv &amp;#61; self.read_csv(os.path.join(self.data_folder, fn))\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; data_csv &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.debug:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;忽略&amp;#xff1a;缺少time列或aim列&amp;#39;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n            \n            stamp, data &amp;#61; self.data_cleaning(*data_csv, &lt;span class=\"hljs-string\"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;)\n            m, n &amp;#61; self.sample.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], data.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n            d &amp;#61; np.vstack([data[i:n-m&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(m)]).T\n            d_mean &amp;#61; d.mean(axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).reshape(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            d_std &amp;#61; d.std(axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).reshape(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            d &amp;#61; (d - d_mean) / d_std\n            diff &amp;#61; d - self.sample\n            variance &amp;#61; diff.var(axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            \n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; idx &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; np.argsort(variance):\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; variance[idx] &amp;gt; self.max_var:\n                    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n                \n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;数据文件&amp;#39;&lt;/span&gt;].append(fn)\n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;起始时间&amp;#39;&lt;/span&gt;].append(stamp[idx])\n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;截止时间&amp;#39;&lt;/span&gt;].append(stamp[idx&amp;#43;m])\n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;起始索引&amp;#39;&lt;/span&gt;].append(idx)\n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;截止索引&amp;#39;&lt;/span&gt;].append(idx&amp;#43;m)\n                self.result[&lt;span class=\"hljs-string\"&gt;&amp;#39;偏离方差&amp;#39;&lt;/span&gt;].append(variance[idx])\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.debug:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;完成&amp;#39;&lt;/span&gt;)\n            \n            t1 &amp;#61; time.time()\n            self.time_cost.append(t1-t0)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;report&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, out_file&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;&lt;/span&gt;):\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;打印DataFrame结构的匹配结果报告&amp;#xff0c;若提供输出文件名&amp;#xff0c;则生成excel文件&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n        \n        report &amp;#61; pd.DataFrame(self.result)\n        n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(self.time_cost)\n        total &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(self.time_cost)\n        mean &amp;#61; total/n\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; out_file:\n            report.to_excel(out_file, sheet_name&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;匹配结果&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;---------------------------------------------------------------------------------&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(report)\n        \n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;---------------------------------------------------------------------------------&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;共计处理%d个数据文件&amp;#xff0c;累计耗时%.3f秒&amp;#xff0c;单个文件平均用时%.3f秒&amp;#39;&lt;/span&gt;%(n, total, mean))\n    \n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    cmp &amp;#61; CurveMatchPipe(&lt;span class=\"hljs-string\"&gt;&amp;#39;data/samples/data.csv&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;data/storehouse&amp;#39;&lt;/span&gt;, max_var&amp;#61;&lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;, debug&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)\n    cmp.match()\n    cmp.report(&lt;span class=\"hljs-string\"&gt;&amp;#39;report.xlsx&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["求用python匹配数据段的代码", ["问题遇到的现象和发生背景", "\n", "我需要一个python代码，实现从数据库中匹配最相似的数据段。", "我输入的数据段与匹配的数据时间长度并不一定相等，之前了解到许多是用DTW的方法来实现。许多案例是计算两个数据之间的相似度，而我需要从一堆数据库中筛选出最为匹配的数据，起点和终点都未知。也许要完成这个功能单凭DTW并不能胜任，就请帮我实现。具体请见示例图：", "\n", "\n", "我想要达到的结果", "\n", "我将一个dataframe里面某个数据输入程序，程序从我的数据库文件夹里匹配出最为相似的数据段并输出时间，只需要告诉是哪个数据文件的哪一段即可。数据库文件夹里要么全部是CSV文件，要么全部是H5，你就当时CSV吧，我可以根据情况自行修改。由于数据库里文件较多，所以希望能提升匹配速度。如果对程序中的个别代码有疑惑，希望可以与你沟通。", "多写注释，不要贴图啊，我要直接ctrl C+V 运行，私信我。可以运行我就采纳了。", "\n", "有兴趣的私信我，我把测试数据发给你，效果好的话我会+200"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/qq_28954601/article/details/51464558", "Konwledge_Point": "数据的输入", "Question": ["先序遍历二叉树             ", ["描述", "\n给定一颗二叉树，要求输出二叉树的深度以及先序遍历二叉树得到的序列。本题假设二叉树的结点数不超过1000。", "\n\n", "输入", "\n输入数据分为多组，第一行是测试数据的组数n，下面的n行分别代表一棵二叉树。每棵二叉树的结点均为正整数，数据为0代表当前结点为空，数据为-1代表二叉树数据输入结束，-1不作处理。二叉树的构造按照层次顺序（即第1层1个整数，第2层2个，第3层4个，第4层有8个......，如果某个结点不存在以0代替），比如输入：", "\n\n", "1 2 0 3 4 -1得到的二叉树如下：", "\n\n", "1", "\n\n", "2 #", "\n\n", "3 4", "\n\n", "输出", "\n输出每棵二叉树的深度以及先序遍历二叉树得到的序列。", "\n\n", "样例输入", "\n2", "\n1 -1", "\n1 2 0 3 4 -1", "\n样例输出", "\n1 1", "\n3 1 2 3 4"]], "Tag": "程序设计"}
{"Answer": "password.h建议改成这样：\r\n```\r\n#include &lt;conio.h&gt;\r\n#include &lt;windows.h&gt;\r\n#include &lt;string&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nstring getpassword() {\r\n\tstring str = \"\";\r\n\tfor (;;) {\r\n\t\tchar t = getch();\r\n\t\tif (t == '\\r') {\t//我的电脑是\\r\r\n\t\t\tcout &lt;&lt; endl;\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\tstr += t;\r\n\t\t\tcout &lt;&lt; \"*\" &lt;&lt; flush;\r\n\t\t} \r\n\t}\r\n\treturn str;\r\n}\r\n```\r\n我的电脑是认为\\r是按下回车，具体情况看你自己的电脑。对于string不要直接用下标来添加数据，这样可能会溢出，用+=来添加数据就好了。注意string不是以\\0为结尾的。", "Konwledge_Point": "数据的输入", "Question": ["输入3个以上字符代码运行错误？", ["做了个输入密码回显星号的代码，但输入超过3个字符就运行错误，求助！", "\n\n", "password.cpp", "\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\n#include \"_INCLUDES_\\password.h\"\nstring pwd = \"\\0\";\nint main(int argc,char *argv[]) {\n pwd = getpassword();\n cout << \"Your password is:\\t\" << pwd << endl;\n return 0;\n}\n\n", "\n\n", "password.h", "\n\n", "#include <conio.h>\n#include <windows.h>\n#include <string>\n#include <iostream>\nusing namespace std;\nstring getpassword() {\n string str = \"\\0\";\n int i = 0;\n for (;;) {\n  str[i] = getch();\n  if (str[i] == '\\n') {\n   cout << endl;\n   str[i] = '\\0';\n   break;\n  }\n  else cout << \"*\" << flush;\n  ++ i;\n }\n return str;\n}\n\n", "\n\n", "求助各位大佬！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为输入后的回车并没有存到w【】中。一直在循环中。&lt;br /&gt;改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    char w[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    gets(w);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,w);\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (w[i] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(w[i] &amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; w[i] &amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)\n        {\n            n1&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(w[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; w[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n        {\n            n2&amp;#43;&amp;#43;;\n        }\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n%d&amp;#34;&lt;/span&gt;,n1,n2);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言的问题，输入数据后没有结果，请问各位是怎么回事？", ["学习的时候遇到问题，谢谢各位                      123 456 789 10 11 10 15 21 6 15 64135151"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;你的问题已经有小伙伴为您解答了问题&amp;#xff0c;您看下是否解决了您的问题&amp;#xff0c;可以追评进行沟通哦~&lt;br /&gt;\n&lt;br /&gt;\n如果有您比较满意的答案 / 帮您提供解决思路的答案&amp;#xff0c;可以点击【采纳】按钮&amp;#xff0c;给回答的小伙伴一些鼓励哦&amp;#xff5e;&amp;#xff5e;&lt;br /&gt;\n&lt;br /&gt;\nps:问答VIP仅需29元&amp;#xff0c;即可享受5次/月 有问必答服务&amp;#xff0c;了解详情&amp;gt;&amp;gt;&amp;gt;&lt;a href=\"https://vip.csdn.net/askvip?utm_source&amp;#61;1146287632\"&gt;https://vip.csdn.net/askvip?utm_source&amp;#61;1146287632&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用matlab怎么导入心电信号txt文件", ["心电原始数据，数据保存在文件“a01.txt～a20.txt”中，在MATLAB中通过如下语句读取：“load ‘a01.txt’;”从当前路径下的a01.txt文件读取心电原始数据到变量a01中，a01为二维数据，第一列为心电信号时间，第二列为心电信号幅度。", "\n\n", "3.2", "源数据的导入", "\n\n", "a=load ('E:\\a19.txt');%这儿选第19组数据。", "\n\n", "3.3", "绘出源心电信号的时域波形图和频谱图并进行分析", "\n\n", "%绘出时域波形图", "\n\n", "figure(1);", "\n\n", "subplot(2,1,1);", "\n\n", "plot(a(:,1),a(:,2));", "\n\n", "title('原始时域波形图');xlabel('时间 t/s');ylabel('幅值/A');", "\n\n", "%绘频域波形图", "\n\n", "y1=fft(a(:,2),1000);", "\n\n", "f1=100*(0:999)/1000;", "\n\n", "subplot(2,1,2);", "\n\n", "plot(f1,abs(y1));%画频谱图", "\n\n", "title('原始频域波形图');xlabel('频率 f/Hz');ylabel('幅值/db');", "\n\n", "我下载好了原始电信号的txt文件，上面的程序如何用matlab操作"]], "Tag": "程序设计"}
{"Answer": "官网上测了一下没你说的情况。我的也是window10.\r\n浏览器页面元素，不关注输入法，只关注输入的数据和事件触发。代码有问题吧。\r\n自己到官网上测一下，如果官网没有这种情况就是自己的问题。最多是浏览器的兼容问题。怎么和输入法联系的起来。\r\nhttps://element.eleme.cn/#/zh-CN/component/select\r\n![图片说明](https://img-ask.csdn.net/upload/202009/04/1599201038_72289.png)\r\n\r\n相同问题：\r\nhttps://www.cnblogs.com/cinser/p/12018961.html", "Konwledge_Point": "数据的输入", "Question": ["el-select开启了filterable搜素功能，使用中文输入法无效的问题", ["我在使用element的选择器el-select的时候，想要让选择器可以通过搜索快速", "\n匹配，通过添加官方提供的filterable可以实现这种效果：", "\n\n", "但是官方的filterable对中文搜索的支持不是太好，出现了这种的问题：", "\n\n", "也就是说我通过win10自带的输入法输入完拼音，按下空格，结束拼写，中文出现在了el-select组件内部，但是，它此时不会进行搜索", "\n\n", "我就随便输入了一个英文字母：", "\n\n", "可以看到，输入的瞬间才启用了搜索，或者：", "\n\n", "我在输入完中文之后，只是按了一下shift键，也可以看到el-select选择器启动了搜索功能,再或者：", "\n\n", "按了一下空格也可以启动搜索功能", "\n\n", "然后我换成英文输入法：", "\n\n", "每次输入都可以触发搜索，所以英文输入不存在任何问题", "\n\n", "所以可以看出，el-select组件，在win10自带的中文输入法下，我第一次输入", "\n拼音且按下空格出现中文的这一过程中，不会触发filterable搜索功能，", "\n只有第二次输入（只要是键盘有点击操作）才会触发搜索，这样的话是不", "\n怎么方便的，这意味着我每次使用中文搜索功能时，不能在输入完后就开始", "\n搜搜，必须多输入一点别的东西，通过删除才能进行搜索，有没有办法解决", "\n这个问题呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;#顺序查找&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;l&lt;/span&gt;&amp;#61;list(map(int,input(&amp;#39;请输入十个整数&amp;#xff1a;&amp;#39;).split()))\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;int(input(&amp;#39;请输入要查找的数据&amp;#xff1a;&amp;#39;))\n&lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(l)):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; l[i]&amp;#61;&amp;#61;x:\n        &lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;1\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;找到了&amp;#xff0c;在第&amp;#39;&lt;/span&gt;,i&amp;#43;1,&lt;span class=\"hljs-string\"&gt;&amp;#39;个&amp;#39;&lt;/span&gt;)\n        break\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;&amp;#61;0:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;没找到&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python顺序和搜索:给出十个整数，然后对键盘输入数据进行查找，分别用顺序查找，二分查找", ["给出十个整数，然后对键盘输入数据进行查找，分别用顺序查找或者二分查找"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;redis的服务器是云服务器或者虚拟机吗&amp;#xff1f;redis.conf里面bind修改为0.0.0.0&amp;#xff0c;protected-mode设置为no。&lt;/li&gt;&lt;li&gt;redis是否设置了远程访问密码。&lt;/li&gt;&lt;li&gt;确定redis服务器的ip和本地路由器某设备ip没有冲突。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "数据的输入", "Question": ["Python脚本向redis插入数据报错", ["用python写了个插入redis的脚本，这么简单，都报错，mac电脑，已经尝试了很多办法都没法解决", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\nvoid main()\r\n{\r\n\tlong a,b,s,i;\r\n\tint n,k=0,j,t,m;\r\n\tscanf(\"%d\",&amp;n);//修改\r\n\twhile(n)//修改\r\n\t{\r\n\t\ts=0;\r\n\t\tscanf(\"%ld%ld\",&amp;a,&amp;b);\r\n\t\tfor(i=a;i&lt;=b;i++)\r\n\t\t{\r\n\t\t\tt=i;j=0;\r\n\t\t\twhile(t)\r\n\t\t\t{\r\n\t\t\t\tm=t%10;\r\n\t\t\t\tt=t/10;\r\n\t\t\t\tif(m==6)j=1;\r\n\t\t\t\tif(m==9)\r\n\t\t\t\t{\r\n\t\t\t\t\tj=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ts+=j;\r\n\t\t}\r\n\t\tprintf(\"%ld\\n\",s);\r\n\t\tk++;\r\n\t\tif(k&gt;=n)break;\r\n\t\tn--;//修改\r\n\t}\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["c语言多组数据测试问题？(O_O)", ["在下编程大门的新手一枚，遇到了这样一道题：2016年，小豪喜欢数字6，于是一个数的某一位有数字6他都喜欢（比如2016个位是6，所以小豪喜欢2016这个数），但是小豪讨厌9（因为9的颜值太低），任意一个数，只要某个数字是9他都不喜欢（就算这个数有6，比如6699这个数就是小豪不喜欢的）。那么问题来了，现在给一个a,b，求a到b之间有多少个数是小豪喜欢的。", "\n先输入一个T表示测试数据组数(T<=50)", "\n每组数据输入a,b(0", "\n输出小豪喜欢数的个数。", "\n代码如下：", "\n#include", "\nvoid main()", "\n{", "\n    long a,b,s,i;", "\n    int n,k=0,j,t,m;", "\n    while(scanf(\"%d\",&n)==1)", "\n    {", "\n        s=0;", "\n        scanf(\"%ld%ld\",&a,&b);", "\n        for(i=a;i<=b;i++)", "\n        {", "\n        t=i;j=0;", "\n        while(t)", "\n        {", "\n            m=t%10;", "\n            t=t/10;", "\n            if(m==6)j=1;", "\n            if(m==9)", "\n            {", "\n                j=0;", "\n                break;", "\n            }", "\n        }", "\n        s+=j;", "\n        }", "\n        printf(\"%ld\\n\",s);", "\n        k++;", "\n        if(k>=n)break;", "\n    }", "\n}", "\n经过多次测试，发现第二组数据就开始出了问题，猜测应该是初始化的问题，可是经过小白2天时间的思考，并没有什么问题(O_O)。这样的问题已经积累了好几道题了。实在是无能为力了，希望在这里找到大神指点迷津让我开窍。谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码也不完整啊&amp;#xff0c;怎么确定就是因为输入多次s造成的呢&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C++输入多组字符串数据时程序崩溃如何解决？", ["在devc上运行，当n=1时数据可正常处理，n=2时程序就崩溃了，可我查到的有的输入多组数据的方法在C++中也是使用cin", "\n", "求解出错原因，输入如图：", "\n", "\n", "完整代码：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;建一个JAVABEAN&amp;#xff0c;把csv的内容一行一行读到JAVAbean里面&amp;#xff0c;然后添加到集合&amp;#xff0c;接下来的事情就是操作集合了。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["Citespace如何对csv格式数据进行可视化操作？", ["Citespace如何对csv格式数据进行可视化操作？", "\n\n", "有csv格式的数据，希望利用citespace对其进行操作，但是全网也没找到方法，看着citespace是支持导入csv数据的…"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目说了大于等于1&amp;#xff0c;不在这个范围的就是不合法的&lt;br /&gt;在输入后可以加一句这个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input error!&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言中如何判断输入的数据是否合法", ["这种题怎么判断输入的数据是否合法呢，只会判断是否为闰年，不知道怎么判断他的合法性，真的不知道伤心"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在idea的配置文件中加 -Deditable.java.test.console&amp;#61;true&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["如何让 IDEA单元测试中控制台支持 System.in 的输入", ["在IntelliJ IDEA 教育版进行单元测试时，控制台不支持 System.in 输入", "\n", "我写的代码如下：", "\n", "@Test", "\n ", "void", " ", "main", "()", " {\n     ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n     ", "int", " ", "judge", " ", "=", " ", "1", ";\n     ", "while", " (judge == ", "1", ")\n     {\n         ", "int", " ", "n", " ", "=", " scanner.nextInt();\n         System.out.println(", "\"输入的数为：\"", " + n);\n         ", "if", " (n == ", "0", ")\n             judge = ", "0", ";\n     }\n  }  \n", "\n", "运行测试时，不能从控制台输入，并显示测试已通过", "\n", "我希望能通过控制台输入能更灵活的测试数据。刚开始学习单元测试，多多指教！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If using PHP, i suggest using &lt;code&gt;$message = nl2br($message);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This will turn line breaks into br's for you.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输入", "Question": ["将用户输入插入到用户设置的mysql数据库中（带换行符）", ["\n\n", "I am looking to insert a user's input from a textarea into a mysql database. As of now, if the user types the following:", "\n\n", "\"Hello.\n\n\nhello.\"\n", "\n\n", "It will be inserted into the database without the line breaks. How can I fix this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "读入数，按照空格、Tab键、回车作为分隔符，不会把回车留下。", "Konwledge_Point": "数据的输入", "Question": ["c++中cin输入换行符缓冲问题", ["cin输入时存在一个输入完数据按回车的问题，比如", "\n连续读取数值的指令", "\ncin》a；", "\ncin》b；", "\n当我输入a的值按下回车，回车键产生的换行符应该留在输入缓冲区里吧，那么执行第二条指令时先读取这个回车不就导致还没输入b值程序就结束的问题啊。。。但是实际执行不是这样的。有大神解释下cin的本质吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为输入时’b’先于’T’输入&amp;#xff0c;所以输出时也先打印’b’的统计信息&lt;br /&gt;&amp;#61;&amp;#61;你这个样例输入和输出怎么能得出这个结论的呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一个字符串，统计每个字符出现的次数", ["【问题描述】编写一个程序，接收用户输入的一个字符串(可以包含空格)，统计其中所有出现过的所有字符，并按照频率高低的顺序排列输出。频率相同的字符按输入顺序输出。", "【输入形式】用户在第一行输入一个字符串，以回车结束输入。", "【输出形式】程序统计字符串中出现的所有字符，然后按照字符出现频率大小排序输出，频率相同时，按输入顺序输出。输出形式规定为每行输出4个字符数据，输出格式为：字符-出现次数。每个字符-出现次数输出中间用一个空格分隔，每行末尾没有空格。程序输出结尾有一个回车。", "【样例输入】", " The job requires an agile mind.", "【样例输出】", " #-5 e-4 i-3 r-2", " a-2 n-2 T-1 h-1", " j-1 o-1 b-1 q-1", " u-1 s-1 g-1 l-1", " m-1 d-1 .-1               #表示空格(在程序请输出空格，而不是字符’#’，这里只是表示而已。)", "【样例说明】用户首先输入字符串The job requires an agile mind. 程序统计完毕之后按照每行4个统计结果输出，字符串中有5个空格，所以输出为#-5,#表示空格。字符’b’和’T’出现次数同为1，因为输入时’b’先于’T’输入，所以输出时也先打印’b’的统计信息。", "【评分标准】结果完全正确得20分，每个测试点4分。", "【编程语言】C/C++"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入15和20两个数之间有空格&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["OnlineJudge输入数据错位", ["\n", "\n", "onlinejudge输入1520，无法正确对应长宽。初学者不知道怎么处理。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;i&amp;#43;&amp;#43;)\n       &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max&amp;#61;a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],loc&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;gt;&amp;#61;max)\n        {\n            max&amp;#61;a[i];\n            loc&amp;#61;i;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,max,loc);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["系统是自动输入数据的，该怎么写？求解答", ["本题要求编写程序，找出给定的8个正整数中的最大值及其对应的最大下标(当有多个最大值时)，下标从0开始。", "输入格式:", "输入8个正整数，用空格分开。", "输出格式:", "在一行中输出最大值及最大值的最大下标，中间用一个空格分开。", "输入样例:", "在这里给出一组输入。例如：", "2 8 10 1 10 9 10 8", "输出样例:", "在这里给出相应的输出。例如：", "10 6"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt; &lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i, j;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, str);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(str);j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(str[j]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; str[j]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n                num &amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, num);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;样例输入测试正确&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一个字符串，统计其中数字字符的个数。", ["首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试输入一个仅由字母和数字组成的字符串（长度不超过80）。", "输入", "2", "ac520ac520", "a1c2m3sdf", "输出", "6", "3"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;||是逻辑或 应该是改成 &amp;amp;&amp;amp;逻辑与&lt;br /&gt;并且数字字符是直接输出&amp;#xff0c;不用处理&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言：输入数据，要求将字母大小写转换，其他数据照常输出  遇到无法正常输出数字与其他字符。", ["如图：", "\n", "\n", "题目要求输入数据，将字母大小写转换，其他数据照常输出。", "这是我的代码。", "为什么输出的全是框框啊？", "求解。用的是vs2019."]], "Tag": "程序设计"}
{"Answer": "在页面编码，数据库编码方式都统一的情况下，还有一个request编码，就是经过request获得的数据的编码方式，中文设置成utf-8比较好在request.getparameter之前加入request.setCharacterEncoding(\"utf-8\");问题迎刃而解。", "Konwledge_Point": "数据的输入", "Question": ["jsp页面获得的数据存入mysql数据库之后出现乱码怎么办？", ["如题，且jsp和mysql的编码都已经设置成utf-8了而且", "\nString equipment=request.getParameter(\"chance_equipment\");", "\n        String state=\"未指派\";", "\n页面获得的中文数据存储不正常，是乱码，我自己定义的state却正常显示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您可以使用唯一值渲染或分类渲染&amp;#xff0c;并将缺失值设置为特殊颜色&amp;#xff0c;以显示缺失数据区域。您还可以使用唯一值渲染符号图层来表示缺失数据区域。在图例中&amp;#xff0c;您可以添加说明&amp;#xff0c;指示特殊颜色代表缺失数据。&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["arcgis输入数据后，无数据区域消失，如何操作可以使其显示？", ["第一次使用arcgis做冷热点图分析，导入地图后导入数据，但数据中部分地区数据缺失。", "\n", "选择地图与数据连接并显示后，无数据区域就消失了，", "但是最后绘制的冷热点分析图要求有无数据区域，具体该如何让无数据区域显示出来呢，并在图例中可以相应表示该无数据区域？", "PS：本人使用的是Arcgis10.7，可能部分操作功能位置有所不同。", "\n", "恳请各位帮助帮助，在此多谢大家！"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/superdog007/article/details/29864807", "Konwledge_Point": "数据的输入", "Question": ["输入亮个数组，比较数组中差异的数据，从原始数组中删除差异的数据，只保留一致的", ["输入亮个数组，比较数组中差异的数据，从原始数组中删除差异的数据，只保留一致的"]], "Tag": "程序设计"}
{"Answer": "要输入的数据不确定的话你就不要用int型存储输入的数据，用char*存储输入的数据，然后对char*进行类型转换，可以自己设计算法，你想要啥错误都能检查，检测到%d.%d报个浮点错误，检测到%c报个输入字符违法错误什么的。", "Konwledge_Point": "数据的输入", "Question": ["求教单身怎样才能当其输入浮点数时让其提示出错", ["#include", "\nusing namespace std;", "\nint main()", "\n{", "\n    int max(int a,int b,int c);", "\n    long max(long a,long b,long c);", "\n    int A1,B1,C1,I1;", "\n    cin>>A1>>B1>>C1;", "\n    I1=max(A1,B1,C1);", "\n    cout<<\"int I1=\"<\n    int A2,B2,C2,I2;", "\n    cin>>A2>>B2>>C2;", "\n    I2=max(A2,B2,C2);", "\n    cout<<\"int I2=\"<\n}", "\nint max(int a,int b,int c)", "\n{", "\n    if(a", "\n    a=b;", "\n    if(a\n    a=c;", "\n    return a;", "\n}", "\nlong max(long a,long b,long c)", "\n{", "\n    if(a>b)", "\n    a=b;", "\n    if(a>c)", "\n    a=c;", "\n        return a;", "\n}"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/zhao10jain/article/details/7984310?locationNum=1&amp;fps=1](http://blog.csdn.net/zhao10jain/article/details/7984310?locationNum=1&amp;fps=1 \"\")", "Konwledge_Point": "数据的输入", "Question": ["抗震救灾的算法问题的求解           ", ["灾区又来了n位志愿者，抗震救灾指挥部需要将他们分为若干个小组，小组的数量不限，但是要求每个小组的人数必须为素数，请问我们有几种分组的方法呢？", "\n\n", "特别说明：", "\n1、可以只有一个组；", "\n2、分组的方法只和人数有关，而与具体的人员无关，即：你可以假设人是无区别的。", "\n\n", "Input", "\n输入数据首先包含一个正整数C，表示有C组测试用例，然后是C行数据，每行包含一个正整数n(2<=n<=150)，表示志愿者的总人数。", "\n\n", "Output", "\n对于每组测试数据，请输出分组的方案数目，每个输出占一行。", "\n\n", "Sample Input", "\n3", "\n3", "\n4", "\n5", "\n\n", "Sample Output", "\n1", "\n1", "\n2"]], "Tag": "程序设计"}
{"Answer": "不知是不是这个意思，我改了一下你看看：\r\n\r\n\r\n```\r\n int main(void){\r\n\tint i, j, len, cnt;\r\n\tOPTR *st = (OPTR*)malloc(sizeof(OPTR));//栈的初始化 \r\n\tEXPT *nst = (EXPT*)malloc(sizeof(EXPT));//栈的初始化 \r\n\tchar str[85];\r\n\tchar out[85];//后缀输出？\r\n\tprintf(\"请输入一个表达式\\n\");\r\n\tscanf(\"%s\", str);//中序输入表达式 \r\n\tnst-&gt;top = -1;\r\n\tst-&gt;top = -1;\r\n\tcnt = 0;\r\n\tlen = strlen(str);//求字符串的长度 \r\n\tchar szTemp[256] = { 0 };\r\n\tmemcpy(szTemp, str + 1, len - 2);//将头尾的#去掉\r\n\tchar *ptr;\r\n\tptr = strtok(szTemp, \"#\");\r\n\ti = 1;\r\n\twhile (ptr != NULL) {\r\n\t\tprintf(\"表达式%d:%s\\n\", i, ptr);\r\n\t\ti++;\r\n\t\tptr = strtok(NULL, \"#\");\r\n\t}\r\n```\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201805/29/1527558675_793703.jpg)", "Konwledge_Point": "数据的输入", "Question": ["数据结构表达式树，怎么让每个表达式均以“#”开始，以“#”结束", ["这是main", "\n\n", " #include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include \"stack.h\"\n\n\nint main(void){\n    int i,j,len,cnt;\n    OPTR *st=(OPTR*)malloc(sizeof(OPTR));//栈的初始化 \n    EXPT *nst=(EXPT*)malloc(sizeof(EXPT));//栈的初始化 \n    char str[85];\n    char out[85];//后缀输出？\n    printf(\"请输入一个表达式\\n\"); \n    scanf(\"%s\",str);//中序输入表达式 \n    nst->top=-1;\n    st->top=-1;\n    cnt=0;\n    len=strlen(str);//求字符串的长度 \n    for(i=0;i<len;i++){\n        if(isnumber(str[i]))\n            out[cnt++]=str[i];\n        else{\n            if(str[i]=='('||isempty(st)){\n                push(st,str[i]);\n                continue;\n            }\n            if(str[i]==')'){\n                while(top(st)!='('){\n                    out[cnt++]=top(st);\n                    pop(st);\n                }\n                pop(st);\n                continue;\n            }\n            while(!isempty(st)&&top(st)!='('&&priority(str[i])<=priority(top(st))){\n                out[cnt++]=top(st);\n                pop(st);\n            }\n            push(st,str[i]);//把不是数字的字符入栈 \n        }\n    }\n    //如果栈不为空，把栈里的内容放到Out数组 \n    while(!isempty(st)){\n        out[cnt++]=top(st);\n        pop(st);\n    }\n    out[cnt]='\\0';\n    for(i=0;i<cnt;++i)\n        printf(\"%c \",out[i]);\n    printf(\"\\n\");\n    for(i=0;i<cnt;i++){\n        if(isnumber(out[i])){\n            npush(nst,out[i]);\n            continue;\n        }else if(out[i]=='+'){\n            nst->data[nst->top-1]+=ntop(nst);\n            npop(nst);\n        }else if(out[i]=='-'){\n            nst->data[nst->top-1]-=ntop(nst);\n            npop(nst);\n        }else if(out[i]=='*'){\n            nst->data[nst->top-1]*=ntop(nst);\n            npop(nst);\n        }else if(out[i]=='/'){\n            nst->data[nst->top-1]/=ntop(nst);\n            npop(nst);\n        }\n        for(j=0;j<=nst->top;++j)\n            printf(\"%d \",nst->data[j]);\n        for(j=i+1;j<cnt;++j)\n            printf(\"%c \",out[j]);\n        printf(\"\\n\");\n\n    }\n    return 0;\n}\n\n", "\n\n", "这是stack", "\n\n", " typedef struct{\n    char data[85];\n    int top;\n}OPTR;\ntypedef struct{\n    int data[85];\n    int top;\n}EXPT;\n// 判断用户输入是否是数字 \nbool isnumber(char ch){\n    if(ch>='0'&&ch<='9')\n        return true;\n    else\n        return false;\n}\n//判断栈是否为空 \nbool isempty(OPTR *s){\n    if(s->top==-1)\n        return true;\n    else\n        return false;\n}\n//入栈\nvoid push(OPTR *s,char ch){\n    s->data[++s->top]=ch;\n}\nvoid npush(EXPT *s,char ch){\n    s->data[++s->top]=ch-'0';\n}\n//出栈 \nchar pop(OPTR *s){\n    return s->data[s->top--];\n}\nint npop(EXPT *s){\n    return s->data[s->top--];\n}\n//优先级定义 \nint priority(char ch){\n    if(ch=='(')\n        return 0;\n    if(ch=='+'||ch=='-')\n        return 1;\n    if(ch=='*'||ch=='/')\n        return 2;\n\n    return 0;\n}\n//得到栈顶元素 \nchar top(OPTR *s){\n   return s->data[s->top];\n}\n//得到栈顶元素 \nint ntop(EXPT *s){\n    return s->data[s->top];\n}\n", "\n\n", "要加一个新功能就是每个表达式要用#开头，#号结束，求大佬写出完整代码啊"]], "Tag": "程序设计"}
{"Answer": "看成c++的了,这个是c版本的\r\n\r\n#include&lt;stdio.h&gt;\r\n\r\nvoid exchange(int *a,int *b){\r\n    if(*a&lt;*b){\r\n        int temp;\r\n        temp = *a;\r\n        *a = *b;\r\n        *b = temp;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int a,b,c;\r\n    scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;c);\r\n    exchange(&amp;a,&amp;b);//b是小值\r\n    exchange(&amp;b,&amp;c);//c最小\r\n    exchange(&amp;a,&amp;b);//大小顺序为a,b,c\r\n    printf(\"a:%d,b:%d,c:%d\",a,b,c);\r\n}", "Konwledge_Point": "数据的输入", "Question": ["各位前辈，小弟不才，遇到一C编程题，请大家帮忙，O(∩_∩)O谢谢！", ["功能：编写函数实现两个数据的交换，在主函数中输入任", "\n      意三个数据，调用函数对这三个数据从大到小排序。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以直接传Date&amp;#xff0c;LocalDate&amp;#xff0c;LocalDateTime等类型的&lt;br /&gt;命名这些需要注意规范&amp;#xff0c;方法请使用小驼峰&lt;/p&gt;\n&lt;p&gt;测试用例那儿&amp;#xff0c;你需要传入一个Date类型的变量呀&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["接口参数Date类型，该如何在测试方法中传入日期，查询数据库数据，请DL们教一下。", ["测试一个Date类型数据查询，直接传入日期会就报java.lang.illeqalArqumentException  Create breakpoint错，请教一下，该怎么写测试方法", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "autocomplete=\"off\"\r\n\r\n```\r\n &lt;input type=\"text\" autocomplete=\"off\"/&gt;\r\n```", "Konwledge_Point": "数据的输入", "Question": ["jsp中能否通过代码来清除文本框的输入历史？", ["jsp中能否通过代码来清除文本框的输入历史？现在点到文本框的时候就会出现一个历史输入记录的下拉框，能否在jsp中通过代码不让其出现？求教！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport math\n\n\ndef calculateAreaPerimeter(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;, c):\n    perimeter &amp;#61; a &amp;#43; b &amp;#43; c\n    s &amp;#61; perimeter / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    area &amp;#61; math.&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(s * (s - a) * (s - b) * (s - c)) \n\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#61;{:.2f};perimeter&amp;#61;{:.2f}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(area, perimeter))      # 保留两位小数\n\n\na &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\nb &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\nc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-built_in\"&gt;calculateAreaPerimeter&lt;/span&gt;(a, b, c)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["7-4 jmu-python-求三角形面积及周长 (10 分)", ["7-4 jmu-python-求三角形面积及周长 (10 分)", "输入的三角形的三条边a、b、c，计算并输出面积和周长。假设输入三角形三边是合法整形数据。 三角形面积计算公式地址： ", "https://images.ptausercontent.com/311e2ad2-960b-4c4b-bafb-037c2808b1f6.png", "\n", "import math  #导入math库", "math.sqrt(x)  #调用sqrt函数实现开平方运算，x表示要求值的数据", "输入格式:", "每行输入一个数据，表示三角形一条边。", "\n", "输出格式:", "area=面积;perimeter=周长，面积和周长保留2位小数", "\n", "输入样例:", "3", "4", "5", "结尾无空行", "输出样例:", "area=6.00;perimeter=12.00", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;肯定不是一样啊&amp;#xff0c;输入是你数据的维度&amp;#xff0c;输出是你需要干的事的维度&amp;#xff0c;比如分类模型&amp;#xff0c;分10类&amp;#xff0c;输出就是10维&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["model.preditc输出和输入形状不一致", ["\n", "\n", "\n", "不明白为什么model.predict的输出和输入为啥shape不一样"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    gets(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( i&amp;lt;&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt; &amp;amp;&amp;amp;  &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i])\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) a&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)b&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)c&amp;#43;&amp;#43;;\n        i&amp;#43;&amp;#43;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;大写字母%d,小写字母%d,数字字符%d&amp;#34;&lt;/span&gt;,a,b,c);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入一串字符str[40]统计大写字母，小写字母，数字字符的个数并输出", ["怎样输出每个字符的个数并输出它们跪求大佬解答教教孩子吧"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(n)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;isinstance&lt;/span&gt;(n,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)))\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;不予处理&amp;#xff01;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(*n,sep&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python根据不同的输入进行不同的处理操作", ["从键盘上任意输入一个数据，如果输入的是整数，则求从1到该整数的累加和，如果输入的是字符串则按照一行打印输出一个字符的形式输出该字符，否则输出信息提示“不予处理！”"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/yanzi6688/article/details/2641085", "Konwledge_Point": "数据的输入", "Question": ["datagrid控件数据显示", ["datagrid绑定字段后初始化页面时加载数据 显示出来了，输入查询条件点击ONCLICK事件，", "\n后台查询没有数据并且返回是空，但是前台页面显示的还是初始化的数据。清缓存也试过了  爆炸"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%d &amp;#34;,&amp;amp;a[i]);改成scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);&lt;br /&gt;把空格去掉试试&amp;#xff0c;应该是这个空格导致的&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["请问这是怎么回事 输入回车没有结束程序 ，要多输入一个数据才行", ["请问这是怎么回事 输入回车没有结束程序 ，要多输入一个数据才行", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n,i,min;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "int", " a[n];\n\n    ", "for", "(i=", "0", ";i<n;i++)\n    {", "scanf", "(", "\"%d \"", ",&a[i]);}", "//输入n个数", "\n\n    ", "if", "(a[", "0", "]<a[", "1", "]) min=a[", "0", "];  ", "//比较第一号与第二号元素大小  确定初始的min", "\n    ", "else", " min=a[", "1", "];\n\n    ", "for", "(i=", "2", ";i<n;i++)\n    {", "if", "(a[i]<min) min=a[i];\n    ", "else", " min=min;}   ", "//计算min", "\n    ", "printf", "(", "\"%d\"", ",min);\n    ", "return", " ", "0", ";\n}\n", "\n", "多输入一个 0才结束 ，0也没有算在最小值里面", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;emm 要实现你说的需求&amp;#xff0c;最简单的方法&amp;#xff0c; 你new ArrayList&amp;lt;String&amp;gt; 集合都可以搞定&amp;#xff0c;你可以将你所需要的 【姓名】&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;【地址】&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;【电话】&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;【日期】 拼接成一个字符串&amp;#xff0c;然后 将其存入一个 String 集合中&amp;#xff0c; 在使用适配器Adapter 将其展示的时候&amp;#xff0c;使用字符串方法 split 将其分隔取出。 举个例子  String Name &amp;#61;  result.getContents().split(&amp;#34;&amp;#61;&amp;#34;)[0];    String Address &amp;#61;  result.getContents().split(&amp;#34;&amp;#61;&amp;#34;)[1]; 这里的result 是从集合中获取的字符串。&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["点击Button将多个EditText内容传到另一个activity中并显示在ListView里？", ["\n\n", "就是我想在发布货源这个页面输入多个EditText内容，然后点击发布button后，将信息同步传送到我的货源这个页面用listview进行显示。每发布一次，我的货源这个activity中的listview就显示一次。就类似于发布说说那种。由于我的MainActivity里面用了四个fragment做底部导航的切换页面，而发布货源和我的货源这些都在fragment_home这个fragment里面，数据怎么都传不到我的货源这个页面里面去。我用了好几个方法，如下，是想在发布货源页面完成信息输入发布后直接跳转到我的货源页面，但感觉好像是fragment的原因，直接跳转过去不行：", "\n\n", "\n\n", "这样行不通，然后我就只能直接跳转到我的MainActivity里面，但是点击我的货源这个页面就直接出现错误。我到底应该怎么完成这个功能，该用什么方法。我的货源页面获取数据是这样写的：", "\n\n", "\n\n", "\n\n", "由于也算是初学Android，实在搞不太懂，不知道哪里错了，求各位大佬帮帮忙呀~~~~", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样呢&lt;br /&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include&amp;lt;math.h&amp;gt;&lt;br /&gt;int main(void)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int a[20],b,n,m,c,d&amp;#61;0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for(b&amp;#61;0;b&amp;lt;n;b&amp;#43;&amp;#43;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[b]);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for(b&amp;#61;0;b&amp;lt;n-1;b&amp;#43;&amp;#43;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(a[b]&amp;lt;a[b&amp;#43;1]);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        else&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            printf(&amp;#34;NO\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            return 0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;YES\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    return 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言 判断一组数据是否是从小到大的序列", ["编号:", "1040", "标题:", "判断一组数据是否是从小到大的序列", "内存限", "制:", "65536 KB", "时间限", "制:", "1000 ms", "问题描", "从键盘输入一组整数（不超过20个），然后判断该", "述:", "组数是否是一个从小到大的序列。若是输出 YES，", "否则输出 NO.", "输入数据包括两行：第一行为需要输入的数据个数，", "第二行为一组数据(用空格分隔)", "输出数据只有一行：YES 或 NO。", "输入输出举例:", "例1:", "输入:", "5", "1 2345", "输出:", "YES", "例2:", "输入:", "5", "1 29 4 5", "输出:", "No"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/libin56842/article/details/8515140", "Konwledge_Point": "数据的输入", "Question": ["SORT AGAIN                     ", ["Problem Description", "\n给你N个整数,x1,x2...xn，任取两个整数组合得到|xi-xj|,(0<i,j<=N,i!=j)。", "\n现在请你计算第K大的组合数是哪个（一个组合数为第K大是指有K-1个不同的组合数小于它）。", "\n\n", "Input", "\n输入数据首先包含一个正整数C，表示包含C组测试用例.", "\n每组测试数据的第一行包含两个整数N，K。(1<N<=1000,0<K<=2000)", "\n接下去一行包含N个整数，代表x1,x2..xn。(0<=xi<=2000)", "\n\n", "Output", "\n对于每组测试数据，请输出第K大的组合数，每个输出实例占一行。", "\n\n", "Sample Input", "\n3", "\n3 2", "\n4 0 7", "\n4 2", "\n1 2 3 4", "\n2 1", "\n2 9", "\n\n", "Sample Output", "\n4", "\n2", "\n7"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;br /&gt;int n,i,*p;&lt;br /&gt;是不是scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;br /&gt;p&amp;#61;(int &lt;em&gt;)malloc(n&lt;/em&gt;sizeof(int))//申请n个int 类型数据内存空间&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言中，事先不知道要输入多少个数字时，如何定义动态数组？", ["在c语言中，假如说我想直接输入若干个数字并储存到动态数组中，但我事先不知道具体有多少个数，应该如何定义动态数组？", "就是说我不知道n*sizeof(int)中的n是多少怎么办？"]], "Tag": "程序设计"}
{"Answer": "你可以在a=getchar(); 下面添加一行打印 printf(\"a=%d\\n\",a);\r\n如果我没猜错的话应该是a=10;当a=10不等于‘Y’就直接跳出循环。\r\n那你就应该在这之前再加getchar();", "Konwledge_Point": "数据的输入", "Question": ["求助,为什么只能输入一组数据??", ["模拟手机通讯录管理系统，实现对通讯录进行管理。", "\n需要对联系人姓名、电话进行管理，利用结构体变量记录联系人的姓名、电话，建立单向链表来存放联系人的信息。 ", "\n要求实现如下功能： ", "\n（1）写函数create()实现建立单链表来存放联系人的信息，", "\n如果输入大写‘Y’字符则继续创建结点存储联系人信息，否则按任意键结束输入。 ", "\n（2）写自定义函数输出链表中联系人信息。 ", "\n（3）写自定义函数查询联系人的信息。 ", "\n（4）写自定义函数释放链表所占内存。 ", "\n（在主函数依次调用各函数即可） ", "\n结构体类型定义如下： ", "\nstruct friends", "\n\n", "{ ", "\n    char name[20];", "\n    char phone[12]; ", "\n    struct friends*next; ", "\n}; ", "\n\n", "程序运行示例1： ", "\n请依次输入每个联系人姓名，电话：", "\n wu 13623456 ", "\n 是否继续输入,按Y键继续输入，其他键就结束. ", "\n Y ", "\n请依次输入每个联系人姓名，电话： ", "\nzhang 34567812 ", "\n是否继续输入,按Y键继续输入，其他键就", "\n*/", "\n#include", "\n#include", "\n\n", "struct friends", "\n{ ", "\n\n", "  char name[20];\n    char phone[12]; \nstruct friends*next; \n", "\n\n", "};", "\n\n", "struct friends*create()", "\n{", "\n\n", "struct friends*pHead=NULL,*pNew=NULL,*pTail=NULL;\nint i=0;\nchar a;\nfor(i=0;i<100;i++) \n{   \n    printf(\"请依次输入每个联系人姓名，电话:\\n\");\n    pNew=(struct friends*)malloc(sizeof(struct friends*));\n    gets(pNew->name);\n    gets(pNew->phone);\n    if(pHead==NULL) \n        pHead=pNew;\n    else\n        pTail->next=pNew;\n    pTail=pNew;\n    pNew->next=NULL;\n    printf(\"是否继续输入,按Y键继续输入，其他键就结束.\\n\");   \n    a=getchar();\n    if(a!='Y') break;\n}\nreturn pHead;   \n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n\n", "struct friends *p;\np=create();\n/*while(p!=NULL)\n{\n    printf(\"%c %c\",p->name,p->phone);\n    p=p->next;\n}*/\nreturn 0;   \n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;register表单主键是自增主键,插入数据的时候为了保证数据正常,请不要手动控制register.id的值进行写入,而是不管他&lt;br /&gt;你的pre表修改方式将model中的id和goodid去掉,且不要设置主键,django会自己设置自增主键,你没有插入数据且前面运行正常后面失败,就是因为唯一主键冲突导致数据不能写入,或者将你现在model中主键增加一个自增主键,将现在的主键去掉,插入数据的时候不要管他们,就可以,自增主键代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;id&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;AutoField(primary_key&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;True)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助请采纳&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["django从前端向数据库插入数据时失败", ["我在使用form表单向数据库插入数据时，发生了一些我不了解的错误。", "\n", "\n", "\n", "上图的注册功能可以插入成功，数据库中出现了在网页上输入的内容，但是我在另一个地方类似的使用这种办法的时候出现了错误。", "\n", "\n", "\n", "上图的form表单与之前register的表单几乎相同，在网页输入数据并提交时并无报错，但是数据库中却没有相应数据。", "\n", "进一步我比较了在models.py中二者的代码", "\n", "\n", "\n", "也几乎是相同的写法。此外还有几处也有相同的问题，只有开始的register表单运行正常，请问问题出在哪里，应该如何解决呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在my.ini (在MySQL的安装目录下)文件中修改如下&amp;#xff1a;把utf8 改为 gbk若没有生效&amp;#xff0c;重启服务试试&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["MySQL插入数据后中文显示的是空白", ["cmd字符集和my.ini文件里的都改成utf8也不显示，困扰我好几天了，难道是我有哪里没有弄好吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/774534221356195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],b[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,a);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;a[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)b[j&amp;#43;&amp;#43;]&amp;#61;a[i];\n    }  \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;j;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,b[i]);\n    } \n    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%s&amp;#34;,b);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["1.输入一串字符，将其存放在a数组中，将其下标为偶数，ASCII值为奇数的元素存放到另一个字符数组b中", ["1.输入一串字符，将其存放在a数组中，将其下标为偶数，ASCII值为奇数的元素存放到另一个字符数组b中，最后输出数组b的内容。数组a和数组b的长度可以为20。例如：输入“ABCDEFGH”，输出结果为“ACEG”。", "2.编写程序，能够进行4次加减乘除运算，要求输入4组数据，分别完成加减乘除运算。例如：如果输入11", "5，则计算乘运算，结果为55；如果输入11-5，则进行减运算，计算结果为6，如果输入的运算符不是“+-", "/”，则提示输入错误。具体的计算过程通过一个子函数完成，主函数只负责进行4次数据的输入，调用函数完成计算并输出每次的计算结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你需要将这些列表放在一个列表中&lt;br /&gt;如这种格式&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;names &amp;#61; &lt;span class=\"hljs-comment\"&gt;[ &lt;span class=\"hljs-comment\"&gt;[ ]&lt;/span&gt;,\n&lt;span class=\"hljs-comment\"&gt;[ ]&lt;/span&gt;,\n&lt;span class=\"hljs-comment\"&gt;[ ]&lt;/span&gt;,\n]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["python输入学号找到名字", ["Python输入学号找到名字，从表格中复制数据给names为什么是无效语句？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int a;&lt;br /&gt;cin &amp;gt;&amp;gt; a;&lt;br /&gt;a&amp;#61;(a&amp;lt;0)?-a:a;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["C++关于忽略输入数的负号", ["C++怎么忽略输入数的正负?                                例如输入-123怎样才能输出123 unsigned int不管用"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could easily just call the &lt;code&gt;addNewUser()&lt;/code&gt; function passing the required parameters as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;addNewUser($connect,$username,$password,$dbtable);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A better usage example would be to first check that the form has been already submitted to prevent any direct access or empty records and PHP warnings by checking that form fields have been submitted, ie.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if(isset($_POST[\"username\"]) &amp;amp;&amp;amp; isset($_POST[\"password\"]))\n{\n    $username=$_POST['username'];\n    $password=$_POST[\"password\"];\n\n    addNewUser($connect,$username,$password,$dbtable);\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Other than that this seems to be a very basic example and also a bad practise on how to implement a new insert in the database so be sure not to use any of this in a production environment. IE:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;No input filtering.&lt;/li&gt;\n&lt;li&gt;Trying to \"imitate\" an Auto Increment field for the user &lt;/li&gt;\n&lt;li&gt;Vulnerable to SQL injection and even prone to fail by accident if say a user tries to register with a username or password that contains a quote&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输入", "Question": ["PHP将数据从表单输入到SQL数据库中", ["\n\n", "Hello I wish to input some data from a HTML form in my website into a SQL database. Here is my database so far. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "默认构造函数改为：Student()  { }       //后面加上 {  }", "Konwledge_Point": "数据的输入", "Question": ["创建一个类Student。然后在main函数中创建一个对象(“12345”，“张三”，“男”)，并调用相应的方法完成数据的输入和输出，使用string类型存储字符串数据。", ["不知道哪错了，怎么改。", "\n错误提示：", "\n    4-1.cpp:(.text+0x1b): undefined reference to `Student::Student()'", "\n        [Error] ld returned 1 exit status", "\n\n", "#include\"iostream\"", "\n#include\"string\"", "\nusing namespace std;", "\n\n", "class Student", "\n{", "\n    private:", "\n        string studentNo;", "\n        string studentName;", "\n        string studentSex;", "\n    public:", "\n        Student();", "\n        void input(){", "\n            cout<<\"your number,name and sex:\"<\n            cin>>studentNo>>studentName>>studentSex;", "\n        }", "\n        void print(){", "\n            cout<<\"student information:\"<<studentNo<<endl<<studentName<<endl<<studentSex<<endl;", "\n        }", "\n};", "\nint main()", "\n{", "\n    Student s;", "\n    s.input();", "\n    s.print();", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;学号是整数吗&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nstruct student{\n    int sno&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    char name[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    int score[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}&lt;span class=\"hljs-comment\"&gt;; &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["C语言相关问题，能看一看吗", ["采用结构体变量的方法保存学生成绩，有五个学生，每个学生有3门课的成绩，从键盘输入相关", "数据（包括：学号，姓名和三门课程的成绩）", "，计算出平均成绩。", "2.", "采用结构体数组的方法保存学生成绩，完成练习1。", "3.", "采用链表的方法保存学生成绩，完成练习1"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-card&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;shadow&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;never&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt; #&lt;span class=\"hljs-attr\"&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;card-header&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;分类树&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-table&lt;/span&gt;\n          &lt;span class=\"hljs-attr\"&gt;border&lt;/span&gt;\n          &lt;span class=\"hljs-attr\"&gt;:data&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;tableData&amp;#34;&lt;/span&gt;\n          &lt;span class=\"hljs-attr\"&gt;row-key&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;id&amp;#34;&lt;/span&gt;\n          &lt;span class=\"hljs-attr\"&gt;style&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;width: 100%; margin-bottom: 20px&amp;#34;&lt;/span&gt;\n        &amp;gt;&lt;/span&gt;\n\n          &lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- element table组件的插槽实现展开 --&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-table-column&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;expand&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt; #&lt;span class=\"hljs-attr\"&gt;default&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;props&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-table-column&lt;/span&gt;&amp;gt;&lt;/span&gt;\n         &lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- 实现展开 --&amp;gt;&lt;/span&gt;\n\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-table-column&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;名称&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;prop&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;componentName&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-table-column&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;对应编码&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;prop&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;componentId&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt; #&lt;span class=\"hljs-attr\"&gt;default&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- 如果当前的行id不等于被激活的id&amp;#xff0c;就显示span&amp;#xff0c;否则显示输入框 --&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt;\n              &lt;span class=\"hljs-attr\"&gt;style&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;width: 100%;display:inline-block&amp;#34;&lt;/span&gt;\n                &lt;span class=\"hljs-attr\"&gt;v-if&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;acitveComponentId !&amp;#61;&amp;#61; scope.row.componentId&amp;#34;&lt;/span&gt;\n                &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;inputClick(scope.row)&amp;#34;&lt;/span&gt;\n              &amp;gt;&lt;/span&gt;\n                &lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{ &lt;span class=\"hljs-name\"&gt;scope.row.componentId&lt;/span&gt; }}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-input&lt;/span&gt;\n                &lt;span class=\"hljs-attr\"&gt;v-else&lt;/span&gt;\n                &lt;span class=\"hljs-attr\"&gt;v-model&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;scope.row.componentId&amp;#34;&lt;/span&gt;\n                &amp;#64;&lt;span class=\"hljs-attr\"&gt;blur&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;inputBlur&amp;#34;&lt;/span&gt;\n              /&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-table-column&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-card&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;ts&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n  &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; { reactive, ref,onMounted  } &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;\n \n  &lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; {\n    &lt;span class=\"hljs-title function_\"&gt;setup&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n      &lt;span class=\"hljs-comment\"&gt;//声明个响应式数据&amp;#xff0c;记录被激活的行id&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; acitveComponentId &amp;#61; &lt;span class=\"hljs-title function_\"&gt;ref&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;inputClick&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-params\"&gt;row:any&lt;/span&gt;) &amp;#61;&amp;gt; {\n          &lt;span class=\"hljs-comment\"&gt;//点击span&amp;#xff0c;赋值激活的id&lt;/span&gt;\n          acitveComponentId.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt; &amp;#61; row.&lt;span class=\"hljs-property\"&gt;componentId&lt;/span&gt; \n        }\n        &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;inputBlur&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-params\"&gt;row:any&lt;/span&gt;) &amp;#61;&amp;gt; {\n          &lt;span class=\"hljs-comment\"&gt;//输入框失去焦点&amp;#xff0c;将激活的id清空&lt;/span&gt;\n          acitveComponentId.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;\n        }\n\n        &lt;span class=\"hljs-title function_\"&gt;onMounted&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;()&amp;#61;&amp;gt;&lt;/span&gt;{\n  \n        })\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; {\n        acitveComponentId,\n        &lt;span class=\"hljs-attr\"&gt;tableData&lt;/span&gt;: [\n          {\n            &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n            &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;com.ander.root&amp;#39;&lt;/span&gt;,\n            &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;11213&amp;#39;&lt;/span&gt;,\n            &lt;span class=\"hljs-attr\"&gt;children&lt;/span&gt;: [\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;4零件&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;54645&amp;#39;&lt;/span&gt;,\n              },\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;1原材料&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;789879&amp;#39;&lt;/span&gt;,\n              },\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;6半成品&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;875666&amp;#39;&lt;/span&gt;,\n              },\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;3电气液压件&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;4564&amp;#39;&lt;/span&gt;,\n              },\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;5包材&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;8797&amp;#39;&lt;/span&gt;,\n              },\n              {\n                &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentName&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;1原材料&amp;#39;&lt;/span&gt;,\n                &lt;span class=\"hljs-attr\"&gt;componentId&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;5677&amp;#39;&lt;/span&gt;,\n              },\n            ],\n          }, \n        ],\n        inputClick,\n        inputBlur,\n      }\n    },\n    &lt;span class=\"hljs-title function_\"&gt;mounted&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n      \n    }\n  }\n \n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- Add &amp;#34;scoped&amp;#34; attribute to limit CSS to this component only --&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;scoped&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-css\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;h3&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;margin&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;40px&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-selector-tag\"&gt;ul&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;list-style-type&lt;/span&gt;: none;\n  &lt;span class=\"hljs-attribute\"&gt;padding&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=\"hljs-attribute\"&gt;margin&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10px&lt;/span&gt;;\n}\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;color&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;#42b983&lt;/span&gt;;\n}\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["vue3+element-plus+js 表格里点击单元格显示input输入框并且校验数据，点击单元格外不显示", ["问题遇到的现象和发生背景", "\n", "点击单元格不显示输入框", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "<", "el-card", " ", "shadow", "=", "\"never\"", ">", "\n        ", "<", "template", " #", "header", ">", "\n          ", "<", "div", " ", "class", "=", "\"card-header\"", ">", "\n            ", "<", "span", ">", "分类树", "</", "span", ">", "\n          ", "</", "div", ">", "\n        ", "</", "template", ">", "\n        ", "<", "el-table", "\n          ", "border", "\n          ", ":data", "=", "\"tableData\"", "\n          ", "row-key", "=", "\"id\"", "\n          ", "style", "=", "\"width: 100%; margin-bottom: 20px\"", "\n        >", "\n          ", "<", "el-table-column", " ", "label", "=", "\"名称\"", " ", "prop", "=", "\"componentName\"", " />", "\n          ", "<", "el-table-column", " ", "label", "=", "\"对应编码\"", " ", "prop", "=", "\"componentId\"", ">", "\n            ", "<", "template", " #", "default", "=", "\"scope\"", ">", "\n              ", "<", "span", "\n                ", "v-if", "=", "\"scope.row.componentId == false\"", "\n                @", "click", "=", "\"inputClick(scope.row)\"", "\n              >", "\n                ", "{{ ", "scope.row.componentId", " }}", "\n              ", "</", "span", ">", "\n              ", "<", "el-input", "\n                ", "v-else", "\n                ", "v-model", "=", "\"scope.row.componentId\"", "\n                @", "blur", "=", "\"inputBlur\"", "\n              />", "\n            ", "</", "template", ">", "\n          ", "</", "el-table-column", ">", "\n        ", "</", "el-table", ">", "\n      ", "</", "el-card", ">", "\n\n", "\n", "\n", "  ", "import", " { ref } from ", "'vue'", "\n\n  ", "export", " ", "default", " {\n    setup() {\n      ", "//   const inputClick = (row) => {", "\n      ", "//   }", "\n      ", "//   const inputBlur = (row) => {", "\n      ", "//   }", "\n      ", "return", " {\n        ", "tableData", ": [\n          {\n            ", "id:", " 1,\n            componentName", ": ", "'com.ander.root'", ",\n            ", "componentId", ": ", "''", ",\n            ", "children", ": [\n              {\n                ", "id:", " 31,\n                componentName", ": ", "'4零件'", ",\n                ", "componentId", ": ", "''", ",\n              },\n              {\n                ", "id:", " 32,\n                componentName", ": ", "'1原材料'", ",\n                ", "componentId", ": ", "''", ",\n              },\n              {\n                ", "id:", " 31,\n                componentName", ": ", "'6半成品'", ",\n                ", "componentId", ": ", "''", ",\n              },\n              {\n                ", "id:", " 32,\n                componentName", ": ", "'3电气液压件'", ",\n                ", "componentId", ": ", "''", ",\n              },\n              {\n                ", "id:", " 31,\n                componentName", ": ", "'5包材'", ",\n                ", "componentId", ": ", "''", ",\n              },\n              {\n                ", "id:", " 32,\n                componentName", ": ", "'1原材料'", ",\n                ", "componentId", ": ", "''", ",\n              },\n            ],\n          },\n        ],\n        ", "// inputClick,", "\n        ", "// inputBlur,", "\n      }\n    },\n  }\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "一团乱麻，啥都不会，对3的语法属实没搞明白", "由于没有后台数据，所以都是自己模拟的数据", "\n", "我想要达到的结果", "\n", "\n", "\n", "希望多写写注释，谢谢了！"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt;\r\nint main()\r\n{\r\nint o = 0; int e = 0;\r\nint n;\r\nwhile (1)\r\n{\r\nscanf(\"%d\", &amp;n);\r\nif (n == -1) break;\r\nif (n % 2) o++; else e++;\r\n}\r\nprintf(\"%d %d\", o, e);\r\nreturn 0;\r\n}\r\n```\r\n\r\n# 问题解决的话，请点下采纳", "Konwledge_Point": "数据的输入", "Question": ["请问C语言这题怎么做？", ["题目内容：", "\n\n", "你的程序要读入一系列正整数数据，输入-1表示输入结束，-1本身不是输入的数据。程序输出读到的数据中的奇数和偶数的个数。", "\n\n", "输入格式:", "\n\n", "一系列正整数，整数的范围是（0,100000）。如果输入-1则表示输入结束。", "\n\n", "输出格式：", "\n\n", "两个整数，第一个整数表示读入数据中的奇数的个数，第二个整数表示读入数据中的偶数的个数。两个整数之间以空格分隔。", "\n\n", "输入样例：", "\n\n", "9 3 4 2 5 7 -1 ", "\n\n", "输出样例：", "\n\n", "4 2"]], "Tag": "程序设计"}
{"Answer": "&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\r\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\r\n&lt;head&gt;\r\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\r\n&lt;title&gt;无标题文档&lt;/title&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n&lt;div&gt;&lt;input type=\"text\" size=\"20\" maxlength=\"25\"&gt; &lt;/div&gt;\r\n&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;\r\n&lt;script type=\"text/javascript\"&gt;\r\nvar yourinput=document.getElementsByTagName('input')[0];\r\nif(document.addEventListener){\r\n \tyourinput.addEventListener('input',write,false);\t\r\n\t}else{\r\n\tyourinput.attachEvent('onpropertychange',write);\r\n\t}\r\n        alter(yourinput.value);\r\n\tfunction write(){\r\n\t\tdocument.getElementsByTagName('p')[0].innerHTML=yourinput.value;\r\n\t\t}\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;", "Konwledge_Point": "数据的输入", "Question": ["html总怎么使用实时获取input标签中的值", ["我想通过js监视input标签自动获取input组件用户输入的值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;num加引号就是查询字符串&amp;#39;num&amp;#39;的type了&lt;br /&gt;你直接type(int(num))然后print出来就能看到int了&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["已经解决啦~Python int转换函数打印不出结果", ["现在学习到了如何将输入的数据转换为整数类型", "但是想要验证结果是int函数时，看不到其结果", "\n", "\n", "跟着视频里面对照了许久，但是还是不知道错在哪里，所以想问一下各位。", "希望各位可以不吝赐教，谢谢", "\n", "-分割线-", "自己眼瞎，运行了另外一个程序，浪费大家时间了，抱歉。"]], "Tag": "程序设计"}
{"Answer": "不知道你要做什么，f count分别什么含义。\r\n就你的代码看\r\nint a[100][1]; \r\n这里的1是数组长度，而不是最大下标，所以cout &lt;&lt; a[j][1]&lt;&lt;\" \"&lt;&lt; endl;这里越界了。", "Konwledge_Point": "数据的输入", "Question": ["有大佬帮看下这道C++哪里错了吗？谢谢", ["输入描述:", "\n第一行输入一个正整数T(T≤1000)，表示有T组数据。", "\n接下来T行，每行输入一个正整数x(1≤x≤1000000000)。", "\n输出描述:", "\n对于每组数据，依次输出一行一个正整数表示count(F(x),F(x+1))", "\n示例1", "\n输入", "\n4", "\n2", "\n3", "\n4", "\n5", "\n输出", "\n3", "\n4", "\n5", "\n6", "\n这是我写的代码：", "\n#include", "\nusing namespace std;", "\nint main() {", "\n    int n, i, j;", "\n    int a[100][1]; ", "\n    cin >> n;", "\n    for (j = 0; j < n; j++)", "\n        cin >>a[j][0];", "\n    for (j = 0; j < n; j++)", "\n        cout << a[j][1]<<\" \"<< endl;", "\n    system(\"PAUSE\");", "\n    return 0;", "\n}", "\n每次运行到最后一个数都会错。"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/l15738519366/article/details/48395369", "Konwledge_Point": "数据的输入", "Question": ["Prepared for New Acmer               ", ["Problem Description", "\n集训进行了将近2个礼拜，这段时间以恢复性训练为主，我一直在密切关注大家的训练情况，目前为止，对大家的表现相当满意，首先是绝大部分队员的训练积极性很高，其次，都很遵守集训纪律，最后，老队员也起到了很好的带头作用，这里特别感谢为这次DP专题练习赛提供题目和测试数据的集训队队长xhd同学.", "\n\n", "特别高兴的是，跟随集训队训练的一批新队员表现非常好，进步也比较显著，特别是训练态度大大超出我的预期，我敢说，如果各位能如此坚持下去，绝对前途无量！", "\n\n", "考虑到新队员还没有经过系统训练，我这里特别添加一道简单题：", "\n给定三个正整数A，B和C（A,B,C<=1000000），求A^B mod C的结果.", "\n\n", "希望各位都能体会到比赛中AC的快乐，绝对的量身定制，很高的待遇哟，呵呵...", "\n\n", "Input", "\n输入数据首先包含一个正整数N,表示测试实例的个数，然后是N行数据，每行包括三个正整数A,B,C。", "\n\n", "Output", "\n对每个测试实例请输出计算后的结果，每个实例的输出占一行。", "\n\n", "Sample Input", "\n3", "\n2 3 4", "\n3 3 5", "\n4 4 6", "\n\n", "Sample Output", "\n0", "\n2", "\n4"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;#define PI  3.14159&lt;br /&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    float r, zc, zj;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入所要计算圆的半径&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;r);\nzc&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*r*PI;\nzj&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*r;\n&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆的周长和直径分别为%f&amp;#xff0c;%f&amp;#34;&lt;/span&gt;,zc,zj);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; }&lt;/p&gt;\n&lt;p&gt;类型用错了&amp;#xff0c;要用浮点型&amp;#xff0c;用double更好&amp;#xff0c;还有就是输入这里也错了&amp;#xff0c;那个引号&amp;#xff0c;哈哈&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["为什么我输入数据计算出来的数字都是0", ["题目是使用define定义圆周率，键盘输入半径计算周长和直径。", "为什么我输入数据计算出来的数字都是0求解", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "define", " PI  3.14159", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " r;\n    ", "int", " zc;\n    ", "int", " zj;\n    ", "printf", "(", "\"请输入所要计算圆的半径：\\n\"", ");\n    ", "scanf", "(", "\"%f,&r\"", ");\n    zc=", "2", "*r*PI;\n    zj=", "2", "*r;\n    ", "printf", "(", "\"圆的周长和直径分别为%f，%f\"", ",zc,zj);\n } \n", "\n"]], "Tag": "程序设计"}
{"Answer": "这个用进DOS窗口，在Linux命令下导数据比较好\r\n在进入SQLite3命令后，可以这样操作\r\nseparator \",\";\r\nimport \"这里填你csv文件路径\" xyz\r\n不过在创建xyz表的时候，字段名列数应该和你的csv文件一致。\r\n可以参考：http://blog.csdn.net/j67065/article/details/7874113\r\n希望能帮到你", "Konwledge_Point": "数据的输入", "Question": ["向SQlite里面输入CSV文件", ["我在SQLite建了一个数据库，其中有命名“xyz”的空白表，我想把csv文件的数据输入到这个表里，但是我输入的时候，它要求我输入在主表里面", "\n\n", "我想输入xyz里面。", "\n怎么实现呢？先谢谢了。"]], "Tag": "程序设计"}
{"Answer": "逗号没匹配，前两个scanf中间没有逗号，而你输入了逗号，所以第二个scanf把逗号给了x，\r\nchar类型没有使用&amp;取地址\r\n\r\n```\r\nint a, b;\r\n\tfloat x, y;\r\n\tchar c1, c2;\r\n\tscanf(\"%d,%d,%f,%f,%c,%c\", &amp;a, &amp;b, &amp;x, &amp;y, &amp;c1, &amp;c2);\r\n\r\n\tprintf(\"a=%d,b=%d,x=%f,y=%f,c1=%c,c2=%c\", a, b, x, y, c1, c2);\r\n\treturn 0;\r\n```", "Konwledge_Point": "数据的输入", "Question": ["c语言新手，scanf函数输入数据总是显示0.0000000", ["#include", "\nint main()", "\n{", "\n    int a,b;", "\n    float x,y;", "\n    char c1,c2;", "\n    scanf(\"%d,%d\",&a,&b);", "\n    scanf(\"%f,%f\",&x,&y);", "\n    scanf(\"%c,%c\",c1,c2);", "\n    printf(\"a=%d,b=%d,x=%f,y=%f,c1=%c,c2=%c\",a,b,x,y,c1,c2);", "\n    return 0;", "\n}", "\n就是如图的程序，我在输入数据后（3,7,70,80，A,B）后，除了a，b正常，x和y一直输出0.000000，而c1和c2一直是c1=，，c2=e", "\n请问各位这是哪里出了问题啊？"]], "Tag": "程序设计"}
{"Answer": "可以把id设置成自增列，如果是自增列就不需要处理，直接插入suggestion就行了\r\n但如果不想是自增列，要设置成字符类型，就需要根据你的需求做出相应的措施。\r\n比如生成一个随机唯一字符串。", "Konwledge_Point": "数据的输入", "Question": ["数据库插入数据但是不填写主键内容", ["数据库表有两个字段id和suggestion 其中id是主键 我在网页的文本框里只填写了suggestion的内容 但是不填写id的内容 要怎么处理这个id"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;如有帮助&amp;#xff0c;麻烦采纳下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j, k, i, t, L;\n    L &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入十名同学的成绩&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;arr[i]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j] &amp;lt; arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n            {   t &amp;#61; arr[j];\n                arr[j] &amp;#61; arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;降序为:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    { &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, arr[i]);\n       \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[i] &amp;lt; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n        L&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不及格人数为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;,L);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["输入10个学生成绩，把及格成绩按降序输出，C语言怎么编写，用数组", ["输入10个学生成绩，把及格成绩按降序输出，不知道if判断之后怎么存储数据"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(Dat.at(Dat.length()&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n  Dat.replace(Dat.length()&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&amp;#34;&amp;#34;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;while(Dat.right(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).compare(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        Dat &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; Dat.left(Dat.length() -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["QT编写的串口助手，串口发送16进制数据的结尾会默认加上一个空格，怎么将空格去掉？", ["发送的数据结尾是没有空格的，但虚拟串口接收到的数据结尾却多了一个空格，怎么可以去掉这个空格。", "    QString Dat = ui->sendTextEdit->toPlainText().toLatin1();//获取文本框内容", "    QByteArray Data_4 = QByteArray::fromHex (Dat.toLatin1().data());//按十六进制编码发送", "    // 写入发送缓存区", "    serial.write(Data_4);", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/yang651280121/article/details/8259825", "Konwledge_Point": "数据的输入", "Question": ["求大神！！！repeater控件中放入两个textbox,要修改值并更新到数据库", ["\n如图，用repeater控件显示数据，每行后面有个linkbutton,文本框刚开始是只读的，现在点击按钮把文本框恢复到编辑模式，然后修改文本框里的值，修改完成后提交到数据库，这个问题怎么解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单一点, 可以比较二者的Loss和Acc曲线, 复杂一点可以用单因素方差分析做对比&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["#机器学习，比较不同模型在同一个数据集上的表现性能。", ["比较不同模型在同一个数据集上的表现性能。", "\n", "要满足什么条件才能够比较不同模型在同一个数据集上的表现性能？", "如果不同模型的输入数据有不同形式，那么它门之间还可以比较吗？ "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        List&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; list &amp;#61; Arrays.asList(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; first &amp;#61; list.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        StringBuffer stringBuffer &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; StringBuffer();\n        stringBuffer.append(first);\n        &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; list.size() &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; a &amp;#61; list.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(i);\n            &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; b &amp;#61; list.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b.equals(a &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) {\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!a.equals(&lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;)) {\n                stringBuffer.append(&amp;#34;-&amp;#34;);\n                stringBuffer.append(a);\n            }\n            stringBuffer.append(&amp;#34;,&amp;#34;);\n            stringBuffer.append(b);\n            &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; b;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(stringBuffer);\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["连续的数据用横杠链接，最后将所有数据用逗号连接输出。", ["Java编程：", "集合中存有Integer类型的数据，写一个方法：把连续的数据用横杠链接，最后将所有数据用逗号连接输出。", "例：1 2 3 7 8 10 14  返回：1-3,7-8,10,14", "求一个简单点儿的做法，感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT&lt;br /&gt;&lt;em&gt;请参考下面的解决方案&amp;#xff0c;如果有帮助&amp;#xff0c;还请点击 “采纳” 感谢支持&amp;#xff01;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;这完全取决于题目的要求。如果题目要求每输入一次就立即输出一次结果&amp;#xff0c;那么你就要按照这样来编写程序。如果题目要求收集所有输入再一起输出结果&amp;#xff0c;那么你就要按照这样来编写程序。&lt;/p&gt;\n&lt;p&gt;一般来说&amp;#xff0c;系统是先收集所有输入数据再一起运行程序。程序的输出也是一次性输出。这是因为系统的效率比较高&amp;#xff0c;可以快速处理大量数据。但是&amp;#xff0c;也有可能会通过模拟每次输入一个立即输出的方式来评测程序的正确性&amp;#xff0c;这要根据具体的题目和评测系统的具体实现来确定。&lt;/p&gt;\n&lt;p&gt;下面有个示例&amp;#xff1a;&lt;br /&gt;一个基于每输入一次立即输出一次结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; a) { &lt;span class=\"hljs-comment\"&gt;// 如果可以读入&lt;/span&gt;\n        cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; &lt;span class=\"hljs-comment\"&gt;// 输出&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;一个基于等到所有输入完成后再一起输出结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cin &amp;gt;&amp;gt; n; &lt;span class=\"hljs-comment\"&gt;// 读入数据数量&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;nums&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 存储所有数据&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        cin &amp;gt;&amp;gt; nums[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        cout &amp;lt;&amp;lt; nums[i] &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输入", "Question": ["做算法题的输入输出的小问题", ["有关算法题的一个问题", "就是遇到需要连续输入的，而且每次输入都要有一次输出，编程的过程中是按照用户每输入一个我就直接输出还是用户输入完我再一起输出所有结果，这两种好像一般都能过，大家一般是怎么处理的？还有一个问题就是系统是怎样判定的，系统判定的时候也想我们自己测试一样吗，每输入一组数据，得到相应结果，再输入。还是系统直接把全部需要输入的数据输入，最后直接等程序的结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般这种题目&amp;#xff0c;实际都是输入一个数据&amp;#xff0c;输出一个结果。不是两个输入完成后再一起输出。&lt;br /&gt;非得要都输入完再执行输出&amp;#xff1a;&lt;br /&gt;一种方式&amp;#xff0c;是输入2和100不要换行&amp;#xff0c;用空格分隔&lt;br /&gt;二是定义一个数组&amp;#xff0c;接收所有输入。输入完成后&amp;#xff0c;循环对数组每个输入数据进行处理后输出&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["c语言实现多行输入数据并计算前n项和", ["问一下怎么能实现多行输入，同时进行计算，然后再多行输出？代码要求c语言（要求见图，代码见图）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;vc&amp;#43;&amp;#43;2005/2008中提供了scanf_s(),在最新的VS2019中也提供了scanf_s()。在调用时&amp;#xff0c;必须提供一个数字以表明最多读取多少位字符。&lt;/p&gt;\n\n&lt;p&gt;除了读取字符串外&amp;#xff0c;即使读取单个字符也需要限定长度&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;scanf_s(&amp;#34;%c,%c&amp;#34;,&amp;amp;c1,1,&amp;amp;c2,1);而不能写成scanf_s(&amp;#34;%c,%c&amp;#34;,&amp;amp;c1, &amp;amp;c2,1, 1);&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["用c写了个计算器程序，一输入回车后就报错，有大神能帮我看看这是怎么回事吗？", ["用c写了个计算器程序，一输入回车后就报错，有大神能帮我看看这是怎么回事吗？"]], "Tag": "程序设计"}
{"Answer": "i最初是0\r\na[i] = x%10;\r\n每次赋值到i上\r\n然后\r\ni++\r\n\r\n所以是123", "Konwledge_Point": "数据的输入", "Question": ["计算机是怎么分配数值给数组的？C/C++", ["如下代码，计算机是怎么分配数值给 a[0],a[1],a[2]的。什么原理？", "\n为什么分配的不是a[5];a[6];a[7]???", "\n\n", "#include", "\n //输入一个整数，分离整数的各个数字存入数组。求各元素之和。", "\n int main(void)", "\n {", "\n                    long x;", "\n                    int a[10],i,k,s;", "\n                    i = s = 0;", "\n                    scnaf(\"%ld\",&x);", "\n                    while(x! = 0)", "\n                    {", "\n                            a[i] = x%10;", "\n                            x = x/10;", "\n                            i++;", "\n\n", "                }\n\n                    for(k = 0;k<i;k++)\n                            {\n                            s = s+a[k];\n\n                            }\n", "\n\n", "printf(\"sum = %d\\n\",s);", "\nreturn 0;", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\n#define N 20\r\n\r\ntypedef struct tree\r\n{\r\n\t\tchar data;\r\n\t\tstruct tree *pa;\r\n\t\tstruct tree *lc;\r\n\t\tstruct tree *rc;\r\n}sTre,*pTre;\r\n\r\nvoid output(pTre p);\r\nvoid create_tree(pTre root,char arr[N]);\r\nint pre_create_tree(pTre p,char arr[N],int i);\r\nvoid init_node(pTre *p);\r\nvoid create_memory(pTre *p);\r\nvoid pre(pTre p);\r\nvoid mid(pTre p);\r\nvoid last(pTre p);\r\nvoid free_memory(pTre *p);\r\nvoid delete_node(pTre p);\r\nvoid unload(pTre p);\r\n\r\nint main()\r\n{\r\n\t\tpTre root=NULL;\r\n\t\tinit_node(&amp;root);\r\n\t\tchar arr[N];\r\n\t\tprintf(\"please input pre tree:\\n\");\r\n\t\tgets(arr);\r\n\t\tcreate_tree(root,arr);\r\n\t\toutput(root);\r\n\t\tunload(root);\r\n\t\treturn 0;\r\n}\r\n\r\nvoid create_tree(pTre root,char arr[N])\r\n{\r\n\t\tif(arr[0]=='\\0')\r\n\t\t{\r\n\t\t\t\tprintf(\"input error!\\n\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\troot-&gt;data=arr[0];\r\n\t\tpre_create_tree(root,arr,1);\r\n}\r\n\r\nint pre_create_tree(pTre p,char arr[N],int i)\r\n{\r\n\t\tpTre pnew=NULL;\r\n\t\tif(arr[i]=='\\0')\r\n\t\t{\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\tif(arr[i]!=' ')\r\n\t\t{\r\n\t\t\t\tinit_node(&amp;pnew);\r\n\t\t\t\tpnew-&gt;data=arr[i];\r\n\t\t\t\tp-&gt;lc=pnew;\r\n\t\t\t\tpnew-&gt;pa=p;\r\n\t\t\t\ti=pre_create_tree(pnew,arr,i+1);\r\n\t\t\t\tif(arr[i]=='\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t\tif(arr[i]=='\\0')\r\n\t\t{\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\tif(arr[i]!=' ')\r\n\t\t{ \r\n\t\t\t\tinit_node(&amp;pnew);\r\n\t\t\t\tpnew-&gt;data=arr[i];\r\n\t\t\t\tp-&gt;rc=pnew;\r\n\t\t\t\tpnew-&gt;pa=p;\r\n\t\t\t\ti=pre_create_tree(pnew,arr,i+1);\r\n\t\t}\r\n\t\treturn i;\r\n}\r\n\r\nvoid init_node(pTre *p)\r\n{\r\n\t\tcreate_memory(p);\r\n\t\t(*p)-&gt;pa=NULL;\r\n\t\t(*p)-&gt;lc=NULL;\r\n\t\t(*p)-&gt;rc=NULL;\r\n}\r\n\r\nvoid create_memory(pTre *p)\r\n{\r\n\t\t*p=malloc(sizeof(sTre));\r\n\t\tif(NULL==*p)\r\n\t\t{\r\n\t\t\t\tprintf(\"create memory error!\\n\");\r\n\t\t\t\texit(-1);\r\n\t\t}\r\n}\r\n\r\nvoid pre(pTre p)\r\n{\r\n\t\tif(p!=NULL)\r\n\t\t{\r\n\t\t\t\tprintf(\"%c \",p-&gt;data);\r\n\t\t\t\tpre(p-&gt;lc);\r\n\t\t\t\tpre(p-&gt;rc);\r\n\t\t}\r\n}\r\nvoid mid(pTre p)\r\n{\r\n\t\tif(p!=NULL)\r\n\t\t{\r\n\t\t\t\tmid(p-&gt;lc);\r\n\t\t\t\tprintf(\"%c \",p-&gt;data);\r\n\t\t\t\tmid(p-&gt;rc);\r\n\t\t}\r\n}\r\nvoid last(pTre p)\r\n{\r\n\t\tif(p!=NULL)\r\n\t\t{\r\n\t\t\t\tlast(p-&gt;lc);\r\n\t\t\t\tlast(p-&gt;rc);\r\n\t\t\t\tprintf(\"%c \",p-&gt;data);\r\n\t\t}\r\n}\r\n\r\nvoid unload(pTre p)\r\n{\r\n\t\tif(p!=NULL)\r\n\t\t{\r\n\t\t\t\tunload(p-&gt;lc);\r\n\t\t\t\tunload(p-&gt;rc);\r\n\t\t\t\tdelete_node(p);\r\n\t\t}\r\n}\r\n\r\nvoid delete_node(pTre p)\r\n{\r\n\t\tp-&gt;pa=NULL;\r\n\t\tfree_memory(&amp;p);\r\n}\r\n\r\nvoid free_memory(pTre *p)\r\n{\r\n\t\tif(*p!=NULL)\r\n\t\t{\r\n\t\t\t\tfree(*p);\r\n\t\t\t\t*p=NULL;\r\n\t\t}\r\n}\r\n\r\nvoid output(pTre p)\r\n{\r\n\t\tprintf(\"pre:\");\r\n\t\tpre(p);\r\n\t\tprintf(\"\\nmid:\");\r\n\t\tmid(p);\r\n\t\tprintf(\"\\nlast:\");\r\n\t\tlast(p);\r\n\t\tprintf(\"\\n\");\r\n}", "Konwledge_Point": "数据的输入", "Question": ["数据结构 二叉树的建立与相关运算", ["二叉树的建立与相关运算", "\n  以广义表的形式输入二叉树，建立二叉链表，完成如下功能：", "\n三种递归遍历", "\n计算并输出单分支节点，双分支结点，叶子结点及其个数。", "\n把任一种递归算法改为非递归算法。"]], "Tag": "程序设计"}
{"Answer": "swich判断区域，在catch中写for循环，按照规则加分，if判断跳出循环", "Konwledge_Point": "数据的输入", "Question": ["求大神解答第七题用T－sql", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用全局变量记录选中的数据的id&amp;#xff0c;选一个往集合里加一个id。翻页也不会影响&amp;#xff0c;只有复选框选中和取消选中才会更改集合的值&lt;/p&gt;", "Konwledge_Point": "数据的输入", "Question": ["bootstrap表格筛选后跨页全选获取数据", ["问题：", "\n", "我使用的是bootstrap-table表格，目前有一个需求，就是想要在搜索框输入条件过滤后查出来的数据进行全选，然后执行操作比如删除这些全选的数据。但是无法实现", " ①  ", "跨页全部选中并获取这些数据的主键id值", "；", "② ", "点击翻页后保留原先页的勾选状态不消失", "\n", "想问一下有没有实现办法？查了好多资料都不行。只能获取本页数据", "\n", "（哦对了，web的分页逻辑是每点击一页向后台查询这一页的数据，为了减轻查询压力）"]], "Tag": "程序设计"}
{"Answer": "http://bbs.csdn.net/topics/360188060\r\n\r\n我分享过。", "Konwledge_Point": "数据的输入", "Question": ["C#计算文本框输入的算式", ["如何判定C#中用户在一个文本框内输入的算式是否合法并得出该算式答案，可以用加减乘除及括号"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/u013885699/article/details/21111601", "Konwledge_Point": "数据的输入", "Question": ["最短路                  ", ["Problem Description", "\n\n", "在每年的校赛里，所有进入决赛的同学都会获得一件很漂亮的t-shirt。但是每当我们的工作人员把上百件的衣服从商店运回到赛场的时候，却是非常累的！所以现在他们想要寻找最短的从商店到赛场的路线，你可以帮助他们吗？", "\n\n", "Input", "\n\n", "输入包括多组数据。每组数据第一行是两个整数N、M（N<=100，M<=10000），N表示成都的大街上有几个路口，标号为1的路口是商店所在地，标号为N的路口是赛场所在地，M则表示在成都有几条路。N=M=0表示输入结束。接下来M行，每行包括3个整数A，B，C（1<=A,B<=N,1<=C<=1000）,表示在路口A与路口B之间有一条路，我们的工作人员需要C分钟的时间走过这条路。", "\n\n", "输入保证至少存在1条商店到赛场的路线", "\n\n", "Output", "\n\n", "对于每组输入，输出一行，表示工作人员从商店走到赛场的最短时间", "\n\n", "Sample Input", "\n\n", "2 1", "\n\n", "1 2 3", "\n\n", "3 3", "\n\n", "1 2 5", "\n\n", "2 3 5", "\n\n", "3 1 2", "\n\n", "0 0", "\n\n", "Sample Output", "\n\n", "3", "\n\n", "2"]], "Tag": "程序设计"}
{"Answer": "先用fiddler得到获取json的网址。然后用fiddler获取。用System.Runtime.Serialization.Json解析\r\nhttp://www.cnblogs.com/ambar/archive/2010/07/13/parse-json-via-csharp.html", "Konwledge_Point": "数据的输入", "Question": ["c#代码中, 如何获取网页中的json数据?", ["用浏览器访问java的web项目, 输入网址,返回json,形如:", "\n[{\\'a\\':\\'1\\',\\'b\\':\\'2\\'},{\\'c\\':\\'3\\',\\'d\\':\\'4\\'}]", "\n\n", "如何在c#代码里获取这个json串呢? 有没有现成类库或方法???"]], "Tag": "程序设计"}
{"Answer": "你的这句fwrite (Array , 1 , 8 , FP ) ;最好写成fwrite (Array , 8, 1 , FP ) ;\r\nfwrite是二进制读写的，你直接双击打开文件当然是看不到写入的数据的，用fread读一下你就知道你写入正确了没\r\n\r\n```\r\n #include &lt;iostream&gt;\r\n#include&lt;fstream&gt;\r\n\r\nint main()\r\n{\r\n\tusing namespace std ;\r\n\r\n\tcout &lt;&lt; \"Please Enter two integers : \" &lt;&lt; endl ; \r\n\r\n\tconst int Arraysize = 2 ;\r\n\r\n\tint Array [ Arraysize ]  ;\r\n\r\n\tfor ( size_t size = 0 ; size != Arraysize ; ++ size )\r\n\t{\r\n\t\tcin &gt;&gt; Array [size];\r\n\t}\r\n\r\n\tconst char* filename = \"C:\\\\save_data.txt\" ;\r\n\tFILE* FP = fopen( filename , \"wb\") ;\r\n\r\n\tif ( FP == NULL )\r\n\t{\r\n\t\tcout &lt;&lt; \"failed to save data \" &lt;&lt; endl ;\r\n\t\treturn -1 ;\r\n\t}\r\n\r\n\tfwrite (Array , 1 , 8, FP ) ;\r\n\r\n\tfclose (FP) ;\r\n\r\n\r\n\t//读取写入的数据\r\n\tFILE* FP2 = fopen( filename , \"rb\") ;\r\n\tint Array2[ Arraysize ]  ;\r\n\tfread(Array2, 8, 1, FP2);  \r\n\tcout &lt;&lt; Array2[0] &lt;&lt; \",\" &lt;&lt; Array2[1] &lt;&lt; endl;\r\n\r\n\r\n\r\n\r\n\tsystem(\"pause\") ;\r\n}\r\n```", "Konwledge_Point": "数据的输入", "Question": ["C++ 文件输入保存  问题 ", ["#include ", "\n#include", "\n\n", "int main()", "\n{", "\n    using namespace std ;", "\n\n", "cout << \"Please Enter two integers : \" << endl ; \n\nconst int Arraysize = 2 ;\n\nint Array [ Arraysize ]  ;\n\nfor ( size_t size = 0 ; size != Arraysize ; ++ size )\n{\n    cin >> Array [size];\n}\n\nconst char* filename = \"C:\\\\save_data.txt\" ;\nFILE* FP = fopen( filename , \"wb\") ;\n\nif ( FP == NULL )\n{\n    cout << \"failed to save data \" << endl ;\n    return -1 ;\n}\n\nfwrite (Array , 1 , 8 , FP ) ;\n\nfclose (FP) ;\n\nsystem(\"pause\") ;\n}\n为什么这段代码输入2个整型数据后，打开保存的文档，看到的内容却不是输入的内容，比如我输入11 11 ，结果却显示如下：\n![图片说明](https://img-ask.csdn.net/upload/201607/22/1469160059_585329.png)\n我感觉和下面的代码类似，下面却可以保存成功：\n    //const char *filename = \"C:/save_data.txt\" ;\n\n//FILE *fp = fopen(filename,\"wb\") ;\n\n//if ( fp == NULL )\n//{\n//  cout << \"failed to save data \" << endl ;\n//  return -1 ;\n//}\n\n//char buf[] = \"Hello\" ;\n\n//fwrite(buf,1,5,fp) ;\n//fclose(fp);\n为什么啊？\n麻烦各位C++大神，点拨一下小弟！十分感谢！！！\n"]], "Tag": "程序设计"}
