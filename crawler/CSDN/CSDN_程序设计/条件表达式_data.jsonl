{"Answer": "&lt;p&gt;这里面括号优先级最高&lt;br /&gt;先看 a &amp;lt; b为真&amp;#xff0c;相当于&lt;br /&gt;if( !((1)&amp;amp;&amp;amp;!c||1) )&lt;br /&gt;然后进行 !c 运算 为假也就是0&lt;br /&gt;if( ! ( (1) &amp;amp;&amp;amp; 0 || 1 ) )&lt;br /&gt;1 &amp;amp;&amp;amp; 0为假&lt;br /&gt;if( ! ( 0 || 1 ) )&lt;br /&gt;0 || 1为真&lt;br /&gt;if( ! ( 1) )&lt;br /&gt;!1为假&lt;br /&gt;if(0)&lt;br /&gt;所以为假&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["C语言：条件表达式判断问题", ["运行结果", "代码如下；", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n", "int", " a=", "3", ",b=", "4", ",c=", "5", ";\n", "if", "(!((a<b)&&!c||", "1", "))\n", "printf", "(", "\"%d\"", ",++a);\n", "else", "\n", "printf", "(", "\"%d\"", ",a);\n    ", "return", " ", "0", ";\n}\n\n", "\n", "请问，if语句的条件表达式怎么判断真假？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;&amp;#xff01;的优先级高于&amp;gt;&amp;#xff0c;所以先执行!10&amp;#xff0c;!10&amp;#61;0&amp;#xff0c;所以0&amp;gt;3为假&amp;#xff0c;根据条件表达式&amp;#xff0c;应执行“&amp;#xff1a;”之后的语句即“1”。所以a&amp;#61;1&lt;br /&gt;&amp;#xff08;2&amp;#xff09;需注意“&amp;#xff1a;”后面的表达式不要误以为是逗号表达式。逗号表达式的写法应该是&amp;#xff1a;a &amp;#61; (!10 &amp;gt; 3) ? 2 &amp;#43; 4 :&amp;#xff08;1, 2, 3&amp;#xff09;;这样的话结果是3.&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c++条件表达式的输出是多少", ["为啥这个条件表达式输出结果是1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;理解一下&lt;br /&gt;w&amp;lt;x吗&amp;#xff1f;是的&amp;#xff0c;所以结果为w返回1&amp;#xff0c;结束啦&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["若w=1,x=2,y=3,z=4,则条件表达式w<x?w:y<z?y:z的结果为", ["若w=1,x=2,y=3,z=4,则条件表达式w<x?w:y<z?y:z的结果为         "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;C语言中0可以表示false。&lt;br /&gt;当k&amp;#61;0时,(k)的结果是false,&amp;#xff08;k!&amp;#61;0)的结果也是false&lt;br /&gt;当k!&amp;#61;0时,(k)的结果是true,&amp;#xff08;k!&amp;#61;0)的结果也是true&lt;/p&gt;\n&lt;p&gt;其他几个选项都没有等价的效果。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["C语言中条件表达式的选择题", ["对于条件表达式   (k)?(i++):(i--)   来说，其中表达式k等价于（）", "A. k==0      B. k==1    C.k!=0      D.k!=1", "\n", "为什么选C，不可以选择其他的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#39;1&amp;#39; if 1&amp;gt;2 else &amp;#34;100&amp;#34;&amp;#xff0c;正确的方式是这样的&amp;#xff0c;如果if后的条件满足就取if前的值&amp;#xff0c;如果不满足就取else后面的值。pass是一个占位语句&amp;#xff0c;不能用来赋值&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["python 3.0 条件表达式 pass 报错，如何解决？", ["问题遇到的现象和发生背景", "\n", "python3.0 条件表达式里是不可以单独使用pass吗？", "\n", "问题相关代码，请勿粘贴截图", "\n", "print('1' if 1>2 else pass) ", "\n", "运行结果及报错内容", "\n", "invalid syntax", "\n", "我的解答思路和尝试过的方法", "\n", "在pass前随便加一个字符就可以运行了，但是为什么呢？"]], "Tag": "程序设计"}
{"Answer": "表达式的结果要有参数去接受，例如int k = (j == 0) ? timesOfZero++ : timesOfOne++;\r\n这样的式子是可以运行的", "Konwledge_Point": "条件表达式", "Question": ["Java中的三目条件表达式?:", ["[code=\"java\"]public class ThrowCoins {", "\n    public static void main(String[] args) {", "\n        Random rand = new Random();", "\n        int timesOfZero = 0;", "\n        int timesOfOne = 0;", "\n        int times = 1000000;", "\n\n", "    int j = 0;\n    for (int i = 0; i < times; i++) {\n        j = rand.nextInt(2);\n", "\n\n", "//            if (j == 0) {", "\n//                timesOfZero++;", "\n//            } else {", "\n//                timesOfOne++;", "\n//            }", "\n            (j == 0) ? timesOfZero++ : timesOfOne++;", "\n        }", "\n\n", "    System.out.println(\"Times of zero:\" + timesOfZero);\n    System.out.println(\"Times of one:\" + timesOfOne);\n    System.out.println(\"Times:\" + times);\n    System.out.println(\"The total proportion of 0 is:\" + timesOfZero / (double)times);\n}\n", "\n\n", "}[/code]", "\n代码如上。会在有?:这一行报错，把这一行改成", "code=\"java\"", " == 0) ? timesOfZero++ : timesOfOne++;[/code]也会报错", "\n但是改成如下就不会错了", "\n[code=\"java\"] （j = rand.nextInt(2) == 0) ? timesOfZero++ : timesOfOne++;[/code]", "\n我想知道为什么"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT\n    C.cart_id,\n    I.item_id,\n    C.quantity,\n    COALESCE(I.discounted_price, I.price) AS price\nFROM\n    cart C,\n    item I\nWHERE\n    I.item_id = C.item_id\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://dev.mysql.com/doc/refman/4.1/en/comparison-operators.html#function_coalesce\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;COALESCE&lt;/code&gt;&lt;/a&gt; selects the first non null value from a list of arguments. That is, when discount_price is NULL, it returns price.&lt;/p&gt;\n\n&lt;p&gt;If your 'null' value is 0.00, you can use this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT\n    C.cart_id,\n    I.item_id,\n    C.quantity,\n    IF(I.discounted_price &amp;gt; 0, I.discounted_price, I.price) AS price\n    ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is, if discounted price is greater than zero, use that, otherwise use the normal price.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["SQL中的条件表达式", ["\n\n", "I am using MYSQL and PHP.  I have a table called item. Two of its attributes are price and discounted price.I have SELECT statement as below:", "\n\n", "$sql = \n'SELECT C.cart_id,I.item_id,C.quantity, I.discounted_price,I.price\nFROM cart C, item I\nWHERE I.item_id = C.item_id';\n", "\n\n", "I want to modify this sql statement and include a conditional expression such that: if discounted_price is 0, it selects price else, discounted_price is selected.\nCan conditional expression be used in an SQL statement?\nThanks!\n:)", "\n    "]], "Tag": "程序设计"}
{"Answer": "通过获取变量的方式实现，首先获取code字段是空的行数，作为一个变量，然后加一个条件判断的组件，如果这个变量大于1，就直接成功。否则就跑trans。\r\n不知道为什么mac系统上传图片点击无效。我只能打字了。\r\n你可以单独在一个trans里使用‘表输入’和‘设置变量’组件，其中‘设置变量’组件可以设置变量影响范围。\r\n然后在job的‘条件’里，有一个‘检查条件的值’，检验选择‘变量’即可。然后链接线是x就是不成功的路线，常见的绿色就是成功的路线。", "Konwledge_Point": "条件表达式", "Question": ["在kettle中如何进行条件判断", ["需求如下：", "\n   kettle需要在抽取时对excel进行 某一字段（如code）进行判断，", "\n     如果所有code字段不为空，则继续整个transformation，", "\n     如果code字段有一行为空，则整个transformation停止。", "\n     请问有朋友知道这个在kettle中有什么实现方法吗？"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201909/18/1568773897_832609.jpg)\r\n就是个优先级的问题，!=优先级比^高，[链接](https://blog.csdn.net/caomin1hao/article/details/79510141 \"\")\r\n其次true和false会自动转化为1和0参与其他运算。", "Konwledge_Point": "条件表达式", "Question": ["异或表达式作为条件语句的问题", ["int count=10;", "\n    for(int i=0;i^count!=0;i++)", "\n    {", "\n        cout<<i<<endl;", "\n    }", "\n\n", "for(int i=0;(int)(i^count)!=0;i++)\n{\n    cout<<i<<endl;\n}\n", "\n\n", "如上 第一个for循环只能循环一次 第二个能正常循环10次", "\n这是为什么ne"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;选B。条件表达式x就代表x的值&amp;#xff0c;不为0时则true&amp;#xff0c;x&amp;#61;&amp;#61;0时表达式的值即为0则false&amp;#xff0c;B的效果与此一致&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["”完全等价于条件表达式x“是什么意思", ["\n", "这个 “完全等价于条件表达式x”是什么意思？  不明白 为什么是x!=0"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;int a&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;b&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;d&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ncin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b&amp;gt;&amp;gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nd&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;a&amp;gt;b?(a&amp;gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;?a:b&amp;gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;?b:&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;):(b&amp;gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;?b:a&amp;gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;?a:&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ncout&amp;lt;&amp;lt;d&lt;span class=\"hljs-comment\"&gt;;\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["输入三个数 利用条件表达式计算三个数的最大值并输出", ["输入三个数 利用条件表达式计算三个数的最大值并输出", "运行样例：输入5 8 7；输出8"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The difference between expressions and statements is that expressions produce a value and thus can be used in places where values are required. So expressions can be used as values for variables, arguments to functions or operands to operators. Statements can't.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;and what does he mean that \"you need values rather than variables\" in his question?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I assume that by vals he means constants (which are called &lt;code&gt;val&lt;/code&gt;s in Scala for example).&lt;/p&gt;\n\n&lt;p&gt;If &lt;code&gt;if&lt;/code&gt; were an expression, you could do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const myValue = if condition { value1 } else { value2 }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As it is, you have to do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var myValue\nif condition {\n    myValue = value1\n} else {\n    myValue = value2\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you needed to make your variable mutable (use &lt;code&gt;var&lt;/code&gt; instead of &lt;code&gt;const&lt;/code&gt;), which is what the person asking the question likely meant.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["if作为表达式和if作为语句之间的区别", ["\n\n", "So I was watching this video on the Go language - ", "https://www.youtube.com/watch?v=p9VUCp98ay4", " , and at around 6:50 a guy asks a question about why they implemented if's as statements and not expressions. What is the difference between those two implementations? As far as I know, I've never had to change the way I use a conditional based on the language.", "\n\n", "Edit: and what does he mean that \"you need values rather than variables\" in his question?", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n你返回的是double *，而 d_Arry_1 是 double[]*\r\n```", "Konwledge_Point": "条件表达式", "Question": ["C语言指针类型不匹配问题", ["这是一个练习变长数组的代码先上代码", "\n\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#define LEN 3\n#define WID 5\nvoid show(int n,int m,double ar[n][m]);\ndouble * Copy(int n,int m,double ar[n][m],double br[n][m]);\nint main(void)\n{\n    double d_Arry[LEN][WID];\n    double (* d_Pointer_1)[WID];\n    double d_Arry_1[LEN][WID];\n\n    srand(time(0));\n\n    for(int i = 0; i < LEN; i++)\n    {\n        for(int j = 0; j < WID; j++)\n        {\n            d_Arry[i][j] = (rand() % 10) * 0.1;\n        }\n    }\n\n    show(LEN,WID,d_Arry);\n\n    putchar('\\n');\n\n    d_Pointer_1 = Copy(LEN,WID,d_Arry,d_Arry_1);//第28行\n\n    show(LEN,WID,d_Pointer_1);\n\n    putchar('\\n');\n\n    return 0;\n\n}\n\nvoid show(int i_Len,int i_Width,double d_Arry[i_Len][i_Width])\n{\n    for(int i = 0; i < i_Len; i++)\n    {\n        for(int j = 0; j < i_Width; j++)\n        {\n            printf(\"%3.1f  \",d_Arry[i][j]);\n        }\n        putchar('\\n');\n    }\n}\n\ndouble * Copy(int i_Len,int i_Width,double d_Arry[i_Len][i_Width],double d_Arry_1[i_Len][i_Width])\n{\n\n\n        for(int i = 0; i < i_Len; i++)\n    {\n        for(int j = 0; j < i_Width; j++)\n        {\n            d_Arry_1[i][j] = d_Arry[i][j];\n        }\n    }\n\n    return d_Arry_1;//第62行\n}\n", "\n\n", "我只是搞不懂为啥28行和62行指针类型会不匹配，求大神指点", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if a&amp;gt;b:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  print(&amp;#39;a大&amp;#39;)&lt;/span&gt;&lt;br /&gt;elif a&amp;lt;b:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  print(&amp;#39;b大&amp;#39;)&lt;/span&gt;&lt;br /&gt;else:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  print(&amp;#39;a和b一样大&amp;#39;)&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件表达式只适合单分支结构吗？", ["在学习条件表达式时不会解决双分支结构的比较问题，请问如果要比较两个数的大于、小于、等于的话如何用条件表达式进行比较，谢谢😊"]], "Tag": "程序设计"}
{"Answer": "简单的判断方面或者比较是否相等，如：return str?\"男\":\"女\";", "Konwledge_Point": "条件表达式", "Question": ["三目运算符一般应用在哪里?", ["三目运算符一般应用在哪里?", "\n三目运算符一般应用在哪里?", "\n三目运算符一般应用在哪里?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;c里面非0为真(true)&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["求解析：若有条件表达式（exp）？a++：b--，则以下表达式中能完全等价于 表达式（exp）的是（）", ["难度：中 题号：575 第22章", "若有条件表达式（exp）？a++：b--，则以下表达式中能完全等价于", "表达式（exp）的是（）", "A:（exp--0）", "B:（exp！=0）", "C:（exp==1）", "D:（exp!=1）", "答案：B", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;x&amp;lt;&amp;#61;4肯定就&amp;lt;&amp;#61;12了&lt;br /&gt;条件重复了&lt;br /&gt;是不是想表达x&amp;gt;&amp;#61;4&amp;amp;&amp;amp;x&amp;lt;&amp;#61;12&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["敲Java代码的时，表达式结果总是false或总是true", ["编辑的时候为什么总是出现这4个警告，该怎么改呢？或者说在输入一个值时用4个条件分别进行判断并得到相应的结果，该怎么写呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-javascript\"&gt;(&amp;#96;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type&amp;#61;&amp;#39;checkbox&amp;#39; class&amp;#61;&amp;#39;cbx_select&amp;#39; id&amp;#61;&amp;#39;cbx_product_select_&amp;#34; &amp;#43; product_id &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;lt;label for&amp;#61;&amp;#39;cbx_product_select_&amp;#34; &amp;#43; product_id &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_name &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_name &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_title &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_title &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_price &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_price &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_sale_price &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_sale_price &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_create_date &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_create_date &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;&amp;#34; &amp;#43; isEnabledClass &amp;#43; &amp;#34;&amp;#39; title&amp;#61;&amp;#39;&amp;#34; &amp;#43; isEnabledTitle &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; isEnabled &amp;#43;\n            &amp;#34;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;td_special&amp;#39; title&amp;#61;&amp;#39;查看产品详情&amp;#39;&amp;gt;&amp;lt;a href&amp;#61;&amp;#39;javascript:void(0);&amp;#39; onclick&amp;#61;&amp;#39;getChildPage(this)&amp;#39;&amp;gt;详情&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;#34;\n            &amp;#43; &amp;#34; &amp;#34; &amp;#43; &amp;#34;&amp;lt;span class&amp;#61;&amp;#39;td_special&amp;#39; title&amp;#61;&amp;#39;删除产品&amp;#39;&amp;gt;&amp;lt;a href&amp;#61;${pageContext.request.contextPath}/order/deliveryss/${product.product_id}&amp;gt;删除&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td hidden&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;product_id&amp;#39;&amp;gt;&amp;#34;\n            &amp;#43; product_id &amp;#43; &amp;#34;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#96;)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;${}是es6语法模板字符串&amp;#xff0c;有了这个就不用字符串拼接了&amp;#xff0c;直接用模板字符串&lt;/p&gt;\n\n&lt;p&gt;或者字符串拼接&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-javascript\"&gt; tbody.innerHTML&amp;#61;(&amp;#34;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type&amp;#61;&amp;#39;checkbox&amp;#39; class&amp;#61;&amp;#39;cbx_select&amp;#39; id&amp;#61;&amp;#39;cbx_product_select_&amp;#34; &amp;#43; product_id &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;lt;label for&amp;#61;&amp;#39;cbx_product_select_&amp;#34; &amp;#43; product_id &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_name &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_name &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_title &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_title &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_price &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_price &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_sale_price &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_sale_price &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td title&amp;#61;&amp;#39;&amp;#34; &amp;#43; product_create_date &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; product_create_date &amp;#43; &amp;#34;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;&amp;#34; &amp;#43; isEnabledClass &amp;#43; &amp;#34;&amp;#39; title&amp;#61;&amp;#39;&amp;#34; &amp;#43; isEnabledTitle &amp;#43; &amp;#34;&amp;#39;&amp;gt;&amp;#34; &amp;#43; isEnabled &amp;#43;\n            &amp;#34;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;td_special&amp;#39; title&amp;#61;&amp;#39;查看产品详情&amp;#39;&amp;gt;&amp;lt;a href&amp;#61;&amp;#39;javascript:void(0);&amp;#39; onclick&amp;#61;&amp;#39;getChildPage(this)&amp;#39;&amp;gt;详情&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;#34;\n            &amp;#43; &amp;#34; &amp;#34; &amp;#43; &amp;#34;&amp;lt;span class&amp;#61;&amp;#39;td_special&amp;#39; title&amp;#61;&amp;#39;删除产品&amp;#39;&amp;gt;&amp;lt;a href&amp;#61;&amp;#34;&amp;#43;pageContext.request.contextPath&amp;#43;&amp;#39;/order/deliveryss/&amp;#39;&amp;#43;product.product_id&amp;#43;&amp;#34;&amp;gt;删除&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td hidden&amp;gt;&amp;lt;span class&amp;#61;&amp;#39;product_id&amp;#39;&amp;gt;&amp;#34;\n            &amp;#43; product_id &amp;#43; &amp;#34;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#34;);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["ajax里的el表达式要怎么写呀？", ["\n", "jsp里的代码：\n<td><span class=\"td_special\" title=\"查看产品详情\"><a href=\"javascript:void(0)\" onclick=\"getChildPage(this)\">详情</a></span>\n<span class=\"td_special\" title=\"删除产品\"><a href=\"${pageContext.request.contextPath}/order/deliveryss/${product.product_id}\">删除</a></span></td>\n<td hidden><span class=\"product_id\">${product.product_id}</span></td>", "\n", "\n\n", "ajax里写的是这样：", "\n\n", "\n", "tbody.append(\"<tr><td><input type='checkbox' class='cbx_select' id='cbx_product_select_\" + product_id + \"'><label for='cbx_product_select_\" + product_id + \"'></label></td><td title='\"+product_name+\"'>\" + product_name + \"</td><td title='\"+product_title+\"'>\" + product_title + \"</td><td title='\"+product_price+\"'>\" + product_price + \"</td><td title='\"+product_sale_price+\"'>\" + product_sale_price + \"</td><td title='\"+product_create_date+\"'>\" + product_create_date + \"</td><td><span class='\" + isEnabledClass + \"' title='\"+isEnabledTitle+\"'>\"+ isEnabled +\n    \"</span></td><td><span class='td_special' title='查看产品详情'><a href='javascript:void(0);' onclick='getChildPage(this)'>详情</a></span>\"\n    + \" \"+ \"<span class='td_special' title='删除产品'><a href='${pageContext.request.contextPath}/order/deliveryss/${product.product_id}'>删除</a></span></td><td hidden><span class='product_id'>\"\n    + product_id + \"</span></td></tr>\");", "\n\n", "jsp里的删除方法是好用的 一点击下一页触发ajax方法后 删除方法就不好用了 是哪里写错了吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n#include &amp;lt;iostream&amp;gt;\nusing namespace std;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;,mon,&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; arr[]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;};\n    cin &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;gt;&amp;gt; mon &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        arr[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;;\n    for (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;mon;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; arr[i];\n    }\n    &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;年&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; mon &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;月共有&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt; arr[mon]&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;天&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;年&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; mon &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;月&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;日是今年的第&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;天&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["用条件表达式 输入某月某日，判断这一天是这一年的第几天", ["用条件表达式", "输入某月某日，判断这一天是这一年的第几天"]], "Tag": "程序设计"}
{"Answer": "http://wenku.baidu.com/link?url=MhSBxSbdD2FZljV2fCFGnpzziuNQKaC9xNHa9Ua2lqO8vecw7xW7kZ4NUBOaXgZDplisZZA6dc-wK4cpDr8G1vQk0XiizauriNvlTOt3bcm", "Konwledge_Point": "条件表达式", "Question": ["VB .60条件表达式的sql server 2000数据库执行", ["用ado在VB中写的条件表达式如何带入sql server2000中执行？怎么根据表达式获取数据集并返回？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你每三个值&amp;#xff0c;拼接一下&amp;#xff0c;放map集合就可以了。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["提问 如何编写这种条件的for循环语句", ["现有一需求，从数据库中获取出了一段String数组\"1，2，0，3，4，5\"，现需要将数组内每三个值存入一个Map中", "Map格式为：“key：1，number ：“1,2,0” ，key：2，number ：“3,4,5””,求一段for循环语句"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;0表示假&amp;#xff0c;这个条件表达式的意思是当M为真时&amp;#xff0c;a&amp;#43;&amp;#43;&amp;#xff0c;否则a--。为什么等价&amp;#xff1f;因为M为真即表示M&amp;#xff01;&amp;#61;0&amp;#xff0c;0为假&amp;#xff0c;非0为真。&lt;br /&gt;考察的就是对三目运算符 和自增自减运算的理解。&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff0c;望采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["（M）？（a++）:(a--)这个表达式是什么意思啊？", ["（M）？（a++）:(a--)这个表达式是什么意思啊？", "其中表达（M）为什么与（M！=0）等价而不是与（M==0）等价？"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;你可以看下这个问题的回答&lt;a href=\"https://ask.csdn.net/questions/7428930\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7428930&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "条件表达式", "Question": ["多个变量的条件表达式如何编写", ["如果有三个或者多个变量，怎么用条件表达式求最大值?", "#include<stdio.h>", "int main()", "{", "int a,b,c;", "int max;", "printf(\"请输入三个整数\\n\",a,b,c);", "scanf(\"%d,%d,%d\",&a,&b,&c);", "max=a>b?a:b>c?b:c;", "printf(\" max=%d\\n\", max);", "}", "结果一输入3它就跳出来max=127"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;意思在if中将 !c 的结果赋值给g&amp;#xff0c;而不需要先定义g&amp;#xff0c;相当于&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;g&lt;/span&gt; &amp;#61; !c;\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; (g || h.horms )\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["js条件表达式求解if (g = !c || h.forms)", ["括号中的条件表达式让我不理解，=是什么意思，不应该是==吗？", "求解 这是我在浏览器开发者工具中看到的代码", "\n", "if (", "g", " = !c || h.forms)\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;举个例子&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;x&amp;gt;y ? x:y;  这个语句的意思就是比较x,y的大小&amp;#xff0c;如果语句正确返回x,否则返回y.&lt;/p&gt;\n\n&lt;p&gt;题目中 a&amp;#61;(--m&amp;#61;n&amp;#43;&amp;#43;)?  --m:&amp;#43;&amp;#43;n; 意思也是一样&amp;#xff0c;判断--m是否与n&amp;#43;&amp;#43;的值相等&amp;#xff0c;相等返回--m,否则返回&amp;#43;&amp;#43;n,--m先执行--即等于9&amp;#xff0c;n&amp;#43;&amp;#43;先执行n&amp;#61;9再算&amp;#43;&amp;#43;,所以等式成立都等于9&amp;#xff0c;返回--m,--在前先执行&amp;#xff0c;因为m此前执行了--&amp;#xff0c;值为9&amp;#xff0c;所以再执行--&amp;#xff0c;值就为8了。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言 : (冒号) 是什么？结果a为什么等于8", ["#include <stdio.h>", "\n\n", "int main()", "\n{", "\n    int a ,m=10,n=9;", "\n    a=(--m==n++)?", "\n        --m:++n;", "\n\n", "    printf(\"%d\\n\",a);", "\n    ", "\n    return 0;", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "定义数组\r\ndouble net[长度];", "Konwledge_Point": "条件表达式", "Question": [" QT出现错误：“QString”类型的条件表达式是非法的 没有可用于执行该转换的用户定义的转换运算符，或者无法调用该运算符", ["程序如下：", "\n     if((ui->comboBox_1->currentText())=\"无\")test_data[3]=0*0.6/120+0.2;"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;for i in range(100, 1000):\n    a &amp;#61; i // 100\n    b &amp;#61; (i - a * 100) // 10\n    c &amp;#61; (i - a * 100 - b * 10)\n    if i &amp;#61;&amp;#61; pow(a, 3) &amp;#43; pow(b, 3) &amp;#43; pow(c, 3):\n        print(i)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["输出三位数的水仙花数", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最好不要这样写代码&amp;#xff0c;这个逻辑不是能不能的问题&amp;#xff0c;而是编译器底层的处理逻辑决定的。&lt;br /&gt;但是按照严格的语义&amp;#xff0c;是不允许的&amp;#xff0c;没必要纠结&amp;#xff0c;不要用他就好。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["C语言中的变量赋值问题", ["C语言中能把一个只是定义了但是没有赋值的变量赋值给另一个也是只定义没有赋值的变量吗", "\n", "int ", "a", ",b；\n", "a", "=b；\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;三目运算符  a?b:c。&lt;br /&gt;根据上次的经验&amp;#xff0c;我们知道a这边是一个判断语句&amp;#xff0c;也就是if(a),然而在c/c&amp;#43;&amp;#43;中&amp;#xff0c;if语句里面的!&amp;#xff1d;0可以省略不写&amp;#xff0c;所以完整格式应该是if(a!&amp;#xff1d;0}.有题知a是不等于0的&amp;#xff0c;所以为真。输出b。所以也就是d&amp;#xff1d;b&amp;#xff1d;3&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件运算符和条件表达式", ["int a=2，b=3，c=-1；d=a？b：c；此处 d 的值为？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;d&amp;#61;a&amp;#xff1f;b&amp;#xff1a;c&amp;#xff1b;&lt;br /&gt;三目运算符&amp;#xff1a;如果d&amp;#61;a&amp;#xff0c;执行b&amp;#xff0c;反之执行c&lt;br /&gt;所以&lt;br /&gt;a&amp;#61;2&lt;br /&gt;b&amp;#61;3&lt;br /&gt;c&amp;#61;-1&lt;br /&gt;d&amp;#61;3&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件运算符与条件表达式", ["int a=2，b=3，c=-1；d=a？b：c；此处 d 的值为？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;判断条件是假如说x&amp;gt;y,那么就输出x,否则就输出y.&lt;br /&gt;有这道题我们可以知道x&amp;lt;y,所以输出y,z&amp;#xff1d;y&amp;#xff1d;5。&lt;br /&gt;结论是正确的。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件表达式与条件运算符", ["int x=4,y=5,z; z=x>y?x:y;”后，z 的值是？", "是等于5么"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes, but only if you have PHP 5.3+ installed. You can simply miss out the middle part:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$x ?: $y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See the documentation in the manual for &lt;a href=\"http://www.php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary\" rel=\"nofollow noreferrer\"&gt;comparison operators&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["是否有更简洁的方式写“$ a？  $ a：$ b“？", ["\n\n", "In PHP, is there a more concise way of writing ", "$x ? $x : $y", "? Repeating ", "$x", " feels unnecessary, especially if it's a longer expression. It's not very important how false values are handled, as long as ", "$y", " is returned when ", "$x", " is undefined or null.", "\n\n", "In Perl, I'd use ", "$x // $y", " or ", "$x || $y", ".", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You just need to recurse such a structure, and switch according to the first element:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;If it's a string, then treat the remaining arguments as operands/expressions, &lt;a href=\"http://php.net/join\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;join&lt;/code&gt;ed&lt;/a&gt; by operator&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;For associative arrays, just concat field/compare/value into a string&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function join_expr($opts) {\n    if (isset($opts[\"compare\"])) {    // optional ↓↓↓ caretaking of value type(!)\n        return \"($opts[field] $opts[compare] '$opts[value]')\";\n    }\n    elseif (gettype($opts[0]) == \"string\") {\n        $op = array_shift($opts);\n        return join(\n            \" $op \",\n            array_map(\"join_expr\", $opts)   // recurse on operands/subexpressions\n        );\n    }\n    elseif (count($opts) == 1) {   // somewhat redundant\n        return \"(\" . join_expr($opts[0]) . \")\";\n    }\n    else {\n        trigger_error(\"wrong struct\");\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["在PHP中将多维数组转换为条件表达式", ["\n\n", "I'm trying to convert an array to condition-like expression string that will be used in the ", "JS Filtrex", " library. The JS part is irrelevant for this question.", "\n\n", "Following is a sample PHP array that I'm trying to work with.", "\n\n", "$condition = array(\n    'and',\n    array(\n        array(\n            'field' => 'show_image',\n            'compare' => '==',\n            'value' => 1\n        ),\n    ),\n    array(\n        'or',\n        array(\n            'field' => 'filter',\n            'compare' => '!=',\n            'value' => 1\n        ),\n        array(\n            'field' => 'align',\n            'compare' => '==',\n            'value' => 'left'\n        )\n    )\n);\n", "\n\n", "The resulting string will be something like this :", "\n\n", "show_image == 1 and ( filter != 1 or align == \"left\" )\n", "\n\n", "I'm not sold on the array structure so you're free to modify the array as long as it can be extended with more conditions.", "\n\n", "Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a &amp;lt; b &amp;lt; c&lt;br /&gt;会先判断a &amp;lt; b为真也就是1&lt;br /&gt;再判断&lt;br /&gt;1 &amp;lt; c&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言：条件表达式相关问题", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "\n", "请问这两个表达式有什么区别？为什么有一个输出c是1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;非0即为真&lt;br /&gt;if primes[i]:&lt;br /&gt;等价于&lt;br /&gt;if primes[i]!&amp;#61;0:&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于条件表达式的，第二个if后面为什么不加判断条件？", ["primes", "=[", "1", "]*", "300", "\n", "primes", "[", "0", ":", "2", "]=[", "0", ",", "0", "]\n", "for", " i in range(", "2", ",", "300", "):\n    ", "if", " primes[i]==", "1", ":\n        ", "for", " j in range(i+", "1", ",", "300", "):\n            ", "if", " primes[j]!=", "0", " and j%i==", "0", ":\n                ", "primes", "[j]=", "0", "\n", "print", "(", "\"300以内的素数包括：\\n\"", ")\n", "for", " i in range(", "2", ",", "300", "):\n    ", "if", " primes[i]:\n        ", "print", "(i,end=", "\" \"", ")\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're misunderstanding how conditional expressions work. DynamoDB is not testing &lt;em&gt;all&lt;/em&gt; items in the table for a matching email. It's testing &lt;em&gt;this&lt;/em&gt; item for a matching email. Your conditional expression is only being applied to the item whose ID you are actually presenting on the put call, if there is such an item.&lt;/p&gt;\n\n&lt;p&gt;Remember that PutItem can be used to insert a new item, but it can also be used to replace existing items. If an item with that ID is absent, which I presume is indeed the case here because you're writing a new ID, then your conditional expression will &lt;em&gt;never&lt;/em&gt; work.&lt;/p&gt;\n\n&lt;p&gt;Make email a primary key then you can use a conditional expression to test for presence and reject duplicate email insertion. Use the attribute_not_exists function with the name of the email attribute.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["DynamoDB PutItem上的条件表达式", ["\n\n", "I'm trying to use a condition to put a intem on DynamoDB, but doesn't work.", "\n\n", "I have a table of users and a attribute id as primary key and attibute name must be unique.", "\n\n", "conditions := aws.String(\"NOT contains(email, :e_email)\")\nattributes := map[string]*dynamodb.AttributeValue{\n    \":e_mail\": &dynamodb.AttributeValue{\n        S: &user.Email,\n    },\n}\ninput := &dynamodb.PutItemInput{\n    Item:                item,\n    TableName:           dynamoTable,\n    ConditionExpression: conditions,\n    ExpressionAttributeValues: attributes,\n}\n_, err = dynamo.PutItemWithContext(ctx1, input)\nif err != nil {\n    if erro, ok := err.(awserr.Error); ok {\n        if erro.Code() == dynamodb.ErrCodeConditionalCheckFailedException {\n            log.Println(\"User already exists\")\n            body, _ := json.Marshal(models.ErrUsuarioJaExiste)\n            resp.StatusCode = models.ErrUsuarioJaExiste.CodigoHTTP\n            resp.Body = string(body)\n            return resp\n        }\n    }\n\n    log.Println(err)\n    resp.StatusCode = models.ErrInterno.CodigoHTTP\n    body, _ := json.Marshal(models.ErrInterno)\n    resp.Body = string(body)\n    return resp\n}\n", "\n\n", "But I still can add items with the same email", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以啊&amp;#xff0c;只要表达式的值能转换为bool&amp;#xff0c;不管合不合理&amp;#xff0c;都能通过&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["for循环中的条件表达式为i++是什么意思", ["刚刚看一个题是for（i=10；i++；）{}能否通过编译；", "后面我就在大括号里面写了printf（“d%”，i）出来的就全是数字"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;判断过程是&amp;#xff1a;&lt;br /&gt;左边开始&amp;#xff0c;第一个为0&amp;#xff0c;不成立&amp;#xff0c;然后检查第二个1&amp;#xff0c;不是0&amp;#xff0c;成立&amp;#xff0c;所以整个表达式结果就为真&amp;#xff0c;后面2,3不需要判断&amp;#xff0c;因为或只需要一个条件满足就可以&lt;br /&gt;如果是&amp;amp;&amp;amp;&amp;#xff0c;则需要左右两侧都为真才结果为真&amp;#xff0c;如果左侧为假&amp;#xff0c;则右侧就不判断了&amp;#xff0c;肯定结果为假&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件表达式怎么判断取值呢？", ["0||1||2||3的值为1，这个是怎么判断的啊？如果像这样一种式子里面既有||又有&&，该怎么判断呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先a&amp;gt;b&amp;#xff0c;不成立&amp;#xff0c;执行&amp;#xff1a;后面的语句d&amp;gt;e&amp;#xff1f;d&amp;#xff1a;e&lt;br /&gt;接着d&amp;gt;e&amp;#xff0c;不成路&amp;#xff0c;执行&amp;#xff1a;后面的语句e&amp;#xff0c;k的值是5&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/873857535636134.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言条件表达式 k为什么是3？", ["int a=1，b=2，c=3，d=4，e=5；", "k=a>b？c：d>e？d：e;求k的数值时多少？  答案为3", "这个题怎么看呀"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You use &lt;code&gt;:=&lt;/code&gt; which discards the previous contents of the variables. You don't use &lt;code&gt;morelines&lt;/code&gt; in that scope, thus the error message.&lt;/p&gt;\n\n&lt;p&gt;If you declare your variables beforehand and don't use &lt;code&gt;:=&lt;/code&gt;, it works fine. The function &lt;code&gt;ReadLine()&lt;/code&gt; might not do what you think it should do.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n)\n\nfunc main() {\n    bio := bufio.NewReader(os.Stdin)\n    var line []byte\n    var err error\n    moreline := true\n    for moreline {\n        line, moreline, err = bio.ReadLine()\n        if err != nil {\n            log.Fatal(err)\n        }\n        fmt.Println(line)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["for的条件表达式中的“已声明但未使用”变量", ["\n\n", "My intuitive approach:\n", "https://play.golang.org/p/6xzg7TK1IH", "\n\n", "and it doesn't work.", "\n\n", "Can you share some alternative ways?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;不能这样连用&amp;#xff0c;因为机器无法这样直接理解&lt;/strong&gt;&amp;#xff0c;要用&lt;strong&gt;逻辑运算符&amp;amp;&amp;amp;连接&lt;/strong&gt;&amp;#xff1a;&lt;br /&gt;你可以这样写   &lt;strong&gt;(StudentID&amp;gt;10000000 &amp;amp;&amp;amp; StudentID &amp;lt; 99999999)&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff0c;可以的话&amp;#xff0c;帮忙点个采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["怎么在条件表达式中表达一个数据是八位的？", ["\n", "为什么这个大于号不能使用呢？", "（大一刚学java，还不太懂一些语法规则😊）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个WHERE后面只有字段名&amp;#xff0c;没有逻辑表达式呀&amp;#xff0c;当然报这个错误了。需要INNER　JOIN&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-sql\"&gt;SELECT  COUNT(DISTINCT Takes.ID)\nFROM    Takes\n        INNER JOIN Teaches\n            ON  Takes.Course_ID &amp;#61; Teaches.Course_ID\n            AND Takes.sec_id &amp;#61; Teaches.sec_id\n            AND Takes.year &amp;#61; Teaches.year\nWHERE   Teaches.ID &amp;#61; 22591;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["SQL语句，错误：指定了非布尔类型的表达式", ["\n\n", "找出学生总数，他们选修了ID为22591教师所授的某一课程", "\n\n", "为什么出现这个错误？"]], "Tag": "程序设计"}
{"Answer": "代码类似的可以写为一个方法然后传参数即可", "Konwledge_Point": "条件表达式", "Question": ["这两段代码，只能运行其中一段，想用if语句来判断，但不知道条件表达式该怎么写", ["        foreach (Uers item in userGroup)      //第一段\n        {\n            Console.WriteLine(\"请输入账号\");\n            string idC1 = Console.ReadLine();\n            Console.WriteLine(\"请输入密码\");\n            string pwd1 = Console.ReadLine();\n            if (idC1.Equals(item.idC) && pwd1.Equals(item.pwd))\n            {\n                Console.WriteLine(\"请输入要取得的金额\");\n                double _banlance = double.Parse(Console.ReadLine());\n                if (_banlance <= item.banlance || _banlance != 0)\n                {\n                    item.banlance = item.banlance - _banlance;\n                    Console.WriteLine(\"余额：{0}\", item.banlance);\n                }\n                else\n                {\n                    Console.WriteLine(\"金额输入有误！请重新输入\");\n                }\n            }\n            else\n            {\n                Console.WriteLine(\"密码输入有误！请重新输入\");\n                drawmoney();\n            }\n\n        }\n\n        /* Console.WriteLine(\"请输入账号\");      //第二段\n         string idcc = Console.ReadLine();\n         Console.WriteLine(\"请输入密码\");\n         string _pwd = Console.ReadLine();\n         if (idcc.Equals(u.idC) && _pwd.Equals(u.pwd))\n         {\n            Console.WriteLine(\"请输入要取得金额\");\n            double _banlance = double.Parse(Console.ReadLine());\n            if (_banlance <= u.banlance || _banlance != 0)\n            {\n                u.banlance = u.banlance - _banlance;\n\n\n                Console.WriteLine(\"余额：{0}\", u.banlance);\n\n            }\n            else\n            {\n                Console.WriteLine(\"金额输入有误！请重新输入\");\n            }\n\n         }\n         else\n         {\n             Console.WriteLine(\"密码输入有误！请重新输入\");\n             drawmoney();\n         } */\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem is probably because 'g' is a) not on the &lt;a href=\"http://php.net/manual/en/reference.pcre.pattern.modifiers.php\" rel=\"nofollow\"&gt;list of recognized modifiers&lt;/a&gt; and b) redundant with &lt;code&gt;preg_match_all&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式中的OR条件", ["\n\n", "I have table with even & odd row like this", "\n\n", "<table id=\"overviewTable\" class=\"dataTable labelValueTable\">\n<tr class=\"even\">\n  <td class=\"label\">A</td>\n<td>\n<a href=\"#\">A</a></td>\n</tr>\n<tr class=\"odd\">\n  <td class=\"label\">A</td>\n  <td>B</td>\n</tr>\n<tr class=\"even\">\n  <td class=\"label\">A</td>\n<td>C</td></tr>\n<tr class=\"odd\">\n<td class=\"label\">A</td>\n<td>D</td></tr>\n", "\n\n", "\n\n", "and I wrote pattern for it like this", "\n\n", "@<tr class=\"(even|odd)\">(.*?)<\\/tr>@si\n", "\n\n", "but it doesn't work.how can I fix this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;x&amp;gt;2&amp;amp;&amp;amp;x&amp;lt;3||x&amp;lt;-10&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件2<x<3或x<-10的c语言表达式是什么", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;/^(?!.*王磊).*(张明|李红|赵虎)/&lt;/code&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; arr &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#34;我是李红&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;我是王伟&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;我是王磊张明&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;我是张明&amp;#34;&lt;/span&gt;];\narr.&lt;span class=\"hljs-title function_\"&gt;forEach&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;v, i&lt;/span&gt;){\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(v,&lt;span class=\"hljs-regexp\"&gt;/^(?!.*王磊).*(张明|李红|赵虎)/&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(v));\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/800906770456158.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式判断包含多个关键词，并且不能包含某个关键词的条件怎么写", ["正则表达式判断包含多个关键词，并且不能包含某个关键词的条件怎么写", "\n", "正则表达式判断包含多个关键词，并且不能包含某个关键词的条件怎么写", "\n", "比如：匹配字符串中可以是  张明 或 李红 或 赵虎", "\n", "但是这个字符串中不能包含 王磊，因为这个字符串中个别会包含王磊，所以要判断去掉它", "\n", "这个正则表达式怎么写呢？多谢"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/thc1987/article/details/24018609", "Konwledge_Point": "条件表达式", "Question": ["在应使用条件的上下文(在 'id' 附近)中指定了非布尔类型的表达式。", ["\"select top \"+pagesize+\"  m.id,m.content,u.username from  message m left join users u on m.userid = u.id where newsid =? and m.id not in (select top \"+((pageIndex-1)*pagesize)+\" m.id from news order by m.id desc) order by m.id desc"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;请首先检查一下你的VS2019版本&amp;#xff0c;确保它已经安装了最近的更新包。&lt;/strong&gt;&lt;br /&gt;然后请检查以下VS设置是否有被勾选上&amp;#xff1a;&lt;br /&gt;工具----&amp;gt;选项----&amp;gt;调试----&amp;gt;常规----&amp;gt;使用托管的兼容模式。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;还请帮忙点下采纳&amp;#xff01;感谢&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "条件表达式", "Question": ["VS2019 断点调试的时候 内存显示“无法计算表达式。”", ["右侧内存“无法计算表达式”", "\n", "我想要达到的结果  想可以调试的时候内存显示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般在使用多线程的时候就会出现这种&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["VS2019 断点调试的时候 内存显示“无法计算表达式。” c#", ["问题遇到的现象和发生背景  VS2019版本16.11.13", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容 调试时内存 无法计算表达式", "\n", "我的解答思路和尝试过的方法   1更新版本 2 使用托管兼容模式，有时呈灰色，无法点击选中", "\n", "我想要达到的结果 可以运行内存"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.这类有反馈行为的确实更适合用·while函数来写&lt;br /&gt;2.对于固定表达式&amp;#xff0c;个人认为熟练掌握while&amp;#xff0c;for和if语句都差不多&amp;#xff0c;如果仅仅是类似i &amp;lt; 60等条件for比较适用&lt;br /&gt;然后根据你的描述&amp;#xff0c;code改进如下&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/936942184066141.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入i:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;i);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; i; i--)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;一个句子\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入0结束循环输入数字继续循环:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;i);\n    }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件更新表达式是否不适用作于do while循环条件判断?", ["直接说例子吧！", "#include <stdio.h>", "int main(void)", "{", "int i, j;", "do{", "    scanf (\"%d\", &i);", "    for (j = 1; j < i; i--)", "    {", "        printf(\"一个句子\\n\");", "    }", "    while (getchar() !='\\n')", "    {", "         continue;", "    }", "  }while (scanf(\"%d\", &i) == 1);", "\n", "return 0;", "}", "问题：该程序在条件判断处会要求用户再输入一遍以进入循环，与预期一遍输入并持续效果不符。", "疑问：1.这类程序是否更适合用while循环进行编写", "2.do while循环测试条件是否更适用于固定条件表达式，如（i < 60)。而不适用于更新条件表达式（如：scanf返回值，getchar）", "希望有大婶能帮忙解答一下，小bai万分感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For you desired output, you need to change a small mistake.&lt;/p&gt;\n\n&lt;p&gt;Instead of..&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[0-9]{0,3}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It should be..&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[0-9]{1,3}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件正则表达式与文字结尾，只有在条件的某些部分匹配时才匹配", ["\n\n", "Here's my test code:", "\n\n", "$strings=array(\n'Low Minimum',\n'Low 10 Piece Minimum',\n'10 piece minimum',\n'20 piece minimum',\n'low 6 piece minimum',\n'100 piece minimum',\n'This item is offered with a 1000 piece minimum',\n'Place your order now. This item has a 75 piece minimum',\n'Place your order now. This item has a low 75 piece minimum',\n);\n\nforeach($strings as $string)\n  {\n     echo preg_replace('/(low)? ?(\\b[0-9]{0,3}\\b) (piece minimum)/i',' Low Minumum',$string);\n     echo '<br>';\n  }\n", "\n\n", "Here's the output:", "\n\n", "Low Minimum\nLow Minumum\nLow Minumum\nLow Minumum\nLow Minumum\nLow Minumum\nThis item is offered with a 1000 Low Minumum\nPlace your order now. This item has a Low Minumum\nPlace your order now. This item has a Low Minumum\n", "\n\n", "Here is my desired output:", "\n\n", "Low Minimum\nLow Minumum\nLow Minumum\nLow Minumum\nLow Minumum\nLow Minumum\nThis item is offered with a 1000 piece minimum\nPlace your order now. This item has a Low Minumum\nPlace your order now. This item has a Low Minumum\n", "\n\n", "The one that messes me up is the 4 digit number. \nSo, \"piece minimum\" should only match if some part of what's before it also matched.\nHow do I write this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以参考这篇文章&amp;#xff0c;希望对你有帮助&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/unixfy/p/3234058.html\"&gt;检测中缀表达式的合法性 - unixfy - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["想请教一下这个代码中如何判断中缀表达式合法性？", [" https://blog.csdn.net/chuanzhouxiao/article/details/85729200?utm_source=app&app_version=4.9.0&code=app_1562916241&uLinkId=usr1mkqgl919blen"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-javascript\"&gt;onkeyup=\"value=/^\\d+\\.?\\d{0,2}$/.test(value)?value:''\"&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式当不符合条件则全部清空", ["正则表达式，当校验失败，比如校验金额时候，如果出现两个小数点它会自动删掉第二个小数点，或者保留后两位的正则，如果输入第三位则会自动删掉第三位，现在我想要的是如果输入两个小数点则会把这个文本框的内容全删掉，而不是只删掉后面的小数点", "\n\n", "onkeyup=\"value=value.replace(/^\\D*(\\d*(?:.\\d{0,2})?).*$/g, '$1')\"\n\n这是正则的代码\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;=&lt;/code&gt; has higher priority than &lt;code&gt;and&lt;/code&gt;. So &lt;code&gt;$c = $a and $b;&lt;/code&gt; is the same as &lt;code&gt;($c = $a) and $b;&lt;/code&gt;, value of $a is assigned to $c. This is different from &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; which has higher priority than &lt;code&gt;=&lt;/code&gt;, so &lt;code&gt;$c = $a &amp;amp;&amp;amp; $b&lt;/code&gt; evaluates to &lt;code&gt;$c = ($a &amp;amp;&amp;amp; $b)&lt;/code&gt;;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["布尔表达式如何依赖于评估顺序和赋值？", ["\n\n", "When I evaluate ", "the expressions below", ", the result is completely different depending on the evaluation order and whether I assign the value or not: ", "\n\n", "$a = true;\n$b = false;\nvar_dump($a and $b); // false\n\n$c = $a and $b;\nvar_dump($c); // true\n\n$d = $b and $a;\nvar_dump($d); // false\n", "\n\n", "I'm completely stumped. Why does this happen?", "\n    "]], "Tag": "程序设计"}
{"Answer": "orElse的作用是如果没有发现则返回某个值，你的代码是没有相同的时候还是返回了list中的值，实际没有做任何操作，可以把user换成null,\r\nSet&lt;Student&gt; s = list.stream()\r\n                .map(\r\n                        user -&gt; list2.stream()\r\n                                .filter(log -&gt; user.getAge().equals(log.getAge()))\r\n                                .filter(log -&gt; user.getSex() == log.getSex())\r\n\r\n                                .findAny()\r\n                                .orElse(null)\r\n                        )\r\n                .filter(Objects::nonNull)\r\n                .collect(Collectors.toSet());", "Konwledge_Point": "条件表达式", "Question": ["如何使用Java8Lambda表达式对两个List<Object>中的多个元素进行对比筛选", ["        List<Student> list = new ArrayList<>();\n        List<Student> list2 = new ArrayList<>();\n\n        Student student1 = new Student();\n        student1.setAge(\"一\");\n        student1.setSex(1);\n\n        Student student2 = new Student();\n        student2.setAge(\"一\");\n        student2.setSex(2);\n\n        Student student3 = new Student();\n        student3.setAge(\"三\");\n        student3.setSex(3);\n\n        Student student4 = new Student();\n        student4.setAge(\"四\");\n        student4.setSex(4);\n\n        // List2\n        Student student5 = new Student();\n        student5.setAge(\"一\");\n        student5.setSex(1);\n\n        Student student6 = new Student();\n        student6.setAge(\"二\");\n        student6.setSex(9);\n\n        Student student7 = new Student();\n        student7.setAge(\"三\");\n        student7.setSex(9);\n\n        Student student8 = new Student();\n        student8.setAge(\"四\");\n        student8.setSex(9);\n", "\n\n", "现在想要的结果是筛选出两个List中age，sex都一样的元素组成一个新List", "\n\n", "\n        Set<Student> s = list.stream()\n                .map(\n                        user -> list2.stream()\n                        .filter(log -> user.getAge().equals(log.getAge()))\n                        .filter(log -> user.getSex() == log.getSex())\n\n                        .findAny()\n                        .orElse(user)\n\n                        )\n                .collect(Collectors.toSet());\n```                         我自己试了下好像并没有卵用\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正则表达式&amp;#xff1a;\\$\\{[^{}]*\\}&lt;/p&gt;\n\n&lt;p&gt;解释&amp;#xff1a;&lt;/p&gt;\n\n&lt;ul&gt;&lt;li&gt;[abc] 表示字符是 &amp;#96;a&amp;#96; 或者 &amp;#96;b&amp;#96; 或者 &amp;#96;c&amp;#96;&lt;/li&gt;&lt;li&gt;[^abc] 表示任意不是 &amp;#96;a&amp;#96; 或者 &amp;#96;b&amp;#96; 或者 &amp;#96;c&amp;#96; 的字符&lt;/li&gt;&lt;li&gt;[^{}] 表示任意不是 &amp;#96;{&amp;#96; 或者 &amp;#39;}&amp;#39; 的字符&lt;/li&gt;&lt;/ul&gt;\n\n&lt;p&gt;推荐阅读&amp;#xff1a;&lt;/p&gt;\n\n&lt;ul&gt;&lt;li&gt;《正则表达式30分钟入门教程》:&lt;a href=\"https://deerchao.cn/tutorials/regex/regex.htm\"&gt;https://deerchao.cn/tutorials/regex/regex.htm&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式如何分别匹配多个括号中的值", ["文本示例", "\n\n", "${SysTime}", "\n${CurrentTimeStr}/${SongDurationStr}(${TimePercentStr}/$if{CurrentMode!=Catch,HitObjectPercentStr,\"暂不支持\"})", "\n${NowPlaying}(ID:${Beatmap.BeatmapID})", "\nStars:${StarsStr} Mods:${ModShortNames}(ScoreMul:${Mods.ScoreMultiplier:f2} ModRanked:${Mods.IsRanked})", "\nCurrent:${RemainingBreakTimeStr} Next:${TimeToNextBreakTimeStr}", "\n${CurrentPPStr}pp / ${FcPPStr}pp => ${MaxPPStr}pp(${PPpercent:p2})", "\n${c300}(${c300RateStr})/${c300g}(${c300gRateStr}) ${c200} ${c100} ${c50} ${cMiss+1}", "\n$if{(c300gRate+c300Rate)*100>=150,\"Good\",\"Bad\"}", "\nAcc:${Accuracy:p2} Rank:${CurrentRank} BPM:${CurrentBPM:0.00}", "\n\n", "之前因为${}中的变量没有用作其他的运算，所以匹配条件比较紧。现在可以参与运算了，所以打算把匹配条件换成\\$\\{.*\\}，但是这样所有的内容都被匹配进来了"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are not including zeros in your regex, that is why the pattern fails.  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;[1-9]{3}&lt;/code&gt; will only match three digits 1-9. So 111 is a match. 234 is also a match.&lt;br&gt;\nBut 500 is not.  &lt;/p&gt;\n\n&lt;p&gt;With this regex: &lt;code&gt;([0-9]{3}GB)|([0-9]{1,2}.[0-9]{1,2}TB)&lt;/code&gt; you will be able to catch the zeros and it will not limit you to two digit TB disks.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://regex101.com/r/6undez/3\" rel=\"nofollow noreferrer\"&gt;https://regex101.com/r/6undez/3&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT: In case you want to match &lt;code&gt;100 GB&lt;/code&gt; note the space. You can use this regex:&lt;br&gt;\n&lt;a href=\"https://regex101.com/r/6undez/4\" rel=\"nofollow noreferrer\"&gt;https://regex101.com/r/6undez/4&lt;/a&gt;&lt;br&gt;\n&lt;code&gt;([0-9]{3}\\s?GB)|([0-9]{1,2}.[0-9]{1,2}\\s?TB)&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件正则表达式匹配基于两个非捕获组", ["\n\n", "I've been looking for what seems like hours, and I just cannot find a solution for this. My regex skills are terrible but I'm sure for someone with the knowledge this will be easy.", "\n\n", "/^(?:[1-9]{1,3}GB)|(?:[0-9]{1,2}.[0-9]{1,2}TB)$/i\n", "\n\n", "As you can see it's pretty simple. I just need to match one or the other but I don't know where I'm going wrong.", "\n\n", "Examples:", "\n\n", "<?= $validate->data('100GB'); ?>\n", "\n\n", "This should match since it's 3 digits followed by \"GB.\"", "\n\n", "<?= $validate->data('2.65TB'); ?>\n", "\n\n", "This should also match since it's 1 digit followed by period, followed by two more digits, followed by \"TB.\"", "\n\n", "EDIT: I needed to modify the numeric count but still doesn't perform as expected.", "\n\n", "For anyone interested, here is the final regex.", "\n\n", "/^(?:[0-9]{1,3}(?:GB|TB))|(?:[0-9]{1,2}\\.[0-9]{1,2}(?:GB|TB))$/i\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "用一个正则搞不出来的 \r\n步骤\r\n1 验证字符长度8\r\n2 验证包含数字\r\n3 验证包含字母\r\n4 验证包含字符\r\nif(str.length!=8||!/[0-9]+/.test(str)||!/[a-zA-Z]+/.test(str)||!/[^0-9a-zA-Z]/.test(str))alert('111');", "Konwledge_Point": "条件表达式", "Question": ["密码验证的正则表达式", ["密码规则条件：", "\n1、密码长度总共8位；", "\n2、必须同时包含数字、字母（区分大小写）、键盘上的符号；", "\n\n", "初学正则表达式，请问各位大侠，这个正则该如何设计？谢谢啦"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不应该是on s.sno &amp;#61; sc.son ?????&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["数据库的存储过程创建 在应使用条件的上下文(在 'JOIN' 附近)中指定了非布尔类型的表达式。", ["数据存储过程创建出现了这个 查看了很多其他的问题 但是我这个中间没有空格的情况"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;之前也提醒过题主用fmincon函数&amp;#xff0c;现在把程序发一下&amp;#xff0c;我是按照fmincon求解的&amp;#xff08;额外加了非线性约束保证函数值全体大于0&amp;#xff09;&amp;#xff0c;但是初值选取使用的是拉格朗日乘子法加最小二乘法【这样计算比较稳定】。代码如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;/span&gt;\nx &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;% x自己设置&lt;/span&gt;\ny &amp;#61; &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;*x)&amp;#43;(&lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x))&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;% y自己设置&amp;#xff0c;我这里是在正弦函数上加了个随机浮动&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% n自己设置&lt;/span&gt;\nf &amp;#61; &amp;#64;(a)norm(polyval(a,x)-y);\naa &amp;#61; getIniA(x,y,n);\noptions &amp;#61; optimoptions(&lt;span class=\"hljs-string\"&gt;&amp;#39;fmincon&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;Algorithm&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;sqp&amp;#39;&lt;/span&gt;);\nflag &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;%设初始不收敛&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(flag&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    ratio &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;%如果长时间不收敛&amp;#xff0c;减少n或者改动ratio再计算&lt;/span&gt;\n    [a,~,flag] &amp;#61; fmincon(f,aa&amp;#43;ratio*(&lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(aa))&lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;).*aa,[],[],&lt;span class=\"hljs-number\"&gt;1.&lt;/span&gt;/(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).*&lt;span class=\"hljs-number\"&gt;40.&lt;/span&gt;^(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, [], [], &amp;#64;nlinfunc,options);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nflag &lt;span class=\"hljs-comment\"&gt;%flag大于零才收敛&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);clf\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,y,&lt;span class=\"hljs-string\"&gt;&amp;#39;r*&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,polyval(aa,x),&lt;span class=\"hljs-string\"&gt;&amp;#39;m-&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,polyval(a,x),&lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;原数据&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;仅满足积分为1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;既满足积分为1又恒大于0&amp;#39;&lt;/span&gt;)\nff &amp;#61; &amp;#64;(x)polyval(a,x);\nintegral(ff,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;%验证积分值&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[c,ceq]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;nlinfunc&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(a)&lt;/span&gt;&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(a)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\nq &amp;#61; (n:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).*a(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n)&amp;#39;;\nq &amp;#61; roots(q);\np &amp;#61; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;imag&lt;/span&gt;(q))&amp;lt;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\nr &amp;#61; q(p);\nr &amp;#61; r(r&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;&amp;amp;r&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nc &amp;#61; - &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(polyval(a,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;r;&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;]));\nceq &amp;#61; [];\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;aa&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;getIniA&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,n)&lt;/span&gt;&lt;/span&gt;\nx &amp;#61; x(:);\ny &amp;#61; y(:);\nS &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x), n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nq &amp;#61; &lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x),&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nS(:,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#61;q;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; n:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    q &amp;#61; q.*x;\n    S(:,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; q;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nA &amp;#61; S&amp;#39;*S;\nb &amp;#61; S&amp;#39;*y;\nG &amp;#61; &lt;span class=\"hljs-number\"&gt;1.&lt;/span&gt;/(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).*&lt;span class=\"hljs-number\"&gt;40.&lt;/span&gt;^(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;% 积分为1&lt;/span&gt;\naa &amp;#61; [A, G&amp;#39;; G, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\\[b;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;%拉格朗日乘子法&lt;/span&gt;\naa &amp;#61; aa(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;因为没有题主的数据&amp;#xff0c;我的数据是随机的数据&amp;#xff0c;所以结果也随机的&amp;#xff0c;这里给个随机的结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/014756595336161.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["matlab中进行函数拟合，如何同时添加等式和不等式两种约束条件", ["我有一组数（x,y），然后对其进行多项式拟合，式子就为这种普通的多项式", "但是我想加两项约束条件，一个就是算出来的多项式在0到40的积分为1，另外一个是多项式永远大于0", "算出来的多项式在0到40的积分为1这个可以用拉格朗日乘子法写，但是同时加一个多项式大于0要如何写", "下面是我的代码，X是一个风速数据，x是风速，y是频率（x,y是啥都无所谓，主要是约束条件如何写）。这段代码只加了多项式积分为1这一个条件，如何在加一个多项式大于0", "\n", "X=xlsread(", "'Alamo.xlsx'", ");", "%风速数据", "\nH=histogram(X,", "'Normalization'", ",", "'probability'", ");\nx = (H.BinEdges(", "1", ":", "end", "-1", ")+H.BinEdges(", "2", ":", "end", "))/", "2", ";", "%风速", "\ny = H.Values; ", "%这就是对应的频率", "\nn=", "10", " ", "%设n", "\nx = x(:);\ny = y(:);\nS = ", "zeros", "(", "length", "(x), n+", "1", ");\nq = ", "ones", "(", "length", "(x),", "1", ");\nS(:,n+", "1", ")=q;\n", "for", " ", "i", " = n:", "-1", ":", "1", "\n    q = q.*x;\n    S(:,", "i", ") = q;\n", "end", "\nA = S'*S;\nb = S'*y;\na = A\\b;", "%最小二乘", "\nG = ", "1.", "/(n+", "1", ":", "-1", ":", "1", ").*", "40.", "^(n+", "1", ":", "-1", ":", "1", "); ", "% 积分为1", "\naa = [A, G'; G, ", "0", "]\\[b;", "1", "];", "%拉格朗日乘子法", "\ny1=polyval(a,x)\ny2=polyval(aa(", "1", ":", "end", "-1", "),x)\n", "plot", "(x,y1)\n", "hold", " on\n", "plot", "(x,y2)\n", "legend", "(", "'原始风速数据'", ",", "'拟合后(不考虑积分为1)'", ",", "'拟合后(考虑积分为1)'", ")\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;preg_match('/^[\\w]{4,35}$/i', $username)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OK lets see what this doesn't work : &lt;/p&gt;\n\n&lt;p&gt;Match the beginning of the string, followed by [a-zA-Z0-9_] at least 4 times with a maximum of 35 times. This is quite different from your requirements.&lt;/p&gt;\n\n&lt;p&gt;Instead what you should use : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/^[a-zA-Z][-,.\\w]{3,34}$/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The case sensitivity i modifier is not needed. Also I don't think this is exactly what you want. Usually you would need to specify a minimum length which you don't. This can match \"a\" for example (&lt;em&gt;not a good username&lt;/em&gt;)&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式匹配用户名的复杂条件", ["\n\n", "I need to check if string has anything else than what specified below", "\n\n", "\n", "it must begins from letter (either uppercase or lowercase)", "\n", "can have alphabetical characters ", "\n", "can have numeric characters", "\n", "can have dashes", "\n", "can have minus sign -", "\n", "can have underscore _", "\n", "can have comas ,", "\n", "can have dots .", "\n", "length from 4 to 35 caracters no more no less", "\n", "\n", "everything else should not be in this string have have", "\n\n", "i am stuck on this:", "\n\n", "preg_match('/^[\\w]{4,35}$/i', $username)\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "?:当然是最容易想到的，但是这种回答没有任何帮助到你，肯定你也知道。\r\n\r\n```\r\n 不知道什么语言，VB有Sign函数，&gt;0返回1，=0返回0，&lt;0返回-1\r\n```\r\n\r\n\r\nC++可以用 (int)(x &gt; 0)，原理是x&gt;0返回true，转换成int是1\r\n\r\n\r\n```\r\n #include &lt;iostream&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    cout &lt;&lt; (int)(6 &gt; 0);\r\n}\r\n```", "Konwledge_Point": "条件表达式", "Question": ["用包含变量x的一个表达式实现：x>0时结果为1，x=0结果为0，不要条件判断", ["用包含变量x的一个表达式实现：x>0时结果为1，x=0结果为0，不要条件判断。", "\n可使用任意数学函数"]], "Tag": "程序设计"}
{"Answer": "/home/xjgo/\\d+/(?!xjgo_(action|player)).+\r\n\r\n这个就能剔除了", "Konwledge_Point": "条件表达式", "Question": ["求正则表达式, 发30 C币", ["求正则表达式, 发C币 ", "\n/home/xjgo/20160622/hero.txt", "\n/home/xjgo/20160622/kk.txt", "\n/home/xjgo/20160622/test2.txt", "\n/home/xjgo/20160622/test.log", "\n/home/xjgo/20160622/xjgo_action_20160622_d1cb21ad.txt", "\n/home/xjgo/20160622/test.txt1", "\n/home/xjgo/20160622/tet", "\n/home/xjgo/20160621/kk.t.log", "\n/home/xjgo/20160621/kk.txt", "\n/home/xjgo/20160621/xjgo_action_20160621_d1cb21ad.txt", "\n/home/xjgo/20160621/xjgo_player_20160621_d25c65b4.txt", "\n想把上面符合这两种规则的行去掉: /home/xjgo/*/xjgo_action*.txt /home/xjgo/*/xjgo_player*.txt ", "\n要求：正则表达式 测试地址： ", "http://tool.oschina.net/regex", " ", "\n因为实际应用场景的限制，只用用正则表达式，并且只能利用表达式本身来排除这两类文本内容。", "\n如果能利用grep -v 这些是很容易的，但条件限制，只能利用表达式来实现了。"]], "Tag": "程序设计"}
{"Answer": "把4个重复的部分提出来，这样代码是否清晰些，一定要写好注释哦\r\n\tif (id == null || id.isEmpty()) {\r\n\t\t\t\t\tif (type == null) {\r\n\t\t\t\t\t\tgetSql(1, name);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetSql(2, name);\r\n\t\t\t\t\t}\r\n\t} else {\r\n\t\t\t\t\tif (type == null) {\r\n\t\t\t\t\t\tgetSql(3, name);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetSql(4, name);\r\n\t\t\t\t\t}\r\n}\r\n\tpublic String getSql(int state, List name) {\r\n        switch (state) {\r\n            case 1:\r\n                if (name == null || name.isEmpty()) {\r\n                    // ...select..sql...\r\n                } else {\r\n                    // ...select..sql...\r\n                }\r\n            case 2:\r\n                if (name == null || name.isEmpty()) {\r\n                    // ...select..sql...\r\n                } else {\r\n                    // ...select..sql...\r\n                }\r\n            case 3:\r\n                if (name == null || name.isEmpty()) {\r\n                    // ...select..sql...\r\n                } else {\r\n                    // ...select..sql...\r\n                }\r\n            case 4:\r\n                if (name == null || name.isEmpty()) {\r\n                    // ...select..sql...\r\n                } else {\r\n                    // ...select..sql...\r\n                }\r\n        }\r\n    }", "Konwledge_Point": "条件表达式", "Question": ["java 多重if判断怎么优化", ["if(id == null || id.isEmpty()){", "\n            if(type == null){", "\n                if(name==null || name.isEmpty()){", "\n                    //...select..sql...", "\n                }else {", "\n                    //...select..sql...", "\n                }", "\n            }else {", "\n                if(name==null || name.isEmpty()){", "\n                    //...select..sql...", "\n                }else {", "\n                    //...select..sql...", "\n                }", "\n            }", "\n        }else {", "\n            if(type == null){", "\n                if(name==null || name.isEmpty()){", "\n                    //...select..sql...", "\n                }else {", "\n                    //...select..sql...", "\n                }", "\n            }else {", "\n                if(name==null || name.isEmpty()){", "\n                    //...select..sql...", "\n                }else {", "\n                    //...select..sql...", "\n                }", "\n            }", "\n        }"]], "Tag": "程序设计"}
{"Answer": "try this\r\n```\r\n '^select\\b[^\\b]+\\bas\\b[^\\b]+\\bfrom\\b[^\\b]+\\bwhere\\b[^\\b]+\\b=[0-9]+\\b$'\r\n```", "Konwledge_Point": "条件表达式", "Question": ["跪求js验证sql查询语句的正则表达式", ["select XXX as XXX from XX where id=%d"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是说三目运算符吗&amp;#xff0c;可以啊&amp;#xff0c;不仅可以是表达式&amp;#xff0c;而且运算符可以嵌套使用&lt;br /&gt;不过要注意一点&amp;#xff0c;不管你最终里面有几个分支&amp;#xff0c;返回值的类型得是一致的&lt;br /&gt;虽然C语言会自动给你隐式转换类型&amp;#xff0c;但是也不是什么类型都能互相转换的&lt;br /&gt;比如你把字符当int还行&amp;#xff0c;字符串或者数组那肯定要报错了&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["条件运算符用法提问求解", ["条件表达式中 问号后面的表达式可以有计算吗？比如说加减乘除"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if(sex &amp;#61;&amp;#61; &amp;#39;m&amp;#39; &amp;amp;&amp;amp; age &amp;gt;&amp;#61; 60 || sex &amp;#61; &amp;#39;f&amp;#39; &amp;amp;&amp;amp; age &amp;gt;&amp;#61; 55)&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于需要判断选择的表达式的问题", ["现有变量age、sex，其中:age代表年龄，为int型；sex为char型，代表性别，男性取‘m’值，女性取’f'值。如果男性的退休年龄为60岁，女性的退休年龄为55岁，则表示一个人是否符合退休条件的表达式是"]], "Tag": "程序设计"}
{"Answer": "```\r\n \\[[[0-9一二三四五六七八九十]*]\r\n```", "Konwledge_Point": "条件表达式", "Question": ["用正则表达式从一个字符串中查找所有 的 例如\"[123]\"的字符串  条件:在\"[]\"之间,中间必须是1-0或汉字一到十", ["用正则表达式  从一个字符串中查找所有 的 例如\"[123]\"的字符串  条件:在\"[]\"之间,中间必须是1-0或汉字一到十"]], "Tag": "程序设计"}
{"Answer": "# &lt;- 问题解决，请点我回答左边的采纳和向上的箭头\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace Q772736\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string s = \"A23EEEA57FFFA23GGG\";\r\n            int i = 1;\r\n            s = Regex.Replace(s, \"A\\\\d+\", x =&gt; \"#\" + (i++).ToString());\r\n            Console.WriteLine(s);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n结果\r\n#1EEE#2FFF#3GGG\r\nPress any key to continue . . .", "Konwledge_Point": "条件表达式", "Question": ["C#使用正则表达式，有没有一个方法能把符合条件的部分替换成序数", ["使用正则表达式，有没有一个方法能把符合条件的部分替换成序数", "\n比如 把A23EEEA57FFFA23GGG中的A\\d+替换成序数", "\n形成如下格式#1EEE#2FFF#3GGG", "\n主要是识别A\\d+在整个字符串中是第几次出现则替换成相应的顺序号", "\n其中如上例子的A23，相同的部分可能在字符串中出现多次。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;regExp加分组匹配呀&amp;#xff0c;把条件用()包起来&amp;#xff0c;然后用|做条件或。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;abcdefg&amp;#34;&lt;/span&gt;.replace(&lt;span class=\"hljs-regexp\"&gt;/(a)|(b)/g&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;输出xxcdefg\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["js如何使用正则表达式删除字符串中多个条件的指定字符串", ["删除多个条件下的指定字符串，我是循环拿到地址，我页面需要处理一些像，市，地区，蒙古族藏族自治州，黎族自治县，地区，", "var str = \"齐齐哈尔市\";", "var reg = new RegExp(\"市\");", "var a = str.replace(reg,\"\");", "像这种，就只能对字符串中包含\"市\"的，但对于字符串中包含一些什么地区，和一些特殊的什么族自治州，怎么加多个指定字符串判断，比如显示”蒙古“，就不显示”族藏族自治州“"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写了个demo &amp;#xff0c;  搞成了汇编  你看一下吧 &amp;#xff0c;我只看到了一个sub&lt;br /&gt;如果我没记错的&amp;#xff0c;这个操作会因为编译器版本不同会有不同的优化&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    std::cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; j - &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &amp;#43;&amp;#43;i){\n        std::cout&amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;-----&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;std::endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;__libc_start_main:\n    push   &lt;span class=\"hljs-variable\"&gt;%r14&lt;/span&gt;\n    push   &lt;span class=\"hljs-variable\"&gt;%r13&lt;/span&gt;\n    push   &lt;span class=\"hljs-variable\"&gt;%r12&lt;/span&gt;\n    push   &lt;span class=\"hljs-variable\"&gt;%rbp&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%rcx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rbp&lt;/span&gt;\n    push   &lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;sub&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;0x90&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a491f&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3d98&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0x18&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)\n    mov    &lt;span class=\"hljs-variable\"&gt;%esi&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0x14&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)\n    mov    &lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)\n    test   &lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    je     &lt;span class=\"hljs-number\"&gt;0x7ffff720f55c&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;252&amp;gt;&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    sete   &lt;span class=\"hljs-variable\"&gt;%dl&lt;/span&gt;\n    lea    &lt;span class=\"hljs-number\"&gt;0x3a4be0&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b4080 &amp;lt;__libc_multiple_libcs&amp;gt;&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%r9&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r9&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)\n    je     &lt;span class=\"hljs-number\"&gt;0x7ffff720f4b3&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;83&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%esi&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%esi&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%r9&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;\n    callq  &lt;span class=\"hljs-number\"&gt;0x7ffff7226f30&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__cxa_atexit_internal&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a498e&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3e48&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;0x2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    movslq &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f604&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;420&amp;gt;&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%rbp&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rbp&lt;/span&gt;\n    je     &lt;span class=\"hljs-number\"&gt;0x7ffff720f4e5&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;133&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a49c1&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3e98&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rsi&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x14&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edi&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-variable\"&gt;%rbp&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a495c&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3e48&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x178&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%ebp&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%ebp&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%ebp&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f5c3&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;355&amp;gt;&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rbx&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f5a0&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;320&amp;gt;&lt;/span&gt;\n    lea    &lt;span class=\"hljs-number\"&gt;0x20&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;\n    callq  &lt;span class=\"hljs-number\"&gt;0x7ffff72231d0&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;_setjmp&amp;gt;&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f563&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;259&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%fs&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0x300&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0x68&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)\n    mov    &lt;span class=\"hljs-variable\"&gt;%fs&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0x2f8&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0x70&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)\n    lea    &lt;span class=\"hljs-number\"&gt;0x20&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%fs&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0x300&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a4956&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3e98&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rsi&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x14&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edi&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x18&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edi&lt;/span&gt;\n    callq  &lt;span class=\"hljs-number\"&gt;0x7ffff7226d20&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;exit&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;\n    jmpq   &lt;span class=\"hljs-number\"&gt;0x7ffff720f499&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;57&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3aaa26&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b9f90 &amp;lt;__libc_pthread_functions&amp;#43;400&amp;gt;&lt;/span&gt;\n    ror    $&lt;span class=\"hljs-number\"&gt;0x11&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%fs&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0x30&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3aaa00&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b9f80 &amp;lt;__libc_pthread_functions&amp;#43;384&amp;gt;&lt;/span&gt;\n    ror    $&lt;span class=\"hljs-number\"&gt;0x11&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%fs&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0x30&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    lock decl (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)\n    sete   &lt;span class=\"hljs-variable\"&gt;%dl&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%dl&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%dl&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f555&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;245&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%edi&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edi&lt;/span&gt;\n    callq  &lt;span class=\"hljs-number\"&gt;0x7ffff72dc350&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__exit_thread&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a489c&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3e48&lt;/span&gt;\n    lea    &lt;span class=\"hljs-number\"&gt;0x16561c&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff7374bcf&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rsi&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-number\"&gt;0x120&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;)\n    jmpq   &lt;span class=\"hljs-number\"&gt;0x7ffff720f503&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;163&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x170&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r13&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x3a47ff&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff75b3dd0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%r12d&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r12d&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r14&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x18&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%r13&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    test   &lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    je     &lt;span class=\"hljs-number\"&gt;0x7ffff720f5f2&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;402&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-variable\"&gt;%r12d&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%edx&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;0x46&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;shl&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;0x4&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;\n    lea    &lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%r14&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;    $&lt;span class=\"hljs-number\"&gt;0x1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r12d&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x40&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%r13&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%r13&lt;/span&gt;\n    cmp    &lt;span class=\"hljs-variable\"&gt;%r12d&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%ebp&lt;/span&gt;\n    jne    &lt;span class=\"hljs-number\"&gt;0x7ffff720f5d7&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;375&amp;gt;&lt;/span&gt;\n    jmpq   &lt;span class=\"hljs-number\"&gt;0x7ffff720f4fa&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;154&amp;gt;&lt;/span&gt;\n    mov    &lt;span class=\"hljs-number\"&gt;0x8&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rsp&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;\n    lea    &lt;span class=\"hljs-number\"&gt;0x1655a5&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rip&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rdi&lt;/span&gt;        &lt;span class=\"hljs-comment\"&gt;; 0x7ffff7374bb5&lt;/span&gt;\n    mov    (&lt;span class=\"hljs-variable\"&gt;%rax&lt;/span&gt;)&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%rsi&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;xor&lt;/span&gt;    &lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;%eax&lt;/span&gt;\n    callq  *&lt;span class=\"hljs-number\"&gt;0x120&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;%rdx&lt;/span&gt;)\n    jmpq   &lt;span class=\"hljs-number\"&gt;0x7ffff720f4cb&lt;/span&gt;             &lt;span class=\"hljs-comment\"&gt;; &amp;lt;__libc_start_main&amp;#43;107&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["for循环判断条件如果写的表达式，会不会重复计算", ["如for语句的：sizeof(arr)/sizeof(arr[0])"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a.number&amp;lt;&amp;#61;100 &amp;amp;&amp;amp; number &amp;gt; 20&lt;br /&gt;b. ch !&amp;#61; &amp;#39;a&amp;#39; &amp;amp;&amp;amp; ch !&amp;#61; &amp;#39;b&amp;#39; &amp;amp;&amp;amp; ch !&amp;#61; &amp;#39;c&amp;#39; &amp;amp;&amp;amp; ch !&amp;#61; &amp;#39;d&amp;#39;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    也可以这样写:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    ch &amp;lt;&amp;#39;a&amp;#39; || ch &amp;gt; &amp;#39;d&amp;#39;&lt;/span&gt;&lt;br /&gt;c.number &amp;gt;&amp;#61;89 &amp;amp;&amp;amp; number &amp;lt;&amp;#61; 100 &amp;amp;&amp;amp; number !&amp;#61; 99&lt;br /&gt;d.number &amp;lt;89 || number &amp;gt; 100&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c控制语句:分支和跳转2", ["简易构造题", "根据下列描述的条件，分别构造一个表达式", "a. number小于或等于100，但是总体要大于20", "b. ch不可以是字符abcd", "c. number在89", "100之间（包括89和100），但不是99", "d. number不在89", "100之间（number也不可以等于89或100） "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; re \n\nl &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;http://www.yahoo.com/&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;www.forex.cngold.org&amp;#39;&lt;/span&gt;]\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l:\n    s &amp;#61; re.findall(&lt;span class=\"hljs-string\"&gt;r&amp;#39;(?&amp;lt;&amp;#61;www.)(.&amp;#43;)(?&amp;#61;.com|.net|.org|.edu)&amp;#39;&lt;/span&gt;, i)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; s:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;是一个有效网址&amp;#xff01;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n         &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;是一个无效网址&amp;#xff01;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["使用正则表达式匹配简单的网址", ["使用正则表达式匹配简单以“www”开头，以“.com”、 “.edu”、 “.net”作结尾的 Web 域名，中间为1个以上的其他字符串（如：.yahoo），例如：输入：", "http://www.yahoo.com/", "  或者 ", "www.forex.cngold.org", " 都应该满足条件，并输出“这是一个有效网址”，否则输出“这是一个无效网址？”"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; sex, answer;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别: &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;sex);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入年龄: &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;age);\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sex &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;)\n        {\n            answer &amp;#61; (age &amp;lt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt; : &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (sex &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;)\n        {\n            answer &amp;#61; (age &amp;lt; &lt;span class=\"hljs-number\"&gt;35&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt; : &lt;span class=\"hljs-string\"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否符合要求&amp;#xff1a;%c \\n&amp;#34;&lt;/span&gt;, answer);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["判断输出其是否符合要求？(语言-c语言)", ["编写程序，实现如下功能。", "\n", "某公司招聘条件如下：年龄要求30岁以下，男性可放宽到35岁。请从键盘输入某人年龄、性别信息，判断输出其是否符合要求。", "\n", "示例：", "\n", "输入", "\n", "请输入性别：F↙", "\n", "请输入年龄：34↙", "\n", "输出", "\n", "是否符合要求：N", "\n", "提示：", "\n", "（1）性别可用字符型数据表示，F表示女性，M表示男性；", "\n", "（2）可用字符变量保存判断结果，Y表示符合，N表示不符合；", "\n", "（3）可用条件表达式实现判断。"]], "Tag": "程序设计"}
{"Answer": "点数为列名,类型为int.\r\nwhere 点数  ='\" + dianshu[0, i] + \"'\"\r\n这条应为\r\nwhere 点数  =\" + dianshu[0, i] \r\n类型为数值时不要加引号。加了引号表示值的类型为字符串。", "Konwledge_Point": "条件表达式", "Question": ["C#中写SQL语句，单双引号的区别，为什么会报标准表达式中数据类型不匹配。", ["                        OleDbDataAdapter WorkPieceDataDA = new OleDbDataAdapter(\"update\" + \"[\" + ming + \"]\" + \"set \" + lieming[j, 0] + \" = '\" + jilushuzhi_left[j, i] + \"' where 点数  ='\" + dianshu[0, i] + \"'\", tempconn);//充当 DataSet 和数据源之间的桥梁，用于检索和保存数据\n", "\n\n", "这里的点数为列名，在上面设置的类型为int，请问为什么会报  标准表达式中数据类型不匹配。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;let a&amp;#61;/^((?!D|E|F).)*(?:A|B|C)((?!&amp;#61;D|E|F).)*$/\na.test(&amp;#39;A&amp;#39;)\na.test(&amp;#39;D&amp;#39;)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;拿走不谢&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["两个正则表达式,希望正则大佬指点迷津", ["第一个:", "\n\n", "假如有关键字: 关键字A,关键字B,关键字C", "\n\n", "有排除关键字: 关键字D,关键字E,关键F", "\n\n", "要求匹配关键字A|B|C,且没有关键字D|E|F", "\n\n", "要求?:形式,", "\n\n", "比如满足第一个条件就是`/(?:A|B|C)/`但是同时满足两个条件不会写,求大佬指点", "\n\n", " ", "\n\n", "第二个正则:", "\n\n", "要求不匹配 A|B|C,其实就类似第一个正则的条件2"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This statement will &lt;em&gt;always&lt;/em&gt; be &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;($var !== 1 || $var !== 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because &lt;code&gt;$var&lt;/code&gt; can never simultaneously be both values, it will always &lt;em&gt;not&lt;/em&gt; be at least one of the two values.  Which satisfies the &lt;code&gt;||&lt;/code&gt; operator.&lt;/p&gt;\n\n&lt;p&gt;If you want to know whether &lt;code&gt;$var&lt;/code&gt; is one of the two values:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;($var === 1 || $var === 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to know if &lt;code&gt;$var&lt;/code&gt; is &lt;em&gt;neither&lt;/em&gt; of the two values, you can negate the condition:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(!($var === 1 || $var === 2))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or individually negate the operators in the condition and use &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; instead of &lt;code&gt;||&lt;/code&gt; (since all conditions need to be met to prove the negative, instead of just one condition to prove the positive):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;($var !== 1 &amp;amp;&amp;amp; $var !== 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Depending on readability and personal preference.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["具有多种条件的三元运算符", ["\n\n", "Hello I am trying to properly format ternary operator to be using multiple conditions in php: ", "\n\n", "$result = ($var !== 1 || $var !== 2) ? '' : 'default';\n", "\n\n", "The problem is that in this format I always get not true even iv the $var is 1 or 2. With one condition for example ", "$var == 0", " it is working fine. Any help will be welcome. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;^(?&amp;#61;.&lt;em&gt;?[A-Z])(?&amp;#61;(.&lt;/em&gt;[a-z]){1,})(?&amp;#61;(.&lt;em&gt;[\\d]){1,})(?&amp;#61;(.&lt;/em&gt;[\\W]){1,})(?!.*\\s).{8,}$&lt;br /&gt;规则&amp;#xff1a;&lt;br /&gt;至少一个大写英文字母&lt;br /&gt;至少一个小写英文字母&lt;br /&gt;至少一位数字&lt;br /&gt;至少一个特殊字符&lt;br /&gt;最少八个字符&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式：密码必须至少包含八个字符、至少包含一个数字、小写和大写的字母以及特殊字符", ["我需要一个正则表达式来检查密码：", "密码至少包含八个字符、至少包含一个数字、同时包含小写字母和大写字母以及特殊字符，例如#，?，!)", "不能是旧密码或包含用户名，\"password\"或\"websitename\"", "这里是我的验证表达式，用于限制：八个字符，包括一个大写字母，一个小写字母和一个数字或特殊字符。", "(?=^.{8,}$)((?=.", "\\d)|(?=.", "\\W+))(?![.\\n])(?=.", "[A-Z])(?=.", "[a-z]).*$\"", "那么，如何写一个正则，限制密码必须是八个字符，包括一个大写字母，一个特殊字符和字母数字字符？"]], "Tag": "程序设计"}
{"Answer": "任意连续5位不允许相同是哪种情况？\r\n如果是不允许连续5位的字符都相同：\r\n`^(?!.*(.)\\1{4})[\\dA-HJ-NPR-Z]{12}\\d{5}$`\r\n如果是不允许相隔5位之内有相同的字符：\r\n`^(?!.*(.).{0,3}\\1)[\\dA-HJ-NPR-Z]{12}\\d{5}$`", "Konwledge_Point": "条件表达式", "Question": ["求一个很复杂的正则表达式写法，规则如下", ["\n", "一共17位只包含数字和大写字母", "\n", "不包含英文字母“I”、“O”、“Q”", "\n", "第13到17位为数字", "\n", "任意连续5位不允许相同", "\n", "以上条件同时满足"]], "Tag": "程序设计"}
{"Answer": "转义逗号，由于逗号不是正则关键字，加\\和不加\\都可以，不影响，但是如果是{}[]这种字符就需要注意机上，要不报错", "Konwledge_Point": "条件表达式", "Question": [" 关于正则表达式去空格的", ["一大段话，要求识别 回车，逗号（全角半角均可），顿号，空格（全角半角、Tab等均可）等符号作为不同内容的间隔，变成若干小句子", "\n然后我写的", "\n1空格2  空格能消掉。    空格空格1 空格消不掉", "\n---------------------------已懂  我加了个条件 数组首尾元素是“”则弹出-----------", "\n\n", "然后我去翻高程书128页 ", "\n\n", " var color = \"red ,blue,green,yellow”\nvar col = color.split(/[^\\,]+/)----->[\"\" , \",\" , \",\" , \",\" \"\"]\n", "\n\n", "\\,怎么理解 逗号还能转义？"]], "Tag": "程序设计"}
{"Answer": "&lt;ol start=\"3\"&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n a &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; b &amp;#43; &lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;gt; a &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;lt;b\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["关系表达式及逻辑表达式", ["3.a,b,c是整型变量，判定a与b+c相等的关系表达式是：", "4.已知数学不等式a＜x＜b,用C语言编程判断不等式成立，C语言的表达式是什么？", "请同学们积极参与，因为关系表达式、逻辑表达式在if语句的条件判断、循环语句结束的判断起一定作用。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;!x就是x为0的时候为真&amp;#xff0c;其他都为假&amp;#xff0c;while(!x)可以理解为是while(x&amp;#61;&amp;#61;0)&lt;br /&gt;c的 x!&amp;#61;1 为真&amp;#xff0c;那么x为456789都是为真呀&amp;#xff0c;只要x不是1就为真,跟这个是不一样的&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["!x的等价表示是什么", ["选项a和c不是同样的意义吗？而且最开始学的while循环语句中说while()括号里面是循环条件表达式，但是又有很多括号里面就是一个这样的表达式或者是赋值表达式，这种怎么理解？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;然后走后面的a&amp;lt;d&lt;/p&gt;\n&lt;p&gt;一部分是 a &amp;lt; b ? a :&amp;#xff0c;是如果a小于b&amp;#xff0c;则返回a&amp;#xff0c;否进入第二部分&amp;#xff1b;&lt;/p&gt;\n&lt;p&gt;二部分是 a &amp;lt; d ? c : d&amp;#xff0c;是如果a小于d&amp;#xff0c;则返回c&amp;#xff0c;否则返回d。&lt;/p&gt;\n&lt;p&gt;所以&amp;#xff0c;整个条件表达式的含义是&amp;#xff0c;如果a小于b&amp;#xff0c;则返回a&amp;#xff0c;否则如果a小于d&amp;#xff0c;则返回c&amp;#xff0c;否则返回d。&lt;/p&gt;\n&lt;p&gt;例子中&amp;#xff0c;a&amp;#61;1&amp;#xff0c;b&amp;#61;2&amp;#xff0c;c&amp;#61;3&amp;#xff0c;d&amp;#61;4。因为a小于b&amp;#xff0c;所以整个条件表达式的值是a的值&amp;#xff0c;即1。&lt;/p&gt;\n&lt;p&gt;如果a不小于b&amp;#xff0c;那么要进入二部分&amp;#xff0c;判断a是否小于d。如果a小于d&amp;#xff0c;则返回c&amp;#xff0c;否则返回d。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["这个答案是1，但是我走完a＜b走a之后就不知道该怎么往下走了", ["若a=1,b=2,c=3,d=4,则条件表达式a<b?a：a<d?c:d的值为（）。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个程序就是读取文件的数据&amp;#xff0c;以字典形式存储&amp;#xff0c;进行计算&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["score_dict=dict()  score_file=open(\"scores.txt\")", ["score_dict", "[", "'key'", "]", "=", "'stu_No'", "\nscore_dict", "[", "'value'", "]", "=", "'score_list'", "#在字典score_dict中增加新元素，key为stu_no， value为score_list\n\nlineReaded = score_file", ".readline", "() #读取文件下一行，继续while循环\n", "\n", "for key,value in score_dict.items():", "\n", "average_score=", "sum", "(score_list)/", "5", "                  ", "#计算5门课的平均成绩，可使用sum函数求得总数", "\nmin_score=", "min", "(score_list)                     ", "#计算5门课中的最低成绩，可使用min函数", "\n", "if", " average_score>", "80", ":\n    min_score>", "70", "      ", "# 条件表达式 为 评审条件", "\n    ", "print", "(", "f\"学号为", "{stuNo}", "的同学，恭喜你，可以申请奖学金\"", ")   ", "# 如条件表达式成立输出题目要求对应提示", "\n\n", "else", ":\n    ", "print", "(", "f\"学号为", "{stuNo}", "的同学，请努力争取下次的机会\"", ")    ", "# 如条件表达式不成立输出题目要求对应提示", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a&amp;#43;b &amp;#61; 0&lt;br /&gt;以0作为返回值为假&lt;br /&gt;这是一种特殊情况&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言，条件判断问题", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n", "int", " x=", "5", ",a=", "0", ",b=", "0", ";\n", "if", "(x=a+b) ", "printf", "(", "\"****\\n\"", ");\n", "else", " ", "printf", "(", "\"####\\n\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果", "\n", "请问条件表达式不是赋值语句么，为什么输出的是else？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;How about removing &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;display&lt;/code&gt; attribute, then append attribute you want?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function no_border($css)\n{\n    $css = preg_replace('/;?\\s*(border|display)\\s*:[^;]+;?/', '', $css);\n    return ltrim(rtrim($css, ';') . ';border:0;display:block;', ';');\n}\n\nno_border('color:white');                // \"color:white;border:0;display:block;\"\nno_border('color:white;border:1px;');    // \"color:white;border:0;display:block;\"\nno_border('color:white;display:inline'); // \"color:white;border:0;display:block;\"\nno_border('');                           // \"border:0;display:block;\"\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式在满足特定条件时添加CSS条件", ["\n\n", "It's a bit complicated.\nI would like to write a regexp to add ", "border:0;display:block", " if the ", "$subject", " doesn't contain, or if ", "$subject", "'s border doesn't equal ", "0 nor display:block;", "\n\n", "for instance, if the ", "$subject", " is:", "\n\n", "Case 1:", "\n\n", "color:white\n", "\n\n", "after ", "preg_replace", " if will return", "\n\n", "color:white;border:0;display:block\n", "\n\n", "Case 2:", "\n\n", "color:white;border:1px;\n", "\n\n", "after preg_replace if will return", "\n\n", "color:white;border:0;display:block\n", "\n\n", "Case 3:", "\n\n", "color:white;display:inline\n", "\n\n", "after ", "preg_replace", " if will return", "\n\n", "color:white;display:block;border:0;\n", "\n\n", "Case 4:", "\n\n", "{empty}\n", "\n\n", "after ", "preg_replace", " if will return", "\n\n", "border:0;display:block;\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;bool 返回值&amp;#xff0c;参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;STU&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; _name;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; _age;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    STU(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; name, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; age) { _name &amp;#61; name; _age &amp;#61; age; };\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getName&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; _name; };\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getAge&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; _age; };\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;show&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; { cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;名字&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;年龄&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _age&amp;lt;&amp;lt;endl; };\n    &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; &amp;lt; (STU p1) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (_age  &amp;lt; p1.getAge()) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        }\n    }\n};\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["一个关于＞重载的问题", ["一直不通过不知道为什么，错误显示类型为\"CP_A\"的条件表达式无效。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这些检查约束不要数据库加&amp;#xff0c;代码做限制比较好。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["MySQL添加检查约束", ["\n", "请问一下数据库的添加检查约束该怎么码，我感觉我是条件表达式写错了，该怎么办？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用andCondition试下&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["tkmapper的deleteByExample方法怎么设置删除数量", ["tkmapper的deleteByExample方法怎么设置删除数量？", "用的是Oracle数据库，想要通过tkmapper来实现rownum < 100这样的条件", "Example.Criteria criteria 里没有找到合适的方法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就是表达式为真的判断。什麽是真&amp;#xff1f;不为0就是真。所以M就相当于M!&amp;#61;0。也就是说&amp;#xff0c;只要M值不是0&amp;#xff0c;条件就是真。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于？：的问题，请教", ["14、对于条件表达式（M）?(a++):(a--),其中的表达式M等价于（   ）。", "  A）M= =0       B)M= =1      C)M!=0     D)M!=1", "为什么答案是cT_T"]], "Tag": "程序设计"}
{"Answer": "你可以用scripthost去执行你的表达式，得到结果", "Konwledge_Point": "条件表达式", "Question": ["VB6.0从数据库读取代表布尔表达式的判断条件", ["VB6.0从数据库读取代表布尔表达式的判断条件？请问怎么转换为这个布尔表达式的值呢？我需要在程序中调用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是你递归处理中当n&amp;lt;1时的输出啊。你在for循环中调用递归&amp;#xff0c;会有成倍数的递归调用&amp;#xff0c;如果循环10次&amp;#xff0c;那么递归嵌套3层的话&amp;#xff0c;就会输出10&lt;em&gt;10&lt;/em&gt;10次&lt;br /&gt;所以你确定这个递归调用是在for循环里面&amp;#xff0c;而不是在for循环外面吗&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["这段代码是如何输出这些字符排列的，我找不到输出这些字符排列的函数", ["写代码的时候碰见的问题", "\n", "这个perm函数里面的for循环的条件表达式是无限循环的是怎么停止的", "这是main函数", "这是输出结果", "main函数和perm函数里都没有输出这些字符排列的函数，我不明白这些字符排列为什么会输出出来"]], "Tag": "程序设计"}
{"Answer": "```\r\nint main()\r\n{\r\n    char c = 0;\r\n    while (c != EOF) {\r\n        c = getchar();\r\n        c = (c &gt;= 'A' &amp;&amp; c &lt;= 'Z' ? c = c - 'A' + 'a' : c);\r\n        putchar(c);\r\n    }\r\n\r\n    return 0;\r\n}\r\n```", "Konwledge_Point": "条件表达式", "Question": ["c语言基础实验，想问一下这样写为什么不对，怎么用ctrl+z结束", ["\n输入字符c,如果c是大写字母,则将c转换成对应的小写,否则c的值不变,输人Ctrl+Z程序结束。要求:①用条件表达式;程序应能循环接受用户的输入,直至输入 Ctrl＋Z结束。"]], "Tag": "程序设计"}
{"Answer": "```\r\n zyyzjymx!=null?(f1(zyyzjymx)):(mzzdjymx!=null?f1(mzzdjymx):null);\r\n```", "Konwledge_Point": "条件表达式", "Question": ["Java 三目运算符 判断两个对象是否为空", ["//住院非空,对住院进行处理,住院不为空,判断门诊是否为非空,对门诊进行处理", "\n//zyyzjymx!=null?f1(zyyzjymx):mzzdjymx!=null?f1(mzzdjymx):null;", "\n\n", "不会写代码...", "\n思路如上 求大神解决~", "\n\n"]], "Tag": "程序设计"}
{"Answer": "简单的回答是因为语法的规定。\r\n在实际编程中，极少有如此多的分支，以致需要使用Long类型。\r\n\r\n这样的语法规定是语言设计者的折衷考虑，并不一定特别合理，语言规范也在不停演变。\r\n但截止目前的版本，Java的Swithch分支仍然不支持Long，在这种情况下，可以采取一些办法：\r\n\r\n1  转为int类型，范例如下：\r\n\r\n\r\n\r\n```\r\n      final long value = System.currentTimeMillis() % 5;\r\n      switch ( (new Long(value)).intValue() ) //注意这行\r\n      {\r\n         case 1 : System.err.println(\"One\");\r\n                  break;\r\n         case 2 : System.err.println(\"Two\");\r\n                  break;\r\n```\r\n\r\n2    放弃switch，改用 if/else 的写法。\r\n3    放弃switch，改用 Map&lt;Long,Runnable&gt;。\r\n\r\n补充：语言的底层实现细节有时还真不完全清楚，Java新版本中Switch添加了对String的支持，如果要支持Long，也没问题。\r\n谁知道他们是怎么想的^_^，作为语言的使用者，遵守规则即可。\r\n\r\n**如果对您有帮助，请采纳答案好吗，谢谢！**", "Konwledge_Point": "条件表达式", "Question": ["Switch条件不能放置long类型？", ["Switch（条件）{}", "\n这个条件位置为什么不能放long类型的语句？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用数据库却可以&amp;#xff0c;这是为什么呢&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport pandas as pd\nimport numpy\nfrom sqlalchemy import create_engine\nengine &amp;#61; create_engine(&lt;span class=\"hljs-string\"&gt;&amp;#39;mysql&amp;#43;pymysql://root:root&amp;#64;127.0.0.1:\\\n3306/testdb?charset&amp;#61;utf8&amp;#39;&lt;/span&gt;)\ndetail &amp;#61; pd&lt;span class=\"hljs-selector-class\"&gt;.read_sql_table&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;meal_order_detail1&amp;#39;&lt;/span&gt;,con &amp;#61; engine)\norder_id &amp;#61; detail&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;order_id&amp;#39;&lt;/span&gt;]&lt;/span&gt;\ndishes_name &amp;#61; detail&lt;span class=\"hljs-selector-class\"&gt;.dishes_name&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;detail中order_id为458的dishes_name为: \\n&amp;#39;&lt;/span&gt;, detail.loc[detail[&lt;span class=\"hljs-string\"&gt;&amp;#39;order_id&amp;#39;&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;458&amp;#39;&lt;/span&gt;,[&lt;span class=\"hljs-string\"&gt;&amp;#39;order_id&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;dishes_name&amp;#39;&lt;/span&gt;]])&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;detail中order_id为458的第1,5列数据为: \\n&amp;#39;&lt;/span&gt;, detail.iloc[(detail[&lt;span class=\"hljs-string\"&gt;&amp;#39;order_id&amp;#39;&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;458&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.values&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[1,5]&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/25987989976617.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["报错：TypeError: invalid type comparison，百度试了几个方法还是不行，请问这怎么解决。", ["要求:使用loc,和 iloc,实现条件切片读取数据源“meal_order_detail.xlsx\"或\"meal_order_detaill.aql\"，使用条件表达式，返回某一特定条件下的所有值。", "\n", "\nimport pandas as pd\n\ndetail = pd.read_excel(", "'D:/AAA学习/数据分析/2022.11.9/meal_order_detail.xlsx'", ")\norder_id = detail[", "'order_id'", "]\ndishes_name = detail.dishes_name\ndishes_name1 = detail.loc[:, ", "'dishes_name'", "]\ndishes_name2 = detail.iloc[:, ", "3", "]\norderDish1 = detail.loc[:, [", "'order_id'", ", ", "'dishes_name'", "]]\norderDish2 = detail.iloc[:, [", "1", ", ", "3", "]]\n# loc内部传入表达式\nprint(", "'detail中order_id为458的dishes_name为: \\n'", ", detail.loc[detail[", "'order_id'", "] == ", "'1'", ", [", "'order_id'", ", ", "'dishes_name'", "]])\n", "\n", "请问这怎么解决"]], "Tag": "程序设计"}
{"Answer": "var value = \"第3fsdf\";\r\n        var pattern = /^第3(fsdf)?$/;\r\n        if(value.match(pattern)){\r\n            alert(非法);\r\n        }\r\n\r\n呵呵.", "Konwledge_Point": "条件表达式", "Question": ["正则表达式问题", ["如何用正则表达式判断（第3和第3fsdf）这两种形式为非法，其余组合为合法，前提条件是能输入的只有数字，字母，中文。"]], "Tag": "程序设计"}
{"Answer": "完整地返回以下两个结果：\r\n`(?&lt;=姓名)(.*?((?&lt;=姓名).*?)?)(?=对)/)`\r\n第一个子匹配结果：是什么姓名张三\r\n第二个子匹配结果：张三\r\n\r\n\r\n如果要直接获取“张三”\r\n`(?&lt;=姓名)((?:(?!姓名).)*?)(?=对)`", "Konwledge_Point": "条件表达式", "Question": ["如何用正则表达式提取所有符合「介于两个特定字符串a和b之间」这一条件的内容？", ["例如有这样一段文本（无标点符号）：", "\n\n", "\n", "请问您的姓名是什么姓名张三对吗", "\n", "\n\n", "现在需要提取姓名，即\"张三\"。需要提取的姓名，位于\"姓名\"和\"对\"这两个固定的字符串之间，故使用以下正则表达式规则：", "\n\n", "(?<=姓名)(.*?)(?=对)\n", "\n\n", "提取结果只有一条，如下：", "\n\n", "\n", "是什么姓名张三", "\n", "\n\n", "请问怎样的正则表达式可以完整地返回以下两个结果：", "\n\n", "\n", "是什么姓名张三", "\n\n", "张三", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写个函数吧&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["react，如何写多个条件的三元表达式？", ["已写的代码：", "\n", "// 如果", "title", "里的值为", "26", "个字母里的其中一个，则把item里面的", "label", "里的文字内容显示出来；\n// 如果", "title", "里的值为热门城市，则把cityListHot里的文字内容显示出来，如果", "title", "里的值不为热门城市，则把curCityList里的文字内容显示出来\n<div>\n{", "title", "==/^[a~zA~Z]$/ ? item.", "label", " : (", "title", "==", "\"热门城市\"", " ? cityListHot : curCityList)}\n</div>\n", "\n", "以上三元表达式只显示出了curCityList里的文字内容，其余两个情况没有显示出相应的文字内容，请问代码哪里出了问题？正确的代码是什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为以后的div.style.left等于100了&amp;#xff0c;执行if里面的语句没有执行else语句&amp;#xff0c;所以永远是100px&amp;#xff0c;if里面因为没有表达式&amp;#xff0c;所以你看见的元素就停那了&amp;#xff0c;其实计时器还在运行&amp;#xff0c;只不过永远执行if语句没有执行else语句&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["为什么if写了条件表表达式，但是没写条件执行语句还能执行呢？", ["\n", "<", "style", ">", "\n    ", "div", " {\n        ", "position", ": absolute;\n        ", "left", ": ", "0", ";\n        ", "width", ": ", "100px", ";\n        ", "height", ": ", "100px", ";\n        ", "background-color", ": tan;\n    }\n", "</", "style", ">", "\n\n", "<", "body", ">", "\n    ", "<", "div", ">", "</", "div", ">", "\n", "</", "body", ">", "\n", "<", "script", ">", "\n    ", "var", " div = ", "document", ".", "querySelector", "(", "'div'", ");\n    ", "var", " timer = ", "setInterval", "(", "function", " ", "fn", "(", ") {\n        ", "if", " (div.", "offsetLeft", " >= ", "100", ") {\n           \n        } ", "else", " {\n            div.", "style", ".", "left", " = div.", "offsetLeft", " + ", "1", " + ", "'px'", ";\n            ", "console", ".", "log", "(div.", "style", ".", "left", ");\n        }\n    }, ", "30", ");\n", "</", "script", ">", "\n", "\n", "就像这段代码，我本来想设置div的offsetleft大于等于100就会clearinterval(timer),但是我的if语句里面没有写clearintervale（timer），运行的时候div还是会在offsetleft==100的时候停下，这是为什么呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;(&lt;span class=\"hljs-number\"&gt;*a&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt;) ? (&lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;*a&lt;/span&gt;) : (&lt;span class=\"hljs-number\"&gt;*a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt;);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["？：中为什么不能用形参进行比较", ["问题遇到的现象和发生背景", "\n", "为什么如图所示的用条件表达式？：就会报错，这个就只能用if语句么", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "void large(double* ,double*);", "\n", "int main() {", "    double a, b;", "    printf(\"请输入两个不一样的浮点数\\n\");", "    scanf(\"%lf%lf\",&a,&b);", "\n", "large(&", "a", ", &", "b", ");\nprintf(\"现在", "a", "，", "b", "的值为%.", "2", "lf，%.", "2", "lf\\n\",", "a", ",", "b", ");\n\n\n\n\nreturn ", "0", ";\n", "\n", "}", "\n", "void large(double *a,double *b) {", "    if (*a > *b) {", "        *b = *a;", "    }", "    else", "        *a = *b;", "\n", "}", "\n", "运行结果及报错内容", "\n", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据你提供的资料&amp;#xff0c;作了一个实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;strcompare&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * str1,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * str2)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p&amp;#61;str1,*q&amp;#61;str2;\n    \n    &lt;span class=\"hljs-comment\"&gt;//如果p当前指向的字符等于q指向的执行&amp;#xff0c;并且p没有指向字符串结尾与q没有指向字符串结尾 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(*p&amp;#61;&amp;#61;*q&amp;amp;&amp;amp;*q!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;*p!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;){\n        &lt;span class=\"hljs-comment\"&gt;//q指针和q指向分别向后移动一个字符位置&amp;#xff0c;以便开始判断下一个字符是否相等 &lt;/span&gt;\n        p&amp;#43;&amp;#43;;    \n        q&amp;#43;&amp;#43;;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//执行到这里说明p指向的字符和q指向的字符开始不相等&amp;#xff0c;这&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//里就返回p指向的字符减去q指向的字符的差值&amp;#xff0c;达到字符串按ASCII码比较大小的目的 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *p-*q;\n    \n} \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; b[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    \n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(a);\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(b);\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;strcompare&lt;/span&gt;(a,b));\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/879791608156170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言指针，判断指向大小", ["字符串的大小比较是编程语言里常用的功能，现试着编程运用指针实现两个字符串按字典序大小比较。要求将字符串比较大小的功能做成单独的函数，并在main函数里调用。", "\n", "   编程提示：", "\n", "（1）确定字符串比较函数的形式：int strcompare(const char * str1, const char * str), 当str1>str2时返回一个正整数，str1==str2时返回0，str1<str2时返回负整数；  ", "\n", "（2）strcompare的思路：定义两个char ", "指针p和q，分别指向str1，str2，开始循环，循环条件表达式为", "p == *q && *q != ‘\\0’ && *p != ‘\\0’，循环体为 p++; q++;。当循环条件不满足时，跳出循环，这代表：", "\n", "1)p,q指向了两个字符串第一个不相同的字符;", "\n", "2)str1字符串或者str2字符串到达了字符串结束字符’\\0’，此时返回判断p和q指向的字符的大小即可。", "\n", "【输入形式】输入两个字符串，以回车作为分隔符", "\n", "【输出形式】比较结果", "\n", "【样例输入】", "\n", "abcf", "\n", "abed", "\n", "【样例输出】-2"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use &lt;a href=\"http://php.net/manual/en/language.operators.bitwise.php\" rel=\"nofollow\"&gt;bitwise AND&lt;/a&gt; (single ampersand: &lt;code&gt;&amp;amp;&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$a = \"Apple\";\n$b = \"Banana\";\n$c = \"Cherry\";\n\nfunction check($fruit) {\n    echo ($fruit != \"Banana\") ? \"$fruit is good.\n\" : \"$fruit is bad.\n\";\n}\n\nif (check($a) &amp;amp; check($b) &amp;amp; check($c)) {\n    echo \"Yummy!\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Prints:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Apple is good. &lt;/p&gt;\n  \n  &lt;p&gt;Banana is bad. &lt;/p&gt;\n  \n  &lt;p&gt;Cherry is good.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Example: &lt;a href=\"http://sandbox.onlinephpfunctions.com/code/07092a9d6636ae8ddafce024d7cc74643e311e9c\" rel=\"nofollow\"&gt;http://sandbox.onlinephpfunctions.com/code/07092a9d6636ae8ddafce024d7cc74643e311e9c&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["如何评估条件中的所有表达式？", ["\n\n", "I know PHP uses lazy-evaluation / short-circuit operators. But say I wanted to evaluate all the expressions in a condition, for example:", "\n\n", "$a = \"Apple\";\n$b = \"Banana\";\n$c = \"Cherry\";\n\nfunction check($fruit) {\n    if ($fruit != \"Banana\") {\n        echo \"$fruit is good.\n\";\n        return true;\n    } else {\n        echo \"$fruit is bad.\n\";\n        return false;\n    }\n}\n\nif (check($a) && check($b) && check($c)) {\n    echo \"Yummy!\n\";\n}\n", "\n\n", "Because of lazy-evaluation, this will only output:", "\n\n", "Apple is good.\nBanana is bad.\n", "\n\n", "Rather than the desired output of:", "\n\n", "Apple is good.\nBanana is bad.\nCherry is good.\n", "\n\n", "This is useful in form validation for instance.", "\n\n", "So my question: Is there any way to force all expressions in a condition to be evaluated in PHP, and if not, what would be the best/quickest way to get the desired result in the example above?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"hljs language-cpp\"&gt;int main() \n{ \n\tint num&amp;#61;-1; \n\tint max &amp;#61; 0; \n\tprintf(&amp;#34;请输入一组整数: \\n&amp;#34;);\n\t/***********SPACE***********/ \n\twhile(num!&amp;#61;0) \n\t{ \n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;num); \n\t\tif(max &amp;lt; num)\n\t\t\tmax &amp;#61; num;\n\t} \n\t/***********SPACE***********/ \n\tprintf(&amp;#34;max&amp;#61;%d\\n&amp;#34;, max); \n\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["C语言题求解，急急急", ["题目：从键盘输入一组整数，使用条件表达式找出最大的整数。\n      当输入的整数为 0 时结束。 \n      例如，输入 1  2  3  5  4  0 时，输出\"max＝5\"\n\n#include \n\n\nmain() \n{\n        int num=-1; \n        int max = 0;  \n        printf(\"请输入一组整数: \\n\"); \n/***********SPACE***********/\n        while(num!=0)\n        {\n                scanf([]);  \n/***********SPACE***********/\n                max = []; \n        } \n/***********SPACE***********/\n        printf(\"max=%d\\n\", max);\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#43;32和-32写反了&amp;#xff0c;&amp;#39;A&amp;#39; 的ASCII码值是65&amp;#xff0c;&amp;#39;a&amp;#39; 的ASCII码值是97&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ch;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一行英文句子&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;()) !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n        {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ch &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; ch &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;)\n                {\n                        ch &amp;#61; ch &amp;#43; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ch &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; ch &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)\n                {\n                        ch &amp;#61; ch - &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n                }\n \n                &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(ch);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["if else语句问题", ["以下代码运行后出现乱码，if语句中的条件表达式和if执行语句中的逻辑表达式一定要同类型吗？求指导", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n        ", "int", " ch;\n        ", "printf", "(", "\"请输入一行英文句子：\"", ");\n        ", "while", " ((ch = ", "getchar", "()) != ", "'\\n'", ")\n        {\n                ", "if", " (ch >= ", "'A'", " && ch <= ", "'Z'", ")\n                {\n                        ch = ch + ", "32", ";\n                }\n                ", "else", " ", "if", " (ch >= ", "'a'", " && ch <= ", "'z'", ")\n                {\n                        ch = ch - ", "32", ";\n                }\n\n                ", "putchar", "(ch);\n        }\n        ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果：", "若改为以下代码", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n        ", "int", " ch;\n\n        ", "printf", "(", "\"请输入一行英文句子：\"", ");\n\n        ", "while", " ((ch = ", "getchar", "()) != ", "'\\n'", ")\n        {\n                ", "if", " (ch >= ", "'A'", " && ch <= ", "'Z'", ")\n                {\n                        ch = ch - ", "'A'", " + ", "'a'", ";\n                }\n                ", "else", " ", "if", " (ch >= ", "'a'", " && ch <= ", "'z'", ")\n                {\n                        ch = ch - ", "'a'", " + ", "'A'", ";\n                }\n                ", "putchar", "(ch);\n        }\n\n        ", "putchar", "(", "'\\n'", ");\n        ", "return", " ", "0", ";\n}\n\n", "\n", "#include <stdio", ".", "h>\n\n", "int", " main()\n{\n        ", "int", " ", "ch", ";", "\n\n        printf(", "\"请输入一行英文句子：\"", ")", ";", "\n\n        while ((", "ch", " = getchar()) != ", "'\\n'", ")\n        {\n                if (", "ch", " >= ", "97", " && ", "ch", " <= ", "122", ")\n                {\n                        ", "ch", " = ", "ch", " - ", "32", ";", "\n                }\n                else if (", "ch", " >= ", "65", " && ", "ch", " <= ", "90", ")\n                {\n                        ", "ch", " = ", "ch", " + ", "32", ";", "\n                }\n\n                putchar(", "ch", ")", ";", "\n        }\n        return ", "0", ";", "\n}\n", "\n", "结果都如下：", "\n", "第一个图的代码乱码的原因在哪里？最后的putchar（'\\n'）;代表什么"]], "Tag": "程序设计"}
{"Answer": "帮你写了一个\r\n![图片说明](https://img-ask.csdn.net/upload/201810/20/1539969562_591705.gif)\r\n\r\n完整代码如下\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Q703207\r\n{\r\n    static class LinqExt\r\n    {\r\n        public class DGroupBy&lt;T&gt; : IGrouping&lt;object[], T&gt;\r\n        {\r\n            private List&lt;T&gt; _innerlist = new List&lt;T&gt;();\r\n\r\n            private object[] _key;\r\n\r\n            public DGroupBy(object[] key) { _key = key; }\r\n\r\n            public object[] Key\r\n            {\r\n                get { return _key; }\r\n            }\r\n\r\n            public void Add(T value)\r\n            {\r\n                _innerlist.Add(value);\r\n            }\r\n\r\n            public IEnumerator&lt;T&gt; GetEnumerator()\r\n            {\r\n                return this._innerlist.GetEnumerator();\r\n            }\r\n\r\n            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()\r\n            {\r\n                return this._innerlist.GetEnumerator();\r\n            }\r\n        }\r\n\r\n        public static IEnumerable&lt;IGrouping&lt;object[], T&gt;&gt; DynamicGroupBy&lt;T&gt;(this IEnumerable&lt;T&gt; data, string[] keys)\r\n        {\r\n            List&lt;DGroupBy&lt;T&gt;&gt; list = new List&lt;DGroupBy&lt;T&gt;&gt;();\r\n            foreach (var item in data.Select(x =&gt; new { \r\n                k = keys.Select(y =&gt; x.GetType().GetProperty(y).GetValue(x, null)).ToArray(),\r\n                v = x\r\n            }))\r\n            {\r\n                DGroupBy&lt;T&gt; existing = list.SingleOrDefault(x =&gt; x.Key.Zip(item.k, (a, b) =&gt; a.Equals(b)).All(y =&gt; y));\r\n                if (existing == null)\r\n                {\r\n                    existing = new DGroupBy&lt;T&gt;(item.k);\r\n                    list.Add(existing);\r\n                }\r\n                existing.Add(item.v);\r\n            }\r\n            return list;\r\n        }\r\n    }\r\n\r\n    class User\r\n    {\r\n        public int ID { get; set; }\r\n        public string Name { get; set; }\r\n        public int Age { get; set; }\r\n        public string City { get; set; }\r\n        public override string ToString()\r\n        {\r\n            return string.Format(\"{0},{1},{2},{3}\", ID, Name, Age ,City);\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            List&lt;User&gt; users = new List&lt;User&gt;()\r\n            {\r\n                new User() { ID = 1, Age = 20, City = \"BJ\", Name = \"A\" },\r\n                new User() { ID = 2, Age = 20, City = \"BJ\", Name = \"B\" },\r\n                new User() { ID = 3, Age = 20, City = \"BJ\", Name = \"C\" },\r\n                new User() { ID = 4, Age = 20, City = \"SH\", Name = \"D\" },\r\n                new User() { ID = 5, Age = 30, City = \"SH\", Name = \"E\" },\r\n                new User() { ID = 6, Age = 30, City = \"SH\", Name = \"F\" },\r\n                new User() { ID = 7, Age = 30, City = \"CD\", Name = \"G\" },\r\n                new User() { ID = 8, Age = 30, City = \"CD\", Name = \"H\" },\r\n                new User() { ID = 9, Age = 30, City = \"HK\", Name = \"I\" },\r\n                new User() { ID = 10, Age = 30, City = \"HK\", Name = \"J\" },\r\n            };\r\n            var query = users.DynamicGroupBy(new string[] { \"City\" });\r\n            foreach (var item in query)\r\n            {\r\n                Console.WriteLine(\"Key: {0}\", string.Join(\",\", item.Key.Select(x =&gt; x.ToString())));\r\n                foreach (var item1 in item)\r\n                    Console.WriteLine(\"\\t\" + item1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n因为csdn的女产品瞎搞，不得已，随便再问两个C#问题采纳我的回答，帮你用表达式树优化下代码（用反射比较慢）。", "Konwledge_Point": "条件表达式", "Question": ["c# list如何实现动态分组？", ["目前我只会对列表的固定的多个字段进行分组，能否实现让用户选择多个字段进行分组？不要使用条件列举所有选择情况，字段数很多，组合出的数量也很大，没有操作性。", "\n                代码如下，RuleType, RuleLevel是两个分组字段，如何动态指定其他字段？使用表达式树构造lambda表达式是否可行？如何实现呢？谢谢！", "\n\n", "StatisticList = DataList.GroupBy(t => new { t.RuleType, t.RuleLevel})", "\n                .Select(g => new Sta{", "\n                    Type = g.Key.RuleType,", "\n                    Level = g.Key.RuleLevel,", "\n                    ScoreTop = g.Sum(t => t.ScoreTop),", "\n                }).ToList();"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;z&amp;#61;|a&amp;#43;0.5|-|a|&amp;#43;0.5&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["if a>=0  then z=1 if a<0    then z=0条件怎么转换成线性表达式", ["if a>=0  then z=1", "if a<0    then z=0", "怎么转化成线性表达式？"]], "Tag": "程序设计"}
{"Answer": "```\r\n var rx=/^https?:\\/\\/[^ \\r\\n\\0]+$/i\r\n```", "Konwledge_Point": "条件表达式", "Question": ["js正则表达式要怎么写", ["现在想要一个满足以下条件的js正则表达式", "\n1.以 http:// 或 https:// 开头 ", "\n2.以半角空格，换行符 或者 结束符结尾", "\n3.中间可以为任何字符", "\n\n", "请问要怎么写？"]], "Tag": "程序设计"}
{"Answer": "*号表示匹配* 前面的字符0次和多次，所以第一个匹配条件1b2c*能匹配的值集合为{1b2,1b2c,1b2cc,1b2ccc，...},\r\n而第二个匹配条件zo*能匹配的集合为{z,zo,zoo,zooo,...}，所以得到了你粘贴的结果", "Konwledge_Point": "条件表达式", "Question": ["关于正则表达式的星号和加号", ["以下表达式：", "\n(bin) 68 % set a 1b  ;#给变量a赋值1b", "\n1b", "\n(bin) 69 % set result [regexp {1b2c*} $a resu]  ;#将匹配变量a得到的结果赋值给变量resu", "\n0  ;#返回匹配成功的次数", "\n(bin) 70 % puts $resu  ;#输出变量resu", "\ncan't read \"resu\": no such variable", "\n\n", "(bin) 71 % set a z  ;#给变量a赋值z", "\nz", "\n(bin) 72 % set result [regexp {zo*} $a resu]  ;#将匹配变量a得到的内容赋值给变量resu", "\n1  ;#返回匹配成功的次数", "\n(bin) 73 % puts $resu  ;#输出变量resu的值", "\nz ", "\n(bin) 74 % ", "\n\n", "两个表达式，一个匹配条件是1b2c*，匹配对象字符串是1b，结果返回没有匹配到内容，但是第二个表达式匹配条件是zo*，匹配对象字符串是z，结果却匹配到了。这个是什么原因啊？命名第二个表达式表示的是带有zo开头的字符串啊，为什么能匹配到z？而第一个却匹配不到1b？", "\n星号的意思是匹配0次到多次，所以哪位大神可以解答一下？？？？", "\n10币不多，请大神为小弟解惑。"]], "Tag": "程序设计"}
{"Answer": "```\r\n 这不是和上回那个很相似吗，\"abk\"这个应该不是吧\r\n public static void test3(){\r\n\t\tString str=\"abk abggs wws aos poe wihj allls ayutres \";\r\n\t\tString startChar = \"a\";\r\n\t\tString endChar = \"s\";\r\n\t\tPattern p = Pattern.compile(\"(?i)(?&lt;=)a((?!\\\\s).)*s(?=)\");//正则表达式\r\n        Matcher m = p.matcher(str) ;//\r\n        while (m.find()) {\r\n            System.out.println(m.group(0));//\r\n        }\r\n\t}\r\n```", "Konwledge_Point": "条件表达式", "Question": ["java中正则表达式问题", ["如题： 如何得到一个字符串中匹配正则的子字符串?", "\n  例如：String   str=\"abk  abggs wws aos poe wihj  allls ayutres  \";", "\n             java代码。。。。。", "\n  得到(条件-----------以a开头以s结尾) ", "\n  \"abk\"， \"abggs\"，\"aos\"，\"allls\"，\"ayutres\"", "\n\n", "求所需的正则表达式"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;p是个指针&amp;#xff0c;也就是指向地址&amp;#xff0c;while(p)就是说指针如果有指向&amp;#xff0c;就执行while下的语句&amp;#xff0c;如果NULL&amp;#xff0c;跳出循环&lt;/p&gt;\n\n&lt;p&gt;*p是一个值&amp;#xff0c;*p&amp;#61;&amp;#61;0和p为空指针是两回事&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["while(*p) 当*p==0时为什么不跳出循环呢", ["while(*p) 当*p==0时为什么不跳出循环呢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If statements in Go &lt;a href=\"https://golang.org/ref/spec#If_statements\" rel=\"noreferrer\"&gt;must have type of &lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, which you can achieve by using a &lt;a href=\"https://golang.org/ref/spec#Comparison_operators\" rel=\"noreferrer\"&gt;comparison operator&lt;/a&gt;, the result of which is a bool:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if level&amp;amp;1 != 0 {\n    // do something\n} else {\n    // do something else\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["Go中if条件的非布尔值", ["\n\n", "I have an if statement in Go which looks like this:", "\n\n", "if level & 1 {\n    // do something\n} else {\n    // do something else\n}\n", "\n\n", "The ", "level", " variable in my cause is of type ", "uint", ". But when I do bitwise AND with 1, the result is not a boolean. This is a valid syntax for C, but apparently it doesn't work in Go. Any idea how to work around this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;findall()函数有个特点&amp;#xff0c;当正则表达式中有子匹配时&amp;#xff0c;会忽略整体匹配的结果。只会获取子匹配的结果。&lt;br /&gt;因为你正则表达式中&amp;#xff08;&amp;#xff09;子匹配只有一个&amp;#xff0c;只能保留一个子匹配的结果&amp;#xff0c;&lt;br /&gt;(.[0-9]{1,3})是正则中第一个子匹配&amp;#xff0c;虽然这第一个子匹配重复匹配了3次。但是获取子匹配的结果都是第一次子匹配的结果&amp;#xff0c;同一个子匹配只能保留一个结果&amp;#xff0c;后面获取的会覆盖前面的。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["请教Python的正则表达式", ["大佬们，我是一个刚学Python的新手，最近看到正则表达式，有一个问题百思不得其解。就是图片里的这个字符串“127.0.0.1   192.168.1.66”，按照书中所写r\"[1-9]{1,3}(\\.[0-9]{1,3}{3}\",匹配到的应该是（\\.[0-9]{1,3}）的结果，但是代码运行之后只有.1和.66为啥没有.0呀，这个不是也符合条件吗", "\n", "\n\n", "import", " re\npattern=", "r'[1-9]{1,3}(\\.[0-9]{1,3}){3}'", "\nstr1=", "'127.0.0.1 192.168.1.66'", "\nmatch=re.findall(pattern,str1)\n", "print", "(match)\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your pattern contains &lt;code&gt;(?(?=ls)yes|no)&lt;/code&gt; which is literally looking ahead for the characters &lt;code&gt;ls&lt;/code&gt;. I've changed your pattern to utilize the &lt;code&gt;DEFINE&lt;/code&gt; construct for subpattern reusability. As far as I'm aware, PCRE does not have a method to check whether or not a group was defined &lt;em&gt;after&lt;/em&gt; the conditional. This can be accomplished in &lt;a href=\"/questions/tagged/.net\" class=\"post-tag\" title=\"show questions tagged '.net'\" rel=\"tag\"&gt;.net&lt;/a&gt; with the use of balancing groups, but PCRE doesn't employ those methods. PCRE does have the &lt;code&gt;(?(name)yes|no)&lt;/code&gt; or &lt;code&gt;(?(1)yes|no)&lt;/code&gt; conditional, but it doesn't work for forward references (comparative to testing whether or not a variable exists before it's even declared).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://regex101.com/r/u1JJOg/5\" rel=\"nofollow noreferrer\"&gt;See regex in use here&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(?(DEFINE)\n  (?# var )\n  (?&amp;lt;var&amp;gt;[a-zA-Z_\\x7f-\\xff][\\w\\x7f-\\xff]*)\n  (?# val )\n  (?&amp;lt;val&amp;gt;(?&amp;amp;call)|(?&amp;amp;str)|(?&amp;amp;num)|(?&amp;amp;bool))\n  (?&amp;lt;call&amp;gt;\\$\\{CALL\\s+[a-zA-Z_\\x7f-\\xff][\\w\\x7f-\\xff]*\\s*\\})\n  (?&amp;lt;str&amp;gt;\"[^\"]*\"|'[^']*')\n  (?&amp;lt;num&amp;gt;\\d+)\n  (?&amp;lt;bool&amp;gt;(?i)(?:false|true)(?-i))\n)\n((?(?=yes\\${VAR\\s+(?&amp;amp;var)\\s*\\=\\s*(?&amp;amp;val)\\s*\\}\\s)yes|no))\n\\${(?P&amp;lt;type&amp;gt;VAR)\\s+((?&amp;amp;var))\\s*\\=\\s*((?&amp;amp;val))\\s*\\}(\\S)?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Without duplicating the subpattern in the positive lookahead, you can use the following (&lt;a href=\"https://regex101.com/r/u1JJOg/7\" rel=\"nofollow noreferrer\"&gt;as seen in use here&lt;/a&gt;). The token &lt;code&gt;(?8)&lt;/code&gt; recurses the 8th capture group:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(?(DEFINE)\n  (?# var )\n  (?&amp;lt;var&amp;gt;[a-zA-Z_\\x7f-\\xff][\\w\\x7f-\\xff]*)\n  (?# val )\n  (?&amp;lt;val&amp;gt;(?&amp;amp;call)|(?&amp;amp;str)|(?&amp;amp;num)|(?&amp;amp;bool))\n  (?&amp;lt;call&amp;gt;\\$\\{CALL\\s+[a-zA-Z_\\x7f-\\xff][\\w\\x7f-\\xff]*\\s*\\})\n  (?&amp;lt;str&amp;gt;\"[^\"]*\"|'[^']*')\n  (?&amp;lt;num&amp;gt;\\d+)\n  (?&amp;lt;bool&amp;gt;(?i)(?:false|true)(?-i))\n)\n((?(?=no(?8)\\S)no|yes))\n(\\${(?P&amp;lt;type&amp;gt;VAR)\\s+((?&amp;amp;var))\\s*\\=\\s*((?&amp;amp;val))\\s*\\})(\\S)?\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "条件表达式", "Question": ["正则表达式条件预测，下一个捕获组与PCRE匹配", ["\n\n", "I searched for answer and I did not found anything about that.\nhopefully that you can help me with my question.", "\n\n", "So I try to search after string with lookahead conditional based on capture group at the end of a string.\nIt means if the capture group at the end is a match, make the conditional group be with something and if capture group at the end is not a match so with something else.", "\n\n", "See my regex in use here", "\n\n", "(?:((?(?=ls)yes|no))\\${(?:(?P<type>VAR)\\s+)([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)\\s*\\=\\s*(\\$\\{CALL\\s+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\\s*\\}|\\\"[^\\\"]*\\\"|'[^']*'|[0-9]*|(?:[fF]alse|[tT]rue))\\s*\\}(?<ls>[^\\s]{1}))\n", "\n\n", "Input:", "\n\n", "    ${VAR foo=\"What\"}x\n\n    ${VAR foo=\"What\"} \n\n    yes${VAR foo=\"What\"}\n\n    no${VAR foo=\"What\"}x\n", "\n\n", "As you see, it captures the word 'no' if there is something at the end as long it is not \\s, but it did not capture the word 'yes' if it is nothing.", "\n    "]], "Tag": "程序设计"}
{"Answer": "[color=red]String regex = \"^[\\\\#0-9]{2}(\\\\$[abdz][\\\\w-.]*(?!$)?)+$\"; [/color]这个确实应该匹配不出东西，因为你要的是判断整个字符串是否符合规定，并不是要查找，匹配出每个$a这样的组合，所以那个做的就是判断整个字符串是否符合，只要有一组不符合，就什么都查不出来，你值保留[color=red]##$a7a-5064-2460-6[/color]是可以查出来的，因为后面你的代码里还有其他字符,如果jdk里是匹配字母的话，那就把[color=red]\\w[/color]改成[color=red][\\\\p{InCJK Unified Ideographs}&amp;&amp;\\\\P{Cn}][/color]吧\r\n参考一下这个帖子\r\n[url]http://topic.csdn.net/u/20080629/00/2f669f44-6e30-4e2e-9cce-08889dba2ae2.html[/url]", "Konwledge_Point": "条件表达式", "Question": ["请教java自带的正则表达式问题", ["[size=large]需要匹配的字符串是：[/size]", "\n    ##$a7a-5064-2460-6$b精装$dCNY26.00$z7-313-1037-0", "\n\n", "[size=large]具体要求是：[/size]", "\n        1、前两位是两个##、两个数字或者一个#，一个数字。", "\n        2、后面的每组字符串都是以$符号开头，$后面是字符、数字下划线、汉字组成的字符串。", "\n        3、$a、$b、$d的字符串不可重复，出现次数是0或1次；", "\n           $z可重复，出现次数不做限制。", "\n        4、$a、$b、$d没有顺序限制。", "\n\n", "[size=large]    我写出的正则表达式：[/size]", "\n        (^[#0-9]{2})([$a]{2}[\\w\\d-]+)?([$b]{2}[color=blue].*[/color])?([$d]{2}.*)?([$z]{2}[\\w\\d-]+)?", "\n\n", "[size=large]匹配中出现的问题：[/size]\n     1、由于上述表达式中蓝色字体的.*能够匹配任意字符，所以如果不写对$d、$z字符串的正则表达式\\([$d]{2}.*\\)?\\([$z]{2}[\\\\w\\\\d-]+\\)? 也能够匹配到$d、$z的字符串。\n     2、正则表达式匹配的时候是按照顺序来匹配的。也就是说在正则表达式中$a在$b的前面，如果匹配字符串中没有$a字符串组或者$a字符串组在$b、$d的后面的话，就不能够匹配成功了。针对这个问题我想到的办法是用正则表达式中的“或  |”来组合条件，但是考虑到匹配字符串中以$开头的字符串组比较多，感觉行不通。\n\n [size=large]实现中遇到的难点：[/size]\n     1、针对由于.*能够匹配任意字符，造成正则表达式中从$d开始，如果不写的话也能够匹配的“$d”和“$z”字符串。应该如何界定$b的结束，从而可以判断出下一组$开头的字符串的开始？\n    2、如何能够不限定“$a、$b、$d、$z”这些字符串组的顺序，只判断是否在字符串中出现及出现次数？\n     3、java自带的正则表达式中除了“.”可以匹配汉字之外，还有什么方法能够匹配汉字？\n", "\n\n", "[b][color=red][size=medium]  急用，请各位指点。[/size][/color][/b]", "\n\n", "[b]问题补充：[/b]", "\n   首先谢谢 congjl2002 (高级程序员)  对我提出问题的解答。对于您的疑问 我在将我的问题补充一下。", "\n\n", "首先说明一下上述需要匹配的字符串：", "\n        上述字符串对应一个字段号码，每个字段号码对应的字段内容是由多个子字段组成（子字段即：$a7a-5064-2460-6 或者 $dCNY26.00）。$a、$b是子字段标识符。", "\n    1、每条字段内容中，子字段标识符（即$a、$b）不定，$a开始到下个$结束是子字段$a对应的子字段内容。具体每条字段中的子字段标识符有哪些，需求中已提供。", "\n    2、$后面的内容字母、数字、下划线、“-”、“.”和汉字都有可能出现。例如下面的字段内容中：", "\n    1#$20030113d2003####em#y0实用客户英语$b专著$dD634.31-61$9zhao qing tian$f(清)何道生撰$z199?-2001", "\n[b]问题补充：[/b]", "\n我现在想用正则表达式是想两种功能：", "\n    1、正向验证。即页面中输入需要匹配的子字段内容后，使用正则表达式验证是否正确。正确将各个子字段合成一个字段内容。", "\n    2、逆向解析。即拿到整条字段内容或者多条字段内容时，使用正则表达式验证是否正确。包括该字段中子字段的标识符（即$a $b $d $z）是否正确，及它们的重复性是否正确。", "\n[b]问题补充：[/b]", "\ncongjl2002 (高级程序员)  你给我提供的正则表达式是用于javascript中的正则表达式对吧？验证没有问题", "\n    刚刚想到一个问题，由于javascript的正则表达式和java自带的正则表达式有些语法稍微有些区别，因此我们可能要写两套正则表达式。javascript中的正则表达式用于正向的验证，java自带的正则表达式用于逆向的解析。java自带的正则表达式逆向解析时主要是有大量数据，也就是多条字段内容时，验证其中一整条字段内容会方便一些。但是现在想一下感觉后台如果自己来写解析的方法，比用正则表达式解析会更方便。这个想法正在商讨中。", "\n    我现在还在尝试用java自带的正则表达式来解析字段内容。对于 实现中遇到的难点中的第3条  现在仍然是难点。如果正则表达式中用([$b]{2}.*)?    .*   来匹配出现汉字的情况的话，当用([$b]{2}.*)? 来匹配整条字段内容的时候，会将$b开始直到最后所有的字符串都匹配上。不想javascript中可以用\\w来匹配汉字 ，不至于把所有字符匹配上。", "\n   郁闷啊！！！！！！！", "\n   请问有什么方法能够在java自带的正则表达式中准确的匹配出汉字吗？", "\n   请指点迷津！", "\n[b]问题补充：[/b]", "\n\n", "congjl2002 (高级程序员) ", "\n\n", "之前没有弄清楚正则表达式在不同的语言之间是否有区别。造成这样的原因是，在开始学习的时候，将教程中的例子在RegexTester 工具中测试正确，放到类中间加上了转义字符结果有时也会有区别；再就是jdk API中提供的java.util.regex.Pattern类中对\\w能够匹配字符的说明是   单词字符：[a-zA-Z_0-9]  和你推荐的那篇文章中的说明有所出入（这几天学习正则表达式看的资料就是你提供的那篇文章）。文章中\\w 能够匹配的字符是  字母或数字或下划线或汉字    。所以感觉他们之间是有所不同的。\n", "\n\n", "[b]问题补充：[/b]", "\ncongjl2002 (高级程序员) 你好", "\n\n", "你给我提供的正则表达式 我试过了，在RegexTester工具中测试是好的。但是在java中验证不通过。下面是我写的程序。方便的话测试一下。\n", "\n\n", "public static void main(String[] args) {", "\n        String regex = \"(^[#0-9]{2})([$a]{2}[\\w\\d-]+(?!$)?)+([$b]{2}(.?){10}(?!$)?)?([$d]{2}[\\w.]*(?!$)?)?([$z]{2}[\\w\\d-]+(?!$)?)?$\";", "\n        String matcher = \"##$a7a-5064-2460-6$b精装$dCNY26.00$z7-313-1037-0\";", "\n        find(regex,matcher);", "\n\n", "}\n\n/**\n * find 方法扫描输入序列以查找与该模式匹配的下一个子序列。\n * \n * 通过m.find()方法，是按照指定模式与整条字符串进行匹配的 m.groupCount()可以获取指定模式中的分组数 m.group() ==\n * m.group(0) 即匹配成功的整条字符串\n * \n * @param p\n * @param m\n */\npublic static List<String> find(String regex, String matcher) {\n    List<String> list = new ArrayList<String>();\n    Pattern p = Pattern.compile(regex);// Pattern(模式类);Pattern类是用来表达和陈述所要搜索模式的对象\n    Matcher m = p.matcher(matcher);\n    boolean finded = m.find();\n    StringBuffer sb = new StringBuffer(); // 该对象用于存储匹配出的字符串，用于下面判断匹配出的内容是否是子字段（即是否包含$）\n\n    while (finded) {\n        for (int i = 0; i <= m.groupCount(); i++) {\n            // 匹配出的第一个结果是整个字符串\n            if (i == 0)\n                continue;\n            sb.append(m.group(i));\n            // 匹配出的是指示符 ## 或者 #数字 或者 数字#\n            if (i == 1 && m.group(i) != null){\n                list.add(m.group(i));\n                continue;\n            }\n            // 判断匹配出的字符串是否是子字段内容,即是否包含$\n            if (i != 0 && sb.toString().indexOf(\"$\") == -1)\n                continue;\n            sb.delete(0, sb.toString().length());\n\n            if(m.group(i) == null) continue;\n            list.add(m.group(i));\n        }\n        finded = m.find();\n    }\n\n    for (int i = 0; i < list.size(); i++) {\n        System.out.println(i + \" \" + list.get(i));\n    }\n    return list;\n}\n", "\n\n", "如果把String regex = \"^[\\#0-9]{2}(\\$[abdz][\\w-.]*(?!$)?)+$\";", "\n\n", "运行程序匹配不出任何东西了。帮忙看看！"]], "Tag": "程序设计"}
{"Answer": "将gcd的两个int形参也改成long long测试点就都能通过了，扎心不...", "Konwledge_Point": "条件表达式", "Question": ["1034 有理数四则运算 测试点2通过不了，求助", [" //PAT1034V1\n#include <stdio.h>\n#include <math.h>\nvoid Addition(long long,long long, long long ,long long);\nvoid Subtract(long long,long long,long long ,long long );\nvoid Multiply(long long,long long,long long ,long long );\nvoid Divide(long long,long long,long long ,long long ); \nlong long gcd(int ,int );\n\n//辗转相除法求最大公约数 \nlong long gcd(int a,int b){\n    if(b==0) return a;  //可以用条件表达式表达 return b==0?a:gcd(b,a%b)\n    return gcd(b,a%b);\n}\n\n//整理成带分数形式 \nvoid print(long long a,long long b){\n    long long c=0;\n    if(a>0){    //正数 \n        if(b==1){   //形如3/1 \n            printf(\"%lld\",a); \n        }\n        else if(a>b){   //形如5/3 \n            c=a/b;\n            a-=b*c;\n            printf(\"%lld %lld/%lld\",c,a,b);\n        }\n        else{   //真分数，形如3/5 \n            printf(\"%lld/%lld\",a,b); \n        }   \n    }\n    else if(a==0){  //形如0/3\n        printf(\"%c\",'0');\n    }\n    else{   //a<0\n        if(b==1){\n            printf(\"(%lld)\",a); //形如-3/1 \n        }\n        else if(-1*a>b){    //形如-5/3 \n            c=a/b; \n            a=(-1*a)%b;\n            printf(\"(%lld %lld/%lld)\",c,a,b);\n        }   \n        else{\n            printf(\"(%lld/%lld)\",a,b);  //形如-1/3 \n        }\n    }       \n} \n\nvoid Addition(long long int a1,long long int b1,long long int a2,long long int b2){\n    print(a1,b1);\n    printf(\" + \");\n    print(a2,b2);\n    printf(\" = \");\n    long long a3=a1*b2+a2*b1;\n    long long b3=b1*b2;\n    //化简到最简形式，非假分数形式\n    long long gcd3=abs(gcd(a3,b3));\n    a3/=gcd3;\n    b3/=gcd3;\n    print(a3,b3);\n    printf(\"\\n\");\n}\n\nvoid Subtract(long long a1,long long b1,long long a2,long long b2){\n    print(a1,b1);\n    printf(\" - \");\n    print(a2,b2);\n    printf(\" = \");\n    long long a3=a1*b2-a2*b1;\n    long long b3=b1*b2;\n    //化简到最简形式，非假分数形式\n    long long gcd3=abs(gcd(a3,b3));\n    a3/=gcd3;\n    b3/=gcd3;\n    print(a3,b3);\n    printf(\"\\n\");\n}\n\nvoid Multiply(long long a1,long long b1,long long a2,long long b2){\n    print(a1,b1);\n    printf(\" * \");\n    print(a2,b2);\n    printf(\" = \");\n    long long a3=a1*a2;\n    long long b3=b1*b2;\n    //化简到最简形式，非假分数形式\n    long long gcd3=abs(gcd(a3,b3));\n    a3/=gcd3;\n    b3/=gcd3;\n    print(a3,b3);\n    printf(\"\\n\");\n}\n\nvoid Divide(long long a1,long long b1,long long a2,long long b2){\n    print(a1,b1);\n    printf(\" / \");\n    print(a2,b2);\n    printf(\" = \");\n    if(a2==0){\n        printf(\"Inf\");\n    }\n    else if(a2<0){\n        long long a3=-1*a1*b2;\n        long long b3=-1*b1*a2;\n        long long gcd3=abs(gcd(a3,b3));\n        a3/=gcd3;\n        b3/=gcd3;\n        print(a3,b3);\n    }\n    else{   //化简到最简形式，非假分数形式\n        long long a3=a1*b2;\n        long long b3=b1*a2;\n        long long gcd3=abs(gcd(a3,b3));\n        a3/=gcd3;\n        b3/=gcd3;\n        print(a3,b3);\n    }\n    printf(\"\\n\");\n}\n\nint main(){\n    long long a1,b1,a2,b2;\n    scanf(\"%lld/%lld %lld/%lld\",&a1,&b1,&a2,&b2);\n    //先约分到最简形式\n    long long gcd1=abs(gcd(a1,b1)) ;    //求最大公约数\n    a1/=gcd1;\n    b1/=gcd1; \n    long long gcd2=abs(gcd(a2,b2)) ;    //求最大公约数\n    a2/=gcd2;\n    b2/=gcd2; \n    //统一用最简形式参与运算\n    Addition(a1,b1,a2,b2); \n    Subtract(a1,b1,a2,b2); \n    Multiply(a1,b1,a2,b2); \n    Divide(a1,b1,a2,b2); \n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "逗号是顺序执行语句，放在这段代码里面不是表示两个限制条件，只有最后一个判断条件会生效，但前面的语句也会执行，比如：for(var j=2,bool=false;j-1,i%j===0;j++){console.log(i,j);}，比如改成这样j-1也会执行，然后再判断i%j===0？", "Konwledge_Point": "条件表达式", "Question": ["for循环第二参数问题, 第二个参数中如果出现多个条件", ["for(var j=2,bool=false;j<i,i%j===0;j++){console.log(i,j);}\n", "\n\n", "请问 第二个参数中，j<i,i%j===0 这个怎么理解呀？是两个条件都满足时运行，还是满足其中一个条件是运行？什么时候退出？？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\ni&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    n &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(input())\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n %3 &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; and n%5 !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;次数为{}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;format&lt;/span&gt;(i))\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["能被3整除但不能被5整除", ["判断一个数n，能被3整除但不能被5整除，若满族条件，输出次数，否则终止程序。", "我知道要用用while循环，但如何操作能被3整除但不能被5整除"]], "Tag": "程序设计"}
{"Answer": "```\r\n dim a = MsgBox(...)\r\ndim b = MdgBox(...)\r\nif a = VbYes and b = VbYes Then\r\n...\r\n\r\n```", "Konwledge_Point": "条件表达式", "Question": ["怎么把消息框选择的按钮的值作为表达式组合在if语句中使用？", ["怎么把消息框选择的按钮的值作为表达式组合在if语句中使用？如果是多个判断条件怎么写？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加了分号也没用啊&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["为啥说是java的非法表达啊？", ["代码如下", "\n\n", "\nimport java.io.*;\nimport java.io.BufferedInputStream;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStreamReader;\nimport java.io.Reader;\nimport org.apache.lucene.analysis.standard.StandardAnalyzer;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.document.Field;\nimport org.apache.lucene.index.IndexReader;\nimport org.apache.lucene.index.IndexWriter;\nimport org.apache.lucene.index.IndexWriterConfig;\nimport org.apache.lucene.queryparser.classic.QueryParser;\nimport org.apache.lucene.search.IndexSearcher;\nimport org.apache.lucene.search.Query;\nimport org.apache.lucene.search.BooleanQuery;\nimport org.apache.lucene.search.ScoreDoc;\nimport org.apache.lucene.search.TopDocs;\nimport org.apache.lucene.store.Directory;\nimport org.apache.lucene.store.FSDirectory;\nimport org.apache.lucene.util.Version;\npublic class Hello {\n    private static final String PATH_OF_FILE = \"D:/authors/\";   // 待索引文件的目录\n    private static final String PATH_OF_INDEX = \"D:/a-index/\"; // 存放索引文件的目录2\n    /**\n     * 测试时，要在D:/img/文件夹中准备几个包含内容的文件（比如txt格式的）\n     * 然后先执行createIndex()方法，再执行searchFile()方法，最后观看控制台输出即可\n     */\n    public static void main(String[] args) {\n        Hello h = new Hello();\n\n        String aa,bb;\n        for (int j=44711;j<52601;j++){\n            String filePath1 = \"D:/text/\"+j+\"-1.txt\";\n            String filePath2 = \"D:/text/\"+j+\"-2.txt\";\n//            System.out.println(filePath1);\n//            System.out.println(filePath2);\n            aa=read(filePath1);\n            bb=read(filePath2);\n//            System.out.println(aa);\n//            System.out.println(bb);\n            h.testSearch(aa,j);\n            System.out.println(\"#################\");\n            h.testSearch(bb,j);\n            System.out.println(\"#################\");\n\n\n//      \"res/\";\n//        h.createIndex();   //先跑这一条，然后把String aa,bb一下到这一条的先注释掉，然后再把这一条注释掉，恢复上面的开始跑。\n        }\n        private void createIndex();{\n            Directory directory = null;//指定索引被保存的位置\n            IndexWriter writer = null;//通过IndexWriter写索引\n            Document doc = null;//我们索引的有可能是一段文本or数据库中的一张表\n            try {\n                // 这里是在硬盘上\"D:/index/\"文件夹中创建索引\n                directory = FSDirectory.open(new File(PATH_OF_INDEX));\n                // 这里通过IndexWriterConfig()构造方法的Version.LUCENE_41参数值指明索引所匹配的版本号,并使用了Lucene的标准分词器\n                writer = new IndexWriter(directory, new IndexWriterConfig(Version.LUCENE_41, new StandardAnalyzer(Version.LUCENE_41)));\n                for (File file : new File(PATH_OF_FILE).listFiles()) {\n                    doc = new Document();\n                    doc.add(new Field(\"content\", new FileReader(file)));\n                    doc.add(new Field(\"fileName\", file.getName(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n                    doc.add(new Field(\"filePath\", file.getAbsolutePath(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n                    writer.addDocument(doc);\n                }\n            }\n            catch (Exception e) {\n                System.out.println(\"创建索引的过程中遇到异常,堆栈轨迹如下\");\n                e.printStackTrace();\n            }\n            finally {\n                if (null != writer) {\n                    try {\n                        writer.close(); // IndexWriter在用完之后一定要关闭\n                    }\n                    catch (IOException ce) {\n                        System.out.println(\"关闭IndexWriter时遇到异常,堆栈轨迹如下\");\n                        ce.printStackTrace();\n                    }\n                }\n            }\n        }\n\n        public static String read(String filePath)\n        {\n            // 读取txt内容为字符串\n            StringBuffer txtContent = new StringBuffer();\n            // 每次读取的byte数\n            byte[] b = new byte[8 * 1024];\n            InputStream in = null;\n            try\n            {\n                // 文件输入流\n                in = new FileInputStream(filePath);\n\n                while (in.read(b) != -1)\n                {\n                    // 字符串拼接\n                    txtContent.append(new String(b));\n\n                }\n                // 关闭流\n                in.close();\n            }\n            catch (FileNotFoundException e)\n            {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            catch (IOException e)\n            {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            finally\n            {\n                if (in != null)\n                {\n                    try\n                    {\n                        in.close();\n                    }\n                    catch (IOException e)\n                    {\n                        // TODO Auto-generated catch block\n                        e.printStackTrace();\n                    }\n                }\n            }\n            return txtContent.toString();\n\n        }\n\n\n\n        private String getContentFromFile(File myFile) {\n            StringBuffer sb = new StringBuffer();\n            if (!myFile.exists()) {\n                return \"\";\n            }\n            try {\n                BufferedReader in = new BufferedReader(new FileReader(myFile));\n                String str;\n                while ((str = in.readLine()) != null) {\n                    sb.append(str);\n                }\n                in.close();\n            }\n            catch (IOException e) {\n                e.getStackTrace();\n            }\n            return sb.toString();\n        }\n\n        /**\n         * 搜索文件\n         *\n         * @see 1、创建Directory\n         * @see 2、创建IndexReader\n         * @see 3、根据IndexReader创建IndexSearcher\n         * @see 4、创建搜索的Query\n         * @see 5、根据searcher搜索并返回TopDocs\n         * @see 6、根据TopDocs获取ScoreDoc对象\n         * @see 7、根据searcher和ScoreDoc对象获取具体的Document对象\n         * @see 8、根据Document对象获取需要的值\n         * @see 9、关闭IndexReader\n         */\n        @SuppressWarnings(\"deprecation\")\n//    private void searchFile() {\n//        IndexReader reader = null;\n//        try {\n//            reader = IndexReader.open(FSDirectory.open(new File(PATH_OF_INDEX)));\n//            IndexSearcher searcher = new IndexSearcher(reader);\n//            // 创建基于Parser搜索的Query,创建时需指定其\"搜索的版本,默认搜索的域,分词器\"....这里的域指的是创建索引时Field的名字\n//            QueryParser parser = new QueryParser(Version.LUCENE_41, \"content\", new StandardAnalyzer(Version.LUCENE_41));\n//            Query query = parser.parse(\" let her go  no  she had to confront  it was a gift of something   that would not irk her for the rest of eternity  and yet a curse of more pain  the choice of selfishness or selflessness  when both loosed their boundaries and came together  and that hurt  more than anything  that hurt the scorch of disappointment  denial  anxiety  fear there was too much of it  and yet  she did not want him dead  it had taken her time  so much time to realize that   but she did not wish death upon anyone  having seen too much of it as the clock ticked away she had never wanted anyone to truly die  gilbert beilschmidt  though she hated him above all  was no exception  but in times such as now  when war tore the world apart when history decided to twist itself about when the nations crumbled how could death not be a blessing  at this point she could almost want them all to be dead  roderich  gilbert  veneziano  ludwig   and yet she would watch with relief on the day that each of them would pick themselves up  and charge into the distance with life  she hated war  she blinked rapidly  staring  always watching  though she ached  she let the next batter of coughing come to pass shock  it overcame her then  charging upward  body screaming in protest  she could only slap him with strength that came by habit  before wrapping both arms around him  wondering how and why in hell   get off me  woman   he protested  attempting to flail  she saw now that the tin had been stripped away  or at least most of it  as she felt him  flesh and cloth and hair from the unhealthy pallor of his skin  from the dried hard uniform  to the pinked and browned hair  silver still shining boldly beneath the blood  he was unusually warm hot even when she felt him  clearly the cold had been warded off  though his hands still felt like ice  remembering the documents found in ludwig s office  she realized that it was fever  but his head feeling about the neck  she knew it was there desperately feeling  just to know how cruel death was  she felt it  finding no seam with a thin cry of joy and pain she kissed it  squeezing him till he was strangled   you re alive   she breathed  even as garbled speech flew from his lips  she was going into spasms this was too unreal  and yet it was  he was so  so solid  his eyes were ruby  no petty pink glaze upon the kingdom of prussia s gaze no death frosting them over  clinging to him  something told her that she would never let go a stupid little piece of wishful thought  no doubt  never let go  how ridiculous  and yet she did not release him  as he calmed between her limbs  resigning with guilty pleasure  rigid with denial  she could not even loosen about him there was nothing but the jail scene playing and replaying itself in her mind letting their hands drop  parting  and then the sickening sound of the guillotine s strike  water  red  pink  silver  white  black  the swastika rose over all  as if to mock     where in isten s name have you been   she muttered against his shoulder  before lifting her head away hastily  still  though  she did not let go  she wanted to savor it  as the vampire feasts on blood  the scent of metal clung to him   get off   was the obstinate reply  she lifted her hand and slapped him again  not knowing what else to do   ow    where ve you been   she said again   you were supposed to be dead    well  i m so freaking not    i saw your head   she said  voice reaching a higher octave   it was a fake    impossible   she declared  eyes widening before she finished  it came to her  suddenly the way it had fallen  the sudden hush of death  the blindfold of stars  the blood she had seen it  touched it  waded in the water it buried itself in     she had suffered with him at death   you were dead      she whispered  it gave way to coughing  and he only watched as she did  held onto her and she held onto him   i heard the thud  if you were dead   he grunted  when she looked up  his eyes were a bitter red   the head was fake  they   held me down   scowling  he looked away  admittance was ignominy   they held me down up there  there were lots of them  hungary scheiße  there was a lot of back up that we didn t notice  i couldn t beat off all of them  and my gun ran out     his voice faded  still  his scowl deepened  and he finished to his own satisfaction   their leader was fun to kill though   he laughed  cruelly  forcefully he found no love for death  though he had seen enough of it to mind less  elizaveta decided against shaking her head it could only be true  she had known him for years  since they were incomplete nations  just children running about with swords of both wood and steel  just as he had sifted out her identity from that of elisabeth wertheim s  it was with ease that she found that this man in front of her was real  as nations in human form  they were allowed the same detached senses as those immortal  stupid  she scolded herself  knowing not to trust so easily  but it was what it was  she noticed the shards of tin still upon his flesh then of course  he could not have been thrown out so easily time was needed  so much time  some things did not change  but could  they trapped him  shackled his person  still not releasing he was too real  too solid  to let go she let the \");       // 指定==>搜索域为content(即上一行代码指定的\"content\")中包含\"java\"的文档\n//            TopDocs tds = searcher.search(query, 10); // 第二个参数指定搜索后显示的条数,若查到5条则显示为5条,查到15条则只显示10条\n//            ScoreDoc[] sds = tds.scoreDocs;           // TopDocs中存放的并不是我们的文档,而是文档的ScoreDoc对象\n//            for (ScoreDoc sd : sds) {                   // ScoreDoc对象相当于每个文档的ID号,我们就可以通过ScoreDoc来遍历文档\n//                Document doc = searcher.doc(sd.doc);  // sd.doc得到的是文档的序号\n//                System.out.println(doc.get(\"fileName\") + \"[\" + doc.get(\"filePath\") + \"]\"); // 输出该文档所存储的信息\n//            }\n//        }\n//        catch (Exception e) {\n//            System.out.println(\"搜索文件的过程中遇到异常,堆栈轨迹如下\");\n//            e.printStackTrace();\n//        }\n//        finally {\n//            if (null != reader) {\n//                try {\n//                    reader.close();\n//                }\n//                catch (IOException e) {\n//                    System.out.println(\"关闭IndexReader时遇到异常,堆栈轨迹如下\");\n//                    e.printStackTrace();\n//                }\n//            }\n//        }\n//    }\n        public void testSearch(String aa,int i)  {\n            IndexReader reader = null;\n            try {\n                // 索引目录对象\n                // Directory directory = FSDirectory.open(new File(PATH_OF_INDEX));\n                reader = IndexReader.open(FSDirectory.open(new File(PATH_OF_INDEX)));\n                // 索引读取工具\n                // 索引搜索工具\n                IndexSearcher searcher = new IndexSearcher(reader);\n\n                BooleanQuery.setMaxClauseCount(Integer.MAX_VALUE);\n                // 创建查询解析器,两个参数：默认要查询的字段的名称，分词器\n                QueryParser parser = new QueryParser(Version.LUCENE_41, \"content\", new StandardAnalyzer(Version.LUCENE_41));\n                //QueryParser parser = new QueryParser(\"title\", new IKAnalyzer());\n                // 创建查询对象\n\n\n                String a=aa;\n\n                Query query = parser.parse(a);\n                // 搜索数据,两个参数：查询条件对象要查询的最大结果条数\n                // 返回的结果是 按照匹配度排名得分前N名的文档信息（包含查询到的总条数信息、所有符合条件的文档的编号信息）。\n                TopDocs topDocs = searcher.search(query, 10);\n                // 获取总条数\n                System.out.println(\"本次搜索共找到\" + topDocs.totalHits + \"条数据\");\n                // 获取得分文档对象（ScoreDoc）数组.SocreDoc中包含：文档的编号、文档的得分\n                ScoreDoc[] scoreDocs = topDocs.scoreDocs;\n                BufferedWriter out = new BufferedWriter(new FileWriter(\"D:\\\\score\\\\score\"+\"-\"+i+\".txt\",true));\n                for (ScoreDoc scoreDoc : scoreDocs) {\n                    // 取出文档编号\n                    int docID = scoreDoc.doc;\n\n                    //Document doc = searcher.doc(sd.doc);  // sd.doc得到的是文档的序号\n                    // 根据编号去找文档\n                    Document doc = reader.document(docID);\n                    System.out.println(doc.get(\"fileName\")+\"得分： \" + scoreDoc.score); // 输出该文档所存储的信息\n                    try {\n                        out.write(doc.get(\"fileName\")+\"得分： \" + scoreDoc.score+\"\\n\");\n                    } catch (IOException e) {\n                    }\n                    //System.out.println(\"id: \" + doc.get(\"id\"));\n                    // System.out.println(\"title: \" + doc.get(\"title\"));\n                    // 取出文档得分\n//                System.out.println();\n                }\n                out.write(\"\\n\");\n                out.close();\n                System.out.println(\"文件创建成功！\");\n            }\n            catch (Exception e) {\n                System.out.println(\"搜索文件的过程中遇到异常,堆栈轨迹如下\");\n                e.printStackTrace();\n            }\n            finally {\n                if (null != reader) {\n                    try {\n                        reader.close();\n                    }\n                    catch (IOException e) {\n                        System.out.println(\"关闭IndexReader时遇到异常,堆栈轨迹如下\");\n                        e.printStackTrace();\n                    }\n                }\n            }\n\n\n        }\n\n    }", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;import java.util.Scanner;\npublic class CalcTest {\n    public static void main(String[] args) {\n        Scanner in&amp;#61;new Scanner(System.in);\n        do{\n            System.out.print(&amp;#34;请输入一个整数&amp;#xff1a;&amp;#34;);\n            int num&amp;#61;in.nextInt();\n            if (num&amp;gt;&amp;#61;1 &amp;amp;&amp;amp; num&amp;lt;&amp;#61;10){\n                int sum&amp;#61;1;\n                for(int i&amp;#61;1;i&amp;lt;&amp;#61;num;i&amp;#43;&amp;#43;){\n                    sum*&amp;#61;i;\n                }\n                System.out.println(num&amp;#43;&amp;#34;的阶乘&amp;#34;&amp;#43;num&amp;#43;&amp;#34;!&amp;#61;&amp;#34;&amp;#43;sum);\n                break;\n            }else {\n                System.out.println(&amp;#34;输入的整数不在1至10范围内&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;);\n            }\n        }while (true);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"267\" src=\"https://img-ask.csdnimg.cn/upload/1622716024666.png\" width=\"739\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["JAVA  键盘输入，阶乘运算，判断是否为1-10之间的整数", ["从键盘上获取1至10（包含1和10）的整数(也就是从键盘上输入一个整数)。①如果该整数不在1至10范围内，则提示用户重新输入整数，直到满足条件为止。②如果该整数在1至10范围内，则计算该整数的阶乘n!,并输出该阶乘的结果。如：输入整数5，则求5!=1×2×3×4×5=120。", "\n\n", "\n\n", "运行结果是这样的，敢问各位大佬该怎么实现"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能是解析解吧&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["为什么我解方程组得到的c的解的表达式中仍然含有c?", ["\n", "如图，我是由一阶条件（一阶导为0）列出了一个方程组，然后要解出t和c。然后得到的解中，c的解的表达式仍然含有c,这是为什么呀？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["在一个字符串中判断是否有ip地址的正则表达式怎么写？", ["比方说我有一些字符串： “000192.168.1.4SS”、 “192.168.1.4    AA” 、 “QW000192.168.1.4SS”，这些字符串都包含了IP地址。", "我想找到这些符合条件的字符串，正则表达式应当怎么写？"]], "Tag": "程序设计"}
{"Answer": "str = (i == 0 ?  \"true\" : \"false\");", "Konwledge_Point": "条件表达式", "Question": ["条件运算符，编译报错", ["项目中应用条件运算符?报错：只有 assignment、call、increment、decrement、await 和 new 对象表达式可用作语。", "\n写了个最简单的测试代码，问题依旧：", "\n\n", " int i = 0;\nstring str = \"\";\n i == 0 ? str = \"true\" : str = \"false\";\n", "\n\n", "编译照样报错：只有 assignment、call、increment、decrement、await 和 new 对象表达式可用作语。", "\n查看MSDN也不明白，请老师们指点下迷津，谢啦！"]], "Tag": "程序设计"}
{"Answer": "([\\d]{1,3}\\.[\\d]{1,3}\\.[\\d]{1,3}\\.[\\d]{1,3}(\\/\\d{1,3})*,?)+", "Konwledge_Point": "条件表达式", "Question": ["求个满足以下三种规则的正则表达式.", ["需要一个正则表达式,要求满足三种验证.", "\n[code=\"java\"]127.0.0.1 //单独的一个IP", "\n127.0.0.1/10 //IP段,用\"/\"区分 表示从1到10的所有IP", "\n127.0.0.1,127.0.0.2,127.0.0.3//逗号区分表示多个IP.[/code]", "\n\n", "目前我写了个正则可以同时满足前两者.但是不能同时满足三种验证条件.", "\n[code=\"java\"]^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?$[/code]", "\n\n", "有高手能写个满足三种规则的正则表达式吗?", "\n\n", "最后顺手提供一个正则测试页面[url]", "http://www.ostools.net/regex[/url]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cs\"&gt; if (!string.IsNullOrEmpty(personName))\n{\n    people =  people.Where(w=&amp;gt;w.Name==personName).ToList();\n}\n\nif (!string.IsNullOrEmpty(petName))\n{\n    people =  people.Where(w=&amp;gt;w.Name==petName).ToList();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["请教Linq关于一个多集合join，然后动态where条件的问题", ["\n", "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Linq.Dynamic.Core;\n\nnamespace ConsoleApp1\n{\n    //主人类\n    internal class Person\n    {\n        public string Name { get; set; }\n    }\n\n    //宠物类\n    internal class Pet\n    {\n        public string PetName { get; set; }\n        public string OwnerName { get; set; }\n    }\n\n    internal class Program\n    {\n        private static void Main(string[] args)\n        {\n            var people = new List<Person>\n            {\n                new Person{Name=\"yangis\"},\n                new Person{Name=\"moll\"},\n                new Person{Name=\"daixu\"},\n            };\n\n            var pets = new List<Pet>\n            {\n                new Pet{PetName=\"chicken\",OwnerName=\"yangis\"},\n                new Pet{PetName=\"cow\",OwnerName=\"moll\"},\n                new Pet{PetName=\"bull\",OwnerName=\"daixu\"},\n                new Pet{PetName=\"pig\",OwnerName=\"daixu\"},\n            };\n\n            //查询条件\n            var personName = \"daixu\";\n            var petName = \"pig\";\n\n            StringBuilder builder = new StringBuilder();\n            builder.Append(\"1 = 1\");\n\n            //参数\n            var sqlParams = new List<object>();\n\n            if (!string.IsNullOrEmpty(personName))\n            {\n                builder.Append($\" and Name == @{sqlParams.Count}\");\n                sqlParams.Add(personName);\n            }\n            if (!string.IsNullOrEmpty(petName))\n            {\n                builder.Append($\" and PetName == @{sqlParams.Count}\");\n                sqlParams.Add(petName);\n            }\n\n            var query = (from person in people\n                         join pet in pets on person.Name equals pet.OwnerName\n                         select new { person.Name, pet.PetName }).AsQueryable().Where(builder.ToString(), sqlParams.ToArray());\n\n            foreach (var item in query)\n            {\n                Console.WriteLine($\"{item.Name} - {item.PetName}\");\n            }\n\n            Console.ReadKey();\n        }\n    }\n}", "\n\n", "我这样写是不是相当于把所有记录查出来，再过滤了？", "\n\n", "如果是，请问有什么好的方法吗？", "\n\n", "（PS：我不太xi'guan用表达式树）"]], "Tag": "程序设计"}
{"Answer": "你这样说我觉得是没有问题的，但我不是这样去想的，我的想法是，运算都是从左到右，在这个基础上，我再考虑运算的优先级，括号的优先级最高，所以先算括号的的，条件运算符第二", "Konwledge_Point": "条件表达式", "Question": ["Java中如何理解条件运算符的结合性与运算顺序的区别？", [" public class Test {\n    public static void main(String[] args) {\n        // (true ? true : false) ? false : false\n        boolean left = (a() ? b() : c()) ? d() : e();\n        System.out.print(left + \"\\n\");\n\n        // true ? true : (false ? false : false)\n        boolean right = a() ? b() : (c() ? d() : e());\n        System.out.print(right + \"\\n\");\n\n        // true ? true : false ? false : false\n        boolean result = a() ? b() : c() ? d() : e();\n        System.out.print(result + \"\\n\");\n    }\n\n    public static boolean a() {\n        System.out.print(\"a\\t\");\n        return true;\n    }\n    public static boolean b() {\n        System.out.print(\"b\\t\");\n        return true;\n    }\n    public static boolean c() {\n        System.out.print(\"c\\t\");\n        return false;\n    }\n    public static boolean d() {\n        System.out.print(\"d\\t\");\n        return false;\n    }\n    public static boolean e() {\n        System.out.print(\"e\\t\");\n        return false;\n    }\n}\n", "\n\n", "运行得到的结果：", "a b   d   false", "\na   b   true", "\na   b   true", "\n\n", "表达式1：(true ? true : false) ? false : false", "\n表达式2：true ? true : (false ? false : false)", "\n表达式3：true ? true : false ? false : false", "\n\n", "由运行的结果分析：", "\n表达式3与表达式2的结合性相同；", "\n但是运行得到的结果： ", "a  b  true", " ，表明条件运算符的运算顺序是按照从左至右的顺序。", "\n\n", "通过以上分析，我认为：", "\n条件运算符（？：）的结合性是从右至左，而运算顺序是从左至右。", "\n\n", "我的理解正确吗？求大神解惑。"]], "Tag": "程序设计"}
{"Answer": "str = str.replace(\"%\",\"\\\\%\");  str就是用户输入的，因为在java中\\是转义字符，表达一个\\就是\\\\,\r\n 在数据库中一个\\%代表的是字符'%'不会有特殊含义。", "Konwledge_Point": "条件表达式", "Question": ["java中的PreparedStatement对%百分号的处理？", ["1 String sql = \"select * from goods where min_name = ?\";  // 含有参数", "\n2 PreparedStatement st = conn.prepareStatement(sql);", "\n3 st.setString(1, \"儿童%\"); // 参数赋值", "\n4 System.out.println(st.toString()); //com.mysql.jdbc.JDBC4PreparedStatement@8543aa: select * from goods where min_name = '儿童%'", "\n我们尝试输入了一个百分号，发现PreparedStatement竟然没有转义，百分号恰好是like查询的通配符。", "\n\n", " 正常情况下，like查询是这么写的：\n    1 String sql = \"select * from goods where min_name like ?\";  // 含有参数\n", "\n\n", "2 st = conn.prepareStatement(sql);", "\n3 st.setString(1, \"儿童\" + \"%\"); // 参数赋值", "\n4 System.out.println(st.toString()); //com.mysql.jdbc.JDBC4PreparedStatement@8543aa: select * from goods where min_name like '儿童%'", "\n查询min_name字段以\"儿童\"开头的所有记录，其中\"儿童\"二字是用户输入的查询条件，百分号是我们自己加的，怎么可能让用户输入百分号嘛！等等！如果用户非常聪明，偏要输入百分号呢？", "\n查询min_name字段以\"儿童\"开头的所有记录，其中\"儿童\"二字是用户输入的查询条件，百分号是我们自己加的，怎么可能让用户输入百分号嘛！等等！如果用户非常聪明，偏要输入百分号呢？", "\n这里我自己有个小疑问？我们能不能手动转义一下用户输入的%，其他的再交给PreparedStatement转义？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;$.data.data[?((&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;.buildVersion&amp;#61;&amp;#61;&amp;#39;regular&amp;#39;)&amp;amp;&amp;amp;(&amp;#64;.pipelineStatus&amp;#61;&amp;#61;&amp;#39;completed&amp;#39;))].id[0]&lt;/a&gt;&lt;br /&gt;取个索引就行呗&amp;#xff0c;加个[0]&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["jsonpath获取多个值后，列表里怎么取第一个值", ["使用jsonpath获取了多个值：", "\n", "$.data.data[?((", "@.buildVersion=='regular')&&(@.pipelineStatus=='completed'))].id", "\n", "得到的结果是：", "[", "  3312761,", "  3312231,", "  3312147,", "  3312053,", "  3311455", "]", "\n", "但我想只获取到 第一个值，要怎么写呀"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;limit&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["lombda表达式怎么去除出一个以上的值", ["\n", "我的是一个list<map>，条件之后我还想再取出一个别的值。怎么取出1一个以上的值</map>"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把sql拿出来跑跑不就知道了&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["mybatis-plus的selectOne方法结合lambda是否会区分大小写查询？", ["刚刚想做一个数据库重复检测的接口，用的MySQL数据库，结果使用的如题的方式经行搜索的时候显示有两条记录报错了，但是两条记录是大写和小写的，我在想是数据库没有区分还是查询的时候没有区分？"]], "Tag": "程序设计"}
{"Answer": "这是函数调用，每个逗号是函数的一个参数\r\n $id ? $id : 'user_login'\r\n 是一个三元条件判断表达式", "Konwledge_Point": "条件表达式", "Question": ["phpif里面用逗号隔开的表达式如何理解", ["private function verifyHandle($id)\n{\n    $verify = new Verify();\n    if (!$verify->check(I('post.verify_code'), $id ? $id : 'user_login')) {\n        $this->error(\"验证码错误\");\n    }\n}\n\n    上面if条件这个如何理解 ，\n    谢谢，~~~\n"]], "Tag": "程序设计"}
{"Answer": "${param.name}等价于request.getParameter(\"name\"),{param[name]}也是一样的，${params.name}和request.getParameterValues（“name”）一样你要得到属性的话可以这样${scope.attribute}其中scope指pageSocpe、requestScope、sessionScope、applicationScope，attribute指的就是你在某个scope中设置的属性了", "Konwledge_Point": "条件表达式", "Question": ["关于jsp中${param.xxx}这个el表达式获取的值", ["${param.xxx} 表示的是什么？是不是获取url中xxx参数的值？比如查询页面通常", "\n我们需要回显查询条件，如果查询是通过get请求的，是不是只要${param.xxx}就可以", "\n回显数据了？那么可以讲一下原理吗？    ", "\n\n", "还有如果是post请求回显的话 是不是执行在后台request.setAttribute中设置值才能回显？", "\n而get请求则不用"]], "Tag": "程序设计"}
{"Answer": "直接对subTime操作,\r\nwhere subTime &gt; beginTime and subTime &lt; endTime\r\nmysql支持这样", "Konwledge_Point": "条件表达式", "Question": ["iBatis中 开始时间<提交时间<结束时间 这种查询条件怎么实现", ["我的数据库里只有提交时间的字段(subTime)，我想取开始时间(beginTime)和结束时间(endTime)之间提交的文章", "\n我只知道isGreaterThan之类能比较固定值，还有正则表达式", "\n  <![CDATA[", "\n     subTime <= #subTime# ", "\n  ]]>", "\n这种只能比较实体所拥有的字段", "\n但是我的开始时间和结束时间是从别的地方动态传过来的，用ibatis应该怎么实现", "\n执行这个sql的方法应该怎么写  求教各位大虾  谢谢"]], "Tag": "程序设计"}
{"Answer": "`如果问题得到解决，请点我回答左上角的采纳按钮和向上的箭头`\r\n\r\n```\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\ntemplate &lt;typename F&gt;\r\nint count(int * a, int * b, int na, int nb, F const&amp; pred) {\r\n\tint x = 0;\r\n\tfor (int i = 0; i &lt; na; i++)\r\n\t\tfor (int j = 0; j &lt; nb; j++)\r\n\t\t\tif (pred(a[i], b[j])) x++;\r\n\treturn x;\r\n}\r\n\r\nint main() {\r\n\r\n\tint a[3] = { 1, 3, 31 };\r\n\tint b[2] = { 13, 2 };\r\n    int n1 = count(a, b, 3, 2, [](int a, int b) -&gt; int {\r\n        return a - b == 1 || a - b == -1;\r\n    });\r\n    int n2 = count(a, b, 3, 2, [](int a, int b) -&gt; int {\r\n        return a % 10 == b / 10 &amp;&amp; a / 10 == b % 10;\r\n    });\r\n\tcout &lt;&lt; n1 &lt;&lt; endl;\r\n\tcout &lt;&lt; n2 &lt;&lt; endl;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201811/25/1543129757_96178.gif)", "Konwledge_Point": "条件表达式", "Question": ["[求助]一个C++题目(数组 指针)", ["题目:编写一个程序，对一个int数组中的任意两个元素按多种条件计数。例如:计算有多少对元素互为相反数，计算有多少对元素相邻(相差1)。要求编写一个通用函数，可用Lambda表达式描述不同条件"]], "Tag": "程序设计"}
{"Answer": "这个东西也没用过，希望对你有帮助吧\r\nhttps://blog.csdn.net/qq284489030/article/details/55258619", "Konwledge_Point": "条件表达式", "Question": ["ldap的search，filter 筛选条件", ["企业ldap中添加了一个字段是最后更新时间，如图", "\n我是用直接等于查询，为什么不行？", "\n时间格式怎么处理，查询呢？"]], "Tag": "程序设计"}
{"Answer": "是因为索引的字段类型没有小写的问题", "Konwledge_Point": "条件表达式", "Question": ["C#使用Lamda表达式搜索ElasticSearch返回的数据为0，使用DSL就有返回条数", ["var node = new Uri(\"", "http://192.168.168.215:9200/\"", ");", "\n            var settings = new ConnectionSettings(node).DefaultIndex(\"stocknews\");", "\n            var client = new ElasticClient(settings);", "\nvar searchResponse = client.Search(s => s ", "\n            .Query(q => q ", "\n            .Match(m => m ", "\n            .Field(f => f.Summary) ", "\n            .Query(\"LEO\") ) ) );", "\n\n", "var filter2 = new SearchRequest", "\n            {", "\n                Query = new MatchQuery", "\n                {", "\n                    Field = \"Summary\",", "\n                    Query = \"LEO\"", "\n                }", "\n            };", "\nvar searchResponse1 = client.Search(filter2);", "\n同样的搜索条件，第二种DSL语法就有数据返回,第一种返回的Count为0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把数学计算的部分扩起来&amp;#xff0c;否则比较运算的优先级比数学运算优先级高&amp;#xff0c;会先计算1&amp;gt;&amp;#61;0&amp;#xff0c;再把结果用于数学计算&lt;br /&gt;&amp;#61;-&amp;#61;-&amp;#61;-&amp;#61;-&amp;#61;-&amp;#61;&lt;br /&gt;别信书上的优先级列表&lt;br /&gt;不同编译环境下优先级都不一样&lt;br /&gt;使用i&amp;#43;&amp;#43;和&amp;#43;&amp;#43;i的结果在不同环境下都有可能会不一样&lt;br /&gt;所以尽量别写很复杂的公式&amp;#xff0c;中间结果该定义变量存一下的就单独拿出来&amp;#xff0c;也便于调试&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["while循环条件判断不符合预期，单独提出来后符合逻辑，但是不知道为什么不提出来不对", ["\n", "是不是我对这个while里面的逻辑表达式的理解有误，这里已经明显可以计算出逻辑表达式为false了，但还是进入了while循环", "\n", "\n", "然后我把条件判断的前面部分单独提出来了，就可以正常地跳出while循环", "这是怎么回事捏"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的理解有点错误。i&amp;#43;&amp;#43;,s&amp;#43;&amp;#61;i是循环结束再执行。所以循环第一遍执行完后&amp;#xff0c;才执行表达式i&amp;#43;&amp;#43;,s&amp;#43;&amp;#61;i&amp;#xff0c;这个表达式先执行i&amp;#43;&amp;#43;&amp;#xff0c;执行完后i&amp;#61;2&amp;#xff0c;然后s&amp;#43;&amp;#61;i&amp;#xff0c;这样s就是2。第二次循环同样执行完后才执行表达式i&amp;#43;&amp;#43;,s&amp;#43;&amp;#61;i&amp;#xff0c;执行完后i&amp;#61;3&amp;#xff0c;s&amp;#43;&amp;#61;3&amp;#xff0c;s&amp;#61;2&amp;#43;3&amp;#61;5&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["在求for循环时遇到问题，求解！", ["有以下程序", "main（）", "{   int s，i;", "    for(s=0,i=1;i<3;i++,s+=i);", "    printf(“%d\\n\",s);", "}", "s、i的初值分别为0和1，判断循环条件，表达式“1＜3”成立，执行“i++，s+=i”后，i和s的值分别为2和1，继续判断循环条件，表达式“2＜3”成立，执行“i++，s+=j”后，i和s的值分别为3和3，再次判断循环条件，表达式“3＜3”不成立，循环结束。", "问题来了，输出结果为什么是5？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;sql里可以使用if&amp;#xff0c;else&lt;br /&gt;case when then其实类似java里的三元运算符&amp;#xff0c;只能写表达式&amp;#xff0c;不可以写复杂语法&lt;br /&gt;想写复杂语法还得用if&amp;#xff0c;else&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["MySQL选择语句如何支持单条件多语句块语法？", ["问题遇到的现象和发生背景", "\n", "最近工作遇到一个问题，在MySQL中，写纯SQL的时候用到了用户变量", "@var，也涉及了", "多条件选择", "，我这里用了case函数语法", "语法1.", "\n", "case", " 变量 或 表达式 或 字段\n", "when", " 常量", "1", " ", "then", " 值", "1", "\n", "when", " 常量", "2", " ", "then", " 值", "2", "\n...\n【", "else", " 值n】\n", "end", "\n", "\n", "语法2.", "\n", "/*\n", "case", " \n", "when", " 条件", "1", " ", "then", " 值", "1", " (如果是语句，则需要加分号; 后期会用到", "case", "语句)\n", "when", " 条件", "2", " ", "then", " 值", "2", "\n...\n【", "else", " 值n】\n", "end", " \n*/\n", "\n", "发现：", "每个条件when", "之后", "直接跟结果值", "，", "没有像Java中if-else if-else选择条件语法大括号中的", "语句块", "\n", "if (xxxboolean) {\n  xxxstatement1", ";", "\n  xxxstatement2", ";", "\n  xxxstatement3", ";", "\n  ....\n  xxxstatementn", ";", "\n}\n", "\n", "这使得我要将", "赋值语句", "，去", "内嵌写", "在", "条件中", "和", "结果值中", "，这使得可读性非常差", "并且这样下来，", "最多也只有两个内嵌的赋值语句", "，如果超过两个，还处理不了", "\n", "我想要达到的结果", "\n", "防范于未然，和提升MySQL代码的可操作性，MySQL中有没有支持选择流程控制的语句块语法呢？（就像Java选择流程语法中if和else if和else后的跟的大括号一样）"]], "Tag": "程序设计"}
{"Answer": "可以先转换成时间戳再比较", "Konwledge_Point": "条件表达式", "Question": ["<c:if>标签 判断数据库取出的字段tine  和当前的时间先后  怎么写", ["标签 判断数据库取出的字段tine  和当前的时间先后  怎么写？", "\n比如取出的时间是time  与当前时间比较 如果小于当前时间  则表明已经超时...", "\n这个咋写？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;/p&gt;\n&lt;p&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["如何使用scipy.optimize.minimize来直接对方程组进行优化求解？", ["最近在做基于tdoa的室内目标定位的研究，主要是做chan算法定位方面的东西，但是做了实验之后发现效果不太稳定。师哥发给我一份他改写的scipy.optimize.minimize的函数，说是用这个就可以定出位置，然后让我好好看一看，最好能看懂，如下（注释是我自己写的，不知道都对不对）", "\n", "def", " ", "opt_location", "(", "range", ", anchors", "):               ", "#range是真实测得的toa", "\n\n    ", "def", " ", "con", "():\n        ", "# 约束条件 分为eq 和ineq", "\n        ", "# eq表示 函数结果等于0 ； ineq 表示 表达式大于等于0", "\n        x1min, x1max, x2min, x2max = -", "5", ", ", "15", ", -", "5", ", ", "15", "\n        cons = ({", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "0", "] - x1min},              ", "#x[0]-x1min >= 0", "\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "0", "] + x1max},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "1", "] - x2min},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "1", "] + x2max})\n        ", "return", " cons                ", "# **************我也不知道为什么约束条件要这么设置", "\n\n    ", "def", " ", "cost", "(", "pos", "):                 ", "#***************", "\n        ref = np.sqrt(np.", "sum", "((anchors-pos.reshape(", "1", ",", "2", "))**", "2", ", axis=", "1", "))         ", "#anchors为四个基站的位置，pos为要优化的位置", "\n        ref0 = ref[", "1", ":] - ref[", "0", "]\n        ref1 = ref[", "2", ":] - ref[", "1", "]\n        ref2 = ref[", "3", ":] - ref[", "2", "]                            ", "#tdoa", "\n        Ri_0 = ", "range", "[", "1", ":] - ", "range", "[", "0", "]\n        Ri_1 = ", "range", "[", "2", ":] - ", "range", "[", "1", "]                \n        Ri_2 = ", "range", "[", "3", ":] - ", "range", "[", "2", "]                        ", "#真实测得的tdoa", "\n        ", "return", " np.", "sum", "((Ri_0 - ref0)**", "2", ") + np.", "sum", "((Ri_1 - ref1)**", "2", ") + np.", "sum", "((Ri_2 - ref2)**", "2", ")    ", "#目标函数的目的是要求所估计位置和各基站的tdoa", "\n                                                                                                  ", "#和真实测得的tdoa相差最小", "\n\n    x0 = np.array([", "5", ", ", "5", "])\n    res = minimize(cost, x0, constraints=con()).x\n    ", "return", " res\n", "\n", "之后，我的任务参照这个函数的优化方式，把chan算法的核心方程组（线性方程组）用这个优化算法求解出来，如图红框", "\n", "\n这篇关于chan算法的csdn博客的链接是：", "https://blog.csdn.net/qq_23947237/article/details/82715784", "\n由于之前没有接触过优化方面的东西，所以我没有思路，师哥说让我找出来目标函数和约束条件，然后依葫芦画瓢就行，但是我还是一头雾水，希望大佬可以帮忙解决！下面是我最后通过chan算法的第一次ls粗略位置估计得出Za0的代码，我的任务就是把这个Za0用优化的方式求出来", "\n", "from", " math import *\n", "from", " numpy import *\n", "import", " numpy as np\n", "from", " numpy.linalg import inv, qr\n", "BSN", " = ", "4", " #基站数目\n", "BS", "=np.array([[", "0", ",", "0", ",", "10", ",", "10", ",-sqrt(", "3", "),dot(- ", "0", ".", "5", ",sqrt(", "3", ")),dot(", "0", ".", "5", ",sqrt(", "3", "))],[", "0", ",", "10", ",", "10", ",", "0", ",", "0", ",-", "1", ".", "5", ",-", "1", ".", "5", "]]) #锚点位置\n", "BS", "=BS[:,:BSN] #取前", "4", "列\n", "#BS=multiply(BS,50)   #数值×50 四个基站位置固定", "\n", "print", "(", "\"-----------------------------BS--------------------------------\"", ")\n", "print", "(BS)            #看看基站位置\n", "MS", "=np.array([", "10", ",", "4", "]) #设置移动台初始位置\n", "print", "(", "\"-----------------------------MS--------------------------------\"", ")\n", "print", "(MS)            #看看移动台位置\n", "R0", "=[]                #R0为四个锚点分别到移动台的距离\n", "R0", ".clear()           #清空R0\n", "for", " i in range(", "0", ",BSN):\n    ", "R0", ".append(sqrt((BS[(", "0", ",i)] - MS[", "0", "]) ** ", "2", " + (BS[(", "1", ",i)] - MS[", "1", "])**", "2", "))#计算基站到移动台的距离\n", "R0", " = np.array(R0)    #转换为矩阵\n", "print", "(", "\"-----------------------------R0--------------------------------\"", ")\n", "print", "(R0)\n", "Noise", " = ", "1", "            #噪声方差\n", "R", " =", " []", "\n", "R", ".clear()\n", "a", " = random.random(", "3", ")\n", "r", " = np.zeros(", "3", ")\n", "for", " i in range(", "0", ",", "3", "):\n    ", "r", "[i]=", "2", "*a[i]-", "1", "  #随机生成一个-", "1", "到", "1", "的数\n", "for", " i in range(", "1", ",BSN):  \n    ", "R", ".append(R0[i]-R0[", "0", "]+Noise*r[i-", "1", "])#计算距离差 R2-R1 R3-R1 R4-R1 并加噪声\n", "R", " = np.array(R)     #转换为矩阵\n", "print", "(", "\"-----------------------------R--------------------------------\"", ")\n", "print", "(R)            #BSN BS R都有了，开始进行算法部分\n\n", "Q", " = eye(BSN-", "1", ")\n", "print", "(", "\"-----------------------------Q--------------------------------\"", ")\n", "print", "(Q)\n", "K1", " = ", "0", "\n", "k", " = (BS**", "2", ").sum(", "0", ") #BS各基站的x平方+y平方\n", "print", "(", "\"-----------------------------K--------------------------------\"", ")\n", "print", "(k)\n", "Ga", " = np.array([[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "],[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "],[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "]])  #弄一个", "3", "*", "3", "的矩阵\n", "for", " i in range(", "0", ",BSN-", "1", "):\n    ", "Ga", "[i][", "0", "] = -BS[", "0", "][i+", "1", "]\n    ", "Ga", "[i][", "1", "] = -BS[", "1", "][i+", "1", "]\n    ", "Ga", "[i][", "2", "] = -R[i]\n", "print", "(", "\"-----------------------------Ga--------------------------------\"", ")\n", "print", "(Ga)\n", "h", " =", " []", "\n", "for", " i in range(", "0", ",BSN-", "1", "):\n    ", "h", ".append(", "0", ".", "5", "*(R[i]**", "2", "-k[i+", "1", "]+K1))\n", "h", " = np.array(h)\n", "print", "(", "\"-----------------------------h--------------------------------\"", ")\n", "print", "(h)\n", "Za0", " = inv((Ga.T).dot(inv(Q)).dot(Ga)).dot((Ga.T).dot(inv(Q)).dot(h.T))  #第一次粗略估计的位置，使用这个值来估计B\n", "print", "(", "\"-----------------------------Za0--------------------------------\"", ")\n", "print", "(Za0)\n\n", "\n", "主要是不知道思路和怎么写代码，麻烦了，谢谢！"]], "Tag": "程序设计"}
{"Answer": "可以类似下面这样\r\n\r\n```\r\n import java.util.ArrayList;\r\nimport java.util.concurrent.CountDownLatch;\r\n\r\n\r\npublic class TestThread {\r\n\t/**\r\n\t * @param args\r\n\t * @throws InterruptedException \r\n\t */\r\n\tpublic static void main(String[] args) throws InterruptedException {\r\n\t\t\r\n\t\tString c = \"评论1\";\r\n\t\tTxtClass tx = new TxtClass(c);\r\n\t\tCountDownLatch cdLatch = new CountDownLatch(5);\r\n        Thread tr = new CRThread(1,tx,cdLatch);//1表示第一个\r\n        Thread tr2 = new CRThread(2,tx,cdLatch);\r\n        Thread tr3 = new CRThread(3,tx,cdLatch);\r\n        Thread tr4 = new CRThread(4,tx,cdLatch);\r\n        Thread tr5 = new CRThread(5,tx,cdLatch);\r\n        \r\n        tr.start();\r\n        tr2.start();\r\n        tr3.start();\r\n        tr4.start();\r\n        tr5.start();\r\n        cdLatch.await();        \r\n\r\n\t\tSystem.out.println(\"都执行完了，结果[\"+tx.isFind() + \"]\");\r\n\t}\r\n\r\n}\r\nclass TxtClass{\r\n\tprivate String c = \"\";\r\n\tprivate boolean isFind = false;\r\n\tpublic TxtClass(String c){\r\n\t\tthis.c = c;\r\n\t}\r\n\tpublic boolean isFind() {\r\n\t\treturn isFind;\r\n\t}\r\n\tpublic void setFind(boolean isFind) {\r\n\t\tthis.isFind = isFind;\r\n\t}\r\n\tpublic String getC() {\r\n\t\treturn c;\r\n\t}\r\n\t\r\n}\r\nclass RegClass{//校验规则\r\n\tprivate static RegClass rc = new RegClass();\r\n\tpublic static RegClass getInstance(){\r\n\t\treturn rc;\r\n\t}\r\n\tprivate ArrayList&lt;String&gt; list = new ArrayList();\r\n\tpublic RegClass(){//初始化规则\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"s\");\r\n\t\tlist.add(\"1\");\r\n\t\tlist.add(\"评\");\r\n\t\tlist.add(\"a\");\r\n\t\tlist.add(\"b\");\r\n\t\tlist.add(\"r\");\r\n\t}\r\n\tpublic boolean isContains(int index,String c){\r\n\t\tif(list.size()&gt;index){\r\n\t\t\treturn c.indexOf(list.get(index))&gt;=0;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\nclass CRThread extends Thread{\r\n\tprivate int startNum = 0;\r\n\tprivate TxtClass txtClass;//留言内容\r\n\tprivate CountDownLatch cdLatch;\r\n\tprivate int oneLength = 2000;//一个线程校验的长度\r\n\tpublic CRThread(int i,TxtClass txtClass,CountDownLatch cdLatch){\r\n\t\tsuper();\r\n\t\tthis.startNum = i;\r\n\t\tthis.txtClass = txtClass;\r\n\t\tthis.cdLatch = cdLatch;\r\n\t}\r\n\t@Override\r\n\tpublic void run() {\r\n\t\tboolean f = false;\r\n\t\tint nums = 0;\r\n\t\tfor(int i=0;i&lt;oneLength;i++){\r\n\t\t\tnums = (startNum-1)*oneLength+i;\r\n\t\t\tSystem.out.println(\"thread-\"+startNum+\"-[\"+nums+\"]\");\r\n\t\t\tf=RegClass.getInstance().isContains(nums, txtClass.getC());\r\n\t\t\tif(f){\r\n\t\t\t\ttxtClass.setFind(true);\r\n\t\t\t}\r\n\t\t\tif(txtClass.isFind()){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(1);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystem.out.println(\"thread-\"+startNum+\"-结束[\"+nums+\"]\");\r\n\t\tthis.cdLatch.countDown();\r\n\t}\r\n}\r\n\r\n```", "Konwledge_Point": "条件表达式", "Question": ["java线程池当其中一个线程算出结果，终止全部线程", ["业务逻辑：", "\n\n", "一个大型社区，每一秒有上千人在提交留言，提交的留言将经过，上万条的正则表达式的过滤，没有匹配任何规则的，才保存到系统，否则提示用户，您录入的内容不合法。", "\n\n", "我是这样想的，把这上万条正则表达式，拆分成2000条一组，开一个5个线程的线程池，每个线程将负责其中2000个规则的匹配。", "\n\n", "每条留言提交时，将由这5个线程，去判断是否有匹配的规则，如果其中一个线程匹配到了规则，将结束其他4个线程的任务，返回给用户结果。", "\n\n", "请问这种要怎么实现。。", "\n\n", "是不是用到 ", "\n\n", "ExecutorService exec = Executors.newFixedThreadPool(5);", "\n\n", "java.util.concurrent.Future;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码贴一下吧&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["jsp与数据库连接实现登录注册", ["myeclipse在应使用条件的上下文(在upwd=456)中指定了非布尔类型表达式  怎么解决这个问题", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/237943668256195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;阿里开发规范&amp;#xff0c;对代码没什么影响&amp;#xff0c;就好看点&amp;#xff0c;或者写完后Ctrl&amp;#43;alt&amp;#43;L格式化下代码就好了&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["想问一个很简单的问题关于java代码格式", ["我发现有这样一个很简单的问题，例如switch语句、for循环、while循环，等等类似这样的，格式如下", "for循环格式：", "\n", "for (初始化语句", ";条件判断语句;条件控制语句) {", "\n    循环体语句", ";", "\n}\n", "\n", "switch", " (表达式) {\n    ", "case", " ", "1", ":\n        语句体1;\n        ", "break", ";\n    ", "case", " ", "2", ":\n        语句体2;\n        ", "break", ";\n    ...\n    ", "default", ":\n        语句体n+1;\n        ", "break", ";\n}\n\n", "\n", "while", " ", "(逻辑表达式)", "{\n}\n", "\n", "初始化语句", ";", "\ndo {\n    循环体语句", ";", "\n    条件控制语句", ";", "\n}while(条件判断语句)", ";", "\n", "\n", "它们的格式基本都是一个关键字然后小括号大括号，但是我发现很多授课在写格式的时候都是关键字和小括号之间是有一个空格的，但是写实例的时候关键字和小括号之间又没有空格了，（虽然我知道有没有空格都是可以执行的，但是我就想知道哪个是对的，我刚学不久，总得有个对的习惯吧，不要骂我，呜~┭┮﹏┭┮）", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n \"select * from YJCS where XLEFT&lt; \" &amp; X &amp; \" And XRIGHT&gt;\" &amp; X &amp; \" And YLEFT&lt;\" &amp; Y &amp; \" And YRIGHT&gt;\" &amp; Y \r\n```", "Konwledge_Point": "条件表达式", "Question": ["vb6.0select后跟多个条件符号问题（我用的是access）", ["Private Sub Picture1_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)", "\n    Dim cnn As New ADODB.Connection", "\n    Dim rs As New ADODB.Recordset", "\n    rs.Open \"select * from YJCS where XLEFT<\"&X, And XRIGHT>\"&X,and YLEFT<\"&Y, And YRIGHT>\"&Y \", cnn, adOpenKeyset, adLockOptimistic", "\n(上面第二个AND位置显示缺少表达式)", "\n        rs.Fields(\"X1\") = xnow + x2 - x1", "\n       rs.Fields(\"Y1\") = ynow + y2 - y1", "\n     rs.Update", "\n       rs.Close", "\nEnd Sub"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, total &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;) &amp;amp;&amp;amp; (total &amp;lt; SUM) ; i&amp;#43;&amp;#43;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于#C语言#的问题，如何解决？", ["问题遇到的现象和发生背景", "\n", "C语言在表达式2中可以使用逻辑表达式吗？我尝试了下使用逻辑表达式作为结束条件，但是没有达到相应的效果。", "\n", "结束条件是：i <= 1000 或者 total >= 10000", "\n", "问题相关代码，请勿粘贴截图", "\n", "int main()", "{", "    float amount, aver, total;", "    int i;", "    float SUM = 10000;", "    for (i = 1, total = 0; (i <= 1000) || (total >= SUM) ; i++)", "    {", "        printf(\"please enter amount:\");", "        scanf_s(\"%f\", &amount);", "        total = total + amount;", "        printf(\"总和：%f 目标值：%f 次数：%d\\n\",total,SUM,i);", "        //if (total >= SUM) break;", "    }", "    aver = total / i;", "    printf(\"num=%d\\naver=%10.2f\\n\", i, aver);", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "输入了3次数据，3000、6000、6000，总和已经超过了10000但是循环还未结束。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;.filter(...)是根据通道循环过滤掉你所填写的判断条件不满足的数据&lt;br /&gt;.foreach(...)可以对你所需的数据进行操作&amp;#xff0c;比如从中取值或者添加值&amp;#xff1b;&lt;br /&gt;row--&amp;gt;对于你那里就是相当于循环过程中的每一个Map&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["两个单表查询，查询到的数据怎么合并", ["\n", "\n", "\n", "如果把上面那一条sql拆分开，用一个lombda表达式判断条件然后返回一个list集合。领导给我写了一个示例伪代码但是我没看懂，cname字段怎么返回呀，lombda怎么返回多个字段。就是", "这样的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;_&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;variable&lt;/span&gt; :&amp;#61;(a&amp;#43;&lt;span class=\"hljs-number\"&gt;123&lt;/span&gt;)/b) &amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    print(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;_&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;variable&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;赋值表达式是python3.8&amp;#43;的新特性&amp;#xff0c;语法&amp;#xff1a;&amp;lt;名字&amp;gt; :&amp;#61; &amp;lt;表达式&amp;gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;有帮助的话&amp;#xff0c;请点采纳~&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "条件表达式", "Question": ["请帮我回忆一个超实用的Python的语法糖！", ["之前用过某Python语法糖，由于转C太久忘记了。", "\n", "具体功能是：将某表达式赋值给某新变量，并判断该表达式是否满足一定条件。新变量可用于后续计算。", "行数：一行", "等效代码：", "\n", "\nnew_variable = (a+", "123", ")/", "b", "\n", "if", "((a+", "123", ")", "/", "b", " >= ", "100", "):\n  print(new_variable) ", "//一个参与后续计算的例子。语法糖不包含此功能。但运用语法糖能大幅提升此类事件的处理效率，比如我就不用写两次(a+123)/b", "\n"]], "Tag": "程序设计"}
{"Answer": "sql语句怎么写，mapper里就怎么写，你这个用when case写。\r\nselect (case when a-b&gt;0 then a-b else 0 end) as c from xxx", "Konwledge_Point": "条件表达式", "Question": ["带条件判断的Sql语句在Mybatis mapper里转换的问题", ["写了一条带条件判断的数据库语句例如：", "\nSELECT if（(a-b)<=0,0,(a-b)） as  c from xxx", "\n意思就是我想判断select a-b as c from xxxx,如果a-b<=0,c=0,如果a-b>0，就c=a-b", "\n这种在mapper里怎么写啊是用标签在select后面直接写么？"]], "Tag": "程序设计"}
{"Answer": "这个不难吧,,,配置一下,写一个job处理这种逻辑..配置网络上有的是", "Konwledge_Point": "条件表达式", "Question": ["Spring任务调度的问题", ["需求:现在有个静态的boolean变量,需要根据给出的条件来控制变量的值,条件是一个Bean,代码如下", "\n\n", " ", "\n\n", "import java.io.Serializable;\nimport java.util.Date;\n\npublic class TaskTime implements Serializable\n{\n    private static final long serialVersionUID = 5050138699568912212L;\n\n    private String expression;\n    private Date startTime;\n    private Date endTime;\n    \n // Getter And Setter\n}\n", "\n\n", "字段expression是一个CronExpression任务表达式", "\n\n", " ", "\n\n", "当这个字段不为空或不是空字符串时,要根据表达式来控制boolean变量", "\n\n", "当表达式字段为空或空字符串时,要根据startTime把boolean变成true,endTime把boolean变量变成false", "\n\n", " ", "\n\n", "可以给任务调度的方法如下:", "\n\n", " ", "\n\n", "  ", "\n\n", "private static boolean isRunning = false;\n    \n    public boolean run(){\n        isRunning = true;\n        return isRunning;\n    }\n    \n    public boolean stop(){\n        isRunning = false;\n        return isRunning;\n    }\n    ", "\n\n", " ", "\n\n", "请教如何来配置一个Spring任务调度来控制这个变量"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;echo $result丨 wc -l&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["用awk指令，编写脚本，条件大于80的我搞定了，但不会统计人数", ["\n", "需要的大于多少，条件我已经成立，但是关于加法，也就是统计人数，统计人数怎么操作?学的不是很明白，$1是姓名 $2是语文成绩"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;.*&lt;span class=\"hljs-string\"&gt;?发&lt;/span&gt;现其(.*&lt;span class=\"hljs-string\"&gt;?)&lt;/span&gt;[至-]\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["python正则表达，如何能不能匹配多个结尾", ["     lll_fact ", "=", " re.compile(f", "\".*?发现其(.*?)至\"", ")\n例如这样结尾是至，如果有些内容没有至，而是把至改成了-要怎么解决\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;图二括号里面的表达式错了&amp;#xff0c;比如说18.5&amp;lt;c&amp;lt;22.9应该写成 18.5&amp;lt;c &amp;amp;&amp;amp; c&amp;lt;22.9,或者是 18.5&amp;lt;c and c&amp;lt;22.9&lt;br /&gt;(你就按照答案的写法来就可以了)&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["请大家看看，小白刚开始学", ["\n", "为什么图一的答案是正确的，图二的就只能运行第一个else if。如果是因为有多条elseif语句同时出现，那么如果有一条 elseif语句的表达式测试成功，那么会忽略掉其他所有else if和 else分支，那图二改如何改正呢，还有两张图片里else if后的条件的表达方式都是正确的吗，感谢🙏"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;where后面那个子查询是多个值&amp;#xff0c;用&amp;#61;是不行的&amp;#xff0c;改为in&amp;#xff0c;这样就可以sum函数&amp;#xff0c;不知道这个是不是你的业务需求。&lt;/li&gt;&lt;li&gt;如果你的sum是需要分组的&amp;#xff0c;可以用group by 进行分组统计sum&amp;#xff0c;或者用开窗函数sum(字段名) over(partition by分组字段 order by 排序字段)进行统计。因为你给的信息较少&amp;#xff0c;只能这样告诉你思路。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;&lt;strong&gt;希望对你有所帮助&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于MySQL中sum查询语句的问题", ["在使用MySQL查询时写出了以下语句：", "select sum（列名1）列名1 from 表名 where 列名2＝（查询语句，查出多个条件）", "查询失败，后反应过来sum似乎不能查多行表达式。但我最后查询语句的查询结果是个动态的，每个月都会增加一个结果，如果要挨个列出来的话每个月都要维护一次。网上搜索了好久后也没有找到解决办法，所以想询问一下有没有能一次性解决的办法。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;re&lt;/span&gt;.findall(&amp;#39;https://www.lego.com/cdn/cs/set/assets/[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;A-z]{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;}/\\d{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}_v\\d\\.mp4&amp;#39;, url)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["python 正则匹配 所有符合条件的url", ["问题遇到的现象和发生背景", "\n", "我想获取这串json字符串中所有视频url .mp4结尾的", "但是它把所有url都返回出来了", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "\n", "运行结果及报错内容", "\n", "import", " re\n\n\nclass test():\n    pass\n\nurl = '", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=528&height=528&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=1056&height=1056&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=792&height=792&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt264f911195f6cdef.sizes.tablet\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=640&height=640&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=1280&height=1280&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt264f911195f6cdef/42125_alt11.jpg?fit=bounds&format=jpg&quality=80&width=960&height=960&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.desktop\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=800&height=800&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=1600&height=1600&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=1200&height=1200&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes\"", ":{", "\"desktop\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.desktop\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"mobile\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.mobile\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"tablet\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.tablet\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"__typename\"", ":", "\"ProductImageSizes\"", "},", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.mobile\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=528&height=528&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=1056&height=1056&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=792&height=792&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt5d1d4aeff01fcb63.sizes.tablet\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=640&height=640&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=1280&height=1280&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5d1d4aeff01fcb63/42125_alt12.jpg?fit=bounds&format=jpg&quality=80&width=960&height=960&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.desktop\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=800&height=800&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=1600&height=1600&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=1200&height=1200&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes\"", ":{", "\"desktop\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.desktop\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"mobile\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.mobile\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"tablet\"", ":{", "\"type\"", ":", "\"id\"", ",", "\"generated\"", ":", "true", ",", "\"id\"", ":", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.tablet\"", ",", "\"typename\"", ":", "\"ProductImageUrls\"", "},", "\"__typename\"", ":", "\"ProductImageSizes\"", "},", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.mobile\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=528&height=528&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=1056&height=1056&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=792&height=792&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductImage", ":blt3126f56afab0d3f5.sizes.tablet\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=640&height=640&dpr=1\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"highResUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=1280&height=1280&dpr=1\"", ",", "\"fullscreenUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3126f56afab0d3f5/42125_alt13.jpg?fit=bounds&format=jpg&quality=80&width=960&height=960&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductImageUrls\"", "},", "\"", "$ProductVideo", ":blt5107c5bf3552475f.video\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt5107c5bf3552475f/42125_v2.mp4\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/bltb967a5b31d73b491/42125_v2_thumbnail.png?fit=bounds&format=png&width=65&height=45&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductVideoFormat\"", "},", "\"", "$ProductVideo", ":bltf0cfb8ca17ee084d.video\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/bltf0cfb8ca17ee084d/42125_v3.mp4\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt3d70ca70084f16a6/42125_v3_thumbnail.png?fit=bounds&format=png&width=65&height=45&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductVideoFormat\"", "},", "\"", "$ProductVideo", ":blt8058851cc07026e6.video\"", ":{", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt8058851cc07026e6/42125_v1.mp4\"", ",", "\"thumbnailUrl\"", ":", "\"https://www.lego.com/cdn/cs/set/assets/blt1e200c3f36b64a04/42125_v1_thumbnail.jpg?fit=bounds&format=jpg&quality=80&width=65&height=45&dpr=1\"", ",", "\"__typename\"", ":", "\"ProductVideoFormat\"", "'\nprint(re.findall('", "\"url\"", ":", "\"https://www.lego.com/cdn/cs/set/assets.*?mp4\"", "',url))\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "我尝试用加上不包含jpg的正则语句但是没什么效果，希望高人指点", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "第一个报错：你的and ID not in(select top 2 * from SG_BedResources)       这句SQL就有问题，你既然用了in，那么肯定在后面的条件里面只能指定一个字段呀，\r\n第二个是什么情况？仔细说说", "Konwledge_Point": "条件表达式", "Question": ["SQL top子句取数据数量问题", ["select top 2 ID,", "\nUID,Stamp,BuildingCode,BuildType,Building,BuildingAdress,Site,Layer,RoomID,BedNum,BedState,Standard,UserCollegeCode,UserStudentID,ReplaceDate,ReplaceOperator,Operator,Reamark,Reamark1,Reamark2 ", "\nFROM SG_BedResources", "\nwhere 1=1 and Building=''and UID='' and ID not in(select top 2 * from SG_BedResources)", "\norder by ID asc", "\n\n", "报错：当没有用 EXISTS 引入子查询时，在选择列表中只能指定一个表达式。", "\n报错，实在不明白改怎么改了想要取一定条数，但条数不固定，还有两个条件选择，该怎么解决？  有些摸不到头绪"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/p&gt;\n&lt;p&gt;int main()&lt;/p&gt;\n&lt;p&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int n;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int count &amp;#61; 0;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;&amp;#43;&amp;#43;)\n\n{\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34; %5d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt; (&amp;#43;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    }\n\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;共输出了 % d个数\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;br /&gt;这个是C不是C&amp;#43;&amp;#43;&amp;#xff0c;C&amp;#43;&amp;#43;开头是&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c++类的程序有点迷糊", ["下面的程序输出[10..100]间既能被3整除，又能被5整除的整数，要求每行输出5个，程序结束前输出一共输出了多少个满足条件的数。请在横线上填上适当的表达式或语句。", "\n", "#include<stdio.h>", "\n", "int main()", "\n", "{", "\n", "int n,        ①       ;", "\n", "for(  n=10;    ②     ;n++   )", "\n", "{", "\n", "if", " (n%", "3", "==", "0", "&&    ③     )\n", "\n", "{", "\n", "printf(“%5d”,n);", "\n", "if(++count%5   ④    )     printf(“\\n”);", "\n", "}   ", "\n", "printf(“共输出了%d个数\\n”,       ⑤       );", "\n", "}", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "```\r\n // app1.cpp : Defines the entry point for the console application.\r\n//\r\n\r\n#include \"stdafx.h\"\r\n#include &lt;vector&gt;\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\n\r\nusing namespace std;\r\n\r\nstring toupper(string s)\r\n{\r\n\tstring r = \"\";\r\n\tfor (int i = 0; i &lt; s.length(); i++)\r\n\t\tr += (char)toupper(s.c_str()[i]);\r\n\treturn r;\r\n}\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n\tvector&lt;string&gt; text;\r\n\ttext.push_back(\"hello world\");\r\n\tfor (vector&lt;string&gt;::iterator it = text.begin(); it != text.end() &amp;&amp; ! it-&gt;empty(); ++it)\r\n\t{\r\n\t\tstring s = *it;\r\n\t\tcout&lt;&lt; toupper(s) &lt;&lt; endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "条件表达式", "Question": ["迭代器和string的相关问题", [" vector<string> text{\"hello world\"};\nfor(auto it = text.begin(); it != text.end() && ! it->empty(); ++it)\n            {\n                        *it = toupper(*it);\n                        cout<< *it << endl;\n            }\n", "\n\n", "这里有个问题，toupper()只接受int的参数，而vector的基础元素是string所以无法使用，有没有办法在循环中使用toupper()", "\n\n", "第二：当我将text的类型改为string时，循环的判断条件 ! it->empty() 编译器显示表达式应该包含指向类型的指针，why？？难道string不是一个类型吗，string不是标准库类型吗？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;正则表达式&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n(a1|&lt;span class=\"hljs-type\"&gt;a2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;a3&lt;/span&gt;)(.*?)(b1|&lt;span class=\"hljs-type\"&gt;b2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;b3&lt;/span&gt;)(c1|&lt;span class=\"hljs-type\"&gt;c2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;c3&lt;/span&gt;)(.*?)(d1|&lt;span class=\"hljs-type\"&gt;d2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;d3&lt;/span&gt;)(e1|&lt;span class=\"hljs-type\"&gt;e2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;e3&lt;/span&gt;)(.*?)(f1|&lt;span class=\"hljs-type\"&gt;f2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;f3&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;说明&amp;#xff1a;a&amp;#xff0c;a2&amp;#xff0c;a3表示张三的多种前缀字符串&amp;#xff0c;b1&amp;#xff0c;b2&amp;#xff0c;b3表示张三的多种后缀字符串。如果还有更多的&amp;#xff0c;加到括号里&amp;#xff0c;中间用 | 分隔。&lt;br /&gt;用 $数字 的形式截取匹配的项。数字按照括号出现的顺序计算。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;string str&amp;#xff1d;&amp;#34;a1张三b1c2李四d2e1王五f2&amp;#34;;\nSystem&lt;span class=\"hljs-selector-class\"&gt;.out&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.println&lt;/span&gt;(str.replaceAll(&amp;#34;(a1|a2|a3)(.*?)(b1|b2|b3)(c1|c2|c3)(.*?)(d1|d2|d3)(e1|e2|e3)(.*?)(f1|f2|f3)&amp;#34;,&amp;#34;$2 $5 $8&amp;#34;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果bc之间、de之间还有其他字符&amp;#xff0c;可以把正则表达式改成这样&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;(a1|&lt;span class=\"hljs-type\"&gt;a2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;a3&lt;/span&gt;)(.*?)(b1|&lt;span class=\"hljs-type\"&gt;b2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;b3&lt;/span&gt;).*(c1|&lt;span class=\"hljs-type\"&gt;c2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;c3&lt;/span&gt;)(.*?)(d1|&lt;span class=\"hljs-type\"&gt;d2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;d3&lt;/span&gt;).*(e1|&lt;span class=\"hljs-type\"&gt;e2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;e3&lt;/span&gt;)(.*?)(f1|&lt;span class=\"hljs-type\"&gt;f2&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;f3&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["根据不同的前后缀条件可以利用正则截取中间内容吗", ["例如 string str＝“a张三bc李四de五f”；", "截取成 张三  李四 王五"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cls.driver&amp;#xff1d;driver&amp;#xff1d;none所以false&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["python的自动化测试的driver的封装问题", ["\n", "class", " ", "GetDriver", ":\n    ", "# 设置类属性", "\n    driver = ", "None", "\n\n    ", "# 获取driver", "\n", "    @classmethod", "\n    ", "def", " ", "get_driver", "(", "cls", "):\n        ", "if", " cls.driver ", "is", " ", "None", ":\n            ", "# 实例化浏览器", "\n            cls.driver = webdriver.Firefox()\n            ", "# 最大化", "\n            cls.driver.maximize_window()\n            ", "# 打开浏览器", "\n            cls.driver.get(page.url)\n        ", "return", " cls.driver\n\n    ", "# 退出driver", "\n", "    @classmethod", "\n    ", "def", " ", "quit_driver", "(", "cls", "):\n        ", "if", " cls.driver:\n            ", "print", "(", "\"关闭之前：\"", ", cls.driver)\n            cls.driver.quit()\n            ", "print", "(", "\"关闭之后：\"", ", cls.driver)\n\n\n            cls.driver = ", "None", "\n            ", "# print(\"置空之后：\", cls.driver)", "\n\n", "\n", "quit_driver方法里第一行if cls.driver: 判断是什么判断 if不是只能判断true和false吗 cls.driver是Boolean表达式吗？为什么if后面可以后面接driver作为判断条件"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/03249165086619.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;您这个对操作符还是理解错了&lt;br /&gt;&amp;amp;&amp;amp; 是二者都满足才行&amp;#xff0c;有假则假&lt;br /&gt;|| 是二者满足其一就行&amp;#xff0c;有真为真&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["求指导该if else语句问题", ["写的代码if的语句无法输出", "代码如下", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n        ", "char", " ch[", "6", "] = ", "\"FishC\"", ";\n        ", "int", " i;\n        ", "printf", "(", "\"请输入你想访问的字符序号(0~5)：\"", ");\n        ", "scanf", "(", "\"%d\"", ", &i);\n        ", "if", " (i < ", "0", "  && i > ", "5", ")\n        {        \n            ", "printf", "(", "\"非法访问\"", ");    \n        }\n        ", "else", " \n        {\n            ", "printf", "(", "\"%c\\n\"", ", ch[i]);\n        }\n        ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "输入i>5或是i<0的数时不输出if的语句，返回空字符", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "将代码修改为", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n        ", "char", " ch[", "6", "] = ", "\"FishC\"", ";\n        ", "int", " i;\n        ", "printf", "(", "\"请输入你想访问的字符序号(0~5)：\"", ");\n        ", "scanf", "(", "\"%d\"", ", &i);\n        ", "if", " (i >= ", "0", " && i <= ", "5", ")\n        {        \n            ", "printf", "(", "\"%c\\n\"", ",ch[i]);    \n        }\n        ", "else", " \n        {\n            ", "printf", "(", "\"非法访问\"", ");    \n            \n        }\n        ", "return", " ", "0", ";\n}\n\n", "\n", "if中的表达式改为i >= 0 && i <= 5,并且将两个执行语句互换，结果可运行。", "\n", "\n", "\n", "我想要达到的结果", "\n", "求解答一下问题:", "仅仅只有if else的语句中,if和else的判断条件是否互斥，若为互斥，那么为什么条件相互调换后无法输出同样的结果？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个需求应该是要做模糊匹配。&lt;br /&gt;我理解查询的关键字一般是在前端输入的。&lt;br /&gt;你在接受到前端输入后,把输入拆分成单个字符&amp;#xff0c;在拼sql的时候每个字符中间都插入模糊匹配符号%。&lt;br /&gt;譬如前端搜索框输入hw,拆分成单字符的模糊匹配串就成了%h%w%。&lt;br /&gt;最终执行的sql样例如下:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; mytable &lt;span class=\"hljs-keyword\"&gt;where&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;name&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;like&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;%h%w%;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;当你数据量较大(单表超过10W了)时,就需要把name字段加上全文索引,这样效率更高&amp;#xff0c;有需要可以搜索mysql全文索引相关内容。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["关于#mysql的问题，通过字符串中的非连续字符组合查询符合条件的记录", ["有一张表mytable，其中有一列叫name，假设有name属性分别为\"ashiqwer\",\"dfwmn\",\"fghes\"的三条记录，如何写sql语句，当前端传入\"hw\"时只能查询到第一条记录？", "注意前端传入的字符串是任意的，要使用mybatis去数据库中查找"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for循环进行10个成绩的逐个输入&amp;#xff0c;i是循环变量。每次循环都要输入一次成绩&amp;#xff0c;所以循环10次就是输入10个成绩&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["c语言中循环时遇到不理解之处", ["问题遇到的现象和发生背景", "\n", "在学习循环结构时遇到的问题", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "int main()", "{", "    for (int i = 1;   <= 10;++)这里有俩个i没加因为受发布限制", "    {", "        int score;", "        scanf(\"%d\", &score);", "        switch (score / 10)", "        {", "        case 10:", "        case 9:", "            printf(\"优秀\\n\");", "            break;", "            //同样的条件不能出现俩次及以上，default也不能出现两个及以上", "            //case之后的只能是整型常量表达式（整数，字符），不能是小数和变量", "        case 8:", "            printf(\"良好\\d\");", "            break;", "        default:", "            printf(\"不及格\\n\");", "\n", "   }\n system(", "\"pause\"", ")", ";", "\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "就是我不理解为啥i表示可以输入成绩的个数", "\n\n", "我想要达到的结果", "\n", "希望解答解答"]], "Tag": "程序设计"}
{"Answer": "我写了一个demo，希望能帮到你\r\npackage com.wenqiang.regex;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.regex.Pattern;\r\n\r\n/**\r\n * 其中每个文本行前四个字母称为行类型，每个文本块从HEDR行开始到下个HEDR结束（不含下个HEDR行），最后一个TLRL是文件结束标志。 \r\n * 约束条件:\r\n * 1、处理掉文件不存在、文件打开或读取失败等异常。\r\n * 2、忽略掉空行。\r\n * 3、每个文本行前四个字符必须由三个大写英文字母加一个大写英文字母或一个数字组成，要求用正则表达式进行验证。\r\n * 4、如果文件末尾没有TLRL行，则返回空ArrayList,即认为该文件无效。 \r\n * 请编写一个方法，返回由若干个文件块组成的ArrayList，即其中每个元素是文本块，每个文本块也定义成一个ArrayList. \r\n * @author wenqiang\r\n *\r\n */\r\npublic class MessageHander {\r\n\r\n\tprivate final static String reg = \"^[A-Z]{3}[A-Z0-9]+\";\r\n\t\r\n\tpublic boolean pathIsExist(String path){\r\n\t\t\r\n\t\tFile file = new File(path);\r\n\t\t\r\n\t\treturn fileIsExist(file);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic boolean fileIsExist(File file){\r\n\t\treturn file.exists();\r\n\t}\r\n\t\r\n\tpublic List&lt;ArrayList&lt;String&gt;&gt; handerMsg(String filepath){\r\n\t\t\r\n\t\tList&lt;ArrayList&lt;String&gt;&gt; msgList = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();\r\n\t\t\r\n\t\tif(!pathIsExist(filepath)){\r\n\t\t\t\r\n\t\t\tSystem.out.println(\"文件不存在！--PATH\");\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tFile file = new File(filepath);\r\n\t\t\t\r\n\t\t\tFileInputStream fis = null;\r\n\t\t\t\r\n\t\t\tInputStreamReader isr = null;\r\n\t\t\t\r\n\t\t\tBufferedReader br = null;\r\n\t\t\ttry {\r\n\t\t\t\t fis = new FileInputStream(file);\r\n\t\t\t\t \r\n\t\t\t\t isr = new InputStreamReader(fis);\r\n\t\t\t\t \r\n\t\t\t\t br =  new BufferedReader(isr);\r\n\t\t\t\t \r\n\t\t\t\t String temp = \"\";\r\n\t\t\t\t \r\n\t\t\t\t ArrayList&lt;String&gt; tempList = null;\r\n\t\t\t\t try {\r\n\t\t\t\t\twhile(true){\r\n\t\t\t\t\t\ttemp = br.readLine();\r\n\t\t\t\t\t\tif(\"TLRL\".equals(temp)){\r\n\t\t\t\t\t\t\tif(tempList!=null){\r\n\t\t\t\t\t\t\t\tmsgList.add(tempList);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tSystem.out.println(\"文件读取结束--TLRL！\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else if(temp==null){\r\n\t\t\t\t\t\t\tif(tempList!=null){\r\n\t\t\t\t\t\t\t\tmsgList.add(tempList);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tSystem.out.println(\"文件读取结束--NULL！\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(\"\".equals(temp)){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}else if(Pattern.matches(reg, temp.trim())&amp;&amp;\"HED\".equals(temp.substring(0, 3))){\r\n\t\t\t\t\t\t\t\tif(tempList!=null){\r\n\t\t\t\t\t\t\t\t\tmsgList.add(tempList);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttempList = new ArrayList&lt;String&gt;();\r\n\t\t\t\t\t\t\t\ttempList.add(temp);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\ttempList.add(temp);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t }\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tSystem.out.println(\"文件读取失败--IO！\");\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\treturn msgList;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t} catch (FileNotFoundException e) {\r\n\t\t\t\tSystem.out.println(\"文件打不开！--FILE\");\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\treturn msgList;\r\n\t\t\t}finally{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbr.close();\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn msgList;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\tString filepath = \"e:/file.txt\";\r\n\t\t\r\n\t\tList&lt;ArrayList&lt;String&gt;&gt; resultList = new MessageHander().handerMsg(filepath);\r\n\t\t\r\n\t\tSystem.out.println(resultList.size());\r\n\t\t\r\n\t\tSystem.out.println(resultList.toString());\r\n\t\t//System.out.println(Pattern.matches(reg, \"HEDRA\"));\r\n\t\t//System.out.println(\"HED\".equals(\"HEDRA\".substring(0, 3)));\r\n\t}\r\n}", "Konwledge_Point": "条件表达式", "Question": ["请大家帮我看看这个题是怎么个意思，应该如何去做！谢谢", ["文本文件A.txt中顺序包含如下文本：", "\nHEDRA", "\nSHDRA", "\nPOSDA1", "\nPOSDA2", "\nPOSDA3", "\nHEDRB", "\nSHDRB", "\nPOSDB1", "\nPOSDB2", "\nPOSDB3", "\n.....", "\n.....", "\nTLRL", "\n其中每个文本行前四个字母称为行类型，每个文本块从HEDR行开始到下个HEDR结束（不含下个HEDR行），最后一个TLRL是文件结束标志。", "\n约束条件1、处理掉文件不存在、文件打开或读取失败等异常。2、忽略掉空行。3、每个文本行前四个字符必须由三个大写英文字母加一个大写英文字母或一个数字组成，要求用正则表达式进行验证。4、如果文件末尾没有TLRL行，则返回空ArrayList,即认为该文件无效。", "\n  请编写一个方法，返回由若干个文件块组成的ArrayList，即其中每个元素是文本块，每个文本块也定义成一个ArrayList.", "\n返回的ArrayList的内存映射如下描述", "\n     【", "\n           【HEDRA,SHDRA,POSD,POSD】，", "\n           【HEDRB,SHDRB,POSD,POSD】,", "\n            ......", "\n            ......", "\n     】"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;初始化函数&amp;#xff0c;传二维字符数组&amp;#xff0c;只需要传 它的变量名即可&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-constructor\"&gt;InitBoard(&lt;span class=\"hljs-params\"&gt;board&lt;/span&gt;, ROW, COL)&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;&lt;li&gt;你现在传的是 board[3][3] 一个未知值&amp;#xff0c; 后面函数里 访问 一个 未初始化的 board数组&amp;#xff0c;自然报错了&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "条件表达式", "Question": ["C++内存相关报错：读取字符串出错", ["使用vs2022，初始化数组", "初始化数组时C6385警告，读取无效数据", "\n", "#", "include", "<stdio.h>", "\n", "#", "define", " ROW 3", "\n", "#", "define", " COL 3", "\n\n\n", "void", " ", "InitBoard", "(", "char", " board[ROW][COL], ", "int", " row, ", "int", " col)", ";        ", "//头文件声明，初次生成函数", "\n\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "\"head.h\"", "\n\n", "void", " ", "InitBoard", "(", "char", " board[ROW][COL],", "int", " row,", "int", " col)", " ", "{\n    ", "int", " x;\n    ", "int", " y;\n    ", "for", " (x = ", "0", "; x < row; x++) {\n        ", "for", " (y = ", "0", "; y < col; y++) {\n            board[x][y] = ", "' '", ";\n            ", "printf", "(", "\"board[%d][%d]=%c\"", ",x,y,board[x][y]);\n        }\n    }\n}\n\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "\"head.h\"", "\n", "void", " ", "game", "()", "{\n    ", "char", " board[ROW][COL] = { ", "0", " };\n    ", "InitBoard", "(board[ROW][COL], ROW, COL);\n\n\n\n}\n", "void", " ", "main", "()", " ", "{\n    ", "game", "();\n        \n    \n\n}\n\n", "\n", "\n", "结果引发异常，在board[x][y] = ' ';处出现0x00007FF62F911819 处(位于 Project1.exe 中)引发的异常: 0xC0000005: 写入位置 0xFFFFFFFFFFFFFFCC 时发生访问冲突。", "尝试过更改for循环中的表达式2的条件，问题不变，更改过row值，问题不变"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以使用内置函数filter&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x: &lt;span class=\"hljs-built_in\"&gt;tuple&lt;/span&gt;, y: &lt;span class=\"hljs-built_in\"&gt;tuple&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;tuple&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;filter&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; a: y[x.index(a)], x))  &lt;span class=\"hljs-comment\"&gt;# y[x.index(a)] 表示 x 中某个元素对应的 y 中的元素&amp;#xff0c;因为 x 中的元素是不重复的&amp;#xff0c;所以可以直接用 index 查询位置&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个函数接收一个lambda和一个可迭代对象&amp;#xff0c;根据lambda返回的值进行筛选&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["Python返回参数组成新元组", ["#344", "函数 main) 接收两个等长的元组 x和y 作为参数，其中x中的所有元素各不相同，", "要求返回x中部分元素组成的新元组，如果x中某个元素y中对应位置上的元素等价于True,就保留x中的这个元素，最后返回所有符合条件的元素组成新的元组。", "例如，main(1,2,3,4),(1,0,0,1))返回(1,4）。", "不能使用循环结构，不能使用列表推导式或生成器表达式", "，不能有多余输出。", "考点：元组", "什么叫“对应位置上的元素等价于True”？它没说两个元素“相等”。", "\n", "def main(x,y):\n", "    return x,y", "\n'''\n答题错误！您的代码执行结果为：\n((1, 2, 3, 4), (1, 0, 0, 1))\n((", "'a'", ", ", "'b'", ", ", "'c'", "), (0, 1, 0))\n'''\n", "\n", "def main(x,y):\n", "    #return x,y", "\n", "    return(map(str,(x,y)))", "\n'''\n答题错误！您的代码执行结果为：\n<map object at 0x0000018D41CE6BE0>\n<map object at 0x0000018D40140A90>\n'''\n", "\n", "def main(x,y):\n", "    #tup1 = ()        #元组中的元素值不允许删除", "\n", "    if x == y:", "\n", "        return(map(str,(x,y)))", "\n'''\n答题错误！您的代码执行结果为：\nNone\nNone\n'''\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要在多个数组中找到匹配的文字并生成一个新数组&amp;#xff0c;可以使用Array.prototype.concat()方法将所有数组合并成一个大数组&amp;#xff0c;然后使用Array.prototype.filter()方法过滤出包含特定文字的元素。&lt;/p&gt;\n&lt;p&gt;可以使用 Array.prototype.flat() 将嵌套的数组打平&amp;#xff0c;然后使用 Array.prototype.filter() 方法来过滤出符合条件的元素。&lt;/p&gt;\n&lt;p&gt;示例代码如下:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-js\"&gt;&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; arr &amp;#61; search_list.flat();\n&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; newArr &amp;#61; arr&lt;span class=\"hljs-built_in\"&gt;.filter&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;item&lt;/span&gt; &amp;#61;&amp;gt; {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;item&lt;/span&gt;.includes&lt;span class=\"hljs-built_in\"&gt;(key&lt;/span&gt;)\n});\nconsole.log(newArr)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;上面的代码中&amp;#xff0c;search_list 是你要查找的数组&amp;#xff0c;key是你要查找的文字&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["请教！在小程序中如何在多个数组中找到匹配的文字并生成一个新数组？", ["本人零基础，在微信小程序开发中，想在搜索页面显示关键词，设想当用户输入某个关键词（比如“大学”）的时候，能弹出相应的关键词，点击之后就可以按照弹出的关键词进行搜索。", "\n", "目前通过调取数据库的数据，已经拿到符合条件的集合，然后通过.map拿到集合中的标签tags：", "\n", "click_search() {\n    ", "var", " key = ", "this", ".", "data", ".key  ", "// 用户输入的搜索内容", "\n    db.collection(", "'demo'", ")\n      .", "where", "(_.or([{\n        title: db.RegExp({\n          regexp: key,\n          options: ", "'i'", "\n        })\n      }, {\n        tags: db.RegExp({\n          regexp: key,\n          options: ", "'i'", "\n        })\n      }]))\n      .", "get", "()\n      .then(res => {\n        ", "var", " key = [", "this", ".", "data", ".key]  ", "// 将关键词从字符串转为数组", "\n        ", "if", " (wx.getStorageSync(", "'historyStorage'", ").length > ", "0", ") {  ", "// 如果以前有搜索历史，那么将搜索历史进行拼接", "\n          wx.setStorageSync(", "'historyStorage'", ", key.concat(wx.getStorageSync(", "'historyStorage'", ")))\n        } ", "else", " {  ", "// 如果没有，将目前输入的搜索内容存到本地缓存", "\n          wx.setStorageSync(", "'historyStorage'", ", key)\n        }\n        ", "if", " (res.", "data", ".length == ", "0", ") {  ", "// 如果用户输入的内容没有搜索结果，", "\n          ", "this", ".setData({\n            Noresult: ", "true", ",  ", "// 显示无搜索结果", "\n            showhistory: ", "false", "\n          })\n        } ", "else", " {  ", "// 否则 将结果存入data进行渲染", "\n          ", "this", ".setData({\n            search_list: res.", "data", ",\n          })\n        }\n      })\n  },\n\n        ", "var", " arr = search_list\n        ", "var", " newArr = arr.map((item) => {\n          ", "return", " item.tags\n        })\n     console.log(newArr)\n      })\n", "\n", "拿到的tags内容如下：", "\n", "      0:", "[“杭州大学”,“西安大学”,“南京大学”]", "\n      1:", "[“长沙大学”,“财经学院”,“贵阳学院”]", "\n      2:", "[“武汉农大”,“湘潭大学”,“中南民院”]", "\n      3:", "[“西南科技大学”,“东北体育学院”,“中央民院”]", "\n      4:", "[“江西师大”,“西南理工学院”,“东北科技学院”]", "\n", "\n", "尝试使用filter和将变量引入正则表达式的方法来，但是失败了。不知道是方法错了，还是正则表达式引入变量的时候错了……", "\n", "data:", "{\n key:", "\"大学”\n}\n", "var", " keywords = ", "this", ".data.key\n        ", "var", " reg = ", "new", " ", "RegExp", "(+keywords, ", "\"gi\"", ")\n        ", "var", " result = ", "new", "Arr", ".filter(", "function", " ", "(reg) {\n          \n          ", "return", " result\n        })\n        console.log(result)\n\n", "// 打印出来的 resul 为空数组", "\n", "\n", "想请教一下，这种情况应该用什么方法比较好，最后能得出一个匹配的数组在页面渲染出来。"]], "Tag": "程序设计"}
{"Answer": "三目运算符是自右向左的结合性的把", "Konwledge_Point": "条件表达式", "Question": ["Java中三目运算符结合性究竟是什么？", ["首先，书上说的都是右结合性，甚至JLS中也明确的说了“The conditional operator is syntactically right-associative (it groups right-to-left). Thus, a?b:c?d:e?f:g means the same as a?b:(c?d:(e?f:g)).”", "\n但是，如果是右结合性，有什么办法证明吗？我试着写了如下代码，却发现结果似乎在向我诉说三目运算符是左结合性的", "\n\n", "String s = \"abc\";\nint y = 1;\nSystem.out.println(\"abc\".equals(s) ? 1 : (++y) == 2 ? 0 : -1);\nSystem.out.println(y);//1\n", "\n\n", "如果是自右向左的结合性，那么(++y) == 2 ? 0 : -1 应该先被执行，也就是说y的值应该是2。但结果确是1……", "\n\n", "我理解的结合性就是指在优先级相同的情况下，看是从左向右还是右向左。", "\n\n", "自问自答吧。", "\nstackoverflow上找到一种解释，我觉得还蛮不错。", "\n就用a?b:c?d:e来说。", "\n如果是左结合性，那么表达式等值于下((a?b:c)?d:e)。", "\n于是乎变成了用(a?b:c)的结果，去决定究竟是返回d或者e。也就是说这个表达式只可能返回d或者e。这显然是不正确的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.是不是递归算法结果一定要用return返回&lt;br /&gt;不是&amp;#xff0c;但是一定要有退出条件&amp;#xff0c;使得不会无限递归下去。比如本例的正确答案中&amp;#xff0c;当n为0的时候&amp;#xff0c;不再递归。而要不要返回结果&amp;#xff0c;通常是要看你希望通过运行程序得到什么结果。&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;2.按它的思路走&amp;#xff0c;一个数&amp;#xff08;比如89&amp;#xff09;进去后&amp;#xff0c;进入if&amp;#xff0c;那么进行第一步&amp;#xff0c;调用本身的函数&amp;#xff0c;然后又返回调用&amp;#xff0c;此时它还是89&amp;#xff0c;在往回调用不是死机了吗&amp;#xff0c;怎么会往下跑呢&lt;br /&gt;每次调用的时候&amp;#xff0c;下一个n都是被2整除的结果&amp;#xff0c;比如第一次n&amp;#61;89&amp;#xff0c;调用递归的时候&amp;#xff0c;n&amp;#61;n//89&amp;#xff0c;就变成了44&amp;#xff0c;一直到n&amp;#61;0的时候停止递归。&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;3.它从头到尾就是用了一个变量&amp;#xff0c;我不明白&amp;#xff0c;我觉得至少要两个变量&amp;#xff0c;一个用来记录除以2后的余数&amp;#xff0c;一个用记录用floor除法后的得到的结果&amp;#xff08;这个变量我觉得可以用本身的变量覆盖&amp;#xff09;&lt;br /&gt;正确答案里已经使用了这两个值&amp;#xff0c;只是省略的变量。用floor除法后的得到的结果已经传入递归&amp;#xff0c;除以2后的余数则附加在字符串变量temp的后面。&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;4.我就想知道我的思路能不能实现题目的要求&lt;br /&gt;当然可以。只不过你写的这个程序还要再完善一下。如果递归程序不返回值&amp;#xff0c;则需要有一个全局变量记录计算二进制的结果&amp;#xff0c;所以列表应该拿出来作为全局变量。下面写法供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; bin1(x):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        list1.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        bin1(x&lt;span class=\"hljs-comment\"&gt;//2)&lt;/span&gt;\n        list1.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(x%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\nnum &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(input(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个十进制数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\nlist1 &amp;#61; []\nbin1(num)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(num,&lt;span class=\"hljs-string\"&gt;&amp;#39;--&amp;gt;&amp;#39;&lt;/span&gt;,list1)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["用递归算法把十进制转换为二进制", ["问题遇到的现象和发生背景", "\n", "用递归算法把十进制转换为二进制", "\n", "问题相关代码，请勿粘贴截图", "\n", "这是正确答案", "def Bin(n):", "    temp = ''", "    if n:", "        temp = Bin(n//2)", "        temp += str(n%2)", "        return temp", "    else:", "        return temp", "num = int(input('请输入一个十进制数：'))", "print(num,'-->',Bin(num))", "\n", "运行结果及报错内容", "\n", "不明白的点有几个：", "1.是不是递归算法结果一定要用return返回", "2.按它的思路走，一个数（比如89）进去后，进入if，那么进行第一步，调用本身的函数，然后又返回调用，此时它还是89，在往回调用不是死机了吗，怎么会往下跑呢", "3.它从头到尾就是用了一个变量，我不明白，我觉得至少要两个变量，一个用来记录除以2后的余数，一个用记录用floor除法后的得到的结果（这个变量我觉得可以用本身的变量覆盖）", "\n", "我的解答思路和尝试过的方法", "\n", "这是我根据CSDN上某一位博主的递归思路自己写的，写到把他抽象成一个个逻辑相同的简单问题时，卡主了，因为我觉得要用两个变量（也就是写else表达式的那一步）：", "\n", "#用递归编写bin函数：", "#终止时刻：除数是1", "#简单条件：除数是1是返回值1", "#重复逻辑：除数除以2，记录余数，添加到列表，取floor除法的结果再除2", "def bin1(x):", "    #从结果倒推", "    #先创建一个列表，把余数都添加到列表里", "    list1 = []", "    if x == 1:", "        list1.append(1)", "    else:", "        list1.append()", "\n", "print", "(list1)", "\n", "\n", "bin1(89)", "\n", "#89  1011001", "\n", "我想要达到的结果", "\n", "我就想知道我的思路能不能实现题目的要求，还有这个答案真没看明白"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/pkxwyf/article/details/105532025", "Konwledge_Point": "条件表达式", "Question": ["Spring cloud gateway中限流时如何针对不同的路由设置不同的限流方案", ["官方文档上支持根据ip、用户、rul限流，但是在官方提供的配置方案中，不同的路由规则只能配置相同的限流方案，比如，要么都是ip限流，要么都是用户限流（在程序中无法初始化多个相同的限流bean，如下代码，一个类中只能有一个KeyResolver的bean）", "\n\n", "@Configuration\npublic class RedisRateLimiterConfig\n{\n    /**\n     * 针对ip限流\n     * \n     * @return\n     */\n    @Bean\n    public KeyResolver ipKeyResolver()\n    {\n        return exchange -> Mono.just(exchange.getRequest().getHeaders().getFirst(\"X-Forwarded-For\"));\n    }\n\n    /**\n     * 按照Path限流\n     *\n     * @return key\n     */\n    // @Bean\n    // public KeyResolver pathKeyResolver()\n    // {\n    // return exchange -> Mono.just(exchange.getRequest().getPath().toString());\n    // }\n\n    /**\n     * 针对用户限流\n     *\n     * @return\n     */\n    // @Bean\n    // public KeyResolver userKeyResolver()\n    // {\n    // return exchange -> Mono.just(exchange.getRequest().getQueryParams().getFirst(\"user\"));\n    // }\n\n}\n", "\n\n", "配置文件如下：", "\n\n", "routes:\n      # 路由标识（id：标识，具有唯一性）   限流\n      - id: route_requestRateLimiter\n        # 目标服务地址（uri：地址，请求转发后的地址）\n        uri: lb://bobfintech-userservice\n        # 路由条件（predicates：断言，匹配 HTTP 请求内容）\n        predicates:\n        ## 匹配 GET 请求\n        - Method=GET\n        # 过滤器（filters：过滤器，过滤规则）\n        filters:\n        ## 添加指定参数\n        - AddRequestParameter=age, three\n        ## 限流\n        - name: RequestRateLimiter   #name必须为这个Filter\n          args:\n            ### 限流过滤器的 Bean 名称，使用SpEL表达式从Spring容器中获取Bean对象\n            key-resolver: '#{@ipKeyResolver}'\n            ### 希望允许用户每秒处理多少个请求,也就是令牌桶每秒填充平均速率\n            redis-rate-limiter.replenishRate: 1\n            ### 用户允许在一秒钟内完成的最大请求数，令牌桶的上限\n            redis-rate-limiter.burstCapacity: 3\n", "\n\n", "那么问题来了，在实际的企业开发中，不可能所有的路由都只用一种限流方式，那么，该如何配置，才能实现不同的路由使用不同的限流方案呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n#include&amp;lt;stdio.&lt;span class=\"hljs-property\"&gt;h&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;judgeyear&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;) {\n  &lt;span class=\"hljs-comment\"&gt;/*此函数的功能为判断一个年份year&amp;#xff08;整数&amp;#xff09;是不是闰年&amp;#xff0c;闰年返回1&amp;#xff0c;否则返回0\n  先假设所有的年份都是平年&amp;#xff0c;然后判断是否满足闰年的条件&amp;#xff0c;若满足&amp;#xff0c;修改返回值*/&lt;/span&gt;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//平年返回0&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) || &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;/*请填写一个表达式&amp;#xff0c;闰年是能被400整除&amp;#xff0c;或者能被4整除且不能被100整除*/&lt;/span&gt;\n    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//闰年返回1&amp;#xff0c;请填写一行代码&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; flag;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;() {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; days[] &amp;#61; { &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; };\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag_1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//1合法&amp;#xff0c;2非法&lt;/span&gt;\n  &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;);\n  &lt;span class=\"hljs-comment\"&gt;//判断输入的合法性&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//日&amp;#xff0c;月&amp;#xff0c;年的几种非法情况&lt;/span&gt;\n    flag_1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//非法&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-title function_\"&gt;judgeyear&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;)) days[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt; &amp;gt; days[&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]) flag_1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag_1 &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) \n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;);\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;  \n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no&amp;#34;&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["数据测试有一个错的，求指正", ["题目：", "日期合法性判断(if-else结构", "思路：1)先假设所有的日期都是合法的", "\n", "  ", "2", ")下面考虑非法日期的几种情况\n\n              ", "2", ".", "1", "）日>", "31", " 或 日<", "1", " 或 月>", "12", " 或 月<", "1", " 或 年<", "0", "     非法\n\n             ", "2", ".", "2", "）日=", "31", " 且 月是“小月”，如", "2", "，", "4", "。。。   非法\n\n              ", "2", ".", "3", "）日=", "30", " 且 月是“二月”     非法\n\n              ", "2", ".", "4", "）对“二月”而言，平年超过", "28", "，闰年超过", "29", "，都是非法的\n", "\n", "#include<stdio.", "h", ">\n", "int", " ", "judgeyear", "(", "int", " ", "year", "){\n", "/*此函数的功能为判断一个年份year（整数）是不是闰年，闰年返回1，否则返回0\n先假设所有的年份都是平年，然后判断是否满足闰年的条件，若满足，修改返回值*/", "\n    ", "int", " flag=", "0", ";", "//平年返回0", "\n    ", "if", " ((", "year", "%", "4", "==", "0", "&&", "year", "%", "100", "!=", "0", ")&&", "year", "%", "400", "==", "0", ")", "/*请填写一个表达式，闰年是能被400整除，或者能被4整除且不能被100整除*/", "\n           flag=", "1", ";", "//闰年返回1，请填写一行代码", "\n    ", "return", " flag;\n}\n", "int", " ", "main", "(){\n    ", "int", " ", "year", ",", "month", ",", "day", ",flag;\n    ", "int", " flag_1=", "1", "; ", "//1合法，2非法", "\n    ", "scanf", "(", "\"%d%d%d\"", ",&", "year", ",&", "month", ",&", "day", ");\n    ", "//判断输入的合法性", "\n    ", "if", "(", "day", ">", "31", "||", "day", "<", "1", "||", "month", ">", "12", "||", "month", "<", "0", "||", "year", "<", "0", " )", "//日，月，年的几种非法情况", "\n           flag_1=", "0", ";", "//非法", "\n    ", "else", " ", "if", "(", "day", "==", "31", "&&(", "month", "==", "2", "||", "month", "==", "4", "||", "month", "==", "6", "||", "month", "==", "9", "||", "month", "==", "11", "))\n", "//考虑“非大月”但又31日的非法情况", "\n           flag_1=", "0", ";\n    ", "else", " ", "if", "(", "day", "==", "30", "&&(", "month", "==", "1", "||", "month", "==", "2", "||", "month", "==", "3", "||", "month", "==", "5", "||", "month", "==", "7", "||", "month", "==", "8", "||", "month", "==", "10", "||", "month", "==", "12", "))", "//考虑非小月但又30日的非法情况", "\n           flag_1=", "0", ";\n    ", "else", " ", "if", "(", "month", "==", "2", "){\n          ", "if", "(flag==", "0", "&&", "day", ">", "28", ")\n              flag_1=", "0", ";\n          ", "else", " ", "if", "(flag==", "1", "&&", "day", ">", "29", ")\n              flag_1=", "0", ";\n", "//考虑2月的情况，请填写多行代码，平年超过28，闰年超过29，都是非法的", "\n    }\n    ", "if", "(flag_1==", "1", ")  ", "printf", "(", "\"yes\"", ");\n    ", "else", "        ", "printf", "(", "\"no\"", ");\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;好吧&amp;#xff0c;换了python37可以跑&amp;#xff0c;老版本需要手动引入。&lt;br /&gt;你的r作为全局变量&amp;#xff0c;赋值只操作了一次&amp;#xff0c;后续每次test送入的range1,anchors都是不会变动值的变量&amp;#xff0c;全是固定值的变量&amp;#xff0c;结果当然都一样。。。&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["如何让一个函数循环执行100次生成不同的结果并存入列表？", ["如图，我想让这个程序运行100次，并把100次定位的结果存到列表中以进行数据分析，请大神帮忙看看怎么弄！", "我当前的代码只能打印出一百个相同的结果，不知道为什么！", "\n", "\n", "import", " numpy ", "as", " np\n", "import", " matplotlib.pyplot ", "as", " plt\n", "from", " scipy.optimize ", "import", " minimize\n", "import", " numpy ", "as", " np\n", "from", " math ", "import", " *\n", "import", " matplotlib.pyplot ", "as", " plt\n", "from", " scipy.optimize ", "import", " minimize\n", "from", " numpy ", "import", " *\n", "from", " numpy.linalg ", "import", " inv, qr\n\nNoise = ", "1", "        ", "#噪声方差", "\na = random.random(", "3", ")\nr = np.zeros(", "3", ")\n", "for", " i ", "in", " ", "range", "(", "0", ",", "3", "):\n    r[i]=", "2", "*a[i]-", "1", "                                   ", "#随机生成一个-1到1的数", "\n\n", "def", " ", "opt_location", "(", "range1, anchors", "):               ", "#range1是真实测得的toa", "\n\n    ", "def", " ", "con", "():\n        ", "# 约束条件 分为eq 和ineq", "\n        ", "# eq表示 函数结果等于0 ； ineq 表示 表达式大于等于0", "\n        x1min, x1max, x2min, x2max = -", "5", ", ", "15", ", -", "5", ", ", "15", "\n        cons = ({", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "0", "] - x1min},              ", "#x[0]-x1min >= 0", "\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "0", "] + x1max},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "1", "] - x2min},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "1", "] + x2max})\n        ", "return", " cons                ", "# ", "\n\n    ", "def", " ", "cost", "(", "pos", "):", "#***************", "\n        ref = np.sqrt(np.", "sum", "((anchors-pos.reshape(", "1", ",", "2", "))**", "2", ", axis=", "1", "))         ", "#anchors为四个基站的位置，pos为要优化的位置", "\n        ref0 = ref[", "1", ":] - ref[", "0", "]\n        ref1 = ref[", "2", ":] - ref[", "1", "]\n        ref2 = ref[", "3", ":] - ref[", "2", "]                            ", "#tdoa", "\n        Ri_0 = range1[", "1", ":] - range1[", "0", "] + ", "3", "*Noise*r[", "0", "]\n        Ri_1 = range1[", "2", ":] - range1[", "1", "] + ", "2", "*Noise*r[", "1", "]               \n        Ri_2 = range1[", "3", ":] - range1[", "2", "] + Noise*r[", "2", "]                       ", "#真实测得的tdoa", "\n        ", "return", " np.", "sum", "((Ri_0 - ref0)**", "2", ") + np.", "sum", "((Ri_1 - ref1)**", "2", ") + np.", "sum", "((Ri_2 - ref2)**", "2", ")    ", "#目标函数的目的是要求所估计位置和各基站的tdoa", "\n                                                                                                  ", "#和真实测得的tdoa相差最小", "\n\n    x0 = np.array([", "5", ", ", "5", "])\n    res = minimize(cost, x0, constraints=con()).x\n    ", "return", " res\n", "def", " ", "test", "():\n    ", "#pos = np.array([0,4])", "\n    z = opt_location(range1, anchors)\n    ", "return", " z\n    \nanchors = np.array([[", "0", ",", "0", "],[", "0", ",", "10", "],[", "10", ",", "10", "],[", "10", ",", "0", "]])\n", "#range = np.array([7.07106781,7.07106781,7.07106781,7.07106781])", "\nrangetoa = np.array([", "0.00000002358654336", " , ", "0.00000002358654336", " ,", "0.00000002358654336", " ,", "0.00000002358654336", "])  ", "#移动台为5 5的toa", "\n", "#rangetoa = np.array([0.00000001886923469 , 0.00000002405364897,0.00000002830385204 ,0.00000002405364897])#移动台为4 4 的toa", "\nrangetoa = np.array([", "0.00000002540348465", ", ", "0.00000001415192602", ",", "0.00000002540348465", " ,", "0.00000003302116071", "])", "#移动台为3 7 的toa", "\n", "#rangetoa = np.array([0.00000002028991179, 0.00000001375319997,0.00000003285225341 ,0.00000003608047346])  #移动台为1 6的toa", "\nrange1 = rangetoa * ", "299792458", "\n\nposition = np.zeros((", "100", ",", "2", "),dtype = ", "float", ")\n", "for", " i ", "in", " ", "range", " (", "0", ",", "100", "):\n    position[i] = test()\n    \n", "print", "(position)\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这里的分号去掉&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/909188465676154.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["注册界面有误怎么修改？(语言-java)", ["这个是注册界面", "\n", "package page;\n\nimport java.awt.EventQueue;\n\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JOptionPane;\nimport javax.swing.ImageIcon;\nimport javax.swing.SwingConstants;\n\nimport Dao.UserDao;\nimport Dao.UserDao2;\nimport Model.User;\n\nimport java.awt.Font;\nimport java.awt.Image;\n\nimport javax.swing.JTextField;\nimport javax.swing.JButton;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ActionEvent;\nimport java.awt.Toolkit;\n\npublic ", "class", " Register {\n\n    ", "private", " JFrame frame;\n    ", "private", " JTextField username;\n    ", "private", " JTextField password;\n    ", "private", " JTextField password_c;\n    ", "private", " JLabel lblNewLabel;\n\n    ", "/**\n     * Launch the application.\n     */", "\n    public static void main(String", "[]", " args) {\n        ", "EventQueue", ".", "invoke", "Later(", "new", " Runnable()", " {\n            public void run", "()", " {\n                ", "try", " {\n                    Register window = ", "new", " ", "Register()", ";\n                    window.frame.set", "Visible(", "true", ")", ";\n                } catch (Exception e) {\n                    e.print", "StackTrace()", ";\n                }\n            }\n        });\n    }\n\n    ", "/**\n     * Create the application.\n     */", "\n    public ", "Register()", " {\n        initialize", "()", ";\n        ", "//让窗口显示", "\n        frame.set", "Visible(", "true", ")", ";\n        \n    }\n\n    ", "/**\n     * Initialize the contents of the frame.\n     */", "\n    ", "private", " void initialize", "()", " {\n        frame = ", "new", " ", "JFrame()", ";\n        frame.set", "Title(", "\"\\u6CE8\\u518C\\u9875\\u9762\"", ")", ";\n        frame.set", "IconImage(Toolkit.", "getDefaultToolkit", "()", ".get", "Image(Register.", "class", ".", "getResource", "(", "\"/image/background1.png\"", ")", "));\n        frame.set", "Bounds(100, 100, 599, 448)", ";\n        frame.set", "DefaultCloseOperation(JFrame.EXIT_ON_CLOSE)", ";\n        frame.get", "ContentPane()", ".set", "Layout(", "null", ")", ";\n        \n        \n        JLabel lblNewLabel_1 = ", "new", " ", "JLabel(", "\"\\u7528\\u6237\\u540D\"", ")", ";\n        lblNewLabel_1.set", "Font(", "new", " Font(", "\"隶书\"", ", Font.BOLD, 24)", ");\n        lblNewLabel_1.set", "HorizontalAlignment(SwingConstants.CENTER)", ";\n        lblNewLabel_1.set", "Bounds(76, 44, 139, 51)", ";\n        frame.get", "ContentPane()", ".add(lblNewLabel_1);\n        \n        username = ", "new", " ", "JTextField()", ";\n        username.set", "Bounds(252, 48, 252, 51)", ";\n        frame.get", "ContentPane()", ".add(username);\n        username.set", "Columns(10)", ";\n        \n        JLabel label = ", "new", " ", "JLabel(", "\"\\u5BC6  \\u7801\"", ")", ";\n        label.set", "HorizontalAlignment(SwingConstants.CENTER)", ";\n        label.set", "Font(", "new", " Font(", "\"隶书\"", ", Font.BOLD, 24)", ");\n        label.set", "Bounds(76, 105, 139, 51)", ";\n        frame.get", "ContentPane()", ".add(label);\n        \n        password = ", "new", " ", "JTextField()", ";\n        password.set", "Columns(10)", ";\n        password.set", "Bounds(252, 109, 252, 51)", ";\n        frame.get", "ContentPane()", ".add(password);\n        \n        JLabel label_1 = ", "new", " ", "JLabel(", "\"\\u786E\\u8BA4\\u5BC6\\u7801\"", ")", ";\n        label_1.set", "HorizontalAlignment(SwingConstants.CENTER)", ";\n        label_1.set", "Font(", "new", " Font(", "\"隶书\"", ", Font.BOLD, 24)", ");\n        label_1.set", "Bounds(76, 175, 139, 51)", ";\n        frame.get", "ContentPane()", ".add(label_1);\n        \n        password_c = ", "new", " ", "JTextField()", ";\n        password_c.set", "Columns(10)", ";\n        password_c.set", "Bounds(252, 170, 252, 51)", ";\n        frame.get", "ContentPane()", ".add(password_c);\n        \n        JButton btnNewButton = ", "new", " ", "JButton(", "\"\\u6CE8  \\u518C\"", ")", ";\n        btnNewButton.add", "ActionListener(", "new", " ActionListener()", " {\n            public void action", "Performed(ActionEvent ", "arg0", ")", " {\n            ", "//获取密码框和确认密码框，看是否相同", "\n                String password_v = password.get", "Text()", ";\n                String password_c_v = password_c.get", "Text()", ";\n                ", "if", "(password_v.equals(password_c_v));{\n                ", "//弹出框，提示用户输入的两次密码不相等", "\n                ", "JOptionPane", ".", "show", "MessageDialog(", "null", ",", "\"两次输入密码不相同\"", ")", ";\n                return;\n            } \n", "//【下面这一行是报错的地方】", "\n                String username_v = username.get", "Text()", ";  \n                \n                ", "int", " id = ", "new", " ", "UserDao2()", ".get", "MaxId()", ";        \n                ", "//将参数拼接成对象", "\n                User u = ", "new", " ", "User(", "id", "+1,", "username_v", ",", "password_v", ")", ";\n                ", "//执行插入操作", "\n                boolean f = ", "new", " ", "UserDao2()", ".insert(u);\n                ", "if", "(f) {\n                    ", "JOptionPane", ".", "show", "MessageDialog(", "null", ",", "\"插入数据成功\"", ")", ";\n                    ", "//让注册窗口消失", "\n                    frame.set", "Visible(", "false", ")", ";\n                }\n                ", "else", " {\n                    ", "JOptionPane", ".", "show", "MessageDialog(", "null", ",", "\"插入数据失败\"", ")", ";\n                }\n        \n                \n            }\n        });\n        btnNewButton.set", "Font(", "new", " Font(", "\"隶书\"", ", Font.BOLD, 25)", ");\n        btnNewButton.set", "Bounds(288, 244, 178, 51)", ";\n        frame.get", "ContentPane()", ".add(btnNewButton);\n        \n        lblNewLabel = ", "new", " ", "JLabel(", "\"New label\"", ")", ";\n        lblNewLabel.set", "Icon(", "new", " ImageIcon(Register.", "class", ".", "getResource", "(", "\"/image/background1.png\"", ")", "));\n        lblNewLabel.set", "Bounds(10, 10, 561, 388)", ";\n        frame.get", "ContentPane()", ".add(lblNewLabel);\n    }\n}\n\n", "\n", "\n", "这里是把数据库的数据导入", "\n", "package Dao;\nimport java.sql.*;\nimport java.util.ArrayList;\n\nimport Model.User;\nimport Model.User2;\nimport utility.DBHelper;\npublic ", "class", " UserDao2 {\n    ", "private", " Connection conn;", "//数据库连接对象", "\n    String sql ;", "//定义SQL语句", "\n    PreparedStatement ps;", "//预处理表达式对象", "\n    ResultSet rs;", "//查询语句执行后返回的结果集合", "\n    public ", "UserDao2()", " {\n        super", "()", ";\n        ", "// TODO Auto-generated constructor stub", "\n        ", "//初始化数据库连接对象", "\n        conn = ", "DBHelper", ".", "get", "Connection()", ";\n    }\n    \n    ", "//定义方法，执行SQL语句，并处理数据库返回的内容", "\n    public ArrayList get", "All()", " {\n        ", "//定义一个无条件查询的SQL语句", "\n        sql = ", "\"delect * from tb_user2 \"", ";\n        ", "//初始化一个容器类数组列表", "\n        ArrayList ", "list", " = ", "new", " ", "ArrayList()", ";\n        ", "//产生一个可以执行SQL语句预处理表达式对象", "\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ", "//让预处理表达式对象执行查询语句", "\n            rs = ps.execute", "Query()", ";\n\n\n            ", "//逐行逐字段的拆开结果中的内容", "\n            ", "while", " (rs.next", "()", ") {\n            ", "//拆分结果集中的某一行", "\n            ", "int", " id = rs.get", "Int(", "\"id\"", ")", ";\n            String username = rs.get", "String(", "\"username\"", ")", ";\n            String password = rs.get", "String(", "\"password\"", ")", ";\n            ", "//将一行数据库的多个字段的值打包放入一个对象当中", "\n            User u = ", "new", " ", "User(", "id", ",", "username", ",", "password", ")", ";\n            ", "//用一个容器将每次产生的对象保存起来", "\n            ", "list", ".add(u);\n        }\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        \n        return ", "list", ";\n    } \n    ", "//定义插入语句", "\n    public boolean insert(User u) {\n        sql = ", "\"insert into tb_user2(id,username,password) valuse(?,?,?)\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "Int(1, ", "u", ".", "getId", "()", ");\n            ps.set", "String(2, ", "u", ".", "getUsername", "()", ");\n            ps.set", "String(2, ", "u", ".", "getPassword", "()", ");\n            ", "//执行插入语句", "\n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "true", ";\n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义删除语句", "\n    public boolean delete(", "int", " id) {\n        sql = ", "\"delect from tb_user2 where id=?\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "Int(1,", "id", ")", ";\n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "false", ";\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义一个修改语句", "\n    public boolean update(User2 u) {\n        sql = ", "\"update tb-user set number=?,category=?,price=?,chandi=? where id=?\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "String(1, ", "u", ".", "getUsername", "()", ");\n            ps.set", "String(1, ", "u", ".", "getPassword", "()", ");\n            \n            ", "//设置后面两个参数的值", "\n            ps.set", "Int(2, ", "u", ".", "getId", "()", ");\n            ps.set", "String(2, ", "u", ".", "getUsername", "()", ");\n            ps.set", "String(1, ", "u", ".", "getPassword", "()", ");\n        \n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "true", ";\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义按条件查询的SQL语句", "\n    public ArrayList get", "Users(String ", "column", ",String ", "value", ")", " {\n        sql = ", "\"selsect * from tb_user where \"", "+column+", "\" like '%\"", "+value+", "\"%'\"", ";\n        ", "System", ".", "out.println(", "\"sql:\"", "+sql);\n        ArrayList ", "list", " = ", "new", " ", "ArrayList()", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            rs = ps.execute", "Query()", ";\n            \n            ", "//逐行逐字段的拆开结果中的内容", "\n            ", "while", " (rs.next", "()", ") {\n            ", "//拆分结果集中的某一行", "\n            ", "int", " id = rs.get", "Int(", "\"id\"", ")", ";\n            String username = rs.get", "String(", "\"username\"", ")", ";\n            String password = rs.get", "String(", "\"password\"", ")", ";\n            \n            ", "//将一行数据库的多个字段的值打包放入一个对象当中", "\n            User u = ", "new", " ", "User(", "id", ",", "username", ",", "password", ")", ";\n            ", "//用一个容器将每次产生的对象保存起来", "\n            ", "list", ".add(u);\n        }\n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "list", ";\n    }\n    ", "//获取该表最大的id值", "\n    public ", "int", " get", "MaxId()", " {\n        sql = ", "\"select max(id) as id from tb_user2\"", ";\n        ", "//获取一个可以执行SQL语句的对象", "\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ", "//执行SQL语句", "\n            rs = ps.execute", "Query()", ";\n            ", "if", "(rs.next", "()", ") {\n                return rs.get", "Int(", "\"id\"", ")", "+", "1", ";\n            }\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "1", ";\n    }\n    ", "//根据用户名和密码判断登录是否成功", "\n    public boolean login(String username,String password) {\n    sql = ", "\"select * from tb_user2 where username=? and password=?\"", ";\n    ", "try", " {\n        ps = conn.prepare", "Statement(", "sql", ")", ";\n        ", "//设置问号里面的参数", "\n        ps.set", "String(1, ", "username", ")", ";\n        ps.set", "String(2, ", "password", ")", ";\n        rs = ps.execute", "Query()", ";\n        ", "if", "(rs.next", "()", ")return ", "true", ";\n        \n        \n    } catch (SQLException e) {\n        ", "// TODO Auto-generated catch block", "\n        e.print", "StackTrace()", ";\n    }\n       return ", "false", "; \n    }\n}\n\n", "\n", "这是数据库的数据", "\n", "这是注册页面的图片", "\n", "请问我报错的地方该怎么修改"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的数据库链接写错了&amp;#xff0c;开头应该是jdbc而不是java&amp;#xff0c; 另外端口号那里要用冒号而不是分号&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;conn&lt;/span&gt; &amp;#61; DriverManager.getConnection(&lt;span class=\"hljs-string\"&gt;&amp;#34;jdbc:mysql://192.168.1.4:3306/2_test&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;root&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;123456&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "条件表达式", "Question": ["图片中的错误怎么修改？", ["我运行Main页面，运行失败，提示了六个错误，但是六个错误里没有标红，所以我不清楚是哪一个部分出现了错误，求帮助，谢谢。", "\n", "\n", "package", " utility;\n", "import", " java.sql.*;\n\n", "public", " ", "class", " ", "DBHelper", " {\n    ", "//设置一个整体程序只能唯一获取到单列数据库连接对象", "\n        ", "private", " ", "static", " ", "Connection", " ", "conn", " ", "=", "null", " ;\n        ", "public", " ", "static", " Connection ", "getConnection", "()", " {\n            ", "//将驱动类加载到内容当中", "\n            ", "try", " {\n                Class.forName(", "\"com.mysql.jdbc.Driver\"", ");\n                ", "//通过驱动管理器类获取一个数据库连接对象", "\n                ", "if", "(conn==", "null", ")\n                conn = DriverManager.getConnection(", "\"java:mysql://192.168.1.4;33062_test\"", ",", "\"root\"", ",", "\"123456\"", ");\n            ", "return", " conn;\n            } ", "catch", " (ClassNotFoundException e) {\n                ", "// TODO Auto-generated catch block", "\n                e.printStackTrace();\n            } ", "catch", " (SQLException e) {\n                ", "// TODO Auto-generated catch block", "\n                e.printStackTrace();\n            }\n            ", "return", " conn;\n}\n}\n", "\n", "import java.sql.*;\nimport java.util.ArrayList;\n\nimport Model.User;\nimport utility.DBHelper;\npublic ", "class", " UserDao {\n    ", "private", " Connection conn;", "//数据库连接对象", "\n    String sql ;", "//定义SQL语句", "\n    PreparedStatement ps;", "//预处理表达式对象", "\n    ResultSet rs;", "//查询语句执行后返回的结果集合", "\n    public ", "UserDao()", " {\n        super", "()", ";\n        ", "// TODO Auto-generated constructor stub", "\n        ", "//初始化数据库连接对象", "\n        conn = ", "DBHelper", ".", "get", "Connection()", ";\n    }\n    \n    ", "//定义方法，执行SQL语句，并处理数据库返回的内容", "\n    public ArrayList get", "All()", " {\n        ", "//定义一个无条件查询的SQL语句", "\n        sql = ", "\"delect * from tb_user \"", ";\n        ", "//初始化一个容器类数组列表", "\n        ArrayList ", "list", " = ", "new", " ", "ArrayList()", ";\n        ", "//产生一个可以执行SQL语句预处理表达式对象", "\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ", "//让预处理表达式对象执行查询语句", "\n            rs = ps.execute", "Query()", ";\n\n\n            ", "//逐行逐字段的拆开结果中的内容", "\n            ", "while", " (rs.next", "()", ") {\n            ", "//拆分结果集中的某一行", "\n            ", "int", " id = rs.get", "Int(", "\"id\"", ")", ";\n            String number = rs.get", "String(", "\"number\"", ")", ";\n            String category = rs.get", "String(", "\"category\"", ")", ";\n            String price = rs.get", "String(", "\"price\"", ")", ";\n            String chandi = rs.get", "String(", "\"chandi\"", ")", ";\n            ", "//将一行数据库的多个字段的值打包放入一个对象当中", "\n            User u = ", "new", " ", "User(", "id", ",", "number", ",", "category", ",", "price", ",", "chandi", ")", ";\n            ", "//用一个容器将每次产生的对象保存起来", "\n            ", "list", ".add(u);\n        }\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        \n        return ", "list", ";\n    } \n    ", "//定义插入语句", "\n    public boolean insert(User u) {\n        sql = ", "\"insert into tb_user(id,number,category,price,chandi) valuse(?,?,?,?,?)\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "Int(1, ", "u", ".", "getId", "()", ");\n            ps.set", "String(2, ", "u", ".", "getNumber", "()", ");\n            ps.set", "String(2, ", "u", ".", "getCategory", "()", ");\n            ps.set", "String(2, ", "u", ".", "getPrice", "()", ");\n            ps.set", "String(2, ", "u", ".", "getChandi", "()", ");\n            ", "//执行插入语句", "\n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "true", ";\n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义删除语句", "\n    public boolean delete(", "int", " id) {\n        sql = ", "\"delect from tb_user where id=?\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "Int(1,", "id", ")", ";\n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "false", ";\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义一个修改语句", "\n    public boolean update(User u) {\n        sql = ", "\"update tb-user set number=?,category=?,price=?,chandi=? where id=?\"", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ps.set", "String(1, ", "u", ".", "getNumber", "()", ");\n            ps.set", "String(1, ", "u", ".", "getCategory", "()", ");\n            ps.set", "String(1, ", "u", ".", "getPrice", "()", ");\n            ps.set", "String(1, ", "u", ".", "getChandi", "()", ");\n            ", "int", " i = ps.execute", "Update()", ";\n            ", "if", "(i>", "0", ") return ", "true", ";\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "false", ";\n    }\n    ", "//定义按条件查询的SQL语句", "\n    public ArrayList get", "Users(String ", "column", ",String ", "value", ")", " {\n        sql = ", "\"selsect * from tb_user where \"", "+column+", "\" = \"", "+value;\n        ArrayList ", "list", " = ", "new", " ", "ArrayList()", ";\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            rs = ps.execute", "Query()", ";\n            \n            ", "//逐行逐字段的拆开结果中的内容", "\n            ", "while", " (rs.next", "()", ") {\n            ", "//拆分结果集中的某一行", "\n            ", "int", " id = rs.get", "Int(", "\"id\"", ")", ";\n            String number = rs.get", "String(", "\"number\"", ")", ";\n            String category = rs.get", "String(", "\"category\"", ")", ";\n            String price = rs.get", "String(", "\"price\"", ")", ";\n            String chandi = rs.get", "String(", "\"chandi\"", ")", ";\n            ", "//将一行数据库的多个字段的值打包放入一个对象当中", "\n            User u = ", "new", " ", "User(", "id", ",", "number", ",", "category", ",", "price", ",", "chandi", ")", ";\n            ", "//用一个容器将每次产生的对象保存起来", "\n            ", "list", ".add(u);\n        }\n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "list", ";\n    }\n    ", "//获取该表最大的id值", "\n    public ", "int", " get", "MaxId()", " {\n        sql = ", "\"select max(id) as id from tb_user\"", ";\n        ", "//获取一个可以执行SQL语句的对象", "\n        ", "try", " {\n            ps = conn.prepare", "Statement(", "sql", ")", ";\n            ", "//执行SQL语句", "\n            rs = ps.execute", "Query()", ";\n            ", "if", "(rs.next", "()", ") {\n                return rs.get", "Int(", "\"id\"", ")", ";\n            }\n            \n        } catch (SQLException e) {\n            ", "// TODO Auto-generated catch block", "\n            e.print", "StackTrace()", ";\n        }\n        return ", "0", ";\n    }\n    ", "//根据用户名和密码判断登录是否成功", "\n    public boolean login(String username,String password) {\n    sql = ", "\"select * from tb_user where username=? and password=?\"", ";\n    ", "try", " {\n        ps = conn.prepare", "Statement(", "sql", ")", ";\n        ", "//设置问号里面的参数", "\n        ps.set", "String(1, ", "username", ")", ";\n        ps.set", "String(2, ", "password", ")", ";\n        rs = ps.execute", "Query()", ";\n        ", "if", "(rs.next", "()", ")return ", "true", ";\n        \n        \n    } catch (SQLException e) {\n        ", "// TODO Auto-generated catch block", "\n        e.print", "StackTrace()", ";\n    }\n       return ", "false", "; \n    }\n}\n", "\n", "package", " service;\n\n", "import", " java.util.ArrayList;\n\n", "import", " javax.swing.JTable;\n", "import", " javax.swing.table.DefaultTableModel;\n\n", "import", " Dao.UserDao;\n", "import", " Model.User;\n\n", "public", " ", "class", " ", "UserService", " {\n     ", "private", " UserDao ud;\n\n    ", "public", " ", "UserService", "()", " {\n        ", "super", "();\n        ", "// TODO Auto-generated constructor stub", "\n        ud = ", "new", " ", "UserDao", "();\n    }\n     ", "//将数据库的所有记录都写入一个JTanle表格控件中", "\n    ", "public", " ", "boolean", " ", "fillAll", "(JTable table)", " {\n        ", "//返回数据库当中用户表的所有记录", "\n        ", "ArrayList", " ", "list", " ", "=", " ud.getAll();\n        ", "//准备表格的表头数据", "\n        String[] head = {", "\"id\"", ",", "\"number\"", ",", "\"category\"", ",", "\"price\"", ",", "\"chandi\"", "};\n        ", "//准备表格的内容，一个二维数组", "\n        String[][] content=", "new", " ", "String", " [list.size()][", "5", "];\n        ", "for", "(", "int", " i=", "0", ";i<list.size();i++) {\n            ", "//将数组列表中的数据记录对象取出来", "\n            ", "User", " ", "u", " ", "=", " (User)list.get(i);\n            ", "//拆开字段", "\n            ", "int", " ", "id", " ", "=", " u.getId();\n            ", "String", " ", "number", " ", "=", " u.getNumber();\n            ", "String", " ", "category", " ", "=", " u.getCategory();\n            ", "String", " ", "price", " ", "=", " u.getPrice();\n            ", "String", " ", "chandi", " ", "=", " u.getChandi();\n            content[i][", "0", "] = id+", "\"\"", ";\n            content[i][", "1", "] =number;\n            content[i][", "2", "] =category;\n            content[i][", "3", "] =price;\n            content[i][", "4", "] =chandi;\n        }\n        ", "//创建数据模型对象，准备植入到表格中", "\n        ", "DefaultTableModel", " ", "model", " ", "=", " ", "new", " ", "DefaultTableModel", "(content,head);\n        ", "//将模型填入表格", "\n        table.setModel(model);\n        ", "return", " ", "true", ";\n    }\n    ", "//返回部分记录", "\n    ", "//将数据库的所有记录都写入一个JTanle表格控件中", "\n        ", "public", " ", "boolean", " ", "fillSome", "(JTable table,String column,String value)", " {\n            ", "//返回数据库当中用户表的所有记录", "\n            ", "ArrayList", " ", "list", " ", "=", " ud.getUsers(column,value);\n            ", "//准备表格的表头数据", "\n            String[] head = {", "\"id\"", ",", "\"number\"", ",", "\"category\"", ",", "\"price\"", ",", "\"chandi\"", "};\n            ", "//准备表格的内容，一个二维数组", "\n            String[][] content=", "new", " ", "String", " [list.size()][", "5", "];\n            ", "for", "(", "int", " i=", "0", ";i<list.size();i++) {\n                ", "//将数组列表中的数据记录对象取出来", "\n                ", "User", " ", "u", " ", "=", " (User)list.get(i);\n                ", "//拆开字段", "\n                ", "int", " ", "id", " ", "=", " u.getId();\n                ", "String", " ", "number", " ", "=", " u.getNumber();\n                ", "String", " ", "category", " ", "=", " u.getCategory();\n                ", "String", " ", "price", " ", "=", " u.getPrice();\n                ", "String", " ", "chandi", " ", "=", " u.getChandi();\n                content[i][", "0", "] = id+", "\"\"", ";\n                content[i][", "1", "] =number;\n                content[i][", "2", "] =category;\n                content[i][", "3", "] =price;\n                content[i][", "4", "] =chandi;\n            }\n            ", "//创建数据模型对象，准备植入到表格中", "\n            ", "DefaultTableModel", " ", "model", " ", "=", " ", "new", " ", "DefaultTableModel", "(content,head);\n            ", "//将模型填入表格", "\n            table.setModel(model);\n            ", "return", " ", "true", ";\n        }\n    \n}\n", "\n", "package", " page;\n\n", "import", " java.awt.EventQueue;\n\n", "import", " javax.swing.JFrame;\n", "import", " javax.swing.JInternalFrame;\n", "import", " javax.swing.JTable;\n", "import", " javax.swing.JScrollPane;\n", "import", " javax.swing.table.DefaultTableModel;\n\n", "import", " Dao.UserDao;\n", "import", " Model.User;\n", "import", " service.UserService;\n\n", "import", " javax.swing.JLabel;\n", "import", " javax.swing.JTextField;\n", "import", " javax.swing.JButton;\n", "import", " java.awt.event.ActionListener;\n", "import", " java.awt.event.MouseAdapter;\n", "import", " java.awt.event.ActionEvent;\n\n", "public", " ", "class", " ", "AddPage", " {\n\n    ", "private", " JInternalFrame frame;\n    ", "private", " JTable table;\n    ", "private", " JLabel lblNewLabel;\n    ", "private", " JTextField id;\n    ", "private", " JLabel lblNewLabel_1;\n    ", "private", " JTextField number;\n    ", "private", " JTextField category;\n    ", "private", " JTextField chandi;\n    ", "private", " JTextField price;\n    ", "private", " JLabel label;\n    ", "private", " JLabel label_1;\n    ", "private", " JLabel label_2;\n    \n    ", "public", " JInternalFrame ", "getFrame", "()", " {\n        ", "return", " frame;\n    }\n\n    ", "public", " ", "void", " ", "setFrame", "(JInternalFrame frame)", " {\n        ", "this", ".frame = frame;\n    }\n\n    ", "/**\n     * Launch the application.\n     */", "\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        EventQueue.invokeLater(", "new", " ", "Runnable", "() {\n            ", "public", " ", "void", " ", "run", "()", " {\n                ", "try", " {\n                    ", "AddPage", " ", "window", " ", "=", " ", "new", " ", "AddPage", "();\n                    window.frame.setVisible(", "true", ");\n                } ", "catch", " (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    ", "/**\n     * Create the application.\n     */", "\n    ", "public", " ", "AddPage", "()", " {\n        initialize();\n    }\n\n    ", "/**\n     * Initialize the contents of the frame.\n     */", "\n    ", "private", " ", "void", " ", "initialize", "()", " {\n        frame = ", "new", " ", "JInternalFrame", "();\n        frame.setTitle(", "\"\\u6DFB\\u52A0\\u9875\\u9762\"", ");\n        frame.setBounds(", "0", ", ", "0", ", ", "707", ", ", "430", ");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.getContentPane().setLayout(", "null", ");\n        \n        ", "JScrollPane", " ", "scrollPane", " ", "=", " ", "new", " ", "JScrollPane", "();\n        scrollPane.setBounds(", "10", ", ", "10", ", ", "596", ", ", "96", ");\n        frame.getContentPane().add(scrollPane);\n        \n        table = ", "new", " ", "JTable", "();\n        table.setModel(", "new", " ", "DefaultTableModel", "(\n            ", "new", " ", "Object", "[][] {\n                {", "null", ", ", "null", ", ", "null", ", ", "null", ", ", "null", "},\n                {", "null", ", ", "null", ", ", "null", ", ", "null", ", ", "null", "},\n            },\n            ", "new", " ", "String", "[] {\n                ", "\"id\"", ", ", "\"\\u4EA7\\u54C1\\u7F16\\u53F7\"", ", ", "\"\\u4EA7\\u54C1\\u7C7B\\u522B\"", ", ", "\"\\u4EA7\\u54C1\\u4EF7\\u683C\"", ", ", "\"\\u4EA7\\u5730\"", "\n            }\n        ));\n        \n        ", "//调用数据服务层类UserService往表格填充数据", "\n        ", "new", " ", "UserService", "().fillAll(table);\n        \n        scrollPane.setViewportView(table);\n        \n        lblNewLabel = ", "new", " ", "JLabel", "(", "\"id:\"", ");\n        lblNewLabel.setBounds(", "10", ", ", "123", ", ", "50", ", ", "24", ");\n        frame.getContentPane().add(lblNewLabel);\n        \n        id = ", "new", " ", "JTextField", "();\n        id.setBounds(", "70", ", ", "125", ", ", "126", ", ", "22", ");\n        frame.getContentPane().add(id);\n        id.setColumns(", "10", ");\n        \n        lblNewLabel_1 = ", "new", " ", "JLabel", "(", "\"\\u4EA7\\u54C1\\u7F16\\u53F7\\uFF1A\"", ");\n        lblNewLabel_1.setBounds(", "10", ", ", "162", ", ", "60", ", ", "24", ");\n        frame.getContentPane().add(lblNewLabel_1);\n        \n        number = ", "new", " ", "JTextField", "();\n        number.setBounds(", "70", ", ", "164", ", ", "126", ", ", "22", ");\n        number.setColumns(", "10", ");\n        frame.getContentPane().add(number);\n        \n        category = ", "new", " ", "JTextField", "();\n        category.setBounds(", "70", ", ", "206", ", ", "126", ", ", "22", ");\n        category.setColumns(", "10", ");\n        frame.getContentPane().add(category);\n        \n        chandi = ", "new", " ", "JTextField", "();\n        chandi.setBounds(", "352", ", ", "164", ", ", "126", ", ", "22", ");\n        chandi.setColumns(", "10", ");\n        frame.getContentPane().add(chandi);\n        \n        price = ", "new", " ", "JTextField", "();\n        price.setBounds(", "352", ", ", "125", ", ", "126", ", ", "22", ");\n        price.setColumns(", "10", ");\n        frame.getContentPane().add(price);\n        \n        label = ", "new", " ", "JLabel", "(", "\"\\u4EA7\\u54C1\\u7C7B\\u522B\\uFF1A\"", ");\n        label.setBounds(", "10", ", ", "206", ", ", "60", ", ", "24", ");\n        frame.getContentPane().add(label);\n        \n        label_1 = ", "new", " ", "JLabel", "(", "\"\\u4EA7\\u54C1\\u4EF7\\u683C\\uFF1A\"", ");\n        label_1.setBounds(", "295", ", ", "123", ", ", "60", ", ", "24", ");\n        frame.getContentPane().add(label_1);\n        \n        label_2 = ", "new", " ", "JLabel", "(", "\"\\u4EA7\\u5730\\uFF1A\"", ");\n        label_2.setBounds(", "295", ", ", "162", ", ", "60", ", ", "24", ");\n        frame.getContentPane().add(label_2);\n        \n        ", "JButton", " ", "tianjia", " ", "=", " ", "new", " ", "JButton", "(", "\"\\u6DFB\\u52A0\"", ");\n        tianjia.addMouseListener(", "new", " ", "MouseAdapter", "() {\n            ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent arg0)", " {\n                ", "//获取页面的五个值", "\n                ", "int", " ", "id_v", " ", "=", " Integer.parseInt(id.getText());\n                ", "String", " ", "number_v", " ", "=", " number.getText();\n                ", "String", " ", "category_v", " ", "=", " category.getText();\n                ", "String", " ", "price_v", " ", "=", " price.getText();\n                ", "String", " ", "chandi_v", " ", "=", " chandi.getText();\n                ", "//将五个部分拼接成为一个模型层的类对象", "\n                ", "User", " ", "u", " ", "=", " ", "new", " ", "User", "(id_v,number_v,category_v,price_v,chandi_v);\n                ", "//调用Dao层的insert方法将数据写入数据库", "\n                ", "UserDao", " ", "ud", " ", "=", " ", "new", " ", "UserDao", "();\n                ud.insert(u);\n                ", "//再次调用服务层的fillAll()方法", "\n                ", "UserService", " ", "us", " ", "=", " ", "new", " ", "UserService", "();\n                us.fillAll(table);\n            }\n        });\n        tianjia.setBounds(", "379", ", ", "205", ", ", "82", ", ", "23", ");\n        frame.getContentPane().add(tianjia);\n        ", "//将窗口设置为可见", "\n        frame.setVisible(", "true", ");\n    }\n}\n", "\n", "\n", "package", " page;\n\n", "import", " java.awt.EventQueue;\n\n", "import", " javax.swing.JFrame;\n", "import", " javax.swing.JMenuBar;\n", "import", " javax.swing.JMenu;\n", "import", " javax.swing.JMenuItem;\n", "import", " javax.swing.JDesktopPane;\n", "import", " java.awt.event.ActionListener;\n", "import", " java.awt.event.ActionEvent;\n", "import", " java.awt.BorderLayout;\n", "import", " java.awt.Color;\n", "import", " javax.swing.JTable;\n", "import", " java.awt.SystemColor;\n\n", "public", " ", "class", " ", "MainPage", " {\n\n    ", "private", " JFrame frame;\n    ", "private", " JMenuBar menuBar;\n    ", "private", " JTable table;\n    ", "/**\n     * Launch the application.\n     */", "\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        EventQueue.invokeLater(", "new", " ", "Runnable", "() {\n            ", "public", " ", "void", " ", "run", "()", " {\n                ", "try", " {\n                    ", "MainPage", " ", "window", " ", "=", " ", "new", " ", "MainPage", "();\n                    window.frame.setVisible(", "true", ");\n                } ", "catch", " (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n\n    ", "/**\n     * Create the application.\n     */", "\n    ", "public", " ", "MainPage", "()", " {\n        initialize();\n        frame.setVisible(", "true", ");\n    }\n\n    ", "/**\n     * Initialize the contents of the frame.\n     */", "\n    ", "private", " ", "void", " ", "initialize", "()", " {\n        frame = ", "new", " ", "JFrame", "();\n        frame.setTitle(", "\"\\u4E3B\\u9875\\u9762\"", ");\n        \n        frame.setBounds(", "100", ", ", "100", ", ", "740", ", ", "500", ");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n         frame.getContentPane().setLayout(", "null", ");\n        \n         menuBar = ", "new", " ", "JMenuBar", "();\n         menuBar.setBackground(", "new", " ", "Color", "(", "240", ", ", "240", ", ", "240", "));\n         menuBar.setBounds(", "0", ", ", "0", ", ", "714", ", ", "437", ");\n        frame.getContentPane().add(menuBar);\n        \n        ", "JMenu", " ", "mnNewMenu", " ", "=", " ", "new", " ", "JMenu", "(", "\"\\u4EA7\\u54C1\\u7BA1\\u7406\"", ");\n        menuBar.add(mnNewMenu);\n        \n        ", "JMenuItem", " ", "mntmNewMenuItem", " ", "=", " ", "new", " ", "JMenuItem", "(", "\"\\u6DFB\\u52A0\\u7528\\u6237\"", ");\n        mntmNewMenuItem.addActionListener(", "new", " ", "ActionListener", "() {\n            ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent arg0)", " {\n                ", "//获取一个添加页面的对象", "\n                ", "AddPage", " ", "add", " ", "=", " ", "new", " ", "AddPage", "();\n                ", "//将桌面存在的内容都清理一遍", "\n                menuBar.removeAll();\n                ", "//将页面加入到桌面面板", "\n                menuBar.add(add.getFrame());\n            }\n        });\n        mnNewMenu.add(mntmNewMenuItem);\n        \n        ", "JMenuItem", " ", "mntmNewMenuItem_1", " ", "=", " ", "new", " ", "JMenuItem", "(", "\"\\u67E5\\u8BE2\\u7528\\u6237\"", ");\n        mntmNewMenuItem_1.addActionListener(", "new", " ", "ActionListener", "() {\n            ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent arg0)", " {\n                ", "SearchPage", " ", "sp", " ", "=", " ", "new", " ", "SearchPage", "();\n                ", "//运行一次可以同时将添加页面和查询页面显示出来，新加页面之前把原有桌面 ", "\n                menuBar.removeAll();\n                ", "//将窗口成员添加到menuBar 里面", "\n                menuBar.add(sp.getFrame());\n            }\n        });\n        mnNewMenu.add(mntmNewMenuItem_1);\n        \n        ", "JMenuItem", " ", "mntmNewMenuItem_2", " ", "=", " ", "new", " ", "JMenuItem", "(", "\"\\u4FEE\\u6539\\u7528\\u6237\"", ");\n        mntmNewMenuItem_2.addActionListener(", "new", " ", "ActionListener", "() {\n            ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent e)", " {\n                ", "EditPage", " ", "sp", " ", "=", " ", "new", " ", "EditPage", "();\n                menuBar.removeAll();\n                menuBar.add(sp.getFrame());\n            }\n        });\n        mnNewMenu.add(mntmNewMenuItem_2);\n        \n        ", "JMenuItem", " ", "mntmNewMenuItem_3", " ", "=", " ", "new", " ", "JMenuItem", "(", "\"\\u5220\\u9664\\u7528\\u6237\"", ");\n        mntmNewMenuItem_3.addActionListener(", "new", " ", "ActionListener", "() {\n            ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent e)", " {\n                ", "DeleteUserPage", " ", "sp", " ", "=", " ", "new", " ", "DeleteUserPage", "();\n                menuBar.removeAll();\n                ", "//将窗口成员添加到menuBar 里面", "\n                menuBar.add(sp.getFrame());\n            }\n        });\n        mnNewMenu.add(mntmNewMenuItem_3);\n        ", "JDesktopPane", " ", "desktopPane", " ", "=", " ", "new", " ", "JDesktopPane", "();\n        desktopPane.setBackground(Color.LIGHT_GRAY);\n        desktopPane.setBounds(", "10", ", ", "52", ", ", "707", ", ", "400", ");\n        frame.getContentPane().add(desktopPane);\n        desktopPane.setLayout(", "null", ");\n        \n        table = ", "new", " ", "JTable", "();\n        table.setBounds(", "0", ", ", "0", ", ", "1", ", ", "1", ");\n        frame.getContentPane().add(table);\n    }\n}\n", "\n", "以上是有错误的全部代码，麻烦了，谢谢。"]], "Tag": "程序设计"}
{"Answer": "找一个现成的mfc csocket的程序，这种程序网上很多，先运行，如果不行，把防火墙关闭，直到成功，再修改成你要的", "Konwledge_Point": "条件表达式", "Question": ["c++，socket编程实现简易聊天系统，客户端一直连不上服务端，connect返回错误10014", ["客户端", "\n\n", "//建立线程\n\nDWORD WINAPI ConnectThreadFunc(LPVOID pParam) {\n\n    //初始化\n    WSAData wsData;\n    if (!AfxSocketInit(&wsData))\n    {\n        AfxMessageBox(_T(\"Socket 库初始化出错！\"));\n        return false;\n    }\n\n\n    CMFCApplication1View *pChatClient = (CMFCApplication1View*)pParam;\n    ASSERT(pChatClient != NULL);\n\n    //新建一个socket\n    pChatClient->ConnectSock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\n\n    if (INVALID_SOCKET==pChatClient->ConnectSock ) {\n        AfxMessageBox(_T(\"创建socket失败！\"));\n        return FALSE;\n    }\n    AfxMessageBox(_T(\"成功创建socket\"));\n\n    //获取端口\n    CString ServeIp;\n    pChatClient->GetDlgItemText(IDC_SERVEID_INPUT, ServeIp); //取服务端的IP地址\n    int SPort = pChatClient->GetDlgItemInt(IDC_SERVEPORT_INPUT); //获取端口\n    if (SPort <= 0 || SPort > 65535) {\n        AfxMessageBox(_T(\"请输入合法的端口：1-65535\"));\n        goto _End;\n    }\n    AfxMessageBox(_T(\"端口合法\"));\n\n\n    //将IP转换\n    char AddrIp[16] = { 0 }; //窄字节\n    USES_CONVERSION;\n    strcpy_s(AddrIp, 16, T2A(ServeIp)); // T2A：宏，进行字符串的转换\n\n    //将服务器的信息放入通用套接字中\n    sockaddr_in server;\n    server.sin_family = AF_INET;\n    server.sin_port = htons(SPort);\n    server.sin_addr.s_addr = inet_addr(\"192.168.73.1\");\n\n    //客户端连接服务端\n    //将server传给connect\n    if ( SOCKET_ERROR == connect(pChatClient->ConnectSock, (struct sockaddr*)&server, sizeof(struct sockaddrr*)) ) {\n    /*  char ErrorInfo[256] = { 0 }; //创建数组存储错误信息   \n        sprintf_s(ErrorInfo, \"Creat Faile : %d\", GetLastError());   //把错误信息写入数组       \n        AfxMessageBox((CString)ErrorInfo);\n    */  \n        AfxMessageBox(_T(\"连接失败！\"));\n        goto _End;\n    }\n\n    pChatClient->MsgShow(_T(\"服务器连接成功！\"));\n    while (TRUE) {\n        if (SOCKERT_Select(pChatClient->ConnectSock,100,TRUE)) {\n            char szBuf[MAX_BUF_SIZE] = { '0' };  //缓冲区\n            int iRet = recv(pChatClient->ConnectSock, szBuf, MAX_BUF_SIZE, 0);\n                //recv（）用来接收远程主机通过套接字sockfd发送来的数据，\n                //并把这些数据保存到数组buf中\n            if (iRet > 0) {\n                pChatClient->MsgShow((CString)szBuf);\n            }\n            else {\n                pChatClient->MsgShow(_T(\"连接异常，请重新连接！\"));\n                break;\n            }\n        }\n        Sleep(100);\n    }\n\n_End:\n    closesocket(pChatClient->ConnectSock);\n    return TRUE;\n\n}\n", "\n\n", "服务端", "\n\n", "\nSOCKET ComSock; //用于发送消息\n\n//查看客户端是否发来消息，并快速返回\nBOOL SOCKERT_Select(SOCKET Socket, int TimeOut, BOOL bRead) {\n    fd_set fdset; //通知执行了select()的进程哪一socket或文件发生了可读或可写事件\n                    //long类型的数组，每一个数组元素都能与一打开的文件句柄建立联系\n    timeval tv; //判断是否超时，用于select（）函数\n    FD_ZERO(&fdset);  //清空集合中所有的元素\n    FD_SET(Socket, &fdset); //设置hSocket，使集合包含hSocket，即建立联系\n    TimeOut = TimeOut > 1000 ? 1000 : TimeOut;\n    tv.tv_sec = 0; //秒数\n    tv.tv_usec = TimeOut; //微秒数\n\n    int iRet = 0;\n    if (bRead) {\n        //select（）测试指定的fd可读？可写？有异常条件待处理？  //即对socket操作\n        iRet = select(0, &fdset, NULL, NULL, &tv);\n    }                     //读\n    else {\n\n        iRet = select(0, NULL, &fdset, NULL, &tv);\n    }                           //写\n\n    if (iRet <= 0) { //返回错误时\n        return FALSE;\n    }\n    else if (FD_ISSET(Socket, &fdset)) {//返回处于就绪状态并且已经包含在fd_set结构中的描述字总数\n\n        return TRUE;\n    }\n    return FALSE; //返回零时（超时返回零）\n}\n\n\n//通过线程来开启服务器，因为accept是阻塞的\n//线程函数\nDWORD WINAPI LisenThreadFunc(LPVOID pParam) {\n                        //LPVOID :32位的无类型的指针，在使用的时候再强制转换成需要的类型\n    CMFCApplication1View *pChatClient = (CMFCApplication1View*)pParam; //强制转换\n    ASSERT(pChatClient != NULL); //保证指针不为空  //断言函数，表达式为假则退出程序，为真继续执行\n\n    //用socket函数创建一个socket，用于监听\n    //成功则返回一个socket\n    pChatClient->ListenSock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\n    if (pChatClient->ListenSock == INVALID_SOCKET) {\n        AfxMessageBox(_T(\"创建socket失败！\"));\n        return 0;\n    }\n\n    //绑定，将 ListenSock 绑定在本地的一个ip和端口上\n    //1、动态获取用户输入的端口\n    int Port = pChatClient->GetDlgItemInt(IDC_LISTENPORT_INPUT);\n    if (Port <= 0 || Port > 65535) {\n        AfxMessageBox(_T(\"请输入合适的端口：1-65535\"));\n        goto _End;\n    }\n\n    //2、建立通用套接字\n    sockaddr_in service; //一种通用的套接字地址。用来建立所需信息，最后使用类型转换\n                         //一般用于bind、connect、recvfrom、sendto等函数的参数\n    service.sin_family = AF_INET; //协议族\n    service.sin_addr.s_addr = inet_addr(\"127.0.0.1\"); //获取本机所有可能得到的ip地址\n    service.sin_port = htons(Port); //传递端口 //htons：将主机字节顺序转换为网络字节顺序\n\n    //3、利用bind进行绑定\n    if (bind(pChatClient->ListenSock, (sockaddr*)&service, sizeof(sockaddr_in)) == SOCKET_ERROR) {\n        AfxMessageBox(_T(\"绑定失败！\"));\n        goto _End;\n    }\n\n    AfxMessageBox(_T(\"绑定成功！\"));\n    //监听\n    if (listen(pChatClient->ListenSock, 4) == SOCKET_ERROR) {\n        AfxMessageBox(_T(\"监听失败！\"));\n        goto _End;\n    }\n\n\n    //服务器已搭建完毕，开始进行消息监测\n    while (TRUE) {\n        if (SOCKERT_Select(pChatClient->ListenSock, 1000, TRUE)) {//若有消息\n            sockaddr_in ClientSocket;\n            int len = sizeof(sockaddr_in);\n                                //返回客户端（即对方）的IP地址和端口\n            SOCKET ComSock = accept(pChatClient->ListenSock, (struct sockaddr*)&ClientSocket, &len);\n\n            if (ComSock == INVALID_SOCKET) { //若没有收到信息\n                continue;\n            }\n\n            //当要进行信息交互时，再建一个新线程来进行信息交互\n        //  CMFCApplication1View *ClientCopy;\n\n            HANDLE iTtem;\n            iTtem = CreateThread(NULL, 0, ClientThreadProc, pChatClient, CREATE_SUSPENDED, NULL);\n            pChatClient->comThread = iTtem;\n            ResumeThread(iTtem);  //恢复线程的执行\n\n        }\n    Sleep(100);\n    }\n\n_End:\n    closesocket(pChatClient->ListenSock); //强制关闭socket\n    return TRUE;\n}\n", "\n\n", "由于最近刚学socket，实在不知道怎么改了，请各位大神帮我康康，谢谢大家！（呜呜呜我是新手么的c币）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/fightingforcv/article/details/67646340\" id=\"textarea_1681657772017_1681657824345_0\"&gt;https://blog.csdn.net/fightingforcv/article/details/67646340&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "条件表达式", "Question": ["matlab寻找拐点的问题", ["如果我们已经知道连续函数的解析表达式,则可以利用拐点的定义寻找出该函数的拐点.根据拐点定义及判别方法可知:如果函数在一个点两侧二阶导数异号,则该点对应曲线上的点即为拐点.现实问题中,往往没有这种已知条件较为充足、理想的情况.例如,如果知道一个函数的某些离散节点的函数值,能否找出函数的拐点.希望得到拐点问题的基本步骤，思想"]], "Tag": "程序设计"}
