{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201604/28/1461836055_887383.png)\r\n\r\n使用PL/SQL登录，右键点击需要导出表结构的表，选择查看，在对话框选择列，按图来做就OK了", "Konwledge_Point": "注释", "Question": ["oracle怎么导出一个表结构到excel，包括字段，注释，长度等", ["              写一个数据库文档，以方便日后 好查看数据库结构维护\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n 根据毕小宝图片说的，把下面这个内容放在xml文件中，选择file选择 ，在选择import，把你下面的xml文件导入就可以了\r\n &lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;&lt;templates&gt;&lt;template autoinsert=\"false\" context=\"filecomment_context\" deleted=\"false\" description=\"Comment for created Java files\" enabled=\"true\" id=\"org.eclipse.jdt.ui.text.codetemplates.filecomment\" name=\"filecomment\"&gt;/*\r\n * 文 件 名:  ${file_name}\r\n * 版    权:  公司 Technologies Co., Ltd. Copyright YYYY-YYYY,  All rights reserved\r\n * 描    述:  &amp;lt;描述&amp;gt;\r\n * 修 改 人:  作者\r\n * 修改时间:  ${date}\r\n * 跟踪单号:  &amp;lt;跟踪单号&amp;gt;\r\n * 修改单号:  &amp;lt;修改单号&amp;gt;\r\n * 修改内容:  &amp;lt;修改内容&amp;gt;\r\n */&lt;/template&gt;&lt;/templates&gt;\r\n```", "Konwledge_Point": "注释", "Question": ["eclipse中写文档注释修改作者名称", ["和方法创建的时间和它的格式，修改完后就是用快捷键它自己都能出来"]], "Tag": "程序设计"}
{"Answer": "Navicat Premium没有这个功能\r\n\r\n但是你可以在里面执行如下语句：\r\n\r\n\r\n```\r\n SELECT comments\r\nFROM information_schema.tables\r\nWHERE table_schema = 'myschema' AND table_name = 'mytable'\r\n```\r\n\r\n\r\n看到注释", "Konwledge_Point": "注释", "Question": [" navicat premium 怎么显示字段注释", ["如图是网页phpmyadmin的   navicat premium 能像这样显示字段注释吗 字段很多 不懂英语 太麻烦了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/libaineu2004/article/details/19245205\" id=\"textarea_1657702140090_1657702170439_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/libaineu2004/article/details/19245205&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["qt的注释中文是乱码", ["打开qt程序，中文注释变为乱码，默认编码为UTF-8,", "\n", "所有的中文注释都变为乱码了，但是软件运行界面还可以正常显示中文", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能是编码的问题在右下角找到编码方式&lt;br /&gt;点击UTF-8&amp;#xff0c;选择第一个&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/288795433946186.png\" /&gt;&lt;/p&gt;&lt;br /&gt;选择GB 2312打开&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/065016433946192.png\" /&gt;&lt;/p&gt;&lt;br /&gt;重新启动VScode&lt;br /&gt;参考&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/aixueai/article/details/119568086\" id=\"textarea_1649334511543_1649334642028_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;VScode中文注释乱码问题解决_aixueai的博客-CSDN博客_vscode注释中文乱码&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;VScode默认是用utf-8打开工程代码&amp;#xff0c;C语言里的中文注释如果是Source insight之前gbk编码的注释可能会显示乱码&amp;#xff0c;如何能让代码打开gbk编码的文件也不乱码&amp;#xff0c;设置VScode如下&amp;#xff1a;方法一&amp;#xff1a;依次打开&amp;#xff1a;文件–首选项–设置 然后搜索“auto guess”勾选项&amp;#xff0c;自动猜测字符集编码方式并解码&amp;#xff0c;然后显示正常&amp;#xff1a;方法二&amp;#xff1a;用VScode打开代码之后&amp;#xff0c;在右下角找到编码方式&amp;#xff0c;如图所示&amp;#xff1a;点击UTF-8&amp;#xff0c;选择第一个&amp;#xff1a;选择GB 2312打开&amp;#xff0c;如下图&amp;#xff1a;重新启动VScode&amp;#xff0c;右下角变为GB2312&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/aixueai/article/details/119568086&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么vscode不能进行中文注释啊，英文注释都可以。", ["是中文乱码的问题，是根本不能进行中文注释，哭了，搞了一天了。在网上没找到解决办法，真的没办法了。"]], "Tag": "程序设计"}
{"Answer": "1）在vs中按快捷键 ctrl + k + b，弹出一个对话框\r\n \r\n\r\n2）在下拉框选择 Visual C++\r\n \r\n\r\n3）再选择 Visual C++\r\n \r\n\r\n4）把上面的路径拷贝，然后打开此路径\r\n \r\n \r\n\r\n6）里面就是配置文件（后缀为.snippet,实际上是xml文件），自行拷贝一份,重命名，根据需要自行设置快捷键：\r\n \r\n \r\n\r\n7）在写代码时，输入“#1”， 再按Tab，则可插入指定的代码", "Konwledge_Point": "注释", "Question": ["vs2013中如何修改自带的函数注释模板", ["在2010版本以下，都可以用工具下的新建宏项目来编辑自己想要的函数注释模板，可是2013没有宏，我应该怎么编辑IDE自带的函数注释模板，敲三个斜杠，自动生成函数注释，这个可以修改吗"]], "Tag": "程序设计"}
{"Answer": "你这个是定义变量赋值，这里符号的含意是'''...'''的格式表示多行内容;\r\n'''\r\npython多行注释\r\npython多行注释\r\n'''", "Konwledge_Point": "注释", "Question": ["python的注释符号'''  '''问题。", ["看教程上面说，多行注释用三个单引号 ''' 或者三个双引号 \"\"\" 将注释括起来。", "\n但是看有些代码在'''   '''内是生效的。如;", "\n\n", "sql = '''create table students (\n        name text,\n        username text,\n        id int)'''\ncursor.execute(sql)\n", "\n\n", "为什么呢。"]], "Tag": "程序设计"}
{"Answer": "生成javadoc文档设置中先钩上@author试试", "Konwledge_Point": "注释", "Question": ["用intellij生成javadoc文件时，类名上面的注释不显示", ["包上面的也不显示", "\n\n", "/**这是一个包注释*/\npackage aaa01;\n\n//: object/Documentationa1.java\n/**\n * @author  JX\n * 一个类标注\n * <em>hahaha</em>\n    从这里往上的注释都不在网页上显示*/\npublic class Documentation1 {\n    /**\n     * <em>a field comment</em>\n     */\n    public int i;\n\n    /**\n     * a method comment\n     */\n    public void f() {\n    }\n}///:~\n", "\n\n", "\n是这里设的不对吗，出来的东西是这样子的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;ctrl&amp;#43;/或者ctrl&amp;#43;shift&amp;#43;/&amp;#xff0c;如果代码中已经有用/* */注释的代码块建议使用ctrl&amp;#43;/也就是用//注释每一行&amp;#xff0c;这样可以避免*/的冲突&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea 类中已经有注释代码块  还怎么注释掉整个类 或者说又使这个类不运行的其他方法", ["无法注释整个类 或者说又使这个类不运行的其他方法"]], "Tag": "程序设计"}
{"Answer": "--后面空一格：-- 视图", "Konwledge_Point": "注释", "Question": ["在MYSQL workbench中使用注释符报错？", ["\n为什么使用 --注释  会报错，而用/* 注释*/ 就不报错呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;CTRL &amp;#43; /&lt;/strong&gt;&lt;br /&gt;实在不行&amp;#xff0c;手动添加注释吧&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vscode出现无法注释的情况", ["vscode中偶尔会出现注释不能正常使用的情况", "//我想注释掉这句话", "但是运行时还是会出现", "\n\n", "但是也没有成功运行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_38196234/article/details/104025225\" id=\"textarea_1629421282398_1629421360567_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;Dev C&amp;#43;&amp;#43;中文乱码问题&lt;/span&gt;\n  &lt;span class=\"md_link_desc\" style=\"\"&gt;Dev C&amp;#43;&amp;#43;是比较方便的编译器&amp;#xff0c;但若第一次使用dev直接打开已经写好的C或C&amp;#43;&amp;#43;程序出现中文乱码问题&amp;#xff0c;比如下面所示&amp;#xff1a;出现这个问题的原因是因为dev默认的编码是ANSI编码&amp;#xff0c;乱码是因为编码格式不是ANSI。问题查找&amp;#xff1a;用notepad&amp;#43;&amp;#43;软件打开文件&amp;#xff0c;发现文件编码格式是UTF-8编码格式&amp;#xff0c;如下所示&amp;#xff1a;解决问题&amp;#xff1a;用notepad&amp;#43;&amp;#43;软件&amp;#xff0c;在工具栏-编码-转为ANSI编码&amp;#xff0c;保存。操作如下&amp;#xff1a;再用de...&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_38196234/article/details/104025225&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于devc++注释中文的显示问题", ["这种中文显示问题是电脑的问题还是软件问题，我该怎样解决？"]], "Tag": "程序设计"}
{"Answer": "清理一下重新生成好了，原来是我刚才粗心，清理错项目了", "Konwledge_Point": "注释", "Question": ["VS2010 注释掉的代码还能执行", ["我用VS2010，注释掉一行代码但还能执行，其他行的代码也是同样// 注释方法，就不会执行，我从新清理了，重新生成，还是不行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不能写成sql语句一次执行么&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Navicat For Oracle怎么批量修改表名注释", ["\n", "要修改不同表的表字段对应的注释,因为涉及上千条的数据注释修改", "COMMENT ON COLUMN  ", ".", "  IS  '***'; 像这样的语句不想点千次呀..", "要怎么批量操作呢?求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据mysql官方文档的语法来看&amp;#xff0c;不支持在创建视图的同时添加注释&lt;br /&gt;&lt;a href=\"https://dev.mysql.com/doc/refman/8.0/en/create-view.html\" id=\"textarea_1648110579563_1648111161306_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://dev.mysql.com/doc/refman/8.0/en/create-view.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;CREATE&lt;/span&gt;\n    [&lt;span class=\"hljs-keyword\"&gt;OR REPLACE&lt;/span&gt;]\n    [ALGORITHM &amp;#61; {UNDEFINED | MERGE | TEMPTABLE}]\n    [&lt;span class=\"hljs-keyword\"&gt;DEFINER&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;user&lt;/span&gt;]\n    [&lt;span class=\"hljs-keyword\"&gt;SQL&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;SECURITY&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;DEFINER&lt;/span&gt; | &lt;span class=\"hljs-keyword\"&gt;INVOKER&lt;/span&gt; }]\n    &lt;span class=\"hljs-keyword\"&gt;VIEW&lt;/span&gt; view_name [(column_list)]\n    &lt;span class=\"hljs-keyword\"&gt;AS&lt;/span&gt; select_statement\n    [&lt;span class=\"hljs-keyword\"&gt;WITH&lt;/span&gt; [CASCADED | &lt;span class=\"hljs-keyword\"&gt;LOCAL&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;CHECK&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;OPTION&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;并且在视图创建好后&amp;#xff0c;也无法进行修改&amp;#xff0c;因为视图上根本就没有&amp;#34;注释&amp;#34;这个属性&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;ALTER&lt;/span&gt;\n    [ALGORITHM &amp;#61; {UNDEFINED | MERGE | TEMPTABLE}]\n    [&lt;span class=\"hljs-keyword\"&gt;DEFINER&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;user&lt;/span&gt;]\n    [&lt;span class=\"hljs-keyword\"&gt;SQL&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;SECURITY&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;DEFINER&lt;/span&gt; | &lt;span class=\"hljs-keyword\"&gt;INVOKER&lt;/span&gt; }]\n    &lt;span class=\"hljs-keyword\"&gt;VIEW&lt;/span&gt; view_name [(column_list)]\n    &lt;span class=\"hljs-keyword\"&gt;AS&lt;/span&gt; select_statement\n    [&lt;span class=\"hljs-keyword\"&gt;WITH&lt;/span&gt; [CASCADED | &lt;span class=\"hljs-keyword\"&gt;LOCAL&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;CHECK&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;OPTION&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;mysql诞生至今这几十年&amp;#xff0c;有很多人向官方反馈过&amp;#xff0c;但MYSQL都没打算支持给视图添加注释&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["mysql如何为视图添加备注等等一些注释信息，他生成出来那个默认的View我想改成别的", ["mysql如何为视图添加备注等等一些注释信息，他生成出来那个默认的View我想改成别的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;jsp不可以使用快捷键吧&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["在IDEA中的jsp文件中，注释代码的快捷键是什么，ctrl+shift+/或者ctrl+/没用", ["在IDEA中的jsp文件中，注释代码的快捷键是什么，ctrl+shift+/或者ctrl+/没用"]], "Tag": "程序设计"}
{"Answer": "通常是这样。\r\n正式的说法，按照《编码规约》要求书写。\r\n一个项目应该有一个明确的规约，用于统一代码风格。包括命名、缩进、折行、注释、左花括号位置等等。不同项目可以采用不同的规约。当然一个公司用同一个规约更省事。", "Konwledge_Point": "注释", "Question": ["函数的注释写在函数体的上面吗？", ["函数声明的时候不需要注释吧？", "\n变量的注释写在哪儿？是直接写在变量同一行的后面吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把乱码删了重新写一点看看&amp;#xff0c;保存之后再重启打开&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea中的yml文件中文注释乱码！", ["\n", "都已经改成utf-8了，为什么还是乱码呢？重启了也还是没效果！"]], "Tag": "程序设计"}
{"Answer": "因为你这个涉及到多行，所以直接匹配是不行的\r\n一个办法是首先判断行数，然后使用(\\s*\\n)来匹配硬回车，硬回车指的是按Enter产生的回车\r\n然后有几行就写几个\r\n以下以3行为例，即匹配\r\n/**9)(fsdaf3\r\nrfdfdf\r\n4343*/\r\n\r\n^/\\*.*(\\s*\\n).*(\\s*\\n).*\\*/$\r\n里面没有用\\做转译，直接是测试的正则表达式，你自己添一下就可以了", "Konwledge_Point": "注释", "Question": ["如何使用JS的正则表达式检查  java中的文档注释? (用于代码高亮)", ["例如:", "\n在java 中可以这样写文档注释", "\n/**", "\n*这个是注释", "\n*", "\n*/", "\n\n", "我想实现的效果是", "\n[color=green]/**", "\n*这个是注释", "\n*", "\n*/[/color]", "\n\n", "现在我想用JS 的正则表达式 匹配他我写了如下的代码但是就是不起作用,只能匹配 /**  其他剩下的都不能匹配.", "\n\n", "[color=red]MultiLineCComments : new RegExp('/\\*[\\s\\S]*?\\*/', 'gm'),[/color]", "\n\n", "希望哪为朋友帮帮忙,帮我修改一下这个正则表达式,使其能够正常工作.谢谢!", "\n[b]问题补充：[/b]", "\n其实我这段代码是MultiLineCComments : new RegExp('/\\*[\\s\\S]*?\\*/', 'gm'),  是dp.SyntaxHighlighter 中的代码,发现他不能正常工作.所以想自己修改他,而后又发现自己改不了它,google,百度 了很长时间无果.", "\n\n", "congjl2002  你的回答也不能使他正常的工作.不过还是谢谢你的回答."]], "Tag": "程序设计"}
{"Answer": "eclipse中只要添加\"#\"注释，选中被注释行，ctrl+/ 就可以去掉\"#\"注释", "Konwledge_Point": "注释", "Question": ["properties文件中的#注释如何快速取消？", ["eclipse中properties文件，多行文本可以用ctrl+/或者ctrl+shfit+c来添加\"#\"注释掉，但是如何快速取消注释呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["nginx里边的nginx.conf文件里的#代表注释吗", ["nginx里边的nginx.conf文件里的#代表注释吗", "nginx里边的nginx.conf文件里的#代表注释吗"]], "Tag": "程序设计"}
{"Answer": "xml 文件是用 ctrl+shift+C 注释，如果想取消，只需要选中注释部分，再按一次 ctrl+shift+C 就可以了。\r\n是在不行apt-get remove \r\n然后再apt-get install 一下就好了吧， 在装个插件就好了", "Konwledge_Point": "注释", "Question": ["code::blocks无法使用crtl+shfit+c注释键", ["使用code::blocks编译器的时候，发现其他的快捷键都好使，只有crtl+shift+c快捷键无法使用，用的时候无法注释多行，但是会显示 HTML not found....（后面是一推文件名）。请问这要怎么解决呢？？"]], "Tag": "程序设计"}
{"Answer": "#include &lt;stdio.h&gt; \r\n\r\nint main() \r\n\r\n{ \r\n\r\n    FILE *fp,*fp1; \r\n\r\n    char str[99]=\"\"; \r\n\r\n    int i=0; \r\n\r\n    fp=fopen(\"test.c\",\"r\"); //要打开的源文件 \r\n\r\n    fp1=fopen(\"new.c\",\"w\"); //另存为 \r\n\r\n    while(fgets(str,99,fp)!=NULL) \r\n\r\n    { \r\n\r\n        for(i=0;i&lt;99;i++) \r\n\r\n        if(str[i]=='/'&amp;&amp;str[i-1]=='/'){str[i-1]='\\n';str[i]='\\0';break;} \r\n\r\n        fputs(str,fp1); \r\n\r\n    } \r\n\r\n    fcloseall(); \r\n\r\n    return 0; \r\n\r\n} \r\n\r\n如果有/* */块注释的话，用这个 \r\n\r\n#include &lt;stdio.h&gt; \r\n\r\n#include &lt;string.h&gt; \r\n\r\nint main() \r\n\r\n{ \r\n\r\n    FILE *fp,*fp1; \r\n\r\n    char str[99]=\"\",str1[99]=\"\"; \r\n\r\n    int i,j,no=0; \r\n\r\n    fp=fopen(\"test.c\",\"r\"); //要打开的源文件 \r\n\r\n    fp1=fopen(\"new.c\",\"w\"); //另存为 \r\n\r\n    while(fgets(str,99,fp)!=NULL) \r\n\r\n    { \r\n\r\n        for(i=0;i&lt;99;i++) \r\n\r\n        { \r\n\r\n            if(str[i]=='/'&amp;&amp;str[i-1]=='/') \r\n\r\n            {str[i-1]='\\n';str[i]='\\0';} \r\n\r\n  \r\n\r\n            if(str[i]=='*'&amp;&amp;str[i-1]=='/') \r\n\r\n            {str[i-1]='\\0';no=1;fputs(str,fp1);} \r\n\r\n          \r\n\r\n            if(str[i]=='/'&amp;&amp;str[i-1]=='*') \r\n\r\n            { \r\n\r\n                for(j=0;j&lt;98-i;j++){str[j]=str[i+j+1];} \r\n\r\n                str[j]='\\0'; \r\n\r\n                no=0; \r\n\r\n            } \r\n\r\n        } \r\n\r\n        if(no==0)fputs(str,fp1); \r\n\r\n    } \r\n\r\n    fcloseall(); \r\n\r\n    return 0; \r\n\r\n}", "Konwledge_Point": "注释", "Question": ["使用C语言1. 读取一个.C文件，删除该文件中所有的注释语句", ["\n", "读取一个.C文件，删除该文件中所有的注释语句。然后写入到新的.C文件里。\n要求：", "\n", "删除注释语句功能采用动态链接库形式", "\n", "在功能实现的基础上:\n--单元测试要足够充分\n--要通过所有的MISRA C的检查\n--代码要符合代码规范。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;setting -&amp;gt; Editor -&amp;gt; General -&amp;gt; Show quick documentation on mouse move。&lt;br /&gt;将该项打勾&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["IDEA中，光标放在被调用方法上有显示注释信息，但是不完全。怎么显示完全？？", ["已经试过 ", "https://blog.csdn.net/weixin_42412601/article/details/91648248", " 的方法，没反应", "文档注释的格式已经自行添加到idea了。", "我看别人的文档注释能显示，自己在注释里写的文字", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "不知道你是用webstorm具体做什么，不过可以参考如下的步骤：\r\nFIle-&gt;setting-&gt;editor-&gt;css-&gt;comment然后Foreground选择为需要的颜色即可，这是编辑css的样式，如果需要更改其它的参考这个就行了。", "Konwledge_Point": "注释", "Question": ["代码的注释一般是灰色的，不显眼，怎么把webstorm的注释调成绿色显眼", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf 改成 scanf_s&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["我用vs2019的时候 ，第一个代码已经注释了，运行第二个的时候弹出来，总是运行第一个？还有怎么关闭第一个的运行结果", ["vs2019，第一个代码已经注释了，运行第二个的时候弹出来，总是运行第一个？还有怎么关闭第一个的运行结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写错位置了吧&amp;#xff0c;你这个方法是不是没写在类里面。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["check style报错未注释的main方法", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;ctrl&amp;#43;/&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["VSCode里面编辑Vue.js用什么快捷键能<!-- -->注释语句？", ["VSCode里面编辑Vue.js用什么快捷键能注释语句？", "VSCode里面编辑Vue.js用什么快捷键能注释语句？", "VSCode里面编辑Vue.js用什么快捷键能注释语句？"]], "Tag": "程序设计"}
{"Answer": "[color=blue][b]使用execute()方法[/b][/color]", "Konwledge_Point": "注释", "Question": ["如何用java为oracle数据库表中的字段添加注释", ["现在正在做动态建表，使用java来为数据库建表，表可以创建成功，但为表字段添加注释用Statement的executeQuery（）执行添加注释的语句老报无效字符的异常。", "\n\n", "添加注释的语句 是 comment on table \"TA_FLIGHT_V2\" is '系统的航班基本信息表'。", "\n\n", "数据库是oracle."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以用ctrl&amp;#43;K,ctrl&amp;#43;c快捷键快速注释。你可以选中多行执行快捷键。有帮助请采纳谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C#多行注释快捷键，如何操作", ["如下图所示，如果才能快速打出C#的多行注释，这个格式能自由设置吗？有没有快捷键？"]], "Tag": "程序设计"}
{"Answer": "不行。\r\n这里的代码注释和所谓的java反射的注释（annotation）指的不是同一个东西吧。\r\njava反射指的是通过Class类的东西，来获取其他类的变量、方法或者动态生成对象或者调用方法等等\r\n[url]http://hejianjie.iteye.com/blog/136205[/url]\r\n\r\n所有的annotation 比如 @XXX 都是需要定义接口的，实际上也可以认为是一个类[url]http://www.blogjava.net/ericwang/archive/2005/12/13/23743.html[/url]\r\n\r\n代码的注释应该和反射没啥关系", "Konwledge_Point": "注释", "Question": ["/** 注释 **/ java怎样才能拿到注释的内容?", ["我现在要拿类的注释内容,如下:", "\n /** 用户名 ", "/", "\n private String userName = nulll;", "\n /", " 用户密码 **/", "\n private String password = null;", "\n\n", "怎样才能拿到注释中的 \"用户名\" ,\"密码\"的内容呢?", "\n\n", "请问能用反射来做吗? 想动态获取,不是文本分析.谢谢."]], "Tag": "程序设计"}
{"Answer": "批量自动添加的注释有用吗？能起到注释的效果吗？没用的注释或错误的注释，不如没有注释。", "Konwledge_Point": "注释", "Question": ["eclipse 如何批量为多个方法增加方法注释", ["项目在进行codeReview的时候发现有3000多个文件未完整添加方法注释，请问有什么方法能自动为没有添加方法注释的方法添加注释吗？文件太多了，没有办法一个一个补，另外eclipse中的code template似乎只对新添加的类和方法才有效。所以有没有方法能对已经存在的大量方法批量添加注释呢？求教了。"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/tftutu/article/details/6456051'&gt;JSP注释&lt;/a&gt;&lt;br/&gt;----------------------同志你好，我是CSDN问答机器人小N，奉组织之命为你提供参考答案，编程尚未成功，同志仍需努力！", "Konwledge_Point": "注释", "Question": ["JSP注释问题：<!-- -->注释掉的语句依然起作用", [" <%@ page contentType=\"text/html;charset=gb2312\" %>\n<!--\n<jsp:useBean id=\"simple\" scope=\"page\" class=\"cn.mldn.lxh.demo.SimpleBean\"/> \n-->\n<html><head>\n  <title>JavaBean</title></head>\n  <body>\n    <%\n      simple.setName(\"luo\");\n      simple.setAge(21);\n    %>\n    姓名：<%= simple.getName() %>\n年龄：<%= simple.getAge() %>\n </body>\n<html>\n", "\n\n", "运行结果：", "\n姓名： luo", "\n年龄： 21", "\n\n", "运行中为什么已经通过html注释把注释掉了，它还是会起作用呢？机制是什么？新手，请各位指教。", "\n补充说明：我知道用JSP注释可以语句失效。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;上面是源文件&amp;#xff0c;下面是元数据文件&amp;#xff08;反编译的&amp;#xff09;&amp;#xff0c;肯定没有原始注释的。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C# dll 文件看不到注释，怎么解决", [".NET framework, 网上看到的，这个dll文件点开都有注释，为什么我自己用这个库，看不到注释呢？是不是哪儿隐藏了。EngineeringInternalExtension.dll 文件可以在这里下载。", "\n", "链接：", "\n      \n        ", "百度网盘 请输入提取码", "\n        \n      ", "百度网盘为您提供文件的网络备份、同步和分享服务。空间大、速度快、安全稳固，支持教育网加速，支持手机端。注册使用百度网盘即可享受免费存储空间", "\n      ", "\n      ", "\n        ", "\n          ", "https://pan.baidu.com/s/1seEZ4Z9EmF_jOwLG_MBVuw", "\n        ", "\n      ", "提取码：4jbk", "\n", "这是网上看到的", "\n", "\n", "这是我自己的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一行不是没圆括号吗&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["JAVA编译时注释行被编译", ["\n", "\n", "尝试用cmd编译运行代码时，注释行被编译导致运行错误，不知道怎么办了，请求帮忙解答一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加我QQ&amp;#xff0c;远程结绝&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Java仅当显式请求注释处理时才接受类名称", ["已经是在当下目录打开，扩展名也写了", "就是出错，问题出哪儿啊  (ಥ_ಥ)", "\n"]], "Tag": "程序设计"}
{"Answer": "那可能是js里面的回车换行导致的吧\r\n\r\n'\\n' 10 换行（newline）\r\n'\\r' 13 回车（return）\r\n\r\n可能ie8比较严格吧", "Konwledge_Point": "注释", "Question": ["加载到页面后javascript注释变乱", ["一个jsp对应一个同名的js文件", "\n原来的代码", "\neclipse中查看如下", "\n[code=\"javascript\"]// 这是注释", "\nfunction foo() {", "\n    doxxx();", "\n}[/code]", "\n\n", "加载到页面后变成了", "\n[code=\"javascript\"]// 这是注释 function foo() {", "\ndoxxx();}[/code]", "\n浏览器就认不出了", "\n谢谢大家", "\n\n", "前些时间还是好好的", "\n现在突然发现是这样的了，报错", "\n[b]问题补充：[/b]", "\n在其他浏览器下opera和firefox是好好的", "\n在ie8下就有问题了", "\n[b]问题补充：[/b]", "\n是我SB了", "\n从CVS上拉个旧版本发现问题了", "\n我抄的别人的代码中间有个问题", "\n那段代码虽然没有执行", "\n但ie直接给找出来了", "\n然后整个js文件就废了", "\n页面加载完成后再调用js文件中的代码就找不到方法了null了", "\n[b]问题补充：[/b]", "\n谢谢大家", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt; [YTest, scores] &amp;#61; classify(trainedNet,testCsi);  &lt;span class=\"hljs-comment\"&gt;%使用经过训练的深度学习神经网络对数据进行分类&amp;#xff0c;返回与类标签对应的分类分数&lt;/span&gt;\n    TTest &amp;#61; testWord;  &lt;span class=\"hljs-comment\"&gt;%将之前的word(testIdx,1)赋值给TTest用于测试训练的模型效果&lt;/span&gt;\n    test_accuracy &amp;#61; sum(YTest &amp;#61;&amp;#61; TTest)/&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(TTest);   &lt;span class=\"hljs-comment\"&gt;%计算测试准确率&lt;/span&gt;\n    t2 &amp;#61; toc; &lt;span class=\"hljs-comment\"&gt;% testing end time 计时结束&lt;/span&gt;\n    \n   &lt;span class=\"hljs-comment\"&gt;% plot confusion matrix  此块用于绘制分类混淆矩阵&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%     ttest &amp;#61; dummyvar(double(TTest))&amp;#39;;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%     tpredict &amp;#61; dummyvar(double(YTest))&amp;#39;;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%     [c,cm,ind,per] &amp;#61; confusion(ttest,tpredict);&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%     plotconfusion(ttest,tpredict);&lt;/span&gt;\n\n    net_info &amp;#61; tr;  &lt;span class=\"hljs-comment\"&gt;%将之前训练出的tr{k,1}赋值给net_info &lt;/span&gt;\n    perf &amp;#61; test_accuracy;   &lt;span class=\"hljs-comment\"&gt;%准确率&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["Matlab代码 求每行注释", ["求这段代码的注释", "这是最后的一部分啦", "Matlab Matlab", "求每行代码的注释", "谢谢啦"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;回答&amp;#xff1a;代码如下&lt;br /&gt;第一问&amp;#xff0c;set和get函数都一样&amp;#xff0c;就没写全&amp;#xff0c;可以自己补充一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Pizza&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    string size;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; milknumber;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; italynumber;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hotnumber;\n\n    &lt;span class=\"hljs-built_in\"&gt;Pizza&lt;/span&gt;(string n1, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n3, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n4) {\n        size &amp;#61; n1;\n        milknumber &amp;#61; n2;\n        italynumber &amp;#61; n3;\n        hotnumber &amp;#61; n4;\n    }\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setsize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string n)&lt;/span&gt; &lt;/span&gt;{\n        size &amp;#61; n;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;string &lt;span class=\"hljs-title\"&gt;getsize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; size;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;calCost&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; price;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum;\n\n        sum &amp;#61; milknumber &amp;#43; italynumber &amp;#43; hotnumber;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;小&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;            \n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;中&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;12.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;大&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;14.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;没有该尺寸&amp;#34;&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; price;\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;写一半哈&amp;#xff0c;第二问加一个类&amp;#xff0c;创建几个对象&amp;#xff0c;再写一下测试主函数&amp;#xff0c;你先试试看&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["用C++编写程序，并添加注释", ["1、创建一个名为Pizza的类，用它来存储单个比萨饼的信息。这个类应包含以下内容：", "几个私有变量，分别用来存储比萨的尺寸（小，中，大）、奶酪配料数量、意大利腊香肠配料数量和火腿配料数量。", "一个（或多个）构造函数，用于设置所有变量的数值。", "几个公有函数，用于获取和设置变量的数值。", "一个名为calcCost () 的公有函数，用于返回一个表示比萨饼价格的double值。", "比萨饼价格由以下内容决定：", "小：10美元＋每份配料2美元", "中：12美元＋每份配料2美元", "大：14美元＋每份配料2美元", "编写测试代码来生成几个比萨饼信息并输出对这些披萨的价格。例如，一个大比萨饼外加一份奶酪配料、一份意大利腊香肠配料及两份火腿配料的总价格应为22美元", "要求写程序注释。", "2、对程序1进行扩充，需要你创建一个PizzaOrder类，这个类允许一个订单里最多存储三个披萨饼的信息。每个存储进来的披萨饼信息都应该是一个披萨饼对象。除了合适的变量和构造函数外，还要有以下的函数：", "public int getNumPizzas()—返回订单中的披萨的个数。", "public Pizza* getPizza1()—返回订单中的第一个披萨，如果pizza1未设置就返回null。", "public Pizza* getPizza2()— 返回订单中第二个披萨，如果pizza2未设置就返回null。", "public Pizza* getPizza3()— 返回订单中第三个披萨，如果pizza3未设置就返回null。", "对于带有另一个PizzaOrder对象并为其比萨创建一个独立的复制构造函数。", "使用旧订单作为新订单的起始点可能很有用。", "编写一个main函数来测试这个类。如果订单中有两个或者三个披萨饼，则会用到setPizza2和setPizza3函数。下面的代码示例对函数进行了说明。注意代码不完整。作为程序的一部分，你必须补充完整。例如：", "Pizza pizza1 = // 这一行代码创建一个大披萨饼，一份奶酪，一份火腿", "Pizza pizza2 = // 这一行代码创建一个中披萨饼，两份奶酪，两份意大利腊香肠。", "PizzaOrder order1 = // 这一行代码创建一个订单", "order1.setNumPizzas(2); // 订单中有两个披萨", "order1.setPizza1(pizza1); // 设置第一个披萨", "order1.setPizza2(pizza2); // 设置第二个披萨", "double total = order1.calcTotal(); // 计算订单的总价格：18+20 = 38", "要求写程序注释。"]], "Tag": "程序设计"}
{"Answer": "无满意答案,自己终结帖子~", "Konwledge_Point": "注释", "Question": ["powerDesigner的update model from database 没有注释!", ["powerDesigner的update model from database 没有注释!", "\n\n", "如何生成注释?"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201612/29/1483009933_886796.jpg)  eclipse里面有替换的", "Konwledge_Point": "注释", "Question": ["如何批量删除Java实体类中的注释？", ["\n\n", "全是这种注释，如何能批量删除？", "\n\n", "eclipse有没有批量删除的功能？", "\n\n", "求大神解答！"]], "Tag": "程序设计"}
{"Answer": "只是一种注视风格，增强美观性，没具体含义", "Konwledge_Point": "注释", "Question": ["/* # */这样的注释行里#是什么意思", ["apue里看到的像这样的注释行", "\n#define NALLOC   10          /* # client structs to alloc/realloc for */", "\n这里面的#是什么意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;也不能完全说是蠢吧。因为/&lt;strong&gt;/这种注释它是不允许嵌套的&amp;#xff0c;所以不方便。用//你可以在代码行前面随便加多少个&lt;br /&gt;你如果用/&lt;/strong&gt;/注释一段代码&amp;#xff0c;而这段代码中如果已经有/**/注释的代码块&amp;#xff0c;那程序是会出现错误的&amp;#xff0c;因为实际注释的不是你想注释的部分了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C++多行注释太愚蠢了！！每次都是在每一行都加上“//\",怎么让快速多行注释时只采用/**/的方法?", ["每次多行注释的时候选中一段，ctrl+k+c，每次都是在每一行都加上“//\",搞得很难看，返回看一堆绿色也就算了还每个前面都有前面都有两个斜杠，很不舒服，怎么让快速多行注释时只采用/**/的方法，而不是在每行都加入斜杠这么愚蠢的办法？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对单链表的操作&amp;#xff0c;题主可以想象下我们现实生活中的火车&amp;#xff0c;把节点看成是一节车厢&amp;#xff0c;现在给你10节车厢&amp;#xff0c;每节车厢都做了标记&amp;#xff0c;再给一个车头&amp;#xff0c;让你把这些链成一列火车&amp;#xff0c;你该怎么去调配把它们链接在一起&amp;#xff0c;一列车中间怎么插入车厢&amp;#xff0c;头部怎么插入&amp;#xff0c;尾部怎么增加&amp;#xff0c;这些原理和链表的操作都是一样的。现在代码里就是把这个方法用文字的形式给描述出来&amp;#xff0c;告诉计算机怎么做而已。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C语言代码注释，详细一点", ["刚刚开始，学习一年", "单链表的代码，C语言的，", "来个哥", "帮我写个注释", "要详细一点的", "谢谢各位帮忙", "给大家磕个头"]], "Tag": "程序设计"}
{"Answer": "就是一些注释说明，方便理解和使用", "Konwledge_Point": "注释", "Question": ["C语言头文件定义了一大堆东西   为什么还有注释掉它们", ["本人目前还是小白  不明白为什么一些头文件中定义了一大堆东西  为什么还要注释掉它们", "\n求解惑。", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;First, let Me Start off by saying using yaml.Node does not produce valid yaml when marshalled from a valid yaml, given by the following example. Probably should file an issue.&lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"log\"\n\n    \"gopkg.in/yaml.v3\"\n)\n\nvar (\n    sourceYaml = `version: 1\ntype: verbose\nkind : bfr\n\n# my list of applications\napplications:\n\n#  First app\n  - name: app1\n    kind: nodejs\n    path: app1\n    exec:\n      platforms: k8s\n      builder: test\n`\n)\n\nfunc main() {\n    t := yaml.Node{}\n\n    err := yaml.Unmarshal([]byte(sourceYaml), &amp;amp;t)\n    if err != nil {\n        log.Fatalf(\"error: %v\", err)\n    }\n\n    b, err := yaml.Marshal(&amp;amp;t)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(string(b))\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Produces the following invalid yaml in go version go1.12.3 windows/amd64&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;version: 1\ntype: verbose\nkind: bfr\n\n\n# my list of applications\napplications:\n-   #  First app\nname: app1\n    kind: nodejs\n    path: app1\n    exec:\n        platforms: k8s\n        builder: test\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Secondly, using a struct such as &lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;type VTS struct {\n    Version string       `yaml:\"version\" json:\"version\"`\n    Types   string       `yaml:\"type\" json:\"type\"`\n    Kind    string       `yaml:\"kind,omitempty\" json:\"kind,omitempty\"`\n    Apps    yaml.Node `yaml:\"applications,omitempty\" json:\"applications,omitempty\"`\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From ubuntu's blog and the source documentation it made it seem that it would correctly identify fields within the struct that are nodes and build that tree separately, but that is not the case.\nWhen unmarshalled, it will give a correct node tree, but when remarshalled it will produce the following yaml with all of the fields that yaml.Node exposes. Sadly we cannot go this route, must find another way.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;version: \"1\"\ntype: verbose\nkind: bfr\napplications:\n    kind: 2\n    style: 0\n    tag: '!!seq'\n    value: \"\"\n    anchor: \"\"\n    alias: null\n    content:\n    -   #  First app\nname: app1\n        kind: nodejs\n        path: app1\n        exec:\n            platforms: k8s\n            builder: test\n    headcomment: \"\"\n    linecomment: \"\"\n    footcomment: \"\"\n    line: 9\n    column: 3\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Overlooking the first issue and the marshal bug for yaml.Nodes in a struct (on gopkg.in/yaml.v3 v3.0.0-20190409140830-cdc409dda467) we can now go about manipulating the Nodes that the package exposes. Unfortunately, there is no abstraction that will add Nodes with ease, so uses might vary and identifying nodes can be a pain. Reflection might help here a bit, so I leave that as an exercise for you.&lt;/p&gt;\n\n&lt;p&gt;You will find comment spew.Dumps that dump the entire node Tree in a nice format, this helped with debugging when adding Nodes to the source tree.&lt;/p&gt;\n\n&lt;p&gt;You can certainly remove nodes as well, you will just need to identify which particular nodes that need to be removed. You just have to ensure that you remove the parent nodes if it were a map or sequence.&lt;/p&gt;\n\n&lt;pre class=\"lang-golang prettyprint-override\"&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n\n    \"gopkg.in/yaml.v3\"\n)\n\nvar (\n    sourceYaml = `version: 1\ntype: verbose\nkind : bfr\n\n# my list of applications\napplications:\n\n#  First app\n  - name: app1\n    kind: nodejs\n    path: app1\n    exec:\n      platforms: k8s\n      builder: test\n`\n    modifyJsonSource = `\n[\n\n    {\n        \"comment\": \"Second app\",\n        \"name\": \"app2\",\n        \"kind\": \"golang\",\n        \"path\": \"app2\",\n        \"exec\": {\n            \"platforms\": \"dockerh\",\n            \"builder\": \"test\"\n        }\n    }\n]\n`\n)\n\n// VTS Need to Make Fields Public otherwise unmarshalling will not fill in the unexported fields.\ntype VTS struct {\n    Version string       `yaml:\"version\" json:\"version\"`\n    Types   string       `yaml:\"type\" json:\"type\"`\n    Kind    string       `yaml:\"kind,omitempty\" json:\"kind,omitempty\"`\n    Apps    Applications `yaml:\"applications,omitempty\" json:\"applications,omitempty\"`\n}\n\ntype Applications []struct {\n    Name string `yaml:\"name,omitempty\" json:\"name,omitempty\"`\n    Kind string `yaml:\"kind,omitempty\" json:\"kind,omitempty\"`\n    Path string `yaml:\"path,omitempty\" json:\"path,omitempty\"`\n    Exec struct {\n        Platforms string `yaml:\"platforms,omitempty\" json:\"platforms,omitempty\"`\n        Builder   string `yaml:\"builder,omitempty\" json:\"builder,omitempty\"`\n    } `yaml:\"exec,omitempty\" json:\"exec,omitempty\"`\n    Comment string `yaml:\"comment,omitempty\" json:\"comment,omitempty\"`\n}\n\nfunc main() {\n    t := yaml.Node{}\n\n    err := yaml.Unmarshal([]byte(sourceYaml), &amp;amp;t)\n    if err != nil {\n        log.Fatalf(\"error: %v\", err)\n    }\n\n    // Look for the Map Node with the seq array of items\n    applicationNode := iterateNode(&amp;amp;t, \"applications\")\n\n    // spew.Dump(iterateNode(&amp;amp;t, \"applications\"))\n\n    var addFromJson Applications\n    err = json.Unmarshal([]byte(modifyJsonSource), &amp;amp;addFromJson)\n    if err != nil {\n        log.Fatalf(\"error: %v\", err)\n    }\n\n    // Delete the Original Applications the following options:\n    // applicationNode.Content = []*yaml.Node{}\n    // deleteAllContents(applicationNode)\n    deleteApplication(applicationNode, \"name\", \"app1\")\n\n\n    for _, app := range addFromJson {\n        // Build New Map Node for new sequences coming in from json\n        mapNode := &amp;amp;yaml.Node{Kind: yaml.MappingNode, Tag: \"!!map\"}\n\n        // Build Name, Kind, and Path Nodes\n        mapNode.Content = append(mapNode.Content, buildStringNodes(\"name\", app.Name, app.Comment)...)\n        mapNode.Content = append(mapNode.Content, buildStringNodes(\"kind\", app.Kind, \"\")...)\n        mapNode.Content = append(mapNode.Content, buildStringNodes(\"path\", app.Path, \"\")...)\n\n        // Build the Exec Nodes and the Platform and Builder Nodes within it\n        keyMapNode, keyMapValuesNode := buildMapNodes(\"exec\")\n        keyMapValuesNode.Content = append(keyMapValuesNode.Content, buildStringNodes(\"platform\", app.Exec.Platforms, \"\")...)\n        keyMapValuesNode.Content = append(keyMapValuesNode.Content, buildStringNodes(\"builder\", app.Exec.Builder, \"\")...)\n\n        // Add to parent map Node\n        mapNode.Content = append(mapNode.Content, keyMapNode, keyMapValuesNode)\n\n        // Add to applications Node\n        applicationNode.Content = append(applicationNode.Content, mapNode)\n    }\n    // spew.Dump(t)\n    b, err := yaml.Marshal(&amp;amp;t)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(string(b))\n}\n\n// iterateNode will recursive look for the node following the identifier Node,\n// as go-yaml has a node for the key and the value itself\n// we want to manipulate the value Node\nfunc iterateNode(node *yaml.Node, identifier string) *yaml.Node {\n    returnNode := false\n    for _, n := range node.Content {\n        if n.Value == identifier {\n            returnNode = true\n            continue\n        }\n        if returnNode {\n            return n\n        }\n        if len(n.Content) &amp;gt; 0 {\n            ac_node := iterateNode(n, identifier)\n            if ac_node != nil {\n                return ac_node\n            }\n        }\n    }\n    return nil\n}\n\n// deleteAllContents will remove all the contents of a node\n// Mark sure to pass the correct node in otherwise bad things will happen\nfunc deleteAllContents(node *yaml.Node) {\n    node.Content = []*yaml.Node{}\n}\n\n// deleteApplication expects that a sequence Node with all the applications are present\n// if the key value are not found it will not log any errors, and return silently\n// this is expecting a map like structure for the applications\nfunc deleteApplication(node *yaml.Node, key, value string) {\n    state := -1\n    indexRemove := -1\n    for index, parentNode := range node.Content {\n        for _, childNode := range parentNode.Content {\n            if key == childNode.Value &amp;amp;&amp;amp; state == -1 {\n                state += 1\n                continue // found expected move onto next\n            }\n            if value == childNode.Value &amp;amp;&amp;amp; state == 0 {\n                state += 1\n                indexRemove = index\n                break // found the target exit out of the loop\n            } else if state == 0 {\n                state = -1\n            }\n        }\n    }\n    if state == 1 {\n        // Remove node from contents\n        // node.Content = append(node.Content[:indexRemove], node.Content[indexRemove+1:]...)\n        // Don't Do this you might have a potential memory leak source: https://github.com/golang/go/wiki/SliceTricks\n        // Since the underlying nodes are pointers\n        length := len(node.Content)\n        copy(node.Content[indexRemove:], node.Content[indexRemove+1:])\n        node.Content[length-1] = nil\n        node.Content = node.Content[:length-1]\n    }\n}\n\n\n// buildStringNodes builds Nodes for a single key: value instance\nfunc buildStringNodes(key, value, comment string) []*yaml.Node {\n    keyNode := &amp;amp;yaml.Node{\n        Kind:        yaml.ScalarNode,\n        Tag:         \"!!str\",\n        Value:       key,\n        HeadComment: comment,\n    }\n    valueNode := &amp;amp;yaml.Node{\n        Kind:  yaml.ScalarNode,\n        Tag:   \"!!str\",\n        Value: value,\n    }\n    return []*yaml.Node{keyNode, valueNode}\n}\n\n// buildMapNodes builds Nodes for a key: map instance\nfunc buildMapNodes(key string) (*yaml.Node, *yaml.Node) {\n    n1, n2 := &amp;amp;yaml.Node{\n        Kind:  yaml.ScalarNode,\n        Tag:   \"!!str\",\n        Value: key,\n    }, &amp;amp;yaml.Node{Kind: yaml.MappingNode,\n        Tag: \"!!map\",\n    }\n    return n1, n2\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Produces yaml&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;version: 1\ntype: verbose\nkind: bfr\n\n\n# my list of applications\napplications:\n-   #  First app\nname: app1\n    kind: nodejs\n    path: app1\n    exec:\n        platforms: k8s\n        builder: test\n-   # Second app\nname: app2\n    kind: golang\n    path: app2\n    exec:\n        platform: dockerh\n        builder: test\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["修改现有的Yaml文件并添加新数据和注释", ["\n\n", "I recently saw that the go ", "yaml", " lib has new version (V3)", "\n\n", "with the ", "nodes", " capabilities (which in my opinion is a killer feature :) ) which can helps a lots with modifying yamls without changing the structure of the file", "\n\n", "But since it is fairly new (from last week ) I didn't find some helpful docs and example for the ", "context which I need", " (add new object/node and to keep the ", "file structure the same", " without removing the comments etc)", "\n\n", "what I need is to manipulate yaml file ", "\n\n", "for example ", "\n\n", "lets say I’ve this yaml file", "\n\n", "version: 1\ntype: verbose\nkind : bfr\n\n# my list of applications\napplications:\n  - name: app1\n    kind: nodejs\n    path: app1\n    exec:\n      platforms: k8s\n      builder: test\n", "\n\n", "Now I got an json object (e.g. with ", "app2", ") which I need to insert to the existing file", "\n\n", "[\n\n    {\n        \"comment: \"Second app\",\n        \"name\": \"app2\",\n        \"kind\": \"golang\",\n        \"path\": \"app2\",\n        \"exec\": {\n            \"platforms\": \"dockerh\",\n            \"builder\": \"test\"\n        }\n    }\n]\n", "\n\n", "and I need to add it to the yml file after the first application, (applications is array of application)", "\n\n", "version: 1\ntype: verbose\nkind : bfr\n\n# my list of applications\napplications:\n\n#  First app\n  - name: app1\n    kind: nodejs\n    path: app1\n    exec:\n      platforms: k8s\n      builder: test\n\n# Second app\n  - name: app2\n    kind: golang\n    path: app2\n    exec:\n      platforms: dockerh\n      builder: test\n", "\n\n", "is it possible to add from the yaml file the new json object ? also remove existing", "\n\n", "I also found this blog", "\n", "https://blog.ubuntu.com/2019/04/05/api-v3-of-the-yaml-package-for-go-is-available", "\n\n", "This is the types which represent the object ", "\n\n", "type VTS struct {\n    version string       `yaml:\"version\"`\n    types   string       `yaml:\"type\"`\n    kind    string       `yaml:\"kind,omitempty\"`\n    apps    Applications `yaml:\"applications,omitempty\"`\n}\n\ntype Applications []struct {\n    Name string `yaml:\"name,omitempty\"`\n    Kind string `yaml:\"kind,omitempty\"`\n    Path string `yaml:\"path,omitempty\"`\n    Exec struct {\n        Platforms string `yaml:\"platforms,omitempty\"`\n        Builder   string `yaml:\"builder,omitempty\"`\n    } `yaml:\"exec,omitempty\"`\n}\n", "\n\n", "update", "\n\n", "after testing the solution which is provided by ", "wiil7200", "   I found 2 issues", "\n\n", "I use at the end write it to file\n", "err = ioutil.WriteFile(\"output.yaml\", b, 0644)", "\n\n", "And the yaml output have 2 issue.", "\n\n", "\n  ", "\n", "The array of the application is starting from the comments, it should\n  start from the name", "\n  ", "After the ", "name", " entry the ", "kind", " property and all others after are\n  not aligned to the ", "name", "\n  ", "\n", "\n\n", "any idea how to solve those issue ? regard the ", "comments", " issue, lets say I got it from other property\nand not from the json (if it make it more simpler)", "\n\n", "version: 1\ntype: verbose\nkind: bfr\n\n\n# my list of applications\napplications:\n-   #  First app\nname: app1\n    kind: nodejs\n    path: app1\n    exec:\n        platforms: k8s\n        builder: test\n-   # test 1\nname: app2\n    kind: golang\n    path: app2\n    exec:\n        platform: dockerh\n        builder: test\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#号&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["MySQL数据库，如何注释单行SQL", ["在MySQL数据库中，如何实现单行SQL语句的注释？有没有小伙伴知道的~~"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;css样式 注释方式是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; / * 需要注释的内容 */\n不是&lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- --&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["在HTML中注释使用有其他要求吗？", ["如上图所示在nav id中，对line-height属性进行了注释，添加注释行之后，其后的对背景颜色设置在浏览器中没有显示。在html中不能在id定义中进行备注吗？为什么只是后面的一条代码无效，后面的第二三条还是正常的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;原因找到&amp;#xff0c;分享给大家。删掉xml注释文档里面的“&amp;#96;1”即可。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C++CLI/CLR注释导出成功，C#调用无注释文字", ["使用C++CLI/CLR开发dll，供C#调用。注释成功导出到xml文件中，在C#中加载dll程序集后，", "\n", "接口（含有List类型传参的）注释文字无法看到。", "\n", "接口中传参中无List类型时，C#中可以看到注释文字。", "\n", "C++CLI/CLR库代码如下：", "\n", "#", "pragma", " once", "\n\n", "using", " ", "namespace", " ", "System", ";\n", "using", " ", "namespace", " ", "System", "::", "Collections", "::", "Generic", ";\n\n", "namespace", " ", "ClassLibrary2", " \n{\n    ", "///", " ", "<summary>", "\n    ", "///", " Class1", "\n    ", "///", " ", "</summary>", "\n    ", "public", " ", "ref", " ", "class", " ", "Class1", "\n    {\n    ", "public", ":\n        ", "///", " ", "<summary>", "\n        ", "///", " 测试", "\n        ", "///", " ", "</summary>", "\n        ", "void", " ", "Test", "(", "List<", "double", ">^ lst", ")", " {};\n        ", "///", " ", "<summary>", "\n        ", "///", " 测试2", "\n        ", "///", " ", "</summary>", "\n        ", "void", " ", "Test2", "(", "array<", "double", ">^ array", ")", " {};\n    };\n}\n\n\n", "\n", "C#加载dll之后查看接口，传参为List的无注释文字。如下", "\n", "\n", "xml注释文件内容如下：", "\n", "<?xml version=\"1.0\"?>", "\n", "<", "doc", ">", "\n    ", "<", "assembly", ">", "\n        \"ClassLibrary2\"\n    ", "</", "assembly", ">", "\n    ", "<", "members", ">", "\n        ", "<", "member", " ", "name", "=", "\"M:ClassLibrary2.Class1.Test2(System.Double[])\"", ">", "\n            ", "<", "summary", ">", "\n测试2\n", "</", "summary", ">", "\n        ", "</", "member", ">", "\n        ", "<", "member", " ", "name", "=", "\"M:ClassLibrary2.Class1.Test(System.Collections.Generic.List`1", "{System.Double}", ")\"", ">", "\n            ", "<", "summary", ">", "\n测试\n", "</", "summary", ">", "\n        ", "</", "member", ">", "\n        ", "<", "member", " ", "name", "=", "\"T:ClassLibrary2.Class1\"", ">", "\n            ", "<", "summary", ">", "\nClass1\n", "</", "summary", ">", "\n        ", "</", "member", ">", "\n    ", "</", "members", ">", "\n", "</", "doc", ">", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "用来生成参考文档也就是API文档，一般是做项目的时候用。\r\n如果开发人员对正在使用的类不熟悉，想查看类里面的变量或者方法，就可以打开JavaAPI文档进行阅读和查看。", "Konwledge_Point": "注释", "Question": ["关于java中的文档注释", ["文档注释有什么用？在什么情况下使用？简单回答一下，不要太复杂"]], "Tag": "程序设计"}
{"Answer": "1.http://www.cnblogs.com/dartagnan/archive/2011/03/29/2003425.html\r\n2.Text Editors 里面修改背景色 204 238 208\r\n3.http://jingyan.baidu.com/article/3f16e003c857082590c1036f.html", "Konwledge_Point": "注释", "Question": ["eclipse 自动添加作者注释", ["eclipse 自动添加作者注释 还有怎么调色彩 就是那种绿色的 看起来很舒服的 ", "\n还有jad如何配置"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your &lt;code&gt;\n&lt;/code&gt; (new line) is not working because you use apostrophe &lt;code&gt;'&lt;/code&gt; instead of double quotes &lt;code&gt;\"&lt;/code&gt;.&lt;br&gt;\neg you have:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$txt='Email: '.$email.'\nComments: '.$comments.'\n\n';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And you need:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$txt=\"Email: \".$email.\"\nComments: \".$comments.\"\n\n\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;EDIT&lt;/h2&gt;\n\n&lt;p&gt;Your email address isn't being written as you change the variable name used. \ne.g. You have this code:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$email_address=$_POST['email_address'];\n$txt='Email: '.$email.'\nComments: '.$comments.'\n\n';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Your &lt;code&gt;$txt&lt;/code&gt; variable is using &lt;code&gt;$email&lt;/code&gt; however you're setting the &lt;code&gt;$_POST&lt;/code&gt; data to variable &lt;code&gt;$email_address&lt;/code&gt;.  &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Try this complete code:&lt;/strong&gt;   &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$email_address = $_POST['email_address'];\n$comments = $_POST['comments'];\n$myfile = fopen(\"feedback.txt\", \"a\") or die(\"Unable to open file!\");\n$txt=\"Email: \".$email_address.\"\nComments: \".$comments.\"\n\n\";\nfwrite($myfile, $txt);\nfclose($myfile);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It's a simple mistake to make, but you should try to get into the habit of copying and pasting your variable names, rather than re-typing them. This (helps) avoid typos etc, which in large code blocks &amp;amp; multiple files, becomes an even bigger problem.  &lt;/p&gt;\n\n&lt;p&gt;And use your error logs - they are invaluable when coding!&lt;br&gt;\nIn this case PHP (thus the logs) would have moaned about that &lt;code&gt;$email&lt;/code&gt; variable not being defined, which in turn would have led you to inspect the variable and you'd have likely worked it out.  &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["需要反馈表单注释以保存到sepoerate行", ["\n\n", "I have a feedback form that saves to a txt file, it saves perfectly but it saves on one line. So multiple comments would be saved on one line so that saves to just one line on notepad rather than separating different comments onto different lines.", "\n\n", "Here is my HTML", "\n\n", "<form action=\"feedback.php\" method=\"post\">\n  <table>\n    <tr>\n      <td>Email Address:</td>\n      <td>\n        <input type=\"text\" name=\"email_address\" value=\"\" maxlength=\"100\" />\n      </td>\n    </tr>\n    <tr>\n      <td>\n        Comments:\n      </td>\n      <td>\n        <textarea rows=\"10\" cols=\"50\" name=\"comments\">\n        </textarea>\n      </td>\n    </tr>\n    <tr>\n      <td>&nbsp;</td>\n      <td>\n        <input type=\"submit\" value=\"Submit\" />\n      </td>\n    </tr>\n  </table>\n</form>\n", "\n\n", "Here is my php: ", "\n\n", "<?php\n$email_address = $_POST['email_address'];\n$comments = $_POST['comments'];\n$myfile = fopen(\"feedback.txt\", \"a\") or die(\"Unable to open file!\");\n$txt = 'Email: '.$email.'\nComments: '.$comments.'\n\n';\nfwrite($myfile, $txt);\nfclose($myfile);\n?>\n", "\n\n", "So I need different comments to save to different line rather than just one.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Quoting from &lt;a href=\"https://golang.org/pkg/reflect/#StructTag\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;reflect.StructTag&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;By convention, tag strings are a concatenation of optionally space-separated key:\"value\" pairs.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So you may specify multiple key-value pairs separated by space, like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Service struct {\n    Id uint64 `form:\"id\" valid:\"Range(1, 999)\" orm:\"auto\"`\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See more about tags in this answer: &lt;a href=\"https://stackoverflow.com/questions/10858787/what-are-the-uses-for-tags-in-go/30889373#30889373\"&gt;What are the use(s) for tags in Go?&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在beego中可以使用多个注释吗？", ["\n\n", "I have model like:", "\n\n", "type Service struct {\n    Id       uint64 \n    Name     string \n    Secret   string \n    Disabled bool\n}\n", "\n\n", "And want to use annotations like ", "form", ", ", "valid", " and ", "orm", ". And I can't find how I should declare these annotations. Should it be one or many? If many, what separator should I use?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I believe I have gotten it to work.  As stated in my comment above, the main points required are:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Specifically set the buffer locations including the &lt;code&gt;Slash&lt;/code&gt; and &lt;code&gt;NamePos&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;token.File.AddLine&lt;/code&gt; to add new lines at specific offsets (calculated using the positions from item 1)&lt;/li&gt;\n&lt;li&gt;Overallocate the source buffer so &lt;code&gt;token.File.Position&lt;/code&gt; (used by &lt;code&gt;printer.Printer&lt;/code&gt; and &lt;code&gt;token.File.Addline&lt;/code&gt; don't fail range checks on the source buffer&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Code:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"bytes\"\n    \"fmt\"\n    \"go/ast\"\n    \"go/parser\"\n    \"go/printer\"\n    \"go/token\"\n    \"testing\"\n)\n\nfunc main() {\n    tests := []testing.InternalTest{{\"TestAst\", TestAst}}\n    matchAll := func(t string, pat string) (bool, error) { return true, nil }\n    testing.Main(matchAll, tests, nil, nil)\n}\n\nfunc TestAst(t *testing.T) {\n\n    source := `package a\n\n// B comment\ntype B struct {\n    // C comment\n    C string\n}`\n\n    buffer := make([]byte, 1024, 1024)\n    for idx,_ := range buffer {\n        buffer[idx] = 0x20\n    }\n    copy(buffer[:], source)\n    fset := token.NewFileSet()\n    file, err := parser.ParseFile(fset, \"\", buffer, parser.ParseComments)\n    if err != nil {\n        t.Error(err)\n    }\n\n    v := &amp;amp;visitor{\n        file: file,\n        fset: fset,\n    }\n    ast.Walk(v, file)\n\n    var output []byte\n    buf := bytes.NewBuffer(output)\n    if err := printer.Fprint(buf, fset, file); err != nil {\n        t.Error(err)\n    }\n\n    expected := `package a\n\n// B comment\ntype B struct {\n    // C comment\n    C   string\n    // D comment\n    D   int\n    // E comment\n    E   float64\n}\n`\n    if buf.String() != expected {\n        t.Error(fmt.Sprintf(\"Test failed. Expected:\n%s\nGot:\n%s\", expected, buf.String()))\n    }\n\n}\n\ntype visitor struct {\n    file *ast.File\n    fset *token.FileSet\n}\n\nfunc (v *visitor) Visit(node ast.Node) (w ast.Visitor) {\n\n    if node == nil {\n        return v\n    }\n\n    switch n := node.(type) {\n    case *ast.GenDecl:\n        if n.Tok != token.TYPE {\n            break\n        }\n        ts := n.Specs[0].(*ast.TypeSpec)\n        if ts.Name.Name == \"B\" {\n            fields := ts.Type.(*ast.StructType).Fields\n            addStructField(v.fset, fields, v.file, \"int\", \"D\", \"D comment\")\n            addStructField(v.fset, fields, v.file, \"float64\", \"E\", \"E comment\")\n        }\n    }\n\n    return v\n}\n\nfunc addStructField(fset *token.FileSet, fields *ast.FieldList, file *ast.File, typ string, name string, comment string) {\n    prevField := fields.List[fields.NumFields()-1] \n\n    c := &amp;amp;ast.Comment{Text: fmt.Sprint(\"// \", comment), Slash: prevField.End() + 1}\n    cg := &amp;amp;ast.CommentGroup{List: []*ast.Comment{c}}\n    o := ast.NewObj(ast.Var, name)\n    f := &amp;amp;ast.Field{\n        Doc:   cg,\n        Names: []*ast.Ident{&amp;amp;ast.Ident{Name: name, Obj: o, NamePos: cg.End() + 1}},\n    }\n    o.Decl = f\n    f.Type = &amp;amp;ast.Ident{Name: typ, NamePos: f.Names[0].End() + 1}\n\n    fset.File(c.End()).AddLine(int(c.End()))\n    fset.File(f.End()).AddLine(int(f.End()))\n\n    fields.List = append(fields.List, f)\n    file.Comments = append(file.Comments, cg)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example: &lt;a href=\"http://play.golang.org/p/_q1xh3giHm\" rel=\"noreferrer\"&gt;http://play.golang.org/p/_q1xh3giHm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For &lt;em&gt;Item (3)&lt;/em&gt;, it is also important to set all the overallocated bytes to spaces (&lt;code&gt;0x20&lt;/code&gt;), so that the printer doesn't complain about null bytes when processing them.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["将项目添加到Go AST后，注释乱序", ["\n\n", "以下测试尝试使用AST将字段添加到结构中。 字段已正确添加，但注释未按顺序添加。 我收集了可能需要手动指定的位置，但是到目前为止，我已经找到了答案。\n\n测试失败：http://play.golang.org/p/RID4N30FZK\n\n这是代码：", "\n\n", "package generator\n\nimport (\n    \"bytes\"\n    \"fmt\"\n    \"go/ast\"\n    \"go/parser\"\n    \"go/printer\"\n    \"go/token\"\n    \"testing\"\n)\n\nfunc TestAst(t *testing.T) {\n\n    source := `package a\n\n// B comment\ntype B struct {\n    // C comment\n    C string\n}`\n\n    fset := token.NewFileSet()\n    file, err := parser.ParseFile(fset, \"\", []byte(source), parser.ParseComments)\n    if err != nil {\n        t.Error(err)\n    }\n\n    v := &visitor{\n        file: file,\n    }\n    ast.Walk(v, file)\n\n    var output []byte\n    buf := bytes.NewBuffer(output)\n    if err := printer.Fprint(buf, fset, file); err != nil {\n        t.Error(err)\n    }\n\n    expected := `package a\n\n// B comment\ntype B struct {\n    // C comment\n    C string\n    // D comment\n    D int\n    // E comment\n    E float64\n}\n`\n\n    if buf.String() != expected {\n        t.Error(fmt.Sprintf(\"Test failed. Expected:\n%s\nGot:\n%s\", expected, buf.String()))\n    }\n\n    /*\n    actual output = `package a\n\n// B comment\ntype B struct {\n    // C comment\n    // D comment\n    // E comment\n    C   string\n    D   int\n    E   float64\n}\n`\n    */\n\n}\n\ntype visitor struct {\n    file *ast.File\n}\n\nfunc (v *visitor) Visit(node ast.Node) (w ast.Visitor) {\n\n    if node == nil {\n        return v\n    }\n\n    switch n := node.(type) {\n    case *ast.GenDecl:\n        if n.Tok != token.TYPE {\n            break\n        }\n        ts := n.Specs[0].(*ast.TypeSpec)\n        if ts.Name.Name == \"B\" {\n            fields := ts.Type.(*ast.StructType).Fields\n            addStructField(fields, v.file, \"int\", \"D\", \"D comment\")\n            addStructField(fields, v.file, \"float64\", \"E\", \"E comment\")\n        }\n    }\n\n    return v\n}\n\nfunc addStructField(fields *ast.FieldList, file *ast.File, typ string, name string, comment string) {\n    c := &ast.Comment{Text: fmt.Sprint(\"// \", comment)}\n    cg := &ast.CommentGroup{List: []*ast.Comment{c}}\n    f := &ast.Field{\n        Doc:   cg,\n        Names: []*ast.Ident{ast.NewIdent(name)},\n        Type:  ast.NewIdent(typ),\n    }\n    fields.List = append(fields.List, f)\n    file.Comments = append(file.Comments, cg)\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个问题  .. 其实就是缩进问题....缩进 注释的缩进少了一个空格而已...&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["python注释问题..在def下 同样的注释,一个报错,一个没有问题.", ["直接看图", "\n\n", "\n\n", "\n", " ", "\n", "第一个 centenQ 函数,报错..", "\n", "第二个正常..", "\n", "\n", "删除 注释 就正常了..缩进没有问题", "\n", "感觉这个有点奇葩了啊.", "\n", "是我哪里没写对么?", "\n", "难道是 pycharm 的问题?", "\n", "\n", "记得之前我写了一个奇葩的代码,,是pycharm无法运行,vscode里就运行了."]], "Tag": "程序设计"}
{"Answer": "按住ctrl+鼠标左键看不了吗，提示什么", "Konwledge_Point": "注释", "Question": ["IDEA 不能点击注解查看源码", ["1.我的IDEA版本是2019-1.4，破解的。看到别人能点击注解查看源码，而我的却不能！走过路过的各位大佬告诉我一下，谢谢！"]], "Tag": "程序设计"}
{"Answer": "//宏\r\n#define OK 1\t//正常\r\n#define ERROR -1 //错误\r\n#define MaxSize 100 //表的最大个数\r\n\r\n//转义\r\ntypedef int status;\r\n\r\n//学生信息数据结构\r\ntypedef struct stu {\r\n\tchar name[20];\r\n\tint age;\r\n\tint no;\r\n}Stu;\r\n\r\n//表的数据结构\r\ntypedef struct sqlist {\r\n\tStu *Elem;\r\n\tint length;\r\n}Sqlist;\r\n\r\n//初始化表（传入参数：表指针）\r\nstatus Init_List(Sqlist *L)\r\n{\r\n\tL-&gt;Elem = (Stu *)malloc(MaxSize * sizeof(Stu));//根据表长分配空间（简单说就是一个Stu数组）\r\n\tif (!L-&gt;Elem)//分配失败\r\n\t{\r\n\t\tprintf(\"Allocation Error!\\n\");\r\n\t\treturn ERROR;\r\n\t}\r\n\r\n\tL-&gt;length = 0;//初始化长度\r\n\treturn OK;\r\n}\r\n\r\n//插入学生（传入参数：表指针， 插入位置， 学生信息指针）\r\nstatus Insert_List(Sqlist *L, int pos, Stu *s)\r\n{\r\n\tint k;\r\n\r\n\t//判断传入的位置是否正确\r\n\tif (pos&lt;1 || pos&gt;L-&gt;length + 1)\r\n\t\treturn ERROR;\r\n\r\n\t//将需要插入位置空出来，将插入位置后的数据都后移一位\r\n\tfor (k = L-&gt;length - 1; k &gt;= pos - 1; k--)\r\n\t\tL-&gt;Elem[k + 1] = L-&gt;Elem[k];\r\n\r\n\tprintf(\"Input information of the new student (name age number):\\n\");\r\n\tscanf(\"%s %d %d\", s-&gt;name, &amp;s-&gt;age, &amp;s-&gt;no);\r\n\r\n\t//插入对应位置信息\r\n\tL-&gt;Elem[pos - 1] = *s;\r\n\tL-&gt;length++;//修改表长度\r\n\r\n\treturn OK;\r\n}\r\n\r\n//删除学生信息（传入参数：表指针， 删除的学生名称）\r\nstatus Del_List(Sqlist *L, char *name)\r\n{\r\n\tint i;\r\n\r\n\t//没有学生\r\n\tif (L-&gt;length == 0)\r\n\t\treturn ERROR;\r\n\r\n\t//循环找到该学生位置\r\n\tfor (i = 0; i&lt;L-&gt;length; i++)\r\n\t\tif (strcmp(name, L-&gt;Elem[i].name) == 0)\r\n\t\t\tbreak;\r\n\r\n\t//找到末尾没有找到\r\n\tif (i == L-&gt;length)\r\n\t{\r\n\t\tprintf(\"Can not find %s.\\n\", name);\r\n\t\treturn ERROR;\r\n\t}\r\n\r\n\t//将删除节点后的学生信息往迁移，填充（这里的删除就是覆盖）\r\n\twhile (i&lt;L-&gt;length - 1)\r\n\t{\r\n\t\tL-&gt;Elem[i] = L-&gt;Elem[i + 1];\r\n\t\ti++;\r\n\t}\r\n\r\n\tL-&gt;length--;//调整表长度\r\n\treturn OK;\r\n}\r\n\r\n//打印学生信息（传入参数：表指针）\r\nvoid Output(Sqlist *L)\r\n{\r\n\tint i;\r\n\tprintf(\"The elements in the list:\\n\");\r\n\r\n\t//循环打印出每个学生信息\r\n\tfor (i = 0; i&lt;L-&gt;length; i++)\r\n\t\tprintf(\"student %d: %20s %3d %8d\\n\", i + 1, L-&gt;Elem[i].name, L-&gt;Elem[i].age, \\\r\n\t\t\tL-&gt;Elem[i].no);\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n\t//新建对象\r\n\tSqlist L;//表\r\n\tStu s;//学生结构\r\n\tint i, n;\r\n\tchar name[20];\r\n\r\n\tInit_List(&amp;L);//初始化表\r\n\tprintf(\"Input the number of the students.\\n\");\r\n\tscanf(\"%d\", &amp;n);//输入学生数\r\n\r\n\t//循环插入信息\r\n\tfor (i = 1; i &lt;= n; i++)\r\n\t\tInsert_List(&amp;L, i, &amp;s);\r\n\t\r\n\t//打印\r\n\tOutput(&amp;L);\r\n\r\n\t//插入学生\r\n\tprintf(\"Input the position of the new student.\\n\");\r\n\tscanf(\"%d\", &amp;n);//输入插入位置\r\n\t//插入\r\n\tInsert_List(&amp;L, n, &amp;s);\r\n\tOutput(&amp;L);//打印\r\n\r\n\t//删除学生\r\n\tprintf(\"Input the name of the student to be deleted.\\n\");\r\n\tscanf(\"%s\", name);//输入删除学生名\r\n\tDel_List(&amp;L, name);//删除\r\n\tOutput(&amp;L);//打印\r\n\r\n\treturn OK;\r\n\r\n\r\n}", "Konwledge_Point": "注释", "Question": ["求大佬注释c语言数据结构线性表", ["求大佬帮忙注释一下，初学小白，什么都看不懂", "\n\n", " #include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define OK 1\n#define ERROR -1\n#define MaxSize 100\ntypedef int status;\ntypedef struct stu{\n    char name[20];\n    int age;\n    int no;\n}Stu;\ntypedef struct sqlist{\n    Stu *Elem;\n    int length;\n}Sqlist;\nstatus Init_List(Sqlist *L)\n{\n    L->Elem=(Stu *)malloc(MaxSize*sizeof(Stu));\n    if(!L->Elem)\n    {\n        printf(\"Allocation Error!\\n\");\n        return ERROR;\n    }\n    L->length=0;\n    return OK;\n}\nstatus Insert_List(Sqlist *L,int pos,Stu *s)\n{\n    int k;\n    if(pos<1 || pos>L->length+1)\n        return ERROR;\n    for(k=L->length-1;k>=pos-1;k--)\n        L->Elem[k+1]=L->Elem[k];\n    printf(\"Input information of the new student (name age number):\\n\");\n    scanf(\"%s %d %d\",s->name,&s->age,&s->no);\n    L->Elem[pos-1]=*s;\n    L->length++;\n    return OK;\n}\nstatus Del_List(Sqlist *L,char *name)\n{\n    int i;\n    if(L->length==0)\n        return ERROR;\n    for(i=0;i<L->length;i++)\n        if(strcmp(name,L->Elem[i].name)==0)\n            break;\n    if(i==L->length)\n    {\n        printf(\"Can not find %s.\\n\",name);\n        return ERROR;\n    }\n    while(i<L->length-1)\n    {\n        L->Elem[i]=L->Elem[i+1];\n        i++;\n    }       \n    L->length--;\n    return OK;\n}\nvoid Output(Sqlist *L)\n{\n    int i;\n    printf(\"The elements in the list:\\n\");\n    for(i=0;i<L->length;i++)\n        printf(\"student %d: %20s %3d %8d\\n\",i+1,L->Elem[i].name,L->Elem[i].age,\\\n        L->Elem[i].no);\n    printf(\"\\n\");\n}\nint main()\n{\n    Sqlist L;\n    Stu s;\n    int i,n;\n    char name[20];\n    Init_List(&L);\n    printf(\"Input the number of the students.\\n\");\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        Insert_List(&L,i,&s);\n    Output(&L);\n    printf(\"Input the position of the new student.\\n\");\n    scanf(\"%d\",&n);\n    Insert_List(&L,n,&s);\n    Output(&L);\n    printf(\"Input the name of the student to be deleted.\\n\");\n    scanf(\"%s\",name);\n    Del_List(&L,name);\n    Output(&L);\n    return OK;\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "晕，那你试一试写到属性上面去啊\r\nPS:同名的就没必要写@Column注解了", "Konwledge_Point": "注释", "Question": ["JPA注释问题", ["这个问题弄了一个上午了。。。 :cry: ", "\n\n", "是这样，我在使用JPA注释的时候Column总是无法映射到正确的列名上，比如Entity片段", "\n\n", "[code=\"java\"]", "\n@Entity", "\n@Table(name = \"ktmap\", schema = \"ge\")", "\n。。。", "\n@Column(name=\"min_lv\")", "\npublic Integer getMinLv() {", "\n    return minLv;", "\n}", "\n[/code]", "\nhibernate打出来的SQL始终是minLv而不是min_lv。。。", "\n\n", "无语了，请哪位帮忙看一下吧。", "\n这个是applicationContext.xml", "\n[code=\"java\"]", "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "\n    xmlns:context=\"http://www.springframework.org/schema/context\"", "\n    xmlns:aop=\"http://www.springframework.org/schema/aop\"", "\n    xmlns:tx=\"http://www.springframework.org/schema/tx\"", "\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans", "\n                        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd", "\n                        http://www.springframework.org/schema/context", "\n                        http://www.springframework.org/schema/context/spring-context-2.5.xsd", "\n                        http://www.springframework.org/schema/aop", "\n                        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd", "\n                        http://www.springframework.org/schema/tx", "\n                        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\">", "\n\n", "<bean class=\"org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator\"/>\n\n<bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean\">\n    <property name=\"dataSource\" ref=\"dataSource\"/>\n    <property name=\"configLocation\" value=\"classpath:hibernate.cfg.xml\"/>\n    <property name=\"hibernateProperties\">\n        <value>\n            hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\n            hibernate.query.substitutions=true 'Y', false 'N'\n            hibernate.cache.use_second_level_cache=true\n            hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider\n            hibernate.cache.use_query_cache=true\n            hibernate.show_sql=true\n            hibernate.format_sql=true\n            hibernate.jdbc.batch_size=25\n            hibernate.jdbc.fetch_size=50 \n            hibernate.hbm2ddl.auto=none     \n            net.sf.ehcache.configurationResourceName=classpath:ehcache.xml\n        </value>\n    </property>\n</bean>\n\n<bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"${jdbc.driverClassName}\"/>\n    <property name=\"url\" value=\"${jdbc.url}\"/>\n    <property name=\"username\" value=\"${jdbc.username}\"/>\n    <property name=\"password\" value=\"${jdbc.password}\"/> \n    <property name=\"maxActive\" value=\"200\"/>\n    <property name=\"initialSize\" value=\"30\"/>        \n    <property name=\"maxIdle\" value=\"30\"/>\n    <property name=\"minIdle\" value=\"20\"/>\n    <property name=\"maxWait\" value=\"1000\"/>\n    <property name=\"defaultAutoCommit\" value=\"true\"/>\n    <property name=\"removeAbandoned\" value=\"true\"/>\n    <property name=\"removeAbandonedTimeout\" value=\"60\"/>\n    <property name=\"logAbandoned\" value=\"false\"/>\n    <property name=\"validationQuery\" value=\"SELECT 1\"/>\n    <property name=\"testOnBorrow\" value=\"true\" />\n    <property name=\"testOnReturn\" value=\"false\" />\n    <property name=\"testWhileIdle\" value=\"true\"/>\n    <property name=\"timeBetweenEvictionRunsMillis\" value=\"3600000\"/>\n    <property name=\"minEvictableIdleTimeMillis\" value=\"18000000\"/>\n</bean>\n<bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n    <property name=\"locations\">\n        <list>\n            <value>classpath:jdbc.properties</value>             \n        </list>\n    </property>\n</bean>\n<bean id=\"transactionManager\" class=\"org.springframework.orm.hibernate3.HibernateTransactionManager\">  \n    <property name=\"sessionFactory\" ref=\"sessionFactory\"/>  \n    <property name=\"dataSource\" ref=\"dataSource\"/>  \n</bean>\n<bean class=\"org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor\">  \n    <property name=\"transactionInterceptor\" ref=\"transactionInterceptor\"/>  \n</bean>\n<bean id=\"transactionInterceptor\" class=\"org.springframework.transaction.interceptor.TransactionInterceptor\">  \n    <property name=\"transactionManager\" ref=\"transactionManager\"/>  \n    <property name=\"transactionAttributeSource\">  \n        <bean class=\"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource\"/>  \n    </property>  \n</bean>\n<bean id=\"beanNameAutoProxyCreator\" class=\"org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator\">  \n    <property name=\"beanNames\">  \n        <list><value>*Service</value></list>  \n    </property>    \n    <property name=\"interceptorNames\">  \n        <list><value>transactionInterceptor</value></list>  \n    </property>  \n</bean>\n<tx:annotation-driven transaction-manager=\"transactionManager\" />\n", "\n\n", "\n[/code]", "\n\n", "其中Datasource使用了propertyConfigurer从jdbc中获得的，这个是没有问题的。", "\n也就是说如果我在数据库中加入minLv列，是可以取到数据的。hibernate.cfg.xml里面只有mapping-class没有其他的东西。"]], "Tag": "程序设计"}
{"Answer": "找到了，将Name中的字符COPY至表的Comment中\r\n\r\n步骤：\r\n将下面的脚本拷贝\r\nPowerDesigner-&gt;Tools-&gt;Execute Commands-&gt;Edit/Run Scripts，然后RUN，再导出就有注释了。\r\n\r\n\r\nOption   Explicit \r\nValidationMode   =   True \r\nInteractiveMode   =    im_Batch \r\n\r\nDim    mdl   '    the    current    model \r\n\r\n'    get    the    current    active    model \r\nSet    mdl   =    ActiveModel \r\nIf    (mdl   Is   Nothing)   Then \r\n      MsgBox   \"There    is    no    current    Model \" \r\nElseIf   Not    mdl.IsKindOf(PdPDM.cls_Model)   Then \r\n      MsgBox   \"The    current    model    is    not    an    Physical    Data    model. \" \r\nElse \r\n       ProcessFolder    mdl \r\nEnd   If \r\n\r\n'    This    routine    copy    name    into    comment    for    each    table,    each    column    and    each    view \r\n'    of    the    current    folder \r\nPrivate   sub    ProcessFolder(folder) \r\n      Dim    Tab   'running      table \r\n      for   each    Tab    in    folder.tables \r\n            if   not    tab.isShortcut   then \r\n                   tab.comment   =    tab.name \r\n                  Dim    col   '    running    column \r\n                  for   each    col    in    tab.columns \r\n                         col.comment=    col.name \r\n                  next \r\n            end   if \r\n      next \r\n\r\n      Dim    view   'running    view \r\n      for   each    view    in    folder.Views \r\n            if   not    view.isShortcut   then \r\n                   view.comment   =    view.name \r\n            end   if \r\n      next \r\n\r\n      '    go    into    the    sub-packages \r\n      Dim    f   '    running    folder \r\n      For   Each    f    In    folder.Packages \r\n            if   not    f.IsShortcut   then \r\n                   ProcessFolder    f \r\n            end   if \r\n      Next \r\nend   sub", "Konwledge_Point": "注释", "Question": ["PDM生成sql脚本添加注释的问题", ["pdm 里面的物理表 在倒sql 出来的时候（db2数据库），我想添加列注释，根据网上的方法，不管我怎么设置，列属性就是加不上。", "\n我的具体方法如下：数据库---》EDIT CURRENT DBMS ...然后图片如下。。。", "\n\n", "倒出来的sql 为：", "\n\n", "DROP TABLE CCR_AREA_RISK;", "\n\n", "--==============================================================", "\n-- Table: CCR_AREA_RISK", "\n--==============================================================", "\nCREATE TABLE CCR_AREA_RISK", "\n(", "\n   AREA_CODE            VARCHAR(20)            NOT NULL,", "\n   RISK_FACTOR          NUMERIC(16,2),", "\n   CONSTRAINT \"P_KEY_1\" PRIMARY KEY (AREA_CODE)", "\n);", "\n\n", "反正就是没有注释，不管我怎么改，也不报错，也不出来。。。。是不是要在哪里设置一下开关？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;多行注释的方法&amp;#xff1a;&lt;br /&gt;参考地址&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/yymn/p/4617626.html\"&gt;https://www.cnblogs.com/yymn/p/4617626.html&lt;/a&gt;&lt;br /&gt;&lt;strong&gt;如有帮助&amp;#xff0c;请点击我回答右上角【采纳】按钮支持一下。&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-comment\"&gt;%{&lt;!-- --&gt;&lt;/span&gt;\n若干语句\n&lt;span class=\"hljs-comment\"&gt;%}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["matlab中m文件注释", ["m文件中进行注释时怎么分两行，一行太长了，应该怎么操作啊", "就弄成如图中的这种形式"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;添加注释后&amp;#xff0c;完整如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void init&lt;span class=\"hljs-constructor\"&gt;Components()&lt;/span&gt; {\n  &lt;span class=\"hljs-comment\"&gt;// 设置标题&lt;/span&gt;\n  set&lt;span class=\"hljs-constructor\"&gt;Title(&lt;span class=\"hljs-string\"&gt;&amp;#34;恭喜&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n  &lt;span class=\"hljs-comment\"&gt;// jPanel2面板设置网格布局&amp;#xff0c;这个网格是2行4列&lt;/span&gt;\n  jPanel2.set&lt;span class=\"hljs-constructor\"&gt;Layout(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; GridLayout(2,4)&lt;/span&gt;);\n  &lt;span class=\"hljs-comment\"&gt;// 标签设置13号字体&amp;#xff0c;样式是1&lt;/span&gt;\n  jLabel1.set&lt;span class=\"hljs-constructor\"&gt;Font(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; Font(&lt;span class=\"hljs-string\"&gt;&amp;#34;Dialog&amp;#34;&lt;/span&gt;, 1, 13)&lt;/span&gt;);\n  &lt;span class=\"hljs-comment\"&gt;// 背景色设置为红包&lt;/span&gt;\n  jLabel1.set&lt;span class=\"hljs-constructor\"&gt;Foregroud(Color.&lt;span class=\"hljs-params\"&gt;red&lt;/span&gt;)&lt;/span&gt;;\n  &lt;span class=\"hljs-comment\"&gt;// 设置标签的文字内容&lt;/span&gt;\n  jLabel1.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-string\"&gt;&amp;#34;祝贺你&amp;#xff0c;你的得分已经进入TOP10的行列&amp;#xff01;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n\n  &lt;span class=\"hljs-comment\"&gt;// 创建一个标签2&amp;#xff0c;并设置标签的文字内容&lt;/span&gt;\n  jLabel2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JLable(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的名字&amp;#xff1a;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n  &lt;span class=\"hljs-comment\"&gt;// 设置文本域的列为28&amp;#xff0c;也就是一行28个字&lt;/span&gt;\n  TextField1 &amp;#61; newe &lt;span class=\"hljs-constructor\"&gt;JTextField(20)&lt;/span&gt;;\n\n  &lt;span class=\"hljs-comment\"&gt;// 创建一个确定按钮&lt;/span&gt;\n  jButton1&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;确定&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n  &lt;span class=\"hljs-comment\"&gt;// 创建一个取消按钮&lt;/span&gt;\n  jButton2&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;取消&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n\n  &lt;span class=\"hljs-comment\"&gt;// 把标签1加到面板1中&lt;/span&gt;\n  jPanel1.add(jLabel1);\n  &lt;span class=\"hljs-comment\"&gt;// 在面板2中添加一个标签&lt;/span&gt;\n  jPanel2.add(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JLabel()&lt;/span&gt;);\n  &lt;span class=\"hljs-comment\"&gt;// 把标签2添加到面板2中&lt;/span&gt;\n  jPanel2.add(jLable2);\n  &lt;span class=\"hljs-comment\"&gt;// 把文本域添加到面板2中&lt;/span&gt;\n  jPanel2.add(TextField1);\n\n  &lt;span class=\"hljs-comment\"&gt;// 把确定按钮添加到面板3中&lt;/span&gt;\n  jPanel3.add(jButton1);\n  &lt;span class=\"hljs-comment\"&gt;// 把取消按钮添加到面板3中&lt;/span&gt;\n  jPanel3.add(jButton2);\n\n  &lt;span class=\"hljs-comment\"&gt;// 把面板1放到窗口的上面&lt;/span&gt;\n  get&lt;span class=\"hljs-constructor\"&gt;ContentPanel()&lt;/span&gt;.add(jPanel1, BorderLayout.NORTH);\n  &lt;span class=\"hljs-comment\"&gt;// 把面板2放到窗口的中间&lt;/span&gt;\n  get&lt;span class=\"hljs-constructor\"&gt;ContentPanel()&lt;/span&gt;.add(jPanel2, BorderLayout.CENTER);\n  &lt;span class=\"hljs-comment\"&gt;// 把面板3放到窗口的下面&lt;/span&gt;\n  get&lt;span class=\"hljs-constructor\"&gt;ContentPanel()&lt;/span&gt;.add(jPanel3, BorderLayout.SOUTH);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳&amp;#xff0c;十分感谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求图片上面每一行代码的注释 解释清楚一点", ["Java俄罗斯方块代码求每一步的注释和作用111111111111111111111111111111111111111111"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的注释已经很详细了&amp;#xff0c;你直接说你那看懂还好点。注释再详细&amp;#xff0c;如果不知道你的问题点也很难对上。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["c语言代码注释，详细一点，有赏", ["刚刚开始，学习一年", "单链表的代码，C语言的，", "来个哥", "帮我写个注释", "要详细一点的", "谢谢各位帮忙", "给大家磕个头"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/lanxuezaipiao/p/3291641.html", "Konwledge_Point": "注释", "Question": ["Eclipse中使用三方的jar包（自编），配置了javadoc后，为何仍然不显示注释？", ["RT，三方jar在配置doc后，不显示注释，鼠标放置在上面，没有任何反应", "\n自己在Eclipse写了一个java工程，写了注释。", "\n1、打成a.jar包。a.jar包默认方式打包", "\n2、导出了a.doc文档（因为有中文注释，所以加入了-encoding UTF-8 -charset UTF-8），并将doc文档中的index.html所在的文件全选，压缩成zip包。", "\n3、新建一个工程b，新建一个libs文件夹，放置a.jar。在b工程的java build path 中，配置a.jar的javadoc地址为a.zip。点击viladate..，验证通过，也可以前往网址查看。如图：", "\n4、回到b工程的类中，查看被引用的a.jar中的方法是否有注释。没配置之前提示：“Note: This element neither has attached source nor attached Javadoc and hence no Javadoc could be found.", "\n”配置后，却没有了任何提示。请问这是什么原因呢？（按下shift+f2可以正常跳转到网页）各位大神，这问题困扰我好久了，求帮忙！！！", "\n\n", "ps，另外第三步骤可以使用文件的方式，我的电脑不知道什么问题，配置后，在浏览器中打开会出现多了个file，导致无法连接。这是为什么呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img title=\"1628577390(1).png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/728293775826184.png\" /&gt;&lt;br /&gt;忘了结帖了 对不住兄弟们了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["MySQL 如何查出某字段的注释？查出一个或多个 不要所有的", ["MySQL 如何查出某字段的注释？查出一个或多个字段的都可以但是 不要所有的字段 hxd们来help me"]], "Tag": "程序设计"}
{"Answer": "比如有一个按键叫jb1,添加注释就是jb1.setToolTipText(\"提示信息\");", "Konwledge_Point": "注释", "Question": ["Java如何给按钮添加注释？", ["如题，", "\nJava如何让鼠标悬停在一个按钮JButton上，然后显示按钮注释？"]], "Tag": "程序设计"}
{"Answer": "在新版本的myeclipse中的自带hibernate插件允许使用annnocation model的生成。", "Konwledge_Point": "注释", "Question": ["怎样自动生成基于注释的model", ["大家好,问下怎么样能用 eclipse 或 myEclipse 生成 基于注释的 model,工程里用过,但是不知道怎么生成的."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;权限问题&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["git lab 上修改已经push的代码注释，已及push events 状态", ["由于在写 commit 注释时内容有误，想要修改注释但是出现如下情况", "\n", "想问一下大家:", "\n", "出现这种情况是远端权限问题吗？", "\n", "一般来说修改好注释后push events的记录注释会同步修改呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;B&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于Python语言的注释，以下选项中描述错误的是_______。", ["A. 单行注释以#开头", "\nB. 单行注释以单引号’开头", "\nC. 多行注释以’‘’（三个单引号）开头和结尾", "\nD. Python语言有两种注释方式：单行注释和多行注释"]], "Tag": "程序设计"}
{"Answer": "写了个例子，你可以参照下\r\n\r\npackage iteyeQuestions;\r\n\r\n/*\r\n * java怎样用正则表达式匹配文档注释，如“斜杠**@date 2012-1-2*斜杠”?\r\n * 现在想做个把文件的文档注释删除的东西？不知道java怎样用正则表达式来匹配，请各位帮忙 \r\n*/\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\n\r\npublic class RidNotation {\r\n\r\n\t//待处理代码文档输入流\r\n\tprivate BufferedReader br;\r\n\t//待处理代码文档输出流\r\n\tprivate PrintWriter pw;\r\n\t\r\n\t//构造方法\r\n\tpublic RidNotation(String inputUrl,String outputUrl) throws IOException{\r\n\t\tthis.br= new BufferedReader(new FileReader(new File(inputUrl)));\r\n\t\tthis.pw= new PrintWriter(new BufferedWriter(new FileWriter(outputUrl)));;\r\n\t}\r\n\t\r\n\t//去文档型注册的方法\r\n\tpublic void ridDocType() throws IOException{\r\n\t\tString temp=null;\r\n\t\tboolean isNotation=false;\r\n\t\twhile (this.br.ready()) {\r\n\t\t\ttemp=this.br.readLine();\r\n\t\t\tint start=0;\r\n\t\t\tint end=0;\r\n\t\t\tif(isNotation){\r\n\t\t\t\tif((end=temp.indexOf(\"*/\"))==-1){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}else{//找到注释结束标志\r\n\t\t\t\t\tint anotherStart=0;\r\n\t\t\t\t\tif((anotherStart=temp.substring(end).indexOf(\"/**\"))==-1){\r\n\t\t\t\t\t\tisNotation=false;//此后为代码段\r\n\t\t\t\t\t\tthis.pw.println(temp.substring(end+2));//把本行剩余的代码输出\r\n\t\t\t\t\t}else{//又在本行内找到另一个开始标志,输出中间代码\r\n\t\t\t\t\t\tthis.pw.println(temp.substring(end+2,anotherStart));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif((start=temp.indexOf(\"/**\"))==-1){\r\n\t\t\t\t\tthis.pw.println(temp);\r\n\t\t\t\t}else{//找到注释开始标志\r\n\t\t\t\t\tif((end=temp.substring(start).indexOf(\"*/\"))==-1){\r\n\t\t\t\t\t\tisNotation=true;//此后为注释段\r\n\t\t\t\t\t\tthis.pw.println(temp.substring(0,start));\r\n\t\t\t\t\t}else{//此行内同时含有注释结尾标志\r\n\t\t\t\t\t\tthis.pw.println(temp.substring(0,start)+temp.substring(end+2));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.br.close();\r\n\t\tthis.pw.close();\r\n\t}\r\n\t/**\r\n\t * @param args\r\n\t * @throws IOException \r\n\t */\r\n\tpublic static void main(String[] args) throws IOException {\r\n\t\t//测试代码\r\n\t\tnew RidNotation(\"RidNotation.java\",\"outttt.txt\").ridDocType();\r\n\t}\r\n\r\n}", "Konwledge_Point": "注释", "Question": ["java怎样用正则表达式匹配文档注释，如“/**@date 2012-1-2*/”?", ["现在想做个把文件的文档注释删除的东西？不知道java怎样用正则表达式来匹配，请各位帮忙"]], "Tag": "程序设计"}
{"Answer": "为了在程序里吃掉前面输入的回车，并且让你输入车型，否则gets取得的w可能是\"\"，导致strlen(w)为0，不循环。", "Konwledge_Point": "注释", "Question": ["为什么这里要有一个getchar（），把这个注释掉程序可以通过编译但运行结果有问题", ["\n\n", "大佬能不能帮忙具体解释一下这个getchar()[注释符号后面]有什么作用，我以为是多余的，但是注释掉之后循环只能循环一次，这是为什么呢？", "\n初学c，希望大佬帮忙看看，谢谢！"]], "Tag": "程序设计"}
{"Answer": "![图片说明](http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/001/face/14.gif)![图片说明](http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/001/face/14.gif)![图片说明](http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/001/face/14.gif)", "Konwledge_Point": "注释", "Question": ["C语言 求注释这是什么意思啊？ ", ["编写函数int fun(char s1,char *s2)，在字符串s1中统计字符串s2出现的次数并返回。若s2在s1中未出现，则返回0。例如：", "\n若输入的字符串s1为：abaaAabcaabbabca，字符串s2为：ab ，则程序输出：n=4", "\n若输入的字符串s1为：abaaAabcaabbabca，字符串s2为：abd，则程序输出：No find", "\n答案： int fun(char *s1, char *s2)", "\n{", "\nint i, j, len1 = strlen (s1), len2 = strlen (s2), n=0;", "\nfor (i=0; i<=len1-len2; i++)", "\n{", "\nfor (j=0; j<len2; j++)", "\n{", "\nif ((s1+i+j) != *(s2+j))", "\nbreak;", "\n}", "\nif (j == len2)", "\n{", "\ni += j-1;", "\nn++;", "\n}", "\n}", "\nreturn n;", "\n}", "\n求每行的注释！！！！！！！！！！1", "\n"]], "Tag": "程序设计"}
{"Answer": "python是用#和’’’ ’’’ la来zhuslaizhush来注释的", "Konwledge_Point": "注释", "Question": ["eclipse+python里边的双斜杠‘//’不起注释的作用,", []], "Tag": "程序设计"}
{"Answer": "可能你的赋值语句flag = 1;写在了int a[5] = {5, 2, 1, 4, 6}; 变量定义前面，       你把flag = 1;这句话放到int a[5] = {5, 2, 1, 4, 6};后面估计就行了，\r\n你也没粘贴报错的信息啊，根据错误信息，一下就能定位错误啊。", "Konwledge_Point": "注释", "Question": ["c语言-为什么注释这样写就会报错，而上面那样写写就不会报错", [" #include <stdio.h>\nvoid main()\n{\n    //extern void print_int_array(int a[], int n);\n    void print_int_array(int a[], int n);\n    int i, j, t;        \n    int flag = 1;\n    //int i, j, t, flag;   //??????为什么注释这样写就会报错，而上面那样写写就不会报错\n    //flag = 1;\n    int a[5] = {5, 2, 1, 4, 6};\n    while(flag)\n    {\n        flag = 0;\n        for(i = 0; i < 5; i++)\n        {\n            for(j = 0; j < 5-i-1; j++)\n            {\n                if(a[j] > a[j+1])\n                {\n                    t = a[j];\n                    a[j] = a[j+1];\n                    a[j+1] = t;\n                    flag = 1;   \n                }\n            }\n        }\n    }\n    print_int_array(a, 5);\n}\n\nvoid print_int_array(int a[], int n)\n{\n    int i;\n    for(i = 0; i < n; i++)\n    {\n        printf(\"%d\\t\", a[i]);\n    }\n    printf(\"\\n\");\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; { &lt;span class=\"hljs-title class_\"&gt;DependencyList&lt;/span&gt;, useCallback, useRef, useState } &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; useMountedState &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;./useMountedState&amp;#39;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; { &lt;span class=\"hljs-title class_\"&gt;FunctionReturningPromise&lt;/span&gt;, &lt;span class=\"hljs-title class_\"&gt;PromiseType&lt;/span&gt; } &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;./misc/types&amp;#39;&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;type&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AsyncState&lt;/span&gt;&amp;lt;T&amp;gt; &amp;#61;\n  | {\n      &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt;;\n      error?: &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt;;\n      value?: &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt;;\n    }\n  | {\n      &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n      error?: &lt;span class=\"hljs-title class_\"&gt;Error&lt;/span&gt; | &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt;;\n      value?: T;\n    }\n  | {\n      &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n      &lt;span class=\"hljs-attr\"&gt;error&lt;/span&gt;: &lt;span class=\"hljs-title class_\"&gt;Error&lt;/span&gt;;\n      value?: &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt;;\n    }\n  | {\n      &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n      error?: &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt;;\n      &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: T;\n    };\n\n&lt;span class=\"hljs-keyword\"&gt;type&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;StateFromFunctionReturningPromise&lt;/span&gt;&amp;lt;T &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;FunctionReturningPromise&lt;/span&gt;&amp;gt; &amp;#61; &lt;span class=\"hljs-title class_\"&gt;AsyncState&lt;/span&gt;&amp;lt;\n  &lt;span class=\"hljs-title class_\"&gt;PromiseType&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;ReturnType&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt;\n&amp;gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;type&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AsyncFnReturn&lt;/span&gt;&amp;lt;T &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;FunctionReturningPromise&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title class_\"&gt;FunctionReturningPromise&lt;/span&gt;&amp;gt; &amp;#61; [\n  &lt;span class=\"hljs-title class_\"&gt;StateFromFunctionReturningPromise&lt;/span&gt;&amp;lt;T&amp;gt;,\n  T\n];\n&lt;span class=\"hljs-comment\"&gt;//定义一个使用异步的hook&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//第一个参数需要被异步执行的函数,fn是一个promise&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//第二个参数 重新生成需要被异步执行函数的依赖项&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//第三个参数 用来初始化异步函数的初始状态&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; useAsyncFn&amp;lt;T &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;FunctionReturningPromise&lt;/span&gt;&amp;gt;(\n  &lt;span class=\"hljs-attr\"&gt;fn&lt;/span&gt;: T,\n  &lt;span class=\"hljs-attr\"&gt;deps&lt;/span&gt;: &lt;span class=\"hljs-title class_\"&gt;DependencyList&lt;/span&gt; &amp;#61; [],\n  &lt;span class=\"hljs-attr\"&gt;initialState&lt;/span&gt;: &lt;span class=\"hljs-title class_\"&gt;StateFromFunctionReturningPromise&lt;/span&gt;&amp;lt;T&amp;gt; &amp;#61; { &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt; }\n): &lt;span class=\"hljs-title class_\"&gt;AsyncFnReturn&lt;/span&gt;&amp;lt;T&amp;gt; {\n&lt;span class=\"hljs-comment\"&gt;//定义一个ref容器&amp;#xff0c;用来保存上一次调用的Id&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; lastCallId &amp;#61; &lt;span class=\"hljs-title function_\"&gt;useRef&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n  &lt;span class=\"hljs-comment\"&gt;//这个应该是判断组件挂载状态的hook&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; isMounted &amp;#61; &lt;span class=\"hljs-title function_\"&gt;useMountedState&lt;/span&gt;();\n  &lt;span class=\"hljs-comment\"&gt;//使用传入的值初始化异步函数的状态&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; [state, set] &amp;#61; useState&amp;lt;&lt;span class=\"hljs-title class_\"&gt;StateFromFunctionReturningPromise&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt;(initialState);\n  &lt;span class=\"hljs-comment\"&gt;//定义callback&amp;#xff0c;使用useCallback生成一个缓存的函数对象&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; callback &amp;#61; &lt;span class=\"hljs-title function_\"&gt;useCallback&lt;/span&gt;((...&lt;span class=\"hljs-attr\"&gt;args&lt;/span&gt;: &lt;span class=\"hljs-title class_\"&gt;Parameters&lt;/span&gt;&amp;lt;T&amp;gt;): &lt;span class=\"hljs-title class_\"&gt;ReturnType&lt;/span&gt;&amp;lt;T&amp;gt; &amp;#61;&amp;gt; {\n   &lt;span class=\"hljs-comment\"&gt;//从ref缓存对象中拿出lastclassId,自加并赋值给callId,表示完成一次调用&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;//应该是防止缓存的函数被重复调用&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; callId &amp;#61; &amp;#43;&amp;#43;lastCallId.&lt;span class=\"hljs-property\"&gt;current&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//判断函数已经被执行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!state.&lt;span class=\"hljs-property\"&gt;loading&lt;/span&gt;) {\n    &lt;span class=\"hljs-comment\"&gt;//函数被执行完了&amp;#xff0c;设置函数的执行状态为没有执行&lt;/span&gt;\n      &lt;span class=\"hljs-title function_\"&gt;set&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;prevState&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; ({ ...prevState, &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt; }));\n    }\n\n\n    &lt;span class=\"hljs-comment\"&gt;//返回 执行异步函数的promise &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fn&lt;/span&gt;(...args).&lt;span class=\"hljs-title function_\"&gt;then&lt;/span&gt;(\n     &lt;span class=\"hljs-comment\"&gt;//异步函数执行成功&amp;#xff0c;返回函数的执行的成功信息和函数的状态&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;value&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; {\n       &lt;span class=\"hljs-comment\"&gt;//如果被挂载了判断callId是不是等于lastCallId&amp;#xff0c;判断是不是本次调用&lt;/span&gt;\n       &lt;span class=\"hljs-comment\"&gt;//是本次调用的设置state的值&lt;/span&gt;\n       &lt;span class=\"hljs-comment\"&gt;//不是本次调用的返会初始值&lt;/span&gt;\n        &lt;span class=\"hljs-title function_\"&gt;isMounted&lt;/span&gt;() &amp;amp;&amp;amp; callId &amp;#61;&amp;#61;&amp;#61; lastCallId.&lt;span class=\"hljs-property\"&gt;current&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-title function_\"&gt;set&lt;/span&gt;({ value, &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt; });\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; value;\n      },\n      &lt;span class=\"hljs-comment\"&gt;//异步函数执行失败&amp;#xff0c;返回异步函数执行的失败信息和函数的状态&lt;/span&gt;\n      &lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;error&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; {\n        &lt;span class=\"hljs-title function_\"&gt;isMounted&lt;/span&gt;() &amp;amp;&amp;amp; callId &amp;#61;&amp;#61;&amp;#61; lastCallId.&lt;span class=\"hljs-property\"&gt;current&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-title function_\"&gt;set&lt;/span&gt;({ error, &lt;span class=\"hljs-attr\"&gt;loading&lt;/span&gt;: &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt; });\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; error;\n      }\n    ) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ReturnType&lt;/span&gt;&amp;lt;T&amp;gt;;\n  }, deps);\n\n  &lt;span class=\"hljs-comment\"&gt;//将函数的执行信息和缓存的执行异步函数的callback函数返回&lt;/span&gt;\n  &lt;span class=\"hljs-comment\"&gt;//执行callback会得到一个执行了异步函数的promise&amp;#xff0c;就是useCallback中返回的promise&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; [state, callback &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; unknown &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; T];\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个库写的真不错&amp;#xff0c;嘿嘿&amp;#xff0c;这只是我简单了理解&amp;#xff0c;有想法了再补充修改&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请给这个react-hooks写出代码注释", ["https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts", "  打开这个链接，就到代码页面，需要你给这些代码写好注释", "\n", "\nexport ", "default", " function useAsyncFn", "<T extends FunctionReturningPromise>", "(\n  fn: T,\n  deps: DependencyList = [],\n  initialState: StateFromFunctionReturningPromise", "<T>", " = { loading: false }\n): AsyncFnReturn", "<T>", " {\n  ", "const", " lastC", "all", "Id = useRef(", "0", ");\n  ", "const", " isMounted = useMountedState();\n  ", "const", " [", "state", ", ", "set", "] = useState", "<StateFromFunctionReturningPromise<T>", ">(initialState);\n\n  ", "const", " callback = useCallback((...args: Parameters", "<T>", "): ReturnType", "<T>", " => {\n    ", "const", " callId = ++lastC", "all", "Id.current;\n\n    if (!", "state", ".loading) {\n      ", "set", "((prevState) => ({ ...prevState, loading: true }));\n    }\n\n    return fn(...args).then(\n      (value) => {\n        isMounted() && callId === lastC", "all", "Id.current && ", "set", "({ value, loading: false });\n\n        return value;\n      },\n      (error) => {\n        isMounted() && callId === lastC", "all", "Id.current && ", "set", "({ error, loading: false });\n\n        return error;\n      }\n    ) as ReturnType", "<T>", ";\n  }, deps);\n\n  return [", "state", ", callback as ", "unknown", " as T];\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "javac是编译，javac Text.java之后生成的Text.class文件用java Text运行才对，你命令写错了", "Konwledge_Point": "注释", "Question": ["仅当显式请求注释处理时才接受类名称，怎么办？", ["C:\\javac Text.java", "\nC:\\javac Text", "\n错误：仅当显式请求注释处理时才接受类名称", "\n该怎么办？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/204662909266168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;在设置里面可以修改哦&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么我Ctrl＋/添加注释，出来的是/", ["为什么我Ctrl＋/添加注释，出来的是/", "整段都被/替换掉了", "\n", "（凑字数不行就覅够好了好漂好靓波哥i噶）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Ctrl&amp;#43;/&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vscode 这种多行注释 是怎么快捷键操作的？", []], "Tag": "程序设计"}
{"Answer": "```\r\n &lt;!----&gt;这种注释没关系，你不要放到html标签里面隐藏起来就得了，要不会被判作弊\r\n```", "Konwledge_Point": "注释", "Question": ["请问网页代码中的一些注释会不会影响SEO，对关键字优化有没有影响等等", ["请问网页代码中的一些注释会不会影响SEO，就是网页中的注册会不会被搜索引擎识别，对关键字优化有没有影响等等", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;package test;\n\npublic class Test {\n    public static void main(String[] args) {\n        // 定义int整数类型的变量\n        int a;\n        // 定义float浮点型 类型的变量\n        float b;\n        // 为变量a赋值\n        a &amp;#61; 15;\n        // 为变量b赋值\n        b &amp;#61; 2.0f;\n        // 控制台输出a ÷ b\n        System.out.println(&amp;#34;a/b &amp;#61; &amp;#34; &amp;#43; a / b);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;望采纳&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请使用注释符注释说明下面程序段", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "参考实例代码：\r\n\r\n```\r\n #include&lt;stdio.h&gt;\r\n\r\n#include&lt;math.h&gt;\r\n\r\nint main(void)\r\n\r\n{\r\n\r\n     int n,i;\r\n\r\n     double distance;\r\n\r\n     double height;//高度应该是double类型\r\n\r\n     printf(\"Input height: \");\r\n\r\n     scanf(\"%lf\",&amp;height);//高度应该是double类型\r\n\r\n     printf(\"Input n: \");\r\n\r\n     scanf(\"%d\",&amp;n);\r\n\r\n     distance=0;\r\n\r\n     distance+=height;//加上最开始的高度，\r\n\r\n     for(i=1;i&lt;=n;i++){\r\n\r\n       //item=1;\r\n       //for(j=1;j&lt;=i;j++)\r\n    \r\n\r\n       //item=item*2*height*pow(0.5,j);\r\n\r\n      distance+=height*pow(0.5,i)*2;\r\n\r\n     }\r\n\r\n     height=height*pow(0.5,n);\r\n\r\n     //小数点后多保留几位，不然容易出现0.0,同时double类型应该是%lf\r\n\r\n     printf(\"distance=%.6lf\\n\",distance);//printf(\"distance=%.1f\\n\",distance);\r\n\r\n     printf(\"height=%.6lf\\n\",height);//printf(\"height=%.1f\",height);\r\n\r\n     return 0;\r\n}\r\n```", "Konwledge_Point": "注释", "Question": ["求用c语言编写此程序，越简单越好，希望大神们注释一下", ["/**皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第n次落地时，在空中一共经过多少距离？第n次反弹的高度是多少？", "\n\n", "输入格式:", "\n\n", "输入在一行中给出两个非负整数，分别是皮球的初始高度和n，均在长整型范围内。", "\n\n", "输出格式:", "\n\n", "在一行中顺序输出皮球第n次落地时在空中经过的距离、以及第n次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。", "\n\n", "输入样例:", "\n\n", "33 5", "\n输出样例:", "\n\n", "94.9 1.0", "\n**/"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Maybe you should mention that in the composer file, cause in symfony 4 every dependency will automatically loaded and installed via the flex&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    \"require\": {\n#...\n        \"symfony/validator\": \"^3.3\",\n\n    },\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Symfony4：注释不存在，或者无法自动加载（Symfony \\ Component \\ Validator \\ Constraints）", ["\n\n", "I'm working on a Symfony4 application and I have this error :", "\n\n", "[Semantical Error] The annotation \"@Symfony\\Component\\Validator\\Constraints\\NotBlank\" in property App\\Entity\\Product::$brochure does not exist, or could not be auto-loaded.", "\n\n", "Here is the ", "Product", "class:", "\n\n", "namespace App\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n\n/**\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\ProductRepository\")\n */\nclass Product\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\GeneratedValue\n     * @ORM\\Column(type=\"integer\")\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=100)\n     */\n    private $name;\n\n    /**\n     * @ORM\\Column(type=\"decimal\", scale=2, nullable=true)\n     */\n    private $price;\n\n    /**\n     * @ORM\\Column(type=\"text\")\n     */\n    private $description;\n\n    /**\n     * @ORM\\Column(type=\"string\")\n     *\n     * @Assert\\NotBlank(message=\"Please, upload the product brochure as a PDF file.\")\n     * @Assert\\File(mimeTypes={ \"application/pdf\" })\n     */\n    private $brochure;\n\n    public function getBrochure()\n    {\n        return $this->brochure;\n    }\n\n    public function setBrochure($brochure)\n    {\n        $this->brochure = $brochure;\n\n        return $this;\n    }\n\n    public function getId()\n    {\n        return $this->id;\n    }\n\n    public function getName()\n    {\n        return $this->name;\n    }\n\n    public function setName($name)\n    {\n        $this->name = $name;\n    }\n\n    // ... getters & setters for price & description\n\n    public function setPrice($price)\n    {\n        $this->price = $price;\n    }\n\n    public function setDescription($description)\n    {\n        $this->description = $description;\n    }\n}\n", "\n\n", "The annotation \"@Symfony\\Component\\Validator\\Constraints\\File\" makes also an error.\nMaybe, I forgot to configure something in Symfony, I don't know.", "\n\n", "Any suggestion ?", "\n    "]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201608/11/1470896218_884685.png)", "Konwledge_Point": "注释", "Question": ["java连接redis失败，我关掉了防火墙。注释了bind，还是不成功。", ["1，关闭防火墙==========", "2，注释掉bind========", "3，但是代码还是不能通过=====", "\n\n", "\n public static void main(String[] args) {\n          //连接本地的 Redis 服务\n          Jedis jedis = new Jedis(\"localhost\");\n          System.out.println(\"Connection to server sucessfully\");\n          //查看服务是否运行\n          System.out.println(\"Server is running: \"+jedis.ping());\n     }\n=======下面是报错=====\n\nException in thread \"main\" redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect\n    at redis.clients.jedis.Connection.connect(Connection.java:134)\n    at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:69)\n    at redis.clients.jedis.Connection.sendCommand(Connection.java:86)\n    at redis.clients.jedis.BinaryClient.ping(BinaryClient.java:82)\n    at redis.clients.jedis.Jedis.ping(Jedis.java:34)\n    at e_1zifu.Node.main(Node.java:13)\nCaused by: java.net.ConnectException: Connection refused: connect\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Formatting works when we leave a space before and after of a special charector, In this comment developer have to add space before &amp;amp; after * or \n then it would must work.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$comments .= \" **[Created_On]** $created_on \n **[Comment]** $comment \n \";\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何通过注释API添加注释时在Podio注释中应用RTF格式", ["\n\n", "I want to apply rich-text formatting (Markdown language) on comments which added through Podio-Comments API. I've added but it didn't work for me.\nHow can I do that?", "\n\n", "<?php\n\nerror_reporting(0);\n\nrequire_once 'config.php';\ninclude 'podio_api.php';\necho \"START\";\n\n// Podio authentication \npodioAuthentication();\nif (Podio::is_authenticated()) {\n    $ref_type = \"item\";\n    $ref_id = 603929471;\n    $response = PodioComment::get_for($ref_type, $ref_id);\n\n    $comments = '';\n    foreach ($response as $object) {\n        $comment = $object->value;\n        $date = $object->created_on;\n        $created_on = $date->format('Y-m-d H:i:s');\n\n        // Add comment\n        $comments .= \"*[Created_On]* $created_on   <br /> **[Comment]** $comment   <br />\";\n    }\n    $ref_id = 649113086;\n    $attributes = ['alert_invite' => FALSE,\n        'hook' => FALSE,\n        'silent' => FALSE,\n        'value' => $comments\n    ];\n    $comment_add = PodioComment::create($ref_type, $ref_id, $attributes);\n    var_dump($comment_add);\n    echo \"DONE\";\n} else {\n    echo \"authentication error\";\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Annotations are applied to your test-case's docblock:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * Short Description\n * \n * @param string $input The test input\n * \n * @return bool The result\n * \n * @runTestsInSeparateProcesses\n */\npublic function test_myMethod ($input) {\n  // Test code here\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Read more about DocBlocks: &lt;a href=\"https://docs.phpdoc.org/\" rel=\"nofollow noreferrer\"&gt;https://docs.phpdoc.org/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Phpunit  - 如何注释测试？", ["\n\n", "I'd like to run my tests in separate processes. Because of this, I would like to annotate my tests with \"@runTestsInSeparateProcesses\". However, I have never annotated Phpunit tests before and I haven't been able to find a good description of where to actually put the annotations. I've seen what the different annotations do, just not where to put them. Could someone please give me an example?", "\n\n", "Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Unicode decoding takes place before any other lexical translation. The key benefit of this is that it makes it trivial to go back and forth between ASCII and any other encoding. You don't even need to figure out where comments begin and end!&lt;/p&gt;\n\n&lt;p&gt;As stated in &lt;a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.3\"&gt;JLS Section 3.3&lt;/a&gt; this allows any ASCII based tool to process the source files:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[...] The Java programming language specifies a standard way of transforming a program written in Unicode into ASCII that changes a program into a form that can be processed by ASCII-based tools. [...]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This gives a fundamental guarantee for platform independence (independence of supported character sets) which has always been a key goal for the Java platform. &lt;/p&gt;\n\n&lt;p&gt;Being able to write any Unicode character anywhere in the file is a neat feature, and especially important in comments, when documenting code in non-latin languages. The fact that it can interfere with the semantics in such subtle ways is just an (unfortunate) side-effect.&lt;/p&gt;\n\n&lt;p&gt;There are many gotchas on this theme and &lt;a href=\"http://www.javapuzzlers.com/\"&gt;&lt;em&gt;Java Puzzlers&lt;/em&gt;&lt;/a&gt; by Joshua Bloch and Neal Gafter included the following variant:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Is this a legal Java program? If so, what does it print?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\\u0020\n\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0055\\u0067\\u006c\\u0079\n\\u007b\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\n\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\n\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u007b\n\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\n\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0020\n\\u0022\\u0048\\u0065\\u006c\\u006c\\u006f\\u0020\\u0077\\u0022\\u002b\n\\u0022\\u006f\\u0072\\u006c\\u0064\\u0022\\u0029\\u003b\\u007d\\u007d\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;(This program turns out to be a plain \"Hello World\" program.)&lt;/p&gt;\n\n&lt;p&gt;In the solution to the puzzler, they point out the following:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;More seriously, this puzzle serves to reinforce the lessons of the previous three: &lt;strong&gt;Unicode escapes are essential when you need to insert characters that can’t be represented in any other way into your program. Avoid them in all other cases.&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Source: &lt;a href=\"http://programming.guide/java/executing-code-in-comments.html\"&gt;Java: Executing code in comments?!&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["为什么允许在注释中使用某些 Unicode 字符来执行 Java 代码？", ["\n\n", "The following code produces the output \"Hello World!\" (no really, try it).", "\n\n", "public static void main(String... args) {\n\n   // The comment below is not a typo.\n   // \\u000d System.out.println(\"Hello World!\");\n}\n", "\n\n", "The reason for this is that the Java compiler parses the Unicode character ", "\\u000d", " as a new line and gets transformed into:", "\n\n", "public static void main(String... args) {\n\n   // The comment below is not a typo.\n   //\n   System.out.println(\"Hello World!\");\n}\n", "\n\n", "Thus resulting into a comment being \"executed\".", "\n\n", "Since this can be used to \"hide\" malicious code or whatever an evil programmer can conceive, ", "why is it allowed in comments", "?", "\n\n", "Why is this allowed by the Java specification?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Short answer, there is no native support for annotations in Golang. What's being used if tags, which you can get from the &lt;code&gt;reflect&lt;/code&gt; package.&lt;/p&gt;\n\n&lt;p&gt;So, you do not have annotations in Go, and to my knowledge there is no library which provides them. Depending of what you want to do, usually tags are more than enough, and you can use the language's power to achieve the desired results.&lt;/p&gt;\n\n&lt;p&gt;It should be possible  to implement them as you can get the documentation strings, just like PHP does. However, in the big majority of cases it won't be necessary.&lt;/p&gt;\n\n&lt;p&gt;EDIT:&lt;/p&gt;\n\n&lt;p&gt;In Go, you have access to the documentation of structs, fields, methods, interfaces, functions (godoc isn't magical) through the &lt;code&gt;ast&lt;/code&gt; package. However, it requires parsing the files, there is no function such as &lt;code&gt;type.getDocComments()&lt;/code&gt; as in PHP.&lt;/p&gt;\n\n&lt;p&gt;So, an implementation is theoretically possible. However, the kind of annotations you're asking for are simply not part of Golang's philosophy. There are plenty of libraries that extensively use tags, but none use annotations.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何获得go语言功能的注释？", ["\n\n", "How to get annotation of go language function?\nExample:", "\n\n", "// @annotation1\n// @annotation2\nfunc Tags() string {\n        return \"\"\n}\n", "\n\n", "How to get the \"@annotation1\" and \"@annotation2\"?", "\n    "]], "Tag": "程序设计"}
{"Answer": "没有初始化所以报错了。 // resources = new ArrayList();  初始化", "Konwledge_Point": "注释", "Question": ["list add问题。。。为什么注释掉之后就抛异常了，求解答！！", ["        for (AdScheduleResourceGson origin : scheduleResourceGsonList) {\n            boolean before = origin.getStartMin().compareTo(minsList.get(i)) <= 0;\n            boolean after = origin.getEndMin().compareTo(minsList.get(i + 1)) >= 0;\n            if (before & after) {\n                List<AdScheduleResourceGson> resources = tmp.getResources();\n", "\n\n", "//                    if (resources == null) {", "\n//                        resources = new ArrayList();", "\n//                        tmp.setResources(resources);", "\n//                    }", "\n                    System.out.print(\"cacacacaaaaa\");", "\n                    try {", "\n                        resources.add(origin);", "\n                    } catch (Exception e) {", "\n                        System.out.print(\"hahahaha\");", "\n                    }", "\n                }", "\n            }"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; answer;\n &lt;span class=\"hljs-keyword\"&gt;srand&lt;/span&gt;((unsigned)&lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;(NULL));   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;随机数种子\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;();      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;产生两个随机数&amp;#xff0c;这两行都是废代码\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;();\na&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%10&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;产生&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;之间的整数\nb&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%10&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;?\\n&amp;#34;&lt;/span&gt;,a,b);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;显示乘法计算式\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;answer);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;让用户输入乘法结果\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(answer&amp;#61;&amp;#61;a*b)  //判断结果正确&amp;#xff0c;输出Right\n{\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Right!&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Wrong! please try again!&amp;#34;&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;不正确提示\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n}&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(answer!&amp;#61;a*b);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;不正确则继续让用户输入\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请用C语言标注一下注释", ["#include<stdlib.h>//常用系统函数调用", "#include<stdio.h>", "#include<time.h>", "int main()", "\n", "{", "\n", "int", " answer;\n ", "srand", "((unsigned)", "time", "(NULL));\n", "int", " a=", "rand", "();\n", "int", " b=", "rand", "();\na=", "rand", "()%10+", "1", ";\nb=", "rand", "()%10+", "1", ";\n", "do", "{\n", "printf", "(", "\"%d*%d=?\\n\"", ",a,b);\nscanf(", "\"%d\"", ",&answer);\n", "if", "(answer==a*b)\n{\n    ", "printf", "(", "\"Right!\"", ");\n}\n", "else", "\n{\n    ", "printf", "(", "\"Wrong! please try again!\"", ");\n    ", "printf", "(", "\"\\n\"", ");\n}\n}", "while", "(answer!=a*b);\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/shipeng1022/article/details/53066558", "Konwledge_Point": "注释", "Question": ["Oracle导入数据注释乱码问题 ", ["\n\n", "是需要把数据库的字符集改了吗，改成什么样？", "\n删除用户 清理表空间", "\n然后重建用户 重新导入数据可以吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Go is not an interpreted language. The source code representation of a program is not part of a compiled Go program and cannot be generated from a compiled Go program. What you want is not possible without external tools that embed the parts of the source you want into the binary.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["从Go程序中访问包注释？", ["\n\n", "Is it possible to get package comment from inside of Go program? The equivalent Python code:", "\n\n", "#!/usr/bin/env python\n\"\"\"\nProgram v1.0\n\"\"\"\nprint(__doc__)\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem is that the &lt;code&gt;doc.New&lt;/code&gt; functionality is only parsing for documentation strings, and the comment inside the function is not part of the \"documentation\".&lt;/p&gt;\n\n&lt;p&gt;You'll want to directly iterate the ast of the files in the package.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n        \"fmt\"\n        \"go/parser\"\n        \"go/token\"\n)\n\n// GetFoo comments I can find easely\nfunc GetFoo() {\n        // Comment I would like to access\n        test := 1\n        fmt.Println(test)\n}\n\nfunc main() {\n        fset := token.NewFileSet() // positions are relative to fset\n        d, err := parser.ParseDir(fset, \"./\", nil, parser.ParseComments)\n        if err != nil {\n                fmt.Println(err)\n                return\n        }\n        for k, f := range d {\n                fmt.Println(\"package\", k)\n                for n, f := range f.Files {\n                        fmt.Printf(\"File name: %q\n\", n)\n                        for i, c := range f.Comments {\n                                fmt.Printf(\"Comment Group %d\n\", i)\n                                for i2, c1 := range c.List {\n                                        fmt.Printf(\"Comment %d: Position: %d, Text: %q\n\", i2, c1.Slash, c1.Text)\n                                }\n                        }\n                }\n\n        }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在Go中的函数中访问注释", ["\n\n", "I'm currently working on documentation generator that will parse Go code to produce a custom documentation. I need to access to the comments written inside a function. But I can't retrieve these comments in the AST, neither with the go/doc. Here is an example :", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"go/doc\"\n    \"go/parser\"\n    \"go/token\"\n)\n\n// GetFoo comments I can find easely\nfunc GetFoo() {\n    // Comment I would like to access\n    test := 1\n    fmt.Println(test)\n}\n\nfunc main() {\n    fset := token.NewFileSet() // positions are relative to fset\n    d, err := parser.ParseDir(fset, \"./\", nil, parser.ParseComments)\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n    for k, f := range d {\n        fmt.Println(\"package\", k)\n        p := doc.New(f, \"./\", 2)\n\n        for _, t := range p.Types {\n            fmt.Println(\"type\", t.Name)\n            fmt.Println(\"docs:\", t.Doc)\n        }\n\n        for _, v := range p.Vars {\n            fmt.Println(\"type\", v.Names)\n            fmt.Println(\"docs:\", v.Doc)\n        }\n\n        for _, f := range p.Funcs {\n            fmt.Println(\"type\", f.Name)\n            fmt.Println(\"docs:\", f.Doc)\n        }\n\n        for _, n := range p.Notes {\n            fmt.Println(\"body\", n[0].Body)\n        }\n    }\n}\n", "\n\n", "It's easy to find ", "GetFoo comments I can find easely", " but not ", "Comment I would like to access", "\nI have seen this post quite similar question ", "Go parser not detecting Doc comments on struct type", " but for exported types", "\n\n", "Is there any way to do that ? Thank you !", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try the token_get_all()...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$sampleCode = \"\n&amp;lt;?php\n/**\n * This is a comment\n */\nfunction foo() {\n    $x = 1;\n    $y = $x + 1;\n    return $y;\n}\n\";\n\n\n$tokens = token_get_all($sampleCode);\n$cleanedCode = \"\";\nforeach ($tokens as $token) {\n    if (is_array($token)) {\n        if ($token[0] != T_COMMENT &amp;amp;&amp;amp; $token[0] != T_DOC_COMMENT) {\n            $cleanedCode .= $token[1];\n        }\n    } else {\n        $cleanedCode .= $token;\n    }\n\n}\n\n\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用PHP minify（提供链接），如何抑制/删除所有注释？", ["\n\n", "Using PHP minify (", "http://code.google.com/p/minify/", ") how can ALL comments be suppressed/removed from the end result of the minification? At present all comments in javascript files of the format (any number of lines):", "\n\n", "/*\n * \n * comments...\n * \n */\n", "\n\n", "Are not being removed and appear in the final minified result (despite the code being minified successfully)..", "\n\n", "Any help would be much appreciated!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Parsing a programming language seems too much for regexes to do. You should probably look for a PHP parser.&lt;/p&gt;\n\n&lt;p&gt;But these would be the regexes you are looking for. I assume for all of them that you use the DOTALL or SINGLELINE option (although the first two would work without it as well):&lt;/p&gt;\n\n\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;~#[^\r\n]*~\n~//[^\r\n]*~\n~/\\*.*?\\*/~s\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that any of these will cause problems, if the comment-delimiting characters appear in a string or somewhere else, where they do not actually open a comment.&lt;/p&gt;\n\n&lt;p&gt;You can also combine all of these into one regex:&lt;/p&gt;\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;~(?:#|//)[^\r\n]*|/\\*.*?\\*/~s\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you use some tool or language that does not require delimiters (like Java or C#), remove those &lt;code&gt;~&lt;/code&gt;. In this case you will also have to apply the DOTALL option differently. But without knowing where you are going to use this, I cannot tell you how.&lt;/p&gt;\n\n&lt;p&gt;If you cannot/do not want to set the DOTALL option, this would be equivalent (I also left out the delimiters to give an example):&lt;/p&gt;\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;(?:#|//)[^\r\n]*|/\\*[\\s\\S]*?\\*/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://regexr.com?32k88\" rel=\"nofollow noreferrer\"&gt;See here&lt;/a&gt; for a working demo.&lt;/p&gt;\n\n&lt;p&gt;Now if you also want to capture the contents of the comments in a group, then you could do this&lt;/p&gt;\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;(?|(?:#|//)([^\r\n]*)|/\\*([\\s\\S]*?)\\*/)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Regardless of the type of comment, the comments content (without the syntax delimiters) will be found in capture 1.&lt;/p&gt;\n\n&lt;p&gt;Another &lt;a href=\"http://regexr.com?32k8b\" rel=\"nofollow noreferrer\"&gt;working demo&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用REGEX匹配所有三种PHP注释", ["\n\n", "I'm new to REGEX and I need some help.", "\n\n", "I need to match all three types of comments that PHP might have:", "# Single line comment", "// Single line comment", "/* Multi-line comments */", "\n\n", "/**\n * And all of it's possible variations\n */\n", "\n\n", "Something I should mention, I am doing this in order to be able to recognize if a PHP closing tag (", "?>", ") is inside a comment or not, if it is then ignore it, if not then make it count as one. This is gonna be used inside an XML document in order to improve Sublime Text's recognition of the closing tag (cause it's driving me nuts!). I tried to achieve this a couple hours but wasn't able, so if you could translate for it to work with XML I would appreciate it. :)", "\n\n", "So if you could also include  the if-then-else login I would really appreciate it. BTW, I really need it to be in pure REGEX expression, no language features or anything. :)", "\n\n", "Like Eicon reminded me, I need all of them to be able to match at the start of the line, or at the end of a piece of code, so I also need the following with all of them:", "\n\n", "<?php\necho 'something'; # this is a comment\n?>\n", "\n\n", "Any help would be appreciated. :)", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since your question was &lt;em&gt;Why&lt;/em&gt;, I will try to explain why comments are stripped away.&lt;/p&gt;\n\n&lt;p&gt;First of all, the purpose of the &lt;code&gt;html/template&lt;/code&gt; package is to be &lt;em&gt;safe&lt;/em&gt;. The &lt;a href=\"http://golang.org/pkg/html/template/#pkg-overview\" rel=\"noreferrer\"&gt;documentation&lt;/a&gt; states:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Package template (html/template) implements data-driven templates for generating HTML output safe against code injection.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is done through context-sensitive escaping. In a &lt;a href=\"https://groups.google.com/forum/#!topic/golang-nuts/8y6by6SERyU\" rel=\"noreferrer\"&gt;Golang-nuts thread&lt;/a&gt; Kyle Lemons provide an example where conditional comments would currently break this safety unless the comments were stripped away:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;\n&amp;lt;!--[if lt IE 9]&amp;gt;&amp;lt;script&amp;gt;&amp;lt;![endif]--&amp;gt;\n{{.Stuff}}\n&amp;lt;!--[if lt IE 9]&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;![endif]--&amp;gt;\n&amp;lt;/p&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, any value in {{.Stuff}} will be executed as Javascript on some browsers and should therefore be escaped to be safe . This would require the template engine to be aware of this browser-specific interpretation of the comment, and any other non-standard behavior in all the browsers out there. This is not feasible.&lt;/p&gt;\n\n&lt;p&gt;Instead, &lt;code&gt;html/template&lt;/code&gt; was designed to strip away any comments to ensure that the HTML it produces is safe from any injection attack.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Workaround&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;As mentioned by Dave, it is possible to use &lt;code&gt;template.HTML&lt;/code&gt; to insert such comments. However, because of the security risk, the &lt;a href=\"http://golang.org/pkg/html/template/#HTML\" rel=\"noreferrer\"&gt;documentation&lt;/a&gt; for &lt;code&gt;template.HTML&lt;/code&gt; states (my emphasis):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;HTML encapsulates a known safe HTML document fragment. It should not be used for HTML from a third-party, or HTML with unclosed tags or &lt;em&gt;comments&lt;/em&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["为什么html / template不显示所有html条件注释？", ["\n\n", "I have a simple Go HTML template which contains HTML conditional comments:", "\n\n", "package main\n\nimport (\n    \"html/template\"\n    \"os\"\n)\n\nvar body = `<!doctype html>\n<html>\n  <head>\n    <!--[if !IE]><!--><script src=\"http://code.jquery.com/jquery-2.0.3.min.js\"></script><!--<![endif]-->\n    <!--[if gte IE 9]><script src=\"http://code.jquery.com/jquery-2.0.3.min.js\"></script><![endif]-->\n    <!--[if lt IE 9]><script src=\"http://code.jquery.com/jquery-1.10.2.min.js\"></script><![endif]-->\n\n  </head>\n</html>`\n\nfunc main() {\n    tmp := template.Must(template.New(\"tmp\").Parse(body))\n    tmp.Execute(os.Stdout, nil)\n\n}\n", "\n\n", "This produces:", "\n\n", "<!doctype html>\n<html>\n  <head>\n    <script src=\"http://code.jquery.com/jquery-2.0.3.min.js\"></script>\n\n\n\n  </head>\n</html>\n", "\n\n", "Why does ", "html/template", " remove those conditional comments after compiling?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Normally, you should have another mapping table for such things. And use joins to do a search.&lt;/p&gt;\n\n&lt;p&gt;If you want to make your approach work, you should change your sql request like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; $rs = mysql_query(\"select * from  project_table WHERE project_investor_id LIKE '%$uid%'  ORDER BY project_id DESC\"); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;code&gt;%&lt;/code&gt; symbols added before and after &lt;code&gt;$uid&lt;/code&gt;. It should work fine with that.&lt;/p&gt;\n\n&lt;p&gt;Also, remember about sql injections! You must escape your input. with mysql_* you can do it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; $rs = mysql_query(\"select * from  project_table WHERE project_investor_id LIKE '%\".mysql_real_escape_string($uid) . \"%'  ORDER BY project_id DESC\"); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Function to escape: &lt;a href=\"http://php.net/manual/en/function.mysql-real-escape-string.php\" rel=\"nofollow\"&gt;mysql_real_escape_string&lt;/a&gt;. Also, read carefully about what is shown in warning section of linked page. &lt;/p&gt;\n\n&lt;p&gt;But still, you should better put a list of project investors into a different table. It should be something lie this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Project table\n-------------\npr_id    pr_name\n\n\nproject investors map table\n----------------------------\npr_id         investor_id\n 1              1\n 1              26\n 1              29\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then, your request will be like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$rs = mysql_query(\"select * from  project_table as pt join project_investor_map  as pi on pi.pr_id = pi.investor_id WHERE pi.investor_id = \".mysql_real_escape_string($uid) . \"  ORDER BY project_id DESC\");\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which will take all projects of some investor&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["SQL注释与数组元素PHP", ["\n\n", "This is my first question in this site hope that some one will help me over here.", "\n\n", "I have a investor table with some fields and a project table with some files", "\n\n", "Project table\n---------------------\nproject_investor_id     1,26,29,30,39,48\n", "\n\n", "data stored as , separated values \nSo in my investor admin area i want show perticular project to show for logedin investor\nI am using this function.", "\n\n", "public function list_all_projects_by_userid ($uid){\n\n\n    $rs = mysql_query(\"select * from  project_table WHERE project_investor_id LIKE '$uid'  ORDER BY project_id DESC\");    \n    $i = 0;\n    while ($row = mysql_fetch_assoc($rs)) {    \n    $result[$i]['project_id'] = $row['project_id'];\n    $result[$i]['project_investor_id'] = $row['project_investor_id'];\n    $result[$i]['project_name'] = $row['project_name'];\n    $result[$i]['project_location'] = $row['project_location'];\n    $result[$i]['project_location'] = $row['project_location'];\n    $result[$i]['project_phase'] = $row['project_phase'];\n    $result[$i]['project_capital'] = $row['project_capital'];\n    $result[$i]['project_notes'] = $row['project_notes'];\n    $result[$i]['project_file'] = $row['project_file'];\n    $i++;\n    }\n    return $result;\n    }\n", "\n\n", "But its not working with project have multiple investors.\nPlease let me know how recode this?", "\n\n", "Thank You", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Strict &lt;a href=\"http://www.ietf.org/rfc/rfc7159.txt\" rel=\"noreferrer\"&gt;JSON specification&lt;/a&gt;, don't allow comments. &lt;/p&gt;\n\n&lt;p&gt;But exist not-official superset of JSON that permits comments (and more other cool things), like &lt;a href=\"http://json5.org/\" rel=\"noreferrer\"&gt;&lt;strong&gt;JSON5&lt;/strong&gt;&lt;/a&gt; or &lt;a href=\"https://hjson.org\" rel=\"noreferrer\"&gt;&lt;strong&gt;HJSON&lt;/strong&gt;&lt;/a&gt; (human-json).&lt;/p&gt;\n\n&lt;p&gt;You can try with these Go libraries:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;JSON5: &lt;a href=\"https://github.com/yosuke-furukawa/json5\" rel=\"noreferrer\"&gt;https://github.com/yosuke-furukawa/json5&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;HJSON: &lt;a href=\"https://github.com/client9/xson/tree/master/hjson\" rel=\"noreferrer\"&gt;https://github.com/client9/xson/tree/master/hjson&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何解析内部带有注释的JSON？", ["\n\n", "In ", "go", " the standard package ", "encoding/json", " exposes ", "json.Unmarshal", " function to parse JSON.", "\n\n", "I have a JSON like this:", "\n\n", "{\n    ...\n    \"tyo\": {\n        \"ping_only\": true,\n        \"addresses\": [\n            //\"155.133.245.25:27015-27050\",\n            //\"155.133.245.26:27015-27050\",\n            //\"155.133.245.27:27015-27050\",\n            \"45.121.186.20:27015-27016\",\n            \"45.121.186.21:27015-27016\"\n        ]\n    },\n    \"vie\": {\n        \"addresses\": [\n            \"185.25.182.225:27015-27050\",\n            \"185.25.182.226:27015-27050\"\n        ]\n    },\n    ...\n}\n", "\n\n", "When I use ", "json.Unmarshal", " I got error:", "\n\n", "\n  ", "Handler crashed with error invalid character '/' looking for beginning of value", "\n", "\n\n", "Can someone tell me how to parse this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In order to get comments, you have to pass the parser.ParseComments flag in argument to parser.ParseFile():&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;parser.ParseFile(fset, \"\", src, parse.ParseComments)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All possible mode flags are documented here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://golang.org/pkg/go/parser/#Mode\" rel=\"nofollow noreferrer\"&gt;https://golang.org/pkg/go/parser/#Mode&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["ast.Inspect时查看golang注释和docs字段-为什么它们为空？", ["\n\n", "I'm trying to get at the ", "Doc", "s and ", "Comment", "s of ", "struct", "s and ", "struct field", "s, but I can't seem to be able to do so, they just turn up empty:", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"go/ast\"\n    \"go/parser\"\n    \"go/token\"\n)\n\nfunc main() {\n    src := `package test\n\n    // Hello\n    type A struct {\n        // Where\n        B int // Are you\n    }\n    `\n\n    fset := token.NewFileSet()\n    f, err := parser.ParseFile(fset, \"\", src, 0)\n    if err != nil {\n        panic(err)\n    }\n\n    ast.Inspect(f, func(n ast.Node) bool {\n        switch t := n.(type) {\n        case *ast.TypeSpec:\n            fmt.Println(t.Doc.Text())\n        case *ast.StructType:\n            for _, field := range t.Fields.List {\n                fmt.Println(field.Doc.Text())\n                fmt.Println(field.Comment.Text())\n            }\n        }\n        return true\n    })\n}\n", "\n\n", "yields three blank lines: ", "https://play.golang.org/p/4Eh9gS-PUg", "\n\n", "Saw the similar question ", "Go parser not detecting Doc comments on struct type", " but when trying to run the accepted example it turns up all empty — so I'm wondering if something has changed since that version.", "\n    "]], "Tag": "程序设计"}
{"Answer": "comment on column STU.NAMES is  '姓名';     加上表名.列名", "Konwledge_Point": "注释", "Question": ["oralce数据库中给列添加注释的时候报ora-00903怎么解决？", []], "Tag": "程序设计"}
{"Answer": "不懂可以问我哦\r\n```C++\r\n#include&lt;iostream&gt;\r\n#include&lt;string&gt;\r\nusing namespace std;\r\n\r\n//商品类\r\nclass Commodity {\r\n\tstring Name;//商品名\r\n\tdouble Price;//价格\r\n\tint Amount;//数量\r\n\t\r\npublic:\r\n\t//构造函数，其中数量默认值是0\r\n\tCommodity(string name, double price, int amount = 0) {\r\n\t\tName = name;\r\n\t\tPrice = price;\r\n\t\tAmount = amount;\r\n\t}\r\n\t//显示商品信息\r\n\tvoid show() {\r\n\t\tcout &lt;&lt; \"**********************\" &lt;&lt; endl;\r\n\t\tcout &lt;&lt; \"商品名：\" &lt;&lt; Name &lt;&lt; endl;\r\n\t\tcout &lt;&lt; \"价格：\" &lt;&lt; Price &lt;&lt; endl;\r\n\t\tcout &lt;&lt; \"数量：\" &lt;&lt; Amount &lt;&lt; endl;\r\n\t\tcout &lt;&lt; \"**********************\" &lt;&lt; endl;\r\n\t}\r\n\t//商品数量减1\r\n\tvoid decrease() {\r\n\t\tif (Amount == 0) {\r\n\t\t\tcout &lt;&lt; \"商品数量已经为零！\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tAmount -= 1;\r\n\t\t\tcout &lt;&lt; \"商品数量已减1\" &lt;&lt; endl;\r\n\t\t}\r\n\t}\r\n\t//商品数量加1\r\n\tvoid add() {\r\n\t\tAmount += 1;\r\n\t\tcout &lt;&lt; \"商品数量已加1\" &lt;&lt; endl;\r\n\t}\r\n\r\n};\r\n\r\nint main() {\r\n\tCommodity apple(\"apple\", 1.5, 10);//定义一个apple对象\r\n\tapple.show();//显示apple信息\r\n\tapple.add();//数量加1\r\n\tapple.show();//显示apple信息\r\n\tapple.decrease();//数量减1\r\n\tapple.show();//显示apple信息\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "注释", "Question": ["用C++实现第一个问题，希望可以给代码注释", ["\n希望大神赐教"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;That's by design.  Once you being your heredoc EVERYTHING you type until you end it is treated as being part of one long string.  Your best bet would be to break your HEREDOC, put your comment, then start a new echo line&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo &amp;lt;&amp;lt;&amp;lt;_HEREDOC_FOO\n    text text text\n&amp;lt;&amp;lt;&amp;lt;_HEREDOC_FOO;\n//Comments\necho &amp;lt;&amp;lt;&amp;lt;_HEREDOC_FOO\n    text text text\n&amp;lt;&amp;lt;&amp;lt;_HEREDOC_FOO;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As someone else mentioned you could do HTML comments, but those will still be visible to anyone who views your source code&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["需要将代码注释放在heredoc中", ["\n\n", "Well I can't seem to add comments inside a ", "heredoc", " block in my ", "foo.php", " file:", "\n\n", "echo <<<_HEREDOC_FOO\n\n       // okay this comment was intended to explain the code below but it\n       // is showing up on the web page HTML sent to the browser\n\n      <form action=\"foo.php\" method=\"post\">\n      <input type=\"submit\" value=\"DELETE RECORD\" /></form>\n\n_HEREDOC_FOO;\n", "\n\n", "Does the form work, sure (btw the form code above is ", "highly", " truncated for \nthe sake of my question here).", "\n\n", "But the dang comment (", "okay this comment was..blah blah blah", ")\n appears in the browser too. It shows up in the\nbrowser just as written above:", "\n\n", "// okay this comment was intended to explain the code below but it\n// is showing up on the web page HTML sent to the browser\n", "\n\n", "Permutations on the commenting demarcation I've tried:", "\n\n", "// <--  \n// -->\n", "\n\n", "and....", "\n\n", "<-- //\n--> //\n", "\n\n", "FAIL in both cases to allow me to comment inside ", "heredoc", ".", "\n\n", "So how the heck can I comment up my code within my ", "heredoc", "s?", "\n    "]], "Tag": "程序设计"}
{"Answer": "这是bin文件里面编译好的class文件，注意看文件后缀。你的源文件在src文件夹下面。", "Konwledge_Point": "注释", "Question": ["为啥我的idea导入了一个项目之后，它变成只读了？", ["\n我在设置里改成writeable也没用，我在另一部电脑上用eclipse就可以写，而且导入这里之后，原先的注释也没了。急死了"]], "Tag": "程序设计"}
{"Answer": "这个应该是与swing线程抢占有关，只要在Caipiao\\_thread这个的while(true)里面加一个Thread.sleep就能够显示，或者将对JLabel对象的修改放在主线程里面。", "Konwledge_Point": "注释", "Question": ["java 多线程run函数 while循环内如果像此程序那样注释掉  会无法实现功能（）", ["import java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\n\n", "import javax.swing.*;", "\n\n", "public class Lottery extends JFrame {", "\n    public JLabel jb = new JLabel(\"haha\");", "\n    public JButton jbt = new JButton(\"start\");", "\n    boolean bool1 = false;", "\n\n", "public Lottery() {\n    this.setVisible(true);\n    this.setSize(500, 300);\n    this.setTitle(\"Lottery\");\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n    setLayout(null);\n    jb.setBounds(50, 20, 200, 30);\n    jbt.setBounds(50, 60, 140, 30);\n    jbt.addActionListener(new BtListener());\n    this.add(jb);\n    this.add(jbt);\n    Caipiao_thread c = new Caipiao_thread();\n    Thread t = new Thread(c);\n    t.start();\n\n}\n\npublic static void main(String[] args) {\n\n    new Lottery();\n}\n\npublic static int[] create_number() {\n    int[] number = new int[6];\n    int i = 0;\n\n    int one;\n    while (i < 6) {\n        boolean bool = true;// 放在循环内！！！！！！！！\n        if (i == 0) {\n            number[i] = (int) (Math.random() * 36 + 1);\n            i++;\n        } else {\n            one = (int) (Math.random() * 36 + 1);\n            for (int j = 0; j < i; j++) {\n                if (number[j] == one) {\n                    bool = false;\n                    break;\n                }\n            }\n            if (bool) {\n                number[i] = one;\n                i++;\n            }\n        }\n    }\n    return number;\n\n}\n\nclass BtListener implements ActionListener {\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        // TODO Auto-generated method stub\n        if (jbt.getText() == \"start\") {\n            jbt.setText(\"stop\");\n            bool1 = true;\n        } else if (jbt.getText() == \"stop\") {\n            jbt.setText(\"start\");\n            bool1 = false;\n        }\n    }\n\n}\n\nclass Caipiao_thread implements Runnable {\n\n    @Override\n    public void run() {\n        // TODO Auto-generated method stub\n        while (true) {\n            //system.out.println();\n            while (bool1) {\n                try {\n                    Thread.sleep(50);\n                } catch (InterruptedException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                int[] number = create_number();\n\n                String s = \"\";\n                for (int i = 0; i < number.length; i++) {\n                    s = s + number[i] + \"  \";\n                }\n\n                jb.setText(s);\n            }\n        }\n    }\n}\n", "\n\n", "}", "\n在同学电脑上测试是不可以的，我自己的电脑无论加不加system.out.println();都可以", "\n跟IDE或者jdk有关吗？谢谢各位"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The &lt;code&gt;html/template&lt;/code&gt; package is expressly designed to escape values. In your case, you're trying to pass JavaScript code in, rather than a simple value. You can accomplish this by changing the type of &lt;code&gt;UserEmail&lt;/code&gt; to that of &lt;code&gt;template.JS&lt;/code&gt;. This type wraps a &lt;code&gt;string&lt;/code&gt; and expresses the intent that this value is valid JavaScript and should be substituted directly (without quotes) when used in a JavaScript context.&lt;/p&gt;\n\n&lt;p&gt;This version of the code does precisely that: &lt;a href=\"http://play.golang.org/p/aNGnFMyY1O\"&gt;http://play.golang.org/p/aNGnFMyY1O&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Go语言模板：始终引用字符串并删除注释", ["\n\n", "This Go code always quotes a string: ", "http://play.golang.org/p/8k4s8dv2PE", " in the template - you can see results. How can I generate ", "var currentUser = null", "? Note it also removes all comments from the code! How is it tuned up? This question is continuation of my ", "Go: quoted string in templates", ".", "\n    "]], "Tag": "程序设计"}
{"Answer": "SupportMapFragment mapFragment = SupportMapFragment.newInstance();//通过SupportMapFragment获取单列地图fragment\r\nmapFragment.getMapAsync(this);//通过地图fragment获取Map地图\r\nFragmentTransaction transaction = getFragmentManager().beginTransaction();//获取fragment管理器，再得到fragment事务管理\r\ntransaction.replace(R.id.google_map, mapFragment);//找到R.id.google_map，替换成地图fragment\r\ntransaction.commit();//fragment事务管理提交\r\n\r\n    mTimeSelect = view.findViewById(R.id.time_options);//找到时间选择器mTimeSelect \r\n    //选择器mTimeSelect设置监听 \r\n    mTimeSelect.setOnItemSelectedListener(new OnItemSelectedListener() {\r\n        @Override\r\n        public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {\r\n            if (position == 0) {//如果选择0号位置\r\n                mShowType = SHOW_DAILY_TYPE;//展示类型设置为 选择 天 类型的\r\n            } else {//选择非0以外的其他位置\r\n                mShowType = SHOW_HOURLY_TYPE;//展示类型设置为 选择 小时 类型的\r\n            }\r\n            getResidents();//获取用户数据\r\n        }\r\n\r\n        @Override\r\n        public void onNothingSelected(AdapterView&lt;?&gt; parent) {//没有挑选什么也不做\r\n        }\r\n    });\r\n\r\n    getResidents();//获取用户数据\r\n\r\n    getCurrentLocation();//获取当前定位信息数据\r\n\r\n    return view;\r\n}\r\n//获取当前定位信息数据\r\nprivate void getCurrentLocation() {\r\n    mAddress = RestClient.getLoginResident().getAddress();//剩余客户端获取登录用户的地址\r\n\t//通过地址找到经纬度位置\r\n    AddressLocationUtils.getLocationByAddress(getContext(), RestClient.getLoginResident().getAddress(),\r\n        new IGetLocationCallback() {\r\n            @Override\r\n            public void onGetLocation(double latitude, double longitude) {//找到位置\r\n\t\t\r\n                mCurrentLatitude = latitude;//找到的维度设置为当前经度\r\n                mCurrentLongitude = longitude;//找到的经度设置为当前经度\r\n                showCurrentLocation();//展示当前定位信息(绘制图标，移动地图焦点)\r\n            }\r\n        });\r\n}\r\n//展示当前定位信息(绘制图标，移动地图焦点)\r\nprivate void showCurrentLocation() {\r\n    if (mMap == null) {//如果地图map没有初始化，直接返回\r\n        return;\r\n    }\r\n    mHandler.post(new Runnable() {//开启子线程中执行任务\r\n        @Override\r\n        public void run() {//任务开始执行\r\n\r\n            LatLng curLocation = new LatLng(mCurrentLatitude, mCurrentLongitude);//通过当前经纬度，获取高德经纬度封装类LatLng的对象curLocation  \r\n            MarkerOptions markerOptions = new MarkerOptions().position(curLocation);//通过当前经纬度创建一个标记点\r\n            markerOptions.title(\"Current Location\");//标记点标题是\"Current Location\"\r\n            markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_BLUE));//标记点设置默认图标为BitmapDescriptorFactory.HUE_BLUE\r\n            mMap.addMarker(markerOptions);//地图上添加标记点\r\n            mMap.moveCamera(CameraUpdateFactory.newLatLng(curLocation));//地图焦点移动到当前定位位置\r\n            mMap.animateCamera(CameraUpdateFactory.zoomTo(mMap.getMaxZoomLevel() * 0.8f), 500, null);//地图移动设置动画\r\n        }\r\n    });\r\n\r\n}", "Konwledge_Point": "注释", "Question": ["求大佬帮忙给每段代码添加下注释。。。。。。", ["SupportMapFragment mapFragment = SupportMapFragment.newInstance();", "\n        mapFragment.getMapAsync(this);", "\n        FragmentTransaction transaction = getFragmentManager().beginTransaction();", "\n        transaction.replace(R.id.google_map, mapFragment);", "\n        transaction.commit();", "\n\n", "    mTimeSelect = view.findViewById(R.id.time_options);\n    mTimeSelect.setOnItemSelectedListener(new OnItemSelectedListener() {\n        @Override\n        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n            if (position == 0) {\n                mShowType = SHOW_DAILY_TYPE;\n            } else {\n                mShowType = SHOW_HOURLY_TYPE;\n            }\n            getResidents();\n        }\n\n        @Override\n        public void onNothingSelected(AdapterView<?> parent) {\n        }\n    });\n\n    getResidents();\n\n    getCurrentLocation();\n\n    return view;\n}\n\nprivate void getCurrentLocation() {\n    mAddress = RestClient.getLoginResident().getAddress();\n    AddressLocationUtils.getLocationByAddress(getContext(), RestClient.getLoginResident().getAddress(),\n        new IGetLocationCallback() {\n            @Override\n            public void onGetLocation(double latitude, double longitude) {\n                mCurrentLatitude = latitude;\n                mCurrentLongitude = longitude;\n                showCurrentLocation();\n            }\n        });\n}\n\nprivate void showCurrentLocation() {\n    if (mMap == null) {\n        return;\n    }\n    mHandler.post(new Runnable() {\n        @Override\n        public void run() {\n            LatLng curLocation = new LatLng(mCurrentLatitude, mCurrentLongitude);\n            MarkerOptions markerOptions = new MarkerOptions().position(curLocation);\n            markerOptions.title(\"Current Location\");\n            markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_BLUE));\n            mMap.addMarker(markerOptions);\n            mMap.moveCamera(CameraUpdateFactory.newLatLng(curLocation));\n            mMap.animateCamera(CameraUpdateFactory.zoomTo(mMap.getMaxZoomLevel() * 0.8f), 500, null);\n        }\n    });\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Annotations must be added to &lt;a href=\"http://en.wikipedia.org/wiki/PHPDoc#DocBlock\" rel=\"nofollow\"&gt;docblocks&lt;/a&gt;, not just simple comments. &lt;/p&gt;\n\n&lt;p&gt;You need to start your comment with &lt;code&gt;/**&lt;/code&gt; instead of &lt;code&gt;/*&lt;/code&gt; (notice double &lt;code&gt;*&lt;/code&gt;):&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;/**\n * @Route(\"/admin\")\n */\nclass AdminController extends Controller\n{\n    // ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is going to prefix all your &lt;code&gt;AdminController&lt;/code&gt;'s routes with &lt;code&gt;/admin&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Symfony2路由注释在类不工作", ["\n\n", "So basically I have a controller of a bundle in which i want to and a route prefix so i use the @Route annotation on the class, i've done this all of the other controllers of my Symfony2 app. However this one does not take the prefix into account so instead of being able to access the page on /admin/users/list i only access it on /list.", "\n\n", "Here is the controller :", "\n\n", "<?php\n\nnamespace LanPartyOrg\\UserBundle\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method;\nuse JMS\\SecurityExtraBundle\\Annotation\\PreAuthorize;\n\n/*\n* @Route(\"/admin\")\n* \n*/\nclass AdminController extends Controller\n {\n    /**\n    * @Route(\"/list\", name=\"users_list\")\n    * @Template(\"LanPartyOrgUserBundle:Admin:List.html.twig\")\n    */\n    public function listAction(){\n        $em = $this->getDoctrine()->getManager();\n        $users = $em->getRepository('LanPartyOrgUserBundle:User')->findAll();\n\n        return array('users'=>$users);\n    }\n}\n", "\n\n", "And here is my routing.yml :", "\n\n", "lan_party_org_user:\n    resource: \"@LanPartyOrgUserBundle/Controller/\"\n    type:     annotation\n    prefix:   /\n\nfos_user_security:\n    resource: \"@FOSUserBundle/Resources/config/routing/security.xml\"\n\nfos_user_profile:\n    resource: \"@FOSUserBundle/Resources/config/routing/profile.xml\"\n    prefix: /profile\n\nfos_user_register:\n    resource: \"@FOSUserBundle/Resources/config/routing/registration.xml\"\n    prefix: /register\n\nfos_user_resetting:\n    resource: \"@FOSUserBundle/Resources/config/routing/resetting.xml\"\n    prefix: /resetting\n\nfos_user_change_password:\n    resource: \"@FOSUserBundle/Resources/config/routing/change_password.xml\"\n    prefix: /profile\n", "\n\n", "Thanks for any help", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;len(line) &amp;gt; 0&lt;/code&gt; will be true for the &lt;code&gt;\"# Hello\"&lt;/code&gt; line, so it will get added to &lt;code&gt;output&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Currently, you are adding lines that either don't start with a # &lt;em&gt;or&lt;/em&gt; are not empty. You need to only add lines that satisfy both conditions:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if !strings.HasPrefix(line, \"#\") &amp;amp;&amp;amp; len(line) &amp;gt; 0 {\n    output[line] = true\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["解析文件，忽略注释和空白行", ["\n\n", "As the title says, I am trying to parse a file but ignore comments (started with ", "#", ") or blank lines. I have tried to make a system for this, yet it always seems to ignore that it should be ignoring comments and/or blank lines.", "\n\n", "lines := strings.Split(d, \"\n\")\nvar output map[string]bool = make(map[string]bool)\n\nfor _, line := range lines {\n    if strings.HasPrefix(line, \"#\") != true {\n        output[line] = true\n    } else if len(line) > 0 {\n        output[line] = true\n    }\n}\n", "\n\n", "When run (this is part of a function), it outputs the following", "\n\n", "This is the input ('d' variable):\nMinecraft\nZerg Rush\nPokemon\n\n# Hello\n\nThis is the output when printed ('output' variable):\n\nmap[Minecraft:true Zerg Rush:true Pokemon:true :true # Hello:true]\n", "\n\n", "My issue here is that it still keeps the \"\" and \"# Hello\" values, meaning that something failed, something I haven't been able to figure out.", "\n\n", "So, what am I doing wrong that this keeps the improper values?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;&amp;lt;? if ($transaction-&amp;gt;payment_method == \"boleto\") { ?&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Needs to have the correct open tag &lt;code&gt;&amp;lt;?php&lt;/code&gt; same with &lt;code&gt;&amp;lt;? } ?&amp;gt;&lt;/code&gt; should be &lt;code&gt;&amp;lt;?php } ?&amp;gt;&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["HTML自动将php标记转换为注释", ["\n\n", "I'm including 'success.php' into 'create.php' but my php code on 'create.php' is getting auto-commented (html tag)", "\n\n", "create.php\n", "\n", "\n", "\n", "<html>\n        <head>\n                <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n                <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\" integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\">\n                <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js\" integrity=\"sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\" crossorigin=\"anonymous\"></script>\n                <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"></script>\n        </head>\n        <body>\n                <?php\n                require(\"header.php\");\n\n                $amount = str_replace(array(\".\", \",\"), \"\", $_POST[\"amount\"]);\n\n                $data = array(\n                                \"amount\"          => $amount,\n                                \"payment_method\"  => $_POST[\"payment_method\"],\n                                \"customer\"        => $_POST[\"customer\"],\n                                \"installments\"    => $_POST[\"installments\"]);\n\n                if ($data[\"payment_method\"] == \"credit_card\") {\n                        $data += $_POST[\"card\"];\n                }\n\n\n                try {\n                        $transaction = new PagarMe_Transaction($data);\n                        $transaction->charge();\n                        require(\"success.php\");\n                } catch(Exception $e) {\n                        echo $e->getMessage();\n                }\n\n                ?>\n        </body>\n</html>", "\n", "\n\n", "\n", "\n\n", "success.php", "\n\n", "\n", "\n", "\n", "<div class=\"container\" style=\"padding-bottom:100px\">\n        <div class=\"page-header\">\n                <h1>Guide Life</h1>\n        </div>\n        <div class=\"alert alert-success\" role=\"alert\">\n                <b>Transação efetuada com sucesso!</b>\n        </div>\n        <? if ($transaction->payment_method == \"boleto\") { ?>\n                <p>\n                        Link para o boleto:\n                        <a target=\"_blank\" href=\"\"></a>\n                        <iframe src=\"https://api.pagar.me/1/boletos/live_citxbiz9d0kg9gu3e33cwmdwr\" width=\"100%\" height=\"100%\" />\n                </p>\n        <? } ?>\n</div>", "\n", "\n", "\n\n\n", "Page:", "\n\n", "\n\n", "Html code generated:", "\n\n", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "//1 带动画推出上一次视图控制器\r\n[self.navigationController popViewControllerAnimated:YES]\r\n\r\n//2 （1） 获取所要跳转到的视图控制器 （ViewController）；\r\n\r\n（2） 同时，将上一个视图的数据，传递给下一个视图。 （比如： 上一个视图是TableView， 那么，就要将点击cell的行号传递到下一个视图）。\r\n-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\r\n{\r\nid objVC = [segue destinationViewController];     //声明一个目标视图控制器（destination viewcontroller）\r\n\r\nif([objVC isKindOfClass:[SecendViewController class]])  \r\n{\r\n    void (^returnValue)(NSString *userName,NSString *userPasswd) = ^(NSString *userName,NSString *userPasswd)\r\n    {\r\n        self.userTEXT.text = userName;\r\n        self.passwordTEXT.text = userPasswd;\r\n    };\r\n    [objVC setValue:returnValue forKey:@\"block\"];//通过遵循 KVC （Key -Value- Coding）规则来传值\r\n}", "Konwledge_Point": "注释", "Question": [" iOS  简单代码 求大神帮忙注释下 跪谢", ["//1", "\n[self.navigationController popViewControllerAnimated:YES]", "\n\n", "//2", "\n-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender", "\n{", "\n    id objVC = [segue destinationViewController];//", "\n\n", "if([objVC isKindOfClass:[SecendViewController class]])//\n{\n    void (^returnValue)(NSString *userName,NSString *userPasswd) = ^(NSString *userName,NSString *userPasswd)\n    {\n        self.userTEXT.text = userName;\n        self.passwordTEXT.text = userPasswd;\n    };\n    [objVC setValue:returnValue forKey:@\"block\"];//\n}\n", "\n\n", "}", "\n\n", "最后跪求大神们给篇 BLOCK 正反向传值的文章", "\n谢谢了`"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;As noted &lt;a href=\"http://news.ycombinator.com/item?id=9522973\" rel=\"nofollow noreferrer\"&gt;comments are directives in go&lt;/a&gt; not just comments.&lt;/p&gt;\n\n&lt;p&gt;There is at the time of writing no definitive list. \nThis as logged as an &lt;a href=\"https://github.com/golang/go/issues/28532\" rel=\"nofollow noreferrer\"&gt;golang issue 28532&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Therefore I propose using this answer to make one.&lt;/p&gt;\n\n&lt;p&gt;Uses in the go core language and tools themselves:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://blog.golang.org/generate\" rel=\"nofollow noreferrer\"&gt;go:generate&lt;/a&gt; can be used for code generation.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://blog.golang.org/godoc-documenting-go-code\" rel=\"nofollow noreferrer\"&gt;godoc&lt;/a&gt; uses the function name to indicate comments it should interpret&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://blog.golang.org/examples\" rel=\"nofollow noreferrer\"&gt;Examples&lt;/a&gt; - document the expected output of a test (thanks @Butuzov)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://golang.org/pkg/go/build/\" rel=\"nofollow noreferrer\"&gt;build&lt;/a&gt; constraints (starting with '&lt;em&gt;// +build&lt;/em&gt;')&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://golang.org/pkg/cmd/go/#hdr-Import_path_checking\" rel=\"nofollow noreferrer\"&gt;Import comments&lt;/a&gt; e.g. '&lt;em&gt;package math // import \"path\"&lt;/em&gt;'&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Notable uses in third party packages&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/Parquery/gocontracts\" rel=\"nofollow noreferrer\"&gt;gocontracts&lt;/a&gt; - specify preconditions as comments&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/go-swagger\" rel=\"nofollow noreferrer\"&gt;go-swagger&lt;/a&gt; - document a ReST API using swagger&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/golangci/golangci-lint#false-positives\" rel=\"nofollow noreferrer\"&gt;golangci&lt;/a&gt; e.g. //nolint[:linter1,linter2,...]&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;How can they avoid conflicting with each other?&lt;/p&gt;\n\n&lt;p&gt;If you are developing a tool that really needs to treat comments as attributes and wish to avoid conflict with other similar uses prefix your comments with a namespace like \"&lt;em&gt;{mytool}&lt;/em&gt;: \"&lt;/p&gt;\n\n&lt;p&gt;There are some conscious attempts at namespacing.\nMagic comments built into go use the \"go: \" prefix as in \"go:generate\"\n(except where they don't)&lt;/p&gt;\n\n&lt;p&gt;go-swagger uses \"swagger: \"&lt;/p&gt;\n\n&lt;p&gt;However you still need to approach this with caution and check the list here or any other source you can find.&lt;/p&gt;\n\n&lt;p&gt;Also consider whether comments are the best &lt;a href=\"https://github.com/Parquery/gocontracts/issues/22\" rel=\"nofollow noreferrer\"&gt;or only&lt;/a&gt; approach rather than using functions instead.\nCompare for instance (&lt;a href=\"https://github.com/Parquery/gocontracts\" rel=\"nofollow noreferrer\"&gt;gocontracts&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// SomeFunc ensures:\n//  * !strings.HasSuffix(result, \"smth\")\nfunc SomeFunc(x int) (result string) {\n    // ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;with (&lt;a href=\"https://godoc.org/github.com/lpabon/godbc\" rel=\"nofollow noreferrer\"&gt;godbc&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func SomeFunc(x int) (result string) {\n    godbc.Require(strings.HasSuffix(result,\"smth\");\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Go中语义注释的用途是什么？", ["\n\n", "By analogy with ", "this question", " about tags I note that there are several uses of comments in go beyond pure commentary.", "\n\n", "Examples:", "\n\n", "\n", "\n", "go:generate", " can be used for code generation.", "\n", "\n", "godoc", " uses the function name to indicate comments it should interpret", "\n", "\n", "build", " constraints", "\n", "\n", "Are there any others I've missed? ", "\n\n", "Is there a definitive list somewhere?", "\n\n", "Some third party packages like ", "gocontracts", " and ", "go-swagger", " use them as well. How can they avoid conflicting with each other?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Scratch my previous answer - it's undocumented, but it IS possible, I found it by reading the compiler code. &lt;em&gt;Bah&lt;/em&gt;.  &lt;/p&gt;\n\n&lt;p&gt;But anyway, in thrift's master (1.0-dev), here's how it's done - using a &lt;code&gt;go.tag&lt;/code&gt; annotation.&lt;/p&gt;\n\n&lt;p&gt;This piece of thrift code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct foo {\n  1: string bar (go.tag = \"json:\\\"baz\\\" yo:\\\"dawg\\\"\"),\n  2: string bang\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Generates the following Go code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Foo struct {\n        Bar  string `thrift:\"bar,1\" json:\"baz\" yo:\"dawg\"`\n        Bang string `thrift:\"bang,2\" json:\"bang\"`\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在节俭的生成代码中控制golang注释", ["\n\n", "I have a message from thrift that I would like to be able to serialize into and out of json, but I don't want the generated json keys to match what is in the generated go code.", "\n\n", "Is there a way to control what annotations are attached to the struct in the go code that thrift generates?", "\n    "]], "Tag": "程序设计"}
{"Answer": "return; 就是代表此函数执行结束了,在你这儿代表当时执行的subselect函数结束了,如果你的if  else,或者for()  之后有代码,返回之后执行之后的代码,不过是你上一个subselect的代码,好比是每个函数都必须执行12345,3处递归了,return之后,执行上一个函数的45.以此类推", "Konwledge_Point": "注释", "Question": ["求解释代码，添加注释或者画图解释（在网上看到的求组合的递归算法，绕晕头了看不懂，求解释）", ["public class Test1 { ", "\n\n", "public static void main(String[] args) { ", "\n   select(2); ", "\n} ", "\n\n", "private static void select(int k) { ", "\n   char[] result = new char[k]; ", "\n   subselect(0, 1, result, k); ", "\n\n", "} ", "\n\n", "private static void subselect(int head, int index, char[] r, int k) { ", "\n   for (int i = head; i < a.length + index - k; i++) { ", "\n    if (index < k) { ", "\n     r[index - 1] = a[i]; ", "\n     System.out.println(\"i=\"+(i)+\";index=\"+(index)); ", "\n     subselect(i + 1, index + 1, r, k); ", "\n    } else if (index == k) { ", "\n     r[index - 1] = a[i]; ", "\n     System.out.println(\";i=\"+(i)+\";index=\"+(index)+\";index==k:\"+(index==k)); ", "\n     System.out.print(i+\"===\"); ", "\n     System.out.println(r); ", "\n     subselect(i + 1, index + 1, r, k); ", "\n    } else { ", "\n     System.out.println(\"++\"); ", "\n     return;//返回到何处？奇怪 ", "\n    } ", "\n\n", "} ", "\n} ", "\n\n", "private static char[] a = { 'a', 'b', 'c' }; ", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I experimented a bit with the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function text_format($string)\n{\n    return preg_replace('#\\[url=([^\\]]+)\\]([^\\[]*)\\[/url\\]#', '&amp;lt;a href=\"$1\"&amp;gt;$2&amp;lt;/a&amp;gt;', $string);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, one immediate fault with this is that if &lt;code&gt;linktext&lt;/code&gt; is empty, there will be nothing between &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;. One way around it would be to do another pass with something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;preg_replace('#&amp;lt;a href=\"([^\"]+)\"&amp;gt;&amp;lt;/a&amp;gt;#', '&amp;lt;a href=\"$1\"&amp;gt;$1&amp;lt;/a&amp;gt;', $string);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another option would be to use &lt;a href=\"http://www.php.net/manual/en/function.preg-replace-callback.php\" rel=\"nofollow noreferrer\"&gt;preg_replace_callback&lt;/a&gt; and put this logic inside your callback function.&lt;/p&gt;\n\n&lt;p&gt;Finally, this is obviously a common \"problem\" and has been solved many times by others, and if using a more mature open sourced solution is an option, I'd recommend looking for one.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释代码的正则表达式问题", ["\n\n", "I am currently making a homepage where logged in users can write comments. The comment string is first run through a function that str_replaces emoticons. After that I want it to exchange ", "\n\n", "[url=www.whatever.com]linktext[/url]\n", "\n\n", "with:", "\n\n", "<a href='www.whatever.com'>linktext</a>\n", "\n\n", "The reason for this is that I want to strip the text for all the html code that isn't controlled by my comment code, in case some users decide to get creative-", "\n\n", "and thought it would be best to use preg replace but the code I ended up with (Partially from reading about reg exp from my trusty \"O reilly Sql and Php\"-book and partially from the web) Is pretty bonkers, and most importantly, doesn't work.", "\n\n", "Any help would be appreciated, thanks.", "\n\n", "It's probably possible to exchange the entire code, not in 2 segments like I have done. Just decided on that getting 2 smaller parts to work first would be easier, and then merge them afterwards.", "\n\n", "code:", "\n\n", "function text_format($string)\n{\n    $pattern=\"/([url=)+[a-zA-Z0-9]+(])+/\";\n    $string=preg_replace($pattern, \"/(<a href=\\')+[a-zA-Z0-9]+(\\'>)+/\", $string);\n    $pattern=\"/([\\/url])+/\";\n    $string=preg_replace($pattern, \"/(<\\/a>)+/\", $string);    \n    return $string;\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I cannot reproduce your problem based on your simplified demo. WinRAR displays it as expected. But I can mimic the result you get by using &lt;a href=\"http://php.net/manual/en/language.types.string.php\" rel=\"nofollow noreferrer\"&gt;single quotes&lt;/a&gt; for the comment string. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$zip = new ZipArchive;\n$res = $zip-&amp;gt;open('test.zip', ZipArchive::CREATE);\nif ($res === TRUE) {\n    $zip-&amp;gt;addFromString('test.txt', 'file content goes here');\n\n    $zip-&amp;gt;setArchiveComment(\"File \\t Stats\r\nSecond line ... some other text \r\n\"); // OK\n    $comment = \"File \\t Stats\r\n\";\n    $comment .= 'Second line ... some other text \r\n';\n    $zip-&amp;gt;setArchiveComment($comment); // NOT OK for the second line\n\n    $zip-&amp;gt;close();\n    echo 'ok';\n} else {\n    echo 'failed';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["ZipArchive中的多行注释", ["\n\n", "I am trying to set a multi-line comment with ZipArchive.Below is a simplified demo.", "\n\n", "<?php\n$comment = \"File \\t Stats\n\";\n$comment .= \"Second line ...some another text \n\";\n$zip->setArchiveComment($comment);\n", "\n\n", "I then open the zip file with Winrar on my windows machine and in the comment you can see ", "\n", " , ", "\\t", " appearing as is ... indicating that either winrar don't allow this or i wrong set the zipArchive comment.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Correct me if I'm wrong, but I think that the only reason is that you use this, is that you won't see the comments in the browser's source-view of your website.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用PHP在HTML中进行注释", ["\n\n", "<?php // force Internet Explorer to use the latest rendering engine available ?>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\n<?php // mobile meta (hooray!) ?>\n<meta name=\"HandheldFriendly\" content=\"True\">\n", "\n\n", "I've seen this trend more and more lately. Does it have any advantages or disadvantages over the traditional way of leaving comments/notes?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Don't know it, but the obvious workaround would be to replace the &lt;code&gt;echo $page&lt;/code&gt; with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; eval(\"?\".\"&amp;gt;\".$page);    // oh nooooes, eval is evil!!!!!\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I'd assume &lt;code&gt;-&amp;gt;parse&lt;/code&gt; does just a conversion, and the output is supposed to be stored in a new .php output/template/cache file usually.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PhamlP将PHP呈现为注释，不执行代码", ["\n\n", "So:", "\n\n", "I quite like using Haml in ruby projects, and was testing it out in PHP. I've been trying ", "PhamlP", " because it looks like it's not dead, whereas phpHaml and pHaml haven't been updated in nearly 4 years.", "\n\n", "Now, the problem I have is the php code that PhamlP is parsing is showing up as comments in HTML instead of executing. Here's the test file, index.php:", "\n\n", "include_once('haml/HamlParser.php');\n$haml = new HamlParser(array('ugly'=>'false'));\n$page = $haml->parse('test.haml');\necho $page;\n", "\n\n", "Here's the test.haml file:", "\n\n", "!!!\n- $foo = 'bar'\n%h1 Foo this\n.test= $foo\n", "\n\n", "and here's the output I get in the browser when I view source:", "\n\n", "<?php\nrequire_once '/Users/Andrew/Sites/eighty-b/_app/haml/HamlHelpers.php';\n?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<?php $foo = 'bar'; ?><h1>Foo this</h1><div class=\"bar\">This better fooacross multiple lines butstill in the bar div!</div><div class=\"test\"><?php echo $foo; ?></div>\n", "\n\n", "So, for instance, the line ", "- $foo = 'bar'", " isn't being executed, it's somehow passing through to the browser as a comment.", "\n\n", "How the heck do you fix that?", "\n    "]], "Tag": "程序设计"}
{"Answer": "看样子像一个断点续传代码\r\n\r\n1:以只读方式定义randomAccessFile（）第一个指的是要随机访问的文件，第二个参数是只读方式打开（随机访问文件：指的是像数组一样，可以随机访问任意位置的字符）\r\n\r\n2：将光标移到pastLength的位置，应该指的是文件之前上传的位置\r\n\r\n3.从pastLength的位置开始，每次读取1024字节数据放入buffer中，直到读完为止", "Konwledge_Point": "注释", "Question": ["哪位大神给注释下这几行简单的代码", ["这几行代码 ，看百度说是指针位置。", "\n\n", "#这样写进去的文件，文件名是不是改变了"]], "Tag": "程序设计"}
{"Answer": "你可以理解为arr是一个数组的数组，它的每个元素是一个数组。\r\n所以下面需要对它的元素先初始化，然后才能把值放进去。", "Konwledge_Point": "注释", "Question": ["java,新手，向大家请教一下这段代码中注释部分怎么正确理解？", ["public class 程序33 {", "\n    public static void main(String[] args){", "\n        Scanner in=new Scanner(System.in);", "\n        System.out.println(\"杨辉三角\");", "\n        System.out.println(\"请输入一个数字代表行数：\");", "\n        int n=in.nextInt();", "\n    **  int[][] arr=new int[n][];**//二维数组", "\n        if(n>=3){", "\n            for(int i=0;i<n;i++){", "\n            **  arr[i]=new int[i+1];**//又new了个一维数组", "\n                arr[i][0]=arr[i][i]=1;", "\n                for(int j=1;j<i;j++){", "\n                    arr[i][j]=arr[i-1][j]+arr[i-1][j-1];", "\n                }", "\n            }", "\n        }", "\n        for(int i=0;i<arr.length;i++){", "\n            for(int j=0;j<arr[i].length;j++){", "\n                System.out.print(arr[i][j]+\" \");", "\n            }", "\n            System.out.println();", "\n        }", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数据库版本不一致,你看的视频应该是8.0的,但你数据库是低于8.0的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/406092754846150.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/926613754846151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["DATAGRIP的备注问题", ["问题遇到的现象和发生背景", "\n", "跟着别人的视频学习创建一个表，运行的时候一直报错", "\n", "问题相关代码，请勿粘贴截图", "\n", "create table user(", "    id int primary key auto_increment comment '主键',", "    name varchar(10) not null unique comment '名字',", "    age char(1) check ( age > 0 && age < 120 ) comment '年龄',", "    status char(1) default '1' comment '状态',", "    gender char(1)", ") comment '用户表';", "\n", "运行结果及报错内容", "\n", "报错内容：42000][1064] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'comment '年龄', status char(1) default '1' comment '状态', gender ' at line 4", "\n", "我的解答思路和尝试过的方法", "\n", "将comment '年龄'注释掉后程序能正常运行", "\n", "我想要达到的结果", "\n", "想请教一下各位，这是怎么回事？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use long open tags.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php if($this-&amp;gt;agent-&amp;gt;browser()=='MSIE'){ ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if for some reason cannot do that then enable &lt;a href=\"http://www.php.net/manual/en/ini.core.php#ini.short-open-tag\" rel=\"nofollow\"&gt;short-open-tag&lt;/a&gt; setting.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["CodeIgniter代码由HTML注释掉", ["\n\n", "I am using CodeIgniter 2.1.4 with PHP 5.5.12 on my local machine.", "\n\n", "My PHP code seems to be commented out in HTML automatically.", "\n\n", "Below is a snippet of my code:-", "\n\n", "<? if($this->agent->browser()=='MSIE'){ ?>\n    <img class=\"bg\" src=\"<?=base_url()?>assets/img/bg.jpg\" alt=\"Login Background\" />\n<? } ?>\n", "\n\n", "When I try to inspect it in Chrome, it shows the below:-", "\n\n", "<!--? if($this--->\nagent-&gt;browser()=='MSIE'){ ?&gt;\n<img class=\"bg\" src=\"http://localhost/abc/assets/img/bg.jpg\" alt=\"Login Background\">\n<!--? } ?-->\n", "\n\n", "This is just one of a few places that was automatically commented out. I know the code works because I have the same code working well on a production server. It is just happening on my local machine.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use the &lt;a href=\"http://www.phpexcel.net\" rel=\"nofollow\"&gt;PHPExcel&lt;/a&gt; library. Comments are held against the worksheet. and the worksheet's getComments() method will return an array of comment objects indexed by their cell address.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;include '/PHPExcel_Library/Classes/PHPExcel.php';\n\n$inputFileType = 'Excel5';\n$inputFileName = 'CS2template_all_products_v12.xls';\n\n$objPHPExcelReader = PHPExcel_IOFactory::createReader($inputFileType);\n$objPHPExcel = $objPHPExcelReader-&amp;gt;load($inputFileName);\n\n$sheet = $objPHPExcel-&amp;gt;getActiveSheet();\n\n$comments = $sheet-&amp;gt;getComments();\nforeach($comments  as $cellID =&amp;gt; $comment) {\n    echo $cellID,PHP_EOL;\n    var_dump($comment-&amp;gt;getText()-&amp;gt;getPlainText());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note, my example uses an Excel .xls file, but the method will work just as easily replacing the $inputFileType with \"Excel2007\" for an .xlsx file &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何以编程方式检索excel中的单元格注释？", ["\n\n", "I recently imported a number of large excel 2010 spreadsheets (which was exported to CSV for the import) into a database. I have now been told that the cell comments are missing (I didn't even know there were cell comments in the original Excel file, I only ever had the CSV).", "\n\n", "I need to search each row of the Excel file, find cells with cell comments, grab the comment and add it into the database for that row (the database references the row number from the spreadsheet, so if I can just extract row number and all the cell comments in that row, that's perfect)", "\n\n", "My skills are in PHP and Perl. Ideally I would use PHP to read and process the data, but using something else to output text/csv, which I can then parse with PHP would work fine too.", "\n\n", "Does anyone know a way to extract these cell comments, or have any pointers?", "\n\n", "Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It is fixed in Restler 2.1.5&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;It is a bug that exists in Restler 2.1.4 caused by the DocParser as it expects &lt;code&gt;@class&lt;/code&gt; comment in a specific format, as shown below&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * @class ClassName(property=value&amp;amp;property2=value2)\n */\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is used to set a property of another class after initialization. for example, we can use it to tell the XmlFormat to set the root name, define what should be converted as attribute etc., Lets take the known BMI example, adding the PHPDoc comment as shown below,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nclass BMI {\n    /**\n    * @class XmlFormat(root_name=self&amp;amp;attribute_names=height,weight)\n    */\n    function index($height=162.6, $weight=84) {\n        $result = new stdClass();\n        $cm = $height;\n        $kg = $weight;\n\n        $meter = $cm / 100;\n        $inches = $meter * 39.3700787;\n        $feet = round($inches/12);\n        $inches = $inches % 12; \n\n        $result-&amp;gt;bmi = round($kg/($meter*$meter),2);\n        $lb = round($kg/0.45359237,2);\n\n        if($result-&amp;gt;bmi&amp;lt;18.5){\n            $result-&amp;gt;message = 'Underweight';\n        }elseif ($result-&amp;gt;bmi&amp;lt;=24.9){\n            $result-&amp;gt;message = 'Normal weight';\n        }elseif ($result-&amp;gt;bmi&amp;lt;=29.9){\n            $result-&amp;gt;message = 'Overweight';\n        }else{\n            $result-&amp;gt;message = 'Obesity';\n        }\n        $result-&amp;gt;metric = array('height'=&amp;gt;\"$cm centimeter\", 'weight'=&amp;gt;\"$weight kilograms\");\n        $result-&amp;gt;imperial = array('height'=&amp;gt;\"$feet feet $inches inches\", 'weight'=&amp;gt;\"$lb pounds\");\n        return $result;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;returns the following XML&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=\"1.0\"?&amp;gt;\n&amp;lt;self&amp;gt;\n    &amp;lt;bmi&amp;gt;31.77&amp;lt;/bmi&amp;gt;\n    &amp;lt;message&amp;gt;Obesity&amp;lt;/message&amp;gt;\n    &amp;lt;metric height=\"162.6 centimeter\" weight=\"84 kilograms\"/&amp;gt;\n    &amp;lt;imperial height=\"5 feet 4 inches\" weight=\"185.19 pounds\"/&amp;gt;\n&amp;lt;/self&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which otherwise will be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=\"1.0\"?&amp;gt;\n&amp;lt;response&amp;gt;\n  &amp;lt;bmi&amp;gt;31.77&amp;lt;/bmi&amp;gt;\n  &amp;lt;message&amp;gt;Obesity&amp;lt;/message&amp;gt;\n  &amp;lt;metric&amp;gt;\n    &amp;lt;height&amp;gt;162.6 centimeter&amp;lt;/height&amp;gt;\n    &amp;lt;weight&amp;gt;84 kilograms&amp;lt;/weight&amp;gt;\n  &amp;lt;/metric&amp;gt;\n  &amp;lt;imperial&amp;gt;\n    &amp;lt;height&amp;gt;5 feet 4 inches&amp;lt;/height&amp;gt;\n    &amp;lt;weight&amp;gt;185.19 pounds&amp;lt;/weight&amp;gt;\n  &amp;lt;/imperial&amp;gt;\n&amp;lt;/response&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;More use cases and explanations can be found &lt;a href=\"https://github.com/Luracast/Restler/issues/3\" rel=\"nofollow\"&gt;here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It should not throw the error when &lt;code&gt;@class&lt;/code&gt; is defined in unexpected format. We will fix it in the next release.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在error_reporting为ON的doc注释中使用@class标记时出现Luracast Restler错误", ["\n\n", "I have a REST webservice implemented in PHP using Luracast Restler API.", "\n\n", "If I add any ", "@class", " tags to the doc comments in my custom class exposing the public API methods or in the class implementing the iAuthenticate methods performing authentication, restler fails to parse the request if error reporting is ON.", "\n\n", "I think the problem is the DocParser class tries to proccess the ", "@class", " tag as if t where the PHP ", "Class", " declaration. The method of the class ", "formatClass()", " generates an ", "undefined index", " notice. If error reporting is ON this will send headers, so when later Restler tries to send the response it will no be able to change headers to indicate that JSON content is sent and the ", "Cannot modify header information - headers already sent", " is triggered.", "\n\n", "Is there any workaround to this or is just a bug in the Restler Api? (Apart from setting my error reporting level to avoid Notices from being sent).", "\n    "]], "Tag": "程序设计"}
{"Answer": "never give up，never give in", "Konwledge_Point": "注释", "Question": ["用C++，期间用到类和对象，继承，源程序要有适当的注释，至少采用文本菜单界面。", ["题目 1：小型学籍与成绩管理软件 1.需求分析： 对学生、课程以及课程成绩进行登记、查询等基本功能 2.程序的基本功能： （1）、从键盘输入若干学生、课程以及课程成绩的有关信息。 （2）、对学生信息进行检索并将检索结果显示在屏幕上。 （3）、计算某编号学生的总成绩与平均成绩。 （4）、计算某门课程总平均成绩。 （5）、 增加、修改、删除一名学生及成绩。 "]], "Tag": "程序设计"}
{"Answer": "接口的理解\r\n1. 面向接口编程利用面向对象的一个基本性质--多态，相同方法不同表现。可以这样想一下，client编写自己程序的时候，如果直接面向一个具体类写程序，那这个程序有个风吹草动的，那client就要受到影响，但如果面向一个接口就不同了，某个具体类变了，只知接口，不知具体类的client就可以完全不动。\r\n\r\n2. 换个视角看，面向接口编程反映面向对象的另一个方面--封装，接口将具体实现封装了起来，相当于做一件事的准则，可以不影响客户的情况下切换实现。接口必须有实现它的类（class），单独不能使用。\r\n所以如果Sale类不继承information接口也是可以正常使用的。information接口为用户开放了ShowInfo()方法，用户只需要有这个方法就可以，不需要知道类Sale是如何实现，所以information接口就是制定行为准则，即提供了一个调用的标准。类information的实际也必须按照这个标准来实现，否则也会出错。", "Konwledge_Point": "注释", "Question": ["求教大神定义这个接口有什么有，把接口注释掉运行起来一样的", ["interface information               //定义接口", "\n    {", "\n        string Code { get; set; }", "\n        string Name { get; set; }", "\n        void ShowInfo();                //输出信息", "\n    }", "\n    public class Sale : information       //接口的继承", "\n    {", "\n        string code = \"\";", "\n        string name = \"\";", "\n         public string Code", "\n         {", "\n             get", "\n             {", "\n                 return code;", "\n             }", "\n             set", "\n             {", "\n                 code = value;", "\n             }", "\n         }", "\n         public string Name", "\n         {", "\n             get", "\n             {", "\n                 return name;", "\n             }", "\n             set", "\n             {", "\n                 name = value;", "\n             }", "\n         }", "\n        public Sale(string code, string name)       //定义构造函数", "\n        {", "\n            Code = code;", "\n            Name = name;", "\n        }", "\n        public void ShowInfo() { }                 //实现接口方法", "\n        public static void ShowInfo(Sale[] sales)", "\n        {", "\n            foreach (Sale s in sales)", "\n                Console.WriteLine(\"商品编号:\" + s.Code + \"商品名称：\" + s.Name);    //用得是属性，不是具体变量", "\n        }", "\n        public static double CaleMoney(T[] items)     //定义泛型方法,定义成静态，不需生成实例", "\n        {", "\n            double sum = 0;", "\n            foreach (T item in items)", "\n                sum += Convert.ToDouble(item);", "\n            return sum;                                      //使用泛方法，不管传入什么类型，转化为double ", "\n        }", "\n    }"]], "Tag": "程序设计"}
{"Answer": "http://www.w3school.com.cn/jquery/ajax_post.asp\r\n\r\n```\r\n     GenInfo.main.del = function () {\r\n        var row = $('#GenInfoGrid').datagrid('getSelections');//获取datagrid选择的数据行\r\n        if (row.length &gt;= 1) {//有选中的数据库\r\n            $.messager.confirm('确认', '确认删除?', function (r) {//调用easyui的确认对话框\r\n                if (r) {\r\n                    var ids = [];\r\n                    for (var i = 0; i &lt; row.length; i++) {//把选中的数据库的id压入数组\r\n                        ids.push(row[i].id);\r\n                    }\r\n                    //下面是jquery的代码，就是调用jquery的post方法请求delete这个地址\r\n                    $.post('delete', {\r\n                        ids: ids.join(\",\")\r\n                    }, function (result) { //动态页200状态post成功回调并且服务器返回标准json数据执行的回到函数\r\n                        if (result) {\r\n                            // reload data\r\n                            $('#GenInfoGrid').datagrid('clearSelections');\r\n                            $('#GenInfoGrid').datagrid('reload');\r\n                        }\r\n                    }, \"json\"); //指定要将服务器返回的内容处理成什么类型的，这里是json类型，还可以有html，text之类的\r\n                }\r\n            });\r\n        } else {\r\n            $.messager.alert('错误', '请至少选择一条记录');\r\n        }\r\n    };\r\n```", "Konwledge_Point": "注释", "Question": ["求给我这段代码加几行注释！", ["GenInfo.main.del = function() {", "\n        var row = $('#GenInfoGrid').datagrid('getSelections');", "\n        if (row.length >= 1) {", "\n            $.messager.confirm('确认', '确认删除?', function(r) {", "\n                if (r) {", "\n                    var ids = [];", "\n                    for (var i = 0; i < row.length; i++) {", "\n                        ids.push(row[i].id);", "\n                    }", "\n                    //???????", "\n                    $.post('delete', {", "\n                        ids : ids.join(\",\")", "\n                    }, function(result) {                //???", "\n                        if (result) {", "\n                            // reload data", "\n                            $('#GenInfoGrid').datagrid('clearSelections');", "\n                            $('#GenInfoGrid').datagrid('reload');", "\n                        }", "\n                    }, \"json\");                 //???(这里的“json”是什么作用)", "\n                }", "\n            });", "\n        } else {", "\n            $.messager.alert('错误', '请至少选择一条记录');", "\n        }", "\n    };"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;UPDATED:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Your code is almost good exept for the &lt;code&gt;theme_options_validate&lt;/code&gt; function that still work but it coded in a wrong fashion; below how it should be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function theme_options_validate( $input ) {\n   $input['hidecred'] = isset($input['hidecred']) ? 1: 0;\n   return $input;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So i guess that the real problem is that you are not including the conditional statement in all the desired WP pages. most probably you are including it only in &lt;code&gt;page.php&lt;/code&gt; and not in &lt;code&gt;page-blog.php&lt;/code&gt; and so on...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$options = get_option('startuppro_options');\nif ( $options['hidecred'] ){\n  // do something here\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["WordPress选项页面复选框 - 如何转换为条件注释？", ["\n\n", "I'm working on a WordPress theme and I've created an options page that is already setup and functioning for inputs and textareas. Which can easily be carried to the template pages with:", "\n\n", "<?php $options = get_option('kittytheme_options'); echo $options['kittens']; ?>\n", "\n\n", "Now, how would one modify that to work as a checkbox conditional? The following is probably wrong in many ways, but should illustrate what I'm trying:", "\n\n", "<?php $options = get_option('kittytheme_options'); if ( $options['kittycheckbox'] == '0' ) : ?>Theme By: <a href=\"http://someurl.com/\">Company Name</a><?php endif; ?>\n", "\n\n", "So basically the idea is that the link should show by default being equal to 0 or nothing. But, when the checkbox to hide this area is checked in the options it would equal 1 therefore hiding it.", "\n\n", "From the options page/form here's the checkbox:", "\n\n", "<input id=\"kittytheme_options[kittycheckbox]\" name=\"kittytheme_options[kittycheckbox]\" type=\"checkbox\" value=\"1\" <?php checked( '1', $options['kittycheckbox'] ); ?> />\n<label class=\"description\" for=\"kittytheme_options[kittycheckbox]\"><?php _e( 'Hide Kitty Credit', 'kittytheme' ); ?></label>\n", "\n\n", "And the final validation function is:", "\n\n", "function theme_options_validate( $input ) {\nglobal $select_options;\nif ( ! isset( $input['kittycheckbox'] ) )\n$input['kittycheckbox'] = null;\n$input['kittycheckbox'] = ( $input['kittycheckbox'] == 1 ? 1 : 0 );\nreturn $input;\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Does this not work? (Assuming multi-line matching enabled)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(\\w)*\\s*:\\s*(\\w*)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I assume you pulled off the comment block with something like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\\/\\*.*?\\*\\/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;with &lt;code&gt;.&lt;/code&gt; set to match anything.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["用于在PHP中解析注释变量的正则表达式", ["\n\n", "I have a comment block that can look like this;", "\n\n", "/**\n * variable1: value\n * variable2: value\n */\n", "\n\n", "or like this;", "\n\n", "/*\nvariable1: value\nvariable2: value\n*/\n", "\n\n", "What I need is to be able to match any number of variable/value pairs and add them to an array. I can't seem to figure it out though, I keep matching the wrong things.", "\n\n", "All variables would be single-line, so that should simplify things a little. Spaces before 'variable' or after the the colon should be disregarded, but any other spaces in the value lines should be retained.", "\n\n", "UPDATE:", "\n\n", "What I ended up going with was a slight expansion of the selected answer;", "\n\n", "/(\\w)*\\s*:\\s*([\\w'\"\\/.: ]*)/\n", "\n\n", "It allowed for URLs to be used as values like so;", "\n\n", "/**\n * url: 'some/file.png'\n * url: \"http://www.google.ca/intl/en_ca/images/logo.gif\"\n */\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;/*   &lt;/p&gt;\n\n&lt;p&gt;*/ &lt;/p&gt;\n\n&lt;p&gt;类似的&amp;#xff0c;你自己看看。 要看复杂的文档注释&amp;#xff0c; 看一看&amp;#xff1a; &lt;a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/documentation-comments\"&gt;Documentation comments - C# language specification | Microsoft Docs&lt;/a&gt; &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C#中有类似C语言的注释方法吗？怎样让注释附带在说明框里？", ["\n\n", "\n\n", "就这样，我绝对挺方便的，希望c#也有"]], "Tag": "程序设计"}
{"Answer": "代码功能归根结底不是别人帮自己看或讲解或注释出来的；而是被自己静下心来花足够长的时间和精力亲自动手单步或设断点或对执行到某步获得的中间结果显示或写到日志文件中一步一步分析出来的。\r\n提醒：再牛×的老师也无法代替学生自己领悟和上厕所！\r\n单步调试和设断点调试（VS IDE中编译连接通过以后，按F10或F11键单步执行，按Shift+F11退出当前函数；在某行按F9设断点后按F5执行停在该断点处。）是程序员必须掌握的技能之一。", "Konwledge_Point": "注释", "Question": ["C语言小程序，帮忙写下注释，看不太懂？？？", ["#include ", "\n#include ", "\n#include \"student.h\"", "\nvoid Menu()", "\n{", "\n    printf(\"\\n\\n\\n\\n\");", "\n    printf(\"\\t____________________________________________________________\\n\");", "\n    printf(\"\\t\\t\\t\\t*学生信息管理系统*\\n\");", "\n    printf(\"\\t____________________________________________________________\\n\");", "\n    printf(\"\\t\\t\\t\\t[1]插入\\n\");", "\n    printf(\"\\t\\t\\t\\t[2]删除\\n\");", "\n    printf(\"\\t\\t\\t\\t[3]修改\\n\");", "\n    printf(\"\\t\\t\\t\\t[4]查找\\n\");", "\n    printf(\"\\t\\t\\t\\t[5]浏览\\n\");", "\n    printf(\"\\t\\t\\t\\t[6]保存\\n\");", "\n    printf(\"\\t\\t\\t\\t[7]读取\\n\");", "\n    printf(\"\\t\\t\\t\\t[0]退出\\n\");", "\n    printf(\"\\t_____________________________________________________________\\n\");", "\n    printf(\"\\n\\t\\t请选择(0-7):\");", "\n}", "\nNodePtr InitList(NodePtr head)", "\n{", "\n    head=(NodePtr)malloc(sizeof(Node));", "\n    (*head).next=NULL;", "\n    return head;", "\n}", "\nvoid InsertFront(NodePtr head,Student e)", "\n{", "\n    NodePtr s;", "\n    s=(NodePtr)malloc(sizeof(Node));", "\n    (*s).date=e;", "\n    (*s).next=(*head).next;", "\n    (*head).next=s;", "\n}", "\nvoid Display(NodePtr head)", "\n{", "\n    head=(*head).next;", "\n    if(head==NULL)", "\n    {", "\n        printf(\"空表\\n\");return;", "\n    }", "\n    printf(\"\\t%10s%15s%4s%4s\\n\",\"num\",\"name\",\"sex\",\"age\");", "\n    printf(\"\\t_______________________________________\\n\");", "\n    while(head)", "\n    {", "\n        printf(\"\\t%10ld%15s%4c%4d\\n\",head->date.num,head->date.name,head->date.sex,head->date.age);", "\n        head=head->next;", "\n    }", "\n\n", "}", "\nvoid Delete(NodePtr head,NodePtr e)", "\n{", "\n    e=head;", "\n}", "\nNodePtr Search(NodePtr head,int num)", "\n{", "\n    NodePtr p;", "\n    p=(NodePtr)malloc(sizeof(Node));", "\n    p=head->next;", "\n    while(p!=NULL&&p->date.num!=num)", "\n        p=p->next;", "\n    if(p->date.num=num)", "\n        return p;", "\n\n", "}", "\n\n", "#ifndef STUDENT_H_INCLUDED", "\n#define STUDENT_H_INCLUDED", "\ntypedef struct Student", "\n{", "\n    long num;", "\n    char name[20];", "\n    char sex;", "\n    int  age;", "\n}Student,*StudentPtr;", "\ntypedef struct Node", "\n{", "\n    Student date;", "\n    struct Node* next;", "\n}Node,*NodePtr;", "\nvoid Menu();", "\nNodePtr InitList(NodePtr head);", "\nvoid InsertFront(NodePtr head,Student e);", "\nvoid Delete(NodePtr head,NodePtr e);", "\nNodePtr Search(NodePtr head,int num);", "\nvoid Display(NodePtr head);", "\n\n", "#endif // STUDENT_H_INCLUDED", "\n\n", "#include ", "\n#include ", "\n#include \"student.h\"", "\n#include ", "\n#include ", "\n\n", "int main()", "\n{", "\n    int n;", "\n    NodePtr head;", "\n    head=InitList(head);", "\n    Menu();", "\n    scanf(\"%d\",&n);", "\n    printf(\"\\n\");", "\n    while(n0)", "\n    {", "\n      switch(n)", "\n      {", "\n        case 1:", "\n            {", "\n                Student s;", "\n                printf(\"请输入要插入的学生信息：(num name age sex)\\n\");", "\n                fflush(stdin);   //清空", "\n                scanf(\"%ld%s%d %c\",&s.num,s.name,&s.age,&s.sex);", "\n                InsertFront(head,s);", "\n                break;", "\n            }", "\n        case 2:", "\n            {", "\n                int num;", "\n                NodePtr s;", "\n                printf(\"请输入要删除的学生学号：\");", "\n                scanf(\"%d\",&num);", "\n                s=Search(head,num);", "\n                Delete(head,s);", "\n                break;", "\n            }", "\n        case 3:printf(\"修改:\\n\");break;", "\n        case 4:", "\n            {", "\n                NodePtr s;", "\n                int num;", "\n                printf(\"请输入要查找的学生学号：\");", "\n                scanf(\"%d\",&num);", "\n                s=Search(head,num);", "\n                printf(\"\\t%10ld%15s%4c%4d\\n\",s->date.num,s->date.name,s->date.sex,s->date.age);", "\n                break;", "\n            }", "\n        case 5:Display(head);break;", "\n        case 6:printf(\"保存:\\n\");break;", "\n        case 7:printf(\"读取:\\n\");break;", "\n      }", "\n        getch();", "\n        Menu();", "\n        scanf(\"%d\",&n);", "\n        printf(\"\\n\");", "\n    }", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Edit new my comment... , i had two problem because PHP not display.... . &lt;strong&gt;First&lt;/strong&gt; ,me messing some modules for PHP , &lt;strong&gt;libapache2-mod-php7.0&lt;/strong&gt;..&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Seconds&lt;/strong&gt; ,i not had access right to my Website... , with &lt;strong&gt;sudo chown -R www-data:www-data /var/www/html&lt;/strong&gt; , i have this Right to give....\n&lt;a href=\"https://i.stack.imgur.com/mjOiX.png\" rel=\"nofollow noreferrer\"&gt;image how the Website see with the Comments&lt;/a&gt; , The Code remain identical...&lt;/p&gt;\n\n&lt;p&gt;@user3783243 , today i to red &lt;a href=\"https://stackoverflow.com/questions/17239731/fopen-t-compatibility-mode-in-php\"&gt;this&lt;/a&gt;  , how Understand , &lt;strong&gt;t&lt;/strong&gt; convert \n to \r\n , it is &lt;strong&gt;ONLY&lt;/strong&gt; for Windows user.. , Linux ignored it ... .&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;\n&lt;/strong&gt; is used for Unix systems (including Linux, and OSX). &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;\r\n&lt;/strong&gt; is mainly used on Windows.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;\r&lt;/strong&gt; is used on really old Macs.&lt;/p&gt;\n\n&lt;p&gt;from &lt;a href=\"https://stackoverflow.com/questions/4824621/is-a-new-line-n-or-r-n\"&gt;Here&lt;/a&gt; .&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["HTML和PHP中的注释表单不显示", ["\n\n", "i am very new with html/css too with php and my English is very poor..\nso , my problem ... , i have this Codec from ", "here", " . I have Three File , the First is ", "index.php", " ", "\n\n", "<html> \n<head> \n<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"> \n</head> \n\n<body> \n<form action=\"\" method=\"POST\"> \n<label>Name: \n<input type=\"text\" name=\"Name\" class=\"Input\" style=\"width: 225px\" required> \n</label> \n<br><br> \n<label> Comment: <br> \n<textarea name=\"Comment\" class=\"Input\" style=\"width: 300px\" required> </textarea> \n</label> \n<br><br> \n<input type=\"submit\" name=\"Submit\" value=\"Submit Comment\" class=\"Submit\"> \n</form> \n</body> \n</html> \n\n<?php \n\n    if($_POST['Submit']){  \n\n\n\n        $Name = $_POST['Name']; \n        $Comment = $_POST['Comment']; \n\n\n        #Get old comments \n        $old = fopen(\"comments.txt\", \"r+\"); \n        $old_comments = fread($old, 1024); \n\n\n        #Delete everything, write down new and old comments \n        $write = fopen(\"comments.txt\", \"w+\"); \n        $string = \"<b>\".$Name.\"</b><br>\".$Comment.\"<br>\n\".$old_comments; \n        fwrite($write, $string); \n        fclose($write); \n        fclose($old); \n    } \n\n        #Read comments \n        $read = fopen(\"comments.txt\", \"r+\"); \n        echo \"<br><br>Comments<hr>\".fread($read, 1024); \n        fclose($read); \n\n\n?>\n", "\n\n", "Than a style.css File and a empty with the  name comments.txt . This Files i have to a Computer (", "computer A", ") , with apache , start it with , ", "/etc/init.d/apache2 restart", " .In another Computer (", "computer B", ") i write to Browser, ", "192.345.345.100/index.php", " , in ", "Name", " i write my name and in ", "Comment", " , a comment.. ,what come nothing.... .Image from mine Browser ", "enter image description here", " , can please anyone help me , Thanks !", "\n\n", "The image from Computer ", "B", " , in Browser write  ", "http://192.345.345.100/info.php", "  ,info.php which i have to build  with ", "<?php  phpinfo();  ?>", " .", "\n\n", "See stacktrace:", "\n\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "这种注释对于学习写程序来说的人有用，但是对于真正的程序来说没用。\r\n注释不是把每行代码用中文再写一遍，任何程序员都可以得到这些表面的信息。注释应该少而精炼，强调程序的实现意图和接口的调用规范。", "Konwledge_Point": "注释", "Question": ["请前辈们帮我看看注释写得是否规范", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Change &lt;code&gt;&amp;lt;?=&lt;/code&gt; to &lt;code&gt;&amp;lt;?php&lt;/code&gt; and then do the comment&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php /*echo  $form-&amp;gt;field($model, 'bew_id')-&amp;gt;textInput(['placeholder' =&amp;gt; 'Bew']) */ ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;because this &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?= $form-&amp;gt;field($model, 'bew_id')-&amp;gt;textInput(['placeholder' =&amp;gt; 'Bew']) ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is shorthand  for&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php echo $form-&amp;gt;field($model, 'bew_id')-&amp;gt;textInput(['placeholder' =&amp;gt; 'Bew']) ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;use any comment  // or /* */&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何在Yii2中注释掉结构<？=？>", ["\n\n", "a trivial question, but all my efforts to comment out code lines like this:", "\n\n", "<?=$form->field($model, 'bew_id')->textInput(['placeholder' => 'Bew']) ?>\n", "\n\n", "failed by using PHP and/or HTML-comments.Following trys didn't success:", "\n\n", "//", "\n\n", "/* */", "\n\n", "<-!- -->", "\n\n", "Any ideas?? ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/787084268666165.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;点左边看看&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["这个注释怎么变成竖线了我编辑不了怎么解决", ["问题遇到的现象和发生背景", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Assuming Xslt is an option, you can use a modified version of the &lt;a href=\"http://en.wikipedia.org/wiki/Identity_transform\" rel=\"nofollow\"&gt;identity transform&lt;/a&gt; which will project nothing for any matched &lt;code&gt;comment&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=\"1.0\" encoding=\"utf-8\"?&amp;gt;\n&amp;lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&amp;gt;\n  &amp;lt;xsl:output method=\"xml\" indent=\"yes\"/&amp;gt;\n\n  &amp;lt;xsl:template match=\"@* | node()\"&amp;gt;\n    &amp;lt;xsl:copy&amp;gt;\n      &amp;lt;xsl:apply-templates select=\"@* | node()\"/&amp;gt;\n    &amp;lt;/xsl:copy&amp;gt;\n  &amp;lt;/xsl:template&amp;gt;\n\n  &amp;lt;xsl:template match=\"comment()\"/&amp;gt;\n\n&amp;lt;/xsl:stylesheet&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://xsltransform.net/3Nqn5Yo/6\" rel=\"nofollow\"&gt;Fiddle here&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何从大型XML文件中删除所有注释？  [关闭]", ["\n\n", "How can I remove all comments from a large XML file? ", "\n\n", "I have a large file XML and I want to thin it and I want to remove all the comments. The file has a size of over 200 mb and it takes a lot to parse the file and query something.", "\n\n", "Code for parse is :", "\n\n", "<?php\n\n$dom    = new DOMDocument();\n$xpath  = new DOMXPath($dom);\n$reader = new XMLReader();\n$reader->open('http://www.bookingassist.ro/test/HotelsPro.xml');\n\nwhile ($reader->read()) {\n    if ($reader->nodeType == XMLReader::ELEMENT && $reader->name == 'Hotel') {\n        $node = $dom->importNode($reader->expand(), true);\n        $dom->appendChild($node);\n        $result = $xpath->evaluate('string(self::Hotel[HotelCode = \"'.$hotelCodes[3].'\"]/HotelImages/ImageURL[1])', $node);\n        $dom->removeChild($node);\n        if ($result) {\n            echo $result;\n\n        }\n    }\n}\n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Turned out I was right, the problem was the variable &lt;code&gt;$file&lt;/code&gt; which wasn't correct as the script wasn't able to define it as object&lt;/p&gt;\n\n&lt;p&gt;I digged around and found the right variable, holding the full path to the file in the file hosting script which turned out to be:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$file-&amp;gt;getFullFilePath()&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在通过php下载之前添加注释到生成的zip文件", ["\n\n", "I hope you can help me on this matter. I tested a very simple script to add a comment to a zip file before downloading it, and it worked fine, so now I decided to try implementing it into a file hosting script, but I'm being unable to find a way to edit the generated file.", "\n\n", "At line 59 of this file: ", "https://pastebin.com/i3iBmW8s", " (which is the file which generates the download link for my file) you can see my edit, which I will also post below:", "\n\n", "$ipaddress = '';\nif (getenv('HTTP_CLIENT_IP'))\n    $ipaddress = getenv('HTTP_CLIENT_IP');\nelse if(getenv('HTTP_X_FORWARDED_FOR'))\n    $ipaddress = getenv('HTTP_X_FORWARDED_FOR');\nelse if(getenv('HTTP_X_FORWARDED'))\n    $ipaddress = getenv('HTTP_X_FORWARDED');\nelse if(getenv('HTTP_FORWARDED_FOR'))\n    $ipaddress = getenv('HTTP_FORWARDED_FOR');\nelse if(getenv('HTTP_FORWARDED'))\n    $ipaddress = getenv('HTTP_FORWARDED');\nelse if(getenv('REMOTE_ADDR'))\n    $ipaddress = getenv('REMOTE_ADDR');\nelse\n    $ipaddress = 'UNKNOWN';\n\n# Create a new Archive\n$zip = new ZipArchive;\n# Create the file to archive to\n$res = $zip->open($file, ZipArchive::CREATE);\n# If create works\nif ($res === TRUE) {\n    # Create the comment here\n    $zip->setArchiveComment(base64_encode($ipaddress));\n    $zip->close();\n}\n", "\n\n", "Basically it works to append the IP of who downloads it into the zip file, as comment.", "\n\n", "As standalone script it works fine, but I'm having a hard time implementing it into the file hosting script, as when the file gets downloaded, it's unmodified.", "\n\n", "I suppose the problem is with the variable $file which might not be correct, because as stand-alone script it's enough to specify in there the name of the archive in order to append the comment and then download it, while with the file hosting script, if I assign the variable holding the file name (which is $file->originalFilename), still nothing happens.", "\n\n", "Hope you can assist me into properly implementing my script, thank you.", "\n    "]], "Tag": "程序设计"}
{"Answer": "服务器端客户端搞不清楚。。客户端就算你增加runat=server也无法变为服务器端控件\r\n\r\nasp:开头的控件由framework编译，要符合服务器端标签规范，你的注释是客户端的，你要注释就用服务端注释\r\n\r\n\r\n\r\n```\r\n &lt;%-- commented out code or content --%&gt; \r\n```", "Konwledge_Point": "注释", "Question": ["注释掉的代码也会产生问题？", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use &lt;strong&gt;nested&lt;/strong&gt; eager loading.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$comments = Post::with('comments.user')-&amp;gt;where('id', $id)-&amp;gt;first()-&amp;gt;comments;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That should retrieve all comments with its &lt;code&gt;user&lt;/code&gt; relationship.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($comments as $comment)\n{\n    echo $comment-&amp;gt;user-&amp;gt;id;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or I believe you can also do this. (&lt;strong&gt;Lazy Eager&lt;/strong&gt; loading)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$post = Post::find($id);\n$post-&amp;gt;load('comments.user');\n$comments = $post-&amp;gt;comments;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Laravel Vue将用户详细信息添加到注释数组", ["\n\n", "I'm working on laravel comment system with vue js, and facing a problem when doing axios request. I need to receive an array as a response with all the comments for the post, but I would like to add user data to this array to get username and rest of users details to display.", "\n\n", "public function show($id)\n   {\n      $comments = Post::find($id)->comments;\n      return $comments;\n   }\n", "\n\n\n\n", "Current:", "\n\n", "\n  ", "[{\"id\":35,\"user_id\":1,\"post_id\":4,\"parent_id\":0,\"commenttext\":\"test\",\"created_at\":null,\"updated_at\":null}]", "\n", "\n\n", "What I would need is:", "\n\n", "\n  ", "[{\"id\":35,\"user_id\":1,\"post_id\":4,\"parent_id\":0,\"commenttext\":\"test\",\"created_at\":null,\"updated_at\":null,\n  \"user\":[", "User Data Here", "]}]", "\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Change &lt;code&gt;.*&lt;/code&gt; to &lt;code&gt;.*?&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo preg_replace('#/\\*.*?\\*/#s', '', $original);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will only remove &lt;code&gt;/*&lt;/code&gt; up to the closest &lt;code&gt;*/&lt;/code&gt; rather than the furthest.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["从css文件中删除注释", ["\n\n", "I have to read a css file and remove its commentaries, so i've decided to use the ", "preg_replace", " function from php:", "\n\n", "$original = '\n/*\nfoo\n*/\n.test, input[type=\"text\"]{ color: blue; }\n\n/* bar */\na:hover{\ntext-decoration: underline;\ncolor: red;\nbackground: #FFF;\n}';\n\necho preg_replace('/\\/\\*.*\\*\\//s', '', $original);\n", "\n\n", "the problem is that its losing the line  ", ".test, input[type=\"text\"]{ color: blue; }", "\n    "]], "Tag": "程序设计"}
{"Answer": "28行也要注释。\r\n\r\n另外，不用C币悬赏也能提问哦", "Konwledge_Point": "注释", "Question": ["注释掉后出问题了，怎么回事？", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can call the &lt;code&gt;Example*&lt;/code&gt; functions from a regular &lt;code&gt;Test*&lt;/code&gt; function.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func ExampleOutput() {\n    fmt.Println(\"HEELLO\")\n}\n\nfunc TestExampleOutput(t *testing.T) {\n    if !testing.Verbose() {\n        return\n    }\n    ExampleOutput()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This body of this example would show up under &lt;code&gt;Output&lt;/code&gt; in the docs, and if you don't want the output every time, it's limited to only calling it with the &lt;code&gt;-v&lt;/code&gt; flag.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Specifically, to run only the example you're interested in you can either:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;go test path/to/pkg -run TestExampleOutput -v\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or to compile once and run multiple times:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;go test path/to/pkg -c\n./pkg.test -test.run TestExampleOutput -test.v\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何运行没有输出注释的Go示例？", ["\n\n", "Testable Go examples look awesome. ", "\n\n", "func ExampleReverse() {\n    fmt.Println(stringutil.Reverse(\"hello\"))\n    // Output: olleh\n}\n", "\n\n", "The above, for example, is equivalent to a unit test that asserts:", "\n\n", "stringutil.Reverse(\"hello\") == \"olleh\"\n", "\n\n", "According to ", "the golang blog", ", we can write examples that don't have an output comment, but then the ", "go test", " and ", "go test -run ExampleReverse", " commands only ", "compile", " the example and don't run it:", "\n\n", "\n  ", "If we remove the output comment entirely then the example function is compiled but not executed. Examples without output comments are useful for demonstrating code that cannot run as unit tests, such as that which accesses the network, while guaranteeing the example at least compiles.", "\n", "\n\n", "The output of such examples, although not testable, could still be useful for the user to produce and read. And the examples themselves - useful to run on their computer.", "\n\n", "So is there a way or a tool that can run example functions in *_test.go files from the terminal?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;All &lt;code&gt;init&lt;/code&gt; functions are called automatically when the program starts. It must be doing some initialization that other code depends on. See &lt;a href=\"https://golang.org/doc/effective_go.html#init\" rel=\"nofollow noreferrer\"&gt;https://golang.org/doc/effective_go.html#init&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释掉未使用的功能时发生运行时错误", ["\n\n", "Here is the code:", "\n\n", "package main\n\nimport (\n    \"database/sql\"\n    \"errors\"\n    \"fmt\"\n    _ \"github.com/lib/pq\"\n)\n\ntype Post struct {\n    Id       int\n    Content  string\n    Author   string\n    Comments []Comment\n}\n\ntype Comment struct {\n    Id      int\n    Content string\n    Author  string\n    Post    *Post\n}\n\nvar Db *sql.DB\n\n// connect to the Db\nfunc init() {\n    var err error\n    //Db, err = sql.Open(\"postgres\", \"user=gwp dbname=gwp password=gwp sslmode=disable\")\n    Db, err = sql.Open(\"postgres\", \"user=gwp dbname=gwp sslmode=disable\")\n    if err != nil {\n        panic(err)\n    }\n}\n\nfunc (comment *Comment) Create() (err error) {\n    if comment.Post == nil {\n        err = errors.New(\"You need to specify the post that the comment belongs to.\")\n        return\n    }\n    err = Db.QueryRow(\"insert into comments (content, author, post_id) values ($1, $2, $3) returning id\", comment.Content, comment.Author, comment.Post.Id).Scan(&comment.Id)\n    return\n}\n\n// Get a single post\nfunc GetPost(id int) (post Post, err error) {\n    post = Post{}\n    post.Comments = []Comment{}\n    err = Db.QueryRow(\"select id, content, author from posts where id = $1\", id).Scan(&post.Id, &post.Content, &post.Author)\n\n    rows, err := Db.Query(\"select id, content, author from comments where post_id = $1\", id)\n    if err != nil {\n        return\n    }\n    for rows.Next() {\n        comment := Comment{Post: &post}\n        err = rows.Scan(&comment.Id, &comment.Content, &comment.Author)\n        if err != nil {\n            return\n        }\n        post.Comments = append(post.Comments, comment)\n    }\n    rows.Close()\n    return\n}\n\n// Create a new post\nfunc (post *Post) Create() (err error) {\n    err = Db.QueryRow(\"insert into posts (content, author) values ($1, $2) returning id\", post.Content, post.Author).Scan(&post.Id)\n    return\n}\n\nfunc main() {\n    post := Post{Content: \"Hello World!\", Author: \"Sau Sheong\"}\n    post.Create()\n\n    // Add a comment\n    comment := Comment{Content: \"Good post!\", Author: \"Joe\", Post: &post}\n    comment.Create()\n    readPost, _ := GetPost(post.Id)\n\n    fmt.Println(readPost)                  // {1 Hello World! Sau Sheong [{1 Good post! Joe 0xc20802a1c0}]}\n    fmt.Println(readPost.Comments)         // [{1 Good post! Joe 0xc20802a1c0}]\n    fmt.Println(readPost.Comments[0].Post) // &{1 Hello World! Sau Sheong [{1 Good post! Joe 0xc20802a1c0}]}\n}\n", "\n\n", "The ", "init", " function is not used anywhere, but if I comment it out, the program crashes with the following error:", "\n\n", "/usr/local/Cellar/go/1.7.4_2/libexec/bin/go run /Users/kaiyin/golang/src/github.com/sausheong/gwp/Chapter_6_Storing_Data/sql_store2/store.go\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5fa9a]\n\ngoroutine 1 [running]:\npanic(0x1d62c0, 0xc42000c0e0)\n    /usr/local/Cellar/go/1.7.4_2/libexec/src/runtime/panic.go:500 +0x1a1\ndatabase/sql.(*DB).conn(0x0, 0x1, 0x22, 0x1c, 0x0)\n    /usr/local/Cellar/go/1.7.4_2/libexec/src/database/sql/sql.go:781 +0x3a\ndatabase/sql.(*DB).query(0x0, 0x216def, 0x40, 0xc42004fd80, 0x2, 0x2, 0x1, 0x10, 0xc42000cba0, 0x0)\n    /usr/local/Cellar/go/1.7.4_2/libexec/src/database/sql/sql.go:1074 +0x3b\ndatabase/sql.(*DB).Query(0x0, 0x216def, 0x40, 0xc42004fd80, 0x2, 0x2, 0x1, 0xc42000cba0, 0xc42004fd28)\n    /usr/local/Cellar/go/1.7.4_2/libexec/src/database/sql/sql.go:1062 +0x90\ndatabase/sql.(*DB).QueryRow(0x0, 0x216def, 0x40, 0xc42004fd80, 0x2, 0x2, 0x11200b7b18)\n    /usr/local/Cellar/go/1.7.4_2/libexec/src/database/sql/sql.go:1143 +0x70\nmain.(*Post).Create(0xc420018380, 0xc420018380, 0xc42004fe20)\n    /Users/kaiyin/golang/src/github.com/sausheong/gwp/Chapter_6_Storing_Data/sql_store2/store.go:69 +0xfe\nmain.main()\n    /Users/kaiyin/golang/src/github.com/sausheong/gwp/Chapter_6_Storing_Data/sql_store2/store.go:75 +0xd7\nexit status 2\n\nProcess finished with exit code 1\n", "\n\n", "Not very helpful for debugging. ", "\n\n", "Any idea what's going on here? Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'm sorry, there's currently no way to document associative arrays or &lt;code&gt;stdClass&lt;/code&gt; objects in phpDocumentor or custom annotations formats understood by NetBeans.&lt;/p&gt;\n\n&lt;p&gt;From a design perspective, perhaps it could make sense to use proper classes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Bar\n{\n    /**\n     * @var string\n     */\n    public $test;\n}\n\nclass Foo\n{\n    public function bar(): Bar\n    {\n        $obj = new Bar;\n        $obj-&amp;gt;test = 'test';\n        return $obj;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you need no logic at all, the classes can be empty:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * @property string $test\n */\nclass Bar\n{\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Otherwise, you can always trick the IDE with a stub file that defines a fake class but is never actually executed and then pretend that your variable belongs to that class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$foo = new Foo;\n/* @var $bar Bar *//** @var Bar $bar */\n$bar = $foo-&amp;gt;bar();\n$bar-&amp;gt;…\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;… where &lt;code&gt;/* @var $bar Bar */&lt;/code&gt; is for NetBeans 8 and earlier and &lt;code&gt;/** @var Bar $bar */&lt;/code&gt; for NetBeans 10 (and many other IDEs).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释在stdClass中创建的字段？", ["\n\n", "class Foo\n{\n    public function bar(): \\stdClass\n    {\n        $obj = new \\stdClass;\n        $obj->test = 'test';\n        return $obj;\n    }\n}\n", "\n\n", "When doing ", "$foo = new Foo;", ", is it possible to annotate Phpdoc so that the IDE can autocomplete to ", "$foo->bar()->test", "?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Runnable&lt;/span&gt; {\n    \n    &amp;#64;Override\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;run&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            Thread.sleep(&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;);\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;邮件发送模拟程序&amp;#xff0c;执行完毕&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (Exception e) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;线程中断异常&amp;#34;&lt;/span&gt;);\n            e.printStackTrace();\n        }\n        \n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;EmilThreadRun&lt;/span&gt; {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;registerUser&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;用户注册成功&amp;#34;&lt;/span&gt;);\n        }\n    }\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        A a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; A();\n        EmilThreadRun emilThreadRun &amp;#61; a.&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;EmilThreadRun&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;;\n        Thread thread &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Thread(a);\n        emilThreadRun.registerUser();\n        thread.start();\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;用户电子邮箱注册运行成功&amp;#34;&lt;/span&gt;);\n    }\n    \n    \n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/807423275156184.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求注释里面的问题？为什么会报错？详解必采纳", ["为什么在这里会报错？？哪里有问题吗？线程到底该怎么写啊？写线程得分开类写吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码补充如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;IntPoint&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x; &lt;span class=\"hljs-comment\"&gt;// x 坐标&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y; &lt;span class=\"hljs-comment\"&gt;// y 坐标&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;IntPoint&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y): &lt;span class=\"hljs-built_in\"&gt;x&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(y) {}\n};\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Rectangle&lt;/span&gt; {\n    IntPoint corner; &lt;span class=\"hljs-comment\"&gt;// 长方形左-下角点&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; width; &lt;span class=\"hljs-comment\"&gt;// 长方形的宽 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; height; &lt;span class=\"hljs-comment\"&gt;// 长方形的高 &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Rectangle&lt;/span&gt;(IntPoint pt, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; w, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; h):\n      &lt;span class=\"hljs-built_in\"&gt;corner&lt;/span&gt;(pt),\n          &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt;((w &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) ? &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; : w), &lt;span class=\"hljs-built_in\"&gt;height&lt;/span&gt;((h &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) ? &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; : h) {}\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;perimeter&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*width &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*height;\n      }\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; width * height;\n      }\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;get_width&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; width;\n      }\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;get_height&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; height;\n      }\n      &lt;span class=\"hljs-comment\"&gt;// 如果当前实例矩形和r重叠&amp;#xff0c;则为true否则为false&lt;/span&gt;\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;intersect&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rectangle r)&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-comment\"&gt;// 编写代码&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(r.x &amp;lt;&amp;#61; corner.x &amp;#43; width &amp;amp;&amp;amp; r.y &amp;lt;&amp;#61; corner.y &amp;#43; height)\n              &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n      }\n      &lt;span class=\"hljs-comment\"&gt;// 返回对角线的长度( int型)&lt;/span&gt;\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;diagonal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-comment\"&gt;// 编写代码&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)(width*width &amp;#43; height*height));\n      }\n      &lt;span class=\"hljs-comment\"&gt;// 返回矩形中心点的坐标为IntPoint型&lt;/span&gt;\n      &lt;span class=\"hljs-function\"&gt;IntPoint &lt;span class=\"hljs-title\"&gt;center&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-comment\"&gt;// 编写代码&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;IntPoint&lt;/span&gt;(corner.x &amp;#43; width/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,corner.y &amp;#43; height/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n      }\n      &lt;span class=\"hljs-comment\"&gt;// 当前实例四角形的内部&amp;#xff08;包括边界&amp;#xff09;有pt的话就是true&amp;#xff0c; 否则就是false&lt;/span&gt;\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;is_inside&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(IntPoint pt)&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=\"hljs-comment\"&gt;// 编写代码 &lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (corner.x &amp;lt;&amp;#61; pt.x &amp;amp;&amp;amp; corner.y &amp;lt;&amp;#61; pt.y &amp;amp;&amp;amp; pt.x &amp;lt;&amp;#61; corner.x&amp;#43;width &amp;amp;&amp;amp; pt.y &amp;lt;&amp;#61;corner.y&amp;#43;height  )\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n          &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n      }\n};\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["完成代码并制定确认动作的main函数，以便像注释的内容一样动作", [" 在下面的代码中，IntPoint是表示二维平面上的点的类，x、y是保存平面上的坐标的成员，Rectangle是未旋转的长方形表现类，左-角为corner，宽度和高度分别为width和height。", "\n", "#", "include", " ", "<iostream>", "\n", "class", " ", "IntPoint", " {\n", "public", ":\n    ", "int", " x; ", "// x 坐标", "\n    ", "int", " y; ", "// y 坐标", "\n    ", "IntPoint", "(", "int", " x, ", "int", " y): ", "x", "(x), ", "y", "(y) {}\n};\n", "class", " ", "Rectangle", " {\n    IntPoint corner; ", "// 长方形左-下角点", "\n    ", "int", " width; ", "// 长方形的宽 ", "\n    ", "int", " height; ", "// 长方形的高 ", "\n", "public", ":\n    ", "Rectangle", "(IntPoint pt, ", "int", " w, ", "int", " h):\n        ", "corner", "(pt),\n        ", "width", "((w < ", "0", ") ? ", "0", " : w), ", "height", "((h < ", "0", ") ? ", "0", " : h) {}\n    ", "int", " ", "perimeter", "()", " ", "{\n        ", "return", " ", "2", "*width + ", "2", "*height;\n    }\n    ", "int", " ", "area", "()", " ", "{\n        ", "return", " width * height;\n    }\n    ", "int", " ", "get_width", "()", " ", "{\n        ", "return", " width;\n    }\n    ", "int", " ", "get_height", "()", " ", "{\n        ", "return", " height;\n    }\n    ", "// 如果当前实例矩形和r重叠，则为true否则为false", "\n    ", "bool", " ", "intersect", "(Rectangle r)", " ", "{\n        ", "// 编写代码", "\n    }\n    ", "// 返回对角线的长度( int型)", "\n    ", "int", " ", "diagonal", "()", " ", "{\n        ", "// 编写代码", "\n    }\n    ", "// 返回矩形中心点的坐标为IntPoint型", "\n    ", "IntPoint ", "center", "()", " ", "{\n        ", "// 编写代码", "\n    }\n", "// 当前实例四角形的内部（包括边界）有pt的话就是true， 否则就是false", "\n    ", "bool", " ", "is_inside", "(IntPoint pt)", " ", "{\n        ", "// 编写代码 ", "\n    }\n};\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use the &lt;a href=\"http://www.phpdoc.org/docs/latest/references/phpdoc/tags/property.html\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;@property&lt;/code&gt;&lt;/a&gt;* annotation on the class.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * @property string $bar\n */\nclass Foo {}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img src=\"https://i.stack.imgur.com/NWdvS.png\" alt=\"Screenshot of PHPStorm's autocomplete box demonstrating.\"&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;sub&gt;&lt;em&gt;*or &lt;a href=\"http://www.phpdoc.org/docs/latest/references/phpdoc/tags/property-read.html\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;@property-read&lt;/code&gt;&lt;/a&gt; or &lt;a href=\"http://www.phpdoc.org/docs/latest/references/phpdoc/tags/property-write.html\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;@property-write&lt;/code&gt;&lt;/a&gt; as appropriate.&lt;/em&gt;&lt;/sub&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释不存在的类成员（虚拟属性）", ["\n\n", "Is there a way to have an annotation for a class member that isn't declared explicitly? Like", "\n\n", "class Foo\n{\n    /** @var string $bar */\n    // public $bar; // <--- without this line\n\n    ...other stuff...\n}\n", "\n\n", "Background: I use ", "__get", " to provide virtual properties for my class and want these properties to appear in the phpstorm/idea autocomplete box.", "\n    "]], "Tag": "程序设计"}
{"Answer": "VC++IDE缓存了，没那么快刷新的。你可以整个项目重建，应该就提示错了。", "Konwledge_Point": "注释", "Question": ["为什么将头文件注释掉了之后还可以出现这个结果呢？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.cnblogs.com/iderek/p/5960208.html\" id=\"textarea_1629297132325_1629297223412_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;Python练习题 013&amp;#xff1a;求解a&amp;#43;aa&amp;#43;aaa…… - 木木卡卡西 - 博客园&lt;/span&gt;\n  &lt;span class=\"md_link_desc\" style=\"\"&gt;【Python练习题 013】 求s&amp;#61;a&amp;#43;aa&amp;#43;aaa&amp;#43;aaaa&amp;#43;aa...a的值&amp;#xff0c;其中a是一个数字。例如2&amp;#43;22&amp;#43;222&amp;#43;2222&amp;#43;22222(此时共有5个数相加)&amp;#xff0c;几个数相加由键盘输入。&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://common.cnblogs.com/favicon.svg\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/iderek/p/5960208.html&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["越简单越好，最好注释一下", [".编写一个程序，计算a + aa + aaa + aaaa的值，给定的数字作为a的值。假设为程序提供了以下输", "入：9 然后，输出应该是： 11106"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I doubt the problem is this easy but maybe this will help:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (strlen($stmt)&amp;gt;3 &amp;amp;&amp;amp; (substr(ltrim($stmt),0,2)!='/*') || substr(ltrim($stmt),0,3)!='-- ')){\necho $stmt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["忽略 - 在php中读取sql文件时，php中的sql注释", ["\n\n", "I have a sql file like:", "\n\n", "CREATE TABLE IF NOT EXISTS `sessionT` (\n  `id` int(9) NOT NULL default '0',\n  `time` varchar(14) NOT NULL default '',\n  `id_session` varchar(200) NOT NULL default '',\n  `token` varchar(200) NOT NULL default '',\n  PRIMARY KEY  (`id_session`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n", "\n\n", "so I want to echo all sql statements, however if the sql file has a ", "--", " comment it is not working", "\n\n", "$f = fopen($SQL_FILE,\"r+\");\n$sql = fread($f, filesize($SQL_FILE));\n$sqlArray = explode(';',$sql);\nforeach ($sqlArray as $stmt) {\n  //add logic to ignire -- comments,...\n  if (strlen($stmt)>3 && substr(ltrim($stmt),0,2)!='/*') {\n    echo $stmt;\n  }\n}\n", "\n\n", "how to ignore comments in a file like:", "\n\n", "-- --------------------------------------------------------\n-- comment, relation etc\n-- Estructure .\nCREATE TABLE IF NOT EXISTS `sessionT` (\n  `id` int(9) NOT NULL default '0',\n  `time` varchar(14) NOT NULL default '',\n  `id_session` varchar(200) NOT NULL default '',\n  `token` varchar(200) NOT NULL default '',\n  PRIMARY KEY  (`id_session`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I downdgraded back to XAMPP 1.7.3, no problems so far, php tags are treated normally again...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["php标记被忽略并解析为注释", ["\n\n", "I have a very strange problem.\nI installed a new XAMPP distribution yesterday and it behaves very strangely.", "\n\n", "I have two files, page.php and include.php.", "\n\n", "\"page.php\" has the following code: ", "\n\n", "<? include('include.php'); ?>\n", "\n\n", "The file \"include.php\" has the following line: ", "\n\n", "<? echo \"it works\"; ?>\n", "\n\n", "Now: If I open start.php in my web browser, it shows me an empty page, and the source code reads:", "\n\n", "<html>\n<head>\n</head>\n<body>\n<!--? echo \"it works\"; -->\n</body>\n</html> \n", "\n\n", "As you see, the php code on the start.php is interpreted correctly, but the php-code on include.php is parsed as a comment?!?!", "\n\n", "I have a XAMPP server on Mac OS 10.9.4. And OF COURSE I have ", "\n\n", "short_open_tag = On\n", "\n\n", "Thanks for your help!\nMatt", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;From the &lt;a href=\"https://laravel.com/docs/master/eloquent-relationships#querying-relations\" rel=\"nofollow\"&gt;documentation&lt;/a&gt; on querying relations&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$article = Article::find(1);\n\necho $article-&amp;gt;name;\n\nforeach ($article-&amp;gt;comments as $comment) {\n    //\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何在Laravel 5 Eloquent中以文章标题显示foreach中的所有注释", ["\n\n", "I am following a tutorial Articles and comments.\nBelow works fine, but how do i get all comments with the articlename in a foreach?", "\n\n", "Model: Article", "\n\n", "namespace App\\Http\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Article extends Model\n{  \npublic function comments() {\n    return $this->hasMany('App\\Http\\Models\\Comment');\n}\nprotected $fillable = array('title','body');\n}\n", "\n\n", "Model: Comments", "\n\n", "namespace App\\Http\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Comment extends Model\n{  \npublic function article() {\n    return $this->belongs('Article');\n}\nprotected $fillable = array('body','article_id');\n\n\n}\n", "\n\n", "Example dump in ArticleController:", "\n\n", "$items = Article::find(1)->comments()->get();\nforeach ($items as $item) {\n    print_r($item->body);\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is a known issue in PhpStorm 7.x.&lt;/p&gt;\n\n&lt;p&gt;If you use the fully qualified name chaining and type hinting &lt;strong&gt;will&lt;/strong&gt; work.&lt;/p&gt;\n\n&lt;p&gt;Reference: &lt;a href=\"http://youtrack.jetbrains.com/issue/WI-17404\" rel=\"nofollow\"&gt;http://youtrack.jetbrains.com/issue/WI-17404&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PhpStorm 7 @method bug或者我错误地使用了phpDocumentor注释？", ["\n\n", "I don't know if this is my bad (wrong phpDocumentor annotations) or it's a bug. Anyone experiencing this issue?", "\n\n", "namespace Bar\\Baz;\n\n/**\n * @method Foo baz(boolean $baz)\n */\nclass Foo\n{\n\n}\n", "\n\n", "As you can see there is no code completion for chaining (i.e. ", "$f->baz()->baz()", ") and ", "boolean", " type is namespaced: ", "\n\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you are in the global namespace, and the classes are in some other namespace, then even if the files are &lt;code&gt;require&lt;/code&gt;d by autoloader or manually, you still need to use the namespace when declaring the class.  That is the point of namespacing, to prevent class name collisions.&lt;/p&gt;\n\n&lt;p&gt;It looks like you may be mixing &lt;a href=\"http://www.php-fig.org/psr/psr-0/\" rel=\"nofollow\"&gt;PSR-0&lt;/a&gt; and &lt;a href=\"http://www.php-fig.org/psr/psr-4/\" rel=\"nofollow\"&gt;PSR-4&lt;/a&gt; since you have namespaced classes but they aren't pathed properly &lt;code&gt;\\&amp;lt;NamespaceName&amp;gt;(\\&amp;lt;SubNamespaceNames&amp;gt;)*\\&amp;lt;ClassName&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["除非包含或注释掉namescape，否则无法加载PHP类", ["\n\n", "After searching through the site, I'm at a loss as to why I'm getting a fatal error about my class not being found unless I either instantiate the class with the namescape prefixing it, or comment out the namescape in the class file. I'm using PSR-0 to try and resolve this issue with no luck, along with ", "this thread here", ", which was the closest to my issue.", "\n\n", "Autoloader code:", "\n\n", "    function autoload($className)\n{\n    $className = ltrim($className, '\\\\');\n    $fileName  = '';\n    $namespace = '';\n    if ($lastNsPos = strrpos($className, '\\\\')) {\n        $namespace = substr($className, 0, $lastNsPos);\n        $className = substr($className, $lastNsPos + 1);\n        $fileName  = str_replace('\\\\', DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;\n    }\n    $fileName .= str_replace('_', DIRECTORY_SEPARATOR, $className) . '.php';\n\n    require $fileName;\n}\n\nspl_autoload_register('autoload');\n", "\n\n", "Path for all three files (Autoloader.php, Class.php, index.php) are all on the same directory level. No subdirectories or anything like that.", "\n\n", "Autoloader code is implemented at the beginning of index.php with a require_once(\"Autoloader.php\");", "\n\n", "Classes are called at $foo = new classFoo();", "\n\n", "tl;dr version:", "\n\n", "\n", "Commenting out namescape declaration in class being called? Works\nfine. ", "\n", "Instantiating class using namescape/class formatting? Works\nfine. ", "\n", "Otherwise? Fatal error: Class not found (even though it's in\nthe same directory.", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为后面的\\会被认为换行符&amp;#xff0c;把下一行也注释了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["c＋＋为什么用了\\\\下一行会被认为注释", ["就像图片里这样"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Just add a comment above it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Agent is ...\ntype Agent struct {\n   name string\n   categoryId int\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This comment is because your &lt;code&gt;Agent&lt;/code&gt; type is exported, even if its attributes are not. To not export your type, define it in lowercase like such:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type agent struct {\n   name string\n   categoryId int\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["导出的类型代理应具有注释或未导出的golang VSCode", ["\n\n", "I tried this code in golang", "\n\n", "type Agent struct {\n       name string //  Not exported\n       categoryId int //  Not exported\n}\n", "\n\n", "Then I got this", "\n\n", "exported type Agent should have comment or be unexported\n", "\n\n", "The warning is kind of annoying.", "\n\n", "How to get rid of it? \nwhat comment should I put? \nIs there any default comment template for this?", "\n\n", "It asks me to put a comment but it does not offer me to add one by default.", "\n    "]], "Tag": "程序设计"}
{"Answer": "不管你用什么算法（包括遗传算法），你要做的首先是有一个等式，比如\r\naw1+bw2+cw3+...=h\r\n这里的abc...就是你的a-g，h就是你的h\r\n而w1 w2 w3都是权重，也就是说你要优化的未知量\r\n然后你的算法的目的就是，把所有的样本（也就是你下面的3行）全部放入上面的公式，找到一组w1 w2 w3...，让它算出来的h，和你实际的h，误差最小。\r\n这样就算完成了。\r\n于是你再有数据，你就可以套入公式，算出h，并且h会很接近实际的值。\r\n当然，aw1+bw2+cw3+...=h，这个公式并不好，你一看就知道，它们都是一些经过坐标圆点的直线，为了增加拟和度，你可以加入非线性函数，以及偏置\r\n比如sigmoid(aw1+b1)+sigmoid(bw2+b2)+sigmoid(cw3+b3)+...=h\r\n这个就不展开了。\r\n\r\n具体来说遗传算法，它的作用在于我说的优化求这些参数的近似值这个步骤上。也就是光有公式还不行，因为w1 w2 w3...以至于下面那个表达式的b1 b2 b3... 这些未知数的取值是多少，才能让误差小，我们并不知道。\r\n遗传算法就是一种可以比较有效地寻找这些近似值的办法。\r\n你可以把这些未知数变成序列 w1 w2 w3 ... b1 b2 b3 ...，这就是dna\r\n然后你根据这些未知数，去计算一套h，和真实的h比较，计算误差。\r\n你的方法就是不断对序列杂交、变化，丢弃误差大的序列，保留误差小的，这就是dna的进化。\r\n最后就求出了这些未知数，计算完成。", "Konwledge_Point": "注释", "Question": ["如何通俗易懂地解释遗传程序？最好能用代码加注释说明解释。", ["比如我希望通过以下数据中的abcsdfg的值得到h值。请结合代码说明，最好是用python。", "\n\n", "a b c d e f g h", "\n10 69 1 9 0.9 478.89 431 28.8", "\n28 41 16 11 0.85 490.59 417 7.5", "\n7 12 13 8 0.95 220 209 4.1", "\n\n", "不看题直接甩链接不采纳。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is probably the safest way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$text = 'This is some text /*Comment 1 */ . Some more text{ This is to let you know that /* this is a comment*/. A comment /*this one is */ can be anything }. So the next thing { This is to let you know that /*  this is a comment*/. A comment /*this one is */ can be anything } is another topic. /*Final comment*/';\n\n$text = preg_replace_callback('#\\{[^}]+\\}#msi', 'remove_comments', $text);\n\nvar_dump($text);\n\nfunction remove_comments($text) {\n    return preg_replace('#/\\*.*?\\*/#msi', '', $text[0]);\n}\n\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It searches for &lt;code&gt;{}&lt;/code&gt; then removes the comments inside them. This will remove multiple comments  in a &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["preg_replace：仅在大括号内删除注释", ["\n\n", "I have this:", "\n\n", "$text = 'This is some text /*Comment 1 */ . Some more text{ This is to let you know that /* this is a comment*/. A comment /*this one is */ can be anything }. So the next thing { This is to let you know that /*  this is a comment*/. A comment /*this one is */ can be anything } is another topic. /*Final comment*/';\n", "\n\n", "Need this:", "\n\n", "$text = 'This is some text /*Comment 1 */ . Some more text{ This is to let you know that . A comment  can be anything }. So the next thing { This is to let you know that . A comment  can be anything } is another topic. /*Final comment*/';\n", "\n\n", "Tried this:", "\n\n", "$text = preg_replace(\"/\\/\\*.*?\\*\\//\", \"\", $text);\n", "\n\n", "The problem is that what I have tried, is removing all the comments. I just want the comments appearing within ", "{ }", " to be removed. How to do this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Thats the problem of the most plugins.&lt;/p&gt;\n\n&lt;p&gt;You only can check if the plugin provided settings or filter/hooks for that. Check out the &lt;code&gt;readme.txt&lt;/code&gt; or check out the Plugin FAQ on wordpress.org&lt;/p&gt;\n\n&lt;p&gt;If you cant solve the problem, you must use an another plugin.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;edit&lt;/strong&gt; Check out if your plugin hooks &lt;code&gt;the_content&lt;/code&gt;, you can try to use &lt;code&gt;print get_the_content()&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["隐藏自定义类型中的插件和注释", ["\n\n", "I created a custom post type in Wordpress as follow:", "\n\n", "function magazine_custom_type() {\n\n    $labels = array(\n        'name'                => _x( 'Magazines Types', 'Post Type General Name', 'text_domain' ),\n        'singular_name'       => _x( 'Magazine Type', 'Post Type Singular Name', 'text_domain' ),\n        'menu_name'           => __( 'Revista', 'text_domain' ),\n        'parent_item_colon'   => __( 'Revista padre:', 'text_domain' ),\n        'all_items'           => __( 'Todos las revistas', 'text_domain' ),\n        'view_item'           => __( 'Ver revista', 'text_domain' ),\n        'add_new_item'        => __( 'Agregar revista', 'text_domain' ),\n        'add_new'             => __( 'Agregar nuevo', 'text_domain' ),\n        'edit_item'           => __( 'Modificar', 'text_domain' ),\n        'update_item'         => __( 'Actualizar', 'text_domain' ),\n        'search_items'        => __( 'Buscar', 'text_domain' ),\n        'not_found'           => __( 'No encontrado', 'text_domain' ),\n        'not_found_in_trash'  => __( 'No encontrado en la papelera', 'text_domain' ),\n    );\n    $args = array(\n        'label'               => __( 'magazine_post_type', 'text_domain' ),\n        'description'         => __( 'Magazine Post Type', 'text_domain' ),\n        'labels'              => $labels,\n        'supports'            => array( 'title', 'editor', 'excerpt', 'thumbnail', 'revisions', ),\n        'taxonomies'          => array( 'post_tag' ),\n        'hierarchical'        => false,\n        'public'              => true,\n        'show_ui'             => true,\n        'show_in_menu'        => true,\n        'show_in_nav_menus'   => true,\n        'show_in_admin_bar'   => true,\n        'menu_position'       => 5,\n        'menu_icon'           => 'fa fa-thumb-tack',\n        'can_export'          => true,\n        'has_archive'         => true,\n        'exclude_from_search' => false,\n        'publicly_queryable'  => true,\n        'capability_type'     => 'page',\n    );\n    register_post_type( 'magazine_post_type', $args );\n\n}\n\n// Hook into the 'init' action\nadd_action( 'init', 'magazine_custom_type', 0 );\n", "\n\n", "I also created a ", "single-magazine_custom_type", " that acts as a template for this post type but since it's a post type then some plugins are displayed there and also ", "Facebook Comment", " box which I don't want. Is there any way to avoid this behavior?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The answer to the question &lt;em&gt;Is there &lt;strong&gt;any difference&lt;/strong&gt; between using \"#\" and \"//\" for single-line comments in PHP?&lt;/em&gt; is &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;There is no difference. By looking at the parsing part of PHP source code, &lt;a href=\"https://github.com/php/php-src/blob/ea1ea33bd5d967e9c04046c1af869e4e8b53116e/Zend/zend_language_scanner.l#L2050\" rel=\"noreferrer\"&gt;both \"#\" and \"//\" are handled by the same code&lt;/a&gt; and therefore have the exact same behavior.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["我可以使用哈希符号（＃）在PHP中进行注释吗？", ["\n\n", "I have never, ever, seen a PHP file using hashes (", "#", ") for commenting. But today I realized that I actually can! I'm assuming there's a reason why everybody uses ", "//", " instead though, so here I am.", "\n\n", "Is there any reason, aside from personal preference, to use ", "//", " rather than ", "#", " for comments?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Solution: change the regex into...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@&amp;lt;!--\\[(.*?)\\]--&amp;gt;(.*?)(?=&amp;lt;!--|$)@su\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://codepad.viper-7.com/OOUrzZ\" rel=\"nofollow\"&gt;&lt;strong&gt;Codepad Viper Demo&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Explanation: the original regex almost correctly used &lt;code&gt;.*?&lt;/code&gt; expression to get all the non-comments part. I said 'correctly', because the laziness modifier is indeed required here (otherwise the &lt;code&gt;.*&lt;/code&gt; combo will happily consume the whole string). And I said 'almost', because the modifier is too lazy in this particular case - even an empty string is enough to satisfy it (as &lt;code&gt;''&lt;/code&gt; does match &lt;code&gt;/.*/&lt;/code&gt;). That's why you get those empty strings in the &lt;code&gt;$found&lt;/code&gt; - the victims of laziness taken to the extreme, they were...&lt;/p&gt;\n\n&lt;p&gt;So what we need is to make this part of the regex a bit more 'eager' - persuade it to keep devouring the string until it...&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;either encounters the beginning of the new comment ('\n&lt;/li&gt;&lt;li&gt;or arrives at the end of the string. &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And that's exactly expressed by this lookahead pattern:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(?=&amp;lt;!--|$)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It reads as 'match ONLY at the position that's either followed by a new comment, or is actually the end of the string'. And that's how it whips this lazy &lt;code&gt;.*?&lt;/code&gt; sub-expression into a helpful movement - no longer it's able to stop wherever it alone wants to.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["preg_match_all到下一个注释标签HTML包含。 评论", ["\n\n", "I try to get all text to to the next occurrence of the comment tag and the text between the brackets from the comment tag.\nAt the moment i only get the comment tag text between the brackets but not the content to the next comment its only returns a empty string \"\"\nI'm kind of confused. Thanks!", "\n\n", "header(\"Content-Type:text/plain\");\n$tmp= file_get_contents(\"filter.html\");\npreg_match_all('@<!--\\[(.*?)\\]-->(.*?)@su', $tmp, $found, PREG_SET_ORDER);\nvar_dump($found);\n", "\n\n", "filter.html", "\n\n", "<!--[%TEST%]-->\nTEST\nTEST\n<!--[%DAS%]-->\nDAS TEST\n123456\n<!--[%BKK%]-->\nABCDEFG\nYXZ\n", "\n\n", "The output i get is:", "\n\n", "array(3) {\n  [0]=>\n  array(3) {\n    [0]=>\n    string(15) \"<!--[%TEST%]-->\"\n    [1]=>\n    string(6) \"%TEST%\"\n    [2]=>\n    string(0) \"\"\n  }\n  [1]=>\n  array(3) {\n    [0]=>\n    string(14) \"<!--[%DAS%]-->\"\n    [1]=>\n    string(5) \"%DAS%\"\n    [2]=>\n    string(0) \"\"\n  }\n  [2]=>\n  array(3) {\n    [0]=>\n    string(14) \"<!--[%BKK%]-->\"\n    [1]=>\n    string(5) \"%BKK%\"\n    [2]=>\n    string(0) \"\"\n  }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;父类的私有变量子类是不能访问的。必须通过父类提供的接口函数进行交互&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["用父类的构造器，父类属性私有，下面我注释的为什么不可以那么写，为什么可以super（color，weight）这么写", ["\npublic ", "class", " ", "Circle", " ", "extends", " ", "GeometricObject", " ", "{\n\n    ", "private", " double radius;\n\n    public ", "Circle", "() {\n        \n    }\n\n    public ", "Circle", "(", "String", " color, double weight,double radius) {\n", "//        super.color = color;", "\n", "//      super.weight = weight;", "\n        ", "super", "(color,weight);\n        ", "this", ".radius = radius;\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你命令都搞错了。编译要加上后缀。&lt;br /&gt;是javac work2.java&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["刚学Java，编译时出现仅当显式请求注释处理是才接受类名称‘’", ["编辑到这个的时候，不知道为啥就出现这个了，就不能编译了 ，用的editplus编辑的，提示了一个这个，然后试试以前能编译成功的也都不能了，好迷惑。。。求大神指点", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your RegEx is definitely incorrect. Look what it evaluates to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/[^&amp;lt;!-- test4 Begin ColdFusion Template Html_Head --&amp;gt;](.*)[^&amp;lt;!-- test4 End ColdFusion Template Html_Head --&amp;gt;]/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is wrong; brackets in RegEx denote a character set, not a literal string. Furthermore, adding the caret &lt;code&gt;^&lt;/code&gt; symbol negates the character set, meaning essentially \"none of these characters\".&lt;/p&gt;\n\n&lt;p&gt;If you want to search for a literal, just use those characters:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$tagSearch = '/'. $tagBegin .'(.*)'. $tagEnd .'/';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, I would make the wildcard lazy by adding a &lt;strong&gt;?&lt;/strong&gt; so it doesn't potentially match other tags in your code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$tagSearch = '/'. $tagBegin .'(.*?)'. $tagEnd .'/';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally, it sounds like you're trying to actually modify the file itself. To do that, you'll need to write your modified data back to the file. Changing the data in-memory will not automatically save those changes to the file on disk.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何在两个HTML注释之间获取文件内容并将其替换为另一个文件中的内容？", ["\n\n", "This is my second time (in a long time) ever touching php.  I am trying to replace the file content between two HTML comments with content from another file located in the same directory.", "\n\n", "Right now, I am testing by only replacing the content between two HTML comments with a single line ($newCode).", "\n\n", "When I run the following code, however, it wants to replace the entire file with nothing but that $newCode line on each line:", "\n\n", "#!/bin/php\n<?php\n        // Testing preg_replace() with string\n        $tagBegin = '<!-- test4 Begin ColdFusion Template Html_Head -->';\n        $tagEnd = '<!-- test4 End ColdFusion Template Html_Head -->';\n\n        $tagSearch = '/[^'. $tagBegin .'](.*)[^'. $tagEnd .']/';\n        $strReplace = 'Testing php code';\n\n        $testString = '<!-- test4 Begin ColdFusion Template Html_Head -->I should be gone.<!-- test4 End ColdFusion Template Html_Head -->';\n\n        // Replaces everything between the two tags with the cfReplace code     - THIS WORKS\n        // echo \"Testing string replace...\";\n        // echo preg_replace( $tagSearch, $strRieplace, $testString );\n        // echo ( \"\n\" .$testString );\n\n        // Testing replace on ./testAaron.htm   - THIS DOES NOT WORK\n        echo \"\n Testing file replace...\";\n        $testFile = 'testAaron.htm';\n        $newCode = 'Replaced <html> and all Header info!!!';            // to be replaced with cf code\n        echo preg_replace( $tagSearch, $newCode, file_get_contents( $testFile ) );      \n\n?>\n", "\n\n", "I have a feeling it's the ", "file_get_contents()", " in the last parameter of the ", "preg_replace()", " function, but I don't know why.  ", "\n\n", "When I took out the ", "file_get_contents()", " and placed only the ", "$testFile", " in it, the script ran with only one line and none of the rest of the testAaron.htm code.", "\n\n", "When I opened the testAaron.htm file, there were no changes at all.", "\n\n", "I thought maybe 'echo' was just letting me preview and print what would be changed, so I took that out, but it made no difference.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字段名或者表名写错了&amp;#xff0c;仔细检查核对一下&lt;br /&gt;或者是你的字段包含了Oracle的关键字&amp;#xff0c;把报错的字段用双引号括起来试试&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["ORACLE给所有表字段循环添加字段注释的时候报ORA-00904标识符无效的错误", ["执行上面的脚本报ORA-00904 USER_NAME标识符无效的错误", "\n", "查看TMP_COLS表，并没有USER_NAME这个字段", "不能理解为什么会报这个错，这个USER_NAME是哪来的？请教一下，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;还是用VS Code吧&amp;#xff0c;界面美观&amp;#xff0c;自带主题。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["devC++的一些颜色配置", ["请问devC++的左侧非编码区的颜色可以调成黑色吗？还有编码区的部分调成黑色后，有没有人可以分享一下字符，注释，数字等等这些的色调，饱和度和亮度数值让我调一下我的，我自己调不到喜欢的，但是看像CSDN里的配色又很好看，感谢了(⁎⚈᷀᷁ᴗ⚈᷀᷁⁎)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就算注释了也有问题。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;\tMySharedPtr(const MySharedPtr &amp;amp;rhs)\n\t\t: ptr(rhs.ptr), del(rhs.del) { &amp;#43;&amp;#43;*use; }&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;当调用复制构造函数的时候&amp;#xff0c;use指针未被初始化&amp;#xff0c;然后就使用了。好像应该先use &amp;#61; rhs.use;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["main函数去掉注释就会出现总线错误：bus error，是因为复制function对象的原因吗？", ["\n", "class DebugDelete {\npublic:\n\tDebugDelete(const std::string &msg = \"unique_ptr\", std::ostream &s = std::cerr) : message(msg), os(s) {}\n\ttemplate <typename T> void operator()(T *p) const\n\t\t{ os << \"deleting \" << message << std::endl; delete p; }\nprivate:\n\tstd::ostream &os;\n\tstd::string message;\n};\n\ntemplate <typename T>\nclass MySharedPtr {\npublic:\n\ttypedef std::function<void(T*)> Delete;\n\texplicit MySharedPtr(T *t, Delete d = nullptr)\n\t\t: ptr(t), use(new size_t(1)), del(d) {}\n\tMySharedPtr(const MySharedPtr &rhs)\n\t\t: ptr(rhs.ptr), del(rhs.del) { ++*use; }\n\tMySharedPtr& operator=(const MySharedPtr&);\n\tT& operator*() const { return *ptr; }\n\tT* operator->() const { return ptr; }\n\t~MySharedPtr();\nprivate:\n\tT *ptr;\n\tsize_t *use;\n\tDelete del;\n};\n\ntemplate <typename T>\nMySharedPtr<T>& MySharedPtr<T>::operator=(const MySharedPtr &rhs)\n{\n\t++*rhs.use; //递增右侧对象的引用计数\n\tif (--*use == 0) {\n\t\tdel ? del(ptr) : delete ptr;\n\t\tdelete use;\n\t}\n\tptr = rhs.ptr;\n\tuse = rhs.use;\n\tdel = rhs.del;\n}\n\ntemplate <typename T>\nMySharedPtr<T>::~MySharedPtr()\n{\n\tif (--*use == 0) {\n\t\tdel ? del(ptr) : delete ptr;\n\t\tdelete use;\n\t}\n}\n\ntemplate <typename T>\nMySharedPtr<T> make_myshared(T t = T(), typename MySharedPtr<T>::Delete del = nullptr)\n{ return MySharedPtr<T>(new T(t), del); }\n\nint main()\n{\n\tauto iptr = make_myshared<int>(10, DebugDelete(\"my_shared_ptr\"));\n\t//auto iptr2 = iptr;\n\tstd::cout << *iptr << std::endl;\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对你的代码&amp;#xff0c;test01的c1因为是static&amp;#xff0c;只会执行一次求值初始化&amp;#xff0c;之后test01依然会执行&amp;#xff08;但可能被编译器自动内联&amp;#xff09;&amp;#xff0c;不过所做的操作只有直接取c1&amp;#xff0c;b1很可能被直接优化掉。test01肯定是仍要执行的&amp;#xff08;从逻辑上而言&amp;#xff09;&amp;#xff0c;但编译器未必真的会分配新的函数调用&amp;#xff0c;其底层可能确实是直接取c1&amp;#xff0c;这取决于编译器的具体策略。&lt;br /&gt;此外值得注意的是&amp;#xff0c;&lt;strong&gt;C&amp;#43;&amp;#43;语法标准没有规定局部区和全局区的概念&amp;#xff0c;只是多数编译器这么实现而已&lt;/strong&gt;。语法标准中的名称是“自动存储”&amp;#xff0c;“静态存储”&amp;#xff0c;“动态存储”。C&amp;#43;&amp;#43;语法同样没有规定引用如何实现&amp;#xff0c;但多数编译器实现为一个隐式的地址。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["（C++关于引用作为函数返回值）请问我写的注释，有哪些不对的呢？", ["引用作为函数的返回值时，在main()函数里将test01()作为左值/右值时，test01（）里的语句会不会全部执行一遍？还是说“test01()仅仅相当于一个全局区静态变量的别名”而已？有点糊涂，比如test01()=1000，是直接给全局区C1赋值还是需要把函数再运行一遍？谢谢", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n for (i = n - 1; i &gt;= 0;i--)   //看代码有点排序，这个是倒着排序，数组下标越小越大\r\n \r\n//for (i = 0; i &lt; n;i++) //如果这样写肯定是需要修改的代码。。\r\n```", "Konwledge_Point": "注释", "Question": ["dp中第一行的循环为什么一定要那么写，而不能写成我注释的那个样子？", ["for (i = n - 1; i >= 0;i--)", "\n        //for (i = 0; i < n;i++)", "\n        {", "\n            for (j = 0; j <= w; j++)", "\n            {", "\n                //show();", "\n                if (j < wi[i])", "\n                {", "\n                    dp[i][j] = dp[i + 1][j];", "\n                }", "\n                else", "\n                {", "\n                    dp[i][j] = max(dp[i + 1][j], dp[i + 1][j - wi[i]] + pi[i]);", "\n                }", "\n            }", "\n        }", "\n        cout << dp[0][w] << endl;", "\n        //cout << dp[n - 1][w] << endl;", "\n\n", "    这是简单的背包问题的动态规划，可是我还是不会\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;description和&amp;#64;params都是在注释的时候用的&amp;#xff0c;在方法的注释中&amp;#xff0c;&amp;#64;description表示方法的说明&amp;#xff0c;&amp;#64;params表示方法的参数说明&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["在vue中使用@description和@params是什么意思？", ["这一段是具体什么意思，一般在哪里使用，还有其他类似的嘛？，求告知"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在连接配置那里&amp;#xff0c;检查一下这玩意&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/174917266456166.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;新建一个utf-8编码的sql脚本文件&amp;#xff0c;然后手动输入包含有中文的代码&amp;#xff0c;再用dbeaver打开这个脚本&amp;#xff0c;执行它。&lt;br /&gt;你问题里描述的“文本文件编码改成utf8”&amp;#xff0c;这个操作在此处是不对的&amp;#xff0c;应该是将文本内容重新以utf8编码&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["DBeaver查询结果中文乱码", ["第一次用DBeaver，想请问下这个查询结果出现乱码怎么修改，从网上找的答案将scripts属性值中的文本文件编码改成utf8不管用，而且改完之后插入的那段字也会乱码", "\n", "这段在linux中查询是正确的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;画了半天&amp;#xff0c;看看是否可以&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; math\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; turtle as t\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.color(&amp;#39;red&amp;#39;)\n&lt;span class=\"hljs-comment\"&gt;#t.tracer(10,1)&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.begin_fill()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.right(&lt;span class=\"hljs-number\"&gt;130&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;184&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; i&amp;lt;&lt;span class=\"hljs-number\"&gt;175&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.right(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.left(&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.left(&lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;185&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; i&amp;lt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;)\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.left(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.left(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.end_fill()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;280&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.begin_fill()\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;radian&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * math.pi / &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt; \n    &lt;span class=\"hljs-attribute\"&gt;theta&lt;/span&gt; &amp;#61; (i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*radian\n    &lt;span class=\"hljs-attribute\"&gt;next_point&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*math.cos(theta)&amp;#43;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;*math.sin(theta)-&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.setpos(next_point)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.end_fill()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.color(&amp;#39;white&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.begin_fill()\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;radian&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * math.pi / &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt; \n    &lt;span class=\"hljs-attribute\"&gt;theta&lt;/span&gt; &amp;#61; (i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*radian\n    &lt;span class=\"hljs-attribute\"&gt;next_point&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;*math.cos(theta)&amp;#43;&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;155&lt;/span&gt;*math.sin(theta)-&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.setpos(next_point)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.end_fill()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.color(&amp;#39;red&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(-&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;北国&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(-&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;药苑&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;红&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;色&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;传&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.goto(&lt;span class=\"hljs-number\"&gt;160&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.write(&amp;#39;承&amp;#39;,font&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#34;宋体&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;bold&amp;#34;&lt;/span&gt;))\n&lt;span class=\"hljs-comment\"&gt;#t.update()&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.done()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/516121219356135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Python中turtle库的运用", ["turtle库绘图程序运行正常，代码行数超过30", "行，有分支结构和循环结构，代码书写规范整洁，有注释。做出下图效果，90填充红色。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;原来是编辑器属性显示中translation missing这个选项&amp;#xff0c;把勾选去掉就可以显示中文了&amp;#xff01;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"648\" src=\"https://img-ask.csdnimg.cn/upload/1621872010862.png\" width=\"607\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"1030\" src=\"https://img-ask.csdnimg.cn/upload/1621872023317.png\" width=\"1920\" /&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["DevC++怎么取消自动隐藏中文", ["代码如图，鼠标不悬停在中文上就不会显示：", "\n\n"]], "Tag": "程序设计"}
{"Answer": "合并所有：ctrl shift +  ；\r\n展开所有：ctrl shift  - ；\r\n合并光标所在行：ctrl  +  ；\r\n展开光标所在行：ctrl   - ；", "Konwledge_Point": "注释", "Question": ["求助：IDEA中如何一键将所有的方法的方法体隐藏", ["求助：小白刚学习JAVA，一个类的方法如果比较多，如何一键将所有的方法的方法体和注释隐藏成一行啊？？谢谢大神"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已全部实现。&lt;br /&gt;实验2-1运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;运动员[&lt;span class=\"hljs-built_in\"&gt;na&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;me:&lt;/span&gt;张飞, a&lt;span class=\"hljs-symbol\"&gt;ge:20&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;ry:&lt;/span&gt;中国]\n参与跳高项目的人有&lt;span class=\"hljs-symbol\"&gt;:&lt;/span&gt;[张飞]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验2-2运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;老李&lt;span class=\"hljs-comment\"&gt;(1 李白)&lt;/span&gt;释放将进酒技能\n小百&lt;span class=\"hljs-comment\"&gt;(2 百里守约)&lt;/span&gt;释放静谧之眼技能\n阿貂&lt;span class=\"hljs-comment\"&gt;(3 貂蝉)&lt;/span&gt;释放花之印记技能\n老张&lt;span class=\"hljs-comment\"&gt;(4 张飞)&lt;/span&gt;释放猴子吼技能\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验2-3运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;spider用 &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; 条腿走路\n小猫的名字叫&amp;#xff1a;Kitty\n&lt;span class=\"hljs-built_in\"&gt;cat&lt;/span&gt;用 &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; 条腿走路\n&lt;span class=\"hljs-built_in\"&gt;Cat&lt;/span&gt; is playing\nKitty eating\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验2-4运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-section\"&gt;圆柱体的体积: 50.26548245743669&lt;/span&gt;\n&lt;span class=\"hljs-section\"&gt;圆柱体的体积: 235.61944901923448&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验2-5运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;年龄不合法\ncom&lt;span class=\"hljs-selector-class\"&gt;.laboratory&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.report&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab02&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab0205&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.IllegalAgeException&lt;/span&gt;\nDisconnected from the target VM, &lt;span class=\"hljs-selector-tag\"&gt;address&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;127.0.0.1:59548&amp;#39;&lt;/span&gt;, transport: &lt;span class=\"hljs-string\"&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;\n    at com&lt;span class=\"hljs-selector-class\"&gt;.laboratory&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.report&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab02&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab0205&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.Driver&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.drive&lt;/span&gt;(Driver&lt;span class=\"hljs-selector-class\"&gt;.java&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;)\n    at com&lt;span class=\"hljs-selector-class\"&gt;.laboratory&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.report&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab02&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lab0205&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.Lab0205Main&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.main&lt;/span&gt;(Lab0205Main&lt;span class=\"hljs-selector-class\"&gt;.java&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验4-1运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;代表队&amp;#xff0c;金牌&amp;#xff0c;银牌&amp;#xff0c;铜牌&amp;#xff0c;合计\n挪威&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;16&amp;#xff0c;8&amp;#xff0c;13&amp;#xff0c;37&lt;/span&gt;\nROC&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;6&amp;#xff0c;12&amp;#xff0c;14&amp;#xff0c;32&lt;/span&gt;\n德国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;12&amp;#xff0c;10&amp;#xff0c;5&amp;#xff0c;27&lt;/span&gt;\n加拿大&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;4&amp;#xff0c;8&amp;#xff0c;14&amp;#xff0c;26&lt;/span&gt;\n美国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;8&amp;#xff0c;10&amp;#xff0c;7&amp;#xff0c;25&lt;/span&gt;\n瑞典&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;8&amp;#xff0c;5&amp;#xff0c;5&amp;#xff0c;18&lt;/span&gt;\n奥地利&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;7&amp;#xff0c;7&amp;#xff0c;4&amp;#xff0c;18&lt;/span&gt;\n日本&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;3&amp;#xff0c;6&amp;#xff0c;9&amp;#xff0c;18&lt;/span&gt;\n荷兰&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;8&amp;#xff0c;5&amp;#xff0c;4&amp;#xff0c;17&lt;/span&gt;\n意大利&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&amp;#xff0c;7&amp;#xff0c;8&amp;#xff0c;17&lt;/span&gt;\n中国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;9&amp;#xff0c;4&amp;#xff0c;2&amp;#xff0c;15&lt;/span&gt;\n瑞士&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;7&amp;#xff0c;2&amp;#xff0c;5&amp;#xff0c;14&lt;/span&gt;\n法国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;5&amp;#xff0c;7&amp;#xff0c;2&amp;#xff0c;14&lt;/span&gt;\n韩国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&amp;#xff0c;5&amp;#xff0c;2&amp;#xff0c;9&lt;/span&gt;\n芬兰&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&amp;#xff0c;2&amp;#xff0c;4&amp;#xff0c;8&lt;/span&gt;\n斯洛文尼亚&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&amp;#xff0c;3&amp;#xff0c;2&amp;#xff0c;7&lt;/span&gt;\n澳大利亚&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;2&amp;#xff0c;1&amp;#xff0c;4&lt;/span&gt;\n新西兰&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;3&lt;/span&gt;\n匈牙利&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;0&amp;#xff0c;2&amp;#xff0c;3&lt;/span&gt;\n英国&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;2&lt;/span&gt;\n比利时&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;2&lt;/span&gt;\n捷克&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;2&lt;/span&gt;\n斯洛伐克&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;2&lt;/span&gt;\n白俄罗斯&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;2&amp;#xff0c;0&amp;#xff0c;2&lt;/span&gt;\n西班牙&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;1&lt;/span&gt;\n乌克兰&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;1&lt;/span&gt;\n爱沙尼亚&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;1&lt;/span&gt;\n拉脱维亚&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;1&lt;/span&gt;\n波兰&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验4-2运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;参与跳远项目的人有:&lt;span class=\"hljs-comment\"&gt;[张飞]&lt;/span&gt;\n项目名称:跳远, 项目场地:北操场, 参与该项目运动员:&lt;span class=\"hljs-comment\"&gt;[张飞]&lt;/span&gt;\n参与男子100米项目的人有:&lt;span class=\"hljs-comment\"&gt;[张飞]&lt;/span&gt;\n项目名称:男子100米, 项目场地:足球场, 参与该项目运动员:&lt;span class=\"hljs-comment\"&gt;[张飞]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验5-1运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-section\"&gt;运动员张飞已到达终点&amp;#xff0c;共耗时:37秒&lt;/span&gt;\n&lt;span class=\"hljs-section\"&gt;运动员曹操已到达终点&amp;#xff0c;共耗时:42秒&lt;/span&gt;\n张飞获胜\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验5-2运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;队伍休息中...\n中场休息时间剩余: &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;分钟\n队伍休息中...\n中场休息时间剩余: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;分钟\n队伍休息中...\n中场休息时间剩余: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;分钟\n队伍比赛中...\n休息时间结束&amp;#xff0c;比赛开始&amp;#xff01;\n队伍比赛中...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验5-3运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;罗致焕已接棒&amp;#xff01;\n叶培建等待接力中...\n景海鹏等待接力中...\n叶培建等待接力中...\n景海鹏等待接力中...\n叶培建等待接力中...\n景海鹏等待接力中...\n叶培建等待接力中...\n景海鹏已接棒&amp;#xff01;\n叶培建等待接力中...\n叶培建等待接力中...\n叶培建已接棒&amp;#xff01;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;实验5-4运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;比赛2拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水60瓶\n保障队送水成功&amp;#xff0c;现有水1040瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水40瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1040瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水1060瓶\n保障队送水成功&amp;#xff0c;现有水1080瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水60瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n保障队送水成功&amp;#xff0c;现有水1060瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1040瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水40瓶\n保障队送水成功&amp;#xff0c;现有水1040瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水60瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n保障队送水成功&amp;#xff0c;现有水1080瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1060瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水1040瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水780瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水800瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水760瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水740瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水720瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水700瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水680瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水660瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水620瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水600瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水640瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水580瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水560瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水540瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水480瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水520瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水500瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水440瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水420瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水460瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水360瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水400瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水380瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水340瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水320瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水300瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水260瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水280瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水240瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水220瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水180瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水200瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水140瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水160瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水120瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水100瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水80瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水60瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水1040瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水1020瓶\n保障队送水成功&amp;#xff0c;现有水1060瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水1000瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水940瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水980瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水960瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水900瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水920瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水880瓶\n比赛3拿走20瓶水&amp;#xff0c;现场馆有水860瓶\n比赛1拿走20瓶水&amp;#xff0c;现场馆有水820瓶\n比赛2拿走20瓶水&amp;#xff0c;现场馆有水840瓶\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["实验报告 java类与对象", ["2022年中国举办了冬奥会成为首个“双奥之城”。为了便于管理采用Java语言设计冬奥会管理系统，需要包含运动员类和项目类，要求如下：", "（1）设计一个运动员类Athlete，属性包括姓名、年龄和国籍country（也可以根据需要设计合理的其他属性）。创建方法athleteInfo，输出运动员的信息。", "（2）设计一个运动项目类Event，属性包括项目名称，项目场地和项目允许参与的人数（也可以根据需要设计合理的其他属性），创建joinEvent方法，参数为运动员对象，能够输出项目名称和参与项目的运动员姓名。", "（4）创建一个运动员对象，一个项目对象，分别测试其所有内容。", "相信你一定玩过王者荣耀这个游戏，就算没有玩过，肯定也听说过。王者荣耀里面有很多英雄，这些英雄，他们都有名字，血量，段位，还有攻击力，防护等属性。不同类型的英雄属性各有不同，请利用继承、抽象类和多态设计一个模拟王者荣耀简单功能的游戏，编程实现如下要求：", "（1）游戏中首先需要定义一个抽象英雄类(Hero)，该类包括所有英雄的名称、血量、段位、攻击力等公共属性和方法。其中所有英雄的初始段位均为“倔强青铜”。", "（2）王者荣耀有很多英雄，假设用户创建的英雄角色只可以选择三种不同类型（李白、百里守约、貂蝉），他们作为英雄的一种，继承了英雄类，也有自己初始的名称、血量、段位和攻击力，在创建三种英雄时将所对应的角色属性值传递给父类完成角色的创建。但是用户创建角色时有自己的ID，每类英雄技能不同，李白具有将进酒技能，百里守约具有静谧之眼技能，貂蝉具有花之印记技能，给出他们各自的技能释放方法（该方法输出 “", "（ID名称）释放", "技能”，例如“老李释放将进酒技能”），释放技能的同时血量减5。", "（3）定义一个游戏类，在游戏类中根据用户选择完成随机英雄角色的创建，并测试你自己创建的英雄，使出技能释放方法。", "（4）请增加一个新的英雄角色，完成自己设计的英雄代码，并能在不改变前面代码的基础上，在游戏中使用新的角色。", "按照动物、宠物、猫和蜘蛛的关系，通过编程实现各自的关系并声明自己的属性和方法。仔细阅读下方给出的代码框架及注释，在 Begin-End 之间实现如下要求：", "（1）动物类 Animal为抽象类，具有两个属性：种类和腿条数，并有 eat() 和 walk() 的方法；", "（2）宠物 Pet 为接口，有三个功能：setName()、getName() 和 play()；", "（3）蜘蛛类 Spider 继承动物类，重写 eat() 方法；", "（4）猫类 Cat 继承动物类并实现宠物接口，本身有一个属性：名称。", "/**", " * 按照动物、宠物、猫和蜘蛛的关系，通过编程实现各自的关系并声明自己的属性和方法。", " */", "\n", "// 创建Animal类，它是所有动物的抽象父类", " ", "    // 声明一个受保护的字符串类型属性type，它记录动物的种类", " ", "    // 声明一个受保护的整数类型属性legs，它记录动物的腿的数目", "    ", "    // 定义一个受保护的有参构造器，用来初始化type和legs属性", " ", "    // 声明抽象方法eat，无返回值", "  ", "    // 声明具体方法walk来打印动物是如何行走的（包括腿的数目）。", "    // 输出格式：用 xx 条腿走路", "  ", "// 定义蜘蛛类 Spider继承Animal类", " ", "    // 定义默认构造器，它调用父类构造器来指明动物类别是spider，且所有蜘蛛都是8条腿。", "   ", "    // 实现eat方法，输出：spider eating", "   ", "// 创建pet（宠物）接口", " ", "    // 提供setName(String name) 为该宠物命名", " ", "    // 提供getName() 返回该宠物的名字，返回类型为String", " ", "    // 提供 play()方法，无返回值", " ", " ", "// 定义公开的猫类 Cat 继承动物类并实现宠物接口", " ", "    // 定义一个name属性来存宠物的名字", " ", "    // 定义一个有参构造器，它使用String参数指定猫的名字", "    // 该构造器必须调用超类构造器来指明动物种类是cat，且所有的猫都是四条腿", " ", "    // 另定义一个无参的构造器。该构造器调用前一个构造器（用this关键字）并传递一个空字符串作为参数", " ", " ", "    // 实现 Pet接口的方法", "    // 设置猫的名称", "  ", "    // 获取猫的名称", "  ", "    // 重写 Animal 类的play()，输出：Cat is playing", "   ", "    // 重写 Animal 类的eat()，输出：xx eating", "    /"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那就一项一项来呗&lt;br /&gt;A&lt;br /&gt;scanf(&amp;#34;%d%d%f&amp;#34;, &amp;amp;a, &amp;amp;b); /* 多余的格式符%f完全不起作用 */&lt;br /&gt;不是不起作用&amp;#xff0c;是你输入3个数&amp;#xff0c;但是只有前2个数赋值给了a和b&amp;#xff0c;但是如果你只输入2个数&amp;#xff0c;程序依然处于阻塞状态不会往下走&lt;br /&gt;B&lt;br /&gt;scanf(&amp;#34;%d%d&amp;#34;, &amp;amp;a, &amp;amp;b, &amp;amp;x); /* 多余的输入项不能获得输入数据 */&lt;br /&gt;变量x没有对应的输入项&amp;#xff0c;不能获得赋值&amp;#xff0c;你可以在控制台输入3个数据&amp;#xff0c;但只有前2个会被读入&amp;#xff0c;第三个会驻留在缓冲区里&amp;#xff0c;直到再次调用scanf被读入&amp;#xff08;比如循环读&amp;#xff09;&lt;br /&gt;C&lt;br /&gt;scanf(&amp;#34;%d%f%d&amp;#34;, &amp;amp;a, &amp;amp;b, &amp;amp;x); /* 输入项与格式符类型不匹配&amp;#xff0c;变量b和x得不到正确的输入数据 */&lt;br /&gt;c语言比较古早&amp;#xff0c;不智能&amp;#xff0c;它不管你变量是什么类型&amp;#xff0c;只看你使用什么符号来读&amp;#xff0c;你告诉它按照float型读&amp;#xff0c;它就把输入数据按照float型组成4个字节放进你提供的地址里&amp;#xff0c;这个地址是&amp;amp;b&amp;#xff0c;但是其实b是int型&amp;#xff0c;这会造成数据全乱码了&lt;br /&gt;D&lt;br /&gt;scanf(&amp;#34;Input:%d%d&amp;#34;, &amp;amp;a, &amp;amp;b); /* 格式串中允许加入格式符以外的字符串 */&lt;br /&gt;Input&amp;#xff1a;部分是直接输出的&amp;#xff0c;不格式化&amp;#xff0c;这当然是允许的&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么选A呀？有人可以解释一下吗？", ["单选题", "\n", "设有定义：int a，b; float x，y; ，则以下选项中对语句所作的注释叙述错误的是（）。", "\n", "A", "\n", "scanf(\"%d%d%f\", &a, &b);     /* 多余的格式符%f完全不起作用 */", "\n", "B", "\n", "scanf(\"%d%d\", &a, &b, &x);    /* 多余的输入项不能获得输入数据 */", "\n", "C", "\n", "scanf(\"%d%f%d\", &a, &b, &x);  /* 输入项与格式符类型不匹配，变量b和x得不到正确的输入数据 */", "\n", "D", "\n", "scanf(\"Input:%d%d\", &a, &b); /* 格式串中允许加入格式符以外的字符串 */"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;stdlib.h&amp;gt;\ndouble &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(int n)&lt;/span&gt;&lt;/span&gt;\n{\n    &lt;span class=\"hljs-comment\"&gt;/*Begin*/&lt;/span&gt;\n    int i ,k ,t;\n    double s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ;i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n    {\n        k &amp;#61; i;t &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (k--) t &amp;#61; t * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; i;\n        s&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;/t;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n    &lt;span class=\"hljs-comment\"&gt;/*End*/&lt;/span&gt;\n}\nint main()\n{\n    FILE *&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;,*&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;;\n    int n,i;\n    double s;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    s&amp;#61;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n)&lt;/span&gt;&lt;/span&gt;;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.8lf\\n&amp;#34;&lt;/span&gt;,s);\n\n    &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&amp;#61;fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;in96.dat&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;&amp;#61;fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;out96.dat&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!feof(&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;))\n    {\n         fscanf(&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n         fprintf(&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;%.8lf\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n)&lt;/span&gt;&lt;/span&gt;);\n    }\n    fclose(&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n    fclose(&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;);\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["C语言函数数列题求解", ["函数fun()是根据正整数n，求下面数列的和 s=1+1/22+1/333+.+1/nn.nn", "当输入n=5，s=1.04870057 ,注意:部分源程序给出如下。", "请勿改动main函数和其他函数中的任何内容,仅在函数fun的注释语句之间填入所编写的若干语句。", "\n", "#include<stdio.h>", "#include<stdlib.h>", "double fun(int n)", "{", "    /", "Begin", "/", "\n", "/*End*/", "\n", "\n", "}", "int main()", "{", "    FILE *in,*out;", "    int n,i;", "    double s;", "    scanf(\"%d\",&n);", "    s=fun(n);", "    printf(\"%.8lf\\n\",s);", "\n", "in", "=", "fopen", "(", "\"in96.dat\"", ",", "\"r\"", ");\n", "out", "=", "fopen", "(", "\"out96.dat\"", ",", "\"w\"", ");\n", "while", "(!feof(", "in", "))\n{\n    fscanf(", "in", ",", "\"%d\"", ",", "&n", ");\n    fprintf(", "out", ",", "\"%.8lf\\n\"", ",fu", "n", "(n));\n}\n", "fclose", "(", "in", ");\n", "fclose", "(", "out", ");\n   ", "system", "(", "\"pause\"", ");\n", "return", " 0;\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "以上几位可能没有理解你的意图。我估计你并不是要用户以插件或者组件方式增强你的软件功能，而是希望用户编写一段代码，提供一些自定义功能。这实际上涉及到动态编译和执行问题。不过这个问题也是可行的， 你需要了解一下C#编译器引擎或者python引擎之类的知识。后者实现起来更简单，需要用户用python语法实现一些功能，然后你用python引擎动态运行获取运行结果，再进行进一步的处理。", "Konwledge_Point": "注释", "Question": ["C#winform实现运行时用户编写部分代码并能运行这部分代码", ["最近在搭一个框架，就是这个程序的大部分都是我自己编写的，但要实现某功能的一个函数留给用户自己编写，编写后要求能加入我之前写的大部分程序，从而组成一个完整的程序再运行。要怎样才能实现？", "\n简单的说，比如我要做一个温度控制软件，控制算法有很多种，我就想把控制算法这块空出来，然后在运行的时候，再编写控制算法，然后插到之前的空白处，点击按钮，重新运行，求助各位大佬。"]], "Tag": "程序设计"}
{"Answer": "一个项目只能有一个main函数。\r\n你不应该在同一个项目里添加一个新的cpp，把main函数直接写在里面。\r\n\r\n你应该关闭当前项目，或者重新打开vs2017，选择文件-新建项目\r\n\r\n然后创建一个新的项目，再在里面写程序。", "Konwledge_Point": "注释", "Question": ["为什么vs2019 C++这段总是显示错误呢", ["#include", "\n#include", "\nusing namespace std;", "\n\n", "typedef struct", "\n{", "\n    int x;", "\n    int y;", "\n}Coord;", "\nint main(void)", "\n{", "\n    Coord c;", "\n    Coord& c1 = c;", "\n\n", "c1.x = 10;\nc1.y = 20;\n\ncout << c.x << \",\" << c.y << endl;\n\nsystem(\"pause\")\n    return 0;\n", "\n\n", "}", "\n本人新手刚学半个月  这个不知道是不是版本的问题  教程用的是vs2008版的", "\n我现在用的是vs2019版本的  求大神指点"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我们来看顺序&amp;#xff1a;&lt;br /&gt;1.&lt;a href=\"https://www.nuget.org/packages?q&amp;#61;ScottPlot.WinForms\" id=\"textarea_1658795557355_1658798668894_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.nuget.org/packages?q&amp;#61;ScottPlot.WinForms&lt;/span&gt;&lt;/a&gt; 找到他&lt;br /&gt;2.进官网&lt;a href=\"https://scottplot.net/\" id=\"textarea_1658795557355_1658798668894_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://scottplot.net/&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;3.查faq&amp;#xff1a;&lt;a href=\"https://scottplot.net/faq/\" id=\"textarea_1658795557355_1658798668894_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://scottplot.net/faq/&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;4.找到官方说法&amp;#xff1a;&lt;a href=\"https://scottplot.net/faq/live-data/\" id=\"textarea_1658795557355_1658798668894_3\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://scottplot.net/faq/live-data/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;当然怎么使用这东西就看你怎么理解了&amp;#xff0c;就官方的代码来看&amp;#xff0c;他其实实现的是“移动窗口”&amp;#xff0c;在现在来说我们其实有很多更简单的方法从时序数据中玩移动窗口&amp;#xff0c;这我就不多说啥了&amp;#xff0c;如果你知道“移动窗口”自己就能找到&amp;#xff0c;当然最好用谷不用度&amp;#xff0c;用度难免进园子&amp;#xff0c;而园子的质量实在能保证&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C# scottplot实时显示曲线的问题", ["最近由于公司测试的同事在测试电流电压温度等设备的时候，得围绕着设备转，实在是累，所以公司决定做个虚拟上位机，通过UDP网口接受每秒发送过来的16进制数据，来解析16进制中电流，电压及温度。。", "\n", "我现在已经解析出来电压等数值，并在主窗口中实时显示出来了，现在想在主界面上增加个曲线button，来弹出显示曲线窗口，曲线控件，用的是Scottplot(这个空间主要是看着UI显示很好看，所以用的这个空间，不知道各位有没有更好显示曲线的控件之类的)的FormsPlot来显示曲线。我主窗口的数据private void ReceiveMessage(object obj) 这种方式来解析并写入到struct结构体中存放，最后塞到主窗口中的对应的text位置上显示。", "问题：", "想请教的问题就是，数据现在已经在手了，但是不知道怎么把struct中或者主界面每秒收到的数据通过主界面的曲线button传递到scottplot中，用曲线实时的显示出来，翻了一圈儿网站了，没什么合适的案例，所以在这感谢各位了，感谢。", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;人家注释不都说了嘛&amp;#xff0c;EnableDiscoveryClient自动发现已经做了优化&amp;#xff0c;写不写估计都差不太多&amp;#xff0c;EnableCircuitBreaker则是spring cloud默认不使用Hystrix了&amp;#xff08;原始注释是Hystrix has been removed from Spring Cloud.&amp;#xff0c;被移除&amp;#xff1f;&amp;#xff09;&lt;br /&gt;也就是你现在想用Hystrix&amp;#xff0c;就得自己写配置了&amp;#xff0c;和mybatis一样&amp;#xff0c;官方只提供最佳的版本依赖匹配&amp;#xff0c;已经不集成到整体配置中来了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["@SpringCloudApplication 注解 is deprecated 已经被弃用，有代替它的注解吗？", ["问题遇到的现象和发生背景", "\n", "2021/12/12 学习SpringCloud熔断器Hystrix时，遇到", "@SpringCloudApplication ", "注解 is deprecated问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "当前SpringCloud依赖版本为", "2020.0.4", "当前SpringBoot依赖版本为", "2.5.7", "当前Hystrix依赖为", "spring-cloud-starter-netflix-hystrix", "，版本为", "2.2.10.RELEASE", "\n", "查看", "@SpringCloudApplication", "发现已经弃用，并且没有之前版本的", "@EnableCircuitBreaker", "开启熔断器注解", "另外", "@EnableCircuitBreaker开启熔断器注解已经弃用，我用了", "@EnableHystrix", "代替。", "\n", "问题和预期结果", "\n", "有新的代替", "@SpringCloudApplication", "的注解，能够代替", "@EnableHystrix", "和", "@EnableDiscoveryClient", "和", "@SpringBootApplication", "三者注解，直接使用的一个注解吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个是正常的现象。实例化了之后的东西都是没有颜色的。。。&lt;br /&gt;这个是内置的上色&amp;#xff0c;好像只能规定某个种类的颜色。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么vscode部分代码没有颜色", ["就是后边的.read().decode()没有颜色 可以运行 也没有提示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Visual Studio 2019快捷键备忘录&amp;#xff0c;参考&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://docs.microsoft.com/zh-cn/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view&amp;#61;vs-2019\" id=\"textarea_1647419088363_1647419413463_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;键盘快捷方式 - Visual Studio (Windows) | Microsoft Docs&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;了解 Visual Studio 中的默认键盘快捷方式&amp;#xff0c;以便通过它们访问各种命令和窗口。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://docs.microsoft.com/zh-cn/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view&amp;#61;vs-2019&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Visual Studio 2022快捷键备忘录&amp;#xff0c;参考&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://docs.microsoft.com/zh-cn/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view&amp;#61;vs-2022\" id=\"textarea_1647419088363_1647419413463_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;键盘快捷方式 - Visual Studio (Windows) | Microsoft Docs&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;了解 Visual Studio 中的默认键盘快捷方式&amp;#xff0c;以便通过它们访问各种命令和窗口。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://docs.microsoft.com/zh-cn/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view&amp;#61;vs-2022&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["VS使用技巧-快捷键", ["问题遇到的现象和发生背景", "\n", "说一下个人情况", "目前正在学习C#，之前从事java开发", "因而开发工具由 IDEA 转到目前的VS2019企业版，两个软件快捷键相差太多", "而且VS的选项 -- 环境 --快捷键 不能根据快捷键搜索", "网上的关于VS快捷键的很少，可能是常用IDEA的原因，有些习惯改不了", "如下，是没有解决的快捷键，拜 托 各位", "\n", "\n", "如下，是自己整理的快捷键", "单行多行注释，自己将快捷键给改了，使用IDEA的原因，如能帮到各位是很开心的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;/***********************Begin************************/&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, t &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, * a &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;) * n);\n    a[k&amp;#43;&amp;#43;] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; j * j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i % j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                a[k&amp;#43;&amp;#43;] &amp;#61; i;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; k; i&amp;#43;&amp;#43;) {\n        t *&amp;#61; x;\n        i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? s &amp;#43;&amp;#61; t / a[i] : s -&amp;#61; t / a[i];\n    }\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n    &lt;span class=\"hljs-comment\"&gt;/***********************End*************************/&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s, x;\n    FILE* in, * out;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入n和x:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %lf&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;x);\n    s &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(n, x);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf\\n&amp;#34;&lt;/span&gt;, s);\n    &lt;span class=\"hljs-comment\"&gt;/*****************/&lt;/span&gt;\n    in &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;in2019-2-2-3.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    out &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;out2019-2-2-3.dat&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!&lt;span class=\"hljs-built_in\"&gt;feof&lt;/span&gt;(in))\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(in, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d %lf&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;x);\n        &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(out, &lt;span class=\"hljs-string\"&gt;&amp;#34;%lf\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(n, x));\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(in);\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(out);\n    &lt;span class=\"hljs-comment\"&gt;/***************/&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["C语言数列求和题：函数fun是根据输入n和x，求下面分母为n以内(包含n)的非素数构成的数列的和", ["\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "double", " ", "fun", "(", "int", " n,", "double", " x)", "\n", "{\n", "/***********************Begin************************/", "\n\n\n", "/***********************End*************************/", "\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n;\n    ", "double", " s,x;\n    FILE *in,*out;\n    ", "printf", "(", "\"输入n和x:\"", ");\n    ", "scanf", "(", "\"%d %lf\"", ",&n,&x);\n    s=", "fun", "(n,x);\n    ", "printf", "(", "\"%lf\\n\"", ",s);\n    ", "/*****************/", "\n    in=", "fopen", "(", "\"in2019-2-2-3.dat\"", ",", "\"r\"", ");\n    out=", "fopen", "(", "\"out2019-2-2-3.dat\"", ",", "\"w\"", ");\n    ", "while", "(!", "feof", "(in))\n    {\n        ", "fscanf", "(in,", "\"%d %lf\"", ",&n,&x);\n        ", "fprintf", "(out,", "\"%lf\\n\"", ",", "fun", "(n,x));\n    }\n           ", "fclose", "(in);\n           ", "fclose", "(out);\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";    \n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n (?is)[A-Z]\\d{2}\\.\\d\r\n```", "Konwledge_Point": "注释", "Question": ["求助高手帮忙写一下正则表达式", ["涉及到换行符，一直写不对", "\nH47.1 ", "\nPapilloedema, unspecified", "\n未 明 示 的 视 神 经 乳 头 水 肿 ", "\nH47.2", "\njava用的，要在整片文章中检索所有类似于这样的东西，请问该怎么写这个正则表达是呢", "\n要求是，一个大写英文字母[A-Z]后面跟两个数字加.在加一个数字，因为中间涉及到换行符，而且换行符出现的位置和次数并不固定，因此怎么写都写不对，请高手帮忙给写一下，谢谢啦，java用的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不知道你用的什么版本的&amp;#xff0c;我目前的1.2你这种方式是可以直接继承注释的&amp;#xff0c; 可以试一下下面这个方案&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;create&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;table&lt;/span&gt; tablename_2 &lt;span class=\"hljs-keyword\"&gt;like&lt;/span&gt;  tablename_1 ;\n&lt;span class=\"hljs-keyword\"&gt;insert&lt;/span&gt; overwrite &lt;span class=\"hljs-keyword\"&gt;table&lt;/span&gt; tablename_2  &lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt;  tablename_1 \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["hive里我需复制多张表，表结构和数据已经复制，备注如何复制", ["语句用的create table tablename as select * from tablename，这样表结构和数据已经过来了，字段的备注我要怎么批量复制，多张表且字段数量大。"]], "Tag": "程序设计"}
{"Answer": "參考這篇試試看\r\n[url]http://www.javaworld.com.tw/roller/weijen/entry/rake_doc_app%E6%99%82%E7%9A%84%E4%B8%AD%E6%96%87%E5%95%8F%E9%A1%8C[/url]", "Konwledge_Point": "注释", "Question": ["Rdoc如何支持中文？", ["呵呵，向大家讨教一个问题呀，用ruby开发的函数(UTF-8)，用中文加的注释，在用rdoc生成后是乱码, 想问一下rdoc如何自定义生成doc文档的字符编码。。。"]], "Tag": "程序设计"}
{"Answer": "你这里说的动态代理只是针对这个技术而言还是说在spring项目下的动态代理，这里只是针对JDK动态代理的话实现``java.lang.reflect.InvocationHandler``，\r\n是可以拿到Method对象的，既然方法对象拿到了参数和参数上的注解都是能获取到的，getParameterAnnotations\r\n如果是spring代理的话，这里他已经给你做了代理，你要是使用@Aspect实现切面功能的话，这里你可以试试：``((MethodInvocationProceedingJoinPoint.MethodSignatureImpl)point.getSignature()).getMethod()``这么去拿method对象，\r\n这里的point就是你代理方法的ProceedingJoinPoint point", "Konwledge_Point": "注释", "Question": ["动态代理时为类的方法的参数添加注解", ["class A{\n    public void method(Long param){}\n}\n", "\n\n", "通过动态代理，为A创建一个代理，这个时候，有没有办法让代理的method方法的参数param添加注解@B。", "\n\n", "还是说只能获取参数是否有注解，而不能添加注解。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;得先建项目&amp;#xff0c;再复制代码到项目里&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["我用vs2019打开了一个cpp文件，调试选项都是灰色，求解", ["请问这个问题出在哪里，我之前用别的编译器打开可以直接编译运行，为什么这个不行，怎么解决这个问题，求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哥哥要绘制 Humann2 的注释结果在 KEGG 数据库上的相对丰度统计图&amp;#xff0c;您可以使用以下步骤&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;使用 Humann2 分析您的样品并得到 Gene Families 文件&amp;#xff08;例如 &lt;code class=\"language-javascript\"&gt;genefamilies.tsv&lt;/code&gt;&amp;#xff09;。&lt;/li&gt;&lt;/ol&gt;\n&lt;ul&gt;&lt;li&gt;&lt;ol start=\"2\"&gt;&lt;li&gt;将 Gene Families 文件转换为 KEGG Orthology (KO) 注释文件。Humann2 包括一个名为 &lt;code class=\"language-javascript\"&gt;humann2_regroup_table&lt;/code&gt; 的工具&amp;#xff0c;可以将基因家族重新映射到 KO。示例命令如下&amp;#xff1a;&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;humann2_regroup_table &lt;span class=\"hljs-attr\"&gt;--input&lt;/span&gt; genefamilies&lt;span class=\"hljs-selector-class\"&gt;.tsv&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;--output&lt;/span&gt; ko_genefamilies&lt;span class=\"hljs-selector-class\"&gt;.tsv&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;--groups&lt;/span&gt; uniref90_ko\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; 这将基于 KEGG 数据库中的 UniRef90 序列将 Gene Families 重新映射到 KO&amp;#xff0c;并生成一个新的 KO 注释文件 &lt;code class=\"language-javascript\"&gt;ko_genefamilies.tsv&lt;/code&gt;。&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;ol start=\"3\"&gt;&lt;li&gt;使用统计软件&amp;#xff08;例如 R&amp;#xff09;加载 KO 注释文件&amp;#xff0c;并根据需要进行数据预处理和筛选。&lt;/li&gt;&lt;/ol&gt;\n&lt;ol start=\"4\"&gt;&lt;li&gt;绘制相对丰度统计图。使用 R 绘图库&amp;#xff08;例如 ggplot2&amp;#xff09;或其他统计软件的绘图工具&amp;#xff0c;绘制每个样品中 KO 相对丰度的统计图。您可以根据需要选择不同的绘图类型和样式&amp;#xff0c;例如柱状图、热图或气泡图。&lt;/li&gt;&lt;/ol&gt;\n&lt;ol start=\"5\"&gt;&lt;li&gt;如果需要&amp;#xff0c;可以将不同功能层次分别绘制到同一张图中&amp;#xff0c;以便比较不同功能层次之间的相对丰度差异。您可以使用堆叠柱状图或分组柱状图等方式来实现这一点。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;绘制 Humann2 结果的相对丰度统计图可能需要进行多次调整和优化&amp;#xff0c;以满足您特定的研究问题和数据格式。但是&amp;#xff0c;以上步骤应该可以帮助您入门并开始探索 Humann2 结果的可视化。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["humann功能注释", ["humann注释得到genefamilies文件，我已经转化为ko数据库的注释结果", "如何根据数据库的注释结果，绘制了各样品在kegg各个功能层级上的相对丰度统计图，比如", "\n"]], "Tag": "程序设计"}
{"Answer": "字符编码有问题，在你的控制台窗口的左边图标点下，选择属性，里面可以设置代码页，设置为gb码\r\n另外你源代码也要保存为gb码", "Konwledge_Point": "注释", "Question": ["为什么用vs2017编写C语言时会出现汉字乱码", ["比如", "\nprintf(\"沙发斯蒂芬是”）这一句输出就是乱码，既不是汉字，也不是繁体字", "\n求解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把.idea和各种.iml删掉重新加载试试&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea部分资源文件变成黄色，不能正常引用", ["这些文件突然不能被正常使用了，忘记设置哪的时候。当时没管，后来发现不对。", "求解答。如何消除，是文件正常使用"]], "Tag": "程序设计"}
{"Answer": "#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n\r\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\r\n\r\nint main(int argc, char *argv[]) {\r\n\tint score;//定义一个成绩变量 \r\n\tprintf(\"Please enter your score:\"); \r\n\tscanf(\"%d\",&amp;score);//输入成绩 \r\n\tscore=score/10;\r\n\tprintf(\"Your grade is:\");\r\n\tswitch(score)\r\n\t{\r\n\t\tcase 10:\r\n\t\tcase 9:printf(\"优秀\\n\");break;\r\n\t\tcase 8:printf(\"良好\\n\");break;\r\n\t\tcase 7:printf(\"中等\\n\");break;\r\n\t\tcase 6:printf(\"及格\\n\");break;\r\n\t\tcase 5:\r\n\t\tcase 4:\r\n\t\tcase 3:\r\n\t\tcase 2:\r\n\t\tcase 1:\r\n\t\tcase 0:printf(\"不及格\\n\");break;\r\n\t}\r\n\treturn 0;\r\n}", "Konwledge_Point": "注释", "Question": ["C语言编程题 输入一个百分制成绩，输出对应的五级制成绩“优秀”、“良好“、”中等“、”及格“、”不及格“，？小白求教 谢谢", ["输入一个百分制成绩，输出对应的五级制成绩“优秀”、“良好“、”中等“、”及格“、”不及格“，对应关系如下：", "\n优秀：90-100分；", "\n良好：80-89分；", "\n中等：70-79分；", "\n及格：60-69分", "\n不及格：分数低于60分。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;prime&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; k;\nk&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;lt;&amp;#61;x;i&amp;#43;&amp;#43;;) &lt;span class=\"hljs-comment\"&gt;//这里不是逗号啊&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;gt;x)\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;// 请在此添加代码&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;/********** Begin *********/&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;m);\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;prime&lt;/span&gt;(m);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no&amp;#34;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["求一个prime函数,判断一个正整数是否为素数，若是，函数返回1否则返回0，在主函数中输入一个正整数，，调用prime函数判断它是否为函数并输出", ["#include <stdio.h>", "#include<math.h>", "int prime(int x)", "{int i;float k;", "k=sqrt(x);", "for(i=2;i<=x,i++;)", "if(x%i==0) break;", "return 0;", "if(i>x)", "return 1;", "else", "return 0;", "}", "// 请在此添加代码", "/********** Begin *********/", "int main()", "{int m,n;", "scanf(\"%d\",&m);", "n=prime(m);", "if(n=1)", "printf(\"yes\");", "else", "printf(\"no\");", "\n", "return", " ", "0", ";\n", "\n", "}", "/********** End *********/", "程序陷入了死循环，如何解决？求助大佬，感谢感谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;本来就不能写&amp;#xff0c;git 上传不能填写的默认给你关的。安全信息问题&amp;#xff0c;没讲吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea中git提交时不能输入备注信息", ["idea中git提交时不能输入备注信息，怎么办呢，备注信息处不能点击和输入"]], "Tag": "程序设计"}
{"Answer": "因为char[6]和char[3]不能用你的模板T表示，它们也不是一个类型\r\n\r\n\r\n```\r\n#include&lt;iostream&gt; \r\nusing namespace std; \r\ntemplate &lt;class T&gt; \r\nvoid swap(T &amp;a,T &amp;b){\r\n\tT temp;\r\n\ttemp = a;\r\n\ta = b;\r\n\tb = temp;\r\n}\r\n\r\nint main(){\r\n\r\n\tstring s1 = \"Hello\", s2 = \"hi\";\r\n\r\n\tswap(s1,s2);\r\n\tcout &lt;&lt; s1 &lt;&lt; endl &lt;&lt; s2;\r\n}\r\n```", "Konwledge_Point": "注释", "Question": ["c++引用作为函数参数问题", ["#include", "\nusing namespace std;", "\n\n", "template  void swap(T &a,T &b){", "\n    T temp;", "\n    temp = a;", "\n    a = b;", "\n    b = temp;", "\n}", "\n\n", "int main(){", "\n\n", "char s1[] = \"Hello\",s2[] = \"hi\";\n\n\nswap(s1,s2);//为什么这样写不对\n", "\n\n", "}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;public static void main(String[] args)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    //父类Vehicle 引用指向子类Car对象&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    Vehicle v&amp;#61;new Car();&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    System.out.print(&amp;#34;实际调用的方法为&amp;#xff1a;&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    //调用子类方法&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    v.startUp();&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释题，请问怎么注释", ["3、读程序，添加注释，解释划线代码", "class Vehicle", "{", "    public Vehicle()//注释一个字段", "{", "   }", "    public void startUp()", "    {", "        System.out.println(\"一般车辆的启动方法！！\");//输出语句", "    }", "}", "class Car extends Vehicle//继承父类", "{", "    public void startUp(int i)", "    {", "        System.out.println(\"轿车的启动方法！！\");", "    }", " ", "public static void main(String[] args)", "{", "    Vehicle v=new Car();", "    System.out.print(\"实际调用的方法为：\");", "    v.startUp();", "}", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提示信息变不了英文&amp;#xff0c;那是环境提示的。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["IDEA的报错信息怎么设置为中文", ["IDEA2021.3，激活后build output变为中文，错误提示信息变为中文，其他的都是英文，请问这么吧提示信息变为英文。", "\n"]], "Tag": "程序设计"}
{"Answer": "@Bean 用在方法上，好处就是在方法里面可以写你想生成Bean的逻辑。如果flag = 1;生成new Bean(1) ，flag=2生成new Bean(2)。如果你没这种需求，直接装到容器中就是。", "Konwledge_Point": "注释", "Question": ["Spring的@Bean注解有什么好处？", ["Spring的@Bean注解有什么好处？", "\n为什么不直接加注解装到容器中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;26行末尾多了个分号&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["输出m到n之间的全部素数", ["问题遇到的现象和发生背景", "\n", "输出m到n之间的全部素数", "本题要求输出给定整数M和N区间内的全部素数，每行输出10个。素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。", "输入格式:", "输入在一行中给出两个正整数M和N（1≤M≤N≤500）。", "输出格式:", "输出素数，每个数占6位，每行输出10个。如果最后一行输出的素数个数不到10个，也需要换行。", "若输入的范围不合法，则输出\"Invalid.\"。", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "\n", "#", "include", "<stdio.h>", "\n", "//return 0不是素数", "\n\n\n\n", "int", " ", "panduansushu", "(", "int", " x)", ";\n", "int", " ", "main", "()", " \n", "{\n    ", "int", " m, n,count=", "0", ";\n    ", "scanf", "(", "\"%d %d\"", ", &m, &n);\n    ", "if", " (", "1", " <= m && m <= n && n <= ", "500", ")\n    {\n        ", "for", " (; m <= n; m++)\n        {\n            ", "if", " (", "panduansushu", "(m) == ", "1", ")\n            {\n                ", "printf", "(", "\"%6d\"", ", m);\n                count++;\n                ", "if", " (count % ", "10", " == ", "0", ")\n                    ", "printf", "(", "\"\\n\"", ");\n            }\n            \n            \n        }\n        ", "if", " (count % ", "10", " != ", "0", ");\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    ", "else", "\n        ", "printf", "(", "\"Invalid.\"", ");\n\n}\n", "int", " ", "panduansushu", "(", "int", " x)", "\n", "{\n    ", "int", " i=", "2", ";\n    ", "if", " (x == ", "1", ")\n        ", "return", " ", "0", ";\n    ", "if", " (x == ", "2", ")\n        ", "return", " ", "1", ";\n    ", "else", "\n    {\n        ", "for", " (; i <= x / ", "2", " + ", "1", "; i++)\n        {\n            ", "if", " (x % i == ", "0", ")\n                ", "return", " ", "0", ";\n\n        }\n        ", "if", " (i > x / ", "2", " + ", "1", ")\n            ", "return", " ", "1", ";\n    }\n}\n", "\n", "运行结果及报错内容", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主要是各种编码不同导致的&amp;#xff0c;不同平台或者不同个人pc使用的编码格式不同&amp;#xff0c;导致你要用别人的项目首先要了解他的文件编码格式&amp;#xff0c;这样类似中文这种编码方式影响极大的文件就可以运行&amp;#xff0c;你本地写的当然不会有问题&amp;#xff0c;因为都是使用同一种编码格式&amp;#xff0c;但是如果你想要从服务器那边获取数据的话就要了解服务器那边的编码格式&amp;#xff0c;不然不同的编码格式要么乱码&amp;#xff0c;要么就是运行不了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["python的py文件中有的不加# coding=gbk,会编译报错，有的不加没有问题", ["我自己写的.py文件里面也有中文注释和输出，文件头部没有加# coding=gbk，一直运行都是正常的。后来别人写的.py我拿来维护的时候发现不加# coding=gbk就会报错！网上写的文章也看了一大堆，还是不知道为啥！别发长的文章链接，回答简单易懂一些！谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The languages have similar feature-sets. The performance difference comes from the fact that Fortran says aliasing is not allowed, unless an EQUIVALENCE statement is used. Any code that has aliasing is not valid Fortran, but it is up to the programmer and not the compiler to detect these errors. Thus Fortran compilers ignore possible aliasing of memory pointers and allow them to generate more efficient code. Take a look at this little example in C:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void transform (float *output, float const * input, float const * matrix, int *n)\n{\n    int i;\n    for (i=0; i&amp;lt;*n; i++)\n    {\n        float x = input[i*2+0];\n        float y = input[i*2+1];\n        output[i*2+0] = matrix[0] * x + matrix[1] * y;\n        output[i*2+1] = matrix[2] * x + matrix[3] * y;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This function would run slower than the Fortran counterpart after optimization. Why so? If you write values into the output array, you may change the values of matrix. After all, the pointers could overlap and point to the same chunk of memory (including the &lt;code&gt;int&lt;/code&gt; pointer!). The C compiler is forced to reload the four matrix values from memory for all computations.&lt;/p&gt;\n\n&lt;p&gt;In Fortran the compiler can load the matrix values once and store them in registers. It can do so because the Fortran compiler assumes pointers/arrays do not overlap in memory.&lt;/p&gt;\n\n&lt;p&gt;Fortunately, the restrict keyword and strict-aliasing have been introduced to the C99 standard to address this problem. It's well supported in most C++ compilers these days as well. The keyword allows you to give the compiler a hint that the programmer promises that a pointer does not alias with any other pointer. The strict-aliasing means that the programmer promises that pointers of different type will never overlap, for example a &lt;code&gt;double*&lt;/code&gt; will not overlap with an &lt;code&gt;int*&lt;/code&gt; (with the specific exception that &lt;code&gt;char*&lt;/code&gt; and &lt;code&gt;void*&lt;/code&gt; can overlap with anything).&lt;/p&gt;\n\n&lt;p&gt;If you use them you will get the same speed from C and Fortran. However, the ability to use the restrict keyword only with performance critical functions means that C (and C++) programs are much safer and easier to write. For example, consider the invalid Fortran code: &lt;code&gt;CALL TRANSFORM(A(1, 30), A(2, 31), A(3, 32), 30)&lt;/code&gt;, which most Fortran compilers will happily compile without any warning but introduces a bug that only shows up on some compilers, on some hardware and with some optimization options.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["对于繁重的计算，Fortran 比 c 更容易优化吗？", ["\n\n", "From time to time I read that Fortran is or can be faster then C for heavy calculations. Is that really true? I must admit that I hardly know Fortran, but the Fortran code I have seen so far did not show that the language has features that C doesn't have.", "\n\n", "If it is true, please tell me why. Please don't tell me what languages or libs are good for number crunching, I don't intend to write an app or lib to do that, I'm just curious.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/146159/is-fortran-easier-to-optimize-than-c-for-heavy-calculations"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是解码问题&amp;#xff1f;装个vscode打开就不会乱码了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请问能否截图中文注释", ["能截图一下注释吗 我电脑打开之后中文注释都乱码了 没有注释部分地方看的不是很明白"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这道题选:D&amp;#xff0c;in在python中表示是否在的意思&amp;#xff0c;判断字符串是否在某个字符串中&amp;#xff0c;在返回true&amp;#xff0c;不在返回false.&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["S=“Hello”不正确的是？", ["S=“Hello”不正确的是？\nA:\" \" in s 是 True \t\t\t\t\nB:\"ll\" not in s 是 False \nC:\"L\" not in s 是 False \t\nD:\"l\" in s 是 True\n选什么？愁死了"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;header('Content-Type: text/plain; charset=UTF-8');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This just informs the browsers what kind of content you're going to send it and how it should treat it. It does not set the encoding of the actual content you're sending. It's completely up to you to fulfil your own promise. Your content is not going to magically transform from whatever to UTF-8 just because you set that header. If you tell the browser to treat the content as UTF-8, but you're sending it Latin-1 encoded data, of course it will break.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["将文件编码更改为UTF-8后，为什么会有效？", ["\n\n", "I faced a problem in displaying UTF-8 content (Tamil text) . ", "\n\n", "<?php\n// SAMPLE CODE\nheader('Content-Type: text/plain; charset=UTF-8');\necho 'Hello Loréane !';\n", "\n\n", "After i googled , changed the encoding of file in editor to 'UTF-8' from 'ANSI' , Now the problem solved i got the correct content in browser", "\n\n", "And my question is ", "\n\n", "Why it works after I changed the encoding type in file , even though i sent UTF-8 headers before that doesn't work ? ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//数列和 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,k;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//符号位 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; single&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//每项数列的乘积 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){  &lt;span class=\"hljs-comment\"&gt;//计算从1到n的数列和 &lt;/span&gt;\n        flag*&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//符号位运算 &lt;/span&gt;\n        \n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,k&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;k&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,j&amp;#43;&amp;#43;){  &lt;span class=\"hljs-comment\"&gt;//计算每项数列的乘积 &lt;/span&gt;\n            single*&amp;#61;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;)k/(k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  \n            &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;single&amp;#61;%lf,i&amp;#61;%d,j&amp;#61;%d,k&amp;#61;%d\\n&amp;#34;,single,i,j,k);&lt;/span&gt;\n        }\n        single*&amp;#61;flag;  &lt;span class=\"hljs-comment\"&gt;//每项数列乘积乘上符号位 &lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;single&amp;#61;%lf,i&amp;#61;%d\\n&amp;#34;,single,i);&lt;/span&gt;\n        \n        sum&amp;#43;&amp;#61;single;&lt;span class=\"hljs-comment\"&gt;//累加每项数列的乘积到和中 &lt;/span&gt;\n        single&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//每项数列的乘积置为1 &lt;/span&gt;\n    } \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s;\n    FILE *in,*out;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入n:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    s&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf\\n&amp;#34;&lt;/span&gt;,s);\n    in&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f:\\\\in2019-2-3-2.dat&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    out&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f:\\\\out2019-2-3-2.dat&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!&lt;span class=\"hljs-built_in\"&gt;feof&lt;/span&gt;(in))\n    {\n        &lt;span class=\"hljs-built_in\"&gt;fscanf&lt;/span&gt;(in,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(out,&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(n));\n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(in);\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(out);\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请教一道C语言的数列求和题", ["函数fun是根据输入n，求数列s=1/2- (1/2) * (3/4)+(1/2) * (3/4) * (5/6)-(1/2) * (3/4) * (5/6) * (7/8)+. . . 前n项的和 ，", "例如输入10 ，结果输出为0.206936。要求在/", "Begin", "/与/", "End", "/之间编写程序，其它部分不得增删语句。", "\n", "#include<stdio.h>", "#include<stdlib.h>", "double fun(int n)", "{", "/", "Begin", "/", "\n", "/", "End", "/", "}", "int main()", "{", "    int n;", "    double s;", "    FILE *in,*out;", "    printf(\"输入n:\");", "    scanf(\"%d\",&n);", "    s=fun(n);", "    printf(\"%lf\\n\",s)", "    in=fopen(\"in2019-2-3-2.dat\",\"r\");", "    out=fopen(\"out2019-2-3-2.dat\",\"w\");", "    while(!feof(in))", "    {", "        fscanf(in,\"%d\",&n);", "        fprintf(out,\"%lf\\n\",fun(n));", "    }", "            fclose(in);", "            fclose(out);", "    system(\"pause\");", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;~是按二进制位取反&lt;br /&gt;~123取反之后是 -124&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["python中～123 是啥意思", ["print（“～123 =”+str（～123））"]], "Tag": "程序设计"}
{"Answer": "现在后台随便输出一个对象的属性，看有没有内容，你的实体有没有getter setter", "Konwledge_Point": "注释", "Question": ["已配置ResultMap，但Mybatis查询结果List长度正确，值为空", ["使用xml写sql，配置了ResultMap，如下", "\n\n", "<mapper namespace=\"com.example.demo.dao.UsersDao\">\n    <resultMap id=\"UsersMap\" type=\"com.example.demo.entity.Users\">\n        <result column=\"id\" jdbcType=\"VARCHAR\" property=\"id\" />\n        <result column=\"name\" jdbcType=\"VARCHAR\" property=\"name\" />\n        <result column=\"password\" jdbcType=\"VARCHAR\" property=\"password\" />\n        <result column=\"mobile\" jdbcType=\"VARCHAR\" property=\"mobile\" />\n    </resultMap>\n\n    <select id=\"ListUsers\" resultMap=\"UsersMap\">\n        select * from users;\n    </select>\n</mapper>\n", "\n\n", "数据库的内容如下", "\n但是使用@ResponseBody注解执行结果为", "\n长度是对的，有5条数据，但是结果全部为空", "\n请问这是为什么？之前有帖子说是名称对应不上，但我检查了好几遍。请问应该如何修改？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用自ChatGPT&lt;/p&gt;\n&lt;p&gt;Java的类和方法的注释要使用文档注释&amp;#xff0c;因为文档注释是一种特殊的注释格式&amp;#xff0c;可以被一些工具解析并生成文档。文档注释有以下几个用途&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;自动生成API文档&amp;#xff1a;文档注释可以被Javadoc等工具解析&amp;#xff0c;自动生成代码的API文档&amp;#xff0c;方便其他开发者阅读和使用代码。&lt;/li&gt;&lt;li&gt;提供代码的使用说明&amp;#xff1a;文档注释可以清晰地描述类、方法、字段的作用和用法&amp;#xff0c;方便其他开发者使用代码。&lt;/li&gt;&lt;li&gt;方便代码的维护和修改&amp;#xff1a;文档注释可以记录代码的设计思路、实现细节等信息&amp;#xff0c;方便代码的维护和修改。&lt;/li&gt;&lt;li&gt;提高代码的可读性和可维护性&amp;#xff1a;文档注释可以增加代码的可读性&amp;#xff0c;使代码更易于理解和修改。同时&amp;#xff0c;规范的文档注释也可以提高代码的可维护性&amp;#xff0c;使代码更易于维护和升级。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "注释", "Question": ["Java什么时候用文档注释", ["为什么Java的类和方法的注释要使用文档注释，文档注释有什么用？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解析的样式可以通过GsonFormatPlus 插件的设置自定义。支持几种生成模式&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["AndroidStudio开发 GsonFormatPlus生成对应解析的类属性 fasterxml.jackson报错爆红", ["问题遇到的现象和发生背景", "\n", "使用GsonFormatPlus生成的类属性代码，上面有个注解，报错，androidstudio查找也没找到对应的以来", "\n", "想知道这个是什么？json吗？", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "\n", "@com", ".fasterxml.jackson.", "annotation", ".JsonProperty(", "\"city\"", ")\n    ", "private", " String city;\n    ", "@com", ".fasterxml.jackson.", "annotation", ".JsonProperty(", "\"temp\"", ")\n    ", "private", " String temp;\n    ", "@com", ".fasterxml.jackson.", "annotation", ".JsonProperty(", "\"weather\"", ")\n    ", "private", " String weather;\n    ", "@com", ".fasterxml.jackson.", "annotation", ".JsonProperty(", "\"pm\"", ")\n    ", "private", " String pm;\n    ", "@com", ".fasterxml.jackson.", "annotation", ".JsonProperty(", "\"wind\"", ")\n    ", "private", " String wind;\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注释代码的快捷键是ctrl&amp;#43;/&lt;br /&gt;当鼠标在注释的那一行按下快捷键&amp;#xff0c;注释当前行代码&amp;#xff0c;鼠标移至下一行&lt;br /&gt;当选中这一行代码&amp;#xff0c;按下注释快捷键后&amp;#xff0c;注释当前行代码&amp;#xff0c;鼠标不换行&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/47461031244615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/305520312446138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;大部分编辑器都是这样的&amp;#xff0c;不管哪一个注释都不影响你做开发&amp;#xff0c;不用太在意&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["webstrom怎么设置注释完不换行呀？", ["vs code注释完不换行，webstrom注释完直接换行了， 各位前端大牛，求解答谢谢🙏。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果设置没错&amp;#xff0c;可能是pycharm安装问题&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["pycharm在python script设置头部后不能显示", ["pycharm在python script设置头部后不能显示，新建一个文件也不能显示。", "就是在settings里面设置的，试了好几次都不可以。"]], "Tag": "程序设计"}
{"Answer": "\"$1\":输入的参数  \r\n\r\n   -n \"$1\":输入参数不为null\r\n   \r\n  -a 文件：如果文件存在为真。 \r\n\r\n\r\n  -z STRING: 为真 如果 \"STRING\"的长度是零。", "Konwledge_Point": "注释", "Question": ["问个关于shell的问题，这句判断语句是什么意思", ["if [ -n \"$1\" -a -z \"${1//[0-9]/}\" ]\nthen ...\n", "\n\n", "这句判断语句是什么意思？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nif &lt;span class=\"hljs-strong\"&gt;__name__&lt;/span&gt; &amp;#61;&amp;#61; &amp;#39;&lt;span class=\"hljs-strong\"&gt;__main__&lt;/span&gt;&amp;#39;:\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["入门问题求解答一下，下面这个代码中输出不了结果，", ["\n", "还请帮忙解答一下，刚学脑壳有点浆糊了。实在找不到方法了，头疼啊。"]], "Tag": "程序设计"}
{"Answer": "鼠标悬停放上去看报的什么错误", "Konwledge_Point": "注释", "Question": ["为什么这两个地方报错", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以在else if前面加阿&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;if(){}\n/////////////66666\nelse if(){}&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["在if…else代码块如何解决使用行尾注释？", ["阿里巴巴Java开发手册中要求不使用行尾注释，但在类似if…else代码块（尤其是else代码块前）往往需要加入注释，这时该如何解决？", "\n\n", "\n\n", "如图所示，if的注释可以放if语句上面，但else的注释3个位置都不合适，该怎么处理？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把别的c或cpp文件里的main改成main1 2 3 4 5不就行了。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["各位学长，visual studio 2022 中屏蔽一段代码要怎么操作？", ["情况如下，我刚开始学C，我想在一个项目文件里写多个程序代码，但是一个项目里只能有一个main（）如果我  继续写其他程序，运行起来就会报错（main已经在多个项目中定义，和找到一个或多个多重定义的符号），我目前只能把写好的程序删除了再继续写下一个，我想能不能把我写好的那段代码给屏蔽了，然后不影响我写的其他代码的运行？目前我使用的编译器是visual studio 2022 版本。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;% Convolutional Neural Network settings  CNN卷积神经网络参数设置&lt;/span&gt;\n    layers &amp;#61; [imageInputLayer([M N S]);    &lt;span class=\"hljs-comment\"&gt;%定义图像输入层&lt;/span&gt;\n              convolution2dLayer(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;Padding&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;%二维卷积层&lt;/span&gt;\n              batchNormalizationLayer();  &lt;span class=\"hljs-comment\"&gt;%批量归一化层&lt;/span&gt;\n              reluLayer();   &lt;span class=\"hljs-comment\"&gt;%ReLU函数作为激活函数&lt;/span&gt;\n              maxPooling2dLayer(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;Stride&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);   &lt;span class=\"hljs-comment\"&gt;%最大池化层&lt;/span&gt;\n              fullyConnectedLayer(Nw);  &lt;span class=\"hljs-comment\"&gt;%全连接层&lt;/span&gt;\n              softmaxLayer();  &lt;span class=\"hljs-comment\"&gt;%softmax 层对输入应用 softmax 函数&lt;/span&gt;\n              classificationLayer()];    &lt;span class=\"hljs-comment\"&gt;%分类输出层&lt;/span&gt;\n &lt;span class=\"hljs-comment\"&gt;% get training/testing input  %获取训练集和测试集&lt;/span&gt;\n    K &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;%设置for循环层数&lt;/span&gt;\n    cv &amp;#61; cvpartition(T,&lt;span class=\"hljs-string\"&gt;&amp;#39;kfold&amp;#39;&lt;/span&gt;,K);  &lt;span class=\"hljs-comment\"&gt;%20% for testing&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%cvpartition在数据集上定义一个随机分区。使用此分区来定义训练和测试集,以使用交叉验证来验证统计模型。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%用于training提取训练指标和 test提取测试指标以进行交叉验证。用于 定义与给定对象repartition相同类型的新随机分区。 &lt;/span&gt;\n    k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;%  以下均为数据赋值语句&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:K\n    trainIdx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;find&lt;/span&gt;(training(cv,k));\n    testIdx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;find&lt;/span&gt;(test(cv,k));\n    trainCsi &amp;#61; csi_tensor(:,:,:,trainIdx);\n    trainWord &amp;#61; word(trainIdx,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    testCsi &amp;#61; csi_tensor(:,:,:,testIdx);\n    testWord &amp;#61; word(testIdx,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    valData &amp;#61; {testCsi,testWord};\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["Matlab代码段求注释", ["求每行注释！", "万分感谢！", "谢谢啦！", "麻烦啦呀～", "初学者什么都不会，要一点点学啦～"]], "Tag": "程序设计"}
{"Answer": "Settings-&gt;Editor-&gt;CodeStyle-&gt;Java-&gt;Tab&amp;Indents 钩上UseTabCharacter 去掉SmartTabs就好了", "Konwledge_Point": "注释", "Question": ["IDEA 注释区域里 自动将tab制表符转成空格的问题 ", ["在注释区域里 按tab后 删除不是按一个tab删除 而是按照空格删除", "\n这样要回到原来的位置 要按很多下删除键 很麻烦 请问这个在idea的哪里可以设置", "\n请注意 我说的是在 注释区域里"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你自己注释里面不是写了么&amp;#xff1f;“通过对象的引用来访问对象成员变量和成员方法&amp;#xff0c;并进行赋值”。赋值的意思&amp;#xff1a;就是把你这个20&amp;#xff0c;给了r1.temp&amp;#xff0c;你输出r1.temp当然就变20了。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么当把后面的注释掉，它运行的结果是10？而没有注释的时候它显示的是后面的20？", ["为什么当把后面的注释掉，它运行的结果是10？而没有注释的时候它显示的是后面的20？为什么他有时候显示的是类里面赋值的结果，而有时候显示的是函数里面显示的结果？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;原生的貌似只还有FIXME&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["除了#TODO在pycharm还有哪些高亮的注释？", ["除了#TODO在pycharm还有哪些高亮的注释？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/413332417836151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["有没有哪个师傅帮我代码写个注释", ["帮给代码写几个注释"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你现在是进入了编写 提交信息的步骤&amp;#xff0c;&lt;br /&gt;你直接输入提交日志&amp;#xff0c;&lt;br /&gt;然后 按两下esc&amp;#xff0c;&lt;br /&gt;按:&lt;br /&gt;输入wq&amp;#xff0c;&lt;br /&gt;按enter保存退出即可进行下一步操作&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["git commit 后，再输入命令就无效了。", ["我在git 到gitee上，git commit 后，再输入命令就无效了。", "\n", "\n", "之前操作了", "git init", "git remote add origin 网址", "git add .", "git commit 这一步之后，就出现那个问题。回车也没有用了。再git push 也没有用了"]], "Tag": "程序设计"}
{"Answer": "Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates\r\n\r\n在这个界面有个CheckBox [ Automatically add comments for new methods and types ]，勾选它就可以了。\r\n\r\n同时你还可以修改注释模板。", "Konwledge_Point": "注释", "Question": ["Eclipse 自动生成类的注释", ["新建一个类，怎么自动生成类的注释，默认情况下 generate comments 没有勾选上，怎么设置 默认才会勾选上"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ns &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;205676543&amp;#39;&lt;/span&gt;\n\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.isalpha&lt;/span&gt;():\n        ch &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.lower&lt;/span&gt;()\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ch not &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt;:\n            &lt;span class=\"hljs-selector-tag\"&gt;li&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(ch)\n            \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;.join(li)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["寻找字符串中的英文字符", ["\n", "  寻找字符串中的英文字符", "\n", "问题描述", "打开程序sy4-3.py，实现程序功能：从键盘输入字符串，找出里面的字母，不区分大小写，重复的只输出一次。", "具体要求", "(1)输入一个字符串，建立一个空列表li。", "(2)下标遍历字符串中每一个字符，如果是字母，且列表li中不存在，不区分大小写，则追加到列表li中。", "(3)连续输出列表li中的字符不空格，不换行。", "(4)按要求对程序中的下划线进行填空(用填空内容代替下划线)，调试并运行。", "串中的英文字符", "请问有什么错误？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在 Java 中&amp;#xff0c;方法内部定义的基本类型变量需要进行初始化才能使用&amp;#xff0c;因此 &lt;code class=\"language-javascript\"&gt;double avg &amp;#61; 0;&lt;/code&gt; 用来初始化变量 &lt;code class=\"language-javascript\"&gt;avg&lt;/code&gt;&amp;#xff0c;如果不想初始化也可以改成 &lt;code class=\"language-javascript\"&gt;double&lt;/code&gt; 的包装类型 &lt;code class=\"language-javascript\"&gt;Double&lt;/code&gt;。&lt;br /&gt;&lt;code class=\"language-javascript\"&gt;%&lt;/code&gt; 在 &lt;code class=\"language-javascript\"&gt;System.out.printf()&lt;/code&gt; 方法中用于对变量进行格式化&amp;#xff0c;具体到 &lt;code class=\"language-javascript\"&gt;%.2f&lt;/code&gt;&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;.2&lt;/code&gt; 表示小数点后保存两个小数&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;f&lt;/code&gt; 表示浮点数。因此打印出来会小显示两位小数。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释里面的问题求解求解", ["请问注释里面的问题求解，我搞不懂  求详细的解答  能向外扩展知识便૧(●´৺`●)૭更好了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将新创建结点放到头结点\nvoid ListPushFront(Node** pHead, DataType data)\n{\n    Node* NewNode &amp;#61; ListCreatNode(data); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;创建结点&amp;#xff08;值为data&amp;#xff09;\n    NewNode-&amp;gt;_pNext &amp;#61; (*pHead); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将头结点赋值给新结点的Next指针&amp;#xff0c;即新结点为头结点\n    *pHead &amp;#61; NewNode; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将新结点赋值给头指针&amp;#xff0c;即新结点为头结点\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将头结点删除\nvoid ListPopFront(Node** pHead)\n{\n    Node* pDel &amp;#61; NULL;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((*pHead) &amp;#61;&amp;#61; NULL) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果头指针为NULL&amp;#xff0c;则直接返回\n    {\n        return;\n    }\n    pDel &amp;#61; *pHead; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将头结点赋值为pDel\n    *pHead &amp;#61; pDel-&amp;gt;_pNext; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将pDel的Next指针赋值给pHead\n    free(pDel);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;释放pDel空间\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["c语言代码，注释写一下", ["刚刚开始，学习一年", "单链表的代码，C语言的，", "来个哥", "帮我写个注释", "要详细一点的", "谢谢各位帮忙", "给大家磕个头"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一开始从0000H处进入。之后SJMP跳转到MAIN处。&lt;br /&gt;在MAIN:处设置位IT0,EX0,PX0和EA&amp;#xff0c;相当于打开了IT0中断&amp;#xff0c;EX0中断&amp;#xff0c;PX0中断和总中断。&lt;br /&gt;之后赋值A为FF&amp;#xff0c;停机等待。&lt;br /&gt;当入口地址为003的中断到来之后&amp;#xff0c;执行SJMP LED。&amp;#xff0c;跳转到LED label处。&lt;br /&gt;LED: CPL A&amp;#xff0c;将A的内容取反&amp;#xff0c;即FF变为00。&lt;br /&gt;把A赋给P1&amp;#xff0c;也就相当于P1&amp;#61;0x00。&lt;br /&gt;以后来一次中断&amp;#xff0c;翻转一次A&amp;#xff0c;也就是翻转一次P1。&lt;br /&gt;明白了吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["51单片机汇编程序注释", ["能不能帮忙加一下注释，看不太懂这个", "ORG 0000H", "SJMP MAIN", "ORG 0003H", "SJMP LED", "ORG 0030H", "MAIN:SETB IT0", "SETB EX0", "SETB PX0", "SETB EA", "MOV A,#0FFH", "SJMP $", "LED:CPL A", "MOV P1,A", "RETI", "END"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;请点击 &amp;#xff1a; Edit -&amp;gt; Find -&amp;gt; Find in Files -&amp;gt; 选择漏斗筛选按钮 -&amp;gt; excet Comments&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/566100939376134.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;然后看我们的操作如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/066410939376137.gif\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请问搜索能跳过注释中的结果吗", ["请问android studio中进行搜索abcd，希望跳过注释中的abcd，只搜索有效的代码中的abcd，请问有这个选项的吗？我试了一下Find in Path，Scope ， Project Source Files，也会将注释中的abcd搜出来。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大神帮帮忙&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea单行注释颜色为什么改变不了", ["\n", "idea单行注释颜色为什么改变不了，什么颜色都修改过，就是不起作用，看网上就是修改的这呀"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在修改.kpr文件时&amp;#xff0c;修改.cm文件&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于基恩士PLC程序重命名后，注释丢失问题", ["在编程完成后关闭软件然后在磁盘重命名程序名字，再通过PLC打开后发现全局中的R类型的继电器和MR辅助继电器的注释丢失。", "软件为KV STUDIO KV7500", "尝试过将改过的名字改回原来的状态，后面注释又回来了。", "想要成功修改程序名字，且注释不丢失。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;添加了啥&amp;#xff0c; 把添加的东东注释掉&amp;#xff0c; 看看还是否正常。&lt;br /&gt;如果正常&amp;#xff0c;说明环境没问题&amp;#xff0c; 仔细检查你新添加的内容。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["我做了个可视化地图，为什么jupyter上一次还能跑出来图像，下一次瞬间就不能了", ["昨天还不可以，今天早上起来跑了一下就出了图像了。", "今天添了一些东西，也没有报错，就是加了些参数。添之前还能出图像的，添之后就不出图像了。我用的jupyter。", "想问一下是什么原因啊。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Actually revisiting your code it works! What version of Go are you using? Maybe you need to rebuild your code.&lt;/p&gt;\n\n&lt;p&gt;The decision of what &lt;code&gt;Usage&lt;/code&gt; function to call is in the &lt;code&gt;flag.go&lt;/code&gt; source file, &lt;a href=\"http://golang.org/src/flag/flag.go?#L708\" rel=\"noreferrer\"&gt;line 708&lt;/a&gt;, unexported function &lt;code&gt;usage()&lt;/code&gt; (this is from Go 1.4):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (f *FlagSet) usage() {\n    if f.Usage == nil {\n        if f == CommandLine {\n            Usage()\n        } else {\n            defaultUsage(f)\n        }\n    } else {\n        f.Usage()\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This tells if the &lt;code&gt;FlagSet.Usage&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, it will be called. If it is not called for you, it's most likely you're using a Go version prior to 1.4 (which you confirmed in your comment).&lt;/p&gt;\n\n&lt;p&gt;But since you're using the default &lt;code&gt;flag.CommandLine&lt;/code&gt; flagset, you can simply write:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Note \"flag.Usage\" instead of \"f.Usage\"\n\nflag.Usage = func() {\n    fmt.Println(\"foo bar\")\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Golang标志库：无法覆盖打印命令行用法的用法功能", ["\n\n", "I am working on a simple command line tool and I found the default Usage message a bit lacking. I want to define my own and I think I am doing it right I am referring to ", "this example", ".", "\n\n", "I commented out most of the code I had written so the file containing the main function now looks like this:", "\n\n", "package main\n\nimport (\n    \"flag\"\n    \"fmt\"\n    \"os\"\n)\n\nfunc main() {\n    // set the custom Usage function\n    setupFlags(flag.CommandLine)\n    // define flags...\n    // then parse flags\n    flag.Parse()\n    // custom code that uses flag values...\n}\n\nfunc setupFlags(f *flag.FlagSet) {\n    f.Usage = func() {\n        fmt.Println(\"foo bar\")\n    }\n}\n", "\n\n", "It seems like this should work, but it doesn't. When running ", "<binary> -h", " I get the default usage message and not my custom ", "foo bar", " message that I defined in my custom function. I am using Go version 1.3.3 on OSX. I found ", "this commit", " but it is for Go 1.4rc2.", "\n\n", "What am I doing wrong?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是不是自己设置过live template 然后触发键是enter&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea多行注释出现这种问题怎么处理", ["IDEA出现这种情况要怎么设置，多行注释的时候出现问题", "一回车就出现一个*/"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;完整的代码是怎么样的&amp;#xff0c;例如第20行代码处是否多打了引号&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["多行注释怎么是绿色的？还运行失败了？", ["为什么我和视频中输入的一样，视频中输入的多行注释是银白色的正确的，而我的多行注释是绿色的？结果还运行不成功？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你改一下字体&amp;#xff0c;&amp;#xff08;工具--编译器选项--显示--编辑器字体&amp;#xff0c;最好改成consolas字体&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["devc++汉字显示横向", ["用的devc++，汉字显示横向，很奇怪，哪位能教我怎么设置回来"]], "Tag": "程序设计"}
{"Answer": "我们有两种方式表示小数，一种是浮点一种是定点。\r\n定点最简单，只要约定好小数点的位置，就可以用整数表示了，比如定点在第3位：123.456可以用整数123456表示，结果只要/1000就可以了。\r\n这种表示法的局限就是，只能表示很小范围的小数，比如0.00123456，定点3位只能表示为0.001。但是优点是计算速度快，并且没有精度误差。\r\n浮点数由4个部分组成，阶码，阶码符号，尾数，尾数符号4部分表示。我们用十进制表示-0.0012345\r\n阶码（指数），阶码符号，尾数（底），尾数符号分别是 3 - 12345 -。也就是1.2345 x 10^ -3\r\n再比如1234500000，可以表示为1.2345 x 10^9，这里阶码符号和尾数符号都是正的。阶是9\r\n当然，在计算机内，我们用的是二进制，阶码也是2的幂。\r\n我们有不同的规范，对于一个占用指定二进制位的浮点数怎么表示，有不同的规范。很好理解，如果阶码用的二进制位多，那么表示的范围就大，如果尾数用的二进制位多，那么就更精确。", "Konwledge_Point": "注释", "Question": ["关关关于C语言基础问题", ["浮点数是指什么，不包括整数对吗，是指小数吗，小数点可移动的小数？指数吗，劳烦举例"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.35行&amp;#xff0c;你要用string类型乘以int类型&amp;#xff0c;然后赋值给doble类型的变量。&lt;br /&gt;2.39行&amp;#xff0c;&amp;#xff08;&amp;#xff09;这两个应该输入的是英文括号&amp;#xff0c;不是中文的。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["如图，出现错误提示求解", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;点击notepad&amp;#43;&amp;#43;上方的编码按钮&amp;#xff0c;再点击转为ANSI编码&amp;#xff0c;再去编译运行就可以了&amp;#xff0c;如有帮助&amp;#xff0c;请点击采纳哦&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["notepad++ 的代码用win＋R控制台运行  出现错误 编码 UTF-8的不可映射字符", ["代码出现中文，然后运行代码时就出现了notepad++ 编码 UTF-8的不可映射字符的错误", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不就是a*b条路线么 &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["旅游路线c++注释讲解", ["国庆节期间，住在A城市的小明一家打算去B城市和C城市旅游，已知A城市到B城市的路线有a条，从B城市到C城市的路线有b条，请问，小明一家总共有多少条路线可以选择？", "输出", "两个整数，分别是从A到B的路线数，和从B到C的路线数", "输入", "一个数，从A到C的路线总数", "注释讲解，采纳安排"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有没有可能是没有被使用&amp;#xff1f;&lt;br /&gt;例如某些方法在没有被使用到的时候也是灰色的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/79375305015615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea实体类中加了@Data注解 参数颜色还是灰色  但是不影响功能", ["idea实体类中加了", "@Data注解 ", "参数颜色还是灰色  但是不影响功能  ", "\n", "我看着灰色好难受  怎么改呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;comom_header.html  可能因为你得这&amp;#xff0c;引用那是php文件得啊&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["引用的php代码莫名奇妙被注释", ["引用的php代码莫名奇妙被注释", "\n", "问题描述：我有很多的html需要引用相同的js和css，所以就用写了一个公用的头。", "问题：有些页面可以正常使用，有些页面就会被神秘力量给注释掉", "用法举例：", "在a.php中：", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n", "<", "head", ">", "\n", "<?php", "\n      define(", "\"DOCUMENT_ROOT\"", ",(", "$_SERVER", "[", "'DOCUMENT_ROOT'", "]??dirname(", "__FILE__", ")).DIRECTORY_SEPARATOR);\n      ", "require_once", "(DOCUMENT_ROOT.", "\"comom_header.php\"", ");\n      \n", "?>", "\n ", "<", "script", " ", "src", "=", "\"/js/echarts.min.js\"", ">", "</", "script", ">", "\n", "</", "head", ">", "\n\n\n", "\n", "\n", "一切正常，审查元素：", "\n", "\n", "在b.php中：", "\n", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", ">", "\n", "<", "head", ">", "\n", "<?php", "\n  define(", "\"DOCUMENT_ROOT\"", ",(", "$_SERVER", "[", "'DOCUMENT_ROOT'", "]??dirname(", "__FILE__", ")).DIRECTORY_SEPARATOR);\n  ", "require_once", "(DOCUMENT_ROOT.", "\"comom_header.php\"", ");\n  ", "?>", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n", "\n", "\n", "不正常了，审查元素：_", "\n", "\n", "被神秘力量注释了。", "\n", "代码都是一样的，但是不知道为什么在a.php可以运行，在b.php就不行", "排查了很久也没想出来为什么，请懂得人帮忙分析一下，提供一个思路也可以的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对散点图添加图例的方法可参考这里的写法&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/sdaujz/article/details/106305451\" id=\"textarea_1638804770618_1638805492673_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/sdaujz/article/details/106305451&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;关于文字标注可参考&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_43632109/article/details/106189122\" id=\"textarea_1638804770618_1638805492673_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_43632109/article/details/106189122&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于matplotlib如何注释的问题", ["问题遇到的现象和发生背景", "\n", "不知道如何在matplotlib上添加想要的信息", "\n", "问题相关代码，请勿粘贴截图", "\n", "plt", ".xlabel", "(", "\"SAT_ALT\"", ", fontsize=", "15", ")\nplt", ".ylabel", "(", "\"DIST_PCU_IN_I\"", ", fontsize=", "15", ")\nplt", ".scatter", "(t1", ".SAT_ALT", ",t1", ".DIST_PCU_IN_I", ",alpha=.", "7", ",", "color", "=", "'red'", ")\nplt", ".scatter", "(t2", ".SAT_ALT", ",t2", ".DIST_PCU_IN_I", ",alpha=.", "7", ",", "color", "=", "'blue'", ")\nplt", ".scatter", "(t3", ".SAT_ALT", ",t3", ".DIST_PCU_IN_I", ",alpha=.", "7", ",", "color", "=", "'orange'", ")\nplt", ".scatter", "(t4", ".SAT_ALT", ",t4", ".DIST_PCU_IN_I", ",alpha=.", "7", ",", "color", "=", "'green'", ")\nplt", ".scatter", "(t5", ".SAT_ALT", ",t5", ".DIST_PCU_IN_I", ",alpha=.", "7", ",", "color", "=", "'plum'", ")\nplt", ".show", "\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "查了不少资料，但不知道如何解决", "\n", "我想要达到的结果", "\n", "类似于这种，针对不同的颜色可以在散点图上注释。比如说，可以注释红色点代表A区间，蓝色代表B区间。（注释内容可以自己填写）"]], "Tag": "程序设计"}
{"Answer": "原因有很多种 \r\n1。Web.xml未初始化问题 \r\n少了一个 &lt;load-on-startup&gt; 0 &lt;/load-on-startup&gt; \r\n这样开始是没有加载这个类，就没有初始化struts-config.xml，所以找不到 \r\nactionmappings   or   actionformbeans   collection。 \r\n\r\n2。struts-config.xml问题 \r\n\r\n3。jar包不全或版本不对 \r\n也有可能导致这个问题，从stuts例子里面拷过来就好了。struts1.1自带共10个jar包。 \r\n\r\n4。编译问题 \r\n有可能Action和Formbean没有编译，也会有这个问题，检查一下有没有对应的class文件就好。class路径不对可能也会导致这个问题。 \r\n\r\n5。版本问题 \r\n用的servlet容器和struts版本不对或这两个版本协调有问题。 \r\n\r\n6.jdk版本问题\r\n\r\n估计你的是jdk版本问题或者是jar包问题", "Konwledge_Point": "注释", "Question": ["java程序部署在WebSphere中的问题", ["我有一个WEB程序,把它打成war包  ,然后在websphere中部署,  请求时报错", "\nD:\\IBMWebSphere\\profiles\\default\\installedApps\\OuYangNode01Cell\\mylog_war.ear\\mylog.war", "\n\n", "Exception", "\n[08-7-4 14:08:52:000 CST] 00000022 WebApp        E   SRVE0026E: ［Servlet 错误］－［/index.jsp］：javax.servlet.jsp.JspException: Cannot find ActionMappings or ActionFormBeans collection", "\n\n", "访问一个一个什么都没写的HTML文件可以成功", "\n[b]问题补充：[/b]", "\n这个程序部署在TOMCAT里可以成功运行", "\n[b]问题补充：[/b]", " 0  有这个参数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路&amp;#xff1a;设计引物和TaqMan探针&amp;#xff1a;需要根据CXCR5基因的序列信息来设计引物和TaqMan探针&amp;#xff0c;以便在实时荧光定量PCR技术中检测CXCR5基因的表达水平。&lt;/p&gt;\n&lt;p&gt;查找CXCR5所在细胞位置&amp;#xff1a;可以使用转录组数据和免疫荧光技术来确定CXCR5在细胞中的位置。&lt;/p&gt;\n&lt;p&gt;参与细胞生物学功能&amp;#xff1a;可以搜索数据库&amp;#xff08;如GeneCards、UniProt、PubMed等&amp;#xff09;&amp;#xff0c;了解CXCR5的功能&amp;#xff0c;并选择任意一种功能注释&amp;#xff0c;在图表中表示该注释在生物过程中的位置。&lt;/p&gt;\n&lt;p&gt;查找CXCR5参与的代谢或细胞信号通路&amp;#xff1a;可以搜索相关文献&amp;#xff0c;以了解CXCR5参与的代谢或细胞信号通路。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于#数据挖掘#的问题：查找CXCR5所在的细胞位置以及参与的细胞生物学功能，选择任一种功能注释，以图表的形式表示这一注释在整个生物过程中所处的位置", ["设计一组应用在实时荧光定量 PCR 技术中的引物和 TaqMan 探针，可以用来检测人趋化因子受体CXCR5基因的表达水平；查找CXCR5所在的细胞位置以及参与的细胞生物学功能，选择任一种功能注释，以图表的形式表示这一注释在整个生物过程中所处的位置；另外，查找人CXCR5参与的代谢或细胞信号通路。要求有完整的过程和说明。"]], "Tag": "程序设计"}
{"Answer": "注解的作用好像是把配置文件的内容移动到代码上面来。虽然配置文件是为了减少修改代码，把可能改变的都写在配置文件。但是很多情况是在配置文件配置了后就不会再改变的，这样不如放在代码上面，不用代码和配置文件来回切换。\r\n还有就是只有注解时做不了东西的。是通过反射读取到注解的键值对，然后根据键值对来做相应的事情。\r\n一个是读取类上面的信息，一个是读取配置文件的信息。你喜欢敲代码的时候类和配置文件来回切换修改就用读取配置文件的方式。你喜欢直接用注解就直接用注解。对注解的解析和对配置文件的解析通常都有人做了，所以我们只在配置文件修改，或者在类上添加注解就可以。\r\n我觉得注解的优势还是不用在代码和配置文件中来回切换，劣势是万一要修改，使用配置文件就只修改配置文件，使用注解要改代码上的注解。（代码写了后最好要不改或少改）", "Konwledge_Point": "注释", "Question": ["我知道java注解，原理是反射，可是没看出来注解的便利，理解的不好，求大神点化？？？", ["我知道java注解，原理是反射，可是没看出来注解的便利，理解的不好，求大神点化？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;这个是注释&amp;#xff0c;不影响编译&amp;#xff0c;可以&lt;strong&gt;不用管它&lt;/strong&gt;;&lt;/li&gt;&lt;li&gt;IDEA会根据JavaDoc的规范来检查注释&amp;#xff0c;&amp;#64;date不在JavaDoc定义的标签中&amp;#xff1b;&lt;/li&gt;&lt;li&gt;提示换成&amp;#64;date&amp;#xff0c;其实就是用&amp;#64;的转义字符替换&amp;#64;字符&amp;#xff08;&amp;#64;的十进制ASCII码就是64&amp;#xff09;&amp;#xff0c;作为普通文本而非标签处理&amp;#xff1b;&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "注释", "Question": ["刚学Java，这里为啥要求我换成&#64@date?", ["刚学Java，这里为啥要求我换成&#64", "@date? ", "IDEA有什么特殊要求吗？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一句注释&amp;#xff1a;&lt;br /&gt;创建哈希表&amp;#xff08;一种存储结构&amp;#xff09;&amp;#xff0c;存储键值对的集合&amp;#xff0c;后面六条语句就是把键值对存进map中&lt;br /&gt;第二句注释&amp;#xff1a;&lt;br /&gt;获取map&amp;#xff08;哈希表中&amp;#xff09;键的集合&lt;br /&gt;第三句注释&amp;#xff1a;&lt;br /&gt;为什么不是按顺序的呢&amp;#xff1f;因为里面是有一种映射规则的&amp;#xff0c;术语叫哈希函数&lt;br /&gt;【0】【1】【2】【3】【4】【5】&lt;br /&gt;六个位置&lt;br /&gt;我存储1&amp;#xff0c;2&amp;#xff0c;3&amp;#xff0c;4&amp;#xff0c;5&amp;#xff0c;6&lt;br /&gt;假设我哈希函数为f(x)&amp;#61;x%3,&lt;br /&gt;那么&lt;br /&gt;f(1)&amp;#61;1,放到一号位&lt;br /&gt;f(2)&amp;#61;2,放到二号位&lt;br /&gt;f(3)&amp;#61;0&amp;#xff0c;放到零号位&lt;br /&gt;f(4)&amp;#61;1,放到一号位&amp;#xff0c;是的冲突了&amp;#xff0c;那么4就会被放到最近的空闲位&amp;#xff0c;即4号位&lt;br /&gt;以此类推&lt;br /&gt;对于冲突&amp;#xff0c;这个策略有很多&amp;#xff0c;我就不一一细说了&amp;#xff0c;有兴趣的可以去专门学习一下《数据结构与算法设计》&lt;br /&gt;综上&amp;#xff0c;我1&amp;#xff0c;2&amp;#xff0c;3&amp;#xff0c;4&amp;#xff0c;5&amp;#xff0c;6放进来&amp;#xff0c;但是存储的顺序却是3&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;4..&lt;/p&gt;\n&lt;p&gt;如果对你有帮助&amp;#xff0c;望采纳&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求解注释里面的问题？详解", ["求解注释里面的问题？详解？Map<String,String>map=new HashMap<String,String>();//为什么要写这样的一句话？"]], "Tag": "程序设计"}
{"Answer": "就是根据反射创建的对象，参考\r\nhttp://www.cnblogs.com/peida/archive/2013/04/26/3038503.html", "Konwledge_Point": "注释", "Question": ["新手求教，关于注释方法的问题", ["C_A ca=(C_A)constructor.getAnnotation(C_A.class);", "\nSystem.out.println(ca.value());", "\n这两句中C_A是一个注释方法，不太明白注释方法也是一种类么？为什么可以生成它的对象？C_A.class是什么意思啊。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;整个代码实现了系统重启的功能。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;第 1 行 sync() 函数用于将内存中未写入磁盘的数据强制写入磁盘&amp;#xff0c;确保系统重启后数据不丢失。&lt;/li&gt;&lt;li&gt;第 2 行 usleep() 函数用于线程休眠&amp;#xff0c;单位是微秒。这里的意思是让线程休眠 1 秒。&lt;/li&gt;&lt;li&gt;第 4 行 sighandler_t 类型的变量 old_handler 用于记录信号处理函数的地址。&lt;/li&gt;&lt;li&gt;第 5 行 signal() 函数用于设置信号的处理函数。SIGCHLD 是一个信号&amp;#xff0c;它表示子进程结束时向其父进程发送的信号。SIG_DFL 是默认的信号处理方式。所以这行代码的意思是将 SIGCHLD 信号的处理函数设置为默认的处理方式。&lt;/li&gt;&lt;li&gt;第 6 行 system() 函数用于执行 shell 命令&amp;#xff0c;这里的意思是执行重启命令。&lt;/li&gt;&lt;li&gt;第 7 行 signal() 函数用于将信号的处理函数恢复为之前的处理方式。&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;void System_Reboot()&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;系统重启函数\n{\n    sync();&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;内存数据写入磁盘\n    usleep(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;休眠\n    sighandler_t old_handler;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;记录信号处理函数的地址\n       old_handler &amp;#61; signal(SIGCHLD, SIG_DFL);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;设置信号的处理函数\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;reboot&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;重启\n    signal(SIGCHLD, old_handler);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将信号的处理函数恢复为之前的处理方式\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["为代码添加注释讲解一下", ["为代码添加注释讲解一下，感谢", "\n", "讲解一下问号语句的含义，感谢\nvoid System_Reboot()", "//", "系统重启函数\n{\n    sync();", "//", "？？？？\n    usleep(", "1", "*", "1000", "*", "1000", ");", "//", "休眠\n    sighandler_t old_handler;", "//", "？？？？\n       old_handler = signal(SIGCHLD, SIG_DFL);", "//", "？？？？\n    system(", "\"reboot\"", ");", "//", "重启\n    signal(SIGCHLD, old_handler);", "//", "？？？？\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport numpy as np\nimport pandas as pd\n\nx&amp;#61;pd&lt;span class=\"hljs-selector-class\"&gt;.DataFrame&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[np.random.randint(1,10,4)for i in range(3)]&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;columns&lt;/span&gt;&amp;#61;list(&lt;span class=\"hljs-string\"&gt;&amp;#39;ABCD&amp;#39;&lt;/span&gt;))\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;查看x&amp;#39;&lt;/span&gt;&amp;#43;str (x.head)&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;查看的案引&amp;#39;&lt;/span&gt;&amp;#43;str (x.index)&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;查看数据的统计信息&amp;#39;&lt;/span&gt;&amp;#43;str (x.describe ()&lt;/span&gt;&lt;/span&gt;))\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;查看x的转置&amp;#39;&lt;/span&gt;&amp;#43;str (x.T)&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;查看x按轴进行排序&amp;#39;&lt;/span&gt;&amp;#43;str(x.sort_index(ascending&amp;#61;False)&lt;/span&gt;&lt;/span&gt;))\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;查看x第一行第一列的数值&amp;#34;&lt;/span&gt;&amp;#43;str(x.at[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;修改x第一行第一列的数值为3&amp;#34;&lt;/span&gt;&amp;#43;str(x.at[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;)\nprint (&lt;span class=\"hljs-string\"&gt;&amp;#34;查看x第一列的和&amp;#34;&lt;/span&gt;&amp;#43;str(x&lt;span class=\"hljs-selector-class\"&gt;.diff&lt;/span&gt;()))\nx&lt;span class=\"hljs-selector-class\"&gt;.diff&lt;/span&gt; ()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;查看x&amp;lt;bound method NDFrame.head of    &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;  B  C  D\n&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;gt;\n查看的案引RangeIndex(start&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, stop&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, step&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n查看数据的统计信息              &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;         B         C         D\ncount  &lt;span class=\"hljs-number\"&gt;3.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3.000000&lt;/span&gt;\nmean   &lt;span class=\"hljs-number\"&gt;4.333333&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4.333333&lt;/span&gt;\nstd    &lt;span class=\"hljs-number\"&gt;1.527525&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3.605551&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2.645751&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2.081666&lt;/span&gt;\nmin    &lt;span class=\"hljs-number\"&gt;3.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2.000000&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;%    &lt;span class=\"hljs-number\"&gt;3.500000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4.500000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4.500000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3.500000&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;%    &lt;span class=\"hljs-number\"&gt;4.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5.000000&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;%    &lt;span class=\"hljs-number\"&gt;5.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;8.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5.500000&lt;/span&gt;\nmax    &lt;span class=\"hljs-number\"&gt;6.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9.000000&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6.000000&lt;/span&gt;\n查看x的转置   &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\nB  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\nC  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\nD  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n查看x按轴进行排序   &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;  B  C  D\n&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n查看x第一行第一列的数值&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n修改x第一行第一列的数值为&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;False\n查看x第一列的和     &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;    B    C    D\n&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  NaN  NaN  NaN  NaN\n&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["Python注释删除代码依然报错", ["Python小白，在学习pandas时敲了这样一句代码print('查看x第一列的和'+str(x.diff()))", "却报了expression cannot contain assignment，perhaps you meant \"==\"的错误，上网查询说是不能给常量复值，但是在这句代码里我并没有进行赋值操作，甚至注释或者删除掉这行代码编译器依然会报错", "求问是什么原因？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Comment类型&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n         &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;myDiv&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;&amp;lt;!--A comment --&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; \n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n         &lt;span class=\"hljs-comment\"&gt;/*\n          注释在 DOM 中是通过 Comment 类型来表示的。Comment 节点具有下列特征&amp;#xff1a;\n    nodeType 的值为 8&amp;#xff1b;\n        nodeName 的值为&amp;#34;#comment&amp;#34;&amp;#xff1b;\n        nodeValue 的值是注释的内容&amp;#xff1b;\n     parentNode 可能是 Document 或 Element&amp;#xff1b;\n        不支持&amp;#xff08;没有&amp;#xff09;子节点。\n        Comment 类型与 Text 类型继承自相同的基类&amp;#xff0c;因此它拥有除 splitText()之外的所有字符串操\n        作方法。与 Text 类型相似&amp;#xff0c;也可以通过 nodeValue 或 data 属性来取得注释的内容。\n          * */&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; div &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;myDiv&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; comment &amp;#61; div.&lt;span class=\"hljs-property\"&gt;firstChild&lt;/span&gt;;\n        &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(comment.&lt;span class=\"hljs-property\"&gt;data&lt;/span&gt;);\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["wed前端注释问题<comment>", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "<", "comment", ">", "。。。。", "</", "comment", ">", "\n\n", "\n", "运行结果及报错内容", "\n", "comment", "在教材里有，\n但是在浏览器无法正常使用\nedge\n谷歌浏览器\n\n\n", "\n", "我想要达到的结果", "\n", "正常使用comment注释"]], "Tag": "程序设计"}
{"Answer": "int 21h是一个dos软中断\r\nmov ah,09h,说明调用09h功能号\r\nhttps://blog.csdn.net/weixin_30552811/article/details/98911162\r\n这里可以查,09h是输出字符串到屏幕", "Konwledge_Point": "注释", "Question": ["请问这段MASM汇编代码是什么意思？求注释，我刚刚学习汇编", [".model small\n\n.data\n    strs DB 'Hello World',13,10,'$'\n.code\nstart:\n    mov ax,@data\n    mov ds,ax\n    mov dx,offset strs\n    mov ah,09h\n    int 21h\n    mov ah,4ch\n    int 21h\nend start\n", "\n\n", "求每一行的注释，谢谢大神！", "\n如果可以，请问哪里有MASM很入门的那些详细教程？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;% training options for the Convolutional Neural Network   %CNN训练选项设置\n    options &amp;#61; trainingOptions(&lt;span class=\"hljs-string\"&gt;&amp;#39;sgdm&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;ExecutionEnvironment&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;  %训练深度学习神经网络的选项&amp;#xff0c;CPU平台运行\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;MaxEpochs&amp;#39;&lt;/span&gt;,n_epoch,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;InitialLearnRate&amp;#39;&lt;/span&gt;,learn_rate,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;L2Regularization&amp;#39;&lt;/span&gt;,l2_factor,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;ValidationData&amp;#39;&lt;/span&gt;,valData,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;ValidationFrequency&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;Shuffle&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;every-epoch&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;Verbose&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;\n                          &lt;span class=\"hljs-string\"&gt;&amp;#39;Plots&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;training-progress&amp;#39;&lt;/span&gt;);\n%参考文档&amp;#xff1a;https:&lt;span class=\"hljs-comment\"&gt;//ww2.mathworks.cn/help/deeplearning/ref/trainingoptions.html?s_tid&amp;#61;doc_ta&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;[&lt;/span&gt;trainedNet,tr{k,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}&lt;span class=\"hljs-meta\"&gt;]&lt;/span&gt; &amp;#61; trainNetwork(trainCsi,trainWord,layers,options);   %开始训练深度学习神经网络\n    t1 &amp;#61; toc; % training end time  计时结束&amp;#xff0c;前面应该还有个tic计时开始\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["Matlab 刚入门 求每行代码注释", ["求这段代码每行的注释", "初学者不理解是什么意思呀", "好高级呀～", "求解！", "谢谢啦～"]], "Tag": "程序设计"}
{"Answer": "可以再声明的时候使用默认值\r\npublic abstract boolean creditCard() default false;", "Konwledge_Point": "注释", "Question": ["关于java Anotation注释成员斌值问题，是不是必须为每一个注释成员斌值？", ["java中自定义Annotation时，是不是一定要为每一个注释成员斌值呢，不知道javax.persistence.Column注释是怎么实现的", "\n使用javax.persistence.Column时为什么不用为每一个注释成员斌值。", "\n本人现做一个小测验如下：", "\n\n", "一、Validate.java,验证用的注解", "\npackage com.wanghaisheng.generator.support;", "\n\n", "import java.lang.annotation.Retention;", "\nimport java.lang.annotation.RetentionPolicy;", "\nimport java.lang.annotation.Target;", "\n\n", "@Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.FIELD})", "\n@Retention(RetentionPolicy.RUNTIME)", "\npublic @interface Validate {", "\n    //必输字段", "\n    boolean required();", "\n    //最小长度 ", "\n    public abstract int minLength();", "\n    //最大长度", "\n    public abstract int maxlength();", "\n    //[3,10] 长度介于 3 和 {1} 之间的字符串 ", "\n    public abstract String rangelength();", "\n    //[100,1000] 只能是100和 1000 之间的值", "\n    public abstract String range();", "\n    //最小值", "\n    public abstract long min();", "\n    //最大值", "\n    public abstract long max();", "\n    //验证邮箱", "\n    public abstract boolean email();", "\n    //验证是否是合法的网址", "\n    public abstract boolean url();", "\n    //验证是否是合法的日期 new Date() 类型格式", "\n    public abstract boolean date();", "\n    //验证是否是合法的日期 年/月/日 或 年-月-日 格式", "\n    public abstract boolean dateISO();", "\n    //验证是否是合法的数字", "\n    public abstract boolean number();", "\n    //验证是否为整数", "\n    public abstract boolean digits();", "\n    //验证合法的信用卡号", "\n    public abstract boolean creditCard();", "\n    //要匹配的元素如:’#cnfpass’ , 验证两次输入值是否相同", "\n    public abstract String equalTo();", "\n    //“gif|png|jpg” 验证是否是合法后缀名的字符串", "\n    public abstract String accept();", "\n\n", "}", "\n\n", "然后我定义一个POJO使用该注解", "\n二、User.java", "\n\n", "package com.wanghaisheng.model;", "\n\n", "import com.wanghaisheng.generator.support.Validate;", "\n\n", "public class User {", "\n    private String userName;", "\n    private String password;", "\n\n", "@Validate(accept = \"\", creditCard = false, date = false, dateISO = false, digits = false,   email = false, equalTo = \"\", max = 0, maxlength = 0, min = 0, minLength = 0, number = false, range = \"\", rangelength = \"\", required = false, url = false)\npublic String getUserName() {\n    return userName;\n}\npublic void setUserName(String userName) {\n    this.userName = userName;\n}\npublic String getPassword() {\n    return password;\n}\npublic void setPassword(String password) {\n    this.password = password;\n}\n", "\n\n", "}", "\n\n", "各位大侠，能不能邦小弟实现使用Validate注解时只为其中的几个成员斌值，或不用为他们斌值，", "\n如：", "\n          @Validate(email = true)", "\n    public String getUserName() {", "\n        return userName;", "\n    }", "\n而不用当使用Validate注解时加上那么一大堆难看的无用的代码。", "\n我知道javax.persistence.Column注解是能够实现的。", "\n大侠们，望快点伸出援手啊，小弟急啊"]], "Tag": "程序设计"}
{"Answer": "已发到你的Email,请查收。", "Konwledge_Point": "注释", "Question": ["eclipse中注释的模板谁有啊", ["Eclipse或者是MyEclipse的注释模板谁有比较好的呢。", "\n功能：方法名，版权，日期，参数，等等吧。", "\n方便的话发到：", "paradise_lsj@163.com", "\n谢谢！"]], "Tag": "程序设计"}
{"Answer": "不要用记事本，用ediplus，或ue.记事本问题多多", "Konwledge_Point": "注释", "Question": ["javascript文件的注释如何规定编码格式？", ["请问javascript文件的编码格式如何设置啊，我说的不是在html页面里的，而是单独的javascript文件的编码。", "\n\n", "比如用browser打开一个js文件后，其注释的显示结果会受到浏览器默认的编码格式的影响。", "\n我用中文写了一点注释，而后在不同的浏览器打开后，有的会显示为乱码，但是css文件就可以设置为@charset \"utf-8\""]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在setttings里面的Inspections的右边的python点击全部勾选&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/839298261636122.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么我在这个小灯泡里找不到出入函数文档注释的选项呢？", ["\n", "我想在函数加入对参数的文档注释，然后我就选中函数名称，打开小灯泡，发现我没有插入文档注释的按钮，请问大家这是什么问题呢？除了这个，还有什么其他的方法可以插入文档注释呢？我在网上只看见这一个利用小灯泡插入文档注释的方法。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;jupyter notebook只是一个IDE编辑器&amp;#xff0c;代码都是一样的&amp;#xff0c;豆瓣评论数据的爬虫网上很多教程&amp;#xff0c;直接拿来用就行了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["jupyter爬虫问题(希望有详细注释)", ["怎么用jupyter notebook写一个豆瓣评论数据的爬虫并可以存储起来当数据集，来进行数据分析？(希望源代码有注释更好)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码我测试没有问题&lt;br /&gt;你写绝对地址试试&lt;br /&gt;可能是环境变量path中没有添加system32目录. 用&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;os&lt;/span&gt;.system(&lt;span class=\"hljs-string\"&gt;&amp;#39;%SystemRoot%/system32/notepad.exe&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;看看&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "注释", "Question": ["提示我'notepad.exe' 不是内部或外部命令，也不是可运行的程序 或批处理文件。", ["为什么我import os", "\n", "os.system('notepad.exe')", "想打开记事本", "提示我'notepad.exe' 不是内部或外部命令，也不是可运行的程序", "或批处理文件。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;单行注释只能写在一行,看起来会很挤,多行注释写起来更有层次感更清晰&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么编程规范不建议使用单行注释", ["C语言，如题，为什么编程规范不建议使用单行注释，就是这个问题，不需要30个字描述，谢谢回答"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib.patches as pc\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-comment\"&gt;# 创建窗口&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;fig1&lt;/span&gt; &amp;#61; plt.figure()\n&lt;span class=\"hljs-attribute\"&gt;ax1&lt;/span&gt; &amp;#61; fig1.add_subplot(&lt;span class=\"hljs-number\"&gt;121&lt;/span&gt;) # 创建子图&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.xlim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.ylim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.axis(&lt;span class=\"hljs-string\"&gt;&amp;#34;equal&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-comment\"&gt;# 定义圆心&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;center&lt;/span&gt; &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;ax1&lt;/span&gt;.add_patch(pc.Circle(center,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)) # 画圆\n&lt;span class=\"hljs-attribute\"&gt;ax2&lt;/span&gt; &amp;#61; fig1.add_subplot(&lt;span class=\"hljs-number\"&gt;122&lt;/span&gt;) # 创建子图&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 画等边三角形的过程就是确定3个点,然后画直线即可&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 设左下角的点为(5,5),变成为10&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 可推测右下角的点(15,5)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# 顶点(10,sqrt(10**2 - 5 ** 2))&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;p1&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;p2&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;p3&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; ** &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; ** &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) ** &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n&lt;span class=\"hljs-comment\"&gt;# 画四条直线,根据三个顶点&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;triangleX&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-meta\"&gt; [p1[0],p2[0],p3[0],p1[0]] \ntriangleY &amp;#61; [p1[1],p2[1],p3[1],p1[0]]&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.axis(&lt;span class=\"hljs-string\"&gt;&amp;#34;equal&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.plot(triangleX,triangleY,&lt;span class=\"hljs-string\"&gt;&amp;#34;green&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.show() # 显示\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1 id=\"结果\"&gt;结果:&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/17054739063616.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h4 id=\"如果觉得答案对你有帮助请点击下采纳谢谢\"&gt;&lt;code class=\"language-javascript\"&gt;如果觉得答案对你有帮助,请点击下采纳,谢谢~&lt;/code&gt;&lt;/h4&gt;", "Konwledge_Point": "注释", "Question": ["要求在下面图片中，需要有注释", ["越简单越好，写下注释。谢谢。如果对一定及时采纳，感谢各位。一定采纳的我。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;很有可能是编码的问题&amp;#xff0c;但是不建议使用这个工具。如果是Visual C&amp;#43;&amp;#43;的话&amp;#xff0c;建议使用Visual Studio&amp;#xff0c;社区版是免费的&amp;#xff0c;而且下载速度也很快。但也可以使用Visual Studio Code&amp;#xff0c;是一个很好用的编辑器&amp;#xff0c;不够需要配置一下文件&amp;#xff0c;教程是很多的。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["VC++6.0 工具栏是乱七八糟的符号，中文注释也是符号", ["\n", "\n", "VC++6.0    之前是英文，好久没用 在一打开就是不认识的符号，连下载的页面也是符号，注释的文字也变成符号，改了格式里的文字样式，也不好使，有人懂不。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;在链表中寻找结点值为data的结点\nsize_t ListFind(Node** pHead, DataType data)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (*pHead &amp;#61;&amp;#61; NULL) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果头指针为空&amp;#xff0c;则为空指针&amp;#xff0c;直接返回-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    {\n        return -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n\n    Node* pFind &amp;#61; *pHead; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将头指针赋值给pFind\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (pFind &amp;amp;&amp;amp; pFind-&amp;gt;_data !&amp;#61; data) &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果pFind指针不为空&amp;#xff0c;并且pFind指针的data值不等于想要寻找的值\n        pFind &amp;#61; pFind-&amp;gt;_pNext; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将将pFind指针指向下一个\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (pFind !&amp;#61; NULL)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果pFind指针不为空&amp;#xff0c;说明找到了\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;找到了数据%d\\n&amp;#34;&lt;/span&gt;, pFind-&amp;gt;_data);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;输出指针的data\n        return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;表示成功\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;没有找到数据%d\\n&amp;#34;&lt;/span&gt;, data); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果pFind指针为空&amp;#xff0c;说明没有找到\n\n    return -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;都表示失败\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["C语言代码注释，单链表，帮个忙", ["刚刚开始，学习一年", "单链表的代码，C语言的，", "来个哥", "帮我写个注释", "要详细一点的", "谢谢各位帮忙", "给大家磕个头"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-comment\"&gt;//如果ac是adminlogin则为true&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ac.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;adminlogin&amp;#34;&lt;/span&gt;))\n{\n&lt;span class=\"hljs-comment\"&gt;//接收传递过来的用户名&amp;#xff0c;密码&amp;#xff0c;类型&amp;#xff0c;验证码&lt;/span&gt;\nString username &amp;#61; request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\nString password &amp;#61; request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;pwd&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\nString utype &amp;#61; request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;cx&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\nString pagerandom &amp;#61; request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;pagerandom&amp;#34;&lt;/span&gt;)&lt;/span&gt;&amp;#61;&amp;#61;null?&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;:request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;pagerandom&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\nString random &amp;#61; (String)request.get&lt;span class=\"hljs-constructor\"&gt;Session()&lt;/span&gt;.get&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;random&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//判断验证码是否正确并且a的值不为空&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!pagerandom.equals(random)&amp;amp;&amp;amp;request.get&lt;span class=\"hljs-constructor\"&gt;Parameter(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)&lt;/span&gt;!&amp;#61;null)\n{\n&lt;span class=\"hljs-comment\"&gt;//清空验证码&amp;#xff0c;去登录界面&lt;/span&gt;\nrequest.set&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;random&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\ngo(&lt;span class=\"hljs-string\"&gt;&amp;#34;/login.jsp&amp;#34;&lt;/span&gt;, request, response);\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n&lt;span class=\"hljs-comment\"&gt;//验证码证确执行下面的&lt;/span&gt;\nString sql1&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (utype.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;管理员&amp;#34;&lt;/span&gt;)){sql1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;select * from allusers where username&amp;#61;&amp;#39;&amp;#34;&lt;/span&gt;&amp;#43;username&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#39; and pwd&amp;#61;&amp;#39;&amp;#34;&lt;/span&gt;&amp;#43;password&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;; }\n&lt;span class=\"hljs-comment\"&gt;//查询数据库&lt;/span&gt;\nList&amp;lt;HashMap&amp;gt;userlist1 &amp;#61; dao.select(sql1);\n&lt;span class=\"hljs-comment\"&gt;//如果查询到的数据只有一条&amp;#xff0c;则存到session里面&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(userlist1.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n{\nrequest.get&lt;span class=\"hljs-constructor\"&gt;Session()&lt;/span&gt;. set&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;username&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;username&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//判断类型是否为管理员&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (utype.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;管理员&amp;#34;&lt;/span&gt;))\n{\nrequest.get&lt;span class=\"hljs-constructor\"&gt;Session()&lt;/span&gt;. set&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;cx&amp;#34;&lt;/span&gt;,  &lt;span class=\"hljs-params\"&gt;userlist1&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;get&lt;/span&gt;(0)&lt;/span&gt;.get(&lt;span class=\"hljs-string\"&gt;&amp;#34;cx&amp;#34;&lt;/span&gt;));\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\nrequest.get&lt;span class=\"hljs-constructor\"&gt;Session()&lt;/span&gt;. set&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;cx&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;utype&lt;/span&gt;)&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//最后登录成功了&amp;#xff0c;去主页main.jsp&lt;/span&gt;\ngo(&lt;span class=\"hljs-string\"&gt;&amp;#34;main.jsp&amp;#34;&lt;/span&gt;, request, response);\n}&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n&lt;span class=\"hljs-comment\"&gt;//出现登录失败其他问题则回到登录界面&amp;#xff0c;并传递error是空&lt;/span&gt;\nrequest.set&lt;span class=\"hljs-constructor\"&gt;Attribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;error&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\ngo(&lt;span class=\"hljs-string\"&gt;&amp;#34;/login.jsp&amp;#34;&lt;/span&gt;, request, response);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["java代码需要添加注释", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "代码要加上主要部分的注释\n```java\n", "if", "(ac.equals(", "\"adminlogin\"", "))\n{\nString username = request.get", "Parameter(", "\"username\"", ")", ";\nString password = request.get", "Parameter(", "\"pwd\"", ")", ";\nString utype = request.get", "Parameter(", "\"cx\"", ")", ";\nString pagerandom = request.get", "Parameter(", "\"pagerandom\"", ")", "==null?", "\"\"", ":request.get", "Parameter(", "\"pagerandom\"", ")", ";\nString random = (String)request.get", "Session()", ".get", "Attribute(", "\"random\"", ")", ";\n", "if", "(!pagerandom.equals(random)&&request.get", "Parameter(", "\"a\"", ")", "!=null)\n{\nrequest.set", "Attribute(", "\"random\"", ", ", "\"\"", ")", ";\ngo(", "\"/login.jsp\"", ", request, response);\n}\n", "else", "{\nString sql1=", "\"\"", ";\n", "if", " (utype.equals(", "\"管理员\"", ")){sql1 = ", "\"select * from allusers where username='\"", "+username+", "\"' and pwd='\"", "+password+", "\"'\"", "; }\n", "//quxanxiaxndexnglxu", "\nList<HashMap>userlist1 = dao.select(sql1);\n", "if", "(userlist1.size", "()", "==", "1", ")\n{\nrequest.get", "Session()", ". set", "Attribute(", "\"username\"", ", ", "username", ")", ";\n", "if", " (utype.equals(", "\"管理员\"", "))\n{\nrequest.get", "Session()", ". set", "Attribute(", "\"cx\"", ",  ", "userlist1", ".", "get", "(0)", ".get(", "\"cx\"", "));\n}\n", "else", "\n{\nrequest.get", "Session()", ". set", "Attribute(", "\"cx\"", ", ", "utype", ")", ";\n}\n\n\ngor(", "\"main.jsp\"", ", request, response);\n}", "else", "{\nrequest.set", "Attribute(", "\"error\"", ", ", "\"\"", ")", ";\ngo(", "\"/login.jsp\"", ", request, response);\n}\n\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "```\r\n\r\n#if !defined(CUDNN_H_)\r\n#define CUDNN_H_\r\n\r\n#include &lt;cuda_runtime.h&gt;\r\n#include &lt;stdint.h&gt;\r\n\r\n#include \"cudnn_version.h\"\r\n#include \"cudnn_ops_infer.h\"\r\n#include \"cudnn_ops_train.h\"\r\n#include \"cudnn_adv_infer.h\"\r\n#include \"cudnn_adv_train.h\"\r\n#include \"cudnn_cnn_infer.h\"\r\n#include \"cudnn_cnn_train.h\"\r\n\r\n#include \"cudnn_backend.h\"\r\n\r\n#if defined(__cplusplus)\r\nextern \"C\" {\r\n#endif\r\n\r\n#if defined(__cplusplus)\r\n}\r\n#endif\r\n\r\n#endif\r\n```\r\n这些都不是注释\r\n将具体的代码放在不同的头文件\r\n再一个头文件包含，这是大项目常规的做法。", "Konwledge_Point": "注释", "Question": ["GPU Cuda cudnn.h文件全是注释？", ["/*   cudnn : Neural Networks Library\n\n*/\n\n#if !defined(CUDNN_H_)\n#define CUDNN_H_\n\n#include <cuda_runtime.h>\n#include <stdint.h>\n\n#include \"cudnn_version.h\"\n#include \"cudnn_ops_infer.h\"\n#include \"cudnn_ops_train.h\"\n#include \"cudnn_adv_infer.h\"\n#include \"cudnn_adv_train.h\"\n#include \"cudnn_cnn_infer.h\"\n#include \"cudnn_cnn_train.h\"\n\n#include \"cudnn_backend.h\"\n\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif /* CUDNN_H_ */\n", "\n\n", "这是神马情况？", "\nCuda安装正确", "\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2", "\n没输出，是不是因为注释的原因？你们都是注释吗？路径就在/usr/local/cuda/include/cudnn.h，有搞cudnn加速的帮我看一下哦，谢谢了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;double类型存的小数&amp;#xff0c;半径和面积是小数&lt;br /&gt;Scanner sc &amp;#61; new Scanner(System.in);    //创建一个输入流&lt;br /&gt;sc.nextDouble();    //从键盘读取一个小数&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请帮我看一下我注释里面的问题 求解", ["请帮我看一下注释里面的问题  求详细的解释  所以不是很懂    ...dhjsjhdjsnhd"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;n;   &lt;span class=\"hljs-comment\"&gt;//输入钱数&lt;/span&gt;\n    k &amp;#61; n/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//计算能买多少瓶&lt;/span&gt;\n    m &amp;#61; k;  &lt;span class=\"hljs-comment\"&gt;//记录最终能买到的瓶数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;//如果瓶数大于等于3瓶&amp;#xff0c;那么就有赠送&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//如果大于等于5瓶&amp;#xff0c;那么肯定选择5瓶换2瓶&lt;/span&gt;\n        {\n            m &amp;#43;&amp;#61; k/&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;   &lt;span class=\"hljs-comment\"&gt;//计算能换的瓶数并累加到总瓶数&lt;/span&gt;\n            k&amp;#61;k%&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;   &lt;span class=\"hljs-comment\"&gt;//计算兑换后还剩多少瓶&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果还有3瓶以上&amp;#xff0c;则还可以进行3瓶换1瓶  &lt;/span&gt;\n           m&amp;#43;&amp;#43;;\n    }\n    cout&amp;lt;&amp;lt;m&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["c++打酱油问题注释讲解", ["酱油是中国传统的调味品。用豆、麦、麸皮酿造的液体调味品。色泽红褐色，有独特酱香，滋味鲜美，有助于促进食欲。酱油是由酱演变而来，早在三千多年前，中国周朝就有制做酱的记载了。而中国古代劳动人民发明酱油之酿造纯粹是偶然地发现。中国古代皇帝御用的调味品，最早的酱油是由鲜肉腌制而成，与现今的鱼露制造过程相近，因为风味绝佳渐渐流传到民间，后来发现大豆制成风味相似且便宜，才广为流传食用。而早期随着佛教僧侣之传播，遍及世界各地，如日本、韩国、东南亚一带。", "小明带着N元钱去买酱油。酱油10块钱一瓶，商家进行促销，每买3瓶送1瓶，或者每买5瓶送2瓶。请问小明最多可以得到多少瓶酱油。", "输入", "一行，包含一个正整数N，表示小明可用于买酱油的钱数。N是10的整数倍，N不超过300。", "输出", "一行，包含一个整数，表示小明最多可以得到多少瓶酱油。", "求解答，注释讲解，正确必采纳。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if (mystrlen(str &amp;#43; 1) &amp;gt;&amp;#61; 2)&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    reversestring(str &amp;#43; 1);&lt;/span&gt;&lt;br /&gt;*(str &amp;#43; mystrlen(str) - 1) &amp;#61; ret;&lt;br /&gt;这最后一行的*(str &amp;#43; mystrlen(str) - 1) &amp;#61; ret; 是有问题的&amp;#xff0c;这里的mystrlen(str)与注释掉的len已经不是一个值了&amp;#xff0c;因为上面的递归过程修改了str字符串中的&amp;#39;\\0&amp;#39;的位置&lt;br /&gt;因此注释代码中在递归前将len记录下来是正确的&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么在自定义的reversestring函数中用没有注释掉的代码编译出来是 fea,但如果用注释掉的代码编译出来是fedcba", ["为什么在自定义的reversestring函数中用没有注释掉的代码编译出来是", "fea,但如果用注释掉的代码编译出来是fedcba", "\n", "#define _CRT_SECURE_NO_WARNINGS 1", "#include <stdio.h>", "\n", "int mystrlen(char* s)", "{", "    if (*s != '\\0')", "        return 1 + mystrlen(s + 1);", "    else", "        return 0;", "}", "\n", "void reversestring(char* str)", "{", "    char ret = *str;", "\n", "//int len = mystrlen(str);", "\n", "//*str = *(str + len - 1);", "\n", "//*(str + len - 1) = '\\0';", "\n", "//if (mystrlen(str + 1) >= 2)", "\n", "//    reversestring(str + 1);", "\n", "//*(str + len - 1) = ret;", "\n\n", "*str", " = *(", "str", " + mystrlen(", "str", ") - ", "1", ")", ";", "\n*(", "str", " + mystrlen(", "str", ") - ", "1", ") = ", "'\\0'", ";", "\n", "if", " (mystrlen(", "str", " + ", "1", ") >= ", "2", ")\n    reversestring(", "str", " + ", "1", ")", ";", "\n*(", "str", " + mystrlen(", "str", ") - ", "1", ") = ret", ";", "\n", "\n", "}", "\n", "int main()", "{", "    char arr[] = \"abcdef\";", "    reversestring(arr);", "    printf(\"%s\\n\", arr);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "http://www.bubuko.com/infodetail-2267581.html", "Konwledge_Point": "注释", "Question": ["Can We Build This One?                   ", ["Description", "\n\n", "“Highways are built, then life is rich.” Now people of Big Town want to become rich, so they are planning to build highways to connect their villages.", "\n\n", "Big Town is really big and has many villages. Its people plan to build some highways between some pairs of villages so that every pair of villages is connected by the highways either directly or indirectly. After surveying the geographical surroundings, they find that there are some paths along with highways can be built. Every path is denoted by a triplet (a, b, c) which means a highway can built between the a-th village and the b-th village with a cost of c. In order to save money, they will select only part of the paths to build highways along so that the total cost to build highways along the selected paths is minimal under the condition that every pair of villages is connected.", "\n\n", "It is possible that multiple such selections exist. People from every village want to have those highways of good interest to them built. But some highways can never appear in the selection since they are much too costly. So people ask whether a certain highway can be selected if they agree to cut the cost. Your task is to design a program to answer their queries.", "\n\n", "Input", "\n\n", "The first line of input contains three integers N, M and Q (1 < N ≤ 1,000, N − 1 ≤ M ≤ 100,000, 0 < Q ≤ 100,000), where N is the number of villages, M is the number of paths, and Q is the number of queries. Each of the next M lines contains three integers a, b, and c (1 ≤ a, b ≤ N, a ≠ b, 0 ≤ c ≤ 1,000,000). The triplet (a, b, c) describes a path. Each of following Q lines contains two integer i and x (1 ≤ i ≤ M, 0 ≤ x) describing a query, “Can a highway be built along the i-th path if the cost of is reduced to x?” x is strictly lower than the original cost of building a highway along the i-th path. It is assumed that every pair of village will be connected either directly or indirectly if all possible highways are built. And there may be more than one highway that can be built between a pair of villages.", "\n\n", "Output", "\n\n", "Output one line for each query. Output either “Yes” or “No” as the answer to the the query.", "\n\n", "Sample Input", "\n\n", "3 4 3", "\n1 2 10", "\n1 3 6", "\n2 3 4", "\n1 3 7", "\n4 6", "\n1 7", "\n1 5", "\nSample Output", "\n\n", "Yes", "\nNo", "\nYes"]], "Tag": "程序设计"}
{"Answer": "我想知道mapViewAnnotations初始化了没", "Konwledge_Point": "注释", "Question": ["iphone中传递注释到数组", ["传递自定义注释到NSMutableArray，用来充填tableView中。代码：", "\n\n", "在.h文件中定义了一个NSMutableArray *mapViewAnnotations;", "\n\n", "然后在.m文件中：", "\n\n", "- (void)plotBarPosition:(NSString *)datos{\n\n/*\ncode that extract data froma a json string\n*/\n    MyLocation *nota =[[MyLocation alloc] initWithName:barNamePlusDistance coordinate:coordinate horario:horario oferta:offerta more:info];        \n                NSLog(@\"nota    :%@\",nota);\n\n            [_mapView addAnnotation:nota];   //annotation are  plot on  the map\n\n            [mapViewAnnotations addObject:nota];   \n\n            NSLog(@\"mapViewAnnotations:%@\",mapViewAnnotations);  //NSlog return null\n    }\n", "\n\n", "结果mapViewAnnotations 为空。是不是不能将对象复制到mutablearray中？谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这就是一个普通的单行注释&amp;#xff0c;直接把这个打出来就行&amp;#xff0c;或者去settings里边设置自定义注释&amp;#xff0c;可以自己设置模板&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["这个注释是怎么快捷键打出来的(开发工具-ide)", ["前端代码不同的功能区分注释是怎么快捷键打出来的（使用webStorm） 不知道怎么用快捷键输入这么多个=", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;因为你定义了传参构造函数&amp;#xff0c;但是你创建类对象并没传参&amp;#xff0c;这就导致它无法调用默认的构造函数&amp;#xff0c;也无法调用传参构造函数。&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff01;可以的话&amp;#xff0c;帮忙点个采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "注释", "Question": ["注释的内容为什么会对创建对象有影响", ["不注释时会报错（图二图三），为啥啊 为啥会报错，为啥啊，怎么会呢", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你把代码贴上来每句话加注释只要半分钟&amp;#xff0c;&lt;br /&gt;但是你只贴图片就需要二十分钟&lt;br /&gt;建议贴完整代码&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["这个图片中的代码能加加注释吗？", ["这个完代码中的每个变量是什么意思.如何理解每句代码的意思.能加加注释吗？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;符合 Python 语法的赋值语句可以是将一个值赋给变量&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;还可以进行多重赋值&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;, y &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;同时&amp;#xff0c;Python 还支持增量赋值&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这会将 x 的值增加 3。&lt;/p&gt;\n&lt;p&gt;符合 Python 语法的注释可以是以井号 # 开头的单行注释&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;# 这是一个注释&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;还可以使用三个引号 &amp;#34;&amp;#34;&amp;#34; 或 &amp;#39;&amp;#39;&amp;#39; 包含多行注释&amp;#xff0c;例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n这是一个\n多行注释\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注释是在代码中添加一些文本解释或者标记&amp;#xff0c;不会对代码的执行产生任何影响。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["什么样的赋值语句是合法的？什么样的注释是合法的。", ["请问什么样的赋值语句是符合python语法的？什么样的注释是符合语法的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一&amp;#xff0c;代码里使用了List和ArraryList类&amp;#xff0c;这个类你没有&amp;#xff0c;你就得在最前面申明他是从哪来的&amp;#xff0c;所以删除import 相关语句会报错。&lt;br /&gt;第二&amp;#xff0c;lists赋值为null是因为List类是ArrayList的父类&amp;#xff0c;这里考虑到通用性&amp;#xff0c;没有具体指明是哪个子类&amp;#xff0c;而是拿最大的类&amp;#xff0c;告诉编译程序我将要使用List类型下的某个子类。&lt;br /&gt;第三&amp;#xff0c;这个循环是个简单的for循环&amp;#xff0c;只不过i跳出的标杆&amp;#xff0c;从简单直白的1&amp;#xff0c;2&amp;#xff0c;3&amp;#xff0c;44&amp;#xff0c;等可见的常数&amp;#xff0c;改变成了lists所包含的元素的个数。lists.size()返回内部元素个数&lt;br /&gt;第四&amp;#xff0c;他将会打印出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;A&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;B&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请解释注释里面的问题，求详细解答", ["   请解释注释里面的问题，求详细解答。", "/*", "\n", "为什么要写下面这两句？当删除的时候他就会报错？", "/", "import java.util.ArrayList;", "import java.util.List;"]], "Tag": "程序设计"}
{"Answer": "为什么不发源码？难道你要注释的人看图片把代码敲一遍再给你加上注释？\r\n如果是我肯定不会做这无用功的！\r\n下次提问带点脑子吧", "Konwledge_Point": "注释", "Question": ["我有一些matlab代码，我没学过，求大神注释一下！", ["我导师给了我一段代码，我没学过，毕业设计要用，挺急的，求大神帮忙翻译注释一下，谢谢啦！直接写注释就行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没太懂你的意思&amp;#xff0c;package是包&amp;#xff0c;主要作用是为了把java文件分组&amp;#xff0c;相当于一种命名空间&amp;#xff0c;在大型项目中会比较有用&amp;#xff0c;&lt;br /&gt;然后就是线程可以有两种实现方法&amp;#xff0c;一是就像你的继承Thread&amp;#xff0c;也可以通过实现Runnable接口来编写线程&amp;#xff0c;这两个是java内部提供的两种线程实现机制&amp;#xff0c;二选一&lt;br /&gt;try..catch这是一组&amp;#xff0c;简单来说就是尝试执行try代码块内的代码&amp;#xff0c;如果可以正常执行&amp;#xff0c;那么就一直执行下去&amp;#xff0c;如果出现异常&amp;#xff0c;也就是报错了&amp;#xff0c;就执行catch代码块里的代码&amp;#xff0c;这是对代码异常的一种处理机制&amp;#xff0c;而你的catch里的那一行代码&amp;#xff0c;就是把错误相关的信息打印出来了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求注释里面的问题。详解必采纳", ["求注释里面的问题，求详解，详解必采纳，那个try又是啥？为什么在写线程的时候，不是在package这个下面写，而是在创建class的时候名字就为这个，然后再继承？catch这后面的都是什么意思？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;function&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Consumer&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * 父亲接口\n */&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;interface&lt;/span&gt; Father{\n    &lt;span class=\"hljs-comment\"&gt;//在接口中定义变量必须要初始化&lt;/span&gt;\n    &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; name&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;zhangjun&amp;#34;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 介绍行为&amp;#xff0c;说明父亲具有介绍自己的行为\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;introduce&lt;/span&gt;();\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;demo1&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args&lt;/span&gt;) {\n\n        &lt;span class=\"hljs-comment\"&gt;/**\n         * 孩子类&amp;#xff0c;实现了父亲接口\n         */&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Child&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Father&lt;/span&gt; {\n            &lt;span class=\"hljs-comment\"&gt;/**\n             * 对于介绍行为的实现&amp;#xff0c;就是输出自己的名字\n             */&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;introduce&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n                &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;父亲的名字叫&amp;#34;&lt;/span&gt;&amp;#43; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;name&lt;/span&gt;);\n            }\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;//对于自我介绍的调用&lt;/span&gt;\n        &lt;span class=\"hljs-title function_\"&gt;selfIntroduce&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Child&lt;/span&gt;());&lt;span class=\"hljs-comment\"&gt;//1&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//2请在此处添加代码使用匿名内部类实现注释1的功能&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//因为Father是一个接口&amp;#xff0c;无法创建实例&amp;#xff0c;创建的这个实例对应的对象没有名字&amp;#xff0c;和Child不一样&amp;#xff0c;因为没有类名&amp;#xff0c;所以是匿名类&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Father&lt;/span&gt;() {\n            &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;introduce&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n                &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;父亲的名字叫&amp;#34;&lt;/span&gt;&amp;#43; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;name&lt;/span&gt;);\n            }\n        }.&lt;span class=\"hljs-title function_\"&gt;introduce&lt;/span&gt;();\n        &lt;span class=\"hljs-comment\"&gt;//3请在此处添加代码使用Lambda表达式实现注释1的功能&lt;/span&gt;\n        &lt;span class=\"hljs-title class_\"&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;Father&lt;/span&gt;&amp;gt; lambda &amp;#61; (father)-&amp;gt;&lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;父亲的名字叫&amp;#34;&lt;/span&gt;&amp;#43; father.&lt;span class=\"hljs-property\"&gt;name&lt;/span&gt;);\n        lambda.&lt;span class=\"hljs-title function_\"&gt;accept&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Child&lt;/span&gt;());\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 一个自我介绍行为&amp;#xff0c;出入一个实现了Father接口的类\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; f 实现father接口的实例\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;selfIntroduce&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Father f&lt;/span&gt;){\n        f.&lt;span class=\"hljs-title function_\"&gt;introduce&lt;/span&gt;();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["在程序注释处补充代码，仍然输出\"父亲的名字中zhangjun\"", ["interface Father{", "String name=\"zhangjun；", "void introduce()；", "\"}", "public class demo1{", "public static void main(String[] args){", "class Child implements Father{", "public void introduce() {", "System.out.println(\"父亲的名字叫\")+this.name；", "}", "}", "selfIntroduce(new Child())；//1", "//2请在此处添加代码使用匿名内部类实现注释1的功能", "//3请在此处添加代码使用Lambda表达式实现注释1的功能}", "public static void selfIntroduce(Father f)｛", "f.introduce；", "｝", "}"]], "Tag": "程序设计"}
{"Answer": "不一定非得要给参数赋值啊，不赋值的话，那个参数是必须传入的参数", "Konwledge_Point": "注释", "Question": ["vs2008中OnDraw函数里为什么把pdc注释掉", ["vs2008中OnDraw函数里为什么把pdc注释掉，如果是默认参数，在函数的声明中没有给参数赋初值呀"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种自动生成的css  js  名称、方法啥的都具有软件特色&amp;#xff0c;一般不建议说对他做什么修改啥的&amp;#xff0c;因为太烦了&amp;#xff0c;有这时间都写完自己的代码了&amp;#xff0c;你自己写的 css 样式&amp;#xff0c;你会把想赋予这个元素的样式都写进去&amp;#xff0c;但是软件之类生成要考虑复用性&amp;#xff0c;所以有些  类名 对应的样式 只写了一点点&amp;#xff0c;这样复用率高&amp;#xff0c; 比如  你代码里 u-text u-text-3  可能就是 写了一个字体  以及大小 或是颜色&amp;#xff0c;不仅可以用在这个元素上 还阔以用在其他元素上。所以不太有什么好工具能够达到你的预期。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["HTML,CSS,Javascript网页注释和完善", ["问题遇到的现象和发生背景", "\n", "学校web development 的project，teacher要求我们用html,css,javascript做一个杂志的网站，我基本上已经完成了网站的设计和代码，但是这个是用网站设计软件自动生成的，我用我自己的一点点知识修改了一点点；teacher需要我们给大部分的代码添加注释，html,css,javascript 都要加注释，所以其他程序员能够看得懂。代码有几万行，而且很多都是计算机自动生成，有没有自动生成注释的软件；而且我对CSS和javascript不是很懂，希望能够改一下CSS和javascript的Class,有没有什么好的方法和方便的工具,", "我主要是使用bracket和它的拓展，其他json什么我都不是很懂，希望专家多多帮助", "\n", "问题相关代码，请勿粘贴截图", "\n", "比如说我的问题就是给这个section的class能让人看的懂，还有添加注释，让他更加简洁，有没有什么好的工具和方法", "\n", "    ", "\n    ", "<", "section", " ", "class", "=", "\"u-clearfix u-grey-10 u-valign-top-lg u-valign-top-xl u-valign-top-xs u-section-3\"", " ", "id", "=", "\"sec-443a\"", ">", "\n\n        ", "\n        ", "<", "div", " ", "class", "=", "\"u-expanded-width u-palette-2-dark-3 u-shape u-shape-rectangle u-shape-1\"", ">", "</", "div", ">", "\n\n        ", "\n        ", "<", "div", " ", "class", "=", "\"u-palette-3-base u-radius-50 u-shape u-shape-round u-shape-2\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-delay", "=", "\"500\"", ">", "</", "div", ">", "\n        \n        \n        ", "<", "img", " ", "src", "=", "\"images/Young-Muscular-Man-Doing-Lunges-In-Dark-Gym.jpg\"", " ", "alt", "=", "\"\"", " ", "class", "=", "\"u-image u-image-round u-radius-50 u-image-1\"", " ", "data-image-width", "=", "\"1109\"", " ", "data-image-height", "=", "\"614\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-delay", "=", "\"0\"", ">", "\n        ", "<", "div", " ", "class", "=", "\"u-list u-list-1\"", ">", "\n            ", "<", "div", " ", "class", "=", "\"u-repeater u-repeater-1\"", ">", "\n                ", "<", "div", " ", "class", "=", "\"u-container-style u-list-item u-radius-20 u-repeater-item u-shape-round u-white u-list-item-1\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-direction", "=", "\"\"", " ", "data-animation-delay", "=", "\"500\"", ">", "\n                    ", "<", "div", " ", "class", "=", "\"u-container-layout u-similar-container u-container-layout-1\"", ">", "<", "span", " ", "class", "=", "\"u-file-icon u-icon u-text-palette-3-base u-icon-1\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-delay", "=", "\"750\"", ">", "<", "img", " ", "src", "=", "\"images/7998511-4.png\"", " ", "alt", "=", "\"\"", ">", "</", "span", ">", "\n                        ", "<", "p", " ", "class", "=", "\"u-text u-text-1\"", ">", "BillSports makes you practice workout ", "<", "span", " ", "class", "=", "\"u-text-palette-2-base\"", " ", "style", "=", "\"font-weight: 700;\"", ">", "persistently", "</", "span", ">", "\n                        ", "</", "p", ">", "\n                    ", "</", "div", ">", "\n                ", "</", "div", ">", "\n                ", "<", "div", " ", "class", "=", "\"u-container-style u-list-item u-radius-20 u-repeater-item u-shape-round u-white u-list-item-2\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-direction", "=", "\"\"", " ", "data-animation-delay", "=", "\"500\"", ">", "\n                    ", "<", "div", " ", "class", "=", "\"u-container-layout u-similar-container u-container-layout-2\"", ">", "<", "span", " ", "class", "=", "\"u-file-icon u-icon u-text-palette-3-base u-icon-2\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-delay", "=", "\"750\"", ">", "<", "img", " ", "src", "=", "\"images/1442912-5-26.png\"", " ", "alt", "=", "\"\"", ">", "</", "span", ">", "\n                        ", "<", "p", " ", "class", "=", "\"u-text u-text-2\"", ">", "BillSports makes you practice workout ", "<", "span", " ", "style", "=", "\"font-weight: 700;\"", " ", "class", "=", "\"u-text-palette-2-base\"", ">", "amusingly", "</", "span", ">", "\n                        ", "</", "p", ">", "\n                    ", "</", "div", ">", "\n                ", "</", "div", ">", "\n                ", "<", "div", " ", "class", "=", "\"u-container-style u-list-item u-radius-20 u-repeater-item u-shape-round u-white u-list-item-3\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-direction", "=", "\"\"", " ", "data-animation-delay", "=", "\"500\"", ">", "\n                    ", "<", "div", " ", "class", "=", "\"u-container-layout u-similar-container u-container-layout-3\"", ">", "<", "span", " ", "class", "=", "\"u-file-icon u-icon u-text-palette-3-base u-icon-3\"", " ", "data-animation-name", "=", "\"customAnimationIn\"", " ", "data-animation-duration", "=", "\"1500\"", " ", "data-animation-delay", "=", "\"750\"", ">", "<", "img", " ", "src", "=", "\"images/1442912-5-26.png\"", " ", "alt", "=", "\"\"", ">", "</", "span", ">", "\n                        ", "<", "p", " ", "class", "=", "\"u-text u-text-3\"", ">", "BillSports makes you practice workout ", "<", "span", " ", "class", "=", "\"u-text-palette-2-base\"", " ", "style", "=", "\"font-weight: 700;\"", ">", "breezily", "</", "span", ">", "\n                        ", "</", "p", ">", "\n                    ", "</", "div", ">", "\n                ", "</", "div", ">", "\n            ", "</", "div", ">", "\n        ", "</", "div", ">", "\n    ", "</", "section", ">", "\n\n", "\n", "运行结果及报错内容", "\n", "能够运行出一个挺好的网站，网址是billsports.nicepage.io，需要VPN才能上去，如果可以的话去看一下", "\n", "我的解答思路和尝试过的方法", "\n", "我用Bracket来解决这个问题，也用了许多bracket的拓展，但是效果不是很理想，希望专家能够提供一些方便的方法和工具（最好是bracket的），我现在只用了beautify来美化html,css和javascript的格式，希望专家能提供更方便的工具(比如自动注释，方便更改Class,加上javascript even listener的工具）", "\n", "我想要达到的结果", "\n", "1，HTML, CSS, Javascript 注释 (最好有自动生成的工具）", "2，HTML的class，CSS的class, 改到让人类能够看的懂，我现在不是很懂CSS, 有没有快速改CSS的工具", "3，我的javascript也是在nicepage的网站上自动生成的，有没有快速写javascript eventlistener 的工具？我想理解这个网站的javascript,也想自己写一点简单的javascript event handler或者listener", "4，所有工具最好都是bracket有关，其他的也可以，谢谢专家了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;下面是对该代码片段的一些解释&amp;#xff0c;望采纳。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;代码片段中的 data 变量可能是一个包含某个班级学生信息的数据结构&amp;#xff0c;例如 Pandas DataFrame。该代码片段指定了一个分组操作&amp;#xff0c;该操作会将 data 数据按照“学号”和“姓名”这两个列进行分组。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;接着&amp;#xff0c;代码片段通过调用 groupby 方法&amp;#xff0c;对每个分组的“成绩”列进行聚合。具体来说&amp;#xff0c;这个聚合操作会计算每个分组的“成绩”列的平均值和计数&amp;#xff0c;并将结果保存在一个新的数据结构中。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;最后&amp;#xff0c;代码片段调用 reset_index 方法&amp;#xff0c;将分组信息&amp;#xff08;“学号”和“姓名”&amp;#xff09;作为结果数据的普通列&amp;#xff0c;而不是索引。这样&amp;#xff0c;结果数据就可以按照普通的列进行操作&amp;#xff0c;例如排序和过滤。&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;综上所述&amp;#xff0c;这个代码片段实现了以下操作&amp;#xff1a;对一个班级的学生信息进行分组&amp;#xff0c;并计算每个分组的“成绩”列的平均值和计数&amp;#xff0c;并将结果保存在一个新的数据结构中。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["希望好心人能给我一个注释，谢谢", ["python", "\n", "读取csv文件后进行的数据处理", "这句话不明白怎么解释，能给我加一个具体一点的注释吗，谢谢", "result = data.groupby(['学号', '姓名'])['成绩'].agg(['mean', 'count']).reset_index()"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;额你找找看有没有php对应的格式化插件phpfmt - PHP formatter&amp;#xff0c;然后右键格式化&lt;a href=\"https://blog.csdn.net/qq_36602939/article/details/86651087\"&gt;https://blog.csdn.net/qq_36602939/article/details/86651087&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;格式化之后应该就可以收缩了  &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vscode php代码折叠不完全(原因：注释没有缩进)", ["vscode 编辑器中，代码折叠不完全，原因是有的注释没有缩进(像下图这样，注释没有折叠进去，导致后面所有方法不能显示出来)，这种情况有大神知道怎么解决吗", "\n\n"]], "Tag": "程序设计"}
{"Answer": "梳理下圆锥的表面积和体积公式：\r\n\r\n```\r\n圆锥体的表面积=πRL+πR^2\r\n圆锥的体积=1/3*πR^2h \r\nh:圆锥体的高\r\nR为圆锥体底面圆的半径 \r\nL为圆锥的母线长\r\n\r\n```\r\n把所有的变量变成输入参数后，按照这个公式写输出变量值就可以了。", "Konwledge_Point": "注释", "Question": ["高分悬赏Java语言如何编写程序去计算一个圆锥的表面积和体积呢，要具体的代码和注释", ["高分悬赏Java语言如何编写程序去计算一个圆锥的表面积和体积呢，要具体的代码和注释"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;LoadLibrary是动态引入动态库&amp;#xff0c;可以不需要lib文件&amp;#xff0c;前提是要知道动态库中要使用的API函数的输入参数和返回值类型&lt;br /&gt;GetSystemMetrics是获取系统的一些度量值&amp;#xff0c;如系统分辨率、窗体显示区域的宽度和高度、滚动条的宽度和高度等&amp;#xff0c;SM_CXSCREEN和SM_CYSCREEN是以像素为单位计算的屏幕尺寸&amp;#xff0c;不过main函数中白写了&amp;#xff0c;w,h没使用。&lt;br /&gt;EnumResourceNames是枚举资源中指定类型的模块&amp;#xff0c;代码中是枚举图标文件(ICON)&amp;#xff0c;EnumResNameProc是回调函数&amp;#xff0c;在这个函数中定义枚举过程的具体行为&amp;#xff0c;代码中是将图标绘制在屏幕中央&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["大家能帮帮我写个注释吗", ["\n#define _WIN32_WINNT ", "0x601", "\n#", "include", " <windows.h>\nPOINT p;\nHDC hdc;\nBOOL CALLBACK ", "EnumResNameProc(HMODULE ", "hModule", ", LPCTSTR ", "lpszType", ", LPTSTR ", "lpszName", ", LPARAM ", "lParam", ")", "{\n    ", "if", "(lpszType", " == ", "RT_GROUP_ICON){\n        ", "GetCursorPos(&", "p", ")", ";\n        HICON hIcon = ", "LoadIcon(", "hModule", ", ", "lpszName", ")", ";\n        ", "int", " ix = ", "GetSystemMetrics(SM_CXICON)", " / ", "2", ", iy = ", "GetSystemMetrics(SM_CYICON)", " / ", "2", ";\n        ", "DrawIcon(", "hdc", ", ", "p", ".", "x", "-", "ix", ", ", "p", ".", "y", "-", "iy", ", LoadIcon(", "hModule", ", ", "lpszName", ")", ");\n    }\n    ", "Sleep(20)", ";\n    return TRUE;\n}\n\n", "int", " main", "()", "{\n    hdc = ", "GetDC(NULL)", ";\n    HMODULE hShell32 = ", "LoadLibrary(", "\"shell32.dll\"", ")", ";\n    ", "int", " w = ", "GetSystemMetrics(SM_CXSCREEN)", ", h = ", "GetSystemMetrics(SM_CYSCREEN)", ";\n    ", "for", "(;;){\n        ", "EnumResourceNamesA(", "hShell32", ", RT_GROUP_ICON, EnumResNameProc, 0)", ";\n        ", "Sleep(20)", ";\n    }\n}\n", "\n", "有没有人能帮忙加个注释，", "我实在是看不懂啊"]], "Tag": "程序设计"}
{"Answer": "什么叫直接和浮点小数的比较呢？需求有歧义没法判断。", "Konwledge_Point": "注释", "Question": ["高分悬赏：Java语言整数怎么实现直接和浮点小数的比较呢，最好代码加上注释", ["高分悬赏：Java语言整数怎么实现直接和浮点小数的比较呢，最好代码加上注释"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The contents of the example yaml file are sequence of objects, so do it like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"log\"\n\n    \"gopkg.in/yaml.v2\"\n)\n\ntype Config struct {\n    Foo string\n    Bar []string\n}\n\nvar data = `\n- foo: 1\n  bar:\n    - one\n    - two\n    - three\n- foo: 2\n  bar:\n    - one1\n    - two2\n    - three3\n`\n\nfunc main() {\n\n    var config []Config\n\n    /*\n       filename := os.Args[1]\n       source, err := ioutil.ReadFile(filename)\n       if err != nil {\n           panic(err)\n       }\n    */\n\n    source := []byte(data)\n\n    err := yaml.Unmarshal(source, &amp;amp;config)\n    if err != nil {\n        log.Fatalf(\"error: %v\", err)\n    }\n\n    //fmt.Printf(\"Value: %#v\n\", config.Bar[0])\n\n    fmt.Printf(\"--- config:\n%v\n\n\", config)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As to your updated question, your code almost works, just give a hint to the yaml parser like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Configs struct {\n    Cfgs []Config `foobars`\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Go Yaml解释示例", ["\n\n", "This Go Yaml Interpretation Example, \n", "https://gist.github.com/suntong001/74c85d15b19ef4b14b0e", ", can unmarshal a simple YAML like this:", "\n\n", "foo: 1\nbar:\n  - one\n  - two\n", "\n\n", "Now I want to interpretation an array of the exact same data structure, what's the correct way to do?", "\n\n", "Below is my code so far, and it is not working as expected. Please help.", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"log\"\n\n    \"gopkg.in/yaml.v2\"\n)\n\ntype Config struct {\n    Foo string\n    Bar []string\n}\n\ntype Configs struct {\n    Cfgs []Config\n}\n\nvar data = `\n- foo: 1\n  bar:\n    - one\n    - two\n    - three\n- foo: 2\n  bar:\n    - one1\n    - two2\n    - three3\n`\n\nfunc main() {\n\n  var config Configs\n\n    /*\n       filename := os.Args[1]\n       source, err := ioutil.ReadFile(filename)\n       if err != nil {\n           panic(err)\n       }\n    */\n\n    source := []byte(data)\n\n    err := yaml.Unmarshal(source, &config)\n    if err != nil {\n        log.Fatalf(\"error: %v\", err)\n    }\n\n    //fmt.Printf(\"Value: %#v\n\", config.Bar[0])\n\n    fmt.Printf(\"--- config:\n%v\n\n\", config)\n}\n", "\n\n", "UPDATE: ", "\n\n", "To make it work, Jfly pointed out, simply replace my ", "var config Configs", " with ", "var config []Config", ", and it does the trick. Now I think if change my data definition to the following, my above code would work. ", "\n\n", "foobars:\n - foo: 1\n   bar:\n    - one\n    - two\n    - three\n\n - foo: 2\n   bar:\n    - one1\n    - two2\n    - three3\n", "\n\n", "Nops, it doesn't. Please help.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的注释怎么写的呢&amp;#xff1f;&lt;br /&gt;-- 注释文字。(之间有空格)&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么我的--不能注释  ；不能结束啊", ["为什么我的--不能注释  ；不能结束啊，看教程说用；来结束上一段可是用了过后他还是执行了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/190681828946117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;文件 / 首选项 / 用户片段&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/524051828946192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;注释我就不写啦&amp;#xff0c;可以参考下。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-json\"&gt;{\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;express snippets&amp;#34;&lt;/span&gt;: {\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;javascript&amp;#34;&lt;/span&gt;,\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;prefix&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;eser&amp;#34;&lt;/span&gt;,\n        &lt;span class=\"hljs-string\"&gt;&amp;#34;body&amp;#34;&lt;/span&gt;: [\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;const express &amp;#61; require(&amp;#39;&lt;/span&gt;express&lt;span class=\"hljs-string\"&gt;&amp;#39;);&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;const app &amp;#61; express();&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;app.listen(3001, () &amp;#61;&amp;gt; {&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;\\tconsole.log(&amp;#39;&lt;/span&gt;Express server running at http:&lt;span class=\"hljs-number\"&gt;127.0&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.0&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;3001&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;);&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;})&amp;#34;&lt;/span&gt;,\n        ]\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/772580828946198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["在vcode中编写express的时候，输入“eser”怎么才能显示旁白提示，按回车建能快速生成？", ["例如上面这样,如何能像输入log一样，快速生成console.log代码，把express的基本模板快速生成出来，节省时间", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你原有的函数结构有个错误的地方&amp;#xff0c;已经给你修改过来了。请采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;Node* queryDiffer(Node** p1, Node** p2)&lt;span class=\"hljs-comment\"&gt;//定义了一个函数&amp;#xff0c;其返回值是Node的指针&amp;#xff0c;两个形参是Node的指针的指针p1和p2&amp;#xff08;也就是两个链表&amp;#xff09;&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (*p1 &amp;#61;&amp;#61; NULL) &lt;span class=\"hljs-comment\"&gt;//如果p1是空指针&amp;#xff08;空链表&amp;#xff09;&lt;/span&gt;\n        return p2;&lt;span class=\"hljs-comment\"&gt;//直接返回p2&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (*p2 &amp;#61;&amp;#61; NULL)&lt;span class=\"hljs-comment\"&gt;//如果p2是空指针&amp;#xff08;空链表&amp;#xff09;&lt;/span&gt;\n        return p1;&lt;span class=\"hljs-comment\"&gt;//直接返回p1&lt;/span&gt;\n    Node* p &amp;#61; NULL;&lt;span class=\"hljs-comment\"&gt;//声明一个Node的指针p&lt;/span&gt;\n    Node* &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt; &amp;#61; NULL;&lt;span class=\"hljs-comment\"&gt;//声明一个Node的指针pi&lt;/span&gt;\n    Node* pj &amp;#61; NULL;&lt;span class=\"hljs-comment\"&gt;//声明一个Node的指针pj&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt; &amp;#61; *p1; &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;!&amp;#61; NULL; &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;-&amp;gt;&lt;/span&gt;_pNext)&lt;span class=\"hljs-comment\"&gt;//通过pi对链表p1进行节点&amp;#xff08;Node&amp;#xff09;遍历&lt;/span&gt;\n    {\n        int isIn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//声明一个整形isIn为0&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt; ( pj&amp;#61; *p2; pj!&amp;#61;NULL; pj&amp;#61;pj-&amp;gt;&lt;/span&gt;_pNext)&lt;span class=\"hljs-comment\"&gt;//通过pj对链表p2进行节点遍历&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;-&amp;gt;&lt;/span&gt;_&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;data&lt;/span&gt;&amp;#61;&amp;#61;pj-&amp;gt;&lt;/span&gt;_&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果p1某个节点的data值&amp;#xff0c;和p2某个节点的data相等&lt;/span&gt;\n            {\n                isIn &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//则isIn赋值为1&lt;/span&gt;\n            }\n\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (isLn &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果经过pj对p2所有节点的遍历后isIn为0&amp;#xff0c;说明当前p1节点的data值&amp;#xff0c;和p2中所有节点的data值不等&amp;#xff08;即p1的该节点data值不在p2中存在&amp;#xff0c;即不用被差运算除去&amp;#xff09;&lt;/span&gt;\n        {\n            L&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;istPushBack&lt;/span&gt;(&amp;amp;p, &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;-&amp;gt;&lt;/span&gt;_&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//那么调用ListPusbBack函数&amp;#xff0c;传入当前p1节点的data值&amp;#xff0c;以更新差运算结果&lt;/span&gt;\n        }\n    }\n    return p;&lt;span class=\"hljs-comment\"&gt;//返回差运算的结果&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["能给一个详细一点的注释吗？C语言的", ["\n", "\n", "![img](", "\n  ", "\n  ", "\n  ", "\n  ", "\n    ", "\n      ", "https://img-mid.csdnimg.cn/release/static/image/mid/ask/111730754036150.png", "\n    ", "\n  ", " 'VTDUQ1%`", "@ZE00[F_11[IYCA.png'刚入门有点看不懂链表，希望能帮个忙，有重赏", "谢谢各位", "指针的用法也有点看不懂", "希望各位可以给点详细一点的注释"]], "Tag": "程序设计"}
{"Answer": "只是一个打印\r\n\r\n```\r\n **********\r\n```\r\n星号的程序吧，你里面那两个是控制星星个数的。", "Konwledge_Point": "注释", "Question": ["求解释这代码的意思，有注释也不太明白", ["画线的地方我不太明白它在里面的意思代表了什么，旁边的注释也有点搞不明白!"]], "Tag": "程序设计"}
{"Answer": "导入数据的时候就是乱码了 重新comment", "Konwledge_Point": "注释", "Question": ["plsql comment显示为'???'乱码，其他正常，怎么解决乱码？", ["plsql comment全部显示为'???'乱码，其他地方中文正常，字符集和环境变量，以及注册表都检查过，是一致的，怎么解决乱码？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注释掉只是为了方便日后修改程序&amp;#xff0c;比如你想要在case 2的时候把 key_num_s 置为0&amp;#xff0c;你就不需要再写了这条语句了&amp;#xff0c;直接取消注释就OK了&amp;#xff0c;仅此而已。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["提问：为什么每行都要这样注释", ["为什么每行都要进行语句注释（key_num_s=0;）？这样做的原因是什么？请不吝指教，感谢", "\n", "void key_service2()", "//", "*???????*", "//", "\n{\n\nswitch(key_num_s)\n{\n  case ", "0", ":\n            W=", "0", "x00;\n          C=", "0", "x01;\n ", "//", "key_num_s=", "0", ";\n          ", "break", ";\n    \n   case ", "1", ":\n        W=", "0", "x01;\n        C=", "0", "x00; \n ", "//", "key_num_s=", "0", ";     \n        ", "break", ";\n     \n   case ", "2", ":\n        W=", "0", "x00;\n        C=", "0", "x00;\n ", "//", "key_num_s=", "0", ";     \n        ", "break", ";\n  \n  }\n\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n @return List&lt;String&gt;\r\n-&gt;\r\n@return List&amp;lt;String&amp;gt;\r\n这样试试看\r\n```", "Konwledge_Point": "注释", "Question": ["Java注释里的return类型能写个泛型吗？", ["比如我有这样一个注释", "\n    /**", "\n     * 判断是否字段值是否产生重复", "\n     * @param fieldsNumber 要校验的不同字段值的总个数的List集合", "\n     * @param tableName 进行校验时要查找的表名", "\n     * @return List", "\n     */", "\n     使用时只能看到", "\n     Returns:List不能看到List后面的泛型  这个能显示吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Kanger.java&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;package lesson_4;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.concurrent.ThreadLocalRandom;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Karger {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Karger karger &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Karger();\n        Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph &amp;#61; karger.getRandomGraph(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n        karger.printGraph(graph);\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; graph.size();\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; iterationCount &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; * n * (n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; result &amp;#61; karger.runAlgorithm(graph, iterationCount);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;Smallest cut – &amp;#34; &amp;#43; result);\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; runAlgorithm(Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; minCut &amp;#61; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.MAX_VALUE;\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (count &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; copy &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;(graph);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cutsNumber &amp;#61; randomCut(&lt;span class=\"hljs-keyword\"&gt;copy&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cutsNumber &amp;lt; minCut)\n                minCut &amp;#61; cutsNumber;\n\n            count&lt;span class=\"hljs-comment\"&gt;--;&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; minCut;\n    }\n\n    // find the smallest cut (edges number)\n    protected &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; randomCut(Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cutsNumber &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n        // &lt;span class=\"hljs-keyword\"&gt;create&lt;/span&gt; common &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; edges\n        &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; totalSet &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; entry: graph.entrySet())\n            totalSet.addAll(entry.getValue());\n\n        // algorithm &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; executed &lt;span class=\"hljs-keyword\"&gt;until&lt;/span&gt; there are &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; vertices left\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (graph.size() !&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n            // берется рандомное ребро и запускается шаг алгоритма\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; randomEdge &amp;#61; getRandomElement(totalSet);\n            kargetStep(graph, randomEdge, totalSet);\n        }\n\n        // calculation &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; section print\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;Cut: &amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; entry: graph.entrySet()) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; edge : entry.getValue())\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(edge &amp;#43; &amp;#34; &amp;#34;);\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n            cutsNumber &amp;#61; entry.getValue().size();\n            break;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; cutsNumber;\n    }\n\n    // &lt;span class=\"hljs-keyword\"&gt;execute&lt;/span&gt; a step &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; the algorithm &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; vertex contraction\n    protected &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; kargetStep(Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; randomEdge, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; totalSet) {\n        // find vertices &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; this edge\n        Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; firstVertex &amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n        Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; secondVertex &amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; entry: graph.entrySet()) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (entry.getValue().contains(randomEdge)) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (firstVertex &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;)\n                    firstVertex &amp;#61; entry;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    secondVertex &amp;#61; entry;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt; firstVertex !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt; secondVertex !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n\n        // Two vertices converge &lt;span class=\"hljs-keyword\"&gt;into&lt;/span&gt; one\n        &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; commonVertex &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;(firstVertex.getValue());\n        commonVertex.addAll(secondVertex.getValue());\n\n        // Loops are removed\n        &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt; vertexWithoutLoops &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt; edge : commonVertex) {\n            &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt; &amp;#61; firstVertex.getValue().contains(edge) &amp;amp;&amp;amp; secondVertex.getValue().contains(edge);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!&lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt;)\n                vertexWithoutLoops.&lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(edge);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                totalSet.remove(edge);\n        }\n\n        // The first vertex &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; updated, the second one &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; deleted\n        graph.put(firstVertex.getKey(), vertexWithoutLoops);\n        graph.entrySet().remove(secondVertex);\n    }\n\n    // remove a random element &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; the &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;\n    protected &amp;lt;T&amp;gt; T getRandomElement(&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;#61; ThreadLocalRandom.&lt;span class=\"hljs-keyword\"&gt;current&lt;/span&gt;().nextInt(&lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;.size());\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (T e : &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt;) {\n                &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;.remove(e);\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; e;\n            }\n            i&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n    }\n\n\n    // &lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt; static created graph \n    protected Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; getStaticGraph() {\n        Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;));\n        graph.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;));\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; graph;\n    }\n\n    // &lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt; randomly &lt;span class=\"hljs-keyword\"&gt;generated&lt;/span&gt; graph \n    protected Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; getRandomGraph(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; vertexCount, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; edgeCount) {\n        Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();\n        ThreadLocalRandom random &amp;#61; ThreadLocalRandom.&lt;span class=\"hljs-keyword\"&gt;current&lt;/span&gt;();\n\n        // &lt;span class=\"hljs-keyword\"&gt;create&lt;/span&gt; graph &lt;span class=\"hljs-keyword\"&gt;without&lt;/span&gt; edges \n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[] vertexes &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[vertexCount];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; key &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; vertexCount; i&amp;#43;&amp;#43;) {\n            vertexes[i] &amp;#61; key;\n            graph.put(key, &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;());\n            key&amp;#43;&amp;#43;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; edgeCount; i&amp;#43;&amp;#43;) {\n            // obtain two random vertices\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; firstIndex &amp;#61; Math.abs(random.nextInt(vertexCount));\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; secondIndex &amp;#61; Math.abs(random.nextInt(vertexCount));\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (secondIndex &amp;#61;&amp;#61; firstIndex)\n                secondIndex &amp;#61; Math.abs(random.nextInt(vertexCount));\n            &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; firstVertex &amp;#61; vertexes[firstIndex];\n            &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; secondVertex &amp;#61; vertexes[secondIndex];\n\n            // &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt; common edge &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; the vertices\n            graph.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(firstVertex).&lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(i);\n            graph.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(secondVertex).&lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(i);\n        }\n\n        // remove vertices &lt;span class=\"hljs-keyword\"&gt;without&lt;/span&gt; edges &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; the graph\n        graph.entrySet().removeIf(entry -&amp;gt; entry.getValue().size() &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; graph;\n    }\n\n    // print graph &lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt; console \n    protected &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; printGraph(Map&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; graph) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=\"hljs-type\"&gt;Character&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; entry: graph.entrySet()) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(entry);\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;KargerStein.java&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;package lesson_4;\n\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; KargerStein extends Karger {\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n        KargerStein kargerStein &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;KargerStein()&lt;/span&gt;;\n        Map&amp;lt;Character, Set&amp;lt;Integer&amp;gt;&amp;gt; graph &amp;#61; kargerStein.get&lt;span class=\"hljs-constructor\"&gt;RandomGraph(50, 100)&lt;/span&gt;;\n\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; result &amp;#61; kargerStein.run&lt;span class=\"hljs-constructor\"&gt;SteinAlgorithm(&lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;Smallest cut – &amp;#34;&lt;/span&gt; &amp;#43; result);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// run the algorithm&lt;/span&gt;\n    public &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; run&lt;span class=\"hljs-constructor\"&gt;SteinAlgorithm(Map&amp;lt;Character, Set&amp;lt;Integer&amp;gt;&amp;gt; &lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; iterationCount &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;) &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Math&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;round(&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Math&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;sqrt(graph.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;));\n\n        &lt;span class=\"hljs-comment\"&gt;// graph is shrinking&lt;/span&gt;\n        contract&lt;span class=\"hljs-constructor\"&gt;Graph(&lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;)&lt;/span&gt;;\n\n        &lt;span class=\"hljs-comment\"&gt;// run  main algorithm&lt;/span&gt;\n        return run&lt;span class=\"hljs-constructor\"&gt;Algorithm(&lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;iterationCount&lt;/span&gt;)&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// pull the graph several times&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void contract&lt;span class=\"hljs-constructor\"&gt;Graph(Map&amp;lt;Character, Set&amp;lt;Integer&amp;gt;&amp;gt; &lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; size &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;) &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Math&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;floor(&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Math&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;sqrt(graph.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;));\n\n        Set&amp;lt;Integer&amp;gt; totalSet &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (Map.Entry&amp;lt;Character, Set&amp;lt;Integer&amp;gt;&amp;gt; entry: graph.entry&lt;span class=\"hljs-constructor\"&gt;Set()&lt;/span&gt;)\n            totalSet.add&lt;span class=\"hljs-constructor\"&gt;All(&lt;span class=\"hljs-params\"&gt;entry&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getValue&lt;/span&gt;()&lt;/span&gt;);\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (graph.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; !&amp;#61; size) {\n            &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; randomEdge &amp;#61; get&lt;span class=\"hljs-constructor\"&gt;RandomElement(&lt;span class=\"hljs-params\"&gt;totalSet&lt;/span&gt;)&lt;/span&gt;;\n            karget&lt;span class=\"hljs-constructor\"&gt;Step(&lt;span class=\"hljs-params\"&gt;graph&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;randomEdge&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;totalSet&lt;/span&gt;)&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["求一个Karger-Stein随机算法实现求无向图全局最小割的带注释的java实现代码！", ["最近正在学习", "karger-stein随机算法求无向图的全局最小割", "，想看看实现方法，网上搜的源码都是别的语言的看不太懂。希望有人能提供一份", "java", "版本实现karger-stein随机算法求全局最小割的代码，其他语言的看不太懂.。输入的", "无向图", "可以用", "邻接表形式", "存储并作为输入来处理，如果可以的话加一些", "注释", "这样我可能能看懂。感谢各位！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;whike循环里是抓取消息&amp;#xff0c;注释掉就没有处理消息了&lt;/p&gt;\n&lt;p&gt;while那行注释掉编译没问题&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释掉while循环，能否通过编译，如果能效果怎样？", ["\n", "注释掉while循环，能否通过编译，如果能效果怎样？", "\n", "// while( GetMessage( &msg, NULL, 0, 0 ))", " //  {", "  //    TranslateMessage(&msg);", "   //   DispatchMessage(&msg);", "  //  }"]], "Tag": "程序设计"}
{"Answer": "```\r\n void foo(int x, int y)\r\n{\r\n    if (x &gt; 1000) return;\r\n    if (x == y &amp;&amp; x == 1)\r\n    {\r\n        printf(\"%d %d \", 1, 1);\r\n        foo(x + y, x);\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        printf(\"%d \", x);\r\n        foo(x + y, x);\r\n    }\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    foo(1, 1);\r\n}\r\n```", "Konwledge_Point": "注释", "Question": ["哪个大婶能不能教会我如何用递归计算费波拉契数列的程序？要注释的", ["哪个大婶能不能教会我如何用递归计算费波拉契数列的程序？要注释的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个admin0.effective_time属性的值是实例对象&amp;#xff0c;不能赋值成字符串&lt;br /&gt;应该是&lt;br /&gt;admin0.effective_time.effective_time&amp;#61;&amp;#39;24h&amp;#39;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请问倒数第三行可以直接修改属性吗（注释里的是可以运行的）", ["请问倒数第三行可以直接修改属性吗（注释里的那行换过来是可以运行的）"]], "Tag": "程序设计"}
{"Answer": "你可以换用 Matplotlib。", "Konwledge_Point": "注释", "Question": ["使用python外部插件pycha时，出现中文乱码，有没有解决方案？", ["\n#以下是代码段", "\n    dataSet=(", "\n             ('iphone',((0,1),(0,0))),", "\n             ('htc',((0,12),(0,0))),", "\n             ('平',((0,3),(0,0)))", "\n            )"]], "Tag": "程序设计"}
{"Answer": "我只有0.8.3版本的，源代码发给你了。", "Konwledge_Point": "注释", "Question": ["求 proxool-cglib.jar 的源代码 带注释的", ["今天搞了半天 纠结啊 ", "\n\n", "proxool连接池会用了  想看看源代码 结果从proxool.sourceforg.org 上面下的proxool-0.9.1-source 包里面没有proxool-cglib.jar 的源代码 ", "\n\n", "后来又下了cglib2.2的源代码 想从中拷贝一些代码  但是与roxool-cglib.jar  中的文件位置不一样 结果 拼不上", "\n\n", "后来又从sourceforg上的cvs导出源代码 cvs上的目录显示是", "\n[img]", "http://dl.iteye.com/upload/attachment/464309/09736f79-5153-31dc-b5f9-9712ff5b86d6.png[/img]", "\n但是check out后 目录是 少了最重要的 asm 和cglib包  上面图片里显示的包 有的没check out出来 不知道是什么原因", "\n\n", "[img]", "http://dl.iteye.com/upload/attachment/464307/aef9e733-41f1-3c10-8fe7-2900ce56630d.png[/img]", "\n\n", "结果 上sourceforg 的proxool cvs的目录上看 结果虽然有 asm 和cglib 这两个包 但是 包里面没有 其他包或 .java文件", "\n\n", "难道是半开源？", "\n\n", "反编译我试过了 没有注释 我也没办法读代码啊", "\n\n", "希望能够提供  proxool-cglib.jar带注释的 的源代码   我的邮箱 ", "chenchangqun11@163.com", "\n\n", "或者 有读过这个项目源代码的人 给我提供一些解决方案   分有点少 忘前辈们赐教 菜鸟拜谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;端口一样吗&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请问 为啥axios有时请求数据失败。之前成功了。然后忽然失败了。我注释了。现在简单的都报404", ["请问 为啥axios有时请求数据失败。之前成功了。然后忽然失败了。我注释了。现在简单的都报404", "\n"]], "Tag": "程序设计"}
{"Answer": "如果需要实现此功能，你需要知道什么？\r\n参数是否合理？当str2大于str1时就明显不合理，这在最外层循环中体现\r\n每次在str1中匹配时，默认是在位置0开始的，这个位置由i体现\r\n如何判断是否找到？由if(j==len2)体现\r\n如何增加找到的次数？n++体现\r\n当找到后（没找到则移动一个位置），位置应该被移动str2的长度的距离，例如在12312中找12，第一次找到了，那么第二次应该在2312中找12吗？显然不需要，应该在312中找。由i += j-1体现，不过在这里我觉得使用 i += len2-1更合适。", "Konwledge_Point": "注释", "Question": ["C语言 求注释这是什么意思啊？", ["编写函数int fun(char *s1,char *s2)，在字符串s1中统计字符串s2出现的次数并返回。若s2在s1中未出现，则返回0。例如：", "\n若输入的字符串s1为：abaaAabcaabbabca，字符串s2为：ab ，则程序输出：n=4", "\n若输入的字符串s1为：abaaAabcaabbabca，字符串s2为：abd，则程序输出：No find", "\n\n", "答案： int fun(char *s1, char *s2)", "\n{", "\n    int i, j, len1 = strlen (s1), len2 = strlen (s2), n=0;", "\n\n", "for (i=0; i<=len1-len2; i++)\n{\n    for (j=0; j<len2; j++)\n    {\n        if (*(s1+i+j) != *(s2+j))\n            break;\n    }\n    if (j == len2)\n    {\n        i += j-1;\n        n++;\n    }\n}\n\nreturn n;\n", "\n\n", "}", "\n求每行的注释！！！！！！！！！！1"]], "Tag": "程序设计"}
{"Answer": "你是想知道手动的去调用xml文件然后怎么实现调用控制层是吧？\r\nApplicationContext ctx = new ClassPathXmlApplicationContext(\"dataSource.xml\");\r\n这中方式你能够获得xml的实例对吧，\r\n那么在xml中你已经配置好的很多bean就可以拿出来使用了。\r\nctx.getBean(\"\");通过名字去获取你要用的bean,那么去执行调用类中的方法不用我说了吧。如：\r\nLoginAction login = ctx.getBean(\"loginAction\");\r\nlogin.getUserAndPwd();\r\n等等。。。。。。", "Konwledge_Point": "注释", "Question": ["如何完成dao层的注释的依赖注入", ["由于业务需要，我现在要将应用中使用数据库和不使用数据库的分开加载，以防止数据库挂了，不需要数据库的应用也无法使用，最终是web页面无法显示，现在是我的web页面中的无需数据库的界面显示正常，而需要数据库不知道怎么在应用到时，即点击相应的应用时界面正常显示，我的有关数据库的应用如何在点击页面相关的数据库应用时，完成加载，控制层，业务层，dao层都是通过注释将将相应的类映射成bean的，现在是有一个数据源文件（如下），我如何做还能加载数据源，完成这些层的依赖注入，然后进行持久化操作，完成我的需求呢。", "dataSource.xml中的配置片段：", "<bean id=\"sessionFactory\"", "     class=\"org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean\">", "        <property name=\"dataSource\" ref=\"dataSource\" />", "     <!--自动完成实体的注解配置-->", "        <property name=\"packagesToScan\" >", "           <list>", "              <value>com/hahah/domain/</value>", "          </list>", "     </property>", "     <property name=\"hibernateProperties\">", "           <props>", "             <prop key=\"hibernate.show_sql\">true</prop>", "                <prop key=\"hibernate.format_sql\">true</prop>", "              <prop key=\"hibernate.dialect\">org.hibernate.dialect.MySQL5Dialect</prop>", "              <prop key=\"connection.autocommit\">true</prop>", "             <prop key=\"hibernate.hbm2ddl.auto\">update</prop>", "              <prop key=\"hibernate.cache.use_query_cache\">true</prop>", "               <prop key=\"hibernate.cache.use_second_level_cache\">true</prop>", "                <prop key=\"hibernate.cache.region.factory_class\">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory", "             </prop>", "             <prop key=\"hibernate.cache.provider_configuration_file_resource_path\">classpath:ehcache.xml</prop>", "            </props>", "        </property>", " </bean>", "我应该如何做呢，完成相应的依赖注入呢，在哪里调用这个配置文件呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解题思路:&lt;br /&gt;1-获取起始行的行号&lt;br /&gt;2-获取截止行的行号&lt;br /&gt;3-删除截止行到行尾的行号&lt;br /&gt;4-删除开头到其实行的行号(删除前判断第一个匹配行号是否大于1,大于1才操作)&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-shell\"&gt;l1&amp;#61;&lt;span class=\"hljs-constructor\"&gt;$(&lt;span class=\"hljs-params\"&gt;grep&lt;/span&gt; -&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt; &amp;#39;Package: &lt;span class=\"hljs-params\"&gt;linux&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;headers&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;abc&lt;/span&gt;&amp;#39; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;txt&lt;/span&gt; | &lt;span class=\"hljs-params\"&gt;cut&lt;/span&gt; -&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt; : -&lt;span class=\"hljs-params\"&gt;f&lt;/span&gt; 1)&lt;/span&gt;\nl2&amp;#61;&lt;span class=\"hljs-constructor\"&gt;$(&lt;span class=\"hljs-params\"&gt;grep&lt;/span&gt; -&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt; &amp;#39;Build-Profiles:&amp;#39; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;txt&lt;/span&gt; | &lt;span class=\"hljs-params\"&gt;cut&lt;/span&gt; -&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt; : -&lt;span class=\"hljs-params\"&gt;f&lt;/span&gt; 1)&lt;/span&gt;\nsed -i &lt;span class=\"hljs-constructor\"&gt;$((${&lt;!-- --&gt;&lt;span class=\"hljs-params\"&gt;l2&lt;/span&gt;}&amp;#43;1)&lt;/span&gt;)&amp;#39;,$d&amp;#39; a.txt\n&lt;span class=\"hljs-literal\"&gt;[[ &lt;span class=\"hljs-identifier\"&gt;$&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-identifier\"&gt;l1&lt;/span&gt;} -&lt;span class=\"hljs-identifier\"&gt;gt&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ]&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;sed -i &amp;#39;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&amp;#39;&lt;span class=\"hljs-constructor\"&gt;$((${&lt;!-- --&gt;&lt;span class=\"hljs-params\"&gt;l1&lt;/span&gt;}-1)&lt;/span&gt;)&lt;span class=\"hljs-character\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt; a.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/902205775066167.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["shell脚本，删除未匹配的行或者把未匹配行注释掉。", ["有一个control文件，格式是", "Package: linux-headers-abc", ".", ".", ".", "Build-Profiles: ", "我怎么匹配 Package 和 Build-Profiles 之间的内容(包括Package和Build-Profiles)。并且删除未匹配的行或注释掉未匹配的行。"]], "Tag": "程序设计"}
{"Answer": "http://download.csdn.net/detail/xauterp/3967887\r\nhttp://www.pudn.com/downloads259/sourcecode/windows/detail1194933.html", "Konwledge_Point": "注释", "Question": ["求delphi7编写ModBus RTU通讯实例，最好有详细注释 在线等？？？？？？？？", ["求delphi7编写ModBus RTU通讯实例，最好有详细注释 在线等？？？？？？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;Pattern(regexp &lt;/a&gt;&amp;#61; &amp;#34;/^[1-9]\\d{5}(18|19|20|(3\\d))\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/&amp;#34;, message &amp;#61; &amp;#34;身份证验证&amp;#34;)&lt;br /&gt;&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;ApiModelProperty(value &lt;/a&gt;&amp;#61; &amp;#34;身份证&amp;#34;)&lt;br /&gt;&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;TableField(&amp;#34;IDcard&amp;#34;)&lt;/a&gt;&lt;br /&gt;private String IDcard;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["做一个正则表达式，使用@Pattern注解，里面的regexp规则具体怎么写？百度了半天都是报错的", ["想做一个字段身份证全规则判断，具体到每一个数字代表的含义都要匹配身份证规则，但是半天写不出来，找了半天的资料都报错了，故来此寻求帮助。恳请 大-神 帮帮我。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个文件的后缀没有JAVA&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["idea的提示功能出问题，总是乱提示，我的代码注释掉了，还是显示错误", ["idea的提示功能出问题，总是乱提示，我的代码注释掉了，还是显示错误，", "问题如图，大家知道怎么解决吗"]], "Tag": "程序设计"}
{"Answer": "你好这个问题我不知道", "Konwledge_Point": "注释", "Question": ["MyBatis Generator 的xml中的元素报错。", ["二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB二楼是SB"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;怎么变不都是你自己写代码写的吗&lt;/p&gt;\n\n&lt;p&gt;获得焦点的时候就先设置成空&lt;/p&gt;\n\n&lt;p&gt;失去焦点的时候判断username如果是空就显示用户名是空&lt;/p&gt;\n\n&lt;p&gt;你应该用鼠标键盘录入内容之后&amp;#xff0c;让它自动触发函数执行&amp;#xff0c;就不会报错了&lt;/p&gt;\n\n&lt;p&gt;而不是写代码乱给它设置焦点&lt;/p&gt;\n\n&lt;p&gt;要么你设置好焦点之后顺便给username也赋值&amp;#xff0c;不要让它空着就失去焦点&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么注释了74行代码，执行结果和第70行代码效果不一样？要不断点击才能显示", ["\n", "\n", "想半天没想出来啥原因，按我的理解如果注释了72行代码，那么70行代码执行的时候因为我直接打开网页，没有点击文本框，所以相当于获取和失去焦点都没有触发，而是没激活是空的那么70行代码会跳进blur里面判断username，是空的就输出用户名是空，但是下面的74行代码我同样注释了，为什么网页端就不能直接显示出来密码不能为空，而是要我不断点击"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;打开workbench&amp;#xff0c;找到edit下的preferences,勾选Enable Code Completion in Editors与Automatically Start Code Completion   【望采纳】&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["mysql workbench如何提示表名、字段名", ["在使用mysql workbench软件编写sql语句的时候，为什么不能自动提示表名和字段名呢，", "例如： 我有三张表： TEST1、TEST2、TEST3", "           我输入select * from  T      的时候    TEST1、TEST2、TEST3  应该变成下拉框显示出来，提示一下", "\n", "下面是我的mysql workbench版本："]], "Tag": "程序设计"}
{"Answer": "果断自己，边读边注释呀，才有提高", "Konwledge_Point": "注释", "Question": ["matlab程序问题，希望大神帮我注释一下", [" %%请大神帮我注释一下，网上找的源代码，但是注释不全\n%%  清空环境\nclear\nclc\ntic\n%% 参数初始化\n% 粒子群算法中的两个参数\nc1 = 1.49445;\nc2 = 1.49445;\n\nmaxgen  = 200; % 进化次数\nsizepop = 20;  % 种群规模\n\nVmax = 1;\nVmin = -1;\npopmax = 5;\npopmin = -5;\n\n%% 产生初始粒子和速度\nfor i = 1:sizepop\n    % 随机产生一个种群\n    pop(i,:) = 5 * rands(1,2); % 初始种群\n    V(i,:) = rands(1,2);   % 初始化速度\n    % 计算适应度\n    fitness(i) = fun(pop(i,:));  % 染色体的适应度\nend\n\n% 找最好的染色体\n[bestfitness bestindex] = min(fitness);\nzbest = pop(bestindex,:);  % 全局最佳\ngbest = pop;  % 个体最佳\nfitnessgbest = fitness;  % 个体最佳适应度值\nfitnesszbest = bestfitness;  % 全局最佳适应度值\n%% 迭代寻优\nfor i = 1:maxgen\n    for j = 1:sizepop\n\n        % 速度更新\n        V(j,:) = V(j,:) + c1*rand*(gbest(j,:) - pop(j,:)) + c2*rand*(zbest - pop(j,:));\n        V(j,find(V(j,:)>Vmax)) = Vmax;\n        V(j,find(V(j,:)<Vmin)) = Vmin;\n\n        %种群更新\n        pop(j,:) = pop(j,:) + 0.5*V(j,:);\n        pop(j,find(pop(j,:)>popmax)) = popmax;\n        pop(j,find(pop(j,:)<popmin)) = popmin;\n\n        % 自适应变异\n        if rand > 0.8\n            k = ceil(2*rand);\n            pop(j,k) = rand;\n        end\n\n        % 适应度值\n        fitness(j) = fun(pop(j,:));\n    end\n\n    % 个体最优更新\n    if fitness(j) < fitnessgbest(j)\n        gbest(j,:) = pop(j,:);\n        fitnessgbest(j) = fitness(j);\n    end\n\n    % 群体最优更新\n    if fitness(j) < fitnesszbest\n        zbest = pop(j,:);\n        fitnesszbest = fitness(j);\n    end\n\n    yy(i) = fitnesszbest;\n\nend\ntoc\n%% 结果分析\nplot(yy);\ntitle(['适应度曲线    ' '终止代数=' num2str(maxgen)]);\nxlabel('进化代数');\nylabel('适应度');\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf()处理%d和%f的时候&amp;#xff0c;都会自动过滤掉前面的空格或者换行符&amp;#xff0c;而处理%c的时候&amp;#xff0c;会将\\n或者空格都原样的读入&amp;#xff0c;而不会过滤。&lt;/p&gt;\n\n&lt;p&gt;问题应该出在了你scanf(&amp;#34;%c,%c&amp;#34;)的时候。在此之前你输入两个浮点数的时候&amp;#xff0c;换行符送到了c1里面。&lt;/p&gt;\n\n&lt;p&gt;解决方案&amp;#xff0c;在最后一个scanf(&amp;#34;%c&amp;#34;)之前&amp;#xff0c;加入一个getchar();以消除换行符对你程序的影响。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么输出ASCII码不注释掉其他行就会执行错误", ["\n", "//注释掉其他行就可以正常输出ASCII码\nint main()\n{\n\tint a, b;\n\tfloat x, y;\n\tchar c1, c2;\n\t//printf(\"please scanf a,b;\\n\");\n\t//scanf(\"%d,%d\", &a, &b);\n\t//printf(\"please scanf x,y;\\n\");\n\t//scanf(\"%f,%f\", &x, &y); \n\t//printf(\"please scanf c1,c2;\\n\");\n\tscanf(\"%c,%c\", &c1, &c2);\n\t//printf(\"%d,%d,%.2f,%.2f,\\n\",a,b,x,y);\n\tprintf(\"%c,%c\", c1, c2);\n\treturn 0;\n}\n//删掉注释就无法正常输出\nint main()\n{\n\tint a, b;\n\tfloat x, y;\n\tchar c1, c2;\n\tprintf(\"please scanf a,b;\\n\");\n\tscanf(\"%d,%d\", &a, &b);\n\tprintf(\"please scanf x,y;\\n\");\n\tscanf(\"%f,%f\", &x, &y); \n\tprintf(\"please scanf c1,c2;\\n\");\n\tscanf(\"%c,%c\", &c1, &c2);\n\tprintf(\"%d,%d,%.2f,%.2f,\\n\",a,b,x,y);\n\tprintf(\"%c,%c\", c1, c2);\n\treturn 0;\n}", "\n\n", "\n\n", "注释掉其他行正常输出", "\n\n", "取消注释输出错误", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "这里有一篇详细的介绍，问答贴代码不太好阅读，直接参考这篇吧：\r\nhttps://blog.csdn.net/lwkrsa/article/details/82015364", "Konwledge_Point": "注释", "Question": ["Java语言高分悬赏：如何颠倒一个双向链表，写出具体的实现代码，并且注释下你的代码", ["Java语言高分悬赏：如何颠倒一个双向链表，写出具体的实现代码，并且注释下你的代码"]], "Tag": "程序设计"}
{"Answer": "重新添加一个：\r\n![图片说明](https://img-ask.csdn.net/upload/201909/25/1569390378_36650.png)", "Konwledge_Point": "注释", "Question": ["很急  路过的大佬帮忙看下", ["如图", "我的jdk不一样会保存 但是我选择了上面的 没有对应我的jdk 要怎么解决", "可以添加吗 怎么添加？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哪个函数要加注释&amp;#xff1f;哪段代码&amp;#xff1f;代码不难啊&amp;#xff0c;说重点吧&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请为此程序添加注释（C语言）", ["请为此程序添加注释", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<windows.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "define", " LEN sizeof(struct Student)", "\n", "struct", " ", "Student", "\n{\n    ", "char", " name[", "10", "];        \n    ", "char", " number[", "20", "];                     \n    ", "int", " C_Language;            \n    ", "int", " Math;                \n    ", "int", " English;    \n    ", "struct", " ", "Student", "* next;     \n};\n", "struct", " ", "Student", "* head = ", "NULL", ";\n", "struct", " ", "Student", "* end = ", "NULL", ";\n ", "void", " ", "Menu", "()", "\n ", "{\n     ", "void", " ", "Menu", "()", ";\n    ", "void", " ", "Add", "()", ";\n    ", "void", " ", "View", "()", ";\n    ", "void", " ", "Delete", "()", ";\n    ", "void", " ", "Repair", "()", ";\n    ", "void", " ", "ViewAll", "()", ";\n    ", "system", "(", "\"cls\"", ");\n    ", "printf", "(", "\"1、学生信息录入\\n\"", ");\n    ", "printf", "(", "\"2、学生单个成绩查询\\n\"", ");\n    ", "printf", "(", "\"3、查询全部学生成绩\\n\"", ");\n    ", "printf", "(", "\"4、修改学生信息\\n\"", ");\n    ", "printf", "(", "\"5、删除学生信息\\n\"", ");\n    ", "printf", "(", "\"6、退出系统\\n\"", ");\n\n    ", "int", " choice;\n    ", "printf", "(", "\"请选择要使用的功能：\\n\"", ");\n    loop:\n    ", "scanf", "(", "\"%d\"", ",&choice);\n    ", "switch", " (choice)\n    {\n        ", "case", " ", "1", ":\n            ", "Add", "();\n            ", "Menu", "();\n        ", "case", " ", "2", ":\n            ", "View", "();\n            ", "Menu", "();\n        ", "case", " ", "3", ":\n            ", "ViewAll", "();\n            ", "Menu", "();\n        ", "case", " ", "4", ":\n            ", "Repair", "();\n            ", "Menu", "();\n        ", "case", " ", "5", ":\n            ", "Delete", "();\n            ", "Menu", "();\n        ", "case", " ", "6", ":\n            ", "exit", "(", "0", ");\n            ", "default", ":\n                ", "printf", "(", "\"输入有误，请重新选择：\"", ");\n                ", "break", ";\n    }\n} \n \n", "void", " ", "Add", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "int", " count;\n    ", "printf", "(", "\"请输入要录入信息的个数：\"", ");\n    ", "scanf", "(", "\"%d\"", ",&count);\n    ", "struct", " ", "Student", " *s1,*s2,*temp;\n    s1=s2=(", "struct", " Student*)", "malloc", "(LEN);\n    ", "if", "(head==", "NULL", ")\n    {\n        head = s1;\n    }\n    ", "else", "\n    {\n        end->next = s1 ;\n    }\n    ", "int", " i = ", "1", ";    \n    ", "while", "(count>", "0", ")\n    {\n        ", "printf", "(", "\"请输入第%d位学生信息：\\n\"", ",i++);\n        ", "printf", "(", "\"姓名：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ",&s1->name);\n        ", "printf", "(", "\"学号：\\n\"", ");\n        ", "scanf", "(", "\"%s\"", ",&s1->number);\n        ", "printf", "(", "\"C语言成绩：\\n\"", ");\n        ", "scanf", "(", "\"%d\"", ",&s1->C_Language);\n        ", "printf", "(", "\"数学成绩:\\n\"", ");\n        ", "scanf", "(", "\"%d\"", ",&s1->Math);\n        ", "printf", "(", "\"英语成绩:\\n\"", ");\n        ", "scanf", "(", "\"%d\"", ",&s1->English);\n        count--;\n        s2->next=s1;\n        s2=s1;\n        s1=(", "struct", " Student*)", "malloc", "(LEN);\n        ", "printf", "(", "\"添加成功！\\n\"", ");\n        ", "system", "(", "\"pause\"", ");\n        ", "system", "(", "\"cls\"", ");\n    }\n    s2->next= ", "NULL", ";\n    end = s2;\n    ", "printf", "(", "\"全部添加成功！\\n\"", ");\n    ", "system", "(", "\"pause\"", ");\n}\n", "void", " ", "View", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *VS;\n    ", "printf", "(", "\"输入要查询信息的学生学号：\\n\"", ");\n    ", "char", " num[", "10", "];\n    ", "int", " flag=", "1", ";\n    ", "scanf", "(", "\"%s\"", ",&num);\n    ", "for", "(VS=head;VS!=", "NULL", ";)\n    {\n        ", "if", "(", "strcmp", "(VS->number,num)==", "0", ")\n        {\n            ", "printf", "(", "\"成功找到！\\n\"", ");\n            ", "printf", "(", "\"姓名：%s\\t学号：%s\\t\\n\"", ",VS->number,VS->name);\n            ", "printf", "(", "\"C语言：%d\\t数学:%d\\t英语：%d\"", ",VS->C_Language,VS->Math,VS->English);\n            flag=", "0", ";\n            ", "break", ";\n        }\n        VS=VS->next;\n    }\n    ", "if", "(flag)\n    {\n        ", "printf", "(", "\"不好意思，未找到！\\n\"", ");\n    }\n    ", "system", "(", "\"pause\"", ");\n}\n", "void", " ", "ViewAll", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *VA;\n    ", "if", "(head!=", "NULL", ")\n    {\n        ", "printf", "(", "\"所有学生成绩如下：\\n\"", ");\n        ", "for", "(VA=head;VA!=", "NULL", ";)\n        {\n            ", "printf", "(", "\"姓名：%s\\t学号：%s\\t\\n\"", ",VA->name,VA->number);\n            ", "printf", "(", "\"C语言：%d\\t数学:%d\\t英语：%d\\n\"", ",VA->C_Language,VA->Math,VA->English);\n            VA=VA->next; \n        }\n        ", "printf", "(", "\"所有不及格科目超过两科的学生名单如下:\\n\"", ");\n        ", "for", "(VA=head;VA!=", "NULL", ";)\n        {\n             ", "int", " lostNum = ", "0", ";\n            ", "if", "(VA->C_Language < ", "60", ")\n            {\n                lostNum++;\n            }\n            ", "if", "(VA->Math< ", "60", ")\n            {\n                lostNum++;\n            }\n            ", "if", "(VA->English< ", "60", ")\n            {\n                lostNum++;\n            }\n            ", "if", "(lostNum > ", "1", ")\n            {\n                ", "printf", "(", "\"姓名：%s\\t\\n\"", ",VA->name);\n            }\n             VA = VA->next;\n        }\n\n    }\n    ", "else", "\n    {\n        ", "printf", "(", "\"该系统中还未录入信息\"", ");\n    }\n    ", "system", "(", "\"pause\"", ");\n}\n", "void", " ", "Repair", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "struct", " ", "Student", " *RS;\n    ", "char", " num[", "10", "];\n    ", "int", " flag = ", "1", ";\n    ", "printf", "(", "\"输入要修改成绩学生的学号：\\n\"", ");\n    ", "scanf", "(", "\"%s\"", ",num);\n    ", "for", "(RS=head;RS!=", "NULL", ";)\n    {\n        ", "if", "(", "strcmp", "(RS->number,num)==", "0", ")\n        {\n            ", "printf", "(", "\"成功找到该学生\"", ");\n            ", "printf", "(", "\"姓名：%s\\t学号：%s\\t\\n\"", ",RS->number,RS->name);\n            ", "printf", "(", "\"C语言：%d\\t数学:%d\\t英语：%d\\n\"", ",RS->C_Language,RS->Math,RS->English);\n            flag = ", "0", ";\n            ", "printf", "(", "\"姓名：\\n\"", ");\n            ", "scanf", "(", "\"%s\"", ",&RS->name);\n            ", "printf", "(", "\"学号：\\n\"", ");\n            ", "scanf", "(", "\"%s\"", ",&RS->number);\n            ", "printf", "(", "\"C语言成绩：\\n\"", ");\n            ", "scanf", "(", "\"%d\"", ",&RS->C_Language);\n            ", "printf", "(", "\"数学成绩:\\n\"", ");\n            ", "scanf", "(", "\"%d\"", ",&RS->Math);\n            ", "printf", "(", "\"英语成绩:\\n\"", ");\n            ", "scanf", "(", "\"%d\"", ",&RS->English);\n            ", "printf", "(", "\"修改成功\"", ");\n            ", "system", "(", "\"pause\"", ");\n        }\n        RS=RS->next;\n    }\n    ", "if", "(flag)\n    {\n        ", "printf", "(", "\"输入信息有误，未查询到\"", ");\n        ", "system", "(", "\"pause\"", ");\n    }\n}\n", "void", " ", "Delete", "()", "\n", "{\n    ", "system", "(", "\"cls\"", ");\n    ", "int", " flag =", "1", ";\n    ", "while", "(flag)\n    {\n        ", "printf", "(", "\"请输入要删除的学生学号：\"", ");\n        ", "char", " num[", "10", "];\n        ", "scanf", "(", "\"%s\"", ",&num);\n        ", "struct", " ", "Student", " * DS,*temp;\n        ", "for", "(DS=head;DS!=", "NULL", ";)\n        {\n            ", "if", "(", "strcmp", "(DS->number,num)==", "0", ")\n            {\n                ", "if", "(DS==head)\n                {\n                    head = DS->next;\n                    flag = ", "0", ";\n                    ", "printf", "(", "\"删除成功！\\n\"", ");\n                    ", "system", "(", "\"pause\"", ");\n                }\n                ", "else", "\n                {\n                    flag = ", "0", ";\n                    ", "printf", "(", "\"删除成功！\\n\"", ");\n                    temp->next= DS->next;\n                    ", "free", "(DS);\n                    ", "system", "(", "\"pause\"", ");\n                }\n                \n            }\n            temp = DS;\n            DS=DS->next;\n        }\n        ", "if", "(flag)\n        {\n            ", "printf", "(", "\"未找到该学生学号！\\n\"", ");\n            ", "system", "(", "\"pause\"", ");\n        }\n    }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "void", " ", "Menu", "()", ";\n    ", "void", " ", "Add", "()", ";\n    ", "void", " ", "View", "()", ";\n    ", "void", " ", "Delete", "()", ";\n    ", "void", " ", "Repair", "()", ";\n    ", "void", " ", "ViewAll", "()", ";\n    ", "Menu", "();\n    \n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果多行书写内容的话&amp;#xff0c;可以按住alt键&amp;#xff0c;然后用鼠标左键向上或向下选择多行&amp;#xff0c;这样光标就会同时出现在多行了&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于#java#的问题：求一些java软件中的快捷键，比如怎么批量在多行文字后面添加注释", ["求一些java软件中的快捷键，比如怎么批量在多行文字后面添加注释，或者其他的一些快捷键，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-comment\"&gt;# 可忽略中文标点符号,表示没有注释看不太懂&amp;#x1f62d;&lt;/span&gt;\n\nimport re # 用import导入re模块&amp;#xff0c;用于正则表达式解析\n&lt;span class=\"hljs-comment\"&gt;# 分别定义三个变量,放语数英的和,赋初值为0&lt;/span&gt;\nsum_Language &amp;#61; 0  #语文总成绩为0\nsum_English &amp;#61; 0\nsum_Math &amp;#61; 0\n&lt;span class=\"hljs-comment\"&gt;# 分别定义三个变量,存放语数英最高分,赋初值为0&lt;/span&gt;\nMax_Language &amp;#61; 0  #语文最高成绩\nMax_English &amp;#61; 0\nMax_Math &amp;#61; 0\nlist &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小王&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小丽&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小花&amp;#39;&lt;/span&gt;] # 创建一个学生列表&amp;#xff0c;最好别用list最为列表变量名\nLanguage_max_name &amp;#61; 0 #分别定义三个变量,存放语数英最高分的人名的编号&amp;#xff0c;赋初值为0&amp;#xff0c;对应list[0]的值\nEnglish_max_name &amp;#61; 0\nMath_max_name &amp;#61; 0\n\nGrade_fifth &amp;#61; { # 创建一个集合记录学生成绩\n&lt;span class=\"hljs-string\"&gt;&amp;#39;小明&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;95.5&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;98&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;97&amp;#39;&lt;/span&gt;],\n&lt;span class=\"hljs-string\"&gt;&amp;#39;小王&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;96&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;92&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;82&amp;#39;&lt;/span&gt;] ,\n&lt;span class=\"hljs-string\"&gt;&amp;#39;小丽&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;91&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;100&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;90&amp;#39;&lt;/span&gt;],\n&lt;span class=\"hljs-string\"&gt;&amp;#39;小花&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;88&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;93&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;99&amp;#39;&lt;/span&gt;] ,\n}\n&lt;span class=\"hljs-comment\"&gt;# for name,grade in Grade_fifth.items(): # 在创建的学生集合里遍历所有名字&amp;#xff1f;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     print(&amp;#34;\\n&amp;#34;&amp;#43;name&amp;#43;&amp;#34;语文、英语、数学成绩是:&amp;#34;)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#     for grade_specify in grade: #&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#         print(&amp;#34;\\t&amp;#34;&amp;#43;grade_specify)&lt;/span&gt;\ntimer &amp;#61; 0 #设置初始最高成绩对应的人名&amp;#xff0c;这里指的是list的下标&amp;#xff0c;即小明\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;所有同学语文成绩是:&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; grade &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; Grade_fifth.values(): #返回学生成绩列表&amp;#xff0c;其中语文、英语、数学分别是0&amp;#xff0c;1&amp;#xff0c;2\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(grade[0]) #打印语文成绩\n    sum_Language &amp;#61; sum_Language &amp;#43; float(grade[0]) # 计算语文总成绩\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Max_Language &amp;lt;&amp;#61; float(grade[0])): #此处语法有问题&amp;#xff0c;实际应该是计算语文最高成绩&amp;#xff0c;设第一个为最高&amp;#xff08;95.5&amp;#xff09;&amp;#xff0c;用其他的分数与之比较&amp;#xff0c;遇到更大的则替换\n        Max_Language &amp;#61; float(grade[0])\n        Language_max_name &amp;#61; timer #\n        continue #最好加一个&amp;#xff0c;不然每次比较&amp;#xff0c;timer都自动加1\n    timer &amp;#61; timer&amp;#43;1\n\ntimer &amp;#61; 0\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;所有同学英语成绩是:&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; grade &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; Grade_fifth.values(): #计算英语的总成绩与最高成绩\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(grade[1])\n    sum_English &amp;#61; sum_English &amp;#43; int(grade[1])\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Max_English &amp;lt;&amp;#61; int(grade[1])):\n        Max_English &amp;#61; int(grade[1])\n        English_max_name &amp;#61; timer\n        continue\n    timer &amp;#61; timer&amp;#43;1\ntimer &amp;#61; 0\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;所有同学数学成绩是:&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; grade &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; Grade_fifth.values():\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(grade[2])\n    sum_Math &amp;#61; sum_Math &amp;#43; int(grade[2])\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Max_Math &amp;lt;&amp;#61; int(grade[2])):\n        Max_Math &amp;#61; int(grade[2])\n        Math_max_name &amp;#61; timer\n        continue\n    timer &amp;#61; timer&amp;#43;1\naverage_Language &amp;#61; sum_Language/4\naverage_English &amp;#61; sum_English/4\naverage_Math &amp;#61; sum_Math/4\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;语文、英语、数学平均成绩分别是:&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(average_Language)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(average_English)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(average_Math)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;语文最高成绩及对应姓名&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(list[Language_max_name])\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(Max_Language)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;英语最高成绩及对应姓名&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(list[English_max_name])\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(Max_English)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数学最高成绩及对应姓名&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(list[Math_max_name])\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(Max_Math)\ns&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;小明:98&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小王:92&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小丽:100&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小花:93&amp;#39;&lt;/span&gt;] #学生英语成绩表&amp;#xff0c;这个可以参考python的字典\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; s:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; re.match(&lt;span class=\"hljs-string\"&gt;&amp;#39;..:100&amp;#39;&lt;/span&gt;,i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;)[0])\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["Python补全代码注释（稍微细一点😭）", ["可忽略中文标点符号，表示没有注释看不太懂😭", "\n", "import re           # 用inport导入re模块", "sum_Language = 0    # 分别定义三个变量，放语数英的和，赋初值为0", "sum_English = 0", "sum_Math = 0", "Max_Language = 0     # 分别定义三个变量，存放语数英最高分，赋初值为0", "Max_English = 0", "Max_Math = 0", "list = ['小明','小王','小丽','小花']  # 创建一个学生列表", "Language_max_name = 0    #分别定义三个变量，存放语数英最高分的人名？赋初值为0", "English_max_name = 0", "Math_max_name = 0", "\n", "Grade_fifth = {                     # 创建一个集合记录学生成绩", "    ’小明’：[’95.5’，’98’，’97’]，", "    ’小王’：[’96’，’92’，’82’]  ，", "    ’小丽’:[’91’，’100’，’90’]，", "    ’小花’：[’88’，’93’，’99’] ，", "      }", "for name,grade in Grade_fifth.items():    # 在创建的学生集合里遍历所有名字？", "    print(“\\n”+name+“语文、英语、数学成绩是：”)", "    for grade_specify in grade:           #", "        print(\"\\t\"+grade_specify)", "timer = 0", "print(“所有同学语文成绩是：”)", "for grade in Grade_fifth.values():        #", "    print(grade[0])", "    sum_Language = sum_Language + float(grade[0])", "    if(Max_Language <= float(grade[0])):  #", "        Max_Language = float(grade[0])", "        Language_max_name = timer         #", "    timer = timer+1", "timer = 0", "print(“所有同学英语成绩是：”）", "for grade in Grade_fifth.values():      #", "    print(grade[1])", "    sum_English = sum_English + int(grade[1])", "    if(Max_English <= int(grade[1])):", "        Max_English = int(grade[1])", "        English_max_name = timer", "    timer = timer+1", "timer = 0", "print(“所有同学数学成绩是：”)", "for grade in Grade_fifth.values():", "    print(grade[2])", "    sum_Math = sum_Math + int(grade[2])", "    if(Max_Math <= int(grade[2])):", "        Max_Math = int(grade[2])", "        Math_max_name = timer", "    timer = timer+1", "average_Language = sum_Language/4", "average_English = sum_English/4", "average_Math = sum_Math/4", "print(“语文、英语、数学平均成绩分别是：”)", "print(average_Language)", "print(average_English)", "print(average_Math)", "print（“语文最高成绩及对应姓名”）", "print(list[Language_max_name])", "print(Max_Language)", "print(\"英语最高成绩及对应姓名\")", "print(list[English_max_name])", "print(Max_English)", "print(\"数学最高成绩及对应姓名\")", "print(list[Math_max_name])", "print(Max_Math)", "s=[’小明：98’,’小王：92’，’小丽：100’,’小花：93’] #学生英语成绩表", "for i in s:", "    if re.match(’..：100’，i):", "        print(i.split(’：’)[0])"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;方法外的语句之间不存在依赖关系&amp;#xff0c;即使你上面定义了ac&amp;#xff0c;下一行也无法使用这个ac。&lt;br /&gt;但是可以这样&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;{\n    ApplicationContext ac &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ......&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    UserCache userCache &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ac.get.......&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;用或括号包裹起来就可以了&amp;#xff0c;但是这种做法是不推荐的。&lt;br /&gt;最后&amp;#xff0c;建议补一下java基础知识&amp;#xff0c;不然后面吃大亏。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["最近刚学spring，为什么图中的注释部分不能写外面（无法运行，方法里面可以）？", ["最近刚学spring，为什么图中的注释部分不能写外面（无法运行，方法里面可以）？"]], "Tag": "程序设计"}
{"Answer": "@Scope(\"prototype\") 定义为prototype类型的实例创建之后spring就不在管理了，它只是做了new操作而已", "Konwledge_Point": "注释", "Question": ["关于Spring2.5 @PreDestory注释，销毁bean时不执行", ["发现当scope=\"prototype\" ,spring容器销毁对象的时候 @PreDestory 注释的方法不会执行，", "\nscope=\"singleton\" 的 @PreDestory 才会执行。。。", "\n请问这是为什么啊? ~", "\n\n", "[code=\"java\"]", "\n@Component(\"pService\")", "\n@Scope(\"prototype\")", "\npublic class PersonServiceImpl implements PersonService {", "\n\n", "@PostConstruct\npublic void init() {\n    System.out.println(\"初始化咯~\");\n}\n\n@PreDestroy  //这里spring容器销毁的时候并没有执行....\npublic void destory(){\n    System.out.println(\"销毁了~\");\n}\n", "\n\n", "}", "\n\n", "[/code]", "\n\n", "如果是prototype:", "\n初始化咯~", "\nPrototype !!!", "\nSaving in PersonServiceImpl...null", "\nSaving in PersonDaoImpl ...", "\n2009-1-21 11:34:22 org.springframework.context.support.AbstractApplicationContext doClose", "\n信息: Closing org.springframework.context.support.ClassPathXmlApplicationContext@280387: display name [org.springframework.context.support.ClassPathXmlApplicationContext@280387]; startup date [Wed Jan 21 11:34:20 CST 2009]; root of context hierarchy", "\n2009-1-21 11:34:22 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons", "\n信息: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a3c6f: defining beans [pDao,pService,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor]; root of factory hierarchy", "\n\n", "如果是singleton:", "\n初始化咯~", "\nSingleton !!!", "\nSaving in PersonServiceImpl...null", "\nSaving in PersonDaoImpl ...", "\n2009-1-21 11:35:39 org.springframework.context.support.AbstractApplicationContext doClose", "\n信息: Closing org.springframework.context.support.ClassPathXmlApplicationContext@280387: display name [org.springframework.context.support.ClassPathXmlApplicationContext@280387]; startup date [Wed Jan 21 11:35:37 CST 2009]; root of context hierarchy", "\n2009-1-21 11:35:39 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons", "\n信息: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a3c6f: defining beans [pDao,pService,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor]; root of factory hierarchy", "\n销毁了~"]], "Tag": "程序设计"}
{"Answer": "使用maven compiler plugin编译\r\n\r\n&lt;plugin&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.0.2&lt;/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;source&gt;1.5&lt;/source&gt;\r\n\t\t\t\t\t&lt;target&gt;1.5&lt;/target&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;", "Konwledge_Point": "注释", "Question": ["mvn compile遇到的问题：-source1.3 中不支持注释", ["mvn compile遇到的问题：-source1.3 中不支持注释", "\n\n", "尝试学习使用mvn，在mvn compile的时候发生错误：-source1.3 中不支持注释，（请尝试使用 -source 1.5 以启用注释），看起来是jdk 的版本错误，不识别注解，但我的jdk是：java version \"1.5.0_07\"。 ", "\n难道哪里还有配置？ ", "\n以下是错误信息：", "\n\n", "[INFO] ------------------------------------------------------------------------", "\n[INFO] Trace", "\norg.apache.maven.BuildFailureException: Compilation failure", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa", "\nultLifecycleExecutor.java:560)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLi", "\nfecycle(DefaultLifecycleExecutor.java:480)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Defau", "\nltLifecycleExecutor.java:459)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHan", "\ndleFailures(DefaultLifecycleExecutor.java:311)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmen", "\nts(DefaultLifecycleExecutor.java:278)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi", "\nfecycleExecutor.java:143)", "\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:333)", "\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)", "\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:282)", "\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.", "\njava:39)", "\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces", "\nsorImpl.java:25)", "\n        at java.lang.reflect.Method.invoke(Method.java:585)", "\n        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)", "\n        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)", "\n        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)", "\n        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)", "\nCaused by: org.apache.maven.plugin.CompilationFailureException: Compilation fail", "\nure", "\n        at org.apache.maven.plugin.AbstractCompilerMojo.execute(AbstractCompiler", "\nMojo.java:516)", "\n        at org.apache.maven.plugin.CompilerMojo.execute(CompilerMojo.java:114)", "\n        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi", "\nnManager.java:447)", "\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa", "\nultLifecycleExecutor.java:539)", "\n        ... 16 more", "\n[INFO] ------------------------------------------------------------------------", "\n[INFO] Total time: 4 seconds", "\n[INFO] Finished at: Mon May 26 13:54:35 CST 2008", "\n[INFO] Final Memory: 5M/254M", "\n[INFO] ------------------------------------------------------------------------"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能智能识别功能出故障了&amp;#xff0c;重新打开工程可能恢复&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vs写c++，时不时连注释都显示表示错误的红色波浪线，但是运行没问题，怎么办？", ["敲着代码，本来应该高亮的关键字都变白了，没问题的代码也会打上红色波浪线，连注释都有，怎么解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;a &amp;#61; &amp;#34; 床前明月光&amp;#xff0c; 疑是地上霜。 举头望明月&amp;#xff0c; 低头思故乡。 &amp;#34;\na &amp;#61; a.split()\na.insert(0, &amp;#39;静夜思&amp;#39;)\na.insert(1, &amp;#39;唐李白&amp;#39;)\nprint(a)\nwith open(&amp;#39;古诗.txt&amp;#39;, &amp;#39;a&amp;#43;&amp;#39;, encoding&amp;#61;&amp;#39;utf-8&amp;#39;) as f:\n    for i in range(6):  # 最长的话的长度为 5\n        for j in a:  # [&amp;#39;静夜思&amp;#39;, &amp;#39;唐李白&amp;#39;, &amp;#39;床前明月光&amp;#xff0c;&amp;#39;, &amp;#39;疑是地上霜。&amp;#39;, &amp;#39;举头望明月&amp;#xff0c;&amp;#39;, &amp;#39;低头思故乡。&amp;#39;]\n            try:\n                f.write(j[i]&amp;#43;&amp;#39; &amp;#39;)  # 如果长度足够&amp;#xff0c;就一个字一个字的输出\n            except:\n                f.write(&amp;#39; &amp;#39;*4)  # 如果长度不够&amp;#xff0c;比如静夜思是三个字&amp;#xff0c;不够五个字&amp;#xff0c;就用两个空格来代替\n        f.write(&amp;#39;\\n&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这样就写入到当前文件夹下的 古诗.txt 里面了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释代码的意思和帮忙把古诗补完整", ["\n\n", "1.要求每行都有注释，特别是第5、6、7、8行解释清楚。", "\n\n", "2.要求古诗前面最左边加上两竖行  静夜思   唐李白（请问唐如果加上括号怎么才能代码不乱）解释下这些字数和行数是改变代码里面的什么进行增加的？", "\n\n", "3.每句古诗的下面有标点符号，就是第一句，第二句。第三句，第四句。", "\n\n", "4.如果可以提供下我是要去加强哪方面的Python知识？", "\n\n", " ", "\n\n", "5.原本要求是将以下横排诗句静夜思 床前明月光 疑是地上霜  举头望明月 低头思故乡 ", "\n（注意严格按以上格式）", "\n按竖排展现写入一个新文本文档中。", "\n\n", "这是不是要先写一个横排再转换成竖排？还是直接弄竖排？我们是写完程序再另存为桌面吗？不然要怎么建立文档"]], "Tag": "程序设计"}
{"Answer": "long n = 461012;\r\n      System.out.format(\"%d%n\", n);                  //  --&gt;  \"461012\"\r\n      System.out.format(\"%08d%n\", n);                //  --&gt;  \"00461012\"\r\n      System.out.format(\"%+8d%n\", n);                //  --&gt;  \" +461012\"\r\n      System.out.format(\"%,8d%n\", n);                //  --&gt;  \" 461,012\"\r\n      System.out.format(\"%+,8d%n%n\", n);             //  --&gt;  \"+461,012\"\r\n      \r\n      double pi = Math.PI;\r\n      System.out.format(\"%f%n\", pi);                 //  --&gt;  \"3.141593\"\r\n      System.out.format(\"%.3f%n\", pi);               //  --&gt;  \"3.142\"\r\n      System.out.format(\"%10.3f%n\", pi);             //  --&gt;  \"     3.142\"\r\n      System.out.format(\"%-10.3f%n\", pi);            //  --&gt;  \"3.142\"\r\n      System.out.format(Locale.FRANCE,\r\n                        \"%-10.4f%n%n\", pi);          //  --&gt;  \"3,1416\"\r\n      Calendar c = Calendar.getInstance();\r\n      System.out.format(\"%tB %te, %tY%n\", c, c, c);  //  --&gt;  \"May 29, 2006\"\r\n      System.out.format(\"%tl:%tM %tp%n\", c, c, c);   //  --&gt;  \"2:34 am\"\r\n      System.out.format(\"%tD%n\", c);                 //  --&gt;  \"05/29/06\"", "Konwledge_Point": "注释", "Question": ["java中的System.out.format(\"c1=0x\"+\"x%\",c1)的注释该怎么写？", ["java中的System.out.format(\"c1=0x\"+\"x%\",c1)的注释该怎么写？", "\njava中的format用法有哪些啊，什么情况下可以用？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; os\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.rcParams[&amp;#39;axes.labelsize&amp;#39;] &amp;#61; &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.rcParams[&amp;#39;xtick.labelsize&amp;#39;] &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.rcParams[&amp;#39;ytick.labelsize&amp;#39;] &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;np&lt;/span&gt;.random.seed(&lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; warnings\n&lt;span class=\"hljs-attribute\"&gt;warnings&lt;/span&gt;.filterwarnings(&amp;#39;ignore&amp;#39;)\n\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*np.random.uniform(-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, size&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &amp;#61; x.reshape(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*X**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;X&amp;#43;np.random.randn(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.scatter(x, y)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.axis([-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;])\n\n&lt;span class=\"hljs-attribute\"&gt;X_poly&lt;/span&gt; &amp;#61; np.hstack([X, X**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n\n\n&lt;span class=\"hljs-attribute\"&gt;from&lt;/span&gt; sklearn.linear_model import LinearRegression\n\n&lt;span class=\"hljs-attribute\"&gt;lin_reg&lt;/span&gt; &amp;#61; LinearRegression()\n&lt;span class=\"hljs-attribute\"&gt;lin_reg&lt;/span&gt;.fit(X_poly, y)\n&lt;span class=\"hljs-attribute\"&gt;y_predict&lt;/span&gt; &amp;#61; lin_reg.predict(X_poly)\n\n&lt;span class=\"hljs-comment\"&gt;# 由于x是乱的&amp;#xff0c;所以应该进行排序&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.plot(np.sort(x), y_predict[np.argsort(x)], color&amp;#61;&amp;#39;r&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;plt&lt;/span&gt;.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/514557029156142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["补全代码生成一个多项式回归曲线 并对代码进行简单的注释", ["import numpy as np", "import os", "import matplotlib", "import matplotlib.pyplot as plt", "plt.rcParams['axes.labelsize'] = 14", "plt.rcParams['xtick.labelsize'] = 12", "plt.rcParams['ytick.labelsize'] = 12", "np.random.seed(42)", "import warnings", "warnings.filterwarnings('ignore')", "\n", "x = 2", "np.random.uniform(-3, 3, size=100)", "X = x.reshape(100, 1)", "y = 0.5", "X**2+X+np.random.randn(100,1)", "\n", "plt.scatter(x, y)", "plt.axis([-3,3,-10,10])", "plt.show()", "\n", "X_poly = np.hstack([X, X**2])", "\n", "补全代码生成一个多项式回归曲线 并对上述各行代码进行简单的注释"]], "Tag": "程序设计"}
{"Answer": "(magic &amp; MAGIC_MASK) != MAGIC)\r\n\r\nmagic是一组二进制位开关\r\n MAGIC_MASK作为参照\r\n这里的意思就是，判断MAGIC_MASK标记为1的字段，在magic中是否全为1\r\n\r\n举例\r\nm M m&amp;M m&amp;M==M\r\n00 01 00 0\r\n01 01 01 1\r\n10 01 00 0\r\n11 01 01 1", "Konwledge_Point": "注释", "Question": ["关于按位与在这个程序的的实际意义，看我注释", ["public class VoteMsgBinCoder implements VoteMsgCoder{", "\n    public static final int MIN_WIRE_LENGTH = 4;", "\n     public static final int MAX_WIRE_LENGTH = 16;", "\n     public static final int MAGIC = 0x5400;", "\n     public static final int MAGIC_MASK = 0xfc00;", "\n     public static final int MAGIC_SHIFT = 8;", "\n     public static final int RESPONSE_FLAG = 0x0200;", "\n     public static final int INQUIRE_FLAG = 0x0100;", "\n      public VoteMsg fromWire(byte[] input) throws IOException {", "\n          ByteArrayInputStream bs = new ByteArrayInputStream(input);", "\n          DataInputStream in = new DataInputStream(bs);", "\n          int magic = in.readShort();", "\n            /*为什么是和MAGIC_MASK进行位与运算呢，为什么是和MAGIC进行比较呢，而不是其他数，小弟对位运算不是很明白*/", "\n          if ((magic & MAGIC_MASK) != MAGIC) {", "\n          throw new IOException(\"Bad Magic #: \" +", "\n          ((magic & MAGIC_MASK) >> MAGIC_SHIFT));", "\n          }", "\n\n", "      boolean resp = ((magic & RESPONSE_FLAG) != 0);\n      boolean inq = ((magic & INQUIRE_FLAG) != 0);\n      int candidateID = in.readShort();\n      if (candidateID < 0 || candidateID > 1000) {\n      throw new IOException(\"Bad candidate ID: \" + candidateID);\n      }\n      long count = 0;\n      if (resp) {\n      count = in.readLong();\n      if (count < 0) {\n      throw new IOException(\"Bad vote count: \" + count);\n      }\n      }\n      // Ignore any extra bytes\n      return new VoteMsg(resp, inq, candidateID, count);\n      }  \n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "可以教你一些规律性的东西，比如\r\nPrivacyImpactedStateChange\r\n这种每个单词首字母大写的命名方法叫做驼峰命名法，要理解这个是什么含义，非常简单，就是把它拆分成单词，每个单词找英文词典（如果你英语太差）查什么意思。\r\n连起来就是它的意思。比如这个，就是“隐私影响状态的改变”，这是一个事件，显然就在这个情况下触发。", "Konwledge_Point": "注释", "Question": ["菜鸟~~~~求帮忙帮忙注释", ["麻烦大神帮忙备注下注释哈，网上找的代码不懂看", "\n拜托！！！", "\n\n", "         TabPage AddTab()\n        {\n            TabPage page = null;\n\n            // 从后向前找连续空白页面的最左边那个空白页\n            for (int i=tab.TabPages.Count-2; i>=0; i--)\n            {\n                TabPage p = tab.TabPages[i];\n                if (p.Text == BLANK_URL && string.IsNullOrEmpty((p.Tag as BrowserData).Address) == false)\n                {\n                    page = p;\n                }\n                else\n                {\n                    break;\n                }\n            }\n\n\n\n            if (page == null)\n            {\n                page = new TabPage();\n                page.ImageIndex = 1;\n                AxWebBrowser webBrowser = new AxWebBrowser();\n                webBrowser.Dock = DockStyle.Fill;\n\n                webBrowser.PrivacyImpactedStateChange += new AxSHDocVw.DWebBrowserEvents2_PrivacyImpactedStateChangeEventHandler(webBrowser_PrivacyImpactedStateChange);\n                webBrowser.ProgressChange += new AxSHDocVw.DWebBrowserEvents2_ProgressChangeEventHandler(webBrowser_ProgressChange);\n                webBrowser.SetSecureLockIcon += new AxSHDocVw.DWebBrowserEvents2_SetSecureLockIconEventHandler(webBrowser_SetSecureLockIcon);\n                webBrowser.WindowClosing += new AxSHDocVw.DWebBrowserEvents2_WindowClosingEventHandler(webBrowser_WindowClosing);\n                webBrowser.StatusTextChange += new AxSHDocVw.DWebBrowserEvents2_StatusTextChangeEventHandler(this.webBrowser_StatusTextChange);\n                webBrowser.DownloadComplete += new System.EventHandler(this.webBrowser_DownloadComplete);\n                webBrowser.CommandStateChange += new AxSHDocVw.DWebBrowserEvents2_CommandStateChangeEventHandler(this.webBrowser_CommandStateChange);\n                webBrowser.TitleChange += new AxSHDocVw.DWebBrowserEvents2_TitleChangeEventHandler(this.webBrowser_TitleChange);\n                webBrowser.DocumentComplete += new AxSHDocVw.DWebBrowserEvents2_DocumentCompleteEventHandler(this.webBrowser_DocumentComplete);\n                webBrowser.DownloadBegin += new EventHandler(webBrowser_DownloadBegin);\n                webBrowser.BeforeNavigate2 += new AxSHDocVw.DWebBrowserEvents2_BeforeNavigate2EventHandler(webBrowser_BeforeNavigate2);\n\n                try\n                {\n                    webBrowser.NewWindow3 += new AxSHDocVw.DWebBrowserEvents2_NewWindow3EventHandler(this.webBrowser_NewWindow3);\n                }\n                catch\n                {\n                }\n\n                page.Tag = new BrowserData(webBrowser, false, false);\n                page.Controls.Add(webBrowser);\n\n                if (tab.TabPages.Count < 1)\n                {\n                    tab.TabPages.Add(page);\n                    tab.TabPages.Add(new TabPage());//加一个空白页\n                }\n                else\n                {\n                    tab.TabPages.Insert(tab.TabPages.Count - 1, page);\n                }\n            }\n\n            tab.SelectedTab = page;\n            return page;\n        }\n"]], "Tag": "程序设计"}
{"Answer": "\\\\A正则匹配的是本次输入的开始。\r\nString result = scanner.useDelimiter(EVERYTHING_PATTERN).next();\r\n\r\n该行代码的意思是匹配到下次输入的开始，在CMD中结束本次输入的快捷键是CTRL+Z。该行代码返回的是该次输入的全部内容，存储到result中。", "Konwledge_Point": "注释", "Question": ["java大神帮忙解释下标注的代码如何执行", ["\npublic final class StdIn {\n        private static final Pattern EVERYTHING_PATTERN = Pattern.compile(\"\\\\A\");\n        private static Scanner scanner;\n    public static String readAll() {\n\n        if (!scanner.hasNextLine())\n            return \"\";\n\n                //以下这行代码怎么执行的，如何执行\n        String result = scanner.useDelimiter(EVERYTHING_PATTERN).next();\n\n        scanner.useDelimiter(WHITESPACE_PATTERN); // but let's do it anyway\n        return result;\n    }\n\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个问题有意思,&lt;br /&gt;首先应该可以排除查的是视图,视图里可以写随机函数让你有时查不到,应该没人会做这么无聊的事&amp;#xff1b;&lt;br /&gt;然后开始正经分析:&lt;br /&gt;一、虽然视频中是使用同一个已保存的连接,但是,这并不能肯定是连接的同一个数据库实例,你可以通过下面这几种方式验证一下&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;在查不到数据的数据库创建一张表,然后到查得到的数据库中看这张表是否存在&lt;/li&gt;&lt;li&gt;在两个数据库中分别查询 &amp;#34;select * from v$instance;&amp;#34;看看实例名称、机器名称等是否一致&lt;/li&gt;&lt;li&gt;在两个数据库中查询IP,查询方式参考此篇文章&lt;a href=\"https://www.modb.pro/db/179850\" id=\"textarea_1640166297598_1640167856106_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.modb.pro/db/179850&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;二、如果无论怎么检查的确是同一个数据库,检查2个sql的执行计划是否有区别,尝试在查不到的那个数据库上修改查询条件缩小范围,看是不是的确没有数据,因为可能存在执行计划跑错了导致数据查不到的情况,&lt;/p&gt;\n&lt;p&gt;三、最后一种可能性,就得看下数据库是不是有损坏了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["oracle数据库同样的查询语句有时候能查出数据，有时候查不出，需要重新连接。导致前端页面点查询也是这个情况。", ["问题遇到的现象和发生背景", "\n", "前端页面发现经常查不出数据，用pl/sql连数据库发现用语句查也是一样的情况，对于只是一个运维的我，人都要裂开了，求帮忙看看是哪里出了问题，", "可以看下我发在社区的这个帖子，里面有视频。", "这个是社区链接", "https://bbs.csdn.net/topics/603877676", "\n", "select count(", ") from detect_speed_data t", "where t.dcollectiondate between", "to_date('2021-12-10 00;00;00', 'yyyy-mm-dd HH24;mi;ss') and", "to_date('2021-12-10 23;59;59', 'yyyy-mm-dd HH24;mi;ss');", "//", "select t.rowid,t.", " from detect_speed_data t", "where t.dcollectiondate between", "to_date('2021-12-10 00;00;00', 'yyyy-mm-dd HH24;mi;ss') and", "to_date('2021-12-10 23;59;59', 'yyyy-mm-dd HH24;mi;ss');", "//", "select count(", ") from detect_speed_data t", "where t.dcollectiondate between", "to_date('2021-12-22 00;00;00', 'yyyy-mm-dd HH24;mi;ss') and", "to_date('2021-12-22 23;59;59', 'yyyy-mm-dd HH24;mi;ss');", "//", "select t.rowid,t.", " from detect_speed_data t", "where t.dcollectiondate between", "to_date('2021-12-22 00;00;00', 'yyyy-mm-dd HH24;mi;ss') and", "to_date('2021-12-22 23;59;59', 'yyyy-mm-dd HH24;mi;ss');", "//", "select count(*) from(select * from  detect_speed_data where dcollectiondate > sysdate - 60/1440)", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;要用use挂载才能全局调用&amp;#xff0c;如果不想全局挂载&amp;#xff0c;直接在request&amp;#43;.js文件里面import axios就可以了。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于#封装#的问题，如何解决？第一次进行简短封装但是封装后总是不请求，上边注释的可以正常请求", ["关于#封装#的问题，如何解决？第一次进行简短封装但是封装后总是不请求，上边注释的可以正常请求", "\n", "\n", "<input type=\"checkbox\" disabled=\"\" /> ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)); &lt;span class=\"hljs-comment\"&gt;//初始化种子&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, t;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;], cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        t &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//产生随机数&amp;#xff0c;并输出&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, t);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; j &amp;lt; t; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//判断素数&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; t) &lt;span class=\"hljs-comment\"&gt;//如果是素数&amp;#xff0c;保存到a&amp;#xff0c;cnt记录素数数量&lt;/span&gt;\n            a[cnt&amp;#43;&amp;#43;] &amp;#61; t;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; cnt; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//输出素数&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["不会思路和意思，可以写下代码和注释吗，目前只学到循环和函数，没有学指针", ["它的思路和意思是什么啊？可以写一下代码和注释吗，完全超出我的能力范围内了，但是想弄懂，没有学到指针，只学到函数以及循环"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You must follow &lt;code&gt;// +build XXX&lt;/code&gt; with a blank line.&lt;/p&gt;\n\n&lt;p&gt;In my brief search, I couldn't find where/if this is documented. But &lt;a href=\"https://code.google.com/p/go/source/browse/src/pkg/go/build/build.go?r=2449e85a115014c3d9251f86d499e5808141e6bc#790\" rel=\"noreferrer\"&gt;the source&lt;/a&gt; clearly calls it out&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Golang条件编译", ["\n\n", "I've got a trouble with conditional compilation in Go 1.", "\n\n", "Here is my test code. Is there anything I misunderstand about the \"// +build\" constraint and the \"-tags\" flag?", "\n\n", "main1.go", "\n\n", "// +build main1\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    fmt.Println(\"This is main 1\")\n}\n", "\n\n", "main2.go", "\n\n", "// +build main2\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    fmt.Println(\"This is main 2\")\n}\n", "\n\n", "when running \"go build\", I still got compile error", "\n\n", "$ go build -tags 'main1'\n# test\n./main2.go:8: main redeclared in this block\n        previous declaration at ./main1.go:8\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if($nodes-&amp;gt;item(0)) {\n    $node = $nodes-&amp;gt;item(0);\n    $node-&amp;gt;parentNode-&amp;gt;replaceChild(new DOMText($node-&amp;gt;textContent), $node); \n} \n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP DOM删除标记（不是内容）", ["\n\n", "$mystring=\"This is mystring. <a href='http://www.google.com'>Google.</a>\"; \n$dom = new DOMDocument; \n$dom->loadHTML($mystring); \n$xPath = new DOMXPath($dom); \n$nodes = $xPath->query('//a');\nif($nodes->item(0)) { \n    $nodes->item(0)->parentNode->removeChild($nodes->item(0)); \n} \necho $dom->saveHTML();  \n", "\n\n", "I want to get output:", "\n\n", "\n  ", "This is mystring. Google.", "\n", "\n\n", "But i got just:", "\n\n", "\n  ", "This is mystring.", "\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;from tkinter &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; *   &lt;span class=\"hljs-comment\"&gt;#引入tkinter库&lt;/span&gt;\nfrom PIL &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; Image    &lt;span class=\"hljs-comment\"&gt;#引入PIL库的Imgae子模块&lt;/span&gt;\nfrom PIL &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; ImageTk    &lt;span class=\"hljs-comment\"&gt;#引入PIL库的ImageTk子模块&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; qrcode   &lt;span class=\"hljs-comment\"&gt;#引入qrcode库&lt;/span&gt;\n\n&lt;span class=\"hljs-attr\"&gt;root&lt;/span&gt; &amp;#61; Tk() &lt;span class=\"hljs-comment\"&gt;#新建窗口&lt;/span&gt;\nroot.title(&amp;#39;二维码生成器&amp;#39;)  &lt;span class=\"hljs-comment\"&gt;#窗口标题&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; qrcode.make(&amp;#39;https://www.codemao.cn&amp;#39;)  &lt;span class=\"hljs-comment\"&gt;#将这个网站转换为二维码图片&lt;/span&gt;\nimg.save(&amp;#39;./hello.png&amp;#39;) &lt;span class=\"hljs-comment\"&gt;#保存二维码图片到本地&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; Image.open(&amp;#39;hello.png&amp;#39;) &lt;span class=\"hljs-comment\"&gt;#打开本地二维码图片&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; ImageTk.PhotoImage(img)  &lt;span class=\"hljs-comment\"&gt;#根据本地图片生成窗体图片&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;t&lt;/span&gt; &amp;#61; Text(root, &lt;span class=\"hljs-attr\"&gt;height&amp;#61;10,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;font&amp;#61;(&amp;#34;黑体&amp;#34;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;#在窗体嵌入输入框&lt;/span&gt;\nt.grid(&lt;span class=\"hljs-attr\"&gt;row&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;column&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;padx&amp;#61;10,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;pady&amp;#61;5)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#输入框的位置&lt;/span&gt;\n\n\ndef create_qrcode(text, filename):\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\n    生成二维码图片\n    &amp;#34;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;qr&lt;/span&gt; &amp;#61; qrcode.QRCode(\n        &lt;span class=\"hljs-attr\"&gt;version&amp;#61;None,&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;error_correction&amp;#61;qrcode.ERROR_CORRECT_H,&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;box_size&amp;#61;5,&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;border&amp;#61;1&lt;/span&gt;\n    )\n    qr.make(&lt;span class=\"hljs-attr\"&gt;fit&amp;#61;True)&lt;/span&gt;\n    qr.add_data(text)\n    &lt;span class=\"hljs-comment\"&gt;# fill_color和back_color参数改变生成图片的格子颜色和背景颜色&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; qr.make_image(&lt;span class=\"hljs-attr\"&gt;fill_color&amp;#61;&amp;#34;Tan&amp;#34;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;back_color&amp;#61;&amp;#34;white&amp;#34;)&lt;/span&gt;\n    img.save(filename &amp;#43; &amp;#39;.png&amp;#39;)\n\n\ndef callback():\n    &lt;span class=\"hljs-comment\"&gt;# 获取文本框内的内容&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;text_input&lt;/span&gt; &amp;#61; t.get(&lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;end&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;# 定义图片的名字为输入内容的第一个字符&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;img_name&lt;/span&gt; &amp;#61; text_input[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-comment\"&gt;#生成二维码图片&lt;/span&gt;\n    create_qrcode(text_input, img_name)\n    &lt;span class=\"hljs-comment\"&gt;#保存二维码图片至本地&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; Image.open(img_name &amp;#43; &amp;#39;.png&amp;#39;)\n    &lt;span class=\"hljs-comment\"&gt;#设定图片大小&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; img.resize((&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;))\n    \n    &lt;span class=\"hljs-comment\"&gt;#重新在窗体中显示新生成的二维码图片&amp;#xff0c;覆盖刚才的图片&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;img&lt;/span&gt; &amp;#61; ImageTk.PhotoImage(img)\n    label.configure(&lt;span class=\"hljs-attr\"&gt;image&amp;#61;img)&lt;/span&gt;\n    label.&lt;span class=\"hljs-attr\"&gt;image&lt;/span&gt; &amp;#61; img\n\n\n&lt;span class=\"hljs-attr\"&gt;btn&lt;/span&gt; &amp;#61; Button(root, &lt;span class=\"hljs-attr\"&gt;text&amp;#61;&amp;#39;点我生成二维码&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;width&amp;#61;20,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;font&amp;#61;(&amp;#34;黑体&amp;#34;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;), &lt;span class=\"hljs-attr\"&gt;command&amp;#61;callback)&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;#按钮&amp;#xff0c;按钮相应函数 callback&lt;/span&gt;\nbtn.grid(&lt;span class=\"hljs-attr\"&gt;row&amp;#61;1,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;column&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;pady&amp;#61;20)&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;#按钮位置&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt; &amp;#61; Label(root, &lt;span class=\"hljs-attr\"&gt;image&amp;#61;img,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;width&amp;#61;500,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;height&amp;#61;500)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#嵌入二维码图片&lt;/span&gt;\nlabel.grid(&lt;span class=\"hljs-attr\"&gt;row&amp;#61;2,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;column&amp;#61;0)&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;#二维码图片位置&lt;/span&gt;\n\nroot.mainloop()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["二维码生成程序需要将相关语句进行注释！", ["各位同学，我想根据项目去展开学习！ 可以将每句话都给我做个注释！", "有python基础，可以看得懂！", "\n", "from", " tkinter import *  \n", "from", " PIL import Image\n", "from", " PIL import ImageTk\nimport qrcode\n\nroot = Tk()\nroot.title(", "'二维码生成器'", ") #\n\nimg = qrcode.make(", "'https://www.codemao.cn'", ")\nimg.save(", "'./hello.png'", ")\n\nimg = Image.open(", "'hello.png'", ")\nimg = ImageTk.PhotoImage(img)\n\nt = Text(root, ", "height", "=10, font=(", "\"黑体\"", ", 15))\nt.grid(", "row", "=0, ", "column", "=0, ", "padx", "=10, ", "pady", "=5)\n\n\ndef create_qrcode(text, filename):\n    ", "\"\"", "\"\n    生成二维码图片\n    \"", "\"\"", "\n    qr = qrcode.QRCode(\n        ", "version", "=None,\n        ", "error_correction", "=qrcode.ERROR_CORRECT_H,\n        ", "box_size", "=5,\n        ", "border", "=1\n    )\n    qr.make(", "fit", "=", "True", ")\n    qr.add_data(text)\n    # fill_color和back_color参数改变生成图片的格子颜色和背景颜色\n    img = qr.make_image(", "fill_color", "=", "\"Tan\"", ", ", "back_color", "=", "\"white\"", ")\n    img.save(filename+", "'.png'", ")\n\n\ndef callback():\n    # 获取文本框内的内容\n    text_input = t.", "get", "(0.0, ", "\"end\"", ")\n    # 定义图片的名字为输入内容的第一个字符\n    img_name = text_input[0:1]\n    create_qrcode(text_input, img_name)\n    img = Image.open(img_name+", "'.png'", ")\n    img = img.resize((500, 500))\n    img = ImageTk.PhotoImage(img)\n    label.configure(", "image", "=img)\n    label.image = img\n\n\nbtn = Button(root, ", "text", "=", "'点我生成二维码'", ", ", "width", "=20, font=(", "\"黑体\"", ", 30), ", "command", "=callback)\nbtn.grid(", "row", "=1, ", "column", "=0, ", "pady", "=20)\n\nlabel = Label(root, ", "image", "=img, ", "width", "=500, ", "height", "=500)\nlabel.grid(", "row", "=2, ", "column", "=0)\n\n\nroot.mainloop()\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# k-means_opt.py&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;# shutil模块是对os模块的补充&amp;#xff0c;主要针对文件的拷贝、删除、移动、压缩和解压操作&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; shutil\n&lt;span class=\"hljs-comment\"&gt;# 用来存储和处理大型矩阵&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-comment\"&gt;# 深度学习库&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch.nn &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; nn\n&lt;span class=\"hljs-comment\"&gt;# torchvision由流行的数据集、模型架构和用于计算机视觉的常见图像转换组成&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; torchvision &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; models, transforms\n&lt;span class=\"hljs-comment\"&gt;# 图像库&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PIL &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Image\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; os\n&lt;span class=\"hljs-comment\"&gt;# KMeans聚类算法&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sklearn.cluster &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; KMeans\n\n\n&lt;span class=\"hljs-comment\"&gt;# 定义预测函数&amp;#xff0c;传入待预测图象及使用的模型&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;predict&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;image, model&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;# 用Compose把多个步骤整合到一起&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# Resize用于调整图像尺寸&amp;#xff0c;将原图像调整为224×224&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# ToTensor()将图像数据转换为tensor的&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# Normalize对图像进行标准化&amp;#xff0c;mean&amp;#61;[0.485, 0.456, 0.406], std&amp;#61;[0.229, 0.224, 0.225]&amp;#xff0c;是从imagenet训练集中抽样算出来的&lt;/span&gt;\n    transform &amp;#61; transforms.Compose([\n        transforms.Resize(&lt;span class=\"hljs-number\"&gt;224&lt;/span&gt;),\n        transforms.ToTensor(),\n        transforms.Normalize([&lt;span class=\"hljs-number\"&gt;0.485&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.456&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.406&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;0.229&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.224&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.225&lt;/span&gt;])])\n    &lt;span class=\"hljs-comment\"&gt;# 调用transform对图像进行处理&lt;/span&gt;\n    img &amp;#61; transform(image)\n    &lt;span class=\"hljs-comment\"&gt;# torch.unsqueeze(input, dim, out&amp;#61;None)扩展维度&amp;#xff0c;返回一个新的张量&amp;#xff0c;对输入的既定位置插入维度1&lt;/span&gt;\n    img &amp;#61; torch.unsqueeze(img, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;# 调用模型&amp;#xff0c;传入图像进行预测&lt;/span&gt;\n    output &amp;#61; model(img)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].data.numpy()\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; output\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-comment\"&gt;# 应该是定义类别数为7&amp;#xff0c;下文并未用到此变量&lt;/span&gt;\n    class_names &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 定义要导入的训练好的模型路径&lt;/span&gt;\n    model_path &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;model/weights.pth&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# build model&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 调用resnet34模型&amp;#xff0c;不使用预训练&lt;/span&gt;\n    model_ft &amp;#61; models.resnet34(pretrained&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;# 得到模型分类层个数&amp;#xff0c;即原模型的分类类别数&lt;/span&gt;\n    num_ftrs &amp;#61; model_ft.fc.in_features\n    &lt;span class=\"hljs-comment\"&gt;# 重写分类层参数&amp;#xff0c;nn.Sequential一个有序的容器&amp;#xff0c;神经网络模块将按照在传入构造器的顺序依次被添加到计算图中执行&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# nn.dropout是为了防止或减轻过拟合数值为不保留节点数的比例&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# nn.Linear重新定义输出层&amp;#xff0c;将项目分类为7个类别&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# nn.Softmax分类层激活函数&amp;#xff0c;dim用来指定哪一维度相加为1,具体参考http://www.zzvips.com/article/207118.html&lt;/span&gt;\n    model_ft.fc &amp;#61; nn.Sequential(\n        nn.Dropout(&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;),\n        nn.Linear(num_ftrs, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;),\n        nn.Softmax(dim&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    )\n    &lt;span class=\"hljs-comment\"&gt;# 从本地载入已经训练好的模型参数&lt;/span&gt;\n    model_ft.load_state_dict(torch.load(model_path))\n    &lt;span class=\"hljs-comment\"&gt;# 定义图片路径&lt;/span&gt;\n    img_path &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;database_face&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 得到该路径下的所有图片列表&lt;/span&gt;\n    img_list &amp;#61; os.listdir(img_path)\n    &lt;span class=\"hljs-comment\"&gt;# 设置模型为评估模型&amp;#xff0c;用于预测&lt;/span&gt;\n    model_ft.&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;()\n    &lt;span class=\"hljs-comment\"&gt;# 定义用于存储预测结果的列表&lt;/span&gt;\n    list_a &amp;#61; []\n    &lt;span class=\"hljs-comment\"&gt;# 循环调用图片列表中的每一张图片&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; img_list:\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n            &lt;span class=\"hljs-comment\"&gt;# 读取本地图片到内存中&lt;/span&gt;\n            image &amp;#61; Image.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(os.path.join(img_path, value))\n            &lt;span class=\"hljs-comment\"&gt;# 调用模型对图片进行预测&lt;/span&gt;\n            output &amp;#61; predict(image, model_ft)\n            &lt;span class=\"hljs-comment\"&gt;# 将预测结果添加到列表中&lt;/span&gt;\n            list_a.append(output)\n        &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;pass&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 将列表转换为数组并打印出来&lt;/span&gt;\n    b &amp;#61; np.array(list_a)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(b)\n    &lt;span class=\"hljs-comment\"&gt;# 定义簇的个数为7&lt;/span&gt;\n    k &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 聚类&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 调用KMeans聚类模型&amp;#xff0c;聚类簇个数为7&lt;/span&gt;\n    kmodel &amp;#61; KMeans(n_clusters&amp;#61;k, init&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;k-means&amp;#43;&amp;#43;&amp;#39;&lt;/span&gt;, random_state&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;# 使用聚类模型对预测结果进行聚类&lt;/span&gt;\n    kmodel.fit(b)\n\n    dir_path &amp;#61; os.listdir(&lt;span class=\"hljs-string\"&gt;&amp;#39;database_face&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; img_name &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dir_path:\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n            image &amp;#61; Image.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;database_face/&amp;#39;&lt;/span&gt; &amp;#43; img_name)\n            output &amp;#61; predict(image, model_ft)\n\n            min_num &amp;#61; &lt;span class=\"hljs-number\"&gt;9999&lt;/span&gt;\n            min_index &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;# 循环读取聚类中心的下标及值&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; index, value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(kmodel.cluster_centers_):\n                dis &amp;#61; np.linalg.norm(value - output)  &lt;span class=\"hljs-comment\"&gt;# 欧氏距离&amp;#xff0c;计算最近的点&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;# 判断距离是否为最小距离&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; dis &amp;lt; min_num:\n                    &lt;span class=\"hljs-comment\"&gt;# 定义最小距离为当前距离&amp;#xff0c;下标为当前下标&lt;/span&gt;\n                    min_num &amp;#61; dis\n                    min_index &amp;#61; index\n            &lt;span class=\"hljs-comment\"&gt;# 将database_face中的图片复制到output/str(min_index)文件夹下&lt;/span&gt;\n            shutil.copyfile(&lt;span class=\"hljs-string\"&gt;&amp;#39;database_face/&amp;#39;&lt;/span&gt; &amp;#43; img_name, &lt;span class=\"hljs-string\"&gt;&amp;#39;output/&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(min_index) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &amp;#43; img_name)\n        &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;pass&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;# 训练完得到的7个中心点&amp;#xff0c;打印值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; index, value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(kmodel.cluster_centers_):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(value)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果有帮助的话望采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["对以下代码结合实际写个详细的注释，阐述其中的原理？", ["这是个人脸表情识别的训练代码，databace_face是个存放了jpg文件的数据集，注释最好是行注释，因为好多库都不熟悉。", "\n", "\n", "# k-means_opt.py", "\n", "# -*- coding: utf-8 -*-", "\n", "import", " shutil\n", "import", " numpy ", "as", " np\n", "import", " torch\n", "import", " torch.nn ", "as", " nn\n", "from", " torchvision ", "import", " models, transforms\n", "from", " PIL ", "import", " Image\n", "import", " os\n", "from", " sklearn.cluster ", "import", " KMeans\n\n\n", "def", " ", "predict", "(", "image, model", "):\n    transform = transforms.Compose([\n        transforms.Resize(", "224", "),\n        transforms.ToTensor(),\n        transforms.Normalize([", "0.485", ", ", "0.456", ", ", "0.406", "], [", "0.229", ", ", "0.224", ", ", "0.225", "])])\n    img = transform(image)\n    img = torch.unsqueeze(img, ", "0", ")\n    output = model(img)[", "0", "].data.numpy()\n    ", "return", " output\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    class_names = ", "7", "\n    model_path = ", "'model/weights.pth'", "\n    ", "# build model", "\n    model_ft = models.resnet34(pretrained=", "False", ")\n    num_ftrs = model_ft.fc.in_features\n    model_ft.fc = nn.Sequential(\n        nn.Dropout(", "0.5", "),\n        nn.Linear(num_ftrs, ", "7", "),\n        nn.Softmax(dim=", "1", ")\n    )\n    model_ft.load_state_dict(torch.load(model_path))\n    img_path = ", "'database_face'", "\n    img_list = os.listdir(img_path)\n    model_ft.", "eval", "()\n    list_a = []\n    ", "for", " value ", "in", " img_list:\n        ", "try", ":\n            image = Image.", "open", "(os.path.join(img_path, value))\n            output = predict(image, model_ft)\n            list_a.append(output)\n        ", "except", ":\n            ", "pass", "\n\n    b = np.array(list_a)\n    ", "print", "(b)\n\n    k = ", "7", "\n    ", "# 聚类", "\n    kmodel = KMeans(n_clusters=k, init=", "'k-means++'", ", random_state=", "0", ")\n    kmodel.fit(b)\n\n    dir_path = os.listdir(", "'database_face'", ")\n    ", "for", " img_name ", "in", " dir_path:\n        ", "try", ":\n            image = Image.", "open", "(", "'database_face/'", " + img_name)\n            output = predict(image, model_ft)\n\n            min_num = ", "9999", "\n            min_index = ", "10", "\n            ", "for", " index, value ", "in", " ", "enumerate", "(kmodel.cluster_centers_):\n                dis = np.linalg.norm(value - output)  ", "# 欧氏距离，计算最近的点", "\n                ", "if", " dis < min_num:\n                    min_num = dis\n                    min_index = index\n            shutil.copyfile(", "'database_face/'", " + img_name, ", "'output/'", " + ", "str", "(min_index) + ", "'/'", " + img_name)\n        ", "except", ":\n            ", "pass", "\n\n    ", "# 训练完得到的7个中心点", "\n    ", "for", " index, value ", "in", " ", "enumerate", "(kmodel.cluster_centers_):\n        ", "print", "(value)\n\n", "\n", "'"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看看这个&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/Linux_bin/article/details/106193583?ops_request_misc&amp;#61;&amp;amp;request_id&amp;#61;&amp;amp;biz_id&amp;#61;102&amp;amp;utm_term&amp;#61;ubuntu18.04%EF%BC%8C%E6%89%93%E4%B8%8D%E5%87%BA%E6%9D%A5?ops_request_misc&amp;#61;&amp;amp;request_id&amp;#61;&amp;amp;biz_id&amp;#61;102&amp;amp;utm_term&amp;#61;ubuntu18.04%EF%BC%8C%E6%89%93%E4%B8%8D%E5%87%BA%E6%9D%A5&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-106193583.142^v42^control,185^v2^tag_show&amp;amp;spm&amp;#61;1018.2226.3001.4449#%E7%AC%A6%E5%8F%B7&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-106193583.142^v42^control,185^v2^tag_show\" id=\"textarea_1661401861639_1661402040742_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/Linux_bin/article/details/106193583?ops_request_misc&amp;#61;&amp;amp;request_id&amp;#61;&amp;amp;biz_id&amp;#61;102&amp;amp;utm_term&amp;#61;ubuntu18.04%EF%BC%8C%E6%89%93%E4%B8%8D%E5%87%BA%E6%9D%A5?ops_request_misc&amp;#61;&amp;amp;request_id&amp;#61;&amp;amp;biz_id&amp;#61;102&amp;amp;utm_term&amp;#61;ubuntu18.04%EF%BC%8C%E6%89%93%E4%B8%8D%E5%87%BA%E6%9D%A5&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-106193583.142^v42^control,185^v2^tag_show&amp;amp;spm&amp;#61;1018.2226.3001.4449#%E7%AC%A6%E5%8F%B7&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-106193583.142^v42^control,185^v2^tag_show&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["ubuntu18.04在换源的时候想打#注释一行代码，却打不出来#，什么也打不出来，怎么解决？", ["ubuntu18.04在换源的时候想打#注释一行代码，却打不出来#，什么也打不出来，怎么解决？"]], "Tag": "程序设计"}
{"Answer": "这个应该就是字符串或者数字的跑马灯效果的算法，可以参考：[跑马灯](https://blog.csdn.net/mg2flyingff/article/details/47622523 \"\")", "Konwledge_Point": "注释", "Question": ["Java语言怎么实现字符串在控制台里面的轮流显示，按照顺序和不按照顺序的写法分别给我，最好是带有注释", ["Java语言怎么实现字符串在控制台里面的轮流显示，按照顺序和不按照顺序的写法分别给我，最好是带有注释"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没这个约束实际是放宽了约束条件&lt;br /&gt;约束文件里没有 set_max_delay 这种约束&amp;#xff0c;是不会爆红的&amp;#xff0c;相反&amp;#xff0c;添加这个约束会见红&amp;#xff0c;特别是将时间整的比较短的时候更容易见红。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vivado的例程Wave_gen里面的时序约束set_max_delay语句注释掉为什么对其时序没有什么影响（时序没有爆红）？", ["vivado的例程Wave_gen里面的时序约束set_max_delay语句注释掉为什么对其时序没有什么影响（时序没有爆红）？"]], "Tag": "程序设计"}
{"Answer": "这是字体的问题，当某种字体缺字的时候，就会用别的字体代替，换一个常用的字体吧", "Konwledge_Point": "注释", "Question": ["Notepad++写C++代码中, 注释汉字大小突然不一致了, 求解决办法", ["之前用notepad++好好的敲C和C++代码, ", "\n用notepad++写注释. 比txt好看, 又比ide简单", "\n按照网上配置好插件就能用了.", "\n\n", "但是重启后就变了:", "\n\n", "附上一张效果图片:", "\n\n", "\n\n", "请问谁遇到过相关问题.", "\n帮帮忙", "\n\n", "ps.", "\n之前不小心装过某盗版开机软件....", "\n\n", "系统更新并重启后, 更新到了win10 专业版 1809 17763.475", "\n\n", "开机第一件事就是删了金山, 发现没卸载干净...", "\n\n", "卸载了一个金山的服务", "\n\n", "然后打开就这样了.....", "\n\n", "但是重启前notepad++正常.....重启后就不正常了....", "\n\n", "这锅金山背还是win10背...."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个注释&amp;#xff08;这里为什么需要用static&amp;#xff09;&amp;#xff0c;因为你的main方法里有用到他&amp;#xff0c;main方法是静态方法&amp;#xff0c;所有它要用static修饰&amp;#xff1b;&lt;br /&gt;第二个注释&amp;#xff08;这里为什么add里面添加的要先建立一个Phone&amp;#xff1f;不能直接c.add()添加吗&amp;#xff1f;&amp;#xff09;&amp;#xff0c;可以直接c.add()&amp;#xff0c;他怎么写也是为了方便&amp;#xff0c;不然要在外面new一堆Phone对象&amp;#xff0c;再一个一个的放到add()里面&amp;#xff0c;比如&amp;#xff1a;Phone phone1 &amp;#61; new Phone(&amp;#34;小米9&amp;#34;, &amp;#34;玫瑰金&amp;#34;, 3999.00, 15);c.add(phone1);&amp;#xff0c;那么多个数据要加到集合里面&amp;#xff0c;还不如他这么写方便&amp;#xff1b;&lt;br /&gt;第三个注释&amp;#xff08;这里true是怎么进行判断的&amp;#xff1f;&amp;#xff09;&amp;#xff0c;这个是直接为true了&amp;#xff0c;他是弄了个死循环&amp;#xff0c;一直可以跑while里的业务&amp;#xff1b;&lt;br /&gt;第四个注释&amp;#xff08;这里和下面为什么要添加私有静态方法&amp;#xff0c;而上面的却是公有静态&amp;#xff09;&amp;#xff0c;上面的是main方法本来就是公有的&amp;#xff0c;设置私有就不是main方法了&amp;#xff0c;下面私有的你也可以设置成公有的&amp;#xff0c;会出现什么问题可以看一下方法公开和私有的区别&amp;#xff0c;对于你现在给的代码来看没有什么区别&amp;#xff1b;&lt;br /&gt;第五个注释&amp;#xff08;这里为什么又有while&amp;#xff08;true&amp;#xff09;为什么写这个&amp;#xff1f;怎么判断了true的啊&amp;#xff1f;有没有输入true。&amp;#xff09;&amp;#xff0c;同样的道理&amp;#xff0c;死循环&amp;#xff0c;一直可以跑while里的业务&amp;#xff1b;&lt;br /&gt;第六个注释&amp;#xff08;这一句里面的是什么意思&amp;#xff1f;&amp;#xff09;&amp;#xff0c;这个和第二个注释的c.add()一样&amp;#xff0c;只是Phone里面的数据不再是代码里写死的&amp;#xff0c;是根据你输入的数据来填充属性创建Phone再加到集合里&amp;#xff1b;&lt;br /&gt;第七个注释&amp;#xff08;面这句什么意思&amp;#xff1f;为什么括号里面要加phone&amp;#xff09;&amp;#xff0c;因为it.next()返回的是Object类&amp;#xff0c;所以要转换到程序预设的类&amp;#xff08;Phone&amp;#xff09;&amp;#xff0c;括号里加Phone是表示要把这个对象强制转换成Phone类&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["有谁可以解释一下注释里面的问题？必采纳", ["有谁可以解释一下这个项目里面的一些注释？我有点不理解，希望有详解", "\n", "package PJ1;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Scanner;\n\npublic ", "class", " Project {\n    static Collection<Phone> c = ", "new", " ", "ArrayList()", ";", "//这里为什么需要用static", "\n\n    public static void main(String", "[]", " args) {\n        ", "//这里为什么add里面添加的要先建立一个Phone？不能直接c.add()添加吗？", "\n        c.add(", "new", " ", "Phone(", "\"小米9\"", ", ", "\"玫瑰金\"", ", 3999.00, 15)", ");\n        c.add(", "new", " ", "Phone(", "\"小米9\"", ", ", "\"幻彩紫\"", ", 3699, 28)", ");\n        c.add(", "new", " ", "Phone(", "\"华为P30\"", ", ", "\"白金色\"", ", 5699, 2)", ");\n        c.add(", "new", " ", "Phone(", "\"华为P30\"", ", ", "\"绚彩白\"", ", 5999, 18)", ");\n        c.add(", "new", " ", "Phone(", "\"VIVO PLus9\"", ", ", "\"幻彩紫\"", ", 2699, 28)", ");\n        c.add(", "new", " ", "Phone(", "\"魅族 16th\"", ", ", "\"紫金黑\"", ", 5229, 10)", ");\n        c.add(", "new", " ", "Phone(", "\"苹果 11\"", ", ", "\"土豪金\"", ", 8999, 51)", ");\n        ", "//这里true是怎么进行判断的？", "\n        ", "while", " (", "true", ") {\n            ", "System", ".", "out.println(", "\"欢迎使用库房管理系统,请选择要进行的操作\"", ");\n            ", "System", ".", "out.println(", "\"1. 商品入库\"", ");\n            ", "System", ".", "out.println(", "\"2. 商品显示\"", ");\n            ", "System", ".", "out.println(", "\"3. 删除商品\"", ");\n            Scanner sc = ", "new", " ", "Scanner(System.", "in", ")", ";\n            ", "int", " num = sc.next", "Int()", ";", "//从键盘上收录数据", "\n            ", "if", " (num", " == ", "1", ") {\n                add", "()", ";\n                ", "System", ".", "out.println(", "\"商品入库成功，入库后仓库商品如下：\"", ");\n                show", "()", ";\n            } ", "else", " ", "if", " (num", " == ", "2", ") {\n                show", "()", ";\n            } ", "else", " ", "if", " (num", " == ", "3", ") {\n                ", "System", ".", "out.println(", "\"请您输入需要删除的商品编号:\"", ");\n                Scanner s = ", "new", " ", "Scanner(System.", "in", ")", ";\n                ", "int", " index = s.next", "Int()", ";\n                delete(index);\n                ", "System", ".", "out.println(", "\"商品出库成功，出库后仓库商品如下：\"", ");\n                show", "()", ";\n            } ", "else", " {\n                ", "System", ".", "out.println(", "\"操作失败\"", ");\n            }\n        }\n    }\n\n    ", "//这里和下面为什么要添加私有静态方法，而上面的却是公有静态", "\n    ", "private", " static void add", "()", " {\n        ", "//这里为什么又有while（true）为什么写这个？怎么判断了true的啊？有没有输入true。", "\n        ", "while", " (", "true", ") {\n            ", "System", ".", "out.println(", "\"您是否录入商品？\"", ");\n            Scanner s2 = ", "new", " ", "Scanner(System.", "in", ")", ";\n            String w = s2.next", "()", ";\n            ", "if", " (!w.equals(", "\"no\"", ")) {\n                Scanner s=", "new", " ", "Scanner(System.", "in", ")", ";\n                ", "System", ".", "out.println(", "\"请输入商品的名称：\"", ");\n                String name=s.next", "()", ";\n                ", "System", ".", "out.println(", "\"请输入商品的颜色:\"", ");\n                String color=s.next", "()", ";\n                ", "System", ".", "out.println(", "\"请输入商品的价格：\"", ");\n                double price=s.next", "Int()", ";\n                ", "System", ".", "out.println(", "\"请输入商品的数量：\"", ");\n                ", "int", " num=s.next", "Int()", ";\n                ", "//这一句里面的是什么意思？", "\n                c.add(", "new", " ", "Phone(", "name", ",", "color", ",", "price", ",", "num", ")", ");\n                break;\n            }", "else", "{\n                break;\n            }\n        }\n\n    }\n    ", "private", " static void show", "()", "{\n        Iterator it=c.iterator", "()", ";\n        ", "while", "(it.has", "Next()", "){\n            ", "//下面这句什么意思？为什么括号里面要加phone", "\n            Phone p=(Phone)it.next", "()", ";\n            ", "System", ".", "out.println(p.get", "Name()", "+", "\"....\"", "+p.get", "Color()", "+", "\"....\"", "+p.get", "Price()", "+", "\"....\"", "+p.get", "Num()", "+", "\"....\"", ");\n        }\n    }\n    ", "private", "  static  void delete(", "int", " index){\n        c.remove(index);\n\n    }\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;filter方法是指向window的&amp;#xff0c;所以你使用普通函数它的this指针是指向window&lt;br /&gt;箭头函数本身没有this指向&amp;#xff0c;所以会查找外级的函数&amp;#xff0c;vue中所有的方法的this都是被绑定到vue实例上的&amp;#xff0c;统一指向vue实例不管是data函数&amp;#xff0c;还是各个生命周期&amp;#xff0c;还是wacch computed它们的指针全部都背绑定到了vue实例&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["this的指向问题，具体问题在下面的代码注释里", ["this的指向问题，具体问题在下面的代码注释里", "下面是所有的代码了，需要引入一个vue.js", "\n", "<", "div", " ", "id", "=", "\"list\"", ">", "\n      ", "<", "h2", ">", "人员列表", "</", "h2", ">", "\n      ", "<", "input", " ", "type", "=", "\"text\"", " ", "placeholder", "=", "\"请输入名字\"", " ", "v-model", "=", "\"keyWord\"", " />", "<", "br", " />", "<", "br", " />", "\n      ", "<", "li", " ", "v-for", "=", "\"(objP) in filPersons\"", ">", "{{", "objP.id", "}}", "--", "{{", "objP.uname", "}}", "--", "{{", "objP.age", "}}", "</", "li", ">", "\n    ", "</", "div", ">", "\n", "\n", "\n```", "javascript\n      ", "Vue", ".", "config", ".", "productionTip", " = ", "false", ";\n      ", "const", " vm = ", "new", " ", "Vue", "({", "//----------------vm在这里-----------------------", "\n        ", "el", ": ", "'#list'", ",\n        ", "data", ": {\n          ", "persons", ": [\n            { ", "id", ": ", "'001'", ", ", "uname", ": ", "'李常超'", ", ", "age", ": ", "18", " },\n            { ", "id", ": ", "'002'", ", ", "uname", ": ", "'李大哥'", ", ", "age", ": ", "28", " },\n            { ", "id", ": ", "'003'", ", ", "uname", ": ", "'LCC'", ", ", "age", ": ", "38", " },\n            { ", "id", ": ", "'004'", ", ", "uname", ": ", "'Lcc'", ", ", "age", ": ", "48", " },\n          ],\n          ", "keyWord", ": ", "''", ",\n},\n ", "computed", ": {\n          ", "filPersons", "(", ") {\n", "//问题在这里，下面的箭头函数我把它换成普通函数就不行，我想应该是this.keyWord的指向问题错了", "\n", "//打印this.keyWord的this，发现如果是箭头函数的话指向的是vm,就没问题", "\n            ", "return", " ", "this", ".", "persons", ".", "filter", "(", "(", "objP", ") =>", " {\n              ", "return", " objP.", "uname", ".", "indexOf", "(", "this", ".", "keyWord", ") !== -", "1", ";\n            });\n", "//但如果是普通函数的话，打印this.keyWord的this，指向的是window", "\n", "//所以我的问题是，怎么看出来这两个this的指向的啊？", "\n", "//如果说箭头函数没有自己的this，往外找的话，不是可以找到filPersons这个方法吗？怎么又往上找到vm了呢？", "\n          ", "/*  return this.persons.filter(function (objP) {\n              objP.uname.indexOf(this.keyWord) !== -1;\n            }); */", "\n          },\n        },\n      });\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个定理规定了是&amp;#xff1e;2的数的立方可写成连续奇数和&amp;#xff0c;最后一个if是指奇数和&amp;#xff1e;立方的值的情况&amp;#xff0c;这种情况只有0和1满足&amp;#xff0c;非&amp;#xff1e;2的整数不能验证不在定理验证范围内&amp;#xff0c;直接把 sum 归0即可&amp;#xff0c;望采纳捏&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["验证尼科彻斯定理 我提的问题在代码最后一段循环的注释", ["\n", "我提的问题在代码最后一段循环的注释", "\n", "#include <stdio.h>", "int main(){", "    int i,j,n,cubed,sum=0;", "    printf(\"请输入一个整数: \");", "    scanf(\"%d\",&n);", "\n", "cubed=n*n*n;\n\n", "for", "(i=", "1", ";i<cubed;i+=", "2", "){\n    ", "for", "(j=i;j<cubed;j+=", "2", "){\n        sum+=j;\n        ", "if", "(sum==cubed){\n            ", "if", "(j-i>", "4", "){   ", "//", "超过", "3", "个数相加中间要用...代替 \n                ", "printf", "(", "\"%d = %d + %d ... +%d\\n\"", ",cubed,i,i+", "2", ",j);\n            }", "else", "{                                                                                                                                                                                                                                                                                                                                       \n                ", "printf", "(", "\"%d = %d + %d + %d\\n\"", ",cubed,i,i+", "2", ",i+", "4", ");\n            }\n            \n        }\n         \n      ", "if", "(sum>cubed){    ** ", "//", "why???  没有这段循环就没有任何输是为啥？ **\n                sum=", "0", ";\n                 ", "break", ";\n    } \n    \n    }\n}\n\n\n    ", "return", " ", "0", ";    \n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义了一个vector的迭代器&amp;#xff0c;初始化为vector的第一个元素&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["给std::vector这一句代码添加注释，可简要分析", [" 解释代码含义，添加注释，感谢诸君", "\n", "std::vector<MEDIA_CLIENT>::iterator iter = media_client_list.", "begin", "();", "//这句代码什么含义", "\n", "\n", "代码如下：", "\n", "int", " ", "set_media_control", "(GB28181_MEDIA_PARA *meida_info)", "//设置_媒体_控制函数", "\n", "{\n    ", "pthread_mutex_lock", "(&mutex); ", "//加锁，用于对共享变量操作", "\n    std::vector<MEDIA_CLIENT>::iterator iter = media_client_list.", "begin", "();\n    ", "printf", "(", "\"[%s][%d]check current vector size=%lu\\n\"", ",__FUNCTION__,__LINE__,media_client_list.", "size", "());\n    ", "for", "(iter; iter != media_client_list.", "end", "();){\n        ", "if", "(", "strcmp", "(iter->media_port,meida_info->media_port) == ", "0", " && ", "strcmp", "(iter->media_ip,meida_info->media_ip) == ", "0", "){", "//寻找客户端是否存在列表中", "\n            ", "/*更新相关信息*/", "\n           ", "if", "(", "strcmp", "(meida_info->control_type,", "\"Closed\"", ") == ", "0", " && ", "strcmp", "(iter->control_type,", "\"Playback\"", ") != ", "0", "){\n\n                ", "struct", " ", "PsProcessVedio", " *process_video_ps = (", "struct", " PsProcessVedio *)iter->meida_process;\n                ", "delete", " process_video_ps;\n                process_video_ps = ", "NULL", ";\n                \n                media_client_list.", "erase", "(iter);\n                ", "printf", "(", "\"[%s][%d] delete client then vector size=%lu\\n\"", ",__FUNCTION__,__LINE__,media_client_list.", "size", "());\n                ", "pthread_mutex_unlock", "(&mutex); ", "//解锁", "\n                ", "return", " ", "0", ";\n           }\n           ", "break", ";\n        }\n        ", "else", "{\n            ++iter;\n        }\n    }\n"]], "Tag": "程序设计"}
{"Answer": "我明白大概意思了，是两个字符串输入后不转换为数据，直接字符串里面按位进行计算的，我大概注释了一下，你看看：\r\n\r\n```\r\n \r\ninline int compare(string str1, string str2) {\r\n\tif (str1.size() &gt; str2.size()) //长度长的整数大于长度小的整数\r\n\t\treturn 1;\r\n\telse if (str1.size() &lt; str2.size())\r\n\t\treturn -1;\r\n\telse\r\n\t\treturn str1.compare(str2); //若长度相等，从头到尾按位比较，compare函数：相等返回0，大于返回1，小于返回－1\r\n}\r\nstring ADD_INT(string str1, string str2) {//高精度加法\r\n\tstring SUB_INT(string str1, string str2);\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;//计算结果\r\n\tif (str1[0] == '-') {\r\n\t\tif (str2[0] == '-') {\r\n\t\t\tsign = -1;\r\n\t\t\tstr = ADD_INT(str1.erase(0, 1), str2.erase(0, 1));// 两个数都是负数，sign负值-1表示结果为负\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr = SUB_INT(str2, str1.erase(0, 1));//1为负2为正，相减\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tif (str2[0] == '-')\r\n\t\t\tstr = SUB_INT(str1, str2.erase(0, 1));//1为正2为负，相减\r\n\t\telse {\r\n\t\t\t//把两个整数对齐，短整数前面加0补齐\r\n\t\t\tstring::size_type l1, l2;\r\n\t\t\tint i;\r\n\t\t\tl1 = str1.size(); l2 = str2.size();//获取输入的两个数长度\r\n\t\t\tif (l1 &lt; l2) {//数1长度小于数2，在数1前面补零\r\n\t\t\t\tfor (i = 1; i &lt;= l2 - l1; i++)\r\n\t\t\t\t\tstr1 = \"0\" + str1;\r\n\t\t\t}\r\n\t\t\telse {//数1长度大于等于数2，在数2前面补零，如果相等则不用补零\r\n\t\t\t\tfor (i = 1; i &lt;= l1 - l2; i++)\r\n\t\t\t\t\tstr2 = \"0\" + str2;\r\n\t\t\t}\r\n\t\t\tint int1 = 0, int2 = 0; //int2 记录进位\r\n\t\t\tfor (i = str1.size() - 1; i &gt;= 0; i--) {//从个位开始循环计算，int1是相加结果，int2是进位值\r\n\t\t\t\tint1 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) % 10;\r\n\t\t\t\tint2 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) / 10;\r\n\t\t\t\tstr = char(int1 + '0') + str;\r\n\t\t\t}\r\n\t\t\tif (int2 != 0) str = char(int2 + '0') + str;\r\n\t\t}\r\n\t}\r\n\t//运算后处理符号位\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))//判断符合变量sign决定数字的正负\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring SUB_INT(string str1, string str2) {//高精度减法\r\n\tstring MUL_INT(string str1, string str2);\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;\r\n\tint i;\r\n\tif (str2[0] == '-')\r\n\t\tstr = ADD_INT(str1, str2.erase(0, 1));//数2是负值时，将数2与数1做加法\r\n\telse {\r\n\t\tint res = compare(str1, str2);//数2为正，比较两个数长度\r\n\t\tif (res == 0) return \"0\";//两数相等返回0\r\n\t\tif (res &lt; 0) {//数1小于数2，设置符号为负，交换两个值\r\n\t\t\tsign = -1;\r\n\t\t\tstring temp = str1;\r\n\t\t\tstr1 = str2;\r\n\t\t\tstr2 = temp;\r\n\t\t}\r\n\t\tstring::size_type tempint;\r\n\t\ttempint = str1.size() - str2.size();//两个数的位数差\r\n\t\tfor (i = str2.size() - 1; i &gt;= 0; i--) {//逐位计算相减\r\n\t\t\tif (str1[i + tempint] &lt; str2[i]) {\r\n\t\t\t\tstr1[i + tempint - 1] = char(int(str1[i + tempint - 1]) - 1);//数1的当前位小于数2\r\n\t\t\t\tstr = char(str1[i + tempint] - str2[i] + ':') + str;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tstr = char(str1[i + tempint] - str2[i] + '0') + str;//数1的当前位大于数2\r\n\t\t}\r\n\t\tfor (i = tempint - 1; i &gt;= 0; i--)//将前面未进行计算的的位补上\r\n\t\t\tstr = str1[i] + str;\r\n\t}\r\n\t//去除结果中多余的前导0\r\n\tstr.erase(0, str.find_first_not_of('0'));\r\n\tif (str.empty()) str = \"0\";\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring MUL_INT(string str1, string str2) {//高精度乘法\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;\r\n\tif (str1[0] == '-') {//分别对数1数2进行判断，为负数则符号位修改一次\r\n\t\tsign *= -1;\r\n\t\tstr1 = str1.erase(0, 1);\r\n\t}\r\n\tif (str2[0] == '-') {\r\n\t\tsign *= -1;\r\n\t\tstr2 = str2.erase(0, 1);\r\n\t}\r\n\tint i, j;\r\n\tstring::size_type l1, l2;\r\n\tl1 = str1.size(); l2 = str2.size();\r\n\tfor (i = l2 - 1; i &gt;= 0; i--) {  //实现手工乘法\r\n\t\tstring tempstr;\r\n\t\tint int1 = 0, int2 = 0, int3 = int(str2[i]) - '0';//int1记录结果，int2记录进位\r\n\t\tif (int3 != 0) {\r\n\t\t\tfor (j = 1; j &lt;= (int)(l2 - 1 - i); j++)\r\n\t\t\t\ttempstr = \"0\" + tempstr;\r\n\t\t\tfor (j = l1 - 1; j &gt;= 0; j--) {\r\n\t\t\t\tint1 = (int3 * (int(str1[j]) - '0') + int2) % 10;\r\n\t\t\t\tint2 = (int3 * (int(str1[j]) - '0') + int2) / 10;\r\n\t\t\t\ttempstr = char(int1 + '0') + tempstr;\r\n\t\t\t}\r\n\t\t\tif (int2 != 0) tempstr = char(int2 + '0') + tempstr;\r\n\t\t}\r\n\t\tstr = ADD_INT(str, tempstr);//按位累计每次相乘的结果\r\n\t}\r\n\t//去除结果中的前导0\r\n\tstr.erase(0, str.find_first_not_of('0'));\r\n\tif (str.empty()) str = \"0\";\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring DIVIDE_INT(string str1, string str2, int flag) {//高精度除法\r\n\t//flag = 1时,返回商; flag = 0时,返回余数\r\n\tstring quotient, residue; //定义商和余数\r\n\tint sign1 = 1, sign2 = 1;\r\n\tif (str2 == \"0\") {  //判断除数是否为0\r\n\t\tquotient = \"ERROR!\";\r\n\t\tresidue = \"ERROR!\";\r\n\t\tif (flag == 1) return quotient;\r\n\t\telse return residue;\r\n\t}\r\n\tif (str1 == \"0\") { //判断被除数是否为0\r\n\t\tquotient = \"0\";\r\n\t\tresidue = \"0\";\r\n\t}\r\n\tif (str1[0] == '-') {//根据数1数2正负判断结果正负\r\n\t\tstr1 = str1.erase(0, 1);\r\n\t\tsign1 *= -1;\r\n\t\tsign2 = -1;\r\n\t}\r\n\tif (str2[0] == '-') {\r\n\t\tstr2 = str2.erase(0, 1);\r\n\t\tsign1 *= -1;\r\n\t}\r\n\tint res = compare(str1, str2);\r\n\tif (res &lt; 0) {//数1小于数2，商为0，余数为数1\r\n\t\tquotient = \"0\";\r\n\t\tresidue = str1;\r\n\t}\r\n\telse if (res == 0) {//相等，商为1，余数0\r\n\t\tquotient = \"1\";\r\n\t\tresidue = \"0\";\r\n\t}\r\n\telse {//数1大于数2进行除法计算\r\n\t\tstring::size_type l1, l2;\r\n\t\tl1 = str1.size(); l2 = str2.size();\r\n\t\tstring tempstr;\r\n\t\ttempstr.append(str1, 0, l2 - 1);\r\n\t\t//模拟手工除法\r\n\t\tfor (int i = l2 - 1; i &lt; l1; i++) {//逐位计算\r\n\t\t\ttempstr = tempstr + str1[i];\r\n\t\t\tfor (char ch = '9'; ch &gt;= '0'; ch--) { //试商\r\n\t\t\t\tstring str;\r\n\t\t\t\tstr = str + ch;\r\n\t\t\t\tif (compare(MUL_INT(str2, str), tempstr) &lt;= 0) {//数2乘以多少小于等于数1\r\n\t\t\t\t\tquotient = quotient + ch;//商累计\r\n\t\t\t\t\ttempstr = SUB_INT(tempstr, MUL_INT(str2, str));//余数累计\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresidue = tempstr;\r\n\t}\r\n\t//去除结果中的前导0\r\n\tquotient.erase(0, quotient.find_first_not_of('0'));\r\n\tif (quotient.empty()) quotient = \"0\";\r\n\tif ((sign1 == -1) &amp;&amp; (quotient[0] != '0'))\r\n\t\tquotient = \"-\" + quotient;\r\n\tif ((sign2 == -1) &amp;&amp; (residue[0] != '0'))\r\n\t\tresidue = \"-\" + residue;\r\n\tif (flag == 1) return quotient;\r\n\telse return residue;\r\n}\r\nstring DIV_INT(string str1, string str2) {//高精度除法,返回商\r\n\treturn DIVIDE_INT(str1, str2, 1);\r\n}\r\nstring MOD_INT(string str1, string str2) {//高精度除法,返回余数\r\n\treturn DIVIDE_INT(str1, str2, 0);\r\n}\r\n```", "Konwledge_Point": "注释", "Question": ["求大神帮忙注释c++代码。高精度计算器。", ["最近在学习制作高精度计算器，前辈给了我一段参考代码，但是我对其中有一部分还是不太懂。", "\n【计算器要求】", "\n实现两个高精度大整数（200位以内的整数）的四则运算，输出这两个大整数的和、差、积、商及余数。", "\n· 请大神如果有空，帮我对几个运算符号代码（主程序不需要）进行注释！越详细越好！十分感谢！", "\n· 如果寻找到可优化的部分或者bug也请进行修改并标注，谢谢！", "\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\ninline int compare(string str1, string str2) {\n    if(str1.size() > str2.size()) //长度长的整数大于长度小的整数\n        return 1;\n    else if(str1.size() < str2.size())\n        return -1;\n    else\n        return str1.compare(str2); //若长度相等，从头到尾按位比较，compare函数：相等返回0，大于返回1，小于返回－1\n}\nstring ADD_INT(string str1, string str2) {//高精度加法\n    string SUB_INT(string str1, string str2);\n    int sign = 1; //sign 为符号位\n    string str;\n    if(str1[0] == '-') {\n        if(str2[0] == '-') {\n            sign = -1;\n            str = ADD_INT(str1.erase(0, 1), str2.erase(0, 1));\n        } else {\n            str = SUB_INT(str2, str1.erase(0, 1));\n        }\n    } else {\n        if(str2[0] == '-')\n            str = SUB_INT(str1, str2.erase(0, 1));\n        else {\n            //把两个整数对齐，短整数前面加0补齐\n            string::size_type l1, l2;\n            int i;\n            l1 = str1.size(); l2 = str2.size();\n            if(l1 < l2) {\n                for(i = 1; i <= l2 - l1; i++)\n                    str1 = \"0\" + str1;\n            } else {\n                for(i = 1; i <= l1 - l2; i++)\n                    str2 = \"0\" + str2;\n            }\n            int int1 = 0, int2 = 0; //int2 记录进位\n            for(i = str1.size() - 1; i >= 0; i--) {\n                int1 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) % 10;\n                int2 = (int(str1[i]) - '0' + int(str2[i]) - '0' +int2) / 10;\n                str = char(int1 + '0') + str;\n            }\n            if(int2 != 0) str = char(int2 + '0') + str;\n        }\n    }\n    //运算后处理符号位\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring SUB_INT(string str1, string str2) {//高精度减法\n    string MUL_INT(string str1, string str2);\n    int sign = 1; //sign 为符号位\n    string str;\n    int i;\n    if(str2[0] == '-')\n        str = ADD_INT(str1, str2.erase(0, 1));\n    else {\n        int res = compare(str1, str2);\n        if(res == 0) return \"0\";\n        if(res < 0) {\n            sign = -1;\n            string temp = str1;\n            str1 = str2;\n            str2 = temp;\n        }\n        string::size_type tempint;\n        tempint = str1.size() - str2.size();\n        for(i = str2.size() - 1; i >= 0; i--) {\n            if(str1[i + tempint] < str2[i]) {\n                str1[i + tempint - 1] = char(int(str1[i + tempint - 1]) - 1);\n                str = char(str1[i + tempint] - str2[i] + ':') + str;\n            } else\n                str = char(str1[i + tempint] - str2[i] + '0') + str;\n        }\n        for(i = tempint - 1; i >= 0; i--)\n            str = str1[i] + str;\n    }\n    //去除结果中多余的前导0\n    str.erase(0, str.find_first_not_of('0'));\n    if(str.empty()) str = \"0\";\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring MUL_INT(string str1, string str2) {//高精度乘法\n    int sign = 1; //sign 为符号位\n    string str;\n    if(str1[0] == '-') {\n        sign *= -1;\n        str1 = str1.erase(0, 1);\n    }\n    if(str2[0] == '-') {\n        sign *= -1;\n        str2 = str2.erase(0, 1);\n    }\n    int i, j;\n    string::size_type l1, l2;\n    l1 = str1.size(); l2 = str2.size();\n    for(i = l2 - 1; i >= 0; i --) {  //实现手工乘法\n        string tempstr;\n        int int1 = 0, int2 = 0, int3 = int(str2[i]) - '0';\n        if(int3 != 0) {\n            for(j = 1; j <= (int)(l2 - 1 - i); j++)\n                tempstr = \"0\" + tempstr;\n            for(j = l1 - 1; j >= 0; j--) {\n                int1 = (int3 * (int(str1[j]) - '0') + int2) % 10;\n                int2 = (int3 * (int(str1[j]) - '0') + int2) / 10;\n                tempstr = char(int1 + '0') + tempstr;\n            }\n            if(int2 != 0) tempstr = char(int2 + '0') + tempstr;\n        }\n        str = ADD_INT(str, tempstr);\n    }\n    //去除结果中的前导0\n    str.erase(0, str.find_first_not_of('0'));\n    if(str.empty()) str = \"0\";\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring DIVIDE_INT(string str1, string str2, int flag) {//高精度除法\n    //flag = 1时,返回商; flag = 0时,返回余数\n    string quotient, residue; //定义商和余数\n    int sign1 = 1, sign2 = 1;\n    if(str2 == \"0\") {  //判断除数是否为0\n        quotient = \"ERROR!\";\n        residue = \"ERROR!\";\n        if(flag == 1) return quotient;\n        else return residue;\n    }\n    if(str1 == \"0\") { //判断被除数是否为0\n        quotient = \"0\";\n        residue = \"0\";\n    }\n    if(str1[0] == '-') {\n        str1 = str1.erase(0, 1);\n        sign1 *= -1;\n        sign2 = -1;\n    }\n    if(str2[0] == '-') {\n        str2 = str2.erase(0, 1);\n        sign1 *= -1;\n    }\n    int res = compare(str1, str2);\n    if(res < 0) {\n        quotient = \"0\";\n        residue = str1;\n    } else if(res == 0) {\n        quotient = \"1\";\n        residue = \"0\";\n    } else {\n        string::size_type l1, l2;\n        l1 = str1.size(); l2 = str2.size();\n        string tempstr;\n        tempstr.append(str1, 0, l2 - 1);\n        //模拟手工除法\n        for(int i = l2 - 1; i < l1; i++) {\n            tempstr = tempstr + str1[i];\n            for(char ch = '9'; ch >= '0'; ch --) { //试商\n                string str;\n                str = str + ch;\n                if(compare(MUL_INT(str2, str), tempstr) <= 0) {\n                    quotient = quotient + ch;\n                    tempstr = SUB_INT(tempstr, MUL_INT(str2, str));\n                    break;\n                }\n            }\n        }\n        residue = tempstr;\n    }\n    //去除结果中的前导0\n    quotient.erase(0, quotient.find_first_not_of('0'));\n    if(quotient.empty()) quotient = \"0\";\n    if((sign1 == -1) && (quotient[0] != '0'))\n        quotient = \"-\" + quotient;\n    if((sign2 == -1) && (residue[0] != '0'))\n        residue = \"-\" + residue;\n    if(flag == 1) return quotient;\n    else return residue;\n}\nstring DIV_INT(string str1, string str2) {//高精度除法,返回商\n    return DIVIDE_INT(str1, str2, 1);\n}\nstring MOD_INT(string str1, string str2) {//高精度除法,返回余数\n    return DIVIDE_INT(str1, str2, 0);\n}\nint main() {\n    char ch;\n    string s1, s2, res;\n    cout<<\"请输入 丨 加法：“+ ” 丨 减法：“- ” 丨 乘法：“* ” 丨 除法：“/ ” 丨 余数：“% ”丨来确定计算类型！\" <<endl; \n    while(cin >> ch) \n    {\n        cout<<\"请输入要计算的数1:\" <<endl; \n        cin >> s1;\n        cout<<\"请输入要计算的数2:\" <<endl; \n        cin >> s2;\n\n        switch(ch) {\n        case '+':  res = \"加法计算的结果是：\"+ADD_INT(s1, s2); break;\n        case '-':  res = \"减法计算的结果是：\"+SUB_INT(s1, s2); break;\n        case '*':  res = \"乘法计算的结果是：\"+MUL_INT(s1, s2); break;\n        case '/':  res = \"除法计算的结果是：\"+DIV_INT(s1, s2); break;\n        case '%':  res = \"除法计算后的余数是：\"+MOD_INT(s1, s2); break;\n        default :  break;\n        }\n        cout << res << endl;\n    }\n    return(0);\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你注释之后保存下再重新运行看看&amp;#xff0c;你是不是在程序运行期间进行修改的。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C++算术运算符程序在运行整数除以零后再注释掉相关语句却没法再运行正确程序", ["准大学生最近在自学C++，今天在写一个算术运算符的程序时，故意写了用一个整数除以零的语句，想看看会发生什么。当然在意料之中它报错了，出现了这个窗口。", "就在我把cout语句注释掉后想再次运行余下的正确语句时，却出现了这一幕。", "按下确定键之后，就弹出了这个东西。", "\n", "这个文件名后面有个括号显示“旧”的东西，然后有点不知所措了。我又尝试把它叉掉后再试还是这样。", "想问下各位这种情况是为什么，又应该如何解决呢？", "🙏🙏拜托拜托，不胜感激！"]], "Tag": "程序设计"}
{"Answer": "代码有问题你，解析也乱搞一套。。for。。in是把imgs当对象来变量，他的length属性也会一起便遍历出来了，不要用for.in\r\n\r\n而且document.images是特殊的数组，不同浏览器还有其他属性也会一起便利出来，会报错\r\n\r\n用for来遍历\r\n\r\n```\r\n \r\n        function button_onclick(obj) {\r\n            var imgs = document.images;\r\n            for (var n = 0; n &lt; imgs.length;n++) {\r\n                imgs[n].style.visibility = obj;\r\n            }\r\n        }\r\n```", "Konwledge_Point": "注释", "Question": ["注释的那一句啥意思求大神解答还有第一个元素是啥", [" <body>\n<img src=\"tt/hetao.jpg\" style=\"visibility:visible\" />\n<img src=\"tt/hetao.jpg\" style=\"visibility:visible\" />\n<img src=\"tt/hetao.jpg\" style=\"visibility:visible\" />\n<input type=\"button\" id=\"xs\" value=\"xs\" onclick=\"return button_onclick('visible')\" />\n<input type=\"button\" id=\"yc\" value=\"yc\" onclick=\"return button_onclick('hidden')\" />\n<script type=\"text/javascript\">\n function button_onclick(obj){\n        var imgs = document.images;\n        for(n in imgs){\n            if(imgs[n]==imgs.length){    //忽略第一个元素它不是图片对象\n                continue;   \n\n\n\n}\n            imgs[n].style.visibility=obj;   \n        }\n\n }\n</script>\n</body>\n", "\n\n", "注释的那一句啥意思，，求大神解答还有第一个元素是啥"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;流程图再研究下&amp;#xff0c;先简单说明一下原理&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import time\ndef ad(a, &lt;span class=\"hljs-keyword\"&gt;b, &lt;/span&gt;k):\n    &lt;span class=\"hljs-comment\"&gt;# print(a,b)  #如果不能理解&amp;#xff0c;把这两行注释打开&amp;#xff0c;看一下运行过程&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# time.sleep(1)&lt;/span&gt;\n    if len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0]&amp;#43;b[1]&amp;#43;b[2]&amp;#43;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-number\"&gt;34&lt;/span&gt;: &lt;span class=\"hljs-comment\"&gt;#第一行&amp;#xff0c;只有满足第行和为34&amp;#xff0c;才进行下一个判断&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[4] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[5] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[6]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第一列&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[7] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[8] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[6]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#右上到左下的斜线&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[4] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[9] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[7] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[10]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第二行&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[9] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[8] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[11]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第二列&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[5] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[8] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[12] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[13]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第三行&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[7] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[12] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[14]: &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第三列&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and &lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[6] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[11] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[14] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[15] &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;or &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[1] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[2] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[3] &lt;/span&gt;!&amp;#61; &lt;span class=\"hljs-keyword\"&gt;b[0] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[9] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[12] &lt;/span&gt;&amp;#43; &lt;span class=\"hljs-keyword\"&gt;b[15]): &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#第四行和左上到右下的斜线&lt;/span&gt;\n        return k\n    elif len(&lt;span class=\"hljs-keyword\"&gt;b) &lt;/span&gt;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;:\n        print(&lt;span class=\"hljs-keyword\"&gt;b,k)\n&lt;/span&gt;        k &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n \n    for i in range(len(a)):\n        &lt;span class=\"hljs-keyword\"&gt;b.append(a[i]) &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#从列表a中依次取数字尝试放入b中&lt;/span&gt;\n        d &amp;#61; a.pop(i) &lt;span class=\"hljs-comment\"&gt;#记录放入b中的数字&lt;/span&gt;\n        k &amp;#61; ad(a, &lt;span class=\"hljs-keyword\"&gt;b, &lt;/span&gt;k) &lt;span class=\"hljs-comment\"&gt;#递归测试&lt;/span&gt;\n        a.&lt;span class=\"hljs-keyword\"&gt;insert(i, &lt;/span&gt;d) &lt;span class=\"hljs-comment\"&gt;#如果取出来放入b中的数字测试不合适&amp;#xff0c;则重新放回a&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;b.pop(-1) &lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;#同时将新添加到b中的数字取出&lt;/span&gt;\n    return k\n \na &amp;#61; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;] &lt;span class=\"hljs-comment\"&gt;#列表a表示未使用的数字&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;b &lt;/span&gt;&amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-comment\"&gt;#列表b代表已使用的数字&amp;#xff0c;且有固定的顺序&lt;/span&gt;\nk &amp;#61; ad(a, &lt;span class=\"hljs-keyword\"&gt;b, &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\nprint(k)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;列表b中数字对应的位置示意&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/843914133756111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;流程图&amp;#xff1a;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/629658333756165.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["四阶幻方程序代码的注释还有流程图怎么画  今天要交了", ["大一计算机课答辩四阶幻方问题 今天要交了", "\n", "\n", "def ad(a, ", "b, ", "k):\n    if len(", "b) ", ">= ", "4", " ", "and ", "b[0]+b[1]+b[2]+b[3] ", "!= ", "34", ":\n        return k\n    elif len(", "b) ", ">= ", "7", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[0] ", "+ ", "b[4] ", "+ ", "b[5] ", "+ ", "b[6]:\n", "        return k\n    elif len(", "b) ", ">= ", "9", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[3] ", "+ ", "b[7] ", "+ ", "b[8] ", "+ ", "b[6]:\n", "        return k\n    elif len(", "b) ", ">= ", "11", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[4] ", "+ ", "b[9] ", "+ ", "b[7] ", "+ ", "b[10]:\n", "        return k\n    elif len(", "b) ", ">= ", "12", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[1] ", "+ ", "b[9] ", "+ ", "b[8] ", "+ ", "b[11]:\n", "        return k\n    elif len(", "b) ", ">= ", "14", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[5] ", "+ ", "b[8] ", "+ ", "b[12] ", "+ ", "b[13]:\n", "        return k\n    elif len(", "b) ", ">= ", "15", " ", "and ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[2] ", "+ ", "b[7] ", "+ ", "b[12] ", "+ ", "b[14]:\n", "        return k\n    elif len(", "b) ", ">= ", "16", " ", "and ", "(", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[6] ", "+ ", "b[11] ", "+ ", "b[14] ", "+ ", "b[15] ", "or ", "b[0] ", "+ ", "b[1] ", "+ ", "b[2] ", "+ ", "b[3] ", "!= ", "b[0] ", "+ ", "b[9] ", "+ ", "b[12] ", "+ ", "b[15]):\n", "        return k\n    elif len(", "b) ", "== ", "16", ":\n        print(", "b,k)\n", "        k += ", "1", "\n\n    for i in range(len(a)):\n        ", "b.append(a[i])\n", "        d = a.pop(i)\n        k = ad(a, ", "b, ", "k)\n        a.", "insert(i, ", "d)\n        ", "b.pop(-1)\n", "    return k\n\na = [", "2", ", ", "3", ", ", "4", ", ", "5", ", ", "6", ", ", "7", ", ", "8", ", ", "9", ", ", "10", ", ", "11", ", ", "12", ", ", "13", ", ", "14", ", ", "15", ", ", "16", "]\n", "b ", "= [", "1", "]\nk = ad(a, ", "b, ", "0", ")\nprint(k)\n\n", "\n", "没有错误", "\n", "每句话是什么意思", "\n", "请帮忙注释一下    能带上流程图最好了"]], "Tag": "程序设计"}
{"Answer": "用二进制编辑器查看，比较下“原来的程序”和“下载的代码”，里面的换行 `0D-0A`是否不一致？", "Konwledge_Point": "注释", "Question": ["我遇到一个奇怪的问题,php代码里面凡是含有//这样的注释,include 失败", ["我遇到一个奇怪的问题,php代码里面凡是含有//这样的注释,就无法include", "\n我是二次开发的,服务器上面原来的程序带//注释的就没有问题", "\n\n", "但是我从服务器上面下载的代码到本地,所有的程序,导入eclipse后,每一行下面都会带一个空行", "\n\n", "后来我把//的注释换成/*** /这样的就好了", "\n\n", "下面是我贴出来的phpinfo信息,望大神指导", "\n\n", "PHP Version 5.5.25", "\n\n", "System  Linux iZ238ftkwx8Z 3.10.0-123.9.3.el7.x86_64 #1 SMP Thu Nov 6 15:06:03 UTC 2014 x86_64", "\nBuild Date  Jun 2 2015 16:09:30", "\nConfigure Command   './configure' '--prefix=/usr/local/php' '--with-config-file-path=/usr/local/php/etc' '--with-fpm-user=www' '--with-fpm-group=www' '--enable-fpm' '--enable-opcache' '--disable-fileinfo' '--with-mysql=mysqlnd' '--with-mysqli=mysqlnd' '--with-pdo-mysql=mysqlnd' '--with-iconv-dir=/usr/local' '--with-freetype-dir' '--with-jpeg-dir' '--with-png-dir' '--with-zlib' '--with-libxml-dir=/usr' '--enable-xml' '--disable-rpath' '--enable-bcmath' '--enable-shmop' '--enable-exif' '--enable-sysvsem' '--with-curl' '--enable-mbregex' '--enable-inline-optimization' '--enable-mbstring' '--with-mcrypt' '--with-gd' '--enable-gd-native-ttf' '--with-openssl' '--with-mhash' '--enable-pcntl' '--enable-sockets' '--with-xmlrpc' '--enable-ftp' '--with-gettext' '--enable-zip' '--enable-soap' '--disable-ipv6' '--disable-debug'", "\nServer API  FPM/FastCGI", "\nVirtual Directory Support   disabled", "\nConfiguration File (php.ini) Path   /usr/local/php/etc", "\nLoaded Configuration File   /usr/local/php/etc/php.ini", "\nScan this dir for additional .ini files (none)", "\nAdditional .ini files parsed    (none)", "\nPHP API 20121113", "\nPHP Extension   20121212", "\nZend Extension  220121212", "\nZend Extension Build    API220121212,NTS", "\nPHP Extension Build API20121212,NTS", "\nDebug Build no", "\nThread Safety   disabled", "\nZend Signal Handling    disabled", "\nZend Memory Manager enabled", "\nZend Multibyte Support  provided by mbstring", "\nIPv6 Support    disabled", "\nDTrace Support  disabled", "\nRegistered PHP Streams  https, ftps, compress.zlib, php, file, glob, data, http, ftp, phar, zip", "\nRegistered Stream Socket Transports tcp, udp, unix, udg, ssl, sslv3, sslv2, tls", "\nRegistered Stream Filters   zlib.*, convert.iconv.*, mcrypt.*, mdecrypt.*, string.rot13, string.toupper, string.tolower, string.strip_tags, convert.*, consumed, dechunk", "\n\n", "Zend logo This program makes use of the Zend Scripting Language Engine:", "\nZend Engine v2.5.0, Copyright (c) 1998-2015 Zend Technologies", "\n    with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2015, by Zend Technologies"]], "Tag": "程序设计"}
{"Answer": "首先的弄清楚string.equals方法作用，是用来判断2个字符串的值是否相等，这一步判断的是2个对象的地址是否相等，如果地址相等，显然这两个是同一个对象，他们的值必然相等，所以返回true", "Konwledge_Point": "注释", "Question": ["String类的源码分析有一点不懂", ["本人最近在看java的源码，我对String类的源码的equals方法有一点小问题", "\n\n", " public boolean equals(Object anObject) {\n        if (this == anObject) {\n            return true;\n        }\n", "\n\n", "这段代码看的不是太懂，请给我详细讲解一下，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/698560924456196.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["C++ 神犇们能不能帮我把这段代码加上注释", ["神犇们可以帮我把除主函数以外的代码加上注释吗？", "\n", "#include<bits/stdc++.h>\n\n#define ", "REP", "(i,a,b) for(int i=a,i##", "_end_", "=b;i<=i##", "_end_", ";++i)\n#define ", "DREP", "(i,a,b) for(int i=a,i##", "_end_", "=b;i>=i##", "_end_", ";--i)\ntypedef long long ll;\n\nusing namespace std;\n\nvoid ", "File", "(){\n    freopen(", "\"bzoj5017.in\"", ",", "\"r\"", ",stdin);\n    freopen(", "\"bzoj5017.out\"", ",", "\"w\"", ",stdout);\n}\n\ntemplate<typename ", "T", ">void read(", "T", " &", "_", "){\n    ", "T", " ", "__", "=", "0", ",mul=", "1", "; char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch==", "'-'", ")mul=", "-1", ";\n        ch=getchar();\n    }\n    while(isdigit(ch))", "__", "=(", "__", "<<", "1", ")+(", "__", "<<", "3", ")+(ch^", "'0'", "),ch=getchar();\n    ", "_", "=", "__", "*mul;\n}\n\nconst int maxn=", "5e5", "+", "10", ";\nconst ll mod=", "1e9", "+", "7", ";\nint n,l[maxn],r[maxn];\nll x[maxn],y[maxn],ans;\n\nint main(){\n//  ", "File", "();\n    read(n);\n    ", "REP", "(i,", "1", ",n)read(x[i]),read(y[i]),l[i]=r[i]=i;\n    ", "REP", "(i,", "1", ",n)while(l[i]>", "1", " && x[i]-x[l[i]", "-1", "]<=y[i]){\n        y[i]=max(y[i],x[l[i]", "-1", "]+y[l[i]", "-1", "]-x[i]);\n        //cout<<x[l[i]", "-1", "]+y[l[i]", "-1", "]-x[i]<<", "\" \"", ";\n        l[i]=l[l[i]", "-1", "];\n        y[i]=max(y[i],x[l[i]]+y[l[i]]-x[i]);\n        //cout<<x[l[i]]+y[l[i]]-x[i]<<endl;\n    }\n    ", "DREP", "(i,n,", "1", ")while(r[i]<n && x[r[i]+", "1", "]-x[i]<=y[i]){\n        l[i]=min(l[i],l[r[i]+", "1", "]);\n        //cout<<l[r[i]+", "1", "]<<", "\" \"", ";\n        r[i]=r[r[i]+", "1", "];\n        l[i]=min(l[i],l[r[i]]);\n        //cout<<l[r[i]]<<endl;\n    }\n    ", "REP", "(i,", "1", ",n){\n        ans=(ans+", "1", "ll*i*(r[i]-l[i]+", "1", ")", "%mod)%mod;", "\n        //cout<<l[i]<<", "\" \"", "<<r[i]<<endl;\n    }\n    printf(", "\"%lld\\n\"", ",(ans+mod)", "%mod);", "\n    return ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/379838348166134.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;右键 &amp;#xff0c;渲染所有&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/934628348166114.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/220049348166116.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["方法注解格式怎么变回去", ["不知道按了什么所有的注解都这样了，点边上的能变回去，可是太多了，有人知道一键变回原样的方法嘛"]], "Tag": "程序设计"}
{"Answer": "如果你的spring-webmvc.jar 里面含有这个class，[color=red]org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter[/color]\r\n那就是你配置它时，写错了\r\norg.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter\r\n你没发现最后一个点\".\"和AnnotationMethodHandlerAdapter有很大空格了，估计是写的时候用到Tab键了。", "Konwledge_Point": "注释", "Question": ["spring基于注释的mvc的问题，求教高手", ["初学spring基于注释的mvc", "\n测试", "http://www.evget.com/zh-CN/Info/ReadInfo.aspx?id=9079", "\n的一个例子", "\n报", "\n[code=\"java\"]", "\n2010-7-5 8:24:15 org.apache.tomcat.util.digester.SetPropertiesRule begin", "\n警告: [SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property 'source' to 'org.eclipse.jst.jee.server:first' did not find a matching property.", "\n2010-7-5 8:24:15 org.apache.catalina.core.AprLifecycleListener init", "\n信息: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: D:\\Program Files\\Java\\jdk1.6.0_17\\bin;.;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;D:\\Program Files\\Java\\jdk1.6.0_17\\jre\\bin;D:/Program Files/Java/jre6/bin/client;D:/Program Files/Java/jre6/bin;d:\\oracle\\product\\10.2.0\\db_1\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;D:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files\\Common Files\\Thunder Network\\KanKan\\Codecs;D:\\Program Files\\QuickTime\\QTSystem\\", "\n2010-7-5 8:24:15 org.apache.coyote.http11.Http11Protocol init", "\n信息: Initializing Coyote HTTP/1.1 on http-4444", "\n2010-7-5 8:24:15 org.apache.catalina.startup.Catalina load", "\n信息: Initialization processed in 439 ms", "\n2010-7-5 8:24:15 org.apache.catalina.core.StandardService start", "\n信息: Starting service Catalina", "\n2010-7-5 8:24:15 org.apache.catalina.core.StandardEngine start", "\n信息: Starting Servlet Engine: Apache Tomcat/6.0.18", "\n2010-7-5 8:24:15 org.apache.catalina.core.ApplicationContext log", "\n信息: Initializing Spring root WebApplicationContext", "\n2010-7-5 8:24:15 org.springframework.web.context.ContextLoader initWebApplicationContext", "\n信息: Root WebApplicationContext: initialization started", "\n2010-7-5 8:24:15 org.springframework.context.support.AbstractApplicationContext prepareRefresh", "\n信息: Refreshing org.springframework.web.context.support.XmlWebApplicationContext@287811: display name [Root WebApplicationContext]; startup date [Mon Jul 05 08:24:15 GMT 2010]; root of context hierarchy", "\n2010-7-5 8:24:15 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions", "\n信息: Loading XML bean definitions from file [D:\\workspace35.metadata.plugins\\org.eclipse.wst.server.core\\tmp1\\wtpwebapps\\first\\WEB-INF\\classes\\source\\applicationContext.xml]", "\n2010-7-5 8:24:15 org.springframework.context.support.AbstractApplicationContext obtainFreshBeanFactory", "\n信息: Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@287811]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1930c3a", "\n2010-7-5 8:24:16 org.springframework.core.io.support.PropertiesLoaderSupport loadProperties", "\n信息: Loading properties file from class path resource [source/db/db.properties]", "\n2010-7-5 8:24:16 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons", "\n信息: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1930c3a: defining beans [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,testController,testService,testServiceImpl,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,dataSource,sqlMapClient,sqlMapClientTemplate,transactionManager]; root of factory hierarchy", "\n2010-7-5 8:24:16 org.springframework.web.context.ContextLoader initWebApplicationContext", "\n信息: Root WebApplicationContext: initialization completed in 922 ms", "\n2010-7-5 8:24:16 org.apache.catalina.core.ApplicationContext log", "\n信息: Initializing Spring FrameworkServlet 'annomvc'", "\n2010-7-5 8:24:16 org.springframework.web.servlet.FrameworkServlet initServletBean", "\n信息: FrameworkServlet 'annomvc': initialization started", "\n2010-7-5 8:24:16 org.springframework.context.support.AbstractApplicationContext prepareRefresh", "\n信息: Refreshing org.springframework.web.context.support.XmlWebApplicationContext@d95bc3: display name [WebApplicationContext for namespace 'annomvc-servlet']; startup date [Mon Jul 05 08:24:16 GMT 2010]; parent: org.springframework.web.context.support.XmlWebApplicationContext@287811", "\n2010-7-5 8:24:16 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions", "\n信息: Loading XML bean definitions from ServletContext resource [/WEB-INF/annomvc-servlet.xml]", "\n2010-7-5 8:24:16 org.springframework.context.support.AbstractApplicationContext obtainFreshBeanFactory", "\n信息: Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@d95bc3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7", "\n2010-7-5 8:24:16 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons", "\n信息: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7: defining beans [org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1930c3a", "\n2010-7-5 8:24:16 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons", "\n信息: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7: defining beans [org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1930c3a", "\n2010-7-5 8:24:16 org.springframework.web.servlet.FrameworkServlet initServletBean", "\n严重: Context initialization failed", "\norg.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter] for bean with name 'org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter#0' defined in ServletContext resource [/WEB-INF/annomvc-servlet.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:758)", "\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:422)", "\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)", "\n    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)", "\n    at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)", "\n    at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)", "\n    at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)", "\n    at javax.servlet.GenericServlet.init(GenericServlet.java:212)", "\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1172)", "\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:992)", "\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)", "\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4371)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)", "\n    at org.apache.catalina.core.StandardService.start(StandardService.java:516)", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:578)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: java.lang.ClassNotFoundException: org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1387)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1233)", "\n    at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)", "\n    ... 28 more", "\n2010-7-5 8:24:16 org.apache.catalina.core.ApplicationContext log", "\n严重: StandardWrapper.Throwable", "\norg.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter] for bean with name 'org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter#0' defined in ServletContext resource [/WEB-INF/annomvc-servlet.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:758)", "\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:422)", "\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)", "\n    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)", "\n    at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)", "\n    at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)", "\n    at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)", "\n    at javax.servlet.GenericServlet.init(GenericServlet.java:212)", "\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1172)", "\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:992)", "\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)", "\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4371)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)", "\n    at org.apache.catalina.core.StandardService.start(StandardService.java:516)", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:578)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by: java.lang.ClassNotFoundException: org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1387)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1233)", "\n    at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)", "\n    ... 28 more", "\n2010-7-5 8:24:16 org.apache.catalina.core.StandardContext loadOnStartup", "\n严重: Servlet /first threw load() exception", "\njava.lang.ClassNotFoundException: org.springframework.web.servlet.mvc.annotation.         AnnotationMethodHandlerAdapter", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1387)", "\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1233)", "\n    at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)", "\n    at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)", "\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)", "\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:758)", "\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:422)", "\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)", "\n    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)", "\n    at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)", "\n    at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)", "\n    at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)", "\n    at javax.servlet.GenericServlet.init(GenericServlet.java:212)", "\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1172)", "\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:992)", "\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)", "\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4371)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)", "\n    at org.apache.catalina.core.StandardService.start(StandardService.java:516)", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:578)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\n2010-7-5 8:24:16 org.apache.coyote.http11.Http11Protocol start", "\n信息: Starting Coyote HTTP/1.1 on http-4444", "\n2010-7-5 8:24:16 org.apache.jk.common.ChannelSocket init", "\n信息: JK: ajp13 listening on /0.0.0.0:8009", "\n2010-7-5 8:24:16 org.apache.jk.server.JkMain start", "\n信息: Jk running ID=0 time=0/47  config=null", "\n2010-7-5 8:24:16 org.apache.catalina.startup.Catalina start", "\n信息: Server startup in 1645 ms", "\n[/code]", "\n错 ", "\n不能加载", "\n但是有spring-webmvc.jar"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; std::map&amp;lt;int, GB28181_MEDIA_PARA&amp;gt;::iterator iter&amp;#61;media_list.begin();这句话的注释分析&amp;#xff0c;感谢诸君&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["gb28181场景中，map用法分析，对其进行代码注释说明", ["帮忙分析一下这句代码的含义感谢诸君", "std::map<int, GB28181_MEDIA_PARA>::iterator iter=media_list.begin();//写明注释", "\n", "这是map的使用方法（有些搞不懂）\n使用map得包含map类所在的头文件\n", "#", "include", " ", "<map>", "  ", "//注意，STL头文件没有扩展名.h", "\nmap对象是模板类，需要关键字和存储对象两个模板参数：\nstd:map<", "int", ",string> personnel;\n这样就定义了一个用", "int", "作为索引,并拥有相关联的指向string的指针.\n为了使用方便，可以对模板类进行一下类型定义，\n", "typedef", " map<", "int", ",CString> UDT_MAP_INT_CSTRING;\nUDT_MAP_INT_CSTRING enumMap;\n", "\n", "这是问题代码节选部分（应用于gb28181中，关键点map的解析有不理解）", "\n", "case EXOSIP_CALL_CLOSED:", "/*BEY此呼叫已收到再见结束会话*/", "\n            {\n                ", "/*实时视音频点播*/", "\n                ", "/*历史视音频回放*/", "\n                ", "/*视音频文件下载*/", "\n                dbg(", "\"<EXOSIP_CALL_CLOSED>\\n\"", ");            ", "//", "日志输出会话关闭\n                ", "if", "(MSG_IS_BYE(g_event->request))        ", "//", "如果测试消息是再见请求\n                {\n                    dbg(", "\"<MSG_IS_BYE>\\n\"", ");                ", "//", "日志输出消息请求是BYE\n                    ", "//i", "f((", "0", " != g_did_realPlay)&&(g_did_realPlay == g_event->did))", "/*实时视音频点播*/", "\n                    {\n                        ", "/*关闭：实时视音频点播/", "历史视音频回放", "/视音频文件下载*/", "\n                        ", "//", "dbg(", "\"realPlay closed success!\\n\"", ");\n                        ", "//g", "_did_realPlay = ", "0", ";\n                        pthread_mutex_lock(&media_list_mutex);", "//", "阻塞式加锁（傻等(一直盯着看的)加锁类型）心跳互斥锁\n                        GB28181_MEDIA_PARA media_info;  ", "//", "媒体段落结构体指针\n                        std::map<int, GB28181_MEDIA_PARA>::iterator iter=media_list.begin();", "//", "**？？？这段代码啥意思？？？\n                        ", "for", "(;iter!=media_list.end();){\n                            ", "if", "(iter->first == g_event->did){\n                                memcpy(&media_info,&iter->second,sizeof(GB28181_MEDIA_PARA));\n                                media_list.erase(iter);\n                                ", "break", ";\n                            }\n                            ", "else", "{\n                                iter ++;\n                            }\n                        }\n                        ", "if", "(iter != media_list.end()){\n                            strcpy(media_info.control_type,", "\"Closed\"", ");\n                            set_media_control(&media_info);\n                            ", "//u", "sleep(", "500000", ");\n                            st_eXosip_callback.st_exosip_media_control(&media_info);", "//", "获取当前媒体控制状态\n                        }\n                        pthread_mutex_unlock(&media_list_mutex);\n                        ", "//", "eXosip_lock(context);\n                        eXosip_message_build_answer(context,g_event->tid, ", "200", ", &g_answer);", "/*Build default Answer for request*/", "\n                        eXosip_message_send_answer(context,g_event->tid, ", "200", ", g_answer);", "/*按照规则回复200OK*/", "\n                        dbg(", "\"eXosip_message_send_answer success!\\n\"", ");\n                        ", "//", "eXosip_unlock(context);\n                    }\n\n"]], "Tag": "程序设计"}
{"Answer": "[quote]求前辈们解释一下\"&lt;!--\"和\"--&gt;\"有什么作用[/quote]\r\n这种是html或xml的注释方式，表示浏览器不显示该内容，但对于服务器来说不是，就是说，如果里面有jsp的指令，还是会被服务器端解析。", "Konwledge_Point": "注释", "Question": ["在JSP中看到\"<!--\"和\"-->\"包起来的代码，又不是注释，这个是什么意思呢？", [":cry: 在JSP页面中几次碰到了这个东西，\"<!--\"和\"-->\"包起来的代码开始还以为是注释掉得废弃代码，结果这些代码都能够起作用。求前辈们解释一下\"<!--\"和\"-->\"有什么作用。 :cry: "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;C# Winform里面用Console.WriteLine输出也不会报错&lt;/p&gt;\n&lt;p&gt;显示在 VS IDE 的视图→输出窗口&amp;#xff0c;且只在 Debug 环境下此语句执行。&lt;/p&gt;\n&lt;p&gt;如果是 &lt;strong&gt;Release&lt;/strong&gt; 环境&amp;#xff0c;在 Win32 程序中 System.Console、System.Diagnostics.Debug、System.Diagnostics.Trace 是不执行的&amp;#xff0c;这点可以从 IL 代码看出。&lt;/p&gt;\n&lt;p&gt;来源&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/sdwdjzhy/p/4178589.html\" id=\"textarea_1635908737573_1635908864954_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;C# Winform里面用Console.WriteLine输出到哪了 - 梦幻仙境的精灵 - 博客园&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;C# Winform里面用Console.WriteLine输出也不会报错显示在 VS IDE 的视图→输出窗口&amp;#xff0c;且只在 Debug 环境下此语句执行。如果是 Release 环境&amp;#xff0c;在 Win32 程&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://common.cnblogs.com/favicon.svg\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/sdwdjzhy/p/4178589.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["已经发布的项目代码中有几处console.writeline(“11”)这种语句没有注释，项目运行时内存会不断增加吗", ["发布的项目运行时，代码中的console.writeline的输出会输出在哪里呢？会使程序占用的内存越来越多吗？会被回收机制清理吗？", "项目是VS2019 C#winform开发的，在form.cs页有几处console.writeline(\"11\")这种 忘记注释了，项目连续运行几天会卡死吗？求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use the magic method annotations&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * @method Bar foo()\n */\n class Baz\n {\n   ...\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["我可以用phpstorm指示方法php返回的类型吗？", ["\n\n", "I use __call() magic php method to call non existing method with my own instructions.", "\n\n", "I want know how can I indicate to phpstorm : this non-existing method returned an instance of a class?", "\n\n", "exemple :", "\n\n", "class Baz\n{\n   function __call()\n   {\n      return new Bar();\n   }\n\n   function test()\n   {\n      $this->foo()->bar();\n   }\n}\n\n\nclass Bar\n{\n   function bar()\n   {\n       //do something\n   }\n}\n", "\n\n", "I want declare for all current class Baz :", "\n\n", "/** @return foo() Bar */\n", "\n\n", "I want PhpSotrm found the bar() method source and concider foo() like a Bar instance object.", "\n\n", "How can I do that?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your problem is that your &lt;code&gt;foreach&lt;/code&gt; is looping through &lt;code&gt;$_POST['IDadd']&lt;/code&gt;, &lt;code&gt;$_POST['Nameadd']&lt;/code&gt; and &lt;code&gt;$_POST['Jobadd']&lt;/code&gt;, not the contents of those arrays. Just checkout the contents of &lt;code&gt;$key&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;What you need to do is make sure they aren't empty and then loop through the contents:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// I'm just showing checking all the arrays aren't empty\n// you'll also want to check if they have the same length\nif (!empty($_POST['IDadd']) &amp;amp;&amp;amp; ...) {\n    // loop through the keys of one of the arrays\n    foreach (array_keys($_POST['IDadd']) as $index) {\n        $userId = mysqli_real_escape_string($_POST['IDadd'][$index]);\n        // ...\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should also look into using prepared statements to lessen the chance of SQL injection.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用PHP和SQL生成输入字段", ["\n\n", "I'm attempting to generate a bunch of inputs of the same name, and saving it to an sql table. The issue i'm having is, my code works for about 4 of the inputs, then the rest nothing happens.", "\n\n", "Code thats generating the inputs:", "\n\n", "for ($x = 0; $x < 10; $x++) {\n            echo \"      ID: <input name=\\\"IDadd[]\\\" type=\\\"text\\\"> \n\"; \n            echo \"      Name: <input name=\\\"Nameadd[]\\\" type=\\\"text\\\"> \n\"; \n            echo \"      Job: <select name='Jobadd[]'>\n\"; \n            echo \"      <option value='Tech'>Tech</option>\n\";\n            echo \"      <option value='Check-In'>Check-In</option>\n\";\n            echo \"      <option value='Inventory'>Inventory</option>\n\"; \n            echo \"      <option value='Beats'>Beats</option>\n\"; \n            echo \"      <option value='Computers'>Computers</option>\n\";\n            echo \"      <option value='IOS'>IOS</option>\n\";\n            echo \"      <option value='Remarketing'>Remarketing</option>\n\";   \n            echo \"      </select> \n\";\n            echo \"<br><br>\";\n        } \n", "\n\n", "Code that should be sorting it out and saving it:", "\n\n", "if ( isset( $_POST[ 'newEmployee' ] ) )\n                            {\n                            $index = 0;\n                                foreach ($_POST as $key => $value){\n                                   $userId = $_POST['IDadd'][$index];\n                                   $userName = $_POST['Nameadd'][$index];\n                                   if (empty($_POST['Nameadd'][$index])) {\n                                    return;\n                                  }\n                                   $userJob = $_POST['Jobadd'][$index];\n                                   $index++;\n                                   $sql = \"INSERT INTO Employee (userId, Name, Job, Week)\n                                    VALUES ('$userId', '$userName', '$userJob', '$currentWeekIs')\";\n                                    mysqli_query($con, $sql);\n                                }\n                                if($sql) // will return true if succefull else it will return false\n                                    {\n                                            mysqli_close( $con );\n                                            sleep(4);\n                                            echo '<META HTTP-EQUIV=\"Refresh\" Content=\"0; URL=add.php\">';\n                                    }\n                            }\n", "\n\n", "--EDIT", "\n\n", "So this should work then?", "\n\n", "if ( isset( $_POST[ 'newEmployee' ] ) )\n                            {\n\n                                if (!empty($_POST['IDadd'])) {\n                                    // loop through the keys of one of the arrays\n                                    foreach (array_keys($_POST['IDadd']) as $index) {\n                                        $userId = mysqli_real_escape_string($_POST['IDadd'][$index]);\n                                        $userName = mysqli_real_escape_string($_POST['Nameadd'][$index]);\n                                        $userJob = mysqli_real_escape_string($_POST['Jobadd'][$index]);\n                                        $sql = \"INSERT INTO Employee (userId, Name, Job, Week)\n                                        VALUES ('$userId', '$userName', '$userJob', '$currentWeekIs')\";\n                                        mysqli_query($con, $sql);\n                                    }\n                                    if($sql) // will return true if succefull else it will return false\n                                    {\n                                            mysqli_close( $con );\n                                            sleep(4);\n                                            echo '<META HTTP-EQUIV=\"Refresh\" Content=\"0; URL=add.php\">';\n                                    }\n                                }\n                            }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把float:left去了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["运行结果图片与文字并列了，如何修改让文字在图片下方?", ["急！麻烦各位了，我是一个刚学的学生，不知道怎么修改才能达到文字在图片下放的结果。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;main中已经给A动态分配空间了。create函数你又分配了一个新空间地址&amp;#xff0c;导致create函数中只是给该函数中分配的空间地址写入内容&amp;#xff0c;但main函数中的A头节点指向的地址什麽东西也没有写入啊。所以你后面函数都用A进行处理&amp;#xff0c;自然什麽也没有&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["在链表的子函数内给头节点申请内存空间（注释掉的那两句）为什么会导致错误呢，一定要在主函数里申请空间是吗？", ["\n", "在链表的子函数内给头节点申请内存空间（注释掉的那两句）只要加上就没有输出或者输出无限未知的数字，为什么会导致错误呢，一定要在主函数里申请空间是吗？", "链表的函数之间到底是怎么调用传递的呀？", "完整代码如下"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#import 要用到的库&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; operator\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; os\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; time\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; cv2\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide2 &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QtGui\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide2.QtWidgets &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QFileDialog, QApplication\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PySide2.QtUiTools &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; QUiLoader\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; torch.nn &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; nn\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; torchvision &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; models, transforms\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; PIL &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Image\n \n \n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;cvImgtoQtImg&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;cvImg, isConvertToGray&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;&lt;/span&gt;):                                                                   &lt;span class=\"hljs-comment\"&gt;#opencv图转成qt图&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; isConvertToGray:                                                                                           &lt;span class=\"hljs-comment\"&gt;#是否转成灰度图&lt;/span&gt;\n        QtImgBuf &amp;#61; cv2.cvtColor(cvImg, cv2.COLOR_BGR2GRAY)                                                        &lt;span class=\"hljs-comment\"&gt;#转换颜色空间&lt;/span&gt;\n        QtImg &amp;#61; QtGui.QImage(QtImgBuf.data, QtImgBuf.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], QtImgBuf.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], QtGui.QImage.Format_Grayscale8) &lt;span class=\"hljs-comment\"&gt;#返回QTimg格式&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        QtImgBuf &amp;#61; cv2.cvtColor(cvImg, cv2.COLOR_BGR2RGBA)                                                        &lt;span class=\"hljs-comment\"&gt;#转换颜色空间&lt;/span&gt;\n        QtImg &amp;#61; QtGui.QImage(QtImgBuf.data, QtImgBuf.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], QtImgBuf.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], QtGui.QImage.Format_RGBA8888)   &lt;span class=\"hljs-comment\"&gt;#返回QTimg格式&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; QtImg\n \n \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Stats&lt;/span&gt;:  &lt;span class=\"hljs-comment\"&gt;#Stats类定义&lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                             &lt;span class=\"hljs-comment\"&gt;#初始化函数&amp;#xff0c;创建类时自动调用&amp;#xff0c;以下皆为参数&lt;/span&gt;\n        self.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;                                           &lt;span class=\"hljs-comment\"&gt;#open参数定义&lt;/span&gt;\n        self.ui_face &amp;#61; QUiLoader().load(&lt;span class=\"hljs-string\"&gt;&amp;#39;ui/demo.ui&amp;#39;&lt;/span&gt;)               &lt;span class=\"hljs-comment\"&gt;#加载ui文件&lt;/span&gt;\n        self.ui_face.setFixedSize(&lt;span class=\"hljs-number\"&gt;1239&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;824&lt;/span&gt;)                        &lt;span class=\"hljs-comment\"&gt;#窗口设置固定的尺寸&lt;/span&gt;\n        self.ui_face.btn_open_cap.clicked.connect(self.opt_cap)     &lt;span class=\"hljs-comment\"&gt;#设置btn_open_cap按钮点击函数opt_cap&amp;#xff0c;鼠标点击触发此函数&lt;/span&gt;\n        self.ui_face.btn_predict.clicked.connect(self.cap)          &lt;span class=\"hljs-comment\"&gt;#设置btn_predict按钮点击函数cap&lt;/span&gt;\n        self.ui_face.btn_open_res.clicked.connect(self.load_pic)    &lt;span class=\"hljs-comment\"&gt;#设置btn_open_res按钮点击函数load_pic&lt;/span&gt;\n        self.model, self.model_ft &amp;#61; self.load_model()               &lt;span class=\"hljs-comment\"&gt;#加载模型&lt;/span&gt;\n                                                                    &lt;span class=\"hljs-comment\"&gt;#可回到147行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;load_pic&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                             &lt;span class=\"hljs-comment\"&gt;#加载图片函数&lt;/span&gt;\n        filePaths, _ &amp;#61; QFileDialog.getOpenFileName(                 &lt;span class=\"hljs-comment\"&gt;#打开一个对话框&amp;#xff0c;给用户选择文件&amp;#xff0c;通过&lt;/span&gt;\n            self.ui_face,                                           &lt;span class=\"hljs-comment\"&gt;#此句获取打开的文件路径&lt;/span&gt;\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;请选择将要转换的文件&amp;#34;&lt;/span&gt;,\n            os.path.join(os.path.expanduser(&lt;span class=\"hljs-string\"&gt;&amp;#39;~&amp;#39;&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#34;Desktop&amp;#34;&lt;/span&gt;),       &lt;span class=\"hljs-comment\"&gt;#格式化路径&lt;/span&gt;\n            &lt;span class=\"hljs-string\"&gt;&amp;#34;文件类型 (*.jpg)&amp;#34;&lt;/span&gt;                                       &lt;span class=\"hljs-comment\"&gt;#格式化文件类型&lt;/span&gt;\n        )\n        self.ui_face.edt_res.setText(filePaths)                     &lt;span class=\"hljs-comment\"&gt;#edt_res设置文本内容为文件路径&lt;/span&gt;\n        self.img &amp;#61; cv2.imread(filePaths)                            &lt;span class=\"hljs-comment\"&gt;#opencv读取图片&lt;/span&gt;\n        show &amp;#61; cv2.resize(self.img, (&lt;span class=\"hljs-number\"&gt;640&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;480&lt;/span&gt;))                     &lt;span class=\"hljs-comment\"&gt;#调整图片大小为640 480&lt;/span&gt;\n        show &amp;#61; cv2.cvtColor(show, cv2.COLOR_BGR2RGB)                &lt;span class=\"hljs-comment\"&gt;#从一种颜色空间BGR转换为另一种颜色空间RGB&lt;/span&gt;\n        showImage &amp;#61; QtGui.QImage(show.data, show.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], show.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], QtGui.QImage.Format_RGB888)  &lt;span class=\"hljs-comment\"&gt;#显示图片&amp;#xff0c;括号内图像参数&lt;/span&gt;\n        self.ui_face.ImgDisp.setPixmap(QtGui.QPixmap.fromImage(showImage))   &lt;span class=\"hljs-comment\"&gt;#设置显示图片的位置&lt;/span&gt;\n \n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;opt_cap&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                              &lt;span class=\"hljs-comment\"&gt;#摄像头控制&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:                                       &lt;span class=\"hljs-comment\"&gt;#如果已经打开&lt;/span&gt;\n            self.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;                                       &lt;span class=\"hljs-comment\"&gt;#调整为关闭&lt;/span&gt;\n            self.ui_face.edt_cap.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;摄像头已关闭&amp;#39;&lt;/span&gt;)             &lt;span class=\"hljs-comment\"&gt;#输出”摄像头已关闭“&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            self.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;                                        &lt;span class=\"hljs-comment\"&gt;#如果已经关闭&amp;#xff0c;调整为打开&lt;/span&gt;\n            self.ui_face.edt_cap.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;摄像头已打开&amp;#39;&lt;/span&gt;)             &lt;span class=\"hljs-comment\"&gt;#输出”摄像头已打开“&lt;/span&gt;\n            self.start()                                            &lt;span class=\"hljs-comment\"&gt;#调用start函数       &lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;start&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                                &lt;span class=\"hljs-comment\"&gt;#shart函数&lt;/span&gt;\n        self.cap &amp;#61; cv2.VideoCapture(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                              &lt;span class=\"hljs-comment\"&gt;#VideoCapture()中参数是0&amp;#xff0c;表示打开笔记本的内置摄像头&lt;/span&gt;\n        self.cap.&lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;640&lt;/span&gt;)                                        &lt;span class=\"hljs-comment\"&gt;#设置分辨率&lt;/span&gt;\n        self.cap.&lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;480&lt;/span&gt;)                                        &lt;span class=\"hljs-comment\"&gt;#设置分辨率&lt;/span&gt;\n        self.cap.&lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)                                       &lt;span class=\"hljs-comment\"&gt;#设置分辨率&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:                                                                                         &lt;span class=\"hljs-comment\"&gt;#循环&lt;/span&gt;\n            success, self.img &amp;#61; self.cap.read()                                                             &lt;span class=\"hljs-comment\"&gt;#图像进行翻转&lt;/span&gt;\n            self.img &amp;#61; cv2.flip(self.img, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)                                                                &lt;span class=\"hljs-comment\"&gt;#读取摄像头内容&lt;/span&gt;\n            show &amp;#61; cv2.resize(self.img, (&lt;span class=\"hljs-number\"&gt;640&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;480&lt;/span&gt;))                                                         &lt;span class=\"hljs-comment\"&gt;#调整摄像大小&lt;/span&gt;\n            show &amp;#61; cv2.cvtColor(show, cv2.COLOR_BGR2RGB)                                                    &lt;span class=\"hljs-comment\"&gt;#转换颜色空间&lt;/span&gt;\n            showImage &amp;#61; QtGui.QImage(show.data, show.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], show.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], QtGui.QImage.Format_RGB888)   &lt;span class=\"hljs-comment\"&gt;#展示图片&lt;/span&gt;\n            self.ui_face.ImgDisp.setPixmap(QtGui.QPixmap.fromImage(showImage))                              &lt;span class=\"hljs-comment\"&gt;#设置图片位置&lt;/span&gt;\n            cv2.waitKey(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                                                                                  &lt;span class=\"hljs-comment\"&gt;#图片停留在界面&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;:                                                                          &lt;span class=\"hljs-comment\"&gt;#如果open未打开&amp;#xff0c;则跳出循环&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;   \n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;展示图片&amp;#39;&lt;/span&gt;)       \n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;cap&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                                                                          &lt;span class=\"hljs-comment\"&gt;#cap函数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:                                                                                                &lt;span class=\"hljs-comment\"&gt;#try except语句&lt;/span&gt;\n            image &amp;#61; Image.fromarray(cv2.cvtColor(self.img, cv2.COLOR_BGR2RGB))                              &lt;span class=\"hljs-comment\"&gt;#调整图片格式&lt;/span&gt;\n            output &amp;#61; self.predict(image, self.model_ft)                                                     &lt;span class=\"hljs-comment\"&gt;#调用predict函数&lt;/span&gt;\n            ret &amp;#61; []                                                                                        &lt;span class=\"hljs-comment\"&gt;#定义ret列表&lt;/span&gt;\n            emo &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;surprized&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;happy&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;disgust&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;fear&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;anger&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;sad&amp;#39;&lt;/span&gt;]                       &lt;span class=\"hljs-comment\"&gt;#定义表情库&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; index, value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(self.model):                                                      &lt;span class=\"hljs-comment\"&gt;#遍历model函数的结果&lt;/span&gt;\n                dis &amp;#61; np.linalg.norm(value - output)  &lt;span class=\"hljs-comment\"&gt;# 欧氏距离                                            #计算欧式距离&lt;/span&gt;\n                ret.append({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;: emo[index], &lt;span class=\"hljs-string\"&gt;&amp;#39;dis&amp;#39;&lt;/span&gt;: dis})                                            &lt;span class=\"hljs-comment\"&gt;#将表情的种类和欧氏距离写入列表&lt;/span&gt;\n            ret &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(ret, key&amp;#61;operator.itemgetter(&lt;span class=\"hljs-string\"&gt;&amp;#39;dis&amp;#39;&lt;/span&gt;), reverse&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)                                &lt;span class=\"hljs-comment\"&gt;#ret根据欧氏距离排序&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(ret)                                                                                      &lt;span class=\"hljs-comment\"&gt;#打印ret&lt;/span&gt;\n            self.ui_face.label_ret.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;识别结果为&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                              &lt;span class=\"hljs-comment\"&gt;#ui展示打印结果&lt;/span&gt;\n            self.ui_face.label_ret_0.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第一个结果&lt;/span&gt;\n            self.ui_face.label_ret_1.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第二个结果                                       #ui展示打印第一个结果&lt;/span&gt;\n            self.ui_face.label_ret_2.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第三个结果&lt;/span&gt;\n            self.ui_face.label_ret_3.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;3&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第四个结果&lt;/span&gt;\n            self.ui_face.label_ret_4.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;4&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第五个结果&lt;/span&gt;\n            self.ui_face.label_ret_5.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;5&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第六个结果&lt;/span&gt;\n            self.ui_face.label_ret_6.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;6&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; ret[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;][&lt;span class=\"hljs-string\"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;])                                    &lt;span class=\"hljs-comment\"&gt;#ui展示打印第七个结果&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:                                                                                             &lt;span class=\"hljs-comment\"&gt;#如果代码出现问题&amp;#xff0c;执行pass&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;pass&lt;/span&gt;    \n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;load_model&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):                                                                   &lt;span class=\"hljs-comment\"&gt;#总结&amp;#xff0c;这个函数所有语句都是为了加载深度学习模型&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# 这一块是对图片特征进行提取&lt;/span&gt;\n        model_path &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;model/weights.pth&amp;#39;&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# build model&lt;/span&gt;\n        model_ft &amp;#61; models.resnet34(pretrained&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)\n        num_ftrs &amp;#61; model_ft.fc.in_features\n        model_ft.fc &amp;#61; nn.Sequential(\n            nn.Dropout(&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;),\n            nn.Linear(num_ftrs, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;),\n            nn.Softmax(dim&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        )\n        model_ft.load_state_dict(torch.load(model_path))\n        model_ft.&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;()\n        &lt;span class=\"hljs-comment\"&gt;# 参数写到这里&amp;#xff0c;得到的中心点遍历一下  然后写到这里&lt;/span&gt;\n        model &amp;#61; [\n            [&lt;span class=\"hljs-number\"&gt;2.0667151e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.4240412e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.4473200e-02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.0134422e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6.0332119e-03&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;7.7563822e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9.6317458e-01&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;2.5990081e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2.7968729e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.8215105e-02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9.3163711e-01&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5.1174462e-03&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;6.0818493e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.8408846e-02&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;0.00336622&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.00619731&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.10314032&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.20358741&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.27171963&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.26114&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;0.1508491&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;2.0508033e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.2301957e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.1134737e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5.8690608e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9.5963997e-01&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;1.0704219e-02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.5145153e-02&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;4.1064431e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.2989613e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.9172471e-01&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2.3929298e-02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.7944381e-02&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;2.8446108e-02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.6245927e-02&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;0.0014531&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.00288311&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.21803668&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.1291624&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.06903042&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.04348047&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;0.5359538&lt;/span&gt;],\n            [&lt;span class=\"hljs-number\"&gt;2.0752930e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.1509242e-04&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.1426501e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7.6724142e-03&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.2466751e-03&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;9.6485263e-01&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.0462716e-02&lt;/span&gt;]\n        ]\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; model, model_ft\n \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;predict&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, image, model&lt;/span&gt;):                                                                &lt;span class=\"hljs-comment\"&gt;#根据模型预测结果函数&lt;/span&gt;\n        time_s &amp;#61; time.time()                                                                        &lt;span class=\"hljs-comment\"&gt;#获取当前时间&lt;/span&gt;\n        transform &amp;#61; transforms.Compose([                                                            &lt;span class=\"hljs-comment\"&gt;#图像预处理&amp;#xff0c;包含多个步骤&amp;#xff1a;调整大小&amp;#xff0c;变成张量&amp;#xff0c;标准化&lt;/span&gt;\n            transforms.Resize(&lt;span class=\"hljs-number\"&gt;224&lt;/span&gt;),\n            transforms.ToTensor(),\n            transforms.Normalize([&lt;span class=\"hljs-number\"&gt;0.485&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.456&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.406&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;0.229&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.224&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.225&lt;/span&gt;])])\n        img &amp;#61; transform(image)                                                                     &lt;span class=\"hljs-comment\"&gt;#预处理图像&lt;/span&gt;\n        img &amp;#61; torch.unsqueeze(img, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                                                              &lt;span class=\"hljs-comment\"&gt;#作用&amp;#xff1a;扩展维度&amp;#xff0c;返回一个新的张量&amp;#xff0c;对输入的既定位置插入维度 1&lt;/span&gt;\n        output &amp;#61; model(img)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].data.numpy()                                                         &lt;span class=\"hljs-comment\"&gt;#将图片输入到模型&amp;#xff0c;进行预测&lt;/span&gt;\n        time_e &amp;#61; time.time() - time_s                                                               &lt;span class=\"hljs-comment\"&gt;#得出处理时间&lt;/span&gt;\n        self.ui_face.label_time.setText(&lt;span class=\"hljs-string\"&gt;&amp;#39;用时&amp;#xff1a;&amp;#39;&lt;/span&gt; &amp;#43; (&lt;span class=\"hljs-string\"&gt;&amp;#39;%.3f&amp;#39;&lt;/span&gt; % time_e) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;)                         &lt;span class=\"hljs-comment\"&gt;#输出处理时间&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; output                                                                                &lt;span class=\"hljs-comment\"&gt;#返回输出结果&lt;/span&gt;\n \n &lt;span class=\"hljs-comment\"&gt;#从这里开始看&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    app &amp;#61; QApplication([])   &lt;span class=\"hljs-comment\"&gt;#初始化&amp;#xff0c;基于QWidget&amp;#xff0c;用于处理QWidget特有的初始化和结束收尾工作。&lt;/span&gt;\n    stats &amp;#61; Stats()          &lt;span class=\"hljs-comment\"&gt;#创建Stats类并初始化&amp;#xff0c;命名为stats&amp;#xff0c;可以跳转到27行&lt;/span&gt;\n    stats.ui_face.show()     &lt;span class=\"hljs-comment\"&gt;#展示Stats类的ui_face&amp;#xff0c;也就是展示界面&lt;/span&gt;\n    app.exec_()              &lt;span class=\"hljs-comment\"&gt;#运行程序&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["对以下代码结合实际写个详细的注释，阐述其中的原理？", ["这是个人脸表情识别的UI界面，麻烦给个详细的注释，最好是行注释，因为对这些库都不太熟悉", "\n", "import", " operator\n", "import", " os\n", "import", " time\n", "import", " cv2\n", "from", " PySide2 ", "import", " QtGui\n", "from", " PySide2.QtWidgets ", "import", " QFileDialog, QApplication\n", "from", " PySide2.QtUiTools ", "import", " QUiLoader\n", "import", " numpy ", "as", " np\n", "import", " torch\n", "import", " torch.nn ", "as", " nn\n", "from", " torchvision ", "import", " models, transforms\n", "from", " PIL ", "import", " Image\n\n\n", "def", " ", "cvImgtoQtImg", "(", "cvImg, isConvertToGray=", "False", "):\n    ", "if", " isConvertToGray:\n        QtImgBuf = cv2.cvtColor(cvImg, cv2.COLOR_BGR2GRAY)\n        QtImg = QtGui.QImage(QtImgBuf.data, QtImgBuf.shape[", "1", "], QtImgBuf.shape[", "0", "], QtGui.QImage.Format_Grayscale8)\n    ", "else", ":\n        QtImgBuf = cv2.cvtColor(cvImg, cv2.COLOR_BGR2RGBA)\n        QtImg = QtGui.QImage(QtImgBuf.data, QtImgBuf.shape[", "1", "], QtImgBuf.shape[", "0", "], QtGui.QImage.Format_RGBA8888)\n    ", "return", " QtImg\n\n\n", "class", " ", "Stats", ":\n\n    ", "def", " ", "__init__", "(", "self", "):\n        self.", "open", " = ", "False", "\n        self.ui_face = QUiLoader().load(", "'ui/demo.ui'", ")\n        self.ui_face.setFixedSize(", "1239", ", ", "824", ")\n        self.ui_face.btn_open_cap.clicked.connect(self.opt_cap)\n        self.ui_face.btn_predict.clicked.connect(self.cap)\n        self.ui_face.btn_open_res.clicked.connect(self.load_pic)\n        self.model, self.model_ft = self.load_model()\n\n    ", "def", " ", "load_pic", "(", "self", "):\n        filePaths, _ = QFileDialog.getOpenFileName(\n            self.ui_face,\n            ", "\"请选择将要转换的文件\"", ",\n            os.path.join(os.path.expanduser(", "'~'", "), ", "\"Desktop\"", "),\n            ", "\"文件类型 (*.jpg)\"", "\n        )\n        self.ui_face.edt_res.setText(filePaths)\n        self.img = cv2.imread(filePaths)\n        show = cv2.resize(self.img, (", "640", ", ", "480", "))\n        show = cv2.cvtColor(show, cv2.COLOR_BGR2RGB)\n        showImage = QtGui.QImage(show.data, show.shape[", "1", "], show.shape[", "0", "], QtGui.QImage.Format_RGB888)\n        self.ui_face.ImgDisp.setPixmap(QtGui.QPixmap.fromImage(showImage))\n\n\n    ", "def", " ", "opt_cap", "(", "self", "):\n        ", "if", " self.", "open", " == ", "True", ":\n            self.", "open", " = ", "False", "\n            self.ui_face.edt_cap.setText(", "'摄像头已关闭'", ")\n        ", "else", ":\n            self.", "open", " = ", "True", "\n            self.ui_face.edt_cap.setText(", "'摄像头已打开'", ")\n            self.start()\n\n    ", "def", " ", "start", "(", "self", "):\n        self.cap = cv2.VideoCapture(", "0", ")\n        self.cap.", "set", "(", "3", ", ", "640", ")\n        self.cap.", "set", "(", "4", ", ", "480", ")\n        self.cap.", "set", "(", "10", ", ", "100", ")\n        ", "while", " ", "True", ":\n            success, self.img = self.cap.read()\n            self.img = cv2.flip(self.img, ", "1", ")\n            show = cv2.resize(self.img, (", "640", ", ", "480", "))\n            show = cv2.cvtColor(show, cv2.COLOR_BGR2RGB)\n            showImage = QtGui.QImage(show.data, show.shape[", "1", "], show.shape[", "0", "], QtGui.QImage.Format_RGB888)\n            self.ui_face.ImgDisp.setPixmap(QtGui.QPixmap.fromImage(showImage))\n            cv2.waitKey(", "0", ")\n            ", "if", " self.", "open", " == ", "False", ":\n                ", "break", "\n        ", "print", "(", "'展示图片'", ")\n\n    ", "def", " ", "cap", "(", "self", "):\n        ", "try", ":\n            image = Image.fromarray(cv2.cvtColor(self.img, cv2.COLOR_BGR2RGB))\n            output = self.predict(image, self.model_ft)\n            ret = []\n            emo = [", "'surprized'", ", ", "'happy'", ", ", "'disgust'", ", ", "'normal'", ", ", "'fear'", ", ", "'anger'", ", ", "'sad'", "]\n            ", "for", " index, value ", "in", " ", "enumerate", "(self.model):\n                dis = np.linalg.norm(value - output)  ", "# 欧氏距离", "\n                ret.append({", "'category'", ": emo[index], ", "'dis'", ": dis})\n            ret = ", "sorted", "(ret, key=operator.itemgetter(", "'dis'", "), reverse=", "False", ")\n            ", "print", "(ret)\n            self.ui_face.label_ret.setText(", "'识别结果为：'", " + ret[", "0", "][", "'category'", "])\n            self.ui_face.label_ret_0.setText(", "'0：'", " + ret[", "0", "][", "'category'", "])\n            self.ui_face.label_ret_1.setText(", "'1：'", " + ret[", "1", "][", "'category'", "])\n            self.ui_face.label_ret_2.setText(", "'2：'", " + ret[", "2", "][", "'category'", "])\n            self.ui_face.label_ret_3.setText(", "'3：'", " + ret[", "3", "][", "'category'", "])\n            self.ui_face.label_ret_4.setText(", "'4：'", " + ret[", "4", "][", "'category'", "])\n            self.ui_face.label_ret_5.setText(", "'5：'", " + ret[", "5", "][", "'category'", "])\n            self.ui_face.label_ret_6.setText(", "'6：'", " + ret[", "6", "][", "'category'", "])\n        ", "except", ":\n            ", "pass", "\n\n    ", "def", " ", "load_model", "(", "self", "):\n        ", "# 这一块是对图片特征进行提取", "\n        model_path = ", "'model/weights.pth'", "\n        ", "# build model", "\n        model_ft = models.resnet34(pretrained=", "False", ")\n        num_ftrs = model_ft.fc.in_features\n        model_ft.fc = nn.Sequential(\n            nn.Dropout(", "0.5", "),\n            nn.Linear(num_ftrs, ", "7", "),\n            nn.Softmax(dim=", "1", ")\n        )\n        model_ft.load_state_dict(torch.load(model_path))\n        model_ft.", "eval", "()\n        ", "# 参数写到这里，得到的中心点遍历一下  然后写到这里", "\n        model = [\n            [", "2.0667151e-04", ", ", "3.4240412e-04", ", ", "1.4473200e-02", ", ", "8.0134422e-03", ", ", "6.0332119e-03", ",\n             ", "7.7563822e-03", ", ", "9.6317458e-01", "],\n            [", "2.5990081e-04", ", ", "2.7968729e-04", ", ", "1.8215105e-02", ", ", "9.3163711e-01", ", ", "5.1174462e-03", ",\n             ", "6.0818493e-03", ", ", "3.8408846e-02", "],\n            [", "0.00336622", ", ", "0.00619731", ", ", "0.10314032", ", ", "0.20358741", ", ", "0.27171963", ", ", "0.26114", ",\n             ", "0.1508491", "],\n            [", "2.0508033e-04", ", ", "3.2301957e-04", ", ", "8.1134737e-03", ", ", "5.8690608e-03", ", ", "9.5963997e-01", ",\n             ", "1.0704219e-02", ", ", "1.5145153e-02", "],\n            [", "4.1064431e-04", ", ", "1.2989613e-03", ", ", "8.9172471e-01", ", ", "2.3929298e-02", ", ", "1.7944381e-02", ",\n             ", "2.8446108e-02", ", ", "3.6245927e-02", "],\n            [", "0.0014531", ", ", "0.00288311", ", ", "0.21803668", ", ", "0.1291624", ", ", "0.06903042", ", ", "0.04348047", ",\n             ", "0.5359538", "],\n            [", "2.0752930e-04", ", ", "4.1509242e-04", ", ", "8.1426501e-03", ", ", "7.6724142e-03", ", ", "8.2466751e-03", ",\n             ", "9.6485263e-01", ", ", "1.0462716e-02", "]\n        ]\n        ", "return", " model, model_ft\n\n    ", "def", " ", "predict", "(", "self, image, model", "):\n        time_s = time.time()\n        transform = transforms.Compose([\n            transforms.Resize(", "224", "),\n            transforms.ToTensor(),\n            transforms.Normalize([", "0.485", ", ", "0.456", ", ", "0.406", "], [", "0.229", ", ", "0.224", ", ", "0.225", "])])\n        img = transform(image)\n        img = torch.unsqueeze(img, ", "0", ")\n        output = model(img)[", "0", "].data.numpy()\n        time_e = time.time() - time_s\n        self.ui_face.label_time.setText(", "'用时：'", " + (", "'%.3f'", " % time_e) + ", "'s'", ")\n        ", "return", " output\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    app = QApplication([])\n    stats = Stats()\n    stats.ui_face.show()\n    app.exec_()\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"476\" src=\"https://img-ask.csdnimg.cn/upload/1605600379839.jpg\" width=\"873\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;var name = &amp;quot;JSF&amp;quot;; 这句被你注释掉了，你把这句放到下面就知道了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["这段js代码的正确执行顺序到底是怎样的？我输出的结果和注释不同", ["<script type=\"text/javascript\">", "\nvar name = \"feng\"; function func()", "\n{", "\n/*首先，在func环境内先把name赋值为undefined，然后在执行过程中先寻找func环境下的活动对象的name属性，此时之前已经预编译值为undefined，所以输出是undefined，而不是feng*/", "\nalert(name);  //undefined var name = \"JSF\";", "\nalert(name);  //JSF", "\n}", "\nfunc();", "\nalert(name);", "\n//feng", "\n</script>", "\n\n", " ", "\n\n", "我运行之后输出的内容是三个feng，并不是像注释所说，求解，到底是什么样的执行顺序"]], "Tag": "程序设计"}
{"Answer": "从29-35行。", "Konwledge_Point": "注释", "Question": ["删掉那个写着颜色的按钮，留下另一个写 着数字的按钮，该注释掉哪些代码？", ["我想把图中所指的两个东东有一个删掉，比如删掉那个写着颜色的按钮，留下另一个写", "\n着数字的按钮，该注释掉哪些代码？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你要想能打开看&amp;#xff0c;那写入的必须是字符串&lt;br /&gt;不要写入二进制数字&lt;br /&gt;二进制文件只能用hex读取&amp;#xff0c;不可以用记事本打开&amp;#xff0c;那肯定乱码呀&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么c文件打开乱码", ["为什么用c语言将信息写入文件后， 文件打开是乱码？只有一部分信息是正确的，其余是错的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;A表结构&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"112\" src=\"https://img-ask.csdnimg.cn/upload/1616754927721.png\" width=\"267\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;B表结构&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"126\" src=\"https://img-ask.csdnimg.cn/upload/1616754953472.png\" width=\"282\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;sql 实现 C表结构&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"347\" src=\"https://img-ask.csdnimg.cn/upload/1616754982555.png\" width=\"624\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;select C.customtrade,group_concat(C.mid) from&lt;br /&gt;\n(&lt;br /&gt;\nselect A.customtrade,&lt;br /&gt;\ncase when  LOCATE(B.customtrade,A.customtrade) &amp;gt;0 then id &lt;br /&gt;\nelse &amp;#39;0&amp;#39; end mid&lt;br /&gt;\nfrom A,B&lt;br /&gt;\n) C where mid!&amp;#61;0 group by C.customtrade  &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求sql代码，大佬求解答", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先, 代码层面上用休眠是否解决了线程安全问题?&lt;br /&gt;答: 在你这个demo里面, 没有线程安全问题; 作为学习, 是可以这样做试验的.&lt;br /&gt;但是呢, 多说几句:&lt;br /&gt;多线程或者并发编程的意义, 是为了提高CPU使用率以及系统的业务处理能力,说白了就是单位时间内多干活, 如果有个线程在&amp;#34;消极怠工&amp;#34;, 例如, 它在读网络, 读磁盘...等, 这种操作相比cpu的速度很慢,  那么就把CPU时间贡献给最需要的线程.这样整体的执行效率会提高.&lt;br /&gt;所以, 在这个层面上, 你的代码只能是demo, 违背了多线程并发的意义.&lt;br /&gt;既然不能用休眠来解决线程安全问题, 那么如何处理呢?&lt;br /&gt;答案是: 同步. 例如(常见的synchronized, 或者其它对锁的优化方案等)&lt;br /&gt;希望我的回答能给你带来进一步思考, 有问题继续交流.&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["java线程安全问题   提出的问题在最后代码块注释中  Thread.sleep(3000)哪一行里", ["\npackage d3_thread_safe;\n\n", "public", " ", "class", " ", "Account", " {\n    ", "private", " ", "String", " cardId;\n    ", "private", " ", "double", " money;", "//账户余额", "\n\n    ", "public", " ", "Account", "()", " ", "{\n    }\n\n    ", "public", " ", "Account", "(", "String", " cardId, ", "double", " money)", " ", "{\n        ", "this", ".cardId = cardId;\n        ", "this", ".money = money;\n    }\n\n    ", "public", " ", "void", " ", "drawMoney", "(", "double", " money)", " ", "{\n        ", "//判断是谁来取钱", "\n        ", "String", " name = Thread.", "currentThread", "().", "getName", "();\n        ", "//判断余额是否足够", "\n        ", "if", " (", "this", ".money >= money) {\n            ", "//取钱", "\n            System.out.", "println", "(name + ", "\"来取钱成功，吐出：\"", " + money);\n            ", "//更新余额", "\n            ", "this", ".money -= money;\n            System.out.", "println", "(", "\"剩余：\"", " + ", "this", ".money);\n\n        } ", "else", " {\n            System.out.", "println", "(", "\"余额不足\"", ");\n        }\n\n    }\n\n    ", "public", " ", "String", " ", "getCardId", "()", " ", "{\n        ", "return", " cardId;\n    }\n\n    ", "public", " ", "void", " ", "setCardId", "(", "String", " cardId)", " ", "{\n        ", "this", ".cardId = cardId;\n    }\n\n    ", "public", " ", "double", " ", "getMoney", "()", " ", "{\n        ", "return", " money;\n    }\n\n    ", "public", " ", "void", " ", "setMoney", "(", "double", " money)", " ", "{\n        ", "this", ".money = money;\n    }\n\n\n}\n\n", "\n", "package", " d3_thread_safe;\n\n", "/*\n取钱的线程类\n */", "\npublic ", "class", " ", "DrawThread", " ", "extends", " ", "Thread", " ", "{\n    ", "private", " ", "Account", " acc;\n\n    public ", "DrawThread", "(", "Account", " acc, ", "String", " name) {\n        ", "super", "(name);\n        ", "this", ".acc = acc;\n    }\n\n    ", "@Override", "\n    public void run() {\n        ", "//小明 小红 取钱", "\n        acc.drawMoney(", "100000", ");\n\n    }\n}\n", "\n", "package", " d3_thread_safe;\n\n", "/*\n需求：模拟取钱案例\n\n解决线程安全问题的办法就是加锁\n */", "\n", "public", " ", "class", " ", "ThreadDemo", " ", "{\n    ", "public", " ", "static", " void main(", "String", "[] args) throws Exception {\n        ", "//1、定义一个线程类，创建一个共享账户对象", "\n        Account acc = ", "new", " ", "Account", "(", "\"ICBC-111\"", ", ", "100000", ");\n\n        ", "//2、创建两个线程对象  代表小明和小红同时进来", "\n        ", "new", " ", "DrawThread", "(acc, ", "\"小明\"", ").start();\n        Thread.sleep(", "3000", ");    ", "//这里可以采取休眠来解决安全嘛？", "\n        ", "new", " ", "DrawThread", "(acc, ", "\"小红\"", ").start();\n\n\n    }\n}\n", "\n", "提出的问题在最后代码块注释中      Thread.sleep(3000)哪一行里"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;抛出异常 事务回滚了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["执行下面的查询返回语句时，批量插入就不插数据了，注释掉后面的查询返回就正常插入数据", ["问题遇到的现象和发生背景", "\n", "执行下面的查询返回语句时，批量插入就不插数据了，注释掉后面的查询返回就正常插入数据", "\n", "问题相关代码，请勿粘贴截图", "\n", "if", "(sub.get", "Station()", ".equals(", "\"1\"", ")){\n           ", "//更新工步表", "\n           {List<sumbmiteVO> ", "list", " = pWorkOrderService.selectunitname(sub);\n           ", "if", "(null", " == ", "list", " || ", "list", ".size", "()", " ==", "0", " ){\n               throw ", "new", " ", "RuntimeException(", "\"没有查到工步信息，无法插入！\"", ")", ";\n           }\n           List<POrderUnitStep> pOrderUnitSteps = ", "new", " ArrayList<>", "()", ";\n           ", "for", " (sumbmiteVO vo : ", "list", ") {\n               POrderUnitStep pOrderUnitStep=", "new", " ", "POrderUnitStep()", ";\n               String uuid = ", "IdentityGenerator", ".", "get", "Uuid()", ";\n               pOrderUnitStep.set", "Id(", "uuid", ")", ";\n               pOrderUnitStep.set", "UnitCode(", "vo", ".", "getUNITCODE", "()", ");\n               pOrderUnitStep.set", "StepCode(", "vo", ".", "getStepCode", "()", ");\n               pOrderUnitSteps.add(pOrderUnitStep);\n           }\n           pOrderUnitStepService.insert", "Batch(", "pOrderUnitSteps", ")", ";}\n           ", "//更新检查项点表", "\n           List<sumbmiteVO> list1= pWorkOrderService.selectstepitem(sub);\n           ", "if", "(null", " == ", "list1", " || ", "list1.size", "()", " ==", "0", " ){\n               throw ", "new", " ", "RuntimeException(", "\"没有查到项点信息，无法插入！\"", ")", ";\n           }\n          List<PStepItemRel> pStepItemRels =", "new", " ArrayList<>", "()", ";\n          ", "for", " (sumbmiteVO item : list1){\n              String uuid = ", "IdentityGenerator", ".", "get", "Uuid()", ";\n              PStepItemRel pStepItemRel =", "new", " ", "PStepItemRel()", ";\n              pStepItemRel.set", "Id(", "uuid", ")", ";\n              pStepItemRel.set", "UnitCode(", "item", ".", "getUNITCODE", "()", ");\n              pStepItemRel.set", "StepCode(", "item", ".", "getStepCode", "()", ");\n              pStepItemRels.add(pStepItemRel);\n          }\n           pStepItemRelService.insert", "Batch(", "pStepItemRels", ")", ";\n           ", "//数据返回", "\n           JSONObject sumbmite = ", "new", " ", "JSONObject()", ";\n           JSONObject stepinfo = ", "new", " ", "JSONObject()", ";\n           JSONObject stepinfo2 = ", "new", " ", "JSONObject()", ";\n           JSONObject stepinfo1 = ", "new", " ", "JSONObject()", ";\n\n           ", "//返回工步信息", "\n           List<sumbmiteVO> fhgb=pWorkOrderDao.fanstepcode(sumbmiteVO.get", "WorkOrderCode()", ",sub.get", "Station()", ");\n           ", "if", "(null", " == ", "fhgb", " || ", "fhgb.size", "()", " ==", "0", " ){\n               throw ", "new", " ", "RuntimeException(", "\"没有查到工步信息！\"", ")", ";\n           }\n           sumbmiteVO step1=fhgb.get(", "0", ");\n           sumbmiteVO step2=fhgb.get(", "1", ");\n           stepinfo1.put(", "\"stepName1\"", ",step1.get", "StepName()", ");\n           stepinfo2.put(", "\"stepName2\"", ",step2.get", "StepName()", ");\n\n           ", "//返回项点信息", "\n           JSONArray ", "array", " = ", "new", " ", "JSONArray()", ";\n           List<sumbmiteVO> list2=pWorkOrderDao.fansitem(sumbmiteVO.get", "WorkOrderCode()", ",sub.get", "Station()", ",step1.get", "StepName()", ");\n           ", "if", "(null", " == ", "list2", " || ", "list2.size", "()", " ==", "0", " ){\n               throw ", "new", " ", "RuntimeException(", "\"没有查到项点信息！\"", ")", ";\n           }\n           ", "for", " (sumbmiteVO jcxd : list2) {\n               JSONObject item = ", "new", " ", "JSONObject()", ";\n               item.put(", "\"ItemCode\"", ",jcxd.get", "ItemCode()", ");\n               item.put(", "\"ItemName\"", ",jcxd.get", "ItemName()", ");\n               ", "array", ".add(item);\n           }\n\n           ", "//工具返回", "\n           JSONArray gongju = ", "new", " ", "JSONArray()", ";\n           List<sumbmiteVO> list3=pWorkOrderDao.fangongju(sumbmiteVO.get", "WorkOrderCode()", ");\n           ", "if", "(null", " == ", "list3", " || ", "list3.size", "()", " ==", "0", " ){\n               throw ", "new", " ", "RuntimeException(", "\"没有查到工具信息！\"", ")", ";\n           }\n           ", "for", " (sumbmiteVO gj : list3) {\n               JSONObject item = ", "new", " ", "JSONObject()", ";\n               item.put(", "\"item_type\"", ",gj.get", "ItemType()", ");\n               item.put(", "\"TOOL_CODE\"", ",gj.get", "TOOLCODE()", ");\n               gongju.add(item);\n           }\n           stepinfo1.put(", "\"TOOlist\"", ",gongju);\n           stepinfo1.put(", "\"itemList\"", " ,", "array", ");\n           stepinfo.put(", "\"stepinfo1\"", ",stepinfo1);\n           stepinfo.put(", "\"stepinfo2\"", ",stepinfo2);\n           sumbmite.put(", "\"stepinfo\"", ",stepinfo);\n           return sumbmite;\n       }\n\n", "\n", "运行结果及报错内容", "\n", "直接运行没有任何报错  批量插入也正常执行（运行日志显示update：1）实际没有插入数据", "\n", "我的解答思路和尝试过的方法", "\n", "把批量插入后面的语句注释掉后，数据库便有数据插入", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;试试这样呢&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n   int i,j&amp;#61;-1,p,n,size&amp;#61;4;\n\tfor(i&amp;#61;1;i&amp;lt;&amp;#61;size;i&amp;#43;&amp;#43;) {\n\t\tj&amp;#61;j&amp;#43;2;\n\t\tp&amp;#61;j;\n\t\tfor(n&amp;#61;0;n&amp;lt;&amp;#61;size-i;n&amp;#43;&amp;#43;) printf(&amp;#34;   &amp;#34;);\n\t\tfor(j&amp;#61;i;j&amp;lt;&amp;#61;p;j&amp;#43;&amp;#43;) printf(&amp;#34; * &amp;#34;);\n\t\tprintf(&amp;#34;\\n&amp;#34;);\n\t}\n   return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;效果如图&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"194\" src=\"https://img-ask.csdnimg.cn/upload/1621693782473.png\" width=\"206\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;如有帮助请采纳回答 谢谢&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么打印不出来这个等腰三角形啊。。\n如果把第三个for循环注释的话那个空格是符合结果的，但是一加上", ["为什么打印不出来这个等腰三角形啊。。\n如果把第三个for循环注释的话那个空格是符合结果的，但是一加上第三个for循环，每行的空格数就变了……"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你是用的中断引脚定义了按键  定时器也需要那个引脚触发中断&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["蓝桥杯单片机为什么打开定时器2用作数码管显示，按键根本没反应，把定时器2注释掉后，按键又能正常反应了。", ["问题遇到的现象和发生背景", "\n", "蓝桥杯单片机，写一个按键打开继电器的程序，但在定时器2打开的情况下按键没反应，把定时器这一行注释掉后按键又能正常工作了？", "\n", "以下是代码：", "\n", "void main()\n{\n    EA=", "1", ";\n    ALL_init();   ", "//", "关闭蜂鸣器继电器等\n    Timer2Init(); ", "//", "打开定时器", "2", "，定时器", "2", "用作数码管显示\n", "//", "    Timer0Init(); \n    ", "while", "(", "1", ")\n    {\n", "//", "        AD=AD_Read(", "0", "x01);\n        key_scan();       ", "//", "按键扫描\n    }\n}\n\nvoid key_scan(void)\n{\n    ", "if", "(P30==", "0", ") ", "//", "s7 出水 flag=", "1", ";\n    {\n        delay_ms(", "5", ");\n        ", "if", "(P30==", "0", ")\n        {\n            ", "while", "(!P30)\n            {\n                flag=", "1", ";\n                Hc_138(buzz);\n                P0=", "0", "x10;\n", "//", "                TR0 = ", "1", ";        ", "//", "定时器", "0", "开始计时\n            }\n        }\n    }\n    ", "else", " ", "if", "(P31==", "0", ") ", "//", "s6 停止 flag=", "2", ";\n    {\n        delay_ms(", "5", ");\n        ", "if", "(P31==", "0", ")\n        {\n            ", "while", "(!P31)\n            {\n                flag=", "2", ";\n                Hc_138(buzz);\n                P0=", "0", "x00;\n", "//", "                TR0=", "0", ";              ", "//", "关闭定时器", "0", "\n            }\n        }\n    }\n    ", "else", " flag=", "0", ";\n}\nvoid Timer2Init(void)        ", "//", "4", "毫秒@", "12.000", "MHz\n{\n    AUXR |= ", "0", "x04;        ", "//", "定时器时钟", "1", "T模式\n    T2L = ", "0", "x80;        ", "//", "设置定时初值\n    T2H = ", "0", "x44;        ", "//", "设置定时初值\n    AUXR |= ", "0", "x10;        ", "//", "定时器", "2", "开始计时\n    IE2|=", "0", "x04;\n}\n\nvoid Timer2() interrupt ", "12", "\n{\n    ", "if", "(flag==", "0", ")\n    {\n        shumaguan_DS1();\n    }\n    ", "else", " ", "if", "(flag==", "1", ")\n    {\n        shumaguan_DS2_ml();\n    }\n    ", "else", " ", "if", "(flag==", "2", ")\n    {\n        shumaguan_DS2_yuan();\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是一个实现迪杰斯特拉算法的代码&amp;#xff0c;用于求解单源最短路径问题。该算法是一种贪心算法&amp;#xff0c;每次求解的时候都会找到当前能到达的点中距离起点最近的点&amp;#xff0c;并从该点开始搜索下一步能到达的点&amp;#xff0c;直到到达终点。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;代码中使用了三个栈&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1、stack 栈用来存储搜索路径中的点。&lt;br /&gt;2、stackdata 栈用来存储每条边的距离。&lt;br /&gt;3、stackfindlj 栈用来存储所有可能的路径&amp;#xff0c;其中的每一行都是一条路径&amp;#xff0c;第一个元素为起点&amp;#xff0c;其余的元素为路径中的每个点。&lt;br /&gt;首先&amp;#xff0c;从起点开始搜索&amp;#xff0c;如果找到了一条边且这条边还没有访问过&amp;#xff0c;就将这条边加入路径中&amp;#xff0c;并将这条边的距离加入路径距离中。然后从这条边的终点开始继续搜索&amp;#xff0c;如果能找到一条边且这条边还没有访问过&amp;#xff0c;就将这条边加入路径中&amp;#xff0c;并将这条边的距离加入路径距离中。重复这个过程直到到达终点&amp;#xff0c;或者找不到新的边可以加入路径中。&lt;/p&gt;\n&lt;p&gt;所有的路径被保存在 stackfindlj 中&amp;#xff0c;其中的每一行都是一条路径。接下来&amp;#xff0c;遍历所有的路径&amp;#xff0c;找到路径距离最小的路径。将这条最短路径的信息复制到一个名为 temp 的结构体中&amp;#xff0c;并返回这个结构体。&lt;/p&gt;\n&lt;p&gt;这个结构体中包含两个信息&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1、stack 数组用来存储最短路径中的点。&lt;br /&gt;2、jl 变量用来存储最短路径的距离。&lt;/p&gt;\n&lt;p&gt;如果想输出最短路径的途径点信息&amp;#xff0c;可以在输出路径距离之后添加以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最短路径为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (temp.stack[i] !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, temp.stack[i]);\n  }\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这段代码会依次输出最短路径中的所有点。&lt;br /&gt;仅供参考&amp;#xff0c;望采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["构造了一个迪杰斯特拉函数，但是不会得出最短路径的途径点信息，需要更详细的注释", ["问题遇到的现象和发生背景 构造了一个计算函数，如何得到最短路径的点的信息以及需要更详细的注释", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "struct ", "MyStack", "  \n{\n    int stack[", "50", "];//栈\n    int jl;//距离\n};\n//迪杰斯特拉算法\n", "MyStack", " ", "Dijkstra", "(map ", "Map", ", int d, int e)//d设为起点,e设为终点\n{\n    int stack[", "50", "] = { ", "0", " }, id1 = ", "0", ";\n    int stackdata[", "50", "] = { ", "0", " }, id2 = ", "0", ";\n    int stackfindlj[", "50", "][", "50", "] = { ", "0", " }, id3 = ", "0", ";//路径保存\n    int stackfindjl[", "50", "] = { ", "0", " };//距离保存\n    int isfind = ", "0", ";\n    for (int i = d; i < d + ", "1", "; i++)\n    {\n        for (int j = i; j < ", "12", "; j++)\n        {\n            int edge[", "12", "][", "12", "] = { ", "0", " };//辅助地图\n            if (", "Map", ".edge[i][j] != ", "100", " && ", "Map", ".edge[i][j] != ", "0", " && edge[i][j] == ", "0", ")\n            {\n                stack[id1++] = j;\n                stackdata[id2++] = ", "Map", ".edge[i][j];//边的距离\n                edge[i][j] = ", "1", ";//辅助地图\n                while (id1)\n                {\n                    for (int k = stack[id1 - ", "1", "]; k < ", "12", "; k++)\n                    {\n                        if (", "Map", ".edge[stack[id1 - ", "1", "]][k] != ", "100", " && ", "Map", ".edge[stack[id1 - ", "1", "]][k] != ", "0", " && edge[stack[id1 - ", "1", "]][k] == ", "0", ")//开始搜寻路径\n                        {\n                            edge[stack[id1 - ", "1", "]][k] = ", "1", ";\n                            stackdata[id2++] = ", "Map", ".edge[stack[id1 - ", "1", "]][k];\n                            stack[id1++] = k;\n                            if (k == e)//到达了终点\n                                isfind = ", "1", ";\n                            break;\n                        }\n                        if (k == ", "11", ")\n                        {\n                            id1--; id2--;\n                        }\n                    }\n                    if (isfind == ", "1", ")\n                    {\n                        stackfindlj[id3][", "0", "] = i + ", "1", ";\n                        for (int k = ", "0", "; k < id1; k++)\n                        {\n                            stackfindlj[id3][k + ", "1", "] = stack[k] + ", "1", ";\n                            stackfindjl[id3] += stackdata[k];\n                        }\n                        id3++;\n                        isfind = ", "0", ";\n                    }\n                }\n            }\n        }\n    }\n    int min = stackfindjl[", "0", "], minidx = ", "0", ";\n    for (int i = ", "0", "; i < id3; i++)\n    {\n        if (min > stackfindjl[i])\n        {\n            min = stackfindjl[i];\n            minidx = i;\n        }\n    }\n    ", "MyStack", " temp = { ", "0", " };\n    memcpy(&temp.stack, &stackfindlj[minidx], sizeof(int) * ", "50", ");//将得到的最短路径复制到结构体的数组之中\n    temp.jl = min;//将得到的最短距离赋值到结构体的距离中\n    printf(", "\"最短路径距离为：%d\\n\"", ", temp.jl);\n    return temp;\n\n", "\n", "运行结果及详细报错内容", "\n", "只会输出最短距离", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "迪杰斯特拉函数", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "程序设计"}
{"Answer": "(function () {})();这样就是调用它，", "Konwledge_Point": "注释", "Question": ["jquery ui.js文件解析", ["谢谢帮忙分析一下，jquery 里面有一个ui.js文件这么写的意思是什么吗？ 为什么（function(){}）(jquery)  后面这个jquery变量是什么作用啊？", "\n\n", "(function($) {", "\n\n", "/*\n * Rotate\n */\n$.extend($.ui.tabs.prototype, {\n    rotation: null,\n    rotate: function(ms) {\n        var self = this;\n        function stop(e) {\n            if (e.clientX) { // only in case of a true click\n                clearInterval(self.rotation);\n            }\n        }\n        // start interval\n        if (ms) {\n            var t = this.options.selected;\n            this.rotation = setInterval(function() {\n                t = ++t < self.$tabs.length ? t : 0;\n                self.select(t);\n            }, ms);\n            this.$tabs.bind(this.options.event, stop);\n        }\n        // stop interval\n        else {\n            clearInterval(this.rotation);\n            this.$tabs.unbind(this.options.event, stop);\n        }\n    }\n});\n", "\n\n", "})(jQuery);"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;123&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么添加监视器的按钮点击无用", ["package dialog;\nimport java.awt.*;\nimport java.awt.event.*;\nimport javax.swing.*;\npublic ", "class", " AddDialog extends JDialog {\n    ", "private", " static final long serialVersionUID = ", "1L", ";", "//定义程序序列化ID", "\n    JButton b1, b2,b3;\n    JTextField jtf1, jtf2, jtf3, jtf4, jtf5, jtf6, jtf7,jtf8;\n    HandleAddDialog add;\n    public ", "AddDialog(JFrame ", "frame", ")", " {                      ", "//视图", "\n        super(frame, ", "\"添加信息(3200608050 胡成艺)\"", ", ", "true", ");", "//继承父类", "\n        init", "View()", ";\n        add", "Listener()", ";\n    }\n        ", "private", " void init", "View()", " {\n            Container c = this.get", "ContentPane()", ";\n            set", "Layout(", "new", " BorderLayout()", ");", "//设置布局为BorderLayout", "\n            set", "Bounds(700, 250, 450, 300)", ";\n            JPanel jp = ", "new", " ", "JPanel()", ";", "//添加JPanel面板", "\n            jp.set", "Layout(", "new", " GridLayout(4, 1)", ");\n            JPanel jp1 = ", "new", " ", "JPanel()", ";\n            jp1.set", "Layout(", "new", " FlowLayout(FlowLayout.LEFT, 20, 5)", ");\n            JLabel jl1 = ", "new", " ", "JLabel(", "\"学号: \"", ")", ";\n            jtf1 = ", "new", " ", "JTextField(10)", ";", "//输入学号", "\n            jp1.add(jl1);\n            jp1.add(jtf1);\n            JLabel jl5 = ", "new", " ", "JLabel(", "\"姓名: \"", ")", ";\n            jtf5 = ", "new", " ", "JTextField(10)", ";", "//输入姓名", "\n            jp1.add(jl5);\n            jp1.add(jtf5);\n            JPanel jp2 = ", "new", " ", "JPanel()", ";\n            jp2.set", "Layout(", "new", " FlowLayout(FlowLayout.LEFT, 20, 5)", ");\n            JLabel jl2 = ", "new", " ", "JLabel(", "\"身份: \"", ")", ";\n            jtf2 = ", "new", " ", "JTextField(10)", ";", "//输入身份", "\n            jtf2.set", "Text(", "\"学生\"", ")", ";\n            jtf2.set", "Editable(", "false", ")", ";\n            jp2.add(jl2);\n            jp2.add(jtf2);\n            JLabel jl6 = ", "new", " ", "JLabel(", "\"班级: \"", ")", ";\n            jtf6 = ", "new", " ", "JTextField(10)", ";", "//输入班级", "\n            jp2.add(jl6);\n            jp2.add(jtf6);\n            JPanel jp3 = ", "new", " ", "JPanel()", ";\n            jp3.set", "Layout(", "new", " FlowLayout(FlowLayout.LEFT, 20, 5)", ");\n            JLabel jl3 = ", "new", " ", "JLabel(", "\"用电量: \"", ")", ";\n            jtf3 = ", "new", " ", "JTextField(10)", ";", "//输入输入用电量", "\n            jp3.add(jl3);\n            jp3.add(jtf3);\n            JLabel jl7 = ", "new", " ", "JLabel(", "\"用水量: \"", ")", ";\n            jtf7 = ", "new", " ", "JTextField(10)", ";", "//输入输入用水量", "\n            jp3.add(jl7);\n            jp3.add(jtf7);\n            JPanel jp4 = ", "new", " ", "JPanel()", ";\n            jp4.set", "Layout(", "new", " FlowLayout(FlowLayout.LEFT, 20, 5)", ");\n            JLabel jl4 = ", "new", " ", "JLabel(", "\"电话: \"", ")", ";\n            jtf4 = ", "new", " ", "JTextField(10)", ";", "//输入电话", "\n            JLabel jl8 = ", "new", " ", "JLabel(", "\"是否缴费:\"", ")", ";\n            jtf8 = ", "new", " ", "JTextField(10)", ";", "//输入是否缴费", "\n            jp4.add(jl4);\n            jp4.add(jtf4);\n            jp4.add(jl8);\n            jp4.add(jtf8);\n            JPanel j = ", "new", " ", "JPanel()", ";\n            j.set", "Layout(", "new", " FlowLayout(FlowLayout.RIGHT, 20, 10)", ");\n            b1 = ", "new", " ", "JButton(", "\"添加\"", ")", ";", "//添加信息按钮", "\n            b2 = ", "new", " ", "JButton(", "\"返回\"", ")", ";", "//返回上一届面", "\n            b3 = ", "new", " ", "JButton(", "\"切换教师/学生\"", ")", ";", "//切换教工与学生", "\n            j.add(b3);\n            j.add(b1);\n            j.add(b2);\n            jp.add(jp1);\n            jp.add(jp2);\n            jp.add(jp3);\n            jp.add(jp4);\n            c.add(jp, BorderLayout.CENTER);\n            c.add(j, BorderLayout.SOUTH);\n            b3.add", "ActionListener(", "new", " ActionListener()", " {       ", "//内部类", "\n                public void action", "Performed(ActionEvent ", "e", ")", " {\n                    ", "if", "(e.get", "Source()", " == ", "b3) {\n                    ", "if", "(jl1.get", "Text()", ".equals(", "\"学号: \"", ")) {\n                        jl1.set", "Text(", "\"职工号:\"", ")", ";\n                        jl6.set", "Text(", "\"工作部门:\"", ")", ";\n                        jtf2.set", "Text(", "\"教工\"", ")", ";\n                    }\n                    ", "else", " ", "if", "(jl1.get", "Text()", ".equals(", "\"职工号:\"", ")) {\n                        jl1.set", "Text(", "\"学号: \"", ")", ";\n                        jl6.set", "Text(", "\"班级: \"", ")", ";\n                        jtf2.set", "Text(", "\"学生\"", ")", ";\n                    }\n                }\n                }\n            });\n            this.set", "Visible(", "true", ")", ";\n        }\n        ", "private", " void add", "Listener()", " {\n            add = ", "new", " ", "HandleAddDialog()", ";\n            add.set", "View(", "this", ")", ";\n            b1.add", "ActionListener(", "add", ")", ";", "//添加监视器，负责添加单词", "\n            b2.add", "ActionListener(", "add", ")", ";\n        }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The answer is considerably less complicated.  Just add tell the JSON interpeter it's a string encoded float64 with &lt;code&gt;,string&lt;/code&gt; (note that I only changed the &lt;code&gt;Price&lt;/code&gt; definition):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype Product struct {\n    Name  string\n    Price float64 `json:\",string\"`\n}\n\nfunc main() {\n    s := `{\"name\":\"Galaxy Nexus\", \"price\":\"3460.00\"}`\n    var pro Product\n    err := json.Unmarshal([]byte(s), &amp;amp;pro)\n    if err == nil {\n        fmt.Printf(\"%+v\n\", pro)\n    } else {\n        fmt.Println(err)\n        fmt.Printf(\"%+v\n\", pro)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何在Golang中将类型从字符串转换为float64解码JSON？", ["\n\n", "I need to decode a JSON string with the float number like:", "\n\n", "{\"name\":\"Galaxy Nexus\", \"price\":\"3460.00\"}\n", "\n\n", "I use the Golang code below:", "\n\n", "package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype Product struct {\n    Name  string\n    Price float64\n}\n\nfunc main() {\n    s := `{\"name\":\"Galaxy Nexus\", \"price\":\"3460.00\"}`\n    var pro Product\n    err := json.Unmarshal([]byte(s), &pro)\n    if err == nil {\n        fmt.Printf(\"%+v\n\", pro)\n    } else {\n        fmt.Println(err)\n        fmt.Printf(\"%+v\n\", pro)\n    }\n}\n", "\n\n", "When I run it, get the result:", "\n\n", "json: cannot unmarshal string into Go value of type float64\n{Name:Galaxy Nexus Price:0}\n", "\n\n", "I want to know how to decode the JSON string with type convert.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;小魔女参考了bing和GPT部分内容调写:&lt;br /&gt;使用GEO数据和TCGA模型筛选出的预后基因&amp;#xff0c;可以对这些基因的表达量进行分析&amp;#xff0c;以验证TCGA模型的准确性。可以通过比较GEO数据库和TCGA数据库中基因的表达量&amp;#xff0c;来判断TCGA模型是否准确。如果GEO数据库和TCGA数据库中基因的表达量相差不大&amp;#xff0c;说明TCGA模型的准确性较高&amp;#xff1b;反之&amp;#xff0c;如果GEO数据库和TCGA数据库中基因的表达量相差较大&amp;#xff0c;则说明TCGA模型的准确性较低。此外&amp;#xff0c;还可以使用相关性分析&amp;#xff0c;比较GEO数据库和TCGA数据库中基因的表达量之间的相关性&amp;#xff0c;以验证TCGA模型的准确性。如果GEO数据库和TCGA数据库中基因的表达量之间的相关性较高&amp;#xff0c;则说明TCGA模型的准确性较高&amp;#xff1b;反之&amp;#xff0c;如果GEO数据库和TCGA数据库中基因的表达量之间的相关性较低&amp;#xff0c;则说明TCGA模型的准确性较低。通过以上分析&amp;#xff0c;可以验证TCGA模型的准确性&amp;#xff0c;从而更好地了解基因在GEO数据库和TCGA数据库中的表达量差异。&lt;br /&gt;回答不易&amp;#xff0c;记得采纳呀。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["GEO数据基因表达量验证TCGA模型", ["用GEO数据，与TCGA模型筛选出来的预后基因做表达量分析，结果如何验证TCGA模型？怎么看基因在两个数据库的表达才能证明模型？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are already inside PHP tags , change your code to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nif (empty($_GET['tid'])) {\n  echo '&amp;lt;iframe src=\"http://tracking.mydomain.com/aff_goal?a=33&amp;amp;goal_id=47\" scrolling=\"no\"  frameborder=\"0\" width=\"1\" height=\"1\"&amp;gt;&amp;lt;/iframe&amp;gt;';\n}\nelse {\n  echo '&amp;lt;iframe src=\"http://tracking.mydomain.com/aff_goal?a=29&amp;amp;goal_id=37&amp;amp;transaction_id='.$tid.'\" scrolling=\"no\" frameborder=\"0\" width=\"1\" height=\"1\"&amp;gt;&amp;lt;/iframe&amp;gt;';\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also I did some formatting with &lt;code&gt;{ ... }&lt;/code&gt;, you should use the brackets; but that was not the problem, problem was that your were echoing inside echo :)&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如果语句和iFrame错误，需要有关PHP的帮助", ["\n\n", "I am using the following PHP if statement on my website:", "\n\n", "<?php\nif(empty($_GET['tid']))\necho '<iframe src=\"http://tracking.mydomain.com/aff_goal?a=33&goal_id=47\" scrolling=\"no\"  frameborder=\"0\" width=\"1\" height=\"1\"></iframe>';\nelse\necho '<iframe src=\"http://tracking.mydomain.com/aff_goal?a=29&goal_id=37&transaction_id=<? echo $tid; ?>\" scrolling=\"no\" frameborder=\"0\" width=\"1\" height=\"1\"></iframe>';\n?>\n", "\n\n", "The actual php if statement is working correctly, but here is my problem. If you look at the 2nd iframe code, you will notice that it is different from the first because it contains \"transaction_id=\" and the \"tid\" value is supposed to echo there, but the php if statement is displaying the hard coded iframe code BEFORE it is able to echo the tid value into the iframe's \"transaction_id\" area.", "\n\n", "Any ideas how I can use the php if statement and also make the echo inside of the 2nd iframe work correctly?", "\n\n", "Thanks for the help.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yeah, that syntax is typically flagged by most decent IDEs as \"Accidental Assignment\" (since it's not obvious if you meant &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;).  Most will allow you to wrap it in a &lt;code&gt;()&lt;/code&gt; to silence the error (since then it's apparent you want the result rather than a test): &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (($message_array = @unserialize($e-&amp;gt;getMessage()))) {\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, for readability and maintainability, I would suggest a few things there.  &lt;/p&gt;\n\n&lt;p&gt;First, use braces.  Since it's only a special case that lets you not use them, I personally think it's better form to always use them so that it's clear what was meant.&lt;/p&gt;\n\n&lt;p&gt;Second, do all asignment outside of the &lt;code&gt;if&lt;/code&gt; clause.  It makes it more explicit and easier to tell at a quick glance what you meant.  Plus it looks less cluttered.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$message_array = @unserialize($e-&amp;gt;getMessage());\nif ($message_array) {\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Third, I would suggest avoiding the &lt;code&gt;@&lt;/code&gt; operator.  To me it's a sign of code-rot.  While I know it's easy to use and easier than properly handling the error, I think it's just a short-cut that will make life harder for you.  You can avoid it in a few ways.  First, you can check the string before you pass it to &lt;code&gt;unserialize&lt;/code&gt;.  Make sure it's non-empty, a string, etc.  Secondly, you can install an &lt;a href=\"http://us.php.net/manual/en/function.set-error-handler.php\" rel=\"nofollow\"&gt;&lt;code&gt;error handler&lt;/code&gt;&lt;/a&gt; to throw exceptions on PHP errors (what I do).  That way, you just wrap the &lt;code&gt;unserialize&lt;/code&gt; call in a &lt;code&gt;try {} catch(){}&lt;/code&gt; block.  It's nicer since you actually can inspect the error rather than just trusting that the thrown error is what you think it is...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["php代码，是慢还是错？", ["\n\n", "\"multiple annotations found at this line\"", "\n\n", "i have been using aptana and other IDE before, but never gave me this error, but yesterday i installed zend studio and it was giving following error in all my code where i have assigned and also check if condition at same time.", "\n\n", "code:\nline 16: if ($message_array = @unserialize($e->getMessage()))\nline 17:    $message = $message_array;\n", "\n\n", "on all if condition, where i assigned the value to a variable and also check if the variable is true/false, it gives me error \"multiple annotations found at this line\"", "\n    "]], "Tag": "程序设计"}
{"Answer": "配置下mime-type和content-type\r\nhttps://blog.csdn.net/l969621426/article/details/62215226", "Konwledge_Point": "注释", "Question": ["Tomcat配置php无法加载css", ["在index.php文件中引入CSS：", "\n\n", "<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\">\n", "\n\n", "在Chrome浏览器无法显示css的效果，打开调试后看到：", "\n\n", "Resource interpreted as Stylesheet but transferred with MIME type text/html: \"http://localhost:8080/myphp/vendor/bootstrap/css/bootstrap.min.css\".\n", "\n\n", "但如果按照html的格式打开文件就可以看到css的效果", "     也试过网上说加___STATIC___的方法，但是没有用。这些代码我只使用了php和html、css，没有使用java和servlet等，那请问怎么解决?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意几点&amp;#xff1a;&lt;br /&gt;1&amp;#xff0c;if判断的时候 用“&amp;#61;&amp;#61;”&lt;br /&gt;2&amp;#xff0c;字符printf 用的是%c&lt;br /&gt;3&amp;#xff0c;输出最多四位 然后用“.”的时候要考虑位数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&amp;#96;&amp;#96;&amp;#96;c\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;85&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k, T;\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please enter how much data to input\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;T);&lt;span class=\"hljs-comment\"&gt;//输入一共一要测试几组数据&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//每次输入新一行的数据&amp;#xff0c;重置一次数组&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please enter data\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; T; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;0x00&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(a));\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Please enter data\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n            &lt;span class=\"hljs-built_in\"&gt;gets_s&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;strlwr&lt;/span&gt;(a);&lt;span class=\"hljs-comment\"&gt;//让数据全部变成小写字母&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; a[j] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) { k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;#43;&amp;#43;; &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;, a[j]);}&lt;span class=\"hljs-comment\"&gt;//单词之间以一个空格隔开&amp;#xff0c;用来判断是否到下一个单词&lt;/span&gt;\n                k&amp;#43;&amp;#43;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//当超过4个字母时第5个字母变成‘.’&lt;/span&gt;\n                    a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c%c&amp;#34;&lt;/span&gt;, a[j],a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n                    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k &amp;gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) {\n                    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//超过4个字母的部分不输出&lt;/span&gt;\n                }\n\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, a[j]);\n            }\n        }\n         \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//当要测试下一组数据时换行&lt;/span&gt;\n    }\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["程序正常运行了，但是不明白为什么没有按照我的想法来输出每个部分的程序我都加注释了希望能帮忙看一下哪里出问题了", ["问题遇到的现象和发生背景", "\n", "程序正常运行了，但是不明白为什么没有按照我的想法来输出每个部分的程序我都加注释了希望能帮忙看一下哪里出问题了", "程序的目的，期刊名的缩写，现对于给定的期刊名，要求按以下规则缩写：", "1长度不超过4的单词不必缩写；", "2长度超过4的单词仅取前4个字母，但其后要加“.”；", "3所有字母都小写。", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。", "每组测试输入一个包含大小写字母和空格的字符串（长度不超过85），单词由若干字母构成，单词之间以一个空格间隔。", "对于每组测试，在一行上输出缩写后的结果，单词之间以一个空格间隔。", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " a[", "85", "];\n    ", "int", " i,j,k,T;\n    \n    ", "printf", "(", "\"Please enter how much data to input\\n\"", ");\n    ", "scanf", "(", "\"%d\"", ",&T);", "//输入一共一要测试几组数据", "\n    ", "for", "(i=", "0", ";i<T;i++){\n        a[", "85", "]=", "0", ";", "//每次输入新一行的数据，重置一次数组", "\n        ", "printf", "(", "\"Please enter data\\n\"", ");\n        ", "getchar", "();\n        ", "gets", "(a);\n        ", "strlwr", "(a);", "//让数据全部变成小写字母", "\n        ", "for", "(j=", "0", ",k=", "0", ";a[j]!=", "'\\0'", ";j++){\n            ", "if", "(a[j]=", "' '", "){k=", "0", ";}", "//单词之间以一个空格隔开，用来判断是否到下一个单词", "\n            k++;\n            ", "if", "(k==", "4", "){", "//当超过4个字母时第5个字母变成‘.’", "\n            a[j]=", "'.'", ";\n            ", "printf", "(", "\"%s\"", ",a[j]);\n            ", "continue", ";\n    }", "else", " ", "if", "(k>", "4", "){\n        ", "continue", ";", "//超过4个字母的部分不输出", "\n    }\n                \n                ", "printf", "(", "\"%s\"", ",a[j]);\n        }\n        ", "printf", "(", "\"\\n\"", ");", "//当要测试下一组数据时换行", "\n    }\n}\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我想要达到的结果", "\n", "输入样例:", "2", "Ad Hoc Networks", "Transactions on Nanotechnology", "输出样例:", "ad hoc netw.", "tran. on nano."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;也有可能是你蜂鸣器耗电过大&amp;#xff0c;导致供电不够&lt;br /&gt;你把蜂鸣器拆下来&amp;#xff0c;程序保留再试试看&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["在stm32f103zet6板子上写了一个跑马灯和蜂鸣器的程序，运行后发现跑马灯不跑，一个一直亮，另一个很微弱的闪，注释掉蜂鸣器部分的的函数后，跑马灯又能正常运行。", ["在stm32f103zet6板子上写了一个跑马灯和蜂鸣器的程序，运行后发现跑马灯不跑，一个一直亮，另一个很微弱的闪，注释掉蜂鸣器部分的的函数后，跑马灯又能正常运行，求帮助", "\n", "主函数\n#", "include", " ", "\"stm32f10x.h\"", "\n#", "include", " ", "\"delay.h\"", "\n#", "include", " ", "\"led.h\"", "\n#", "include", " ", "\"beep.h\"", "\n", "int", " main(void)\n{\n    \n    delay", "_init()", ";    \n    ", "LED_Init()", ";", "//LED³õÊ¼»¯", "\n    ", "BEEP_Init()", ";", "//·äÃùÆ÷³õÊ¼»¯", "\n\n    \n", "while", "(", "1", ")\n{\n\n    LED3=", "1", ";\n  LED2=", "0", ";\n    BEEP0=", "0", ";\n    delay", "_ms(5000)", ";\n\n    LED3=", "0", ";\n    LED2=", "1", ";\n    BEEP0=", "1", ";\n    delay", "_ms(5000)", ";    \n\n}\n    \n    \n}\n初始化LED函数\n#", "include", " ", "\"stm32f10x.h\"", "\n#", "include", " ", "\"led.h\"", "\nvoid ", "LED_Init()", "\n{\n    GPIO_InitTypeDef GPIO_InitStructure;", "//ÉùÃ÷Ò»¸öÃû×ÖÎªGPIO_InitStructureµÄ½á¹¹Ìå£¬½á¹¹Ô­ÐÍGPIO_InitTypeDefÓÉÈ·¶¨¡£", "\n    \n    ", "RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOE,ENABLE)", ";", "//Ê¹ÄÜIO¿ÚÊ±ÖÓ", "\n    \n    GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;\n    GPIO_InitStructure.GPIO_Pin=GPIO_Pin_5;\n    GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;\n    ", "GPIO_Init(GPIOB,&GPIO_InitStructure)", ";\n    ", "GPIO_ResetBits(GPIOB,GPIO_Pin_5)", ";   \n    \n    GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;\n    GPIO_InitStructure.GPIO_Pin=GPIO_Pin_5;\n    GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;\n    ", "GPIO_Init(GPIOE,&GPIO_InitStructure)", ";\n    ", "GPIO_SetBits(GPIOE,GPIO_Pin_5)", ";\n}\n\n初始化蜂鸣器函数\n#", "include", " ", "\"stm32f10x.h\"", "\n#", "include", " ", "\"beep.h\"", "\n\nvoid ", "BEEP_Init()", "\n{\n    GPIO_InitTypeDef GPIO_InitStructure;\n    \n    ", "RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE)", ";\n    \n    GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;\n    GPIO_InitStructure.GPIO_Pin=GPIO_Pin_8;\n    GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;\n    ", "GPIO_Init(GPIOB,&GPIO_InitStructure)", ";\n    ", "GPIO_SetBits(GPIOB,GPIO_Pin_8)", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "window&lt; Preferences &lt; General &lt; Editors &lt;Text Editors ,在下面那些选项中找到Foreground color 设置一下黑色就行了。![图片说明](https://img-ask.csdn.net/upload/201710/18/1508314337_776386.jpg)", "Konwledge_Point": "注释", "Question": ["eclipse怎么改jsp页面的字体颜色", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can try this :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$xml_data = \n'&amp;lt;response&amp;gt;\n&amp;lt;item&amp;gt;\n  &amp;lt;name&amp;gt;Life Cover1&amp;lt;/name&amp;gt;\n  &amp;lt;feature&amp;gt;Indexation1&amp;lt;/feature&amp;gt;\n  &amp;lt;benefits&amp;gt;\n    &amp;lt;bitem&amp;gt;foo1&amp;lt;/bitem&amp;gt;\n    &amp;lt;bitem&amp;gt;foo2&amp;lt;/bitem&amp;gt;\n  &amp;lt;/benefits&amp;gt;\n&amp;lt;/item&amp;gt;\n&amp;lt;item&amp;gt;\n  &amp;lt;name&amp;gt;Life Cover2&amp;lt;/name&amp;gt;\n  &amp;lt;feature&amp;gt;Indexation2&amp;lt;/feature&amp;gt;\n  &amp;lt;benefits&amp;gt;\n    &amp;lt;bitem&amp;gt;fd1&amp;lt;/bitem&amp;gt;\n    &amp;lt;bitem&amp;gt;foo3&amp;lt;/bitem&amp;gt;\n    &amp;lt;bitem&amp;gt;foo4&amp;lt;/bitem&amp;gt;\n  &amp;lt;/benefits&amp;gt;\n&amp;lt;/item&amp;gt;\n&amp;lt;item&amp;gt;\n  &amp;lt;name&amp;gt;Life Cover3&amp;lt;/name&amp;gt;\n  &amp;lt;feature&amp;gt;Indexation3&amp;lt;/feature&amp;gt;\n  &amp;lt;benefits&amp;gt;\n    &amp;lt;bitem&amp;gt;foo5&amp;lt;/bitem&amp;gt;\n    &amp;lt;bitem&amp;gt;foo6&amp;lt;/bitem&amp;gt;\n  &amp;lt;/benefits&amp;gt;\n&amp;lt;/item&amp;gt;\n&amp;lt;/response&amp;gt;\n';\n\n//Display Data output format View\n$xml = new SimpleXMLElement($xml_data);\n\n$items = $xml-&amp;gt;xpath('//item');\n$itemNames = $xml-&amp;gt;xpath('//name');\n$features = $xml-&amp;gt;xpath('//feature');\n$benefits = $xml-&amp;gt;xpath('//benefits');\n\n$DataSize = sizeof($items);\n\necho '&amp;lt;table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"&amp;gt;&amp;lt;tbody&amp;gt;';\n\nforeach($items as $item){\n\n  echo '&amp;lt;tr&amp;gt;';\n  echo '&amp;lt;td&amp;gt;' . $item-&amp;gt;name . '&amp;lt;/td&amp;gt;';\n  echo '&amp;lt;td&amp;gt;' . $item-&amp;gt;feature . '&amp;lt;/td&amp;gt;';\n  echo '&amp;lt;td&amp;gt;';\n  $child_item = '';\n  foreach($item-&amp;gt;benefits-&amp;gt;children() as $child)\n  {\n    $child_item .= $child.' ,';\n  }\n  echo rtrim($child_item,' ,');\n  echo  '&amp;lt;/td&amp;gt;';\n  echo '&amp;lt;/tr&amp;gt;';\n}\necho '&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will display all the child item with comma seperated string. Hope this will help you.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP  - 如何显示父数组的所有子项", ["\n\n", "Hi I am able to parse the array, however I am having trouble parse all sub item (children), it only shows first item of the children.", "\n\n", "$xml_data = \n'<response>\n<item>\n  <name>Life Cover1</name>\n  <feature>Indexation1</feature>\n  <benefits>\n    <bitem>foo1</bitem>\n    <bitem>foo2</bitem>\n  </benefits>\n</item>\n<item>\n  <name>Life Cover2</name>\n  <feature>Indexation2</feature>\n  <benefits>\n    <bitem>fd1</bitem>\n    <bitem>foo3</bitem>\n    <bitem>foo4</bitem>\n  </benefits>\n</item>\n<item>\n  <name>Life Cover3</name>\n  <feature>Indexation3</feature>\n  <benefits>\n    <bitem>foo5</bitem>\n    <bitem>foo6</bitem>\n  </benefits>\n</item>\n</response>\n';\n\n//Display Data output format View\n$xml = new SimpleXMLElement($xml_data);\n\n$items = $xml->xpath('//item');\n$itemNames = $xml->xpath('//name');\n$features = $xml->xpath('//feature');\n$benefits = $xml->xpath('//benefits');\n\n$DataSize = sizeof($items);\n\necho '<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"><tbody>';\n\nforeach($items as $item){\n\n  echo '<tr>';\n  echo '<td>' . $item->name . '</td>';\n  echo '<td>' . $item->feature . '</td>';\n  echo '<td>' . $item->benefits->children() . '</td>';\n  echo '</tr>';\n}\necho '</tbody></table>';\n", "\n\n", "The $item->benefits->children(); only show first bitem, how can display all bitem in this kind of parse output?", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是版本不对应照成的&amp;#xff0c;可以考虑下个低版本tomcat&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/806667958946168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["TOMCAT启动一闪而过", [" 之前tomcat可以正常启动，但是现在用的jdk版本太高，idea用不了，重新下了个idk配置好了之后tomcat出现了问题", "\n", "这是cmd出现的结果：", "\n", "Using CATALINA_BASE:   \"D:\\Tomcat\\tomcat10\"", "Using CATALINA_HOME:   \"D:\\Tomcat\\tomcat10\"", "Using CATALINA_TMPDIR: \"D:\\Tomcat\\tomcat10\\temp\"", "Using JRE_HOME:        \"D:\\jdk\\jre\"", "Using CLASSPATH:       \"D:\\Tomcat\\tomcat10\\bin\\bootstrap.jar;D:\\Tomcat\\tomcat10\\bin\\tomcat-juli.jar\"", "Using CATALINA_OPTS:   \"\"", "\n", "现在应该配置什么。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;判断td.getxxxxxtime不为空&amp;#xff0c;再继续调用&amp;#xff0c;不要写成一行即可&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["springMVC里Date类返回值为空时抛出异常怎么解决", ["\n", "如图我这是一个Date，当我引用它时，当那个值为空，就会直接抛出异常，这个怎么写可以解决"]], "Tag": "程序设计"}
{"Answer": "http://blog.sina.com.cn/s/blog_6a04befa0101bsi2.html\r\nhttp://blog.csdn.net/ys_073/article/details/8094654", "Konwledge_Point": "注释", "Question": ["用sublime编辑JAVA。有中文字符出现。是这种结果（程序是对的。）", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1的ascall码减去0的等于1&amp;#xff0c;然后i&amp;#43;2 的字符是a&amp;#xff0c;不符合条件跳出循环了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求解析，为什么结果是1", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The generated spec would be json not yaml at this stage, not saying it can't be made to do yaml but currently it only generates json.&lt;/p&gt;\n\n&lt;p&gt;you can annotate your main package with: &lt;code&gt;//go:generate swagger generate spec -o swagger.json&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;then you can generate the spec with: &lt;code&gt;go generate&lt;/code&gt; when you are in folder of the main package. If your main package is not your project root but something like &lt;code&gt;$project_root/cmd/my-server&lt;/code&gt; then you can run &lt;code&gt;go generate ./cmd/my-server&lt;/code&gt; from the project root.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用golang注释生成Swagger规范", ["\n\n", "我正在尝试使用Swagger为用Golang编写的RESTAPI创建文档。我一直遵循这个指南", "https://goswagger.io/generate/spec.html", " 来做这一点，并已经能够根据我在主文件中的注释创建json文件，但我不知道如何创建转换为实际swagger规范的.yaml文件。我遵循了页面上的说明，并在我的主文件中包含了//go：GenerateswaggerGeneratespec。有人知道如何创建.yaml文件吗？", "\n    "]], "Tag": "程序设计"}
{"Answer": "![](http://img.blog.csdn.net/20140930001143765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdG93ZXI4ODg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)", "Konwledge_Point": "注释", "Question": ["idea16怎么关闭鼠标悬停功能", ["idea16的鼠标悬停提示很烦人,怎么关闭鼠标悬停提示功能,在线等,求解求解!"]], "Tag": "程序设计"}
{"Answer": "楼主可以试试两个极端；你这里写的是int num = 030;由于在30前写了0就被编译器当成了8进制数据，8进制数据30就是10进制的24。你可以试试将语句改成：int num = 080;看看你的系统编译会不会报错", "Konwledge_Point": "注释", "Question": ["求助 int num=030；求详细解释", ["int num =030；", "\nSystem.out.println(num);", "\n为什么打印出来会是24呢？？", "\n求大神详细解释"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Active record example where we loop the results in order to format the output right without getting multiple result rows for each post:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$q = $this-&amp;gt;db-&amp;gt;select('post_id,post_desc,post_time')-&amp;gt;get('asgn_posts');\n$data = array();\nforeach ($q-&amp;gt;results() as $p):\n   $qc = $this-&amp;gt;db-&amp;gt;select('id,comment_desc,comment_time')-&amp;gt;where('post_id',$p-&amp;gt;post_id)-&amp;gt;get('asoc_comments');\n   $p-&amp;gt;comments = $qc-&amp;gt;results();\n   $data[] = $p;\nendforeach;\nreturn $data;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["从codeigniter中的多个表中获取数据？", ["\n\n", "i have two table, one is post table and other one is comment table.in which i am using post_id as foreign_key.\nNow i want to get, a post with all its comments. and response should be in this format.", "\n\n", " { \n    \"posid\":1,\n    \"post_name\":\"testpost\",\n    \"comments\":[{\n                    \"comment_id\":1,\n                    \"comment_des\":\"testcoment\"\n                },{\n                    \"comment_id\":2,\n                    \"comment_des\":\"testcoment2\"\n                }\n            ]\n    }\n", "\n\n", "Can any one write simple SQL query for me for this type of response?", "\n\n", "I tried below query in codeigniter , but this return multiple result, mean one post two time, because one post contains two comments.", "\n\n", "  $this->db->select(\"p.post_id,p.post_desc,p.post_time ,c.id,c.comment_desc,c.comment_time\");\n  $this->db->join(\"asoc_comments as c\",\"p.post_id = c.post_id\",\"INNER\");\n $response = $this->db->get(\"asgn_posts as p\")->result();\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You define all the possible response content types for each &lt;code&gt;@OA\\Response&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;E.g.:&lt;/p&gt;\n\n&lt;pre class=\"lang-none prettyprint-override\"&gt;&lt;code&gt;     * @OA\\Response(\n     *         response=200,\n     *         description=\"successful operation\",\n     *         @OA\\JsonContent(\n     *             type=\"array\",\n     *             @OA\\Items(ref=\"#/components/schemas/Pet\")\n     *         ),\n     *         @OA\\XmlContent(\n     *             type=\"array\",\n     *             @OA\\Items(ref=\"#/components/schemas/Pet\")\n     *         )\n     *     ),\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If your endpoint only generates JSON content, only define the entry for &lt;code&gt;@OA\\JsonContent&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;See the full example &lt;a href=\"https://github.com/zircote/swagger-php/blob/master/Examples/petstore-3.0/controllers/Pet.php\" rel=\"nofollow noreferrer\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Swagger注释和OpenAPI v3.0中“Produces”的注释是什么？", ["\n\n", "On OpenAPI v2.0 and Swagger PHP the annotation for Produces was: ", "\n\n", " /**\n * @SWG\\Get(\n *      path=\"/posts\",\n *      operationId=\"getPosts\",\n *      tags={\"Authentication\"},\n *      produces=\"application/json\"\n *      summary=\"Returns the posts\",\n *      description=\"Returns the posts\",\n *      @SWG\\Response(\n *          response=200,\n *          description=\"Successful operation\"\n *      ),\n * )\n */\n", "\n\n", "But On OpenAPI v3.0 and Swagger PHP I cannot find on how to annotate the ", "produces", " on the documentation it states the it is now an attribute of the response ", "@OA\\Response", " but I can not find an example I already try just putting ", "\"content\" = \"application/json\"", " but it doesn't work.", "\n    "]], "Tag": "程序设计"}
{"Answer": "选中表——》编辑——》列，这样就可以修改了。", "Konwledge_Point": "注释", "Question": ["如何修改plsql工具下方的字段解释", ["如图，怎样修改这个解释呢？上网查了一些资源，没有找到任何内容，小妹谢谢各位！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;xml&lt;/code&gt; package doesn't provide a way to unmarshal XML into &lt;code&gt;map[string]interface{}&lt;/code&gt; because there is no single way to do it and in some cases it is not possible. A map doesn't preserve order of the elements (that is important in XML) and doesn't allow elements with duplicate keys.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mxj&lt;/code&gt; package that you used in your example has some rules how to unmarshal arbitrary XML into Go map. If your requirements do not conflict with these rules you can use &lt;code&gt;mxj&lt;/code&gt; package to do all parsing and do not use &lt;code&gt;xml&lt;/code&gt; package at all:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// I am skipping error handling here\nm, _ := mxj.NewMapXml([]byte(s))\nmm := m[\"myStruct\"].(map[string]interface{})\nmyStruct.Name = mm[\"name\"].(string)\nmyStruct.Meta = mm[\"meta\"].(map[string]interface{})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full example: &lt;a href=\"http://play.golang.org/p/AcPUAS0QMj\"&gt;http://play.golang.org/p/AcPUAS0QMj&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在自定义UnmarshalXML函数中正确使用XML批注，字段和结构", ["\n\n", "Consider the following struct:", "\n\n", "type MyStruct struct {\n    Name string\n    Meta map[string]interface{}\n}\n", "\n\n", "Which has the following UnmarshalXML function:", "\n\n", "func (m *MyStruct) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {\n    var v struct {\n        XMLName xml.Name //`xml:\"myStruct\"`\n        Name    string   `xml:\"name\"`\n        Meta    struct {\n            Inner []byte `xml:\",innerxml\"`\n        } `xml:\"meta\"`\n    }\n\n    err := d.DecodeElement(&v, &start)\n    if err != nil {\n        return err\n    }\n\n    m.Name = v.Name\n    myMap := make(map[string]interface{})\n\n    // ... do the mxj magic here ... -\n\n    temp := v.Meta.Inner\n\n    prefix := \"<meta>\"\n    postfix := \"</meta>\"\n    str := prefix + string(temp) + postfix\n    //fmt.Println(str)\n    myMxjMap, err := mxj.NewMapXml([]byte(str))\n    myMap = myMxjMap\n\n    // fill myMap\n    //m.Meta = myMap\n    m.Meta = myMap[\"meta\"].(map[string]interface{})\n    return nil\n}\n", "\n\n", "My problem with this code is these lines:", "\n\n", "prefix := \"<meta>\"\npostfix := \"</meta>\"\nstr := prefix + string(temp) + postfix\nmyMxjMap, err := mxj.NewMapXml([]byte(str))\nmyMap = myMxjMap\n//m.Meta = myMap\nm.Meta = myMap[\"meta\"].(map[string]interface{})\n", "\n\n", "My question is how I make the correct use of the xml annotations (,innerxml etc), fields and structs, so I don't have to manually pre-/append the ", "<meta></meta>", " tags afterwards to get the whole Meta field as a single map.", "\n\n", "The full code example is here: ", "http://play.golang.org/p/Q4_tryubO6", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is not currently possible in the Go client, once &lt;a href=\"https://github.com/prometheus/client_golang/issues/46\" rel=\"nofollow\"&gt;https://github.com/prometheus/client_golang/issues/46&lt;/a&gt; is complete you'll have a way to do this.&lt;/p&gt;\n\n&lt;p&gt;In general you want your custom exporter to export these, the only ones I'm aware of where it doesn't currently make sense are the snmp and blackbox exporter.&lt;/p&gt;\n\n&lt;p&gt;Incidentally &lt;code&gt;timestamp&lt;/code&gt; seems odd as a label, if you want that you should likely be using logging rather than metrics. See &lt;a href=\"https://blog.raintank.io/logs-and-metrics-and-graphs-oh-my/\" rel=\"nofollow\"&gt;https://blog.raintank.io/logs-and-metrics-and-graphs-oh-my/&lt;/a&gt;\nThe Prometheus way would be to have the timestamp as a value, not as a label.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何在prometheus / client_golang中禁用go_collector指标", ["\n\n", "I am using a NewGaugeVec to report my metrics:", "\n\n", "elapsed := prometheus.NewGaugeVec(prometheus.GaugeOpts{\n    Name: \"gogrinder_elapsed_ms\",\n    Help: \"Current time elapsed of gogrinder teststep\",\n}, []string{\"teststep\", \"user\", \"iteration\", \"timestamp\"})\nprometheus.MustRegister(elapsed)\n", "\n\n", "All works fine but I noticed that my custom exporter contains all metrics from prometheus/go_collector.go:", "\n\n", "# HELP go_gc_duration_seconds A summary of the GC invocation durations.\n# TYPE go_gc_duration_seconds summary\ngo_gc_duration_seconds{quantile=\"0\"} 0.00041795300000000004\ngo_gc_duration_seconds{quantile=\"0.25\"} 0.00041795300000000004\ngo_gc_duration_seconds{quantile=\"0.5\"} 0.00041795300000000004\n...\n", "\n\n", "I suspect that this is kind of a default behavior but I did not find anything in the documentation on how to disable that. Any ideas on how to configure my custom exporter so that these default metrics disappear?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;HTML attributes need quotes. Otherwise they are delimited by space.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"&amp;lt;a href=\\\"http://......../\\\"&amp;gt;Download&amp;lt;/a&amp;gt;\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Alternatively, you can correctly encode it as &lt;code&gt;%20&lt;/code&gt;, but still, put quotes around your attributes...&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如何更改此行，以便下载名称中包含空格的文件", ["\n\n", "I am trying to download a file(s) that will have spaces in the name. the script works fine for names without spaces but not if there is a space. I understand why this happens but not how to fix the issue. I have spent the better part of a day searching the web for a answer with out any luck so far.\nSo here is my question. How can I change this file to enable it to read the how name including the spaces.", "\n\n", "echo\"<a href=http://www.site.com/uploads/\".$row['att'] .\" download=\".$row['att'].\">Download attachment</a>\";   \n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I solved my issue using,this request\nvar annotation = $('#content').annotator();\n  setTimeout(function(){&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    annotation.annotator('addPlugin', 'Store', {\n    prefix: prefixUrl,\n      annotationData: {\n        'uri': '/annotations'\n      },\n\n    urls: {\n        create:  '/highlighter?page_id='+id,\n        update:  '/update',\n        destroy: '/delete',\n        search:  '/annotations?page_id='+id\n    }\n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用注释器js在mysql数据库中存储注释（注释）", ["\n\n", "I am using \"annotator js\" for comment on PDF files. All working fine.\nNow i want to store comment (annotations) on Mysql Database.", "\n\n", "Please help me.", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could use regex easily.&lt;/p&gt;\n\n&lt;p&gt;If you use this regex, you can get the &lt;code&gt;name here&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;To:\\s+(.*)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://regex101.com/r/jC6qG1/1\" rel=\"nofollow noreferrer\"&gt;Working demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=\"https://i.stack.imgur.com/tKAaN.png\" alt=\"enter image description here\"&gt;&lt;/p&gt;\n\n&lt;p&gt;The idea of this regex is to look for the &lt;code&gt;key&lt;/code&gt; you want to look for and fetch the value. For instance, above regex looks for &lt;code&gt;To:&lt;/code&gt; whitespaces and store in a capturing group the content.&lt;/p&gt;\n\n&lt;p&gt;You just need to change &lt;code&gt;To&lt;/code&gt; for whatever you want, if you modify it to &lt;code&gt;Date&lt;/code&gt; you will get the date. &lt;/p&gt;\n\n&lt;p&gt;&lt;img src=\"https://i.stack.imgur.com/3CQbn.png\" alt=\"enter image description here\"&gt;&lt;/p&gt;\n\n&lt;p&gt;As a note, this only works with single line values. &lt;/p&gt;\n\n&lt;p&gt;The code to implement this regex in php is very straightforward, like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$re = \"/To:\\\\s+(.*)/\";\n$str = \"YOUR STRING HERE\";\npreg_match($re, $str, $matches);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On the other hand, below data follows a different pattern:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;123 TEST ROAD\nLEEDS\nLS1 1HL\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You'd need a different regex pattern too, so to fetch that information you could use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;^(\\w+[\\w\\s]+)(?!:)$\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://regex101.com/r/jC6qG1/2\" rel=\"nofollow noreferrer\"&gt;Working demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Regex的替代方法，用于从字符串中提取信息", ["\n\n", "I'm attempt to extract information from a string, which will always be in the same format. ", "\n\n", "The format will always be:", "\n\n", "To:\n                     Name here\nDate:\n                     26/08/2014 14:52\nOrder Number:\n                     123456\nService Required:\n                     Plumbing\nService Response:\n                     48 Hour\nService Limit:\n                     110.00\n\n123 TEST ROAD\nLEEDS\nLS1 1HL\n\nContact:\n                     Mr J Smith - 0777 123456\nTelephone:\n                     01921 123456\n\nWork Details:\n\nNotes here etc \n", "\n\n", "I have tried exploding the string by spaces and looping through the array but I cannot structure it in such a way that I receive the information.", "\n\n", "E.g: I try to retrieve ", "\"Name here\"", " from ", "after", " ", "\"To:\"", " without also retrieving \"Date: etc..\", the eventual idea is to create variables for each bit of information so i can enter it into a database.", "\n\n", "Any help/suggestions/idea's are really welcome.  ", "\n\n", "thanks for reading", "\n    "]], "Tag": "程序设计"}
{"Answer": "会不会是这两处冲突了，你可以看看。![图片说明](https://img-ask.csdn.net/upload/201702/15/1487123625_885923.png)", "Konwledge_Point": "注释", "Question": ["ssh用注解的方式生成数据表", ["\n这两张表的多对一，一对多的关系这样写不对吗？它就是说第一张表的多对一有错", "\n求解。。。。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/974729010046116.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;给你提示了&amp;#xff0c;tomcat版本太低了&amp;#xff0c;不允许这样操作&amp;#xff0c;将tomcat换成8-9版本之间的都可以&amp;#xff0c;eclipse或者idea修改版本都有教程&amp;#xff0c;百度一下就出来了&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于在idea中使用Tomcat运行jsp文件时，出现unable compile class for jsp", ["下面是报错的截图jdk1.8版本，Tomcat是7版本"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;select 员工号  from JBQK&lt;/p&gt;\n&lt;p&gt;这样写&amp;#xff0c;你是中文的&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/868327343456172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["kingbase查询不出来数据 只有列名", ["\n", "kingbase查询只有列名没有表数据 我的表打开是有数据的啊 "]], "Tag": "程序设计"}
{"Answer": "你好，我在我机子上试了没有你所说的情况。ps：while(~scanf(\"%d%d\",&amp;n,&amp;m)) 是不是写错了。。。，为啥要按位取反", "Konwledge_Point": "注释", "Question": ["int G[1000][1000]定义的位置不同会导致不同的结果？", ["就是在C语言中定义一个int G[1000][1000]的数组", "\n如果定义在main函数里（函数的后面还有个scanf语句）", "\n结果一运行程序，控制台直接自动结束程序，根本没有获取我的输入", "\n然而我将该数组定义在main函数的外面，执行程序的时候则会正常的进行", "\n问同学说是stackoverflow？求详细的解释"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If your PHP is not outdated (&amp;gt;= 5.6 namely), just add three dots to the first example,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$stmt-&amp;gt;bind_param('iss', ...array(101, 'SomeString 1', 'Some string 2'));\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP bind_param与数组", ["\n\n", "Is it possible to use ", "bind_param()", " with arrays?", "\n\n", "For example", "\n\n", "$stmt->bind_param('iss', Array(101, 'SomeString 1', 'Some string 2'));\n// OR\n$stmt->bind_param(Array('iss'), Array(101, 'String1', 'String2'));\n// OR\n$stmt->bind_param(Array( Array('i', 101), Array('s', 'String1'), Array('s', 'String2') ));\n", "\n\n", "Is any of these examples possible in PHP (or any other examples)?", "\n\n", "Finally I can use my function/class", "\n\n", "$sql->upload( $table, Array('n;id', 's;username=' . $username, 's;password=' . $password) );\n", "\n\n", "Function explination", "\n\n", "public function upload( String $table , Array $values )\n\n// Where example array could be Array('s;column=someString', 'i;SomeIntegerColumn=10', 'n;SomeID')\n/*\n    identifier;column=value\n    Basically where identifier can be \"n\", \"d\", \"i\" or \"s\"\n    column is the name of the sql column to inset the value to\n    value is the string/integer/double to instert in the the column\n\n    Example query with the array mentioned above would be\n    \"INSERT INTO $table(column, SomeIntegerColumn, SomeID) VALUES(?, ?, NULL)\"\n*/\n", "\n\n", "My project will be out on GitHub really soon :) Thanks a lot!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这就是个语文题&lt;br /&gt;要看你怎么理解c语句了&amp;#xff0c;注释到底算不算语句&lt;br /&gt;如果注释算语句&amp;#xff0c;那这话就是错的&lt;br /&gt;如果注释不算代码&amp;#xff0c;那这句话就是对的&lt;br /&gt;做这种咬文嚼字的题没有任何意义&amp;#xff0c;反正能考到它的概率太低太低了&amp;#xff0c;不用跟它较劲&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["我们所写的每条c语句，经过编译最终都会转化成二进制的机器指令？", ["非可执行语句不是不会被转换成机器指令吗？这句话是不是错的。", "但是解析中说这句话是对的"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You also need to have &lt;code&gt;session_start();&lt;/code&gt; on top of the page where you &lt;em&gt;check&lt;/em&gt; for that value, not only where you &lt;em&gt;set&lt;/em&gt; it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;session_start();\nif(!isset($_SESSION[\"name\"])) {\n    header(\"Location: index.php\");\n    die;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用isset php函数确定是否在超级全局会话数组中设置了密钥", ["\n\n", "I have a page called login.php. Login.php processes user information. If the passed user information is found in the database a new session is started. The name and password are then added to the super global sessions array", "\n\n", "if(correct_password($name, $password, $users, $users_size)) {\nsession_start();\n$_SESSION[\"name\"] = $name;\n$_SESSION[\"password\"] = $password;\nheader(\"Location: account.php\");\n", "\n\n", "After the validation the user is redirected to account.php. I want to ensure that the user is logged in i.e the \"name\" index is set before they can access account.php. In order to do this I have the following code", "\n\n", "if(!isset($_SESSION[\"name\"])) {\n    header(\"Location: index.php\");\n    die;\n}\n", "\n\n", "This code is suppose to check to see if the \"name\" index is set. If it is not set it means the user is not logged in and should therefore be directed back to index.php. However it seems that even if the user logs in the if always is true. I even tested ", "\n\n", "echo isset($_SESSION[\"name\"]);\ndie;\n", "\n\n", "to simplify things. When this is done nothing appears on the screen meaning that isset evaluated to false. If I try to print the global sessions array in account.php it works. The data prints and it shows that the name field is populated with the data submited from login.php. ", "\n\n", "What am I misunderstanding about isset? Or did I mess up somewhere else.", "\n\n", "Thanks in advance. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/yazdao/archive/2011/06/03/2072124.html", "Konwledge_Point": "注释", "Question": ["注释一段PHP代码，能翻译成C#最好", [" function pinyin($s, $isfirst = false) {\n    static $pinyins;\n\n    $s = trim($s);\n    $len = strlen($s);\n    if($len < 3) return $s;\n\n    if(!isset($pinyins)) {\n        $data = '一:yi|丁:ding|丂:kao|七:qi|丄:shang|丅:xia|丆:mu|万:wan|丈:zhang|三:san|上:shang|下:xia|丌:ji|不:bu|与:yu|丏:mian|丐:gai|丑:chou|丒:chou|专:zhuan|且:qie|丕:pi|世:shi|丗:shi|丘:qiu|丙:bing|业:ye|丛:cong|东:dong|丝:si|丞:cheng|丟:diu|丠:qiu|両:liang|丢:diu|丣:you|两:liang|严:yan|並:bing|丧:sang|丨:gun|丩:jiu|个:ge|丫:ya|丬:zhuang|中:zhong|丮:ji|丯:jie|丰:feng|丱:guan|串:chuan|丳:chan|临:lin|丵:zhuo|丶:zhu|丷:ha|丸:wan|丹:dan|为:wei|主:zhu|丼:jing|丽:li|举:ju|丿:pie|乀:fu|乁:yi|乂:yi|乃:nai|乄:wu|久:jiu|乆:jiu|乇:tuo|么:me|义:yi|乊:ho|之:zhi|乌:wu|乍:zha|乎:hu|乏:fa|乐:le|乑:yin|乒:ping|乓:pang|乔:qiao|乕:hu|乖:guai|乗:cheng';\n        $a1 = explode('|', $data);\n        $pinyins = array();\n        foreach($a1 as $v) {\n            $a2 = explode(':', $v);\n            $pinyins[$a2[0]] = $a2[1];\n        }\n    }\n\n    $rs = '';\n    for($i = 0; $i < $len; $i++) {\n        $o = ord($s[$i]);\n        if($o < 0x80) {\n            if(($o >= 48 && $o <= 57) || ($o >= 97 && $o <= 122)) {\n                $rs .= $s[$i]; // 0-9 a-z\n            }elseif($o >= 65 && $o <= 90) {\n                $rs .= strtolower($s[$i]); // A-Z\n            }else{\n                $rs .= '_';\n            }\n        }else{\n            $z = $s[$i].$s[++$i].$s[++$i];\n            if(isset($pinyins[$z])) {\n                $rs .= $isfirst ? $pinyins[$z][0] : $pinyins[$z];\n            }else{\n                $rs .= '_';\n            }\n        }\n    }\n    return $rs;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;#34;stdlib.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//定义三个宏变量&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; OK 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; OVERFLOW -2&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; LIST_INIT_SIZE 10&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//定义两个int的别名&lt;/span&gt;\ntypedef &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; status;\ntypedef &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; ElemType;\n\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; 定义包含elem、length、listsize三个字段的结构体&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; ElemType*类型为int指针&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; 这个结构体本质上是一个链表&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\ntypedef &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; {\n    ElemType* elem;\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; length;\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; listsize;\n}SqList;\n\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; 初始化链表的函数&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;param name&amp;#61;&amp;#34;L&amp;#34;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-doctag\"&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-doctag\"&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;status &lt;span class=\"hljs-title\"&gt;InitList_Sq&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;SqList* L&lt;/span&gt;)&lt;/span&gt; {\n\n    &lt;span class=\"hljs-comment\"&gt;//给指针分配大小为LIST_INIT_SIZE个int&amp;#xff08;ElemType&amp;#xff09;的内存空间&amp;#xff0c;这个空间存储链表所有的值&lt;/span&gt;\n    (*L).elem &amp;#61; (ElemType*)malloc(LIST_INIT_SIZE * &lt;span class=\"hljs-keyword\"&gt;sizeof&lt;/span&gt;(ElemType));\n    &lt;span class=\"hljs-comment\"&gt;//如果(*L).elem返回假&amp;#xff0c;代表分配空间失败&amp;#xff0c;即内存空间不足&amp;#xff0c;返回堆栈溢出异常&amp;#xff08;开头定义了-2&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!((*L).elem))   &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OVERFLOW;\n    &lt;span class=\"hljs-comment\"&gt;//初始化链表参数&lt;/span&gt;\n    (*L).length &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    (*L).listsize &amp;#61; LIST_INIT_SIZE;\n    &lt;span class=\"hljs-comment\"&gt;//返回成功&amp;#xff08;开头定义了1&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n} &lt;span class=\"hljs-comment\"&gt;//InitList_Sq&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; 搜索兔子的方法&amp;#xff0c;穷举法&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;param name&amp;#61;&amp;#34;L&amp;#34;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-doctag\"&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&lt;span class=\"hljs-doctag\"&gt;///&lt;/span&gt; &lt;span class=\"hljs-doctag\"&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-doctag\"&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;status &lt;span class=\"hljs-title\"&gt;Rabbit&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;SqList* L&lt;/span&gt;)&lt;/span&gt; {\n\n    &lt;span class=\"hljs-comment\"&gt;//初始化数值&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, current &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;//初始化链表&amp;#xff0c;全部值赋1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; LIST_INIT_SIZE; i&amp;#43;&amp;#43;)\n        (*L).elem[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;//链表第一个和最后一个赋值0&amp;#xff0c;即1号洞和10号洞&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//这里的1号洞赋值0意义为一开始第一个搜索的就是1号洞&amp;#xff0c;即current所代表的洞口&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//10号洞赋值0的意义不明&amp;#xff0c;在本案例中不影响结果&lt;/span&gt;\n    (*L).elem[LIST_INIT_SIZE - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    (*L).elem[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;//循环穷举&amp;#xff0c;将遍历到的位置的值赋值为0&amp;#xff08;即狐狸会找到的洞&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n\n        &lt;span class=\"hljs-comment\"&gt;//将current索引改变至下一个要找的洞编号&amp;#xff0c;%为取余符号&amp;#xff0c;因为是圆形排列的洞口&amp;#xff0c;11就代表1&amp;#xff08;11%10&amp;#61;1&amp;#xff09;&lt;/span&gt;\n        current &amp;#61; (current &amp;#43; i) % LIST_INIT_SIZE;\n        &lt;span class=\"hljs-comment\"&gt;//当前搜索的洞口赋值为0&lt;/span&gt;\n        (*L).elem[current] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n兔子可能藏在如下的洞中&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-comment\"&gt;//遍历所有的洞&amp;#xff0c;此时为1的洞即为狐狸不可能找到的洞&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; LIST_INIT_SIZE; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((*L).elem[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;  \\n此洞是第%d号洞 !&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        }\n    }\n      \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;//初始化结构体&amp;#xff0c;分配结构体所占用的内存空间&amp;#xff0c;这个结构体就代表着所有的兔子洞&lt;/span&gt;\n    SqList* L &amp;#61; (SqList*)malloc(&lt;span class=\"hljs-keyword\"&gt;sizeof&lt;/span&gt;(SqList));\n    \n    InitList_Sq(L);\n\n    Rabbit(L);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;c不是很熟&amp;#xff0c;但是大体上应该是这么个意思&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求这段代码的注释，求注释", ["围绕着山顶有10个圆形排列的洞，狐狸要吃兔子，兔子说：“可以，但必须找到我，我就藏身于这十个洞中，你先到1号洞找，第二次隔1个洞（即3号洞）找，第三次隔2个洞（即6号洞）找，以后如此类推，次数不限。”但狐狸从早到晚进进出出了1000次，仍没有找到兔子。问兔子究竟藏在哪个洞里？", "\n", "#include \"stdio.h\"", "\n", "#include \"stdlib.h\"", "\n", "#define OK 1", "\n", "#define OVERFLOW -2", "\n", "typedef int status;", "\n", "typedef int ElemType;", "\n", "#define LIST_INIT_SIZE 10       ", "\n", "typedef struct {", "\n", "   ElemType *elem", ";                ", "\n\n   int length", ";                           ", "\n\n   int listsize", ";                        ", "\n", "\n", "}SqList;", "\n", "status InitList_Sq(SqList *L){                           ", "\n", "   ", "(*L).elem=(ElemType *)", "malloc(LIST_INIT_SIZE*sizeof(ElemType));\n\n   ", "if", "(!(", "(*L).elem))   return OVERFLOW;    \n\n   (*L).length=0;                                                \n\n   (*L).listsize=LIST_INIT_SIZE;          \n\n   return OK;", "\n", "\n", "} //InitList_Sq ", "\n", "status Rabbit(SqList *L){     ", "\n", "   int i,current=", "0", ";             \n\n   ", "for", "(i=", "0", ";i<LIST_INIT_SIZE;i++)\n\n          (*L).", "elem", "[i]=", "1", ";            \n\n   (*L).", "elem", "[LIST_INIT_SIZE-", "1", "]=", "0", ";\n\n   (*L).", "elem", "[", "0", "]=", "0", ";                  \n\n   ", "for", "(i=", "2", ";i<=", "1000", ";i++){\n\n          current=(current+i)%LIST_INIT_SIZE;            \n\n          (*L).", "elem", "[current]=", "0", ";                                      \n\n   }\n\n", "printf", "(", "\"\\n兔子可能藏在如下的洞中：\"", ") ;\n\n", "for", "(i=", "0", ";i<LIST_INIT_SIZE;i++)\n\n          ", "if", "((*L).", "elem", "[i]==", "1", ")\n\n                 ", "printf", "(", "\"  \\n此洞是第%d号洞 !\"", ",i+", "1", ");            \n\n          ", "return", " OK;\n", "\n", "}", "\n", "void main(){", "\n", "   SqList *L=( SqList *)malloc(sizeof(SqList));\n\n   InitList_S", "q(L)", ";\n\n   Rabbit(L);\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目有问题吧&amp;#xff1f;应该是40。。&lt;br /&gt;40&amp;#xff0c;&lt;br /&gt;x&amp;#61;10,y&amp;#61;2,n&amp;#61;2&lt;br /&gt;10&lt;em&gt;2&lt;/em&gt;2&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Python代码注释", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在文件的第一行添加&amp;#xff1a;&lt;/p&gt;\n&lt;h1 id=\"h1_---codingutf-8---_1681792788179\"&gt;-&lt;em&gt;- coding:utf-8 -&lt;/em&gt;-&lt;/h1&gt;\n&lt;p&gt;试试看&amp;#xff0c;可能是因为编码的问题。毕竟你输入了中文。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Python注释问题", ["我是刚开始学习编程语言，我在编译器上写的Python注释，老是显示错误是什么原因？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It should be like this: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo '&amp;lt;i class=\"far fa-comment\"&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;a href=\"'.get_comments_link( $post_ID ).'\"&amp;gt;'.comments_number(\"No comments\", \"1 comment\", \"% comments\").'&amp;lt;/a&amp;gt;';\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP：echo wordpress注释链接和注释编号在href上", ["\n\n", "I tried the search but did not get the complete answer to my question.\nI build a WordPress website with redux framework options panel and need switch on/off the option to hide meta info on WordPress posts.", "\n\n", "I got already post date&author post link working but have a problem with echo href on WordPress comments link.", "\n\n", "original code looks like this", "\n\n", "<i class=\"far fa-comment\"></i>&nbsp;<a href=\"<?php comments_link(); ?>\"><?php comments_number('No comments', '1 comment', '% comments'); ?></a>\n", "\n\n", "but I need to echo it inside PHP code", "\n\n", "<?php global $wpdf;\nif( $wpdf['text-muted']){\n    //Do Something if switch is on(i.e - true)\n    if(esc_html($wpdf['text-muted'] == '1')) { \n        echo '<i class=\"far fa-calendar-alt\"></i>&nbsp;';\n        echo wpdf_post_date();\n        echo '&nbsp;|&nbsp;<i class=\"far fa-user\"></i>&nbsp;';\n        echo the_author_posts_link();\n        echo '&nbsp;|&nbsp;<i class=\"far fa-comment\"></i>&nbsp;';\n    }\n}\n?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Are you just trying to remove the comments?  How about&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;s/&amp;lt;!--[^&amp;gt;]*--&amp;gt;//g\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or the slightly better (suggested by the questioner himself):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;!--(.*?)--&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But remember, HTML is &lt;em&gt;not&lt;/em&gt; regular, so using regular expressions to parse it will lead you into a world of hurt when somebody throws bizarre edge cases at it.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["RegEx剥离HTML注释", ["\n\n", "Looking for a regexp sequence of matches and replaces (preferably PHP but doesn't matter) to change this (the start and end is just random text that needs to be preserved).", "\n\n", "IN:", "\n\n", "fkdshfks khh fdsfsk \n<!--g1-->\n<div class='codetop'>CODE: AutoIt</div>\n<div class='geshimain'>\n    <!--eg1-->\n    <div class=\"autoit\" style=\"font-family:monospace;\">\n        <span class=\"kw3\">msgbox</span>\n    </div>\n    <!--gc2-->\n    <!--bXNnYm94-->\n    <!--egc2-->\n    <!--g2-->\n</div>\n<!--eg2-->\nfdsfdskh\n", "\n\n", "to this OUT:", "\n\n", "fkdshfks khh fdsfsk \n<div class='codetop'>CODE: AutoIt</div>\n<div class='geshimain'>\n    <div class=\"autoit\" style=\"font-family:monospace;\">\n        <span class=\"kw3\">msgbox</span>\n    </div>\n</div>\nfdsfdskh\n", "\n\n", "Thanks.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为注释上面的交换的不是数组本身&amp;#xff0c;而是临时变量。&lt;br /&gt;&lt;strong&gt;start和end临时变量交换了值&lt;/strong&gt;&amp;#xff0c;但是并不会影响到对应的数组元素。&lt;br /&gt;注释内的交换&amp;#xff0c;才是真正实现了元素交换&amp;#xff0c;因为&lt;strong&gt;赋值都是操作数组元素本身。&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/508692910746152.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么注释里的可以数据叫换，注释上面的不行", ["为什么不能数据交换，这个发问题到底是怎么弄得？第一次玩不熟练", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Set集合是无序的&amp;#xff0c;不可能会排序的&amp;#xff0c;排序要用排序算法来实现。并且不能用set来存储。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么使用注释的代码会不排序，使用注释上面的就会排序，如果要使用注释的代码进行排序该怎么写呢？", ["import java.util.*;", "public class text04{", "    public static void main(String[] args){", "\n", "    ", "int", "[] a={", "4", ",", "5", ",", "2", ",", "3", "};\n    ", "int", "[] b={", "4", ",", "6", ",", "7", ",", "8", "};\n    ", "/*\n    int[] a= new int[6];\n    int[] b= new int[4];\n    Random r = new Random();\n    for(int i=0;i<a.length;i++){\n        a[i]=r.nextInt(100);\n    }\n    for(int j=0;j<b.length;j++){\n        b[j]=r.nextInt(100);\n    }\n    */", "\n    ", "int", "[] c= ", "new", " ", "int", "[a.length+b.length];\n    ", "System", ".arraycopy(a,", "0", ",c,", "0", ",a.length);\n    ", "System", ".arraycopy(b,", "0", ",c,a.length,b.length);\n    List <", "Integer", "> numList = ", "new", " ArrayList<", "Integer", ">();\n    ", "for", "(", "int", " k:c)\n        numList.", "add", "(k);\n        ", "Set", "<", "Integer", "> numSet = ", "new", " HashSet<", "Integer", ">();\n        numSet.addAll(numList);\n        ", "System", ".", "out", ".println(numSet);\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;h4 id=\"h4_以下内容部分参考chatgpt模型&amp;#xff1a;_1681256160298\"&gt;以下内容部分参考ChatGPT模型&amp;#xff1a;&lt;/h4&gt;\n&lt;hr /&gt;\n&lt;p&gt;可能出现这个错误是因为marker基因的注释数据不完整或格式不正确。建议检查一下注释数据是否包含必要的信息&amp;#xff0c;并确保它们的格式与您的代码匹配。您可以尝试使用其他的marker基因注释数据&amp;#xff0c;或者手动编辑这些数据以使其符合要求。&lt;/p&gt;\n&lt;p&gt;以下是一个例子&amp;#xff0c;展示如何使用marker基因注释数据来注释聚类&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-{r}\"&gt;library(Seurat)\n\n# 加载数据\ndata &amp;lt;- Read10X(&lt;span class=\"hljs-string\"&gt;&amp;#34;data_dir&amp;#34;&lt;/span&gt;)\npbmc &amp;lt;- CreateSeuratObject(counts &amp;#61; data)\n\n# 进行预处理\npbmc &amp;lt;- NormalizeData(pbmc)\npbmc &amp;lt;- FindVariableFeatures(pbmc)\npbmc &amp;lt;- ScaleData(pbmc)\n\n# 进行聚类\npbmc &amp;lt;- FindNeighbors(pbmc)\npbmc &amp;lt;- FindClusters(pbmc)\n\n# 使用marker基因注释聚类\nmarkers &amp;lt;- read.csv(&lt;span class=\"hljs-string\"&gt;&amp;#34;marker_genes.csv&amp;#34;&lt;/span&gt;) # 加载marker基因注释数据\npbmc &amp;lt;- AddModuleScore(pbmc, features &amp;#61; markers$gene, \n                       &lt;span class=\"hljs-keyword\"&gt;module&lt;/span&gt; &amp;#61; markers$cluster, \n                       name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;marker_score&amp;#34;&lt;/span&gt;)\n\n# 查看结果\npbmc&amp;#64;meta.data$marker_score\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个例子中&amp;#xff0c;我们使用了一个名为&lt;code class=\"language-javascript\"&gt;marker_genes.csv&lt;/code&gt;的文件来注释聚类。该文件包括两列&amp;#xff0c;一列是marker基因的名称&amp;#xff0c;另一列是它们所属的聚类。我们使用&lt;code class=\"language-javascript\"&gt;AddModuleScore&lt;/code&gt;函数将marker基因的得分添加到Seurat对象的元数据中&amp;#xff0c;以便我们可以查看它们与聚类的关系。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h3 id=\"h3_如果我的建议对您有帮助、请点击采纳、祝您生活愉快_1681256160330\"&gt;如果我的建议对您有帮助、请点击采纳、祝您生活愉快&lt;/h3&gt;", "Konwledge_Point": "注释", "Question": ["Marker 基因的注释", ["想通过这种方式选marker 基因注释cluster,为什么会出现这个错误呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如图&amp;#xff0c;点击options展开后&amp;#xff0c;勾选 Show comments instead of details  即可。&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/62406117108615.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["DataGrip2023.1 在 Database 表名后面不显示 comment 注释  怎么回事", ["DataGrip2023.1 在 Database 表名后面不显示 comment 注释  怎么回事", "昨天升级前2022.03还是正常的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Autoloading is apparently handled by &lt;code&gt;AnnotationRegistry::registerAutoloadNamespace&lt;/code&gt; which is a PSR-0 autoloader. &lt;a href=\"https://github.com/doctrine/common/blob/2.2.2/lib/Doctrine/Common/Annotations/AnnotationRegistry.php#L54\" rel=\"nofollow\"&gt;Documentation/source&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I found that you can do a &lt;code&gt;use My\\Test\\Foo&lt;/code&gt; in the annotated file to use &lt;code&gt;@Foo&lt;/code&gt; as an annotation. And the reason for that is possible is because Doctrine &lt;a href=\"https://github.com/doctrine/common/blob/master/lib/Doctrine/Common/Annotations/PhpParser.php\" rel=\"nofollow\"&gt;re-parses&lt;/a&gt; the file solely for &lt;code&gt;use&lt;/code&gt; statements.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Doctrine试图创建注释", ["\n\n", "I am trying to use Doctrine Common to create my own annotation. ", "http://docs.doctrine-project.org/projects/doctrine-common/en/latest/reference/annotations.html", " does not match ", "https://github.com/doctrine/common", " because ", "Call to undefined method Doctrine\\\\Common\\\\Annotations\\\\AnnotationReader::setDefaultAnnotationNamespace", " and ", "PHP Fatal error:  Call to undefined method Doctrine\\\\Common\\\\Annotations\\\\AnnotationRegistry::registerAnnotationNamespace", ". I checked the source, they are not there. According to git log they were removed a year ago.", "\n\n", "I have a PSR-0 autoloader going (from Symfony). So I have a file where the PSR-0 loader expects:", "\n\n", "namespace My\\Test;\n\n/**\n * @Annotation\n */\nclass Foo {\n\n}\n", "\n\n", "Another class", "\n\n", "namespace My\\Annotated\n\n/**\n * @My\\Test\\Foo\n */\nclass Test {\n}\n", "\n\n", "Reader:", "\n\n", "namespace My\\Reader\n\nuse ReflectionClass;\nuse Doctrine\\Common\\Annotations\\AnnotationReader;\nuse Doctrine\\Common\\Annotations\\AnnotationRegistry;\nuse My\\Test\\Foo;\n\n$reader = new AnnotationReader();\n$reflectionClass = new ReflectionClass('My\\\\Annotated\\\\Test');\n$classAnnotations = $reader->getClassAnnotations($reflectionClass);\nvar_dump($classAnnotations);\n", "\n\n", "Gets: ", "\"[Semantical Error] The annotation \"@My\\\\Test\\\\Foo\" in class My\\\\Annotated\\\\test was never imported. Did you maybe forget to add a \"use\" statement for this annotation?\"", " I ilikely did but for my life I can't figure out where to add it. And I really would like to just use @Foo if possible.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Have you tried  &lt;a href=\"https://golang.org/pkg/encoding/xml/#Unmarshal\" rel=\"noreferrer\"&gt;https://golang.org/pkg/encoding/xml/#Unmarshal&lt;/a&gt;?&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If the XML element contains comments, they are accumulated in  the\n  first struct field that has tag \",comment\".  The struct  field may\n  have type []byte or string. If there is no such  field, the comments\n  are discarded.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Here's usage example: &lt;a href=\"https://golang.org/src/encoding/xml/example_test.go\" rel=\"noreferrer\"&gt;https://golang.org/src/encoding/xml/example_test.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Person struct {\n    XMLName   xml.Name `xml:\"person\"`\n    ...\n    Comment   string   `xml:\",comment\"`\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["解组XML注释", ["\n\n", "I am trying to unmarshal XML from RRD format.", "\n\n", "So I create my types etc, etc. which I am able to get the values from.", "\n\n", "But there are comments in the XML in this format ", "<!-- 2017/01/01 -->", " and I need to extract this date. Is there any way of accessing this in GO ?", "\n\n", "Thanks. ", "\n\n", "Updated question:", "\n\n", "Okay I did it works, but I want to split the comments into array.", "\n\n", "For example I have the following XML.", "\n\n", "<database>\n<!-- Random Info. -->\n<row>10101</row>\n<!-- Random Info2 . -->\n<row>10102</row>\n</database>\n", "\n\n", "So I have the following.", "\n\n", "type Database struct {\n          Comment string `xml:\",comment\"`   \n          Row []string  `xml:\"row\"`\n    }\n", "\n\n", "Now when I print the row data I get it as an array whereas the comment is a string.\nI tried to make it an array but it throws an error cannot convert.\npanic: reflect.Set: value of type []uint8 is not assignable to type []string", "\n\n", "Obviously, I can split the string and get what I want. But is there any quicker way of doing this when creating type?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的是中文乱码的问题。解决这个问题的方法是将 cmd 命令行窗口的代码页设置为 UTF-8 编码&amp;#xff0c;这样就可以正确显示中文字符了。&lt;/p&gt;\n&lt;p&gt;具体按照以下步骤设置 cmd 命令行窗口的代码页&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;打开 cmd 命令行窗口&amp;#xff0c;右键点击窗口标题栏上的图标&amp;#xff0c;选择“属性”菜单。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;在“属性”对话框中&amp;#xff0c;选择“选项”选项卡&amp;#xff0c;然后在“文本”下拉框中选择“UTF-8”。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;点击“确定”按钮&amp;#xff0c;然后重新打开一个 cmd 命令行窗口&amp;#xff0c;就可以正确显示中文字符了。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;另外&amp;#xff0c;如果您在写 Java 代码时遇到了中文字符编码的问题&amp;#xff0c;可以在代码文件的开头添加以下注释来指定字符编码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; -*- coding: utf-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; -*-\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个注释指定了代码文件使用 UTF-8 编码&amp;#xff0c;这样就可以正确处理中文字符了。如果您使用的是其他编码&amp;#xff08;例如 GBK&amp;#xff09;&amp;#xff0c;则需要将“utf-8”替换成相应的编码名称。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果以上回答对您有所帮助&amp;#xff0c;点击一下采纳该答案&amp;#xff5e;谢谢&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释 和中文 cmd 都报错", ["是不是和系统有关，我的是wen11的家庭版，用notepad++ 只要写了中文都会报错 注释也不行这个咋弄啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I would do it a little differently - updating separate to listing out the comments. Also You would have to set the textarea name containing the comment ID, like in my example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$sqlKlas = \"Select * from tblcomments WHERE ForWho='\".$_SESSION['User'].\"' AND ForWho='6HA1' OR VoorWie='6HA2'\";\n$resultKlas = mysql_query($sqlKlas) or die(mysql_error());\n\nif (isset($_POST['btnAdaptCommentKlas'])){\n    foreach($_POST['txtComment'] as $key =&amp;gt; $value) {\n        $sqlUpdate = \"UPDATE tblcomments SET Comment='\".mysql_real_escape_string($value).\"' WHERE CommentNr=\".(int)$key;\n        $resultUpdate = mysql_query($sqlUpdate) or die(mysql_error());\n    }\n}\nwhile($rowKlas = mysql_fetch_array($resultKlas)){\n    $CommentNr = $rowKlas['CommentNr'];\n    echo \"&amp;lt;tr&amp;gt;\";\n    echo \"&amp;lt;td&amp;gt;\";\n    ?&amp;gt;&amp;lt;textarea name=\"txtComment[&amp;lt;?php echo $CommentNr; ?&amp;gt;]\" cols=\"80\" rows=\"5\"&amp;gt;&amp;lt;?php echo $rowKlas['Comment']; ?&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;?php\n    echo \"&amp;lt;/td&amp;gt;\";\n    echo \"&amp;lt;td&amp;gt;\".$rowKlas['ForWho'].\"&amp;lt;/td&amp;gt;\";\n    echo \"&amp;lt;td&amp;gt;\".$rowKlas['Datum'].\"&amp;lt;/td&amp;gt;\";\n    echo \"&amp;lt;/tr&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also I would recommend not to use &lt;code&gt;mysql_*&lt;/code&gt; function but use &lt;code&gt;PDO&lt;/code&gt; or at least &lt;code&gt;mysqli_*&lt;/code&gt; instead. Using &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; to escape the user input is highly recommended.&lt;/p&gt;\n\n&lt;p&gt;Also using &lt;code&gt;MVC&lt;/code&gt; and separating the data manipulation (updating, fetching, creation) and data presentation (in an HTML template) would be much nicer and more maintainable for further development.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["按下按钮并使用包含注释的文本区域更新mysql数据库中的注释", ["\n\n", "The question might seem a little odd but I will show you what I mean :)", "\n\n", "So I have made a webpage that contains comments that have been made by authorised users (teachers). That is another piece of code in another page so that works perfectly.\nOf course it should be possible for the person who made the comment to change his own comments in case of mistakes etc.", "\n\n", "I managed to show the user his own comments with his comments in seperate text areas.\nThe text areas have no specific name and are just called txtComment, how do I make them unique for every comment (which is flexible because comments can be added later).\nI think that is the issue why I cannot update the changed/adapted textareas after I press the button.", "\n\n", "I hope you guys understand what I am trying to say :p", "\n\n", "I changed Dutch words mostly to English so if there is a spelling error that is due to that :)", "\n\n", "This is the code:", "\n\n", "<?php\n$sqlKlas = \"Select * from tblcomments WHERE ForWho='\".$_SESSION['User'].\"' AND ForWho='6HA1' OR VoorWie='6HA2'\";\n$resultKlas = mysql_query($sqlKlas) or die(mysql_error());\nif (isset($_POST['btnAdaptCommentKlas'])){\n    while($rowKlas = mysql_fetch_array($resultKlas)){\n        $CommentNr = $rowKlas['CommentNr'];\n\n        $sqlUpdate = \"Update tblcomments SET Comment='\".$_POST['txtComment'].\"' WHERE CommentNr=$CommentNr\";\n        $resultUpdate = mysql_query($sqlUpdate) or die(mysql_error());\n\n        echo \"<tr>\";\n        echo \"<td>\";\n        ?><textarea name=\"txtComment\" cols=\"80\" rows=\"5\"><?php echo $rowKlas['Comment']; ?></textarea><?php\n        echo \"</td>\";\n        echo \"<td>\".$rowKlas['ForWho'].\"</td>\";\n        echo \"<td>\".$rowKlas['Datum'].\"</td>\";\n        echo \"</tr>\";\n    }\n}\nelse {\n    while($rowKlas = mysql_fetch_array($resultKlas)){\n        echo \"<tr>\";\n        echo \"<td>\";\n        ?><textarea name=\"txtComment\" cols=\"80\" rows=\"5\"><?php echo $rowKlas['Comment']; ?></textarea><?php\n        echo \"</td>\";\n        echo \"<td>\".$rowKlas['ForWho'].\"</td>\";\n        echo \"<td>\".$rowKlas['Datum'].\"</td>\";\n        echo \"</tr>\";\n    }\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "类似这个 https://blog.csdn.net/weixin_42080277/article/details/86220280", "Konwledge_Point": "注释", "Question": ["spring boot 2.1.1,@Transactional注释无法启动事务回滚", ["@Transactional\npublic BooleanMessage importUserOne(String ppUserId) {\n\n    deleteOneUser(ppUserId);\n    transferOneUser(ppUserId);\n\n    return BooleanMessage.getSuccessMessage(\"同步成功！\");\n}\n\n@Transactional\npublic void deleteOneUser(String userid) {\n    try {\n        // 删除：用户\n        this.deleteUsers(userid);\n\n    } catch (Exception e) {\n        throw new RuntimeException(\"delete error : \"+e.getMessage());\n    }\n}\n\npublic void deleteUsers(String userid) {\n    dd用户Service.delete(userid);\n}\n\npublic boolean delete(String ppUserId) {\n    return ddMapper.deleteByPrimaryKey(ppUserId) == 1;\n}\n\n\n@Transactional\npublic void transferOneUser(String userid) {\n    try {\n\n        // 迁移：用户\n        dd用户Service.transferUsers(findOne(userid));\n\n    } catch (Exception e) {\n        throw new RuntimeException(\"transferOneUser error : \"+e.getMessage());\n    }\n}\n\n@Transactional\npublic void transferUsers(Users one) {\n    if (one == null) {\n        throw new NullPointerException(\"Users is null!\");\n    }\n\n    try {\n        String userid = one.getUserid() == null ? \"\" : one.getUserid();\n\n\n        用户 mm用户 = new 用户();\n        mm用户.set用户id(userid);\n\n        this.add(mm用户);\n    } catch (Exception e) {\n\n        throw new RuntimeException(\"users add error : \"+e.getMessage());\n    }\n}\n\npublic boolean add(用户 mm用户) {\n    return ddMapper.insert(mm用户) == 1;\n}\n", "\n\n", "import org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration;\nimport org.springframework.context.annotation.ComponentScan;\n\n@EnableAutoConfiguration(exclude = {DataSourceAutoConfiguration.class,DataSourceTransactionManagerAutoConfiguration.class, MybatisAutoConfiguration.class})\n@SpringBootApplication\n@ComponentScan(basePackages={\"importdata.*\"})\npublic class BshImportdataApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(BshImportdataApplication.class, args);\n    }\n}\n\n```我在spring boot 2.1.1版本中，在service层中的方法上加上@Transactional的注解，\n没办法启动这个方法的事务回滚，里面的方法执行一半出错也不会回滚成没执行之前的一样，求大神解决\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I had a similar issue when using Silex, Doctrine2 and the Symfony-Validator. &lt;/p&gt;\n\n&lt;p&gt;The solution was  to avoid using the SimpleAnnotationsReader and instead using the normal AnnotationReader (have a look at &lt;a href=\"http://www.doctrine-project.org/api/orm/2.3/class-Doctrine.ORM.Configuration.html#_newDefaultAnnotationDriver\" rel=\"nofollow\"&gt;Doctrine\\ORM\\Configuration::newDefaultAnnotationDriver&lt;/a&gt;). You can then preface every entity with &lt;code&gt;ORM\\&lt;/code&gt; (and of course inserting &lt;code&gt;use Doctrine\\ORM\\Mapping as ORM;&lt;/code&gt; in every entity).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["导入注释时遇到问题", ["\n\n", "I'm working on a CodeIgniter project in which I'm using Doctrine2 and the Symfony2 Validator component. ", "\n\n", "All my Doctrine2 entities ", "use Doctrine\\ORM\\Mapping", " and the entity manager recognizes them. My entity annotation looks like this:", "\n\n", "/**\n * @Entity(repositoryClass = \"UserRepository\")\n * @Table(name = \"user\")\n * @HasLifecycleCallbacks()\n */\n", "\n\n", "At this point, I'm able to persist entities without any trouble. The first problem arises when I try to use the Symfony2 Validator component. When I try to validate a ", "User", " object, I get this error:", "\n\n", "\n  ", "[Semantical Error] The annotation \"@Entity\" in class Entity\\User was never imported. Did you maybe forget to add a \"use\" statement for this annotation?", "\n", "\n\n", "The only \"fix\" to this issue is through ", "use Doctrine\\Mapping\\Entity", ", but I have to do that for ", "every", " annotation being used by my entity (Table, Column, ManyToOne, etc.). I'm trying to figure out why I need to explicitely ", "use", " each annotation class instead of them being automatically recognized (shouldn't ", "use Doctrine\\ORM\\Mapping", " grant me access to all the classes within that namespace?).", "\n\n", "So, I then tried ", "use Doctrine\\ORM\\Mapping as ORM", " and prefacing all my annotations with ", "ORM\\", ". Ex: ", "@ORM\\Entity()", ". The Symfony2 validator stops complaining, but now Doctrine2 complains that ", "Class Entity\\User is not a valid entity or mapped super class.", " I have no idea why this method works for the Validator, but not Doctrine2. If I run the console command ", "doctrine:orm:info", ", my ", "User", " entity is not recognized.", "\n\n", "Because this is a CodeIgniter app, I'm autoloading the Symfony2 and Doctrine2 libraries. My autoload code is as follows:", "\n\n", "# Symfony2 ClassLoader component\nrequire_once __DIR__ . '/application/libraries/symfony/src/Symfony/Component/ClassLoader/UniversalClassLoader.php';\n$loader = new \\Symfony\\Component\\ClassLoader\\UniversalClassLoader();\n$loader->register();\n$loader->registerNamespace('Symfony', __DIR__ . '/application/libraries/symfony/src');\n$loader->registerNamespace('Doctrine', __DIR__ . '/application/libraries/doctrine/lib');\n\n# Doctrine2 \nrequire_once __DIR__ . '/application/libraries/doctrine/lib/Doctrine/Common/Annotations/AnnotationRegistry.php';\nuse Doctrine\\Common\\Annotations\\AnnotationRegistry;\nAnnotationRegistry::registerLoader(function($class) use ($loader) {\n    $loader->loadClass($class);\n    $classExists = class_exists($class, false);\n    return $classExists;\n});\nAnnotationRegistry::registerFile(__DIR__ . '/application/libraries/doctrine/lib/Doctrine/ORM/Mapping/Driver/DoctrineAnnotations.php');\n", "\n\n", "I don't care if I have to preface everything with ", "ORM\\", " or not, I just want to find a solution that the Symfony2 Validator and Doctrine2 will both work with. Any ideas?", "\n    "]], "Tag": "程序设计"}
{"Answer": "你这个代码的实现的方式是\r\n从链表的头开始，往后，temp保存的是待删除的节点后一个节点，而currentNode是待删除的节点，每次释放currentNode，而让temp成为新的currentNode（让temp的下一个节点成为temp）\r\n最后是清理头节点（让它的数据域data=0，指针域next\\null）\r\n\r\n这个代码其实有两个问题，第一，头节点也是普通节点，那么头节点的 data  = 0，说明它是空的么？还是只有一个节点，并且这个节点的数据是0呢？没法区别。解决办法是，引入一个没有数据域的头指针，比如叫header。\r\n第二个问题，一旦循环删除失败，那么完蛋了，从失败开始往后的内存全部泄露了。解决办法是从后往前删除。", "Konwledge_Point": "注释", "Question": ["单链表删除   清空链表过程注释", ["void List::ClearList(){//清空链表", "\n    Node *currentNode=m_pList->next;", "\n            while(currentNode!=NULL)/", "\n            {", "\n                Node *temp=currentNode->next;", "\n                delete currentNode;", "\n                currentNode=temp;", "\n            }", "\n            m_pList->next=NULL;", "\n\n", "        m_pList->data=0;//这个的含义是表头数据为0吗\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;前一个成绩乘以0.6加上后一个成绩乘以0.4&lt;br /&gt;最终结果要限定小数点后三位数&amp;#xff0c;这样就是96.880了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt; iomanip &amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c;\n    cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;\n    c &amp;#61; a*&lt;span class=\"hljs-number\"&gt;0.6&lt;/span&gt;&amp;#43;b*&lt;span class=\"hljs-number\"&gt;0.4&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;fixed&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setprecision&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&amp;lt;&amp;lt;c;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["c++计算得分注释讲解", ["看了几期之后，诚诚发现该节目的评分方式比较有意思，于是进行了一番了解和研究。该节目对每个选手的打分是这样的：专业评审团得出一个平均分A，观众评审团得出一个平均分B，然后按照6：4的比例进行折合，得到最终的得分。", "给出某位选手的专业评审团和观众评审团的平均分，计算出这位选手的最终得分。", "两个数，专业评审团平均分和观众评审团平均分", "一个数，该选手的最终得分，保留三位小数。", "97.133 96.500", "\n", "96.880", "这个我写的代码计算出来的结果是96.8798，我手写拿纸算了一遍也是这个得数，不知道样式输出为什么是96.880？"]], "Tag": "程序设计"}
{"Answer": "用宏包装了很多代码，实现消息映射。具体可以看深入浅出mfc。上面将的很清楚", "Konwledge_Point": "注释", "Question": ["MFC消息机制谁帮我做个注释，请逐行注释。不要回复无关内容", ["  class CMsgFrame : public CFrameWnd  \n{\n  private: \n        static const AFX_MSGMAP_ENTRY _messageEntries[]; \n    protected: \n        static AFX_DATA const AFX_MSGMAP messageMap; \n        static const AFX_MSGMAP* PASCAL _GetBaseMessageMap(); \n        virtual const AFX_MSGMAP* GetMessageMap() const; \n    }\nconst AFX_MSGMAP* PASCAL CMsgFrame::_GetBaseMessageMap() \n    { \n        return &CFrameWnd::messageMap; \n    } \n\n    const AFX_MSGMAP* CMsgFrame::GetMessageMap() const \n    { \n            return &CMsgFrame::messageMap; \n    } \n\n    AFX_COMDAT AFX_DATADEF const AFX_MSGMAP CMsgFrame::messageMap = \n    {       \n        &CMsgFrame::_GetBaseMessageMap, \n        &CMsgFrame::_messageEntries[0] \n    }; \n\n    AFX_COMDAT const AFX_MSGMAP_ENTRY CMsgFrame::_messageEntries[] = \n    {\n        { WM_PAINT, 0, 0, 0, AfxSig_lwl,(AFX_PMSG)(AFX_PMSGW)(LRESULT (AFX_MSG_CALL CWnd::*)(WPARAM, LPARAM))&OnPaint },\n        {0, 0, 0, 0, AfxSig_end, (AFX_PMSG)0 } \n    }; \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;python的默认编码文件是用的ASCII码&amp;#xff0c;中文会乱码&amp;#xff0c;将文件存为utf-8或者第一行加上&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-meta\"&gt;#coding&amp;#61;utf-8&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["python 添加注释的问题", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You're missing a call to register the annotations (both yours and any internal ones you're using). The easiest way to do this is to pass the Composer autoloader directly to Doctrine's &lt;code&gt;registerLoader&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$loader = require_once 'vendor/autoload.php';\nDoctrine\\Common\\Annotations\\AnnotationRegistry::registerLoader([$loader, \"loadClass\"]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;at the top of your test script.&lt;/p&gt;\n\n&lt;p&gt;This assumes that you're doing all of your autoloading through Composer but if not, there are methods available to register individual files or namespaces described here &lt;a href=\"https://www.doctrine-project.org/projects/doctrine-annotations/en/1.6/annotations.html#registering-annotations\" rel=\"nofollow noreferrer\"&gt;in the manual&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用Doctrine Annotations创建自定义注释失败", ["\n\n", "I'm trying to define and use custom annotations but I can't figure out the problem. The basis is doctrine/annotations and these are my own classes:", "\n\n", "<?php\nnamespace MyCompany\\Annotations\\Annotation;\n\nuse Doctrine\\Common\\Annotations\\Annotation;\n\n/**\n * @Annotation\n * @Target(\"PROPERTY\")\n */\nfinal class Type\n{\n    /**\n     * @Required\n     *\n     * @var string\n     */\n    public $name;\n}\n\n<?php\nnamespace MyCompany\\Annotations;\n\nuse MyCompany\\Annotations\\Annotation as MYC;\n\nclass Person\n{\n    /**\n     * @MYC\\Type(name = \"string\")\n     */\n    private $firstName;\n\n    /**\n     * @MYC\\Type(name = \"string\")\n     */\n    private $lastName;\n\n    public function __construct($firstName, $lastName)\n    {\n        $this->firstName = $firstName;\n        $this->lastName = $lastName;\n    }\n\n    public function getFirstName()\n    {\n        return $this->firstName;\n    }\n\n    public function getLastName()\n    {\n        return $this->lastName;\n    }\n}\n", "\n\n", "Now I want to read the annotations of all properties:", "\n\n", "<?php\nrequire __DIR__ . '/../vendor/autoload.php';\n\nuse Doctrine\\Common\\Annotations\\AnnotationReader;\nuse Doctrine\\Common\\Annotations\\CachedReader;\nuse Doctrine\\Common\\Cache\\ArrayCache;\nuse MyCompany\\Annotations\\Person;\n\n$refClass = new ReflectionClass(Person::class);\n$props = $refClass->getProperties();\n\nforeach ($props as $prop) {\n    $reader = new AnnotationReader();\n    $annotationReader = new CachedReader(\n        $reader, new ArrayCache()\n    );\n    $annotations = $annotationReader->getPropertyAnnotations(\n        $prop\n    );\n    print_r($annotations);\n}\n", "\n\n", "If I run my test script, it fails with the following error:", "\n\n", "Uncaught exception 'Doctrine\\Common\\Annotations\\AnnotationException' with message '[Semantical Error] The annotation \"@MyCompany\\Annotations\\Annotation\\Type\" in property MyCompany\\Annotations\\Person::$firstName does not exist, or could not be auto-loaded.'\n", "\n\n", "What confuses me is the fact that the class name in the error message starts with a '@' character.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码加流程图&amp;#xff0c;简单啊&lt;br /&gt;是否还需要&amp;#xff0c;代码和流程图都可以搞定&lt;br /&gt;call我&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/806692519076145.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;/**字符串排序*/&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Sort_String&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; arr[][&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; tmp[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(arr &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt; || size &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//字符串个数小于2的直接返回&amp;#xff0c;不用排序&lt;/span&gt;\n        {&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;}\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; size - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; size - i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(arr[j], arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]) &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果后一个字符串大于前面的一个&amp;#xff0c;就进行交换操作&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-comment\"&gt;//利用冒泡的排序算法对字符串进行排序&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(tmp,arr[j]);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(arr[j],arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],tmp);\n            }\n        }\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n  \n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i;\n   &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;打算输入多少个字符串&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n   &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n   &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//吃掉回车符&lt;/span&gt;\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入数据&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(arr[i]);\n   }\n   &lt;span class=\"hljs-built_in\"&gt;Sort_String&lt;/span&gt;(arr,n);\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(arr[i]);\n   }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/629197710176159.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求源🐴、流程图和注释", ["设计一个函数,对n个字符串由大到小的顺序", "排列,n由程序读入,字符串的输出和输入都", "在main函数中进行。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用福昕PDF编辑器或者Adobe的acrobat才可以&amp;#xff0c;其他免费的没这功能&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["PDF阅读注释区域拓展", ["问题：", "\n", "读PDF时习惯添加一些注释，但又觉得空白的地方不太够用。", "\n", "解决思路：", "\n", "有没有什么方法可以拓宽空白区域或页面宽度？", "\n", "其他好的解决办法也行，不知道有没有人遇到过这个问题。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I would take a look at the PHPBB source code and find the files that parse these comments. There's probably a class for templates which you could reuse for your own projects.&lt;/p&gt;\n\n&lt;p&gt;If it helps, documentation about the syntax is available at:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://area51.phpbb.com/docs/coding-guidelines.html#templates\" rel=\"nofollow noreferrer\"&gt;http://area51.phpbb.com/docs/coding-guidelines.html#templates&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHPBB模板注释有条件", ["\n\n", "I see in PHPBB they use conditional statements inside their HTML, or XHTML; if you dont know what I mean here is a snippet:", "\n\n", "<!-- IF MODERATORS -->\n<p class=\"moderators\"><!-- IF S_SINGLE_MODERATOR -->{L_MODERATOR}<!-- ELSE \n\n-->{L_MODERATORS}<!-- ENDIF -->: {MODERATORS}</p>\n<!-- ENDIF -->\n<!-- IF U_MCP -->\n    <p class=\"linkmcp\">[ <a href=\"{U_MCP}\">{L_MCP}</a> ]</p>\n<!-- ENDIF -->\n", "\n\n", "Is there an explanation on how to implement this in my own site? It would be very useful and clean up a lot of code.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;只提供以下功能的程序&amp;#xff0c;行吗&amp;#xff1f;&lt;br /&gt;1、从控制台添加、修改、删除、查询客户信息&lt;br /&gt;2、对客户的积分进行增加、扣减&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求源🐴和注释，数据结构java", ["数据结构java版代码，数据不能链接数据库，要用数据结构写，客户消费积分管理系统，存储结构存储信息，可修改，删除，添加客户信息，进行积分计算，还要实行打折优惠"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Sussed it! Final working code is as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$querystr = \" SELECT comment_content, commentmeta1.meta_value AS comment_name, commentmeta2.meta_value AS comment_country \nFROM $wpdb-&amp;gt;comments, $wpdb-&amp;gt;commentmeta AS commentmeta1, $wpdb-&amp;gt;commentmeta AS commentmeta2 \nWHERE $wpdb-&amp;gt;comments.comment_ID = commentmeta1.comment_id \nAND $wpdb-&amp;gt;comments.comment_ID = commentmeta2.comment_id \nAND commentmeta1.meta_key = 'comment_name' \nAND commentmeta2.meta_key = 'comment_country' ORDER BY $wpdb-&amp;gt;comments.comment_date DESC\";\n\n$comment_info =  $wpdb-&amp;gt;get_results($querystr, OBJECT);\n\necho '&amp;lt;ul&amp;gt;';\n// display the results\nforeach($comment_info as $info) { \necho '&amp;lt;li class=\"commentBox\"&amp;gt;&amp;lt;p&amp;gt;' . $info-&amp;gt;comment_content . '&amp;lt;/p&amp;gt;\n&amp;lt;h6&amp;gt;' . $info-&amp;gt;comment_name . ', ' . $info-&amp;gt;comment_country . '&amp;lt;/h6&amp;gt;&amp;lt;/li&amp;gt;'; \n}\n\necho '&amp;lt;/ul&amp;gt;';\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I basically needed to pass the alias into &lt;code&gt;SELECT&lt;/code&gt; and assign a new alias which I could reference in my loop.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用注释元查询数据库", ["\n\n", "I have a wordpress comment box with 2 custom files, name and country, which get written to the database with the ", "meta_key", " tag as ", "comment_name", " and ", "comment_country", ". What I need to do is display these comments which needs to include the actual comment, as well as the values of the 2 custom fields. I need to query the database as I need to retrieve ALL comments, not just comments for that particular page.", "\n\n", "The code I (kind of) have is:", "\n\n", "<?php \nglobal $wpdb;\n$querystr = \" SELECT comment_content FROM $wpdb->comments INNER JOIN $wpdb->commentmeta ON meta_key = 'comment_name'\";\n$comment_info =  $wpdb->get_results($querystr, OBJECT);\necho '<ul>';\n// display the results\nforeach($comment_info as $info) { \necho '<li class=\"commentBox\"><p>'. $info->comment_content .'</p><h6>'. $info->meta_value .'</h6></li>'; \n}\necho '</ul>';                            \n?>\n", "\n\n", "As you can probably see, I need to get the ", "comment_content", " field which is in ", "wp_comments", ", but also combine that with the ", "meta_value", " of 2 ", "meta_keys", ". I obviously haven't figured out how to try and add the second ", "meta_key", "/value to my code.", "\n\n", "Can anybody help me please as I am at my wits end with this!", "\n\n", "UPDATE:", "\nI can now query the info I need. I had to use aliases so I can query 2 different meta_keys with corresponding values. The code:", "\n\n", "$querystr = \n\" SELECT * FROM $wpdb->comments, $wpdb->commentmeta AS commentmeta1, $wpdb->commentmeta AS commentmeta2 \nWHERE $wpdb->comments.comment_ID = commentmeta1.comment_id \nAND $wpdb->comments.comment_ID = commentmeta2.comment_id \nAND commentmeta1.meta_key = 'comment_name' \nAND commentmeta2.meta_key = 'comment_country' \nORDER BY $wpdb->comments.comment_date DESC\";\n\n$comment_info =  $wpdb->get_results($querystr, OBJECT);\n", "\n\n", "So what I now need to do is reference ", "commentmeta1", " and ", "commentmeta2", " in my loop to output the 2 different values. The code I am using:", "\n\n", "echo '<ul>';\n// display the results\nforeach($comment_info as $info) { \necho '<li class=\"commentBox\"><p>' . $info->comment_content . '</p><h6>' . $info->meta_value['commentmeta1'] . ', ' . $info->meta_value['commentmeta2'] . '</h6></li>'; \n}\necho '</ul>';\n", "\n\n", "The meta values don't output as they should, it basically takes the first letter only of my ", "commentmeta2", " ('comment_country'), and duplicates it for each instance (pic below). If I query only one meta key I can display the value in my loop fine by simply running ", "$info->meta_value", ". How can I simply my meta_values as per my query?", "\n\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "都是复制粘贴，没有满意答案", "Konwledge_Point": "注释", "Question": ["JAVA微信H5支付demo，求详细案例带注释", ["之前没有做过微信支付，在CSDN找了很多案例都没有看明白，", "\n下载后要么是不完整缺少文件，要么是各种原因跑不起来，", "\n要求是传递一个金额值给用户H5页面，用户微信支付。", "\n微信dll306181140，着急在线等，如果能解决问题还可以加分"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;deviation&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; f[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    rmax&amp;#61;rmin&amp;#61;f[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//设最大值&amp;#xff0c;最小值为数组第一个元素 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;size; i&amp;#43;&amp;#43;)\n    {\n        sum&amp;#43;&amp;#61;f[i];&lt;span class=\"hljs-comment\"&gt;//累加数组元素至sum &lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f[i]&amp;gt;rmax)rmax&amp;#61;f[i];&lt;span class=\"hljs-comment\"&gt;//遍历数组找最大值 &lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f[i]&amp;lt;rmin)rmin&amp;#61;f[i];&lt;span class=\"hljs-comment\"&gt;//遍历数组找最小值 &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有问题请回复&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["添加注释C语言求和，方差", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的数据类型不一致啊&amp;#xff0c;a,b,c是double&amp;#xff08;双精度&amp;#xff09;类型&amp;#xff0c;average是float&amp;#xff08;单精度&amp;#xff09;类型&amp;#xff0c;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/998264085746140.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求解一下注释里面的问题", ["为什么定义一个三人成绩求平均数的时候这里开始报错了？但是如果我用int刚开始定义的时候，他就不会报错？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;　　您在Typora中创建的&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;表格代码看起来没有问题&amp;#xff0c;可能是因为Typora的预览模式默认使用Markdown语法渲染&amp;#xff0c;而不是&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;语法渲染&amp;#xff0c;导致&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;表格无法正确显示。可以尝试以下几种方法&amp;#xff1a;\n　　&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.切换为&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;预览模式&amp;#xff1a;在Typora中&amp;#xff0c;可以通过菜单栏中的&amp;#34;View&amp;#34; -&amp;gt; &amp;#34;&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt; Preview&amp;#34; 或者按下快捷键 &amp;#34;Ctrl &amp;#43; Shift &amp;#43; H&amp;#34; 切换为&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;预览模式&amp;#xff0c;这样就可以看到您创建的&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;表格了。\n\n　　&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;.将&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;代码保存为单独的&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;文件并在浏览器中打开&amp;#xff1a;将您创建的&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;表格代码复制到一个新的&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;文件中&amp;#xff0c;并将文件保存在本地。然后在浏览器中打开该文件&amp;#xff0c;即可看到正确显示的表格。\n\n　　&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.使用Markdown语法创建表格&amp;#xff1a;如果您不想切换为&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;预览模式或者保存为&lt;span class=\"hljs-selector-tag\"&gt;HTML&lt;/span&gt;文件&amp;#xff0c;可以使用Markdown语法创建表格&amp;#xff0c;例如&amp;#xff1a;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;|&lt;span class=\"hljs-string\"&gt;Marp官方内置主题&lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;指令为&amp;#xff08;&amp;#xff09;&lt;/span&gt;|\n|&lt;span class=\"hljs-string\"&gt;---&lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;---&lt;/span&gt;|\n|&lt;span class=\"hljs-string\"&gt;Default&amp;#xff08;违约&amp;#xff09;&lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|\n|&lt;span class=\"hljs-string\"&gt;Gaia&amp;#xff08;盖亚&amp;#xff09;&lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|\n|&lt;span class=\"hljs-string\"&gt;Uncover&amp;#xff08;揭&amp;#xff09;&lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样就可以创建一个简单的表格&amp;#xff0c;且在Typora的预览模式下能够正常显示。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Typora创建表格内容被注释", ["Typora中Html创建表格不显示", "\n", "问题代码", "\n", "<", "table", ">", "\n    ", "<", "tr", ">", "\n        ", "<", "th", " ", "colspan", "=", "\"2\"", " ", "align", "=", "\"center\"", ">", "Marp官方内置主题", "</", "th", ">", "\n    ", "</", "tr", ">", "\n    ", "<", "tr", ">", "\n        ", "<", "td", ">", "Default（违约）", "</", "td", ">", "\n        ", "<", "td", ">", "指令为（", "）", "</", "td", ">", "\n    ", "</", "tr", ">", "\n    ", "<", "tr", ">", "\n        ", "<", "td", ">", "Gaia（盖亚）", "</", "td", ">", "\n        ", "<", "td", ">", "    ", "</", "td", ">", "\n    ", "</", "tr", ">", "\n    ", "<", "tr", ">", "\n        ", "<", "td", ">", "Uncover（揭）", "</", "td", ">", "\n        ", "<", "td", ">", "    ", "</", "td", ">", "\n    ", "</", "tr", ">", "\n", "</", "table", ">", "\n\n", "\n", "运行效果", "\n", "Marp官方内置主题", "Default（违约）", "指令为（）", "Gaia（盖亚）", "    ", "Uncover（揭）", "    ", "\n\n", "情况说明", "\n", "单元格内无法显示", "\n", "#操作环境：Windons，Typora 1.5.3-dev"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你后面是继承的C&amp;#xff0c;子类必须要实现父类未实现的方法&amp;#xff0c;但是你要父类中有才能实现&amp;#xff0c;没有的话你就只能自己创建&amp;#xff0c;但是那是属于你自己的方法&amp;#xff0c;就不再是继承的父类得了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求解注释里面的问题！", ["package work1;", "class C{", "    private int age;", "    private String name;", "    public int getAge() {", "        return age;", "    }", "    public void setAge(int age) {", "        this.age = age;", "    }", "    public String getName() {", "        return name;", "    }", "    public void setName(String name) {", "        this.name = name;", "    }", "    public void tell() {", "        System.out.println(\"姓名:\"+getName()+\"年龄 \"+getAge());", "    }", "    public void setScore(int i) {", "    //为什么要在这里还要在加一个这个？我后面不是有写吗？", "\n", "}\n", "public", " ", "void", " ", "say", "(", ") {\n    ", "// 同问，这里问什么还要加这个？我不也在下面写了吗？若果这两个我都不加他就报错？为什么？", "\n    \n}\n", "\n", "}", "class D extends C{", "    private int score;", "\n", "public", " ", "int", " ", "getScore", "(", ")", " {\n    ", "return", " score;\n}\n\n", "public", " ", "void", " ", "setScore", "(", "int", " score", ")", " {\n    ", "this", ".score = score;\n}\n", "public", " ", "void", " ", "say", "(", ")", " {\n    System.", "out", ".println(", "\"成绩:\"", "+getScore());\n}\n", "\n", "}", "public class A5 {", "\n", "public static void main(String[] args) {\n    C c", "=", "new C()", ";", "\n    c.setAge(", "20", ")", ";", "\n     c.setName(", "\"张三\"", ")", ";", "\n    c.setScore(", "100", ")", ";", "\n    c.tell()", ";", "\n     c.say()", ";", "\n", "\n", "}", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What would happen if someone typed this into your textarea.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;some comment');DELETE FROM COMMENTS;--\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If your query to insert the comment were something like &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;INSERT INTO Comments(Title,Comment) VALUES('$title','$comments');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then you would have a problem. the resulting query would be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; INSERT INTO Comments(Title,Comment) VALUES('some title','some comment');DELETE FROM COMMENTS;--'\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or to lay it out in a more readable format&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;INSERT INTO Comments(Title,Comment) VALUES('some title','some comment');\nDELETE FROM COMMENTS;--'\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the --' at the end just creates a comment, to get rid of any extra SQL that would make it not parse properly.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释字段中的sql注入", ["\n\n", "I have a comment form that consists of 2 fields (title and comment). Database contains 3 columns id, title and comment. Comment is displayed based on it's ", "title", " like domain.com/index.php?id=sometitle", "\n\n", "The title field is properly secured for sql injection using mysql_real_escape_string, but comment field which is a textarea is left open without escaping. I can escape it, however i'm wondering what harm can it do to just leave it without using mysql_real_escape_string on that field knowing that title is already escaped and it's how the output is retrieved. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;h1 id=\"h1_报错原因_1655751003442\"&gt;报错原因&lt;/h1&gt;\n&lt;p&gt;首先说一下报错原因&amp;#xff0c;出现&lt;code class=\"language-javascript\"&gt; local variable &amp;#39;xxx&amp;#39; referenced before assignment&lt;/code&gt;出现错误&amp;#xff0c;一般会有两个原因&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;情况一&amp;#xff1a;变量没有被赋值直接引用了&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;hello&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;:\n    print(a)   &lt;span class=\"hljs-comment\"&gt;# 没有给a赋值&amp;#xff0c;不知道a是什么&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;情况二&amp;#xff1a;函数引用全局变量的时候没有声明&lt;/strong&gt;&lt;br /&gt;在函数内&amp;#xff0c;既包含对全局变量的引用&amp;#xff0c;又包含对其的赋值&amp;#xff0c;且赋值放在了引用之后&amp;#xff0c;就会报错。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;money &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;work&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m&lt;/span&gt;):\n   &lt;span class=\"hljs-comment\"&gt;# 引用&lt;/span&gt;\n    h &amp;#61; money &amp;#43; m\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;h的值为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(h))\n    &lt;span class=\"hljs-comment\"&gt;# 赋值&lt;/span&gt;\n    money &amp;#61; h\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;内部money的值&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(money))\n\nwork(&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;项目报错的原因是情况一。你在&lt;code class=\"language-javascript\"&gt;elseif&lt;/code&gt;语句中对变量进行赋值&amp;#xff0c;只有选择了该分支&amp;#xff0c;才会出现变量被赋值的情况&amp;#xff1b;如果没有选择该赋值&amp;#xff0c;则变量没有被赋值&amp;#xff0c;这样直接引用自然会报错了。例如&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-meta\"&gt;# 当走分支 &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; 1 和 &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; 2时&amp;#xff0c;id, name, num等变量都被赋值了&amp;#xff0c;你使用下面的语句自然不会报错&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;goods&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; Goods(id, name, price, num)  &lt;span class=\"hljs-meta\"&gt;# 引用&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 当走分支 &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; 3时&amp;#xff0c;没有对name, price, num, allprice等变量赋值&amp;#xff0c; 这时候&amp;#xff0c;如果直接走分支 &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; choose &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt; 就会立马报错了。&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2 id=\"h2_代码_1655751003470\"&gt;代码&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# class&amp;#xff0c;使用单数概念&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Good&lt;/span&gt;:\n    &lt;span class=\"hljs-comment\"&gt;# allprice 默认参数&amp;#xff0c;只有出售商品列表需要用到该属性&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, name, price, num, allprice&amp;#61;&lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;&lt;/span&gt;):\n        self.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;\n        self.name &amp;#61; name\n        self.price &amp;#61; price\n        self.num &amp;#61; num\n        self.allprice &amp;#61; allprice\n\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MySuperMarket&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, name&lt;/span&gt;):\n        self.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;\n        self.name &amp;#61; name\n        self.allingoods &amp;#61; []  &lt;span class=\"hljs-comment\"&gt;# list类型&lt;/span&gt;\n        self.alloutgoods &amp;#61; []  &lt;span class=\"hljs-comment\"&gt;# list 类型&lt;/span&gt;\n        self.allinvent &amp;#61; {}  &lt;span class=\"hljs-comment\"&gt;# dict类型&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;# 进货&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;ingoods&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, good&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# 添加商品到进货列表&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# 深拷贝&amp;#xff0c;避免后续修改影响记录&lt;/span&gt;\n        mgood &amp;#61; Good(good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, good.name, good.price, good.num)\n        self.allingoods.append(mgood)\n        &lt;span class=\"hljs-comment\"&gt;# 如果进货的商品有库存&amp;#xff0c;修改库存信息&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allinvent.keys():\n            obj &amp;#61; self.allinvent[good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;]\n            obj.price &amp;#61; (obj.price * obj.num &amp;#43; good.price * good.num) / (obj.num &amp;#43; good.num)\n            obj.num &amp;#61; obj.num &amp;#43; good.num\n            self.allinvent[obj.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;] &amp;#61; obj\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# 如果进货的商品无库存&amp;#xff0c;直接添加到库存&lt;/span&gt;\n        self.allinvent[good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;] &amp;#61; good\n\n    &lt;span class=\"hljs-comment\"&gt;# 销售&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;outgoods&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, good&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# 出售商品&amp;#xff0c;则添加商品到出售列表&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# 深拷贝&amp;#xff0c;避免后续修改影响记录&lt;/span&gt;\n        mgood &amp;#61; Good(good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, good.name, good.price, good.num, good.allprice)\n        self.alloutgoods.append(mgood)\n        &lt;span class=\"hljs-comment\"&gt;# 如果进货的商品有库存&amp;#xff0c;且数量足够&amp;#xff0c;则出售&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;# 如果进货商品库存不足&amp;#xff0c;则输出错误信息&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allinvent.keys():\n            obj &amp;#61; self.allinvent[good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;]\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; good.num &amp;lt;&amp;#61; obj.num:\n                obj.num &amp;#61; obj.num - good.num\n                self.allinvent[obj.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;] &amp;#61; obj\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;库存数量不足&amp;#xff01;清重新输入&amp;#34;&lt;/span&gt;)\n                good.num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请重新输入商品的数量&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n                obj.num &amp;#61; obj.num - good.num\n\n    &lt;span class=\"hljs-comment\"&gt;# 查找库存商品信息&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;allinventlook&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, goods&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; goods.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allinvent.keys():\n            obj &amp;#61; self.allinvent[goods.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;]\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;名称&amp;#xff1a;%s, 单价&amp;#xff1a;%.2f, 数量&amp;#xff1a;%d&amp;#34;&lt;/span&gt; % (obj.name, obj.price, obj.num))\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;查找的商品无库存&amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-comment\"&gt;# 查找销售记录&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 同一类商品可能存在多条销售记录&amp;#xff0c;所以添加换行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;outlook&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, good&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# 增加一个变量&amp;#xff0c;记录是否查找到记录&lt;/span&gt;\n        isfound &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; obj &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.alloutgoods:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61;&amp;#61; obj.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;名称&amp;#xff1a;%s, 单价&amp;#xff1a;%.2f, 数量&amp;#xff1a;%d 总价&amp;#xff1a;%.2f&amp;#34;&lt;/span&gt;\n                      % (obj.name, obj.price, obj.num, obj.allprice))\n                &lt;span class=\"hljs-comment\"&gt;# 找到记录&amp;#xff0c;赋值为True&lt;/span&gt;\n                isfound &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;# 没有找到记录&amp;#xff0c;则输出提示信息&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; isfound:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;查找的商品无出售记录&amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-comment\"&gt;# 查找进货记录&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 同一类商品可能存在多条进货记录&amp;#xff0c;所以添加换行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;inlook&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, good&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;# 增加一个变量&amp;#xff0c;记录是否查找到记录&lt;/span&gt;\n        isfound &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; obj &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allingoods:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; obj.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61;&amp;#61; good.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;名称&amp;#xff1a;%s, 单价&amp;#xff1a;%.2f, 数量&amp;#xff1a;%d&amp;#34;&lt;/span&gt; % (obj.name, obj.price, obj.num))\n                &lt;span class=\"hljs-comment\"&gt;# 找到记录&amp;#xff0c;赋值为True&lt;/span&gt;\n                isfound &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; isfound:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;查找的商品无进货记录&amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;mainmenu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;global&lt;/span&gt; allprice\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; &amp;#43; self.name &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1. 购进      2. 销售&amp;#34;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3. 查询      0. 退出&amp;#34;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;)\n            sele &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择(0:退出&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; sele &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allingoods:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(v.name, v.price, v.num)\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allinvent.values():\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(v.name, v.price, v.num, sep&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;谢谢使用...&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;# 进货&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入购进的商品ID:&amp;#34;&lt;/span&gt;)\n                name &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入购进的商品名称&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n                price &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入商品单价&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n                num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入商品数量&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n                goods &amp;#61; Good(&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, name, price, num)\n                self.ingoods(goods)\n            &lt;span class=\"hljs-comment\"&gt;# 销售&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入销售商品的ID&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n                name &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入销售商品的名称&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n                num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入销售商品的数量&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n                price &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入销售商品的单价&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n                allprice &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;# 根据仓库的数据&amp;#xff0c;计算总成本&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; e &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.allinvent:\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; e.&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;:\n                        allprice &amp;#61; e.price * e.num\n\n                goods &amp;#61; Good(&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, name, price, num, allprice)\n                self.outgoods(goods)\n            &lt;span class=\"hljs-comment\"&gt;# 擦找&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; sele &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;查找类型&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A. 查找库存商品      B.查找销售商品      C.查找进货商品&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;)\n                choose &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择(#:退出&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要查询的库存商品的ID&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; choose &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;:\n                    goods &amp;#61; Good(&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    self.allinventlook(goods)\n                &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; choose &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#34;&lt;/span&gt;:\n                    goods &amp;#61; Good(&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    self.outlook(goods)\n                &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; choose &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;C&amp;#34;&lt;/span&gt;:\n                    goods &amp;#61; Good(&lt;span class=\"hljs-built_in\"&gt;id&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    self.inlook(goods)\n\n&lt;span class=\"hljs-comment\"&gt;# 按间距中的绿色按钮以运行脚本。&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    supermarket &amp;#61; MySuperMarket(&lt;span class=\"hljs-string\"&gt;&amp;#34;001&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;道奇超市&amp;#34;&lt;/span&gt;)\n    supermarket.mainmenu()\n\n&lt;span class=\"hljs-comment\"&gt;# 访问 https://www.jetbrains.com/help/pycharm/ 获取 PyCharm 帮助&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注释比较全了&amp;#xff0c;如果有看不懂的&amp;#xff0c;请提问。&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;有用&amp;#xff0c;请点个采纳吧&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请帮我完善下列代码，完善内容希望有一些注释。", ["报错内容Traceback (most recent call last):", "  File \"C:/Users/heliun/PycharmProjects/pythonProject/14.py\", line 117, in ", "    supermarket.mainmenu()", "  File \"C:/Users/heliun/PycharmProjects/pythonProject/14.py\", line 86, in mainmenu", "    goods = Goods(id, name, price, num,allprice)", "UnboundLocalError: local variable 'allprice' referenced before assignment", "具体代码：class Goods:", "    def ", "init", "(self,id,name,price,num):", "        self.id=id", "        self.name=name", "        self.price=price", "        self.num=num", "\n", "class MySuperMarket:", "    def  ", "init", "(self,id,name):", "        self.id=id", "        self.name=name", "        self.allingoods=[]", "        self.alloutgoods=[]", "        self.allinvent={}", "\n", "def", " ", "ingoods", "(", "self, goods", "):\n    ", "dict", " = {}\n    ", "dict", "[goods.", "id", "] = goods\n    self.allingoods.append(", "dict", ")\n    ", "if", " goods.", "id", " ", "in", " self.allinvent.keys():\n        ", "object", " = self.allinvent[goods.", "id", "]\n        ", "object", ".price = (", "object", ".price * ", "object", ".num + goods.price * goods.num) / (", "object", ".num + goods.num)\n        ", "object", ".num = ", "object", ".num + goods.num\n        self.allinvent[", "object", ".", "id", "] =", "object", "\n        ", "return", " ", "1", "\n    inventgoods=Goods(goods.", "id", ",goods.name,goods.price,goods.num)\n    self.allinvent[inventgoods.", "id", "] = inventgoods\n", "def", " ", "outgoods", "(", "self,goods", "):\n    ", "dict", "={}\n    ", "dict", "[goods.", "id", "]=goods\n    self.alloutgoods.append(", "dict", ")\n    ", "if", " goods.", "id", " ", "in", " self.allinvent.keys():\n\n        ", "if", " goods.num<=", "object", ".num:\n            ", "object", ".num=", "object", ".num-goods.num\n            self.allinvent[", "object", ".", "id", "]=", "object", "\n        ", "else", " :\n            ", "print", "(", "\"库存数量不足！清重新输入\"", ")\n            goods.num=", "int", "(", "input", "(", "\"请重新输入商品的数量：\"", "))\n            ", "object", ".num = ", "object", ".num - goods.num\n", "def", " ", "allinventlook", "(", "self,goods", "):\n    ", "if", " goods.", "id", " ", "in", " self.allinvent.keys():\n        self.allinvent[", "object", ".", "id", "] = ", "object", "\n", "def", " ", "outlook", "(", "self,goods", "):\n    ", "if", " goods.", "id", " ", "in", " self.allinvent.keys():\n        self.allinvent[", "object", ".", "id", "] = ", "object", "\n\n", "def", " ", "inlook", "(", "self, goods", "):\n    ", "if", " goods.", "id", " ", "in", " self.allinvent.keys():\n        self.allinvent[", "object", ".", "id", "] = ", "object", "\n\n", "def", " ", "mainmenu", "(", "self", "):\n    ", "while", " ", "True", ":\n        ", "print", "(", "\"*\"", "*", "8", "+self.name+", "\"*\"", "*", "8", ")\n        ", "print", "(", "\"1. 购进      2. 销售\"", ")\n        ", "print", "(", "\"3. 查询      0. 退出\"", ")\n        ", "print", "(", "\"*\"", "*", "22", ")\n        sele=", "int", "(", "input", "(", "\"请输入您的选择(0:退出）：\"", "))\n        ", "if", " sele==", "0", ":\n            ", "for", " k ", "in", " self.allingoods:\n                ", "for", " v ", "in", " k.values():\n                    ", "print", "(v.name,v.price,v.num)\n            ", "for", " v ", "in", " self.allinvent.values():\n                ", "print", "(v.name,v.price,v.num,sep=", "\"  \"", ")\n            ", "print", "(", "\"谢谢使用...\"", ")\n            ", "return", " ", "1", "\n        ", "elif", " sele==", "1", ":\n            ", "id", "=", "input", "(", "\"请输入购进的商品ID:\"", ")\n            name=", "input", "(", "\"请输入购进的商品名称：\"", ")\n            price=", "float", "(", "input", "(", "\"请输入商品单价：\"", "))\n            num=", "float", "(", "input", "(", "\"请输入商品数量：\"", "))\n            goods = Goods(", "id", ",name, price,num)\n            self.ingoods(goods)\n        ", "elif", " sele==", "2", ":\n            ", "id", "=", "input", "(", "\"请输入销售商品的ID：\"", ")\n            name=", "input", "(", "\"请输入销售商品的名称：\"", ")\n            num= ", "int", "(", "input", "(", "\"请输入销售商品的数量：\"", "))\n            price= ", "int", "(", "input", "(", "\"请输入销售商品的单价：\"", "))\n            ", "for", " a ", "in", " self.alloutgoods:\n                ", "for", " b ", "in", " i.values():\n                    ", "if", " b.", "id", " == ", "id", ":\n                        allprice = b.price * b.num\n\n            goods = Goods(", "id", ", name, price, num,allprice)\n            self.outgoods(goods)\n        ", "elif", " sele==", "3", ":\n            ", "print", "(", "\"*\"", " * ", "8", " + ", "\"查找类型\"", "  +  ", "\"*\"", " * ", "8", ")\n            ", "print", "(", "\"A. 查找库存商品      B.查找销售商品      Ｃ.查找进货商品\"", ")\n            ", "print", "(", "\"*\"", " * ", "22", ")\n            choose =", "input", "(", "\"请输入您的选择(#:退出）：\"", ")\n            ", "id", " = ", "input", "(", "\"请输入需要查询的库存商品的ID：\"", ")\n            ", "if", " choose==", "\"A\"", ":\n                goods = Goods(", "id", ", name, price, num, allprice)\n                ", "for", " c ", "in", " self.allinvent:\n                    ", "for", " d ", "in", " d.values():\n                        ", "print", "(", "\"名称：d.name\"", "+", "\"单价：d.price\"", "+", "\"数量：d.num\"", ")\n            ", "elif", " choose == ", "\"Ｂ\"", ":\n                goods = Goods(", "id", ", name, price, num, allprice)\n                ", "for", " e ", "in", " self.allinvent:\n                    ", "for", " f ", "in", " b.values():\n                        ", "print", "(", "\"名称：f.name\"", " + ", "\"单价：f.price\"", " + ", "\"数量：f.num\"", "+", "\"总价：f.allprice\"", ")\n            ", "elif", " choose == ", "\"Ｃ\"", ":\n                goods = Goods(", "id", ", name, price, num)\n                ", "for", " c ", "in", " self.allinvent:\n                    ", "for", " d ", "in", " d.values():\n                        ", "print", "(", "\"名称：d.name\"", " + ", "\"单价：d.price\"", " + ", "\"数量：d.num\"", ")\n", "\n", "#主模块", "supermarket=MySuperMarket(\"001\",\"道奇超市\")", "supermarket.mainmenu()"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;As per my comment, the issue you are facing is that in each iteration in the &lt;code&gt;while&lt;/code&gt; loop, you are &lt;strong&gt;overwriting &lt;code&gt;$newrow['comments']&lt;/code&gt;&lt;/strong&gt;. Therefore, you will only get a single value at the end of the loop, and it will be the final value it encounters in the while loop.&lt;/p&gt;\n\n&lt;p&gt;What you want is actually to append your comment to it, using the &lt;a href=\"http://php.net/manual/en/language.types.array.php\" rel=\"nofollow noreferrer\"&gt;square bracket syntax of PHP arrays&lt;/a&gt; (i.e. by appending &lt;code&gt;[]&lt;/code&gt;).&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;This is done by assigning values to the array, specifying the key in brackets. The key can also be omitted, resulting in an empty pair of brackets (&lt;code&gt;[]&lt;/code&gt;).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$arr[key] = value;\n$arr[] = value;\n// key may be an integer or string\n// value may be any value of any type\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;If $arr doesn't exist yet, it will be created,&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That means doing this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while($com = mysqli_fetch_assoc($comments)) {\n    $newrow['comments'][] = $com;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释数组/循环不循环", ["\n\n", "I'm trying to loop all the comments from the ", "$feed", " while loop, however, its only displaying one comment, what am I doing wrong? If I remove the name, they loop.", "\nHow can I name the comment while loop? I think that may solve my problem. Below is my current code", "\n\n", "$rows = array();\nwhile($feed = mysqli_fetch_assoc($sth)) {\n        $query_ppimage = \"SELECT id, post_id, relation, userID, file_format FROM media WHERE userID = '\".$feed['userID'].\"' AND relation = 'profile_picture' UNION ALL SELECT -1 id, '55529055162cf' post_id, 'profile_picture' relation, '0' userID, 'jpg' file_format ORDER BY id DESC LIMIT 1\";\n        $qppimg = $conn->query($query_ppimage);\n        while($ppimg = mysqli_fetch_assoc($qppimg)) {\n        $newrow = $feed;\n        if($feed['relation'] == 'page'){\n            $query_type = \"SELECT name as 'page_name' FROM pages WHERE id = '\".$feed['relation_id'].\"'\";\n            $typeload = $conn->query($query_type);\n            while($type = mysqli_fetch_assoc($typeload)) {\n            $newrow['postto'] = $type;\n            }\n        }\n            $newrow['ppimage'] = $ppimg;\n        }\n        $comment_load = \"SELECT * FROM media_comments WHERE post_id = '\".$feed['post_id'].\"'\";\n        $comments = $conn->query($comment_load);\n        while($com = mysqli_fetch_assoc($comments)) {   \n            $newrow['comments'] = $com; \n        }       \n$rows[] = $newrow;      \n}\nprint json_encode($rows);\n", "\n\n\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;TLDR; It's a free matter&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;PHP coding standards differ on this. The best I can suggest is to pick a coding standard you like and run PHP CodeSniffer (&lt;a href=\"https://github.com/squizlabs/PHP_CodeSniffer\" rel=\"nofollow\"&gt;https://github.com/squizlabs/PHP_CodeSniffer&lt;/a&gt;) against it and see what it suggest. Some coding standards require they be in a specific order and a specific spacing to your docblock annotations. Others are more relaxed and make no suggestions about docblock annotations what-so-ever.&lt;/p&gt;\n\n&lt;p&gt;To get PHP Code Sniffer:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar\n$ php phpcs.phar -h\n$ php phpcs.phar --standard=[STANDARD_CHOICE] /path/to/project\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Some coding standards you might want to consider:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.php-fig.org/psr/psr-2/\" rel=\"nofollow\"&gt;http://www.php-fig.org/psr/psr-2/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://framework.zend.com/manual/1.12/en/coding-standard.coding-style.html\" rel=\"nofollow\"&gt;http://framework.zend.com/manual/1.12/en/coding-standard.coding-style.html&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://pear.php.net/manual/en/rfc.header-comments.php\" rel=\"nofollow\"&gt;http://pear.php.net/manual/en/rfc.header-comments.php&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you're worried about a document generators (like &lt;a href=\"http://phpdoc.org/docs/latest/index.html\" rel=\"nofollow\"&gt;phpDocumentor&lt;/a&gt;) not being able to parse the docblock annotations, you can always check what annotations they support. I've never had a problem with phpDocumentor complaining about the ordering or formatting though.&lt;/p&gt;\n\n&lt;p&gt;As for custom annotations being used by libraries such as &lt;a href=\"http://doctrine-common.readthedocs.org/en/latest/reference/annotations.html\" rel=\"nofollow\"&gt;Doctrine&lt;/a&gt;, &lt;a href=\"http://symfony.com/blog/symfony2-annotations-gets-better\" rel=\"nofollow\"&gt;Symfony&lt;/a&gt; and &lt;a href=\"https://phpunit.de/manual/current/en/appendixes.annotations.html\" rel=\"nofollow\"&gt;PHPUnit&lt;/a&gt;, I've also never noticed the order having an impact on the parsing and processing.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP中注释顺序的建议", ["\n\n", "I currently use such order of annotations:", "\n\n", "Code 1:", "\n\n", "/**\n * sets elements for main (top), secondary (sub1) level and tertiary (sub2) level;\n * prevents sharing of content with previous instances\n *\n * @param string $TopElement\n * @param string $SubElement1\n * @param string $SubElement2\n *\n * @return void\n *\n * @throws MarC_Exception if top element was not set\n * @throws MarC_Exception if sub1 element was not set\n * @throws MarC_Exception if sub2 element was not set\n * @throws MarC_Exception if all elements were set the same\n */\npublic function __construct($TopElement=\"\", $SubElement1=\"\", $SubElement2=\"\")\n{\n ...\n}\n", "\n\n", "Code 2:", "\n\n", "/**\n * elements used for creation of code\n *\n * @static\n * @var array\n */\nprotected $Elements = array();\n", "\n\n", "Code 3:", "\n\n", "/**\n * @package ...\n *\n * @author ...\n * @copyright ...\n *\n * @license ...\n *\n * generation of advanced select menu\n */\n", "\n\n", "At this time i don't use all annotations (probably all I use you can see in codes above).", "\n\n", "And I wonder if in php is any suggested (preffered) order of annotations - or it is free matter of programmer (and then this question will be useless).", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I don't think its a great idea to store front end/public information in a docblock comment, its very unwieldy as you're discovering and not very intuitive for other developers who come along after you. Comments should be kept for documentation and meta information about the internal workings of the system. &lt;/p&gt;\n\n&lt;p&gt;To store information like that you should either use a database, some kind of class variable or an external configuration/language file. An even better alternative is some kind of templating library to handle things like page titles &amp;amp; view loading, which you can then call from the controller method and define the information there.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["我该如何对待注释？", ["\n\n", "I use custom MVC framework. I want to use annotations above action to display title in view like:", "\n\n", "class controller {\n    /**\n    * @title = some title\n    */\n    public function action(){\n    }\n}\n", "\n\n", "To do this I use ", "ReflectionMethod::getDocComment", " and then parse comment using simple Regex, make ", "title", " as global variable and use it in my view. Of course, this is a solution but really bad one because in future I may need to use annotations not just for defining titles (for example, to define rules in models. Like Symphony does).", "\n\n", "My problem is that I have no idea where to save metadata.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have to declare it inside page.php. See the following code. It works in PHPStorm.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n/**\n * @var User $user\n * @var Account $account\n */\n?&amp;gt;\n&amp;lt;h1&amp;gt;&amp;lt;?= $user-&amp;gt;name ?&amp;gt;&amp;lt;/h1&amp;gt;\n&amp;lt;p&amp;gt;Balance: &amp;lt;?= $account-&amp;gt;balance ?&amp;gt;&amp;lt;/p&amp;gt; etc\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["输入未声明变量的注释", ["\n\n", "I've inherited a project that uses a home-made templating system, which works like this:", "\n\n", "# main code\n\ninclude_template('page.php', array('user' => $user, 'account' => $account));\n\n# template 'engine'\n\nfunction include_template($path, $vars) {\n    extract($vars);\n    include $path;\n}\n", "\n\n", "and the template \"page.php\" is an ordinary php/html file, e.g.:", "\n\n", " <h1><?= $user->name ?></h1>\n <p>Balance: <?= $account->balance ?></p> etc\n", "\n\n", "The variables that are passed to ", "include_template", " are visible in ", "page.php", " because of ", "extract", ", but the IDE (phpstorm) has no clue about them, so it highlights them as undefined and doesn't provide autocompletion etc. Is there a way to annotate an undeclared variable in ", "page.php", " (a \"bare\" php/html file), so that the IDE can see it?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; ClassWork.&lt;span class=\"hljs-property\"&gt;exam&lt;/span&gt;; \n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.&lt;span class=\"hljs-property\"&gt;io&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Serializable&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 导包&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * 创建Date类 实现 Serializable序列化接口\n *\n */&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt; implements Serializable {\n    &lt;span class=\"hljs-comment\"&gt;// 定义int整型变量 year month day&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 构造方法调用有参构造\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Date&lt;/span&gt;() {\n        &lt;span class=\"hljs-title function_\"&gt;this&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 有参构造调用全参构造\n     * \n     * &amp;#64;param month\n     * &amp;#64;param day\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Date&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;) {\n        &lt;span class=\"hljs-title function_\"&gt;this&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1900&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 全参构造\n     * \n     * &amp;#64;param month\n     * &amp;#64;param day\n     * &amp;#64;param year\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Date&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;year&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;year&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;month&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;month&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;day&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;day&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 为每个变量做get方法\n     * \n     * &amp;#64;return\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getDay&lt;/span&gt;() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;day&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getMonth&lt;/span&gt;() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;month&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getYear&lt;/span&gt;() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;year&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 重写object的tostring方法\n     */&lt;/span&gt;\n    &amp;#64;Override\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;toString&lt;/span&gt;() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;year&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;month&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;day&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["明天考试了 真的真的很需要注释才能背下来  很多基础的都不会希望注释详细点。。。", ["package ClassWork.exam;", "\n", "import java.io.Serializable;", "\n", "public class Date implements Serializable {", "    int year;", "    int month;", "    int day;", "\n", "public", " Date() {\n    ", "this", "(", "1", ", ", "1", ");\n}\n\n", "public", " Date(int month, int day) {\n    ", "this", "(month, day, ", "1900", ");\n}\n\n", "public", " Date(int month, int day, int year) {\n    ", "this", ".year = year;\n    ", "this", ".month = month;\n    ", "this", ".day = day;\n}\n\n", "public", " int getDay() {\n    ", "return", " ", "this", ".day;\n}\n\n", "public", " int getMonth() {\n    ", "return", " ", "this", ".month;\n}\n\n", "public", " int getYear() {\n    ", "return", " ", "this", ".year;\n}\n\n", "@Override", "\n", "public", " String toString() {\n    ", "return", " ", "this", ".year + ", "\"-\"", " + ", "this", ".month + ", "\"-\"", " + ", "this", ".day;\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;试验可用&amp;#xff01;有疑问追问&amp;#xff0c;没问题采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; LEN 10   &lt;span class=\"hljs-comment\"&gt;//设置每行长度&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ROW 2    &lt;span class=\"hljs-comment\"&gt;//设置行数&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count[ROW] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };  &lt;span class=\"hljs-comment\"&gt;//用来记录每行出现o的数量&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; arr[ROW][LEN] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };  &lt;span class=\"hljs-comment\"&gt;//定义一个字符二维数组用来存放输入的字符串&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;ROW;j&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &amp;amp;arr[j]);  &lt;span class=\"hljs-comment\"&gt;// 按 空格 区分字符串&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; ROW; j&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; LEN; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j][i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j][i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;)\n                {\n                    count[j] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//统计出现l且下一个字符是p时  增加 4个o&lt;/span&gt;\n                    i&amp;#43;&amp;#43;; &lt;span class=\"hljs-comment\"&gt;//跳过下一个p&lt;/span&gt;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    count[j]&amp;#43;&amp;#43;;\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j][i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;)\n            {\n                count[j]&amp;#43;&amp;#43;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j][i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;)\n            {\n                count[j]&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j][i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, count[j]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/580969074236159.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["运用C语言解决，最好有注释", ["loop他只有两个o，他想让自己的o变得多一点，所以他去学了一种魔法，现在的他可以把l变成一个o，把p变成两个o，把lp变成4个o。", "\n", "o变多了的loop依旧很菜，他不知道他最多能有多少o，你能帮他算出来吗？", "\n", "Input", "多组输入，每行一个只包含l，o，p的字符串，每行长度不超过1e4。", "\n", "Output", "每行字符串输出一行代表该字符串最多能有多少o", "\n", "SampleInput", "loop", "lpoo", "SampleOutput", "5", "6"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/787787682646113.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/792497682646150.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n \n&lt;span class=\"hljs-comment\"&gt;//在main函数中创建一个文件&amp;#xff0c;将键盘输入的字符串写入文件中。打开该文件&amp;#xff0c;读出字符串。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//将字符串从指定下标p处开始的前q个字符&amp;#xff08;包括p处字符&amp;#xff0c;q≤p&amp;#43;1&amp;#xff09;复制到字符串的结尾&amp;#xff0c;形成的新串保存到另一个文件中。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//比如&amp;#xff0c;abcdefg&amp;#xff0c;从下标3处开始的前2个字符复制到字符串的结尾&amp;#xff0c;得新串&amp;#xff1a;abcdecd。要求&amp;#xff1a;p和q均由键盘输入。&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;pragma&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;warning&lt;/span&gt;(disable:4996) &lt;span class=\"hljs-comment\"&gt;//开头加这句或项目、属性、配置属性、C/C&amp;#43;&amp;#43;、预处理器、预处理器定义中添加“_CRT_SECURE_NO_WARNINGS”&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    FILE *f;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; t[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p,q;\n \n    f&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(s,&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;,stdin);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;&amp;#61;&amp;#61;s[&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]) s[&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(f,&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(f);\n    f&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(s,&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;,f);\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(f);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\ninput p(0&amp;lt;&amp;#61;p&amp;lt;&amp;#61;%d) q(1&amp;lt;&amp;#61;q&amp;lt;&amp;#61;p&amp;#43;1):&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdout);\n        &lt;span class=\"hljs-built_in\"&gt;rewind&lt;/span&gt;(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;p,&amp;amp;q)) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;lt;&amp;#61;p &amp;amp;&amp;amp; p&amp;lt;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;lt;&amp;#61;q &amp;amp;&amp;amp; q&amp;lt;&amp;#61;p&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;strncpy&lt;/span&gt;(t,s,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)-q);\n    t[&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)-q]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;strncat&lt;/span&gt;(t,s&amp;#43;p-q&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,q);\n    f&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;b.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(f,&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,t);\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(f);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//d:\\test&amp;gt;test.exe&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//abcdefg&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//abcdefg&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//input p(0&amp;lt;&amp;#61;p&amp;lt;&amp;#61;6) q(1&amp;lt;&amp;#61;q&amp;lt;&amp;#61;p&amp;#43;1):3 2&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//d:\\test&amp;gt;type a.txt&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//abcdefg&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//d:\\test&amp;gt;type b.txt&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//abcdecd&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//d:\\test&amp;gt;&lt;/span&gt;\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["c语言文件题，最好有注释", ["在main函数中创建一个文件，将键盘输入的字符串写入文件中。打开该文件，读出字符串。将字符串从指定下标p处开始的前q个字符（包括p处字符，q≤p+1）复制到字符串的结尾，形成的新串保存到另一个文件中。比如，abcdefg，从下标3处开始的前2个字符复制到字符串的结尾，得新串：abcdecd。要求：p和q均由键盘输入。#include <stdio.h>#include <string.h>#include <stdlib.h>int main(){    FILE *fp;        char s[110], t[110];          int p, q;    if ((fp = fopen(\"D:\\a.txt\", \"w\")) == NULL)    {        printf(\"Create file error\\n\");        exit(0);    }        fgets(s,110,stdin);    fprintf(fp,\"%s\",s);    fclose(fp);    if ((fp = fopen(\"D:\\a.txt\", \"r\")) == NULL)    {        printf(\"Open file error\\n\");        exit(0);    }    fgets(s,110,fp);    fclose(fp);    printf(\"%s\",s);           fscanf(fp, \"%s%d%d\", s, &p, &q);    strncpy(t,s+p,q);     if ((fp = fopen(\"D:\\b.txt\", \"w\")) == NULL)    {        printf(\"Create file error\\n\");        exit(0);    }    fprintf(fp, \"%s\", t);    fclose(fp);    return 0;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; M[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; }, N, b, i;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;N) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; N !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//输入金额为0时&amp;#xff0c;结束输入&lt;/span&gt;\n    { \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; N !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//直到余数为零 &lt;/span&gt;\n        {\n            b &amp;#43;&amp;#61; N / M[i];&lt;span class=\"hljs-comment\"&gt;//从100元面额开始&amp;#xff0c;先除以100&amp;#xff0c;得到商, 将所有商加起来。 &lt;/span&gt;\n            N %&amp;#61; M[i];   &lt;span class=\"hljs-comment\"&gt;//除以100&amp;#xff0c;得到余数。。。 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, b);&lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["运用C语言解答，最好附上注释", [" 前段时间，小x买了个钱包，结果买完就没钱放了，一气之下将钱包搁置箱底，常常忘记带出来。但是没有钱包的话，纸币放在口袋里很不方便，容易乱，也不容易掉，所以每次有买什么东西的时候，他都会让收银员找给他最少张数的纸币。收银员忙于找零，经常没法顾及这个问题，", "    正如我们所知，纸币面值一般有1元，5元，10元，20元，50元，100元。", "\n", "Input", "输入包含多组数据。", "输入第一行包含一个整数N，表示要找的零钱总额。", "\n", "Output", "每次输出一个整数表示答案", "\n", "SampleInput", "75", "13", "SampleOutput", "3", "4"]], "Tag": "程序设计"}
{"Answer": "IF(ENABLED = '1') THEN--初始化\r\nFINISHED &lt;= '0';\r\nOFS &lt;= '0';\r\nCFS &lt;= '0';\r\nZFS &lt;= '0';\r\nSFS &lt;= '0';\r\nint_A := CONV_INTEGER(A);\r\nint_B := CONV_INTEGER(B);\r\nCASE OP IS --选择功能\r\nWHEN \"0000\" =&gt; --ADD\r\nY &lt;= A+B;\r\n\r\nif(A(15)='0' and B(15)='0' and Y(15)='1') then OFS &lt;= '1'; end if;--溢出\r\nif(A(15)='1' and B(15)='1' and Y(15)='0') then OFS &lt;= '1'; CFS&lt;='1'; end if;--溢出 进位\r\nif(Y = \"0000000000000000\") then ZFS &lt;= '1'; end if;--为零\r\nif(Y(15) = '1') then SFS &lt;= '1'; end if;--为负数\r\nFINISHED &lt;= '1';\r\nWHEN \"0001\" =&gt; --SUB\r\nint_Y := int_A - int_B;\r\nif(int_Y = 0) then ZFS &lt;= '1'; end if;\r\nif(int_Y &lt; 0) then SFS &lt;= '1'; end if;\r\nY &lt;= CONV_STD_LOGIC_VECTOR(int_Y,16);\r\nFINISHED &lt;= '1';\r\nWHEN \"0010\" =&gt; --AND\r\nY &lt;= (A AND B);\r\nif(CONV_INTEGER(Y) = 0) then ZFS &lt;= '1'; end if;\r\nif(CONV_INTEGER(Y) &lt; 0) then SFS &lt;= '1'; end if;\r\nFINISHED &lt;= '1';\r\nWHEN \"0011\" =&gt; --OR\r\nY &lt;= A OR B;\r\nFINISHED &lt;= '1';\r\nWHEN \"0100\" =&gt; --XOR\r\nY &lt;= A XOR B;\r\nFINISHED &lt;= '1';\r\nWHEN \"0101\" =&gt; --NOT\r\nY &lt;= NOT A;\r\nFINISHED &lt;= '1';\r\nWHEN \"0110\" =&gt; --SLL最高位丢失，最低位补0\r\nif(B(3 downto 0) = \"0000\") then\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SLL CONV_INTEGER(B(3 downto 0)));\r\nelse\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SLL 1);\r\nend if;\r\nFINISHED &lt;= '1';\r\nWHEN \"0111\" =&gt; --SLA\r\nif(B(3 downto 0) = \"0000\") then\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SLA CONV_INTEGER(B(3 downto 0)));\r\nelse\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SLA 1);\r\nend if;\r\nFINISHED &lt;= '1';\r\nWHEN \"1000\" =&gt; --SRL\r\nif(B(3 downto 0) = \"0000\") then\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SRL CONV_INTEGER(B(3 downto 0)));\r\nelse\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SRL 1);\r\nend if;\r\nFINISHED &lt;= '1';\r\nWHEN \"1001\" =&gt; --SRA\r\nif(B(3 downto 0) = \"0000\") then\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SRA CONV_INTEGER(B(3 downto 0)));\r\nelse\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) SRA 1);\r\nend if;\r\nFINISHED &lt;= '1';\r\nWHEN \"1010\" =&gt; --ROL\r\nif(B(3 downto 0) = \"0000\") then\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) ROL CONV_INTEGER(B(3 downto 0)));\r\nelse\r\nY &lt;= TO_STDLOGICVECTOR(To_bitvector(A) ROL 1);\r\nend if;\r\nFINISHED &lt;= '1';", "Konwledge_Point": "注释", "Question": ["VHDL，ISE设计16位运算器，求代码注释？", ["library IEEE;", "\nuse IEEE.STD_LOGIC_1164.ALL;", "\nuse IEEE.STD_LOGIC_UNSIGNED.ALL;", "\nuse IEEE.STD_LOGIC_ARITH.ALL;", "\n-- Uncomment the following library declaration if using", "\n-- arithmetic functions with Signed or Unsigned values", "\n--use IEEE.NUMERIC_STD.ALL;", "\n-- Uncomment the following library declaration if instantiating", "\n-- any Xilinx primitives in this code.", "\n--library UNISIM;", "\n--use UNISIM.VComponents.all;", "\nentity ALU is", "\nPort ( A : in STD_LOGIC_VECTOR(15 downto 0);", "\nB : in STD_LOGIC_VECTOR(15 downto 0);", "\nY : inout STD_LOGIC_VECTOR(15 downto 0);", "\nFINISHED : inout STD_LOGIC :='0';", "\nENABLED : in STD_LOGIC;", "\nOP : in STD_LOGIC_VECTOR(3 downto 0);", "\nOFS : out STD_LOGIC;", "\nCFS : out STD_LOGIC;", "\nZFS : out STD_LOGIC;", "\nSFS : out STD_LOGIC);", "\nend ALU;", "\narchitecture Behavioral of ALU is", "\nbegin", "\nPROCESS(ENABLED)", "\nVARIABLE temp : STD_LOGIC;", "\nVARIABLE vec_15 : STD_LOGIC_VECTOR(14 DOWNTO 0);", "\nVARIABLE int_A, int_B, int_Y : INTEGER RANGE 0 TO 65535;", "\nBEGIN", "\nIF(ENABLED = '1') THEN", "\nFINISHED <= '0';", "\nOFS <= '0';", "\nCFS <= '0';", "\nZFS <= '0';", "\nSFS <= '0';", "\nint_A := CONV_INTEGER(A);", "\nint_B := CONV_INTEGER(B);", "\nCASE OP IS", "\nWHEN \"0000\" => --ADD", "\nY <= A+B;", "\n--int_Y := int_A + int_B;", "\n--Y <= CONV_STD_LOGIC_VECTOR(int_Y,16);", "\nif(A(15)='0' and B(15)='0' and Y(15)='1') then OFS <= '1'; end if;", "\nif(A(15)='1' and B(15)='1' and Y(15)='0') then OFS <= '1'; CFS<='1'; end if;", "\nif(Y = \"0000000000000000\") then ZFS <= '1'; end if;", "\nif(Y(15) = '1') then SFS <= '1'; end if;", "\nFINISHED <= '1';", "\nWHEN \"0001\" => --SUB", "\nint_Y := int_A - int_B;", "\nif(int_Y = 0) then ZFS <= '1'; end if;", "\nif(int_Y < 0) then SFS <= '1'; end if;", "\nY <= CONV_STD_LOGIC_VECTOR(int_Y,16);", "\nFINISHED <= '1';", "\nWHEN \"0010\" => --AND", "\nY <= (A AND B);", "\nif(CONV_INTEGER(Y) = 0) then ZFS <= '1'; end if;", "\nif(CONV_INTEGER(Y) < 0) then SFS <= '1'; end if;", "\nFINISHED <= '1';", "\nWHEN \"0011\" => --OR", "\nY <= A OR B;", "\nFINISHED <= '1';", "\nWHEN \"0100\" => --XOR", "\nY <= A XOR B;", "\nFINISHED <= '1';", "\nWHEN \"0101\" => --NOT", "\nY <= NOT A;", "\nFINISHED <= '1';", "\nWHEN \"0110\" => --SLL", "\nif(B(3 downto 0) = \"0000\") then", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SLL CONV_INTEGER(B(3 downto 0)));", "\nelse", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SLL 1);", "\nend if;", "\nFINISHED <= '1';", "\nWHEN \"0111\" => --SLA", "\nif(B(3 downto 0) = \"0000\") then", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SLA CONV_INTEGER(B(3 downto 0)));", "\nelse", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SLA 1);", "\nend if;", "\nFINISHED <= '1';", "\nWHEN \"1000\" => --SRL", "\nif(B(3 downto 0) = \"0000\") then", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SRL CONV_INTEGER(B(3 downto 0)));", "\nelse", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SRL 1);", "\nend if;", "\nFINISHED <= '1';", "\nWHEN \"1001\" => --SRA", "\nif(B(3 downto 0) = \"0000\") then", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SRA CONV_INTEGER(B(3 downto 0)));", "\nelse", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) SRA 1);", "\nend if;", "\nFINISHED <= '1';", "\nWHEN \"1010\" => --ROL", "\nif(B(3 downto 0) = \"0000\") then", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) ROL CONV_INTEGER(B(3 downto 0)));", "\nelse", "\nY <= TO_STDLOGICVECTOR(To_bitvector(A) ROL 1);", "\nend if;", "\nFINISHED <= '1';", "\nWHEN OTHERS =>", "\nY <= \"0000000000000000\";", "\nFINISHED <= '1';", "\nEND CASE;", "\nEND IF;", "\nEND PROCESS;", "\nend Behavioral;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题中没有提供冒泡函数&amp;#xff0c;所以得先写一个冒泡排序函数。如果题主有&amp;#xff0c;请自行替换。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;bubblesort&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;arr&lt;/span&gt;):\n    result &amp;#61; arr[:]\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(arr)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(arr)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-i):\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; result[j] &amp;gt; result[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]:\n                result[j], result[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; result[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], result[j]\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;bubblesort([&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]) &lt;span class=\"hljs-comment\"&gt;# 测试冒泡排序&lt;/span&gt;\n[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;]\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;max_paipwise_distance&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;):\n    dist &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(x)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(x)):\n            dist.append(&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]-x[j][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]-x[j][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)), &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; bubblesort(dist)[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;max_paipwise_distance([[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], [-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]]) &lt;span class=\"hljs-comment\"&gt;# 测试&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请问如何实现注释里的代码 python", ["input list X's shape ：【N，2】；", "return：max pairwise distance using the bubblesort function"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,k;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]&amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//将第一列和最后一列元素赋值为1&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;||j&amp;#61;&amp;#61;i)\n            {\n                arr[i][j]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//从第三行第二列开始&amp;#xff0c;每个元素都是当前元素的前一行和前一行的前一列元素之和&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//每一行都对应着与之相同的列数&amp;#xff0c;所以内层循环限定条件为j&amp;lt;&amp;#61;i&lt;/span&gt;\n        {\n            arr[i][j]&amp;#61;arr[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;][j]&amp;#43;arr[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;][j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;];\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k&amp;lt;n-i; k&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%4d&amp;#34;&lt;/span&gt;,arr[i][j]);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["打印杨辉三角，求带注释", ["给出n，1小于等于n小于等于10", "以正三角形输出，每个数字4位", "新手求讲解", "C语言哈，int main()"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;测试类 要同启动类类名加Test 且在test资源包下 只要一个&amp;#64;SpringBootTest注解就好了&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["@RunWith注释时报错的问题", ["写个一个UserServicetest放在test包中", "UserserviceTest:", "\n", "package", " com.itheima.test;\n\n", "import", " org.apache.catalina.User;\n", "import", " org.junit.jupiter.api.Test;\n", "import", " org.springframework.beans.factory.annotation.Autowired;\n", "import", " org.springframework.boot.test.context.SpringBootTest;\n", "import", " org.springframework.test.context.junit4.SpringRunner;\n\n", "@RunWith(SpringRunner.class)", "\n", "@SpringBootTest(classes = SpringbootTestApplication.class)", "\n", "public", " ", "class", " ", "UserServiceTest", " {\n    ", "@Autowired", "\n    ", "private", " UserService userService;\n    ", "@Test", "\n    ", "public", " ", "void", " ", "testAdd", "()", "{\n        userService.add();\n    }\n}\n", "\n", "\n", "目录：", "\n", "\n", "其中RunWith报错，尝试了网上的方法，修改了配置文件pom", "但还是报错，请问怎么解决呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Like you say, when you Minify your code using the function, all the HTML code be in single line, for that any code after a JS comments well be a comment to.\nSo You can use this PHP regex to remove inline JavaScript comment :&lt;/p&gt;\n\n&lt;p&gt;Your new function : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; public static function sanitize_output($buffer) {\n\n        $search = array(\n            '#^\\s*//.+$#m', //remove JS comment,\n            '/ {2,}/',\n            '/&amp;lt;!--.*?--&amp;gt;|\\t|(?:\r?\n[ \\t]*)+/s'\n        );\n        $replace = array(\n            '',\n            ' ',\n            ''\n        );\n        $buffer = preg_replace($search, $replace, $buffer);\n\n        return $buffer;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用Regex  -  PHP删除JavaScript注释", ["\n\n", "I want to minify HTML code using PHP && Regex code", "\n\n", "The minify function : ", "\n\n", "public static function sanitize_output($buffer) {\n\n    $search = array(\n        '/ {2,}/',\n        '/<!--.*?-->|\\t|(?:?\n[ \\t]*)+/s'\n    );\n    $replace = array(\n        ' ',\n        ''\n    );\n    $buffer = preg_replace($search, $replace, $buffer);\n\n    return $buffer;\n}\n", "\n\n", "I use this function when I rendering the template (HTML file), but I get always this error on console ", "\n\n", "\n  ", "SyntaxError: missing } in compound statement note: { opened at line", "\n", "\n\n", "The minify code delete some \" { \" on Js code, is there any solution the fix this problem?", "\n\n", "After some search, I found that the error is in JS comments, when I minify the HTML code the comments concatenate with the code.", "\n\n", "I try to use this regex", "\n\n", "/\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/ \n", "\n\n", "but it's doesn't work", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Have you ever thought that the error might actually be your feed, and not the actual insert? Or it could be the AJAX?&lt;/p&gt;\n\n&lt;p&gt;To verify the insert is working or not, try:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo $streamid;  // Shows you're getting the right value from AJAX.\n\n$add_post = mysqli_query($mysqli,$insert) or die(mysqli_error($mysqli));\nif($add_post) {\n    $NewID = mysqli_insert_id(mysqli);\n    $query = 'SELECT * FROM streamdata_comments WHERE comment_id=' . $NewID;  \n    if ($result = mysqli_query($mysqli, $query)) {\n        while ($row = $result-&amp;gt;fetch_object()){\n            var_dump($row);   // Check the actual input is as you expected.\n        }\n        mysqli_free_result($result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If using AJAX, you'll need to monitor results through one of the network tool (press F12 in Chrome, NET panel; or use &lt;a href=\"http://www.fiddler2.com/fiddler2/\" rel=\"nofollow\"&gt;Fiddler&lt;/a&gt; for Win or &lt;a href=\"http://www.charlesproxy.com/\" rel=\"nofollow\"&gt;Charles&lt;/a&gt; for Mac) &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["注释ID在插入数据库之前更改", ["\n\n", "I have a form in which a user uses to comment on a post. Now the hidden input of this form is correct, it gets the correct 'streamidcontent' yet when I send it through ajax and into the database it always changes to the last created status id '4076' and adds it to that post at the very top of the feed. \nSo I'm wondering, what I'm doing wrong.", "\n\n", "streamdata_comments", "\n\n", "1   comment_id  int(11)         No  None    AUTO_INCREMENT", "\n2   comment_poster  int(11)         No  None", "\n3   comment_streamitem  int(11)     No  None", "\n4   comment_datetime    datetime        No  None    ", "\n\n", "FORM", "\n\n", "<form id=\"mycommentform\" method=\"POST\"  class=\"form_statusinput\">\n<input type=\"hidden\"  name=\"streamidcontent\" id=\"streamidcontent\" value=\"'.$streamitem_data['streamitem_id'].'\">\n<input type=\"input\" name\"content\" id=\"content\" placeholder=\"Say something\" autocomplete=\"off\">\n<input type=\"submit\" id=\"button\" value=\"Feed\">\n</form>\n", "\n\n", "COMMENT_ADD.PHP", "\n\n", "<?php\nsession_start();\nrequire\"include/load.php\";\nerror_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);\n\nif(isset($_POST['streamidcontent'])&isset($_POST['content'])){\n\n        $content =  htmlspecialchars($_POST['content']);\n        $streamid = htmlspecialchars($_POST['streamidcontent']);\n            $content = preg_replace('/(?<!S)((http(s?):\\/\\/)|(www.))+([\\w.1-9\\&=#?\\-~%;\\/]+)/','<a href=\"http$3://$4$5\">http$3://$4$5</a>', $content);\n\n            $insert = \"INSERT INTO streamdata_comments(comment_poster, comment_streamitem, comment_datetime, comment_content) VALUES (\".$_SESSION['id'].\",'$streamid',UTC_TIMESTAMP(),'$content')\";\n\n\n            $add_post = mysqli_query($mysqli,$insert) or die(mysqli_error($mysqli));\n            }\n", "\n\n", "AJAX", "\n\n", "<script>\n$(document).ready(function(){\n$(\"form#mycommentform\").submit(function(event) {\nevent.preventDefault();\nvar streamidcontent = $(\"#streamidcontent\").val();\nvar content = $(this).children('#content').val();\n\n$.ajax({\ntype: \"POST\",\nurl: \"comment_add.php\",\ncache: false,\ndataType: \"json\",\ndata: { streamidcontent: streamidcontent, content: content}, \nsuccess: function(html){  \n$(\"#containerid\").html(\"<div class='stream_comment_holder' id='comment_holder_\"+html['comment_streamitem']+\"'><div id='comment_list_\"+html['comment_streamitem']+\"'><div class='stream_comment' id='comment_\"+html['comment_id']+\"'>div class='stream_comment_holder' id= style='display:;'><div class='stream_comment'><table width='100%'><tbody><tr><td valign='top' width='30px'><img class='stream_profileimage' style='border:none;padding:0px;display:inline;' border=\\\"0\\\" src=\\\"imgs/cropped\"+html['id']+\".jpg\\\" onerror='this.src=\\\"img/no_profile_img.jpeg\\\"' width=\\\"40\\\" height=\\\"40\\\" ></td><td valign='top' align='left'><a href='profile.php?username=\"+html['username']+\"'>\"+html['first']+\" </a>\"+html['comment_content']+\"</td></tr></tbody></table></div></div></div></div>\");\n}\n});\nreturn false\n});\n});\n</script>\n", "\n\n", "AND MY OLD AJAX WHICH INSERTED FINE. But I need to add my like, dislike and delete button to this. So changed it to the above AJAX which doesn't work properly.", "\n\n", "function addcomment(streamid,content,containerid,posterid,postername,postid){\nvar obj = document.getElementById(containerid);\n$.post(\"../comment_add.php\", { streamid: streamid,content:content} );\nobj.innerHTML = obj.innerHTML + \"<div class='stream_comment'><table width='100%'><tbody><tr><td valign='top' width='30px'><img style='border:none;padding:0px;height:30px;width:30px;border-radius:0px;' src='imgs/cropped\"+posterid+\".jpg' onerror='this.src=&quot;img/no_profile_img.jpeg&quot;;'></td><td valign='top' align='left'><a href='profile.php?username=\"+posterid+\"'>\"+postername+\" </a>\"+content+\"</td></tr></tbody></table></div>\";\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have &lt;code&gt;$.load()&lt;/code&gt; inside success function of &lt;code&gt;$.post()&lt;/code&gt;, try this..&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$.post('comments.php', {value1:id, value2:database, value3:tablename}, function(data)\n   {\n   $('#comments').html(data);\n});\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Jquery  - 从数据库中获取注释", ["\n\n", "oI am having problem fetching comments from MySQL database using jQuery.", "\n\n", "I am trying this way, but its not working.", "\n\n", "PHP (comments.php)", "\n\n", "<?php \n\n    if (isset($_POST['value1'])) {\n        $id = ($_POST['value1']);\n    }else{\n        $id = '';\n    } \n    if (isset($_POST['value2'])) {\n        $database = ($_POST['value2']);\n    }else{\n        $database = '';\n    } \n    if (isset($_POST['value3'])) {\n        $tablename = ($_POST['value3']);\n    }else{\n        $tablename='';\n    } \n\n    require_once('rt-connect.php');\n\n    $find_data = \"SELECT * FROM $tablename\";\n    $query = mysqli_query($connection, $find_data);\n?> \n\n\n\n  <?php while($row = mysqli_fetch_assoc($query)):?>\n  <div class=\"comment-container\">\n    <div class=\"user-info\"><?php echo $row['user_name']; ?></div>\n    <div class=\"comment\"><p><?php echo $row['comment']; ?></p></div>\n  </div>\n  <?php endwhile;?>\n", "\n\n", "Jquery(comments.html)", "\n\n", "     var id=2;\n var database='comments_db';\n var tablename='comments';\n\n $.post('comments.php', {value1:id, value2:database, value3:tablename}, function(data)\n    {\n    $('#comments').load('comments.php .comment-container');\n });\n", "\n\n", "Html(div on comments to load on comments.html)", "\n\n", "      <div id=\"comments\"></div><!--end of comments-->\n", "\n\n", "Please see and suggest any possible way to do it.", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "这么明显的代码，还用注释。", "Konwledge_Point": "注释", "Question": ["帮忙注释一下，谢谢了 23333", ["//apk安装", "\n        String name = apkInfos.get(pos).packageName;", "\n                Intent intent = pm.getLaunchIntentForPackage(name);", "\n                    if (intent == null){", "\n            Log.d(tag, \"can not get intent: \" +", "\n                                name);", "\n                        return;", "\n                    }", "\n                    ApkDialog.this.dismiss();", "\n                    startActivity(intent);", "\n                }", "\n            });", "\n      //apk卸载", "\n                Uri uri = Uri.fromParts(\"package\", ", "\n                            apkInfos.get(pos).packageName, ", "\n                            null);", "\n            Intent intent = new Intent(Intent.ACTION_DELETE, uri);", "\n                    ApkDialog.this.dismiss();", "\n                    startActivity(intent);", "\n                }", "\n});"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;引用GPT&amp;#xff1a;DBView.cs注释后&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;namespace GlassProcess\n{\n    public partial class DbView : Form\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 声明变量&lt;/span&gt;\n        string filepath; &lt;span class=\"hljs-comment\"&gt;// 文件路径&lt;/span&gt;\n        string menufilepath; &lt;span class=\"hljs-comment\"&gt;// 菜单文件路径&lt;/span&gt;\n        string proname; &lt;span class=\"hljs-comment\"&gt;// 项目名称&lt;/span&gt;\n        public string unit; &lt;span class=\"hljs-comment\"&gt;// 单位&lt;/span&gt;\n        public string user; &lt;span class=\"hljs-comment\"&gt;// 用户&lt;/span&gt;\n        public string company; &lt;span class=\"hljs-comment\"&gt;// 公司&lt;/span&gt;\n\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; bool tmpBool; &lt;span class=\"hljs-comment\"&gt;// 临时变量&lt;/span&gt;\n        XmlOperator xml; &lt;span class=\"hljs-comment\"&gt;// XML操作类&lt;/span&gt;\n        bool haveUser &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 标志是否有用户&lt;/span&gt;\n\n        public DbView()\n        {\n            &lt;span class=\"hljs-comment\"&gt;// 初始化变量&lt;/span&gt;\n            filepath &amp;#61; Application.StartupPath; &lt;span class=\"hljs-comment\"&gt;// 获取应用程序的启动路径&lt;/span&gt;\n            menufilepath &amp;#61; filepath &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\\\Menu.xml&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 菜单文件路径&lt;/span&gt;\n            xml &amp;#61; new XmlOperator(filepath, &lt;span class=\"hljs-string\"&gt;&amp;#34;Menu.xml&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// 创建XML操作类&lt;/span&gt;\n\n            InitializeComponent(); &lt;span class=\"hljs-comment\"&gt;// 初始化组件&lt;/span&gt;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void DbView_Load(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n        {\n            LoadFormXml(); &lt;span class=\"hljs-comment\"&gt;// 载入数据&amp;#xff0c;生成列表&lt;/span&gt;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 载入数据&amp;#xff0c;生成列表&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void LoadFormXml()\n        {\n            XmlNodeList xmlNodes &amp;#61; xml.GetXmlNodeList(); &lt;span class=\"hljs-comment\"&gt;// 获取XML节点列表&lt;/span&gt;\n            this.treeView1.BeginUpdate(); &lt;span class=\"hljs-comment\"&gt;// 开始更新TreeView&lt;/span&gt;\n            this.treeView1.Nodes.Clear(); &lt;span class=\"hljs-comment\"&gt;// 清空TreeView节点&lt;/span&gt;\n            XmlNode2TreeNode(xmlNodes, this.treeView1.Nodes); &lt;span class=\"hljs-comment\"&gt;// 节点转换为TreeView节点&lt;/span&gt;\n            this.treeView1.EndUpdate(); &lt;span class=\"hljs-comment\"&gt;// 结束更新TreeView&lt;/span&gt;\n            ExpandRoot(this.treeView1.Nodes); &lt;span class=\"hljs-comment\"&gt;// 展开TreeView根节点&lt;/span&gt;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 展开节点&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ExpandRoot(TreeNodeCollection treeNodes)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;root&amp;#34;&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;// 如果是根节点&lt;/span&gt;\n                {\n                    treeNode.Expand(); &lt;span class=\"hljs-comment\"&gt;// 展开节点&lt;/span&gt;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;// 如果是区域节点&lt;/span&gt;\n                {\n                    treeNode.Collapse(); &lt;span class=\"hljs-comment\"&gt;// 折叠节点&lt;/span&gt;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;// 如果有子节点&lt;/span&gt;\n                {\n                    ExpandRoot(treeNode.Nodes); &lt;span class=\"hljs-comment\"&gt;// 递归展开子节点&lt;/span&gt;\n                }\n            }\n        }\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void XmlNode2TreeNode(XmlNodeList xmlNode, TreeNodeCollection treeNode)\n{\n    &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (XmlNode var &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; xmlNode)\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 忽略非Element类型的节点&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (var.NodeType !&amp;#61; XmlNodeType.Element)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;continue&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 新建一个TreeNode&amp;#xff0c;并根据XML节点的Title属性设置文本&lt;/span&gt;\n        TreeNode newTreeNode &amp;#61; new TreeNode();\n        newTreeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#61; var.Attributes[&lt;span class=\"hljs-string\"&gt;&amp;#34;Title&amp;#34;&lt;/span&gt;].Value;\n\n        &lt;span class=\"hljs-comment\"&gt;// 如果XML节点有子节点&amp;#xff0c;则递归调用XmlNode2TreeNode方法转换子节点&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (var.HasChildNodes)\n        {\n            &lt;span class=\"hljs-comment\"&gt;// 如果第一个子节点是CDATA&amp;#xff0c;则将其内容作为TreeNode的Tag&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (var.ChildNodes[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].NodeType &amp;#61;&amp;#61; XmlNodeType.CDATA)\n            {\n                newTreeNode.Tag &amp;#61; var.ChildNodes[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].Value;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (newTreeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;root&amp;#34;&lt;/span&gt;))\n                {\n                    newTreeNode.ImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                    newTreeNode.SelectedImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                    newTreeNode.Expand();\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (newTreeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;))\n                {\n                    newTreeNode.ImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    newTreeNode.SelectedImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    newTreeNode.ImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n                    newTreeNode.SelectedImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n                }\n            }\n            &lt;span class=\"hljs-comment\"&gt;// 将新建的TreeNode添加到父TreeNode的Nodes集合中&lt;/span&gt;\n            XmlNode2TreeNode(var.ChildNodes, newTreeNode.Nodes);\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 将新建的TreeNode添加到TreeView的节点集合中&lt;/span&gt;\n        treeNode.Add(newTreeNode);\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void CreatMenu(string p)\n{\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;root&amp;#34;&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//清空右键菜单&lt;/span&gt;\n                this.contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.Clear();\n                &lt;span class=\"hljs-comment\"&gt;//创建“新增用户分区”菜单项&amp;#xff0c;并添加到右键菜单&lt;/span&gt;\n                ToolStripMenuItem AddArea &amp;#61; new ToolStripMenuItem();\n                AddArea.&lt;span class=\"hljs-built_in\"&gt;Name&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;新增用户分区&amp;#34;&lt;/span&gt;;\n                AddArea.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;新增用户分区&amp;#34;&lt;/span&gt;;\n                AddArea.Click &amp;#43;&amp;#61; new System.EventHandler(AddArea_Click);\n                contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.AddRange(\n                     new System.Windows.Forms.ToolStripItem[] { \n                   AddArea\n                }\n                );\n            }\n            &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//清空右键菜单&lt;/span&gt;\n                this.contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.Clear();\n                &lt;span class=\"hljs-comment\"&gt;//创建“添加用户”菜单项&amp;#xff0c;并添加到右键菜单&lt;/span&gt;\n                ToolStripMenuItem AddUser &amp;#61; new ToolStripMenuItem();\n                AddUser.&lt;span class=\"hljs-built_in\"&gt;Name&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;添加用户&amp;#34;&lt;/span&gt;;\n                AddUser.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;添加用户&amp;#34;&lt;/span&gt;;\n                AddUser.&lt;span class=\"hljs-built_in\"&gt;Image&lt;/span&gt; &amp;#61; this.treeImgs.Images[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n                AddUser.DisplayStyle &amp;#61; ToolStripItemDisplayStyle.ImageAndText;\n                AddUser.Click &amp;#43;&amp;#61; new System.EventHandler(AddUser_Click);\n                &lt;span class=\"hljs-comment\"&gt;//创建“删除组”菜单项&amp;#xff0c;并添加到右键菜单&lt;/span&gt;\n                ToolStripMenuItem DeleteArea &amp;#61; new ToolStripMenuItem();\n                DeleteArea.&lt;span class=\"hljs-built_in\"&gt;Name&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;删除组&amp;#34;&lt;/span&gt;;\n                DeleteArea.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;删除组&amp;#34;&lt;/span&gt;;\n                DeleteArea.Click &amp;#43;&amp;#61; new System.EventHandler(DeleteArea_Click);\n                contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.AddRange(\n                     new System.Windows.Forms.ToolStripItem[] { \n                       AddUser,DeleteArea       \n                    }\n                );\n            }\n            &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//清空右键菜单&lt;/span&gt;\n                this.contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.Clear();\n                &lt;span class=\"hljs-comment\"&gt;//创建“删除用户”菜单项&amp;#xff0c;并添加到右键菜单&lt;/span&gt;\n                ToolStripMenuItem DeleteUser &amp;#61; new ToolStripMenuItem();\n                DeleteUser.&lt;span class=\"hljs-built_in\"&gt;Name&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;删除用户&amp;#34;&lt;/span&gt;;\n                DeleteUser.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;删除用户&amp;#34;&lt;/span&gt;;\n                DeleteUser.Click &amp;#43;&amp;#61; new System.EventHandler(DeleteUser_Click);\n                contextMenuStrip.&lt;span class=\"hljs-built_in\"&gt;Items&lt;/span&gt;.AddRange(\n                     new System.Windows.Forms.ToolStripItem[] { \n                         DeleteUser                  \n                    }\n                );\n            }\n            &lt;span class=\"hljs-built_in\"&gt;break&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ContractListBakRootItem_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 点击合同列表备份根目录菜单项的处理函数&amp;#xff0c;暂未实现功能&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//this.treeView1.ExpandAll();&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ContractListBakGroupItem_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 点击合同列表备份分组菜单项的处理函数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// 获取当前选中节点的所有子节点的第一段文本&amp;#xff0c;并添加到字符串列表array中&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;string&amp;gt; array &amp;#61; new &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;string&amp;gt;();\n    &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode node &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; this.treeView1.SelectedNode.Nodes)\n    {\n        array.Add((node.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Split(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;))[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//this.treeView1.ExpandAll();&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ImportDataUser_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 点击导入用户数据菜单项的处理函数&amp;#xff0c;暂未实现功能&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//this.treeView1.ExpandAll();&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void SearchTreeNode(TreeNodeCollection treeNodes,string fileName)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 在指定的节点集合treeNodes中搜索名为fileName的节点并删除&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;() &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Equals(fileName))\n            {\n                this.treeView1.Nodes.Remove(treeNode);\n            }\n            &lt;span class=\"hljs-built_in\"&gt;continue&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            SearchTreeNode(treeNode.Nodes, fileName);\n        }\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; TreeNode CreateChildNodeByImport(string file)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 根据导入的文件名创建一个新的树节点并返回&lt;/span&gt;\n    TreeNode node &amp;#61; new TreeNode(file);\n    node.Tag &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;;\n    return node;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ExportUserData_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 点击导出用户数据菜单项的处理函数&amp;#xff0c;暂未实现功能&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void UpdateUserInfo_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-comment\"&gt;// 点击更新用户信息菜单项的处理函数&amp;#xff0c;暂未实现功能&lt;/span&gt;\n}\n\nSendAndGetListByRoot_Click&amp;#xff1a;发送请求并获取根目录下的文件列表。\nSendAndGetListBakRootItem_Click&amp;#xff1a;发送请求并获取根目录下的备份文件列表。\nSendAndGetListByGroup_Click&amp;#xff1a;发送请求并获取指定组下的文件列表。\nSendAndGetListBakGroupItem_Click&amp;#xff1a;发送请求并获取指定组下的备份文件列表。\nCheckListByRoot_Click&amp;#xff1a;检查根目录下的文件列表。\nCheckListBakRootItem_Click&amp;#xff1a;检查根目录下的备份文件列表。\nCheckListByGroup_Click&amp;#xff1a;检查指定组下的文件列表。\nCheckListBakGroupItem_Click&amp;#xff1a;检查指定组下的备份文件列表。\nBaitingListByRoot_Click&amp;#xff1a;检查根目录下的文件是否需要转储。\nBaitingListBakRootItem_Click&amp;#xff1a;检查根目录下的备份文件是否需要转储。\nBaitingListByGroup_Click&amp;#xff1a;检查指定组下的文件是否需要转储。\nBaitingListBakGroupItem_Click&amp;#xff1a;检查指定组下的备份文件是否需要转储。\nProcessListByRoot_Click&amp;#xff1a;对根目录下的文件进行转储。\nProcessListBakRootItem_Click&amp;#xff1a;对根目录下的备份文件进行转储。\nProcessListByGroup_Click、ProcessListBakGroupItem_Click、OrderListByRoot_Click、OrderListBakRootItem_Click、OrderListByGroup_Click 和 OrderListBakGroupItem_Click 这些方法似乎与树形控件有关&amp;#xff0c;但目前它们的实现代码为空。需要根据实际代码逻辑来确定方法的作用。\nBakSendAndGetList_Click、BakCheckList_Click、BakBaitingList_Click、BakListItem_Click、BakProcessList_Click 和 BakOrderList_Click 这些方法名中的“Bak”字样可能表示“备份”或“撤销”操作&amp;#xff0c;但也需要查看实际代码来确定方法的作用。\nSendAndGetList_Click、CheckList_Click、ProcessList_Click、BaitingList_Click、OrderList_Click、StatisticsRoot_Click、StatisticsListByGroup_Click 和 ContractListByRoot_Click 这些方法的作用也需要根据实际代码逻辑来确定。\n\n\n&lt;span class=\"hljs-comment\"&gt;// 添加区域&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void AddArea_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建 AddUnit 窗体的实例&lt;/span&gt;\nAddUnit form &amp;#61; new AddUnit(this);\n&lt;span class=\"hljs-comment\"&gt;// 显示窗体&amp;#xff0c;等待用户输入&lt;/span&gt;\nform.ShowDialog();\n&lt;span class=\"hljs-comment\"&gt;// 如果输入的单位名称不为空&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!string.IsNullOrEmpty(unit))\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建根节点&lt;/span&gt;\nTreeNode node &amp;#61; CreateRootNode();\n&lt;span class=\"hljs-comment\"&gt;// 将根节点添加到 TreeView 控件中&lt;/span&gt;\nthis.treeView1.Nodes[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].Nodes.Add(node);\n&lt;span class=\"hljs-comment\"&gt;// 将更改保存到 XML 文件中&lt;/span&gt;\nSaveToXml();\n&lt;span class=\"hljs-comment\"&gt;// 重新从 XML 文件中加载数据并更新 TreeView 控件&lt;/span&gt;\nLoadFormXml();\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 递归查找并删除 TreeView 控件中指定用户的节点&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void RemoveUser(TreeNodeCollection treeNodes)\n{\n&lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;))\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Equals(user))\n{\ntreeNode.Remove();\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n{\nRemoveUser(treeNode.Nodes);\n}\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 添加用户&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void AddUser_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建 AddUser 窗体的实例&lt;/span&gt;\nAddUser form &amp;#61; new AddUser(this);\n&lt;span class=\"hljs-comment\"&gt;// 显示窗体&amp;#xff0c;等待用户输入&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (form.ShowDialog() &amp;#61;&amp;#61; DialogResult.OK)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!string.IsNullOrEmpty(user))\n{\n&lt;span class=\"hljs-comment\"&gt;// 检查 TreeView 控件中是否已经存在指定用户的节点&lt;/span&gt;\nCheckUser(this.treeView1.Nodes);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (haveUser)\n{\n&lt;span class=\"hljs-comment\"&gt;// 如果用户已经存在&amp;#xff0c;弹出确认对话框&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (MessageBox.Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;该用户[&amp;#34;&lt;/span&gt; &amp;#43; user &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;]已经存在&amp;#xff0c;是否覆盖?&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;确认&amp;#34;&lt;/span&gt;, MessageBoxButtons.YesNo, MessageBoxIcon.Information) &amp;#61;&amp;#61; DialogResult.Yes)\n{\n&lt;span class=\"hljs-comment\"&gt;// 删除原来的节点并创建新的节点&lt;/span&gt;\nRemoveUser(this.treeView1.Nodes);\nTreeNode node &amp;#61; CreateChildNode();\nTreeNode selectNode &amp;#61; this.treeView1.SelectedNode;\nselectNode.Nodes.Add(node);\n&lt;span class=\"hljs-comment\"&gt;// 将更改保存到 XML 文件中&lt;/span&gt;\nSaveToXml();\n&lt;span class=\"hljs-comment\"&gt;// 重新从 XML 文件中加载数据并更新 TreeView 控件&lt;/span&gt;\nLoadFormXml();\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n&lt;span class=\"hljs-comment\"&gt;// 取消覆盖&amp;#xff0c;不做任何操作&lt;/span&gt;\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n&lt;span class=\"hljs-comment\"&gt;// 如果用户不存在&amp;#xff0c;创建新的节点&lt;/span&gt;\nTreeNode node &amp;#61; CreateChildNode();\nTreeNode selectNode &amp;#61; this.treeView1.SelectedNode;\nselectNode.Nodes.Add(node);\n&lt;span class=\"hljs-comment\"&gt;// 将更改保存到 XML 文件中&lt;/span&gt;\nSaveToXml();\n&lt;span class=\"hljs-comment\"&gt;// 重新从 XML 文件中加载数据并更新 TreeView 控件&lt;/span&gt;\nLoadFormXml();\n}\n}\n}\n&lt;span class=\"hljs-comment\"&gt;// 重置 haveUser 标志位&lt;/span&gt;\nhaveUser &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n}\n\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void CheckUser(TreeNodeCollection treeNodes)\n{\n    tmpBool &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;))\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Equals(user))\n            {\n                treeNode.BackColor &amp;#61; Color.Red; &lt;span class=\"hljs-comment\"&gt;// 将节点的背景颜色设为红色&lt;/span&gt;\n                treeNode.Parent.Expand(); &lt;span class=\"hljs-comment\"&gt;// 展开父节点&lt;/span&gt;\n                haveUser &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 设置haveUser为true&amp;#xff0c;表示找到了该用户&lt;/span&gt;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            CheckUser(treeNode.Nodes); &lt;span class=\"hljs-comment\"&gt;// 递归调用CheckUser&amp;#xff0c;查找子节点中是否存在该用户&lt;/span&gt;\n        }\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void DeleteUser_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (MessageBox.Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;你确定要删除吗?&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;删除确认&amp;#34;&lt;/span&gt;, MessageBoxButtons.YesNo, MessageBoxIcon.Information) &amp;#61;&amp;#61; DialogResult.Yes)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (this.treeView1.SelectedNode &amp;#61;&amp;#61; null)\n        {\n            return;\n        }\n        string[] array &amp;#61; this.treeView1.SelectedNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Split(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// 将节点文本按照&amp;#39;/&amp;#39;分割成字符串数组&lt;/span&gt;\n        this.treeView1.Nodes.Remove(this.treeView1.SelectedNode); &lt;span class=\"hljs-comment\"&gt;// 移除选中节点&lt;/span&gt;\n        SaveToXml(); &lt;span class=\"hljs-comment\"&gt;// 保存到XML文件&lt;/span&gt;\n        LoadFormXml(); &lt;span class=\"hljs-comment\"&gt;// 从XML文件加载节点&lt;/span&gt;\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void DeleteArea_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (MessageBox.Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;你确定要删除吗?&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;删除确认&amp;#34;&lt;/span&gt;, MessageBoxButtons.YesNo, MessageBoxIcon.Information) &amp;#61;&amp;#61; DialogResult.Yes)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (this.treeView1.SelectedNode &amp;#61;&amp;#61; null)\n        {\n            return;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (this.treeView1.SelectedNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;() &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;string&amp;gt; array &amp;#61; new &lt;span class=\"hljs-built_in\"&gt;List&lt;/span&gt;&amp;lt;string&amp;gt;();\n            &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode node &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; this.treeView1.SelectedNode.Nodes)\n            {\n                array.Add((node.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.Split(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;))[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]); &lt;span class=\"hljs-comment\"&gt;// 将子节点的文本按照&amp;#39;/&amp;#39;分割成字符串数组&amp;#xff0c;并取第一个元素&amp;#xff0c;即用户名&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (array.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                MessageBox.Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;不能删除非空用户的组结点&amp;#xff01;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;确定&amp;#34;&lt;/span&gt;, MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                this.treeView1.Nodes.Remove(this.treeView1.SelectedNode); &lt;span class=\"hljs-comment\"&gt;// 移除选中节点&lt;/span&gt;\n                SaveToXml(); &lt;span class=\"hljs-comment\"&gt;// 保存到XML文件&lt;/span&gt;\n                LoadFormXml(); &lt;span class=\"hljs-comment\"&gt;// 从XML文件加载节点&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;//binary.DeleteAccountDirectory(array[0]);&lt;/span&gt;\n            }\n        }\n    }\n}\n\n\n&lt;span class=\"hljs-comment\"&gt;// 点击列表项&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void ListItem_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// &lt;span class=\"hljs-doctag\"&gt;TODO:&lt;/span&gt; 实现点击列表项后的操作&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 添加选项卡页&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void AddTabPage(string pageTitle, Control ctrForm)\n{\n&lt;span class=\"hljs-comment\"&gt;// &lt;span class=\"hljs-doctag\"&gt;TODO:&lt;/span&gt; 实现添加选项卡页的操作&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 双击树形视图&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_DoubleClick(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// &lt;span class=\"hljs-doctag\"&gt;TODO:&lt;/span&gt; 实现双击树形视图后的操作&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 添加单元工具按钮的点击事件&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void toolbtn_AddUnit_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// 打开添加单元的窗口&lt;/span&gt;\nAddUnit form &amp;#61; new AddUnit(this);\nform.ShowDialog();\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!string.IsNullOrEmpty(unit))\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建根节点&lt;/span&gt;\nTreeNode node &amp;#61; CreateRootNode();\n&lt;span class=\"hljs-comment\"&gt;// 添加节点到树形视图中&lt;/span&gt;\n    this.treeView1.Nodes[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].Nodes.Add(node);\n\n    &lt;span class=\"hljs-comment\"&gt;// 将树形视图保存到XML文件中&lt;/span&gt;\n    SaveToXml();\n\n    &lt;span class=\"hljs-comment\"&gt;// 从XML文件中加载树形视图&lt;/span&gt;\n    LoadFormXml();\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 创建根节点&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; TreeNode CreateRootNode()\n{\nTreeNode node &amp;#61; new TreeNode(this.unit);\nnode.Tag &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;;\nnode.ImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nnode.SelectedImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nreturn node;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 创建子节点&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; TreeNode CreateChildNode()\n{\nTreeNode node &amp;#61; new TreeNode(this.user);\nnode.Tag &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;user&amp;#34;&lt;/span&gt;;\nnode.ImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nnode.SelectedImageIndex &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nreturn node;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 将树形视图保存到XML文件中&lt;/span&gt;\npublic void SaveToXml()\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建XML文档对象&lt;/span&gt;\nXmlDocument doc &amp;#61; new XmlDocument();\n&lt;span class=\"hljs-comment\"&gt;// 创建根节点&lt;/span&gt;\ndoc.LoadXml(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;Menu&amp;gt;&amp;lt;/Menu&amp;gt;&amp;#34;&lt;/span&gt;);\nXmlNode root &amp;#61; doc.DocumentElement;\n\n&lt;span class=\"hljs-comment\"&gt;// 添加XML声明&lt;/span&gt;\ndoc.InsertBefore(doc.CreateXmlDeclaration(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;), root);\n\n&lt;span class=\"hljs-comment\"&gt;// 将树形视图转换为XML节点&amp;#xff0c;并添加到XML文档中&lt;/span&gt;\nTreeNode2Xml(this.treeView1.Nodes, root);\n\n&lt;span class=\"hljs-comment\"&gt;// 将XML文档保存到文件中&lt;/span&gt;\nxml.SaveXml(doc);\n}\n&lt;span class=\"hljs-comment\"&gt;// 将TreeNodeCollection转换为XML节点&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void TreeNode2Xml(TreeNodeCollection treeNodes, XmlNode xmlNode)\n{\nXmlDocument doc &amp;#61; xmlNode.OwnerDocument;\n&lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n{\n&lt;span class=\"hljs-comment\"&gt;// 创建XML节点&lt;/span&gt;\nXmlNode element &amp;#61; doc.CreateNode(&lt;span class=\"hljs-string\"&gt;&amp;#34;element&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;Item&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\nXmlAttribute attr &amp;#61; doc.CreateAttribute(&lt;span class=\"hljs-string\"&gt;&amp;#34;Title&amp;#34;&lt;/span&gt;);\nattr.Value &amp;#61; treeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;;\nelement.Attributes.&lt;span class=\"hljs-built_in\"&gt;Append&lt;/span&gt;(attr);\nelement.AppendChild(doc.CreateCDataSection(treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;()));\nxmlNode.AppendChild(element);\n&lt;span class=\"hljs-comment\"&gt;// 如果该节点有子节点&amp;#xff0c;则递归调用该方法&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        TreeNode2Xml(treeNode.Nodes, element);\n    }\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户选中某个节点时发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_AfterSelect(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, TreeViewEventArgs e)\n{\nstring path &amp;#61; null;\nTreeNode node &amp;#61; this.treeView1.SelectedNode;\n&lt;span class=\"hljs-comment\"&gt;//node.ForeColor &amp;#61; Color.Red;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (node !&amp;#61; null)\n{\npath &amp;#61; node.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (node.Parent !&amp;#61; null)\n{\nnode &amp;#61; node.Parent;\npath &amp;#61; node.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\&amp;#34;&lt;/span&gt; &amp;#43; path;\n}\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户单击树形视图时发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n&lt;span class=\"hljs-comment\"&gt;// 获取鼠标单击的位置上的节点&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; tmpObj &amp;#61; this.treeView1.GetNodeAt(this.treeView1.PointToClient(Cursor.&lt;span class=\"hljs-built_in\"&gt;Position&lt;/span&gt;));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (tmpObj !&amp;#61; null)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((tmpObj as TreeNode).Bounds.Contains(this.treeView1.PointToClient(Cursor.&lt;span class=\"hljs-built_in\"&gt;Position&lt;/span&gt;)))\n{\ntmpBool &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n}\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户展开某个节点之前发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_BeforeExpand(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, TreeViewCancelEventArgs e)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (tmpBool)\n{\ne.Cancel &amp;#61; tmpBool;\n}\ntmpBool &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户折叠某个节点之前发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_BeforeCollapse(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, TreeViewCancelEventArgs e)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (tmpBool)\n{\ne.Cancel &amp;#61; tmpBool;\n}\ntmpBool &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户在树形视图上单击鼠标按钮时发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_MouseClick(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, MouseEventArgs e)\n{\n\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当用户在树形视图上移动鼠标时发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_MouseMove(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, MouseEventArgs e)\n{\n\n}\n\n&lt;span class=\"hljs-comment\"&gt;// 当鼠标离开树形视图时发生的事件处理程序&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_MouseLeave(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\n\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void toolbtnSearch_Click(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n{\nstring searchName &amp;#61; this.toolText.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;;\nSetNodeBackColor(this.treeView1.Nodes); &lt;span class=\"hljs-comment\"&gt;// 设置节点背景颜色为白色&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!string.IsNullOrEmpty(searchName))\n{\nSearchXml(this.treeView1.Nodes, searchName); &lt;span class=\"hljs-comment\"&gt;// 根据搜索内容在TreeView中查找匹配节点&lt;/span&gt;\n}\n}\n\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void SetNodeBackColor(TreeNodeCollection treeNodes)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n        {\n            treeNode.BackColor &amp;#61; Color.White; &lt;span class=\"hljs-comment\"&gt;// 设置节点背景颜色为白色&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Tag.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;area&amp;#34;&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;// 如果节点的Tag属性值为&amp;#34;area&amp;#34;&amp;#xff0c;则将该节点折叠&lt;/span&gt;\n            {\n                treeNode.Collapse();\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                SetNodeBackColor(treeNode.Nodes); &lt;span class=\"hljs-comment\"&gt;// 递归调用SetNodeBackColor方法&amp;#xff0c;对当前节点的所有子节点执行相同的操作&lt;/span&gt;\n            }\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void SearchXml(TreeNodeCollection treeNodes,string search)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode treeNode &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; treeNodes)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.&lt;span class=\"hljs-built_in\"&gt;Text&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ToString&lt;/span&gt;().Contains(search)) &lt;span class=\"hljs-comment\"&gt;// 如果当前节点的文本内容包含搜索内容&amp;#xff0c;则将该节点的背景颜色设置为Coral色&lt;/span&gt;\n            {\n                treeNode.BackColor &amp;#61; Color.Coral;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(treeNode.Parent!&amp;#61;null) &lt;span class=\"hljs-comment\"&gt;// 如果该节点有父节点&amp;#xff0c;则展开其父节点&lt;/span&gt;\n                {\n                    treeNode.Parent.Expand();\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (treeNode.Nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                SearchXml(treeNode.Nodes,search); &lt;span class=\"hljs-comment\"&gt;// 递归调用SearchXml方法&amp;#xff0c;对当前节点的所有子节点执行相同的操作&lt;/span&gt;\n            }\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void toolText_TextChanged(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e)\n    {\n        toolbtnSearch_Click(sender, e); &lt;span class=\"hljs-comment\"&gt;// 当搜索框文本内容发生变化时&amp;#xff0c;执行toolbtnSearch_Click方法&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//节点的选中取消事件&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void treeView1_AfterCheck(&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, TreeViewEventArgs e)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (e.Node.Checked) &lt;span class=\"hljs-comment\"&gt;// 如果当前节点被选中&amp;#xff0c;则将其所有子节点的选中状态设置为true&lt;/span&gt;\n        {\n           setChildNodeCheckedState(e.Node, &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// 如果当前节点未选中&amp;#xff0c;则将其所有子节点的选中状态设置为false&lt;/span&gt;\n        {\n            setChildNodeCheckedState(e.Node,  &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//选中节点之后&amp;#xff0c;选中节点的所有子节点&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; void setChildNodeCheckedState(TreeNode currNode, bool state)\n    {\n        TreeNodeCollection nodes &amp;#61; currNode.Nodes;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (nodes.&lt;span class=\"hljs-built_in\"&gt;Count&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;foreach&lt;/span&gt; (TreeNode tn &lt;span class=\"hljs-built_in\"&gt;in&lt;/span&gt; nodes)\n            {\n\n                tn.Checked &amp;#61; state; &lt;span class=\"hljs-comment\"&gt;// 将当前子节点的选中状态设置为指定的状态&lt;/span&gt;\n                setChildNodeCheckedState(tn, state); &lt;span class=\"hljs-comment\"&gt;// 递归调用setChildNodeCheckedState方法&amp;#xff0c;对当前子节点的所有子节点执行相同的操作&lt;/span&gt;\n            }\n    }\n}\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;class1代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;TreeView&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;XmlOperator&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; filepath; &lt;span class=\"hljs-comment\"&gt;//文件路径&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; xmlContent &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;?xml version&amp;#61;\\&amp;#34;1.0\\&amp;#34; encoding&amp;#61;\\&amp;#34;utf-8\\&amp;#34; standalone&amp;#61;\\&amp;#34;yes\\&amp;#34;?&amp;gt;&amp;lt;Menu&amp;gt;&amp;lt;Item Title&amp;#61;&amp;#34;&lt;/span&gt;所有&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;lt;![CDATA[root]]&amp;gt;&amp;lt;/Item&amp;gt;&amp;lt;/Menu&amp;gt;&amp;#34;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; Filepath\n{\n&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; filepath; }\n&lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; { filepath &amp;#61; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;; }\n}\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; filename; &lt;span class=\"hljs-comment\"&gt;//Xml文件名&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; Filename\n    {\n        &lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt; { &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; filename; }\n        &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; { filename &amp;#61; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;; }\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;XmlOperator&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; filepath, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; filename&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 构造函数&amp;#xff0c;用于初始化对象的属性值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.filepath &amp;#61; filepath &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\\\&amp;#34;&lt;/span&gt; &amp;#43; filename;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.filename &amp;#61; filename;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; XmlNodeList &lt;span class=\"hljs-title\"&gt;GetXmlNodeList&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-comment\"&gt;// 创建XmlDocument对象并加载指定路径的Xml文件&lt;/span&gt;\n            XmlDocument xmlDoc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; XmlDocument();\n            xmlDoc.Load(filepath);\n            &lt;span class=\"hljs-comment\"&gt;// 获取根节点下的所有子节点&lt;/span&gt;\n            XmlNodeList xmlNodes &amp;#61; xmlDoc.DocumentElement.ChildNodes;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; xmlNodes;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-comment\"&gt;// 异常处理&amp;#xff0c;当Xml文件加载失败时&amp;#xff0c;自动恢复到初始状态并重新加载&lt;/span&gt;\n            MessageBox.Show(&lt;span class=\"hljs-string\"&gt;&amp;#34;用户目录文件已损坏&amp;#xff0c;自动恢复到初始状态&amp;#xff01;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;提示&amp;#34;&lt;/span&gt;, MessageBoxButtons.OK, MessageBoxIcon.Error);\n            RecoverXml();\n            XmlDocument xmlDoc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; XmlDocument();\n            xmlDoc.Load(filepath);\n            XmlNodeList xmlNodes &amp;#61; xmlDoc.DocumentElement.ChildNodes;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; xmlNodes;\n        }\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;RecoverXml&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 创建XmlDocument对象并设置其InnerXml属性&lt;/span&gt;\n        XmlDocument doc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; XmlDocument();\n        doc.InnerXml &amp;#61; xmlContent;\n        &lt;span class=\"hljs-comment\"&gt;// 调用SaveXml方法保存XmlDocument对象到指定路径的Xml文件&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.SaveXml(doc);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SaveXml&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;XmlDocument doc&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 将XmlDocument对象保存到指定路径的Xml文件&lt;/span&gt;\n        doc.Save(filepath);\n    }\n}\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["C#winform treeview代码，请给加下注释", ["\n", "这是一个winform的treeview可以建立用户组和在用户组中建立用户，并使用xml保存数据，下面是相关代码，太多了，看不懂能不能给写一下注释越详细越好，另外前面的勾选框能不能告诉下怎么去掉。", "\n", "下面是主界面的代码DBView.cs", "\n", "using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Xml;\nusing System.IO;\n\nusing System.Collections;\nusing TreeView;\n\nnamespace GlassProcess\n{\n    ", "public", " partial ", "class", " ", "DbView", " : Form\n    {\n       \n        string filepath;\n        string menufilepath;\n        string proname;\n        ", "public", " string unit;\n        ", "public", " string user;\n        ", "public", " string company;\n      \n        ", "private", " bool tmpBool;\n        XmlOperator xml;\n        ", "bool", " ", "haveUser", " ", "=", " ", "false", ";\n        \n        ", "public", " ", "DbView", "( )", "\n        {\n            filepath = Application.StartupPath;\n            menufilepath = filepath + ", "\"\\\\Menu.xml\"", ";\n            xml = ", "new", " ", "XmlOperator", "(filepath, ", "\"Menu.xml\"", ");\n           \n            InitializeComponent();\n           \n        }\n\n        ", "private", " ", "void", " ", "DbView_Load", "(object sender, EventArgs e)", "\n        {\n            LoadFormXml();\n        }\n\n        ", "//载入数据 生成列表", "\n        ", "private", " ", "void", " ", "LoadFormXml", "()", "\n        {\n            ", "XmlNodeList", " ", "xmlNodes", " ", "=", " xml.GetXmlNodeList();\n            ", "this", ".treeView1.BeginUpdate();\n            ", "this", ".treeView1.Nodes.Clear();\n            XmlNode2TreeNode(xmlNodes, ", "this", ".treeView1.Nodes);\n            ", "this", ".treeView1.EndUpdate();\n            ExpandRoot(", "this", ".treeView1.Nodes);\n        }\n\n        ", "//展开节点", "\n        ", "private", " ", "void", " ", "ExpandRoot", "(TreeNodeCollection treeNodes)", "\n        {\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "if", " (treeNode.Tag.ToString().Equals(", "\"root\"", "))\n                {\n                    treeNode.Expand();\n                }\n                ", "else", " ", "if", " (treeNode.Tag.ToString().Equals(", "\"area\"", "))\n                {\n                    treeNode.Collapse();\n                }\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    ExpandRoot(treeNode.Nodes);\n                }\n            }\n        }\n        \n\n\n        ", "private", " ", "void", " ", "XmlNode2TreeNode", "(XmlNodeList xmlNode, TreeNodeCollection treeNode)", "\n        {\n            foreach (XmlNode ", "var", " in xmlNode)\n            {\n                ", "if", " (", "var", ".NodeType != XmlNodeType.Element)\n                {\n                    ", "continue", ";\n                }\n                ", "TreeNode", " ", "newTreeNode", " ", "=", " ", "new", " ", "TreeNode", "();\n                newTreeNode.Text = ", "var", ".Attributes[", "\"Title\"", "].Value;\n\n                ", "if", " (", "var", ".HasChildNodes)\n                {\n                    ", "if", " (", "var", ".ChildNodes[", "0", "].NodeType == XmlNodeType.CDATA)\n                    {\n                        newTreeNode.Tag = ", "var", ".ChildNodes[", "0", "].Value;\n                        ", "if", " (newTreeNode.Tag.ToString().Equals(", "\"root\"", "))\n                        {\n                            newTreeNode.ImageIndex = ", "0", ";\n                            newTreeNode.SelectedImageIndex = ", "0", ";\n                            newTreeNode.Expand();\n                        }\n                        ", "else", " ", "if", " (newTreeNode.Tag.ToString().Equals(", "\"area\"", "))\n                        {\n                            newTreeNode.ImageIndex = ", "1", ";\n                            newTreeNode.SelectedImageIndex = ", "1", ";\n                           \n                        }\n                        ", "else", "\n                        {\n                            newTreeNode.ImageIndex = ", "2", ";\n                            newTreeNode.SelectedImageIndex = ", "2", ";\n                        }\n\n                    }\n\n                    XmlNode2TreeNode(", "var", ".ChildNodes, newTreeNode.Nodes);\n                }\n                treeNode.Add(newTreeNode);\n            }\n        }\n\n        ", "private", " ", "void", " ", "treeView1_MouseUp", "(object sender, MouseEventArgs e)", "\n        {\n            ", "try", "\n            {\n                ", "Point", " ", "mpt", " ", "=", " ", "new", " ", "Point", "(e.X, e.Y);\n                ", "TreeNode", " ", "TreeClickNode", " ", "=", " ", "this", ".treeView1.GetNodeAt(mpt);\n                ", "this", ".treeView1.SelectedNode = TreeClickNode;\n                proname = TreeClickNode.Text;\n\n                ", "if", " (TreeClickNode != ", "null", ")\n                {\n                    CreatMenu(TreeClickNode.Tag.ToString());\n                    ", "if", " (e.Button == MouseButtons.Right)\n                    {\n\n                        ", "this", ".contextMenuStrip.Show(", "this", ".treeView1, mpt);\n                        ", "//this.treeView1.ContextMenu.Show(treeView1,mpt);", "\n                    }\n                }\n                ", "else", "\n                {\n                    contextMenuStrip.Items.Clear();\n                }\n            }\n            ", "catch", "\n            { \n            \n            }\n        }\n\n        ", "private", " ", "void", " ", "CreatMenu", "(string p)", "\n        {\n            ", "switch", " (p)\n            {\n\n                ", "case", " ", "\"root\"", ":\n                    {\n                        ", "this", ".contextMenuStrip.Items.Clear();\n\n                        ", "ToolStripMenuItem", " ", "AddArea", " ", "=", " ", "new", " ", "ToolStripMenuItem", "();\n                        AddArea.Name = ", "\"新增用户分区\"", ";\n                        AddArea.Text = ", "\"新增用户分区\"", ";\n                        AddArea.Click += ", "new", " ", "System", ".EventHandler(AddArea_Click);\n\n                        \n\n\n                    \n\n                        contextMenuStrip.Items.AddRange(\n                             ", "new", " ", "System", ".Windows.Forms.ToolStripItem[] { \n                           AddArea\n                        }\n                        );\n                    }\n                ", "break", ";\n                ", "case", " ", "\"area\"", ":\n                {\n                    ", "this", ".contextMenuStrip.Items.Clear();\n                    ", "ToolStripMenuItem", " ", "AddUser", " ", "=", " ", "new", " ", "ToolStripMenuItem", "();\n                    AddUser.Name = ", "\"添加用户\"", ";\n                    AddUser.Text = ", "\"添加用户\"", ";\n                    AddUser.Image = ", "this", ".treeImgs.Images[", "3", "];\n                    AddUser.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;\n                    AddUser.Click += ", "new", " ", "System", ".EventHandler(AddUser_Click);\n\n                    \n\n                    ", "ToolStripMenuItem", " ", "DeleteArea", " ", "=", " ", "new", " ", "ToolStripMenuItem", "();\n                    DeleteArea.Name = ", "\"删除组\"", ";\n                    DeleteArea.Text = ", "\"删除组\"", ";\n                    DeleteArea.Click += ", "new", " ", "System", ".EventHandler(DeleteArea_Click);\n\n                    \n\n\n\n\n\n                    contextMenuStrip.Items.AddRange(\n                         ", "new", " ", "System", ".Windows.Forms.ToolStripItem[] { \n                           AddUser,DeleteArea       \n                        }\n                    );\n                }\n                ", "break", ";\n                ", "case", " ", "\"user\"", ":\n                {\n                    ", "this", ".contextMenuStrip.Items.Clear();\n\n      \n\n                    ", "ToolStripMenuItem", " ", "DeleteUser", " ", "=", " ", "new", " ", "ToolStripMenuItem", "();\n                    DeleteUser.Name = ", "\"删除用户\"", ";\n                    DeleteUser.Text = ", "\"删除用户\"", ";\n                    DeleteUser.Click += ", "new", " ", "System", ".EventHandler(DeleteUser_Click);\n\n\n                  \n\n                    contextMenuStrip.Items.AddRange(\n                         ", "new", " ", "System", ".Windows.Forms.ToolStripItem[] { \n                           \n                             DeleteUser                  \n                        }\n                    );\n                }\n                ", "break", ";\n            }\n        }\n        ", "private", " ", "void", " ", "ContractListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        ", "private", " ", "void", " ", "ContractListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n            List<string> array = ", "new", " ", "List", "<string>();\n            foreach (TreeNode node in ", "this", ".treeView1.SelectedNode.Nodes)\n            {\n                array.Add((node.Text.Split(", "'/'", "))[", "0", "]);\n            }\n\n         \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        ", "private", " ", "void", " ", "ImportDataUser_Click", "(object sender, EventArgs e)", "\n        {\n          \n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "SearchTreeNode", "(TreeNodeCollection treeNodes,string fileName)", "\n        {\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "if", " (treeNode.Tag.ToString() == ", "\"user\"", ")\n                {\n                    ", "if", " (treeNode.Text.Equals(fileName))\n                    {\n                        ", "this", ".treeView1.Nodes.Remove(treeNode);\n                    }\n                    ", "continue", ";\n                }\n\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    SearchTreeNode(treeNode.Nodes, fileName);\n                }\n            }\n        }\n        \n\n\n        ", "private", " TreeNode ", "CreateChildNodeByImport", "(string file)", "\n        {\n            ", "TreeNode", " ", "node", " ", "=", " ", "new", " ", "TreeNode", "(file);\n            node.Tag = ", "\"user\"", ";\n            ", "return", " node;\n        }\n\n        ", "private", " ", "void", " ", "ExportUserData_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n\n        ", "private", " ", "void", " ", "UpdateUserInfo_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "SendAndGetListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n          \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        ", "private", " ", "void", " ", "SendAndGetListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        \n        ", "private", " ", "void", " ", "SendAndGetListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "SendAndGetListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        \n        ", "private", " ", "void", " ", "CheckListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n           \n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "CheckListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n        \n        }\n        \n\n        ", "private", " ", "void", " ", "CheckListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "CheckListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n           \n           ", "// this.treeView1.ExpandAll();", "\n        }\n\n        \n        ", "private", " ", "void", " ", "BaitingListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n           \n         \n           ", "// this.treeView1.ExpandAll();", "\n        }\n\n        ", "private", " ", "void", " ", "BaitingListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n           \n         \n        }\n\n        \n\n        ", "private", " ", "void", " ", "BaitingListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n          \n        }\n\n\n        ", "private", " ", "void", " ", "BaitingListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n        }\n        \n\n        ", "private", " ", "void", " ", "ProcessListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n            \n\n        }\n        ", "private", " ", "void", " ", "ProcessListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n\n        ", "private", " ", "void", " ", "ProcessListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n        ", "private", " ", "void", " ", "ProcessListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        \n        ", "private", " ", "void", " ", "OrderListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n           \n\n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "OrderListBakRootItem_Click", "(object sender, EventArgs e)", "\n        {\n\n\n            \n            ", "//this.treeView1.ExpandAll();", "\n        }\n\n\n        ", "private", " ", "void", " ", "OrderListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n         \n        }\n        ", "private", " ", "void", " ", "OrderListBakGroupItem_Click", "(object sender, EventArgs e)", "\n        {\n        }\n\n\n        ", "private", " ", "void", " ", "BakSendAndGetList_Click", "(object sender, EventArgs e)", "\n        {\n        }\n\n        ", "private", " ", "void", " ", "BakCheckList_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "BakBaitingList_Click", "(object sender, EventArgs e)", "\n        {\n          \n        }\n        ", "private", " ", "void", " ", "BakListItem_Click", "(object sender, EventArgs e)", "\n        {\n            \n        }\n\n        ", "private", " ", "void", " ", "BakProcessList_Click", "(object sender, EventArgs e)", "\n        {\n        }\n\n        ", "private", " ", "void", " ", "BakOrderList_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "SendAndGetList_Click", "(object sender, EventArgs e)", "\n        {\n          \n        }\n\n        ", "private", " ", "void", " ", "CheckList_Click", "(object sender, EventArgs e)", "\n        {\n         \n        }\n\n        ", "private", " ", "void", " ", "ProcessList_Click", "(object sender, EventArgs e)", "\n        {\n\n        }\n\n\n        ", "private", " ", "void", " ", "BaitingList_Click", "(object sender, EventArgs e)", "\n        {\n\n          \n        }\n\n        ", "private", " ", "void", " ", "OrderList_Click", "(object sender, EventArgs e)", "\n        {\n            \n               \n        }\n\n        ", "private", " ", "void", " ", "StatisticsRoot_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "StatisticsListByGroup_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "ContractListByRoot_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n\n        ", "private", " ", "void", " ", "AddArea_Click", "(object sender, EventArgs e)", "\n        {\n            ", "AddUnit", " ", "form", " ", "=", " ", "new", " ", "AddUnit", "(", "this", ");\n            form.ShowDialog();\n            ", "if", " (!string.IsNullOrEmpty(unit))\n            {\n                ", "TreeNode", " ", "node", " ", "=", " CreateRootNode();\n\n                ", "//this.treeView1.Nodes.", "\n                ", "//TreeNode root = this.treeView1.Nodes[0];", "\n                ", "this", ".treeView1.Nodes[", "0", "].Nodes.Add(node);\n                SaveToXml();\n                LoadFormXml();\n            }\n            ", "//this.treeView1.ExpandAll();", "\n        }\n        ", "private", " ", "void", " ", "RemoveUser", "(TreeNodeCollection treeNodes)", "\n        {\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "if", " (treeNode.Tag.ToString().Equals(", "\"user\"", "))\n                {\n                    ", "if", " (treeNode.Text.Equals(user))\n                    {\n                        treeNode.Remove();\n                    }\n                }\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    RemoveUser(treeNode.Nodes);\n                }\n            }\n        }\n\n\n        ", "private", " ", "void", " ", "AddUser_Click", "(object sender, EventArgs e)", "\n        {\n            ", "AddUser", " ", "form", " ", "=", " ", "new", " ", "AddUser", "(", "this", ");\n            ", "if", " (form.ShowDialog() == DialogResult.OK)\n            {\n                ", "if", " (!string.IsNullOrEmpty(user))\n                {\n                    \n                    CheckUser(", "this", ".treeView1.Nodes);\n                    ", "if", " (haveUser)\n                    {\n                        ", "if", " (MessageBox.Show(", "\"该用户[\"", " + user + ", "\"]已经存在，是否覆盖?\"", ", ", "\"确认\"", ", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)\n                        {\n                            RemoveUser(", "this", ".treeView1.Nodes);\n                            ", "TreeNode", " ", "node", " ", "=", " CreateChildNode();\n                            ", "TreeNode", " ", "selectNode", " ", "=", " ", "this", ".treeView1.SelectedNode;\n                            selectNode.Nodes.Add(node);\n                            SaveToXml();\n                            LoadFormXml();\n                        }\n                        ", "else", "\n                        {\n                            ", "//SetNodeBackColor(this.treeView1.Nodes);", "\n                        }\n                    }\n                    ", "else", "\n                    {\n                        ", "TreeNode", " ", "node", " ", "=", " CreateChildNode();\n                        ", "TreeNode", " ", "selectNode", " ", "=", " ", "this", ".treeView1.SelectedNode;\n                        selectNode.Nodes.Add(node);\n                        SaveToXml();\n                        LoadFormXml();\n\n                    }\n                   \n                }\n            }\n            haveUser = ", "false", ";\n        }\n\n        ", "private", " ", "void", " ", "CheckUser", "(TreeNodeCollection treeNodes)", "\n        {\n            tmpBool = ", "false", ";\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "if", " (treeNode.Tag.ToString().Equals(", "\"user\"", "))\n                {\n                    ", "if", " (treeNode.Text.Equals(user))\n                    {\n                        treeNode.BackColor = Color.Red;\n                        ", "//treeNode", "\n                        treeNode.Parent.Expand();\n                        haveUser = ", "true", ";\n                    }\n                }\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    CheckUser(treeNode.Nodes);\n                }\n            }\n        }\n\n        ", "private", " ", "void", " ", "DeleteUser_Click", "(object sender, EventArgs e)", "\n        {\n            ", "if", " (MessageBox.Show(", "\"你确定要删除吗?\"", ", ", "\"删除确认\"", ", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)\n            {\n                ", "if", " (", "this", ".treeView1.SelectedNode == ", "null", ")\n                {\n                    ", "return", ";\n                }\n                string[] array = ", "this", ".treeView1.SelectedNode.Text.Split(", "'/'", ");\n                ", "this", ".treeView1.Nodes.Remove(", "this", ".treeView1.SelectedNode);\n                SaveToXml();\n                LoadFormXml();\n               \n                \n              \n            }\n        }\n        ", "private", " ", "void", " ", "DeleteArea_Click", "(object sender, EventArgs e)", "\n        {\n            ", "if", " (MessageBox.Show(", "\"你确定要删除吗?\"", ", ", "\"删除确认\"", ", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)\n            {\n                ", "if", " (", "this", ".treeView1.SelectedNode == ", "null", ")\n                {\n                    ", "return", ";\n                }\n\n                ", "if", " (", "this", ".treeView1.SelectedNode.Tag.ToString() == ", "\"area\"", ")\n                {\n                    List<string> array = ", "new", " ", "List", "<string>();\n                    foreach (TreeNode node in ", "this", ".treeView1.SelectedNode.Nodes)\n                    {\n                        array.Add((node.Text.Split(", "'/'", "))[", "0", "]);\n                    }\n                    ", "if", " (array.Count != ", "0", ")\n                    {\n                        MessageBox.Show(", "\"不能删除非空用户的组结点！\"", ", ", "\"确定\"", ", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                    }\n                    ", "else", "\n                    {\n                        ", "this", ".treeView1.Nodes.Remove(", "this", ".treeView1.SelectedNode);\n                        SaveToXml();\n                        LoadFormXml();\n                        ", "//binary.DeleteAccountDirectory(array[0]);", "\n                     \n                    }\n                   \n                }\n            }\n        }\n\n\n        ", "private", " ", "void", " ", "ListItem_Click", "(object sender, EventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "AddTabPage", "(string pageTitle, Control ctrForm)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "treeView1_DoubleClick", "(object sender, EventArgs e)", "\n        {\n            \n        }\n\n        ", "private", " ", "void", " ", "toolbtn_AddUnit_Click", "(object sender, EventArgs e)", "\n        {\n            ", "AddUnit", " ", "form", " ", "=", " ", "new", " ", "AddUnit", "(", "this", ");\n            form.ShowDialog();\n            ", "if", " (!string.IsNullOrEmpty(unit))\n            {\n                ", "TreeNode", " ", "node", " ", "=", " CreateRootNode();\n\n                ", "//this.treeView1.Nodes.", "\n                ", "//TreeNode root = this.treeView1.Nodes[0];", "\n                ", "this", ".treeView1.Nodes[", "0", "].Nodes.Add(node);\n                ", "//this.treeView1.Nodes[\"root\"].Nodes.Add(node);", "\n                SaveToXml();\n                LoadFormXml();\n            }\n            ", "//this.treeView1.ExpandAll();", "\n            \n        }\n        ", "private", " TreeNode ", "CreateRootNode", "()", "\n        {\n            ", "TreeNode", " ", "node", " ", "=", " ", "new", " ", "TreeNode", "(", "this", ".unit);\n            node.Tag = ", "\"area\"", ";\n            node.ImageIndex = ", "1", ";\n            node.SelectedImageIndex = ", "1", ";\n            ", "return", " node;\n        }\n        ", "private", " TreeNode ", "CreateChildNode", "()", "\n        {\n            ", "TreeNode", " ", "node", " ", "=", " ", "new", " ", "TreeNode", "(", "this", ".user);\n            node.Tag = ", "\"user\"", ";\n            node.ImageIndex = ", "2", ";\n            node.SelectedImageIndex = ", "2", ";\n            ", "return", " node;\n        }\n\n\n        ", "public", " ", "void", " ", "SaveToXml", "()", "\n        {\n            ", "XmlDocument", " ", "doc", " ", "=", " ", "new", " ", "XmlDocument", "();\n            doc.LoadXml(", "\"<Menu></Menu>\"", ");\n            ", "XmlNode", " ", "root", " ", "=", " doc.DocumentElement;\n            doc.InsertBefore(doc.CreateXmlDeclaration(", "\"1.0\"", ", ", "\"utf-8\"", ", ", "\"yes\"", "), root);\n            TreeNode2Xml(", "this", ".treeView1.Nodes, root);\n            xml.SaveXml(doc);\n        }\n\n        ", "private", " ", "void", " ", "TreeNode2Xml", "(TreeNodeCollection treeNodes, XmlNode xmlNode)", "\n        {\n            ", "XmlDocument", " ", "doc", " ", "=", " xmlNode.OwnerDocument;\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "XmlNode", " ", "element", " ", "=", " doc.CreateNode(", "\"element\"", ", ", "\"Item\"", ", ", "\"\"", ");\n                ", "XmlAttribute", " ", "attr", " ", "=", " doc.CreateAttribute(", "\"Title\"", ");\n                attr.Value = treeNode.Text;\n                element.Attributes.Append(attr);\n                element.AppendChild(doc.CreateCDataSection(treeNode.Tag.ToString()));\n                xmlNode.AppendChild(element);\n\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    TreeNode2Xml(treeNode.Nodes, element);\n                }\n            }\n        }\n        \n        ", "private", " ", "void", " ", "treeView1_AfterSelect", "(object sender, TreeViewEventArgs e)", "\n        {\n            ", "string", " ", "path", " ", "=", " ", "null", ";\n            ", "TreeNode", " ", "node", " ", "=", " ", "this", ".treeView1.SelectedNode;\n            ", "//node.ForeColor = Color.Red;", "\n            ", "if", " (node != ", "null", ")\n            {\n                path = node.Text;\n                ", "while", " (node.Parent != ", "null", ")\n                {\n                    node = node.Parent;\n                    path = node.Text + ", "\"\\\\\"", " + path;\n                }\n            }\n            \n        }\n\n        ", "private", " ", "void", " ", "treeView1_Click", "(object sender, EventArgs e)", "\n        {\n            ", "//this.treeView1.Nodes.f", "\n            ", "object", " ", "tmpObj", " ", "=", " ", "this", ".treeView1.GetNodeAt(", "this", ".treeView1.PointToClient(Cursor.Position));\n            ", "if", " (tmpObj != ", "null", ")\n            {\n                ", "if", " ((tmpObj as TreeNode).Bounds.Contains(", "this", ".treeView1.PointToClient(Cursor.Position)))\n                {\n                    tmpBool = ", "true", ";\n                }\n            }\n        }\n\n        ", "private", " ", "void", " ", "treeView1_BeforeExpand", "(object sender, TreeViewCancelEventArgs e)", "\n        {\n            ", "if", " (tmpBool)\n            {\n                e.Cancel = tmpBool;\n            }\n            tmpBool = ", "false", "; \n        }\n\n        ", "private", " ", "void", " ", "treeView1_BeforeCollapse", "(object sender, TreeViewCancelEventArgs e)", "\n        {\n            ", "if", " (tmpBool)\n            {\n                e.Cancel = tmpBool;\n            }\n            tmpBool = ", "false", ";\n\n        }\n\n        ", "private", " ", "void", " ", "treeView1_MouseClick", "(object sender, MouseEventArgs e)", "\n        {\n            \n        }\n      \n        ", "private", " ", "void", " ", "treeView1_MouseMove", "(object sender, MouseEventArgs e)", "\n        {\n           \n        }\n\n        ", "private", " ", "void", " ", "treeView1_MouseLeave", "(object sender, EventArgs e)", "\n        {\n           \n\n        }\n\n        ", "private", " ", "void", " ", "toolbtnSearch_Click", "(object sender, EventArgs e)", "\n        {\n            ", "string", " ", "searchName", " ", "=", " ", "this", ".toolText.Text;\n            SetNodeBackColor(", "this", ".treeView1.Nodes);\n            ", "if", " (!string.IsNullOrEmpty(searchName))\n            {\n                SearchXml(", "this", ".treeView1.Nodes, searchName);\n            }\n        }\n        ", "private", " ", "void", " ", "SetNodeBackColor", "(TreeNodeCollection treeNodes)", "\n        {\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                treeNode.BackColor = Color.White;\n                ", "if", " (treeNode.Tag.ToString().Equals(", "\"area\"", "))\n                {\n                    treeNode.Collapse();\n                }\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    SetNodeBackColor(treeNode.Nodes);\n                }\n            }\n        }\n\n        ", "private", " ", "void", " ", "SearchXml", "(TreeNodeCollection treeNodes,string search)", "\n        {\n            foreach (TreeNode treeNode in treeNodes)\n            {\n                ", "if", " (treeNode.Text.ToString().Contains(search))\n                {\n                    treeNode.BackColor = Color.Coral;\n                    ", "if", "(treeNode.Parent!=", "null", ")\n                    {\n                        treeNode.Parent.Expand();\n                    }\n                }\n                ", "if", " (treeNode.Nodes.Count > ", "0", ")\n                {\n                    SearchXml(treeNode.Nodes,search);\n                }\n            }\n        }\n\n        ", "private", " ", "void", " ", "toolText_TextChanged", "(object sender, EventArgs e)", "\n        {\n            toolbtnSearch_Click(sender, e);\n        }\n\n        ", "//节点的选中取消事件", "\n        ", "private", " ", "void", " ", "treeView1_AfterCheck", "(object sender, TreeViewEventArgs e)", "\n        {\n            ", "if", " (e.Node.Checked)\n            {\n               setChildNodeCheckedState(e.Node, ", "true", ");\n            }\n            ", "else", "\n            {\n                setChildNodeCheckedState(e.Node,  ", "false", ");\n            }\n        }\n\n\n        ", "//选中节点之后，选中节点的所有子节点", "\n        ", "private", " ", "void", " ", "setChildNodeCheckedState", "(TreeNode currNode, bool state)", "\n        {\n            ", "TreeNodeCollection", " ", "nodes", " ", "=", " currNode.Nodes;\n            ", "if", " (nodes.Count > ", "0", ")\n                foreach (TreeNode tn in nodes)\n                {\n\n                    tn.Checked = state;\n                    setChildNodeCheckedState(tn, state);\n                }\n        }\n    }\n}\n\n", "\n", "这个是class1的代码", "\n", "using", " System;\n", "using", " System.Collections.Generic;\n", "using", " System.Text;\n", "using", " System.Xml;\n", "using", " System.Windows.Forms;\n\n", "namespace", " ", "TreeView", "\n{\n    ", "public", " ", "class", " ", "XmlOperator", "\n    {\n        ", "private", " ", "string", " filepath;    ", "//文件路径", "\n        ", "public", " ", "const", " ", "string", " xmlContent = ", "\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?><Menu><Item Title=\\\"所有\\\"><![CDATA[root]]></Item></Menu>\"", ";\n        ", "public", " ", "string", " Filepath\n        {\n            ", "get", " { ", "return", " filepath; }\n            ", "set", " { filepath = ", "value", "; }\n        }\n        ", "private", " ", "string", " filename;    ", "//Xml文件名", "\n\n        ", "public", " ", "string", " Filename\n        {\n            ", "get", " { ", "return", " filename; }\n            ", "set", " { filename = ", "value", "; }\n        }\n        ", "public", " ", "XmlOperator", "(", "string", " filepath, ", "string", " filename", ")", "\n        {\n            ", "this", ".filepath = filepath + ", "\"\\\\\"", " + filename;\n            ", "this", ".filename = filename;\n        }\n\n        ", "public", " XmlNodeList ", "GetXmlNodeList", "(", ")", "\n        {\n            ", "try", "\n            {\n                XmlDocument xmlDoc = ", "new", " XmlDocument();\n                xmlDoc.Load(filepath);\n                XmlNodeList xmlNodes = xmlDoc.DocumentElement.ChildNodes;\n                ", "return", " xmlNodes;\n            }\n            ", "catch", "\n            {\n                MessageBox.Show(", "\"用户目录文件已损坏，自动恢复到初始状态！\"", ", ", "\"提示\"", ", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                RecoverXml();\n                XmlDocument xmlDoc = ", "new", " XmlDocument();\n                xmlDoc.Load(filepath);\n                XmlNodeList xmlNodes = xmlDoc.DocumentElement.ChildNodes;\n                ", "return", " xmlNodes;\n            }\n        }\n\n        ", "public", " ", "void", " ", "RecoverXml", "(", ")", "\n        {\n            XmlDocument doc = ", "new", " XmlDocument();\n            doc.InnerXml = xmlContent;\n            ", "this", ".SaveXml(doc);\n        }\n\n        ", "public", " ", "void", " ", "SaveXml", "(", "XmlDocument doc", ")", "\n        {\n            doc.Save(filepath);\n        }\n\n\n    }\n}\n\n", "\n", "添加用户组界面代码", "\n", "using", " System;\n", "using", " System.Collections.Generic;\n", "using", " System.ComponentModel;\n", "using", " System.Data;\n", "using", " System.Drawing;\n", "using", " System.Text;\n", "using", " System.Windows.Forms;\n\n", "namespace", " ", "GlassProcess", "\n{\n    ", "public", " ", "partial", " ", "class", " ", "AddUnit", " : ", "Form", "\n    {\n        DbView dbview; ", "//当然就是DbView", "\n        ", "public", " ", "AddUnit", "(", "DbView form", ")", "\n        {\n            InitializeComponent();\n            dbview = form;\n        }\n\n        ", "///", " ", "\n        ", "///", " 把dbview中的unit单元设置为txtUnit的值，且关闭窗体", "\n        ", "///", " ", "\n        ", "///", " ", "<param name=\"sender\">", "</param>", "\n        ", "///", " ", "<param name=\"e\">", "</param>", "\n\n        ", "private", " ", "void", " ", "btnAdd_Click", "(", "object", " sender, EventArgs e", ")", "\n        {\n            dbview.unit = ", "this", ".txtUnit.Text;\n            ", "this", ".Close();\n        }\n\n        ", "private", " ", "void", " ", "AddUnit_Load", "(", "object", " sender, EventArgs e", ")", "\n        {\n\n        }\n    }\n}\n\n", "\n", "添加用户界面代码", "\n", "using", " ", "System", ";\n", "using", " ", "System", ".Collections.Generic;\n", "using", " ", "System", ".ComponentModel;\n", "using", " ", "System", ".Data;\n", "using", " ", "System", ".Drawing;\n", "using", " ", "System", ".Text;\n", "using", " ", "System", ".Windows.Forms;\n\nnamespace GlassProcess\n{\n    ", "public", " partial ", "class", " AddUser : Form\n    {\n        private DbView form;//还是DbView\n        ", "public", " AddUser(DbView ", "from", ")\n        {\n            InitializeComponent();\n            this.form = ", "from", ";\n\n        }\n\n        private ", "void", " btnAdd_Click(", "object", " sender, EventArgs e)\n        {\n            form.", "user", " = this.txtUser.Text.Trim(); //将dbView中的", "user", "设置为txtUser.Text的值\n            DialogResult = DialogResult.OK;\n            this.", "Close", "();\n        }\n\n        private ", "void", " AddUser_Load(", "object", " sender, EventArgs e)\n        {\n\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;具体是哪些不懂&amp;#xff1f;我看都有注释&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["jq简单代码求注释 不知道怎么写", ["不懂jq 但需要明白图中都是什么意思 凑一下字数 再凑一下字数 继续凑一下字数", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This specific problem was brought about by an update on my Linux system, which messed up my permissions a little. I changed the user in the Apache directory to http instead of root, and the problem is now gone.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["PHP代码正在作为HTML注释打印", ["\n\n", "I am having the following piece of code in a php file:", "\n\n", "    <?php\n    include_once('includes/connection.php');\n    include_once('includes/article.php');\n\n    $article =  new Article;\n    $articles = $article->fetch_all();\n    ?>\n<html>....</html>\n", "\n\n", "Instead of getting the expected result, I get the message \"fetch_all(); ?>, which means that the above code is treated as HTML comment. I have read the similar threads(that blame the short_open_tag value mainly) around but didn't help me at all. Any ideas?", "\n\n", "Edit: Many thanks for your responses. Seems that the specific weird problem was about an update on my Linux system which messed up a little my permissions. I changed the user to http instead of root and the problem is gone.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Sounds like your &lt;code&gt;$oldcover&lt;/code&gt; variable could be empty and thus is checking if the directory exists or not.&lt;/p&gt;\n\n&lt;p&gt;This then tries to &lt;code&gt;unlink&lt;/code&gt; the directory instead. Perhaps you should try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if($oldcover &amp;amp;&amp;amp; file_exists(\"../media/books/$oldcover\")) {\n  unlink(\"../media/books/$oldcover\");\n} else { \n  //do nothing \n} \n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["如果文件存在则返回其他注释", ["\n\n", "I have the following code:", "\n\n", "if(file_exists(\"../media/books/$oldcover\")) {\n    unlink(\"../media/books/$oldcover\");\n} else { \n    //do nothing \n} \n", "\n\n", "Why does the ", "if", " works good and the else returns this annoying note: ", "Unlink(../media/books/) [function.unlink]: Is a directory in (path...)", "\n\n", "I want the else doing nothing.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nlist&amp;#61;[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;&amp;#61;list[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;&amp;#61;list[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n# 初始值&amp;#xff1a;&lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n#循环列表&amp;#xff0c;从list的&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;开始&amp;#xff0c;然后依次是&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;&amp;#xff0c;和&lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;和&lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;比较\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,len(list)):\n    # 如果当前元素比&lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;大&amp;#xff0c;则把当前值赋值给&lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;来保存这个更大的数\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;&amp;lt;list[i]:\n        &lt;span class=\"hljs-keyword\"&gt;max&lt;/span&gt;&amp;#61;list[i]\n    # 如果当前元素比&lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;小&amp;#xff0c;则把当前值赋值给&lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;来保存这个更小的数\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;&amp;gt;list[i]:\n        &lt;span class=\"hljs-keyword\"&gt;min&lt;/span&gt;&amp;#61;list[i]\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大值为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;%max)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最小值为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;%min)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["帮个忙标一下注释Python的", ["list=[8,9,5,7,4,2,6]", "max=list[0]", "min=list[0]", "for i in range(0,len(list)):", "if max<list[i]:", "max=list[i]", "if min>list[i]:", "min=list[i]", "print(\"最大值为：%d\"%max)print(\"最小值为：%d\"%min)"]], "Tag": "程序设计"}
{"Answer": "&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"351\" src=\"https://img-ask.csdnimg.cn/upload/1621921968703.png\" width=\"1204\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;手打不易&amp;#xff0c;请点采纳。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["单片机代码求解什么意思每句注释", ["#include \t //包含51头文件\n#include  //包含移位标准库函数头文件\n\n#define uint unsigned int\n#define uchar unsigned char\nsbit wx = P2^7;\t\t\nsbit dx = P2^6;\nsbit led0=P1^0;\nsbit beep=P2^3;\n\nuchar code table[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f,\n 0x6f};\n\nvoid delay(uint n)\n{\n    uint i=0,j=0;\n    for(i=0;i"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;  这是典型的辗转相除法找最大公因数\n 再利用最大公因数与最小公倍数的性质求公倍数。\n  注释之前我先简单说一下这个方法的原理:\n  1.辗转相除法\n 以求9和6的最大公因数和最小公倍数为例。\n 9/&lt;span class=\"hljs-attribute\"&gt;6&lt;/span&gt;&amp;#61;1余3    9%6&amp;#xff1d;3   那么9分为了3和6两部分\n 6/&lt;span class=\"hljs-attribute\"&gt;3&lt;/span&gt;&amp;#61;2余0    6%3&amp;#xff1d;0   那么6是3的倍数&amp;#xff0c;而前面已经说了9为3和6相加&amp;#xff0c;那么9也一定是3的倍数。\n 因此3为6和9的最大公因数&amp;#xff08;至于为什么是最大的&amp;#xff0c;是因为我们是从俩数相除开始的&amp;#xff0c;也就是从最大的数往下找&amp;#xff09;\n  2.最小公倍数\n   对于最小公倍数我们假设9&amp;#xff0c;6&amp;#xff0c;他们的最大公因数为3。\n  而&lt;span class=\"hljs-attribute\"&gt;9&lt;/span&gt;&amp;#61;3*3     &lt;span class=\"hljs-attribute\"&gt;6&lt;/span&gt;&amp;#61;3*2\n  最简单的公倍数为6&lt;span class=\"hljs-number\"&gt;*9&lt;/span&gt;&amp;#61;54\n  写成6&lt;span class=\"hljs-number\"&gt;*9&lt;/span&gt;&amp;#61;3&lt;span class=\"hljs-number\"&gt;*2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*3&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*3&lt;/span&gt;\n  可以发现存在两个最大公因数3\n  那么去掉一个为3&lt;span class=\"hljs-number\"&gt;*2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*3&lt;/span&gt;就既是9倍数也为6倍数\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;则最小公倍数&amp;#xff1d;两数相乘/最大公因数&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;      再看注释如下:&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;stdlib.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//头文件预处理不用多说&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;gys&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//定义求最大公因数函数&amp;#xff0c;返回整型&lt;/span&gt;\n&lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r;&lt;span class=\"hljs-comment\"&gt;//声明整型r接收余数&lt;/span&gt;\n r&amp;#61;a%b;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(r!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//若一直未除尽则一直循环&lt;/span&gt;\n{\na&amp;#61;b;b&amp;#61;r;r&amp;#61;a%b;&lt;span class=\"hljs-comment\"&gt;//这个则是开始我们的算法&lt;/span&gt;\n                 &lt;span class=\"hljs-comment\"&gt;//即用小数取模余数&amp;#xff0c;再更新再循环&lt;/span&gt;\n}\n&lt;span class=\"hljs-comment\"&gt;//除到余数为0说明找到了最大公因数&amp;#xff0c;退出循环。&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; b;&lt;span class=\"hljs-comment\"&gt;//更新到最后的b就是最大公因数&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;gbs&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//定义寻找最小公倍数函数&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a*b/&lt;span class=\"hljs-built_in\"&gt;gys&lt;/span&gt;(a,b);&lt;span class=\"hljs-comment\"&gt;//调用之前的最大公因数函数&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//实现最大公因数和最小公倍数关系求出最小公倍数&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n;\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;m&amp;amp;n);&lt;span class=\"hljs-comment\"&gt;//主函数输入m,n&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;gys&amp;#61;%d/n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;gys&lt;/span&gt;(m,n));&lt;span class=\"hljs-comment\"&gt;//调用公因数函数并输出结果和换行&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;gys&amp;#61;%d/n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;gys&lt;/span&gt;(m,n));&lt;span class=\"hljs-comment\"&gt;//调用公倍数函数并输出结果和换行&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//程序结束&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;不懂再问&amp;#xff01;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["来个xd注释一下，详细点", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哈喽&amp;#xff0c;其实就是字母的大小写转换哦&amp;#xff1a;&lt;br /&gt;在 C 语言中&amp;#xff0c;大小写字母转换是利用 ASCII 码差值&amp;#xff1a;&lt;br /&gt;大写字母与小写字母之间的ASCII 码差值为 32&amp;#xff0c;即&amp;#xff1a;小写转大写就是将小写字母的 ASCII 码值-32&amp;#xff0c;即可得到对应的大写字母。&lt;br /&gt;反之&amp;#xff1a;大写转小写即小写字母的ASCII 码&amp;#43;32。&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/500634316436131.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["注释下代码，代码是什么意思", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;chatgpt:&lt;br /&gt;要在 IntelliJ IDEA 中配置注释以包含用户信息&amp;#xff0c;您可以遵循以下步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;打开 IntelliJ IDEA&amp;#xff0c;并转到“File”菜单&amp;#xff0c;然后选择“Settings”&amp;#xff08;或按快捷键 Ctrl &amp;#43; Alt &amp;#43; S&amp;#xff09;。&lt;br /&gt;在设置面板中&amp;#xff0c;展开“Editor”菜单&amp;#xff0c;然后选择“Live Templates”。&lt;br /&gt;在左侧窗格中&amp;#xff0c;选择“Java”&amp;#xff08;或您正在使用的语言&amp;#xff09;。&lt;br /&gt;在右侧窗格中&amp;#xff0c;选择您要更改注释模板的选项卡&amp;#xff08;例如&amp;#xff0c;“comments”&amp;#xff09;。&lt;br /&gt;选择要更改的注释模板&amp;#xff0c;并单击“Edit”按钮。&lt;br /&gt;在弹出的编辑器中&amp;#xff0c;找到您想要添加用户信息的注释部分&amp;#xff0c;并在适当的位置输入“$USER$”。例如&amp;#xff0c;您可以将其添加到/*&lt;em&gt;和&lt;/em&gt;/之间。&lt;br /&gt;单击“Apply”或“OK”按钮保存更改并关闭设置面板。&lt;br /&gt;现在&amp;#xff0c;当您键入注释时&amp;#xff0c;您将看到用户信息的变量提示&amp;#xff08;例如&amp;#xff0c;&lt;a type=\"user\" class=\"md_call_user\"&gt;&amp;#64;${USER}&amp;#xff09;。您可以通过输入您的用户名替换$USER$变量&amp;#xff0c;或者在设置面板中配置IDE以自动获取您的用户名。&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;关于更改注释颜色&amp;#xff0c;您可以遵循以下步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;转到“File”菜单&amp;#xff0c;并选择“Settings”&amp;#xff08;或按快捷键 Ctrl &amp;#43; Alt &amp;#43; S&amp;#xff09;。&lt;br /&gt;在设置面板中&amp;#xff0c;展开“Editor”菜单&amp;#xff0c;然后选择“Color Scheme”。&lt;br /&gt;在左侧窗格中&amp;#xff0c;选择您正在使用的语言&amp;#xff08;例如&amp;#xff0c;Java&amp;#xff09;。&lt;br /&gt;在右侧窗格中&amp;#xff0c;展开“Comments”选项卡&amp;#xff0c;并选择您想要更改颜色的注释类型&amp;#xff08;例如&amp;#xff0c;“JavaDoc”&amp;#xff09;。&lt;br /&gt;在颜色面板中&amp;#xff0c;选择您想要使用的新颜色。&lt;br /&gt;单击“Apply”或“OK”按钮保存更改并关闭设置面板。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于idea的文档注释的问题Java", ["我的idea的文档注释怎么没有", "@用户和方法的提示，而且这个颜色怎么改，哈哈", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;新窗口后面的斜杆之后是不是多了一个空格&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["问题写在代码注释里了。", ["\n", "<!DOCTYPE HTML>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<title>window.open</title>\n<script type=\"text/javascript\">\n  function Wopen(){\n    window.open('http://www.imooc.com','_blank','width=600,hight=400,top=100,left=0');  \n  } \n</script>\n</head>\n<body>\n    <input name=\"button\" type=\"button\" onClick=\"Wopen()\" value=\"点击我，打开新窗口!\" / >//这里显示出错，但不知道错哪了。\n</body>\n</html>"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这么简单要什么注释&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; matplotlib &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5001&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;# 取 n 从 1 到 5000&lt;/span&gt;\ny &amp;#61; [np.&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(np.random.randint(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, i) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)/i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5001&lt;/span&gt;)] &lt;span class=\"hljs-comment\"&gt;# 每次取 i 个骰子&amp;#xff0c;计算 5 出现的概率&lt;/span&gt;\n\nplt.plot(x, y) &lt;span class=\"hljs-comment\"&gt;# 画图&lt;/span&gt;\nplt.show() &lt;span class=\"hljs-comment\"&gt;# 显示图像&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/31556589826617.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["Python提问，求程序并有注释，", [".模拟抛掷一枚均匀骰子的随机试验，利用Python编程计算点数5向.上的次数与抛掷骰子总次数的比值，假设取抛掷硬币总次数为n=5000， 可以使用np.random.randint( )获得相应点数5朝上的随机数，画出n从1-5000取值时比值的图形。(观察比值是不是趋近于1/6)"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Long story short, you can but it will be a lot easier to duplicate your annotations in every controller.&lt;/p&gt;\n\n&lt;p&gt;But if you wan't to do this anyway, here are some solutions.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This is the easy one. You can define a global prefix in the &lt;code&gt;config/routes/annotations.yaml&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;If you're using the default config, you can try something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Default controllers\ncontrollers:\n    resource: ../../src/Controller/\n    type: annotation\n\n# Company controllers\ncompany_controllers:\n    resource: ../../src/Controller/Company/\n    type: annotation\n    prefix: /pro/{uniqid}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All your routes will now start with &lt;code&gt;/pro/{uniqid}&lt;/code&gt; and you can remove the &lt;code&gt;@Route&lt;/code&gt; annotation from your controller.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;ParamConverter&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You can create your own &lt;a href=\"http://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/converters.html#creating-a-converter\" rel=\"nofollow noreferrer\"&gt;ParamConverter&lt;/a&gt;. Everytime you'll use a &lt;code&gt;Company&lt;/code&gt; type in an action method, it'll be converted to the matching entity using the &lt;code&gt;uniqid&lt;/code&gt; attribute.&lt;/p&gt;\n\n&lt;p&gt;Something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// src/ParamConverter/CompanyConverter.php\n&amp;lt;?php\n\nnamespace App\\ParamConverter;\n\nuse App\\Entity\\Company;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\ParamConverter;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\nclass CompanyConverter implements ParamConverterInterface\n{\n    const CONVERTER_ATTRIBUTE = 'uniqid';\n\n    /**\n     * @var EntityManagerInterface\n     */\n    private $entityManager;\n\n    /**\n     * CompanyConverter constructor.\n     *\n     * @param EntityManagerInterface $entityManager\n     */\n    public function __construct(EntityManagerInterface $entityManager)\n    {\n        $this-&amp;gt;entityManager = $entityManager;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function apply(Request $request, ParamConverter $configuration)\n    {\n        $uniqid = $request-&amp;gt;attributes-&amp;gt;get(self::CONVERTER_ATTRIBUTE);\n\n        $company = $this-&amp;gt;entityManager-&amp;gt;getRepository(Company::class)-&amp;gt;findOneBy(['uniqid' =&amp;gt; $uniqid]);\n\n        $request-&amp;gt;attributes-&amp;gt;set($configuration-&amp;gt;getName(), $company);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    function supports(ParamConverter $configuration)\n    {\n        return $configuration-&amp;gt;getClass() === Company::class;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With this, you can remove the &lt;code&gt;@ParamConverter&lt;/code&gt; annotation from your controller.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You can't use the access_control section of the &lt;code&gt;security.yaml&lt;/code&gt; file since custom functions are not yet supported.&lt;/p&gt;\n\n&lt;p&gt;Otherwise, something like this could have been nice:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;security:\n    ...\n\n    access_control:\n        -\n            path: ^/pro\n            allow_if: \"is_granted(constant('App\\\\Security\\\\Voter\\\\CompanyVoter::VIEW'), company)\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Note: It was &lt;em&gt;fixed&lt;/em&gt; in &lt;a href=\"https://github.com/symfony/symfony/pull/26660\" rel=\"nofollow noreferrer\"&gt;Symfony 4.1&lt;/a&gt; but i don't know yet how it will work).&lt;/p&gt;\n\n&lt;p&gt;Instead, you can use a subscriber listening on the &lt;code&gt;kernel.request&lt;/code&gt; kernel event:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\nnamespace App\\Subscriber;\n\nuse App\\Entity\\Company;\nuse App\\Security\\CompanyVoter;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;\nuse Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException;\nuse Symfony\\Component\\HttpKernel\\KernelEvents;\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\nuse Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface;\n\nclass SecurityListener implements EventSubscriberInterface\n{\n    /**\n     * @var AuthorizationCheckerInterface\n     */\n    private $authorizationChecker;\n\n    /**\n     * @var EntityManagerInterface\n     */\n    private $entityManager;\n\n    /**\n     * @param AuthorizationCheckerInterface $authorizationChecker\n     * @param EntityManagerInterface $entityManagerInterface\n     */\n    public function __construct(AuthorizationCheckerInterface $authorizationChecker, EntityManagerInterface $entityManager)\n    {\n        $this-&amp;gt;authorizationChecker = $authorizationChecker;\n        $this-&amp;gt;entityManager = $entityManager;\n    }\n\n    /**\n     * @param GetResponseEvent $event\n     */\n    public function onKernelRequest(GetResponseEvent $event)\n    {\n        $request = $event-&amp;gt;getRequest();\n\n        if (!$uniqid = $request-&amp;gt;attributes-&amp;gt;get('uniqid')) {\n            return;\n        }\n\n        $company = $this-&amp;gt;entityManager-&amp;gt;getRepository(Company::class)-&amp;gt;findOneBy(['titre' =&amp;gt; $uniqid]);\n\n        if (!$this-&amp;gt;authorizationChecker-&amp;gt;isGranted(CompanyVoter::VIEW, $company)) {\n            throw new AccessDeniedHttpException();\n        }\n    }\n\n    /**\n     * @return array\n     */\n    public static function getSubscribedEvents()\n    {\n        return array(\n            KernelEvents::REQUEST =&amp;gt; 'onKernelRequest',\n        );\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Symfony4使用路径注释扩展控制器", ["\n\n", "I'm building a webapp with ", "Symfony", " and since now I had to repeat a specific pattern for each new controller I built.", "\n\n", "For example I have this ", "AdminController", " :", "\n\n", "/**\n * @Route(\"/pro/{uniqid}\")\n * @ParamConverter(\"company\", options={\"mapping\":{\"uniqid\" = \"uniqid\"}})\n * @Security(\"is_granted(constant('App\\\\Security\\\\Voter\\\\CompanyVoter::VIEW'), company)\")\n * @package App\\Controller\n */\n class AdminController extends Controller\n {\n    /**\n     * @Route(\"/admin/users/\", name=\"users\")\n     * @return \\Symfony\\Component\\HttpFoundation\\Response\n     */\n     public function users(Company $company){}\n }\n", "\n\n", "So, each controller must redefine ", "@Route", ", ", "@ParamConverter", " and ", "@Security", " that is extremely redundant.", "\n\n", "I tried to create a ", "LoggedController", " that define every annotation, then make ", "Controller", " extends that ", "LoggedController", ", but that does not work.", "\n\n", "Is there a solution or should I continue to copy/paste these Annotation each time I create a new ", "Controller", " that needs to implement it ?", "\n\n", "EDIT : \nI add the declaration of ", "Company", " entity : ", "\n\n", "/**\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\CompanyRepository\")\n */\n class Company\n {\n   /**\n    * @ORM\\Id()\n    * @ORM\\GeneratedValue()\n    * @ORM\\Column(type=\"integer\")\n    */\n    private $id;\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The thing missing is the &lt;code&gt;Content-Type&lt;/code&gt; header. You can modify your code like this:&lt;/p&gt;\n\n&lt;p&gt;In your handler &lt;code&gt;HandleComment&lt;/code&gt; you can define the headers you want to pass to the request&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;case \"POST\":\n    // URL for POSTing comment\n    url := \"https://api.imgur.com/3/comment\"\n\n    // Authorization key\n    token := \"Bearer \" + os.Getenv(\"TOKEN\")\n\n    // Payload\n    payload := strings.NewReader(\"------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\\\"image_id\\\"\r\n\r\nnP0uKKO\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\\\"comment\\\"\r\n\r\nI'm a giraffe!\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--\")\n    // Headers\n    headers := map[string]string{\n        \"Authorization\": token,\n        \"Content-Type\":  \"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\",\n    }\n\n    // Get body and http status code\n    body, status := DoStuff(parts[2], url, payload, headers)\n\n    // If status is not OK\n    if status != 200 {\n        http.Error(w, \"Could not post comment\", status)\n    } else {\n        fmt.Fprintln(w, string(body))\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Update DoStuff to read and pass the headers&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func DoStuff(method string, url string, body io.Reader, headers map[string]string) ([]byte, int) {\n\n    // New request\n    req, err := http.NewRequest(method, url, body)\n    if err != nil {\n      fmt.Println(err)\n    }\n\n    // Add headers\n    for k, v := range headers {\n      req.Header.Add(k, v)\n    }\n\n    res, err := http.DefaultClient.Do(req)\n    if err != nil {\n      fmt.Println(err)\n    }\n\n    defer res.Body.Close()\n\n    imgBody, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n      fmt.Println(err)\n    }\n\n    return imgBody, res.StatusCode\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I would suggest instead of using &lt;code&gt;multipart/form-data;&lt;/code&gt; you might utilize the json content type. It is easier to manage and more readable &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Payload\npayload := strings.NewReader(\"{\\\"image_id\\\": \\\"nP0uKKO\\\", \\\"comment\\\": \\\"I'm a giraffe!\\\"}\")\n// Headers\nheaders := map[string]string{\n    \"Authorization\": token,\n    \"Content-Type\":  \"application/json\",\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Imgur API：GO中的POST注释", ["\n\n", "I'm trying to POST a comment to imgur through the Imgur API. But I can't make the payload right. I have looked through Imgur's page about this and they showed that it should be coded like I have in strings.NewReader. The imageID is nP0uKKO", "\n\n", "func HandleComment(w http.ResponseWriter, r *http.Request){\nparts := strings.Split(r.URL.Path, \"/\")\n\nswitch r.Method {\n\ncase \"POST\":\n    // URL for POSTing comment\n    url := \"https://api.imgur.com/3/comment\"\n\n    // Authorization key\n    token := \"Bearer \" + os.Getenv(\"TOKEN\")\n\n    // Payload\n    payload := strings.NewReader(\"------WebKitFormBoundary7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\\\"image_id\\\"\n\nnP0uKKO\n------WebKitFormBoundary7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\\\"comment\\\"\n\nI'm a giraffe!\n------WebKitFormBoundary7MA4YWxkTrZu0gW--\")\n\n    // Get body and http status code\n    body, status := DoStuff(parts[2], url, payload, token)\n\n    // If status is not OK\n    if status != 200 {\n        http.Error(w, \"Could not post comment\", status)\n    } else {\n        fmt.Fprintln(w, string(body))\n    }\n", "\n\n", "DoStuff() does this", "\n\n", "func DoStuff(method string, url string, body io.Reader, key string) ([]byte, int) {\n\n    // New request\n    req, err := http.NewRequest(method, url, body)\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    // Add header with 'key' authorization\n    req.Header.Add(\"authorization\", key)\n\n    res, err := http.DefaultClient.Do(req)\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    defer res.Body.Close()\n\n    imgBody, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    return imgBody, res.StatusCode\n} \n", "\n\n", "I just get this error", "\n\n", " {\n   data: {\n           error: \"The parameter, image_id, is required.\",\n           request: \"/3/comment\",\n           method: \"POST\"\n   },\n   success: false,\n   status: 400\n }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "textView = (TextView) findViewById(R.id.textView1); 文本\r\nmouse = (ImageView) findViewById(R.id.imageView1); 老鼠\r\nintegral=(ImageView) findViewById(R.id.imageView2); 积分\r\nintegral.setVisibility(View.INVISIBLE); 设置积分不可见\r\npool = new SoundPool(2, AudioManager.STREAM_SYSTEM, 0); 声音\r\nsoundmap.put(1, pool.load(MainActivity.this, R.raw.dalaoshu,1)); 放入大老鼠\r\nsoundmap.put(2, pool.load(MainActivity.this, R.raw.enter,1));放入进入\r\npool.play(soundmap.get(1), 1, 1, 0, -1, 1); 获取声音\r\nfinal Animation translate = AnimationUtils.loadAnimation(MainActivity.this, R.anim.anim_translate); 动画\r\nmouse.setOnTouchListener(new OnTouchListener() { 触摸事件\r\n\r\n    @Override 重写\r\n    public  boolean onTouch(View v, MotionEvent event) { 触摸的时候触发\r\n        v.setVisibility(View.INVISIBLE);// 设置地老鼠不显示 \r\n        i++; 变量+1\r\n        pool.play(soundmap.get(2), 1, 1, 0, 0, 1); 播放\r\n        integral.startAnimation(translate); 开始动画\r\n        integral.setVisibility(View.INVISIBLE); 设置不可见\r\n        textView.setText(\"积分：\"+i+\"0\"); 显示积分\r\n        return false; 返回\r\n    }\r\n});\r\nhandler = new Handler(){ 定义新的handler\r\n\r\n    @Override\r\n    public void handleMessage(Message msg) {\r\n        int index = 0;\r\n        if(msg.what == 0x111){\r\n            index = msg.arg1;\r\n            mouse.setX(position[index][0]);\r\n            mouse.setY(position[index][1]);\r\n            mouse.setVisibility(View.VISIBLE);\r\n\r\n        }\r\n        super.handleMessage(msg);\r\n    }\r\n};\r\nThread t = new Thread(new Runnable() {\r\n\r\n    @Override\r\n    public void run() {\r\n        int index = 0;\r\n        while(!Thread.currentThread().isInterrupted()){\r\n            index = new Random().nextInt(position.length);\r\n            Message m = handler.obtainMessage();\r\n            m.what = 0x111;\r\n            m.arg1 = index;\r\n            handler.sendMessage(m);             \r\n            try {\r\n                Thread.sleep(new Random().nextInt(240)+200);\r\n\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n    }\r\n});\r\nt.start();", "Konwledge_Point": "注释", "Question": ["求大神帮我代码大概注释一下", ["public class MainActivity extends Activity {", "\n    private int i = 0;", "\n    private Handler handler;", "\n    private ImageView mouse;", "\n    private TextView textView ;", "\n    private ImageView integral; //整体图片", "\n    private Chronometer ch ;  //计时器", "\n    private SoundPool pool;  //播放音效", "\n    private static MediaPlayer mp = null; ", "\n    private HashMap soundmap = new HashMap();", "\n    public int[][] position = new int[][] { { 150, 100 }, { 250, 100 }, //地鼠出现的位置", "\n            { 350, 100 }, { 450, 100 }, { 550, 100 }, { 650, 100 },", "\n            { 50, 100 }, { 150, 220 }, { 250, 220 }, { 350, 510 },", "\n            { 450, 220 }, { 550, 220 }, { 650, 220 }, { 50, 220 } };", "\n\n", "@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    //音乐\n    //如果音乐不为空，释放\n    if(mp != null){\n        mp.release();\n    }\n    mp = MediaPlayer.create(MainActivity.this, R.raw.dalaoshu);\n    mp.start();\n\n    //计时器\n    ch = (Chronometer) findViewById(R.id.chronometer1);\n    ch.setBase(SystemClock.elapsedRealtime());//复位计时器，停止计时\n    ch.setFormat(\"已用时间：%s\");\n    ch.start();\n    //设置监听\n    ch.setOnChronometerTickListener(new OnChronometerTickListener() {\n\n        @Override\n        public void onChronometerTick(Chronometer chronometer) {\n            //如果从开始到现在超过了30s\n            if(SystemClock.elapsedRealtime() - ch.getBase() >= 30000){\n                Intent intent = new Intent(MainActivity.this,Finish.class);\n                Bundle bundle = new Bundle();\n                bundle.putInt(\"num\", i);\n                intent.putExtras(bundle);\n                startActivity(intent);\n                finish();\n            }\n        }\n    });\n\n    textView = (TextView) findViewById(R.id.textView1);\n    mouse = (ImageView) findViewById(R.id.imageView1);\n    integral=(ImageView) findViewById(R.id.imageView2);\n    integral.setVisibility(View.INVISIBLE);\n    pool = new SoundPool(2, AudioManager.STREAM_SYSTEM, 0);\n    soundmap.put(1, pool.load(MainActivity.this, R.raw.dalaoshu,1));\n    soundmap.put(2, pool.load(MainActivity.this, R.raw.enter,1));\n    pool.play(soundmap.get(1), 1, 1, 0, -1, 1);\n    final Animation translate = AnimationUtils.loadAnimation(MainActivity.this, R.anim.anim_translate);\n    mouse.setOnTouchListener(new OnTouchListener() {\n\n        @Override\n        public  boolean onTouch(View v, MotionEvent event) {\n            v.setVisibility(View.INVISIBLE);// 设置地老鼠不显示\n            i++;\n            pool.play(soundmap.get(2), 1, 1, 0, 0, 1);\n            integral.startAnimation(translate);\n            integral.setVisibility(View.INVISIBLE);\n            textView.setText(\"积分：\"+i+\"0\");\n            return false;\n        }\n    });\n    handler = new Handler(){\n\n        @Override\n        public void handleMessage(Message msg) {\n            int index = 0;\n            if(msg.what == 0x111){\n                index = msg.arg1;\n                mouse.setX(position[index][0]);\n                mouse.setY(position[index][1]);\n                mouse.setVisibility(View.VISIBLE);\n\n            }\n            super.handleMessage(msg);\n        }\n    };\n    Thread t = new Thread(new Runnable() {\n\n        @Override\n        public void run() {\n            int index = 0;\n            while(!Thread.currentThread().isInterrupted()){\n                index = new Random().nextInt(position.length);\n                Message m = handler.obtainMessage();\n                m.what = 0x111;\n                m.arg1 = index;\n                handler.sendMessage(m);             \n                try {\n                    Thread.sleep(new Random().nextInt(240)+200);\n\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        }\n    });\n    t.start();\n}\n@Override\nprotected void onDestroy() {\n    if(mp != null){\n        mp.stop();\n        mp.release();\n        mp=null;\n    }\n    super.onDestroy();\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;声明了三个整数变量x&amp;#xff0c;y&amp;#xff0c;z&lt;br /&gt;输入这三个数&lt;br /&gt;进入if判断&lt;br /&gt;如果   x&amp;lt;0  ,y&amp;lt;0,  z&amp;lt;0 有一个成立就输入 error&amp;#xff0c;然后结束&lt;br /&gt;否则  执行下一个if判断&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;         如果y小于   z乘以50 的结果&amp;#xff0c;就输出x&amp;#xff0c;然后结束&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;         否则输入x&amp;#43;y - (z * 50)  ,结束&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;望采纳 ^.^  &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["兄弟姐妹们帮我补个注释", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;studentList wl的作用--就是定义了一个类型为studentList的变量wl啊。估计是一个学生信息列表吧&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求注释 关于studentList wl的作用", ["void domain()", "{", "\n", " StudentList wl;", " while(1)", " {", " system(\"cls\");", " menu();", " cout<<\"请选择数字编号0~7\"<<endl;  //cin和cout是输入输出的意思 使用时要把#include iostream加入到头文件当中避免全局命名错误", " int i1;", " cin>>i1;", " while(!(i1>=0&&i1<=7))", " {", " cout<<\"输入有误，请重新输入：\"<<endl;", " cin>>i1;", " }", " switch(i1)  ////计算表达式的值 并逐个与其后的常量表达式比较 当表达式与某常量表达式相等时 即执行其后的语句然后终止判断", " {", " case 1:wl.add();break;", " case 2:wl.modify();break;", " case 3:wl.dele();break;", " case 4:wl.sort();break;", " case 5:wl.search();break;", " case 6:wl.showstudent();break;", " case 7:wl.save();break;", " case 0:cout<<\"系统退出！！\"<<endl;", " exit(0);", " default:", " break;   ///退出switch case语句", " }", " cout<<\"是否返回主菜单? Y/N\"<<endl;", " cin>>p;", " if(p==\"n\"||p==\"N\")", " {", " cout<<\"系统退出！！\"<<endl;", " exit(0);", " }", " }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不需要换行的时候不换行输出就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nfavorite_places&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;衡山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;泰山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;华山&amp;#39;&lt;/span&gt;],\n                 &lt;span class=\"hljs-string\"&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;昆仑山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;太行山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;长白山&amp;#39;&lt;/span&gt;],\n                 &lt;span class=\"hljs-string\"&gt;&amp;#39;王五&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;茅山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;龙虎山&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;武当山&amp;#39;&lt;/span&gt;]}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; key,value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; favorite_places.items():\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{key}:&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; value:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/84301572723610.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["请问怎么打印成注释行那样？", ["\nfavorite_places={", "'张三'", ":[", "'衡山'", ",", "'泰山'", ",", "'华山'", "],\n                 ", "'李四'", ":[", "'昆仑山'", ",", "'太行山'", ",", "'长白山'", "],\n                 ", "'王五'", ":[", "'茅山'", ",", "'龙虎山'", ",", "'武当山'", "]}\n", "for", " key,value ", "in", " favorite_places.items():\n    ", "print", "(f", "'{key}:'", ")\n    ", "for", " i ", "in", " value:\n        ", "print", "(i)\n        \n", "#张三:衡山 泰山 华山", "\n", "#李四:昆仑山 太行山 长白山", "\n", "#王五:茅山 龙虎山 武当山", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第11行的括号是多出来的&amp;#xff0c;&amp;#xff0c;&amp;#xff0c;&amp;#xff0c;你没仔细检查吗&lt;br /&gt;括号是成对成对出现的&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么注释那行才弹出", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-C\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;memory.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;strlen_pro&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*str)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(str);&lt;span class=\"hljs-comment\"&gt;//strlen()用来计算指定的字符串s 的长度&amp;#xff0c;不包括结束字符”\\0”&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//chArray和occurArray按顺序对应出现的字符和它对应的频数&amp;#xff0c;相对于字典dict[ch]&amp;#61;num&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*chArray &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;)*size);&lt;span class=\"hljs-comment\"&gt;//字符数组&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;*countArray&amp;#61;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)*size);&lt;span class=\"hljs-comment\"&gt;//频数数组&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// char*occurCharArray&amp;#61;(char*)malloc(sizeof(char)*size);&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; occurCharArray;&lt;span class=\"hljs-comment\"&gt;//表示第一个出现最高频率的字符,其实可以不用上面的字符数组保存所有的相同最高频率的字符&amp;#xff0c;只需要保存第一个&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(countArray,&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)*size);&lt;span class=\"hljs-comment\"&gt;//全部频数置为-1&amp;#xff0c;其实也可以不用,习惯初始化下数组比较好&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// count表示字符-频数组合的个数&amp;#xff0c;in是代表bool型&amp;#xff0c;表示判断字符是否在字符-频数组合里出现&amp;#xff0c;没有就加上&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// maxTime表示字符-频数组合内最大的频数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// time表示字符-频数组合内字符对应的频数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// resultCount表示最终结果的个数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// 思路&amp;#xff1a;先遍历一遍&amp;#xff0c;获取每个字符的频数&amp;#xff0c;再对频数遍历一边&amp;#xff0c;判断出最多频数和为这个频数值的所有字符&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,in&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,maxTime&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,time&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,resultCount&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;size;i&amp;#43;&amp;#43;){\n        ch &amp;#61; str[i];\n        in &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;count;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(chArray[j]&amp;#61;&amp;#61;ch){\n                in&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                countArray[j]&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(in&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            chArray[j]&amp;#61;ch;\n            countArray[j]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            count&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;            \n        }\n    }\n    resultCount&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    maxTime&amp;#61;countArray[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-comment\"&gt;//occurCharArray[0]&amp;#61;chArray[0]; &lt;/span&gt;\n    occurCharArray&amp;#61;chArray[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;count;i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;// 根据字符-频率排序&lt;/span&gt;\n        time&amp;#61;countArray[i];&lt;span class=\"hljs-comment\"&gt;//出现频率&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(time&amp;gt;maxTime){\n            &lt;span class=\"hljs-comment\"&gt;// 出现比当前最大频数还大的频数&amp;#xff0c;之前的数组没用了&amp;#xff0c;需要重新填充&amp;#xff0c;&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;// 但是不需要全部清空再填充&amp;#xff0c;只需要用resultCount记录数组有效位置个数&lt;/span&gt;\n            maxTime&amp;#61;time;\n            resultCount&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;            \n            &lt;span class=\"hljs-comment\"&gt;//occurCharArray[0]&amp;#61;chArray[i];&lt;/span&gt;\n            occurCharArray&amp;#61;chArray[i];\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(time&amp;#61;&amp;#61;maxTime){\n            &lt;span class=\"hljs-comment\"&gt;//occurCharArray[resultCount]&amp;#61;chArray[i];&lt;/span&gt;\n            resultCount&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(resultCount&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %c\\n&amp;#34;&lt;/span&gt;,size,occurCharArray);\n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%d %c\\n&amp;#34;,size,occurCharArray[0]);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d They are too many!!!\\n&amp;#34;&lt;/span&gt;,size);\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(countArray);\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(chArray);\n    &lt;span class=\"hljs-comment\"&gt;//free(occurCharArray);&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,str); &lt;span class=\"hljs-comment\"&gt;//abcde&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;strlen_pro&lt;/span&gt;(str);\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// 这个是因为我用vscode&amp;#xff0c;它不加这句会闪退&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/345236944236196.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/558165944236176.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["用c语言解决问题，并附上代码注释", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;offset &amp;#61; int(input(&amp;#34;请输入偏移量&amp;#xff1a;&amp;#34;))\n# 自定义偏移量的凯撒映射表制作\nd &amp;#61; {}\nfor c in (65, 97):\n    for i in range(26):\n        d[chr(i&amp;#43;c)] &amp;#61; chr((i&amp;#43;offset) % 26 &amp;#43; c)\nprint(d) # 输出字典\n# 测试\nalphe &amp;#61; input(&amp;#34;输入源文字母&amp;#xff1a;&amp;#34;)\nprint(&amp;#34;映射后字母&amp;#xff1a;&amp;#34;, d.get(alphe, alphe))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["关于凯撒密码的问题，最好有注释", ["编写程序，实现：提醒用户输入偏移数目，自动生成字母映射字典。例如当用户输入偏题数目为3，生成字典内容为｛’a’:’d’...’z’:’c’}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;HTML 注释是&lt;br /&gt;// 是JavaScript的注释&amp;#xff0c;之在里用&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["vscode的单行注释//无效怎么回事", ["为什么我的vscode的单行注释（//）没有生效，手打的也不生效，按快捷键Ctrl+/又变成了多行注释，按shift+Ctrl+/也是多行注释，怎么回事呢，明明快捷键设置的都不一样的，有没有人知道呢，谢谢", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "****", "****", "\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$insertSQL = sprintf(\"INSERT INTO cns_comments (id, importancy) VALUES(LAST_INSERT_ID(),'%s')\", $s); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;your sql syntax and use of sprintf is incorrect. You are trying to write 2 fields but you only specify importancy. Assuming id is the field for last insert id, the above would work.\nAlso, you actually need to run the query. Since you're using wordpress, you should just use their internal db class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function save_importancy( $comment_id ) {\n    global $wpdb;\n    foreach($_POST[\"importanceList\"] as $s) {  \n        //'importancy' column have been added under cns_comments table\n        $insertSQL = $wpdb-&amp;gt;prepare(\"INSERT INTO cns_comments (id, importancy) VALUES (LAST_INSERT_ID(), %s)\", $s);\n        $wpdb-&amp;gt;query($insertSQL);\n    }  \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://codex.wordpress.org/Class_Reference/wpdb\" rel=\"nofollow\"&gt;http://codex.wordpress.org/Class_Reference/wpdb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/sprintf\" rel=\"nofollow\"&gt;http://php.net/sprintf&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["Wordpress添加注释列并保存自定义数据", ["\n\n", "On a recent project customer need to have a ", "<select />", " input on comments admin area. The thought is, that the website owner read every comment one by one, and need to remember witch comment is important for him,  so the ", "<select />", " will have two inputs \"Interested\" - \"No Interested\".", "\n\n", "Creating a custom colummn on wordpress comments admin, it wasn't to much of pain due to the ", "Wordpress Codex", "\n\n", "/* Display custom column */\nfunction display_posts_stickiness( $column, $post_id ) {\n    echo '<form method=\"post\">';\n    echo '<input type=\"hidden\" name=\"populate_importancy\" value=\"1\" />';\n    echo '<select name=\"importanceList[]\">';\n    echo '<option value=\"1\">Please select</option>';\n    echo '<option value=\"2\">Importnat</option>';\n    echo '<option value=\"3\">No important</option>';\n    echo '</select>';\n    echo '<input type=\"submit\" id=\"submit\" value=\"Choose\" />';\n    echo '</form>';\n}\n\nadd_action( 'manage_comments_custom_column' , 'display_posts_stickiness', 10, 2 );\n\n /* Add custom column to post list */\n function add_sticky_column( $columns ) {\n     return array_merge( $columns, \n         array( 'sticky' => __( 'Comment Importance', 'importancy_com_txt' ) ) );\n }\n\n add_filter( 'manage_edit-comments_columns' , 'add_sticky_column' );\n", "\n\n", "Until there all working like a charm, the column and  dropdown have been apeared on the new comment admin column.", "\n\n", "The main problem for me starts here, when i wan't to save the user option on the database.", "\n\n", "add_action( 'save_post', 'save_importancy' );\n\nfunction save_importancy( $comment_id ) {\n    foreach($_POST[\"importanceList\"] as $s) {  \n        //'importancy' column have been added under cns_comments table\n        $insertSQL = sprintf(\"INSERT INTO cns_comments (importancy) VALUES(LAST_INSERT_ID(),\". $s . \")\"); \n    }  \n}\n", "\n\n", "I am not a PHP developer and my PHP knowledge is limited as for now, and have been around this for a couple of days before I post my problem here.", "\n\n", "I would really appreciate a bit of help in this matter, thank you.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;And if you do like that&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;a class=\"dynamic_embed_video\"&amp;gt;\n   &amp;lt;!-- &amp;lt;?php echo get_post_meta($post-&amp;gt;ID, \"embed_code\"); ?&amp;gt; --&amp;gt;\n&amp;lt;/a&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Does it still ignored by IE ? &lt;/p&gt;\n\n&lt;p&gt;Also, check the code returned by your function and look if there is another HTML comment inside.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在IE中忽略HTML注释结束标记", ["\n\n", "The following comment closing tag is being ignored in IE (all versions), so a ton of the following elements are commented out: ", "\n\n", "<a class=\"dynamic_embed_video\">\n   <?php echo '<!-- ' . get_post_meta($post->ID, \"embed_code\") . ' -->'; ?>\n</a>\n", "\n\n", "In IE, the outputted comment continues past the closing tag and does not end until another comment open and close tag further down the page.", "\n\n", "(FYI the reason I'm doing this is to dynamically embed videos upon the user clicking a preview image to quicken page load time)", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes it is possible.&lt;/p&gt;\n\n&lt;p&gt;Install FOSUser bundle and follow &lt;a href=\"https://github.com/FriendsOfSymfony/FOSCommentBundle/blob/master/Resources/doc/6-integration_with_fosuserbundle.md\" rel=\"nofollow\"&gt;https://github.com/FriendsOfSymfony/FOSCommentBundle/blob/master/Resources/doc/6-integration_with_fosuserbundle.md&lt;/a&gt; .&lt;/p&gt;\n\n&lt;p&gt;Then, create the following class :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\nnamespace Application\\Sonata\\CommentBundle\\Acl;\n\nuse FOS\\CommentBundle\\Acl\\RoleCommentAcl as BaseRoleCommentAcl;\nuse FOS\\CommentBundle\\Model\\CommentInterface;\nuse FOS\\CommentBundle\\Model\\SignedCommentInterface;\nuse Symfony\\Component\\Security\\Core\\SecurityContextInterface;\n\nclass RoleCommentAcl extends BaseRoleCommentAcl\n{\n    /**\n     * The current Security Context.\n     *\n     * @var SecurityContextInterface\n     */\n    private $securityContext;\n\n    /**\n     * Constructor.\n     *\n     * @param SecurityContextInterface $securityContext\n     * @param string                   $createRole\n     * @param string                   $viewRole\n     * @param string                   $editRole\n     * @param string                   $deleteRole\n     * @param string                   $commentClass\n     */\n    public function __construct(SecurityContextInterface $securityContext,\n                                $createRole,\n                                $viewRole,\n                                $editRole,\n                                $deleteRole,\n                                $commentClass\n    )\n    {\n        parent::__construct(\n            $securityContext,\n            $createRole,\n            $viewRole,\n            $editRole,\n            $deleteRole,\n            $commentClass);\n\n        $this-&amp;gt;securityContext   = $securityContext;\n    }\n\n\n    /**\n     * Checks if the Security token has an appropriate role to edit the supplied Comment.\n     *\n     * @param  CommentInterface $comment\n     * @return boolean\n     */\n    public function canEdit(CommentInterface $comment)\n    {\n        if ($comment instanceof SignedCommentInterface)\n        {\n            if ($comment-&amp;gt;getAuthor() == $this-&amp;gt;securityContext-&amp;gt;getToken()-&amp;gt;getUser()) {\n                return true;\n            }\n        }\n        return parent::canEdit($comment);\n    }\n\n    /**\n     * Checks if the Security token is allowed to delete a specific Comment.\n     *\n     * @param  CommentInterface $comment\n     * @return boolean\n     */\n    public function canDelete(CommentInterface $comment)\n    {\n        if ($comment instanceof SignedCommentInterface)\n        {\n            if ($comment-&amp;gt;getAuthor() == $this-&amp;gt;securityContext-&amp;gt;getToken()-&amp;gt;getUser()) {\n                return true;\n            }\n        }\n        return parent::canDelete($comment);\n    }\n\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And add the following to service.yml :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;service id=\"application.sonata.comment.acl.comment.roles\" class=\"Application\\Sonata\\CommentBundle\\Acl\\RoleCommentAcl\" public=\"false\"&amp;gt;\n    &amp;lt;argument type=\"service\" id=\"security.context\" /&amp;gt;\n    &amp;lt;argument&amp;gt;IS_AUTHENTICATED_FULLY&amp;lt;/argument&amp;gt; &amp;lt;!-- Create role --&amp;gt;\n    &amp;lt;argument&amp;gt;IS_AUTHENTICATED_ANONYMOUSLY&amp;lt;/argument&amp;gt; &amp;lt;!-- View role --&amp;gt;\n    &amp;lt;argument&amp;gt;ROLE_ADMIN&amp;lt;/argument&amp;gt; &amp;lt;!-- Edit role --&amp;gt;\n    &amp;lt;argument&amp;gt;ROLE_ADMIN&amp;lt;/argument&amp;gt; &amp;lt;!-- Delete role --&amp;gt;\n    &amp;lt;argument&amp;gt;%fos_comment.model.comment.class%&amp;lt;/argument&amp;gt;\n&amp;lt;/service&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally, update your config.yml with the following :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fos_comment:\n    service:\n        acl:\n            comment: application.sonata.comment.acl.comment.roles\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can adapt the created class depending on your requirements.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["具有ACL和角色的FOS注释权限", ["\n\n", "So, I installed foscomment (most current version to date) and set it up for ACL, with success. I then decided to add their role based permissions as well. The problem is, the user who posts a comment can no longer edit their own comment. and if I give their role the edit power, then they can edit all comments.", "\n\n", "Is it possible to use ACL and Roles natively in the foscomment bundle? SO that edit and delete can be set to ROLE_ADMIN, but ACL can allow users to edit and delete their own posts, even if they are ROLE_USER?", "\n\n", "OR do I have to leave off the roles part and extend the templates and add it in myself?", "\n\n", "here is my config.yml foscomment snippet", "\n\n", "fos_comment:\n    db_driver: orm\n    class:\n        model:\n            comment: Application\\Bundle\\CommentBundle\\Entity\\Comment\n            thread: Application\\Bundle\\CommentBundle\\Entity\\Thread\n    acl: true\n    service:\n        acl:\n            thread: fos_comment.acl.thread.roles\n            comment: fos_comment.acl.comment.roles\n            vote: fos_comment.acl.vote.roles\n        manager:\n            thread: fos_comment.manager.thread.acl\n            comment: fos_comment.manager.comment.acl\n            vote: fos_comment.manager.vote.acl\n    acl_roles:\n        comment:\n            create: ROLE_USER\n            view: IS_AUTHENTICATED_ANONYMOUSLY\n            edit: ROLE_ADMIN\n            delete: ROLE_ADMIN\n        thread:\n            create: IS_AUTHENTICATED_ANONYMOUSLY\n            view: IS_AUTHENTICATED_ANONYMOUSLY\n            edit: ROLE_ADMIN\n            delete: ROLE_ADMIN\n        vote:\n            create: IS_AUTHENTICATED_ANONYMOUSLY\n            view: IS_AUTHENTICATED_ANONYMOUSLY\n            edit: ROLE_ADMIN\n            delete: ROLE_ADMIN\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;iNum%10&lt;/p&gt;\n\n&lt;p&gt;iNum/10%10&lt;/p&gt;\n\n&lt;p&gt;iNum/100&lt;/p&gt;\n\n&lt;p&gt;i1&amp;#43;i2&amp;#43;i3&lt;/p&gt;\n\n&lt;p&gt;如果有帮助请点一下&lt;strong&gt;我回答右上方的采纳&amp;#xff0c;&lt;/strong&gt;谢谢&amp;#xff01;以后有什么问题可以互相交流。 &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["1．实现程序注释的功能。", ["void main(){ int iNum,i1,i2,i3,iSum;printf(“please input a integer(100-900)“scanf(“%d,&iNum); i1=__________/*求个位数*/ (2分)i2=_________/*求十位数*/(2分)i3=_________/*求百位数*/(2分)iSum=__________/*求和*/(2分)printf(“the sum is :%d“，iSum);}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Well, turns out an XML orm file is generated by the SonataEasyExtendsBundle, in directory Application\\Sonata\\UserBundle\\Resources\\config\\doctrine folder. One should modify this file (User.orm.xml) to make changes to the table config. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;\n&amp;lt;doctrine-mapping xmlns=\"http://doctrine-project.org/schemas/orm/doctrine-mapping\"\n                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                  xsi:schemaLocation=\"http://doctrine-project.org/schemas/orm/doctrine-mapping\n                  http://doctrine-project.org/schemas/orm/doctrine-mapping.xsd\"&amp;gt;\n\n    &amp;lt;entity name=\"App\\Application\\Sonata\\UserBundle\\Entity\\User\" table=\"aegis_user\"&amp;gt;\n\n        &amp;lt;id name=\"id\" column=\"id\" type=\"integer\"&amp;gt;\n            &amp;lt;generator strategy=\"AUTO\" /&amp;gt;\n        &amp;lt;/id&amp;gt;\n\n    &amp;lt;/entity&amp;gt;\n\n&amp;lt;/doctrine-mapping&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["SonataUserBundle + FOSUserBundle注释问题Doctrine主键错误", ["\n\n", "Using Symfony 4.1, Sonata User Bundle 4.x, and FOSUserBundle 2.1.2.", "\n\n", "I am trying to override the table names for the User and Group tables. I therefore added annotations to the auto generated user and group classes:", "\n\n", "use Sonata\\UserBundle\\Entity\\BaseGroup as BaseGroup;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * This file has been generated by the SonataEasyExtendsBundle.\n * @ORM\\Entity()\n * @ORM\\Table(name=\"aegis_group\")\n * @link https://sonata-project.org/easy-extends \n * References:\n * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en\n */\nclass Group extends BaseGroup\n{\n    /**     \n     * @ORM\\Id      \n     * @var int $id\n     */\n    protected $id;\n\n   /**\n     * Get id.\n     *\n     * @return int $id\n     */\n    public function getId()\n    {\n        return $this->id;\n    }    \n}\n", "\n\n", "I then modified doctrine.yaml to factor in these annotations:", "\n\n", "        mappings:                    \n                App:\n                    is_bundle: false\n                    type: annotation\n                    dir: '%kernel.project_dir%/src/Entity'\n                    prefix: 'App\\Entity'\n                    alias: App\n                FOSUserBundle: ~                                          \n                ApplicationSonataUserBundle: \n                    type: annotation\n                SonataUserBundle: ~   \n", "\n\n", "However, when I run migrations, doctrine gives me an error:", "\n\n", "\n  ", "In MappingException.php line 46:", "\n  \n  ", "No identifier/primary key specified for Entity\n  \"App\\Application\\Sonata\\User   Bundle\\Entity\\Group\" sub class of\n  \"Sonata\\UserBundle\\Entity\\BaseGroup\". Every Entity must have an\n  identifier/primary key.", "\n", "\n\n", "How to fix this issue, so that I can use my own custom table names ? All I want to do is to change the database table names, this should not be this involved.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Doctrine mappings have nothing to do with validation.\nThe code &lt;code&gt;@ORM\\Column(type=\"string\", length=40)&lt;/code&gt; only maps a property to a database field, and sets max length of a database field to be equal 40 characters, if you would create a schema using doctrine.&lt;/p&gt;\n\n&lt;p&gt;But thus doesn't take any part of the validation process.\nSo you need to set an assertion rule by something like &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   /**\n   * @Assert\\Length(max = 40)\n   */\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用Doctrine2注释进行Symfony2验证", ["\n\n", "I have the following Doctrine entity and I want to use its restriction also for validation.", "\n\n", "/**\n * @var string\n *\n * @ORM\\Column(type=\"string\", length=40)\n * @Assert\\Valid\n */\nprivate $birthName;\n", "\n\n", "I use the following validation, which works for symfony specific annotaions ", "but not Doctrine set restrictions!", "\n\n", "// Validate data\n$validator = $this->get('validator');\n$errors = $validator->validate($user);\n\nif (count($errors) > 0) {\n    $response = new JsonResponse(array(\n        'error' => 'User could not be created.' . PHP_EOL . (string)$errors\n    ));\n    $response->setStatusCode(400);\n\n    return $response;\n}\n", "\n\n", "\n  ", "What can I do to let symfony validator use the doctrine restrictions as settings?", "\n", "\n\n", "Status quo:", "\nI read [", "1", "] and [", "2", "] but so far I do not use forms because I have a controller returning JSON. If you know how to make this work with forms would also help a lot!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Let's take a look at how &lt;code&gt;doctrine/annotations&lt;/code&gt; (the package used by Symfony) solves this problem.&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=\"https://github.com/doctrine/annotations/blob/master/lib/Doctrine/Common/Annotations/PhpParser.php\" rel=\"nofollow\"&gt;&lt;code&gt;PhpParser&lt;/code&gt;&lt;/a&gt; parses the PHP file of the class (which you can get by &lt;a href=\"http://php.net/manual/en/reflectionclass.getfilename.php\" rel=\"nofollow\"&gt;&lt;code&gt;ReflectionClass#getFilename()&lt;/code&gt;&lt;/a&gt;). Let's look at the &lt;a href=\"https://github.com/doctrine/annotations/blob/master/lib/Doctrine/Common/Annotations/PhpParser.php#L32-62\" rel=\"nofollow\"&gt;&lt;code&gt;parseClass()&lt;/code&gt;&lt;/a&gt; method line by line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (method_exists($class, 'getUseStatements')) {\n    return $class-&amp;gt;getUseStatements();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Doctrine has a custom &lt;a href=\"https://github.com/doctrine/common/blob/master/lib/Doctrine/Common/Reflection/StaticReflectionClass.php\" rel=\"nofollow\"&gt;&lt;code&gt;StaticReflectionClass&lt;/code&gt;&lt;/a&gt; class which already has a &lt;code&gt;getUseStatements()&lt;/code&gt; method to get the use statements in the class file. I assume you don't use that class, so let's move on!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (false === $filename = $class-&amp;gt;getFilename()) {\n    return array();\n}\n\n$content = $this-&amp;gt;getFileContent($filename, $class-&amp;gt;getStartLine());\n\nif (null === $content) {\n    return array();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;These statements retrieve the file content of the class. If there was no content or no file, there are also no use statements.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$namespace = preg_quote($class-&amp;gt;getNamespaceName());\n$content = preg_replace('/^.*?(\\bnamespace\\s+' . $namespace . '\\s*[;{].*)$/s', '\\\\1', $content);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here they are looking for the line that defines the namespace for the class in the file. It'll be followed by the use statements, so the regex just extracts the namespace and everything that follows it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$tokenizer = new TokenParser('&amp;lt;?php ' . $content);\n\n$statements = $tokenizer-&amp;gt;parseUseStatements($class-&amp;gt;getNamespaceName());\n\nreturn $statements;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then it creates a &lt;code&gt;TokenParser&lt;/code&gt; class with only that content in it and let it find the use statements in it.&lt;/p&gt;\n\n&lt;p&gt;If you look at the &lt;a href=\"https://github.com/doctrine/annotations/blob/master/lib/Doctrine/Common/Annotations/TokenParser.php#L100-130\" rel=\"nofollow\"&gt;&lt;code&gt;TokenParser&lt;/code&gt;&lt;/a&gt;, you'll find that it uses &lt;a href=\"http://php.net/token-get-all\" rel=\"nofollow\"&gt;&lt;code&gt;token_get_all()&lt;/code&gt;&lt;/a&gt; to transform the file into PHP tokens used by the PHP engine and then just moves through that token tree looking for &lt;code&gt;T_USE&lt;/code&gt; statements, which it extracts and saves.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["php注释，命名空间和使用关键字", ["\n\n", "I am writing an annotation parser for php (I cannot used any 3rd party ones due to specific needs) and I took sympfony2 code as an inspiration", "\n\n", "namespace Acme\\StoreBundle\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"product\")\n */\nclass Product\n{\n    /**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */\n    protected $id;\n", "\n\n", "As I can see here we define ORM in use statement and then somehow the annotation parser knows that ORM is an alias to Doctrine\\ORM\\Mapping.", "\n\n", "My ultimate goal is to be able to pass class names as aliases into my annotations", "\n\n", "use some/namespace/Enum;\nuse another/ns/PropEnum;\n\nclass Abc\n{\n   /**\n    * @Enum(PropEnum)\n    **/\n   protected $prop;\n}\n", "\n\n", "Could you please point me towards the right direction as I do not even know where to start?", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;conio.h&amp;gt;\nint migong[10][10]&amp;#61; //设置迷宫&amp;#xff0c;最外围1为墙 里边0为可走路径 1为障碍\n{\n\n    {1,1,1,1,1,1,1,1,1,1},\n\n    {1,0,0,0,0,0,0,1,1,1},\n\n    {1,0,1,1,1,1,1,0,0,1},\n\n    {1,0,1,0,0,0,0,0,0,1},\n\n    {1,0,0,0,1,0,1,1,1,1},\n\n    {1,1,1,1,0,0,1,1,1,1},\n\n    {1,0,0,0,0,1,1,1,1,1},\n\n    {1,0,1,1,0,0,1,1,1,1},\n\n    {1,0,0,0,0,0,0,0,0,1},\n\n    {1,1,1,1,1,1,1,1,1,1}\n\n};\nint num;\nstruct\n{\n    int x,y,d;\n} lj[100]; //x,y分别为垂直和水平方向\n\nvoid start()\n\n{\n    int top&amp;#61;0,x,y,d,find;//d为设置方向&amp;#xff0c;上下左右。find为设置找不找得到路\n    lj[top].x&amp;#61;1;//设置当前x&amp;#xff0c;y的坐标初始为1\n    lj[top].y&amp;#61;1;\n    migong[1][1]&amp;#61;-1;//代表&amp;#xff08;1,1&amp;#xff09;走过了\n    find&amp;#61;0;\n    d&amp;#61;-1;\n    while(top&amp;gt;-1)\n    {\n        if(lj[top].x&amp;#61;&amp;#61;8&amp;amp;&amp;amp;lj[top].y&amp;#61;&amp;#61;8)//如果到达&amp;#xff08;8,8&amp;#xff09;结束&amp;#xff0c;输出路径\n\n        {\n            printf(&amp;#34;迷宫路径如下&amp;#xff1a;\\n&amp;#34;);\n\n            printf(&amp;#34;start-&amp;gt;&amp;#34;);\n            for(x&amp;#61;0; x&amp;lt;&amp;#61;top; x&amp;#43;&amp;#43;)\n            {\n                printf(&amp;#34;(%d,%d)-&amp;gt; &amp;#34;,lj[x].x,lj[x].y);//把找到的路径输出\n                num&amp;#43;&amp;#43;;\n                if(num%8&amp;#61;&amp;#61;0)//每8个占一行\n                    printf(&amp;#34;\\n&amp;#34;);\n            }\n            printf(&amp;#34;-&amp;gt;end!\\n&amp;#34;);\n        }\n        while(d&amp;lt;4&amp;amp;&amp;amp;find&amp;#61;&amp;#61;0)//未到达&amp;#xff08;8,8&amp;#xff09;\n        {\n            d&amp;#43;&amp;#43;;//d代表4个方向\n            switch(d)\n            {\n            case 0:\n                x&amp;#61;lj[top].x-1;\n                y&amp;#61;lj[top].y;\n                break;//方向为上\n\n            case 1:\n                x&amp;#61;lj[top].x;\n                y&amp;#61;lj[top].y&amp;#43;1;\n                break;//方向为右\n\n            case 2:\n                x&amp;#61;lj[top].x&amp;#43;1;\n                y&amp;#61;lj[top].y;\n                break;//方向为下\n\n            case 3:\n                x&amp;#61;lj[top].x;\n                y&amp;#61;lj[top].y-1;\n            }//方向为左\n\n            if(migong[x][y]&amp;#61;&amp;#61;0)//0为可走路径 设置find&amp;#61;1代表能走\n\n                find&amp;#61;1;\n        }\n\n        if(find&amp;#61;&amp;#61;1)      //判断是否找得到\n        {\n            lj[top].d&amp;#61;d;//记录当前的方向\n            top&amp;#43;&amp;#43;;\n            lj[top].x&amp;#61;x;//记录当前的坐标\n            lj[top].y&amp;#61;y;\n            d&amp;#61;-1;\n            find&amp;#61;0;     //重新调整方向\n            migong[x][y]&amp;#61;-1;//代表&amp;#xff08;x,y&amp;#xff09;走过了\n        }\n        else//find&amp;#61;0找不到\n        {\n            migong[lj[top].x][lj[top].y]&amp;#61;0;\n            top--;\n            d&amp;#61;lj[top].d; //找不到的话退栈\n        }\n    }\n}\nvoid main()\n{\n    start();\n    getch();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["代码无解释无法理解，需要注释", ["#include<stdio.h>", "\n\n", "#include<conio.h>  ", "\n\n", "int migong[10][10]= //设置迷宫，最外围1为墙 里边0为可走路径 1为障碍", "\n\n", "{    ", "\n\n", "    {1,1,1,1,1,1,1,1,1,1},", "\n\n", "    {1,0,0,0,0,0,0,1,1,1},", "\n\n", "    {1,0,1,1,1,1,1,0,0,1},", "\n\n", "    {1,0,1,0,0,0,0,0,0,1},", "\n\n", "    {1,0,0,0,1,0,1,1,1,1},", "\n\n", "    {1,1,1,1,0,0,1,1,1,1},", "\n\n", "    {1,0,0,0,0,1,1,1,1,1},", "\n\n", "    {1,0,1,1,0,0,1,1,1,1},", "\n\n", "    {1,0,0,0,0,0,0,0,0,1},", "\n\n", "    {1,1,1,1,1,1,1,1,1,1}", "\n\n", "};", "\n\n", "int num;", "\n\n", "struct", "\n\n", "{", "\n\n", "int x,y,d;", "\n\n", "}lj[100];//x,y分别为垂直和水平方向", "\n\n", " ", "\n\n", "void start()", "\n\n", "{", "\n\n", "int top=0,x,y,d,find;//d为设置方向，上下左右。find为设置找不找得到路", "\n\n", "lj[top].x=1;", "\n\n", "lj[top].y=1;", "\n\n", "migong[1][1]=-1;", "\n\n", "find=0;d=-1;", "\n\n", " ", "\n\n", "while(top>-1){", "\n\n", "if(lj[top].x==8&&lj[top].y==8) ", "\n\n", "{", "\n\n", "printf(\"迷宫路径如下：\\n\");", "\n\n", "printf(\"start->\");", "\n\n", "for(x=0;x<=top;x++)", "\n\n", "{", "\n\n", "printf(\"(%d,%d)-> \",lj[x].x,lj[x].y);//把找到的路径输出", "\n\n", "num++;", "\n\n", "if(num%8==0)", "\n\n", "printf(\"\\n\");", "\n\n", "} ", "\n\n", "printf(\"->end!\\n\");", "\n\n", "}", "\n\n", " ", "\n\n", "while(d<4&&find==0){", "\n\n", "d++;", "\n\n", "switch(d){", "\n\n", "case 0:x=lj[top].x-1; y=lj[top].y;  break;//方向为上", "\n\n", "case 1:x=lj[top].x;   y=lj[top].y+1;break;//方向为右", "\n\n", "case 2:x=lj[top].x+1; y=lj[top].y;  break;//方向为下", "\n\n", "case 3:x=lj[top].x;   y=lj[top].y-1;}//方向为左", "\n\n", "if(migong[x][y]==0)", "\n\n", "find=1;", "\n\n", "}", "\n\n", " ", "\n\n", "if(find==1){     //判断是否找得到", "\n\n", "lj[top].d=d;", "\n\n", "top++;", "\n\n", "lj[top].x=x;", "\n\n", "lj[top].y=y;", "\n\n", "d=-1;find=0;     //重新调整方向", "\n\n", "migong[x][y]=-1;}", "\n\n", "else{", "\n\n", "migong[lj[top].x][lj[top].y]=0;", "\n\n", "top--;d=lj[top].d; //找不到的话退栈", "\n\n", "}", "\n\n", "}", "\n\n", "}", "\n\n", " ", "\n\n", "void main()", "\n\n", "{", "\n\n", "start();", "\n\n", "getch();", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I opened an &lt;a href=\"https://github.com/WP-API/WP-API/issues/766\" rel=\"nofollow\"&gt;issue on Github&lt;/a&gt; about this and it was marked as &lt;code&gt;Enhancement&lt;/code&gt;, so I'm assuming this just doesn't work at this point&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["使用WP-API发布数据返回注释", ["\n\n", "I'm using the ", "WP-API", " plugin as a RESTful API to my Wordpress site.  I want the comments associated with a post to return from the ", "/posts/:id", " endpoint.  The ", "docs", " indicate that this is possible by passing a ", "withcomments", " filter, however I can't get this to work.  I've tried the following with no success:", "\n\n", "http://climbingnarc.com/wp-json/posts/24001?filter[withcomments]=1", "\n\n", "http://climbingnarc.com/wp-json/posts/24001?filter[withcomments]=true", "\n\n", "I do know that ", "http://climbingnarc.com/wp-json/posts/24001/comments", " works, but I don't want to have to make a separate request just for the comment data.", "\n\n", "Is there a correct way to use this filter so that comments are returned with the post data?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;PyCharm是一款功能强大的Python集成开发环境(IDE)。而docx文件是一种微软office的文件格式。PyCharm对docx文件的识别和智能提示可能不够完善&amp;#xff0c;导致无法识别和提示。可以尝试使用插件或其他第三方库来解决这个问题。具体解决方法可能需要看看pycharm的配置&amp;#xff0c;比如说检查一下pycharm的Python Interpreter是否已经配置了docx模块&amp;#xff0c;或者检查一下pycharm的项目设置是否包含了docx模块的路径&amp;#xff0c;如果没有配置&amp;#xff0c;可以尝试在pycharm中安装docx模块。如果还是不行可以尝试重启pycharm或者电脑&amp;#xff0c;如果问题依然存在&amp;#xff0c;可以尝试在pycharm中使用其他的自动补全工具&amp;#xff0c;比如说Jedi。&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["pycharm  docx 文件注释后还是无 智能提示", ["\nfile = Document(", "r\".\\1.docx\"", ")  ", "# type: docx.document.Document", "\n****\n", "\n", "中间那个document,提示无法识别，使用file点后无方法提示，用vscode就没有这个问题，不知为什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己提供一种更加简洁的写法&amp;#xff0c;直接利用nums数组来存储我们整个DP过程中的最小值&amp;#xff0c;每次遍历到i时&amp;#xff0c;nums[i]中存放的就是满足题目限制条件&amp;#xff0c;并且点亮第i个烽火台的最小代价&amp;#xff0c;然后我们把这个最优值加入队列。由于我们需要求出最后m大小的窗口里&amp;#xff0c;最小的那个值&amp;#xff0c;所以直接取此时单调队列对头的元素即可。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing namespace std;\n\nconst &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; N &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;e5 &amp;#43; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n, m;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; nums[N];\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;q[N]&lt;/span&gt;, head, tail;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; &amp;#43;&amp;#43;i) \n        cin &amp;gt;&amp;gt; nums[i];\n\n    head &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, tail &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; &amp;#43;&amp;#43;i)\n    {\n        nums[i] &amp;#43;&amp;#61; nums[&lt;span class=\"hljs-string\"&gt;q[head]&lt;/span&gt;];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;q[head]&lt;/span&gt; &amp;lt;&amp;#61; i - m) &amp;#43;&amp;#43;head;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (head &amp;lt;&amp;#61; tail &amp;amp;&amp;amp; nums[i] &amp;lt;&amp;#61; nums[&lt;span class=\"hljs-string\"&gt;q[tail]&lt;/span&gt;]) --tail;\n        &lt;span class=\"hljs-string\"&gt;q[&amp;#43;&amp;#43;tail]&lt;/span&gt; &amp;#61; i;\n    }\n\n    cout &amp;lt;&amp;lt; nums[&lt;span class=\"hljs-string\"&gt;q[head]&lt;/span&gt;] &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["J解释一下程序（详细，注释）", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include <iostream>", "\nusing namespace std;\n", "int", " f[", "200010", "],w[", "200010", "], ", "q[200010]", ";\n", "int", " main() {\n    ", "int", " n, m,hh = ", "0", ", tt = ", "0", ";\n    cin>>n>>m;\n    ", "for", " (", "int", " i = ", "1", "; i <= n; i ++)cin>>w[i];\n    f[", "0", "] = ", "0", ";\n    ", "q[tt]", " = ", "0", ";\n    ", "for", " (", "int", " i = ", "1", "; i <= n; i ++) {\n        ", "if", " (hh <= tt && ", "q[hh]", " + m < i) hh ++;\n        f[i] = f[", "q[hh]", "] + w[i];\n        ", "while", " (hh <= tt && f[", "q[tt]", "] >= f[i]) tt --;\n        ", "q[++ tt]", " = i;\n    }\n    ", "int", " res = ", "100000000", ";\n    ", "for", " (", "int", " i = n - m + ", "1", "; i <= n; i ++) res = min(res, f[i]);\n    cout << res << endl;\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "\n题目描述\n烽火台是重要的军事防御设施，一般建在交通要道或险要处。\n\n一旦有军情发生，则白天用浓烟，晚上有火光传递军情。\n\n在某两个城市之间有n nn 座烽火台，每个烽火台发出信号都有一定的代价。\n\n为了使情报准确传递，在连续 m mm 个烽火台中至少要有一个发出信号。\n\n现在输入 n , m n,mn,m 和每个烽火台的代价，请计算在两城市之间准确传递情报所需花费的总代价最少为多少。\n\n输入格式\n \n第一行是两个整数 n ,    m  n,  m  n,  m，具体含义见题目描述；\n\n第二行 n nn 个整数表示每个烽火台的代价 ", "a", " ", "i", " a_ia \n", "i", "\n​\n 。\n\n输出格式\n\n输出仅一个整数，表示最小代价。\n\n数据范围\n\n", "1", " ≤ n , m ≤ ", "2", " × ", "1", " ", "0", " ", "5", " ", "1", "≤m,n≤", "2", "×", "10", "^", "51", "≤ n, m≤", "2", "×", "10", " \n", "5", "\n ,\n", "0", " ≤ ", "a", " ", "i", " ≤ ", "1000", " ", "0", "≤a_i≤", "10000", "≤", "a", " \n", "i", "\n​\n ≤", "1000", "\n\n输入样例\n\n", "5", " ", "3", "\n", "1", " ", "2", " ", "5", " ", "6", " ", "2", "\n\n输出样例\n\n", "4", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;* @ORM\\ManyToOne(targetEntity=\"User\", inversedBy=\"your_definition\")\n* @ORM\\JoinColumn(nullable=false, onDelete=\"CASCADE\")\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["在Symfony中添加级联到doctrine注释", ["\n\n", "I need to add ", "cascade", " to some columns in my existing database, but ", "doctrine:schema:update", " doesn't recognize any changes within the annotations.", "\n\n", "FROM:\n/**\n * @ORM\\ManyToOne(targetEntity=\"User\")\n */\nprivate $user;\n\nTO:\n/**\n * @ORM\\ManyToOne(targetEntity=\"User\", cascade={\"persist\", \"remove\"})\n */\nprivate $user;\n", "\n\n", "Clearing the cache didn't help at all. Any other ideas?", "\n    "]], "Tag": "程序设计"}
{"Answer": "如果是webstorm或者PHPSTORM可以这样写//region 和//endregion\r\n![图片说明](https://img-ask.csdn.net/upload/202008/29/1598681886_185930.png)\r\n\r\n添加文字可以是 //region : 注释的内容 和//endregion", "Konwledge_Point": "注释", "Question": ["怎么添加注释段落 ？？？？？", ["\n我希望能够手动添加可收缩的段落，类似于图中的下拉箭头，记得之前在网上视频看过，通过<>标签的形式设置可拉伸的段落0.0 有大佬告知下吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Variable &amp;#39;m&amp;#39; might not have been initialized&amp;#xff08;变量“m”可能尚未初始化&amp;#xff09;&lt;/p&gt;\n\n&lt;p&gt;java 实例变量默认赋值&amp;#xff0c;但是局部变量不默认赋值&amp;#xff0c;m没初始化所以编译报错&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["为什么c排注释代码有错", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//会员类定义&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Member&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mid; \n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; name;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; Car car&amp;#xff1b;  &lt;span class=\"hljs-comment\"&gt;//定义一个用于在会员类中调用的汽车类对象&amp;#xff0c;通过下方的汽车类声明&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Member&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mid,&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; name)&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.mid &amp;#61;mid ;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name&amp;#61;name;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setCar&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(Car car)&lt;/span&gt;&lt;/span&gt;{     &lt;span class=\"hljs-comment\"&gt;//用于将汽车数据赋值给该会员的汽车对象&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.car&amp;#61;car;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Car &lt;span class=\"hljs-title\"&gt;getCar&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{      &lt;span class=\"hljs-comment\"&gt;//用于获取本会员的汽车对象数据&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.car;\n        }\n        \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getInfo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;人员编号:&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.mid&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name;\n        }\n    }\n\n&lt;span class=\"hljs-comment\"&gt;//汽车类定义&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Car&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; Member member; &lt;span class=\"hljs-comment\"&gt;//声明会员对象&amp;#xff08;通过上面定义的会员类声明&amp;#xff09;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; pname;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Car&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; pname)&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.pname&amp;#61;pname;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setMember&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(Member member)&lt;/span&gt;&lt;/span&gt;{  &lt;span class=\"hljs-comment\"&gt;//用于给会员对象赋值数据&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.member&amp;#61;member;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Member &lt;span class=\"hljs-title\"&gt;getMember&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{   &lt;span class=\"hljs-comment\"&gt;//用于获取会员对象的数据&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.member;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getInfo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;车的名字:&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.pname;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Demo&lt;/span&gt;{\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; args[])&lt;/span&gt;&lt;/span&gt;{\n            Member m &amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Member&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;冬眠&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//定义一个会员对象&amp;#xff0c;数据&amp;#xff1a;ID为1&amp;#xff0c;名称为冬眠&lt;/span&gt;\n            Car c &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Car&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;一手奥迪&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//定义一个车辆对象&amp;#xff0c;数据&amp;#xff1a;名称一手奥迪&lt;/span&gt;\n            m.&lt;span class=\"hljs-built_in\"&gt;setCar&lt;/span&gt;(c); &lt;span class=\"hljs-comment\"&gt;//将一手奥迪赋值给冬眠&lt;/span&gt;\n            c.&lt;span class=\"hljs-built_in\"&gt;setMember&lt;/span&gt;(m);&lt;span class=\"hljs-comment\"&gt;//将冬眠赋值给一手奥迪&lt;/span&gt;\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(m.&lt;span class=\"hljs-built_in\"&gt;getCar&lt;/span&gt;().&lt;span class=\"hljs-built_in\"&gt;getInfo&lt;/span&gt;());&lt;span class=\"hljs-comment\"&gt;//获取会员的汽车信息&lt;/span&gt;\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(c.&lt;span class=\"hljs-built_in\"&gt;getMember&lt;/span&gt;().&lt;span class=\"hljs-built_in\"&gt;getInfo&lt;/span&gt;());&lt;span class=\"hljs-comment\"&gt;//获取汽车的会员信息&lt;/span&gt;\n        }\n    }\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请求解释一下注释部分的代码，详细点", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "class", " ", "Member", "{\n        ", "private", " ", "int", " mid; \n        ", "private", " ", "String", " name;\n        ", "private", " Car car；  ", "//这里请求解释", "\n        ", "public", " ", "Member", "(", "int", " mid,", "String", " name)", "{\n            ", "this", ".mid =mid ;\n            ", "this", ".name=name;\n        }\n        ", "public", " ", "void", " ", "setCar", " ", "(Car car)", "{     ", "//这里这个方法请求解释", "\n            ", "this", ".car=car;\n        }\n        ", "public", " Car ", "getCar", "()", "{      ", "//这里这个方法请求解释", "\n            ", "return", " ", "this", ".car;\n        }\n        \n        ", "public", " ", "String", " ", "getInfo", "()", "{\n            ", "return", " ", "\"人员编号:\"", "+", "this", ".mid+", "\",姓名：\"", "+", "this", ".name;\n        }\n    }\n    ", "class", " ", "Car", " {\n        ", "private", " Member member; ", "//这里请求解释", "\n        ", "private", " ", "String", " pname;\n        ", "public", " ", "Car", " ", "(", "String", " pname)", "{\n            ", "this", ".pname=pname;\n        }\n        ", "public", " ", "void", " ", "setMember", " ", "(Member member)", "{  ", "//这里这个方法请求解释", "\n            ", "this", ".member=member;\n        }\n        ", "public", " Member ", "getMember", "()", "{   ", "//这里这个方法请求解释", "\n            ", "return", " ", "this", ".member;\n        }\n        ", "public", " ", "String", " ", "getInfo", "()", "{\n            ", "return", " ", "\"车的名字:\"", "+", "this", ".pname;\n        }\n    }\n    \n    ", "public", " ", "class", " ", "Demo", "{\n        ", "public", " ", "static", " ", "void", " ", "main", "(", "String", " args[])", "{\n            Member m =", "new", " ", "Member", "(", "1", ",", "\"冬眠\"", ");\n            Car c = ", "new", " ", "Car", "(", "\"一手奥迪\"", ");\n            m.", "setCar", "(c);\n            c.", "setMember", "(m);\n            System.out.", "println", "(m.", "getCar", "().", "getInfo", "());\n            System.out.", "println", "(c.", "getMember", "().", "getInfo", "());\n        }\n    }\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;package gz.ht.edu;\n\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\t//定义长度为20的整型数组\n\t\tint arr[]&amp;#61;new int[20];\n\t\t//实例化随机数对象\n\t\tRandom r &amp;#61; new Random(1);\n\t\tint max&amp;#61;40;\n\t\tint min&amp;#61;20;\n\t\t//动态给数组赋值\n\t\tfor(int i&amp;#61;0;i&amp;lt;20;i&amp;#43;&amp;#43;){\n\t\t\t//随机生成20-40的随机数\n\t\t\tint num &amp;#61; r.nextInt(40)% (max - min &amp;#43; 1) &amp;#43; min;\n\t\t\t//给数组赋值\n\t\t\tarr[i]&amp;#61;num;\n\t\t}\n\t\t//实例化输入对象\n\t\tScanner sc&amp;#61;new Scanner(System.in);\n\t\tSystem.out.println(&amp;#34;请输入一个20-40之间的整数:&amp;#34;);\n\t\t//获取键盘输入\n\t\tint num&amp;#61;sc.nextInt();\n\t\t//定义计数变量\n\t\tint cnt&amp;#61;0;\n\t\t//遍历数组&amp;#xff0c;找出该数出现的次数\n\t\tfor(int i&amp;#61;0;i&amp;lt;20;i&amp;#43;&amp;#43;){\n\t\t\tSystem.out.print(arr[i]&amp;#43;&amp;#34;  &amp;#34;);\n\t\t\t//如果数组中元素与该值相等&amp;#xff0c;累加计数变量\n\t\t\tif(arr[i]&amp;#61;&amp;#61;num){\n\t\t\t\tcnt&amp;#43;&amp;#43;;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(&amp;#34;\\n数组中一共出现了&amp;#34;&amp;#43;cnt&amp;#43;&amp;#34;个&amp;#34;&amp;#43;num);\n\t}\n}\t\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["帮我写个程序最好有注释谢谢", ["定义一个长度为20的数组，元素为20-40的随机数， 要求判断指定元素在数组中出现的次数,指定元素为键盘录入范围为20-40之间。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先理解下杨辉三角&amp;#xff1a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    每个数等于它上方两数之和。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    每行数字左右对称&amp;#xff0c;由1开始逐渐变大。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    第n行的数字有n项。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    前n行共[(1&amp;#43;n)n]/2 个数。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    第n行的m个数可表示为 C(n-1&amp;#xff0c;m-1)&amp;#xff0c;即为从n-1个不同元素中取m-1个元素的组合数。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    第n行的第m个数和第n-m&amp;#43;1个数相等 &amp;#xff0c;为组合数性质之一。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    每个数字等于上一行的左右两个数字之和。可用此性质写出整个杨辉三角。即第n&amp;#43;1行的第i个数等于第n行的第i-1个数和第i个数之和&amp;#xff0c;这也是组合数的性质之一。即 C(n&amp;#43;1,i)&amp;#61;C(n,i)&amp;#43;C(n,i-1)。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    (a&amp;#43;b)n的展开式中的各项系数依次对应杨辉三角的第(n&amp;#43;1)行中的每一项。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    将第2n&amp;#43;1行第1个数&amp;#xff0c;跟第2n&amp;#43;2行第3个数、第2n&amp;#43;3行第5个数……连成一线&amp;#xff0c;这些数的和是第4n&amp;#43;1个斐波那契数&amp;#xff1b;将第2n行第2个数(n&amp;gt;1)&amp;#xff0c;跟第2n-1行第4个数、第2n-2行第6个数……这些数之和是第4n-2个斐波那契数。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    将第n行的数字分别乘以10^&amp;#xff08;m-1&amp;#xff09;&amp;#xff0c;其中m为该数所在的列&amp;#xff0c;再将各项相加的和为11^&amp;#xff08;n-1&amp;#xff09;。11^0&amp;#61;1&amp;#xff0c;11^1&amp;#61;1x10^0&amp;#43;1×10^1&amp;#61;11&amp;#xff0c;11^2&amp;#61;1×10^0&amp;#43;2x10^1&amp;#43;1x10^2&amp;#61;121&amp;#xff0c;11^3&amp;#61;1x10^0&amp;#43;3×10^1&amp;#43;3x10^2&amp;#43;1x10^3&amp;#61;1331&amp;#xff0c;11^4&amp;#61;1x10^0&amp;#43;4x10^1&amp;#43;6x10^2&amp;#43;4x10^3&amp;#43;1x10^4&amp;#61;14641&amp;#xff0c;11^5&amp;#61;1x10^0&amp;#43;5x10^1&amp;#43;10x10^2&amp;#43;10x10^3&amp;#43;5x10^4&amp;#43;1×10^5&amp;#61;161051。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    第n行数字的和为2^&amp;#xff08;n-1&amp;#xff09;。1&amp;#61;2^&amp;#xff08;1-1&amp;#xff09;&amp;#xff0c;1&amp;#43;1&amp;#61;2^&amp;#xff08;2-1&amp;#xff09;&amp;#xff0c;1&amp;#43;2&amp;#43;1&amp;#61;2^&amp;#xff08;3-1&amp;#xff09;&amp;#xff0c;1&amp;#43;3&amp;#43;3&amp;#43;1&amp;#61;2^&amp;#xff08;4-1&amp;#xff09;&amp;#xff0c;1&amp;#43;4&amp;#43;6&amp;#43;4&amp;#43;1&amp;#61;2^&amp;#xff08;5-1&amp;#xff09;&amp;#xff0c;1&amp;#43;5&amp;#43;10&amp;#43;10&amp;#43;5&amp;#43;1&amp;#61;2^&amp;#xff08;6-1&amp;#xff09;。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    斜线上数字的和等于其向左&amp;#xff08;从左上方到右下方的斜线&amp;#xff09;或向右拐弯&amp;#xff08;从右上方到左下方的斜线&amp;#xff09;&amp;#xff0c;拐角上的数字。1&amp;#43;1&amp;#61;2&amp;#xff0c;1&amp;#43;1&amp;#43;1&amp;#61;3&amp;#xff0c;1&amp;#43;1&amp;#43;1&amp;#43;1&amp;#61;4&amp;#xff0c;1&amp;#43;2&amp;#61;3&amp;#xff0c;1&amp;#43;2&amp;#43;3&amp;#61;6&amp;#xff0c;1&amp;#43;2&amp;#43;3&amp;#43;4&amp;#61;10&amp;#xff0c;1&amp;#43;3&amp;#61;4&amp;#xff0c;1&amp;#43;3&amp;#43;6&amp;#61;10&amp;#xff0c;1&amp;#43;4&amp;#61;5。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    将各行数字左对齐&amp;#xff0c;其右上到左下对角线数字的和等于斐波那契数列的数字。1&amp;#xff0c;1&amp;#xff0c;1&amp;#43;1&amp;#61;2&amp;#xff0c;2&amp;#43;1&amp;#61;3&amp;#xff0c;1&amp;#43;3&amp;#43;1&amp;#61;5&amp;#xff0c;3&amp;#43;4&amp;#43;1&amp;#61;8&amp;#xff0c;1&amp;#43;6&amp;#43;5&amp;#43;1&amp;#61;13&amp;#xff0c;4&amp;#43;10&amp;#43;6&amp;#43;1&amp;#61;21&amp;#xff0c;1&amp;#43;10&amp;#43;15&amp;#43;7&amp;#43;1&amp;#61;34&amp;#xff0c;5&amp;#43;20&amp;#43;21&amp;#43;8&amp;#43;1&amp;#61;55。&lt;/span&gt;&lt;br /&gt;&lt;em&gt;这个题目就是实现杨辉三角的操作&lt;/em&gt;&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["可以帮我注释一下让我理解不", []], "Tag": "程序设计"}
{"Answer": "使用PLSQL Developer，进入编辑表，添加注释：\r\n![图片说明](https://img-ask.csdn.net/upload/202007/28/1595917332_641866.png)\r\n\r\n然后点击“查看SQL”按钮，显示如下：![图片说明](https://img-ask.csdn.net/upload/202007/28/1595917390_228432.png)\r\n\r\n自己动手看下自动生成的脚本是什么样的", "Konwledge_Point": "注释", "Question": ["oracle 中添加表注释 显示无效，这是为什么？", ["COMMENT ON COLUMN yq_zsj_lmxxjlb2.create_time IS '亮码时间';", "\n\n", "COMMENT ON COLUMN yq_zsj_lmxxjlb2.health_state IS '健康标识';", "\n\n", "COMMENT ON COLUMN yq_zsj_lmxxjlb2.aut_state IS '认证状态';", "\n\n", "COMMENT ON COLUMN yq_zsj_lmxxjlb2.aut_type IS '认证类型';", "\n\n", "COMMENT ON COLUMN yq_zsj_lmxxjlb2.sync_time IS '同步时间';", "\n\n", "COMMENT ON TABLE yq_zsj_lmxxjlb2 IS '亮码信息记录表';", "\n\n", "总是报错 ora-00904 标识符wu'xiao"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用struct,通过指针连接了一个链表,然后定义了包括链表生成,赋值,反向的操作&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["求这段代码加注释 刚开始学", ["#include <stdio.h>", "#include <malloc.h>", "typedef struct node", "{", "    int info;", "    struct node* next;", "}node,*link;", "\n", "node* change(link head)", "{", "    link p,q;", "     p = head;", "    head = NULL;", "    while(p)", "    {", "          q= p->next      ;", "          p->next = head       ;", "          head = p       ;", "          p = q;", "    }", "    return head;", "}", "void display(link head)", "{", "    link p;", "    p=head;", "    while(p)", "    {", "        printf(\"%d \",p->info);", "        p=p->next;", "    }", "}", "node *nizhuan(node *head)", "{", "    node *q,*p;", "    p=NULL;", "    while(head!=NULL)  //", "    {", "        q=p;", "        p=head;", "        head=head->next;", "        p->next=q;", "    }", "    return p;", "}", "main()", "{", "    link head,r,s;", "    int m;", "    head=r=NULL;", "printf(\"请输入数据，以0 结尾:\\n\");", "    scanf(\"%d\",&m);", "    while(m!=0)", "    {", "        s= (link)malloc(sizeof(node)) ;//", "            s->info   =m;", "        if(head==NULL)", "        head=s;", "        else", "         r->next = s       ;//", "        r=s;", "        scanf(\"%d\",&m);", "    }", "    if(r)", "    r->next=NULL;", "    printf(\"输入单链表数据如下:\\n\");", "    display(head);", "    printf(\"逆置单链表数据如下:\\n\");", "head=change(head);", "    printf(\"\\n\");", "    display(head);", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这表达式够复杂的&lt;br /&gt;首先使用了列表解析式&amp;#xff0c;然后又对split分割的结果再次进行分割&lt;br /&gt;那么我们先来拆解一下列表解析式&amp;#xff1a;&lt;br /&gt; [ll.split(&amp;#39;:&amp;#39;)[0] for ll in line.split(&amp;#39;;;&amp;#39;)[1].split()]&lt;br /&gt;等价于&lt;br /&gt;a&amp;#61;[]&lt;br /&gt;for ll in line.split(&amp;#39;;;&amp;#39;)[1].split():&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a.append(ll.split(&amp;#39;:&amp;#39;)[0])&lt;/span&gt;&lt;br /&gt;先把line按照两个分号拆开&amp;#xff0c;取第1项&amp;#xff0c;再按空格拆分&amp;#xff0c;然后遍历结果集&amp;#xff0c;将结果中的每一项按冒号拆分&amp;#xff0c;取第0项&amp;#xff0c;形成一个新的列表&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["可以注释一下这个split分割吗？", ["def line2link(line):", "    return [ll.split(':')[0] for ll in line.split(';;')[1].split()]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 3  &lt;span class=\"hljs-comment\"&gt;//定义人数 &lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N2 2 &lt;span class=\"hljs-comment\"&gt;//打印几个选举结果&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; xh;\n    &lt;span class=\"hljs-comment\"&gt;//学号 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; xm[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-comment\"&gt;//姓名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag;\n    &lt;span class=\"hljs-comment\"&gt;//已投票数 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag_p;\n    &lt;span class=\"hljs-comment\"&gt;//被投票数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; xp_xh[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;];\n    &lt;span class=\"hljs-comment\"&gt;//被选人学号&lt;/span&gt;\n}\nstu[N];\n&lt;span class=\"hljs-comment\"&gt;//函数功能&amp;#xff1a;录入学生信息    &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;lr&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号:%d\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名:&amp;#34;&lt;/span&gt;);\n        stu[i].xh&amp;#61;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;stu[i].xm);\n        stu[i].flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        stu[i].flag_p&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        stu[i].xp_xh[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名\\t&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;票数\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;,stu[i].xh);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t&amp;#34;&lt;/span&gt;,stu[i].xm);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,stu[i].flag_p);\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//函数功能:投票&amp;#xff0c;对数据进行操作 ,输出结果 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;tp&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tpr,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tp)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; q&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stu[tpr&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].flag&amp;lt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (tpr&amp;gt;N || tpr&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            q &amp;#61; stu[tpr&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].flag;\n            stu[tpr&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].xp_xh[q]&amp;#61;(tp&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n            stu[tpr&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].flag&amp;#43;&amp;#43;;\n            stu[tp&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].flag_p&amp;#43;&amp;#43;;\n        }\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;您已经投了6票&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Comp&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; *p1,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; *p2)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ((&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; student *)p2)-&amp;gt;flag_p - ((&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; student *)p1)-&amp;gt;flag_p;\n    &lt;span class=\"hljs-comment\"&gt;//降序&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//return ((student *)p1)-&amp;gt;flag_p - ((student *)p2)-&amp;gt;flag_p; //升序&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; xh_tpr;\n    &lt;span class=\"hljs-comment\"&gt;//投票人学号 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; xh_tp;\n    &lt;span class=\"hljs-comment\"&gt;//被投票人学号 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k;\n    &lt;span class=\"hljs-built_in\"&gt;lr&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的学号“100”结束投票打印结果:\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;xh_tpr);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (xh_tpr&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;投票结果:\\t&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t姓名\\t票数\\t投票数\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;qsort&lt;/span&gt;(stu, N, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(stu[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]), Comp);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;k&amp;lt;N2;k&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t\\t%d\\t%s\\t%d\\t%d\\n&amp;#34;&lt;/span&gt;,stu[k].xh,&amp;amp;stu[k].xm,stu[k].flag_p,stu[k].flag);\n            &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入你要投票人的学号:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;xh_tp);\n            &lt;span class=\"hljs-built_in\"&gt;tp&lt;/span&gt;(xh_tpr,xh_tp);\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//goto start; //不需要用goto &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["C语言程序设计，要带注释，投票系统", ["某班从全班20人(学号1~20)中投票选举6位班委委员，每张选票内容包括：所选班委的学号，投票人学号。", "基本要求用菜单选择并完成下述系统功能：", "(1)输入全班的名单(姓名与学号)，并可显示。", "(2)选票输入：输入每张选票的投票人学号及所选班委的学号(可选6个，没有则键入空白）。", "(3)输出得票前6位的当选班委名单", "（4）输出6位班委名单全部选票与投票结果完全相符的投票人姓名。", "(5)退出程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;兄弟&amp;#xff0c;我随便写几个&amp;#xff0c;你看着给&amp;#xff0c;喜喜&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x, y, z &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形的三条边&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d&amp;#34;&lt;/span&gt;, &amp;amp;x, &amp;amp;y, &amp;amp;z);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x&amp;#43;y&amp;gt;z&amp;amp;x&amp;#43;z&amp;gt;y&amp;amp;&amp;amp;y&amp;#43;z&amp;gt;x)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x&amp;#61;&amp;#61;y&amp;amp;&amp;amp;y&amp;#61;&amp;#61;z)\n{\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;此三角形是等边三角形也是等腰三角形&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; y || y &amp;#61;&amp;#61; z || x &amp;#61;&amp;#61; z)\n{\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;此三角形是等腰三角形&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;此三角形是不规则三角形&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;此三角形不是三角形&amp;#xff01;&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* p)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input string:\\t&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,str);&lt;span class=\"hljs-comment\"&gt;//这里str是字符串指针&amp;#xff0c;不是漏加了 &amp;amp;&lt;/span&gt;\n    len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(str);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;The length of string is %d.\\n&amp;#34;&lt;/span&gt;,len);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* p)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//字符串指针&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*p !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n    {\n        n&amp;#43;&amp;#43;;\n        p&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n;\n}\n\n&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt; &lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;],i,s,medium;&lt;span class=\"hljs-comment\"&gt;/*定义一个数组及变量&amp;#xff0c;数组元素共10个*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input a[i] when i&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,i);\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);&lt;span class=\"hljs-comment\"&gt;/*依次输入a[0]至a[9]的值*/&lt;/span&gt;\n          }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);&lt;span class=\"hljs-comment\"&gt;/*打印数组*/&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;s&amp;lt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;-i;s&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[s]&amp;gt;&amp;#61;a[s&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n                {\n                    medium&amp;#61;a[s];&lt;span class=\"hljs-comment\"&gt;/*medium是交换媒介*/&lt;/span&gt;\n                    a[s]&amp;#61;a[s&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                    a[s&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;medium;\n                    }&lt;span class=\"hljs-comment\"&gt;/*if语句实现大数右移的功能*/&lt;/span&gt;\n             }&lt;span class=\"hljs-comment\"&gt;/*s的循环语句与if语句结合实现上文中所说的每一轮操作中将最大数移动至最右方*/&lt;/span&gt;\n                  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;-i]);&lt;span class=\"hljs-comment\"&gt;/*每一轮比较后输出本轮中最大的数&amp;#xff0c;事实上就是排序&amp;#xff0c;a[9-i]就是每轮中最大的数*/&lt;/span&gt;\n        }&lt;span class=\"hljs-comment\"&gt;/*i的循环就是实现多轮操作&amp;#xff0c;即第一轮比较结束后进行第二轮&amp;#xff0c;一直重复到第九轮*/&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["请教一下这几个代码，有注释最好，阿里各多", ["这里都跑不出来有人来解答一下吗？", "1.编写一个函数，实现显示输出数组a[n]（double a[10]={1,2,3,4,5,6,7,8,9,10}）中大于等于平均值的所有元素值，函数原型为void f2(double a[], int n)，其中n为数组元素个数。", "\n", "2.数组a包括10个整数（a[10]={14,32,31,43,53,46,37,18,69,16}），把a中所有的后项除以前项之商取整后存入数组b，并按每行3个元素的格式输出数组，", "\n", "4.输入三角形的三条边（20,30,40或11、21、31或50、70、90）存入数组a中，判断其能否构成三角形，如果可以，则判断出三角形的种类：等腰三角形、等边三角形或一般三角形。输出格式如样张所示。", "\n", "提示：输出分四种情况：\"等边三角形\\n\";\"等腰三角形\\n\";\"一般三角形\\n\";\"不能构成三角形\\n\"。", "5.利用指针作函数参数，设计一函数fun()实现求字符串”a0b1c2d3f4g5h6j1k3l8n\\0f8s9s7”的长度。", "\n", "6.编写程序，设置一个排序函数paixu()，该函数将数组按照从小到大的顺序进行排序，其中有两个形式参数，一个为指向数组的指针p，另一个为数组的元素个数n。在主函数中，要求从键盘输入10个数（0,8,6,4,2,1,3,5,7,9）存入数组data中，同时要求调用函数paixu()对data进行排序，并在主函数中输出最终的排序结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;以下代码&amp;#xff0c;仅供参考&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//学生信息结构体 &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//姓名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Chinese;&lt;span class=\"hljs-comment\"&gt;//语文成绩&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Math;&lt;span class=\"hljs-comment\"&gt;//数学成绩&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; English;&lt;span class=\"hljs-comment\"&gt;//英语成绩&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum;&lt;span class=\"hljs-comment\"&gt;//成绩总和&lt;/span&gt;\n}s[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;];\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,j;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);&lt;span class=\"hljs-comment\"&gt;//输入n 代表人数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//循环输入n位学生的信息&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s%d%d%d&amp;#34;&lt;/span&gt;,s[i].name,&amp;amp;s[i].Chinese,&amp;amp;s[i].Math,&amp;amp;s[i].English);\n        s[i].sum&amp;#61;s[i].Chinese&amp;#43;s[i].Math&amp;#43;s[i].English; &lt;span class=\"hljs-comment\"&gt;//成绩求和&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//创建结构体变量stu&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; stu;\n    &lt;span class=\"hljs-comment\"&gt;//判断交换 找出成绩最好的&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[j].sum&amp;lt;s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sum)\n            {\n                stu&amp;#61;s[j];\n                s[j]&amp;#61;s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;stu; \n            }\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//输出最靠前的&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %d %d %d\\n&amp;#34;&lt;/span&gt;,s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].name,s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].Chinese,s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].Math,s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].English);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;运行结果如图&amp;#xff1a;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/958525866446117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;以上仅供参考&amp;#xff0c;如有任何疑问&amp;#xff0c;可以评论回复&amp;#xff0c;看到即回。&lt;br /&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff01;可以的话&amp;#xff0c;点个采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "注释", "Question": ["给大家送一个晋级的题，最好加上注释", ["题目描述", "现有 N(N\\le 1000)N(N≤1000) 名同学参加了期末考试，并且获得了每名同学的信息：姓名（不超过 8 个字符的仅有英文小写字母的字符串）、语文、数学、英语成绩（均为不超过 150 的自然数）。总分最高的学生就是最厉害的，请输出最厉害的学生各项信息（姓名、各科成绩）。如果有多个总分相同的学生，输出靠前的那位。", "\n", "输入格式", "无", "\n", "输出格式", "无", "\n", "输入输出样例", "输入 #1", "3", "senpai 114 51 4", "lxl 114 10 23", "fafa 51 42 60", "输出 #1", "senpai 114 51 4", "我承认我自己不会……"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;PrivateTest&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-comment\"&gt;//私有属性&amp;#xff0c;默认值hellokitty&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt; name&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;hellokitty&amp;#34;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt; getName() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; name;\n    }\n    \n}\n\n\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.lang.reflect.Field;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ReflectTest&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; void main(&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt;[] args) throws Exception{\n        &lt;span class=\"hljs-comment\"&gt;//装载类&amp;#xff1a;会做类的静态初始化Class是用于获取运行时类的状态&lt;/span&gt;\n        Class&amp;lt;?&amp;gt; cl &amp;#61; Class.forName(PrivateTest.class.getName());\n        &lt;span class=\"hljs-comment\"&gt;//cl.newInstance() 获取类的对象的引用 正是指向了PrivateTest类的对象&lt;/span&gt;\n        PrivateTest obj &amp;#61; (PrivateTest) cl.&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;Instance&lt;/span&gt;();\n        &lt;span class=\"hljs-comment\"&gt;//根据对象获取属性值&amp;#xff1a;并输出hellokitty&lt;/span&gt;\n        System.out.println(obj.getName()); &lt;span class=\"hljs-comment\"&gt;//hellokitty&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//获取“名称是name”&amp;#xff0c;并且是类自身声明的成员变量&amp;#xff0c;包含public、protected和private成员变量。&lt;/span&gt;\n        Field f &amp;#61; obj.getClass().getDeclaredField(&lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//如果想要获得修改私有属性的权限&amp;#xff1a;就设置为true,否则会报出&amp;#xff1a;IllegalAccessException错误&lt;/span&gt;\n        f.setAccessible(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//修改私有属性&lt;/span&gt;\n        f.&lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt;(obj, &lt;span class=\"hljs-string\"&gt;&amp;#34;helloworld&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//属性此时PrivateTest对象的name属性值&lt;/span&gt;\n        System.out.println(obj.getName()); &lt;span class=\"hljs-comment\"&gt;//helloworld&lt;/span&gt;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["求写下代码和注释，very thanks", ["1", "1)创建Student类，类中有属性name和age并封装属性", "2)重载Student的构造函数，一个是无参构造，另一个是带两个参数的有参构造，要求在构造函数打印提示信息", "3)创建带main函数的NewInstanceTest类，利用Class类得到Student对象", "4)通过上述获取的Class对象分别调用Student有参函数和无参函数", "\n", "2", "1.定义PrivateTest类，有私有name属性，并且属性值为hellokitty，只提供name的getName的公有方法", "2.创建带有main方法ReflectTest的类，利用Class类得到私有的name属性", "修改私有的name属性值，并调用getName()的方法打印name属性值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;帮你注解了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m, s, i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (m &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; m &amp;lt; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; m&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;// 对1000以内的每个数&amp;#xff08;除1外&amp;#xff0c;因为1不是完数&amp;#xff09;&lt;/span&gt;\n    {\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;// s用来累计当前m的因子之和&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;// 对区间[1,m)内的每个数i&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((m % i) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)   &lt;span class=\"hljs-comment\"&gt;// 如果m能被i整除&amp;#xff0c;则i是m的一个因子&lt;/span&gt;\n                s &amp;#61; s &amp;#43; i;      &lt;span class=\"hljs-comment\"&gt;// 累加该因子&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s &amp;#61;&amp;#61; m)  &lt;span class=\"hljs-comment\"&gt;// 如果所有因子之和s等于当前数m&amp;#xff0c;则m是完数&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d, its factors are &amp;#34;&lt;/span&gt;, m); &lt;span class=\"hljs-comment\"&gt;// 输出m&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)        &lt;span class=\"hljs-comment\"&gt;// 打印m的所有因子&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, i);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["可以帮我注释一下让我理解吗", []], "Tag": "程序设计"}
{"Answer": "private View backBtn;\r\nHandler handler = null;\r\nHttpManager httpManager = null;\r\nprivate EditText dateEdit;\r\nprivate ListView moneyList;\r\n\r\nList&lt;Map&lt;String, Object&gt;&gt; data = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();\r\n\r\n\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    //加载布局文件\r\n    setContentView(R.layout.moneyactivity);\r\n    //建立一个ui线程的handler句柄\r\n    handler = new Handler(this);\r\n    httpManager = new HttpManager(handler);\r\n    //获得一个按键，需要在下载布局文件后\r\n    backBtn = findViewById(R.id.backButton1);\r\n    //按键监听， 监听的调用是onClick\r\n    backBtn.setOnClickListener(this);\r\n\r\n    dateEdit = (EditText)findViewById(R.id.date);\r\n    dateEdit.setKeyListener(null);\r\n    dateEdit.setOnClickListener(this);\r\n    handler = new Handler(this);\r\n    //因为网络要不是UI线程访问，所以将UI线程的句柄放进去供他回调\r\n    httpManager = new HttpManager(handler);\r\n\r\n\r\n    //设置北京时间\r\n    Calendar cd = Calendar.getInstance(Locale.CHINA);\r\n    int year1 = cd.get(Calendar.YEAR);\r\n    int month1 = cd.get(Calendar.MONTH)+1;\r\n\r\n    getList(year1+\"\", month1+\"\");\r\n\r\n}\r\n\r\n\r\nprivate void getList(String year,String month) {\r\n    String sid = Session.sid;\r\n    String uri = Constant.BASE_URL + \"Salary/sreach?sid=\"+sid+\"&amp;Year=\"+year+\"&amp;Month=\"+month;\r\n    try {\r\n\r\n        Message msg = new Message();\r\n        msg.what = 0;\r\n\t//请求网络获取数据\r\n        httpManager.getRequest(uri, msg);\r\n\r\n    } catch (Exception e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n\r\n    }\r\n}\r\n\r\n\r\n@Override\r\npublic void onClick(View v) {\r\n    // TODO Auto-generated method stub \r\n    //如果点击的是按键的进去结束这个页面，这里一遍用switch，然后用v.getId判断，不是用这个if的,而且判断条件写的也有点问题，可采用下面这种方式\r\n    /*switch (view.getId()){\r\n            case R.id.backButton1:\r\n\t\tbreak;\r\n\t    case R.id.date:\r\n\t\tbreak;\r\n\t*/\r\n    if (v == backBtn){\r\n        finish();\r\n    }\r\n    //如果是输入框的\r\n    if (v == dateEdit) {\r\n\t\r\n        final Calendar cd = Calendar.getInstance(Locale.CHINA);\r\n        final int mYear = cd.get(Calendar.YEAR);\r\n        final int month = cd.get(Calendar.MONTH);\r\n        final int day = cd.get(Calendar.DAY_OF_MONTH);\r\n\t//获取当前时间\r\n         Date date = new Date();\r\n         cd.setTime(date);\r\n\t //弹出个时间转盘的\r\n         DatePickerDialog mDialog = new DatePickerDialog(MoneyActivity.this,\r\n\r\n                new OnDateSetListener() {\r\n\t\t    //设置时间时的监听，可以在数据进来后显示前整理数据\r\n                    @Override\r\n                    public void onDateSet(DatePicker view, int year, int monthOfYear,\r\n                            int dayOfMonth) {\r\n                        // TODO Auto-generated method stub\r\n                        if (year &gt; mYear || year &lt; mYear-1) {\r\n                            Toast.makeText(MoneyActivity.this, \"只能查看\"+mYear+\"年或者\"+(mYear - 1)+\"年数据\", 0).show();\r\n                            return;\r\n                        }\r\n                        int month = monthOfYear + 1;\r\n                        dateEdit.setText(year + \"-\" + month);\r\n                        //这里下载数据\r\n                        getList(year+\"\", month+\"\");\r\n\r\n                    }\r\n                },\r\n                mYear,\r\n                month,\r\n                day\r\n                );\r\n\r\n         mDialog.show();\r\n\t //递归遍历整个activity的layout找到DatePicker 这个组件，不知道为什么要遍历\r\n         DatePicker dp = findDatePicker((ViewGroup)mDialog.getWindow().getDecorView());\r\n         if (dp!= null) {\r\n             ((ViewGroup)((ViewGroup) dp.getChildAt(0)).getChildAt(0)).getChildAt(1).setVisibility(View.GONE);\r\n        }\r\n    }\r\n}\r\n\r\nprivate DatePicker findDatePicker(ViewGroup group) {  \r\n    if (group != null) {  \r\n        for (int i = 0, j = group.getChildCount(); i &lt; j; i++) {  \r\n            View child = group.getChildAt(i);  \r\n            if (child instanceof DatePicker) {  \r\n                return (DatePicker) child;  \r\n            } else if (child instanceof ViewGroup) {  \r\n                DatePicker result = findDatePicker((ViewGroup) child);  \r\n                if (result != null)  \r\n                    return result;  \r\n            }  \r\n        }  \r\n    }  \r\n    return null;  \r\n}   \r\n\r\n//上面handler句柄的回调， httpManager会从这里把数据抛上来\r\n@Override\r\npublic boolean handleMessage(Message msg) {\r\n\r\n    switch (msg.what) {\r\n    case 0:\r\n        try {\r\n\t    // httpManager抛上的数据\r\n            String result = (String)msg.obj;\r\n\t    //对数据进行解析\r\n            JSONObject jsonObject = new JSONObject(result);\r\n            if (jsonObject.getString(\"error_code\").equals(\"1\")) {\r\n                DialogUtil.showDialog(this,\r\n                        jsonObject.getString(\"msg\"), false);\r\n                return false;\r\n            }\r\n            JSONObject object = jsonObject.getJSONObject(\"data\");\r\n            JSONArray array = object.getJSONArray(\"list\");\r\n\r\n            if (array != null &amp;&amp; array.length() &gt; 0) {\r\n\r\n                for (int i = 0;i &lt; array.length();i++) {\r\n                    object = array.getJSONObject(i);\r\n                    Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();\r\n                    //String pkId = object.getString(\"PkId\");\r\n                    String meayType = object.getString(\"Type\");\r\n                    String moneyNum = object.getString(\"value\");\r\n                    //map.put(\"pkId\", pkId);\r\n                    map.put(\"money_type\", meayType);\r\n                    map.put(\"money_num\", moneyNum);\r\n                    data.add(map);\r\n                }\r\n            }\r\n\r\n\r\n\r\n        //数据显示到列表\r\n        moneyList = (ListView)findViewById(R.id.moneyList);\r\n        SimpleAdapter adapter  = new SimpleAdapter(MoneyActivity.this, data,\r\n                R.layout.money_items, new String[] {\r\n                        \"money_type\", \"money_num\" },\r\n                new int[] { R.id.moneyType,\r\n                        R.id.money });\r\n        moneyList.setAdapter(adapter);\r\n        } catch (Exception e) {\r\n            // TODO: handle exception\r\n            DialogUtil.showDialog(this,\r\n                    \"网络异常，加载数据失败，请联系管理员\", false);\r\n        }\r\n        break;\r\n\r\n    default:\r\n        break;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//列表item的点击事件\r\n@Override\r\npublic void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {\r\n    // TODO Auto-generated method stub\r\n\r\n}\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "注释", "Question": ["求大神帮忙解读，加点注释~谢谢", ["package com.hanway.oa.activity;", "\n\n", "import java.text.DateFormat;", "\nimport java.text.ParseException;", "\nimport java.text.SimpleDateFormat;", "\nimport java.util.ArrayList;", "\nimport java.util.Calendar;", "\nimport java.util.Date;", "\nimport java.util.HashMap;", "\nimport java.util.List;", "\nimport java.util.Locale;", "\nimport java.util.Map;", "\n\n", "import org.json.JSONArray;", "\nimport org.json.JSONObject;", "\n\n", "import com.hanway.oa.R;", "\nimport com.hanway.oa.common.Constant;", "\nimport com.hanway.oa.common.Session;", "\nimport com.hanway.oa.http.HttpManager;", "\nimport com.hanway.oa.util.DialogUtil;", "\n\n", "import android.app.Activity;", "\nimport android.app.DatePickerDialog;", "\nimport android.app.ProgressDialog;", "\nimport android.app.DatePickerDialog.OnDateSetListener;", "\nimport android.os.Bundle;", "\nimport android.os.Handler;", "\nimport android.os.Handler.Callback;", "\nimport android.os.Message;", "\nimport android.view.View;", "\nimport android.view.View.OnClickListener;", "\nimport android.view.ViewGroup;", "\nimport android.widget.Adapter;", "\nimport android.widget.AdapterView;", "\nimport android.widget.AdapterView.OnItemClickListener;", "\nimport android.widget.AdapterView.OnItemSelectedListener;", "\nimport android.widget.ArrayAdapter;", "\nimport android.widget.DatePicker;", "\nimport android.widget.EditText;", "\nimport android.widget.ListView;", "\nimport android.widget.SimpleAdapter;", "\nimport android.widget.Spinner;", "\nimport android.widget.Toast;", "\n\n", "public class MoneyActivity extends Activity implements  OnClickListener,Callback,OnItemClickListener {", "\n\n", "private View backBtn;\nHandler handler = null;\nHttpManager httpManager = null;\nprivate EditText dateEdit;\nprivate ListView moneyList;\n\nList<Map<String, Object>> data = new ArrayList<Map<String, Object>>();\n\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.moneyactivity);\n\n    handler = new Handler(this);\n    httpManager = new HttpManager(handler);\n\n    backBtn = findViewById(R.id.backButton1);\n    backBtn.setOnClickListener(this);\n\n    dateEdit = (EditText)findViewById(R.id.date);\n    dateEdit.setKeyListener(null);\n    dateEdit.setOnClickListener(this);\n    handler = new Handler(this);\n    httpManager = new HttpManager(handler);\n\n\n\n    Calendar cd = Calendar.getInstance(Locale.CHINA);\n    int year1 = cd.get(Calendar.YEAR);\n    int month1 = cd.get(Calendar.MONTH)+1;\n\n    getList(year1+\"\", month1+\"\");\n\n}\n\nprivate void getList(String year,String month) {\n    String sid = Session.sid;\n    String uri = Constant.BASE_URL + \"Salary/sreach?sid=\"+sid+\"&Year=\"+year+\"&Month=\"+month;\n    try {\n\n        Message msg = new Message();\n        msg.what = 0;\n        httpManager.getRequest(uri, msg);\n\n    } catch (Exception e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n\n    }\n}\n\n\n\n@Override\npublic void onClick(View v) {\n    // TODO Auto-generated method stub\n    if (v == backBtn){\n        finish();\n    }\n    if (v == dateEdit) {\n\n        final Calendar cd = Calendar.getInstance(Locale.CHINA);\n        final int mYear = cd.get(Calendar.YEAR);\n        final int month = cd.get(Calendar.MONTH);\n        final int day = cd.get(Calendar.DAY_OF_MONTH);\n\n         Date date = new Date();\n         cd.setTime(date);\n\n         DatePickerDialog mDialog = new DatePickerDialog(MoneyActivity.this,\n\n                new OnDateSetListener() {\n\n                    @Override\n                    public void onDateSet(DatePicker view, int year, int monthOfYear,\n                            int dayOfMonth) {\n                        // TODO Auto-generated method stub\n                        if (year > mYear || year < mYear-1) {\n                            Toast.makeText(MoneyActivity.this, \"只能查看\"+mYear+\"年或者\"+(mYear - 1)+\"年数据\", 0).show();\n                            return;\n                        }\n                        int month = monthOfYear + 1;\n                        dateEdit.setText(year + \"-\" + month);\n                        //这里下载数据\n                        getList(year+\"\", month+\"\");\n\n                    }\n                },\n                mYear,\n                month,\n                day\n                );\n\n         mDialog.show();\n         DatePicker dp = findDatePicker((ViewGroup)mDialog.getWindow().getDecorView());\n         if (dp!= null) {\n             ((ViewGroup)((ViewGroup) dp.getChildAt(0)).getChildAt(0)).getChildAt(1).setVisibility(View.GONE);\n        }\n    }\n}\n\nprivate DatePicker findDatePicker(ViewGroup group) {  \n    if (group != null) {  \n        for (int i = 0, j = group.getChildCount(); i < j; i++) {  \n            View child = group.getChildAt(i);  \n            if (child instanceof DatePicker) {  \n                return (DatePicker) child;  \n            } else if (child instanceof ViewGroup) {  \n                DatePicker result = findDatePicker((ViewGroup) child);  \n                if (result != null)  \n                    return result;  \n            }  \n        }  \n    }  \n    return null;  \n}   \n\n@Override\npublic boolean handleMessage(Message msg) {\n\n    switch (msg.what) {\n    case 0:\n        try {\n            String result = (String)msg.obj;\n            JSONObject jsonObject = new JSONObject(result);\n            if (jsonObject.getString(\"error_code\").equals(\"1\")) {\n                DialogUtil.showDialog(this,\n                        jsonObject.getString(\"msg\"), false);\n                return false;\n            }\n            JSONObject object = jsonObject.getJSONObject(\"data\");\n            JSONArray array = object.getJSONArray(\"list\");\n\n            if (array != null && array.length() > 0) {\n\n                for (int i = 0;i < array.length();i++) {\n                    object = array.getJSONObject(i);\n                    Map<String, Object> map = new HashMap<String, Object>();\n                    //String pkId = object.getString(\"PkId\");\n                    String meayType = object.getString(\"Type\");\n                    String moneyNum = object.getString(\"value\");\n                    //map.put(\"pkId\", pkId);\n                    map.put(\"money_type\", meayType);\n                    map.put(\"money_num\", moneyNum);\n                    data.add(map);\n                }\n            }\n\n\n\n\n        moneyList = (ListView)findViewById(R.id.moneyList);\n        SimpleAdapter adapter  = new SimpleAdapter(MoneyActivity.this, data,\n                R.layout.money_items, new String[] {\n                        \"money_type\", \"money_num\" },\n                new int[] { R.id.moneyType,\n                        R.id.money });\n        moneyList.setAdapter(adapter);\n        } catch (Exception e) {\n            // TODO: handle exception\n            DialogUtil.showDialog(this,\n                    \"网络异常，加载数据失败，请联系管理员\", false);\n        }\n        break;\n\n    default:\n        break;\n    }\n\n    return false;\n}\n\n\n\n@Override\npublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n    // TODO Auto-generated method stub\n\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "语法？都是简单的语法，给指针赋值，有什么问题？", "Konwledge_Point": "注释", "Question": ["请解答代码注释中的“问题”", ["\n#include <stdafx.h>\n#include <iostream>\n#include <string>\nusing namespace std;\n\n//应用抽象类，建立了两种类型的表：队列与堆栈。\nclass list{                            //申明一个抽象类；\npublic:\n    list *head;                        //表头指针；\n    list *tail;                        //表尾指针；\n    list *next;\n    int num;\n    list()\n    {\n        head=tail=next=NULL;           //初始化指针为空值；\n    }\n    virtual void store(int i)=0;       //纯虚函数store（存储）；\n    virtual int retrieve()=0;          //纯虚函数retrieve（检索）;\n};\n\nclass queue:public list{               //声明list的共有派生类queue（队列）；\npublic:\n    void store(int i);\n    int retrieve();\n};\n\nvoid queue::store(int i)               //定义虚函数store；\n{                                      //问题，2015年10月17日11:27:50\n    list *item;                        \n    item=new queue;                    //queque类的一个零时对象的地址赋给item？\n    if(!item)                          //条件逻辑判断代表item的值是真或假，前两句中item的值有什么变化？\n    {\n        cout<<\"Allocation error\\n\";\n        exit(1);\n    }\n    item->num=i;\n    if(tail)tail->next=item;           //问题：语法？\n    tail=item;\n    item->next=NULL;                   //问题：语法？\n    if(!head)head=tail;\n}\n\nint queue::retrieve()                  //定义虚函数retrieve;\n{\n    int i;\n    list *p;\n    if(!head)\n    {\n        cout<<\"list empty\\n\";\n        return 0;\n    }\n    i=head->num;\n    p=head;\n    head=head->next;                  //问题：语法？与“item->next=NULL”类似\n    delete p;\n    return i;\n}\n\nclass stack:public list{               //声明list的共有派生类stack（堆栈）；\npublic:\n    void store(int i);\n    int retrieve();\n};\n\nvoid stack::store(int i)               //定义虚函数store；\n{\n    list *item;\n    item=new stack;\n    if(!item)\n    {\n        cout<<\"Allocation error\\n\";    \n        exit(1);\n    }\n    item->num=i;\n    if(head) item->next=head;\n    head=item;\n    if(!tail)tail=head;\n}\n\nint stack::retrieve()                  //定义虚函数retrieve;\n{\n    int i;\n    list *p;\n    if(!head)\n    {\n        cout<<\"list empty\\n\";\n        return 0;\n    }\n    i=head->num;\n    p=head;\n    head=head->next;\n    delete p;\n    return i;\n}\n\nint main()\n{\n    list *p;                           //定义指向抽象类list的指针p；\n    queue q_ob;\n    p=&q_ob;                           //对象指针p指向类queue的对象q_ob； \n    p->store(1);\n    p->store(2);\n    p->store(3);\n    cout<<\"queue:\";\n    cout<<p->retrieve();\n    cout<<p->retrieve();\n    cout<<p->retrieve();\n    cout<<'\\n';\n    stack s_ob;\n    p=&s_ob;\n    p->store(1);\n    p->store(2);\n    p->store(3);\n    cout<<\"Stack:\";\n    cout<<p->retrieve();\n    cout<<p->retrieve();\n    cout<<p->retrieve();\n    cout<<'\\n';\n\n    getchar();\n    return 0;\n}\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can write anything you like in comments. That said, it's not a conventional use - &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; should describe the actual parameters and return values of the function in question. See e.g. the &lt;a href=\"https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md\" rel=\"nofollow noreferrer\"&gt;draft PHP-FIG recommendation&lt;/a&gt; for what's (mostly) conventional.&lt;/p&gt;\n\n&lt;p&gt;If you're returning a JSON string it would be better to document it as&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;@return string Text here describing what is being returned&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;since as far as PHP is concerned it's just another string.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "注释", "Question": ["文档的注释PHP发布数据并返回JSON", ["\n\n", "I have two questions actually:", "\n\n", "\n", "\n", "For some functions I am posting forms to them, can I mention them as ", "@params", " in comments or what: ", "\n\n", "/* some descriptions \n *\n * @param string userName\n */\n\n\n\npublic function add(){ \n           $userName = $_POST['user']\n        ......\n}\n", "\n", "\n", "\n", "From some function I am returning data as JSON, how to mention JSON as return type and format:", "\n\n", " /* some descriptions \n  *\n  * @return JSON [{id, name,...}]\n  */\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;回答&amp;#xff1a;一个简单的选择和输入输出&amp;#xff0c;代码如下,&amp;#xff08;采用DevC&amp;#43;&amp;#43;编写&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;            &lt;span class=\"hljs-comment\"&gt;//判断三角形 &lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形的个数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[t],b[t],c[t];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请依次输入三角形的边长&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;t;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;a[i],&amp;amp;b[i],&amp;amp;c[i]);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;t;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]*a[i]&amp;#43;b[i]*b[i]&amp;#61;&amp;#61;c[i]*c[i]){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;good\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;#61;&amp;#61;b[i] || a[i]&amp;#61;&amp;#61;c[i] || b[i]&amp;#61;&amp;#61;c[i]){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;perfect\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;just a triangle\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;应该没啥问题&amp;#xff0c;仅供参考&lt;/p&gt;", "Konwledge_Point": "注释", "Question": ["运用C语言解决问题并最好能有注释", ["给你三角形的三条边，你能告诉我它是哪种三角形吗？", "如果是直角三角形，请输出“good”。如果是等腰三角形，请输出“perfect”。否则，请输出“just a triangle”。", "题目保证输入数据合法。", "\n", "Input", "输入的第一行为一个整数t，表示测试样例的数量。", "每组样例包含了三个整数a,b,c，代表了三角形的三条边的长度。（0<a,b,c<300）", "\n", "Output", "对于每组样例，先输出是第几个测试案例，具体看样例，输出结果，每组结果占一行。", "\n", "SampleInput", "4", "3 4 5", "2 2 3", "1 4 4", "4 6 3", "SampleOutput", "Case 1#: good", "Case 2#: perfect", "Case 3#: perfect", "Case 4#: just a triangle"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j,k,n,t,a[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//最多30组数据&amp;#xff0c;如果更多组&amp;#xff0c;把30改成更大的数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n)!&amp;#61;EOF) &lt;span class=\"hljs-comment\"&gt;//读取多组输入数据存放在数组a中&lt;/span&gt;\n        a[i&amp;#43;&amp;#43;] &amp;#61; n;\n    n &amp;#61; i; &lt;span class=\"hljs-comment\"&gt;//n记录组数&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;k&amp;lt;n;k&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//遍历所有组&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;a[k];i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//对每一组数据&amp;#xff0c;输出a[k]*a[k]的矩阵&lt;/span&gt;\n        {\n            t &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//没一行都是从1开始&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;a[k];j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;lt;i) &lt;span class=\"hljs-comment\"&gt;//列数小于行数的时候&amp;#xff0c;显示数字&amp;#xff0c;并将数字&amp;#43;1&lt;/span&gt;\n                {\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%3d&amp;#34;&lt;/span&gt;,t);\n                    t&amp;#43;&amp;#43;;\n                }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%3d&amp;#34;&lt;/span&gt;,t); &lt;span class=\"hljs-comment\"&gt;//列数大于行数的时候&amp;#xff0c;直接显示数字&amp;#xff0c;数字不再&amp;#43;1&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//每行结束后输出换行符&lt;/span&gt;\n        }\n\n    }\n\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "注释", "Question": ["自学编程想请教题目，最好可以有注释", ["如题"]], "Tag": "程序设计"}
