{"Answer": "&lt;pre&gt;\n&lt;code&gt;def 首字母转大写(字符串):\n    单词列表 &amp;#61; []\n    for 单词 in 字符串.split(&amp;#34; &amp;#34;):\n        单词列表.append(单词[0].upper()&amp;#43;单词[1:])\n    return &amp;#34; &amp;#34;.join(单词列表)\n\n字符串 &amp;#61; &amp;#34;we will be OK&amp;#xff01;&amp;#34;\n新字符串 &amp;#61; 首字母转大写(字符串)\nprint(新字符串)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br /&gt;\n &lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["用Python  设计程序，将一个字符串中的每一个单词首字符大写\n例如\n输入：hello world", ["用Python  设计程序，将一个字符串中的每一个单词首字符大写\n例如\n输入：hello world ！  输出：Hello World ！\n输入：we will be OK！ 输出：We Will Be OK！"]], "Tag": "程序设计"}
{"Answer": "默认情况下直接输出某个对象就是调用对象的toString方法的，那你给Student添加一个toString方法，如下：\r\n\r\n```\r\n public String toString(){\r\n     return name+\",\"+sex\r\n }\r\n```", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["最后一句的输出应该怎么写才会有键值对输出? java.lang.ClassCastException", ["public class Student {", "\n     private String name;", "\n     private String sex;", "\n    public String getName() {", "\n        return name;", "\n    }", "\n    public void setName(String name) {", "\n        this.name = name;", "\n    }", "\n    public String getSex() {", "\n        return sex;", "\n    }", "\n    public void setSex(String sex) {", "\n        this.sex = sex;", "\n    }", "\n    public Student(String name, String sex) {", "\n        super();", "\n        this.name = name;", "\n        this.sex = sex;", "\n    }", "\n    public Student() {", "\n        super();", "\n    }", "\n}", "\n\n", "public class MapStudent {", "\n\n", "public static void main(String[] args) {\nHashMap stu=new HashMap();\nstu.put(\"jack\", new Student(\"小明\",\"男\"));\nstu.put(\"tom\", new Student(\"小李\",\"女\"));\nstu.put(\"lucy\", new Student(\"小红\",\"女\"));\nSet s=stu.keySet();\nIterator it=s.iterator();\nwhile(it.hasNext()){\n    String key=(String)it.next();\n    String value=(String)stu.get(key);\n    System.out.println(key+value);\n}\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;. cpp前面的文件名呢&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["在vscode中运行hello world出现这种情况，希望解决一下", ["在安装VScode运行第一次C语言程序的时候", "\n", "\n", "\n", "成功运行C语言程序", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; string\n\nwords &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-comment\"&gt;# 去除所有标点符号&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; re\npunctuation &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;!,;:?&amp;#34;\\&amp;#39;、&amp;#xff0c;&amp;#xff1b;&amp;#39;&lt;/span&gt;\nwords &amp;#61; re.sub(&lt;span class=\"hljs-string\"&gt;r&amp;#39;[{}]&amp;#43;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(punctuation),&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,words).strip()\n&lt;span class=\"hljs-comment\"&gt;# 英语句子分词&lt;/span&gt;\nlst &amp;#61; words.split()\nf &amp;#61; &lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; x: &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(x)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; lst:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f(i), end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["程序补充题：输入一个英文句子，输出每个词的字母个数", ["例如：", "输入：Hello Python world!", "输出：5 6 5", "\n", "import string\nwords = input()\n", "# 去除所有标点符号", "\n....\n", "# 英语句子分词", "\n", "____", "____", "\nf = lambda x: len(x)\nfor i in ", "____", "____", "__:\n    print(f(i),__", "____", "_)\n\n", "\n", "\n", "请求补充第四行处省略号以及横线处的代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/107915231936151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["java远程jsch，执行python程序不能实时获取输出", ["使用jsch远程连接，执行cmd", "\n", "public String exec", "Cmd(String ", "command", ")", " throws Exception {\n    init", "ChannelExec()", ";\n    log.info(", "\"execCmd command - > {}\"", ", command);\n    channel.set", "InputStream(System.", "in", ")", ";\n    channelExec.set", "Command(", "command", ")", ";\n    channel.connect", "()", ";\n    StringBuilder sb = ", "new", " ", "StringBuilder(16)", ";\n    ", "try", " (InputStream ", "in", " = channel.get", "InputStream()", ";\n            InputStreamReader isr = ", "new", " ", "InputStreamReader(", "in", ", StandardCharsets.UTF_8)", ";\n            BufferedReader reader = ", "new", " ", "BufferedReader(", "isr", ")", ") {\n        String buffer;\n        ", "while", " ((buffer = reader.read", "Line()", ") != null) {\n            log.info(buffer);\n            sb.append(", "\"\\n\"", ").append(buffer);\n        }\n        log.info(", "\"execCmd result - > {}\"", ", sb);\n        return sb.", "to", "String()", ";\n    }\n}\n", "\n", "执行远程python程序：hello_world.py", "\n", "import time", "print(\"hello world start\")", "time.sleep(10)", "print(\"hello world end.\")", "\n", "输出不实时", "\n", "log.info(buffer);这句打印hello world start 和hello world end是同时打印出来的，我想要先打印第一行，等10s再打印第二行，请问怎么实现"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主函数参数应该是这样的int main(int argc, char* argv[])或者int main(int argc, char** argv)&amp;#xff0c;&lt;br /&gt;&amp;#43;&amp;#43;argv&amp;#xff1b;只是跳到下一个字符数组&amp;#xff0c;并不是按照字符跳转的&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["为什么输出的第二行是world！不是！ldrow，或者说这个程序的运行是怎么样的，为什么会输出的答案是这样的", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "main(int argc, char argv[]) /* test.c*/", "{ while(argc>1)", " { ++argv;", " printf(\"%s\\n\",*argv);", " --argc;", " }", "}", "设输入：C:\\TC> test[.exe] hello world!", "输出是：hello", "                  world!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码修改如下&amp;#xff0c;修改部分在代码中有注释&amp;#xff0c;如有帮助&amp;#xff0c;请帮忙采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/090540365536123.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define OUT 0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define IN 1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; hangshu,danci,zifu,&lt;span class=\"hljs-keyword\"&gt;state&lt;/span&gt;,ifnum;\n    hangshu &amp;#61; danci &amp;#61; zifu &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;state&lt;/span&gt; &amp;#61; IN; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff1a;这里是IN\n    ifnum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    char c;\n    char pre &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((c&amp;#61;getchar())!&amp;#61;EOF)\n    {\n        zifu&amp;#43;&amp;#43;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#xff1a;换行符不统计\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n            &amp;#43;&amp;#43;hangshu;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;||c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;||c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;state&lt;/span&gt; &amp;#61; OUT;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n            ifnum &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;state&lt;/span&gt; &amp;#61;&amp;#61; OUT)\n        {\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#xff1a;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ifnum &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; ( (pre &amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;pre&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;) || (pre &amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;pre&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) )  )\n            {\n                &amp;#43;&amp;#43;danci;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;state&lt;/span&gt; &amp;#61; IN;\n            ifnum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n        }\n        pre &amp;#61; c;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Lines:%d\\n&amp;#34;&lt;/span&gt;,hangshu);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Words:%d\\n&amp;#34;&lt;/span&gt;,danci);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Chars:%d\\n&amp;#34;&lt;/span&gt;,zifu);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["编写一个程序，用于统计行数、单词数与字符数。", ["编写一个程序，用于统计行数、单词数与字符数， 单词仅由连续的字母（含大小写）组成且前后必须有分隔符（'\\n','\\t',' '）,第一个和最后一个单词除外。", "遇文件结束字符EOF结束统计。（键盘输入ctrl+z）", "例", "输入", "abc DEF123", "^z", "输出", "Lines:1", "Words:1", "Chars:10", "\n", "#include <stdio.h>", "\n", "#define OUT 0", "\n", "#define IN 1", "\n \n", "int", " main()\n{\n ", "int", " hangshu,danci,zifu,", "state", ",ifnum;\n hangshu = danci = zifu = ", "0", ";\n ", "state", " = OUT; \n ifnum = ", "0", ";\n char c;\n ", "while", "((c=getchar())!=EOF)\n {\n  ++zifu;\n  ", "if", "(c==", "'\\n'", ")\n   ++hangshu;\n\n  ", "if", "(c==", "'\\n'", "||c==", "' '", "||c==", "'\\t'", ")\n   ", "state", " = OUT;\n  ", "if", "(c>=", "'0'", "&&c<=", "'9'", ")\n   ifnum = ", "1", ";\n   \n  ", "if", "(", "state", " == OUT)\n  {\n      ", "if", "(ifnum == ", "0", ")\n      ", "state", " = IN;\n    ++danci;}\n    \n   \n  \n  }\n \n ", "printf", "(", "\"Lines:%d\\n\"", ",hangshu);\n ", "printf", "(", "\"Words:%d\\n\"", ",danci);\n ", "printf", "(", "\"Chars:%d\\n\"", ",zifu);\n}\n\n", "\n", "测试用例 1", "adsa↵", "sad  sadgth↵", "dghyj↵", "dsdf↵", "\n", "Lines:4↵", "Words:5↵", "Chars:28↵", "\n", "测试用例 2", "adsa↵", "sad12    sadgth↵", "12dghyj↵", "dsdf↵", "\n", "Lines:4↵", "Words:3↵", "Chars:34↵", "\n", "测试用例 3", "happy↵", "hello world↵", "↵", "↵", "bye↵", "\n", "Lines:5↵", "Words:4↵", "Chars:24↵", "\n", "请问下大家，是哪里出问题了？"]], "Tag": "程序设计"}
{"Answer": "Hello 没有实例化,当然不会输出了。", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["关于java静态初始化块的问题？", ["在《java核心技术卷1》中有个关于静态初始化块的程序，书里描述为**_一个没有main方法的\"Hello World\"程序_**，程序如下", "\n\n", "public class Hello {\n    static \n    {\n        System.out.println(\"Hello World!\");\n        System.exit(0);\n    }\n}\n", "\n\n", "理想输出：在没有main方法的情况下输出Hello World!", "\n\n", "我的操作：", "\n\n", "1.用记事本写下这段代码，另存为Hello.java文件", "\n\n", "2.使用Windows PowerShell，在该目录下执行", "\n“javac Hello.java”编译生成.class文件，再执行", "\n“java Hello”", "\n\n", "3.控制台没有输出“Hello World!”，也就是说这个静态初始化块没有被执行，不知道是怎么回事", "\n\n", "\n\n", "4.书里说**_“当用java Hello调用这个类时，这个类就会加载，静态初始化块将会打印“Hello World!”。”_**那当我在shell中用了“java Hello\"命令后，Hello类就加载了，这个过程是不是已经类似于在new Hello()了，所以是不是就不需要再new了？用shell命令得不出需要的输出，请问在哪个步骤出现了问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;FindKthStr函数返回值改成void&lt;br /&gt;&amp;#xff08;2&amp;#xff09;sort(str_vec[0],str_vec[size-1],compare);改成sort(str_vec.begin(),str_vec.end(),compare);&lt;br /&gt;完整代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;compare&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string a, string b)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//用于从小到大对str_vec排序&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;()&amp;lt;b.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;();\n}\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; vector&amp;lt;string&amp;gt; StrVec;\n&lt;span class=\"hljs-comment\"&gt;//找出输入的字符串中所有长度从小到大排第k个的的字符串&amp;#xff0c;按出现顺序输出所有满足条件的字符串&amp;#xff08;字符串长度相同时k不变&amp;#xff09;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;FindKthStr&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(StrVec str_vec, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k)&lt;/span&gt; \n&lt;/span&gt;{\n    StrVec::size_type size &amp;#61; str_vec.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(str_vec.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;(),str_vec.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;(),compare);\n    &lt;span class=\"hljs-comment\"&gt;//sort(str_vec[0],str_vec[size-1],compare);&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;size&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(str_vec[i].&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;()&amp;lt;str_vec[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;())\n            flag&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;k)\n        {\n            cout&amp;lt;&amp;lt;str_vec[i]&amp;lt;&amp;lt;endl;\n            count&amp;#61;i;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(count)&lt;span class=\"hljs-comment\"&gt;//count&amp;#43;1用于输出最后一个排第k个的字符串&lt;/span&gt;\n        cout&amp;lt;&amp;lt;str_vec[count&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n    \n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    StrVec str_vec;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,k;&lt;span class=\"hljs-comment\"&gt;//n为输入字符串的个数&amp;#xff0c;k为输出第k个字符串&lt;/span&gt;\n    string s;\n    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        cin&amp;gt;&amp;gt;s;\n        str_vec.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(s);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;FindKthStr&lt;/span&gt;(str_vec,k);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["error: no match for 'operator-'", ["问题遇到的现象和发生背景", "\n", "编程题目：", " 编写一个程序，命名为", "findKthStr", "，找出输入的字符串中所有长度从小到大排第k个的的字符串，按出现顺序输出所有满足条件的字符串(用换行符分隔)，若没有则什么也不输出。", "    第一行输入为即将输入的字符串个数n", "    第二行输入为参数k", "    之后n行为输入的字符串", "\n", "示例", "输入：", "5", "2", "Hello", "World", "OOP", "xs", "oh", "输出：", "OOP", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "#", "include", " ", "<vector>", "\n", "#", "include", " ", "<algorithm>", "\n\n", "using", " ", "namespace", " std;\n\n", "bool", " ", "compare", "(string a, string b)", "//用于从小到大对str_vec排序", "\n", "{\n    ", "return", " a.", "length", "()<b.", "length", "();\n}\n\n", "typedef", " vector<string> StrVec;\n", "//找出输入的字符串中所有长度从小到大排第k个的的字符串，按出现顺序输出所有满足条件的字符串（字符串长度相同时k不变）", "\n", "StrVec ", "FindKthStr", "(StrVec str_vec, ", "int", " k)", " \n", "{\n    StrVec::size_type size = str_vec.", "size", "();\n    ", "sort", "(str_vec[", "0", "],str_vec[size", "-1", "],compare);\n    ", "int", " flag=", "1", ",count=", "0", ";\n    ", "int", " i;\n    ", "for", "(", "int", " i=", "0", ";i<size", "-1", ";i++)\n    {\n        ", "if", "(str_vec[i].", "size", "()<str_vec[i+", "1", "].", "size", "())\n            flag++;\n        ", "if", "(flag==k)\n        {\n            cout<<str_vec[i]<<endl;\n            count=i;\n        }\n    }\n    ", "if", "(count)", "//count+1用于输出最后一个排第k个的字符串", "\n        cout<<str_vec[count+", "1", "];\n\n}\n\n", "int", " ", "main", "()", "\n", "{\n    StrVec str_vec;\n    ", "int", " n,k;", "//n为输入字符串的个数，k为输出第k个字符串", "\n    string s;\n    cin>>n>>k;\n    ", "for", "(", "int", " i=", "0", ";i<n;i++)\n    {\n        cin>>s;\n        str_vec.", "push_back", "(s);\n    }\n    ", "FindKthStr", "(str_vec,k);\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "进行编译时会报错error: no match for 'operator-' (operand types are 'std::__cxx11::basic_string' and 'std::__cxx11::basic_string')", "     std::__lg(__last - __first) * 2", "\n", "请问如何解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该因为读取那里出错了&amp;#xff0c;然后c盘读取和写入文件运行程序可能需要管理员权限才能正常运行&amp;#xff1b;&lt;br /&gt;&lt;br /&gt;我在dev-c&amp;#43;&amp;#43;使用fopen()测试的代码&amp;#xff0c;读取file_1文件的模式改为了只读模式&amp;#xff0c;写入file_2文件改为了只写模式&amp;#xff0c;然后读取写入的地方修改了一下&amp;#xff0c;然后在cmd以管理员模式打开来运行程序的&amp;#xff0c;修改后程序正常运行&amp;#xff0c;修改如下&amp;#xff1a;&lt;br /&gt;&lt;br /&gt;参考链接&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/jobfind/article/details/89191265\" id=\"textarea_1672984621188_1672984653056_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/jobfind/article/details/89191265\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n \nint  main()\n{\n    FILE* fp, * fq;\n   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; errno_t error_1, error_2;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (( fp&amp;#61;fopen( &lt;span class=\"hljs-string\"&gt;&amp;#34;C:\\\\file_1.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;))&amp;#61;&amp;#61;NULL){\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;cannot open file&amp;#34;&lt;/span&gt;);\n        getchar();\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fq&amp;#61;fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;C:\\\\file_2.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; NULL){\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;cannot open file&amp;#34;&lt;/span&gt;);\n        getchar();\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    int i,j;\n    char a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;],ch;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; feof(fp) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;#43;&amp;#43;,j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将file_1中的字符存到字符数组中\n    \n        a[i] &amp;#61; fgetc(fp);\n       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;read,a[%d]&amp;#61;%c\\n&amp;#34;&lt;/span&gt;,i,a[i]);\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,i);\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;把字符数组的内容写入file_2\n        ch &amp;#61; a[j];\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;write,a[%d]&amp;#61;%c\\n&amp;#34;&lt;/span&gt;,j,a[j]);\n        fputc(ch, fq);\n    }\n &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;  rewind(fq);\n     fclose(fp);\n    fclose(fq); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;写入文件后&amp;#xff0c;关闭文件保存文件数据 \n        \n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 再次打开文件读取数据        \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((fq&amp;#61;fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;C:\\\\file_2.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) &amp;#61;&amp;#61; NULL){\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;cannot open file&amp;#34;&lt;/span&gt;);\n        getchar();\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (feof(fq)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;输出file_2中的内容\n    {\n        ch &amp;#61; fgetc(fq);\n        putchar(ch);\n    }\n     \n     fclose(fq);\n}\n \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/667832489276146.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["程序正常运行了，但是不知道为什么file_1文本中的hello world复制到file_2中就变成了?，希望有人解答一下要怎么改才能实现复制。", ["问题遇到的现象和发生背景", "\n", "程序目的 把一个磁盘文件中的内容复制到另一个磁盘文件中", "程序正常运行了，但是不知道为什么file_1文本中的hello world复制到file_2中就变成了?，希望有人解答一下要怎么改才能实现复制。", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "#include<stdio.h>'", "\n", "#include<stdlib.h>'", "\n\nvoid main()\n{\n    FILE* fp, * fq;\n    errno_t error_1, error_2;\n    ", "if", " ((error_1 = fopen_s(&fp, ", "\"C:\\\\file_1.txt\"", ", ", "\"wt+\"", "))!=NULL){\n        printf(", "\"cannot open file\"", ");\n        getchar();\n        ", "exit", "(", "1", ");\n    }\n    ", "if", " ((error_2 = fopen_s(&fq, ", "\"C:\\\\file_2.txt\"", ", ", "\"wt+\"", ")) != NULL){\n        printf(", "\"cannot open file\"", ");\n        getchar();\n        ", "exit", "(", "1", ");\n}\n    int i,j;\n    char a[", "100", "],ch;\n    ", "for", " (i = ", "0", ",j=", "1", "; feof(fp) != ", "1", "; i++,j++) {", "//", "将file_1中的字符存到字符数组中\n        a[i] = fgetc(fp);\n    }\n    ", "for", " (i = ", "0", "; i < j; i++) {", "//", "把字符数组的内容写入file_2\n        ch = a[i];\n        fputc(ch, fq);\n    }\n    rewind(fq);\n    ", "while", " (feof(fq)!=", "1", ")", "//", "输出file_2中的内容\n    {\n        ch = fgetc(fq);\n        putchar(ch);\n    }\n    fclose(fq); fclose(fp);\n}\n\n", "\n", "运行结果及详细报错内容", "\n", "\n", "\n", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:\n    mark&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n):\n        txt &amp;#61; f.readline().replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; txt:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &amp;#61;&amp;#61; txt[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(txt)\n                mark&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; mark:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;not found&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/97253962563616.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["python中文件——查找复制特定字符串", ["【问题描述】", "\n", "编写程序实现：从键盘输入整数n。从文件\"text.txt\"中读入n行，将其中以字母A开头的行打印到标准输出（这里指的是屏幕）中。", "【输入形式】", "\n", "从键盘输入整数", "n", "；\n文件输入的第", "1", "至", "n", "行的每一行构成一个字符串。\n", "\n", "【输出形式】", "\n", "标准输出的每一行是字母A开头的行。若未找到符合条件的字符串，则输出", "\"not found\"", "；若输入数据不合法（指", "n", "为小数或负数）则输出", "\"illegal input\"", "。\n", "\n", "【样例输入】", "\n", "  键盘输入：      5\n\n  文件输入：\n        hello world\n        ", "An", " apple\n        hello C++\n        A ", "man", "\n        a ", "program", "\n", "\n", "【样例输出】", "\n", "        ", "An", " apple\n        A ", "man", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;num;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;isalpha&lt;/span&gt;(s[j])||s[j]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;||&lt;span class=\"hljs-built_in\"&gt;isdigit&lt;/span&gt;(s[j])){\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;!(&lt;span class=\"hljs-built_in\"&gt;isalpha&lt;/span&gt;(s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])||s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;)){\n                    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                }\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,flag);\n    } \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["C语言编程问题求解答", ["题目描述", "C语言中的合法标识符的定义为：以下划线或字母开头的字母数字串（含下划线）。", "完成一个程序实现对输入的n个字符串进行判定，是否为C语言的合法标识符。如果是则输出1，不是则输出0", "\n", "关于输入", "输入的第一行为一个数字，表明有几个输入字串。", "后面每一行为一个长度不超过80的字符串。", "\n", "关于输出", "对所有输入的字符串进行判断，是合法标识符则输出1，回车。否则输出0，回车。", "\n", "例子输入", "5", "hello_world", "my god", "i", "_stdio", "008A", "例子输出", "1", "0", "1", "1", "0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二个程序和第一个程序的区别在于&lt;code class=\"language-javascript\"&gt;arr[i] &amp;#61; new int[i&amp;#43;1];&lt;/code&gt;位置不同&amp;#xff0c;第一个程序是可以正常运行的&amp;#xff0c;但第二个则不行。因为每次执行第二层for循环时都会导致arr[i]被重置&amp;#xff0c;所以才会出现只有1和0的结果&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/685158626636150.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["不知道自己写的杨辉三角哪错啦", ["不知道第一个程序与第二个程序的区别，以及为什么第二个程序输出结果会是这样", "第一个程序：", "\n", "import java.util.", "Scanner", ";\n\npublic class ", "Exer", " {\n        public static void main(", "String", "[] args) \n        {\n            int arr[][] = new int[", "10", "][];\n                for (int i = ", "0", ";i<arr.length ;i++ )\n                {\n                arr[i] = new int[i+", "1", "];\n                for(int j =", "0", ";j<arr[i].length;j++){\n                    if (i==", "0", ")\n                    {\n                        arr[i][j] =", "1", ";\n                        ", "System", ".out.println(arr[i][j]);\n                    }\n                    if(i == ", "1", ")\n                    {\n                        arr[i][j] = ", "1", ";\n                        ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        if(j==i)\n                        {\n                            ", "System", ".out.println();\n                        }\n                    }\n\n\n                    if(i>", "1", ")\n                    {\n                        if(j==", "0", ")\n                        {\n                            arr[i][j] = ", "1", ";\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        }\n                        if(j>", "0", "&&j<arr[i].length", "-1", ")\n                        {\n                            arr[i][j] = arr[i", "-1", "][j]+arr[i", "-1", "][j", "-1", "];\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        }\n                        if(j == arr[i].length", "-1", ")\n                        {\n                            arr[i][j] = ", "1", ";\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                            ", "System", ".out.println();\n                        }\n\n                    }\n                }\n                }\n            ", "System", ".out.println(", "\"Hello World!\"", ");\n        }\n\n\n}\n\n", "\n", "第二个程序：", "\n", "mport java.util.", "Scanner", ";\n\npublic class ", "Exer", " {\n        public static void main(", "String", "[] args) \n        {\n            int arr[][] = new int[", "10", "][];\n                for (int i = ", "0", ";i<arr.length ;i++ )\n                {\n                for(int j =", "0", ";j<i+", "1", ";j++){\n                    if (i==", "0", ")\n                    {\n                        arr[i] = new int[i+", "1", "];\n                        arr[i][j] =", "1", ";\n                        ", "System", ".out.println(arr[i][j]);\n                    }\n                    if(i == ", "1", ")\n                    {\n                        arr[i] = new int[i+", "1", "];\n                        arr[i][j] = ", "1", ";\n                        ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        if(j==i)\n                        {\n                            ", "System", ".out.println();\n                        }\n                    }\n\n\n                    if(i>", "1", ")\n                    {\n                        arr[i] = new int[i+", "1", "];\n                        if(j==", "0", ")\n                        {\n                            arr[i][j] = ", "1", ";\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        }\n                        if(j>", "0", "&&j<i)\n                        {\n                            arr[i][j] = arr[i", "-1", "][j]+arr[i", "-1", "][j", "-1", "];\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                        }\n                        if(j == i)\n                        {\n                            arr[i][j] = ", "1", ";\n                            ", "System", ".out.print(arr[i][j]+", "\"\\t\"", ");\n                            ", "System", ".out.println();\n                        }\n\n                    }\n                }\n                }\n            ", "System", ".out.println(", "\"Hello World!\"", ");\n        }\n\n\n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "在第一个printf()语句之后加上\r\nfflush(stdout)应该就可以输出了.\r\n\r\n楼主可以参考一下这个帖子:\r\n[url=http://topic.csdn.net/u/20070804/13/b301b4b6-3bdd-41df-bcaf-73f85e54219b.html]关于printf的刷新输出问题？？[/url]", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["CDT下到底如何调试带有输入的C程序？", ["环境：Eclipse3.4 + CDT + cygwin", "\n[code=\"c\"]#include ", "\n#include ", "\n\n", "int main(void) {", "\n    char name[20];", "\n    printf(\"Please enter your name:\");", "\n    scanf(\"%s\",name);", "\n    printf(\"%s says, !!!Hello World!!!\",name); ", "\n    return EXIT_SUCCESS;", "\n}[/code]", "\n\n", "如果是正常运行，则应该先输出第一个printf中的字符串，然后等待输入，我在控制台输入完成后回车，然后输出第二个printf中的字符串。", "\n\n", "但是运行后，Eclipse的控制台什么也没输出，当我随便输入一个字符串后，同时输出了第一个和第二个printf中的字符串。如果直接双击生成的exe文件是可以在cmd窗口中正常运行的。理论上应该执行到printf函数的时候我的控制台上就应该打印出提示信息的，可是为什么要等我输入一些东西后一股脑全给我扔出来了啊？"]], "Tag": "程序设计"}
{"Answer": "print 后面都少了个括号", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["Python学习idle中elif一直是报错，，求大神解答！", ["编写一个凯撒密码加密程序，接收用户输入的文本和密钥k，对明文中的字母a-z和字母A-Z替换为其后第k个字母。", "\n\n", "输入格式:", "\n接收两行输入，第一行为待加密的明文，第二行为密钥k。", "\n\n", "输出格式:", "\n输出加密后的密文。", "\n\n", "输入样例:", "\n在这里给出一组输入。例如：", "\n\n", "Hello World!", "\n3", "\n输出样例:", "\n在这里给出相应的输出。例如：", "\n\n", "Khoor Zruog!", "\n\n", "#", "\n\n", "elif一直是标红状态...", "\n\n", "s1 = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\ns2 = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\ns = input()\nnum = eval(input())\nfor i in range(len(s)):\n    if 'a' <= s[i] <= 'z':\n        for j in range(26):\n            if s1[j] == s[i]:\n                print(\"{}\".format(s1[(j + num) % 26], end=\"\")\n    elif 'A'<= s[i] <='Z':\n        for j in range(26):\n            if s2[j] == s[i]:\n                print(\"{}\".format(s2[(j + num) % 26], end = \"\")\n    else:\n        print(s[i],end = \"\")\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;sData&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; cb[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; d;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n};\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ReadDataInfo&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* filename, &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; sData** pdata)&lt;/span&gt;\n&lt;/span&gt;{\n    \n    FILE *fp;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,j;\n    fp&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(filename,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fp&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cann&amp;#39;t open the file&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    }\n    ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fgetc&lt;/span&gt;(fp);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ch!&amp;#61;EOF)\n    {\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n        {\n            i&amp;#43;&amp;#43;;\n        }\n        ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;fgetc&lt;/span&gt;(fp);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;rewind&lt;/span&gt;(fp);\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *ptr;\n    *pdata&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; sData*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(** pdata)*(i/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;));\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;i/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;j&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(*pdata&amp;#43;j,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; sData));\n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(buf,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,fp);\n        (*pdata&amp;#43;j)-&amp;gt;i &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(buf);\n        \n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(buf,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,fp);\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;m&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(buf)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;m&amp;#43;&amp;#43;)\n        {\n            (*pdata&amp;#43;j)-&amp;gt;cb[m] &amp;#61; buf[m];\n        }\n\n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(buf,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,fp);\n        (*pdata&amp;#43;j)-&amp;gt;d &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strtod&lt;/span&gt;(buf,&amp;amp;ptr);\n        \n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(buf,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,fp);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;m&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(buf)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;m&amp;#43;&amp;#43;)\n        {\n            (*pdata&amp;#43;j)-&amp;gt;c[m] &amp;#61; buf[m];\n        }\n    \n    }\n    &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; i/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,count;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;sData&lt;/span&gt; *list;\n    \n      count&amp;#61;&lt;span class=\"hljs-built_in\"&gt;ReadDataInfo&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;c:\\\\1.txt&amp;#34;&lt;/span&gt;, &amp;amp;list);\n      \n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input the number&amp;#34;&lt;/span&gt;);\n      &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;i);\n      \n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; i&amp;lt;&amp;#61;count)\n      {\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,list[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].i);\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,list[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].cb);  \n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf\\n&amp;#34;&lt;/span&gt;,list[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].d);  \n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,list[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].c); \n      }\n\n\n     &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(list);\n     list &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/507086006056176.PNG\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["oj关于C语言文本文件处理", ["求解惑", "题目就是这样，没有增加我个人的任何东西", "我知道这是java的程序，也不理解为什么题目这样出，但要用c语言的方法解决问题", "\n", "题目描述\n已知一个文本文件，文件名为dict.dic。它是由下边的代码生成。\n    ", "int", " a ;\n    ", "boolean", " b = ", "true", " ;\n    ", "double", " c , f ;\n    String d ;\n    PrintWriter ", "out", " = ", "new", " PrintWriter(\"dict.dic\");\n    Scanner cin = ", "new", " Scanner(", "System", ".", "in", ");\n    ", "for", " (", "int", " i = ", "0", " ; i < ", "5", " ; i ++ ) {\n         a = cin.nextInt() ;\n         f = Math.random() ;\n         ", "if", " ( f > ", "0.5", " ) b = ", "true", " ;\n         ", "else", " b = ", "false", " ;\n         c = cin.nextDouble() ;\n         d = cin.next() ;\n         ", "out", ".println(a) ;\n         ", "out", ".println(b) ;\n         ", "out", ".println(c) ;\n         ", "out", ".println(d) ;\n    }\n    ", "out", ".", "close", "(); // Remember this!\n    cin.", "close", "();\n  }\n你的任务是写一段程序，将这些内容读出来。\n输入：\n为一个整数，只可能是", "1", "，", "2", "，", "3", "，", "4", "，", "5", "之一。\n输出：\n将dict.dic中的相关内容输出到屏幕上，如果输入是", "1", "，则输出那段代码第一次循环写入的内容，如果输入是", "2", "，则输出那段代码第二次循环写入的内容，依此类推。\n形式如样例。", "double", "类型的不是保留一位小数，直接输出就可以了。\n样例输入：\n", "1", "\n样例输出：\n", "100", "\n", "false", "\n", "72.5", "\nhelloworld\n\n"]], "Tag": "程序设计"}
{"Answer": "闭包意味着内层函数可以引用外层函数内的变量，即使外层函数执行已经终止--引用jquery作者\r\n\r\n你的例子：\r\n\r\nt变量是存放在全局的上下文（window）中，window肯定会一直都存在的。\r\n\r\nnum变量存放在对象里，只要对象一直引用着，num变量也会消失。\r\n\r\n闭包的例子：\r\n\r\n\tfunction bindOnlick(){\r\n           var color=\"yellow\";\r\n\t   document.getElementById(\"test\").onclick=function(){\r\n\t   \tthis.style.background=color;//这里的color就是引用了外层函数的变量color=\"yellow\",执行该行时，bindOnlick早就结束。\r\n\t   }\r\n\t   document.write(\"init over\");\r\n\t}\r\ndocument.getElementById(\"test\").onclick=function()肯定是bindOnlick函数结束之后才有可能会执行的，但是可以引用color变量，但是color不存在一个明确的上下文中。\r\n\r\n\r\n其实闭包与不闭包本质没是什么区别，就是内存的一个块区域一直存放着该变量！", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["java很难模拟闭包？还是我对闭包理解有误？", ["今天看《Javascript高级程序设计》一书，其中对闭包下了一个定义：", "闭包是词法表示包括不必计算的变量的函数。（原书第56页）", "还给了一个简单的样例：", "\n\n", "var t = \"hello world\";", "\n\n", "function closure(){", "\n   alert(t);", "\n}", "\n\n", "因为变量t在函数closure之外定义，所以closure就是一个必包。", "如果这样的话，用java模拟闭包有何难？", "\n\n", "public class SimulateClosure{", "\n\n", "private int num;\npublic void setNum(int num){\n    this.num = num;\n}\n\npublic void closure(int origin){\n    System.out.println(origin*num);\n}\n", "\n\n", "}", "\n\n", "客户端调用：", "\n\n", "SimulateClosure sc = new SimulateClosure();", "\nsc.setNum(1);", "\nsc.closure(5);// 输出5", "\nsc.setNum(2);", "\nsc.closure(5);// 输出10 ", "\n\n", "我写的这个例子是不是闭包？closure方法也使用了方法外部的字段。。客户端调用结果也不同。。", "闭包就这么简单吗？还是我的理解有错误？请高手指教。", "问题补充", "达人们，你们在哪里？？快来拍我", "问题补充", "谢谢猫姐！那我写的例子不是闭包，书中提供的例子是不是闭包呢？"]], "Tag": "程序设计"}
{"Answer": "String是静态的不能被修改，每次赋值都是改变引用。\r\n而方法传值传的是指针\r\n\r\n比如方法调用fun(str1);这样的，把str1的指针复制一下传入方法，而方法中改变了这个指针指向的对象。但是注意，原来的str1没有变。因为方法内部的str2是str1复制了一遍的。\r\n\r\n而类的成员变量，改变了指向的对象。", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["关于String类内存分配的问题", ["遇到这样一个问题，求高手解释下：", "public class RefDemo0{", "  public static void main(String args[]){", "       String str1 = \"hello\" ;         // 实例化字符串对象", "       System.out.println(\"fun()方法调用之前：\" + str1) ;", "     fun(str1) ;                     // 调用fun()方法", "      System.out.println(\"fun()方法调用之后：\" + str1) ;", " }", " public static void fun(String str2){        // 此处的方法由主方法直接调用", "        str2 = \"world\" ;                    // 修改字符串内容", "  }", "};", "输出结果为：", "fun()方法调用之前：hello", "fun()方法调用之后：hello", "而", "class Demo{", " String temp = \"hello\" ;     // 此处为了方便，属性暂时不封装", "};", "public class RefDemo0{", " public static void main(String args[]){", "       Demo d1 = new Demo() ;  // 实例化Demo对象", "        d1.temp = \"world\" ;     // 修改temp属性的内容", "      System.out.println(\"fun()方法调用之前：\" + d1.temp) ;", "      fun(d1) ;", "     System.out.println(\"fun()方法调用之后：\" + d1.temp) ;", "  }", " public static void fun(Demo d2){        // 此处的方法由主方法直接调用", "        d2.temp = \"hey\";                        // 修改temp值", "  }", "};", "输出结果为：", "fun()方法调用之前：world", "fun()方法调用之后：hey", "为什么两次输出结果会不同？", "问题补充", "zhushidan100 写道", "值传递,引用传递", " 好像是", "能说详细点吗", "问题补充", " 哪位帮忙解答下 ，这问题困扰我一个晚上了", "问题补充", "原来是String类的内容不可改变，感谢李老师的热心指导", "问题补充", "sziitjiang 写道", "第一个例子，从程序上直接分析就是fun方法传入参数str2，而str2既不是全局变量，fun方法有没有返回到哪里，所以str1的值都没有得到修改，str1和str2是两个不同的对象", "从JVM内存上分析，下面是我画的JVM分析图，应该是比较明白的", "正是如此", "  谢谢你的详细分析"]], "Tag": "程序设计"}
{"Answer": "第一个是局部的数组，存放在栈中，函数中执行完了之后内存就释放，只有全局的数组才是整个程序的生命周期的。第二个是字符串常量，字符串常量存放在数据段中，是整个程序运行周期都是存在的，而且不能修改其中的值。可以看看这个https://blog.csdn.net/qq_28249373/article/details/76768776", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["关于字符串常量的问题？", ["#include<stdio.h>\n\nextern char * stri();\nint main(void)\n{\n    char *p = stri();\n    printf(\"%s\\n\", p);\n\n    return 0;\n\n}\n\nchar * stri()\n{\n    char arr[] = \"hello world\";\n\n    return arr;\n}\n", "\n\n", "这样输出的是乱码。", "\n\n", "#include<stdio.h>\n\nextern char * stri();\nint main(void)\n{\n    char *p = stri();\n    printf(\"%s\\n\", p);\n\n    return 0;\n\n}\n\nchar * stri()\n{\n    char *arr = \"hello world\";\n\n    return arr;\n}\n", "\n\n", "这样输出的是hello world", "\n\n", "为什么呢？字符串常量的生命周期不是整个程序的生命周期吗？为什么第一个不行。（刚学C语言不太懂，求大佬解答）。。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;n,s&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;()&lt;span class=\"hljs-selector-class\"&gt;.split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nres&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; s:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.isalpha&lt;/span&gt;():\n        t&amp;#61;ord(i)&amp;#43;int(n)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.islower&lt;/span&gt;() and t&amp;gt;ord(&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)) or (&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.isupper&lt;/span&gt;() and t&amp;gt;ord(&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;)):\n            t-&amp;#61;&lt;span class=\"hljs-number\"&gt;26&lt;/span&gt;         \n        res&amp;#43;&amp;#61;chr(t)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        res&amp;#43;&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(res)&lt;/span&gt;&lt;/span&gt;   \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/878382121736169.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt; 觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["python关于凯撒密码求凯撒加密后的字符串，编写代码", ["【问题描述】", "\n", "    凯撒密码是古罗马凯撒大帝用来保护重要军情的加密系统。这套密码系统在现在看来很低级，但是在古罗马时期还是发挥了重要作用的。\n\n    凯撒密码的根本思想是按照字母表排列顺序将明文中每个字母变换成其后第", "n", "个字母。这里，", "n", "（", "n", "=", "1", "~", "25", "）被称作秘钥。\n\n    请编写程序，针对不同的输入字符串和移动位数，输出经过凯撒加密之后的字符串。\n", "\n", "【输入形式】", "\n", "第一个输入参数是移动的位数n，中间间隔一个空格之后，第二个输入参数是待加密的原文字符串", "【输出形式】", "\n", "加密后的密文字符串。注意，只加密字母，且不改变字母大小写。待加密的字符串可能存在比如\"hello world\"的形式，若与第一个参数一起以input的方式输入，在调用split()的时候要注意，会将待加密字符串也一并分割了。split()方法有参数指定分割多少项，建议采用，请上网搜索说明文档。", "【样例输入】", "\n", "5 NUDT", "【样例输出】", "\n", "SZIY", "【样例说明】", "\n", "输入参数中第一个参数'5'表示移动位数n=5，然后将第二个输入参数中每个字母都向后移动5位，得到输出字符串。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%s&amp;#34;,&amp;amp;b[i]);读取字符串不用加&amp;amp;&lt;br /&gt;hile (k &amp;#61;&amp;#61; n - 1 &amp;amp;&amp;amp; x[i] &amp;#61;&amp;#61; 0)&lt;br /&gt;这个 while应该改成if&lt;br /&gt;应该是k &amp;#61;&amp;#61; n &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;           if (&lt;span class=\"hljs-name\"&gt;k&lt;/span&gt; &amp;#61;&amp;#61; n &lt;span class=\"hljs-symbol\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; x[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;\nint main()\n{\n    char a[&lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;], b[&lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;];\n    int &lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, x[&lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    int &lt;span class=\"hljs-attr\"&gt;flag&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;m&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    gets(a);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n%d&amp;#34;&lt;/span&gt;, &amp;amp;flag, &amp;amp;m);\n    for (&lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, b[i]);\n    &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; strlen(a);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-attr\"&gt;flag&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        for (&lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            int &lt;span class=\"hljs-attr\"&gt;t&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            for (&lt;span class=\"hljs-attr\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; b[i][j] !&amp;#61; &amp;#39;\\&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#39;; j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[k] &amp;#61;&amp;#61; b[i][j])\n                {\n                    k&amp;#43;&amp;#43;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    &lt;span class=\"hljs-attr\"&gt;j&lt;/span&gt; &amp;#61; t;\n                    t&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61;&amp;#61; n &amp;amp;&amp;amp; x[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)//  while应该改成&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;,应该是&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61;&amp;#61; n\n                {\n                    puts(b[i]);\n                    x[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    break;\n                }\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        for (&lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            int &lt;span class=\"hljs-attr\"&gt;t&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            for (&lt;span class=\"hljs-attr\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; b[i][j] !&amp;#61; &amp;#39;\\&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#39;; j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[k] &amp;#61;&amp;#61; b[i][j] || a[k] &amp;#61;&amp;#61; b[i][j] &amp;#43; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt; || a[k] &amp;#61;&amp;#61; b[i][j] - &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;)\n                {\n                    k&amp;#43;&amp;#43;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    &lt;span class=\"hljs-attr\"&gt;j&lt;/span&gt; &amp;#61; t;\n                    t&amp;#43;&amp;#43;;\n                    &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61;&amp;#61; n &amp;amp;&amp;amp; x[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)//  while应该改成&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;,应该是&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61;&amp;#61; n\n                {\n                    puts(b[i]);\n                    x[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    break;\n                }\n            }\n        }\n    }\n\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["请问xdoj 字符串查找 81题，运行结果正确，提交只有20分是为什么，怎样修改", ["问题", "\n", "标题", "字符串查找", "\n", "类别", "字符串处理", "\n", "时间限制", "2S", "\n", "内存限制", "256Kb", "\n", "问题描述", "给出一个字符串和多行文字，输出在这些文字中出现了指定字符串的行。", "程序还需要支持大小写敏感选项：", "    当选项打开时，表示同一个字母的大写和小写看作不同的字符；", "    当选项关闭时，表示同一个字母的大写和小写看作相同的字符。", "\n", "输入说明", "输入数据第一行包含一个字符串s，由大小写英文字母组成，长度不超过100。", "第二行包含一个数字，表示大小写敏感选项。当数字为0时表示大小写不敏感，当数字为1时表示大小写敏感。", "第三行包含一个整数n，表示给出的文字行数。", "接下来n行，每行包含一个字符串，字符串由大小写英文字母组成，不含空格和其他字符。每个字符串长度不超过100。", "\n", "输出说明", "输出多行，每行包含一个字符串，按出现的顺序依次给出那些包含了字符串s的行。", "\n", "输入样例", "Hello", "1", "5", "HelloWorld", "HiHiHelloHiHi", "GrepIsAGreatTool", "HELLO", "HELLOisNOTHello", "\n", "输出样例", "HelloWorld", "HiHiHelloHiHi", "HELLOisNOTHello", "\n", "问题相关代码", "\n", "我的代码", "\n", "#include<stdio.h>", "\n", "#include<string.h>", "\nint main(){\n    char a[101],b[101][101];\n    int ", "i", "=0,j=0,k=0,x[101]={0};\n    int ", "flag", "=0,m=0,n=0;\n    gets(a);\n    scanf(", "\"%d\\n%d\"", ",&flag,&m);\n    ", "for", "(", "i", "=0;i<m;i++)\n    scanf(", "\"%s\"", ",&b[i]);\n    ", "n", "=strlen(a);\n\n    ", "if", "(", "flag", "==1)\n        ", "for", "(", "i", "=0;i<m;i++){\n        ", "k", "=0;\n            ", "for", "(", "j", "=0;b[i][j]!=", "'\\0'", ";j++){\n            ", "if", "(a[k]==b[i][j]){\n            k++;    \n            }\n            ", "else", "\n            ", "k", "=0;    \n            ", "while", "(", "k", "==n-1&&x[i]==0){\n                puts(b[i]);\n                x[i]=1;\n                break;\n            }    \n            }\n        }\n    ", "else", " {\n    ", "for", "(", "i", "=0;i<m;i++){\n    ", "k", "=0;\n            ", "for", "(", "j", "=0;b[i][j]!=", "'\\0'", ";j++){\n            ", "if", "(a[k]==b[i][j]||a[k]==b[i][j]+32||a[k]==b[i][j]-32){\n            k++;    \n            }\n            ", "else", "\n            ", "k", "=0;    \n            ", "while", "(", "k", "==n-1&&x[i]==0){\n                puts(b[i]);\n                x[i]=1;\n                break;\n            }    \n            }\n        }\n    }\n    \n    return 0; \n} \n", "\n", "别的100分代码", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n\n", "char", " ", "tran", "(", "char", " a)", "{\n    ", "if", "(a<=", "'z'", "&&a>=", "'a'", ") ", "return", " a", "-32", ";\n    ", "else", " ", "if", "(a<=", "'Z'", "&&a>=", "'A'", ") ", "return", " a+", "32", ";\n}\n\n", "int", " ", "main", "()", "{\n    ", "int", " sen,n,i,j,k,l;\n    ", "char", " s[", "101", "],ch[", "1000", "][", "101", "];\n    ", "scanf", "(", "\"%s%d%d\"", ",s,&sen,&n);\n    ", "for", "(i=", "0", ";i<n;i++) ", "scanf", "(", "\"%s\"", ",ch[i]);\n    ", "if", "(sen==", "1", "){\n        ", "for", "(j=", "0", ";j<n;j++){", "//二重循环，在每一行中搜索s", "\n            ", "for", "(k=", "0", ";k<", "strlen", "(ch[j])-", "strlen", "(s)+", "1", ";k++){", "//防溢出", "\n                l=", "0", ";", "//初始化在这里进行！", "\n                ", "if", "(ch[j][k]==s[", "0", "]){\n                    ", "for", "(;l<", "strlen", "(s);l++){\n                        ", "if", "(ch[j][k+l]!=s[l]) ", "break", ";\n                    }\n                }\n                ", "if", "(l==", "strlen", "(s)){\n                    ", "printf", "(", "\"%s\\n\"", ",ch[j]);\n                    ", "break", ";\n                }\n            }\n        }\n    }    \n    ", "else", " ", "if", "(sen==", "0", "){\n        ", "for", "(j=", "0", ";j<n;j++){\n            ", "for", "(k=", "0", ";k<", "strlen", "(ch[j])-", "strlen", "(s)+", "1", ";k++){\n                l=", "0", ";\n                ", "if", "(ch[j][k]==s[", "0", "]||", "tran", "(ch[j][k])==s[", "0", "]){\n                    ", "for", "(;l<", "strlen", "(s);l++){\n                        ", "if", "(ch[j][k+l]!=s[l]&&", "tran", "(ch[j][k+l])!=s[l]) ", "break", ";\n                    }\n                }\n                ", "if", "(l==", "strlen", "(s)){\n                    ", "printf", "(", "\"%s\\n\"", ",ch[j]);\n                    ", "break", ";\n                }\n            }\n        }\n    }\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "运行结果", "\n", "输入样例", "Hello", "1", "5", "HelloWorld", "HiHiHelloHiHi", "GrepIsAGreatTool", "HELLO", "HELLOisNOTHello", "\n", "输出样例", "HelloWorld", "HiHiHelloHiHi", "HELLOisNOTHello", "\n", "Hello", "0", "5", "HelloWorld", "HiHiHelloHiHi", "GrepIsAGreatTool", "HELLO", "HELLOisNOTHello", "\n", "HelloWorld", "HiHiHelloHiHi", "HELLO", "HELLOisNOTHello"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;方法怎么写在case块中&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;a&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    查看for语句         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1:查看          **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        0:退出          **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;)\n           {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        {\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;开始&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;//getch();&lt;/span&gt;\n            &lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;color 1&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                            *                       &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                           ***                      &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt; &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                          *****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                         ******* &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                       **********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;               ***************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\nint &lt;span class=\"hljs-title function_\"&gt;b&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*********************************&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**     观看数组类型图像    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**          1&amp;#xff1a;观看        **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**          2&amp;#xff1a;退出        **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {   int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n            int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;];\n                }\n            }\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出10行10列的值&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n               &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n               {\n                   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                   &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;]);\n                   &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                } \n        } &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已回到主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\nint &lt;span class=\"hljs-title function_\"&gt;c&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;;\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**      函数类型图像      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1&amp;#xff1a;阶乘         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        2&amp;#xff1a;最大值       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        3&amp;#xff1a;返回         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//阶乘 &lt;/span&gt;\n             {\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;; \n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入阶乘的数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d!&amp;#61;%d&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//最大值 &lt;/span&gt;\n              {\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;;\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入4个数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%d,%d,%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大值是&amp;#xff1a;%d&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n                }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;d&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**请选择九九乘法表类型**&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********1&amp;#xff1a;左上*********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****   2&amp;#xff1a;左下   ******&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;***     3&amp;#xff1a;右上     ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;***     4&amp;#xff1a;右下     ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****   5&amp;#xff1a;奇数   ******&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********6&amp;#xff1a;返回*********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表左上&lt;/span&gt;\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;)\n                    {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;////九九乘法表左下&lt;/span&gt;\n                {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                     &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                     }    \n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表右上 &lt;/span&gt;\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;; \n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                    {\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                    {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                    }\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    }    \n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表右下 &lt;/span&gt;\n                             {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                        {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                        }\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; \n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表奇数 &lt;/span&gt;\n                {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                         {\n                            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;%&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                         }\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;   \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;e&lt;/span&gt;()\n{\n    int &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt;;\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1:输入一个数&amp;#xff0c;判断是正数、负数还是零。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2:输入一个小于10000的正整数&amp;#xff0c;将其每个位数输出&amp;#xff0c;并且逆序输出。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3:输入4个数字&amp;#xff0c;让其从小到大排序。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4:求三位数的水仙花数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;5:用c语言求下列分数序列的前20项之和&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;6:一个球从100m高度自由落下,每次落地后反弹回原来高度的一半,再落下.求它在第10次落地并反弹到最高点,共经过多少m?第10次反弹多高?&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;7:输出杨辉三角。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;8:利用折半查找法找数。&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;9:输入3行字符串&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10:输入一段文字&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;11:写程序完成下面条件&amp;#xff1a;1&amp;#xff09;输入10个职工的姓名和职工号&amp;#xff1b;2&amp;#xff09;按职工号由小到大的顺序排序&amp;#xff1b;3)要求输入一个职工号&amp;#xff0c;用折半法查找出该职工的姓名&amp;#xff0c;从主函数输入要查找的职工号&amp;#xff0c;输出该职工的姓名&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;12:给一段数&amp;#xff0c;给每个数之间插入空格&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;13:输入3个数字&amp;#xff0c;从小到大排列。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;14:编写C语言程序&amp;#xff0c;输入数组&amp;#xff0c;最大的与第一个元素交换&amp;#xff0c;最小的与最后一个元素交换&amp;#xff0c;输出数组。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;15:输入一行文字&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;16:输入5个学生的学号、姓名、分数1、分数2以及分数3并输出。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n      &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)\n          {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {\n                int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入x的值:&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;-1&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;0&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;1&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            }&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; \n        &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt;;\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**是否确认观看函数类型图像**&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1:用号输出字母C的图案。       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        2&amp;#xff1a;求最大值     **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        3&amp;#xff1a;返回         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;f&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {    \n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello C-world!&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; *&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; * &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;F:&lt;span class=\"hljs-char escape_\"&gt;\\\\&lt;/span&gt;求最大值.exe&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             }\n}\nint &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n     &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n     {\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********操作选项********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    1:for语句       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    2:数组类型      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    3:函数类型      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    4:九九乘法表    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    5:个人小    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    6:图像打印类    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)\n      {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;a&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;b&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;c&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;d&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;e&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n     } \n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nint &lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;lt;0,data error!&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n                    &lt;span class=\"hljs-title function_\"&gt;return&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;);\n                }\nint &lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                }\n                int &lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)\n                {\n                     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;)\n                       &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n                     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                       &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;;\n                }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "第一个程序：输出Hello world.", "Question": ["我这个老是错误怎么解决", ["\n\n\n\n", "#include <stdio.h>", "\n", "#include <stdlib.h>", "\n", "#include <windows.h>", "\n", "void", " ", "a", "()\n{\n     int ", "a", ";\n         ", "printf", "(", "\"", "\\t", "**    查看for语句         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1:查看          **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        0:退出          **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n           ", "scanf", "(", "\"%d\"", ",", "&", "a", ");\n           ", "printf", "(", "\"", "\\n", "\"", ");\n           ", "switch", "(", "a", ")\n           {\n          ", "case", " ", "1", ":\n        {\n            ", "printf", "(", "\"开始", "\\n", "\"", ");\n            ", "//getch();", "\n            ", "system", "(", "\"color 1\"", ");\n            ", "printf", "(", "\"                            *                       ", "\\n", "\"", ");\n            ", "printf", "(", "\"                           ***                      ", "\\n", " \"", ");\n            ", "printf", "(", "\"                          *****", "\\n", "\"", ");\n            ", "printf", "(", "\"                         ******* ", "\\n", "\"", ");\n            ", "printf", "(", "\"                       **********", "\\n", "\"", ");\n            ", "printf", "(", "\"               ***************************", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n        }", "break", ";\n          ", "case", " ", "0", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";\n          ", "default", ":\n         ", "printf", "(", "\"输入错误，请重新输入", "\\n", "\"", ");\n         ", "break", ";\n         }\n       \n}\n\nint ", "b", "()\n{\n     int ", "b", ";\n         ", "printf", "(", "\"*********************************\"", ");\n         ", "printf", "(", "\"", "\\t", "**     观看数组类型图像    **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**          1：观看        **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**          2：退出        **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "*****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "b", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "b", ")\n          {\n             ", "case", " ", "1", ":\n            {   int ", "a", "[", "10", "][", "10", "];\n            int ", "x", ",", "y", ";\n            ", "for", "(", "x", "=", "0", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n            {\n                ", "for", "(", "y", "=", "0", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                {\n                    ", "a", "[", "x", "][", "0", "]", "=", "x", "+", "1", ";\n                    ", "a", "[", "x", "][", "y", "+", "1", "]", "=", "2", "*", "a", "[", "x", "][", "y", "];\n                }\n            }\n             ", "printf", "(", "\"输出10行10列的值：", "\\n", "\"", ");\n               ", "for", "(", "x", "=", "0", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n               {\n                   ", "for", "(", "y", "=", "0", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                   ", "printf", "(", "\"%5d\"", ",", "a", "[", "x", "][", "y", "]);\n                   ", "printf", "(", "\"", "\\n", "\"", ");\n                } \n        } ", "break", ";\n              ", "case", " ", "2", ":", "printf", "(", "\"已回到主页面", "\\n", "\"", ");", "break", ";\n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\nint ", "c", "()\n{\n     int ", "c", ";\n          ", "printf", "(", "\"", "\\t", "**      函数类型图像      **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1：阶乘         **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        2：最大值       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        3：返回         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "c", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "c", ")\n          {\n             ", "case", " ", "1", ":", "//阶乘 ", "\n             {\n                {\n                    int ", "fac", "(int ", "x", ");\n                    int ", "x", ",", "y", "; \n                    ", "printf", "(", "\"输入阶乘的数：\"", ");\n                    ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n                    ", "y", "=", "fac", "(", "x", ");\n                    ", "printf", "(", "\"%d!=%d", "\\n", "\"", ",", "x", ",", "y", ");\n                    ", "return", " ", "0", ";\n                }\n                \n                int ", "fac", "(int ", "x", "); \n                {\n                    int ", "a", ",", "x", ";\n                    ", "if", "(", "x", "<", "0", ")\n                    ", "printf", "(", "\"x<0,data error!\"", ");\n                    ", "else", " ", "if", "(", "x", "==", "0", ",", "x", "==", "1", ")\n                    ", "a", "=", "1", ";\n                    ", "else", "\n                    ", "a", "=", "fac", "(", "x", "-1", ")", "*", "x", ";\n                    ", "return", "(", "a", ");\n                }", "break", ";\n            \n            }\n              ", "case", " ", "2", ":", "//最大值 ", "\n              {\n                {\n                    int ", "max4", "(int ", "a", ",int ", "b", ",int ", "c", ",int ", "d", ");\n                    int ", "a", ",", "b", ",", "c", ",", "d", ",", "max", ";\n                    ", "printf", "(", "\"请输入4个数：\"", ");\n                    ", "scanf", "(", "\"%d,%d,%d,%d\"", ",", "&", "a", ",", "&", "b", ",", "&", "c", ",", "&", "d", ");\n                    ", "max", "=", "max4", "(", "a", ",", "b", ",", "c", ",", "d", ");\n                    ", "printf", "(", "\"最大值是：%d", "\\n", "\"", ",", "max", ");\n                    ", "return", " ", "0", "; \n                }\n                int ", "max4", "(", "int", " ", "a", ",", "int", " ", "b", ",", "int", " ", "c", ",", "int", " ", "d", ")\n                {\n                    int ", "max2", "(int ", "a", ",int ", "b", ");\n                    int ", "n", ";\n                    ", "n", "=", "max2", "(", "a", ",", "b", ");\n                    ", "n", "=", "max2", "(", "n", ",", "c", ");\n                    ", "n", "=", "max2", "(", "n", ",", "d", ");\n                    ", "return", " ", "n", ";\n                }\n                int ", "max2", "(", "int", " ", "a", ",", "int", " ", "b", ")\n                {\n                     ", "if", "(", "a", ">=", "b", ")\n                       ", "return", " ", "a", ";\n                     ", "else", "\n                       ", "return", " ", "b", ";\n                }", "break", ";\n            }\n             ", "case", " ", "3", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";  \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\n", "void", " ", "d", "()\n{\n     int ", "d", ";\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**请选择九九乘法表类型**", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "********1：左上*********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "*****   2：左下   ******", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "***     3：右上     ****", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "***     4：右下     ****", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "*****   5：奇数   ******", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "********6：返回*********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n         ", "scanf", "(", "\"%d\"", ",", "&", "d", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "d", ")\n          {\n             ", "case", " ", "1", ":", "//九九乘法表左上", "\n                {\n                    int ", "x", ", ", "y", ";\n                    ", "for", "(", "x", "=", "9", ";", "x", ">", "0", ";", "x", "-", "-", ")\n                    {\n                        ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                        ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");\n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                    }\n                };", "break", ";\n              ", "case", " ", "2", ":", "////九九乘法表左下", "\n                {\n                 int ", "x", ",", "y", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                     ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                     ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                     ", "printf", "(", "\"", "\\n", "\"", ");\n                     }    \n                };", "break", ";\n             ", "case", " ", "3", ":", "//九九乘法表右上 ", "\n                {\n                    int ", "x", ", ", "y", "; \n                    ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                    {\n                    ", "for", "(", "y", "=", "1", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                    {\n                    ", "if", "(", "y", "<", "x", ")\n                    ", "printf", "(", "\"", "\\t", "\"", ");\n                    ", "else", "\n                    ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");\n                    }\n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                    }    \n                };", "break", ";  \n             ", "case", " ", "4", ":", "//九九乘法表右下 ", "\n                             {\n                 int ", "x", ",", "y", ",", "n", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                        ", "for", "(", "n", "=", "1", ";", "n", "<=", "9", "-", "x", ";", "n", "+", "+", ")\n                        ", "printf", "(", "\"", "\\t", "\"", ");\n                        {\n                        ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                        ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                        }\n                    }\n                };", "break", "; \n             ", "case", " ", "5", ":", "//九九乘法表奇数 ", "\n                {\n                 int ", "x", ",", "y", ",", "n", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                        ", "for", "(", "n", "=", "1", ";", "n", "<=", "9", "-", "x", ";", "n", "+", "+", ")\n                        ", "printf", "(", "\"", "\\t", "\"", ");\n                         {\n                            ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                            ", "if", "(", "x", "%", "2", "!=", "0", ")\n                            ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                            ", "printf", "(", "\"", "\\n", "\"", ");\n                         }\n                    }\n                };", "break", ";\n             ", "case", " ", "6", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";   \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\n", "void", " ", "e", "()\n{\n    int ", "e", ";\n    ", "printf", "(", "\"1:输入一个数，判断是正数、负数还是零。", "\\n", "\"", ");\n    ", "printf", "(", "\"2:输入一个小于10000的正整数，将其每个位数输出，并且逆序输出。", "\\n", "\"", ");\n    ", "printf", "(", "\"3:输入4个数字，让其从小到大排序。", "\\n", "\"", ");\n    ", "printf", "(", "\"4:求三位数的水仙花数。", "\\n", "\"", ");\n    ", "printf", "(", "\"5:用c语言求下列分数序列的前20项之和", "\\n", "\"", ");\n    ", "printf", "(", "\"6:一个球从100m高度自由落下,每次落地后反弹回原来高度的一半,再落下.求它在第10次落地并反弹到最高点,共经过多少m?第10次反弹多高?", "\\n", "\"", ");\n    ", "printf", "(", "\"7:输出杨辉三角。", "\\n", "\"", ");\n    ", "printf", "(", "\"8:利用折半查找法找数。\"", ");\n    ", "printf", "(", "\"9:输入3行字符串，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"10:输入一段文字，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"11:写程序完成下面条件：1）输入10个职工的姓名和职工号；2）按职工号由小到大的顺序排序；3)要求输入一个职工号，用折半法查找出该职工的姓名，从主函数输入要查找的职工号，输出该职工的姓名", "\\n", "\"", ");\n    ", "printf", "(", "\"12:给一段数，给每个数之间插入空格", "\\n", "\"", ");\n    ", "printf", "(", "\"13:输入3个数字，从小到大排列。", "\\n", "\"", ");\n    ", "printf", "(", "\"14:编写C语言程序，输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "\\n", "\"", ");\n    ", "printf", "(", "\"15:输入一行文字，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"16:输入5个学生的学号、姓名、分数1、分数2以及分数3并输出。", "\\n", "\"", ");\n    ", "scanf", "(", "\"%d\"", ",", "&", "d", ");\n      ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "e", ")\n          {\n          ", "case", " ", "1", ":\n            {\n                int ", "x", ";\n                ", "printf", "(", "\"请输入x的值:\"", ");\n                ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n                ", "if", "(", "x", "<", "0", ")\n                    ", "printf", "(", "\"Y=-1", "\\n", "\"", ");\n                ", "else", "\n                       ", "if", "(", "x", "=", "0", ")\n                         ", "printf", "(", "\"Y=0", "\\n", "\"", ");\n                    ", "else", "\n                         ", "printf", "(", "\"Y=1", "\\n", "\"", ");\n            }", "break", ";\n        ", "case", " ", "2", ":\n          ", "break", ";\n        ", "case", " ", "3", ":\n          ", "break", ";\n        ", "case", " ", "4", ":\n          ", "break", "; \n        ", "default", ":\n         ", "printf", "(", "\"输入错误，返回主界面重新输入", "\\n", "\"", ");\n        ", "break", ";\n          }\n}\n\n", "void", " ", "f", "()\n{\n     int ", "f", ";\n          ", "printf", "(", "\"", "\\t", "**是否确认观看函数类型图像**", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1:用号输出字母C的图案。       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        2：求最大值     **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        3：返回         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "c", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "f", ")\n          {\n             ", "case", " ", "1", ":\n            {    \n                ", "printf", "(", "\"Hello C-world!", "\\n", "\"", ");\n                ", "printf", "(", "\" ****", "\\n", "\"", ");\n                ", "printf", "(", "\" *", "\\n", "\"", ");\n                ", "printf", "(", "\" * ", "\\n", "\"", ");\n                ", "printf", "(", "\" ****", "\\n", "\"", ");\n            }\n                ", "break", ";\n              ", "case", " ", "2", ":", "system", "(", "\"F:", "\\\\", "求最大值.exe", "\\n", "\"", ");", "break", ";\n             ", "case", " ", "3", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";  \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");", "break", ";\n             }\n}\n\n", "main", "()\n\n{\n     int ", "x", ";\n     ", "while", "(", "1", ")\n     {\n         ", "printf", "(", "\"", "\\t", "********操作选项********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    1:for语句       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    2:数组类型      **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    3:函数类型      **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    4:九九乘法表    **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    5:个人小    **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    6:图像打印类    **", "\\n", "\"", ");\n\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n     \n     ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n     ", "printf", "(", "\"", "\\n", "\"", ");\n     \n     ", "switch", "(", "x", ")\n      {\n          ", "case", " ", "1", ": ", "a", "();", "break", ";\n          ", "case", " ", "2", ": ", "b", "();", "break", ";\n          ", "case", " ", "3", ": ", "c", "();", "break", ";\n         ", "case", " ", "4", ": ", "d", "();", "break", ";\n         ", "case", " ", "5", ": ", "e", "();", "break", ";\n         ", "case", " ", "6", ": ", "f", "();", "break", ";\n         ", "default", ":\n        ", "printf", "(", "\"输入错误，请重新输入", "\\n", "\"", ");\n        ", "break", ";\n     } \n  }\n}\n"]], "Tag": "程序设计"}
