{"Answer": "&lt;p&gt;使用try...except...else语句&amp;#xff0c;当没有捕获到异常时执行else语句&amp;#xff0c;同时你需要在try语句中用断言来判断一下&amp;#xff0c;符合条件则执行else中语句&amp;#xff0c;否则执行except抛出异常。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    temp&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt; temp[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;invalid input&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; temp[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;]:\n        C&amp;#61;(&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(temp[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])-&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}C&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(C))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; temp[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;]:\n        F&amp;#61;&lt;span class=\"hljs-number\"&gt;1.8&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(temp[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}F&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(F))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果解答对你有帮助&amp;#xff0c;请点击我回答的右上方采纳按钮采纳一下。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理 python", ["按照要求改编了温度转换代码 为什么循环无法正常运行？", "请用异常处理改造温度转换代码，使其能够接收并处理用户的任何输入。异常处理无法执行循环？", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;A&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于java 异常处理的变量", ["异常处理变量()", "A：应用public 关键字", "B:可以应用protected 关键字", "C:可以应用private 关键字", "D:只能在异常处理方法内使用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;public class NewException extends Exception{&lt;!-- --&gt;&lt;br /&gt;\n    private String message;&lt;br /&gt;\n    NewException(){&lt;!-- --&gt;&lt;br /&gt;\n        super();&lt;br /&gt;\n    }&lt;br /&gt;\n    public NewException(String message) {&lt;!-- --&gt;&lt;br /&gt;\n        super(message);&lt;br /&gt;\n        this.message &amp;#61; message;&lt;br /&gt;\n    }&lt;br /&gt;\n}&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;public class NewExceptionTest {&lt;!-- --&gt;&lt;/p&gt;\n\n&lt;p&gt;    public static double area(double a,double b,double c) throws NewException{&lt;!-- --&gt;&lt;br /&gt;\n        double p &amp;#61; (a&amp;#43;b&amp;#43;c)/2;&lt;br /&gt;\n        return Math.sqrt(p*(p-a)*(p-b)*(p-c));&lt;br /&gt;\n    }&lt;br /&gt;\n    &lt;br /&gt;\n    public static void main(String[] args) {&lt;!-- --&gt;&lt;br /&gt;\n        try {&lt;!-- --&gt;&lt;br /&gt;\n            System.err.println(area(2.0,2.0,2.0));&lt;br /&gt;\n        } catch (NewException e) {&lt;!-- --&gt;&lt;br /&gt;\n            // TODO Auto-generated catch block&lt;br /&gt;\n            e.printStackTrace();&lt;br /&gt;\n        }&lt;br /&gt;\n    }&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["输入三角形的三条边，求三角形面积。当三条边无法构成三角形时进行异常处理。", ["输入三角形的三条边，求三角形面积。当三条边无法构成三角形时进行异常处理。", "\n\n", " ", "\n\n", " ①编写自定义异常类NewException,该类继承自Exception类。在构造方法中，输出异常信息。", "\n\n", " ", "\n\n", " ②编写NewExceptionTest类，在showArea()方法中抛出异常。", "\n\n", " ", "\n\n", " ③求三角形面积公式：p=(a+b+c)/2;s=sqrt(p(p-a)(p-b)(p-c));"]], "Tag": "程序设计"}
{"Answer": "其实json返回数据给用户是通过ajax请求SpringMVC controller实现的，通过异步访问cotroller 进行信息校验 返回json数据，然后在ajax success:function(data)｛｝中对data进行校验再进行前端展示", "Konwledge_Point": "异常处理", "Question": ["springmvc 全局异常处理使用json", ["看网上springmvc 全局异常处理都是使用jsp页面显示错误信息,那么如何使用json", "\n返回错误信息给客户端呢?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;try:\n    x&amp;#61;int(input(&lt;span class=\"hljs-string\"&gt;&amp;#39;x:&amp;#39;&lt;/span&gt;))\n    y&amp;#61;int(input(&lt;span class=\"hljs-string\"&gt;&amp;#39;y:&amp;#39;&lt;/span&gt;))\nexcept:\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数据类型不正确&amp;#xff01;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;()\nlb&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;]\ntry:\n    z&amp;#61;lb[x]/y\nexcept IndexError:\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;x数据太大或者太小&amp;#xff0c;范围应该是0到5&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;()\nexcept:\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;y不应该为0&amp;#xff01;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;()\nprint(&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#61;&amp;#39;&lt;/span&gt;,z)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["使用异常处理方法使下面的程序更加的健壮", ["使用异常处理方法使下面的程序更加的健壮", "\n", "x=int(input['x:])", "y=int(input['y:'])", "lb=[1,2,3,4,5,6]", "z=lb[x]/y", "print('z=',z)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;内循环的条件错了&amp;#xff0c;是j不是i&lt;br /&gt;改为如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/172959365236167.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["冒泡排序中：0xA9B02C60 处有未经处理的异常(在 数组.exe 中): 0xC00001A5: 检测到无效的异常处理程序例程。 (参数: 0x00000003)。", ["冒泡排序中：0xA9B02C60 处有未经处理的异常(在 数组.exe 中): 0xC00001A5: 检测到无效的异常处理程序例程。 (参数: 0x00000003)。", "\n", "在如下冒泡排序代码中出现了未经处理的异常，请问该如何处理，让程序能够继续运行"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;class NoThisSoundException(Exception):\n   pass\n\ndef play(index):\n    if index &amp;gt; 10:\n        raise  NoThisSoundException\n    print(&amp;#34;正在播放歌曲&amp;#34;)\n\ntry:\n    play(199)\nexcept NoThisSoundException:\n    print(&amp;#34;您播放的歌曲不存在&amp;#34;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["用Python的异常处理机制实现", ["自定义一个异常类NoThisSoundException，NoThisSongException继承Exception类，类的构造方法通过调用父类的构造方法实现。", "\n\n", "用Python的异常处理机制实现：", "接收用户输入的播放歌曲索引index，调用play（index）函数完成歌曲播放（定义一个play(index)函数，接收一个参数表示播放歌曲的索引，当index>10时，paly(index)方法用raise关键字抛出NoThisSongException异常）。如果产生异常，则处理方式为输出“您播放的歌曲不存在”，无异常发生时，输出“正在播放歌曲”。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已经解决&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;#64;ExceptionHandler&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;ResponseStatus(HttpStatus.SERVICE_UNAVAILABLE)&lt;/span&gt;     &lt;span class=\"hljs-comment\"&gt;//加了这样返回参数 状态码 解决这个问题&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; ResponseEntity&amp;lt;JSONObject&amp;gt; &lt;span class=\"hljs-title function_\"&gt;exp2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Exception ex)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;JSONObject&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;result&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JSONObject&lt;/span&gt;();\n        &lt;span class=\"hljs-comment\"&gt;// 根据不同错误输出不同的消息&lt;/span&gt;\n        ex.printStackTrace();\n        result.put(&lt;span class=\"hljs-string\"&gt;&amp;#34;code&amp;#34;&lt;/span&gt;, NumberUtils.CODE_99);\n        result.put(&lt;span class=\"hljs-string\"&gt;&amp;#34;msg&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;访问人数过多&amp;#xff0c;请稍后再试&amp;#34;&lt;/span&gt;);\n        log.error(&lt;span class=\"hljs-string\"&gt;&amp;#34;访问人数过多&amp;#xff0c;请稍后再试&amp;#34;&lt;/span&gt;&amp;#43;ex.hashCode());\n        &lt;span class=\"hljs-comment\"&gt;//TODO 测试 这里可能会调用多次&lt;/span&gt;\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;实际返回值1:&amp;#34;&lt;/span&gt;&amp;#43;result.toJSONString());\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ResponseEntity&lt;/span&gt;&amp;lt;&amp;gt;(result, HttpStatus.OK);\n\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理多次，统一异常处理多次", ["关于spring 核心线程池满了 当并发的时候 遇到线程拒绝，统一异常处理会处理两次", "\n", "先贴代码", "\n", "\n", "@RequestMapping", "(value = ", "\"/testVisitNum\"", ", method = RequestMethod.POST, produces = {MediaType.APPLICATION_JSON_VALUE})\n    ", "@ApiOperation", "(value = ", "\"测试访问人数过多，是否会报错两次\"", ", response = BaseVo.class)\n    ", "@ApiOperationSupport", "(order = ", "3", ")\n    public Callable<ResponseEntity<JSONObject>> testVisitNum(HttpServletRequest request) {\n        ", "//System.out.println(getCurrentUserId(request));", "\n        ", "return", " ()", "-", ">{\n            ", "Thread", ".sleep", "(", "3000", ");\n            ", "return", " ", "success", "();\n        };\n    }\n", "\n", "配置文件中", "\n", "是否允许核心线程超时。这样可以动态增加和缩小线程池", "\n", "spring.task.execution.pool.allow-core-thread-timeout=true", "\n", "核心线程池大小 默认 8", "\n", "spring.task.execution.pool.core-size=8", "\n", "线程空闲等待时间 默认 60s", "\n", "spring.task.execution.pool.keep-alive=60s", "\n", "线程池最大数  根据任务定制", "\n", "spring.task.execution.pool.max-size=8", "\n", "线程池 队列容量大小", "\n", "spring.task.execution.pool.queue-capacity=0", "\n", "线程池关闭时等待所有任务完成", "\n", "spring.task.execution.shutdown.await-termination=true", "\n", "执行线程关闭前最大等待时间，确保最后一定关闭", "\n", "spring.task.execution.shutdown.await-termination-period=1s", "\n", "线程名称前缀", "\n", "spring.task.execution.thread-name-prefix=hexin-", "\n", "统一异常处理", "\n", "\n", "@ExceptionHandler", "\n    ", "public", " ResponseEntity<JSONObject> ", "exp2", "(Exception ex)", " {\n        ", "JSONObject", " ", "result", " ", "=", " ", "new", " ", "JSONObject", "();\n        ", "if", " (ex ", "instanceof", " TaskRejectedException) {\n            ex.printStackTrace();\n            result.put(", "\"code\"", ", NumberUtils.CODE_99);\n            result.put(", "\"msg\"", ", ", "\"访问人数过多，请稍后再试\"", ");\n            log.error(", "\"访问人数过多，请稍后再试\"", "+ex.hashCode());\n            ", "//TODO 测试 这里可能会调用多次", "\n            System.out.println(", "\"实际返回值1:\"", "+result.toJSONString());\n            ", "return", " ", "new", " ", "ResponseEntity", "<>(result, HttpStatus.OK);\n        }\n", "\n", "控制台打印", "\n", "访问人数过多，请稍后再试2039621435", "访问人数过多，请稍后再试2039621435", "\n", "hashcode是同一个 ", "\n", "jemter 测试 ", "\n", "\n", "\n", "\n", "导致第九个结果 反馈给客户但是 两个json对象  求解~"]], "Tag": "程序设计"}
{"Answer": "不是的啊，这个要看你什么异常了，一般如果程序出现异常的时候有的也是需要给用户看到的，还有就是关于事务那一块，遇到异常就回滚，保证数据的唯一性跟完整性的", "Konwledge_Point": "异常处理", "Question": ["java中异常处理问题的概念问题", ["在异常处捕获异常之后，再打印异常信息，是不是就算完成异常处理了？还有别的步骤吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;亲自测试可执行,希望能够帮助到你,&lt;u&gt;&lt;strong&gt;如果有疑问请直接私信,如果没有疑问望采纳&lt;/strong&gt;&lt;/u&gt;&lt;strong&gt;。运行结果和代码如下:可以直接复制运行&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"488\" src=\"https://img-ask.csdnimg.cn/upload/1624754265844.png\" width=\"1276\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;package com.example.demo;\n\nimport java.util.Objects;\nimport java.util.Scanner;\n\npublic class Score {\n    public static void main(String[] args) throws Exception {\n        System.out.println(&amp;#34;请输入学生人数:&amp;#34;);\n        Scanner sn &amp;#61; new Scanner(System.in);\n        int r;\n        while (true) {\n            // 先试用String接收,判断是否输入的是整数,如果是则转为正数,如果不是直接抛出自定义的异常,提示重新输入\n            String input &amp;#61; sn.next();\n            // 通过正则表达式判断输入的值是否是正数,\n            if (Objects.nonNull(input) &amp;amp;&amp;amp; input.matches(&amp;#34;^[0-9]*$&amp;#34;)) {\n                r &amp;#61; Integer.parseInt(input);\n                break;\n            } else {\n                try {\n                    throw new PositiveNumberException(&amp;#34;输入的数值并不是正数&amp;#34;);\n                } catch (Exception e) {\n                    System.out.println(e.getMessage());\n                    System.out.println(&amp;#34;请【重新】输入学生人数:&amp;#34;);\n                }\n            }\n        }\n        double[][] arrScore &amp;#61; new double[r][3];\n        System.out.println(&amp;#34;Number&amp;#34; &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; &amp;#34;Chinese&amp;#34; &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; &amp;#34;Math&amp;#34; &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; &amp;#34;English&amp;#34; &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; &amp;#34;Sum&amp;#34; &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; &amp;#34;Average&amp;#34;);\n        for (int i &amp;#61; 0; i &amp;lt; r; i&amp;#43;&amp;#43;) {\n            double sumScore &amp;#61; 0;\n            System.out.println(&amp;#34;请依次输入此名同学三门科目的成绩:&amp;#34;);\n            for (int j &amp;#61; 0; j &amp;lt; 3; j&amp;#43;&amp;#43;) {\n                String next;\n                double tempScore;\n                while (true) {\n                    // 等待输入成绩,判断是否属于数值类型\n                    next &amp;#61; sn.next();\n                    if (Objects.nonNull(next) &amp;amp;&amp;amp; next.matches(&amp;#34;^[1-9]\\\\d*\\\\.?\\\\d*|0\\\\.?\\\\d*[1-9]\\\\d*$&amp;#34;)) {\n                        tempScore &amp;#61; Double.parseDouble(next);\n                        // 判断输入的数值范围是否在0到100之间(自定义的成绩范围类)\n                        String validResult &amp;#61; ScoreRangeNumber.validScoreRange(tempScore);\n                        if(Objects.isNull(validResult)){\n                            // 满足条件,则跳出循环\n                            break;\n                        } else {\n                            // 不满足条件则抛出异常\n                            try {\n                                throw new PositiveNumberException(validResult);\n                            } catch (Exception e) {\n                                System.out.println(e.getMessage());\n                                System.out.println(&amp;#34;请【重新】输入此名同学的科目成绩:&amp;#34;);\n                            }\n                        }\n                    } else {\n                        try {\n                            throw new PositiveNumberException(&amp;#34;输入的不是数值类型&amp;#34;);\n                        } catch (Exception e) {\n                            System.out.println(e.getMessage());\n                            System.out.println(&amp;#34;请【重新】输入此名同学的科目成绩::&amp;#34;);\n                        }\n                    }\n                }\n                arrScore[i][j] &amp;#61; tempScore;\n                sumScore &amp;#43;&amp;#61; arrScore[i][j];\n            }\n            System.out.print(&amp;#34;学生&amp;#34; &amp;#43; (i &amp;#43; 1) &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; arrScore[i][0] &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; arrScore[i][1] &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; arrScore[i][2] &amp;#43; &amp;#34;\\t&amp;#34; &amp;#43; sumScore &amp;#43; &amp;#34;\\t&amp;#34;);\n            System.out.println(sumScore / 3);\n        }\n    }\n}\n\n/**\n * 正数异常类\n */\nclass PositiveNumberException extends Exception {\n\n    /**\n     * 异常类的构造方法\n     */\n    public PositiveNumberException() {\n    }\n\n    public PositiveNumberException(String message) {\n        super(message);\n    }\n\n}\n\n/**\n * 成绩范围类\n */\nclass ScoreRangeNumber {\n\n    /**\n     * 提供方法判断输入的成绩是否在0到100之间\n     *\n     * &amp;#64;param score\n     * &amp;#64;return\n     */\n    public static String validScoreRange(double score) {\n        if (score &amp;lt; 0 || score &amp;gt; 100) {\n            return &amp;#34;输入成绩范围不在0到100之间,输入错误&amp;#34;;\n        }\n        return null;\n    }\n\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java 改写程序，添加异常处理机制", ["import java.util.Scanner;", "\npublic class Score", "\n{", "\n          public static void main(String[] args)", "\n          {", "\n          System.out.println(\"请输入学生人数:\");", "\n          Scanner sn = new Scanner(System.in);", "\n          int r = sn.nextInt();", "\n          double[][] arrScore = new double[r][3];", "\n\n", "          System.out.println(\"Number\"+\"\\t\"+\"Chinese\"+\"\\t\"+\"Math\"+\"\\t\"+\"English\"+\"\\t\"+\"Sum\"+\"\\t\"+\"Average\");", "\n          for (int i = 0; i < r; i++)", "\n          {", "\n                double sumScore = 0;", "\n                System.out.println(\"请依次输入此名同学三门科目的成绩:\");", "\n                for (int j = 0; j < 3; j++)", "\n                {", "\n                      arrScore[i][j]=sn.nextInt();", "\n                      sumScore +=  arrScore[i][j];", "\n                }", "\n                System.out.print(\"学生\"+(i + 1)+\"\\t\"+ arrScore[i][0] +\"\\t\"+ arrScore[i][1] +\"\\t\"+ arrScore[i][2] +\"\\t\"+ sumScore +\"\\t\");", "\n                System.out.println(sumScore / 3); ", "\n          }", "\n          System.out.print(\"Average\"+\"\\t\"+(arrScore[0][0]+arrScore[1][0]+arrScore[2][0]+arrScore[3][0]+arrScore[4][0])/5+\"\\t\");", "\n          System.out.print((arrScore[0][1]+arrScore[1][1]+arrScore[2][1]+arrScore[3][1]+arrScore[4][1])/5+\"\\t\");", "\n          System.out.print((arrScore[0][2]+arrScore[1][2]+arrScore[2][2]+arrScore[3][2]+arrScore[4][2])/5);", "\n          }", "\n}", "\n ", "\n\n", "改写", "这个程序，", "添加异常处理", "机制，使得：如果输入的学生人数不是整数或者不是正数，则进行相应的异常处理，并提示重新输入（自定义非正数异常类），如果输入的成绩不是数值类型或者范围不在0~100之间，则进行相应的异常处理，并提示重新输入（自定义成绩范围类）", "\n\n", "求写出完整代码，非常着急！！", "救救孩子吧乌乌，谢谢各位了！！", "重谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;你已经有i in range(1,goal):了&amp;#xff0c;循环里面就不需要i&amp;#43;&amp;#61;1这句了&lt;br /&gt;有帮助望题主给个采纳支持答主哦&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Python用异常处理编写猜数问题", ["想问问大家这里的for语句为什么报错"]], "Tag": "程序设计"}
{"Answer": "我觉得两种办法都可以吧，看自己的团队更偏向哪种风格。但有一点要遵守的就是一定要统一，不要两种都用。就我们的情况而言，一般会先检查一下", "Konwledge_Point": "异常处理", "Question": ["关于Hibernate的异常处理", ["初学Hibernate,有些关于异常处理的疑问,举例如下(使用Hibernate Annotation):", "我有一个类User, 它的一些属性需要是唯一的,比如loginName", "class User{", "\n...", "\n@Column(unique=true)", "\nprivate String loginName;", "\n...", "\n}", "于是我用unique=true描述它,这样在我新建一个User的时候,如果该loginName的用户已经存在,会产生一个ConstraintViolationException异常,我的问题是,我应该怎样处理这个异常才是最佳的?", "按照Hibernate的文档:", "No exception thrown by Hibernate can be treated as recoverable", "是不是意味着所有的hibernate异常都应该在最顶层来捕捉然后作为不可恢复的异常进行处理? ", "但对于这个具体的应用,我认为这个异常应该是recoverable的, 接下来会提示用户说loginName已经存在,然后让用户另外指定loginName继续. 我是不是应该在persist这个用户之前先进行唯一性检查,这样来避免出现Hibernate异常?", "谢谢各位!", "问题补充：", "谢谢您的回答. 对于出错的那个session,这个错误的确是unrecoverable的.", "那我是不是应该在persist这个用户之前先进行唯一性检查,这样来避免出现Hibernate异常?"]], "Tag": "程序设计"}
{"Answer": "怎么能在错误页面获取拦截器里的异常提示信息。多谢！ \r\n这个简单，通过ActionContext.getContext().getValueStack()拿到OGNL的ValueStack,把你的异常信息存进去，然后再页面通过OGNL表达式获取就行了", "Konwledge_Point": "异常处理", "Question": ["Struts2自定义异常处理拦截器出现问题", ["struts.xml:", "\n\n", "    <global-results>\n        <result name=\"error\">error.jsp</result>\n    </global-results>\n", "\n\n", "\n\n", "<action name=\"insert\" class=\"com.lul.action.InsertAction\">\n    <result name=\"success\">success.jsp</result>\n              <interceptor-ref name=\"exceptionInceptor\"></interceptor-ref>\n</action>\n", "\n\n", "自定义异常类：", "\n[code=\"java\"]public class BusinessException extends RuntimeException {", "\n    private static final long serialVersionUID = 1L;", "\n\n", "public BusinessException(String errorMessage) {\n    super(errorMessage);\n}\n", "\n\n", "}[/code]", "\n自定义用于异常处理的拦截器：", "\npublic String intercept(ActionInvocation invocation) throws Exception {", "\n        String result = null;", "\n        try {", "\n            result = invocation.invoke();", "\n        } catch(DataAccessException dae) {", "\n            throw new BusinessException(\"数据库操作失败\");", "\n        } ", "\n                   ...", "\n                   ...捕获常见的异常，并以友好异常信息抛出", "\n}", "\n在调用insert.action后，dao抛出异常，但不知为什么不能跳到error.jsp页面，而是", "\n[color=red]HTTP Status 500 - ", "\n\n", "type Exception report", "\n\n", "message ", "\n\n", "description The server encountered an internal error () that prevented it from fulfilling this request.", "\n\n", "exception ", "\n\n", "javax.servlet.ServletException: com.lul.exception.BusinessException: Sorry, 数据库操作失败 Please try again!", "\n    org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:515)", "\n    org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:419)[/color]", "\n\n", "有哪位高手知道错误原因，请指教！", "\n\n", "[b]问题补充：[/b]", "error.jsp", "\n\n", "    <global-exception-mappings>   \n        <exception-mapping name=\"exceptionPage\"  \n                           exception=\"java.lang.Exception\"  \n                           result=\"exceptionPage\"/>   \n    </global-exception-mappings>  \n", "\n\n", "这样是可以跳到error.jsp页面，但我想要的是在拦截器中对异常进行分类和包装，然后再以友好的方式提示到error.jsp", "\n[b]问题补充：[/b]", "\nto jones:", "\n    我是在exceptionInceptor拦截器里对异常进行分类，然后交给BusinessException去提示异常信息，不可能在Action里用N多的catch把异常分类吧，不知道有没有别的好的方法。", "\n[b]问题补充：[/b]", "\nto jones:", "\n我明白你的意思，并且这样可以跳转到指定的错误页面，但我想请教一下，怎么能在错误页面获取拦截器里的异常提示信息。多谢！"]], "Tag": "程序设计"}
{"Answer": "看看这个下：http://www.jb51.net/article/110612.htm", "Konwledge_Point": "异常处理", "Question": ["springmvc统一异常处理", ["我最近在做异常统一处理，按照网上配置，但是报出异常也能捕捉到异常，但是就是跳转不到配合过的异常页面。", "\n在项目中点击请求一个url，报出异常不跳转错误页面，但是把请求的url单独拿到浏览器上请求可以跳转到错误页面，请问各位大神有没有知道是什么原因的？", "\n我的配置如下：", "\n在项目页面上点击触发异常", "\n但是页面没有反应，没有跳转到异常页面，但是将url单独拿到浏览器请求会转发到异常页面"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Check the comments on &lt;a href=\"http://php.net/manual/de/function.set-exception-handler.php\" rel=\"noreferrer\"&gt;http://php.net/manual/de/function.set-exception-handler.php&lt;/a&gt; there are several similar issues and solutions there. For your code I see two possible solutions:&lt;/p&gt;\n\n&lt;p&gt;Change your code into &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function global_exception_handler($exception = NULL)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or add a description to &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;throw new Exception('Testing here...');\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["尝试在PHP中使用全局异常处理程序以统一的方式处理各种顶级异常", ["\n\n", "Please consider the following code:", "\n\n", "<?php\n\nclass MyException extends Exception {}\n\nfunction global_exception_handler($exception)\n{\n    switch (get_class($exception)) {\n    case 'MyException':\n        print \"I am being handled in a unified way.\n\";\n        break;\n    default:\n        $backtrace = debug_backtrace();\n        $exception_trace_object = $backtrace[0]['args'][0];\n        var_dump($exception_trace_object);\n        print \"----\n\";\n        $reflected_exception_trace_object = new ReflectionObject($exception_trace_object);\n        $reflected_trace_property = $reflected_exception_trace_object->getProperty('trace');\n        $reflected_trace_property->setAccessible(true);\n        var_dump($reflected_trace_property);\n        print \"----\n\";\n\n        // NOT WORKING, I STUCK HERE.\n        var_dump($reflected_trace_property->getValue($reflected_trace_property));\n\n        throw $exception;\n    }\n}\n\nset_exception_handler('global_exception_handler');\n\nfunction function1()\n{\n    function2();\n}\n\nfunction function2()\n{\n    function3();\n}\n\nfunction function3()\n{\n    throw new Exception();\n}\n\nfunction1();\n\n?>\n", "\n\n", "What I'm trying to do is handling various types of exceptions in a unified way across various files by simply setting up a global exception handler without having to write any boilerplate code (except the header and footer includes which are present in every file).", "\n\n", "The problem is that when the thrown exception type is not handled by the global exception handler and I want to rethrow the exception, the stack trace gets lost which is a limitation of using set_exception_handler().", "\n\n", "I can retrieve the stack trace by using debug_backtrace() but I cannot access its relevant private members to be able to print it appropriately.", "\n\n", "This is what the above script produces:", "\n\n", "object(Exception)#1 (7) {\n  [\"message\":protected]=>\n  string(0) \"\"\n  [\"string\":\"Exception\":private]=>\n  string(0) \"\"\n  [\"code\":protected]=>\n  int(0)\n  [\"file\":protected]=>\n  string(28) \"/home/laci/download/test.php\"\n  [\"line\":protected]=>\n  int(42)\n  [\"trace\":\"Exception\":private]=>\n  array(3) {\n    [0]=>\n    array(4) {\n      [\"file\"]=>\n      string(28) \"/home/laci/download/test.php\"\n      [\"line\"]=>\n      int(37)\n      [\"function\"]=>\n      string(9) \"function3\"\n      [\"args\"]=>\n      array(0) {\n      }\n    }\n    [1]=>\n    array(4) {\n      [\"file\"]=>\n      string(28) \"/home/laci/download/test.php\"\n      [\"line\"]=>\n      int(32)\n      [\"function\"]=>\n      string(9) \"function2\"\n      [\"args\"]=>\n      array(0) {\n      }\n    }\n    [2]=>\n    array(4) {\n      [\"file\"]=>\n      string(28) \"/home/laci/download/test.php\"\n      [\"line\"]=>\n      int(45)\n      [\"function\"]=>\n      string(9) \"function1\"\n      [\"args\"]=>\n      array(0) {\n      }\n    }\n  }\n  [\"previous\":\"Exception\":private]=>\n  NULL\n}\n----\nobject(ReflectionProperty)#3 (2) {\n  [\"name\"]=>\n  string(5) \"trace\"\n  [\"class\"]=>\n  string(9) \"Exception\"\n}\n----\nNULL\n\nFatal error: Exception thrown without a stack frame in Unknown on line 0\n", "\n\n", "Thanks in advance!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;计算结果: {a / b}&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;ZeroDivisionError&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;处理异常&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;程序已执行&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python错误和异常处理", ["输入两个数字a和b，计算a除以b。输出计算结果或处理异常，如：分母为零，输入的不是数字等异常。无论是否发生异常，输出“程序已执行”。", "\n", "‎"]], "Tag": "程序设计"}
{"Answer": "自然就是实现一个拦截图，然后对每个action的调用，都用\r\n\r\ntry\r\n{\r\n//假设这是action的执行方法\r\naction.execute();\r\n}catch(Exception e)\r\n{\r\n//这里就可以记录日志信息了，可以封装各种异常做不同的记录，\r\nlog.error(\"xxx\",e);\r\n}", "Konwledge_Point": "异常处理", "Question": ["struts 2 异常处理问题", ["在struts 2, 当action抛exception,如何扑捉异常信息将其写入指定error log文件。希望给出相关代码。谢谢", "\n[b]问题补充：[/b]", "\n我想要的效果是：在action中不catch任何exceptoin:", "\n\n", "[code=\"java\"]   public String execute() throws Exception {", "\n\n", "    return Action.SUCCESS;\n}[/code]\n", "\n\n", "在struts.xml中将exception导航到exception.jsp:", "\n\n", "[code=\"java\"]       ", "/exception.jsp", "\n\n", "    <global-exception-mappings>\n        <exception-mapping exception=\"java.lang.Exception\" result=\"exception\"/>\n    </global-exception-mappings>[/code]\n", "\n\n", "但是，在这种情况下，exception没有写入error log文件。不知道有无一种简单、便利的方式一个action出了错误信息，直接执行相应代码写log，就像配置global-exception-mapping一样。这样就可避免每个action都去catch exception然后写log", "\n[b]问题补充：[/b]", "\nto lovewhzlq:", "\n\n", "[quote]做一个struts2的拦截器应该可以，对所有的异常进行记录到日志[/quote]", "\n\n", "我也想到做一个拦截器，但怎么做呢？能否详细点？"]], "Tag": "程序设计"}
{"Answer": "虎炮君测过上面的代码么 .. ？ 我记得以前写某东西的时候就是因为rescue没写对 ... 而杯具了\r\nRuby里rescue后不附加东西的话只能捕获StandardError或其子类，而Timeout::Error是Interrupt的子类，rescue默认是捕获不到的，得显式写 .. .\r\ndef index\r\n begin\r\n   @html = open(\"http://www.baidu.com\").read\r\n rescue Exception\r\n   @html = \"&lt;div&gt;Error&lt;/div&gt;\"\r\n end\r\nend", "Konwledge_Point": "异常处理", "Question": ["ruby 异常处理", ["[code=\"ruby\"]", "\ndef index", "\n @html = open(\"", "http://www.baidu.com\").read", "\nend", "\n[/code]", "\n这段代码可能出现什么错误和异常，使用什么代码可以不让异常在页面显示，", "\n\n", "我没接触过ruby，请告诉的详细点，谢谢！", "\n[b]问题补充：[/b]", "\n有没有可能出现IO异常？？？？"]], "Tag": "程序设计"}
{"Answer": "1.把关闭语句移到for外部，写完之后再关 不然会报错\r\n\r\n for(i = 0; i &lt; y.rownum - 1; i++)\r\n                for(j = 0; j &lt; 8; j++)\r\n                {\r\n                    sheet.addCell(new Label(j, i + 2, c[i][j]));\r\n                    book.write();\r\n                    //book.close();\r\n                }\r\n\r\n\r\n        }\r\n                    book.close();\r\n\r\n\r\n\r\n2.你没有上传源码 ，我反编译的你的代码，你的代码问题很多呀，\r\n初学java吧！ 不能在构造函数中那样写，构造函数应该少做些事情\r\n把要做的事情封装到方法中，构造函数只做对象实例初始化时 必须做\r\n不做不行的事情。", "Konwledge_Point": "异常处理", "Question": ["关于jxl和异常处理的问题", ["新手求指导。", "\n工作需要写点东西，但是出了问题。", "\n\n", "打开一个jxl文件，获取表里每一个单元格内容，通过String[][]数组返回 。 ", "\n问题是用jxl必须用到try catch，但用了trycatch 返回String[][]的结果时候就通不过编译了 ，始终在return语句出错。", "\n\n", "源文件附后"]], "Tag": "程序设计"}
{"Answer": "# throws Exception的意思是声明这个方法有可能抛出异常，告诉调用者如果要用这个方法，需要处理异常。\r\n# throw e的意思是把e这个异常对象抛出，交给调用者处理。", "Konwledge_Point": "异常处理", "Question": ["Java中关于异常处理的问题", ["class Math{", "\n    public int div(int i,int j) throws Exception{   // 定义除法操作，如果有异常，则交给被调用处处理", "\n        System.out.println(\"***** 计算开始 *****\") ;", "\n        int temp = 0 ;  // 定义局部变量", "\n        try{", "\n            temp = i / j ;  // 计算，但是此处有可能出现异常", "\n        }catch(Exception e){", "\n            throw e ;", "\n        }finally{   // 不管是否有异常，都要执行统一出口", "\n            System.out.println(\"***** 计算结束 *****\") ;", "\n        }", "\n        return temp ;", "\n    }", "\n};", "\npublic class ThrowDemo02{", "\n    public static void main(String args[]){", "\n        Math m = new Math() ;", "\n        try{", "\n            System.out.println(\"除法操作：\" + m.div(10,0)) ;", "\n        }catch(Exception e){", "\n            System.out.println(\"异常产生：\" + e) ;", "\n        }", "\n    }", "\n};", "\n问题描述：", "\n1、在以上的代码中，已经对方法div进行抛出异常操作，但还是在可能出现异常的地方又用throw关键字抛出了异常，这样做的目的是不是为了加强代码的健康性？防止方法div有别的异常而没有抛出，所以对整个方法用了thows，而在已知可能抛出的异常语句中又用throw抛出异常？", "\n2、可以简单的把throw理解为是用于抛出语句的异常，而thorws是用于抛出整个方法的异常吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;选择C&amp;#xff0c;程序运行正常&amp;#xff0c;数组没有赋值&amp;#xff0c;初始值就是0&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java异常处理机制问题", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;  &lt;/p&gt;\n\n&lt;p&gt;2&amp;#xff09;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"223\" src=\"https://img-ask.csdnimg.cn/upload/1624712170884.png\" width=\"582\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cs\"&gt;using System;\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.Write(&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;);\n            string name &amp;#61; null;\n            while ((name &amp;#61; Console.ReadLine()).Trim() &amp;#61;&amp;#61; &amp;#34;&amp;#34;) { Console.Write(&amp;#34;姓名不能为空&amp;#xff0c;请重新输入姓名&amp;#xff1a;&amp;#34;); }\n\n            Console.Write(&amp;#34;请输入年龄&amp;#xff08;15-25岁之间&amp;#xff09;&amp;#xff1a;&amp;#34;);\n            int age;\n            while (true)\n            {\n                try\n                {\n                    age &amp;#61; int.Parse(Console.ReadLine());\n                    if (age &amp;gt;&amp;#61; 15 &amp;amp;&amp;amp; age &amp;lt;&amp;#61; 25) break;\n                    else Console.Write(&amp;#34;年龄需要15-25岁&amp;#xff0c;请重新输入年龄&amp;#xff08;15-25岁之间&amp;#xff09;&amp;#xff1a;&amp;#34;);\n                }\n                catch\n                {\n                    Console.Write(&amp;#34;年龄为数字&amp;#xff0c;请重新输入年龄&amp;#xff08;15-25岁之间&amp;#xff09;&amp;#xff1a;&amp;#34;);\n                }\n            }\n            Console.Write(&amp;#34;请输入email地址&amp;#xff1a;&amp;#34;);\n            string email &amp;#61; null;\n            while ((email &amp;#61; Console.ReadLine().Trim()).IndexOf(&amp;#34;&amp;#64;&amp;#34;) &amp;#61;&amp;#61;-1) { Console.Write(&amp;#34;email地址错误&amp;#xff0c;请重新输入email地址&amp;#xff1a;&amp;#34;); };\n\n            Console.WriteLine(&amp;#34;输入的信息为&amp;#xff1a;{0}\\t{1}\\t{2}&amp;#34;, name, age, email);\n            Console.ReadKey();\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;3)&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"151\" src=\"https://img-ask.csdnimg.cn/upload/1624712470011.png\" width=\"359\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cs\"&gt;using System;\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string str &amp;#61; Console.ReadLine();\n            int index &amp;#61; str.IndexOf(&amp;#34;&amp;#64;&amp;#34;);\n            string name &amp;#61; str.Substring(0, index - 1);\n            int dotIndex &amp;#61; str.IndexOf(&amp;#34;.&amp;#34;);\n            string domain &amp;#61; str.Substring(index &amp;#43; 1, dotIndex - index) &amp;#43; str.Substring(dotIndex &amp;#43; 1);//增加获取com的代码\n            Console.WriteLine(name);\n            Console.WriteLine(domain);\n\n\n            Console.ReadKey();\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#控制台应用程序 （异常处理1）", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is the plain exception handler;, already available in &lt;code&gt;app/start/global.php&lt;/code&gt; by default, modify it as given below (Btw, &lt;a href=\"http://code.tutsplus.com/tutorials/whoops-php-errors-for-cool-kids--net-32344\" rel=\"nofollow\"&gt;Whoops! PHP Errors only for Cool Kids&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;App::error(function(Exception $exception)\n{\n    Log::error($exception);Log::error($exception-&amp;gt;getMessage());\n    return View::make('errors.index')-&amp;gt;with('exception', $exception);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create a view &lt;code&gt;view/errors/index.blade.php&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@extends('layouts.master')\n\n@section('content')\n\n    &amp;lt;div class=\"page-header\"&amp;gt;\n        &amp;lt;h1&amp;gt;Oops!&amp;lt;/h1&amp;gt;\n    &amp;lt;/div&amp;gt;\n\n    &amp;lt;div class='well'&amp;gt;ERROR: {{ $exception-&amp;gt;getMessage() }}&amp;lt;/div&amp;gt;\n\n@stop\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also make &lt;code&gt;'debug' =&amp;gt; false&lt;/code&gt; in your &lt;code&gt;app/config/app.php&lt;/code&gt; file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/*\n|--------------------------------------------------------------------------\n| Application Debug Mode\n|--------------------------------------------------------------------------\n|\n| When your application is in debug mode, detailed error messages with\n| stack traces will be shown on every error that occurs within your\n| application. If disabled, a simple generic error page is shown.\n|\n*/\n\n'debug' =&amp;gt; false,\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You have following methods to use in &lt;code&gt;$exception&lt;/code&gt; object:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;array (size=10)\n  //0 =&amp;gt; string '__construct' (length=11)\n  1 =&amp;gt; string 'getSeverity' (length=11)\n  2 =&amp;gt; string 'getMessage' (length=10)\n  3 =&amp;gt; string 'getCode' (length=7)\n  4 =&amp;gt; string 'getFile' (length=7)\n  5 =&amp;gt; string 'getLine' (length=7)\n  6 =&amp;gt; string 'getTrace' (length=8)\n  7 =&amp;gt; string 'getPrevious' (length=11)\n  8 =&amp;gt; string 'getTraceAsString' (length=16)\n  //9 =&amp;gt; string '__toString' (length=10)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you leave &lt;code&gt;'debug' =&amp;gt; true,&lt;/code&gt; then still your exception handler will work but in  some cases it may display &lt;code&gt;whoops&lt;/code&gt; when the exception is not caught in you handler but in another specific handler before your generic &lt;code&gt;Exception&lt;/code&gt; handler.&lt;/p&gt;\n\n&lt;p&gt;Also remember that, &lt;code&gt;Exception&lt;/code&gt; class is the most generic exception type, if you have other more specific exception handlers defined after that then it'll not get triggered if any response returned from that specific handler.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["如何在Laravel 4中设置“普通”异常处理程序", ["\n\n", "In ", "Laravel 4.1", " a plain exception is shown when an exception in thrown and debug is set to ", "false", ".", "\n\n", "The message is along the lines of:", "\n\n", "\n  ", "Whoops, something has gone wrong", "\n", "\n\n", "I've trawled through the code, and it seems that the plain exception handler is registered in:", "\n\n", "Illuminate\\Exception\\ExceptionServiceProvider.php\n", "\n\n", "via the following line", "\n\n", "protected function registerHandler()\n{\n    $this->app['exception'] = $this->app->share(function($app)\n    {\n        return new Handler($app, $app['exception.plain'], $app['exception.debug']);\n    });\n}\n", "\n\n", "Where do I set my own custom plain handler? I don't like the \"Whoops\" message, I want to be able to show a site specific message", "\n\n", "Cheers", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;you should trigger previous exception handler after restoring it&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function handleException( exception $e){ \n    echo $e-&amp;gt;getMessage(); \n    restore_exception_handler();\n    throw $e; //This triggers the previous exception handler\n} \n\nset_exception_handler( 'handleException');\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["执行自定义错误句柄后执行默认异常处理程序", ["\n\n", "In PHP I have built an error handler using ", "set_exception_handler", " function. It is executing my custom exception handler. I want PHP to execute default exception handler too after executing my handler. Here is my code.", "\n\n", "function handleException( exception $e){ \n    echo $e->getMessage(); \n    restore_exception_handler(); \n} \n\nset_exception_handler( 'handleException');\n", "\n\n", "echo $e->getMessage()", " is executed but then the default PHP exception handler doesn't get executed even after using ", "restore_exception_handler", ". So, How can I make it works?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NoEven&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;Exception&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, value&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;&lt;/span&gt;):\n        self.value &amp;#61; value\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__str__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(self.value)\n\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个偶数&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;raise&lt;/span&gt; NoEven(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;不是一个偶数&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;输入正确&amp;#xff0c;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;是一个偶数&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; NoEven &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;输入错误:&amp;#34;&lt;/span&gt;,e)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的不是数字&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理的一道题。。？", ["1，提示用户输入一个偶数", "2.用户输入奇数报错，需自定义一个异常类", "3.程序中处理这个数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;针对你的问题&amp;#xff0c;我的答案如下&amp;#xff0c;供参考&lt;br /&gt;比如平时你在业务中写自定义异常的代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BusinessException&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;RuntimeException&lt;/span&gt;{\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BusinessExceptionCode&lt;/span&gt; code;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BusinessException&lt;/span&gt; (&lt;span class=\"hljs-title class_\"&gt;BusinessExceptionCode&lt;/span&gt; code) {\n        &lt;span class=\"hljs-variable language_\"&gt;super&lt;/span&gt;(code.&lt;span class=\"hljs-title function_\"&gt;getDesc&lt;/span&gt;());\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;code&lt;/span&gt; &amp;#61; code;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BusinessExceptionCode&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getCode&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; code;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setCode&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;BusinessExceptionCode code&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;code&lt;/span&gt; &amp;#61; code;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 不写入堆栈信息&amp;#xff0c;提高性能\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Throwable&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fillInStackTrace&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在其中&amp;#xff0c;你只需要重写&lt;strong&gt;fillInStackTrace&lt;/strong&gt;方法即可&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["抛出自定义异常时，如何取消堆栈打印？", ["抛出自定义异常时，如何取消堆栈打印？只提示自定义异常的提示文字即可，不要堆栈信息的那种"]], "Tag": "程序设计"}
{"Answer": "android studio检查严格了，你的有张图片后缀名是png的但是你图片格式不是png的，你把它找出来改后缀名就行了，看他格式可以在as里打开图片，右上角会显示图片的真实格式，与后缀名不符的都改了", "Konwledge_Point": "异常处理", "Question": ["android studio运行项目时出现这个异常怎么解决？？", []], "Tag": "程序设计"}
{"Answer": "[color=blue][b] 包装成Unchecked的异常，然后抛出，这样做后面的操作不用再捕获异常了。常用于后面的操作对前面的成功或者失败，虽然很关心，但是不知道具体如何处理。\r\n\r\n上面那个例子，应该这样：[/b]\r\n[/color]\r\ntry {\r\n  ...\r\n} catch (SQLException) \r\n   // 回滚操作\r\n   throw new RuntimeException(e);\r\n} \r\n[b]\r\n[color=blue]该操作保证了数据库中数据的一致性。当操作发生错误时，很可能整个线程就结束了。[/color]\r\n\r\n\r\n对于异常的处理，要根据实际的需要：\r\n[color=blue]\r\n一般情况下，要么返回个true或者false给上层调用者，要么抛出一个检查的异常给上层，使得上层可以做出正确的决策。比如DAO层，一般要在异常后，进行回滚，然后再抛出一个异常，然后Service层知道有异常发生。\r\n\r\n如果上层对下层的结果不敏感，则可以隐藏掉异常，即catch之后，不做任何处理。\r\n\r\n如果上层对下层的结果虽然敏感，但是又不知道怎么处理，那么就包装成Unchecked的异常，然后抛出。这样，整个线程，就会终止（因为不知道怎么处理，所以就留给JVM处理了）[/color][/b]", "Konwledge_Point": "异常处理", "Question": ["请问大家一个异常处理的问题,异常该怎么处理比较好啊", ["我看很多程序在catch到checked异常后，都用unchecked异常包装下再次抛出，比如", "\ntry {", "\n  ...", "\n} catch (SQLException) {", "\n   throw new RuntimeException(e);", "\n}", "\n我不知道这样设计有什么好处，这样抛出去后，调用者不是也不知道该如何处理吗，那要抛出去干嘛呢", "\n谢谢，请大家详细的讲解下异常处理的比较好的方案好吗，谢谢，希望多说点"]], "Tag": "程序设计"}
{"Answer": "在lambda表达式内处理异常，不要丢出异常", "Konwledge_Point": "异常处理", "Question": ["link中结构化异常处理方面的问题？如果我希望忽略异常请问怎么做？", ["link中结构化异常处理方面的问题？如果我希望忽略异常请问怎么做？"]], "Tag": "程序设计"}
{"Answer": "哦,不好意思,没看到,\r\n你的问题应该就是一楼说的\r\n大概你没理解1楼的意思,\r\ntry {\r\n   xxxx;\r\n} catch (xxx e) {\r\n   throw e;// 或者throw new XXXE(e)\r\n}", "Konwledge_Point": "异常处理", "Question": ["spring aop 事务控制  为何异常时不会滚呢？ ", ["spring事务相关配置", "\n\n", "<bean id=\"transactionManager\"\n    class=\"org.springframework.orm.hibernate3.HibernateTransactionManager\">\n    <property name=\"sessionFactory\" ref=\"sessionFactory\" />\n</bean>\n\n\n\n<tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n    <tx:attributes>\n        <tx:method name=\"add*\" propagation=\"REQUIRED\" />\n        <tx:method name=\"upd*\" propagation=\"REQUIRED\" rollback-for=\"java.lang.Exception\"/>\n        <tx:method name=\"del*\" propagation=\"REQUIRED\" />\n        <tx:method name=\"*\" propagation=\"SUPPORTS\" />\n    </tx:attributes>\n</tx:advice>\n\n<aop:config>\n    <aop:pointcut id=\"canyin\" expression=\"execution(* com.laphone.base.baseservice.*.*(..)) ||execution(* com.laphone.canyin.*.service.*.*(..)) || execution(* com.laphone.canyin.*.*.service.*.*(..))\"/>\n    <aop:advisor advice-ref=\"txAdvice\" pointcut-ref=\"canyin\" />\n</aop:config>\n", "\n\n", "service中的方法updForOrder()使用了try catch（Exception e）；", "\n但是出现异常时还是有部分数据存到了数据库，说明异常时没有回滚。", "\n\n", "请问xdjm们有没有碰到过这种问题，csdn上有很多这种问题，但几乎都试过，没能解决", "\n分不多，海涵~"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;System.out.println(&amp;#34;输出: &amp;#34;  &amp;#43; parse); 这样直接输出是不行的&amp;#xff0c;相当于调用了LocalDate.toString()方法。&lt;br /&gt;然后LocalDate.toString()的源码实现是直接用“-”拼接的&amp;#xff0c;如下图&amp;#xff1a;&lt;br /&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/94231212592614.png\" /&gt;&lt;br /&gt;改成这样即可&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;        DateTimeFormatter dateTimeFormatter &amp;#61; DateTimeFormatter.ofPattern(&lt;span class=\"hljs-string\"&gt;&amp;#34;yyyy/MM/dd&amp;#34;&lt;/span&gt;);\n        LocalDate &lt;span class=\"hljs-keyword\"&gt;parse&lt;/span&gt; &amp;#61; LocalDate.&lt;span class=\"hljs-keyword\"&gt;parse&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2012/11/11&amp;#34;&lt;/span&gt;,dateTimeFormatter );\n        String dateStr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;parse&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;format&lt;/span&gt;(dateTimeFormatter);\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出: &amp;#34;&lt;/span&gt;  &amp;#43; dateStr);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;之所以你会有这三个问题&amp;#xff0c;是因为 LocalDate.parse这个方法的含义你可能理解错了&amp;#xff0c;看源码&amp;#xff1a;&lt;br /&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/374844125926136.png\" /&gt;&lt;br /&gt;LocalDate.parse这个方法的意思是把传入的日期字符串使用指定pattern模板转换为LocalDate对象&amp;#xff0c;而控制台输出的格式跟你指定的pattern模板无关&amp;#xff0c;&lt;br /&gt;如果你要输出指定的格式&amp;#xff0c;那就format一下就搞定了&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["日期LocalDate.parse方法调用异常问题", ["第一个异常: ", "\n", "        LocalDate parse = ", "LocalDate", ".", "parse(", "\"2012/11/11\"", ", ", "DateTimeFormatter", ".", "of", "Pattern(", "\"yyyy/MM/dd\"", ")", ");\n        ", "System", ".", "out.println(", "\"输出: \"", "  + parse);\n", "\n", "控制台输出结果 ", "\n", "输出: 2012", "-11", "-11", "\n", "\n", "可以明显的看出输出的结果不符合我们的预期, 我们模板应该是 yyyy", "/MM/", "dd 结果却是 yyyy-MM-dd\n", "\n", "第二个异常:", "\n", "        LocalDate parse = ", "LocalDate", ".", "parse(", "\"2012-11-11\"", ", ", "DateTimeFormatter", ".", "of", "Pattern(", "\"yyyy/MM/dd\"", ")", ");\n", "\n", "控制台输出", "\n", "Exception ", "in", " thread ", "\"main\"", " java", ".time", ".format", ".DateTimeParseException", ": Text ", "'2012-11-11'", " could not be parsed at index ", "4", "\n    at java", ".time", ".format", ".DateTimeFormatter", ".parseResolved0", "(DateTimeFormatter", ".java", ":", "1949", ")\n    at java", ".time", ".format", ".DateTimeFormatter", ".parse", "(DateTimeFormatter", ".java", ":", "1851", ")\n    at java", ".time", ".LocalDate", ".parse", "(LocalDate", ".java", ":", "400", ")\n    at com", ".huntkey", ".rx", ".sceo", ".dateapi", ".Jdk8DateUtil", ".main", "(Jdk8DateUtil", ".java", ":", "183", ")\n", "\n", "我切换了一种 传参方法, 解析不了了", "\n", "第三个异常:", "\n", "        LocalDate parse = ", "LocalDate", ".", "parse(", "\"2012-11-11\"", ", ", "DateTimeFormatter", ".", "of", "Pattern(", "\"yyyy-MM-dd\"", ")", ");\n        ", "System", ".", "out.println(", "\"输出: \"", "  + parse);\n", "\n", "控制台输出", "\n", "输出: 2012", "-11", "-11", "\n", "\n", "这时候又正常了, 有点怪!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据楼上提示&amp;#xff0c;在ExceptionTranslationFilter源码中有如下代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;handleAccessDeniedException&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(HttpServletRequest request, HttpServletResponse response,\n            FilterChain chain, AccessDeniedException exception)&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; ServletException, IOException {\n        &lt;span class=\"hljs-type\"&gt;Authentication&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;authentication&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; SecurityContextHolder.getContext().getAuthentication();\n        &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;isAnonymous&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.authenticationTrustResolver.isAnonymous(authentication);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (isAnonymous || &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.authenticationTrustResolver.isRememberMe(authentication)) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (logger.isTraceEnabled()) {\n                logger.trace(LogMessage.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sending %s to authentication entry point since access is denied&amp;#34;&lt;/span&gt;,\n                        authentication), exception);\n            }\n            sendStartAuthentication(request, response, chain,\n                    &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;InsufficientAuthenticationException&lt;/span&gt;(\n                            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.messages.getMessage(&lt;span class=\"hljs-string\"&gt;&amp;#34;ExceptionTranslationFilter.insufficientAuthentication&amp;#34;&lt;/span&gt;,\n                                    &lt;span class=\"hljs-string\"&gt;&amp;#34;Full authentication is required to access this resource&amp;#34;&lt;/span&gt;)));\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (logger.isTraceEnabled()) {\n                logger.trace(\n                        LogMessage.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sending %s to access denied handler since access is denied&amp;#34;&lt;/span&gt;, authentication),\n                        exception);\n            }\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.accessDeniedHandler.handle(request, response, exception);\n        }\n    }\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果程序抛出了AccessDeniedException但是当前认证状态是匿名的&amp;#xff08;未认证&amp;#xff09;&amp;#xff0c;那么会ExceptionTranslationFilter会抛出InsufficientAuthenticationException。而所有的AuthenticationException会被配置的AuthenticationEntryPoint实现类&amp;#xff08;RestAuthenticationEntryPoint&amp;#xff09;捕获。&lt;br /&gt;所以通过抛出AccessDeniedException进入自定义AccessDeniedHandler&amp;#xff08;RestfulAccessDeniedHandler&amp;#xff09;的前提是当前已完成身份认证。&lt;br /&gt;原先认证代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-comment\"&gt;/**\n * 权限控制\n * 判断用户角色\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; 刘昌兴\n * \n */&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;#64;Component&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;RoleOfAdminFilter&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AccessDecisionManager&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;/** \n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; 刘昌兴\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; authentication 调用方法的调用者(非空)\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; o 被调用的受保护对象\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; collection 与被调用的受保护对象关联的配置属性\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;decide&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Authentication&lt;/span&gt; authentication, &lt;span class=\"hljs-title class_\"&gt;Object&lt;/span&gt; o, &lt;span class=\"hljs-title class_\"&gt;Collection&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;ConfigAttribute&lt;/span&gt;&amp;gt; collection) throws &lt;span class=\"hljs-title class_\"&gt;AccessDeniedException&lt;/span&gt;, &lt;span class=\"hljs-title class_\"&gt;InsufficientAuthenticationException&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;//collection即是在UrlOfMenuJudgeRoleFilter中getAttributes返回的由角色组成的List&amp;lt;ConfigAttribute&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;ConfigAttribute&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;configAttribute&lt;/span&gt;:collection){\n            &lt;span class=\"hljs-comment\"&gt;//当前url所需要的角色&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; urlNeedRole&amp;#61;configAttribute.&lt;span class=\"hljs-title function_\"&gt;getAttribute&lt;/span&gt;();\n            &lt;span class=\"hljs-comment\"&gt;//如果匿名可访问就不用匹配角色&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ROLE_anonymous&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;equals&lt;/span&gt;(urlNeedRole)){\n                &lt;span class=\"hljs-comment\"&gt;//如果未登录&amp;#xff0c;提示登陆&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(authentication &lt;span class=\"hljs-keyword\"&gt;instanceof&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AnonymousAuthenticationToken&lt;/span&gt;){\n                    &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AccessDeniedException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;尚未登陆&amp;#xff0c;请登录&amp;#34;&lt;/span&gt;);\n                }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//终止继续匹配角色&lt;/span&gt;\n                }\n            }\n            &lt;span class=\"hljs-comment\"&gt;//获得用户所授予的角色&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Collection&lt;/span&gt;&amp;lt;? &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;GrantedAuthority&lt;/span&gt;&amp;gt; authorities &amp;#61; authentication.&lt;span class=\"hljs-title function_\"&gt;getAuthorities&lt;/span&gt;();\n            &lt;span class=\"hljs-comment\"&gt;//判断用户的角色是否满足访问该url的角色&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;GrantedAuthority&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;grantedAuthority&lt;/span&gt;:authorities){\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grantedAuthority.&lt;span class=\"hljs-title function_\"&gt;getAuthority&lt;/span&gt;().&lt;span class=\"hljs-title function_\"&gt;equals&lt;/span&gt;(urlNeedRole)){\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AccessDeniedException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;权限不足&amp;#xff01;&amp;#34;&lt;/span&gt;);\n    }\n \n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;supports&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;ConfigAttribute configAttribute&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n \n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;supports&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Class&amp;lt;?&amp;gt; aClass&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n}\n \n \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;修改后的认证代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-comment\"&gt;/**\n * 权限控制\n * 判断用户角色\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; 刘昌兴\n * \n */&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;#64;Component&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;RoleOfAdminFilter&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AccessDecisionManager&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;/** \n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; 刘昌兴\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; authentication 调用方法的调用者(非空)\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; o 被调用的受保护对象\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; collection 与被调用的受保护对象关联的配置属性\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;decide&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Authentication&lt;/span&gt; authentication, &lt;span class=\"hljs-title class_\"&gt;Object&lt;/span&gt; o, &lt;span class=\"hljs-title class_\"&gt;Collection&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-title class_\"&gt;ConfigAttribute&lt;/span&gt;&amp;gt; collection) throws &lt;span class=\"hljs-title class_\"&gt;AccessDeniedException&lt;/span&gt;, &lt;span class=\"hljs-title class_\"&gt;InsufficientAuthenticationException&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;//collection即是在UrlOfMenuJudgeRoleFilter中getAttributes返回的由角色组成的List&amp;lt;ConfigAttribute&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//如果未登录&amp;#xff0c;提示登陆&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(authentication &lt;span class=\"hljs-keyword\"&gt;instanceof&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AnonymousAuthenticationToken&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;BadCredentialsException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;尚未登陆&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;ConfigAttribute&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;configAttribute&lt;/span&gt;:collection){\n            &lt;span class=\"hljs-comment\"&gt;//当前url所需要的角色&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; urlNeedRole&amp;#61;configAttribute.&lt;span class=\"hljs-title function_\"&gt;getAttribute&lt;/span&gt;();\n            &lt;span class=\"hljs-comment\"&gt;//如果URL登录即可访问就不用匹配角色&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ROLE_login&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;equals&lt;/span&gt;(urlNeedRole)){\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-comment\"&gt;//获得用户所授予的角色&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Collection&lt;/span&gt;&amp;lt;? &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;GrantedAuthority&lt;/span&gt;&amp;gt; authorities &amp;#61; authentication.&lt;span class=\"hljs-title function_\"&gt;getAuthorities&lt;/span&gt;();\n            &lt;span class=\"hljs-comment\"&gt;//判断用户的角色是否满足访问该url的角色&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;GrantedAuthority&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;grantedAuthority&lt;/span&gt;:authorities){\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(grantedAuthority.&lt;span class=\"hljs-title function_\"&gt;getAuthority&lt;/span&gt;().&lt;span class=\"hljs-title function_\"&gt;equals&lt;/span&gt;(urlNeedRole)){\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AccessDeniedException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;权限不足&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;supports&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;ConfigAttribute configAttribute&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;supports&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Class&amp;lt;?&amp;gt; aClass&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;总结&amp;#xff1a;如果想通过抛出AccessDeniedException异常进入自定义AccessDeniedHandler那么当前认证状态不应该是匿名的。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Spring Security自定义AccessDeniedHandler配置后不生效", ["问题遇到的现象和发生背景", "\n", "我在Spring Security中配置了两个异常处理，一个是自定AuthenticationEntryPoint，一个是自定义AccessDeniedHandler。但发现无论抛什么异常都进入了AuthenticationEntryPoint。该抛什么异常才能进入AccessDeniedHandler啊。", "\n", "问题相关代码，请勿粘贴截图", "\n", "自定义AuthenticationEntryPoint", "\n", "/**\n * 用户未登录或token失效时的返回结果\n * ", "@author", " 刘昌兴\n */", "\n", "@Component", "\n", "public", " ", "class", " ", "RestAuthenticationEntryPoint", " ", "implements", " ", "AuthenticationEntryPoint", "{\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "commence", "(HttpServletRequest request, HttpServletResponse response,\n            AuthenticationException authException)", " ", "throws", " IOException, ServletException ", "{\n        response.setCharacterEncoding(", "\"UTF-8\"", ");\n        response.setContentType(", "\"application/json\"", ");\n        PrintWriter printWriter=response.getWriter();\n        ResultBean resultBean=ResultBean.", "error", "(authException.getMessage(), ", "null", ");\n        resultBean.setCode(", "401", ");\n        printWriter.write(", "new", " ObjectMapper().writeValueAsString(resultBean));\n        printWriter.flush();\n        printWriter.close();\n    }\n    \n}\n\n", "\n", "自定义AccessDeniedHandler", "\n", "/**\n * 没有权限访问时返回的结果\n * ", "@author", " 刘昌兴\n * \n */", "\n", "@Component", "\n", "public", " ", "class", " ", "RestfulAccessDeniedHandler", " ", "implements", " ", "AccessDeniedHandler", "{\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "handle", "(HttpServletRequest request, HttpServletResponse response,\n            AccessDeniedException accessDeniedException)", " ", "throws", " IOException, ServletException ", "{\n        response.setCharacterEncoding(", "\"UTF-8\"", ");\n        response.setContentType(", "\"application/json\"", ");\n        PrintWriter printWriter=response.getWriter();\n        ResultBean resultBean=ResultBean.", "error", "(", "\"权限不足，请联系管理员！\"", ", ", "null", ");\n        resultBean.setCode(", "403", ");\n        printWriter.write(", "new", " ObjectMapper().writeValueAsString(resultBean));\n        printWriter.flush();\n        printWriter.close();\n        \n    }\n\n}\n\n\n", "\n", "Spring Security配置", "\n", "    @Override\n    protected void configure", "(HttpSecurity http)", " throws Exception {\n        http\n            ", ".authorizeRequests", "()", "\n/*            ", ".antMatchers", "(\"/login\",\"/doc.html\",\"/swagger-resources/**\",\n                    \"/v2/api-docs/**\",\"/webjars/**\",\"/capture\",\"/test/**\",\"/ws/**\",\"/logOut\",\n                    \"/admins/userFaces\",\"/index.html\",\"/css/**\",\"/js/**\",\"/fonts/**\")", ".permitAll", "()", "//", "放行相关请求和资源*/\n            ", ".anyRequest", "()", ".authenticated", "()", "//", "除了上面的其他都需要认证\n            ", ".withObjectPostProcessor", "(getObjectPostProcessor()", ")", "//", "动态权限配置\n            ", ".and", "()", "\n            ", ".addFilterBefore", "(getJwtAuthenticationTokenFilter()", ", UsernamePasswordAuthenticationFilter.class)", "//", "添加登陆过滤器\n            ", ".exceptionHandling", "()", "//", "添加异常处理过滤器\n            ", ".accessDeniedHandler", "(restfulAccessDeniedHandler)", "//", "访问拒绝处理器\n            ", ".authenticationEntryPoint", "(restAuthenticationEntryPoint)", "//", "权限异常过滤器\n            ", ".and", "()", "\n            ", ".csrf", "()", ".disable", "()", "//", "使用jwt，不需要使用csrf拦截器\n            ", ".sessionManagement", "()", ".sessionCreationPolicy", "(SessionCreationPolicy.STATELESS)", "//", "不需要使用session\n            ", ".and", "()", "\n            ", ".headers", "()", ".cacheControl", "()", ";", "//", "禁用缓存\n    }\n\n", "\n", "运行结果及报错内容", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有结果是返回空&amp;#xff0c;空指针异常是你用对象接收的数据&amp;#xff0c;操作了对象中的方法。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java springboot查询数据库，数据库中结果为空，这个时候会返回null还是直接抛异常啊", ["springboot一个联表查询，where之后表中没有所要的结果就是返回的结果应该是个null，但是为什么代码直接抛异常了，异常时NullPointerException,是我记错了吗？不应该返回的是个null的吗？还是说我用了druid的原因？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;申明一个curi变量存i的值&amp;#xff0c;task中任务使用curi这个变量&amp;#xff0c;不要直接使用i&amp;#xff0c;因为task未执行前i已经循环完毕了&amp;#xff0c;i值为最大值rewuShu&amp;#xff0c;导致越界了&lt;/p&gt;\n&lt;p&gt;如果题主学过js&amp;#xff0c;js闭包问题就是和题主这代码一样导致的&amp;#xff0c;js需要做一个闭包或者let申明一个变量&amp;#xff0c;C#可以用临时变量存储起来&amp;#xff08;类似js的let&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;Task&lt;/span&gt;[] tasks &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Task&lt;/span&gt;[renwuShu];\n\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; renwuShu; i&amp;#43;&amp;#43;)\n            {\nvar curi&amp;#61;i;&lt;span class=\"hljs-comment\"&gt;/////&lt;/span&gt;\n                tasks[i] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Task&lt;/span&gt;&amp;lt;DataSet&amp;gt;(() &amp;#61;&amp;gt; dobidui(xzhdas[curi], das[curi], curi));\n                tasks[i].Start();\n            }\n \n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c# task 多任务 waitall异常，请教如何修改？", ["具体代码如下：", "\n", "Task[] tasks = new Task[renwuShu];", "\n", "            for (", "int", " i = ", "0", "; i < renwuShu; i++)", "\n            {\n                tasks[i] = new Task<DataSet>(() => dobidui(", "xzhdas", "[i], das[i], i))", ";", "\n                tasks[i].Start()", ";", "\n            }\n\n            Task.WaitAll(", "tasks", ")", ";", "\n", "\n", "提示：IndexOutOfRangeException: 索引超出了数组界限。", "截图如下："]], "Tag": "程序设计"}
{"Answer": "只需要在action 处理一场，同时记录log，dao,service都抛出。", "Konwledge_Point": "异常处理", "Question": ["JAVA 的异常处理！", ["我一向对DAO以及Service层的异常处理有点儿蒙!", "假如是如下结构：", " ---------------            -----------------             ----------------", " -   action      ---------->-   service     ---------->-   dao       -", " ---------------            -----------------             ----------------", "在这三层中，Dao直接利用JDBC与物理数据库发生交互，比如CURD某User表中的记录，这个时候一定会有受查异常SQlException抛出，我们暂且把这点称之为异常处理点(1),如果选择抛出异常，那么在service中会要求处理异常， 比如在Service中有registeUser(User user)方法，我们把此处称之为异常处理点(2)，然后在Action层中，我们捕捉到此异常，判断该异常，在UI界面上给用于提示，这里称之为异常处理点(3);", "如何处理(1)(2)(3)出的异常，是否抛出异常，抛出什么异常，如何抛出异常，是否做日志记录，如何避免日志重复？", "个人认为，", "（1）在Dao中，选择记录调试日志(面向开发人员)，然后选择抛出异常；（注意此处可能同时抛出多种异常），因为DAo相对于Service而言不存在业务逻辑或者服务概念，故可以选择直接将原生态的异常抛出；", "（2)在Service中，个人认为service是门面或者服务，业务逻辑含义很重，故在此处判断Dao层的原生态异常，然后包装成为自定义的应用程序异常，如UserExistsException(“用户名已经存在”)等异常抛出，然后选择在此处记录应用日志（面向系统管理员的）；", "（3）处理应用程序异常，在此处导航至相应的UI提示页面；异常处理链条至此结束；", "希望大家能给出解决的方式，多多交流；"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nfrom math &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;\ndef &lt;span class=\"hljs-title function_\"&gt;func&lt;/span&gt;():\n    x,y&amp;#61;&lt;span class=\"hljs-title function_\"&gt;input&lt;/span&gt;().&lt;span class=\"hljs-property\"&gt;split&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        x,y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(x),&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(y)\n    except:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n    # &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x-y&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    #     &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;值小于0&amp;#34;&lt;/span&gt;)\n    #     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; \n    # elif &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x-y&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    #     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; -&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;inf&amp;#39;&lt;/span&gt;)\n    # &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    #     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x-y&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;assert&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x-y&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;值不大于0&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x-y&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-title function_\"&gt;func&lt;/span&gt;())\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["关于#python#的问题，请各位专家解答！", ["请问打对号怎么写？怎么调用这个函数？什么是断言语句？请大lao指教一下"]], "Tag": "程序设计"}
{"Answer": "你捕获了异常又没有打印异常信息的话，那就没有了", "Konwledge_Point": "异常处理", "Question": ["异常处理", ["为什么有时候抛出异常后有很多异常信息，有时候抛出异常没有异常信息"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你读取menu.txt的时候是按行读取的&amp;#xff0c;第一行是列名&amp;#xff0c;最后一行是总价&amp;#xff0c;不读。&lt;br /&gt;从第二行开始&amp;#xff0c;可以使用字符串自带的spilt方法&amp;#xff0c;将这行数据切分成数组&amp;#xff0c;那么数组的第一位就是ID&amp;#xff0c;第二位是菜名&amp;#xff0c;第三位是数量&amp;#xff0c;第四位是单价&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java文件输入输出流", ["#问题遇到的现象和发生背景", "定义一个程序，该程序可实现用户的点餐与计费功能。点餐:用户输入ID 或菜名、 数量等信息:计算价格并输出清单，如下:您的消费清单:", "\n", "ID 菜名 数量 价格", "\n", "1 可乐 2 10", "\n", "2 雪碧 1 5", "\n", "总共消费15元。", "\n", "#我想要达到的结果", "要求:1)读取menu.txt文件，实现点餐计费功能:", "2)程序需进行异常处理", "\n", "#主要疑惑的点", "菜单文件的信息提取是怎么让价格和ID或菜名对应的"]], "Tag": "程序设计"}
{"Answer": "对于api来说，越深的代码越应该抛出异常，让上层调用方进行处理，如果全部在内部catch掉，查找错误是非常费劲的，对于上层而言，应该尽可能在一个地方统一捕获异常进行处理，spring的intercept或者java的代理机制都可以实现全局异常的拦截。", "Konwledge_Point": "异常处理", "Question": ["关于代码编写中的异常处理", ["有一个方法, 假设是", "\n\n", "public void add(int a, int b){\n    try{\n        System.out.print(a + b);\n    }catch (Execption e){\n         // 此处做异常处理\n    }\n}\n", "\n\n", "然后另一处调用的地方这么写", "\n\n", " try{\n     add(1, 3);\n }catch(Execption e){\n     // 异常处理\n }\n", "\n\n", "阅读代码的时候看到类似这种代码,就有个疑问,那个add方法,既没有返回值,也没有异常抛出", "\n那么调用的时候try catch还有什么用呢?"]], "Tag": "程序设计"}
{"Answer": "1、如果你这个系统是新系统/或者以后会有更多的子系统依赖 建议还是规范起来 \r\n1.1、如果对外提供的是jar包直接抛异常 没关系\r\n1.2、如果走如http/webservice 提供一个异常到错误码的映射（比如直接写到异常里） 这个是标准的 以后的标准\r\n1.3、对于遗留系统 提供一个转换处理器（如spring对jdbc、hibernate等的都转换为DataAccessException）\r\n  如果外部系统能改造的话 建议沟通下一起改造下  否则就要他们提供当前系统的错误码 然后联调（可能存在bug 很正常的  所以要全面测试）  \r\n1.4、考虑下spring的NestedException 嵌套异常 来存储原始异常\r\n1.5、如果可以放弃checkedException 如web系统都会有一个异常解析器 出错了 会交给他 所以unchecked即可", "Konwledge_Point": "异常处理", "Question": ["Java错误代码及异常处理", ["现在有个项目，遇到错误代码和异常处理方面的问题，请教各位高手。", "\n\n", "背景：项目对外提供服务，这些服务是对很多外部系统提供服务的封装，每个外部系统有自己的错误代码，没有统一的规范。有些外部系统自己规范都不统一，有的时候返回错误代码，有的时候返回错误信息，有的时候错误代码和错误信息在一起。", "\n\n", "目前可选的解决方案：", "\n一、直接使用外系统错误代码", "\n方法：直接使用外系统错误代码", "\n问题：混乱，错误代码可能重复，排除该方法", "\n\n", "二、使用统一的错误代码", "\n方法：对外部系统的错误代码重新编排，按照模块进行分类，没有错误代码的错误当做未知错误。", "\n问题：需要维护一个错误代码列表及映射关系，对于外部系统错误不规范的情况，需要有专门的代码进行处理", "\n\n", "三、使用异常，统一当做checked exception处理", "\n方法：继承Exception", "\n问题：不符合异常处理最佳实践，有些应该是RuntimeException的也被强制要求捕获了", "\n\n", "四、使用异常，根据外系统错误类型区分是checked exception还是unchecked exception", "\n方法：根据外部系统类型，区分哪些是程序逻辑问题（继承RuntimeException），哪些是系统问题（继承Exception），映射成不同的异常类型", "\n问题：外系统错误说明可能有误，导致映射到异常时类型不准确", "\n\n", "\n\n", "针对这种情况，各位觉得应该使用哪种方式处理比较好，另外，对于异常的类层次结构实践经验不多，只是简单看过Spring的异常类设计，有哪些好的书或资料可以学习一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;finally 是一定会执行的部分&amp;#xff0c; 多用来关闭资源。&lt;br /&gt;finally{ 无论try代码是否正常走完&amp;#xff0c;里面的代码都会执行 }&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["处理异常finally有什么 用啊", ["\n", "public", " ", "class", " ", "Demo1", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String[] args", ")", " {\n        Scanner scanner=", "null", ";\n        ", "try", " {\n            scanner=", "new", " Scanner(System.", "in", ");\n            ", "int", " a=scanner.nextInt();\n            ", "int", " i=", "1", "/", "0", ";\n        }", "catch", " (Exception e){\n            e.printStackTrace();\n        }\n        ", "finally", " {\n            scanner.close();\n        }\n", "//scanner.close();", "\n        System.", "out", ".println(", "\"完成\"", ");\n    }\n}\n网上说最主要作用是关闭资源,可是不管有没有出现异常放在外面执行不就得了,为什么还要", "finally", ",\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;需要在哪添加&amp;#xff0c;把代码发出来。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;try:\n    正常的操作\n   &lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;...&lt;/span&gt;.\nexcept:\n    发生异常&amp;#xff0c;执行这块代码\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["简单的python信息管理系统添加异常处理", ["不会添加异常处理，求助各位大佬解答 有赏问答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;程序修改&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;s&amp;#61;input(&amp;#34;请输入一个数&amp;#34;)\nnumstr&amp;#61;&amp;#34;零一二三四五六七八九&amp;#34;\nwhile True:\n    if not(s.isdigit()):\n        print(&amp;#34;请输入整数&amp;#xff1a;&amp;#34;);\n    elif (int(s)&amp;lt;0 or int(s)&amp;gt;9):\n        print(&amp;#34;请输入0-9之间的数&amp;#xff1a;&amp;#34;);\n    else:\n        print(numstr[int(s)])\n        break\n    s&amp;#61;input(&amp;#34;请输入一个数&amp;#34;)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;对应运行结果&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"158\" src=\"https://img-ask.csdnimg.cn/upload/1620133965117.png\" width=\"238\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;希望对你有用&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理练习，怎么解决输入字母的异常情况？", ["异常处理练习", "\n\n", " ‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪", "\n\n", "描述", "\n\n", "从键盘上输入0~9之间的数字，输出对应的汉字（零一二三四五六七八九）。‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬", "\n\n", "要求：能够处理各种异常情况。‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬", "\n\n", " 如果用户输入非数字时，提示“请输入整数”‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬", "\n\n", "如果用户输入小于0或者大于9 的数字，则提示“请输入0~9之间的数”‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬", "\n\n", "输入输出示例", "\n\n", "输入：1  输出：一", "\n\n", "输入：a  输出：请输入整数", "（这种情况处理不来）", "\n\n", " ‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬我的代码：", "\n\n", "s=eval(input())", "\nnumstr='零一二三四五六七八九'", "\nwhile True:", "\n    if s<0 or s>9:", "\n        print('请输入0~9之间的数')", "\n    elif s>=0 and s<=9 and s%1==0:", "\n        print(numstr[s])", "\n    else:", "\n        print('请输入整数')", "\n    s=eval(input())", "\n\n", "测试时发现输入字母的时候出现错误"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This function will return whether or not the operation was successful (true = success, false = failure)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function tryThis() {\n   $success = true;\n\n   try {\n       Class2::tryThat();\n       self::logSuccessfulEvent();\n   } catch( Exception $e) {\n       $success = false;\n   }\n\n   return $success;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["处理异常，仅在未抛出异常时执行代码", ["\n\n", "My ", "script_a.php", ":", "\n\n", "try {\n    Class1::tryThis();\n}\ncatch (Exception $e) {\n    // Do stuff here to show the user an error occurred\n}\n", "\n\n", "Class1::tryThis()", " has something like:", "\n\n", "public function tryThis() {\n    Class2::tryThat();\n    self::logSuccessfulEvent();\n}\n", "\n\n", "The problem is that ", "Class2::tryThat()", " can throw an exception.", "\n\n", "If it does throw an exception, it seems that the line ", "self::logSuccessfulEvent();", " still gets executed.", "\n\n", "How can I refactor this code so that ", "self::logSuccessfulEvent()", " only occurs when an exception is not thrown, yet at the same time letting ", "script_a.php", " know when an exception ", "has", " been thrown?", "\n    "]], "Tag": "程序设计"}
{"Answer": "代码第4行 if( ! conn-&gt;isFailed()) 应去掉'!'， 即改为：\r\nif( conn-&gt;isFailed())\r\n这样与执行结果图中第一处红线在逻辑上匹配。\r\n\r\n另外try...catch用法可以深入了解下，\r\n可参考https://www.cnblogs.com/MrYuan/p/4800257.html\r\n祝好运！", "Konwledge_Point": "异常处理", "Question": ["c++ 驱动操作 Mongodb 查询超时异常如何捕获？", ["代码如下：", "\n\n", " try\n    {\n        mongo::DBClientConnection * conn = new DBClientConnection(true, 0, 3);\n        if(!conn->isFailed())\n        {\n            cout<<\"-false\"<<\" type:\"<< conn->type()<<endl; \n        }\n        else\n            cout<<\"-true\"<<\" type:\"<< conn->type()<<endl; \n        //初始化连接\n        MongoDB_Connect(&conn);\n\n        if(conn->isFailed())\n        {\n            cout<<\"1：连接失败！\"<<\" type:\"<< conn->type()<<endl; \n        }\n        else\n            cout<<\"2：连接成功！\"<< conn->toString()<<\" type:\"<< conn->type()<<endl; \n        BSONArrayBuilder c;\n        BSONObjBuilder add,A,B;\n        int falg = 401;\n        B.append(\"trans_sub_typecode\",falg);\n        B.append(\"discouant_money\",\"0\");\n        B.append(\"account_money\",\"0\");\n        B.append(\"proxy_money\",\"0\");\n        c.append(\"0\");\n        c.append(\"0.00\");\n        B.append(\"trans_amount\",BSON(\"$nin\"<<c.arr()));\n        auto_ptr<DBClientCursor> cursor;\n        Query query(B.obj());\n        try\n        {\n            cursor = conn->query(\"e_invoice.issue_park_transactions\",query);\n\n        }\n        catch (mongo::AssertionException &e1)\n        {\n            printf(\"0:捕获异常: %s\\n\", e1.what());\n        }\n        catch (mongo::SocketException &e1)\n        {\n            printf(\"1:捕获异常: %s\\n\", e1.what());\n        }\n        catch (mongo::DBException &e1)\n        {\n            printf(\"2:捕获异常: %s\\n\", e1.what());\n        }\n        catch (mongo::exception &e1)\n        {\n            printf(\"02:捕获异常: %s\\n\", e1.what());\n        }\n        catch (...)\n        {\n            printf(\"查询失败 数据库数据异常\\n\");\n        }\n        if(cursor.get() == NULL)\n        {\n            cout<<\"--返回为NULL：\"<< conn->type()<<endl;  \n        }\n\n        if(conn->isFailed())\n        {\n            cout<<\"2：连接失败！\"<<\" type:\"<< conn->type()<<endl; \n        }\n        else\n            cout<<\"2：连接成功！\"<< conn->toString()<<\" type:\"<< conn->type()<<endl; \n    }\n    catch (mongo::SocketException &e1)\n    {\n        printf(\"3:捕获异常: %s\\n\", e1.what());\n    }\n    catch (mongo::DBException &e1)\n    {\n        printf(\"3:捕获异常: %s\\n\", e1.what());\n    }\n    catch (...)\n    {\n        printf(\"3:查询失败 数据库数据异常\\n\");\n    }\n", "\n\n", "执行结果：", "\n\n", "我想要获取这段异常，有人有了解么？"]], "Tag": "程序设计"}
{"Answer": "你再确认下服务器下的jar包\r\n包括tomcat自己的lib\r\n和项目的lib\r\n有可能是发布到服务器之后的问题\r\n我之前遇到过\r\n把服务器的clean一下\r\n重新发布就ok了", "Konwledge_Point": "异常处理", "Question": ["Struts+Hibernate+Spring整合异常问题，查找多个方案无法解决", ["初学Struts+Hibernate+Spring整合", "\n\n", "eclipse 7", "\nstruts 1.3", "\nspring 2.5", "\nhibernate 3.2", "\n\n", "作了个练习", "\n\n", "启动tomcat时：", "\n严重: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener", "\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in ServletContext resource [/WEB-INF/classes/applicationContext.xml]: Invocation of init method failed;", "\nnested exception is java.lang.NoSuchMethodError: org.objectweb.asm.ClassVisitor.visit(IILjava/lang/String;Ljava/lang/String;", "\n\n", "搜了很多网页，看了不少方案，都无法解决。", "\n[b]问题补充：[/b]", "\n查的时候都说是jar 文件发生了版本冲突，主要试了下面三种方法。都没有作用", "\n1. ", "\n移除asm.jar或asm-2.2.3.jar ", "\n\n", "2.", "\n去掉类路径上的关于Hibernate的3个lib ", "\nasm.jar ", "\nasm-attrs.jar ", "\ncglib-2.1.3.jar ", "\n加入Spring中的以下4个lib ", "\nasm-2.2.2.jar ", "\nasm-commons-2.2.3.jar ", "\nasm-util-2.2.3.jar ", "\ncglib-nodep-2.1_3.jar", "\n\n", "3.", "\n删除 asm-*.jar (asm-2.2.3.jar、asm.jar、asm-attrs.jar、asm-commons-2.2.3.jar、asm-util-2.2.3.jar) ", "\n删除 cglib-2.1.3.jar ", "\n添加 asm-all-3.0.jar "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;use&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (class_exists('Application_Model_NonExistent')) {\n    $test = new Application_Model_NonExistent;\n} else {\n    echo 'class not found.';\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;like @prodigitalson said you can't catch that fatal error.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["我正在尝试在PHP中处理异常但堆栈错误仍然显示而不是由catch处理", ["\n\n", "I'm calling a method that I know could cause an error and I'm trying to handle the error by wrapping the code in a try/catch statement...", "\n\n", "\n\n", "\n", "class TestController extends Zend_Controller_Action\n{\n\n    public function init()\n    {\n        // Anything here happens BEFORE the View has rendered\n    }\n\n    public function indexAction()\n    {\n        // Anything `echo`ed here is added to the end of the View\n        $model = new Application_Model_Testing('Mark', 31);\n        $this->view->sentence = $model->test();\n        $this->loadDataWhichCouldCauseError();\n        $this->loadView($model); // this method 'forwards' the Action onto another Controller\n    }\n\n    private function loadDataWhichCouldCauseError()\n    {\n        try {\n            $test = new Application_Model_NonExistent();\n        } catch (Exception $e) {\n            echo 'Handle the error';\n        }\n    }\n\n    private function loadView($model)\n    {\n        // Let's pretend we have loads of Models that require different Views\n        switch (get_class($model)) {\n            case 'Application_Model_Testing':\n                // Controller's have a `_forward` method to pass the Action onto another Controller\n                // The following line forwards to an `indexAction` within the `BlahController`\n                // It also passes some data onto the `BlahController`\n                $this->_forward('index', 'blah', null, array('data' => 'some data'));\n                break;\n        }\n    }\n\n}\n", "\n\n", "...but the problem I have is that the error isn't being handled. When viewing the application I get the following error...", "\n\n", "( ! ) Fatal error: Class 'Application_Model_NonExistent' not found in /Library/WebServer/Documents/ZendTest/application/controllers/TestController.php on line 23\n", "\n\n", "Can any one explain why this is happening and how I can get it to work?", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ns &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;#34;&lt;/span&gt;)\n\nddsum , evensum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; s:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i) % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        evensum &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        ddsum &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;ddsum&amp;#61;&lt;span class=\"hljs-subst\"&gt;{ddsum}&lt;/span&gt;,evensum&amp;#61;&lt;span class=\"hljs-subst\"&gt;{evensum}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["pathon的奇偶求和问题，求解", ["[奇偶求和]", "\n", "描述:输入一个完全由数字字符组成的字符串s，分别统计其中出现的奇数和偶数字符数值之和。", "\n", "如:", "\n", "输入‘123456789'", "\n", "输出ddsum=25,evensum=20"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的逻辑错了&amp;#xff0c;猜的次数不需要输入&lt;br /&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define N 5 //定义猜的次数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; num,&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,guess;\n    &lt;span class=\"hljs-keyword\"&gt;srand&lt;/span&gt;((unsigned)&lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;(NULL));\n    num &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%100; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;生成&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;以内的随机数\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;guess);\n        &lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt;&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;lt;&amp;#61;N &amp;amp;&amp;amp; guess &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) //输入负数结束循环\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;gt; N) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;超出N此后&amp;#xff0c;结束循环\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(guess &amp;gt; num)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Too big\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(guess &amp;lt; num)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Too small&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Bingo!\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Lucky You\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;times&lt;/span&gt; &amp;lt;&amp;#61;N)\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Good Guess\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Game Over\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["猜数字游戏随机产生一个100以内的正整数", ["求指出问题在哪里，我提交后系统显示格式错误。", "\n", "令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（>3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序", "\n", "#", "include", " ", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " number,times,guess,i=", "0", ";\n    ", "scanf", "(", "\"%d %d %d\"", ",&number,&times,&guess);\n    ", "while", "(guess>", "0", ")\n    {\n        i++;", "//计数猜的次数", "\n        ", "if", "(i<=times)", "//规定次数以内的情况", "\n        {\n            ", "if", "(guess>number){", "printf", "(", "\"Too big\"", ");}", "//猜得过大", "\n            ", "else", " ", "if", "(guess<number){", "printf", "(", "\"Too small\"", ");}", "//猜得过小", "\n            ", "else", "//猜中了，分情况", "\n            {\n                ", "if", "(i==", "1", "){", "printf", "(", "\"Bingo!\"", ");}", "//一次猜中", "\n                ", "else", " ", "if", "(i>", "1", "&&i<=", "3", "){", "printf", "(", "\"Lucky You!\"", ");}", "//3次以内猜中", "\n                ", "else", "{", "printf", "(", "\"Good Guess!\"", ");}", "//3次到规定次数以内猜中", "\n                ", "return", " ", "0", ";", "//猜中了，退出程序", "\n            }\n        }\n        ", "else", "{", "printf", "(", "\"Game Over\"", ");", "return", " ", "0", ";}", "//超过规定次数，退出程序", "\n        ", "scanf", "(", "\"%d\"", ",&guess);\n    }\n    ", "printf", "(", "\"Game Over\"", ");", "//输入负数且没有猜中，退出程序", "\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是一个类&amp;#xff0c;集合的应用。你需要开户账号&amp;#xff0c;即创建用户类&amp;#xff0c;将用户类存放集合中。所有的操作都是对集合进行操作。我写了一个比较完善的这种小demo&amp;#xff0c;需要的话&amp;#xff0c;可以发给你看看。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java 创造一个类能够存款，取钱、显示余额，还需要测试它", ["自己已经创造好了类，测试的代码现在只会显示银行账户名字，希望帮我检查下类是否正确，以及能够帮助我完善测试代码。", "\n", "这是创造的类，一共两张图片", "\n", "\n", "`这是测试代码", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/353067033976183.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        num1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第一个数&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n        num2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第二个数&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num1.isdigit():\n            num1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(num1)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num1 &amp;#61;&amp;#61; -&lt;span class=\"hljs-number\"&gt;9999&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;True&amp;#34;&lt;/span&gt;:\n            num1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt;(num1)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;False&amp;#34;&lt;/span&gt;:\n            num1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt;(num1)\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num2.isdigit():\n            num2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(num1)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num2 &amp;#61;&amp;#61; -&lt;span class=\"hljs-number\"&gt;9999&lt;/span&gt;:\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num2 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;True&amp;#34;&lt;/span&gt;:\n            num2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt;(num2)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num2 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;False&amp;#34;&lt;/span&gt;:\n            num2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt;(num2)\n\n        result &amp;#61; num1 &amp;#43; num2\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{num1}&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-subst\"&gt;{num2}&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-subst\"&gt;{result}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; TypeError &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;异常处理&amp;#xff1a;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(e).__name__)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;异常描述&amp;#xff1a;&amp;#34;&lt;/span&gt;, e)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Python异常处理", ["输入两个不同数据类型的数据执行加法运算，输出计算结果。", "执行加法运算出错时，显示错识信息。当其中一个输入的数为-9999时结束程序。", "输出示例：", "2 + True = 3", "异常处理：TypeError", "异常描述：unsupported operand type(s) for + : 'int' and 'str'"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;a,b&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(a)/&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(b)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{n:&lt;span class=\"hljs-number\"&gt;.3&lt;/span&gt;f}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ZeroDivisionError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ZeroDivisionError&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ValueError&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; TypeError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;TypeError&amp;#34;&lt;/span&gt;)\n\na &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\nb &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\nf(a,b)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "异常处理", "Question": ["编写一个函数输入两个数字(例如 a,b)，并进行 a 与 b 的除法运算，然后输出其结果。要求对输入和程序执行过程进行检测，捕获并显示所有可能的异常类型信息.", ["题目如下图所示", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "10", "2", "5.000", "\n", "1", "a", "ValueError", "\n", "1", "0", "ZeroDivisionError"]], "Tag": "程序设计"}
{"Answer": "三种情况望采纳\r\n1、你的xml文件没有配置好\r\n2、类没有找到\r\n3、启动config检查一下配置", "Konwledge_Point": "异常处理", "Question": ["intelliJ IDEA的异常！！！！", ["第一次用，这个报找不到类的异常，是什么原因"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你异常捕获的方式写错了。是最小的异常放上面处理&amp;#xff0c;最大的放下面哦。&lt;br /&gt;修改为如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;[ ])\n{\nint &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n&lt;span class=\"hljs-title function_\"&gt;try&lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; . . .&lt;span class=\"hljs-comment\"&gt;//其他语句 }&lt;/span&gt;\n&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;ArrayIndexOutOfBoundsException&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;ee&lt;/span&gt;)\n{ &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;ee&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;toString&lt;/span&gt;()); }\n&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Exception&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)\n{ &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;toString&lt;/span&gt;()); }\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["程序中进行异常处理时发生的错误？", ["public static void main(String args[ ])", "{", "int a[3];", "try{ a[3]=10;   . . .//其他语句  }", "catch(Exception ee)", "       { System.out.println(ee.toString()); }", "catch( ArrayIndexOutOfBoundsException e)", "    { System.out.println(e.toString()); }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;类似这样&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;a:&amp;#39;&lt;/span&gt;))\n        b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;b:&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;,a&amp;#43;b)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; Exception &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出错了&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;repr&lt;/span&gt;(e))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python错误和异常处理", ["python错误和异常处理练习：编写一段两个数相加的代码，用异常来处理可能发生的错误。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你throw的是继承了exception的结构体&amp;#xff0c;构造构造函数并不是char&lt;em&gt;类型的&amp;#xff0c;正常的类在构造函数都不会有返回值(代码层面来说)&amp;#xff0c;那个char&lt;/em&gt; 是what方法的&amp;#xff0c;那段代码是模拟抛出一个异常&amp;#xff0c;用catch捕获到&amp;#xff0c;然后打印了what方法的内容&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于C++异常处理的问题", ["问题都在图上写好了。", "代码来源于cai niao 教程的C++错误处理一节。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;CheckTest&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; void main(&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt;[] args) throws MyException {\n        Scanner &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Scanner&lt;/span&gt;(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        List&amp;lt;&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt;&amp;gt; blist&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n        blist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;b&amp;#34;&lt;/span&gt;);\n        blist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;o&amp;#34;&lt;/span&gt;);\n        blist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;m&amp;#34;&lt;/span&gt;);\n        List&amp;lt;&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt;&amp;gt; hlist &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;h&amp;#34;&lt;/span&gt;);\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;e&amp;#34;&lt;/span&gt;);\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;o&amp;#34;&lt;/span&gt;);\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;);\n        hlist.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;){\n            System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入待检测商品&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            char[] chars &amp;#61; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;.next().toCharArray();\n            Map&amp;lt;Character,Integer&amp;gt; map&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();\n            map.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (char c:&lt;span class=\"hljs-type\"&gt;chars&lt;/span&gt;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (blist.contains(c&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)){\n                    map.put(c,map.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(c)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                }\n            }\n            &lt;span class=\"hljs-comment\"&gt;//判断 危险品&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (map.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; map.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp;map.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;MyException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;发现危险品&amp;#xff0c;有危险品炸弹&amp;#34;&lt;/span&gt;);\n            }\n\n            Map&amp;lt;Character,Integer&amp;gt; map2&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            map2.put(&lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (char c:&lt;span class=\"hljs-type\"&gt;chars&lt;/span&gt;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (hlist.contains(c&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)){\n                    map2.put(c,map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(c)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                }\n            }\n            &lt;span class=\"hljs-comment\"&gt;//判断违禁品&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp;map2.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;MyException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;发现违禁品。。。&amp;#34;&lt;/span&gt;);\n            }\n        }\n    }\n}\n\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MyException&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;&lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Exception&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; MyException(&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt; message) {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;(message);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/844389637156170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理程序Java", ["编写一异常处理程序，模拟地铁、机场进行危险品与违禁物品检查。程序循环接受输入字符串，检查字符串。大致要怎样的思路"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;请采纳一下吧&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;public class Test {\n\n    public  static  void  main(String[] args) {\n        try{\n            methodA();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n    public static void methodA()throws Exception{\n        System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;entering method A..&amp;#34;&lt;/span&gt;);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)methodA invoked..\n        methodB();                      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)call methodB\n        System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;exiting method A&amp;#34;&lt;/span&gt;);      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt; from methodB, &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt; from here\n    }\n\n    public static void methodB()throws Exception{\n        System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;entering method B..&amp;#34;&lt;/span&gt;);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)mthodB invoked..\n        methodC();                      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)call methodC\n        System.out. print(&lt;span class=\"hljs-string\"&gt;&amp;#34;exiting method B&amp;#34;&lt;/span&gt;);      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt; from methodC, &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt; from here. &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt; methodB\n    }\n\n    public static void methodC() throws Exception{\n        System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;entering method C..&amp;#34;&lt;/span&gt;);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)methodC invoked..\n        System.out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;exiting method C&amp;#34;&lt;/span&gt;);\n        throw new Exception();\n\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["java自定义异常处理", ["第一道题！java自定义异常处理", "\n", "一、实验内容", "一、创建一个程序，    该程序包含多个方法 method A、metthod B、method C，这些方法形成三级调用    主方法 main 调用 method A，method A 调用 method B,method B 调用 methodC，最后methodC会抛出一个异常请编写 main 方法，在 main 方法中处理抛出的异常。程序清单如 12-4，清单中定义了一个MyException的异常类，，以及 SearchForExceptionHandler    的主类。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Nevermind, I feel really stupid now. All I had to do was&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if($r1pro){\n&amp;lt;--do normal stuff if no error--&amp;gt;\n}else{\n&amp;lt;--do stuff in case of error--&amp;gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["如何在Simple HTML Dom Parser中处理http错误", ["\n\n", "so I have this,", "\n\n", "$r1pro = file_get_html('http://www.example.com/forums-profile.php?user_id='.$uid);\n$uname = $r1pro->find('span.username', 0);\n", "\n\n", "It works perfectly, but the site isn't very welly designed and if you're not logged in, some requests return a 500 error, which outputs something like this:", "\n\n", "Warning: file_get_contents(http://www.example.com/forums-profile.php?user_id=12345678): failed to open stream: HTTP request failed! HTTP/1.0 500 Internal Server Error in /home/mysite/public_html/su3/htmldom.php on line 76\nFatal error: Call to a member function find() on boolean in /home/mysite/public_html/su3/index.php on line 61\n", "\n\n", "I've searched for methods for error handling in simplehtmldom but have found nothing. Is there any way to catch an http error and run some different code instead?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在main方法捕获异常&amp;#xff1b;&lt;/p&gt;\n&lt;p&gt;看你的情况&amp;#xff0c;应该是启动的时候出现了异常&amp;#xff0c;那么就需要在入口函数那里处理&amp;#xff1b;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java怎么捕获全局的异常？", ["1.非spring框架，非javaweb，就是普通的java swing程序。", "\n", "2.Thread.setDefaultUncaughtExceptionHandler 这个接口只能捕获单个线程，无法捕获整个程序。", "\n", "3.主要的需求是，双击jar包启动时，可能会有一些异常，导致程序无法启动，怎样能获取异常信息（不用cmd启动，就是双击直接启动）？", "\n", "已经试过了Thread.setDefaultUncaughtExceptionHandler，捕获不到启动的异常信息。", "\n", "除了直接try{}catch{}某段程序外，还有其他的方法吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your namespace or your PSR-4 mapping is incorrect.&lt;/p&gt;\n\n&lt;p&gt;When your class contains &lt;code&gt;Models&lt;/code&gt; with uppercase M in its namespace &lt;code&gt;Author\\Package\\Models\\ProductItem&lt;/code&gt; it should be located in &lt;code&gt;./model/src/Models/ProductItem.php&lt;/code&gt; (also uppercase M). So both namespace and folder name must match exactly. On Windows/Mac this is usually not a problem, because the filesystem is case-insensitive, but on a Linux-based host this will cause problems.&lt;/p&gt;\n\n&lt;p&gt;Alternatively you can change your PSR-4 autoloader:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\"autoload\": {\n    \"psr-4\": {\n        \"Author\\\\Package\\\\Models\\\\\": \"../model/src/models\"\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You would have to do that for every directory that does not match your namespace.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["在共享主机中的Lumen项目上找不到类异常", ["\n\n", "I have developed API using Lumen framework and using separately created composer package which I'm planning to use both on Lumen (API) and Laravel (Web site). ", "\n\n", "However I get:", "\n\n", "\n  ", "Class 'Author\\Package\\Models\\ProductItem' not found", "\n", "\n\n", "Locally everything is working (using same Apache and PHP version).\nMy directory structure is:", "\n\n", "|\n\\_ api (Lumen code)\n|\n\\_ model\\\n|  \\_ src\\\n|  |  \\_ migrations\\\n|  |  |\n|  |  \\_ models\\\n|  |  | \\_ ProductItem.php\n|  |  |...\n|  |\n|  \\_ composer.json\n|\n\\_ www (Laravel code)\n", "\n\n", "in ", "api\\composer.json", " I have:", "\n\n", "...\n\"autoload\": {\n    \"psr-4\": {\n        \"App\\\\\": \"app/\",\n        \"Author\\\\Package\\\\\": \"../model/src\"\n    }\n},\n...\n", "\n\n", "Only difference between local and hosting configuration is version of Composer (local is 1.5.2 and remote is 1.4.2).", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有找到sdr.png&lt;br /&gt;你将sdr.png放置在demo.py同目录下即可&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python中使用pyautogui.locateCenterOnScreen（）代码时出错 求解", ["\nimport pyautogui\n", "a", " = pyautogui", ".locateCenterOnScreen", "(", "'sdr.png'", ")\n", "print", "(a)", "\n", "\n", "\nTraceback (most recent call last):\n  ", "File", " ", "\"C:\\Users\\97817\\PycharmProjects\\pythonProject\\demo.py\"", ", ", "line", " ", "2", ", ", "in", " <module>\n    a = pyautogui.locateCenterOnScreen(", "'sdr", ".png')\n  ", "File", " ", "\"C:\\Users\\97817\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pyscreeze-0.1.28-py3.9.egg\\pyscreeze\\__init__.py\"", ", ", "line", " ", "413", ", ", "in", " locateCenterOnScreen\n  ", "File", " ", "\"C:\\Users\\97817\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pyscreeze-0.1.28-py3.9.egg\\pyscreeze\\__init__.py\"", ", ", "line", " ", "373", ", ", "in", " locateOnScreen\n  ", "File", " ", "\"C:\\Users\\97817\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pyscreeze-0.1.28-py3.9.egg\\pyscreeze\\__init__.py\"", ", ", "line", " ", "353", ", ", "in", " locate\n  ", "File", " ", "\"C:\\Users\\97817\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pyscreeze-0.1.28-py3.9.egg\\pyscreeze\\__init__.py\"", ", ", "line", " ", "262", ", ", "in", " _locateAll_python\nFileNotFoundError: [Errno ", "2", "] No such ", "file", " ", "or", " directory: ", "'sdr", ".png'\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;很明显你把Div这个函数写类外面去了&lt;br /&gt;另外&amp;#xff0c;你写的代码和题目没有一毛钱关系&lt;br /&gt;好好审题&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java异常处理问题提问", ["2、异常处理方法二：抛出异常1", "（1）定义Demo类，Demo中包含定义一个求两个整数相除的成员方法div(int a,int b)， 在方法div(int a,int b)上抛出一个Exception异常。", "（2）定义一个可执行类，该类中调用Demo中的成员方法div(4,0)时对系统抛出的异常情况进行处理，输出\"除零啦！\"的提示信息后，按处理捕获到的异常对象进行时的toString()方法操作输出异常信息。最后，系统输出\"System is over!\"的提示信息。", "\n", "能帮忙瞧瞧看报错内容错误该怎么更改吗？", "\n", "public", " ", "class", " Demo{\n    ", "public", " static ", "void", " main(String[] args){\n    try{\n        Demo.Div(", "4", ",", "0", ");\n        ", "System", ".", "out", ".println(", "temp", ");\n} catch(ArithmeticException e){\n    ", "System", ".", "out", ".println(\"除零啦！\\n\"+e);\n}finally{\n    ", "System", ".", "out", ".println(\"System is over!\");\n}\n    ", "public", " static ", "int", " Div(", "int", " a,", "int", " b){\n    ", "int", " ", "temp", "=", "0", ";\n    ", "temp", "=a/b;\n    ", "return", " ", "temp", ";}\n}\n}\n", "\n", "报错内容为", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I need to note before I answer this, that procedural programmers will look at this and think it's dumb :) but I can live with that, this is assuming an OOP application with HTML templating that outputs after the output_buffer is cleaned.&lt;/p&gt;\n\n&lt;p&gt;I always create a try/catch block encompassing the majority of my code in one call usually at the point where I start requiring other files as well as starting an output_buffer whilst in development.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ob_start();\n\ntry {\n    switch($appPage) {\n        case('work'):\n            require_once('im_bored_at_work.php');\n            break;\n        case('home'):\n            require_once('im_a_little_less_bored_at_home.php');\n            break;\n        default:\n            require_once('on_the_fence.php');\n    }\n} catch (Exception $e) {\n    // Handle exception caught and apply formatting\n}\n\n$devOut = ob_get_contents();\nob_end_flush();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To give an example how I would handle the multiple exceptions you need to catch with a custom class&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class CustomExceptionHandler extends Exception {\n\n    private $msg;\n    private $code;\n    private $otherVars;\n\n    public function __construct($msg,$code=0,$otherDebugVar=null){\n        $this-&amp;gt;msg = $msg != null ? $msg : \"An unknown exception was thrown\";\n        $this-&amp;gt;code = $code;\n        $this-&amp;gt;otherVars = $otherDebugVar;\n        parent::__construct($msg,$code);\n    }\n\n    public function getOtherVars() {\n        return $this-&amp;gt;otherVars;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The idea is to just keep the custom information within the exception object, and when you rethrow the exception at the end of a try/catch block as a standard exception you include the formatted custom message, it shouldn't really matter now which Exception handler picked up the original exception as all the info you will need will come downstream and be caught in the original try / catch block.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class BasicTemplate {\n    private $template;\n    private $path;\n    private $contents;\n\n    public function __construct($template, $path) {\n\n        $this-&amp;gt;template = $template;\n        $this-&amp;gt;path = $path;\n        $this-&amp;gt;buildTemplate();\n    }\n\n    private function buildTemplate() {\n\n        if ($contents = @file_get_contents($this-&amp;gt;path . $this-&amp;gt;template)) {\n            $this-&amp;gt;contents = $contents;\n        } else {\n            $e = new CustomExceptionHandler(\"Message\",2,$this-&amp;gt;path . $this-&amp;gt;template);\n            // Do whatever else you want to do with custom exception handling class\n            throw $e;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you need to catch your exception and rethrow it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try {\n    $html = new BasicTemplate($temp,$path);\n} catch {CustomExceptionHandler $e) {\n    throw new Exception(\"Message: {$e-&amp;gt;getMessage()} Other Info: {$e-&amp;gt;getOtherVars()}\",$e-&amp;gt;getCode());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That's the rough idea anyhow, hope it helps.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理程序", ["\n\n", "I have to develop an exception handler that should handle like 5 different type of exceptions. Let's call them simply ", "Ex1", ", ", "Ex2", ", ", "Ex3", "...", "\n\n", "I though of doing a single class called ", "ExHandler", " which will be instantiated like this:", "\n\n", "...\n} catch (Ex1 $e) { $h = new ExHandler($e); $h->render(); }\ncatch (Ex2 $e) { $h = new ExHandler($e); $h->render(); }\ncatch (Ex3 $e) { $h = new ExHandler($e); $h->render(); }\n...\n", "\n\n", "And inside ", "ExHandler", " manage each different Exception differently using ", "$e instance of Ex1, $e instance of Ex2, $e instance of Ex3", "...", "\n\n", "But It doesn't seems a very good practice to me. Is it good? Is there any other way of doing this?\nShould I create an ", "Ex1Handler", ", ", "Ex2Handler", ", ", "Ex3Handler", "...? My S.O.L.I.D spirit tells me something is just wrong here. What is it?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;try 块包含着可能引发异常的代码&amp;#xff0c;except 块则用来捕捉和处理发生的异常。执行的时候&amp;#xff0c;如果 try 块中没有引发异常&amp;#xff0c;则跳过 except 块继续执行后续代码&amp;#xff1b;执行的时候&amp;#xff0c;如果 try块中发生了异常&amp;#xff0c;则跳过 try 块中的后续代码&amp;#xff0c;跳到相应的 except 块中处理异常&amp;#xff1b;异常处理完后&amp;#xff0c;继续执行后续代码&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;所以&amp;#xff0c;不担心程序异常导致中断&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python中的异常处理问题", ["对比try-except结构与if分支结构在异常处理中的优缺点"]], "Tag": "程序设计"}
{"Answer": "修改源码，coding 改成gbk就好了，window shell 默认是gbk编码。", "Konwledge_Point": "异常处理", "Question": ["利用Sublime编写python 异常处理 ", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n &lt;span class=\"hljs-comment\"&gt;/**\n     * 验证邮箱\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; email\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;return&lt;/span&gt;\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;checkEmail&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;email&lt;/span&gt;){\n        &lt;span class=\"hljs-variable\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;flag&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        &lt;span class=\"hljs-title function_\"&gt;try&lt;/span&gt;{\n                &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;check&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;^([a-z0-9A-Z]&amp;#43;[-|_|&lt;span class=\"hljs-char escape_\"&gt;\\\\&lt;/span&gt;.]?)&amp;#43;[a-z0-9A-Z]&amp;#64;([a-z0-9A-Z]&amp;#43;(-[a-z0-9A-Z]&amp;#43;)?&lt;span class=\"hljs-char escape_\"&gt;\\\\&lt;/span&gt;.)&amp;#43;[a-zA-Z]{2,}$&amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-title class_\"&gt;Pattern&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;regex&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Pattern&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;compile&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;check&lt;/span&gt;);\n                &lt;span class=\"hljs-title class_\"&gt;Matcher&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;matcher&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;regex&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;matcher&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;email&lt;/span&gt;);\n                &lt;span class=\"hljs-variable\"&gt;flag&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;matcher&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;matches&lt;/span&gt;();\n            }&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Exception&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;){\n                &lt;span class=\"hljs-variable\"&gt;flag&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;flag&lt;/span&gt;;\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Java异常处理判断邮箱问题", ["使用异常处理完成邮箱地址的判断，    合法邮箱地址必须是在@符号左右出现一个或多个其他字符的字符串    当用户输入的邮件地址不合法时，  抛出异常，异常信息为\"其中邮件地址的合法格式为****@****\"。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你反复要求输入row的值&amp;#xff0c;才会出现这样的情况&lt;br /&gt;把while之前的input拿到while里面去&amp;#xff0c;保证只有一个地方处理输入&amp;#xff0c;避免代码冗余&amp;#xff0c;就能减少很多问题&lt;br /&gt;根源其实是top_row利用了row的值做计算&amp;#xff0c;而row的值改变后top_row并没有重新赋值导致的&lt;br /&gt;而更根源的问题就是因为你同样的代码复制来粘贴去&amp;#xff0c;少粘了一行就会出bug&lt;br /&gt;你应该封装一下&amp;#xff0c;或者优化你的逻辑&amp;#xff0c;不要总是出现重复的代码段&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["进入while 循环再跳出循环执行出现异常，如何解决？(语言-python)", ["\n", "\n", "\n", "代码正常进入while循环后，当跳出while循环时执行后面代码就出异常了，不进入while循环执行正常。问题出在哪里？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有初始化变量&amp;#xff0c;debug正常&amp;#xff0c;release偶尔异常&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["0xC00001A5: 检测到无效的异常处理程序例程。", ["Debug版本可以正常跑通，在Release版本里就出现了", "\n\n", "先记录一下现象，等到解决问题的时候，再回来说明解决方法。"]], "Tag": "程序设计"}
{"Answer": "```\r\n int lastnum = getNum(source.getProperty(\"fileName\"));\r\n\t    public static int getNum(String Filename) {\r\n\t        try {\r\n\t        \tInputStream myxls;\r\n\t        \tmyxls = new FileInputStream(Filename);\r\n\t        \tsr = new XSSFWorkbook(myxls);\r\n\t        \tXSSFSheet sheet = sr.getSheetAt(0);// 第一个工作表\r\n\t        \treturn sheet.getLastRowNum();// 获取第一个工作表的行数\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t}\r\n\t    }\r\n```", "Konwledge_Point": "异常处理", "Question": ["小白求教，异常处理问题", ["int lastnum = getNum(source.getProperty(\"fileName\"));\npublic static int getNum(String Filename) throws IOException {\n    InputStream myxls;\n    myxls = new FileInputStream(Filename);\n    sr = new XSSFWorkbook(myxls);\n    XSSFSheet sheet = sr.getSheetAt(0);// 第一个工作表\n    return sheet.getLastRowNum();// 获取第一个工作表的行数\n}\n这段代码第一行出这样的错：\n缺省构造函数不能处理隐式超构造函数抛出的异常类型 IOException。必须定义显式构造函数\n这是什么意思啊？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;##1&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nalist&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;12&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;23&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;1.2&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;35Y&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;2.3&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;---&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n\nlt1&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\nlt2&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\nsm&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; alist:\n    try:\n        a&amp;#61;&lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(i)\n    except:\n        lt2&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        lt1&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i)\n        sm&amp;#43;&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;.join(lt1)&lt;/span&gt;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;&amp;#43;str(sm))\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;列表中{}不是数值型数据&amp;#39;&lt;/span&gt;.format(lt2)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/766295049076122.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;##2&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;a&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\nntuple&amp;#61;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;,[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],&lt;span class=\"hljs-number\"&gt;3.6&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        b&amp;#61;ntuple[i]\n        c&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;/b\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ZeroDivisionError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;除数不能为0!&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; TypeError &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(b)&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;被除数为整数&amp;#xff0c;除数不能为字符串!&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; b &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;被除数为整数&amp;#xff0c;除数不能为空值!&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(b)&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;被除数为整数&amp;#xff0c;除数不能为列表!&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; IndexError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;访问元组越界!当前索引值为{}&amp;#xff0c;超出索引最大值{}!&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(i,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(ntuple)))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/742184149076114.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;##3  你的结果图是2 的&amp;#xff0c;不知道你的结果截图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;check_grade&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;grade&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; grade&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; grade&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;raise&lt;/span&gt; ValueError (&lt;span class=\"hljs-string\"&gt;&amp;#39;成绩不在0~100之间&amp;#39;&lt;/span&gt;)\n        \nstu_grade&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;88&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;钱五&amp;#39;&lt;/span&gt;:-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;张三丰&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;王五&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;钱六&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;111&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;王一&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;小李&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;张飞&amp;#39;&lt;/span&gt;:-&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k,v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; stu_grade.items():\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        check_grade(v)\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; Exception &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; e:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(k,e)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248106749076186.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["3个关于python异常处理及调试的问题", ["3个关于python异常处理及调试的问题：", "1、求给定列表中数据类数据的和，要求使用try……excpt……else语句，输出结果须与图片一致。【参考代码行数：11行】", "\n", "\n", "2、对除法操作过程中可能出现的多种异常分别进行处理，须处理三种异常：ZeroDivisionError，TypeError，IndexError。输出结果须与图片一致。【参考代码行数：19行】", "\n", "\n", "3、写一个函数check_grade(grade)，当grade不在0～100之间时，用raise 抛出一个异常。对给定的stu_grade中的学生成绩进行检测，通过try……except进行捕获，并按要求输出结果。【参考代码行数：10行】", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路 try 外面加一个while True&amp;#xff0c;如果能正常运行没有走到except那就结束循环break &amp;#xff0c;如果捕捉到了错误那么继续下次循环&amp;#xff0c;不用写代码了吧&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Python的异常处理问题", ["如题，用Python的try……except异常处理结构来解决，但是我有点不明白如何做到当不符合要求时，可以再让用户输入一个整数，直到是整数为止。同时也请帮我看看我的代码的问题，谢谢！", "\n", "def", " ", "ifTrue", "():\n       ", "try", ":\n            num =", "int", " (", "input", " (", "\"请输入一个整数:\"", ")\n       ", "except", " AttributeError :\n            ", "print", " (", "\"输入不符合要求，请重新输入！\"", ")\n             ifTrue()\n       ", "print", " (", "\"输入正确，你输入的整数为:\"", ",num)\n\nifTrue()\n\n"]], "Tag": "程序设计"}
{"Answer": "如果dao层出现异常，建议还是throw到service层吧，否则怎么处理事务问题那？当然dao层能恢复的就直接在dao层恢复了。\r\n日志的话，不一定是抛例外了才记录日志吧，有的是调试用的，否则部署了以后，很难调试，建议外部的一些接口上面（比如webservice）还是要有日志，便于确定缺陷是出在service这里还是客户端上面。", "Konwledge_Point": "异常处理", "Question": ["关于异常和日志的处理", ["各位好，我有两个方面的疑问。", "\n一.异常处理。", "\n假设我有web层--->service层--->dao层。", "\n如果我在dao层出现了异常，比如DataAccessException。我该如何处理呢？", "\n我试了一下，觉得有以下几种方案：", "\n\n", "1.最简单的是在web层捕获DataAccessException然后处理。", "\n\n", "2.在dao层捕获，但不处理，像service层抛，知道抛到web层处理。", "\n但是这样做，每一层都会有", "\ntry  catch 语句，感觉很麻烦。", "\n\n", "3.同2类似，但是使用spring的annouation注释，相对减少try catch", "\n我想请问那种方法好点？", "\n\n", "还有我觉得可以自己定义一个GeneralException继承自RuntimeException。", "\n每次补货异常，但是抛出这个GeneralException这个异常，然后统一处理。", "\n\n", "二.日志的处理", "\n\n", "我的解决方法有以下几点：", "\n\n", "1.将需要记入日志的类里面写上诸如：", "\nLogger=LogFactory.getLogger();", "\nlogger.Info()之类的语句？", "\n但是这样会做很多类都会有相同的日志语句。", "\n\n", "2.利用spring aop 实现。", "\n会不会有性能问题？", "\n\n", "3.在自定义异常的那个GeneralException类里加上日志功能。", "\n每次处理异常的时候同时处理日志。", "\n\n", "请问那种方法好，或者有什么更好的方法？", "\n\n", "                                 谢谢回答。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You should either handle an error, or not handle it but delegate it to a higher level (to the caller). Handling the error and returning it is bad practice as if the caller also does the same, the error might get handled several times.&lt;/p&gt;\n\n&lt;p&gt;Handling an error means inspecting it and making a decision based on that, which may be you simply log it, but that also counts as \"handling\" it.&lt;/p&gt;\n\n&lt;p&gt;If you choose to not handle but delegate it to a higher level, that may be perfectly fine, but don't just return the error value you got, as it may be meaningless to the caller without context.&lt;/p&gt;\n\n&lt;h2&gt;Annotating errors&lt;/h2&gt;\n\n&lt;p&gt;A really nice and recommended way of delegation is &lt;strong&gt;Annotating errors&lt;/strong&gt;. This means you create and return a &lt;em&gt;new&lt;/em&gt; error value, but the old one is also wrapped in the returned value. The wrapper provides the context for the wrapped error.&lt;/p&gt;\n\n&lt;p&gt;There is a public library for annotating errors: &lt;a href=\"https://github.com/pkg/errors\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;github.com/pkg/errors&lt;/code&gt;&lt;/a&gt;; and its godoc: &lt;a href=\"https://godoc.org/github.com/pkg/errors\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It basically has 2 functions: 1 for &lt;a href=\"https://godoc.org/github.com/pkg/errors#Wrap\" rel=\"nofollow noreferrer\"&gt;wrapping&lt;/a&gt; an existing error:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func Wrap(cause error, message string) error\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And one for &lt;a href=\"https://godoc.org/github.com/pkg/errors#Cause\" rel=\"nofollow noreferrer\"&gt;extracting&lt;/a&gt; a wrapped error:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func Cause(err error) error\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using these, this is how your error handling may look like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (o *ObjectOne) CheckValue() error {\n    if o.someValue == 0 {\n        return errors.New(\"Object1 illegal state: value is 0\")\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the second level:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (oT *ObjectTwoHigherLevel) CheckObjectOneIsReady() error {\n    if err := oT.objectOne.CheckValue(); err != nil {\n        return errors.Wrap(err, \"Object2 illegal state: Object1 is invalid\")\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the third level: call only the 2nd level check:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (oTh *ObjectThreeHiggerLevel) CheckObjectTwoIsReady() error {\n    if err := oTh.ObjectTwoHigherLevel.CheckObjectOneIsReady(); err != nil {\n        return errors.Wrap(err, \"Object3 illegal state: Object2 is invalid\")\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that since the &lt;code&gt;CheckXX()&lt;/code&gt; methods do not handle the errors, they don't log anything. They are delegating annotated errors.&lt;/p&gt;\n\n&lt;p&gt;If someone using &lt;code&gt;ObjectThreeHiggerLevel&lt;/code&gt; decides to handle the error:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;o3 := &amp;amp;ObjectThreeHiggerLevel{}\nif err := o3.CheckObjectTwoIsReady(); err != nil {\n    fmt.Println(err)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The following nice output will be presented:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Object3 illegal state: Object2 is invalid: Object2 illegal state: Object1 is invalid: Object1 illegal state: value is 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There is no pollution of multiple logs, and all the details and context are preserved because we used &lt;code&gt;errors.Wrap()&lt;/code&gt; which produces an error value which formats to a &lt;code&gt;string&lt;/code&gt; which preserves the wrapped errors, recursively: the &lt;em&gt;error stack&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can read more about this technique in blog post:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully\" rel=\"nofollow noreferrer\"&gt;Dave Cheney: Don’t just check errors, handle them gracefully&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;\"Extending\" errors&lt;/h2&gt;\n\n&lt;p&gt;If you like things simpler and / or you don't want to hassle with external libraries and you're fine with not being able to extract the original error (the exact error &lt;em&gt;value&lt;/em&gt;, not the error &lt;em&gt;string&lt;/em&gt; which you can), then you may simply extend the error with the context and return this new, extended error.&lt;/p&gt;\n\n&lt;p&gt;Extending an error is easiest done by using &lt;a href=\"https://golang.org/pkg/fmt/#Errorf\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;fmt.Errorf()&lt;/code&gt;&lt;/a&gt; which allows you to create a \"nice\" formatted error message, and it returns you a value of type &lt;code&gt;error&lt;/code&gt; so you can directly return that.&lt;/p&gt;\n\n&lt;p&gt;Using &lt;code&gt;fmt.Errorf()&lt;/code&gt;, this is how your error handling may look like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (o *ObjectOne) CheckValue() error {\n    if o.someValue == 0 {\n        return fmt.Errorf(\"Object1 illegal state: value is %d\", o.someValue)\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the second level:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (oT *ObjectTwoHigherLevel) CheckObjectOneIsReady() error {\n    if err := oT.objectOne.CheckValue(); err != nil {\n        return fmt.Errorf(\"Object2 illegal state: %v\", err)\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the third level: call only the 2nd level check:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func (oTh *ObjectThreeHiggerLevel) CheckObjectTwoIsReady() error {\n    if err := oTh.ObjectTwoHigherLevel.CheckObjectOneIsReady(); err != nil {\n        return fmt.Errorf(\"Object3 illegal state: %v\", err)\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the following error message would be presented at &lt;code&gt;ObjectThreeHiggerLevel&lt;/code&gt; should it decide to \"handle\" it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;o3 := &amp;amp;ObjectThreeHiggerLevel{}\nif err := o3.CheckObjectTwoIsReady(); err != nil {\n    fmt.Println(err)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The following nice output will be presented:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Object3 illegal state: Object2 illegal state: Object1 illegal state: value is 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Be sure to also read blog post: &lt;a href=\"https://blog.golang.org/error-handling-and-go\" rel=\"nofollow noreferrer\"&gt;Error handling and Go&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["从多个抽象级别处理错误的最佳实践", ["\n\n", "I wondering what is the best way to ", "handle error form multiple level abstraction in go", ". Every time if I must add a new level abstraction to program, I am forced to transfer error code from level less to level high. Thereby is duplicate communitaces in log file or I must remmember to delete communicate form level low and transfer him to level higher. Below simply example. I skipped creating each object to more shortly and celar code, but I think You understand my problem ", "\n\n", "type ObjectOne struct{\n    someValue int\n}\n\nfunc (o* ObjectOne)CheckValue()error{\n    if o.someValue == 0 {\n        SomeLogger.Printf(\"Value is 0 error program\") // communicate form first level abstraction to logger\n        return errors.New(\"Internal value in object is 0\")\n    }\n    return nil\n}\n\ntype ObjectTwoHigherLevel struct{\n    objectOne ObjectOne\n}\n\nfunc (oT*  ObjectTwoHigherLevel)CheckObjectOneIsReady() error{\n    if err := oT.objectOne.CheckValue() ; err != nil{\n        SomeLogger.Printf(\"Value in objectOne is not correct for objectTwo %s\" , err) //  second communicate\n        return  err\n    }\n    return nil\n}\n\ntype ObjectThreeHiggerLevel struct{\n    oT ObjectTwoHigherLevel\n}\n\nfunc (oTh* ObjectThreeHiggerLevel)CheckObjectTwoIsReady()error{\n    if err := oTh.oT.CheckObjectOneIsReady() ; err != nil{\n        SomeLogger.Printf(\"Value in objectTwo is not correct for objectThree %s\" , err)\n    return err\n    }\n    return nil\n}\n", "\n\n", "In result in log file I get duplicate posts", "\n\n", "Value is 0 error program \nValue in objectOne is not correct for objectTwo Internal value in object is 0 \nValue in objectTwo is not correct for objectThree Internal value in object is 0\n", "\n\n", "In turn if I only transfer some ", "err", " to higher level without additional log I lost information what happend in each level. ", "\n\n", "How this solve ? How privent duplicate communicates ? Or My way is the good and the only ?", "\n\n", "Problem is more frustrating if I create a few object which search something in database on a few abstraction level then I get also few lines form this same task in logFile. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "1. 檢查 pjsipDll.dll 是否只能運行於 x86 或 x64 作業系統.\r\n2. 檢查加載DLL路徑是否存在 pjsipDll.dll.", "Konwledge_Point": "异常处理", "Question": ["未经处理的异常:  System.DllNotFoundException: 无法加载 DLL“*****.dll”: 动态链接库(DLL)初始化例程失败。", ["软件运行时弹框提示", "\n未经处理的异常:  System.DllNotFoundException: 无法加载 DLL“pjsipDll.dll”: 动态链接库(DLL)初始化例程失败。 (异常来自 HRESULT:0x8007045A)。", "\n\n", "部分电脑运行正常，部分会出现此错误", "\n\n", "有没有懂的大佬解答下 该如何处理"]], "Tag": "程序设计"}
{"Answer": "程式碼十分正常。試試用telnet，駁上proxy，取檔有沒有問題。\r\n\r\n$ telnet 12.161.250.205 1080\r\nGET http://www.java.com/ http/1.1\r\n\r\n按兩下Enter。看看結果是否正常。\r\n\r\n若是生產用，試用begin/rescue/end來補救錯誤。", "Konwledge_Point": "异常处理", "Question": ["Net::HTTP::Proxy doesn't work", ["想使用Net::HTTP的代理功能访问网页，代码如下", "\n\n", "[code=\"ruby\"]require 'net/http'", "\n\n", "proxy_addr = '12.161.250.205'", "\nproxy_port = 1080", "\n\n", "url = URI.parse('", "http://www.iteye.com'", ")", "\nres = Net::HTTP::Proxy(proxy_addr , proxy_port ).start(url.host, url.port) {|http|", "\nhttp.get('/')", "\n}[/code]", "\n\n", "结果报错如下：", "\n\n", "c:/ruby/lib/ruby/1.8/net/protocol.rb:135:in ", "sysread': end of file reached (EOFE", "\nrror)", "\n        from c:/ruby/lib/ruby/1.8/net/protocol.rb:135:in", "rbuf_fill'", "\n        from c:/ruby/lib/ruby/1.8/timeout.rb:62:in ", "timeout'", "\n        from c:/ruby/lib/ruby/1.8/timeout.rb:93:in", "timeout'", "\n        from c:/ruby/lib/ruby/1.8/net/protocol.rb:134:in ", "rbuf_fill'", "\n        from c:/ruby/lib/ruby/1.8/net/protocol.rb:116:in", "readuntil'", "\n        from c:/ruby/lib/ruby/1.8/net/protocol.rb:126:in ", "readline'", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:2020:in", "read_status_line'", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:2009:in ", "read_new'", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:1050:in", "request'", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:772:in ", "get'", "\n        from web1.rb:22", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:543:in", "start'", "\n        from c:/ruby/lib/ruby/1.8/net/http.rb:440:in `start'", "\n        from web1.rb:21", "\n\n", "Thanks in Advance"]], "Tag": "程序设计"}
{"Answer": "```\r\n# -*- coding:utf-8 -*-\r\n\r\nimport random\r\n\r\n\r\ndef Caiziyouxi():\r\n    secret = random.randint(1, 20)\r\n    guess = 0  # 游戏玩家输入的数字\r\n    tries = 0\r\n    listHis1 = []  # 太小\r\n    listHis2 = []  # 太大\r\n    print(\"猜字游戏开始！\")\r\n    while True:\r\n        if tries == 0:\r\n            guess = int(input(\"请输入一个1到20之间的整数！\\n:\"))\r\n        tries = tries + 1\r\n        if len(listHis1) ==0 or len(listHis2) ==0:\r\n            if guess &lt; secret:\r\n                listHis1.append(guess)\r\n                print(\"listHis1=\", listHis1, \"listHis2=\", listHis2)\r\n                print(\"你输入的%d太小了，请重新输入!\" % (guess))\r\n                guess = int(input(\"请输入一个%d到20之间的整数！\\n:\"%(guess)))\r\n            elif guess &gt; secret:\r\n                listHis2.append(guess)\r\n                print(\"listHis1=\", listHis1, \"listHis2=\", listHis2)\r\n                print(\"你输入的%d太大了，请重新输入!\" % (guess))\r\n                guess = int(input(\"请输入一个1到%d之间的整数！\\n:\" % (guess)))\r\n            elif guess == secret:\r\n                print(\"恭喜你猜对了！真确答案是\", guess)\r\n                break\r\n        else:\r\n            if guess &lt; secret:\r\n                listHis1.append(guess)\r\n                print(\"listHis1=\", listHis1, \"listHis2=\", listHis2)\r\n                print(\"你输入的%d太小了，请重新输入!\" % (guess))\r\n                guess = int(input(\"请输入一个\"+str(listHis1[-1])+\"到\"+str(listHis2[-1])+\"之间的整数！\\n:\"))\r\n            elif guess &gt; secret:\r\n                listHis2.append(guess)\r\n                print(\"listHis1=\", listHis1, \"listHis2=\", listHis2)\r\n                print(\"你输入的%d太大了，请重新输入!\" % (guess))\r\n                guess = int(input(\"请输入一个\" + str(listHis1[-1]) + \"到\" + str(listHis2[-1]) + \"之间的整数！\\n:\"))\r\n            elif guess == secret:\r\n                print(\"恭喜你猜对了！真确答案是\", guess)\r\n                break\r\n\r\n\r\nif __name__ == '__main__':\r\n    Caiziyouxi()\r\n\r\n```", "Konwledge_Point": "异常处理", "Question": ["猜字游戏输出结果异常？Python萌新。求解决方案", ["import random", "\nsecret = random.randint(1, 99)", "\nguess = 0", "\ntries = 0", "\nprint(\"AHOY! I'm the Dread Pirate Roberts, and I have a secret!\")", "\nprint(\"It is a number from 1 to 99. I'll give you 6 tries.\")", "\nwhile guess != secret and tries < 6:", "\n    guess = input(\"What's yer guess?\")", "\n    if guess < secret:", "\n        print(\"Too low,ye scurvy dog!\")", "\n    elif guess > secret:", "\n        print(\"Too high, landlubber!\")", "\n\n", "tries = tries + 1\n", "\n\n", "if guess == secret:", "\n    print(\"Avast! Ye got it! Found my secret, ye did!\")", "\nelse:", "\n    print(\"NO more guess! Better luck next time,matey!\")", "\n    print(\"The secret number was\",secret)", "\n\n", "输出结果：\n", "\n\n", "AHOY! I'm the Dread Pirate Roberts, and I have a secret!", "\nIt is a number from 1 to 99. I'll give you 6 tries.", "\nWhat's yer guess?50", "\n    Traceback (most recent call last):", "\n  File \"D:/HQZ/Game.py\", line 9, in ", "\n    if guess < secret:", "\nTypeError: '<' not supported between instances of 'str' and 'int'"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;printStackTrace()会有阻塞&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于java异常处理的疑问", ["\n", "public", " ", "class", " ", "CircleWithException", " ", "{\n    ", "private", " ", "double", " radius;\n\n    ", "private", " ", "static", " ", "int", " numberOfObjects = ", "0", ";\n\n    ", "public", " ", "CircleWithException", "()", " ", "{\n        ", "this", "(", "1.0", ");\n    }\n\n    ", "public", " ", "CircleWithException", "(", "double", " newRadius)", " ", "{\n        setRadius(newRadius);\n        ++numberOfObjects;\n    }\n\n    ", "public", " ", "double", " ", "getRadius", "()", " ", "{\n        ", "return", " radius;\n    }\n\n    ", "public", " ", "void", " ", "setRadius", "(", "double", " newRadius)", " ", "{\n        ", "if", " (newRadius >= ", "0", ")\n            radius = newRadius;\n        ", "else", "\n            ", "throw", " ", "new", " IllegalArgumentException(", "\"Radius cannot be negative\"", ");\n    }\n\n    ", "public", " ", "static", " ", "int", " ", "getNumberOfObjects", "()", " ", "{\n        ", "return", " numberOfObjects;\n    }\n\n    ", "public", " ", "double", " ", "findArea", "()", " ", "{\n        ", "return", " radius * radius * ", "3.14159", ";\n    }\n}\n\n", "\n", "\n", "public", " ", "class", " ", "TestCircleWithException", " ", "{\n    ", "public", " ", "static", " void main(", "String", "[] args) {\n        ", "try", " {\n            CircleWithException c1 = ", "new", " ", "CircleWithException", "(", "5", ");\n            CircleWithException c2 = ", "new", " ", "CircleWithException", "(", "0", ");\n            CircleWithException c3 = ", "new", " ", "CircleWithException", "(", "-5", ");\n        }\n        ", "catch", " (IllegalArgumentException ex) {\n            ex.printStackTrace();\n        }\n\n        System.out.println(", "\"Number of objects created: \"", " +\n                CircleWithException.getNumberOfObjects());\n    }\n}\n\n", "\n", "这是全部的代码，在运行多次的时候会有两种不同的情况", "第一种是这样异常处理在后面打印出来", "\n", "然后第二种情况是异常处理在前面打印，然后是代码中最后一句打印内容", "\n", "\n", "很不能理解，Java中同样的代码为何能有两种不同的情况，希望有人可以解答一下，非常感谢"]], "Tag": "程序设计"}
{"Answer": "就是这个递归，代码网上现成的，遍历时判断是否是文件夹，是就计数加一", "Konwledge_Point": "异常处理", "Question": ["c# 求指定的文件夹中子文件夹的个数？求指点", ["希望在一个窗体中实现 "]], "Tag": "程序设计"}
{"Answer": "你的successFunction里加在第一行这么一句，应该能够解决你的问题：\r\njQuery(\"#toolbar\").clearGridData()\r\n\r\n\r\n但是我不明白你为什么用datatype: getProducts,这种自定方式获取后台数据自己来添加行呢。\r\n为何不直接用：\r\nurl:'/myInfo_Ajax/?ids={{ids}}',   \r\ndatatype: 'json',", "Konwledge_Point": "异常处理", "Question": ["jqGrid分页、搜索异常", [" ", "\n\n", "使用datatype: \"local\"，JSON数据写在页面中时分页、搜索一切正常。 ", "\n\n", "但使用datatype: getProducts, 时点击搜索、排序时数据每次拷贝了一份，（即：原数据有10条，操作后就成20条。。。。）。不知道哪位大仙遇见过没？ ", "\n\n", " ", "\n\n", "<script type=\"text/javascript\">\n            jQuery(document).ready(function(){\n                    jQuery(\"#toolbar\").jqGrid({ \n                    //url:'/getJgGridDatas/', \n                    datatype: getProducts,\n                    height: 500,\n                    width: 1050, \n                    colNames:['地市','县区', '历史','中英文', '人数','类型', '公式','趋势', 'Hel','物理', 'Part'], \n                    colModel:[ \n                            {name:'Name',index:'bureauName', width:50,rowspan:2}, \n                            {name:'ssdName',index:'bscName', width:150}, \n                            {name:'editi',index:'editionName', width:60,align:\"center\"}, \n                            {name:'China_English_Name',index:'China_English_Name', width:50,align:\"center\"}, \n                            {name:'fn_Num',index:'fn_Num', width:50,sorttype:'int',align:\"center\"}, \n                            {name:'business',index:'business_type', width:50,align:\"center\"}, \n                            {name:'Num',index:'bts_Num', width:50,align:\"center\"}, \n                            {name:'sdf_Num',index:'cdmach_Num', width:50,align:\"center\"}, \n                            {name:'dfdf_type',index:'abis_type', width:50,align:\"center\"}, \n                            {name:'rew_an_type',index:'bsc_an_type', width:50,align:\"center\"}, \n                            {name:'ddf_type',index:'a_type', width:50,align:\"center\"} \n                        ], \n                    rowNum:20, \n                    rowTotal: 20, \n                    rowList : [20,40,60], \n                    loadonce:false, \n                    mtype: \"GET\", \n                    rownumbers: true, \n                    rownumWidth: 40, \n                    gridview: true, \n                    pager: '#ptoolbar', \n                    sortname: 'bureauName',\n                    viewrecords: true, //是否显示行数\n                    sortorder: \"asc\", \n                    caption: \"实例\" \n                });\n                \n                jQuery(\"#toolbar\").jqGrid('navGrid','#ptoolbar',{del:false,add:false,edit:false,search:true}); \n                jQuery(\"#toolbar\").jqGrid('filterToolbar',{stringResult: true,searchOnEnter : false}); \n            })\n            \n            function successFunction(jsondata) {\n                var a = eval(jsondata);\n                var m = a.rows;\n                for(var i=0;i<=m.length;i++){\n                    jQuery(\"#toolbar\").jqGrid('addRowData',i+1,m[i]);\n                }\n            }\n            \n            function getProducts() {\n                $.ajax({\n                    url: '/myInfo_Ajax/?ids={{ids}}',\n                    data: \"{}\",  ,\n                    dataType: \"json\",\n                    type: \"POST\",\n                    contentType: \"application/json; charset=gbk\",\n                    success: successFunction\n                });\n            }\n        </script>", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "则 re.findall  的简单用法（返回string中所有与pattern相匹配的全部字串，返回形式为数组）语法：\r\n\r\n\r\n\t\t\t1\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfindall(pattern, string, flags=0)\r\n\t\t\t\r\n\t\timport re Python 正则表达式 re findall 方法能够以列表的形式返回能匹配的子串 # print (help(re.findall))# print (dir(re.findall)) findall查找全部r标识代表后面是正则的语句\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v1 = re.findall(r\"docs\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v1)\r\n\r\n\t\t\t# ['docs']\r\n\t\t\t\r\n\t\t\r\n符号^表示匹配以https开头的的字符串返回,\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v2 = re.findall(r\"^https\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v2)\r\n\r\n\t\t\t# ['https']\r\n\t\t\t\r\n\t\t　　\r\n\r\n用$符号表示以html结尾的字符串返回,判断是否字符串结束的字符串\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v3 = re.findall(r\"html$\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v3)\r\n\r\n\t\t\t# ['html']\r\n\t\t\t\r\n\t\t\r\n# [...]匹配括号中的其中一个字符\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v4 = re.findall(r\"[t,w]h\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v4)\r\n\r\n\t\t\t# ['th', 'wh']\r\n\t\t\t\r\n\t\t\r\n“d”是正则语法规则用来匹配0到9之间的数返回列表\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\r\n\t\t\t4\r\n\r\n\t\t\t5\r\n\r\n\t\t\t6\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v5 = re.findall(r\"\\d\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tregular_v6 = re.findall(r\"\\d\\d\\d\",\"https://docs.python.org/3/whatsnew/3.6.html/1234\")\r\n\r\n\t\t\tprint (regular_v5)\r\n\r\n\t\t\t# ['3', '3', '6']\r\n\r\n\t\t\tprint (regular_v6)\r\n\r\n\t\t\t# ['123']\r\n\t\t\t\r\n\t\t\r\n小d表示取数字0-9，大D表示不要数字，也就是出了数字以外的内容返回\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v7 = re.findall(r\"\\D\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v7)\r\n\r\n\t\t\t# ['h', 't', 't', 'p', 's', ':', '/', '/', 'd', 'o', 'c', 's', '.', 'p', 'y', 't', 'h', 'o', 'n', '.', 'o', 'r', 'g', '/', '/', 'w', 'h', 'a', 't', 's', 'n', 'e', 'w', '/', '.', '.', 'h', 't', 'm', 'l']\r\n\t\t\t\r\n\t\t\r\n“w”在正则里面代表匹配从小写a到z,大写A到Z，数字0到9\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v8 = re.findall(r\"\\w\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v8)\r\n\r\n\t\t\t#['h', 't', 't', 'p', 's', 'd', 'o', 'c', 's', 'p', 'y', 't', 'h', 'o', 'n', 'o', 'r', 'g', '3', 'w', 'h', 'a', 't', 's', 'n', 'e', 'w', '3', '6', 'h', 't', 'm', 'l']\r\n\t\t\t\r\n\t\t\r\n\r\n“W”在正则里面代表匹配除了字母与数字以外的特殊符号\r\n\r\n\r\n\t\t\t1\r\n\r\n\t\t\t2\r\n\r\n\t\t\t3\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tregular_v9 = re.findall(r\"\\W\",\"https://docs.python.org/3/whatsnew/3.6.html\")\r\n\r\n\t\t\tprint (regular_v9)\r\n\r\n\t\t\t# [':', '/', '/', '.', '.', '/', '/', '/', '.',\r\n求采纳缺几个c币谢谢大佬", "Konwledge_Point": "异常处理", "Question": ["刚接触到爬虫，使用 re.findall()的时候老是抛出这个错误，是正则表达式的错误么？", ["代码如下：", "\n\n", "import urllib.request\nimport re\n\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    return html\n\ndef getImg(html):\n    reg = r'src=\"(.+?\\.jpg)\"pic_ext'\n    imgre = re.compile(reg)\n    imglist = re.findall(imgre,html)\n    x = 0\n    for imgurl in imglist:\n        urllib.urlretrieve(imgurl,'D:\\E\\%s.jpg' % x)\n        x+=1\n\n\nif __name__ == '__main__':\n    html = getHtml(\"https://image.baidu.com/search/index?tn=baiduimage&ct=201326592&lm=-1&cl=2&ie=gb18030&word=%C3%C0%C5%AE&fr=ala&ala=1&alatpl=adress&pos=0&hs=2&xthttps=111111\")\n    print(getImg(html))\n", "\n\n", "抛错是这样的：", "\n\n", "   File \"E:/SRCS/python/DownPic/GetPic/GetPic.py\", line 12, in getImg\n    imglist = re.findall(imgre,html)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36\\lib\\re.py\", line 222, in findall\n    return _compile(pattern, flags).findall(string)\nTypeError: cannot use a string pattern on a bytes-like object\n"]], "Tag": "程序设计"}
{"Answer": "catch(InputMismatchException e){\r\n System.out.println(\"请输入数字\");\r\n\r\n }\r\n//我的弟弟你这是抓住异常，不是抛出异常，你这是上面还是while(true)你说咋停下来", "Konwledge_Point": "异常处理", "Question": ["Java，猜数字游戏，当捕获输入异常时会进行无限循环，求解", ["public class Csz {", "\n    public static void main(String[] args) {", "\n        Scanner sc=new Scanner(System.in);", "\n        Random r=new Random();", "\n        int a=r.nextInt(1000);", "\n        System.out.println(\"---------猜数字游戏--------\");", "\n        System.out.println(\"\\t范围：1~1000\");", "\n        System.out.println(\"请输入一个数字\");", "\n        while(true){", "\n            try{", "\n                int b=sc.nextInt();", "\n                if(b>0&&b>a){", "\n                    System.out.println(\"太大了，小一点\");", "\n                }else if(b>0&&b", "\n                    System.out.println(\"太小了，大一点\");", "\n                }else if(b>0&&b==a){", "\n                    System.out.println(\"恭喜你，答对了\");", "\n                    break;", "\n                }else if(b\n                    System.out.println(\"请输入正整数\");", "\n                }else if(b>1000){", "\n                    System.out.println(\"请输入1~1000的整数\");", "\n                }", "\n            }catch(InputMismatchException e){", "\n                System.out.println(\"请输入数字\");", "\n            }", "\n        }", "\n    }", "\n}", "\npublic class Csz {", "\n    public static void main(String[] args) {", "\n        Scanner sc=new Scanner(System.in);", "\n        Random r=new Random();", "\n        int a=r.nextInt(1000);", "\n        System.out.println(\"---------猜数字游戏--------\");", "\n        System.out.println(\"\\t范围：1~1000\");", "\n        System.out.println(\"请输入一个数字\");", "\n        while(true){", "\n            try{", "\n                int b=sc.nextInt();", "\n                if(b>0&&b>a){", "\n                    System.out.println(\"太大了，小一点\");", "\n                }else if(b>0&&b", "\n                    System.out.println(\"太小了，大一点\");", "\n                }else if(b>0&&b==a){", "\n                    System.out.println(\"恭喜你，答对了\");", "\n                    break;", "\n                }else if(b\n                    System.out.println(\"请输入正整数\");", "\n                }else if(b>1000){", "\n                    System.out.println(\"请输入1~1000的整数\");", "\n                }", "\n            }catch(InputMismatchException e){", "\n                System.out.println(\"请输入数字\");", "\n            }", "\n        }", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "合法性的话在method1里面验证比较好，因为不可能每个调用它方法都去给它加合法性验证，这样程序冗余。\r\n    异常处理的话，如果method1方法中会出异常，method2调用method1的方法，如果希望运行method1程序的时候不因method1方法抛异常而终止，那就在method1里面处理。如果method1把异常向上抛出，那就在method2里面处理异常。像这种情况method1方法里面必须有向上抛异常的，method2里面最好也有异常处理。个人感觉method1里面不影响程序运行的异常就自己处理，影响程序运行的就向上抛，在method2里面处理。", "Konwledge_Point": "异常处理", "Question": ["JAVA异常处理的时机的困惑", ["例如，对一个被使用类方法method1，和使用者method2", "1 method1 的参数合法性验证在method1进行还是在method2进行？", "2 method1 可能产生exception直接throw给使用者method2还是在method1自身进行处理？", "问题补充", "zzpxingfu 写道", "这有篇文章你看看吧", "Java中如何处理异常", "\n", "其实我问的问题是，怎样分配处理异常的责任...", "例如我调用同事写的一个方法，但它居然没有对参数进行判断，没有对异常进行处理，于是团队在考虑怎样解决这个问题。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;If you are sure there is one row for your query : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$sql = \"SELECT * FROM table WHERE id = '1'\";\n$query = $this-&amp;gt;db-&amp;gt;query($sql);\n\nif($query-&amp;gt;num_rows() == 1)\n{\n    $row = $query-&amp;gt;row();\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;2.If the result may contain multiple rows :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$sql = \"SELECT * FROM table\";\n$query = $this-&amp;gt;db-&amp;gt;query($sql)-&amp;gt;result();\n\nif(!empty($query))\n{\n   foreach($query as $row)\n    {\n      //do something\n    }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;isset&lt;/code&gt; will throw warning if the variable does not exist. &lt;code&gt;empty()&lt;/code&gt; will not throw that warning&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP CodeIgniter异常处理", ["\n\n", "I am working on a system where every thing works fine as long as data is present in the database. But I wanted to test it against empty database. When I did that I got similar issues on almost every page. ", "\n\n", "\n  ", "An uncaught Exception was encounteredType: ErrorMessage: Call to a\n  member function row() on boolean", "\n", "\n\n", "I know what is issue here, but I want to know how I should handle the exception. I don't want the error message to disturb my system in case of empty database. One solution is turning off ", "error_reporting", " but I am looking for a better solution.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/415405527056187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["平均成绩计算异常处理", ["求解求解，如何编写b的正常信息是在0-100之间，否则输入信息异常，然后运用try-except语句来编写这里。", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "第一条，抛还是不抛，取决于你现在处理还是暂时不处理。无论如何，出了异常掩盖掉总是不合适的吧 =,.=\r\n\r\n第二条，取决于你的异常的用途，说实话，自定义exception，对于非web软件，工具类（比如框架之类），用的更多而且更有用。因为抛出的异常是要给上层程序员调用时判断，因此自定义exception更清晰。而web系统的话，当然也可以自定义各种exception，但是你有一百种理由和设计去规避掉自定义exception，毕竟上层已经没有人会去调用你的action类API（当然不是指的框架本身～）\r\n\r\n第三点，能放到一起当然放到一起，分开放代码看起来反倒乱（其实try catch本身就是引起代码乱的祸首之一～～）\r\n\r\n第四点，还是看你需求，你上层如果要对SQLException做特殊处理，包括为了页面上显示不同的句子，那就该是什么就是什么\r\n\r\n第五点，包括上面4点但不仅限于～呵呵\r\n\r\n很多项目里都有自己一套独特的exception体系，有的只有一个XXXexception类，通过自定义的errorCode去区分不同的错误信息，仁者见仁，智者见智", "Konwledge_Point": "异常处理", "Question": ["大家在做项目的时候对异常是怎么处理的", ["1、原样抛出还是不抛出？", "\n\n", "2、原样抛出还是转化为自定义的异常？", "\n\n", "3、如果有多个异常是放到一个try...catch块里面还是放在多个？", "\n\n", "4、如果有异常，例如：SQLException是抛出SQLException还是抛出Exception？", "\n\n", "5、怎样抛出异常才是更合理的呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;分母为零及数组越界 都有相应的异常可以捕获&amp;#xff0c;提示下就行了&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;u&gt;&lt;strong&gt;如有帮助请在我的回答上点个【采纳】&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;public class Test {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\t\n\t\t\tint i &amp;#61; 5, j &amp;#61; 0;\n\t\t\tSystem.out.println(i / j);\n\t\t} catch (ArithmeticException e) {\n\t\t\tSystem.out.println(&amp;#34;分母不能为0!&amp;#34;);\n\t\t}\n\t\t\n\t\t\n\t\ttry {\n\t\t\tint[] a&amp;#61;new int[]{1,2,3,4,5}; \n\t\t\tSystem.out.println(a[5]);\n\t\t}catch (IndexOutOfBoundsException e) {\n\t\t\tSystem.out.println(&amp;#34;数组越界了!&amp;#34;);\n\t\t}\n\t}\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["做一个含有分母为零及数组越界的异常处理程序", ["在java程序中编写一个含有分母为零及数组越界的异常处理程序，可以提供以下代码嘛，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;给你推荐篇文章&amp;#xff0c;如有帮助&amp;#xff0c;请采纳&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/SZU_Kwong/article/details/110359744\" id=\"textarea_1650796804335_1650796863037_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/SZU_Kwong/article/details/110359744&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["分数类异常处理c++", ["设计一个分数类，考虑异常情况，并实现对运算符+的重载设计。", "\n", "设计主程序进行测试。", "大家解决一下吧😭"]], "Tag": "程序设计"}
{"Answer": "在toString中没有必要使用try...catch\r\n完全可以if判断下objPhoto2是否null\r\n我感觉try...catch没有必要刻意去使用，简单的用if就行，真的是有必要的时候用才是最合理的\r\n真想用的话\r\ntry\r\n        {\r\n           Console.WriteLine(objPhoto2.Title);;\r\n        }\r\n        catch (NullReferenceException e)\r\n        {\r\n            throw new NullReferenceException(\"Not Found\");\r\n        }", "Konwledge_Point": "异常处理", "Question": ["C#异常处理相关，try catch", [" using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication7\n{\n    class Photo\n{//Photo类\n\n    string _title;\n\n    public Photo(string title)\n    {//构造函数\n            this._title = title;\n    }\n\n    public string Title\n    {//访问器\n        get\n        {\n            return _title;\n        }\n    }\n    public override string ToString()\n    {\n        try\n        {\n            return _title;\n        }\n        catch (NullReferenceException e)\n        {\n            throw new NullReferenceException(\"Not Found\");\n        }\n    }\n}\n\n    class Album\n    {\n        // 该数组用于存放照片\n        Photo[] photos;\n        public Album(int capacity)\n        {\n            photos = new Photo[capacity];\n        }\n\n        public Photo this[int index]\n        {//索引器\n            set { \n                if (index<0 || index>=photos.Length)  \n                    Console.WriteLine(\"Wrong Index\");\n                else\n                    photos[index] = value; }\n            get {\n                if (index < 0 || index >= photos.Length)\n                    return null;\n                return photos[index]; }\n        }\n\n        public Photo this[string str]\n        {//索引器 \n            get {\n                    int i = 0;\n                    while (i < photos.Length)\n                    {\n                        if (photos[i].ToString() == str)\n                            return photos[i];\n                        i++;\n                    };\n                    return null;\n            }\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // 创建一个容量为 3 的相册\n            Album family = new Album(3);\n            // 创建 3 张照片\n            Photo first = new Photo(\"Jeny \");\n            Photo second = new Photo(\"Smith\");\n            Photo third = new Photo(\"Lono\");\n            // 向相册加载照片\n             family[0] = first;\n             family[1] = second;\n             family[2] = third;\n            // 按索引检索\n            Photo objPhoto1 = family[2]; \n            Console.WriteLine(objPhoto1.Title);\n            // 按名称检索\n            Photo objPhoto2 = family[\"Jeny\"];\n            Console.WriteLine(objPhoto2.Title);\n            Console.Read();\n        }    \n\n    }\n}\n\n", "\n\n", "运行后报错，原因在于Photo objPhoto2 = family[\"Jeny\"]中\"Jeny\"与\"Jeny \"（Jeny后有空格）不相等，索引器返回值为null。此时objPhoto2为null，不能执行Console.WriteLine(objPhoto2.Title);", "\n\n", "请问这个异常是谁呢么类型的异常？我该如何使用异常处理，使其输出“Not Found”？", "\n如果不是在自己重写的Tostring（）函数中，那么应当在那里捕获这个异常？", "\n\n", "第一次提问，略惶恐，先谢谢前辈们"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用isnumeric判断是否是数字在做操作&amp;#xff0c;否则就设置数据异常&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nIf IsNumeric(Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;N&amp;#34;&lt;/span&gt; &amp;amp; h)) And IsNumeric(Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;AT&amp;#34;&lt;/span&gt; &amp;amp; h)) Then\n  Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;bj&amp;#34;&lt;/span&gt; &amp;amp; h) &amp;#61; Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;N&amp;#34;&lt;/span&gt; &amp;amp; h) - Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;AT&amp;#34;&lt;/span&gt; &amp;amp; h)\nElse\n  Range(&lt;span class=\"hljs-string\"&gt;&amp;#34;bj&amp;#34;&lt;/span&gt; &amp;amp; h) &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;数据异常&amp;#34;&lt;/span&gt;\nEnd If\n\n&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;&amp;#39;其他同理&amp;#xff0c;自己按照上面的模式加上\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["VBA-for循环异常处理", ["问题遇到的现象和发生背景", "\n", "写了一个FOR循环语句，但是发现如果单元格异常（如单元格是文字），执行就有问题了；", "本来是想着用On Error Resume Next直接跳过的，发现部分异常的也会出数据，达不到效果", "如果是当执行出错时候在对应单元格返回“数据异常”，应该怎么写？", "\n", "For h = 5 To i", "   Range(\"bj\" & h) = Range(\"N\" & h) - Range(\"AT\" & h)", "   Range(\"bk\" & h) = Range(\"O\" & h) - Range(\"AU\" & h)", "   Range(\"bl\" & h) = Range(\"P\" & h) - Range(\"AV\" & h)", "   Range(\"bm\" & h) = Range(\"Q\" & h) - Range(\"AW\" & h)", "   Range(\"bn\" & h) = Range(\"R\" & h) - Range(\"AX\" & h)", "   Range(\"bo\" & h) = Range(\"S\" & h) - Range(\"AY\" & h)", "   Range(\"bp\" & h) = Range(\"T\" & h) - Range(\"AZ\" & h)", "   Range(\"bq\" & h) = Range(\"V\" & h) - Range(\"BA\" & h)", "   Range(\"br\" & h) = Range(\"Y\" & h) - Range(\"BB\" & h)", "   Range(\"bs\" & h) = Range(\"Z\" & h) - Range(\"BC\" & h)", "   Range(\"bt\" & h) = Range(\"AE\" & h) - Range(\"BD\" & h)", "   Range(\"bv\" & h) = Range(\"AG\" & h) - Range(\"BF\" & h)", "   Range(\"bw\" & h) = Range(\"BH\" & h) - Range(\"BI\" & h)", "   Range(\"bu\" & h) = Range(\"AF\" & h) - Range(\"BV\" & h)", "Next h", "End Sub"]], "Tag": "程序设计"}
{"Answer": "用try-catch捕获异常能保证程序即使遭遇异常也扔能安按我们的设计流程运行而不会中断。\n异常分支catch中的异常处理通常是根据你的业务逻辑来做的，打印异常只是一种简单的处理方式，当然还有其他的处理，比如:记录异常到数据库，SQL异常的话在异常分支里作数据回滚，socket异常的话重置处理状态………\n你直接在catch中是空分支的话，异常就被淹没了，即使发生了了异常，你也不知道，因为你是简单处理了异常，所以程序不会抛错。\n如果没有try-catch 捕获异常，那么异常就会由虚拟机抛出，从而导致程序中断。这个就是异常捕获的意义:程序可能遭遇错误，但是仍然能正常运行。", "Konwledge_Point": "异常处理", "Question": ["求问关于java中异常处理的问题。。", ["不是很理解java异常处理中的try catch语句块，比如说我的catch语句块中是一个System.out.println(\"caught IOEexception\":e.getMessage())，那么这个catch语句起到的作用就是提示我一下哪个地方有异常吗？然后我再去它提示我发生异常的地方去修改我的程序？", "\n\n", "那么如果我的catch语句里面什么都没写，只是一个catch{}；由于写了try catch语句块编译一定会通过，那岂不是说 假如现在我的程序发生了异常 然后被捕获到了 可是它没有提示我碰到发生异常的信息，并且编译通过了 然后运行的时候就会出错 这样的话使用了try catch语句块岂不是还不如不用吗。。？因为如果我不用try catch语句块的话 我的编译就通不过 会提示我哪里出错了 我还可以去改。但是使用了try catch语句块后，编译通过了 可是运行时就出错了 。。", "\n刚开始学习java 真心想不通了〒_〒"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/lvbey/article/details/51305230\r\n可以看看这个", "Konwledge_Point": "异常处理", "Question": ["求帮助，为什么捕捉到异常后，后面的输入语句会连着执行", []], "Tag": "程序设计"}
{"Answer": "[quote]如果我需要在catch之后插入一段查询代码然后再conn.close()呢[/quote]\r\n\r\n[quote]finally{ \r\nconn.close(); \r\n} \r\n试试[/quote]\r\n总之记得finally{\r\n if(null!=conn){\r\n    conn.close()\r\n  }\r\n}", "Konwledge_Point": "异常处理", "Question": ["关于异常处理语句内变量无法在外部使用的问题", ["最近在学JSP网页，做到数据库连接那里，一直都出错，后来看了下原来是异常处理语句try...catch的问题，但是不知道为何，请各位帮忙解释一下～～～ ", "代码片段如下： ", "\n\n", "String strSQLDomain = \"localhost\";\nString strSQLPort = \"1433\";\nString strDatabase = \"test\";\nString strUser = \"test\"; \nString strPassword = \"test\"; \nConnection conn;\n //连接数据库\ntry\n{\n    String strURL = \"jdbc:sqlserver://\" + strSQLDomain + \":\" + strSQLPort + \";databaseName=\" + strDatabase + \";user=\" + strUser + \";password=\" + strPassword;\n    conn = DriverManager.getConnection ( strURL ); \n}\ncatch ( Exception e )\n{\n    e.printStackTrace();\n}\n\n", "conn.close();  //问题就出现在这里了", "\n\n", " 在Tomcat上调试的时候显示信息：“conn cannot be resolved”，如果我不用异常处理try...catch的话就正常通过", "问题补充：", "如果我需要在catch之后插入一段查询代码然后再conn.close()呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Official docs is a good place to start - &lt;a href=\"http://php.net/manual/en/language.exceptions.php\" rel=\"noreferrer\"&gt;http://php.net/manual/en/language.exceptions.php&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;If it is just a message that you want to capture you would do it at follows;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try{\n    throw new Exception(\"This is your error message\");\n}catch(Exception $e){\n    print $e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to capture specific errors you would use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try{\n    throw new SQLException(\"SQL error message\");\n}catch(SQLException $e){\n    print \"SQL Error: \".$e-&amp;gt;getMessage();\n}catch(Exception $e){\n    print \"Error: \".$e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the record - you'd need to define &lt;code&gt;SQLException&lt;/code&gt;. This can be done as simply as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class SQLException extends Exception{\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;For a title and message you would extend the &lt;code&gt;Exception&lt;/code&gt; class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class CustomException extends Exception{\n\n    protected $title;\n\n    public function __construct($title, $message, $code = 0, Exception $previous = null) {\n\n        $this-&amp;gt;title = $title;\n\n        parent::__construct($message, $code, $previous);\n\n    }\n\n    public function getTitle(){\n        return $this-&amp;gt;title;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You could invoke this using :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try{\n    throw new CustomException(\"My Title\", \"My error message\");\n}catch(CustomException $e){\n    print $e-&amp;gt;getTitle().\"&amp;lt;br /&amp;gt;\".$e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["php自定义异常处理", ["\n\n", "I am wanting to handle exceptions in my PHP application myself.", "\n\n", "When I throw an exception I am wanting to pass along a title to be used in the error page.", "\n\n", "Can someone please link me to a good tutorial, or write a clear explanation of how the exception handling actually works (eg how to know what sort of exception you are dealing with, etc.", "\n    "]], "Tag": "程序设计"}
{"Answer": "看不到，你这个是服务器返回的，大致看出是你的数据库的sql有问题。\r\n\r\n你可以这么写：\r\nShowAlert(\"导入失败:\" + ex.Message, \",\"+ex.InnerException.Message+\",ImportExcel\")\r\n可以看到更多错误\r\n\r\n如果还不行，这么写\r\nShowAlert(\"导入失败:\" + ex.Message, \",\"+ex.InnerException.Message+\",\"+ex.InnerException.InnerException.Message+\",ImportExcel\")\r\n\r\n或者写\r\nex.stacktrace输出下调用堆栈。", "Konwledge_Point": "异常处理", "Question": ["ASP.NET 报异常内容能在 开发人员工具 看到吗 ？", ["设置提醒：ShowAlert(\"导入失败:\" + ex.Message, \",\"+ex.InnerException+\",ImportExcel\")", "\n\n", "protected void ShowAlert(string message, string key)", "\n        {", "\n            string msg = message.Replace(\"\\r\", \"\\r\");", "\n            msg = msg.Replace(\"\\n\", \"\\n\");", "\n            msg = msg.Replace(\"'\", \"\\'\");", "\n            ClientScript.RegisterStartupScript(this.GetType(), key, string.Format(\"alert('{0}');\", msg), true);", "\n        }", "\n\n", "页面报错", "\n能在页面上用“开发人员工具F12” 看到具体的报错信息吗 ？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;There is no such thing as exception handler url. You can customize exception handling by modifying &lt;code&gt;app/Exceptions/Handler.php&lt;/code&gt; in your project. It inherits &lt;code&gt;Illuminate\\Foundation\\Exceptions\\Handler&lt;/code&gt; which has &lt;code&gt;renderHttpException&lt;/code&gt; and &lt;code&gt;decorate&lt;/code&gt; methods to render exceptions.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["重定向Laravel的异常处理程序", ["\n\n", "Hey guys can anyone help me on how to make a ", "\"customized exception handler\"", " and use it to redirect the user if there is an error but still have a link for the ", "\"original exception handler\"", ". I don't know how to make a link for the exception handler because it is not shown on the ", "routes.php", ".", "\n\n", "For example:", "\n\n", "<h1>This is an error page.</h1>\n<a href=\"ExceptionHandler.php\">What causes the error</a>\n", "\n\n", "Any help or hints will do :D", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;表的字段类型不会跟着存储过程变的&amp;#xff08;除非存储过程里直接显式地对表执行了DDL&amp;#xff09;&amp;#xff0c;建议用正确的数据类型重建一下这个表&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["达梦数据库存储过程，运行结果有问题", ["达梦数据库，写了个存储过程，执行成功了，但是结果有点问题", "\n", "数据前面多了0x这个东西，不知道从哪儿来的，哪位可以指点一下？"]], "Tag": "程序设计"}
{"Answer": "```\r\ntry{\r\nca&gt;&gt;sno;\r\n}\r\ncatch(...){\r\n....\r\n}\r\n```\r\n如果不知道什么问题，就什么类都抓。或者制定是CArchive的异常\r\n\r\n```\r\ntry{\r\nca&gt;&gt;sno;\r\n}\r\ncatch(CArchive){\r\n....\r\n}\r\n```", "Konwledge_Point": "异常处理", "Question": ["关于MFC读取文件抛出异常处理", ["我在MFC中对文件进行读写，用的是CArchive来读写，而在使用它的时候发现不是很好判断是否已经读到文件末尾。所以在都到末尾之后再读一次，然后抛出异常，然后退出读取的循环，请问各位大神这个要用什么异常类实现呢？", "\n比如", "\n\n", " while(1){\n     ca>>sno;\n        }\n", "\n\n", "要怎么改呢？", "\ntry{", "\n    ca>>sno;", "\n        }", "\n        catch(?){", "\n        ....", "\n        }", "\n        这样么？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Problem was in getData function, this one works.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function getData(){\n\n            $term = Input::get('term');\n\n            $data = DB::table('items')-&amp;gt;distinct()-&amp;gt;select('item_name')-&amp;gt;where('item_name', 'LIKE', $term.'%')-&amp;gt;groupBy('item_name')-&amp;gt;take(10)-&amp;gt;get();\n            foreach ($data as $v) {\n                $return_array[] = array('value' =&amp;gt; $v-&amp;gt;item_name);\n            }\n\n            return Response::json($return_array);\n\n\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["jquery autocomplete和laravel 5.1抛出内部服务器错误500", ["\n\n", "I'km trying the autocomplete by selecting data from DB and getting back the response as json but all I got is internal server error, could it be a problem of csrf token?", "\n\n", "this is the script", "\n\n", " <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n    <script src=\"http://code.jquery.com/ui/1.11.4/jquery-ui.js\" ></script>\n    <script type=\"text/javascript\">\n        $(document).ready(function () {\n            $('input:text').bind({\n\n            });\n            $(\"#auto\").autocomplete({\n                minLength:2,\n                source: '{{ URL('getdata') }}'\n\n            });\n        });\n    </script>\n", "\n\n", "and this in the controller:", "\n\n", "public function getData(){\n\n            $term = Input::get('term');\n\n            $data = DB::table('items')->distinct()->select('item_name')->where('word', 'LIKE', $term.'%')->groupBy('word')->take(10)->get();\n            foreach ($data as $v) {\n                $return_array[] = array('value' => $v->word);\n            }\n\n            return Response::json($return_array);\n\n\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "看到上面的问题和众位的回答，我算是抛砖引玉吧，对于你这样的初级学习者可以从官方的例子入手，例子下载地址：xcode－－help－－documentation and API Reference--在搜索框输入uicatalog 然后就可以看到例子了，然后点击open project 然后xcode会自动下载程序，下载后会自动打开，另外这个例子包含基本的控件的使用，有oc何swift两个版本，希望对你有用![图片说明](https://img-ask.csdn.net/upload/201412/31/1420009206_374578.png)", "Konwledge_Point": "异常处理", "Question": ["IOS view跳转返回时出现错误", ["AppDelegate：", "\n\n", "self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];", "\nOverride point for customization after application launch.", "\n self.viewController = [[ViewController alloc] initWithNibName:@\"ViewController\" bundle:nil];", "\nself.secondView = [[SecondViewController alloc] initWithNibName:@\"SecondViewController\" bundle:nil];", "\nself.window.rootViewController = self.viewController;", "\n[self.window makeKeyAndVisible];", "\n return YES;", "\n\n", "第一个viewcontroller：", "\nSecondViewController *second=[[SecondViewController alloc] init];", "\nsecond.modalTransitionStyle=UIModalTransitionStyleFlipHorizontal;", "\n[self presentViewController:second animated:YES completion:^{}];", "\n\n", "第二个：", "\n[self dismissViewControllerAnimated:YES completion:^{}];", "\n\n", "出现的错误：", "\nThread 1:Program received signal : \"SIGABRT\"", "\n\n", "xib文件我都有连线", "\n\n", "小白，刚开始学IOS，发现书上的版本太旧，现在看别人博客来学习，竟然还出现错误，无奈。。。"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/Sniper-quay/archive/2011/06/22/2086636.html", "Konwledge_Point": "异常处理", "Question": ["C++的TCP的socket编程遇到了“未经处理的异常错误”", ["TCP的socket编程，我把它拆为了两部分，后半部分用线程处理，但是前半部分遇到了错误大神们帮我检查一下吧，谢谢！", "\n\n", " //***********************************************\n    WORD wVersionRequested;\n    WSADATA wsaData;\n    int err;\n\n    wVersionRequested = MAKEWORD(1, 1);\n\n    err = WSAStartup(wVersionRequested, &wsaData);\n    if (err != 0) {\n        return 0;\n    }\n\n    if (LOBYTE(wsaData.wVersion) != 1 ||\n        HIBYTE(wsaData.wVersion) != 1) {\n        WSACleanup();\n        return 0;\n    }\n    SOCKET sockSrv = socket(AF_INET, SOCK_STREAM, 0);\n\n    SOCKADDR_IN addrSrv;\n    addrSrv.sin_addr.S_un.S_addr = htonl(INADDR_ANY);\n    addrSrv.sin_family = AF_INET;\n    addrSrv.sin_port = htons(8088);\n\n    bind(sockSrv, (SOCKADDR*)&addrSrv, sizeof(SOCKADDR));\n\n    listen(sockSrv, 5);\n\n    thread t(comsock, sockSrv);\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;思路&amp;#xff1a;\n1.创建表对应的javabean.\n2.用Swing组件创建窗口。\n3.创建异常类&amp;#xff0c;对应的错误处理。&lt;/p&gt;\n&lt;p&gt;- &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["GUI、异常处理、IO流练习智商测试", ["设计如下的窗口，完成要求的功能：\n（1）用户可以输入姓名、选择性别\n  (2) 用户可以根据数字规律，在文本框中输入一个数字，进行智商测试。点击确定按钮，根据情况，在下面  \n       标签中显示智商值。\n       具体要求：\n         A. 用户不输入，直接点击下面提交按钮，默认智商为0\n         B.如果用户不输入或输入不是数字，点击确定按钮后，通过异常处理，弹出消息框，提示未按要求输入。然后不允许再输入，并显示智商为0\n         C.用户一次输入正确，消息框提示答案正确，显示智商为130\n         D.用户输入错误，消息框提示答案错误，可重新输入。如第二次输入正确，显示智商为110\n         E.如果输入三次正确，显示智商为100\n         F.最多允许输入三次，如果输入三次还不正确，不允许再输入，显示智商为70\n（3）点击提交按钮，把姓名、性别、智商信息保存到文件中"]], "Tag": "程序设计"}
{"Answer": "出现异常的位置有两种情况：\r\n1. 在exec之前；\r\n2. 在exec执行时；\r\n在exec之前出现异常，使用discard可以rollback，\r\n在exec执行中时，即使出现异常，redis也不会终止和rollback，而是继续执行。\r\n官方这样解释不支持回滚：\r\nRedis is internally simplified and faster because it does not need the ability to roll back.\r\nAn argument against Redis point of view is that bugs happen, however it should be noted that in general the roll back does not save you from programming errors. For instance if a query increments a key by 2 instead of 1, or increments the wrong key, there is no way for a rollback mechanism to help. Given that no one can save the programmer from his errors, and that the kind of errors required for a Redis command to fail are unlikely to enter in production, we selected the simpler and faster approach of not supporting roll backs on errors.", "Konwledge_Point": "异常处理", "Question": ["redis写入多条数据.排队列的时候有了异常.该怎么处理", ["如果", "\n  public void test2Trans() {", "\n        long start = System.currentTimeMillis();", "\n        Transaction tx = jedis.multi();", "\n                try{", "\n        for (int i = 0; i < 100000; i++) {", "\n            tx.set(\"t\" + i, \"t\" + i);", "\n                    }", "\n                }catch(Exception e){", "\n                    tx.discard();", "\n                }", "\n        List results = tx.exec();", "\n        long end = System.currentTimeMillis();", "\n        System.out.println(\"Transaction SET: \" + ((end - start)/1000.0) + \" seconds\");", "\n    }", "\n\n", "    假设代码在try{}模块出现问题,那么catch{}模块直接取消事务的话.那么如何让这段代码实现rollback;\n    上面代码是个人猜想.求大神帮忙\n"]], "Tag": "程序设计"}
{"Answer": "你也可以把plist作为个参数传进来\r\nList是引用类型，类似如下：\r\npublic static void main(String[] args) {\r\n\t\tList list = new ArrayList();\r\n\t\tasdf.ss(list);\r\n\t\tSystem.out.println(list.get(0));\r\n\t}\r\n\t\r\n\tpublic static void ss(List list ){\r\n\t\tlist.add(\"a\");\r\n\t}\r\n        }   \r\n        return plist;   \r\n    }", "Konwledge_Point": "异常处理", "Question": ["Java不中断循环中的单个异常处理", ["如下代码。问题在注释里描述了", "\n[code=\"java\"]", "\npublic static List getProfiles(String dir){", "\n        File dirFile  = new File(dir);", "\n        if(dirFile.isFile()) dirFile = dirFile.getParentFile();", "\n        final File[] fList = dirFile.listFiles();", "\n        List plist = null;", "\n        if(fList != null){", "\n            plist = new ArrayList();", "\n            for(File f : fList){", "\n                if(!f.getName().endsWith(\".xml\")) continue;", "\n                try {", "\n// 此处的GetProfile方法抛出异常，但整个循环不能因为它的异常而中断，必须循环到最后。当循环完成之后，方法返回那些没有出现异常的数据，也需要把异常抛给上层。", "\n\n", "// 这个，要怎么实现？请各位对异常熟悉的朋友解答一下。先谢谢了。", "\n\n", "                ProfileEntity pe = getProfile(f);\n                pe.setFileName(f.getName());\n                plist.add(pe);\n            } catch (ParseException e) {\n                Log.e(\"AndroidExam\", \"Error of Parser : \"+e.getMessage());\n                continue; \n            }\n        }\n    }\n    return plist;\n}\n", "\n\n", "[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img alt=\"\" height=\"176\" src=\"https://img-ask.csdnimg.cn/upload/1624712601857.png\" width=\"503\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cs\"&gt;using System;\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.Write(&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;);\n            string name &amp;#61; null;\n            while ((name &amp;#61; Console.ReadLine()).Trim() &amp;#61;&amp;#61; &amp;#34;&amp;#34;) { Console.Write(&amp;#34;姓名不能为空&amp;#xff0c;请重新输入姓名&amp;#xff1a;&amp;#34;); }\n            Console.Write(&amp;#34;请输入年龄&amp;#xff08;大于18岁&amp;#xff09;&amp;#xff1a;&amp;#34;);\n            int age;\n            while (true)\n            {\n                try\n                {\n                    age &amp;#61; int.Parse(Console.ReadLine());\n                    if (age &amp;gt;18) break;\n                    else Console.Write(&amp;#34;年龄需要大于18岁&amp;#xff0c;请重新输入年龄&amp;#xff08;大于18岁&amp;#xff09;&amp;#xff1a;&amp;#34;);\n                }\n                catch\n                {\n                    Console.Write(&amp;#34;年龄为数字&amp;#xff0c;请重新输入年龄&amp;#xff08;15-25岁之间&amp;#xff09;&amp;#xff1a;&amp;#34;);\n                }\n            }\n            Console.WriteLine(&amp;#34;输入的信息为&amp;#xff1a;{0}\\t{1}&amp;#34;, name, age);\n            Console.ReadKey();\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#控制台应用程序  异常处理）", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Web programming is no different than desktop programming in this regard.&lt;/p&gt;\n\n&lt;p&gt;Use exceptions for &lt;em&gt;exceptional&lt;/em&gt; events.  Use return values for anything expected.&lt;/p&gt;\n\n&lt;p&gt;I think seeing an empty query result isn't something that will have an exception thrown, generally.  I'd just return no data.  If the database query failed somehow, that would be a reason to throw an exception.  Also, your exception messages should probably be more descriptive, rather than \"you need to fix this\".&lt;/p&gt;\n\n&lt;p&gt;Finally, in PHP 5.3, you can set an inner exception by passing it as the third parameter in the &lt;code&gt;Exception&lt;/code&gt; constructor.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.php.net/manual/en/class.exception.php\" rel=\"nofollow\"&gt;http://www.php.net/manual/en/class.exception.php&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["何时使用PHP异常处理的最佳实践", ["\n\n", "I know this question has been asked before numorous times but they seem to have a desktop application background and not web application. I am currently building a web application using PHP. I'm going to use a controller and model file to demonstrate my question.", "\n\n", "Controller file ", "\n\n", "This file calls upon the database to query and fetch data", "\n\n", "<?php public function index() {\n    $this->database->query(\"SELECT user_name, FROM test WHERE user_name = :user_name\");\n    $this->database->execute_query(\"jim\");\n    $this->view->data = $this->database->fetch_query();\n?>\n", "\n\n", "The database file ", "\n\n", "<?php\n\nclass DB {\n\n    private $datasourcename;\n    private $user;\n    private $password;\n    private $connection;\n    private $prepare;\n    private $query;\n\n    function __construct($dsn, $user, $password) {\n\n        $this->datasourcename = $dsn;\n        $this->user = $user;\n        $this->password = $password;    \n\n        $this->connection = new PDO($this->datasourcename, $this->user, $this->password);\n    }\n\n    public function query($query) {\n\n        $this->query = $query;\n        try {\n            if (empty($query)) {\n\n                throw new Exception(\"The query is empty\");\n                return false;\n            }\n        } catch (Exception $e) {\n            echo 'Caught exception: ', $e->getMessage(), \"<br/>\";\n        }\n        if (strstr($query, \":\") == FALSE) {\n            return $this->connection->query($query);\n        } else {\n\n            $this->prepare = $this->connection->prepare($query);\n        }\n    }\n\n    public function execute_query($valarg = array()) {\n\n        try {\n            if (empty($valarg)) {\n\n                throw new Exception(\"There are no values in the execute query function\");\n                return false;\n            }\n            if (is_array($valarg) == false) {\n\n                throw new Exception(\"The values inserted are not in an array\");\n                return false;\n            } else {\n\n                $query = $this->query;\n                $paramkeys = array();\n                $paramArr = array();\n\n                if (strstr($query, \":\")) {    \n\n                    preg_match_all(\"/:(\\w+)/\", $query, $paramkeys);\n\n                    $paramArr = array_combine($paramkeys[0], $valarg);\n\n                    $this->prepare->execute($paramArr);\n                }\n            }\n        } catch (Exception $e) {\n            echo 'Caught exception: ', $e->getMessage(), \"<br/>\";\n        }\n    }\n\n    public function fetch_query() {\n\n        try {\n            if($this->execute_query() == false)    {\n\n                 throw new Exception(\"Sorry you need to fix this first\");\n            }\n\n             if($this->query() == false)    {\n\n                 throw new Exception(\"Sorry you need to fix this first\");\n            }\n            else    {\n\n                 $result = $this->prepare->fetch(PDO::FETCH_ASSOC);\n\n                return $result;\n            }\n        }\n        catch (Exception $e) {\n            echo 'Caught exception: ', $e->getMessage(), \"<br/>\";\n        }\n    }\n}\n\n?>\n", "\n\n", "I have used exception handling in my database class as a way for a developer to use the functions provided by that class correctly in order for the application to work, am I right im thinking that this is the best practise to use them? Is there a clear cut best practise when and how to use them? I have read similar questions on this site but the background was desktop application design and not web application.", "\n    "]], "Tag": "程序设计"}
{"Answer": "NaN的意思是不存在,无意义. \r\ndouble中的0不是真正的0或0.0 而是一个很长的，可能是0.000000000001或其它，所以一个正数除以0.0结果就得很大很大。负数除以0.0， 0.0/0.0 一样道理。 浮点数是使用二进制数据的科学计数法表示,所以不可能精确表示一个浮点数\r\n谢谢", "Konwledge_Point": "异常处理", "Question": ["异常处理。。在主函数中调用某个方法，为什么没有抓住方法中写的异常？", ["public class Computer {", "\n    double c ;", "\n    public void div(double a,double b){", "\n\n", "    try{\n         c = a/b;\n    }\n    catch(NumberFormatException e){\n        e.printStackTrace();\n        System.out.println(\"格式化数据异常。\");\n    }\n    catch(ArithmeticException e){\n        e.printStackTrace();\n        System.out.println(\"出现算术异常。\");\n    }\n    catch(Exception e){\n        e.printStackTrace();\n        System.out.println(\"出现其他异常。\");\n    }\n    System.out.println(\"两个数的商是：\"+c);\n}\n", "\n\n", "}", "\npublic class test {", "\n    public static void main(String[] args) {", "\n        Computer c = new Computer();", "\n        c.div(0,0);", "\n    }", "\n}", "\n\n", " 运行结果\n 两个数的商是：NaN\n\n 为什么没有抓住异常呢？\n\n", "\n\n", "\n\n", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For development environment it's recommended to use &lt;code&gt;debug =&amp;gt; true&lt;/code&gt; in &lt;code&gt;app/config/app.php&lt;/code&gt; file so you'll get informative error messages. To disable it for production (recommended) just change this value to &lt;code&gt;false&lt;/code&gt;, for example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/*\n|--------------------------------------------------------------------------\n| Application Debug Mode\n|--------------------------------------------------------------------------\n|\n| When your application is in debug mode, detailed error messages with\n| stack traces will be shown on every error that occurs within your\n| application. If disabled, a simple generic error page is shown.\n|\n*/\n\n'debug' =&amp;gt; false\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To register a custom error handler you may declare that handler in your &lt;code&gt;app/start/global.php&lt;/code&gt; file, for example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// For 404 not found error\nApp::missing(function($e){\n    return Redirect::to('/');\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will catch all &lt;code&gt;404 not found&lt;/code&gt; errors but notice another error handler available in that file by default and it's:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;App::error(function(Exception $exception, $code)\n{\nLog::error($exception-&amp;gt;getMessage());\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the most generic error handler in &lt;code&gt;Laravel&lt;/code&gt; means that any &lt;code&gt;un-handaled&lt;/code&gt; error will be handled by this one and that's why declare your specific error handlers bottom of this error handler because, error handlers bubbles up from the bottom to top and this one is the &lt;code&gt;parent&lt;/code&gt; so at last (if any custom handler was not registered or didn't catch the error) this handler will take the responsibility to handle an error if you didn't handle the error using any specific handler and didn't return any response when handling an error.&lt;/p&gt;\n\n&lt;p&gt;For example; to register &lt;code&gt;ModelNotFoundException&lt;/code&gt; exception you may try this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;App::error(function(Illuminate\\Database\\Eloquent\\ModelNotFoundException $e)\n{\n    return Response::make('Not Found', 404);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, since you returned a response from the handler then the parent error handler will not get fired and response will be sent to the browser. If you didn't return a response then the topmost parent handler will be fired like &lt;code&gt;event&lt;/code&gt; bubling in &lt;code&gt;JavaScript&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Read more about &lt;a href=\"http://laravel.com/docs/errors\" rel=\"nofollow\"&gt;Errors &amp;amp; Logging&lt;/a&gt; on &lt;code&gt;Laravel&lt;/code&gt; website.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel处理用户生成的错误", ["\n\n", "I'm quite new to Laravel, and in past applications I would generate a user warning or notice, use a custom error handler, which would send an email.", "\n\n", "Often the errors are cases where a user enters invalid data that can't be validated, or when a third party API call returns no results.", "\n\n", "My trouble is that Laravel halts execution and displays a whoops page for any error, so generating an error probably isn't the way I should handle this, but what is the best (correct?) way?", "\n    "]], "Tag": "程序设计"}
{"Answer": "你提的问题不太明确，我假设你是不是要问\r\n1、什么情况下ruturn loginTip,如果是的话当vaildateAdmin()方法返回false时return loginTip。\r\n2、什么情况下return infoTip,如果是的话当vaildateAdmin()方法返回true,且后面的代码没有发生异常时return infoTip。\r\n3、进入catch的情况是try块中的语句有任何一句发生了异常就会进入catch块中。\r\n不知这样回答是不是你想要的！", "Konwledge_Point": "异常处理", "Question": ["关于java异常处理机制", ["\n\n", "初学者 感觉有点复杂，求大神帮我把这段代码逻辑梳理一下，try中满足什么条件时return，什么条件时进入catch语句"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我建议你搜一下ASCII码跟转义字符看一看&amp;#xff0c;这种问题自己看看资料就能明白的&amp;#xff0c;最基础的&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["求解分析下面的程序过程写出程序的运行结果", ["#inelude<stdio. h>", "void main( )", "{", "char cl='a',c2='b',c3='c',c4='/110',c5;", "c5=c4+1;", "printf(\"a%C b%C c%c\\tabe\\n\" ,c1 ,2 ,c3);", "printf(\"%c %c\\n\" ,c4,c5);", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;a, n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;().split())\ns &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt; * n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(a * (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(s) - &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(s[:x]) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/00994013084616.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python题，请问应该怎么做？", [" 输入两个整数a（大于等于1且小于等于9）和n（大于等于1且小于等于80），编程求得并输出下面等式的值：", "例如：若输入的a为5，n为6，则要计算下面公式的值：", "\n", "【输入形式】"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这有个类似的问题, 你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/7807726?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7807726&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;你也可以参考下这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/shayueqing/article/details/104282275?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;C&amp;#43;&amp;#43;程序异常时怎么处理&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "异常处理", "Question": ["c++异常与异常处理问题", ["问题在最底下，麻烦大家滑到底下，不好意思", "这是题目", "\n", "这是我写的", "\n", "这是年龄正常，分数异常的情况", "\n", "这是年龄异常，分数正常情况", "\n", "这是年龄和分数都异常的情况", "\n", "这是年龄和分数都正常的情况", "\n", "在年龄和分数都正常的情况下，会正常显示出返回结果；在年龄正常分数异常的情况下，会显示出一串英文，这是我不清楚的；在年龄异常分数正常的情况下，他不会查询分数的正常或者是异常；在都异常的情况下，他也不会查询分数", "如何才能够将年龄和分数的正常和异常查询并显示出来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;什么版本的JDK&amp;#xff0c;不应该呀&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java异常处理不能继承Exception？", ["\n\n", "\n\n", "\n\n", "刚学了java不久，今天照着书上的代码敲了一遍就出现了图一的问题，虽然图三可以解决，但是教材上的代码都是继承的Exception，所以想知道这是什么问题，求大佬解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是因为eclipse有问题&amp;#xff0c;第一次安装使用吗。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java eclipse无法创建项目，一直提示“未处理的事件循环异常（错误指令）”", [" Java eclipse无法创建项目，一直提示    “未处理的事件循环异常（错误指令）”  “警告:没有设置环境变量HOME。”   “警告:没有设置环境变量HOME。Keybinding发生冲突。 它们可能会干扰加速器的正常运行。  ”怎么解决", "\n", "\n", "\n", "//这是文件所在", "\n", "\n", "\n", "//路径环境变量", "\n", "//eclipse 内jdk设置"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那你修改checkAgeScore&amp;#xff0c;直接return score&amp;#xff0c;不要if了&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c++异常和异常处理问题", ["问题在最底部，麻烦大家翻一下", "这是题目", "\n", "这是我写的", "\n", "这是年龄正常，分数异常的情况", "\n", "这是年龄异常，分数正常的情况", "\n", "这是年龄和分数都异常的情况", "\n", "这是年龄和分数都正常的情况", "\n", "年龄正常分数异常的情况下会出现一串英文，不知是什么问题", "年龄异常分数正常的情况下会显示年龄异常，无法查询分数", "年龄和分数都异常的情况下，无法查询分数情况", "年龄和分数都正常的情况下，正常显示结果", "如何在所有情况下，都正常查询并显示出查询结果"]], "Tag": "程序设计"}
{"Answer": "你的每个属性名后面都有一个空格。为什么呢？\r\n\r\nrequest.getAttribute(\"javax.servlet.error.status_code \");\r\n\r\n看到哦啊status_code后面的那个空格了吗？", "Konwledge_Point": "异常处理", "Question": ["有关servlet异常处理的疑问，哪儿大侠拔刀相助一下", ["     我在业务层抛出了一个自定义的RuntimeException,然后在web.xml配置了error-page ,跳转到ExceptionHandel 这个servlet进行统一处理：", "\n\n", "          <error-page>", "                 <exception-type>exception.CommonException</exception-type>", "                  <location>/servlet/ExceptionHandel</location>", "          </error-page>", "\n\n", "    现在的问题是我该如何获取到这个异常的信息 我试了一下这样获取异常信息：", "\n\n", "        String status_code = \"异常类型的整形值: \"+ request.getAttribute(\"javax.servlet.error.status_code \");", "        String message = \"异常信息: \"+ request.getAttribute(\"javax.servlet.error.message \");", "        String type = \"产生异常实例: \"+ request.getAttribute(\"javax.servlet.error.exception_type \");", "        String uri = \"导致问题产生的资源的URI字符串对象: \"+ request.getAttribute(\"javax.servlet.error.request_uri \");", "        System.out.println(status_code + message + type + uri);", "\n\n", " ", "\n\n", "可是打印出来的值全为空，有哪位大牛帮忙一下？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Change the below line from your app.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app-&amp;gt;singleton( App\\Exceptions\\Handler::class );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app-&amp;gt;singleton(\n    Illuminate\\Contracts\\Debug\\ExceptionHandler::class,\n    App\\Exceptions\\Handler::class\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The reason why the interface is required in the above exception handler binding is, when an exception is thrown while processing a Route, the below function is invoked to process that exception.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected function handleException($passable, Exception $e)\n    {\n        if (! $this-&amp;gt;container-&amp;gt;bound(ExceptionHandler::class) || ! $passable instanceof Request) {\n            throw $e;\n        }\n\n        $handler = $this-&amp;gt;container-&amp;gt;make(ExceptionHandler::class);\n\n        $handler-&amp;gt;report($e);\n\n        return $handler-&amp;gt;render($passable, $e);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The if condition checks whether or not the container has a binding for the ExceptionHandler class. And if there is a binding, then the exception will be passed on to that exception handler class to be further handled. If there is no binding declared, then the exception will be re-thrown. Here the binding is checked for &lt;code&gt;Illuminate\\Contracts\\Debug\\ExceptionHandler&lt;/code&gt;. That's why when you directly bind using &lt;code&gt;App\\Exceptions\\Handler::class&lt;/code&gt;, the exception is not caught by your exception handler. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Lumen：异常处理程序 - 不捕获QueryException或PDOException", ["\n\n", "I am trying to ensure that exceptions thrown from database connection issues are handled globally.", "\n\n", "I have added the following in my app\\Exceptions\\Handler.php in the render() method, however none of the exceptions are being caught:", "\n\n", "<?php\n\nnamespace App\\Exceptions;\n\nuse Exception;\nuse Illuminate\\Database\\QueryException;\nuse Illuminate\\Validation\\ValidationException;\nuse Illuminate\\Auth\\Access\\AuthorizationException;\nuse Illuminate\\Database\\Eloquent\\ModelNotFoundException;\nuse Symfony\\Component\\HttpKernel\\Exception\\HttpException;\nuse Laravel\\Lumen\\Exceptions\\Handler as ExceptionHandler;\nuse Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException;\nuse Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\nuse PDOException;\n\nclass Handler extends ExceptionHandler\n{\n    /**\n     * A list of the exception types that should not be reported.\n     *\n     * @var array\n     */\n    protected $dontReport = [\n        AuthorizationException::class,\n        HttpException::class,\n        ModelNotFoundException::class,\n        ValidationException::class,\n    ];\n\n    /**\n     * Report or log an exception.\n     *\n     * This is a great spot to send exceptions to Sentry, Bugsnag, etc.\n     *\n     * @param  \\Exception  $e\n     * @return void\n     */\n    public function report(Exception $e)\n    {\n        parent::report($e);\n    }\n\n    /**\n     * Render an exception into an HTTP response.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Exception  $e\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function render($request, Exception $e)\n    {\n        if ($e instanceof AuthorizationException) {\n            return response()->json((['status' => 403, 'message' => 'Insufficient privileges to perform this action']), 403);\n        }\n\n        if ($e instanceof MethodNotAllowedHttpException) {\n            return response()->json((['status' => 405, 'message' => 'Method Not Allowed']), 405);\n        }\n\n        if ($e instanceof NotFoundHttpException) {\n            return response()->json((['status' => 404, 'message' => 'The requested resource was not found']), 404);\n        }\n\n        if ($e instanceof QueryException) {\n            return response()->json((['id' => 0, 'status_billing' => 'The requested resource was not found']), 500);\n        }\n\n        if ($e instanceof PDOException) {\n            return response()->json((['id' => 0, 'status_billing' => 'The requested resource was not found']), 500);\n        }\n\n\n        return parent::render($request, $e);\n    }\n}\n", "\n\n", "This was also added to my app.php:", "\n\n", "$app->singleton( App\\Exceptions\\Handler::class );\n", "\n\n", "For the life of me I cant get this to work.", "\n\n", "Any help/advice would be greatly appreciated", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What you describe can have multiple issues that are hidden until you actually open the downloaded file.&lt;/p&gt;\n\n&lt;p&gt;Instead make your code more robust and check pre-conditions, here if headers have been send already and to clean any possible existing output buffer and give error if that is not possible:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function getChart ($uniqid = null) {\n\n    if (!$uniqid) exit;\n\n    $this-&amp;gt;layout = null;\n\n    if (headers_sent()) throw new Exception('Headers sent.');\n    while (ob_get_level() &amp;amp;&amp;amp; ob_end_clean());\n    if (ob_get_level()) throw new Exception('Buffering is still active.');\n\n    header(\"Content-type: image/png\");\n    header(\"Content-Disposition:attachment;filename='\".$uniqid.\".png'\");\n    readfile('../webroot/img/'.$uniqid.'.png');\n\n    exit;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP readfile（）返回损坏的数据", ["\n\n", "In my function I am saving an image decoded from a base64 string:", "\n\n", "function saveImage(){\n    //magic...\n    define('UPLOAD_DIR', '../webroot/img/');\n    $base64string = str_replace('data:image/png;base64,', '', $base64string);\n    $base64string = str_replace(' ', '+', $base64string);\n    $data = base64_decode($base64string);\n    $id = uniqid();\n    $file = UPLOAD_DIR.$id.'.png';\n    $success = file_put_contents($file, $data);\n}\n", "\n\n", "The above function works properly and the images are saved and not corrupted in the specified folder.", "\n\n", "In the next function I am now trying to force download the image to a user:", "\n\n", "function getChart($uniqid= null){\n    if($uniqid){\n        $this->layout = null;\n        header(\"Content-type: image/png\");\n        header(\"Content-Disposition:attachment;filename='\".$uniqid.\".png'\");\n        readfile('../webroot/img/'.$uniqid.'.png');\n        exit;\n    } else exit;\n}\n", "\n\n", "Image downloaded from the server is corrupted and cant be displayed. After opening the downloaded file in a text editor I noticed that a new line character is added at the very top. After deleting the character and saving the file it opens properly and is being displayed properly.", "\n\n", "How can I fix this?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I really don't mean any offense by this but this seems to be a case where you are trying to cover up bad practices with more bad practices.&lt;/p&gt;\n\n&lt;p&gt;Your first problem is trying to return responses from methods which aren't in your routes file.  You can do this and it should work just fine because in your example, your just returning that response anyway which is being stored in the &lt;code&gt;$user&lt;/code&gt; variable.&lt;/p&gt;\n\n&lt;p&gt;The cover-up for this which you are asking for is how to now handle functions returning either &lt;code&gt;Response&lt;/code&gt; objects or &lt;code&gt;User&lt;/code&gt; objects.  So you would essentially have to use &lt;code&gt;instanceof&lt;/code&gt; to determine if this object is a &lt;code&gt;Response&lt;/code&gt; or &lt;code&gt;User&lt;/code&gt;.  if it's a response, return it, otherwise, keep doing more work.&lt;/p&gt;\n\n&lt;p&gt;This isn't terrible because you only have to add a few more conditions but I don't think it's a road you want to start going down because it has potential to snowball from there and create very un-maintainable code.&lt;/p&gt;\n\n&lt;p&gt;I'd suggest you start thinking about it this way.  Why is the &lt;code&gt;saveUser&lt;/code&gt; function worried about validating the user when we already have a &lt;code&gt;validateUser&lt;/code&gt; function.  Let the function which is being called by the routes do all the \"controlling\" and let your other functions do just what they were intended to do and nothing else.  They should basically just act as helper functions to separate out different parts of your logic.&lt;/p&gt;\n\n&lt;p&gt;There are many ways to handle this but I'd suggest something like the following.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function example(Request $request)\n{\n    //  Do all the \"controlling\" in this function, other functions should just be handling all the business logic.\n    if (! $this-&amp;gt;validateUser($request-&amp;gt;name)) {\n        return response()-&amp;gt;json(['data' =&amp;gt; null,'message' =&amp;gt; \"please enter a name for the user\",],500);\n    }\n\n    try {\n        $user = $this-&amp;gt;saveUser($request-&amp;gt;name);\n    } catch (Exception $e) {\n        return response()-&amp;gt;json(['data' =&amp;gt; null,'message' =&amp;gt; \"error saving the user.\",],500);\n    }\n\n    // Here we know this will always be a User object.\n    return $user;\n}\n\npublic function saveUser($name)\n{\n    $user = new User();\n    $user-&amp;gt;name = $name;\n    $user-&amp;gt;save();\n\n    return $user;\n}\n\nprivate function validateUser($name)\n{\n    if($name == null) {\n        return false;\n    }\n\n    return true;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel 5.3嵌套方法中的异常处理", ["\n\n", "I just ran into a problem where i can't seem to find a proper way of handling. I know this is a stupid example, but its the fastest i could think of.", "\n\n", "UserController", "\n\n", "trait SaveUser;\n\npublic function example(Request $request){\n    $user = $this->saveUser($request->name);\n    return $user;\n}\n", "\n\n", "Trait SaveUser;", "\n\n", "public function saveUser($name){\n\n    $is_valid = $this->validateUser;\n    if(!is_valid) return response()->json(['data' => null,'message' => \"please enter a name for the user\",],500);\n    try{\n        $user = new User();\n        $user->name = $name;\n        $user->save()\n\n        return $user;\n\n    }catch(\\Exception $e){\n        return response()->json(['data' => null,'message' => \"error saving the user.\",],500);\n    }\n}\n\nprivate function validateUser($name){\n    if($name == null)\n        return false;\n\n    return true;\n\n}\n", "\n\n", "Lets say i am saving a user, requesting the name from the api request. I send it to a trait because its going to be used in many places, if the user name is not valid, it returns a json response saying it needs to be set, else if an error occurs while saving the user, return a code ", "500", " response. Now this is a simple example, on my case, i have the ", "validate", " method validate many other things and each have a unique message for a response, same for attributes of the user, etc..", "\n\n", "So pretty much my problem is, that when the ", "try catch", " catches an execption or something is not valid, it returns ", "return response()->json(['data' => null,'message' => \"error saving the user.\",],500);", " to the ", "$user", " in the UserController variable.  What i would like it to do is, end my code in the exception or in the ", "return response()->", " and return the response. Is there anyway i can just end the code anywhere that i have ", "return response()->...", "?", "\n\n", "I am using this in an API, this is just a quick example. Any help would be appreciated. Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; A {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入第&amp;#34; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &amp;#34;个数字:&amp;#34;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; sc.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                sum &amp;#43;&amp;#61; n;\n            }\n        }\n        sc.&lt;span class=\"hljs-keyword\"&gt;close&lt;/span&gt;();;\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;下标为偶数的元素值之和是: &amp;#34; &amp;#43; sum);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["编写Java程序，定义一个数组，数组一共有10个元素，接收用户输入的整数，求出下标为偶数的元素值之和。", ["运行效果如下"]], "Tag": "程序设计"}
{"Answer": "你说的比较模糊，不知道你说的想让管理员可以修改用户权限是什么意思，就是管理员后台可以配置每个用户的角色，是这个意思么？\r\n\r\n大概是这么两个表\r\n\r\ncreate table aspnetuserroles\r\n(\r\n    UserId char(32) not null comment '',\r\n    RoleId char(32) not null comment ''\r\n) \r\n \r\ncreate table aspnetroles\r\n(\r\n    Id char(32) primary key,\r\n    Name varchar(50) not null comment ''\r\n)\r\n\r\n一个表记录的是都有哪些角色\r\n一个表记录的是某个用户有哪些角色\r\n\r\n脚手架生成userroles表，因为没有id（主键）可能会遇到一点问题\r\n而且这样做界面也不是很友好。\r\n建议你自己设计一个界面。大概可以设置成一个\r\nUsers视图，列出所有的用户\r\n一个UserRoles视图，里面用复选框列出所有权限，以及打勾当前用户有的。\r\n\r\n这样比较合理一些。\r\n\r\n已经帮你写了一个\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201902/14/1550092499_904857.gif)\r\n\r\n\r\n其他人需要的话，代码下载：https://download.csdn.net/download/caozhy/10956302", "Konwledge_Point": "异常处理", "Question": ["ASP.NET MVC项目自动生成的身份验证中，权限怎么修改", ["想让管理员可以修改用户权限，试过根据AspNetUserRoles表生成数据实体，但是没法根据这个实体生成controller。请各位指教，其他方法也可以。"]], "Tag": "程序设计"}
{"Answer": "在程序try中，执行了system.exit()方法。finally里面的代码就不会被执行了", "Konwledge_Point": "异常处理", "Question": ["一个经典的Java面试题，异常处理", ["什么情况下，finally中的代码不会执行（前提是执行到了try里面）"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try using:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;log_message($e-&amp;gt;getMessage());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;More info &lt;a href=\"http://docs.aws.amazon.com/aws-sdk-php/guide/latest/quick-start.html#detecting-and-handling-errors\" rel=\"nofollow\"&gt;here&lt;/a&gt; and &lt;a href=\"http://docs.aws.amazon.com/aws-sdk-php/latest/class-Exception.html#_getMessage\" rel=\"nofollow\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["亚马逊S3 SDK for PHP中的异常处理", ["\n\n", "I recently migrated from age old amazon AWS SDK (v1.6.2) for PHP to the latest one. One thing I completely missed was Exception handling. ", "\n\n", "My first code.", "\n\n", "$result = $this->S3Client->putObject($options);\nif (!empty($result)) {\n    return !0;\n}\n", "\n\n", "But if upload fails, then it will throw an exception which will crash my PHP. So, I added exception handling next.", "\n\n", "try {\n    $result = $this->S3Client->putObject($options);\n    return !0;\n} catch(Exception $e) {\n    log_message($e->message);\n    return !1;\n}\n", "\n\n", "However, it seems that ", "$e->message", " is protected.", "\n\n", "Question:", " How can I get the error so that I can root cause what happened with the upload, once I move to production environment?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你的业务需要处理异常那就是你处理&amp;#xff0c;如果你不关心异常&amp;#xff0c;那就抛出去&amp;#xff0c;让调用方处理&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理，是自己处理，还是抛出去", ["问题遇到的现象和发生背景", "\n", "封装了工具类，与公共服务。有些异常是需要在工具类中处理掉，还是把异常抛出去，让调用者处理？"]], "Tag": "程序设计"}
{"Answer": "格式问题转一下就好了\r\nSimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nString sdate=df.format(Date.valueOf(\"你之前的时间\"));\r\nsdate正确格式的时间", "Konwledge_Point": "异常处理", "Question": ["timestamp 异常处理", ["java.lang.IllegalArgumentException: Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]", "\njdk1.6   怎么解决这个异常。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;嗯&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java中insert into语句错误", ["为什么在java里执行同样的语句，就不能正确的吧数据填写到数据库中，", "而在access里面用sql语句就能正常的填写", "\n", "这是我用java测试的，就不正确了", "\n", "\n", "这是我用access测试的，正确的填写了", "\n", "请问这是为什么，谢谢"]], "Tag": "程序设计"}
{"Answer": "和前面仁兄说的差不多。\r\n\r\n为了方便查找异常可以给你建议。也是我目前项目的异常机制。\r\n\r\n所有错误都向上抛，比如前面仁兄说的action里 才去处理。不过此处说的处理是写日志。\r\n至于程序的错误处理，看你怎么设计的逻辑了。\r\n\r\n日志就2个地方写，一个是刚才说的，可以说是入口了。还有就是对DB操作类的增，删，改。查。的所有最终执行的方法。\r\n\r\nLOG的写法有很多。比如DAO的异常加SQL一起写LOG，业务层的加参数，返回值，接口名字等能直观快速提供查找的信息一起写LOG，当然，都别忘记打异常堆栈信息。和当时异常的时间\r\n\r\n日志最好是SubfferString 全部添加好，在一次中写入LOG，因为够大的话，线程太多。不然会乱的。\r\n\r\nLOG4J 可以的。没什么不太不好。\r\n\r\n希望有参考价值！", "Konwledge_Point": "异常处理", "Question": ["请问在真实企业WEB项目中，一般如何处理异常的。", ["本人正在做毕业设计，是一个WEB系统（有点老土，勿喷  :oops: )。自己对异常处理还有日志记录这一块不太懂。", "\n\n", "想了解下在真实的企业WEB项目中是如何处理异常，并输出日志的。", "\n\n", "我现在是这样来处理的，定义了一个可嵌套的业务层 checked 异常 BusinessInterruptException extends Exception，再定义了一个 可嵌套的底层 unchecked 异常 DataAccessException extends RuntimeException。", "\n在业务层出现异常的话都 throw 出 BusinessInterruptException 并写入异常原因。在 Dao 层出现 SQLException的话 catch 后再 throw 出 DataAccessException并记录日志。", "\n\n", "使用的是 Log4J 记录日志", "\n\n", "不知道自己这样处理是否合理，想请问各位在真实项目中一般都是如何处理的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将fbx放在没有汉字的文件路径中&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["3dmax运行脚本时提示 MAXScript 卷展栏处理程序 异常: -- 语法错误", ["问题遇到的现象和发生背景 -- 打开MAXScript BatchExportImport.ms批量导入导出脚本时弹出异常提示", "\n", "问题相关代码，请勿粘贴截图 -- MAXScript 卷展栏处理程序 异常:", "\n", "-- 语法错误: 位于 ..，需要 <因子>", "--  所在行: #(\"C:\\Users\\86186\\OneDrive\\桌面\\fbx\\m12_02_00_00_100021out.fbx\"-- MAXScript 卷展栏处理程序 异常:", "-- 语法错误: 位于 ..，需要 <因子>", "--  所在行: #(\"C:\\Users\\86186\\OneDrive\\桌面\\fbx\\m12_02_00_00_100021out.fbx\", \"C:\\Users\\86186\\OneDrive\\桌面\\fbx\\m12_02_00_00_100047ou", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果[]("]], "Tag": "程序设计"}
{"Answer": "这样可以的，不过很少这样写，如果条件根据e判断，建议分开写", "Konwledge_Point": "异常处理", "Question": ["异常处理try{} catch的问题", ["在catch语句里面可以做分支判断吗？", "\n如：", "\ntry", "\n{", "\n语句块;", "\n}", "\ncatch(Exception e)", "\n{", "\nif(条件1)", "\nreturn 结果1;", "\nif(条件2)", "\nreturn 结果2；", "\n}", "\n\n", "在C# 中这么写允许吗？合理吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;tmpFrame为空&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["有未经处理的异常: Microsoft C++ 异常: cv::Exception", ["vs2019+opencv4.3.0 最近在做目标检测，找的程序总是在运行一段时间后报这个错，位置有很多，转化成灰度图的位置，", "\n", "if", " (frameNum >= ", "2", ")\n        {\n            ", "// 转化为单通道灰度图，此时currentFrame已经存了tmpFrame的内容", "\n            cvt", "Color(", "tmpFrame", ", ", "currentFrame", ", CV_BGR2GRAY)", ";\n            currentFrame.convert", "To(", "tmpFrameF", ", CV_32FC1)", ";\n            previousFrame.convert", "To(", "previousFrameF", ", CV_32FC1)", ";\n\n", "\n", "cvtcolor这句就突然报错，调试控制台会显示OpenCV(4.3.0) Error: Assertion failed (!_src.empty()) in cv::cvtColor这个错误", "\n", "我查看了很多，都说读图片的路径有问题，但是我的程序能运行一段时间就是说明我读视频那里是没有问题的；还有说是依赖没有加，配置opencv是依赖是没有问题的。", "\n", "想请问各位大兄弟有遇到过类似问题了 都来看看 提提意见 谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;from&lt;/span&gt; sympy import *\ndef get_area(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;,b,c):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt; &amp;#43; b &amp;lt;&amp;#61; c &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; b &amp;#43; c &amp;lt;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt; &amp;#43; c &amp;lt;&amp;#61; b:\n        raise ValueError\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        s &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;&amp;#43;b&amp;#43;c)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        area &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(s*(s-&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;)*(s-b)*(s-c))\n        &lt;span class=\"hljs-literal\"&gt;return&lt;/span&gt; area\nprint(get_area(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;))\n        \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python错误和异常处理", ["定义函数get_area(a, b, c)，求三角形面积，如果a、b、c不能组成三角形，则抛出ValueError异常，否则返回三角形面积。三角形面积的计算公式为area=sqrt(s * (s - a) * (s - b) * (s - c))，其中s = (a + b + c) / 2。从键盘上输入三角形的三条边长a、b、c，调用get_area函数，显示它的面积或处理异常。"]], "Tag": "程序设计"}
{"Answer": "异常处理里固定用法，主要就是能将后面的异常信息输出出来而已", "Konwledge_Point": "异常处理", "Question": ["不懂就问，python异常处理里的as有什么用？", ["e是个啥", "\n\n", "try:\n    int(\"var\")\nexcept ValueError as e:\n    print(type(ValueError))\n    print(type(e))\n    print(ValueError)\n    print(e)\n", "\n\n", "output:\n\n<class 'type'>\n<class 'ValueError'>\n<class 'ValueError'>\ninvalid literal for int() with base 10: 'var'\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次执行while循环时1/he是1/0非法计算&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["VS2022编完程序之后运行，显示出有未经处理的异常，谁能看看", []], "Tag": "程序设计"}
{"Answer": "跟做事一样，有些Exception撒手不理没关系，但是要守住finally的底线。", "Konwledge_Point": "异常处理", "Question": ["Java异常处理中居然有个try-finally？？？？", ["一般都是try-catch，或者try-catch-finally，突然发现还有try 后面直接跟finally？？？？？，这种try-finally有什么适用场景呢？？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是要用try except 异常语句进行处理吗&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import random\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;int(input(&amp;#39;请输入下限:&amp;#39;))\n&lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;int(input(&amp;#39;请输入上限:&amp;#39;))\n&lt;span class=\"hljs-attribute\"&gt;num&lt;/span&gt;&amp;#61;random.randint(n,m)\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;5):\n    try:\n        &lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;int(input(&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;))\n    except ValueError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的不是数字,请重新输入&amp;#39;&lt;/span&gt;)\n        continue\n    i&amp;#43;&amp;#61;1\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a&amp;lt;num:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;猜小了&amp;#39;&lt;/span&gt;)\n    elif a&amp;gt;num:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;猜大了&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;恭喜你猜对了, 数字是{}&amp;#39;&lt;/span&gt;.format(a))\n        break\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;&amp;#61;5:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;次数超过5次,失败&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "异常处理", "Question": ["python写异常处理语句", ["\n", "import random", "n=int(input('请输入下限:'))", "m=int(input('请输入上限:'))", "num=random.randint(n,m)", "i=0", "while(i<5):", "    a=int(input(\"请输入一个数字：\"))", "请问怎么对输入异常语句进行处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/56822141005613.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;提示你了啊&amp;#xff0c;数据点个数和H*W不相等&amp;#xff0c;检查一下数据吧&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["0x77219862 处(位于 LiDAR.exe 中)有未经处理的异常: Microsoft C++ 异常: pcl::IOException，位于内存位置 0x010C0FCC 处。", ["在用 pcl::io::savePCDFile(\"new_test.pcd\", *cloud1);存点云数据的时候，pcd_io.hpp中的throw pcl::IOException (\"[pcl::PCDWriter::writeASCII] Number of points different than width * height!\");产生异常"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;catch只会捕获你写的其中一种异常啊。其他当然不会捕获。相当于if 语句一样了&lt;br /&gt;如果你的catch 都没有触发&amp;#xff0c;说明报错不在你catch范围内&lt;br /&gt;你可以把catch中替换成 Exception  这样就可以捕获到&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于java异常处理", ["为啥后面的catch没反应？", "package test9;", "\n", "import java.util.", ";", "public class WpjException4 {", "    public static double multi(int n)", "    {if(n<0) throw new IllegalArgumentException(\"输入了负数异常\");", "      double s=1;", "      for(int i=1;i<=n;i++) s=s", "i; return s ; }", " public static void main(String[] args) {", "\n", "  Scanner bb=new Scanner(System.in);", "   try", "   { int n=bb.nextInt();", "   System.out.println(n+\"!=\"+multi(n));}", "   catch (ArrayIndexOutOfBoundsException e){ System.out.println(\"应该输入一个整数\");}", "   catch (NumberFormatException e1)", "   { System.out.println(\"应该输入一个数\");}", "   catch (IllegalArgumentException e2)", "   { System.out.println(\"出现的异常为:\"+e2.toString());}", "   finally", "   { System.out.println(\"计算阶乘结束\");}", " }", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if后面多了分号 直接return了&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java报错异常处理请教问题", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "请教异常原因以及处理问题的办法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;catch中不把异常打印出来&amp;#xff0c;知道什么异常&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java中for循环里有个异常处理，执行时为啥一直输出。", ["\n", "为啥他不在输入哪里停顿，等我输入呀。求各位大神指导。"]], "Tag": "程序设计"}
{"Answer": "```\r\n# include &lt;malloc.h&gt;\r\n# include &lt;stdlib.h&gt;//exit\r\n# include &lt;stdio.h&gt;\r\n\r\ntypedef struct Node\r\n{\r\n\tint data;\r\n\tstruct Node *next;\r\n}Node, *LinkList;\r\n\r\nLinkList Create_List(LinkList &amp;L)\r\n{\r\n\tNode *q;\r\n\tint i, n;\r\n\tint data;\r\n\tL = (LinkList)malloc(sizeof(Node));\r\n\tq = L;\r\n\tprintf(\"链表的长度为：\");\r\n\tscanf_s(\"%d\", &amp;n);\r\n\tfor (i = 0; i&lt;n; i++)\r\n\t{\r\n\t\tscanf_s(\"%d\", &amp;data);\r\n\t\tq-&gt;data = data;\r\n\t\t\r\n\t\tq-&gt;next = (LinkList)malloc(sizeof(struct Node));\r\n\r\n\t\tif (i &lt; n - 1)\r\n\t\t\tq = q-&gt;next;\r\n\t}\r\n\tq-&gt;next = 0;\r\n\treturn L;\r\n}\r\n\r\n\r\nLinkList Merge_List(LinkList La, LinkList Lb)\r\n{\r\n\tLinkList p, t;\r\n\tLinkList a = La, b = Lb;\r\n\tif (La-&gt;data &lt; Lb-&gt;data) {\r\n\t\tt = p = La;\r\n\t\ta = La-&gt;next;\r\n\t}\r\n\telse {\r\n\t\tt = p = Lb;\r\n\t\tb = Lb-&gt;next;\r\n\t}\r\n\twhile (a!=NULL&amp;&amp;b!=NULL) {\r\n\t\tif (a-&gt;data &lt; b-&gt;data) {\r\n\t\t\tt-&gt;next = a;\r\n\t\t\ta = a-&gt;next;\r\n\t\t\tt = t-&gt;next;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tt-&gt;next = b;\r\n\t\t\tb = b-&gt;next;\r\n\t\t\tt = t-&gt;next;\r\n\t\t}\r\n\t}\r\n\tif (a == NULL) {\r\n\t\tt-&gt;next = b;\r\n\t}\r\n\telse {\r\n\t\tt-&gt;next = a;\r\n\t}\r\n\treturn p;\r\n}\r\n\r\nLinkList Reverse_List(LinkList L)\r\n{\r\n\tNode *p, *q;\r\n\tp = L-&gt;next;\r\n\tL-&gt;next = NULL;\r\n\twhile (p != NULL)\r\n\t{\r\n\t\tq = p-&gt;next;\r\n\t\tp-&gt;next = L-&gt;next;\r\n\t\tL-&gt;next = p;\r\n\t\tp = q;\r\n\t}\r\n\treturn L;\r\n}\r\n\r\n\r\nvoid Print_List(LinkList L)\r\n{\r\n\twhile (L != NULL)\r\n\t{\r\n\t\tprintf(\"%d \", L-&gt;data);\r\n\t\tL = L-&gt;next;\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\tLinkList La, Lb;\r\n\tLa = (LinkList)malloc(sizeof(Node));\r\n\tLb = (LinkList)malloc(sizeof(Node));\r\n\tCreate_List(La);\r\n\tCreate_List(Lb);\r\n\tPrint_List(Merge_List(La, Lb));\r\n\r\n\tgetchar();\r\n\tgetchar();\r\n}\r\n \r\n```", "Konwledge_Point": "异常处理", "Question": ["引发了未经处理的异常:读取访问权限冲突", ["请大神指教一下，调试显示 q 是nullptr，谢谢了", "\n\n", " # include <malloc.h>\n# include <stdlib.h>//exit\n# include <stdio.h>\n\ntypedef struct Node\n{\n    int data;\n    struct Node *next;\n}Node, *LinkList;\n\nLinkList Create_List(LinkList &L)\n{\n    Node *p, *q;\n    int i, n;\n    int data;\n    L = (LinkList)malloc(sizeof(Node));\n    q = L;\n    printf(\"链表的长度为：\");\n    scanf_s(\"%d\", &n);\n    for (i = 0; i<n; i++)\n    {\n        scanf_s(\"%d\", &data);\n        p = (struct Node*)malloc(sizeof(struct Node));\n        p->data = data;\n        q->next = p;\n        q = p;\n    }\n    q->next = NULL;\n    return L;\n}\n\nLinkList Merge_List(LinkList La, LinkList Lb)\n{\n    Node *p, *q;\n    LinkList L;\n    L = (LinkList)malloc(sizeof(Node));\n    L = NULL;\n    p = La->next;\n    q = Lb->next;\n    while (La&&Lb)\n    {\n        if (La->data<Lb->data)\n        {\n            L = p;\n            p = p->next;\n        }\n        else\n        {\n            L = q;\n            q = q->next;\n        }\n    }\n    L = p ? p : q;\n    return L;\n}\n\nLinkList Reverse_List(LinkList L)\n{\n    Node *p, *q;\n    p = L->next;\n    L->next = NULL;\n    while (p != NULL)\n    {\n        q = p->next;\n        p->next = L->next;\n        L->next = p;\n        p = q;\n    }\n    return L;\n}\n\n\nvoid Print_List(LinkList L)\n{\n    Node *p = L->next;\n    while (p != NULL)\n    {\n        printf(\"%d\", p->data);\n        p = p->next;\n    }\n    printf(\"\\n\");\n}\n\n\nint main()\n{\n    LinkList La, Lb;\n    La = (LinkList)malloc(sizeof(Node));\n    Lb = (LinkList)malloc(sizeof(Node));\n    Create_List(La);\n    Create_List(Lb);\n    Print_List(Merge_List(La, Lb));\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;try catch语句会先进try部分&amp;#xff0c;只有在try部分出现异常才会进catch语句&amp;#xff0c;finally语句是最后都要执行的不管总try还是catch&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["异常处理及异常的应用", ["本题答案try finally求解析", "初学java很多不懂的地方谢谢大家🥳"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组越界了&amp;#xff0c;你确定你给每一个数组分配了足够的内存&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。 ？", ["如图，这段代码  nation是一个类  我想先输入一个数count 随后 连续输入count个id和sr；", "运行后 我打完第一排就出现", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码已修改&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;alist &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;12&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;23&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1.2&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;35Y&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;2.3&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;---&amp;#39;&lt;/span&gt;]\nerrors &amp;#61; []\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i, v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(alist):\n    &lt;span class=\"hljs-comment\"&gt;# 将alist列表里各项进行类型转换&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        alist[i] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(v)\n    &lt;span class=\"hljs-comment\"&gt;# 遇到异常则将该项跳出加入errors列表&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError:\n        errors.append(alist.pop(i))\n&lt;span class=\"hljs-comment\"&gt;# 计算总数&lt;/span&gt;\ntotal &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;, alist)))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(*alist, sep&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(total)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;列表中&amp;#39;&lt;/span&gt;, errors, &lt;span class=\"hljs-string\"&gt;&amp;#39;不是数值型数据&amp;#xff01;&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Python异常处理问题", ["\n", "输出结果：", "\n", "我自己写的代码：", "\n", "/usr/", "bin", "/env python\n", "# _*_ coding:utf-8 _*_", "\n", "import", " re\n\n", "try", ":\n    alist = [", "'12'", ", ", "'23'", ", ", "'-'", ", ", "'1.2'", ", ", "'35Y'", ", ", "'2.3'", ", ", "'---'", "]\n    total = ", "0", "\n    errors = []\n    digits = re.", "compile", "(", "r'-?\\d+\\.?\\d*e?-?\\d*?'", ")  ", "# 所有数值型数据", "\n    letters = re.", "compile", "(", "r'[A-Za-z]'", ")  ", "# 所有字母", "\n    ", "for", " i, v ", "in", " ", "enumerate", "(alist):\n        ", "# 查找包含数字不包含字母的项", "\n        number = digits.search(v)\n        letter = letters.search(v)\n        ", "if", " number ", "and", " ", "not", " letter:\n            ", "continue", "\n        ", "# 不符合数值型数据的从原列表弹出", "\n        errors.append(alist.pop(i))\n    ", "print", "(*alist, sep=", "'+'", ", end=", "'='", ")\n    ", "# 将字符串转换成浮点型数据计算总和", "\n    alist = ", "list", "(", "map", "(", "float", ", alist))\n    total = ", "sum", "(alist)\n    ", "print", "(total)\n", "except", " TypeError:\n    ", "pass", "  ", "# 无操作", "\n", "else", ":\n    ", "# 如果无异常，打印", "\n    ", "print", "(", "'列表中'", ", errors, ", "'不是数值型数据！'", ")\n\n", "\n", " 运行结果跟题目给的一样", "\n", "\n", "上面是我自己写的，请问有没有更好的方法把代码量减小呢？", " 想知道参考代码11行是怎么做的"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I know the option the &lt;code&gt;(b)&lt;/code&gt; you can entirely disable Silex app error handler and after that, your custom error handler should work fine as you defined it.&lt;/p&gt;\n\n&lt;p&gt;Entirely disabled Silex error handler:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app['exception_handler']-&amp;gt;disable();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So, It will be like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once  'Exception.php'; # Load the class\n$handler = new ErrorHandler(); # Initialize/Register it\n\n$app = new \\Silex\\Application();\n$app-&amp;gt;get('/', function () use ($app) {\n\n\n    nonexistentfunction();  \n    trigger_error(\"example\");\n    throw new \\Exception(\"example\");\n\n});\n$app-&amp;gt;run();\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["我可以在Silex中禁用错误​​/异常处理吗？", ["\n\n", "I'm building an app based on Silex 1.3.  This is my first encounter with Silex, so I'm not very familiar with it.", "\n\n", "I'd like to use my own error/exception handler, which is basically a class that registers itself and then will catch all errors, fatal errors, and uncaught exceptions and handle them, either with Whoops in development, or a graceful handler in production.", "\n\n", "However, once I'm inside a silex controller, middleware, whatever, Silex will take over and use it's own error handling. Mine will still catch fatal errors, since Silex apparently doesn't hook into shutdown, but everything else is replaced with the default \"Something went wrong\" page from Silex.", "\n\n", "I do understand that I can use $app->error() to override HOW Silex handles errors, but I haven't found a way to set things back to the original ErrorHandler from there, or to override WHETHER Silex handles errors.", "\n\n", "So, does anyone know how to either a) tell Silex to use my error handler, using $app->error() or some other way, b) just disable error handling in Silex entirely, or c) as a last resort, get Silex to catch fatal errors so I can handle all three types from within $app->error()?", "\n\n", "Since this is my first time using Silex, feel free to correct me or show me how you handle errors in Silex if there's a better way, but please also answer the question if you can.", "\n\n", "Some example code:", "\n\n", "// This will register itself and then handle all errors.\n$handler = new ErrorHandler();\n\n// These are all handled appropriately.\nnonexistentfunction();            // Correctly caught by ErrorHandler::handleFatalError\ntrigger_error(\"example\");         // Correctly caught by ErrorHandler::handlePhpError\nthrow new \\Exception(\"example\");  // Correctly caught by ErrorHandler::handleException\n\n$app = new \\Silex\\Application();\n$app->get('/', function () use ($app) {\n\n    // This is still handled correctly.\n    nonexistentfunction();            // Correctly caught by ErrorHandler::handleFatalError\n\n    // However, these are now overridden by Silex.\n    trigger_error(\"example\");         // INCORRECTLY DISPLAYS SILEX ERROR PAGE.\n    throw new \\Exception(\"example\");  // INCORRECTLY DISPLAYS SILEX ERROR PAGE.\n\n});\n$app->run();\n", "\n\n", "And a very simplified ErrorHandler for reference:", "\n\n", "Class ErrorHandler\n{\n    public function __construct()\n    {\n        $this->register();\n    }\n\n    private function register()\n    {\n        register_shutdown_function( array($this, \"handleFatalError\") );\n        set_error_handler(array($this, \"handlePhpError\"));\n        set_exception_handler(array($this, \"handleException\"));\n    }\n\n    // Etc.\n\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "迭代器删除要注意处理\r\n\r\n```\r\niter = abooklist.erase(iter);\r\n```\r\n\r\n\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "异常处理", "Question": ["C++ 未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数", ["0x0FA5E636 (ucrtbased.dll) (set.exe 中)处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。 这是哪里错了", "\n\n", " #include<iostream>\n#include<set>\n#include<vector>\n#include<string>\nusing namespace std;\nstring find_book(vector<string> & abooklist, set<string> &abooks);\nint main()\n{\n    vector <string> booklist;// the books I wanna read\n    booklist.push_back(\"a\");\n    booklist.push_back(\"b\");\n    booklist.push_back(\"c\");\n\n    set<string> books;//the books I have read\n    books.insert(\"a\");\n    books.insert(\"c\");\n    books.insert(\"x\");\n    books.insert(\"g\");\n\n    cout<<\"the book for you : \"<<find_book(booklist, books)<<endl;\n    getchar();\n    return 0;\n}\n\nstring find_book( vector<string> & abooklist, set<string> &abooks )\n{\n    //find a book from booklist that can not be found in books\n    vector<string>::iterator iter = abooklist.begin();\n    while (iter != (abooklist.end()))\n    {\n        if (!abooks.count(*iter))\n        {\n            string temp=*iter;\n            abooks.insert(*iter);\n            abooklist.erase(iter);//remove the book found int booklist \n                                                                            //and put it in books\n            return temp;\n        }\n\n        iter++;\n    }\n    return \"not found\";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能使用了已经被释放空间的指针&amp;#xff1b;数组越界访问等等&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["处未处理的异常: 0xC000001D: Illegal Instruction产生原因", ["在windows xp下 vs2005中运行程序时，", "报错：处未处理的异常: 0xC000001D: Illegal Instruction", "请问产生这种错误都有可能是哪些原因？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;新建的项目还是打开别人的项目&amp;#xff1f;别人的可能引用了其他题主电脑上没有的framework或者core版本dll文件。&lt;/p&gt;\n&lt;p&gt;题主新建个项目拷贝代码进行去重新运行试试&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Visual studio 2019 运行代码后提示“未经处理的异常”", ["刚刚安装了2019的vs，之后运行了之后跳出如下的错误提示。", "\n", "\n", "相关代码如下：", "\n", "using", " System;\n", "namespace", " RectangleApplication\n{\n    ", "class", " ", "Rectangle", "\n    {\n        ", "//成员变量", "\n        ", "double", " length;\n        ", "double", " width;\n        ", "public", " ", "void", " ", "Acceptdetails", "()", "\n        ", "{\n            length = ", "4.5", ";\n            width = ", "3.5", ";\n        }\n        ", "public", " ", "double", " ", "GetArea", "()", "\n        ", "{\n            ", "return", " length * width;\n        }\n        ", "public", " ", "void", " ", "Display", "()", "\n        ", "{\n            ", "Console", ".", "WriteLine", "(", "\"Length:{0}\"", ",length);\n            ", "Console", ".", "WriteLine", "(", "\"Width:{0}\"", ",width);\n            ", "Console", ".", "WriteLine", "(", "\"Area:{0}\"", ",", "GetArea", "());\n        }\n    }\n    ", "class", " ", "ExecuteRectangle", "\n    {\n        ", "static", " ", "void", " ", "Main", "(string[] args)", "\n        ", "{\n            Rectangle r = ", "new", " ", "Rectangle", "();\n            r.", "Acceptdetails", "();\n            r.", "Display", "();\n            ", "Console", ".", "ReadLine", "();\n        }\n    }\n}\n\n", "\n", "想请教一下要如何解决这个报错？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff01;&amp;#xff01;谢谢&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ns &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;# 以“.”为标志对字符串进行切片&amp;#xff0c;得到一个字符串列表&lt;/span&gt;\n    lists &amp;#61; s.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;# 是否是4个数字&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(lists) !&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;数字不够4个&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 是否都在0-255之间&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n            tmp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(lists[i])\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; tmp &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;):\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;数字取值超范围&amp;#39;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;数字取值超范围&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;合法&amp;#39;&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f(s))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python错误和异常处理", ["互联网上合法的IP地址是由'.'分隔开的4个数字组成，每个数字的取值范围是0-255。现在用户输入一个IP地址 (不含空白符，不含前导0，如001直接输入1)，请你判断它是否为合法IP，若是，输出“合法”，否则捕获”数字不够4个”和“数字取值超范围”的异常。例如用户输入为202.196.6.10， 则输出“合法“; 用户输入202.196.6，则输出“数字不够4个”； 用户输入202.196.6.800，则输出“数字取值超范围”。"]], "Tag": "程序设计"}
{"Answer": "我刚才写了一些代码，自己建了一个数据库表usertable，字段为id，name，进行了测试。\r\n我先在你的代码中加入一些文字说明。好看出代码运行的地方。\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484534223_409236.jpg)\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484534256_916173.jpg)\r\n更新成功的结果如下：\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484534525_205733.jpg)\r\n更新失败的结果如下（当然，我是故意设置和你一样异常的结果，即找不到该数据库表）：\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484534555_536390.jpg)\r\n结果表明，无论成功或是失败，都执行了提交操作。\r\n后来我将你的update方法注释掉，并将其具体代码放在了main方法中，如下图。\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484537041_703413.jpg)\r\n结果就成功了。\r\n![图片说明](https://img-ask.csdn.net/upload/201701/16/1484537066_8743.jpg)\r\n我猜想是你的update方法已经对该方法可能出现的异常做出了异常处理，所以对于Main函数的try就无法捕获异常，所以就认为是没有问题的，就一直这么执行下去了。\r\n这个我也是想了挺久的，不知道有没有想对，但愿对你有帮助。", "Konwledge_Point": "异常处理", "Question": ["事务提交过程，出现异常，但是回滚事务失败，这是什么原因", ["/**", "\n*实现事务：Tom 对Jerry 转账500元 ", "\n*", "\n*/", "\npublic class TransactionTest {", "\n\n", "public static void update(Connection conn,String sql,Object ... args){\n    PreparedStatement pstmt = null;\n    try{\n        pstmt = conn.prepareStatement(sql);//通过SQL语句 创建PreparedStatement 对象。\n\n        //利用 for 循环对 SQL 语句中的 PreparedStatement 占位符 ，更新数据。\n        for(int i = 0;i < args.length;i++){\n            pstmt.setObject((i+1), args[i]);\n        }\n        //更新执行。\n        pstmt.executeUpdate();\n\n    }catch(Exception e){\n        e.printStackTrace();\n    }finally{\n        //关闭数据库连接。\n        JDBCTools.release(null, pstmt, null);\n    }\n}\n\npublic static void main(String[] args) {\n    Connection conn = null;\n\n    try{\n        conn = JDBCTools.getConnection();\n\n        //取消默认的提交方式\n        conn.setAutoCommit(false);\n\n        String sql = \"UPDATE user SET balance = balance - 500 WHERE id = 2000001\";\n        update(conn, sql);\n", "\n\n", "/*此处会 报com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException，Table 'ming.users' doesn't exist", "\n但是，整个事务却没有回滚。*/", "\n\n", "        sql = \"UPDATE users SET balance = balance + 500 WHERE id = 2000002\";\n        update(conn,sql);\n\n        //若事务操作正常，则提交事务\n        conn.commit();\n\n    } catch(Exception e){\n        //若事务操作出现异常，则需要在异常处理中回滚事务\n        try {\n            conn.rollback();\n        } catch (SQLException e1) {\n            e1.printStackTrace();\n        }\n        e.printStackTrace();\n    } finally{\n        JDBCTools.release(null, null, conn);\n    }\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;出错的这个是hp打印机服务&amp;#xff0c;安装时先把这个进程关掉了试试。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["安装VS时，遇到 “未经处理的异常”，如何解决？", ["windows11，前一天晚上安装了Visual Studio2022以后，第二天电脑开机遇到这个问题，不知道如何解决？", "\n", "是卸载重装低版本呢，还是另有他发？望指点，抱拳！"]], "Tag": "程序设计"}
{"Answer": "像日志功能这些应该是项目的公共模块，你应该对日志功能做充分的测试，确保正常情况下不会出异常，能够应对性能、并发等的要求之后再拿来使用。\r\n当然，这里访问文件出异常，你可以直接打在控制台的。", "Konwledge_Point": "异常处理", "Question": ["请教一个异常处理方案!!!!!", ["要求: 所有的异常信息都要保存到文件里,每产生一次异常,生成一个文件.", "\n\n", "我想了一个方案,所有的异常都统一抛出一个自定义异常AppException,在appException里提供一个makeReport方案,将这个异常的信息保存在文件里,那么写文件操作也会抛出IO异常.", "\n\n", "这个时候我该怎么处理呢?", "\n或者提供一下其他方案,只要能满足要求.", "\n\n", "以下是伪代码:", "\n\n", "[code=\"java\"]", "\nclass AppException extends exception{", "\n\n", "public void makeReport(){", "\n//生成异常日志", "\ntry{", "\n//写文件", "\n... ", "\n}catch(IOException){", "\n?????", "\n}", "\n}", "\n}", "\n\n", "class A{", "\nprivate void aaa() throws AppException {", "\ntry{", "\n...", "\n}catch(...){", "\nthrow new AppException();", "\n}", "\n}", "\n\n", "private void bbb(){", "\ntry{", "\naaa();", "\n}catch(AppException e){", "\ne.makeReport();// ???????", "\n}", "\n}", "\n}", "\n[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n Scanner sc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入数字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; age &amp;#61; sc.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; length &amp;#61; age - &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (length &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                throw &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;MyException()&lt;/span&gt;;\n            }\n          &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; arr &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;length&lt;/span&gt;]&lt;/span&gt;;\n        } catch (MyException e) {\n            e.print&lt;span class=\"hljs-constructor\"&gt;StackTrace()&lt;/span&gt;;\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Java的异常处理的编写 没有遇到过", ["编写一个程序提示用户从键盘键入一个数，然后从该数上减去20，将得到结果作为定义一个数组的大小；如果定义的这个数组大小是个负数的话，程序就抛出一个自定义异常MyException；如果有这样的异常存在的话，编写一个catch 语句块来捕获该异常，并将该异常信息在catch 语句块中输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can not re-throw from the exception handler, however, there are other places you can. For example you can de-couple the re-throw from the handler by encapsulating things into a class of it's own and then use the &lt;code&gt;__destruct()&lt;/code&gt; function (PHP 5.3, &lt;a href=\"http://codepad.viper-7.com/jamrqP\"&gt;Demo&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\nclass ExceptionHandler\n{\n    private $rethrow;\n    public function __construct()\n    {\n        set_exception_handler(array($this, 'handler'));\n    }\n    public function handler($exception)\n    {\n        echo  \"cleaning up.\n\";\n        $this-&amp;gt;rethrow = $exception;\n    }\n    public function __destruct()\n    {\n        if ($this-&amp;gt;rethrow) throw $this-&amp;gt;rethrow;\n    }\n}\n\n$handler = new ExceptionHandler;\n\nthrow new Exception();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Put this into my error log:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[29-Oct-2011 xx:32:25] PHP Fatal error: Uncaught exception 'Exception' in /.../test-exception.php:23\nStack trace:\n#0 {main}\nthrown in /.../test-exception.php on line 23\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["在异常处理程序中抛出异常", ["\n\n", "I have a script with an exception handler.  This exception handler cleans up a couple connections, prior to the script exiting after an exception.", "\n\n", "I would like to re-throw the exception from this exception handler so that it is handled by PHP's own last-resort exception handler, where the error is written to PHP's error log, or whatever the default is, as configured in PHP.ini.", "\n\n", "Unfortunately, this doesn't seem like a possibility, as outlined here:", "\n\n", "http://www.php.net/manual/en/function.set-exception-handler.php#68712", "\n\n", "\n  ", "Will cause a Fatal error: Exception thrown without a stack frame", "\n", "\n\n", "Is there another way to bubble the error up the stack so that PHP handles it after my exception handler is done cleaning up?", "\n    "]], "Tag": "程序设计"}
{"Answer": "既是try+catch可以，try也可以，但单独catch就不可以，就像if else，单独if可以，但单独else就不可以", "Konwledge_Point": "异常处理", "Question": ["弱问谭浩强版c++异常处理", ["第十四章，463页“但是在一个try-catch结构中，可以只有try块而无catch块。即在本函数中只检查而不处理，把catch处理块放在其它函数中。”", "\n问题：没太理解什么意思，文中曾提到，catch必须紧跟在try块之后，按照我的理解，我把catch单独拎出来放进另一个函数，直接报错。", "\n怎么回事？谢谢！", "\n|||"]], "Tag": "程序设计"}
{"Answer": "我理解的jsp的异常处理机制是指jsp可以创建一个错误处理页面，然后在其他页面发生指定异常时跳转到相应的创建的错误处理页面中：\r\nJSP异常有以下两个步骤\r\n\r\n1、写一个JSP错误页面\r\n异常处理文件需要使用page指令的isErrorPage属性，格式如下\r\n&lt;%@ page isErrorPage=\"true\"%&gt;\r\n\r\n如果在页面上进行了这样的设置，页面就有一项特殊的功能，就是能够访问异常对象exception，exception是JSP的内部对象，当页面在运行过程中发生异常的时候，会抛出异常对象exception，该对象exception包含了异常信息。下面是处理异常文件errorPage.jsp:\r\n\r\n&lt;%@ page contentType=\"text/html;charset=gb2312\" %&gt;\r\n\r\n&lt;%@ page isErrorPage=\"true\"%&gt;\r\n\r\n 2、在JSP内指定异常发生时应该回到哪个错误页面\r\n\r\n要想让页面在产生异常的时候，由专门的异常处理文件对异常进行处理，需要在该页面中使用page指令的errorPage指定专门的异常处理页面，格式如下\r\n&lt;%@ page errorPage=\"errorPage.jsp\"%&gt;\r\n另外，为页面指定异常处理文件还可以通过web.xml进行配置\r\n 常见的异常编码;\r\n400错误：错误请求\r\n401错误：访问被拒绝\r\n403错误：文件被禁止访问\r\n404错误：文件没有找到\r\n500错误：问价在运行过程中发生未知错误\r\n\r\n\r\n具体可查看http://www.360doc.com/content/13/0727/09/13247663_302769794.shtml  里面有实际例子\r\n\r\n\r\n关于checked异常：\r\n那些扩展了java.lang.Exception的异常称为checked exceptions, 编译器要求这些异常必须被捕获或者重新抛出. 那些扩展了java.lang.RuntimeException的异常称为unchecked exceptions, 它们不是必须捕获的. 当然, 也可以捕获这些异常并相应地扩展调用栈, 就像通常对checked exceptions做的那样.", "Konwledge_Point": "异常处理", "Question": ["关于JSP内建异常机制支持的问题", ["今天在看书的时候看到这样一句话：因为JSP内建了异常机制支持，所以JSP可以不处理异常，即使是checked异常。不是很懂。有没有大神给我解释一下什么是内建异常机制，什么是checked异常？"]], "Tag": "程序设计"}
{"Answer": "首先，你要知道0xCCCCCCCC是什么东西。\r\n这是VC++一个非常有用的功能。\r\nVC++的调试版程序（注意，release版没有），在你调用malloc申请了内存之后，会把这个内存块全部填充成0xCC\r\n所以，遇到这种提示，想都不用想就知道肯定是分配了内存，没有初始化变量。", "Konwledge_Point": "异常处理", "Question": ["为什么vs提示引发了未经处理的异常:读取访问权限冲突。 **Bt** 是 0xCCCCCCCC。", ["#include\"stdio.h\"", "\ntypedef struct tree", "\n{", "\n    char element;", "\n    struct tree ", "leftchild, *rightchild;", "\n}Tree;", "\nTree", " malloc2(void)//为新节点申请动态空间", "\n{", "\n    Tree* p;", "\n    p = (Tree*)malloc(sizeof(Tree));", "\n    /*if (IS_FULL(p))", "\n    {", "\n        fprintf(stderr, \"The memery is full\\n\");", "\n        exit(1);", "\n    }*/", "\n    return p;", "\n}", "\nvoid linkchild(Tree ", "Bt, char element, Tree *lchild, Tree *rchild)//给树连接孩子", "\n{", "\n    Tree", " p = malloc2();//为p申请动态空间", "\n    p->leftchild = lchild;", "\n    p->rightchild = rchild;", "\n    p->element = element;", "\n    lchild = rchild = NULL;", "\n    Bt = p;", "\n}", "\nvoid BreakBTree(Tree ", "Bt, char *element, Tree *lchild, Tree *rchild)//释放Bt的空间", "\n{", "\n    if (Bt)", "\n    {", "\n        *element = Bt->element;", "\n        lchild = Bt->leftchild;", "\n        rchild = Bt->rightchild;", "\n        Bt = NULL;", "\n        free(Bt);", "\n    }", "\n}", "\nvoid visit(Tree", " Bt)  //打印节点元素", "\n{", "\n    if (Bt)", "\n        printf(\"%c\", Bt->element);", "\n}", "\nvoid Fvisit(Tree *Bt)  //先序遍历", "\n{", "\n    if (Bt)", "\n    {", "\n        visit(Bt);", "\n        Fvisit(Bt->leftchild);", "\n        Fvisit(Bt->rightchild);", "\n    }", "\n}", "\nvoid Mvisit(Tree *Bt)  //中序遍历", "\n{", "\n    if (Bt)", "\n    {", "\n        Mvisit(Bt->leftchild);", "\n        visit(Bt);", "\n        Mvisit(Bt->rightchild);", "\n    }", "\n}", "\nvoid Lvisit(Tree *Bt)  //中序遍历", "\n{", "\n    if (Bt)", "\n    {", "\n        Lvisit(Bt->leftchild);", "\n        Lvisit(Bt);", "\n        Lvisit(Bt->rightchild);", "\n    }", "\n}", "\nvoid main()", "\n{", "\n    Tree a, x, y, z;", "\n    linkchild(&x, 'E', &a, &a);", "\n    linkchild(&y, 'F', &a, &a);", "\n    linkchild(&z, 'C', &x, &y);", "\n    linkchild(&y, 'D', &a, &a);", "\n    linkchild(&x, 'B', &y, &z);", "\n    Fvisit(&x);", "\n    while (1)", "\n    {", "\n\n", "}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "C++异常类，继承自logic_error,logic_error的父类是exception。属于运行时错误，如果使用了一个超出有效范围的值，就会抛出此异常。也就是一般常说的越界访问。定义在命名空间std中。\r\n使用时须包含头文件 stdexcept\r\n```\r\n #include&lt;iostream&gt;\r\n#include&lt;stdexcept&gt;\r\n#include&lt;vector&gt;\r\nusing namespace std;//或者用其他方式包含using std::logic_error;和using std::out_of_range;\r\nint main (void)\r\n{\r\n\tvector&lt;int&gt; myvector(10);\r\n\ttry\r\n\t{\r\n\t\tmyvector.at(20)=100; // vector::at throws an out-of-range\r\n\t}\r\n\tcatch (out_of_range&amp; oor)\r\n\t{\r\n\t\tcerr &lt;&lt; \"Out of Range error: \" &lt;&lt; oor.what() &lt;&lt; endl;\r\n\t}\r\n\tgetchar();\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "异常处理", "Question": ["c++ catch异常处理问题", ["catch vector越界时throw的out_of_range时必须#include 的问题", "\n我知道out_of_range是stdexcept中定义的一个类", "\n但是，vector中没有关于这个类的声明的话，它是怎么抛出这个类的", "\n/**************                       上面有点没说清楚                            **************/", "\n\n", "查到vector中代码的时候发现它使用的是__throw_out_of_range_fmt()这个函数；", "\n这个函数只在functexcept.h中找到了它的声明，定义被隐藏起来了？", "\n\n", " #include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    __throw_out_of_range(\"out_of_range\");\n    return 0;\n}\n\n", "\n\n", "这样写是能成功编译的，运行也会提示程序抛出了out_of_range", "\n我这里并没有 ", "#include <stdexcept>", "\n也就是并没有声明过out_of_range这个类", "\n却能够抛出它，所以混乱了", "\n问题的关键就是 __throw_out_of_range这个函数的定义"]], "Tag": "程序设计"}
{"Answer": "```\r\n public class Exception {这类名和系统的catch (Exception e){重复了\r\n \r\n 把自己的类名改一下或者\r\n catch (Exception e){\r\n 改成\r\n  catch (java.lang.Exception e){\r\n```", "Konwledge_Point": "异常处理", "Question": ["java的异常处理 type mismatch", ["import java.util.*;", "\npublic class Exception {", "\n    public static void main(String[] args) {", "\n        for(int n=1;n<=3;n++){", "\n            try{", "\n                System.out.println(\"输入第\"+n+\"组数\");", "\n                System.out.println(\"请输入两个整数，空格分隔，回车结束： \");", "\n                Scanner in=new Scanner(System.in);", "\n                int a=in.nextInt();", "\n                int b=in.nextInt();", "\n                System.out.println(\"第\"+n+\"组两整数的商：\"+a+\"/\"+b+\"=\"+a/b);", "\n            }", "\n            catch(ArithmeticException e){", "\n                System.out.println(\"发生了除数为错误！请重新输入！\");", "\n                n--;", "\n            }", "\n            catch (Exception e){", "\n                System.out.println(\"未按要求的典型输入，请重新输入整数！\");", "\n                n--;", "\n            }", "\n        }", "\n    }", "\n}", "\n\n", "第二种异常语句出提示：Type mismatch: cannot convert from Exception to Throwable", "\n请问应该怎么更改？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;这个问题的出现是因为在异常处理的代码逻辑中没有完全处理所有的异常情况。当输入的参数b等于0时&amp;#xff0c;程序会抛出一个字符串类型的异常信息。然而&amp;#xff0c;在异常处理语句块中&amp;#xff0c;并没有处理该类型的异常&amp;#xff0c;而是使用了一个char*类型的异常捕获语句&amp;#xff0c;导致程序运行出现错误。&lt;/p&gt;\n&lt;p&gt;解决办法是将异常捕获语句中的char&lt;em&gt;类型改为const char&lt;/em&gt;类型&amp;#xff0c;同时在处理异常的逻辑中加入对该类型异常的处理&amp;#xff0c;例如重新输入一个非零的b值。修改后的代码如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;calculate&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;非法输入&amp;#34;&lt;/span&gt;;\n        }\n\n    }\n    &lt;span class=\"hljs-built_in\"&gt;catch&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* w ) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;重新输入一个非零b &amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; b;\n        &lt;span class=\"hljs-built_in\"&gt;calculate&lt;/span&gt;(a, b); &lt;span class=\"hljs-comment\"&gt;// 若b值合法&amp;#xff0c;则再次进行计算&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    cout &amp;lt;&amp;lt; a / b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;&lt;span class=\"hljs-comment\"&gt;//输入 5&amp;#xff0c;0&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;calculate&lt;/span&gt;(a, b);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样修改之后&amp;#xff0c;当输入的参数b等于0时&amp;#xff0c;程序会输出一条提示信息并等待重新输入一个非零的b值&amp;#xff0c;直到输入合法为止。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C++异常处理出现问题", ["学习异常处理，写了一段程序 出现问题\n\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "calculate", "(", "double", " a, ", "double", " b)", "\n", "{\n    \n    ", "try", " {\n        \n        ", "if", " (b == ", "0", ")\n        {\n            ", "throw", " ", "\"非法输入\"", ";\n        }\n\n    }\n    ", "catch", " (", "char", "* w ) {\n        cout << ", "\"重新输入一个非零b \"", ";\n        cin >> b;\n        \n\n    }\n    cout << a / b;\n}\n", "int", " ", "main", "()", " ", "{\n    ", "double", " a=", "0", ", b=", "0", ";\n    cin >> a >> b;", "//输入 5，0", "\n    ", "calculate", "(a, b);\n    ", "return", " ", "0", ";\n    \n}\n", "\n", "运行出现异常", "Debug Error", "abort（） has been called"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是 Max 这个宏定义的太大了吧&amp;#xff0c;导致栈溢出了&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["未经处理的异常如何解决", ["问题遇到的现象和发生背景", "\n", "编译一切正常，运行时错误", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "#", "define", " Max 10000", "\n", "using", " ", "namespace", " std;\n\n", "void", " ", "showMenu", "()", "\n", "{\n    cout << ", "\"1,添加联系人\"", " << endl;\n    cout << ", "\"2,显示联系人\"", " << endl;\n    cout << ", "\"3,删除联系人\"", " << endl;\n    cout << ", "\"4,查找联系人\"", " << endl;\n    cout << ", "\"5,修稿联系人\"", " << endl;\n    cout << ", "\"6,清空联系人\"", " << endl;\n    cout << ", "\"0,退出通讯录\"", " << endl;\n}\n\n", "struct", " ", "Person", "\n{\n    string m_Name;\n    ", "int", " m_Sex;\n    ", "int", " m_Age;\n    string m_string;\n    string m_Addr;\n};\n\n", "struct", " ", "Addressbooks", " \n{\n    ", "struct", " ", "Person", " personArray[Max];\n\n    ", "int", " m_Size;\n};\n\n", "void", " ", "addPerson", "(Addressbooks* abs)", "\n", "{\n    ", "if", " (abs->m_Size == Max)\n    {\n        cout << ", "\"通讯录已满\"", " << endl;\n        ", "return", ";\n    }\n    ", "else", "\n    {\n        string name;\n        cout << ", "\"请输入姓名\"", " << endl;\n        cin >> name;\n        abs->personArray[abs->m_Size].m_Name = name;\n    }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    Addressbooks abs;\n    abs.m_Size = ", "0", ";\n    ", "int", " select = ", "0", ";", "//创建用户选择输入的变量；", "\n\n", "while", "(", "true", ")\n{\n\n    ", "showMenu", "();\n\n    cin >> select;\n    \n        ", "switch", " (select)\n        {\n        ", "case", " ", "1", ":\n            ", "addPerson", "(&abs);\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "break", ";\n        ", "case", " ", "4", ":\n            ", "break", ";\n        ", "case", " ", "5", ":\n            ", "break", ";\n        ", "case", " ", "6", ":\n            ", "break", ";\n        ", "case", " ", "0", ":\n            cout << ", "\"欢迎下次使用\"", " << endl;\n            ", "system", "(", "\"pause\"", ");\n            ", "return", " ", "0", ";\n            ", "break", ";\n        ", "default", ":\n            ", "break", ";\n        }\n    }\n\n\n\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "0x00007FF7F69692A7 处有未经处理的异常(在 通讯录管理系统.exe 中): 0xC00000FD: Stack overflow (参数: 0x0000000000000001, 0x000000584A803000)。", "\n", "我的解答思路和尝试过的方法", "\n", "尝试重启未有效果", "\n", "我想要达到的结果", "\n", "黑马程序员的c++通讯录管理视频"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could also convert all your php errors with &lt;a href=\"http://ru2.php.net/set_error_handler\" rel=\"nofollow\"&gt;set_error_handler()&lt;/a&gt; and &lt;a href=\"http://ru2.php.net/manual/en/class.errorexception.php\" rel=\"nofollow\"&gt;ErrorException&lt;/a&gt; into exceptions:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function exception_error_handler($errno, $errstr, $errfile, $errline )\n{\n    throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n}\nset_error_handler(\"exception_error_handler\");\n\ntry {\n    $a = 1 / 0;\n} catch (ErrorException $e) {\n    echo $e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP异常处理与C＃", ["\n\n", "this is a really basic question (I hope).  Most of the exception handling I have done has been with c#.  In c# any code that errors out in  a try catch block is dealt with by the catch code.  For example ", "\n\n", "try\n{\n int divByZero=45/0;\n}\ncatch(Exception ex)\n{\n errorCode.text=ex.message();\n}\n", "\n\n", "The error would be displayed in errorCode.text.  If I were to try and run the same code in php however:", "\n\n", "try{\n    $divByZero=45/0;\n    }\ncatch(Exception ex)\n{\n  echo ex->getMessage();\n}\n", "\n\n", "The catch code is not run.  Based on my limeted understanding, php needs a throw.  Doesn't that defeat the entire purpose of error checking?  Doesn't this reduce a try catch to an if then statement?\n    if(dividing by zero)throw error\nPlease tell me that I don't have to anticipate every possible error in a try catch with a throw.  If I do, is there anyway to make php's error handling behave more like c#?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Well the short answer is pretty simple: It's not working because the exception is thrown inside of a view. \nYou can test this by simple adding&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;throw new \\RuntimeException('Test');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to a controller method or a routing closure or any place outside a view and by adding&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php throw new \\RuntimeException('Test'); ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to a view template. Laravel will show the first one as a &lt;code&gt;RuntimeException&lt;/code&gt; and the second as an &lt;code&gt;ErrorException&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately this isn't helping to actually solve the problem.&lt;/p&gt;\n\n&lt;p&gt;PS: In Illuminate\\View\\Engines\\CompilerEngine the handleViewException method replaces the original exception:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected function handleViewException($e, $obLevel)\n{\n    $e = new \\ErrorException($this-&amp;gt;getMessage($e), 0, 1, $e-&amp;gt;getFile(), $e-&amp;gt;getLine(), $e);\n\n    parent::handleViewException($e, $obLevel);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel异常处理：“错误”类的异常", ["\n\n", "I use a single Closure to handle exceptions in my app:", "\n\n", "App::error(function(Exception $exception, $code)\n{\n    if (is_a($exception, 'MsgException')) {\n        ...\n        return;\n    }\n    dd($exception); // debugging\n});\n", "\n\n", "The strange thing is that if I throw a ", "MsgException", "...", "\n\n", "<?php use MsgException; // alias for ExampleNamespace\\MsgException\n\n...\nthrow new MsgException();\n", "\n\n", "...which is a custom class...", "\n\n", "<?php namespace ExampleNamespace;\n\nuse RuntimeException;\n\nclass MsgException extends RuntimeException {}\n", "\n\n", "... ", "is_a($exception)", " is ", "false", " and ", "dd($exception)", " says it's an ", "ErrorException", ".", "\n\n", "I have no idea why this is happening. Any suggestions or ideas how I can debug my application?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Consider this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try {\n    $stmt-&amp;gt;execute();\n\n    if (!$row = $stmt-&amp;gt;fetch(PDO::FETCH_ASSOC)) {\n        throw new ErrorExeption('there is no row with that id');\n    }\n} catch (PDOException $e) {\n    echo $e-&amp;gt;getMessage();\n} catch (ErrorExeption $e) {\n    echo $e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP中的异常处理", ["\n\n", "I try throw exception when there is no result in database, here is code:", "\n\n", "try {\n    if (!$stmt->execute()) {\n       throw new ErrorExeption('there is no row with that id');\n    }\n} catch (ErrorExeption $e) {\n    echo $e->getMessage();\n}\n", "\n\n", "So, when I paste wron Id I cant see the error message. What I am doing wrong?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;继承自Exception的异常要声明抛出。&lt;br /&gt;继承自RuntimeException的异常不用声明&amp;#xff0c;也可以抛出。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["javaweb项目中为什么可以直接用抛出异常处理呢？", ["据我所知java如果方法中抛出异常，必须在方法声明处声明抛出，类处声明抛出，调用处声明抛出。", "现在有个问题，我发现有的项目直接就在处理的时候抛异常了，但是方法上面和类上面都没有抛出声明，这是怎么做到的呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf_s字符串输入需要指定允许的最大长度&lt;br /&gt;改为&lt;br /&gt;scanf_s(&amp;#34;%s%s&amp;#34;,a,50,b,50);&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["引发异常：0xC0000005:写入位置0x00200000时发生异常", ["引发异常：0xC0000005:写入位置0x00200000时发生异常"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样写&amp;#xff0c;话说sort不香吗&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\nqsort(&lt;span class=\"hljs-name\"&gt;&amp;amp;arr&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],arr.size(),sizeof(&lt;span class=\"hljs-name\"&gt;int&lt;/span&gt;), compare)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["C++使用qsort时发生异常: std::bad_alloc", ["异常：", "0x00007FFE65F7474C 处(位于 EmployeePayrollManagementSystem.exe 中)有未经处理的异常: Microsoft C++ 异常: std::bad_alloc，位于内存位置 0x0000005EDECFDA30 处。", "\n", "刚入坑，第一次遇到这个异常，且使用qsort次数不多，不熟练，不知如何处理。", "问题应该主要在于qsort中的比较函数，在向比较函数中传参时失败：", "\n", "\n", "问题部分代码：", "排序函数sorts中截取的相关部分：（people类我放在最后面）", "\n", "void", " ", "sorts", "(std::vector<People>arr)", " ", "{", "//部分无用参数我去掉了", "\n    ", "qsort", "(&arr, arr.", "size", "(), ", "sizeof", "(People), ascendingName);\n}\n", "\n", "相关的比较函数：", "\n", "int", " ascending", "Name(", "const", " ", "void", "*", " ", "a", ", ", "const", " ", "void", "*", " ", "b", ")", " {\n    People* t1 = (People*)a;\n    People* t2 = (People*)b;\n    return t1->get", "Name()", " > t2->get", "Name()", " ? ", "1", " : -", "1", ";\n}\n\n", "\n", "People类：", "\n", "class", " People\n{\npublic:\n    typedef ", "struct", " changedSalary {\n        std::", "string", " time;\n        std::", "string", " money;\n    }changedSalary;\n", "private", ":\n    std::", "string", " name, sex, age, position, serviceLength, number, salary, positionOrder;\n    std::vector<changedSalary> cSalary;\npublic:\n    ", "//构造器", "\n    ", "People()", " {}\n    ", "People(", "std", "::", "string", " ", "name", ")", " {\n        set", "Name(", "name", ")", ";\n    }\n    ", "People(", "std", "::", "string", " ", "name", ", ", "std", "::", "string", " ", "number", ")", " {\n        set", "Name(", "name", ")", "; set", "Number(", "number", ")", ";\n    }\n    ", "People(", "std", "::", "string", " ", "name", ", ", "std", "::", "string", " ", "number", ", ", "std", "::", "string", " ", "salary", ")", " {\n        set", "Name(", "name", ")", "; set", "Number(", "number", ")", "; set", "Salary(", "salary", ")", ";\n    }\n    ", "People(", "std", "::", "string", " ", "name", ", ", "std", "::", "string", " ", "number", ", ", "std", "::", "string", " ", "salary", ", ", "std", "::", "string", " ", "position", ")", " {\n        set", "Name(", "name", ")", "; set", "Number(", "number", ")", "; set", "Salary(", "salary", ")", "; set", "Position(", "position", ")", ";\n    }\n    ", "//名字", "\n    void set", "Name(", "std", "::", "string", " ", "name", ")", " {\n        this->name = name;\n    }\n    std::", "string", " get", "Name()", " {\n        return name;\n    }\n    ", "//性别", "\n    void set", "Sex(", "std", "::", "string", " ", "sex", ")", " {\n        this->sex = sex;\n    }\n    std::", "string", " get", "Sex()", " {\n        return sex;\n    }\n    ", "//年龄", "\n    void set", "Age(", "std", "::", "string", " ", "age", ")", " {\n        this->age = age;\n    }\n    std::", "string", " get", "Age()", " {\n        return age;\n    }\n    ", "//职位", "\n    void set", "Position(", "std", "::", "string", " ", "position", ")", " {\n        this->position = position;\n    }\n    std::", "string", " get", "Position()", " {\n        return position;\n    }\n    ", "//职位大小顺序", "\n    void set", "PositionOrder(", "std", "::", "string", " ", "order", ")", " {\n        positionOrder = order;\n    }\n    std::", "string", " get", "PositionOrder()", " {\n        return positionOrder;\n    }\n    ", "//工龄", "\n    void set", "ServiceLength(", "std", "::", "string", " ", "length", ")", " {\n        serviceLength = length;\n    }\n    std::", "string", " get", "ServiceLength()", " {\n        return serviceLength;\n    }\n    ", "//电话", "\n    void set", "Number(", "std", "::", "string", " ", "number", ")", " {\n        this->number = number;\n    }\n    std::", "string", " get", "Number()", " {\n        return number;\n    }\n    ", "//薪资", "\n    void set", "Salary(", "std", "::", "string", " ", "salary", ")", " {\n        this->salary = salary;\n    }\n    std::", "string", " get", "Salary()", " {\n        return salary;\n    }\n    ", "//薪资变化", "\n    void set", "ChangedSalary(", "std", "::", "vector", "<", "changedSalary", "> ", "changedSalary", ")", " {\n        cSalary = changedSalary;\n    }\n    std::vector<changedSalary> get", "ChangedSalary()", " {\n        return cSalary;\n    }\n};\n\n\n"]], "Tag": "程序设计"}
{"Answer": "最近刚好在做我的第一个j2ee项目，我在项目中的做法是在catch语句块中throw一个自己定义的异常，然后利用struts2里面的关于异常的处理机制，可以讲页面定向到我们定义好的视图中，否则以出错就出来一个灰色的页面，上面大串e文……\r\n\r\n新手上路 :D", "Konwledge_Point": "异常处理", "Question": ["在web应用中如何对异常进行处理", ["在web应用中常常需要处理异常，小弟有个问题，在处理的时候直接用在catch里面：", "\ne.printStackTrace();", "\n还是在catch里面用：", "\nthrow new Exception(e);将异常抛出来好呢？"]], "Tag": "程序设计"}
{"Answer": "[b]运行结果是打印aa[/b],\r\n如果深究的话理由在Java语言规范第三版的14.20.2节和14.21节，通俗点说就是：break,continue,return,throw语句都代表某个代码快没有正常运行结束，上面的a()方法中try中因为有throw语句，代表没有正常结束，此时如果finally语句能正常结束则能抛出异常，但是finally也有代表不正常结束的return语句，此时异常被忽略和丢弃；所以结果只有aa字符串打印处理，不管怎样finally代码块从能运行；\r\n其实这跟我们经常说的\"覆盖值\"有点类似，看下面代码：\r\n\r\n\tprivate static String a()   {\r\n\t\ttry{\r\n\t\t\treturn \"bb\";\r\n\t\t}finally{\r\n\t\t\treturn \"aa\";\r\n\t\t}\r\n\t}\r\n\r\n该方法还是返回aa，因为aa把bb给覆盖了\r\n希望对你有所帮助", "Konwledge_Point": "异常处理", "Question": ["请教有神奇的异常处理", ["[code=\"java\"]   public static void main(String[] args) {", "\n        String n=null;", "\n        try{", "\n        n=a();", "\n        }catch(Exception e){", "\n            System.out.println(1);", "\n        }", "\n        System.out.println(n);", "\n    }", "\n    private static String a()   {", "\n        try{", "\n            throw new Exception();", "\n        }finally{", "\n            return \"aa\";", "\n        }", "\n    }[/code]", "\n整体都很是不解"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport random\n\n&lt;span class=\"hljs-attribute\"&gt;num&lt;/span&gt;&amp;#61;random.randint(1,101)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;要猜的数字为:&amp;#39;&lt;/span&gt;,num)\n&lt;span class=\"hljs-attribute\"&gt;count&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    &lt;span class=\"hljs-attribute\"&gt;user&lt;/span&gt;&amp;#61;int(input(&amp;#39;请输入要猜的数字:&amp;#39;))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; user&amp;gt;num:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;你猜的数字过大&amp;#39;&lt;/span&gt;)\n    elif user&amp;lt;num:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;你猜的数字过小&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;恭喜你,猜对了&amp;#39;&lt;/span&gt;)\n        break\n    count&amp;#43;&amp;#61;1\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;count&lt;/span&gt;&amp;#61;&amp;#61;6:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;都猜错啦,你的机会已经用完&amp;#39;&lt;/span&gt;)\n        break\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个只针对于你下面题目的需求&amp;#xff0c;因为不知你课件3猜数程序是如何&amp;#xff0c;无法给出符合题目的代码。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["用异常处理判断数值大小", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if和elif的缩进检查一下&amp;#xff0c;elif上面那一行的格式检查一下&amp;#xff0c;另外你的题目应该有一个while在最外层吧&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python 循环和程序异常处理", ["这是我想要得到的结果", "还有我自己写的代码，但是就是try和if while elif之间没套明白，到底怎么套啊"]], "Tag": "程序设计"}
{"Answer": "系统自动抛出的异常\r\n所有系统定义的编译和运行异常都可以由系统自动抛出，称为标准异常，并且 Java 强烈地要求应用程序进行完整的异常处理，给用户友好的提示，或者修正后使程序继续执行。\r\n\r\n \r\n\r\n语句抛出的异常 \r\n用户程序自定义的异常和应用程序特定的异常,必须借助于 throws 和 throw 语句来定义抛出异常。\r\n\r\n\r\nthrow是语句抛出一个异常。\r\n语法：throw (异常对象);\r\n         throw e;\r\n\r\nthrows是方法可能抛出异常的声明。(用在声明方法时，表示该方法可能要抛出异常)\r\n语法：[(修饰符)](返回值类型)(方法名)([参数列表])[throws(异常类)]{......}\r\n            public void doA(int a) throws Exception1,Exception3{......}\r\n\r\n \r\n\r\n举例：\r\n\r\nthrows E1,E2,E3只是告诉程序这个方法可能会抛出这些异常，方法的调用者可能要处理这些异常，而这些异常E1，E2，E3可能是该函数体产生的。\r\nthrow则是明确了这个地方要抛出这个异常。\r\n\r\n如： void doA(int a) throws Exception1,Exception3{\r\n           try{\r\n                 ......\r\n\r\n           }catch(Exception1 e){\r\n              throw e;\r\n           }catch(Exception2 e){\r\n              System.out.println(\"出错了！\");\r\n           }\r\n           if(a!=b)\r\n              throw new  Exception3(\"自定义异常\");\r\n}\r\n\r\n\r\n代码块中可能会产生3个异常，(Exception1,Exception2,Exception3)。\r\n如果产生Exception1异常，则捕获之后再抛出，由该方法的调用者去处理。\r\n如果产生Exception2异常，则该方法自己处理了（即System.out.println(\"出错了！\");）。所以该方法就不会再向外抛出Exception2异常了，void doA() throws Exception1,Exception3 里面的Exception2也就不用写了。\r\n而Exception3异常是该方法的某段逻辑出错，程序员自己做了处理，在该段逻辑错误的情况下抛出异常Exception3，则该方法的调用者也要处理此异常。\r\n\r\n \r\n\r\nthrow语句用在方法体内，表示抛出异常，由方法体内的语句处理。\r\nthrows语句用在方法声明后面，表示再抛出异常，由该方法的调用者来处理。\r\n\r\n \r\n\r\nthrows主要是声明这个方法会抛出这种类型的异常，使它的调用者知道要捕获这个异常。\r\nthrow是具体向外抛异常的动作，所以它是抛出一个异常实例。\r\n\r\n \r\n\r\nthrows说明你有那个可能，倾向。\r\nthrow的话，那就是你把那个倾向变成真实的了。\r\n\r\n \r\n\r\n同时：\r\n1、throws出现在方法函数头；而throw出现在函数体。\r\n2、throws表示出现异常的一种可能性，并不一定会发生这些异常；throw则是抛出了异常，执行throw则一定抛出了某种异常。\r\n3、两者都是消极处理异常的方式（这里的消极并不是说这种方式不好），只是抛出或者可能抛出异常，但是不会由函数去处理异常，真正的处理异常由函数的上层调用处理。", "Konwledge_Point": "异常处理", "Question": ["Java异常相关的一些问题，求解", ["java中的异常分类，throw与throws的区别，抛出的父类异常是否可以在子类异常之前"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;按照要求写模板函数就可以了啊&amp;#xff0c;有什么困难&lt;br /&gt;参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;typename&lt;/span&gt; T&amp;gt;\nT &lt;span class=\"hljs-title\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(T* array,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    T sums &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;size;i&amp;#43;&amp;#43;)\n        sums &amp;#43;&amp;#61; array[i];\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sums;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;9.1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8.34&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4.13&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;-3.913&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.923&lt;/span&gt;};\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; s1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(a,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(b,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;整型数组和:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s1&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;浮点型数组和:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;s2&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["#C++模板和异常处理代码问题", ["根据提示代码设计一个函数模板，能求一维数组中的所有元素的和，并写出调用此函数模板的完整程序，使得函数调用时，可以处理int、double类型的数组。", "运行结果如下：（运算结果因输入值差异，不是唯一）", "\n", "提示代码：", "\n", "T sum(T* ", "array", ",", "int", " size=", "0", ")\n......\n", "int", "  array1[]=", "{......}", ";\ndouble array2[]=", "{......}", ";\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;老板 &amp;#xff0c;JDK配置问题&amp;#xff0c;你检查一下配置&amp;#xff0c;我之前遇见过。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java.io.StreamCorruptedException异常处理?", ["SpringBoot启动报错", "\n\n", "java.io.StreamCorruptedException: invalid type code: 00", "\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1601)", "\n    at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2287)", "\n    at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:561)", "\n    at java.lang.Throwable.readObject(Throwable.java:914)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)", "\n    at java.lang.reflect.Method.invoke(Method.java:498)", "\n    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)", "\n    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)", "\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)", "\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)", "\n    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)", "\n    at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1554)", "\n    at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1048)", "\n    at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:218)", "\n    at org.apache.catalina.session.StandardManager.load(StandardManager.java:162)", "\n    at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:354)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5167)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)", "\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)", "\n    at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)", "\n    at java.util.concurrent.FutureTask.run(FutureTask.java)", "\n    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)", "\n    at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)", "\n    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)", "\n    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)", "\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)", "\n    at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)", "\n    at java.util.concurrent.FutureTask.run(FutureTask.java)", "\n    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)", "\n    at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)", "\n    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)", "\n    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)", "\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)", "\n    at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)", "\n    at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)", "\n    at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)", "\n    at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:427)", "\n    at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180)", "\n    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)", "\n    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)", "\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)", "\n    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)", "\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)", "\n    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)", "\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)", "\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)", "\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)", "\n    at com.sst.smoked.maintenance.MaintenanceApplication.main(MaintenanceApplication.java:17)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)", "\n    at java.lang.reflect.Method.invoke(Method.java:498)", "\n    at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)", "\n "]], "Tag": "程序设计"}
{"Answer": "通常是访问 空指针。。和使用已经被释放的内存。检查下业务逻辑", "Konwledge_Point": "异常处理", "Question": ["有未经处理的异常:  0xC0000005:  读取位置 0x0000002C 时发生访问冲突。", ["0x59E24FE1 (mfc120ud.dll) (MFCApplication1.exe 中)处有未经处理的异常:  0xC0000005:  读取位置 0x0000002C 时发生访问冲突。", "\n\n", "光标一直停在atlsimpstr.h的", "\nCStringData* GetData() const throw()", "\n    {", "\n        return( reinterpret_cast< CStringData* >( m_pszData )-1 );", "\n    }", "\n    这里，实在不知道是哪里出了问题，求救！！"]], "Tag": "程序设计"}
{"Answer": "你说的这些牵涉到两个概念`数据清洗（去噪）`和`迁移学习`。\r\n两者的区别在于，前者，将你所谓的所有企业当成一个模型去学习，后者的意思是，你根据某个企业的数据去学习的权重在另一个企业中不能直接拿来做预测，而是需要通过迁移学习修改权重。", "Konwledge_Point": "异常处理", "Question": ["关于缺失值和异常值等数值处理的疑问", ["网上看了很多关于异常值处理，缺失值填充的文章，感觉有些简单化处理了。。不知道是否我自己钻牛角尖了。。", "\n我手头有一组数据，其中数据是不同企业各自的数据记录。其中不少记录是有异常值和缺失值的。", "\n1. 不同企业之间差别较大，异常值的判定，需要通过对企业分组进行判定。换句话说，一个数值在这个企业可能是正常值，而对另外一个企业可能就是异常值。", "\n2. 关于缺失值的填充，同样存在类似问题。。不同企业之间的数据差别可能较大，如果数据填充时，用简单的均值或是线性插值法填充，就会导致数据填充的可信度较低。我个人以为，也应该按照企业分组来进行分别填充处理。", "\n我不知道是否我的想法有些极端了，亦或是本身数据处理就不必思考过多。毕竟数据本身就很可能存在不少异常或缺失情况，而有些模型对异常或缺失值又并不敏感。。", "\n想请教下各位，具体数据处理过程中，是怎样做呢？"]], "Tag": "程序设计"}
{"Answer": "```java\r\n    public FileInputStream(String name) throws FileNotFoundException {\r\n        this(name != null ? new File(name) : null);\r\n    }\r\n```\r\n第一行它报的是FileNotFoundException\r\n这个没有错误啊\r\n你的流打开了是不是没有关闭阿", "Konwledge_Point": "异常处理", "Question": ["缺省构造函数不能处理隐式超构造函数抛出的异常类型 IOException。必须定义显式构造函数", ["int lastnum = getNum(source.getProperty(\"fileName\"));", "\n    public static int getNum(String Filename) throws IOException {", "\n\n", "    InputStream myxls;\n    myxls = new FileInputStream(Filename);\n    sr = new XSSFWorkbook(myxls);\n    XSSFSheet sheet = sr.getSheetAt(0);// 第一个工作表\n    return sheet.getLastRowNum();// 获取第一个工作表的行数\n}\n\n第一行报错：缺省构造函数不能处理隐式超构造函数抛出的异常类型 IOException。必须定义显式构造函数\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符串这个不用加 &amp;amp; &lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/644171821556139.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["未经处理的异常该怎么解决", ["\n", "这种未经处理的异常该怎么修改啊，我弄了好长时间了还是不行，都不知道还能咋修改了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第二层for循环应该是j&amp;lt;3你打成i了&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/091403169546160.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["用vs写c++时遇到了“未经处理的异常：读取访问权限冲突”的问题，求解答！", ["vs2022，window10系统", "代码如下", "\n", "\n", "运行结果及报错内容", "\n", "\n", "能运行但并没有实现换行。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;panic/recover is moral equivalent of try/catch exceptions. There is superficial difference (syntax) and a subtle, but important, difference of intended use.&lt;/p&gt;\n\n&lt;p&gt;The best explanations of problems with exceptions in general is &lt;a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2004/04/22/118161.aspx\" rel=\"noreferrer\"&gt;\"Cleaner, more elegant, wrong\"&lt;/a&gt; and that's a good overview of pros/cons of exceptions vs. returning error codes.&lt;/p&gt;\n\n&lt;p&gt;Go designers decided that error handling by returning error codes from functions is the idiomatic Go way and the language supports multiple return values to make it syntactically easy. While panic/recover is provided, the difference is not of functionality but intended use.&lt;/p&gt;\n\n&lt;p&gt;Other languages exposing exceptions promote their use and in practice they are used frequently (sometimes even misused).&lt;/p&gt;\n\n&lt;p&gt;Go discourages the use of panic/recover. You can do it but you're only supposed to do it in very limited scenarios.&lt;/p&gt;\n\n&lt;p&gt;If you look at Go's own standard library, most &lt;a href=\"http://golang.org/search?q=panic\" rel=\"noreferrer\"&gt;uses of panic&lt;/a&gt; are for signaling fatal errors, indicating either an internal error (i.e. bug) in the  library code or calling the library with wrong data (e.g. passing non-json data to json decoding functions).&lt;/p&gt;\n\n&lt;p&gt;But as the article you linked to points out: \"The convention in the Go libraries is that even when a package uses panic internally, its external API still presents explicit error return values.\"&lt;/p&gt;\n\n&lt;p&gt;This is different from languages like C#, Java, Python or C++, where a lot of standard library code can throw exceptions to signal errors. Those languages want you to use exceptions. Go discourages the use of panic/recover.&lt;/p&gt;\n\n&lt;p&gt;To summarize:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;idiomatic Go style is to use error codes to tell the caller about errors&lt;/li&gt;\n&lt;li&gt;use panic/recover only in rare cases:\n\n&lt;ul&gt;\n&lt;li&gt;to \"crash\" your program when encountering internal inconsistency indicating bugs in your code. It's basically a debugging aid.&lt;/li&gt;\n&lt;li&gt;if it dramatically simplifies error handling in your code (but if the code is to be used by others, never expose such panics to callers)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In practice the important thing is to use language's idiomatic style. In Go that's returning error codes and avoiding panic/recover. In C# that's using exceptions to signal some of the errors.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Google Go语言中的异常处理", ["\n\n", "I am wondering... I have read about Go some time ago and I tried to program something in it. I seems quite interesting. But I have reached ", "handling \"exceptions\" in this language", ". I have read about their approach and it seems reasonable. I would like to know what are the advantages of the standard exceptional approach over the Go's style? What are the pros and cons?", "\n\n", "Edit", " To be straight: I do not want to make any holy war about exceptions. I just wonder if this style of handling errors has any advantages? What are actual advantages of this style over standard exceptions? Is it worth wondering at all?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1 结构体struct和class一样可以定义类&amp;#xff0c;只是struct的默认所有成员都是public的&lt;br /&gt;2 catch就捕获try那对{}里面抛(throw)出来的异常&amp;#xff0c;一个try可以对应多个catch&amp;#xff0c;抛出来的异常和每个catch参数进行匹配&amp;#xff0c;如果匹配上就用该catch。和C&amp;#43;&amp;#43;的函数多态性一样&amp;#xff0c;根据参数进行匹配的&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C++有关异常处理的两个问题", ["首先是它这个 箭头指向的 结构体名加上括号。 正常来讲，这是类层面上的构造函数的调用。 可是这是结构体，怎么会有构造函数呢？ 我去网上搜索，没有十分准确的结果。", "\n", "其次是，第一个catch段中，表明了自己接受 数据类型是MyException的变量，或者是指向一个MyException类型变量的引用。 try段中，被抛出的是个 貌似是一个构造函数的东西的返回值。 然而，运行结果表明这二者竟然是匹配的。  ", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "testadd.dll是MATLAB里面生成的一个.dll文件，然后我已经引用到程序的目录中了。", "Konwledge_Point": "异常处理", "Question": ["未经处理的异常:  System.TypeLoadException: 未能从程序集“……”", ["在C#和MATLAB混合编程时，需要引用生成的.dll文件，但是当ＶＳ运行程序的时候，就提示", "\n以下内容：“未经处理的异常:  System.TypeLoadException: 未能从程序集“TestAdd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null ”中加载类型“testAdd.Add”。", "\n请有经验或者是知道情况的同仁们和我说明以下，感激不尽啊。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; csv\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;r&amp;#34;score.csv&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;,newline&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; fileObj:\n        li &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(csv.reader(fileObj))\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; IOError:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;无法读取score.csv&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(li)\n    res &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n,a,b &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; li[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]:\n        res.append([n,&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(a)*&lt;span class=\"hljs-number\"&gt;0.4&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(b)*&lt;span class=\"hljs-number\"&gt;0.6&lt;/span&gt;])\n    res.sort(key&amp;#61;&lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; x: x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], reverse&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(res)\n    &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;newScore.csv&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;,newline&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; fileObj:\n        csv.writer(fileObj).writerow([&lt;span class=\"hljs-string\"&gt;&amp;#39;学生姓名&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;总评分&amp;#39;&lt;/span&gt;])\n        csv.writer(fileObj).writerows(res)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["如何采用异常处理的方法读入CSV文件啊？", ["文件score.xsl为数学成绩表，请完成以下操作：（1）采用异常判断方式，确保读入该CSV文件；（2）期末总分=平时成绩", "40%+期末成绩", "60%，求数学成绩的总评分；（3）最后，按照总评分降序排列后，保存到一个新的文档内，内容包括：学生姓名与总评分。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-variable\"&gt;temp&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入温度值:&amp;#34;&lt;/span&gt;))&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;temp&lt;/span&gt;&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;高温天气,注意防暑!\\n无异常发生,输入的数据类型正确!&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;temp&lt;/span&gt;&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;温度适宜,快乐生活!\\n无异常发生,输入的数据类型正确!&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;低温天气,注意保暖!\\n无异常发生,输入的数据类型正确!&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;ValueError&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;发生了异常,输入的数据类型错误!&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Python增加异常处理机制处理输入数据不是数字类型，如何解决？", ["编写程序，输入温度值temp，如果temp≥35，则输出“高温天气，注意防暑！”；如果10≤temp<35，则输出“温度适宜，快乐生活！；否则输出“低温天气，注意保暖!“。要求增加异常处理机制，输入的数据符合要求时，最后提示“无异常发生，输入的数据类型正确！”当输入的数据不是数字类型时，提示“发生了异常，输入的数据类型错误！”。", "这是我的答案，输入21a时就执行不了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;利用math函数种求根的异常反馈&amp;#xff0c;如果是负数不能正常开跟&amp;#xff0c;就会走except一行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-variable\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;math&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-variable\"&gt;data_in&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{:.2f}&amp;#34;&lt;/span&gt;.format(&lt;span class=\"hljs-variable\"&gt;math.sqrt&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;data_in&lt;/span&gt;)))&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入非负数&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-variable\"&gt;pass&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["ptthon中程序的异常处理的一道例题，求解答", ["输入一个数x，输出打印其平方根，要求能捕获处理", "x不能为负数的情况。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;示例代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Test&lt;/span&gt; {\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(Test.divide(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;));\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;divide&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; dividend, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; divisor&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; dividend / divisor;\n        } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (ArithmeticException e) {\n            e.printStackTrace();\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["在测试类中调用静态方法，并进行可能的异常处理", ["在测试类中编写一个实现除法功能的静态方法，然后调用该方法，对可能出现的异常使用try…catch语句进行捕获。"]], "Tag": "程序设计"}
{"Answer": "e.getMassage是获取异常的错误信息的文本，和是不是standard output没关系。", "Konwledge_Point": "异常处理", "Question": ["JAVA异常处理里面有standard output吗", ["\n\n", "为啥他那里的standard output是getMassage。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用ValueError&amp;#xff0c;float可以接受字符型参数&amp;#xff0c;如float(&amp;#34;1.1&amp;#34;),有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n  x&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入被除数&amp;#39;&lt;/span&gt;)\n  y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入除数&amp;#39;&lt;/span&gt;)\n  z&amp;#61;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(x)/&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(y)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ZeroDivisionError:\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;除数不能为0&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; TypeError:\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;被除数和除数应为数值类型&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; ValueError:\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;被除数和除数转换失败&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; NameError:\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;变量名不存在&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(x,&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;,y,&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;,z)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["请教python中有关异常处理的问题", ["try:", "    x=input('请输入被除数')", "    y=input('请输入除数')", "    z=float(x)/float(y)", "except ZeroDivisionError:", "    print('除数不能为0')", "except TypeError:", "    print('被除数和除数应为数值类型')", "except NameError:", "    print('变量名不存在')", "else:", "    print(x,'/',y,'=',z)", "\n", "请输入被除数a", "请输入除数3", "\n", "\n", "ValueError                                Traceback (most recent call last)", " in ", "      2     x=input('请输入被除数')", "      3     y=input('请输入除数')", "----> 4     z=float(x)/float(y)", "      5 except ZeroDivisionError:", "      6     print('除数不能为0')", "\n", "ValueError: could not convert string to float: 'a'", "\n", "请问，输入‘a’和3后，为什么没有执行excep TypeError语句，而是报错了？"]], "Tag": "程序设计"}
{"Answer": "java.lang.NullPointerException\r\n\tat com.dream.model.ExceptionTest.test(ExceptionTest.java:17)\r\n\tat com.dream.model.ExceptionTest.main(ExceptionTest.java:11)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: 0\r\n\tat java.lang.String.charAt(String.java:695)\r\n\tat com.dream.model.ExceptionTest.test(ExceptionTest.java:17)\r\n\tat com.dream.model.ExceptionTest.main(ExceptionTest.java:11)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\r\n4,4,4\r\n\r\n第一个方法调用会报NullPointerException\r\n第二个方法调用会报StringIndexOutOfBoundsException\r\n第三个方法运行正常\r\n\r\n因为有finally块，所以不论前面的运行结果是什么，都会返回4，所以会看到4，4，4这样的输出结果。", "Konwledge_Point": "异常处理", "Question": ["Java try/catch 异常处理的问题", ["public static void main(String[] args) {\n        System.out.println(test(null)+\",\"+test(\"\")+\",\"+test(\"1\"));\n    }\n\n    @SuppressWarnings(\"finally\")\n    private static int test(String str) {\n        try{\n            return str.charAt(0)-'0';\n        }catch(NullPointerException e){\n            e.printStackTrace();\n            return 1;\n        }catch(RuntimeException e){\n            e.printStackTrace();\n            return 2;\n        }catch(Exception e){\n            e.printStackTrace();\n            return 3;\n        }finally{//finally  永远被执行\n            return 4;\n        }\n            \n    }", "\n\n", "求输出结果及解释，本人菜鸟，见笑了！", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "已经解决了，id=后面应该用双引号括起来", "Konwledge_Point": "异常处理", "Question": [".netMVC中js异常处理问题", ["\n为什么报错？该怎么写？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Decided to go with a config file containing the error messages for each class that will throw errors, then the name of the class that throws the error defines what config file is loaded to get the list of messages associated with error number. This also allows me to easily define messages that should get logged as opposed to messages that should get sent to the user (essentially specific vs. generic messages).&lt;br&gt;&lt;br&gt;\nMore specifically I'll probably use an ini file that defines an array of arrays where each number contains the array of error messages for that error number. Then use a foreach with the thrown error numbers to return the error message(s).&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["如何实现通用的php异常处理程序", ["\n\n", "As shown in the php documentation is it possible to create your own ", "exception handler", ". I see this as a reasonable way to handle my user generated errors and exceptions throughout the project I am working on. Through research I have made a decent amount of progress in implementing a specific one, just for one class, including things like using ", "ErrorException", " (from the first answer) and making sure to return false for ", "error levels", " that I can't handle.", "\nI have however run into a wall with making it more generic. I don't want to have to write a separate handler for every class I write (especially because the vast majority of that code is going to be the same for every one). Yet it feels like terribly bad practice to have every single error for the entire project in the same handler.", "\nThe closest I have gotten to what feels like an acceptable solution is to write a subclass of ErrorException for every class I want to handle the errors for and store messages in each of those. But even with this I am probably going about it wrong (I don't think that would be the proper place to store default error messages).", " Is there a universally accepted way of doing this that I have been unable to find? or is one of these ways actually the way it's generally done? or are there multiple solutions that are scalable based on the size of the project?", "\n\n", "EDIT: Just realized I can write a generic Exception_Handler with the reused code and extend it for each set of errors I have (real herp moment for me), but it still seems like I should handle all errors in the same place. If I'm completely wrong, let me know.\n", "EDIT 2: Decided to go with a config file containing the error messages for each class that will throw errors, then the name of the class that throws the error defines what config file is loaded to get the list of messages associated with error number. This also allows me to easily define messages that should get logged as opposed to messages that should get sent to the user (essentially specific vs. generic messages).", "\nI guess I'll mark this as answered or something, but if I'm doing something wrong feel free to let me know, help is always appreciated.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;PHP raises warnings and error messages not by throwing an exception, therefore you cannot catch anything here. However, you can modify this behaviour:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Register a custom error handler that throws an ErrorException\n// whenever a warrning or error occurs\nset_error_handler(function ($errno, $errstr, $errfile, $errline ) {\n    throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n});\n\n$a = 5;\n$b = 0;\n\n// Now a division by zero will result into an ErrorException being thrown\ntry {\n    $c = $a / $b;\n    echo $c;\n} catch (ErrorException $e) {\n    echo 'Error: ' . $e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["这个PHP中的异常处理？", ["\n\n", "How can I handle an exception in PHP? As an example, in the code like this:", "\n\n", "<?php\n   $a=5;\n   $b=0\n   $c=($a/$b);\n   echo $c;\n?>\n", "\n\n", "Please help me.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;catch(const char*)&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c++异常处理这里出现错误，不太懂", ["\n", "\n", "\n", "改过很多次，但是还是不能成功运行，所以想问一下大家，这个如何解决"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;意思就是你循环过程中出现n&amp;#61;0的情况&amp;#xff0c;导致m%n为除0错误&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["未经处理异常错误出现有什么原因以及如何排除", ["不太明白这个异常出现的原因，以及如何修改", "（在visual2019版本运行）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是不是不是报这个parseException异常&amp;#xff0c;你打印一下异常信息看看&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于#异常处理#的问题，如何解决？", ["跳过了ParseException", "去执行Exception为什么啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;Is there a way to make PHP log exception (as by default) if custom exception handler was executed?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, not from what PHP offers (e.g. return &lt;code&gt;FALSE&lt;/code&gt; in the callback).&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If no, is there a way to log into main php error log file?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, you can use the &lt;a href=\"http://php.net/function.error_log\" rel=\"nofollow\"&gt;&lt;code&gt;error_log&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;&lt;/a&gt; function for that. The &lt;a href=\"http://php.net/Exception\" rel=\"nofollow\"&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;&lt;/a&gt; should contain the message as well as file name and line number. I don't have any code for that at hand, otherwise I've added/linked it.&lt;/p&gt;\n\n&lt;p&gt;One more or less dirty trick (but I'm not sure if it preserves the original filename and line-number) is to create an exception capturing object that remains in memory all the time. If it captures an uncatched exception, it will handle it and store it. In case of destruction (at the end of the process) it can re-throw it. Then PHP needs to deal with it and probably logs it. However I would consider that experimental.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["使用自定义异常处理程序（set_exception_handler）时，不会自动记录异常", ["\n\n", "I want to use a custom exception handler (set with ", "set_exception_handler()", " function) to control what is printed to a user when unhandled exception occurs.", "\n\n", "Unfortunately, in this case exception is not logged to a php error log and I don't want to write my own logging code because automatic exception logging was absolutely ok for me.", "\n\n", "The question is:", "\nIs there a way to make PHP log exception (as by default) if custom exception handler was executed? If no, is there a way to log into main php error log file?", "\n    "]], "Tag": "程序设计"}
{"Answer": "0xcccccccc说明你有指针变量没有初始化。", "Konwledge_Point": "异常处理", "Question": ["未处理的异常：0x794EB7D7 (libcocos2d.dll) (CocosProject4.exe 中)处有未经处理的异常: 0xC0000005: 读取位置 0xCCCCCCCC 时发生访问冲突。", ["\n\n", "在写cocos2dx项目适合这里报错了 但是找不到原因 求各位大神帮忙提供一下解决方法 万分感谢！"]], "Tag": "程序设计"}
{"Answer": "1 首先确定环境配置是否正确。\r\n2  检查图片文件路径是否正确\r\n3 进入debug单步调试", "Konwledge_Point": "异常处理", "Question": ["新人求教：最最简单的opencv3.3程序出现  有未经处理的异常 读取位置0 时发生访问冲突", ["\n运行一个最最简单的程序：", "\n#include ", "\nusing namespace cv;", "\n\n", "void main()", "\n{", "\n\n", "Mat srcImage = imread(\"D:\\VS2013\\tp\\1.jpg\");\nimshow(\"【原始图】\", srcImage);\nwaitKey(0);\n", "\n\n", "}", "\n\n", "就会出现：", "\n0x0F0EAD76 (opencv_highgui330d.dll) (ConsoleApplication1.exe 中)处有未经处理的异常:  0xC0000005:  读取位置 0x00000018 时发生访问冲突。", "\n\n", "试了好多种方法都不行，昨天还可以，今天就这样了 ，求大神指导该怎么办"]], "Tag": "程序设计"}
{"Answer": "C++文件是分别编译的，最后链接成整体程序。所以想要实现这种效果很容易啊，只需要在定义__throw_out_of_range的地方包含 stdexcept就可以了。\r\n&lt;br&gt;\r\n这里给你个例子：\r\n\r\n\r\n```\r\n // my_throw.hh\r\n \r\n #ifndef _MY_THROW_HH_\r\n #define _MY_THROW_HH_\r\n \r\n void my_throw(const char* info);\r\n \r\n #endif\r\n```\r\n\r\n\r\n\r\n```\r\n // my_throw.cc\r\n \r\n #include &lt;stdexcept&gt;\r\n #include \"my_throw.hh\"\r\n \r\n void my_throw(const char* info)\r\n {\r\n     throw std::out_of_range(info);\r\n}\r\n```\r\n\r\n\r\n```\r\n //main.cc\r\n \r\n#include &lt;iostream&gt;\r\n#include &lt;typeinfo&gt;\r\n#include \"my_throw.hh\"\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    try\r\n    {\r\n        my_throw(\"out_of_range\");\r\n    }\r\n    catch(exception &amp;err)\r\n    {\r\n        cout&lt;&lt;typeid(err).name()&lt;&lt;endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n你可以跑跑这段代码试试，应该也是正常的，而且main.cc里面（即使包含了my_thorw头文件）见不到std::out_of_range的定义或者声明。\r\n这里__throw_out_of_range可能已经编译器内置了，连包含都不需要\r\n\r\n\r\nPS：\r\n既然__throw_out_of_range是以两个下划线开始的，就暗示了你不该在自己的程序里使用这个函数 ... ...\r\n\r\n\r\n\r\n```\r\n // ISO 9899:2011\r\n \r\n Each header declares or defines all identifiers listed in its associated subclause, and optionally declares or defines identifiers listed in its associated future library directions subclause and identifiers which are always reserved either for any use or for use as file scope identifiers.\r\n\r\n— All identifiers that begin with an underscore and either an uppercase letter or another underscore are always reserved for any use.\r\n\r\n— All identifiers that begin with an underscore are always reserved for use as identifiers with file scope in both the ordinary and tag name spaces.\r\n \r\n```", "Konwledge_Point": "异常处理", "Question": ["c++异常处理的一件非常奇怪的事", ["functexcept中有一个函数__throw_out_of_range 只有声明，找不到它的定义", "\n而且特别奇怪", "\n\n", " #include <iostream>\n#include <typeinfo>\n\nusing namespace std;\n\nint main()\n{\n    try\n    {\n        __throw_out_of_range(\"out_of_range\");\n    }\n    catch(out_of_range &err)\n    {\n        cout<<typeid(err).name()<<endl;\n    }\n    return 0;\n}\n\n", "\n\n", "我这样写的话，当然会编译错误，因为没", "#include <stdexcept>", "\n会得到[Error] 'out_of_range' does not name a type", "\n因为out_of_range是在stdexcept中定义的一个类,也就是我的程序中没有它的定义", "\n但是", "\n\n", " #include <iostream>\n#include <typeinfo>\n\nusing namespace std;\n\nint main()\n{\n    try\n    {\n        __throw_out_of_range(\"out_of_range\");\n    }\n    catch(exception &err)\n    {\n        cout<<typeid(err).name()<<endl;\n    }\n    return 0;\n}\n\n", "\n\n", "我这样的话会输出St12out_of_range", "\n也就是我确实是捕获到它了，所以很奇怪，怎么能捕获到一个没有声明过的对象呢", "\n__throw_out_of_range这个函数太奇怪了"]], "Tag": "程序设计"}
{"Answer": "你这个for循环写错了，\r\n原来\r\nfor(int i = q + 1; q &lt;= last; i++ )\r\n应改为\r\nfor(int i = q + 1; i &lt;= last; i++)\r\n\r\n不然的话只要q小于last就会一直循环， i一直增加，超出vector的范围，报错", "Konwledge_Point": "异常处理", "Question": ["求助！0x7948F2F6 (ucrtbased.dll) (算法.exe 中)处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。", ["1.请问为什么会出现这种无效参数的问题", "\n经过vs编译过后报错截图如下", "\n\n", "2.完整代码如下"]], "Tag": "程序设计"}
{"Answer": "把 ResultSet rs = ps.executeQuery(sql); 改为 ResultSet rs = ps.executeQuery();", "Konwledge_Point": "异常处理", "Question": ["debug 每次执行到while 就跳到异常处理", ["\n\n", "报错提示：", "\ncom.mysql.jdbc.exceptions.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '? and t.colpas=?' at line 1", "\n\n", "插入一条记录可以实现，就是取数出现了问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; Windows Presentation Foundation Font Cache 服务报出的错误&amp;#xff0c;你用下面的命令禁用它即可&amp;#xff08;二选一&amp;#xff09;&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;直接在 services.msc 中禁用 Windows Presentation Foundation Font Cache 3.0.0.0 服务。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;在命令行中运行 sc config FontCache3.0.0.0 start&amp;#61; disabled &amp;#xff08;注意 &amp;#61; 前没有空格&amp;#xff0c;后有空格&amp;#xff09;。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["发生了未经处理的异常", ["每次开机都会跳出这两个东西", "每次发生的位置还不一样", "该怎么办？", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "很正常啊,你把ui.setupUi(this);放到最前面就行了,因为你的connect在前面,不过小错误还是有点的.你自己看下吧.", "Konwledge_Point": "异常处理", "Question": ["Qt报错有未处理的异常？", ["已经确定错误出现在updateMenus()和connect()两句中。", "\n\n", " mainWindow::mainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    actionSeparator = new QAction(this);\n    actionSeparator->setSeparator(true);\n    updateMenus();  // 更新菜单\n     //有活动窗口时更新菜单\n    connect(ui.mdiArea, SIGNAL(subWindowActivated(QMidSubWindow *)), this, SLOT(updateMenus()));\n\n    ui.setupUi(this);\n    setActions();\n}\n", "\n\n", " void mainWindow::updateMenus()\n{\n    // 根据是否有子窗口来设置各个动作是否可用\n    bool hasMdiChill = (activeMidChild ()!= NULL);\n    actionSave->setEnabled(hasMdiChill);\n    actionSaveAs->setEnabled(hasMdiChill);\n    actionPaste->setEnabled(hasMdiChill);\n    actionClose->setEnabled(hasMdiChill);\n    actionCloseAll->setEnabled(hasMdiChill);\n    actionTile->setEnabled(hasMdiChill);\n    actionCascade->setEnabled(hasMdiChill);\n    actionPrevious->setEnabled(hasMdiChill);\n    // 设置间隔器是否显示\n    actionSeparator->setVisible(hasMdiChill);\n    // 有活动窗口且有文本被选择时，剪切复制才可使用\n    bool hasSelection = activeMidChild() && (activeMidChild()->textCursor().hasSelection());\n    actionCut->setEnabled(hasSelection);\n    actionCopy->setEnabled(hasSelection);\n    // 有活动文档且文档有撤销操作时撤销动作可用\n    actionUndo->setEnabled(activeMidChild() && activeMidChild()->document()->isUndoAvailable());\n    // 有活动文档且文档有恢复操作时恢复动作可用\n    actionRedo->setEnabled(activeMidChild() && activeMidChild()->document()->isRedoAvailable());\n}\n", "\n\n", "\nMdiClass *mainWindow::activeMidChild()\n{\n    //  如果有活动窗口，则将其中心部件转化为MdiClas类型\n    if (QMdiSubWindow * activeWindow = ui.mdiArea->activeSubWindow())\n    {\n        return qobject_cast<MdiClass *>(activeWindow->widget());\n    }\n    return NULL;\n}\n", "\n\n", "报错：", "\n0x6463477C (Qt5Widgetsd.dll) (myMdi.exe 中)处的第一机会异常:  0xC0000005:  读取位置 0x00000D50 时发生访问冲突。", "\n0x6463477C (Qt5Widgetsd.dll) (myMdi.exe 中)处有未经处理的异常:  0xC0000005:  读取位置 0x00000D50 时发生访问冲突。", "\n\n", "我不太明白这里是什么意思？ 求指教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;但是有些是你不可避免的呀&amp;#xff0c;比如&lt;br /&gt;1.用户输入了非法数据。&lt;br /&gt;2.要打开的文件不存在。&lt;br /&gt;3.网络通信时连接中断&amp;#xff0c;或者JVM内存溢出。&lt;br /&gt;这些异常有的是因为用户错误引起&amp;#xff0c;有的是程序错误引起的&amp;#xff0c;还有其它一些是因为物理错误引起的。这些基本上都是不可避免的&amp;#xff0c;就比如说1/0异常&amp;#xff0c;你虽然知道&amp;#xff0c;但是程序员做程序是给用户用的&amp;#xff0c;那用户故意输入一个数除以0该怎么办&amp;#xff0c;难不成一个输入异常就报错&amp;#xff0c;直接让程序瘫痪&amp;#xff0c;而不是解决一下异常或者抛出让其他调用的方法来执行吗&amp;#xff1f;还有文件有的时候根据某些操作删除了&amp;#xff0c;不去处理异常能行吗&amp;#xff0c;虽然程序员明白不该犯这个低级错误&amp;#xff0c;但是能保证所有的用户都一样吗&amp;#xff1f;参数合法化判断&amp;#xff0c;非空判断&amp;#xff0c;都会影响代码执行的速度&amp;#xff0c;不建议使用在后端&amp;#xff0c;而是使用在前端&amp;#xff0c;通过正则表达式来进行参数约束&amp;#xff0c;这样直接在前端提醒用户&amp;#xff0c;前端就不再给后端发送请求&amp;#xff0c;所以不用再跑一遍后端&amp;#xff0c;节约了不少时间&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java为什么需要异常类，没有异常类之前怎么检查错误？", ["  今天看到了异常处理，处理过程和语法看得懂，但不是很明白java为什么需要异常处理机制，受检异常编译不会通过，异常处理机制捕获或者抛出都是针对非受检异常，举的例子是1/0和一个索引越界，既然我们知道不能除以0，就不去除啊，知道索引不能越界，就不越界啊，为啥要产生异常再去处理异常呢？为什么不通过参数合法化判断，判空等操作写出更健壮的代码，从根本上杜绝异常的产生？", "     查阅很多资料和博客，关于异常都是介绍其机制，我想知道为啥必须要有这个机制，他的出现解决了什么问题，就像Math类，封装了许多数学的工具，异常类出现究竟优化了什么。", "     异常类既然是类，就说明他很有可能在java刚诞生时候，并没有这个类，哪个时候java是怎么处理出现的错误？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把求公约数的函数gys()里的for循环的条件修改下&amp;#xff0c;改为&amp;#xff1a;for(int i&amp;#61;b;i&amp;gt;&amp;#61;1;i--)&amp;#xff0c;即判断从两个数中小的那个数到1之间哪个是两数的最大公约数即可 &amp;#xff0c;修改如下&amp;#xff1a;&lt;br /&gt;&lt;br /&gt;参考链接&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://jingyan.baidu.com/article/48b37f8d3e859d5b646488a1.html\" id=\"textarea_1674816949980_1674816984928_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://jingyan.baidu.com/article/48b37f8d3e859d5b646488a1.html\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; namespace std;\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c){\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; a&amp;gt;b?a:b;\n    d &amp;#61; d&amp;gt;c?d:c;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; d; \n} \n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c){\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x &amp;#61; a&amp;lt;b?a:b;\n    x &amp;#61; x&amp;lt;c?x:c;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x; \n} \n\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; gys(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; q,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b){\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,x&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;b;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&lt;span class=\"hljs-comment\"&gt;--){&lt;!-- --&gt;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(q%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;b%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            x&amp;#61;i;\n        //    cout&amp;lt;&amp;lt;&amp;#34;int for:x&amp;#61;&amp;#34;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;endl;\n            break;\n        }\n    }    \n    \n//    cout&amp;lt;&amp;lt;&amp;#34;int gys:x&amp;#61;&amp;#34;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;  x;\n}\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;){\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c,m,n,gyshu;\n    \n    cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b&amp;gt;&amp;gt;c;\n    m&amp;#61;max(a,b,c);\n    n&amp;#61;min(a,b,c);\n    gyshu&amp;#61;gys(m,n);\n    cout&amp;lt;&amp;lt;&amp;#34;公约数为&amp;#xff1a;&amp;#34;&amp;lt;&amp;lt;gyshu&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;(n/gyshu)&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;(m/gyshu);\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/63548961847613.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c++出现未经处理的异常如何解决", ["程序运行时出现未经处理的异常应该如何处理，出现问题的函数是用来求最大公约数的", "希望有人能修改", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Ok, I am sure this will not answer everyones question to this problem, nor is it a solution I am fully happy with. I will have to research my server a little more for a better answer.&lt;/p&gt;\n\n&lt;p&gt;All in all what I ended up finding out through some digging is a particular directory needed to have write access. So for me to do that with my current server settings was to &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sudo chmod -R guo+w app/storage\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;from the command line to allow global write privileges to the &lt;code&gt;app/storage&lt;/code&gt; directory&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["在全新安装中看到“异常处理程序出错”", ["\n\n", "Just installed by the spec of the doc's larval. I am running on Ubuntu with Nginx as my server. Once I got it installed all I see is a white page and nothing else other than the words", "\n\n", "\n  ", "Error in exception handler", "\n", "\n\n", "In my actual error logs I see ", "\n\n", "\n  ", "Options FollowSymLinks or SymLinksIfOwnerMatch is off which implies that RewriteRule directive is forbidden: /var/www/vhosts/dir/dir/dir/dir.com/public/index.pl", "\n", "\n\n", "note", ": that I replaced the dir path here, with dir/dir/dir/dir...", "\n\n", "Neither of which lead me to any conclusive examples of how to fix it or trouble shoot it. Soo. I am coming here hoping someone can help me solve this so I can attempt to use Laravel", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;font color=\"red\"&gt;如有帮助,望点赞、采纳&amp;#xff01;&amp;#xff01;谢谢&lt;/font&gt;&lt;/p&gt;\n&lt;br /&gt;\n\n&lt;p&gt;单机应用的时候,正常来说你执行程序不适用多线程情况下默认就一个主线程,出现异常情况如没有异常机制,则程序则会因异常结束了,如果使用spring等框架,你运行某个出现异常也只是中断你出现异常的程序,不会中断spring的主程序线程,这样解释可以理解?&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["为什么web项目出异常程序不停止？", ["开发单机程序的时候，发生异常程序就停了自动退出。\n用spring框架的javaweb项目，为什么发生异常后不会停止呢？是最上层捕获异常了吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use &lt;code&gt;render()&lt;/code&gt; function of &lt;code&gt;App\\Exceptions\\Handler&lt;/code&gt; class as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function render($request, Exception $exception)\n{\n    if ($request-&amp;gt;wantsJson() &amp;amp;&amp;amp; $exception instanceof ModelNotFoundException) {\n        return response()-&amp;gt;json(['status' =&amp;gt; 'object requested not found'], 404);\n    }\n\n    return parent::render($request, $exception);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And remember to add following code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use Illuminate\\Database\\Eloquent\\ModelNotFoundException;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://laravel.com/docs/5.3/errors#the-exception-handler\" rel=\"noreferrer\"&gt;Docs&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel 5  -  API请求不存在的对象的全局异常处理程序", ["\n\n", "I am using Laravel 5.3. I have few APIs where user will request for specific id. \nFor example url to subscribe an event", "example.com/api/event/{id}/subscribe", "\n\n", "Normally if ", "id", " not exist, Laravel will return response 500 with error message \"Trying to get property of non-object\"", "\n\n", "So I would add check if event is exist like below in every controller where model 'id' id passed:", "\n\n", "$event = Event::find($id)\nif ($event) {\n    // return json data\n}\nelse {\n    return response()->json([\n        'status' => 'object not found'\n    ], 404);\n}\n", "\n\n", "My question is, any better solution to handle this globally to check if object requested is not exist? My current solution is here, but I might think there should be better one", "\n\n", "I add this code into my ", "app/Exception/Handler.php", ", so every api request non-existing object will return 404 with specific json message. So the API consumer will know the object id not valid.", "\n\n", "public function render($request, Exception $exception)\n{\n    // global exception handler if api request for non existing object id\n    if ($request->wantsJson() && $exception->getMessage() == 'Trying to get property of non-object') {\n        return response()->json([\n            'status' => 'object requested not found'\n        ], 404);\n    }\n\n    return parent::render($request, $exception);\n}\n", "\n\n", "Thanks in advance!", "\n    "]], "Tag": "程序设计"}
{"Answer": "可以这样的try {} catch(){} catch(){},catch里面写异常,可以接着写异常,但是要记住,最里面的catch异常是最小的,先执行第一个catch,如果没有才会执行第二个catch,从第一个到后面的等级越来越大,希望这点你能懂", "Konwledge_Point": "异常处理", "Question": ["java怎么判断异常类型？", ["有一个场景的操作，抛出的异常可能是InvalidSelectorException、TimeoutException、NullPointerException，所以我想针对不同的异常做出不同的处理操作。这样保证代码的稳定运行。我写了一个方法，如图所示：", "\n\n", "这样子判断不行，求大神们指点一下，我希望可以判断出异常的类型。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;异常的那行&amp;#xff0c;arr[i][j] 前加一个&amp;amp;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["0x008672B2 (ucrtbased.dll) (20211009.exe 中)处有未经处理的异常: 0xC0000005: 写入位置 0xCCCCCCCC 时发生访问冲突。", ["\n\n", "请问这个是怎么回事？要怎么处理呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是要解释代码吧&amp;#xff0c;你这个并不是异常提示信息。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["这个异常处理能讲解下吗，看不懂啊", ["\n", "btEqual.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tScriptEngineManager manager = new ScriptEngineManager();\t\t\t\tScriptEngine SE = manager.getEngineByName(\"js\");\t\t\t\tString string = new String(showExpression.getText());\t\t\t\ttry {\t\t\t\t\tString ans = SE.eval(string).toString();\t\t\t\t\tshowExpression.setText(ans);\t\t\t\t} catch (Exception e) {\t\t\t\t\t// TODO: handle exception\t\t\t\t\tshowExpression.setText(\"ERROR!\");\t\t\t\t}\t\t\t}\t\t});", "\n\n", "btEqual.setOnAction(new EventHandler<ActionEvent>() { @Override public void handle(ActionEvent event) { ScriptEngineManager manager = new", "\n\n", "\n", "import javafx.application.Application;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.geometry.Insets;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.TextField;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.layout.BorderPane;import javafx.scene.layout.HBox;import javafx.stage.Stage;import javax.script.ScriptEngine;import javax.script.ScriptEngineManager;import javax.script.ScriptException;public class Main extends Application {\t@Override\tpublic void start(Stage primaryStage) throws Exception {\t\t// 获取带图片的按钮\t\tButton bt0 = new Button(\"\", new ImageView(new Image(\"images/0.png\")));\t\tButton bt1 = new Button(\"\", new ImageView(new Image(\"images/1.png\")));\t\tButton bt2 = new Button(\"\", new ImageView(new Image(\"images/2.png\")));\t\tButton bt3 = new Button(\"\", new ImageView(new Image(\"images/3.png\")));\t\tButton bt4 = new Button(\"\", new ImageView(new Image(\"images/4.png\")));\t\tButton bt5 = new Button(\"\", new ImageView(new Image(\"images/5.png\")));\t\tButton bt6 = new Button(\"\", new ImageView(new Image(\"images/6.png\")));\t\tButton bt7 = new Button(\"\", new ImageView(new Image(\"images/7.png\")));\t\tButton bt8 = new Button(\"\", new ImageView(new Image(\"images/8.png\")));\t\tButton bt9 = new Button(\"\", new ImageView(new Image(\"images/9.png\")));\t\tButton btAdd = new Button(\"\", new ImageView(new Image(\"images/ADD.png\")));\t\tButton btMinus = new Button(\"\", new ImageView(new Image(\"images/MINUS.png\")));\t\tButton btMultiply = new Button(\"\", new ImageView(new Image(\"images/MULTIPLY.png\")));\t\tButton btDivide = new Button(\"\", new ImageView(new Image(\"images/DIVIDE.png\")));\t\tButton btEqual = new Button(\"\", new ImageView(new Image(\"images/EQUAL.png\")));\t\tButton btLeft = new Button(\"\", new ImageView(new Image(\"images/LEFT_PAREN.png\")));\t\tButton btRight = new Button(\"\", new ImageView(new Image(\"images/RIGHT_PAREN.png\")));\t\tButton btPoint = new Button(\"\", new ImageView(new Image(\"images/POINT.png\")));\t\tButton btClear = new Button(\"\", new ImageView(new Image(\"images/CLEAR.png\")));\t\tButton btBack = new Button(\"\", new ImageView(new Image(\"images/BACK.png\")));\t\t// 因为BorderPane最多只能有三水平行，所以用一个BorderPane作为主面板\t\t// 再用两个BorderPane嵌入到主面板中，这两个BorderPane正好可以装满所有要用到的子节点\t\tBorderPane pane = new BorderPane(); // 主面板，用来放pane1，pane2\t\tBorderPane pane1 = new BorderPane(); // 放琐碎的Node的pane1\t\tBorderPane pane2 = new BorderPane(); // 放琐碎的Node的pane2\t\t// Hbox1 Hbox2 Hbox3放到pane1中\t\tHBox hBox1 = new HBox(5);\t\tHBox hBox2 = new HBox(5);\t\tHBox hBox3 = new HBox(5);\t\t// Hbox4,5,6放到pane2中\t\tHBox hBox4 = new HBox(5);\t\tHBox hBox5 = new HBox(5);\t\tHBox hBox6 = new HBox(5);\t\t// 显示输入的文本框\t\tTextField showExpression = new TextField();\t\tshowExpression.setPrefSize(280, 40);\t\t/*\t\t * 下面开始放pane1中的节点，\t\t */\t\thBox1.getChildren().add(showExpression);\t\thBox2.getChildren().addAll(btClear, btBack, btPoint, btDivide);\t\thBox3.getChildren().addAll(bt7, bt8, bt9, btMultiply);\t\thBox1.setPadding(new Insets(15, 15, 0, 27));\t\thBox2.setPadding(new Insets(15, 15, 0, 30));\t\thBox3.setPadding(new Insets(15, 15, 5, 30));\t\tpane1.setTop(hBox1);\t\tpane1.setCenter(hBox2);\t\tpane1.setBottom(hBox3);\t\t// 接着把pane1放到pane的top中\t\tpane.setTop(pane1);\t\t/*\t\t * 下面开始放pane2中的节点\t\t */\t\t// 运行过程中发现左右括号的图片太小了，不太美观，调整一下\t\tbtLeft.setPadding(new Insets(11, 11, 11, 5));\t\tbtRight.setPadding(new Insets(11, 11, 11, 5));\t\thBox4.getChildren().addAll(bt4, bt5, bt6, btMinus);\t\thBox5.getChildren().addAll(bt1, bt2, bt3, btAdd);\t\thBox6.getChildren().addAll(bt0, btLeft, btRight, btEqual);\t\thBox4.setPadding(new Insets(15, 15, 0, 30));\t\thBox5.setPadding(new Insets(15, 15, 0, 30));\t\thBox6.setPadding(new Insets(15, 15, 10, 30));\t\tpane2.setTop(hBox4);\t\tpane2.setCenter(hBox5);\t\tpane2.setBottom(hBox6);\t\t// 接着把pane1放到pane的Center中\t\tpane.setCenter(pane2);\t\t/*为每一个按钮《添加事件》\t\t * 下面开始对每个按钮添加事件\t\t * 即bt变量按钮设置一个事件，重写handle逻辑操作代码，获取到对应的值\t\t * showExpression.setText(string); 设置值为（字符串）当你点击button2的时候，button2的内容会变成Accepted。到时候调用js引擎对字符串进行eval（）操作\t\t *\t\t */\t\t//下面开始对每个按钮添加事件\t\tbt1.setOnAction(new EventHandler<ActionEvent>() {\t\t\t//重写handle方法\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"1\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt2.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"2\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt3.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"3\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt4.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"4\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt5.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"5\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt6.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"6\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt7.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"7\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt8.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"8\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt9.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"9\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbt0.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"0\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtLeft.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"(\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtRight.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \")\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtPoint.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \".\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtBack.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring = string.substring(0, string.length() - 1);\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtAdd.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"+\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtMinus.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"-\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtMultiply.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"*\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtDivide.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tString string = new String(showExpression.getText());\t\t\t\tstring += \"/\";\t\t\t\tshowExpression.setText(string);\t\t\t}\t\t});\t\tbtClear.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tshowExpression.setText(\"\");\t\t\t}\t\t});\t\t/*\t\t * 使用JS计算引擎得出结果\t\t */\t\tbtEqual.setOnAction(new EventHandler<ActionEvent>() {\t\t\t@Override\t\t\tpublic void handle(ActionEvent event) {\t\t\t\tScriptEngineManager manager = new ScriptEngineManager();\t\t\t\tScriptEngine SE = manager.getEngineByName(\"js\");\t\t\t\tString string = new String(showExpression.getText());\t\t\t\ttry {\t\t\t\t\tString ans = SE.eval(string).toString();\t\t\t\t\tshowExpression.setText(ans);\t\t\t\t} catch (Exception e) {\t\t\t\t\t// TODO: handle exception\t\t\t\t\tshowExpression.setText(\"ERROR!\");\t\t\t\t}\t\t\t}\t\t});\t\tScene scene = new Scene(pane);\t\tprimaryStage.setTitle(\"Calculator\");\t\tprimaryStage.setScene(scene);\t\tprimaryStage.show();\t}", "\n\n", "ScriptEngineManager(); ScriptEngine SE = manager.getEngineByName(\"js\"); String string = new String(showExpression.getText()); try { String ans = SE.eval(string).toString(); showExpression.setText(ans); } catch (Exception e) { // TODO: handle exception showExpression.setText(\"ERROR!\"); } } });"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since you are using the variables in a function, but declaring them outside, they are not accessible.  You need to add this right after the the opening of the function.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function verify() { \n    global $maxTry, $nTry; // add this\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["在PHP中的异常处理期间，预分配的变量已损坏", ["\n\n", "The variable $maxTry is unassigned when an exception is raised and ", "\n\n", "the exception handling stops at nTry = 1.", "\n\n", "How is this possible?", "\n\n", "$nTry=0;\n$maxTry=100;\nfunction verify() { \n  try{\n      // Some DB Connection\n      $st = $dbh->prepare(...);\n      $result = $st->fetchColumn();\n  }\n  catch(PDOException $e) {\n    $nTry++;\n    echo 'PDOException<br/>';\n    if($e->getCode()==='HY000') {\n        echo 'verify again<br/>';\n        if($nTry < $maxTry) {\n            $maxTry=100;\n            verify();      //recursion\n        }\n        else \n            echo \"Reached maxTry ($nTry __ $maxTry) PDOException: HY000<br/>\";\n    }\n}\nverify();\n", "\n\n", "Expected output (if reached maxTry):", "\n\n", "PDOException\nverify again\n...\nverify again\nReached max try (100 __ 100) PDOException: HY000\n", "\n\n", "Actual output ($maxTry is not set):", "\n\n", "PDOException\nverify again\nReached max try (1 __ ) PDOException: HY000\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "像怎么处理都行，如果的业务需求需要的话。\r\n一般的处理可以：\r\n记录异常日志，\r\n保存数据库错误流水，\r\n重试业务逻辑（有些场景通过重试达到成功）\r\n。。。。。", "Konwledge_Point": "异常处理", "Question": ["java异常捕获之后，catch块中可以进行业务处理吗？", ["异常捕获之后可以在catch块中进行业务处理吗？", "\n因为try中多处可能抛出同样的一场，刚好这种情况需要执行另外的代码"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Historically, in languages like C++, exceptions have been very slow compared to other forms of flow control &lt;em&gt;in the same language&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;In C++, there are two things at work:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Throwing an exception is very complex.  The stack needs to be unwound, and doing so in native code is &lt;em&gt;much&lt;/em&gt; harder than in a high-level VM-based language.&lt;/li&gt;\n&lt;li&gt;Regular, direct flow control is extremely fast.  It's native code; a branch is a couple instructions, where an exception rolling back the stack invokes a complex algorithm (looking up stack data in a large, possibly compressed table, and so on).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This disparity in performance led to the general wisdom behind exceptions: only do it for unusual things, so it's only used where it's most beneficial and not where it'll hurt performance.&lt;/p&gt;\n\n&lt;p&gt;This does not apply to high-level languages.  This is also for two reasons:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Rolling back the stack is much, much simpler.  The stack is very easy to examine; you don't need magic tables to know how far to roll back the stack and what objects are constructed at any given time.&lt;/li&gt;\n&lt;li&gt;Regular program flow is inherently slower.  In a VM-based language, everything simply takes more work to begin with.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Exceptions still aren't free, but the disparity is no longer something to worry so much about.  This means the general wisdom formed in C++ is misapplied here.  Exceptions are regularly used in normal program flow.&lt;/p&gt;\n\n&lt;p&gt;In fact, they're built into language, in constructs you use all the time.  Every time you use an iterator--every &lt;code&gt;for x in xrange(1000)&lt;/code&gt;, a &lt;code&gt;StopIteration&lt;/code&gt; exception is used to end the loop.&lt;/p&gt;\n\n&lt;p&gt;Choose exceptions or linear flow control in Python based on which makes more sense.  Don't choose based on performance, unless you're actually in an inner loop where performance matters; in that case, as always, profile and find out if it actually matters.&lt;/p&gt;\n\n&lt;p&gt;(I can't speak for PHP.)&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["python异常处理比PHP和/或其他语言更有效吗？", ["\n\n", "I have it drilled into my head that (at least in PHP) it is badbadmojo to use ", "try... catch", " blocks for flow control.  What I've learned is to use them only to handle ", "unexpected errors", ", not determine the logic flow of the program, because ", "catch", " blocks are expensive.", "\n\n", "Now that I'm learning python, I see a lot of exceptions everywhere and the ", "EAFP", " principle.  Does this mean that python is more efficient at handling exceptions, so I don't need to be as worried about them for flow control, or does the principle still stand?  If not, is PHP the exception from the norm (as compared to other languages), or is Python?", "\n    "]], "Tag": "程序设计"}
{"Answer": "一、发生异常时，应该给用户一个明确的提示，告诉用户错误原因，应该如何操作。\r\n\r\n从用户角度考虑，我把异常分为以下几种：\r\n1、用户异常： 相当于业务异常，如用户输入密码错误，则throw new BussinessException(\"密码输入错误，请重试\");\r\n2、代码异常：如程序员疏忽，导致代码抛出NullException。这类异常对于用户来说，没办法作出回应。用户只能找管理员解决这个问题。所以这类异常可以定义为：\"您的操作服务器无法响应，请联系管理员\";\r\n3、其他的可以为外界环境导致的异常，如数据库无法连接等，这类异常对于用户来说一样没办法。\r\n\r\n二、异常框架的搭建提以下几点：\r\n1、捕获底层异常，转为自定义的异常。如SQLException，由DAO捕获，并且抛出DaoException。这里的SQLException为底层异常\r\n2、自定义异常一般继承RuntimeException，这样无需再接口上声明。\r\n3、出现底层异常立即捕获，自定义异常让后台最上层代码处理。如web应用可以由action的基类或者filter统一处理异常，抛给用户。\r\n4、业务异常可以命名的更有意义，如UserNotFoundException。我比较偷懒，一般直接抛出BussinessException", "Konwledge_Point": "异常处理", "Question": ["java该怎么样处理异常", ["在网上查了好多关于异常处理的例子,也看了不少关于异常处理规范,但是还是不怎么清楚java异常处理到底怎么做才算好.希望高手给个详细的例子说明 异常 在实际 开发中该怎么处理", "\n1：说什么时候我们应该把异常重新抛出，为什么要重新抛出", "\n2：发生异常后，除了释放资源，日志记录操作后，我们怎么样来给用户或客户出示一个清晰的提示", "\n :arrow: "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;{\n}&lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;Exception&lt;/span&gt; e){\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e &lt;span class=\"hljs-keyword\"&gt;instanceof&lt;/span&gt; DuplicateKeyException ){\n      ...\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["异常捕获之后如何判断对应类型然后做处理", ["如图我想判断一下捕获的异常是不是DuplicateKeyException，然后做相应的处理。代码要如何做判断呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Did.d &amp;#61; new Disk()错了&amp;#xff0c;.要改成空格&amp;#xff0c;只有方法调用和静态变量才可以用.&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java中异常处理的问题，已编完但不知道那错了。", ["1、在一个磁盘类Disk,该类有剩余容量属性capacity=1000(整型）。2、创建一个存储数据的方法save,带有一个存储数据的data参数（整型），并且声明抛出CapacityException自定义异常。程序主要功能：如果存储数据大于剩余容量，则抛出CapacityException(自定义异常，否则剩余容量属性修改为剩余容量减去存储数据。3、在Disk类的main方法中，实例化Disk类d,在异常处理中调用save方法，然后打印出剩余容量的信息，在CapacityException异常中打印“剩余容量不够”，传入存储数据data=1500,运行程序。", "运行结果：剩余容量不够", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;get_headers&lt;/code&gt; does not throw a Warning/Error on 404, but &lt;code&gt;get_meta_tags&lt;/code&gt; does.&lt;/p&gt;\n\n&lt;p&gt;So you can check the header response and do something, when it's not OK:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$url = 'http://www.example.com/';\n\n$headers = array();\n$metatags = array();\n\n$validhost = filter_var(gethostbyname(parse_url($url,PHP_URL_HOST)), FILTER_VALIDATE_IP);\nif($validhost){\n    // get headers only when Domain is valid\n    $headers = get_headers($url, 1);\n\n    if(substr($headers[0], 9, 3) == '200'){\n        // read Metatags only when Statuscode OK\n        $metatags = get_meta_tags($url);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["使用get_meta_tags（）和get_headers（）进行异常处理？", ["\n\n", "In PHP, I am using ", "get_meta_tags()", " and ", "get_headers()", ", however, when there is a 404, those two functions throw a warning.  Is there any way for me to catch it?\nThanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般是try...except...finally...异常处理。你将第一个和第二个except合并&amp;#xff0c;用if ... else...试试看。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["HTTPError已经通过try...except...进行异常处理，仍报HTTPError", ["爬取某网站搜索结果，爬取结果：分 一级页面为搜索", "文章标题", " 和 一级页面各搜索结果对应的二级页面", "文章内容", "。", "\n\n", "处理过程：一级页面成功获取；二级页面有一些不能成功获取的，但是对不能成功获取的二级页面文章，将其二级页面的url放入一个list以备后续研究。通过 try", "\n\n", "                             获取二级页面url", "\n\n", "                     except HTTPError", "\n\n", "                             另一种方法获取二级页面url", "\n\n", "                    except Exception", "\n\n", "                             失败的url放入list", "\n\n", "问题：明明已经声明了在HTTPError的情况的处理流程，但是仍然报错HTTPError", "\n\n", "请各路好汉指导，好人一生平安！", "\n\n", "\n", "import ssl # 防止验证报错\nssl._create_default_https_context = ssl._create_unverified_context\nimport urllib.request as ur\nimport urllib.parse as up\nimport requests\nimport re,json\nimport lxml.etree as le\nimport urllib\nfrom urllib.error import HTTPError\nimport pymongo\n\ncookies = {\n    'JSESSIONID': '849E8C6BD918EA04C6143AA6C8E344FD',\n    '__jsluid_s': '55e35824b3517a59c43c1b750043c288',\n    'cookie_www': '36802747',\n    'Hm_lvt_3b83938a8721dadef0b185225769572a': '1614777887,1614821020,1614873247,1614910666',\n    'Hm_lpvt_3b83938a8721dadef0b185225769572a': '1614934564',\n}\n\nheaders = {\n    'Connection': 'keep-alive',\n    'sec-ch-ua': '\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"',\n    'Accept': 'application/json, text/javascript, */*; q=0.01',\n    'X-Requested-With': 'XMLHttpRequest',\n    'sec-ch-ua-mobile': '?0',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36',\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'Origin': 'https://www.cqggzy.com',\n    'Sec-Fetch-Site': 'same-origin',\n    'Sec-Fetch-Mode': 'cors',\n    'Sec-Fetch-Dest': 'empty',\n    'Referer': 'https://www.cqggzy.com/xxhz/014001/014001001/zbggjyxx-page.html?keyword=%E6%95%B0%E6%8D%AE',\n    'Accept-Language': 'zh-CN,zh;q=0.9,en-GB;q=0.8,en;q=0.7',\n}\n\ndata = '{\"token\":\"\",\"pn\":36,\"rn\":18,\"sdt\":\"\",\"edt\":\"\",\"wd\":\" \",\"inc_wd\":\"\",\"exc_wd\":\"\",\"fields\":\"title\",\"cnum\":\"001\",\"sort\":\"{\\\\\"istop\\\\\":0,\\\\\"ordernum\\\\\":0,\\\\\"webdate\\\\\":0,\\\\\"rowid\\\\\":0}\",\"ssort\":\"title\",\"cl\":200,\"terminal\":\"\",\"condition\":[{\"fieldName\":\"categorynum\",\"equal\":\"014001001\",\"notEqual\":null,\"equalList\":null,\"notEqualList\":null,\"isLike\":true,\"likeType\":2},{\"fieldName\":\"titlenew\",\"equal\":\"\\u6570\\u636E\",\"notEqual\":null,\"equalList\":null,\"notEqualList\":null,\"isLike\":true,\"likeType\":0}],\"time\":null,\"highlights\":\"title\",\"statistics\":null,\"unionCondition\":[],\"accuracy\":\"\",\"noParticiple\":\"0\",\"searchRange\":null,\"isBusiness\":\"1\"}'.encode('utf-8')\n\n# 把data, cookies, headers, url放入request.post() 以获取一级页面的response\nresponse = requests.post('https://www.cqggzy.com/interface/rest/inteligentSearch/getFullTextData', headers=headers, cookies=cookies, data=data)\nprint(response.json()) # 打印查看获取内容；根据结果，此处成功获取\ntitle_results = response.json() # 把response.json复制给变量以方便后面爬取二级页面使用\n\nhttp_exists = True # 设置一个bool, 以方便判断二级页面的url是否成功获取\nerror_html = [] # 如果二级页面的url两次都没成功获取，则把第二次打开失败的url放进一个list,以便后续研究\n# search_data = {}\n# client = pymongo.MongoClient()\n# db = client.get_database('public_resource')  # db = client.db3\n# c = db.get_collection('search_data')\nfor piece in title_results['result']['records']: # 对一级页面获取的结果，遍历每个结果，提取信息以组建每个结果对应的二级页面的url\n    # search_data = {}\n    print(piece['title']) # 每次遍历查看一级页面的标题\n    try:\n        url_date = re.findall('.{10}',piece['pubinwebdate'])[0]\n        url_date_revised = url_date.replace('-','')\n        print(url_date_revised)\n        href = 'https://www.cqggzy.com/xxhz/014001/014001001/'+piece['categorynum']+'/'+url_date_revised+'/'+piece['infoid']+'.html'\n        print(href)\n        req = ur.Request(\n            url = href,\n            headers = {\n                'User-Agent': 'Mozilla/5.0.html (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.html.2171.95 Safari/537.36 OPR/26.0.html.1656.60',\n            }\n        )\n        content1 = ur.urlopen(req).read() # 打开组建的url\n    except urllib.error.HTTPError: # 如果组建的url不能成功打开，换一种方式组建url\n        url_date = re.findall('.{10}',piece['infodate'])[0]\n        url_date_revised = url_date.replace('-','')\n        print(url_date_revised)\n        href = 'https://www.cqggzy.com/xxhz/014001/014001001/'+piece['categorynum']+'/'+url_date_revised+'/'+piece['infoid']+'.html'\n        print(href)\n        req = ur.Request(\n            url = href,\n            headers = {\n                'User-Agent': 'Mozilla/5.0.html (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.html.2171.95 Safari/537.36 OPR/26.0.html.1656.60',\n            }\n        )\n        content1 = ur.urlopen(req).read()\n    except Exception: # 如果组建的url还不能成功打开，把此时的url放进一个列表\n        error_html.append(piece['title'])\n        http_exists = False # 用bool变量表示url获取失败\n\n    if http_exists == True: # url获取成功，才进一步获取二级页面的内容\n        contentx = le.HTML(content1)\n        content = contentx.xpath(\"//div[contains(@class,'epoint-article-content')]//text()\")\n        content = \" \".join(content)\n        content = content.replace('\\t','')\n        content = content.replace('\\r', '')\n        content = content.replace('\\n', '')\n        content = content.replace('                   ','')\n        # c.insert_one(search_data)\n        # search_data[piece['title']] = content\n    http_exists = True # 每次遍历最后把 url变量设置为True\nprint(error_html) # 查看失败的urlr的列表"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;My answer is unpopular, but I don't think Perl programmers should be trying to use the exceedingly poor notion of the thing we call \"exceptions\" in Perl. These are essentially a side channel return value. However, still being enamored with the idea of exceptions, even with all the complexities of using a global variable to pass around state, people keep trying to make it work.&lt;/p&gt;\n\n&lt;p&gt;Practically, however, people use &lt;code&gt;die&lt;/code&gt; to signal failure. Some will say that you can &lt;code&gt;die&lt;/code&gt; with a reference and pass back error objects, but you don't need &lt;code&gt;die&lt;/code&gt; for that. We have objects, so we should use all the power of objects:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; sub some_sub {\n    ...\n    return Result-&amp;gt;new( error =&amp;gt; 1, description =&amp;gt; ... ) if $something_went_wrong;\n    return Result-&amp;gt;new( error =&amp;gt; 0, ... );\n    }\n\n my $result = some_sub( ... );\n if( $result-&amp;gt;is_error ) { ... };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That doesn't involve global variables, action at a distance, scoping headaches, or require special specials. You create a tiny class &lt;code&gt;Result&lt;/code&gt;, or whatever you want to call it, to wrap your return values so you have structured data instead of single values with no identity. There's no more wondering what a return value means. Is that &lt;code&gt;undef&lt;/code&gt; a real value or an indication of failure? Is the return value good if it's defined or if it's true? Your object can tell you these things. And, you can use the same object with &lt;code&gt;die&lt;/code&gt;. If you're already using the object with &lt;code&gt;die&lt;/code&gt; and using it as the return value, there's very little to recommend all the extra stuff you have to do to tolerate &lt;code&gt;$@&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;I talk more about this in &lt;a href=\"http://www.effectiveperlprogramming.com/2011/10/return-error-objects-instead-of-throwing-exceptions/\" rel=\"noreferrer\"&gt;\"Return error objects instead of throwing exceptions\"&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;However, I know that you can't help what other people do, so you still have to pretend Perl has exceptions.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["是 Try: : Tiny 仍然被推荐用于佩尔5.14或更高版本的异常处理？", ["\n\n", "The consensus of the Perl community seems to be that ", "Try::Tiny", " is the preferred way to handle exceptions. ", "\n\n", "Perl 5.14 (which is the version I use) ", "seems to solve", " the ", "issues", " with ", "eval", " that ", "Try::Tiny", " addresses. Will ", "Try::Tiny", " still provide any benefits for me? ", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/10364975/is-trytiny-still-recommended-for-exception-handling-in-perl-5-14-or-later"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello, %s. %s\\n&amp;#34;&lt;/span&gt;, name, PRAISE);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这一行少了一个s&lt;br /&gt;代码修改如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;//NO.13&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; PRAISE &lt;span class=\"hljs-string\"&gt;&amp;#34;You are an extraordinary being.&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;What&amp;#39;s your name?\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello, %s. %s\\n&amp;#34;&lt;/span&gt;, name, PRAISE);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/726026215346111.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["0x00007FFAA5E02079 (ucrtbased.dll)处(位于 源.exe 中)引发的异常: 0xC0000005: 写入位置 0x000000D930340000 时发生访问冲突。", ["\n", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "define", " PRAISE ", "\"You are an extraordinary being.\"", "\n", "int", " ", "main", "(", "void", ")", " ", "{\n    ", "char", " name[", "40", "];\n\n    ", "printf", "(", "\"What's your name?\"", ");\n    ", "scanf_s", "(", "\"%s\"", ", name);\n    ", "printf", "(", "\"Hello, %. %s\\n\"", ", name, PRAISE);\n    \n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容 0x00007FFAA5E02079 (ucrtbased.dll)处(位于 源.exe 中)引发的异常: 0xC0000005: 写入位置 0x000000D930340000 时发生访问冲突。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;PHP 7 throws a &lt;code&gt;ParseError&lt;/code&gt; exception instead of triggering an error of type &lt;code&gt;E_PARSE&lt;/code&gt;. The default exception handler seems to trigger an error if an uncaught exception is encountered. However if you replace it with &lt;code&gt;set_exception_handler()&lt;/code&gt; it no longer happens unless you do it yourself.&lt;/p&gt;\n\n&lt;p&gt;See &lt;a href=\"http://php.net/manual/en/language.errors.php7.php\" rel=\"nofollow noreferrer\"&gt;PHP docs&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;PHP 7 changes how most errors are reported by PHP. Instead of reporting errors through the traditional error reporting mechanism used by PHP 5, most errors are now reported by throwing Error exceptions.&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["设置自定义异常处理程序时，error_get_last（）在PHP 7中返回NULL", ["\n\n", "Ok, this took some time to break it down. Here it is:", "\n\n", "There is an included faulty script which is the following for the remainder of this post:", "\n\n", "faulty.php", "\n\n", "<?php\n$a = 4 // missing semicolon\n$b = 2;\n", "\n\n", "Then consider the following script for handling the error. Note, that the custom exception handler is initially not registered.", "\n\n", "script.php", "\n\n", "<?php\n\n// disable default display of errors\nini_set('display_errors', 0);\n\n// register functions\n#set_exception_handler('catchException'); // initially not set\nregister_shutdown_function('catchError');\n\n// define error function\nfunction catchError(){\n\n  echo \"PHP version: \".phpversion();\n\n  if(is_null(error_get_last())) echo \"<h1>No errors fetched!</h1>\";\n  else                          echo \"<h1>Error fetched:</h1>\";\n\n  var_dump(error_get_last());\n\n}\n\n// define exception function (not used in all examples)\nfunction catchException(){}\n\n// include faulty script\ninclude(\"D:/temp/faulty.php\");\n", "\n\n", "Result with no custom exception handler", "\n\n", "The results for PHP 5 and 7 are identical. The error_get_last() function returns the last ocurred error (", "Screenshot", ").", "\n\n", "Result with custom error handler", "\n\n", "Now we set a custom function uncommenting the line", "\n\n", "set_exception_handler('catchException');\n", "\n\n", "This will work fine in PHP 5, however in PHP 7 the ", "error_get_last()", " function returns ", "NULL", " (", "Screenshot", "). ", "\n\n", "Question", "\n\n", "Why is this? Especially confusing as the custom exception handler is empty, e.g. not \"successfully handling\" the error. ", "\n\n", "How to prevent this?", "\n\n", "All the best and thanks for hints!", "\n\n", "Update: problem and solution", "\n\n", "The thing (not really a problem) is that PHP 7 throws an exception of type ParseError rather then producing an error. Thus, it is best handled with an exception handler. Make a nice exception handler to handle the exception well:", "\n\n", "function catchException($e){\n\n  echo \"<h1>\".get_class($e).\"</h1>\";\n  echo $e->getMessage().\"<br>\";\n\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "里边格式化输出有的使用了右中括号，仔细一点就找到原因了", "Konwledge_Point": "异常处理", "Question": ["运行后提示说未经处理的异常，输入字符串格式不正确", ["对照了答案，答案也是这样写的，不同之处是abcd四个变量的名称。", "\n请问哪里出错了？", "\nstatic void Main(string[] args)", "\n        {", "\n            int a, b, c, d;", "\n            Console.WriteLine(\"Enter first number:\");", "\n            a = Convert.ToInt32(Console.ReadLine());", "\n            Console.WriteLine(\"Enter second number:\");", "\n            b = Convert.ToInt32(Console.ReadLine());", "\n            Console.WriteLine(\"Enter third number:\");", "\n            c = Convert.ToInt32(Console.ReadLine());", "\n            Console.WriteLine(\"Enter fourth number:\");", "\n            d = Convert.ToInt32(Console.ReadLine());", "\n\n", "        Console.WriteLine(\"The product of {0] and {1} and {2} and {3] is {4}.\",\n            a,b,c,d, a * b * c * d);\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;dCON.Database后面的文件路径有问题&amp;#xff0c;d:\\\\data\\\\usa,冒号好像是中文的&amp;#xff0c;改为英文的。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["vs2017未经处理的异常怎么解决？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/453454657946169.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;你管这叫代码没问题&amp;#xff1f;这都越界了&amp;#xff0c;下标从0开始&amp;#xff0c;红色通道应该是2&amp;#xff0c;改下就可以了&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/570355657946190.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["vs2019版本未经处理的异常0x00007FFA1BFA4F69", ["在vs2019配置opencv运行中出现了0x00007FFA1BFA4F69，代码本身是没有问题的，但是一开始运行就会弹出另一个窗口问题然后运行窗口卡死", "\n", "这是我的代码", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "#", "include", " ", "<opencv.hpp>", "\n", "#", "include", " ", "<highgui.hpp>", "\n", "using", " ", "namespace", " cv;\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " nx = ", "200", ";", "//图片宽度（单位为像素）", "\n    ", "int", " ny = ", "200", ";", "//图片高度（像素）", "\n    ", "//写入文件头", "\n    std::cout << ", "\"P3\"", " << std::endl << nx << ", "\" \"", " << ny << std::endl << ", "\"255\"", " << std::endl;", "//P3表示颜色为ASCII,255是最大颜色", "\n\n    ", "//预览窗口", "\n    ", "int", " WidowWidth;", "//窗口宽度", "\n    ", "int", " WindowHeight;", "//窗口高度", "\n    ", "if", " (nx > ny)", "//图片为横板，计算高度与宽度", "\n    {\n        WindowHeight = ", "1080", " - ", "200", ";\n        WidowWidth = (", "int", ")((", "double", ")WindowHeight * (", "double", ")nx / (", "double", ")ny);\n    }\n    ", "else", " ", "//图片为竖版", "\n    {\n        WidowWidth = ", "1920", " - ", "200", ";\n        WindowHeight = (", "int", ")((", "double", ")WidowWidth * (", "double", ")ny / (", "double", ")nx);\n    }\n    ", "Mat ", "RenderingImage", "(ny, nx, CV_8UC3, Scalar(", "50", ", ", "50", ", ", "50", "))", ";", "//创建第一张图", "\n    ", "namedWindow", "(", "\" 图像预览（渲染中）\"", ", WINDOW_NORMAL);", "//设置标题", "\n    ", "moveWindow", "(", "\" 图像预览（渲染中）\"", ", (", "int", ")((", "1920.0", " - WidowWidth) / ", "2", "), (", "int", ")((", "180.0", " - WindowHeight) / ", "2", ") - ", "50", ");", "//窗口位置", "\n    ", "resizeWindow", "(", "\" 图像预览（渲染中）\"", ", WidowWidth, WindowHeight);", "//窗口大小", "\n\n    ", "//为了方便对小数的应用，采用double类型", "\n    ", "for", " (", "int", " j = nx - ", "1", "; j >= ", "0", "; j--)", "//图片的行信息(即一开始是在199层开始输出然后逐层往下)", "\n    {\n        ", "for", " (", "int", " i = ", "0", "; i < nx; i++)", "//列信息（图片从0列开始往右输出）", "\n        {\n            ", "//开始配置每个像素点的RGB信息", "\n            ", "double", " r = ", "double", "(i) / ", "double", "(nx);\n            ", "double", " g = ", "double", "(j) / ", "double", "(ny);\n            ", "double", " b = ", "0.2", ";", "//每个像素的蓝色通道设定为0.2", "\n            ", "int", " ir = ", "int", "(", "255.99", " * r);\n            ", "int", " ig = ", "int", "(", "255.99", " * g);\n            ", "int", " ib = ", "int", "(", "255.99", " * b);\n            ", "//因为在上面设置的ppm文件的最大颜色（RGB通道值）为255，并且r，g，b范围为0-1，所以需要转换", "\n            std::cout << ir << ", "\" \"", " << ig << ", "\" \"", " << ib << std::endl;", "//将数据写入ppm文件", "\n\n            ", "//元素顺序为蓝绿红", "\n            RenderingImage.", "at", "<cv::Vec3b>(ny - ", "1", " - j, i)[", "0", "] = ib;", "//蓝", "\n            RenderingImage.", "at", "<cv::Vec3b>(ny - ", "1", " - j, i)[", "1", "] = ig;", "//绿", "\n            RenderingImage.", "at", "<cv::Vec3b>(ny - ", "1", " - j, i)[", "3", "] = ir;", "//红", "\n        }\n\n        ", "//每行刷新窗口", "\n        ", "if", " (!(j % (ny / ", "100", ")))\n        {\n            ", "imshow", "(", "\" 图像预览（渲染中）\"", ", RenderingImage);\n            ", "waitKey", "(", "1", ");\n        }\n    }\n    ", "imshow", "(", "\" 图像预览（渲染中）\"", ", RenderingImage);\n    ", "waitKey", "(", "3000", ");\n    ", "destroyAllWindows", "();\n    ", "return", " ", "0", ";\n}\n\n", "\n", "\n", "\n", "我也看了网上那些图片的引用，但是他们的问题都是直接在代码那个cpp文件里面出现，我的是弹出来另一个我没修改过的hpp文件然后报错", "我想知道这个问题怎么解决"]], "Tag": "程序设计"}
{"Answer": "哦呵呵  你的意思是不是怕有遗漏 想来个最后有个系统的捕获是吧  一般的话 要是把项目配置在spring中 都会在spring里配置一个最顶层的异常处理器 。。 你邮箱多少 我给你发个springrcp的文档  你进去看他的异常处理部分 上面说的很清楚 呵呵 但是很长 在这里说不清楚", "Konwledge_Point": "异常处理", "Question": ["如何在某个顶层方便的捕获事件线程抛出的异常", ["    有一次看.NET平台的WinForm发现其有提供捕捉这样异常的方法，升至它有默认的异常处理。", "但是在Swing中，如果某事件处理函数抛出了一个异常，很可能导致事件线程挂掉，这时候界面点击无反应，", "软件甚至要通过强行关闭才能退出。如果在某顶层做一个最后防御，这样哪个事件处理模块如果抛出未处理异常，", "也不至于程序莫名的挂掉，顶多输出一个信息告知用户系统错误，我要挂了，然后退出。", "但是我找了一下不知Swing在什么地方可以捕获异常。不知道大家是如何处理这个问题的。", "问题补充：", "是这样的   swing你得自己写个异常  当抛出异常的时候 可以让异常形成一个joptionpane 点了确定之后 这样程序就不挂着了  可以给用户选择的余地 这样增加了程序的友好性 ", "你写个异常继承RuntimeException 在构造器里写段抛出对话框的代码 并把信息打印在抛出的对话框里", "_____________________________________", "你这里的想法是说，我专门定义一个异常，然后别人如果出现错误要抛出这个异常？", "然后这个异常呢会弹出对话框？", "可是这并没有解决真正的问题啊，我要做的本来就是一个最后防御，某个事件处理函数抛出什么异常这本更就是不可知的，我要的是在某个顶层能捕捉到事件线程抛出来的未处理异常，这里就是要为了程序不能不明不白的挂掉。", "问题补充：", "我说的和你想的意思一样 我们现在就是这样处理的 而且程序运行了几年了也没问题啊   你在有可能抛出异常的地方try catch然后抛出你自己写的异常啊  编译时异常必须声明这不用咱们去操心JAVA机制自动处理   而只要有运行时异常抛出就一定是你代码的问题  或者用户的输入之类的不符合你的预期逻辑你刻意的抛出一个异常  异常是一层层向上抛的 你把事件可能出现问题的部分 try catch住不就行了么", "————————————————————————", "可是这样的话，那么和他自己捕捉了某个异常，然后弹出一个对话框又有多少区别呢？这是把防御交给了每个处理者自己。可是如果我不能假定他们都正确处理了这一切呢？这个时候我需要一张最后防御网，这个该如何处理呢？", "问题补充：", "哦呵呵  你的意思是不是怕有遗漏 想来个最后有个系统的捕获是吧  一般的话 要是把项目配置在spring中都会在spring里配置一个最顶层的异常处理器 。。 你邮箱多少 我给你发个springrcp的文档  你进去看他的异常处理部分上面说的很清楚 呵呵 但是很长 在这里说不清楚", "__________________________________", "以现在的情况是不可能改用springrcp的，既然springrcp做到了，那么一定是有方法的，只是我奇怪为什么Swing没有提供一个简便的接口来捕获事件线程异常呢？这一点上 .net确实周到了一点。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;乘号都没写&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/888389961846173.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;还有很多错误&amp;#xff0c;改好之后&amp;#xff1a;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/40351207184614.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;test&lt;/span&gt;{\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; PI&amp;#61;&lt;span class=\"hljs-number\"&gt;3.142&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; R,L,S;\n&lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入圆的半径值:6&amp;#34;&lt;/span&gt;);\nR&amp;#61;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;Parse&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;ReadLine&lt;/span&gt;());\nL&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*PI*R;\nS&amp;#61;PI*R*R;\n&lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆的周长为:{0}&amp;#34;&lt;/span&gt;,L);\n&lt;span class=\"hljs-built_in\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆的面积为:{0}&amp;#34;&lt;/span&gt;,S);\n}}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["vs未经处理的异常，字符串不正确", ["安照书做的，运行后提示未经处理的异常，输入的字符串不正确，请问到底哪里出错了?", "static void Main()", "{const double PI=3.142;", "double R,L,S;", "Console.Write(\"请输入圆的半径值:6\");", "R=double.Parse(Console.ReadLine());", "L=2", "PI", "R;", "S=PI", "R", "R;", "Console.WriteLine(\"圆的周长为:{0}\",L);", "Console.WriteLine(\"圆的面积为:{0}\",S);", "   }"]], "Tag": "程序设计"}
{"Answer": "可以使用函数拦截器处理。\r\nExt.ajax.handleResponse = Ext.ajax.handleResponse.createInterceptor(function(response){//处理函数。\r\n//  response.argument.options.success =Ext.emptyFn;如果需要，可以改变回掉函数。\r\n});\r\n\r\nExt.ajax.handleFailure= Ext.ajax.handleFailure.createInterceptor(function(response){//处理函数。\r\n//  response.argument.options.failure=Ext.emptyFn;如果需要，可以改变回掉函数。\r\n});", "Konwledge_Point": "异常处理", "Question": ["ext如何处理后台自定义异常", ["请问各位用ext的同仁，是如何处理后台自定义异常的，当然要公共的一个方法，前提是不能重写ext的ajax，", "\n其中还包括文件上传的后台自定义异常处理！"]], "Tag": "程序设计"}
{"Answer": "FileNotFound异常，文件没有找到，你确认下你要读取的文件是否在C:\\Windows\\temp\\目录下。", "Konwledge_Point": "异常处理", "Question": [".NET Framework 应用程序中发生了未处理的异常", ["\n这种异常怎样处理？"]], "Tag": "程序设计"}
{"Answer": "参考：http://blog.csdn.net/litton_van/article/details/7084655", "Konwledge_Point": "异常处理", "Question": ["Android 异常捕获处理", ["android 应用程序，只有稍有一点错误就会自行关闭。我怎么样捕获异常信息并且给用户一个提示"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char a;这里给a初始化一个值&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["请问这是什么原因呢，有未经处理的异常: 0xC0000005: 读取位置 0x00000031 时发生访问冲突", ["char", " a;\n\n\n", "case", " ", "2", ":\n              {\n                  cout<<", "\"输入查询姓名：\"", ";\n                  cin>>a;\n                  ", "for", "(j=", "0", ";j<Teatop;j++)\n                  {\n                    ", "if", "(", "strcmp", "(Tea[j].name,(", "char", "*)a)) ", "break", ";\n                }\n                ", "if", "(j==Teatop)\n                cout<<", "\"查无此人；\"", "<<endl;\n                ", "return", " ", "0", ";\n                ", "if", "(j!=Teatop)\n               ", "Show", "();\n                ", "return", " ", "1", ";\n                  \n              }", "break", ";\n", "\n", "报错：", "0x7a76d442 (msvcr100d.dll) 处有未经处理的异常: 0xC0000005: 读取位置 0x00000031 时发生访问冲突", "\n", "该如何改呢"]], "Tag": "程序设计"}
{"Answer": "pControl是什么？CMainFrame类的成员变量吗？\r\n什么时候赋值的？\r\n是否由于pControl为空导致异常？\r\n是否由于p_OptionBtn为空导致异常？", "Konwledge_Point": "异常处理", "Question": [".exe 中的 0x11 处有未经处理的异常: : 读取位置 0x00000a10 时发生访问冲突", ["程序运行起来后，在某些情况下点击左方向键就会出现这个错误，麻烦各位老哥帮忙看看，谢谢", "\nvoid CMainFrame::Backward()", "\n{", "\n    COptionUI* p_OptionBtn =NULL;", "\n    if( 0 == pControl->GetCurSel())", "\n    {", "\n    }", "\n    else if(1 == pControl->GetCurSel())", "\n    {", "\n        if(m_NumGroupMainMenu <= 0) ", "\n        {", "\n            m_NumGroupMainMenu = m_pGroupMainMenu->GetSize();", "\n        }", "\n        p_OptionBtn = static_cast(m_pGroupMainMenu->GetAt(--m_NumGroupMainMenu));", "\n        if(!p_OptionBtn->IsSelected())", "\n        {", "\n            p_OptionBtn->Selected(true);", "\n        }", "\n    }", "\n\n", "//这次报错是这个语句里报错，但是其他的也有问题\nelse if(4 == pControl->GetCurSel())   //5改为4   1589\n{\n    if(m_NumGroupDispatch <= 0) \n    {\n        m_NumGroupDispatch = m_pGroupDispatch->GetSize();\n    }\n    p_OptionBtn = static_cast<COptionUI*>(m_pGroupDispatch->GetAt(--m_NumGroupDispatch));\n    if(!p_OptionBtn->IsSelected())  \n    {\n        p_OptionBtn->Selected(true);\n    }\n}\nelse if(7 == pControl->GetCurSel())//1594\n{\n    if(m_NumGroupSysSet <= 0) \n    {\n        m_NumGroupSysSet = m_pGroupSysSet->GetSize();\n    }\n    p_OptionBtn = static_cast<COptionUI*>(m_pGroupSysSet->GetAt(--m_NumGroupSysSet));\n    if(!p_OptionBtn->IsSelected())  \n    {\n        p_OptionBtn->Selected(true);\n    }\n}\n}\n![图片说明](https://img-ask.csdn.net/upload/201808/06/1533540518_545209.png)\n\n\nvoid CMainFrame::FNumBtnFun(TNotifyUI& msg)//1128\n", "\n\n", "{", "\n    CString name =  msg.pSender->GetName();", "\n    COptionUI* pOption = NULL;", "\n\n", "if(0 == pControl->GetCurSel()) {\n//  if(name == _T(\"F9Btn\")) pControl->SelectItem(7);\n//  if(name == _T(\"F0Btn\")) pControl->SelectItem(34);\n}\nelse if(12 == pControl->GetCurSel())\n{\n    if(pOption = static_cast<COptionUI*>(m_pBusinRegistGroup->GetAt(_ttoi(msg.pSender->GetUserData()) - 1)))\n        pOption->Activate();\n}\nelse if(13 == pControl->GetCurSel())\n{\n    if(pOption = static_cast<COptionUI*>(m_pBusinRequestGroup->GetAt(_ttoi(msg.pSender->GetUserData()) - 1)))\n        pOption->Activate();\n}\n", "\n\n", "}", "\n这个函数中也会错类似的错误，不知道是不是Activate用错了的原因"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;破案了家人们&amp;#xff0c;我直接将excel的xlsx的后缀重命名为csv&amp;#xff0c;这种做法是错的。解决方法&amp;#xff1a;打开excel文件后另存为csv文件&amp;#xff0c;这样子就好了。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["SPSSPRO导入csv文件异常！！", ["spsspro导入csv文件异常，用head()方法查看前五行，出现行列不对应情况", "\n", "\n", "直接打开csv文件没有问题，显示正常~", "所以到底啥原因捏？？各位求解答"]], "Tag": "程序设计"}
{"Answer": "代码中有指针操作不合法，你多看看你的代码是否有指针越界等操作行为", "Konwledge_Point": "异常处理", "Question": ["有未经处理的异常0xc0000005，读取位置0x00a97000发生错误", ["有未经处理的异常0xc0000005，读取位置0x00a97000发生错误"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;打个断点看下image.data是不是空的&amp;#xff0c;如果是空的应该就是你路径或者文件名或者后缀错误导致的。&lt;br /&gt;或者用if(image.data&amp;#61;&amp;#61;null) 来判断.&lt;br /&gt;如果是修改后缀&amp;#xff0c;不应该说错误&amp;#xff0c;你可以把199直接去点&amp;#xff0c;不需要第二个参数看看。去掉第二个参数还是不行的话&amp;#xff0c;再把后缀改回去看下&amp;#xff0c;或者换一张图片试试&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["OpenCV  有未经处理的异常: Microsoft C++ 异常: cv::Exception，位于内存位置 0x000000E32114DB30 处", ["源代码如下：", "\n", "\n", "在debug下运行的，错误提示在imshow(\"originalphoto1\", image);一句，提示内容如标题所示，原图片为jpg，修改为了png无效，imread最后的199是后添加的，同样对异常无效。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;往采纳&amp;#xff0c;谢谢&amp;#xff0c;代码&amp;#xff1a;&lt;br /&gt;&amp;#61;&amp;#61;PlayOutOfIndexException.java&amp;#61;&amp;#61;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Test10&lt;/span&gt;;\n\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;PlayOutOfIndexException&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Exception&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; message;\n\n    public &lt;span class=\"hljs-type\"&gt;PlayOutOfIndexException&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;ErrorMessage&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.message &amp;#61; &lt;span class=\"hljs-type\"&gt;ErrorMessage&lt;/span&gt;;\n        }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    public &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; getMessage() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; message;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#61;&amp;#61;Player.java&amp;#61;&amp;#61;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; Test10;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Player&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;play&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; PlayOutOfIndexException {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (index &amp;gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;PlayOutOfIndexException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不存在该歌曲&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;当前正在播放第&amp;#34;&lt;/span&gt; &amp;#43; index &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;首歌曲&amp;#34;&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Player&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;playe&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Player&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            playe.play(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n            playe.play(&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (PlayOutOfIndexException e) {\n            &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated catch block&lt;/span&gt;\n            e.printStackTrace();\n        }\n        \n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/096152881356167.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["这个自定义异常怎么用啊", ["对于自定义异常还没有理解透彻，这个自定义异常怎么用啊，想问一下，谢谢啦"]], "Tag": "程序设计"}
{"Answer": "用struts2的ExceptionMappingInterceptor\r\n\r\n\r\npackage com.erry.core.web.interceptor;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport org.springframework.dao.DataAccessException;\r\n\r\nimport com.erry.exception.BusinessException;\r\nimport com.erry.exception.DaExceptionTranslator;\r\nimport com.opensymphony.xwork2.ActionInvocation;\r\nimport com.opensymphony.xwork2.interceptor.ExceptionHolder;\r\nimport com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor;\r\nimport com.opensymphony.xwork2.util.LocalizedTextUtil;\r\n\r\npublic class ExceptionInterceptor extends ExceptionMappingInterceptor {\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate static final long serialVersionUID = -108722874114862093L;\r\n\tprivate DaExceptionTranslator daExTranslator = new DaExceptionTranslator();\r\n\r\n\tprivate boolean debug = false;\r\n\r\n\tprotected void publishException(ActionInvocation invocation, ExceptionHolder exceptionHolder) {\r\n\t\tString detailedInfo;\r\n\t\tList&lt;String&gt; errMessage = new ArrayList&lt;String&gt;();\r\n\t\t//\t\ttry {\r\n\t\tdetailedInfo = exceptionHolder.getExceptionStack();\r\n\t\t//\t\t} catch (IOException e) {\r\n\t\t//\t\t\tdetailedInfo = \"\";\r\n\t\t//\t\t}\r\n\t\tif (exceptionHolder.getException() instanceof BusinessException) {\r\n\t\t\terrMessage = getBusiExceptionMessage(invocation, (BusinessException) exceptionHolder.getException());\r\n\t\t} else if (exceptionHolder.getException() instanceof DataAccessException) {\r\n\t\t\tBusinessException e = daExTranslator.tranlate((DataAccessException) exceptionHolder.getException());\r\n\t\t\terrMessage.addAll(getBusiExceptionMessage(invocation, e));\r\n\t\t} else {\r\n\t\t\terrMessage.add(getMessage(invocation, \"unknown_error\", null));\r\n\t\t}\r\n\t\tinvocation.getStack().set(\"detailedInfo\", detailedInfo);\r\n\t\tinvocation.getStack().set(\"errMessage\", errMessage);\r\n\t\tif (debug) {\r\n\t\t\texceptionHolder.getException().printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate List&lt;String&gt; getBusiExceptionMessage(ActionInvocation invocation, BusinessException e) {\r\n\t\tList&lt;String&gt; errors = new ArrayList&lt;String&gt;();\r\n\t\tBusinessException be = e;\r\n\t\twhile (be != null) {\r\n\t\t\tString msgKey = \"bussiness_exception_\" + be.getErrorCode();\r\n\t\t\terrors.add(getMessage(invocation, msgKey, be.getArgs()));\r\n\t\t\tbe = be.getLinkedException();\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tprivate String getMessage(ActionInvocation invocation, String msgKey, Object[] args) {\r\n\t\tLocale locale = invocation.getInvocationContext().getLocale();\r\n\t\treturn LocalizedTextUtil.findText(invocation.getAction().getClass(), msgKey, locale, msgKey, args);\r\n\t}\r\n\r\n\tpublic boolean isDebug() {\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tpublic void setDebug(boolean debug) {\r\n\t\tthis.debug = debug;\r\n\t}\r\n}", "Konwledge_Point": "异常处理", "Question": ["struts2 环境下 异常设计 和处理", ["抽象出两种异常：", "\n1.严重的不可恢复的异常：SystemException extends RuntimeException ", "\n2.有机会被处理的异常：AppException extends Exception ", "\n\n", "我的设计思路：在业务代码里面用MessageId等信息构造AppException或SystemException 并抛出，然后由拦截器转发到专用的异常处理Action中处理(如AppExceptionHandleAction或SystemExceptionHandleAction)。 ", "\n\n", "我的问题是：在AppExceptionHandleAction或SystemExceptionHandleAction中，我怎样能取得那个AppException或SystemException 呢？之所以要取得这个异常对象，是想取得它的MessageId并进行日志和别的处理。 ", "\n\n", "查了一下文档，actionSupport类里并没有相关的取得exception的方法。把异常转到Action中处理的思路有问题么？ ", "\n请问各位达人们都是怎么做的？有没有什么最佳实践？", "\n\n", "十分感谢！", "\n\n", "框架：struts2.0.14,spring2.5.6,ibatis2.3.4 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;java是”编译型语言“&amp;#xff0c;python是解释型语言。java在编译阶段可以检测你写的代码是否有错误&amp;#xff0c;对常规的流、网络、等现实中通常会有意外的操作直接要求你try。运行阶段&amp;#xff0c;你的代码基本没问题了&amp;#xff0c;但用户操作可能就出问题&amp;#xff0c;此时的问题是你业务决定的&amp;#xff0c;不是某个具体操作决定的。比如除数为0&amp;#xff0c;这个0是用户决定的。这种情况只能靠程序员想到&amp;#xff0c;手动的try。&lt;br /&gt;python的“解释阶段”就是运行阶段&amp;#xff0c;无论是流、网络、还是除数为0&amp;#xff0c;别无二致&amp;#xff0c;你代码里不try&amp;#xff0c;执行时遇上异常了就会崩 。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python3异常是否都能不进行except，即通过编译", ["在java中，异常分为两类，一种是运行时异常，不受编译检查，另一种是除运行时异常外的其他异常，受编译检查，要求可能抛出这类异常的地方必须使用try处理或抛出处理，这很好理解，因为有些异常程序无法处理，因为运行时的意外情况，而有些异常是可以被预料到发生并且处理的，也就要求程序员必须对这类异常进行处理，就像返回值一样，这种异常是预料中的反馈", "而在我学习python的过程中没有发现python的异常有这种分类，这是否表示，python中的所有异常，都被视为不能处理的异常，还是说，需要程序员去文档里check代码中可能出现的异常，再针对性的处理？有没有什么办法，能像java中一样，让调用者知晓代码可能抛出的异常，将异常作为一种函数调用的可预料的反馈，而不是我调用了一个函数，这个函数在某种情况下会抛出异常，然后除非在代码真正运行起来并且发生了这个情况抛出这个异常之后，我才去写try代码块，我总不可能在调用每个函数的时候，都去文档里check一下这个函数可能抛出的异常，如果是这样的话，那python中异常处理岂不是很鸡肋，因为不管什么异常对于调用方而言都一样，按这样不就变成每次都是except所有异常，然后finnally就ok？", "那这样还调用方还try什么呢？try的意思就是知道可能会出问题才try，完全不知道会出什么异常，也就是哪里都有可能出异常，那不是所有代码都得try", "我觉得python应该不至于有我以为的该缺陷，是否有什么我不知道的语法，可以解决这个问题"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char* strPtr &amp;#61; NULL;&lt;/p&gt;\n\n&lt;p&gt;input &amp;gt;&amp;gt; strPtr;&lt;br /&gt;\n--------------------------&lt;br /&gt;\n空指针&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["VS2019:引发了异常: 写入访问权限冲突。 **_Str** 是 0x1110112。", ["\n", "//Rational.h\n#pragma once\n#include<iostream>\n\nclass Rational\n{\npublic:\n\tfriend std::istream &operator>>(std::istream &input, Rational &rational);\n\tvoid friend addition(const Rational &rational1, const Rational &rational2);\n\n\tRational(int numerator = 1, int denominator = 2);\n\t\n\tvoid setNumerator(int numerator);\n\tvoid setDenominator(int denominator);\n\n\tint getNumerator()const;\n\tint getDenominator()const;\n\n\tvoid printFloat();\n\tvoid printFraction();\nprivate:\n\tstruct\n\t{\n\t\tint numerator;\n\t\tint denominator;\n\t}number;\n\tinline void simplify();\n};\n\n", "\n\n", " ", "\n\n", " ", "\n\n", "\n", "//Rational.cpp\n#include \"Rational.h\"\n#include<stdexcept>\n#include<cstdlib>\n#include<cassert>\n\nusing namespace std;\n\nstd::istream& operator>>(std::istream& input, Rational& rational)\n{\n\tchar* strPtr = NULL;\n\tinput >> strPtr;\n\tchar** strPtr1_2 = NULL;\n\tassert(strPtr != NULL);\n\trational.number.numerator = strtol(strPtr, strPtr1_2, 10);\n\tchar** strPtr2_2 = strPtr1_2 + 1;\n\trational.number.denominator = strtol(*strPtr2_2, NULL, 10);\n\treturn input;\n}\n\nvoid addition(const Rational& rational1, const Rational& rational2)\n{\n\tint numerator1 = rational1.number.numerator * rational2.number.denominator;\n\tint numerator2 = rational2.number.numerator * rational1.number.denominator;\n\tint numerator = numerator1 + numerator2;\n\tint denominator = rational1.number.denominator * rational2.number.denominator;\n\tRational rational(numerator, denominator);\n\trational.printFraction();\n\t\n}\n\nRational::Rational(int numerator, int denominator)\n{\n\tnumber.numerator = numerator;\n\tsetDenominator(denominator);\n}\n\nvoid Rational::setNumerator(int numerator)\n{\n\tnumber.numerator = numerator;\n\tsimplify();\n}\n\nvoid Rational::setDenominator(int denominator)\n{\n\tif (denominator == 0)\n\t{\n\t\tthrow invalid_argument(\"The denominator can't be '0'\");\n\t}\n\telse\n\t{\n\t\tnumber.denominator = denominator;\n\t\tsimplify();\n\t}\n}\n\nint Rational::getNumerator() const\n{\n\treturn number.numerator;\n}\n\nint Rational::getDenominator() const\n{\n\treturn number.denominator;\n}\n\nvoid Rational::printFloat()\n{\n\tfloat result = (float)number.numerator / number.denominator;\n\tcout << result << endl;\n}\n\nvoid Rational::printFraction()\n{\n\tcout << number.numerator << '/' << number.denominator << endl;\n}\n\ninline void Rational::simplify()\n{\n\tint a = number.denominator;\n\tint b = number.numerator;\n\tint c = a % b;\n\twhile (c != 0)\n\t{\n\t\ta = b;\n\t\tb = c;\n\t\tc = a % b;\n\t}\n\tnumber.denominator /= b;\n\tnumber.numerator /= b;\n}\n", "\n\n", " ", "\n\n", " ", "\n\n", "\n", "//main.cpp\n#include\"Rational.h\"\n\nusing namespace std;\n\nint main()\n{\n\tRational rational1(3, 9);\n\tRational rational2(1, 2);\n\n\tcout << \"The numerator of rational1 is \" << rational1.getNumerator() << endl;\n\tcout << \"The denominator of rational1 is \" << rational1.getDenominator() << endl;\n\tcout << \"Print the rational1 in float form:\";\n\trational1.printFloat();\n\tcout << \"Print the rational1 in fraction form:\";\n\trational1.printFraction();\n\n\tcout << \"\\n\\n\" << endl;\n\n\tcout << \"The numerator of rational2 is \" << rational2.getNumerator() << endl;\n\tcout << \"The denominator of rational2 is \" << rational2.getDenominator() << endl;\n\tcout << \"Print the rational2 in float form:\";\n\trational2.printFloat();\n\tcout << \"Print the rational2 in fraction form:\";\n\trational2.printFraction();\n\n\tcout << \"\\n\\n\" << endl;\n\n\tcout << \"The result of that rational1 add rational2 is:\";\n\taddition(rational1, rational2);\n\n\tcout << \"\\n\\n\" << endl;\n\n\tcin >> rational1;\n\tcout << \"The numerator of rational1 is \" << rational1.getNumerator() << endl;\n\tcout << \"The denominator of rational1 is \" << rational1.getDenominator() << endl;\n\tcout << \"Print the rational1 in float form:\";\n\trational1.printFloat();\n\tcout << \"Print the rational1 in fraction form:\";\n\trational1.printFraction();\n\n\tcin >> rational2;\n\tcout << \"The numerator of rational2 is \" << rational2.getNumerator() << endl;\n\tcout << \"The denominator of rational2 is \" << rational2.getDenominator() << endl;\n\tcout << \"Print the rational2 in float form:\";\n\trational2.printFloat();\n\tcout << \"Print the rational2 in fraction form:\";\n\trational2.printFraction();\n\n\tcout << \"The result of that rational1 add rational2 is:\";\n\taddition(rational1, rational2);\n}"]], "Tag": "程序设计"}
{"Answer": "你可以自己在属性文件中配置一个文件路径，然后当SimpleMappingExceptionResolver触发异常跳转页面的时候，将异常信息手动写到自己定义的日志文件里面。", "Konwledge_Point": "异常处理", "Question": ["Spring MVC 简单异常处理器如何定义日志文件路径", ["如题。项目中有log4j的异常处理机制，但现在需要使用Spring MVC提供的简单异常处理器SimpleMappingExceptionResolver，来进行异常的捕捉，将异常全部放在spring mvc定义的日志文件中。那么在xml文件中配置单独的spring mvc的异常处理文件路径，不知该如何配置？谢谢。", "\nspring mvc中配置简单异常处理器SimpleMappingExceptionResolver如下：", "\n\n", "<bean id=\"exceptionResolver\"\n    class=\"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\">\n    <property name=\"defaultErrorView\">\n        <value>/common/error/500</value>\n    </property>\n    <property name=\"exceptionMappings\">\n        <props>\n            <prop key=\"org.springframework.dao.DataAccessException\" >/common/error/500</prop>\n            <prop key=\"IOException\">/common/error/500</prop> \n            <prop key=\"java.sql.SQLException\">/common/error/500</prop> \n            <prop key=\"java.lang.Exception\">/common/error/500</prop> \n        </props>\n    </property>\n    <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->     \n    <property name=\"warnLogCategory\" value=\"WARN\"></property>  \n</bean>\n"]], "Tag": "程序设计"}
{"Answer": "实在是没办法，试着重新安装了VS2010，之前的事旗舰版，现在是正式版，确实不再弹出gs_support.c问题，但是后面的内存错误，应该还是程序的问题，因为在编写其他程序的时候，又出现过这种状况，在百度寻寻觅觅，看了一些高手评论，应该是指针值被清除，接着又重新使用而未赋初值引起的。", "Konwledge_Point": "异常处理", "Question": ["0x0001af3a 处有未经处理的异常: 0xC0000005: Access violation", ["opengl程序在自己的电脑vs2010上面运行出错，在别人电脑没问题，重新配置了n次glew都不行，每次都弹出：0x0001af3a 处有未经处理的异常: 0xC0000005: Access violation，并且自动打开gs_support.c跳到", "\n cookie = systime.ft_struct.dwLowDateTime;!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个是正则表达式&amp;#xff0c;$在正则表达式中表示一行或整个文本的结尾。&lt;/p&gt;\n\n&lt;p&gt;要替换 $  应该写成 r&amp;#39;\\$&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;example_df &amp;#61; example_df.replace(r&amp;#39;\\$&amp;#39;,&amp;#39;&amp;#39;, regex&amp;#61;True)#只有符号$无法去除&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt;如果想一次性替换掉所有特殊符号&lt;/p&gt;\n\n&lt;p&gt;example_df &amp;#61; example_df.replace(r&amp;#39;[\\-&amp;#64;#&amp;amp;\\$%&amp;#43;/\\\\*&amp;lt;&amp;gt;&amp;#61;]&amp;#39;,&amp;#39;&amp;#39;, regex&amp;#61;True)&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;# 第3个问题要把空字符串替换成pd.NA&lt;/p&gt;\n\n&lt;p&gt;example_df &amp;#61; example_df.replace(r&amp;#39;^\\s*$&amp;#39;,pd.NA, regex&amp;#61;True)&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;import pandas as pd\n\nexample_data &amp;#61; {&amp;#39;A&amp;#39;:  [&amp;#39;1&amp;#39;, &amp;#39;-&amp;#39;, &amp;#39;&amp;lt;0.9&amp;#39;],\n        &amp;#39;B&amp;#39;: [&amp;#39;3&amp;#39;, &amp;#39;19/20&amp;#39;,&amp;#39;$25&amp;#39;]\n        }\nexample_df &amp;#61; pd.DataFrame (example_data, columns &amp;#61; [&amp;#39;A&amp;#39;,&amp;#39;B&amp;#39;])\n\nexample_df &amp;#61; example_df.replace(r&amp;#39;[\\-&amp;#64;#&amp;amp;\\$%&amp;#43;/\\\\*&amp;lt;&amp;gt;&amp;#61;]&amp;#39;,&amp;#39;&amp;#39;, regex&amp;#61;True)\n\nexample_df &amp;#61; example_df.replace(r&amp;#39;^\\s*$&amp;#39;,pd.NA, regex&amp;#61;True)\n\nprint(example_df)\n\nfor col in example_df.columns[0:]:\n    fill_val &amp;#61; example_df[col].dropna().astype(float).median()\n    example_df[col].fillna(fill_val,inplace&amp;#61;True)\n\nprint(example_df)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python数据集异常符号的处理和缺失值填补的问题", ["大家好！我在尝试使用df.replace函数进行数据集中异常符号的替换和，但是出现了以下几个问题。", "\n\n", "首先我创建一个简单的数据集如下：", "\n\n", "\n", "example_data = {'A':  ['1', '-', '<0.9'],\n        'B': ['3', '19/20','$25']\n        }\n\nexample_df = pd.DataFrame (example_data, columns = ['A','B'])", "\n\n", "\n\n", "接下来使用replace函数进行特殊符号的去除。即把 - / < $ 等特殊符号去除只保留数字。", "\n\n", "\n", "example_df = example_df.replace('/','', regex=True)\nexample_df = example_df.replace('$','', regex=True)#只有符号$无法去除？\nexample_df = example_df.replace('<','', regex=True)\nexample_df = example_df.replace('-','', regex=True)\nexample_df", "\n\n", "问题1：", "使用replace函数无法去除符号“$”。请问这种情况应该怎么解决？", "\n\n", " ", "\n\n", "而且这种办法只适合知道异常符号是什么且异常符号种类很少的情况，如果想一次性替换掉所有特殊符号呢？我查询了很多方法，以下这种方法最接近，但是它一次性去掉了包含特殊符号的单元格的值。", "\n\n", "\n", "for col in example_df.columns:\n    example_df[col].replace(regex=True, inplace=True, to_replace=r'[-@#&$%+/\\*<>=]', value=np.nan)", "\n\n", "\n\n", "\n", "问题2:", " 请问如何一次性将所有特殊符号去除，并保留其所在单元格内的其他内容？", "\n\n", " ", "\n\n", "经过处理得到如下数据集：", "\n\n", "\n\n", "我想把缺失值使用列中位数进行填补，但是却报错“could not convert string to float: '' ”。好像是因为我把特殊符号替换成了空字符串？", "\n\n", "\n", "for col in example_df.columns[0:]:\n    fill_val = example_df[col].dropna().astype(float).median()\n    example_df[col].fillna(fill_val,inplace=True)", "\n\n", "问题3: ", "请问大家这种没有办法转换成数值型的情况下应该怎么用中位数或者平均数填补缺失值？是不是我替换特殊符号的方法还是有问题的？", "\n\n", " ", "\n\n", "还有一个小问题～我发现如果一个单元格内只有特殊符号，那么使用None进行替换后，他们不会变成空，反而会自动填补上一行的值。请问这个是为什么呢？", "\n\n", "\n", "#如果一个变量中只有一个特殊符号，填补成为空白之后会自动填补上一行的值？\nexample_df = example_df.replace('-',None, regex=True)", "\n\n", "\n\n", "多谢各位大神！感激不尽！", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/linwei_1029/article/details/41674767", "Konwledge_Point": "异常处理", "Question": ["Spring MVC中ResponseBody, ResponseEntity和异常返回的问题", ["先看代码：", "\n\n", " @RestController\npublic class SampleController {\n\n    @RequestMapping(\"/resp\")\n    public String sampleResp(){\n         System.out.println(1/0);\n         return \"Hello\";\n    }\n}\n", "\n\n", "此时使用postman或者httprequester请求，响应状态码500，但是response中如下：", "\n\n", " {\n  \"timestamp\": 1489320286710,\n  \"status\": 500,\n  \"error\": \"Internal Server Error\",\n  \"exception\": \"java.lang.ArithmeticException\",\n  \"message\": \"/ by zero\",\n  \"path\": \"/resp\"\n}\n", "\n\n", "第一个问题：", "\n目前项目中没有做统一异常处理和添加ExceptionnReslovers， 有没有能帮忙找出具体源码，就是这些信息从哪里取出来的。", "\n\n", "第二个问题：", "\nResponseEntity中存在于HttpStatus和HttpHeader，可以通过ResponseEntity来返回Http的头和状态， 我想知道源码中具体的response.setStatus和addHeader在哪里？", "\n\n", "刚刚使用CSDN，没多少金币，求大神帮忙。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/523223204766124.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["弹窗：有未处理的异常", ["\n"]], "Tag": "程序设计"}
{"Answer": "用f5而不是ctrl+f5方式运行（或者选择开始调试命令）\r\n出现错误的时候先选择继续，再选择调试。\r\n或者在程序中可能出错的地方打断点，单步运行。\r\n\r\n# （1）进入调试\r\n![图片说明](https://img-ask.csdn.net/upload/202009/15/1600133384_117277.png)\r\n# （2）中断\r\n![图片说明](https://img-ask.csdn.net/upload/202009/15/1600133401_32184.png)\r\n# （3）在堆栈上定位用户代码，并且双击\r\n![图片说明](https://img-ask.csdn.net/upload/202009/15/1600133450_300152.png)\r\n# （4）找到问题所在\r\n![图片说明](https://img-ask.csdn.net/upload/202009/15/1600133461_858117.png)", "Konwledge_Point": "异常处理", "Question": ["请教VC2010 中编程用调试方式运行，报某个位置0xxxxxxxxxxxx处有未经处理的异常0x0000005，怎么确定在程序中位置？", ["大概是 引用空指针，或除0错误。", "\n但是怎么定位到对应代码？"]], "Tag": "程序设计"}
{"Answer": "会回滚,\r\n在service层抛出的异常,你在controller层能捕捉到这个异常并处理就可以回滚(前提是你捕捉的异常大于抛出的异常)", "Konwledge_Point": "异常处理", "Question": ["SpringMVC在controller层捕获了service层的异常，事务还会回滚吗", ["如题，我在service层加了事务，并在controller层捕获了service层的异常并处理掉，那么service层的事务会回滚吗？"]], "Tag": "程序设计"}
{"Answer": "http://m.blog.csdn.net/article/details?id=9345203", "Konwledge_Point": "异常处理", "Question": ["我的tomcat服务器启动有以下异常信息如何处理？", [" 信息: Initializing Spring root WebApplicationContext\nlog4j:WARN No appenders could be found for logger (org.springframework.web.context.ContextLoader).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题主你的Table_2的列明是张三&amp;#xff0c;不是Name列。。改下数据库字段名为Name&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/866085993236180.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~有其他问题可以继续交流~&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["“System.Data.SqlClient.SqlException”类型的未经处理的异常在 System.Data.dll 中发生   其他信息: 列名 'Name' 无效。", ["using System;", "using System.Collections.Generic;", "using System.ComponentModel;", "using System.Data;", "using System.Drawing;", "using System.Linq;", "using System.Text;", "using System.Threading.Tasks;", "using System.Windows.Forms;", "using System.Data.SqlClient;", "\n", "namespace ShuJuKu", "{", "    public partial class Form1 : Form", "    {", "        public Form1()", "        {", "            InitializeComponent();", "        }", "        SqlConnection contest; //连接数据库对象", "        SqlCommand cmdLoginOP; //执行SQL命令对象", "        string cmdString; // Sql语句字符串", "        //判断指定的用户名是否存在，如果存在返回true,否则返回false", "        bool IsExist(string Name)", "        {", "            string str = string.Format(\"select count(*) from Table_2 where Name='{0}'\",Name);", "            cmdLoginOP = new SqlCommand(str,contest);", "            contest.Open();", "            int count = Convert.ToInt32(cmdLoginOP.ExecuteScalar()); //查询该用户名的个数", "            contest.Close();", "            if (count!=0)", "            {", "                return true;", "            }", "            return false;", "        }", "        //执行Sql命令，执行成功返回true,否则返回false", "        bool GetSqlCmd(string CmdStr)", "        {", "            cmdLoginOP = new SqlCommand(CmdStr, contest);", "            contest.Open();", "            int count = cmdLoginOP.ExecuteNonQuery(); //执行SQL命令并返回受影响行数", "            contest.Close();", "            if (count!=0)", "            {", "                return true;", "            }", "            return false;", "        }", "\n", "    ", "private", " void ", "Form1_Load(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n    {\n        ", "string", " ConString = ", "\"server=.;database=test;uid=sa;pwd=sa;\"", ";\n        contest = ", "new", " ", "SqlConnection(ConString)", ";\n    }\n    ", "//选项卡选择页面更改事件执行代码", "\n    ", "private", " void tab", "Control1_SelectedIndexChanged(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n    {\n        ", "if", " (tabControl1.SelectedIndex==", "0", ")\n        {\n            groupBox1.Parent = tabControl1.TabPages", "[", "0", "]", "; ", "//将组中对象放入第一个页面", "\n        }\n        ", "if", " (tabControl1.SelectedIndex", " == ", "1", ")\n        {\n            groupBox1.Parent = tabControl1.TabPages", "[", "1", "]", "; ", "//将组中对象放入第二个页面", "\n\n        }\n    }\n\n    ", "//保存按钮单击事件执行代码", "\n    ", "private", " void button1", "_Click(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n    {\n        ", "if", " (textBox1.Text==", "string", ".Empty", "||", "text", "Box2", ".", "Text", "==", "string", ".", "Empty", ")\n        {\n            ", "MessageBox", ".", "Show(", "\"用户名和密码不能为空\"", ")", ";\n            return; ", "/", "/", "中止该方法\n        }\n        ", "string", " ", "StuName", " = text", "Box1", ".", "Text", ".", "Trim()", ";\n        ", "string", " ", "StuPass", " = text", "Box2", ".", "Text", ".", "Trim()", ";\n        ", "if", " (tab", "Control1", ".", "SelectedIndex", "==", "0)  ", "/", "/", "组合框内的控件在添加页面\n        {\n            cmd", "String", " = ", "string", ".", "Format(", "\"insert into Table 2 values('{0}','{1}')\"", ", StuName, StuPass)", ";\n        }\n        ", "if", " (", "IsExist(StuName)", ")\n        {\n            ", "MessageBox", ".", "Show(", "\"对不起，该用户名已经存在\"", ")", ";\n        }\n        ", "else", "\n        {\n            ", "if", " (", "GetSqlCmd(", "cmdString", ")", ")\n            {\n                ", "MessageBox", ".", "Show(", "\"添加用户成功\"", ")", ";\n                text", "Box1", ".", "Text", "=\"\";\n                text", "Box2", ".", "Text", " = \"\";\n                text", "Box1", ".", "Focus()", ";  ", "/", "/", "获取光标                 \n            }\n        }\n    }\n\n    ", "/", "/", "退出按钮事件执行代码\n    ", "private", " void button2", "_Click(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n    {\n        contest.", "Dispose()", ";\n        this.", "Close()", ";\n    }\n    ", "/", "/", "删除按钮单击事件执行代码\n    ", "private", " void button3", "_Click(", "object", " ", "sender", ", EventArgs ", "e", ")", "\n    {\n        ", "string", " ", "StuName", " = text", "Box3", ".", "Text", ".", "Trim()", ";\n        cmd", "String", " = ", "string", ".", "Format(", "\"delete Table_2 where Name='{0}'\"", ",StuName)", ";\n        ", "if", " (!", "IsExist(StuName)", ")\n        {\n            ", "MessageBox", ".", "Show(", "\"对不起，该用户不存在\"", ")", ";\n        }\n        ", "else", "\n        {\n            ", "if", " (", "GetSqlCmd(", "cmdString", ")", ")\n            {\n                ", "MessageBox", ".", "Show(", "\"删除用户成功！\"", ")", ";\n                text", "Box3", ".", "Text", " = \"\";\n                text", "Box3", ".", "Focus()", "; ", "/", "/", "获取光标\n            }\n        }\n    }\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "\n", "\n", "}", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "是的，程序中所有的异常，如果代码中不按照业务流程处理异常，是会上升到 JVM 层，JVM 的 Thread 类维护了一个  UncaughtExceptionHandler，它的 uncaughtException() 方法进行处理。默认情况下，线程的 UncaughtExceptionHandler 是其所属的 ThreadGoup 实例，它的定义是就是打印堆栈日志。\r\n\r\n当然这类异常是运行时异常，JVM 不强制要求处理，也不会导致程序崩溃或退出。另一类受检查异常是必须要求程序处理的，用 throws 往上层抛出，直到业务顶层去处理，直到 main 层再抛给 JVM 进入 UncaughtExceptionHandler，这时就可能影响程序正常运行了。\r\n\r\n结论：异常抛出或者处理，是根据程序业务决定的，一般到了最顶层就必须处理，而不能上升给 JVM 。这点可以参考阿里开发者规范中异常规约。", "Konwledge_Point": "异常处理", "Question": ["帮忙看看我对java异常的理解对不对", ["对于java的异常，我的理解是异常是程序出现的错误导致程序无法继续运行下去。", "\n受查异常并不是程序的错误，是环境的问题，比如说打开一个文件，第一次打开文件成功了没问题，然后我把文件删了，第二次再打开，就出错/异常了，所以它并不是程序的错，而是环境的问题。", "\n异常是不可避免的，也是不可令其变为正常的，文件不存在，程序无法做到让它存在。所以异常不能改为正常，但是又不能继续运行下去，所以要进行特殊处理。", "\n这个特殊处理是什么，要看具体实际情况，谁来处理才是重点。出现异常的方法能够自己进行特殊处理吗？不一定。因为很多时候出现异常的方法是其它方法调用的。为了方便我描述，在这里我举个例子。A方法调用了B方法，B方法调用了C方法，C方法出现异常了。这个时候C不能进行特殊处理，因为这个情况下C的异常不仅仅影响到C自己，还影响到了AB。比如说A需要一瓶奶茶和一瓶柠檬茶，A方法调用B方法去获得，B方法调用C方法去某个具体地方买然后返回给A方法。C方法去买，但是发现奶茶全世界禁止买卖奶茶。C出现了异常，C能采取特殊处理吗？无论它怎么处理都不能完成他的工作，所以它不能处理，只能将这个问题反馈给B，同时B受到了影响，B也不能通过其它途径买奶茶所以B同样不能特殊处理，同理B不能完成工作所以将问题反馈给A。同时A受到了影响，不过A能够特殊处理，A决定不要奶茶和柠檬茶了，选用另一个方案：白开水加冰。这里可以看出异常处理机制的好处，出异常了不是直接结束掉整个程序而是确定了出现某个异常时，选择另一个方案。C反馈给B也就是将异常抛给B，B再抛给A，A捕捉到后进行特殊处理。", "\n猜想：系统是会自动抛出异常的，那么为什么还要写throws呢？我猜是为了定位。代码可能有几个地方都有可能出现异常，如果写了throws,然后再catch，那就定位了异常。因为不同地方的异常都要不同处理。所以要确定位置。", "\n个人理解和猜想，希望各位大牛帮忙看看对不对。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我找到了解决方案&amp;#xff1a;卸载pcl 1.12.1版本&amp;#xff0c;安装pcl 1.12.0版本。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["PCL读取PLY文件一直报std::bad_alloc错误", ["问题遇到的现象和发生背景", "\n", "在使用PCL 转换PLY文件到PCD文件的过程中出现此问题。", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<iostream>", "          ", "\n", "#", "include", " ", "<pcl/io/pcd_io.h>", "  ", "\n", "#", "include", " ", "<pcl/point_types.h>", " ", "\n", "#", "include", " ", "<pcl/io/ply_io.h>", "  ", "\n\n", "int", " ", "main", "(", "int", " argc, ", "char", "** argv)", "\n", "{\n    pcl::PointCloud<pcl::PointXYZ>::", "Ptr ", "cloud", "(", "new", " pcl::PointCloud<pcl::PointXYZ>)", ";\n    pcl::io::", "loadPLYFile", "(", "\"1.ply\"", ", *cloud);\n    pcl::io::", "savePCDFileBinary", "(", "\"1.pcd\"", ", *cloud);\n\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "0x00007FFC73354F69 处(位于 PCL_VS.exe 中)有未经处理的异常: Microsoft C++ 异常: std::bad_alloc，位于内存位置 0x000000E62D8FDF70 处。"]], "Tag": "程序设计"}
{"Answer": "maxsize的值是多少？是不是为负数", "Konwledge_Point": "异常处理", "Question": ["Microsoft C++异常std::bad_array_new_length", ["我自己定义一个结构然后new就报这种异常，好急啊，求求大神帮忙啊，明天要交作业。5555555555"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;接口文档呢&amp;#xff0c;你要看接口文档怎么传递参数。&lt;br /&gt;这是服务器处理的错误&amp;#xff0c;可能跟你传递的参数有关系。&lt;br /&gt;这个最好参考接口文档&amp;#xff0c;或者看下服务器具体错误日志。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Json的异常，怎么解决", ["这个问题怎么解决呢，前端发起请求后端没有提取到数据，这个异常是我测试json写错了吗", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "后台抛异常的话就把异常输出到页面，提示：出现异常的字样或者图片信息。\r\n后台用try catch来捕获异常，然后返回的时候用response.write()类似的方式把异常信息返回给页面。", "Konwledge_Point": "异常处理", "Question": ["js 怎样捕获后台的异常", ["页面报出后台的异常，但我还想对页面进行刷新，该怎么处理？", "\n具体为：", "\n修改日期时，当日期跟后台查询出问题时后台抛出异常，页面上关闭异常后，我想刷新页面，而不是停留在报错之前的页面信息，改怎么处理？", "\n写到日期控件里面？"]], "Tag": "程序设计"}
{"Answer": "[color=indigo]spring rcp有异常处理的机制啊，而且一直都有啊,你自己去google上搜索下rcp的资料，有好多讲解，但是大多是英文的。[/color]", "Konwledge_Point": "异常处理", "Question": ["在spring rich client中，能否实现异常的统一处理？", ["刚接触spring rich client，感觉在异常处理部分，没有统一的解决方案，spring中有没有像C#中那样的统一处理异常的方式啊？哪位高人能给讲讲，就5分了，下次补。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不是提示的很明白吗&amp;#xff1f;除0错误&amp;#xff0c;只有第15行有除法。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["0x008119AE 处有未经处理的异常(在 作业1.exe 中): 0xC0000094: Integer division by zero。", ["想要求最大公倍数和最小公约数", "\n", "#include <iostream>", "\n", "using", " namespace std;\n\n", "int", " main() {\n    ", "long", " long int m = ", "1", ";", "long", " long int n=", "1", ";\n    ", "cin", " >> m >> n;\n    ", "int", " gcd, lcm;\n    ", "int", " a, b;\n    ", "if", " (m > n) { ", "a", " = m; ", "b", " = n; }\n    ", "else", " { ", "a", " = n; ", "b", " = m; }\n    ", "while", " (", "1", ") {\n        ", "if", " (a % b == ", "0", ") ", "break", ";\n        ", "a", " = b; ", "b", " = a % b; \n    }\n    ", "gcd", " = b; ", "lcm", " = m * n / gcd;\n    ", "cout", " << gcd << endl << endl << lcm;\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;找不到指定的模块问题解决&amp;#xff0c;presentationfontcache.exe是Microsoft.NET Framework的相关程序&amp;#xff0c;用于通过缓存常用的字体数据来优化Windows演示基础(WPF)应用程序性能。&lt;br /&gt;你可以禁用它&amp;#xff0c;不让他开机自启动&amp;#xff0c;你可以参考这篇文章来操作&lt;br /&gt;&lt;a href=\"https://zhidao.baidu.com/question/418373281.html?qbl&amp;#61;relate_question_0&amp;amp;word&amp;#61;%C8%E7%BA%CE%BD%FB%D3%C3PresentationFontCache\" id=\"textarea_1642298051306_1642298330347_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;如何关闭&amp;#xff0c;PresentationFontCache.exe&amp;#xff1f;让它不要每次开机就自动启动&amp;#xff0c;_百度知道&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://www.baidu.com/favicon.ico?t&amp;#61;20171027\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://zhidao.baidu.com/question/418373281.html?qbl&amp;#61;relate_question_0&amp;amp;word&amp;#61;%C8%E7%BA%CE%BD%FB%D3%C3PresentationFontCache&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["发生了未经处理的异常（''System.IO.FileNotFoundException'）,发生位置是[10120]PresentationFontCache.exe", ["如图，每次开机都报这个错误，请问如何解决？难道简单地禁用PresentationFontCache.exe？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;从异常日志内容看&amp;#xff0c;是连接Redis超时了。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/151011637156162.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#winform运行exe事件查看器中出现这种错误，请问如何解决？", ["错误如下：", "\n", "System ", "\n", "Provider ", "\n", " [ Name]  .NET Runtime ", "\n", "EventID 1026 ", "\n", " [ Qualifiers]  0 ", "\n", " Level 2 ", "\n", " Task 0 ", "\n", " Keywords 0x80000000000000 ", "\n", "TimeCreated ", "\n", " [ SystemTime]  2022-05-05T07:22:31.000000000Z ", "\n", " EventRecordID 1590 ", "\n", " Channel Application ", "\n", " Computer PC-20201210WTOU ", "\n", " Security ", "\n", "EventData ", "\n", " 应用程序: 计数器.exe Framework 版本: v4.0.30319 说明: 由于未经处理的异常，进程终止。异常信息: System.Net.Sockets.SocketException 在 System.Net.Sockets.Socket.Connect(System.Net.IPAddress[], Int32) 在 System.Net.Sockets.Socket.Connect(System.String, Int32) 在 ServiceStack.Redis.RedisNativeClient.Connect() 在 ServiceStack.Redis.RedisNativeClient.TryConnectIfNeeded() 在 ServiceStack.Redis.RedisNativeClient.AssertConnectedSocket() 异常信息: ServiceStack.Redis.RedisException 在 ServiceStack.Redis.RedisNativeClient.AssertConnectedSocket() 在 ServiceStack.Redis.RedisNativeClient.AssertServerVersionNumber() 在 ServiceStack.Redis.RedisClient.GetServerRole() 在 ServiceStack.Redis.RedisResolver.GetValidMaster(ServiceStack.Redis.RedisClient, ServiceStack.Redis.RedisEndpoint) 在 ServiceStack.Redis.RedisResolver.CreateRedisClient(ServiceStack.Redis.RedisEndpoint, Boolean) 异常信息: System.TimeoutException 在 ServiceStack.Redis.RedisResolver.CreateRedisClient(ServiceStack.Redis.RedisEndpoint, Boolean) 在 ServiceStack.Redis.RedisResolver.CreateMasterClient(Int32) 在 ServiceStack.Redis.PooledRedisClientManager.GetClientBlocking() 在 ModbusRtu.Form1..ctor() 在 ModbusRtu.Program.Main()  ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-comment\"&gt;// import java.util.Scanner;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;pastebin&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NullPointerException&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;costum&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;finally&lt;/span&gt; {\n            &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;program still running&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["编写一个空指针异常，并在控制台输出", ["编写一个空指针异常，并在控制台输出（要求不能结束代码的运行）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;空指针了呗&amp;#xff0c;这玩意没获取到值 &amp;#xff0c;加个非空判断再走你的for循环&amp;#xff0c;&lt;br /&gt;比如 if(deptList!&amp;#61;null&amp;amp;&amp;amp;deptList.size()&amp;gt;0 ){ for(){} }&lt;br /&gt;或者去看为什么没有获取到数据&amp;#xff0c;让他有数据就行了&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/74240824476613.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/23802824476619.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["org.apache.jasper.JasperException: 在 [29] 行处理 [/list.jsp] 时发生异常，如何解决？(语言-java)", ["本人苦研四十八小时无结果,查询百度百余条无任何方法,代码可拿源代码", "报错内容", "求老大解决"]], "Tag": "程序设计"}
{"Answer": "看一下这篇文章吧《深入理解java异常处理机制 》http://blog.csdn.net/hguisu/article/details/6155636", "Konwledge_Point": "异常处理", "Question": ["java中只有方法会抛出异常，类是不会抛出异常的是不是", ["java中只有方法会抛出异常，类是不会抛出异常的是不是", "\n\n", "抛出的异常最终也是要处理的是吧，", "\n\n", "具体是如何处理的呢"]], "Tag": "程序设计"}
{"Answer": "关于异常处理的几点：\r\n1）异常try中使用的变量，如果需要在catch或者finally分支中使用，必须是try之前定义的变量。\r\n2）如果一个方法中，有好几个操作都会有异常，可以都放在try方法体重，在catch分支中一起捕获。\r\n3）代码逻辑之间独立的，而且后面的逻辑依赖前面的操作，可以分批处理try-catch，有关联的代码放一块处理，\r\n\r\n```\r\n //第一部分\r\n try{\r\n \r\n catch(){\r\n }\r\n \r\n //第二部分逻辑\r\n  try{\r\n \r\n catch(){\r\n }\r\n \r\n ....\r\n```", "Konwledge_Point": "异常处理", "Question": ["为什么我不可以用try/catch处理这个异常", ["import java.io.*;import java.util.*;", "\npublic class Day_23_2 {", "\n    //private static final Object x = null;", "\n\n", "public static void main(String[] args)throws Exception {\n    Emp_man1 em=new Emp_man1();\n    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    while(true){\n        System.out.println(\"请选择所需要的功能！\");\n        System.out.println(\"1.添加成员！\");\n        System.out.println(\"2.查看成员！\");\n        System.out.println(\"3.查看所有！\");\n        System.out.println(\"4.修改工资！\");\n        System.out.println(\"5.删除成员！\");\n        System.out.println(\"6.退出系统！\");\n        //try {\n            String x=br.readLine();\n        //} catch (IOException e) {\n            // TODO Auto-generated catch block\n            //e.printStackTrace();\n        //}\n        if(x.equals(\"1\")){\n            System.out.print(\"请输入工号！\");\n            //try {                          为什么这里用不了try/catch？\n                String emp_no=br.readLine();\n            //} catch (IOException e) {      用了try/catch的话emp_no就不会被下面的Emp1引用。\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //}\n            System.out.print(\"请输入名字！\");\n            //try {\n                String name=br.readLine();\n            //} catch (IOException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //}\n            System.out.print(\"请输入年龄！\");\n            //try {\n                float age=Float.parseFloat(br.readLine());\n            //} catch (NumberFormatException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //} catch (IOException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //}\n            System.out.print(\"请输入工资！\");\n            //try {\n                float sal=Float.parseFloat(br.readLine());\n            //} catch (NumberFormatException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //} catch (IOException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //}\n            Emp1 emp1=new Emp1(emp_no, name, age, sal);\n            em.add_man(emp_no, emp1);;\n        }else if(x.equals(\"2\")){\n            System.out.print(\"请输入工号！\");\n            //try {\n                String emp_no=br.readLine();\n            //} catch (IOException e) {\n                // TODO Auto-generated catch block\n                //e.printStackTrace();\n            //}\n            em.show_info(emp_no);\n        }else if(x.equals(\"3\")){\n            em.show_all();\n        }else if(x.equals(\"4\")){\n            System.out.println(\"请输入工号！\");\n            String emp_no=br.readLine();\n            System.out.println(\"请输入新工资\");\n            float newsal=Float.parseFloat(br.readLine());\n            em.change_sal(emp_no, newsal);\n        }else if(x.equals(\"5\")){\n            System.out.println(\"请输入工号！\");\n            String emp_no=br.readLine();\n            em.del_emp(emp_no);\n        }else if(x.equals(\"6\")){\n            System.exit(0);\n        }\n    }\n}\n", "\n\n", "}", "\nclass Emp_man1{", "\n    Hashtable ht=null;", "\n    public Emp_man1(){", "\n        ht=new Hashtable();", "\n    }", "\n    public void add_man(String emp_no,Emp1 emp1){", "\n        ht.put(emp_no, emp1);", "\n    }", "\n    public void show_info(String emp_no){", "\n        Emp1 emp1=ht.get(emp_no);", "\n        if(ht.containsKey(emp_no));", "\n        System.out.println(\"工号是：\"+emp1.getEmp_no());", "\n        System.out.println(\"名字是：\"+emp1.getName());", "\n        System.out.println(\"年龄是：\"+emp1.getAge());", "\n        System.out.println(\"工资是：\"+emp1.getSal());", "\n    }", "\n    public void show_all(){", "\n        Iterator it=ht.keySet().iterator();", "\n        if(it.hasNext()){", "\n            String emp_no =it.next().toString();", "\n            Emp1 emp1=ht.get(emp_no);", "\n            System.out.print(\"工号是：\"+emp1.getEmp_no()+\" \");", "\n            System.out.print(\"名字是：\"+emp1.getName()+\" \");", "\n            System.out.print(\"年龄是：\"+emp1.getAge()+\" \");", "\n            System.out.print(\"工资是：\"+emp1.getSal());", "\n        }", "\n    }", "\n    public void change_sal(String emp_no,float newsal){", "\n        Emp1 emp1=ht.get(emp_no);", "\n        emp1.setSal(newsal);", "\n    }", "\n    public void del_emp(String emp_no){", "\n        ht.remove(emp_no);", "\n    }", "\n}", "\n\n", "class Emp1{", "\n    private String emp_no;", "\n    private String name;", "\n    private float age;", "\n    private float sal;", "\n    public Emp1(String emp_no,String name,float age,float sal){", "\n        this.emp_no=emp_no;this.name=name;this.age=age;this.sal=sal;", "\n    }", "\n    public String getEmp_no() {", "\n        return emp_no;", "\n    }", "\n    public void setEmp_no(String emp_no) {", "\n        this.emp_no = emp_no;", "\n    }", "\n    public String getName() {", "\n        return name;", "\n    }", "\n    public void setName(String name) {", "\n        this.name = name;", "\n    }", "\n    public float getAge() {", "\n        return age;", "\n    }", "\n    public void setAge(float age) {", "\n        this.age = age;", "\n    }", "\n    public float getSal() {", "\n        return sal;", "\n    }", "\n    public void setSal(float sal) {", "\n        this.sal = sal;", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Model itself should not interfere with the FrontController, so yes, throw the exception from the controller. &lt;/p&gt;\n\n&lt;p&gt;You may throw an exception from the model (not &lt;code&gt;Zend_Controller_Action_Exception&lt;/code&gt;, but some that more precisely describes your problem), catch it in the controller and on that base decide if you're gonna throw &lt;code&gt;Zend_Controller_Action_Exception&lt;/code&gt; or not.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Zend框架如何处理异常", ["\n\n", "What is the best practice for throwing an Exception in the following situation:", "\n\n", "My URL structure is:\n/articles/view/id/1", "\n\n", "My Controller:\nAticlesController", "\n\n", "And this controller loads a Mapper model:\nApplication_Model_Mapper_Articles", "\n\n", "In this model I aggregate all kinds of data. I check several criteria in this model to decide between throwing a 404 error or showing the article.", "\n\n", "If I decide to throw the error. How should I do it?", "\n\n", "My first guess was throwing it from within the model. But there is no default 'Model_Exception' class and there is a 'Zend_Controller_Action_Exception'. Should I just throw this exception from within the model? Or should I pass the error message back from the model to the controller and then throw the error?", "\n    "]], "Tag": "程序设计"}
{"Answer": "不好意思，刚才看错了\r\n拿VC++帮忙调试了下。\r\n\r\n\r\n```\r\n printf(\"%s\\t《%s》\\t%s\\t%s\\t%d册\\t%s元\", L-&gt;data[i].isbn, L-&gt;data[i].name, L-&gt;data[i].writer, L-&gt;data[i].producter, L-&gt;data[i].num, L-&gt;data[i].price);\r\n```\r\n\r\n\r\n这里少了作者参数，你的格式有6个，后面的参数只有5个，显然指针越界了。", "Konwledge_Point": "异常处理", "Question": ["如下代码，提示 处有未经处理的异常: 求助", ["在查找时出现12.exe 中的 0x102214cf (msvcr100d.dll) 处有未经处理的异常: 0xC0000005: 读取位置 0x0000007b 时发生访问冲突。", "\n查找的代码如下", "\nvoid Search_i(SqList*&L)//按书号查询", "\n{", "\n    printf(\"请输入你想要查找图书的书号：\");", "\n    char isbn[50];", "\n    scanf(\"%s\",&isbn);", "\n    int i=0;", "\n    while(ilength&&strcmp(L->data[i].isbn,isbn)!=0)", "\n    {", "\n        i++;", "\n    }", "\n    if(i>=L->length)", "\n    {", "\n        printf(\"图书馆没有此图书！\\n\");", "\n    }", "\n    else", "\n    {", "\n        printf(\"书号\\t书名\\t作者\\t出版社\\t馆存数量\\t价格\\n\");", "\n        printf(\"%s\\t   《 %s 》   \\t%s\\t%s\\t%d   册  \\t%s  元\",L->data[i].isbn,L->data[i].name,L->data[i].producter,L->data[i].num,L->data[i].price);", "\n        printf(\"\\n\");", "\n    }", "\n}", "\nvoid Search_n(SqList*&L)//按书名查询", "\n{", "\n    printf(\"请输入你想查找图书的书名：\");", "\n    char name[50];", "\n    scanf(\"%s\",&name);", "\n    int i=0,b=0;", "\n    for(i;i!=L->length;i++)", "\n    {", "\n        if(strcmp(L->data[i].name,name)==0)", "\n            b++;", "\n    }", "\n    if(b==0)", "\n    {", "\n        printf(\"图书馆没有此图书！\\n\");", "\n    }", "\n    else", "\n    {", "\n        printf(\"书号\\t书名\\t作者\\t出版社\\t馆存数量\\t价格\\n\");", "\n        for(i=0;i!=L->length;i++)", "\n        {", "\n            if(strcmp(L->data[i].name,name)==0)", "\n            {", "\n                printf(\"%s\\t《%s》\\t%s\\t%s\\t%d册\\t%s元\",L->data[i].isbn,L->data[i].name,L->data[i].producter,L->data[i].num,L->data[i].price);", "\n                printf(\"\\n\");", "\n            }", "\n        }", "\n    }", "\n}", "\nvoid Search_w(SqList*&L)//按作者查询", "\n{", "\n    printf(\"请输入你想要查找图书的作者：\");", "\n    char writer[50];", "\n    scanf(\"%s\",&writer);", "\n    int i=0,b=0;", "\n    for(i;i!=L->length;i++)", "\n    {", "\n        if(strcmp(L->data[i].writer,writer)==0)", "\n            b++;", "\n    }", "\n    if(b==0)", "\n        {", "\n            printf(\"图书馆没有此图书！\\n\");", "\n    }", "\n    else", "\n    {", "\n        printf(\"%s的作品共有%d本，信息如下：\\n\",writer,b);", "\n        printf(\"书号\\t书名\\t作者\\t出版社\\t馆存数量\\t价格\\n\");", "\n        for(i=0;ilength;i++)", "\n        {", "\n            if(strcmp(L->data[i].writer,writer)==0)", "\n            {", "\n                 printf(\"%s\\t   《 %s 》   \\t%s\\t%s\\t%d   册  \\t%s  元\",L->data[i].isbn,L->data[i].name,L->data[i].producter,L->data[i].num,L->data[i].price);", "\n                 printf(\"\\n\");", "\n            }", "\n        }", "\n    }", "\n}", "\nvoid Search_p(SqList*&L)//按出版社查询", "\n{", "\n    printf(\"请输入你想要查找图书的出版社：\");", "\n    char producter[50];", "\n    scanf(\"%s\",&producter);", "\n    int i=0,c=0;", "\n    for(i;i!=L->length;i++)", "\n    {", "\n        if(strcmp(L->data[i].producter,producter)==0)", "\n            c++;", "\n    }", "\n    if(c==0)", "\n    {", "\n        printf(\"图书馆没有此图书！\\n\");", "\n    }", "\n    else", "\n    {", "\n        printf(\"%s的作品共有%d本，信息如下：\\n\",producter,c);", "\n        printf(\"书号\\t书名\\t作者\\t出版社\\t馆存数量\\t价格\\n\");", "\n        for(i=0;ilength;i++)", "\n        {", "\n            if(strcmp(L->data[i].producter,producter)==0)", "\n            {", "\n                 printf(\"%s\\t   《 %s 》   \\t%s\\t%s\\t%d   册  \\t%s  元\",L->data[i].isbn,L->data[i].name,L->data[i].producter,L->data[i].num,L->data[i].price);", "\n                 printf(\"\\n\");", "\n            }", "\n        }", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "你自己单步调试就知道了，错误是这句：box-&gt;put(o);\r\n你的o被初始化成NULL，然后进入到put函数里，然后会进行解引用操作，即：k-&gt;getKind()\r\n就会产生异常了。\r\n单步调试和设断点调试（VS IDE中编译连接通过以后，按F10或F11键单步执行，按Shift+F11退出当前函数；在某行按F9设断点后按F5执行停在该断点处。）是程序员必须掌握的技能之一。", "Konwledge_Point": "异常处理", "Question": ["c++问题：0x011892AD 处有未经处理的异常(在 Project12.exe 中): ", ["没有错误，但运行时出现问题？求看", "\n#include", "\nusing namespace std;", "\nclass fruit{", "\nprivate:", "\n    int kind;", "\n    int weight;", "\npublic:", "\n\n", "virtual void loseWeight(){};\nvirtual int getWeight(){ return weight; };\nvirtual int getKind(){ return kind; };\n", "\n\n", "};", "\n\n", "class apple :public fruit{", "\nprivate:", "\n    int kind;", "\n    int weight;", "\npublic:", "\n    apple(){ kind = 1; weight = 50; };", "\n    void loseWeight(){", "\n        if ((weight-4) >= 30)", "\n            weight -= 4;", "\n        else", "\n            weight = 30;", "\n    }", "\n    int getWeight(){", "\n        return weight;", "\n    }", "\n    int getKind(){ return kind; }", "\n\n", "};", "\n\n", "class orange :public fruit{", "\nprivate:", "\n    int kind;", "\n    int weight;", "\npublic:", "\n    orange(){ kind = 2; weight = 30; }", "\n    void loseWeight(){", "\n        if ((weight - 4) >= 18)", "\n            weight -= 4;", "\n        else", "\n            weight = 18;", "\n    }", "\n    int getWeight(){", "\n        return weight;", "\n    }", "\n    int getKind(){ return kind; }", "\n\n", "};", "\n\n", "class Box{", "\nprivate:", "\n    fruit* f[8];", "\n    int a, o,num;", "\npublic:", "\n    Box(){", "\n        a = 0;", "\n        o = 0;", "\n        num = 0;", "\n        for (int j = 0; j < 8; j++)", "\n            f[j] = NULL;", "\n    }", "\n    void put(fruit* k){", "\n        if (num < 8){", "\n            f[num] = k;", "\n            num++;", "\n\n", "        if (k->getKind() == 1)a++;\n        if (k->getKind() == 2) o++;\n    }\n    else cout << \"已满\" << endl;\n}\n", "\n\n", "int getApple(){ return a; }         //输出盒子中苹果的数量;  ", "\n\n", "int getOrange(){ return o; }        //输出盒子中桔子的数量;\n\nint total(){                        //当前水果总重量\n    int w=0;\n    for (int i = 0; i < 8; i++){\n        if (f[i] != NULL){\n            w += f[i]->getWeight();\n        }\n    }\n    return w;\n}\n\nint culWeight(){                    \n    int w=0;\n    for (int i = 0; i < 8; i++){\n        if (f[i] != NULL){\n            f[i]->loseWeight();\n            w += f[i]->getWeight();\n        }\n    }\n    return w;\n}\n\nint lost(){                         //一天来盒子中水果减轻的总重量\n    return (total() - culWeight());\n}\n", "\n\n", "};", "\n\n", "void main(){", "\n    Box *box=new Box();", "\n    fruit *a = new apple();", "\n    orange *o=NULL;", "\n    cout << a->getKind();", "\n    if (a->getKind() == 1) cout << \"h\";", "\n    box->put(a);", "\n    box->put(o);", "\n    cout << box->getApple() << endl;", "\n    cout << box->getOrange() << endl;", "\n    box->total();", "\n    box->lost();", "\n    system(\"pause\");", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;图书管理系统最大的问题就是多人同一时间借书&amp;#xff0c;导致书本被多人借走&amp;#xff0c;这是会议预订系统&amp;#xff0c;图书借阅系统等最常见的一个问题&amp;#xff0c;针对这个问题你需要考虑的是锁机制。&lt;br /&gt;这种问题解决方案有多种&amp;#xff0c;可以在程序中实现&amp;#xff0c;也可以在数据库总实现&amp;#xff0c;程序中可以采用同步机制。&lt;br /&gt;数据库中采用对数据加锁的方式&lt;br /&gt;例如在Oracle中可以采用悲观锁的机制&amp;#xff0c;在一开始就将数据锁定。这样其他人就无法获得这本书的锁。就无法修改数据。也就不会导致一本书多人借的情况&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; books &lt;span class=\"hljs-keyword\"&gt;where&lt;/span&gt; bookis &amp;#61; ? &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; status &amp;#61;? &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;update&lt;/span&gt;\n.....\n&lt;span class=\"hljs-keyword\"&gt;update&lt;/span&gt; books  &lt;span class=\"hljs-keyword\"&gt;set&lt;/span&gt; status &amp;#61; ? &lt;span class=\"hljs-keyword\"&gt;where&lt;/span&gt; bookid &amp;#61; ?\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Java图书管理系统异常及处理", ["写出图书管理系统中可能存在的一个异常情况并简述如何处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; Arg_ParamName_Name中缺少}。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["System.ArgumentException类型的未经处理的异常", ["vs2022上，写api时遇到的问题，求帮助！", "在代码app.MapController()上报错:", "System.ArgumentException:“There is an incomplete parameter in the route template. Check that each '{' character has a matching '}' character. Arg_ParamName_Name”", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊", "Konwledge_Point": "异常处理", "Question": ["如何处理全局变量中的异常", ["static XSSFWorkbook sc=createWorkbook();\n", "\n\n", "后面的createWorkbook(); 提示：未处理的异常类型 IOException"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你向tv.show传值后最后不是变成了&amp;#34;无此电影&amp;#34;就是&amp;#34;您点播了...&amp;#34;&amp;#xff0c;不可能在list_movie里找到。&lt;br /&gt;你可以改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;\n \n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;模拟电视的点播功能&amp;#34;&lt;/span&gt;&amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Tv&lt;/span&gt;:\n    list_movie &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#34;天线宝宝&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;花园宝宝&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;小猪佩奇&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;米奇妙妙屋&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;猪猪侠&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;熊出没&amp;#34;&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,show&lt;/span&gt;):\n        self._show &amp;#61; show\n&lt;span class=\"hljs-meta\"&gt;    &amp;#64;property&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self._show\n&lt;span class=\"hljs-meta\"&gt;    &amp;#64;show.setter&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,value&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; value &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; Tv.list_movie:\n            self._show &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;您点播了&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; value\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            self._show &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;无此电影&amp;#34;&lt;/span&gt;\ntv &amp;#61; Tv(&lt;span class=\"hljs-string\"&gt;&amp;#34;熊出没&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;正在播放&amp;#xff1a;&amp;#34;&lt;/span&gt;,tv.show)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;可以点播的电影&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;,Tv.list_movie)\nttv &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ttv &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    tv.show &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择要点播的电影&amp;#xff1a;&amp;#34;&lt;/span&gt;))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(tv.show)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; tv.show &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;无此电影&amp;#34;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        ttv&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python中断while循环异常问题记录", ["迷糊了已经下面的while循环怎么都跳不过去，要么只执行一次，要么就一直循环，这个while循环不会被中断额：", "\n", "\n", "print", "(", "\"\\n\\n\"", " + ", "\"*\"", "*", "10", " + ", "\"模拟电视的点播功能\"", "+ ", "\"*\"", "*", "10", ")\n", "class", " ", "Tv", ":\n    list_movie = [", "\"天线宝宝\"", ",", "\"花园宝宝\"", ",", "\"小猪佩奇\"", ",", "\"米奇妙妙屋\"", ",", "\"猪猪侠\"", ",", "\"熊出没\"", "]\n    ", "def", " ", "__init__", "(", "self,show", "):\n        self._show = show\n", "    @property", "\n    ", "def", " ", "show", "(", "self", "):\n        ", "return", " self._show\n", "    @show.setter", "\n    ", "def", " ", "show", "(", "self,value", "):\n        ", "if", " value ", "in", " Tv.list_movie:\n            self._show = ", "\"您点播了：\"", " + value\n        ", "else", ":\n            self._show = ", "\"无此电影\"", "\n\ntv = Tv(", "\"熊出没\"", ")\n", "print", "(", "\"正在播放：\"", ",tv.show)\n", "print", "(", "\"可以点播的电影：\\n\"", ",Tv.list_movie)\nttv = ", "True", "\n", "while", " ttv == ", "True", ":\n    tv.show = ", "str", "(", "input", "(", "\"请选择要点播的电影：\"", "))\n    ", "print", "(tv.show)\n    ", "if", " tv.show ", "in", " Tv.list_movie:\n        ttv = ", "False", "\n    ", "else", ":\n        ", "continue", "\n"]], "Tag": "程序设计"}
{"Answer": "集成一下spring使用HandlerExceptionResolver实现resolveException方法。或者自己写一套", "Konwledge_Point": "异常处理", "Question": ["Java中如何监控并处理所有可能的异常和错误？", ["一个Java.swt写的桌面程序，没用Spring，有个功能要把所有的错误和异常存到数据库里，但是本身程序没有用Spring，没有AOP所以不知道怎么实现了。。难道要在所有可能有异常的方法内try catch嘛？想请教下各位大佬的意见。。。"]], "Tag": "程序设计"}
{"Answer": "问题已经解决地址见http://www.xiegaosheng.com/post/view?id=99；", "Konwledge_Point": "异常处理", "Question": ["微信连WIFI 出现WI-FI异常，请稍后再试(311130018)", ["微信连WIFI 出现WI-FI异常，请稍后再试(311130018)；", "\n个别手机是可以成功跳转的；"]], "Tag": "程序设计"}
{"Answer": "所有的scanf函数后面的变量都应该取地址，例如：\r\n将：\r\n```\r\nscanf_s(\"%d\", p1-&gt;num, sizeof(p1-&gt;num));\r\n```\r\n改为：\r\n```\r\nscanf_s(\"%d\", &amp;p1-&gt;num, sizeof(p1-&gt;num));\r\n```", "Konwledge_Point": "异常处理", "Question": ["引发的异常: 0xC0000005: 写入位置 0xCDCDCDCD 时发生访问冲突。", ["#include", "\n#include", "\n#include", "\n\n", "#define LEN sizeof(struct student)", "\n\n", "struct student *creat();", "\nvoid print(struct student *head);", "\n\n", "struct student", "\n{", "\n    int num;", "\n    float score;", "\n    struct student *next;", "\n};", "\n\n", "int n;", "\n\n", "void main()", "\n{", "\n    struct student *stu;", "\n\n", "stu = creat();\nprint( stu );\n\nprintf(\"\\n\\n\");\nsystem(\"pause\");\n", "\n\n", "}", "\n\n", "struct student *creat()", "\n{", "\n    struct student *head;", "\n    struct student *p1, *p2;", "\n\n", "p1 = p2 = (struct student *)malloc(LEN);\n\nprintf(\"please enter the num:\\n\");\nscanf_s(\"%d\", p1->num,sizeof(p1->num));\nprintf(\"please enter the score:\\n\");\nscanf_s(\"%f\", p1->score,sizeof(p1->score));\n\nhead = NULL;\nn = 0;\n\nwhile (p1->num)\n{\n    n++;\n    if (n == 1)\n    {\n        head = p1;\n    }\n    else\n    {\n        p2->next = p1;\n    }\n    p2 = p1;\n    p1 = (struct student *)malloc(LEN);\n\n    printf(\"please enter the num:\\n\");\n    scanf_s(\"%d\", p1->num, sizeof(p1->num));\n    printf(\"please enter the score:\\n\");\n    scanf_s(\"%f\", p1->score, sizeof(p1->score));\n}\np2->next = NULL;\n\nreturn head;\n", "\n\n", "}", "\n\n", "void print(struct student *head)", "\n{", "\n    struct student *p;", "\n    p = head;", "\n    while (p->next)", "\n    {", "\n        printf(\"学号： %d         分数： %f\\n\", p->num, p->score);", "\n        p = p->next;", "\n    }", "\n}", "\n\n", "运行环境为vs2017，win10 64位。在运行到第一个scanf_s处是报的错：", "\n0x0F86742E (ucrtbased.dll)处(位于 lianbiao.exe 中)引发的异常: 0xC0000005: 写入位置 0xCDCDCDCD 时发生访问冲突。", "\n\n", "看见有人说是引用了未初始化的内存，那么怎么初始化呢？试过calloc函数，报错如下：", "\n\n", "求大佬教教，感激不尽!"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你调试以下就知道了&amp;#xff0c;你这个j可以为负数的&amp;#xff0c;数组的下标怎么可能为负数呢&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c++有未经处理的异常，小白看不懂，求求各位大佬了", ["#include <iostream>", "\n#include <iomanip>", "\nusing namespace std;", "\nconst int N = 5;", "\nint main()", "\n{", "\n    int a[N][N] = { 0 }, i, j, k;", "\n    for (k = 1, i = 0; i < N; i++)", "\n        for (j = i; i >= 0; j--, k++)", "\n            a[j][i - j] = k;//异常", "\n    for (i = 0; i < N; i++)", "\n    {", "\n        for (j = 0; j < N; j++)", "\n            cout << setw(3) << a[i][j];", "\n        cout << endl;", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "你前台传password参数了吗？ request.getParameter(\"password\") 检查一下，应该为null了", "Konwledge_Point": "异常处理", "Question": ["Java报空指针异常怎么处理", ["这是一个MD5的工具类", "\n\n", " public class MD5 {\n\n    public static String getMD5(String str){\n        try{\n            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n\n            md.update(str.getBytes());\n\n            return new BigInteger(1,md.digest()).toString(16);\n        }catch(Exception e){\n            e.printStackTrace();\n            return null;\n        }\n\n    }\n}\n\n", "\n\n", "前台传输信息到后台", "\n\n", "        MD5 pwd = new MD5();\n        @SuppressWarnings(\"static-access\")\n        String password = pwd.getMD5(request.getParameter(\"password\"));\n", "\n\n", "然后一运行程序就报空指针异常：md.update(str.getBytes());想问问应该怎么修改"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; Solution函数改成这样&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;void Solution(list&amp;lt;int&amp;gt;&amp;amp; l)\n{\n    for (list&amp;lt;int&amp;gt;::iterator it &amp;#61; l.begin(); it !&amp;#61; l.end();)\n    {\n        bool judge &amp;#61; 0;\n        for (list&amp;lt;int&amp;gt;::iterator fit &amp;#61; l.begin(); fit !&amp;#61; it; fit&amp;#43;&amp;#43;)\n        {\n            judge &amp;#61; judge || (*fit &amp;#61;&amp;#61; *it);\n        }\n        if (judge)\n        {\n            it &amp;#61; l.erase(it);\n        }\n        else {\n            it&amp;#43;&amp;#43;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;l.erase(it)会有一个返回值&amp;#xff0c;返回删除当前迭代器指针删除后的正确迭代器位置。&lt;/p&gt;\n\n&lt;p&gt;在使用容器迭代器的时候进行循环删除的时候&amp;#xff0c;很容易出现这种问题。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["为什么系统会提示（将一个无效参数传递给了将无效参数视为严重错误的函数）？", ["#include<iostream>", "\nusing namespace std;", "\n#include<list>", "\n\n", "void Solution(list<int>& l)", "\n{", "\n    for (list<int>::iterator it = l.begin(); it != l.end(); it++)", "\n    {", "\n        bool judge = 0;", "\n        for (list<int>::iterator fit = l.begin(); fit != it; fit++)", "\n        {", "\n            judge = judge || (*fit==*it);", "\n        }", "\n        if (judge)", "\n        {", "\n            l.erase(it);", "\n        }", "\n    }", "\n}", "\n\n", "void PrintList(list<int> l)", "\n{", "\n    for (list<int>::iterator it = l.begin(); it != l.end(); it++)", "\n    {", "\n        cout << *it << \" \";", "\n    }", "\n    cout << endl;", "\n}", "\n\n", "\nvoid test01()", "\n{", "\n    list<int> lis;", "\n    lis.push_back(1);", "\n    lis.push_back(2);", "\n    lis.push_back(3);", "\n    lis.push_back(3);", "\n    lis.push_back(2);", "\n    lis.push_back(1);", "\n    PrintList(lis);", "\n    cout << \"-----------------------------------------\" << endl;", "\n    Solution(lis);", "\n    PrintList(lis);", "\n}", "\n\n", "\nint main() ", "\n{", "\n\n", "    test01();", "\n    system(\"pause\");", "\n    return 0;", "\n\n", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;c语言是基于指针的&amp;#xff0c;所以类型很多都是弱类型&amp;#xff0c;在编译阶段是不纠错的&lt;br /&gt;而到了运行时&amp;#xff0c;函数需要传递一个数组/字符串的指针&amp;#xff0c;实际却传递了一个空指针&amp;#xff0c;或者一个指向莫名其妙地方的指针&amp;#xff0c;就报错了呗&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["将一个无效参数传递给了将无效参数视为严重错误的函数", ["在vs调试程序的时候，会有这个断点问题，这个未经处理的异常要怎么才能解决呢🤔🤔"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是今晚作业吗?&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;String msg&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;null&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ntry{  \nint i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}catch(ArithmeticException e){\n&lt;span class=\"hljs-attribute\"&gt;msg&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;e.getMessage()&lt;span class=\"hljs-comment\"&gt;;}&lt;/span&gt;\nfinally{\n输出 msg\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;欢迎采纳&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java，这部分不是很会，希望有人能解答出来，我会采用最佳答案", ["创建一个异常处理的类，首先输出\"Try:这是一个异常处理的例子\"，然后在程序中主动产生一个“ArithmeticException”类型被“0”除的异常，并用“catch”语句捕获这个异常。最后通过“ArithmeticException”类的对象e的方法“getMessage”给出异常的具体类型并显示出来。finally中给出最后的输出语句。"]], "Tag": "程序设计"}
{"Answer": "选择Exception 还是 RuntimeException的.\r\n可以从两个角度考虑:\r\n1.这是一个可恢复的还是不可恢复的,如果是前者使用Exception，如果是后者使用RuntimeException.\r\n2.第二个角度就是这个异常的检查是由方法调用方完成还是由方法本身完成.\r\n  如果由方法调用方检查,那么应该是RuntimeException.\r\n  如果由方法自身检查,那么就使用Exception.\r\n\r\n使用RuntimeException，这个对方法接口比较友好.\r\n一个包定义一个顶级的RuntimeException,根据每种不同的出错情况分为不同的子类,\r\n这个在Action中，可以简单的捕捉BaseException以提示\"出错了!\",也可以对子类进行捕捉，以提示\"XX出错了!\"", "Konwledge_Point": "异常处理", "Question": ["业务层如何处理异常，客户端才能根据异常给相应的提示！", ["系统架构：客户端采用rcp，通过rmi形式调用业务层接口。", "\n业务层抛异常用Exception还是RuntimeException？", "\n如何实现根据特定的异常信息在客户端给出相应的提示？（目前想到的是定义错误码，客户端捕捉后根据错误码提示异常）", "\nSpringSide的例子中使用的RuntimeException！", "\n非常感谢！", "\n[b]问题补充：[/b]", "\n感谢一楼的回复！", "\n错误提示要做国际化，根据不同的Locale，给出相应语言的提示！", "\n是不是抛异常的错误码更好点呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个一般都是指针的错误&amp;#xff0c;比如指针为空却调用这个指针&amp;#xff0c;建议你看一下出问题地方的前面有没有初始化&amp;#xff0c;是否存在这个指针或者是内存问题呀等等。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["这个怎么解决啊？求求。", ["0x00007FF6DC5FDCCC 处有未经处理的异常(在 基于多态的职工管理系统.exe 中): 0xC0000005: 读取位置 0x0000000000000038 时发生访问冲突。 出现了"]], "Tag": "程序设计"}
{"Answer": "500是服务器即你这个方法在处理请求，配置文件解析该返回值发生了错误，\r\n200是服务器正确处理了请求，前台可能解析错误\r\n你可以尝试更改返回值类型，改为void,modelAndView写在方法参数内，或者说你根本用不到modelAndView,剔除就行。", "Konwledge_Point": "异常处理", "Question": ["java自定义异常类 ，当程序走到这里的时候 ，页面的控制台报错信息是500 ", ["这个是异常类信息：", "\n public ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response, Object o, Exception e) {", "\n        logger.info(\"进入全局异常处理器\");", "\n        //ModelAndView modelAndView = new ModelAndView();", "\n        String result = \"\";", "\n        // 将请求参数Map，转成BasicOrderModel实体", "\n        Map reqParam = MapUtil.getParams(request.getParameterMap());", "\n        BasicOrderModel basicOrderModel = MapUtil.mapToBean(BasicOrderModel.class, reqParam);", "\n        basicOrderModel.setRequestInfo(request);", "\n        // 解析异常类型", "\n        if(e instanceof BusinessException){", "\n            BusinessException businessException = (BusinessException)e;", "\n            result = ReplyUtil.failureReply(businessException.getMsg(), basicOrderModel, reqParam);", "\n        }else{", "\n            if(ParamVerify.checkParamIsEmpty(e.getMessage())){", "\n                result = ReplyUtil.failureReply(ExceptionCode.E00001, basicOrderModel, reqParam);", "\n            }else{", "\n                result = ReplyUtil.failureReply(e.getMessage(), basicOrderModel, reqParam);", "\n            }", "\n        }", "\n        // 将内容写入response中", "\n        try {", "\n            response.setContentType(\"text/json; charset=UTF-8\");", "\n            response.getWriter().println(result);", "\n        } catch (IOException e1) {", "\n            e1.printStackTrace();", "\n            response.setStatus(500);", "\n            logger.info(\"向HttpServletResponse写入异常信息失败：\"+e1.fillInStackTrace());", "\n        }", "\n        return null;", "\n                //return modelAndView;", "\n    }", "\n        ---------------", "\n        这里 如果 返回的是null  代码正常可运行，但是页面的控制台的status 却是500，如果返回的是 new 一个 ModelAndView 的话，页面正常 ，状态码为200 ，但是其中是什么逻辑 ，我不清楚，为什么返回null的时候 页面控制台会报错500呢？希望那个大神能给点提示 ，3Q", "\n\n", "    接口开发，我们这边不做页面处理，所以所有信息返回的时候也不能给前端造成坑\n"]], "Tag": "程序设计"}
{"Answer": "把browserlink关掉看看。这个是js的错误，和asp.net没关系。", "Konwledge_Point": "异常处理", "Question": ["急！asp.net运行出错，未经处理的异常，怎么改啊 ", ["grid view里面的控件，在浏览器中弹出提示对话框后，再点别的button就出错了 ，看不懂啊，问题如图，求大神指教？"]], "Tag": "程序设计"}
{"Answer": "试过控制面板，提示应用程序错误", "Konwledge_Point": "异常处理", "Question": ["vs2015 调用的目标发生了异常", ["几天没有打开vs，今天一启动就提示调用的目标发生了异常。尝试过网上修改环境变量windir的值为C:/WINDIWS，不起作用。尝试用ISO修复时无法启动安装程序。最后尝试卸载时同样出现错误无法卸载。现在的情况是无法启动，无法重装或修复，无法卸载，请问如何解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;冒泡法&amp;#xff0c;也不是这样玩的啊。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["报错：将一个无效参数传给了错误函数", ["C++中调试的时候报错:0x00007FFE903CAFEC (ucrtbased.dll) (Project2.exe 中)处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<vector>", "\n", "using", " ", "namespace", " std;\nvector <", "int", ">a;\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i, teap, j, l;\n    i = ", "0", ", teap = ", "0", ", j = ", "0", ", l = ", "0", ";\n    cout << ", "\"请输入数字（100个以内），我将完成排序\"", " << endl;\n    ", "for", " (i = ", "0", "; i < j; i++)\n    {\n        cin >> a[i];\n    }\n    j = ", "sizeof", "(a);\n    cout << j;\n    ", "for", " (i = ", "0", "; i < j; i++)\n    {\n        ", "for", " (l = i + ", "1", "; l < j; l++)\n        {\n            ", "if", " (a[i] < a[l])\n            {\n                teap = a[l];\n                a[l] = a[i];\n                a[i] = teap;\n            }\n        }\n    }\n    cout << ", "\"排序后是：\"", " << endl;\n    ", "for", " (i = ", "0", "; i < j; i++)\n    {\n        cout << a[i] << ", "\">\"", ";\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "报错：0x00007FFE903CAFEC (ucrtbased.dll) (Project2.exe 中)处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。", "\n", "                                                                          报错页面\n", "\n", "Microsoft Visual C++ Runtime Library", "Debug Assertion Failed!", "Program:D:\\C++\\C++\\Project2\\x64\\Debug\\Project2.exe File: D:\\22vs1\\VC\\Tools\\MSVC\\14.32.31326\\include\\vector Line:1732", "Expression: vector subscript out of range", "For information on how your program can cause an assertion failure, see the Visual C++ documentation on asserts.", "(Press Retry to debug the application)", "中止(A) 重试(R) 忽略(I)", "\n", "我想要达到的结果：想要的结果是：声明一个由输入数字的多少来分配内存的数组", "哪位可以帮我解决一下，谢谢！"]], "Tag": "程序设计"}
{"Answer": "第一 你要考虑 异常发生的时机。 service中如果抛出运行时异常（默认情况下）会由spring自动捕获做事务回滚操作并且不会抛出异常（这个我理解的 不确定O(∩_∩)O~）。所以action中你捕获不到自定义异常。\r\n第二 如果普通的Exception spring默认不会做处理 异常会往下抛 action中应该能捕获到。 如果配置正确。", "Konwledge_Point": "异常处理", "Question": ["关于Spring事务管理及自定义异常抛出的问题", ["在项目开发中，[b]自定义了一个异常类[/b]，继承Exception。", "\n整体使用Spring的容器管理方式，事务管理在Service层来控制，现想如下设计：action捕获Service的异常，进行相关处理；在[b]Service层，就需要抛出自定义的异常类；[/b]dao不捕获异常。当Service加上事务处理就捕获不了异常信息，具体代码如下：[code=\"java\"]public User saveUser(User user) throws GeneralException {", "\n        User u = new User();", "\n        try {", "\n            user.setUserType(\"10\");", "\n            user.setStatus(\"10\");", "\n            user.setPostCounts(0);", "\n            user.setPassword(\"aaaa\");", "\n            user.setCreateTime(new Date());", "\n            user.setLoginCounts(0);", "\n            user.setLoginName(\"test\" + (int) Math.random() * 20);", "\n            user.setCreateTime(new Date());", "\n            user.setCurrentLoginIp(\"10.10.0.1\");", "\n            user.setCurrentLoginTime(new Date());", "\n            user.setLastLoginIp(\"10.10.0.1\");", "\n            user.setLastLoginTime(new Date());", "\n            u = userDao.saveUser(user);", "\n\n", "        User us = userDao.getUser(4);\n        us.setStatus(\"900\");//【这儿会报个异常】\n        userDao.updateUser(us);\n\n    } catch (Exception e) {\n        e.printStackTrace();\n        System.out.println(\"============:exception execute.\");\n        throw new GeneralException();\n    }\n    return u;\n}[/code]，此时可以捕获到异常信息，报如下错误：[code=\"java\"]No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here[/code]；当在方法上加@Transactional事务处理，异常就捕获不到了。\n", "\n\n", "[i][b]另，程序采用Spring注解方式。[/b][/i]", "\n\n", "请教各位大虾，谢谢！", "\n\n", "    　　　　　\n"]], "Tag": "程序设计"}
{"Answer": "当然，非要按照你那么设计也可以，后果自负。\r\n\r\n怎么设计呢，就是用户每隔n秒或者n分钟定时keep alive，发数据给服务器，服务器维持的队列中包括用户和最后在线时间两个字段。如果一个客户端n分钟没有报告，不管什么原因（断线、退出、死机），都把它剔除。我们假设客户端如果一直正常工作就会不断来刷新。", "Konwledge_Point": "异常处理", "Question": ["java程序异常退出，登录状态信息应该怎么处理？", ["写登录时，把已经登录的用户加到一个队列里，用来判断是否重复登录，如果程序出现异常退出，来不及从队列删除，这个问题应该怎么解决？"]], "Tag": "程序设计"}
{"Answer": "用f5或者调试-启动调试的方式运行程序，遇到异常，选择继续，会自动定位到抱错的行，你这个明显是_Myproxy这个指针没有初始化，仅仅分配了空间。", "Konwledge_Point": "异常处理", "Question": ["引发了异常：写入访问权限冲突this->_Myproxy是0x1010101.", ["\n\n", "debug的时候就会转到这个界面，请问这个界面是什么意思，我查了下是调用堆栈，但是怎么才能这个在这个里面错误对应源代码的哪一行？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;意义 &amp;#xff0c;也就是作用吧。受检和非受检只是人为的种类区分而已&amp;#xff0c;相当于整理归纳。抛开这个&amp;#xff0c;程序在运行时&amp;#xff0c;会有各种问题&amp;#xff0c;各种异常&amp;#xff0c;错误。有了问题就得解决。但是 你首先得知道是什么问题&amp;#xff0c;才能对症下药。异常就是啥也不干&amp;#xff0c;就是打个日志&amp;#xff0c;&lt;strong&gt;作用就是让你知道 是我是我是我&amp;#xff0c;不是别的异常。&lt;/strong&gt;&amp;#xff0c;然后你就可以快速定位问题。这个时候&amp;#xff0c;你关心受检非受检吗&amp;#xff1f;无所谓。这个只是分类。你也可以分类成别的&amp;#xff0c;你也可以不分类&amp;#xff0c;大家都搞成一个目录。大家都叫666 &lt;strong&gt;但是java语言不是你写的。&lt;/strong&gt;你只能接受。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["受检异常的存在意义是什么？", ["我们都知道Java从抛出开始有两大类，错误异常。", "异常又分为受检和运行时（我也不想解释这些，但是有的人总喜欢在回答的时候写上这些水字数，然后仔细一看啥也没写）。", "一般来说我们大多数都是因为某些无法处理的问题，要么停止程序要么把问题抛出去让外层处理一下。，但是受检异常存在的意义是什么？", "我觉得这个完全没有必要的吧。用运行时异常可以代替啊，大多数的受检异常，我相信大家都是捕获然后啥也不干，打个日志或者转成运行时抛出去"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; for (int i &amp;#61; longer-&amp;gt;size(); i &amp;gt;&amp;#61; shorter-&amp;gt;size() &amp;#43; 1; i--) {&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        UINT t &amp;#61; v[0][i - 1] &amp;#43; v[1][i - 1] &amp;#43; r[0];&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        r.push_front(t / 10);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        r[1] &amp;#61; t - r[0];&lt;/span&gt;&lt;br /&gt;这段代码是有问题的&amp;#xff0c;如果shorter-&amp;gt;size()比longer-&amp;gt;size()小2或以上&amp;#xff0c;那么v[1][i-1]不行了&amp;#xff0c;i-1下标超出数组大小范围了。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["报错：0x7BE9FC66 (ucrtbased.dll) (HANum.exe 中)处有未经处理的异常: 将一个无效参数传递给了将无效参数视为严重错误的函数。", ["\n", "问：为什么报错？", "做一个高精度算法的类，有三个文件：", "\n", "main.cpp", "HANum.h", "HANum.cpp", "完整代码如下（错误在HANum.cpp第61行）：", "\n", "HANum.h", "\n", "#", "pragma", " once", "\n\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<deque>", "\n", "#", "include", " ", "<string>", "\n\n", "class", " ", "HANum", " {\n", "public", ":\n    ", "HANum", "();\n    ", "HANum", "(std::string);\n    ~", "HANum", "();\n\n    HANum ", "operator", "=(", "unsigned", " ", "int", ");\n    HANum ", "operator", "+(HANum);\n    HANum ", "operator", "-(HANum);\n    ", "//HANum operator*(HANum);//提交时注：注释因为还没实现，下同（包括HANum.cpp）", "\n    ", "//HANum operator/(HANum);", "\n    ", "//HANum operator>(HANum);", "\n\n    ", "std::string ", "toString", "()", ";\n\n    ", "static", " HANum ", "fromString", "(std::string)", ";\n\n", "private", ":\n    ", "//下标从低到高对应数位从高到低", "\n    std::deque<", "unsigned", " ", "int", "> num;\n    ", "//小数点在deque第几个元素前", "\n    ", "unsigned", " ", "int", " dot;\n    ", "bool", " pos;\n\n    ", "void", " ", "cleanZeros", "()", ";\n};\n\nstd::istream &", "operator", ">>(std::istream &, HANum &);\nstd::ostream &", "operator", "<<(std::ostream &, HANum);\n\n", "\n", "HANum.cpp", "\n", "#", "include", " ", "\"HANum.h\"", "\n\n", "using", " ", "namespace", " std;\n\n", "typedef", " ", "unsigned", " ", "int", " UINT;\n\nHANum::", "HANum", "() { pos = ", "false", "; dot = ", "0", "; }\nHANum::", "HANum", "(string s) { \n    pos = ", "false", "; \n    dot = ", "0", ";\n    *", "this", " = HANum::", "fromString", "(s);\n}\nHANum::~", "HANum", "() {}\n\nHANum HANum::", "operator", "=(UINT x) {\n    ", "while", " (x) {\n        num.", "push_back", "(x % ", "10", ");\n        x /= ", "10", ";\n    }\n    ", "return", " *", "this", ";\n}\n\nHANum HANum::", "operator", "+(HANum x) {\n\n    HANum self = *", "this", ";\n\n    ", "//加负数", "\n", "/*    if (!x.pos) {\n        x.pos = true;\n        return self - x;\n    }\n    if (!pos) {\n        self.pos = true;\n        return x - self;\n    }\n*/", "\n    ", "//对齐小数点", "\n    ", "while", " (self.dot > x.dot) {\n        self.dot--;\n        self.num.", "push_back", "(", "0", ");\n    }\n    ", "while", " (self.dot < x.dot) {\n        x.dot--;\n        x.num.", "push_back", "(", "0", ");\n    }\n\n    deque<UINT> v[", "2", "] = { num, x.num };\n    deque<UINT> r;\n\n    deque<UINT> *shorter, *longer;\n    ", "if", " (v[", "0", "].", "size", "() > v[", "1", "].", "size", "()) {\n        longer = &v[", "0", "];\n        shorter = &v[", "1", "];\n    }\n    ", "else", " {\n        longer = &v[", "1", "];\n        shorter = &v[", "0", "];\n    }\n\n    r.", "push_front", "(", "0", ");\n    ", "for", " (", "int", " i = longer->", "size", "(); i >= shorter->", "size", "() + ", "1", "; i--) {\n        UINT t = v[", "0", "][i - ", "1", "] + v[", "1", "][i - ", "1", "] + r[", "0", "];\n        r.", "push_front", "(t / ", "10", ");\n        r[", "1", "] = t - r[", "0", "];\n    }\n    ", "for", " (UINT i = longer->", "size", "() - shorter->", "size", "(); i > ", "0", "; i--) {\n        UINT t = (*longer)[i - ", "1", "] + r[", "0", "];\n        r.", "push_front", "(t / ", "10", ");\n        r[", "1", "] = t - r[", "0", "];\n    }\n    UINT t = (*longer)[", "0", "] + r[", "0", "];\n    r.", "push_front", "(t / ", "10", ");\n    r[", "1", "] += t - r[", "0", "];\n\n    HANum n;\n    n.num = r;\n    n.dot = x.dot;\n    n.", "cleanZeros", "();\n    ", "return", " n;\n}\n", "/*\nHANum HANum::operator-(HANum x) {\n    if (!x.pos) {\n        x.pos = true;\n        return *this + x;\n    }\n    if (!pos) {\n        HANum t = *this;\n        t.pos = true;\n        return x - t;\n    }\n\n    deque<UINT> v[2] = { num, x.num };\n    deque<UINT> r;\n\n    UINT shorter, longer;\n    if (v[0].size() > v[1].size()) {\n        longer = 0;\n        shorter = 1;\n    }\n    else {\n        longer = 1;\n        shorter = 0;\n    }\n\n    r.push_back(0);\n    for (int i = 0; i < v[shorter].size(); i++) {\n        UINT t = v[0][i] + v[1][i] + r[i];\n        r.push_back(t / 10);\n        r[i] = t - r[i + 1];\n    }\n    for (UINT i = v[shorter].size(); i < v[longer].size(); i++) {\n        UINT t = v[longer][i] + r[i];\n        r.push_back(t / 10);\n        r[i] = t - r[i + 1];\n    }\n\n    HANum n;\n    n.num = r;\n    return n;\n}\n*/", "\n", "string ", "HANum::toString", "()", " ", "{\n    string r;\n    deque<UINT> t = num;\n    UINT d = dot;\n    ", "bool", " isInt = !dot;\n    ", "while", " (!t.", "empty", "()) {\n        ", "if", " (!isInt && d == ", "1", ") {\n            r += ", "'.'", ";\n            t.", "pop_front", "();\n        }\n        r += t.", "front", "() + ", "'0'", ";\n        t.", "pop_front", "();\n        d--;\n    }\n    ", "return", " r;\n}\n\n", "HANum ", "HANum::fromString", "(string s)", " ", "{\n    HANum r;\n    UINT d = ", "0", ";\n    ", "for", " (", "auto", " i : s) {\n        d++;\n        ", "if", " (i == ", "'.'", ") r.dot = d;\n        ", "else", " r.num.", "push_front", "(i - ", "'0'", ");\n    }\n    ", "return", " r;\n}\n\n", "void", " ", "HANum::cleanZeros", "()", " ", "{\n    ", "while", " (num.", "size", "() > ", "1", ") {\n        ", "if", " (num.", "front", "() == ", "'0'", ") num.", "pop_front", "();\n        ", "else", " ", "break", ";\n    }\n    ", "while", " (num.", "size", "() > ", "1", " && dot > ", "0", ") {\n        ", "if", " (num.", "back", "() == ", "'0'", ") {\n            num.", "pop_back", "();\n            dot--;\n        }\n        ", "else", " ", "break", ";\n    }\n}\n\n", "//**************************************************", "\n\nistream &", "operator", ">>(istream& is, HANum &n) {\n    string t;\n    is >> t;\n    n = HANum::", "fromString", "(t);\n    ", "return", " is;\n}\n\nostream &", "operator", "<<(ostream &os, HANum n) {\n    string t = n.", "toString", "();\n    os << t;\n    ", "return", " os;\n}\n\n", "\n", "main.cpp", "\n", "#", "include", " ", "\"HANum.h\"", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", " ", "{\n    HANum x, y;\n    cin >> x >> y;\n    cout << x + y;\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n string url = \"http:///www.xxx1.com\"\r\n        string url2= \"http:///www.xxx2.com\"\r\n        string url3= \"http:///www.xxx3.com\"\r\n        string url4= \"http:///www.xxx4.com\"\r\n                string[] urls = { url,url2,url3,url4 };\r\n                foreach (var u in urls)\r\n                {\r\n                  try\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t你的代码\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcatch { }\r\n                }\r\n```", "Konwledge_Point": "异常处理", "Question": ["c# winfrom 关于抛异常的处理方式", ["比如说我有十条网址", "\n\n", "    string url = \"http:///www.xxx1.com\"\n        string url2= \"http:///www.xxx2.com\"\n        string url3= \"http:///www.xxx3.com\"\n        string url4= \"http:///www.xxx4.com\"\n                string[] urls = { url,url2,url3,url4 };\n                foreach (var u in urls)\n                {\n                  // 这里去执行方法\n                }\n", "\n\n", "然后在url3去请求的的时候 服务器返回一个500 然后程序就挂了 我想如果url3抛异常它自己不执行就可以了  但是后面的url4还要执行下去呀  怎么弄了"]], "Tag": "程序设计"}
{"Answer": "你的字段的数据类型，和传入的类型不匹配。修改下你的查询。字符串要引号，非字符串不要引号。\r\n\r\n\r\n# 问题解决的话，请及时采纳，包括之前的提问，这样才能继续详细回答你。", "Konwledge_Point": "异常处理", "Question": ["利用timer控件定时写数据进入access数据库，编译成功，但是运行后报错：“System.Data.OleDb.OleDbException”类型的未经处理的异常在 System.Data.dll 中发生   其他信息: 标准表达式中数据类型不匹配。", ["public: System::Void OpenAccess()   //连接数据库，在表格显示", "\n{", "\n    String^ oleDBString = \"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\\Office2019\\MyProject\\sensor.accdb;\";", "\n    OleDbConnection^ os = gcnew OleDbConnection(oleDBString);", "\n    String^ sql = \"select* from Sensor1\";", "\n    DataSet^ ds = gcnew DataSet();", "\n    OleDbDataAdapter^ oleDbDataAdapter = gcnew OleDbDataAdapter(sql, os);", "\n    oleDbDataAdapter->Fill(ds,\"Sensor1\");", "\n    dataGridView1->DataSource = ds->Tables[0]->DefaultView;", "\n    os->Close();", "\n}", "\nprivate: System::Void MyForm_Load(System::Object^  sender, System::EventArgs^  e)", "\n{", "\n    String^ text1 = \"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\\Office2019\\MyProject\\sensor.accdb;\";", "\n    OleDbConnection^ conn = gcnew OleDbConnection(text1);", "\n    String^ txtCommand = \"select Num,Time,Temperature,Humidity from Sensor1\";", "\n    OleDbDataAdapter^ da = gcnew OleDbDataAdapter(txtCommand, conn);", "\n    DataSet^ ds = gcnew DataSet(\"ds\");", "\n    da->Fill(ds, \"Sensor1\");", "\n    dataGridView1->DataSource = ds;", "\n    dataGridView1->DataMember = \"Sensor1\";", "\n}", "\nprivate: System::Void timer3_Tick(System::Object^  sender, System::EventArgs^  e) {", "\n    while (tbxHumi->Text != \"\" || tbxTemp->Text != \"\")", "\n    {", "\n        String^ text1 = \"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\\Office2019\\MyProject\\sensor.accdb;\";", "\n        String^ text2 = \"Insert Into Sensor1(Temperature,Humidity)Values('\";", "\n        text2 += tbxTemp->Text + \"','\";", "\n        text2 += tbxHumi->Text + \"')\";", "\n        OleDbConnection^ conn = gcnew OleDbConnection(text1);", "\n        conn->Open();", "\n        OleDbCommand^ da = gcnew OleDbCommand();", "\n        da->CommandText = text2;", "\n        da->Connection = conn;", "\n        da->ExecuteNonQuery();", "\n        tbxTemp->Clear();", "\n        tbxHumi->Clear();", "\n        conn->Close();", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "批量替换不就好了吗，先选中两个〈ScanInfo〉〈ScanInfo〉替换成一个〈ScanInfo〉，再选中两个〈/ScanInfo〉〈/ScanInfo〉替换成一个〈/ScanInfo〉，over", "Konwledge_Point": "异常处理", "Question": ["请问一下这个怎么处理", []], "Tag": "程序设计"}
{"Answer": "你这种情况属于正常的，没有问题。\r\n客户端异常掉线，比如断开网线或者断电等情况下，客户端的channel对象不会自动关闭，所以才引入了心跳的机制，也就是服务器端通过监测在心跳期间内（1分钟）是否收到了客户端发过来的消息，来判断是否可以和客户端进行通信，如果没有收到任何消息，则视为客户端掉线。心跳机制就是为了解决你说的这个问题的。\r\n\r\n不光是netty，所有基于socket的通信都有这个问题，因为客户端和服务端是基于消息的协议，只有客户端主动发出断开的消息给服务端，服务端才能明确知道客户端断开了连接，直接拔掉网线或者断电的情况下，属于底层的异常，客户端程序是根本监测不到的，即使你的客户端程序能够监测到，也没有用，因为此时网线已经被拔掉了，根本没法给服务端发送消息。所以服务端才引入了心跳机制来对应这种异常情况，相当于超时机制，超过规定时间没有接到消息，就视为客户端掉线了，以释放服务端的资源。\r\n\r\n相当于两个人通话，对方突然把手机电池拔掉了，一点声音也没有，持续了1分钟，你这边肯定是不知道他那边出了什么状况，最后你肯定就挂机了，不可能傻等着，呵呵。\r\n\r\n详细情况可以看一下下面的文章，里面有异常掉线的解释：\r\n\r\n[url]http://vanadiumlin.iteye.com/blog/1276757[/url]", "Konwledge_Point": "异常处理", "Question": ["netty4,异常断线的问题.", ["我写了个消息转发程序,也加了心跳处理,1分钟没读写操作的用户自动被踢下线.", "\n可是现在遇到一个问题,如A用户要发送消息给B用户,通过服务器中转,", "\n服务器在接收到A的消息时,B用户实际已经断网了(我把B用户的网线拔掉了),", "\n这时服务器既然是不知道的.", "\n[code=\"java\"]", "\nChannelFuture writeFuture = channel.write(msg);", "\n\n", "        final Channel sendChannel = ctx.channel();\n\n        writeFuture.addListener(new ChannelFutureListener() {\n\n            @Override\n            public void operationComplete(ChannelFuture future) throws Exception {\n\n                if (future.isSuccess()){\n                    sendChannel.write(JSONResult.getSuccess());\n                    System.err.println(\"future.isSuccess()\");\n                }\n                if (future.isDone()){\n                    sendChannel.write(JSONResult.getSuccess());\n                    System.err.println(\"future.isDone()\");\n                }\n                if (future.isCancelled()){\n                    sendChannel.write(JSONResult.getSuccess());\n                    System.err.println(\"future.isCancelled()\");\n                }\n\n            }\n        });\n", "\n\n", "[/code]", "\noperationComplete都会返回成功..只有到了1分钟的时候,服务器才回把B用户踢下线.我要怎么才能在服务端判断B用户实际已经掉线了??"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;遇到这种报错我一般分几个步骤做&amp;#xff1a;&lt;br /&gt;查看大致的报错问题&amp;#xff0c;就拿你这报错中大量出现Connect IP什么的&amp;#xff0c;首先可以排除网络是通的因为没网怎么可能有外网IP&amp;#xff0c;然后就是怀疑是不是没有适配的包的问题&amp;#xff0c;导致长时间获取无法获取到就拒绝链接&amp;#xff0c;这个显然可以百度对应系统是否兼容&amp;#xff0c;再然后就是怀疑下载源的问题&amp;#xff0c;由于Linux基本上有许多的包都是依靠GitHUb或者其他国外的&amp;#xff0c;也会导致长时间获取包超时无法获取到的情况&amp;#xff0c;这时候就要去换阿里的源、或者清华源等&amp;#xff0c;这样基本可以解决你遇到的问题。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Ubuntu WSL2 GUI 安装xfce4出现的异常错误。 该如何处理？", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "[size=x-large][color=red]我看出你把你这个方法的异常都往被调用处抛,所以你在调用这个方法的地方,按如下这样来catch.[/color][/size]\r\n\r\n\tpublic static void testTEST(){\r\n\t\ttry{\r\n\t\t\ttest(host,port);\r\n\t\t}catch(ConnectException e){\r\n\t\t\tSystem.out.println(\"代理无法响应...\");\r\n\t\t\tJOptionPane.showMessageDialog(null, \"代理无法响应);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n[size=large][color=red]\r\n当然,你要明白,异常可以向外抛出,也可以在本方法内自已处理,根据需要来选择.\r\n希望对你有所帮助.....[/color][/size]", "Konwledge_Point": "异常处理", "Question": ["处理一个异常", ["public static void  test(String host,int port) throws HttpException, IOException {", "\n        HttpClient client = new HttpClient();", "\n        // 设置代理服务器地址和端口", "\n       //client.getHostConfiguration().setProxy(\"221.214.208.17\", 3128);", "\n       client.getHostConfiguration().setProxy(host, port); ", "\n        // 使用 GET 方法 ，如果服务器需要通过 HTTPS 连接，那只需要将下面 URL 中的 http 换成 https  ", "\n\n", "    // 使用POST方法  \n     HttpMethod method = new PostMethod(\"http://www.7y8.com/V/ip.asp\");  \n    client.executeMethod(method);  \n    // 打印服务器返回的状态  \n    System.out.println(method.getStatusLine());  \n\n    // 打印返回的信息  \n    //String result = method.getResponseBodyAsString();  \n    StringBuffer rets = new StringBuffer();\n    InputStream responseBody = method.getResponseBodyAsStream();\n    InputStreamReader in = new InputStreamReader(responseBody, \"gb2312\");\n    BufferedReader br = new BufferedReader(in);\n    String s = \"\";\n    while ((s = br.readLine()) != null) {\n        rets.append(s + \"\\n\");\n    }\n\n    s = \"\";\n    if (rets.toString().contains(host)) {\n        box = new MessageBox(shell, SWT.CENTER);\n        box.setText(\"IP测试!\");\n        box.setMessage(\"代理IP可用\");\n        box.open();\n    }else{\n        box = new MessageBox(shell, SWT.CENTER);\n        box.setText(\"IP测试!\");\n        box.setMessage(\"代理IP不可用\");\n        box.open();\n    }\n    br.close();\n    in.close();\n    writeToTXT(\"C:\\\\Documents and Settings\\\\Administrator\\\\桌面\\\\xxx.html\",rets);\n    // 释放连接  \n    method.releaseConnection();  \n\n\n}  \n", "\n\n", "2010-4-11 1:19:19 org.apache.commons.httpclient.HttpMethodDirector executeWithRetry", "\n信息: I/O exception (java.net.ConnectException) caught when processing request: Connection timed out: connect", "\n2010-4-11 1:19:19 org.apache.commons.httpclient.HttpMethodDirector executeWithRetry", "\n信息: Retrying request", "\n\n", "上面程序可以简单判断一个代理IP是否可用，但是有一种代理IP无法响应会引发以下异常，并且程序主界面同时会无法响应，问下这种异常该如何处理，因为IP最后是传进来的，这段代码里的IP我只是测试用，所以如果遇到无法响应的情况就无法处理了，希望得到满意的答复，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;找到原因了&amp;#xff0c;字体使用后没有释放内存。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#：Application.Run()抛出异常:System.ArgumentException:“参数无效\"", ["运行程序，窗体全屏后修改窗体的背景、控件字体颜色时会抛出这个异常，以下是报错信息：", "\n", "System.ArgumentException", "  HResult=0x80070057", "  Message=参数无效。", "  Source=System.Drawing", "  StackTrace:", "   在 System.Drawing.FontFamily.GetName(Int32 language)", "   在 System.Drawing.FontFamily.get_Name()", "   在 System.Windows.Forms.Internal.WindowsFont.FromFont(Font font, WindowsFontQuality fontQuality)", "   在 System.Windows.Forms.Internal.WindowsGraphicsCacheManager.GetWindowsFont(Font font, WindowsFontQuality fontQuality)", "   在 System.Windows.Forms.TextRenderer.DrawText(IDeviceContext dc, String text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags)", "   在 System.Windows.Forms.ToolStripRenderer.OnRenderItemText(ToolStripItemTextRenderEventArgs e)", "   在 System.Windows.Forms.ToolStripProfessionalRenderer.OnRenderItemText(ToolStripItemTextRenderEventArgs e)", "   在 System.Windows.Forms.ToolStripRenderer.DrawItemText(ToolStripItemTextRenderEventArgs e)", "   在 System.Windows.Forms.ToolStripMenuItem.OnPaint(PaintEventArgs e)", "   在 System.Windows.Forms.ToolStripItem.HandlePaint(PaintEventArgs e)", "   在 System.Windows.Forms.ToolStripItem.FireEvent(EventArgs e, ToolStripItemEventType met)", "   在 System.Windows.Forms.ToolStrip.OnPaint(PaintEventArgs e)", "   在 System.Windows.Forms.Control.PaintWithErrorHandling(PaintEventArgs e, Int16 layer)", "   在 System.Windows.Forms.Control.WmPaint(Message& m)", "   在 System.Windows.Forms.Control.WndProc(Message& m)", "   在 System.Windows.Forms.ScrollableControl.WndProc(Message& m)", "   在 System.Windows.Forms.ToolStrip.WndProc(Message& m)", "   在 System.Windows.Forms.MenuStrip.WndProc(Message& m)", "   在 System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)", "   在 System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)", "   在 System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)", "\n", "\n", "不清楚怎么解决，求帮助！"]], "Tag": "程序设计"}
{"Answer": "```\r\n void main() throws IndexOutOfBoundException {\r\ntry\r\n{\r\nint[] a={1,2,3,4};\r\nfor (int i = 0; i &lt; 5; i++)\r\nSystem.out.println(a[i]);\r\n}\r\ncatch (IndexOutOfBoundException ex)\r\n{\r\nSystem.out.println(\"越界\");\r\n}\r\n}\r\n```\r\n\r\n手工写的，仅供参考", "Konwledge_Point": "异常处理", "Question": ["Java异常题目求助大佬们帮忙一下", ["1.编写一程序，声明一个数组，int a[ ]={1,2,3,4}，循环输出该数组中的每个数，循环变量i=0，i<5，处理数组下标越界产生的异常。-"]], "Tag": "程序设计"}
{"Answer": "打个debug走看那一行报错，再根据那报错的一行分析错误所在。", "Konwledge_Point": "异常处理", "Question": ["关于账号注册的异常？", ["$(\"#doReg\").click(function(){", "\n\n", "      var floginacct = $(\"#floginacct\");\n      var fuserpswd = $(\"#fuserpswd\");\n      var fusername = $(\"#fusername\");\n      var femail = $(\"#femail\");\n      var fusertype = $(\"#fusertype\");       \n\n      var loadingIndex = -1;            \n      $.ajax({\n          type : \"POST\",\n          data : {\n              \"loginacct\" : floginacct.val(),\n              \"userpswd\" : fuserpswd.val(),\n              \"username\" : fusername.val(),\n              \"email\" : femail.val(),\n              \"usertype\" : fusertype.val()\n          },\n          url : \"${APP_PATH }/doReg.do\",\n          beforeSend : function(){\n              loadingIndex = layer.msg('处理中', {icon: 16});\n              return true;\n          },\n          success : function(result){\n              layer.close(loadingIndex);\n              if(result.success){\n                  window.location.href=\"${APP_PATH}/member/member\"                                                                                \n              }else{\n                  layer.msg(\"注册失败!\", {time:1000, icon:5, shift:6});\n              }\n          },\n          error : function(){\n              layer.msg(\"系统错误!\", {time:1000, icon:5, shift:6});\n          }         \n      });\n    })  这是jsp写的ajax请求\n", "\n\n", "@ResponseBody", "\n@RequestMapping(\"/doReg\")", "\npublic Object doReg(String loginacct,String userpswd,String username,", "\n        String email,String usertype,HttpSession session) {", "\n\n", "    AjaxResult result = new AjaxResult();\n\n    try {\n\n        Map<String,Object> paramMap = new HashMap<String,Object>();\n        paramMap.put(\"loginacct\", loginacct);\n        paramMap.put(\"userpswd\", MD5Util.digest(userpswd));\n        paramMap.put(\"username\", username);\n        paramMap.put(\"email\", email);\n        paramMap.put(\"usertype\", usertype);\n\n        memberService.saveMember(paramMap); \n        result.setSuccess(true);\n\n    } catch (Exception e) {     \n        e.printStackTrace();\n        result.setSuccess(false);           \n    }       \n    return result;\n}  这是controller里面的\n\ninsert into t_member (id, loginacct, userpswd, \n  username, email,usertype,authstatus)\nvalues (#{id},#{loginacct},#{userpswd},#{username},#{email},#{usertype},0)  这是XML的语句，问题出现在在界面输入后点注册返回false···想着是流程出错···但实在找不到，求助ing\n", "\n\n", "Request URL: http://localhost:8080/Atcrowdfunding-main/doReg.do", "\nRequest Method: POST", "\nStatus Code: 302 ", "\nRemote Address: [::1]:8080", "\nReferrer Policy: no-referrer-when-downgrade  这是网页f12后的header信息"]], "Tag": "程序设计"}
{"Answer": "按照下面的格式测试一下\r\n\r\n```\r\nmui.ajax({\r\n    url: '',\r\n    type: 'post',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    processData: false,\r\n    data: JSON.stringify({\r\n       v1: '2017',\r\n       v2: '财',\r\n       v3: '钱'\r\n    }),\r\n    success: function(data) {\r\n        console.log(data);\r\n    },\r\n    error: function(xhr, type, errorThrown) {\r\n        console.log(type);\r\n    }\r\n});\r\n```", "Konwledge_Point": "异常处理", "Question": ["用mui ajax调用webserver的时候 总是抛出异常 提示abort", ["前台代码", "\n\n", "    mui.ajax('http://192.168.0.100:8080/Webservice/Service1.asmx/test1', {\n                        data: {\n                            v1: '2017',\n                            v2: '财',\n                            v3: '钱'\n                        },\n                    //  dataType: 'text', //服务器返回json格式数据\n                        type: 'post', //HTTP请求类型\n                        timeout: 3000, //超时时间设置为10秒；\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        success: function(data) {\n                            //服务器返回响应，根据响应结果，分析是否登录成功；\n                        },\n                        error: function(xhr, type, errorThrown) {\n                            //异常处理；\n                                console.log(type);\n                                mui.toast('连接失败')\n                                 mui.toast(type)\n                        }\n                    });\n                });\n            });\n", "\n\n", "webserver 代码", "\n\n", "    [WebMethod]\n        public  string test1(string v1,string v2,string v3)\n       {\n           return string.Format(\"祝你在{0}里 发大{1} 挣大{2}\",v1,v2,v3);\n       }\n", "\n\n", "为什么总是报错呢 在手机上调试的时候  ", "\n\n", "  <webServices>\n      <protocols>\n        <add name=\"HttpPost\"/>\n        <add name=\"HttpGet\"/>\n      </protocols>\n    </webServices>\n", "\n\n", "web.config中的也加了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;configure(HttpSecurity http)中配置放行&amp;#xff0c;那还是会走spring security拦截链的&amp;#xff0c; configure(WebSecurity web)中去配置放行&amp;#xff0c;那才是真的放行&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["SpringSecurity permitAll方式放行资源无效", ["问题遇到的现象和发生背景", "\n", "在SpringSecurity使用jwt令牌实现认证登录时使用如下方式放行相关静态资源和接口无效，仍然进行了token认证", "\n", "问题相关代码", "\n", "    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .authorizeRequests()\n            .antMatchers(", "\"/login\"", ",", "\"/doc.html\"", ",", "\"/swagger-resources/**\"", ",\n                    ", "\"/v2/api-docs/**\"", ",", "\"/webjars/**\"", ",", "\"/capture\"", ",", "\"/test/**\"", ",", "\"/ws/**\"", ",", "\"/logOut\"", ",\n                    ", "\"/admins/userFaces\"", ",", "\"/index.html\"", ",", "\"/css/**\"", ",", "\"/js/**\"", ",", "\"/fonts/**\"", ").permitAll()", "//", "放行相关请求和资源\n            .anyRequest().authenticated()", "//", "除了上面的其他都需要认证\n            .withObjectPostProcessor(getObjectPostProcessor())", "//", "动态权限配置\n            .and()\n            .addFilterBefore(getJwtAuthenticationTokenFilter(), UsernamePasswordAuthenticationFilter.class)", "//", "添加登陆过滤器\n            .exceptionHandling()", "//", "添加异常处理过滤器\n            .authenticationEntryPoint(restAuthenticationEntryPoint)", "//", "未认证异常过滤器\n            .accessDeniedHandler(restfulAccessDeniedHandler)", "//", "权限拒绝异常过滤器\n            .and()\n            .csrf().disable()", "//", "使用jwt，不需要使用csrf拦截器\n            .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)", "//", "不需要使用session\n            .and()\n            .headers().cacheControl();", "//", "禁用缓存\n    }\n", "\n", "运行结果及报错内容", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;它说的异常处理是怕你输入小于2的数&amp;#xff0c;这些不是素数&amp;#xff0c;避免进入死循环&lt;br /&gt;参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; isPrime(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/497834096546117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c语言输入法非法解决", ["实现isPrime()函数，参数为整数，要有异常处理。如果整数是素数，返回True，否则返回False。", "就是这个异常处理不知道该怎么整。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样的格式可否&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n会计 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n金融 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n马列 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}}\n外语 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n人文 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n旅游 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}}\n软件 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n信息 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n工商 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n财税 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}}\n国贸 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n经济 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}}\n统计 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n数学 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n体育 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n测绘 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python,excle,文件处理，", ["已知某大学共有16个学院（会计、金融、马列、外语、人文、旅游、软件、信息、工商、财税、国贸、经济、统计、数学、体育、测绘），每个学院有2-3个专业（随机生成，在各个学院名称后面加专业1、专业2、专业3区分），每个专业招收3个班，每个班的人数为：45-50人，班级数量范围为：96到130个班级（Random）。100*50=5000个学生", "（1）    随机生成各个学院各个专业各个班级的学生，数据保存到excel文件中（文件处理，异常处理，基本语法）；", "（2）    每个专业随机生成课程数量为20门，其中必须包括：高数一、线性代数、英语一、马克思原理，其他课程为专业课16门。考虑到专业不同，课程名用学院、专业名，课程名代替：比如：“软件专业1课程1”表示一门专业课。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;越界了数组。j&amp;#61;length-1时&amp;#xff0c;j&amp;#43;1越界&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#冒泡排序未经处理异常!?", ["这个什么未经处理异常是咋回事，错哪了呀，这怎么改，懂的望详解谢谢了！？"]], "Tag": "程序设计"}
{"Answer": "在dao曾不catch里的Exception抛出去\r\nthrows e；\r\n方法上面加上throw", "Konwledge_Point": "异常处理", "Question": ["Java中已经被try,catch的异常再其上一层中还能继续被try,catch吗?", ["比如Dao层有一条 insert 语句, 在该层已经try,catch了,现在我故意将sql写错,", "\n在Service层 try,catch时,走到try就打印出异常了,然后不会进catch,现在我想", "\n让程序进Service层的catch该如何处理?", "\n\n", "Service层的代码", "\n\n", " String sql = \"INSERT INTO sys_algorithm_info (ID, SFMC, SFLX) VALUES ('\"+id+\"', '\"+sfmc+\"', '\"+sflx+\"')\";\n\n            List<String> sqllist = new ArrayList<String>();\n            sqllist.add(sql);\n\n            try {\n                dataService.insertList(sqllist );\n            } catch (Exception e) {\n                flag = \"0\";      //这里代码不进catch,直接跳过,无法将flag设置成0\n                e.printStackTrace();\n            }\n", "\n\n", "Dao层的代码", "\n\n", " public boolean insertList(List<String> sqllist) {\n        List<Object[]> list = null;\n        // TODO Auto-generated method stub\n        if (sqllist != null && sqllist.size() > 0) {\n            boolean flag = false;\n\n            try {\n                int[] resoult = this.updateSqlDataAll(sqllist);\n                if(resoult!=null){\n                    flag = true;\n                }else{\n                    flag = false;\n                }\n\n            } catch (Exception e) {\n                flag = false;\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            return flag;\n        } else {\n            return false;\n        }\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数组越界了&amp;#xff0c;你Map属性从头到尾都是空的&amp;#xff0c;你为什么还想读他的Length&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["自己写2048的时候突然出现一个奇怪错误，但是找不到问题所在。", ["代码如下图所示，因为是练习，所以命名随意起的。", "因为直接写代码会提示正文错误，无论怎么改都无法通过，只能用图片形式展现，抱歉。", "\n", "\n", "\n", "错误在类的35行代码之中，调试的过程中在赋值的时候直接报错，但如果直接按F5运行会直接运行完整个程序，但最终结果会有BUG。", "报错结果为", "“System.ExecutionEngineException”类型的未经处理的异常在 未知模块。 中发生 。", "核对过代码，除了命名不同之外没有其他差别。", "希望有人能解答我的疑惑，感激不尽。"]], "Tag": "程序设计"}
{"Answer": "因为python是解释型语言，逐一解释并运行每一行语句，如果某条语句有错误程序就会停止，抛出异常。异常处理解决的就是这个问题，让程序在语句出错的情况下继续执行，可以忽略异常，也可以给出替代异常发生的解决方案。", "Konwledge_Point": "异常处理", "Question": ["小白问题 python 爬虫", ["请问 python  引用requests库请求网页的时候 会用到raise_for_status()这个代码，这个代码是什么意思？我在晚上查到说是什么异常处理，那异常处理又是什么意思？"]], "Tag": "程序设计"}
{"Answer": "jsbc驱动没有配置对，对应的jar包没有导入。找sun.jdbc.odbc.JdbcOdbcDriver", "Konwledge_Point": "异常处理", "Question": ["java连接access数据库", ["为什么提示Class.forName（sun.jdbc.odbc.JdbcOdbcDriver）;", "\n这条语句“未出现的异常类型”啊，我是照书上写的啊"]], "Tag": "程序设计"}
{"Answer": "方法中如果需要抛出异常，就只能用throws异常的，那么调用这个方法的地方必须处理这个抛出的异常。\r\n如果调用了抛出异常的方法，要么使用try-catch处理该异常，要么直接抛给它的上层调用者。\r\n最后如果都没有处理，那么运行时就由JVM进行处理，那么程序就会出错了。", "Konwledge_Point": "异常处理", "Question": ["java中除了方法可以使用throws关键词抛出异常外，类可以吗", ["java中除了方法可以使用throws关键词抛出异常外，类可以吗，", "\n可不可以抛来抛去而不处理它"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;索引从0开始&amp;#xff0c;不是1&amp;#xff0c;取不到{4}&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["如何解决：System.FormatException:“索引(从零开始)必须大于或等于零，且小于参数列表的大小。”", ["使用vs2019写c#控制台应用练习的时候出现“System.FormatException:“索引(从零开始)必须大于或等于零，且小于参数列表的大小。”的问题，请问是哪里出现错误了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;import java.util.Scanner;\n \npublic class Array {\n \n    public static void main(String[] args) {\n        Scanner input &amp;#61; new Scanner(System.in);\n        int[] a &amp;#61; new int[10];\n        // 控制台输入数组值\n        for (int i &amp;#61; 0; i &amp;lt; a.length; i&amp;#43;&amp;#43;) {\n            System.out.println(&amp;#34;请输入第&amp;#34; &amp;#43; (i &amp;#43; 1) &amp;#43; &amp;#34;个数字&amp;#xff1a;&amp;#34;);\n            int num &amp;#61; input.nextInt();\n            a[i] &amp;#61; num;\n        }\n        \n        try {\n            System.out.println(a[20]);\n        } catch(Exception e) {\n            System.out.println(e.getMessage());\n        }\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java数组异常怎么写", ["编写一段代码，定义一个长度为10的整形数组，故意去访问下标20的数组元素，然后再用try.，，，catch处理"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用socpe标签和systempath标签直接指向你本地的路径&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["springboot项目，maven引入第三方包引入异常该怎么处理？", ["springboot项目，maven引入第三方包引入异常该怎么处理？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;clean1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dateframe&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 改进方法一&amp;#xff0c;简单粗暴&amp;#xff0c;使用try和except语句&amp;#xff0c;忽略类型报错&amp;#xff0c;执行绝对正确的步骤&lt;/span&gt;\n    wrong_columns &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; col &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dateframe.columns:\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n            wrong_value &amp;#61; dateframe[col].loc[(dateframe[col] &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) | (dateframe[col].astype(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;nan&amp;#39;&lt;/span&gt;)]  &lt;span class=\"hljs-comment\"&gt;# 一般来说&amp;#xff0c;NaN转字符串后以&amp;#39;nan&amp;#39;的形式被识别&amp;#xff0c;因此可以利用&lt;/span&gt;\n            rate &amp;#61; wrong_value.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] / dateframe[col].shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; rate &amp;gt; &lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;:\n                wrong_columns.append(col)\n        &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{}列无法进行clean&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(col))  &lt;span class=\"hljs-comment\"&gt;# 报警信息&amp;#xff0c;按你自己喜欢的形式&amp;#xff0c;可以生成新的df、储存在列表、系统弹窗警告等&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; dateframe.drop(columns &amp;#61; wrong_columns)  &lt;span class=\"hljs-comment\"&gt;# 不用设置inplace&amp;#61;True&amp;#xff0c;否则会返回None&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;clean2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;dateframe&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 改进方法二&amp;#xff0c;针对性强&amp;#xff0c;增加一步判断类型&amp;#xff0c;好多方法进行判断&amp;#xff0c;此处参考&amp;#xff0c;没有优化代码性能&lt;/span&gt;\n    wrong_columns &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; col &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dateframe.columns:\n        date_type &amp;#61; &lt;span class=\"hljs-built_in\"&gt;set&lt;/span&gt;(dateframe[col])\n        is_date &amp;#61; [&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;]\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; each &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; date_type:\n            check &amp;#61; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(each)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; check &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; check &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;:  &lt;span class=\"hljs-comment\"&gt;# 此处草率的判断是不是int和float&amp;#xff0c;都不是就视为False&lt;/span&gt;\n                is_date[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; is_date[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n            wrong_value &amp;#61; dateframe[col].loc[(dateframe[col] &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) | (dateframe[col].astype(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;nan&amp;#39;&lt;/span&gt;)]  &lt;span class=\"hljs-comment\"&gt;# 一般来说&amp;#xff0c;NaN转字符串后以&amp;#39;nan&amp;#39;的形式被识别&amp;#xff0c;因此可以利用&lt;/span&gt;\n            rate &amp;#61; wrong_value.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] / dateframe[col].shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; rate &amp;gt; &lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;:\n                wrong_columns.append(col)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; dateframe.drop(columns &amp;#61; wrong_columns)  &lt;span class=\"hljs-comment\"&gt;# 不用设置inplace&amp;#61;True&amp;#xff0c;否则会返回None&lt;/span&gt;\n\n\ndf &amp;#61; pd.DataFrame({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],\n                   &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: [-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],\n                   &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],\n                   &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],\n                   &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],\n                   &lt;span class=\"hljs-string\"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;1/1/1&amp;#39;&lt;/span&gt;]})\n\nresult1 &amp;#61; clean1(df)\nresult2 &amp;#61; clean2(df)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(result1)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(result2)\n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n实现效果如下\n     A    B    C  D    E      F\n0  1.0 -1.0  1.0  1  1.0  1/1/1\n1  2.0  2.0  2.0  2  2.0  1/1/1\n2  NaN  3.0  3.0  3  NaN  1/1/1\n3 -1.0  NaN  NaN  0 -1.0  1/1/1\n4 -3.0  1.0  1.0  1 -3.0  1/1/1\n5  1.0  2.0  2.0  2 -1.0  1/1/1\n6  2.0  3.0  3.0  3  2.0  1/1/1\n7  3.0  4.0  4.0  4  3.0  1/1/1\n8  4.0  5.0  5.0  5  4.0  1/1/1\n9  5.0  6.0  6.0  6  5.0  1/1/1\n删除异常列后\n     A    B    C  D      F\n0  1.0 -1.0  1.0  1  1/1/1\n1  2.0  2.0  2.0  2  1/1/1\n2  NaN  3.0  3.0  3  1/1/1\n3 -1.0  NaN  NaN  0  1/1/1\n4 -3.0  1.0  1.0  1  1/1/1\n5  1.0  2.0  2.0  2  1/1/1\n6  2.0  3.0  3.0  3  1/1/1\n7  3.0  4.0  4.0  4  1/1/1\n8  4.0  5.0  5.0  5  1/1/1\n9  5.0  6.0  6.0  6  1/1/1\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["pandas 遍历数据 删除缺省值和异常值", ["问题：遍历数据中的所有列，将缺省值和异常值（负数的值）数量超过30%的列删掉", "数据一共有8000列 140行", "其中要处理的部分数据如图"]], "Tag": "程序设计"}
{"Answer": "arr数组的下标范围是0~1023而你使用了1024，而且想把数组置0的话使用memset(arr,0,sizeof(arr))", "Konwledge_Point": "异常处理", "Question": ["MFC中的一个问题。和C++相关吧", ["你好！如下问题希望解答！谢谢！", "\n在MFC中下面的代码是将点击一个控件将IDC_EDIT3编辑框中的整数进行求平均值。", "\n如：编辑框中为    84 14 18          然后取出84、14、18求 平均值。但是调试后 出现了", "\n“0x002EFC87 处有未经处理的异常(在 串口通信.exe 中): RangeChecks 检测代码检测到超出范围的数组访问。”的错误 ，希望指析。此求平均值的控件代码如下：", "\n        CString ss;", "\n    int  ADD_Number = 0;", "\n    int  temp = 0;", "\n    char arr[1024];", "\n    int n = 0;", "\n    int c = 0;", "\n    int m = 0;", "\n    GetDlgItemText(IDC_EDIT3, ss);", "\n    char *p = (LPSTR)(LPCTSTR)ss;", "\n    for (int t = 0; p[t] != '\\0'; t++)", "\n    {", "\n        for (; p[c] != ' '; c++)", "\n        {", "\n            arr[n++] = p[c];", "\n        }", "\n        m++;", "\n        arr[n] = '\\0';", "\n        temp = atoi(arr);//将数组转化为double；", "\n        ADD_Number += temp;", "\n        t = c;", "\n        arr[1024] = { 0 };", "\n        n = 0;", "\n    }", "\n    ADD_Number = ADD_Number / m;", "\n    m_avr.Format(_T(\"%d\"), ADD_Number);", "\n\n", "UpdateData(FALSE);\n"]], "Tag": "程序设计"}
{"Answer": "String productNameInput = request.getParameter(\"productName\");\r\n        String productName=null;\r\n        if(null != productNameInput\r\n        \t\t&amp;&amp; !\"\".equals(productNameInput)) {\r\n        \tproductName=new String(productNameInput.getBytes(\"ISO-8859-1\"),\"utf-8\");\r\n        \t// 第一种方法：继续处理自己的业务\r\n        }else {\r\n        \tthrow new Exception(\"productName参数不能为空！\");\r\n        }\r\n        if(null != productName) {\r\n        \t// 如果用第一种方法，这个判断就不要了\r\n        \t// 第二种方法，在这里判断productName\r\n        }", "Konwledge_Point": "异常处理", "Question": ["图中的空指针异常应该如何处理？", ["\n\n", "这种空指针异常应该如何处理？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;请采纳。点击我回答右上角【采纳】按钮。&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; T1 {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            Scanner in&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入正整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; num&amp;#61;in.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (num&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((num%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                    System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(num%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;&amp;#43;&amp;#43;;\n                }\n                num/&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            }\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;个数为&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (Exception e){\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入不合法&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;public &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Animal&lt;/span&gt; &lt;/span&gt;{\n    public &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; void sleep();\n    public void goSleep(){\n        sleep();\n    }\n}\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Bird&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Animal&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    public void sleep() {\n        &lt;span class=\"hljs-type\"&gt;System&lt;/span&gt;.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;Bird sleeps in tree&amp;#34;&lt;/span&gt;);\n    }\n}\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Fish&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Animal&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    public void sleep() {\n        &lt;span class=\"hljs-type\"&gt;System&lt;/span&gt;.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;Fish sleeps in water&amp;#34;&lt;/span&gt;);\n    }\n}\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Person&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Animal&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    public void sleep() {\n        &lt;span class=\"hljs-type\"&gt;System&lt;/span&gt;.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;Person sleeps in bed&amp;#34;&lt;/span&gt;);\n    }\n}\npublic &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;T3&lt;/span&gt; &lt;/span&gt;{\n    public static void main(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args) {\n        &lt;span class=\"hljs-type\"&gt;Bird&lt;/span&gt; bird&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Bird&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;Fish&lt;/span&gt; fish&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Fish&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;Person&lt;/span&gt; person&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Person&lt;/span&gt;();\n        bird.goSleep();\n        fish.goSleep();\n        person.goSleep();\n    }\n    public &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Animal&lt;/span&gt; &lt;/span&gt;{\n        public &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; void sleep();\n        public void goSleep(){\n            sleep();\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["程序设计技术 题求答案", ["设计一个主类T2,将源代码保存至T2.java,要求从命令行参数获取一个正整数,以此正整数作为数量,生成多个100以内的随机数,找出这些随机数中的偶数,将这些偶数存入文本文件“EvenNumber.txt”,计算这些偶数的个数,并将这些偶数及其个数输出到屏幕中,要求处理由于输入错误引起的异常。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;swap(ap,bp)&amp;#xff0c;把*号去掉啊。参数要求是指针&amp;#xff0c;你加 * 号后就是字符串的第一个字符了。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["为什么代码无误，一运行就会出现“引发了异常: 写入访问权限冲突。 **_Left** 是 0x129B30”？", ["\n", "/*9.3 编制程序，调用传递引用的参数，实现两个字符串变量的交换。例如开始：\nchar *ap=”hello”;\nchar *bp=”how are you?”;\n交换的结果使得ap和bp指向的内容分别为：\nap:”how are you?”\nbp:”hello”\n*/", "\n\n", "#", "include", "<iostream>", "\n", "#", "include", "<string>", "\n", "#", "include", "<math.h>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "swap", "(", "char", " *&x,", "char", " *&y)", "{\n    ", "char", " *temp;\n    temp = x;\n    x = y;\n    y = temp;\n}\n", "void", " ", "main", "()", " ", "{\n    ", "char", " *ap= ", "\"hello\"", ";\n    ", "char", " *bp = ", "\"how are you?\"", ";\n    cout << ", "\"*ap=\"", " << ap << endl;\n    cout << ", "\"*bp=\"", " << bp << endl;\n    ", "swap", "(*ap,*bp);\n    cout << ", "\"交换后为：\"", " << endl;\n    cout << ", "\"*ap=\"", " <<ap<< endl;\n    cout << ", "\"*bp=\"", " <<bp<< endl;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;api看了下没有加载失败的事件配置&amp;#xff0c;可以自己新增个配置&amp;#xff0c;改源代码给img对象添加onerror事件为配置的事件就可以处理图片加载异常事件了。可以看下面的示例&amp;#xff0c;Viewer.js文件已经修改过&amp;#xff0c;题主可以自行下载&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/05119770844618.gif\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://www.w3dev.cn/demo/viewerjs/\" id=\"textarea_1644807364637_1644807791961_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Viewer.js&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.w3dev.cn/demo/viewerjs/&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/425672214446141.png\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["怎么处理viewerjs加载图片不存在时显示404的异常？", ["怎么处理viewerjs加载图片不存在时显示404的异常？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;好像是数据库版本问题&amp;#xff0c;请参考:&lt;a href=\"https://blog.csdn.net/shaock2018/article/details/112848864\" id=\"textarea_1652102686130_1652102874804_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/shaock2018/article/details/112848864&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq_44077791/article/details/104806528&amp;#xff0c;看下吧&amp;#xff0c;试下\" id=\"textarea_1652102686130_1652102874804_1\"&gt;https://blog.csdn.net/qq_44077791/article/details/104806528&amp;#xff0c;看下吧&amp;#xff0c;试下&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["为什么JSP连接数据库会出现这样的问题", ["问题遇到的现象和发生背景", "\n", "org.apache.jasper.JasperException: 在 [16] 行处理 [/NewFile.jsp] 时发生异常", "\n", "\n", "问题相关代码", "\n", "<%@ ", "page", " language=", "\"java\"", " contentType=", "\"text/html; charset=UTF-8\"", "\n    pageEncoding=", "\"UTF-8\"", "%>\n<%@ ", "page", " import=", "\"java.sql.*\"", "%>\n<html>\n<head>\n    <", "title", ">通过JSP打开数据表</", "title", ">\n</head>\n<body>\n<%  \n    ", "out", ".pr", "int", "(", "\"JSP\"", ");\n     Class.forName(", "\"com.mysql.cj.jdbc.Driver\"", ");  //驱动程序名\n    String url=", "\"jdbc:mysql://localhost:3306/scott?\"", "+\n     ", "\"useSSL=false&serverTimezone=CST&characterEncoding=utf-8\"", "; //数据库名 \n    String user = ", "\"root\"", ";  //数据库用户名\n    String password = ", "\"123456\"", ";  //数据库用户密码\n    Connection conn = DriverManager.getConnectio", "n", "(url, user, password);//连接状态\n    ", "if", "(conn != ", "null", "){\n        ", "out", ".pr", "int", "(", "\"数据库连接成功！\"", ");\n        ", "out", ".pr", "int", "(", "\"<br />\"", ");\n        Statement stmt = ", "null", ";  \n        ResultSet rs = ", "null", ";  \n        String sql = ", "\"SELECT *FROM emp;\"", ";  //查询语句\n        stmt = conn.createStatement();  \n        rs = stmt.executeQuery(sql);  \n        ", "out", ".pr", "int", "(", "\"查询结果：\"", ");  \n        ", "out", ".pr", "int", "(", "\"<br />\"", ");  \n        ", "out", ".printl", "n", "(", "\"姓名\"", "+", "\"  \"", "+", "\"工作 \"", "+", "\"  \"", "+", "\"薪金\"", ");  \n        ", "out", ".pr", "int", "(", "\"<br />\"", ");  \n        ", "while", " (rs.next()) {  \n            ", "out", ".printl", "n", "(rs.getString(", "\"ENAME\"", ")+", "\"   &nbsp  \"", "+rs.getString(", "\"JOB\"", ")+", "\"  &nbsp \"", "+rs.get", "Int", "(", "\"SAL\"", ")); //将查询结果输出  \n        }  \n    }\n    ", "else", "{  \n        ", "out", ".pr", "int", "(", "\"连接失败！\"", ");  \n    }\n%>   \n</body>\n</html>\n\n\n", "\n", "请问怎么改才能正常运行？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Demo 类&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;package&lt;/span&gt; exception;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * ClassName: Demo\n * date: 2022/11/17 13:31\n *\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; DingJiaxiong\n */&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Demo&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;div&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{\n\n        &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; res &amp;#61; a / b;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; res;\n\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可执行类&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;package &lt;span class=\"hljs-keyword\"&gt;exception&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * ClassName: Main\n * date: 2022/11/17 13:33\n *\n * &amp;#64;author DingJiaxiong\n */&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Main {\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args){\n\n        try {\n            &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; res &amp;#61; Demo.div(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(res);\n        }catch (&lt;span class=\"hljs-keyword\"&gt;Exception&lt;/span&gt; e){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;除零啦!&amp;#34;);\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e.toString());\n\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;System is over!&amp;#34;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果&lt;br /&gt;不除0&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/053905366866181.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;除0 了&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/897925366866127.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java基础问题提问", ["能帮忙看看这该怎么写嘛", "异常处理方法二：抛出异常1", "（1）定义Demo类，Demo中包含定义一个求两个整数相除的成员方法div(int a,int b)， 在方法div(int a,int b)上抛出一个Exception异常。", "（2）定义一个可执行类，该类中调用Demo中的成员方法div(4,0)时对系统抛出的异常情况进行处理，输出\"除零啦！\"的提示信息后，按处理捕获到的异常对象进行时的toString()方法操作输出异常信息。最后，系统输出\"System is over!\"的提示信息。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这句改为&amp;#xff1a;L-&amp;gt;date &amp;#61; new Elemtype[InitSize]; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["vsnew操作时出现未经处理的异常", ["0x00007FF7E26A1B31 处有未经处理的异常(在 数据结构常用算法.exe 中): 0xC0000005: 读取位置 0xFFFFFFFFFFFFFFFF 时发生访问冲突。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-comment\"&gt;/*\n接口\n*/&lt;/span&gt;\npublic interface Method {\n    void &lt;span class=\"hljs-constructor\"&gt;CircularArea(&lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n    void &lt;span class=\"hljs-constructor\"&gt;TriangleArea(&lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;z&lt;/span&gt;)&lt;/span&gt; throws TriangleException;\n}\n&lt;span class=\"hljs-comment\"&gt;/*\n实现类\n*/&lt;/span&gt;\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; MethodImpl implements Method{\n\n    &amp;#64;Override\n    public void &lt;span class=\"hljs-constructor\"&gt;CircularArea(&lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt; {\n        double p&amp;#61;&lt;span class=\"hljs-number\"&gt;3.14&lt;/span&gt;;\n        double area&amp;#61;p*r*r;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(area);\n    }\n\n    &amp;#64;Override\n    public void &lt;span class=\"hljs-constructor\"&gt;TriangleArea(&lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;z&lt;/span&gt;)&lt;/span&gt; throws TriangleException {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#43; y &amp;gt; z&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;x &amp;#43; z &amp;gt; y&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;y &amp;#43; z &amp;gt; x) {\n            double p &amp;#61; (x &amp;#43; y &amp;#43; z)&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n            double area &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Math&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;sqrt(p&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;(p - x)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;(p - y)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;(p - z));\n            &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(area);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            throw &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;TriangleException(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的数据不能构成三角形&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n        }\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;/*\n自定义异常\n*/&lt;/span&gt;\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; TriangleException extends Exception{\n    public &lt;span class=\"hljs-constructor\"&gt;TriangleException()&lt;/span&gt; {\n    }\n\n    public &lt;span class=\"hljs-constructor\"&gt;TriangleException(String &lt;span class=\"hljs-params\"&gt;message&lt;/span&gt;)&lt;/span&gt; {\n        super(message);\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;/*\nMain测试类\n*/&lt;/span&gt;\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Main {\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) throws TriangleException {\n        Method m&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;MethodImpl()&lt;/span&gt;;\n        Scanner sc&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;//圆&lt;/span&gt;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入圆的半径&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        double r&amp;#61;sc.next&lt;span class=\"hljs-constructor\"&gt;Byte()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆的面积为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        m.&lt;span class=\"hljs-constructor\"&gt;CircularArea(&lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------------&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//三角形&lt;/span&gt;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形边a:&amp;#34;&lt;/span&gt;);\n        double x&amp;#61;sc.next&lt;span class=\"hljs-constructor\"&gt;Byte()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形边b:&amp;#34;&lt;/span&gt;);\n        double y&amp;#61;sc.next&lt;span class=\"hljs-constructor\"&gt;Byte()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三角形边c:&amp;#34;&lt;/span&gt;);\n        double z&amp;#61;sc.next&lt;span class=\"hljs-constructor\"&gt;Byte()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;三角形的面积为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        m.&lt;span class=\"hljs-constructor\"&gt;TriangleArea(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;z&lt;/span&gt;)&lt;/span&gt;;\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;正常数据运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/743707720436127.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;异常数据:&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/325167720436164.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java的编程题，希望各位能解答解答", ["1、定义一个接口，包括两个方法：求三角形面积和求圆面积；", "2、自定义异常类：当三角形的两边长度之和小于第三边，抛出异常；", "3、定义一个类，实现上述接口，及异常处理；4、在PUBLIC CLASS中通过键盘输入相应的数值，    当发生异常时，程序会提示异常；    当没有异常发生时，程序会正确输出所求结果；"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;至少你a数组没有初始化为0 &amp;#xff0c;a[i]&amp;#43;&amp;#43;是不行的&lt;br /&gt;你这个word[i&amp;#43;j]和substr[i &amp;#43; j]没有道理啊&amp;#xff0c;怎么能保证word的长度能够大于i&amp;#43;j呢&amp;#xff1f;如果小于&amp;#xff0c;那你就是越界访问字符串了啊&lt;br /&gt;应该是word[i] &amp;#61;&amp;#61; substr[j]&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["无效参数传递给了将无效参数视为严重错误的函数", ["请问各位，这是怎么回事啊", "摸不清头脑，i+j为啥是无效参数啊？", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " a[", "100", "];\n", "void", " ", "find", "(string ,string )", ";\n", "int", " ", "main", "()", " ", "{\n    string ", "word", ";\n    string substr;\n    cin >>", "word", ">> substr;\n    ", "find", "(", "word", ", substr);\n}\n", "void", " ", "find", "(string ", "word", ",string substr)", " ", "{\n    ", "for", " (", "int", " i = ", "0", "; i < ", "word", ".", "size", "(); i++) {\n        ", "for", " (", "int", " j = ", "0", "; j < substr.", "size", "(); j++) {\n                ", "if", " (", "word", "[i+j] == substr[i + j])a[i]++;\n        }\n        ", "if", " (a[i] == substr.", "size", "())cout << i;\n    }\n}\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你这个类并不是Throwable的子类&amp;#xff0c;ExceptionHandler()注解&amp;#xff0c;value值必须是Throwable的子类或子类的子类等等&amp;#xff0c;必须要有继承关系&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["springboot配置报错怎么回事", ["springboot全局异常处理这里报错是怎么回事？alt加回车也没有解决办法呢"]], "Tag": "程序设计"}
{"Answer": "Element &lt;ehcache&gt; does not allow nested &lt;transactionManagerLookup&gt; elements.  \r\n\r\n&lt;cacheManagerEventListenerFactory class=\"\" properties=\"\"/&gt;   你把这个删掉试试\r\n\r\n或者下载我之前集成好的 拷贝过去用\r\n[url]http://jinnianshilongnian.iteye.com/blog/1423971[/url]", "Konwledge_Point": "异常处理", "Question": ["spring 和 Ehcache web做页面缓存配置出异常？", ["\n", "项目用的是spring mvc + hibernate 的结构。现在想用 Ehcache web做一个简单的页面缓存。网上找了很多例子但是就是报异常：", "\n", "Caused by: net.sf.ehcache.CacheException: Error configuring from file:/D:/workspace/sulai/webapp/WEB-INF/classes/ehcache.xml. Initial cause was Error configuring from input stream. Initial cause was null:90: Element <ehcache> does not allow nested <transactionManagerLookup> elements.\n    at net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:95)\n    at net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(ConfigurationFactory.java:131)\n    at net.sf.ehcache.CacheManager.parseConfiguration(CacheManager.java:241)\n    at net.sf.ehcache.CacheManager.init(CacheManager.java:190)\n    at net.sf.ehcache.CacheManager.<init>(CacheManager.java:183)\n    at net.sf.ehcache.CacheManager.create(CacheManager.java:343)\n    at net.sf.ehcache.CacheManager.getInstance(CacheManager.java:364)\n    at net.sf.ehcache.constructs.web.filter.SimplePageCachingFilter.getCacheManager(SimplePageCachingFilter.java:100)\n    at net.sf.ehcache.constructs.web.filter.CachingFilter.doInit(CachingFilter.java:83)\n    at net.sf.ehcache.constructs.web.filter.Filter.init(Filter.java:191)\n    ... 27 more", "\n", " 这是我的web.xml，是按照网上例子搞的。", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n   version=\"2.5\">\n   <!-- Shiro Filter -->\n   <filter>\n    <filter-name>shiroFilter</filter-name>\n    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n    <init-param>\n        <param-name>targetFilterLifecycle</param-name>\n        <param-value>true</param-value>\n    </init-param>\n   </filter>\n   <filter-mapping>\n    <filter-name>shiroFilter</filter-name>\n    <url-pattern>/*</url-pattern> \n   </filter-mapping>\n   <!-- 异常处理过滤器拦截所有请求/* 或可改成*.action -->\n   <filter> \n        <filter-name>SulaiExceptionFilter</filter-name> \n        <filter-class>com.sulai.core.exception.filter.SulaiExceptionFilter</filter-class> \n        <init-param> \n            <param-name>errorPage</param-name> \n            <param-value>/jsp/error/error.jsp</param-value> \n        </init-param> \n    </filter> \n    <filter-mapping> \n        <filter-name>SulaiExceptionFilter</filter-name> \n        <url-pattern>/*</url-pattern> \n    </filter-mapping>\n    <!-- Ehcache web 页面缓存过滤器 -->\n    <filter>  \n       <filter-name>PageCacheFilter</filter-name>  \n       <filter-class>net.sf.ehcache.constructs.web.filter.SimplePageCachingFilter</filter-class>  \n    </filter>  \n    <filter-mapping>  \n       <filter-name>PageCacheFilter</filter-name>  \n       <url-pattern>/*</url-pattern>  \n    </filter-mapping>\n   <!-- spring MVC 配置 -->\n   <servlet>\n    <servlet-name>spring</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <!-- 自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml -->\n    <init-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath:spring-servlet.xml</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n   </servlet>\n   <servlet-mapping>\n    <servlet-name>spring</servlet-name>\n    <url-pattern>*.action</url-pattern>\n   </servlet-mapping>\n   <!-- DWR ScriptSession过滤器 -->\n    <servlet>\n        <servlet-name>initScriptSessionListener</servlet-name>\n        <servlet-class>\n            com.sulai.message.util.InitScriptSession\n        </servlet-class>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <!--dwr servlet-->\n    <servlet>\n        <servlet-name>dwr-invoker</servlet-name>\n        <servlet-class>\n            org.directwebremoting.servlet.DwrServlet\n        </servlet-class>\n        <init-param>\n            <param-name>debug</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n             <param-name>crossDomainSessionSecurity</param-name>\n             <param-value>false</param-value>\n        </init-param>\n      <init-param>\n            <param-name>allowScriptTagRemoting</param-name>\n            <param-value>true</param-value>\n      </init-param> \n        <init-param>\n            <param-name>pollAndCometEnabled</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>activeReverseAjaxEnabled</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>org.directwebremoting.extend.ServerLoadMonitor</param-name>\n            <param-value>org.directwebremoting.impl.PollingServerLoadMonitor</param-value>\n        </init-param>\n        <init-param>\n            <param-name>disconnectedTime</param-name>\n            <param-value>60000</param-value> \n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>dwr-invoker</servlet-name>\n        <url-pattern>/dwr/*</url-pattern>\n    </servlet-mapping>\n    <!-- Spring log4j加载 -->\n    <context-param>\n        <param-name>webAppRootKey</param-name>\n        <param-value>webapp.root</param-value>\n   </context-param>\n   <context-param>    \n        <param-name>log4jConfigLocation</param-name>    \n        <param-value>classpath:log4j.xml</param-value>\n    </context-param>       \n    <context-param>    \n        <param-name>log4jRefreshInterval</param-name>    \n        <param-value>60000</param-value>    \n    </context-param> \n    <listener>    \n        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>    \n    </listener>\n   <!-- Spring配置 -->\n   <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n   </listener>\n   <!-- 定时器servletContext加载 -->\n   <listener>\n    <listener-class>com.sulai.util.jobs.JobContextListener</listener-class>\n   </listener>\n   <!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 -->\n   <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>\n        classpath:applicationContext.xml,\n        classpath:applicationContext-dao.xml,\n        classpath:applicationContext-shiro.xml,\n        classpath:messages.xml\n    </param-value>\n   </context-param>\n   <filter>\n    <filter-name>Set Character Encoding</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <init-param>  \n        <param-name>encoding</param-name>  \n        <param-value>utf8</param-value>  \n    </init-param>\n   </filter>\n   <filter-mapping>  \n    <filter-name>Set Character Encoding</filter-name>  \n    <url-pattern>/*</url-pattern>  \n   </filter-mapping>\n   <filter>\n    <filter-name>UrlRewriteFilter</filter-name>\n    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>\n    </filter>\n   <filter-mapping>\n    <filter-name>UrlRewriteFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n    <dispatcher>REQUEST</dispatcher>\n    <dispatcher>FORWARD</dispatcher>\n   </filter-mapping>\n   <!-- 404 自定义页面 -->\n   <error-page>  \n       <error-code>404</error-code>  \n       <location>  \n         /jsp/error/error.jsp\n       </location>  \n    </error-page>\n   <welcome-file-list>\n    <welcome-file>index.action</welcome-file>\n  </welcome-file-list>\n</web-app>", "\n", " 这是 ehcache.xml", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"ehcache.xsd\"\n         updateCheck=\"true\" monitoring=\"autodetect\"\n         dynamicConfig=\"true\">\n\n\n    <diskStore path=\"D:\\\\workspace\\\\sulai\\\\webapp\\\\pageCache\"/>\n\n    <cacheManagerEventListenerFactory class=\"\" properties=\"\"/>\n\n    <defaultCache\n            maxElementsInMemory=\"1000\"\n            eternal=\"false\"\n            timeToIdleSeconds=\"120\"\n            timeToLiveSeconds=\"120\"\n            overflowToDisk=\"true\"\n            maxElementsOnDisk=\"10000\"\n            diskSpoolBufferSizeMB=\"30\"\n            diskPersistent=\"false\"\n            diskExpiryThreadIntervalSeconds=\"120\"\n            memoryStoreEvictionPolicy=\"LRU\"\n            statistics=\"false\"\n            />\n\n    <cache name=\"PageCacheFilter\"\n           maxElementsInMemory=\"1000\"\n           maxElementsOnDisk=\"10000\"\n           eternal=\"false\"\n           overflowToDisk=\"true\"\n           diskSpoolBufferSizeMB=\"20\"\n           timeToIdleSeconds=\"300\"\n           timeToLiveSeconds=\"600\"\n           memoryStoreEvictionPolicy=\"LFU\"\n           transactionalMode=\"off\"\n            />\n\n\n</ehcache>", "\n", " 麻烦大神们看看哪里有问题？", "\n", " ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;语法错误 (操作符丢失) 在查询表达式 &amp;#39;用户名&amp;#61;&amp;#39;licb  &amp;#39;AND密码&amp;#61;&amp;#39;1234&amp;#39;AND类型&amp;#61;&amp;#39;管理员&amp;#39;&amp;#39; 中。&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;sql 语句错了&amp;#xff0c;检查下sql语句&amp;#xff0c; and 后面有空格&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["c#问题！！！！！！！！！！！！！！！！！！！！！！！！！！！！！", [" ", "\n\n", "语法错误 (操作符丢失) 在查询表达式 '用户名='licb  'AND密码='1234'AND类型='管理员'' 中。", "\n\n", " ", "\n\n", " ", "\n\n", "说明: ", "执行当前 Web 请求期间，出现未经处理的异常。请检查堆栈跟踪信息，以了解有关该错误以及代码中导致错误的出处的详细信息。", "\n", "\n", "异常详细信息: ", "System.Data.OleDb.OleDbException: 语法错误 (操作符丢失) 在查询表达式 '用户名='licb  'AND密码='1234'AND类型='管理员'' 中。", "\n", "\n", "源错误:", "\n", "\n", "只有在调试模式下进行编译时，生成此未经处理的异常的源代码才会显示出来。若要启用此功能，请执行以下步骤之一，然后请求 URL:<br />\n<br />\n1. 在产生错误的文件的顶部添加一条“Debug=true”指令。例如:<br />\n<br />\n  <%@ Page Language=\"C#\" Debug=\"true\" %><br />\n<br />\n或:<br />\n<br />\n2. 将以下的节添加到应用程序的配置文件中:<br />\n<br />\n<configuration><br />\n   <system.web><br />\n       <compilation debug=\"true\"/><br />\n   </system.web><br />\n</configuration><br />\n<br />\n请注意，第二个步骤将使给定应用程序中的所有文件在调试模式下进行编译；第一个步骤仅使该特定文件在调试模式下进行编译。<br />\n<br />\n重要事项: 以调试模式运行应用程序一定会产生内存/性能系统开销。在部署到生产方案之前，应确保应用程序调试已禁用。", "\n", "堆栈跟踪:", "\n ", "\n\n", "\n", "[OleDbException (0x80040e14): 语法错误 (操作符丢失) 在查询表达式 '用户名='licb  'AND密码='1234'AND类型='管理员'' 中。]\n   System.Data.OleDb.OleDbCommand.ExecuteCommandTextErrorHandling(OleDbHResult hr) +1216113\n   System.Data.OleDb.OleDbCommand.ExecuteCommandTextForSingleResult(tagDBPARAMS dbParams, Object& executeResult) +256\n   System.Data.OleDb.OleDbCommand.ExecuteCommandText(Object& executeResult) +216\n   System.Data.OleDb.OleDbCommand.ExecuteCommand(CommandBehavior behavior, Object& executeResult) +60\n   System.Data.OleDb.OleDbCommand.ExecuteReaderInternal(CommandBehavior behavior, String method) +164\n   System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior behavior) +115"]], "Tag": "程序设计"}
{"Answer": "通过返回的status属性可以进行判断。\r\n如果为200则正常。\r\n如果为500就是服务器发生错误。\r\n详细的错误代码可以参考以下内容：\r\n[url=http://blog.csdn.net/hunterxray/archive/2007/07/27/1711035.aspx]各类Http请求状态(status)及其含义 速查列表[/url]", "Konwledge_Point": "异常处理", "Question": ["ajax如何处理服务器端的异常或者错误？", ["在开发过程中，我碰见这种情况：web应用设置了session的超时时间限制，在允许时间范围内，进行操作，程序没有问题，但是当超时以后再去操作系统，ajax请求就不能正确处理，这里根本原因肯定是session过时了。但是这种错误在浏览器客户端应该怎么处理呢？推而广之，如果服务器端的出现异常或者错误了，返回的数据不是我们正常情况下所有需要的，我们又该如何处理呢？不知XDJM有没有很好的解决方案？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;lianxi1&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable constant_\"&gt;CPU&lt;/span&gt; cpu &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;CPU&lt;/span&gt;();\n        cpu.&lt;span class=\"hljs-title function_\"&gt;setSpeed&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;);\n        cpu.&lt;span class=\"hljs-title function_\"&gt;getSpeed&lt;/span&gt;();\n\n        &lt;span class=\"hljs-title class_\"&gt;HardDisk&lt;/span&gt; h &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HardDisk&lt;/span&gt;();\n        h.&lt;span class=\"hljs-title function_\"&gt;getAmount&lt;/span&gt;();\n\n        &lt;span class=\"hljs-variable constant_\"&gt;PC&lt;/span&gt; pc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;PC&lt;/span&gt;();\n        pc.&lt;span class=\"hljs-title function_\"&gt;setCpu&lt;/span&gt;(cpu);\n        pc.&lt;span class=\"hljs-title function_\"&gt;setHardDisk&lt;/span&gt;(h);\n        pc.&lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;();\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;CPU&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Double&lt;/span&gt; speed;\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Double&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getSpeed&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; speed;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setSpeed&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Double speed&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;speed&lt;/span&gt; &amp;#61; speed;\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HardDisk&lt;/span&gt; {\n        int amount;\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;HardDisk&lt;/span&gt;(){}\n\n        &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setAmount&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int m&lt;/span&gt;) {\n            amount &amp;#61; m;\n        }\n        int &lt;span class=\"hljs-title function_\"&gt;getAmount&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; amount;\n        }\n\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;PC&lt;/span&gt; {\n        &lt;span class=\"hljs-variable constant_\"&gt;CPU&lt;/span&gt; cpu;\n        &lt;span class=\"hljs-title class_\"&gt;HardDisk&lt;/span&gt; &lt;span class=\"hljs-variable constant_\"&gt;HD&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;PC&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;){}\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setCpu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;CPU c&lt;/span&gt;) {\n            cpu &amp;#61; c;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setHardDisk&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;HardDisk h&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable constant_\"&gt;HD&lt;/span&gt;&amp;#61;h;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n            &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cpu的速度&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;cpu.&lt;span class=\"hljs-title function_\"&gt;getSpeed&lt;/span&gt;());\n            &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;硬盘的容量&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-variable constant_\"&gt;HD&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getAmount&lt;/span&gt;());\n        }\n\n\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;上面的题目代码如下&amp;#xff0c;希望采纳&lt;br /&gt;建一个名为 Test 的class&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Test&lt;/span&gt; {\n\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Animal&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; String name;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n        &lt;span class=\"hljs-keyword\"&gt;final&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;weight&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n\n        &lt;span class=\"hljs-comment\"&gt;// 无参构造方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Animal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 有参构造方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Animal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String name, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age)&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// get方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; String &lt;span class=\"hljs-title function_\"&gt;getName&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; name;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// set方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setName&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String name)&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getAge&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; age;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setAge&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age)&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 输出信息的方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;showMessage&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n            System.out.println(name &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &amp;#43; age &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;岁啦&amp;#34;&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 接口&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;interface&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Flyable&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;maxSpeed&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n\n        &lt;span class=\"hljs-comment\"&gt;// 输出最大飞行速度&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;showFlySpeed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 子类&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Eagle&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Animal&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Flyable&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;// 重载父类构造方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Eagle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String name, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age)&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;(name, age);\n        }\n\n        &lt;span class=\"hljs-comment\"&gt;// 重写Flyable接口的方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;showFlySpeed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;最快飞行速度为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; maxSpeed);\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 抽象类&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;abstract&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Pigeon&lt;/span&gt; {\n        String name;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n\n        Pigeon(String name, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age) {\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n            &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 测试类&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;// Eagle类测试&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;Eagle&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;eagle&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Eagle&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;小鹰&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        eagle.showMessage();\n        eagle.showFlySpeed();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/996576312356198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["怎么从以下10个中随机挑选5个进行程序编写", ["包含类的封装，getter/setter方法。", "包含构造方法和构造方法的重载。", "包含继承，方法重写。", "包含抽象类和接口。", "包含异常处理机制。", "包含自定义异常。", "包含super，final关键字。", "包含多态。", "包含4个字符串处理方法。", "包含选择语句和循环语句"]], "Tag": "程序设计"}
{"Answer": "用IOError替换FileNotFoundError，\r\n另外，查看文件是否存在可以用\r\nimport os.path\r\nos.path.isfile(fname)", "Konwledge_Point": "异常处理", "Question": ["Python2.7 处理FileNotFoundError异常", ["读取不存在的文件alice.txt", "\n\n", "#!/usr/bin/env python", "\n\n", "-*- coding: utf-8 -*-", "\n\n", "filename='alice.txt'", "\ntry:", "\n    with open(filename) as file_object:", "\n        contents=file_object.read()", "\nexcept FileNotFoundError:", "\n    message=\"Sorry,the file \"+filename+\" does not exist.\"", "\n    print(message)", "\n\n", "\n请问各位大神这是什么情况~"]], "Tag": "程序设计"}
{"Answer": "package mathtest;\r\nimport java.awt.Color;\r\n\r\nimport java.awt.Container;\r\nimport java.awt.Dimension;\r\nimport java.awt.Font;\r\nimport java.awt.GridLayout;\r\nimport java.awt.Toolkit;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.KeyAdapter;\r\nimport java.awt.event.KeyEvent;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.lang.reflect.Field;\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport javax.swing.JButton;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.JOptionPane;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JTextField;\r\nimport javax.swing.Timer;\r\n/**\r\n * @author xxx [hushaorei@163.com]\r\n */\r\npublic class MathTest implements ActionListener {\r\n\tprivate int totalTime = 5 * 60;//考试总用时，单位秒(可修改)\r\n\tprivate Font defaltFont = new Font(\"微软雅黑\",0,13);//(可修改)\r\n\tprivate int questionCount = 10;//题目的数量(可修改)\r\n\tprivate int TestLimit = 100;//限制在100以内运算(可修改)\r\n\tprivate String gradeFileUrl = \"classpath:/grade.txt\";//成绩打印地址(可修改，可以为绝对路径)\r\n\tprivate boolean canSubmit;//未答完能否提交，默认false不可提交(可修改)\r\n\tprivate JFrame frame;\r\n\tprivate Container contentPane;\r\n\tprivate JLabel timeLabel;//显示时间\r\n\tprivate Timer timer;//计时器\r\n\tprivate String[] operators = new String[]{\"＋\",\"－\",\"×\",\"÷\"};\r\n\tprivate int testStatus = 0;//考试状态  0：未开始，1：正在考试，2结束\r\n\tprivate Date startTime;//开始答题时间\r\n\tprivate Date submitTime;//提交时间\r\n\tprivate List&lt;Question&gt; questions = new ArrayList&lt;Question&gt;();\r\n\tprivate Question currentQuestion;//当前显示试题\r\n\tprivate JPanel panel;//显示运算区\r\n\tprivate JLabel questionSort;//显示第几题\r\n\tprivate JTextField firstNumField;//显示第一个数\r\n\tprivate JLabel signLabel;//显示运算符\r\n\tprivate JTextField secondNumField;//显示第二个数\r\n\tprivate JLabel equalLabel;//显示等号\r\n\tprivate JTextField resultNumField;//显示结果\r\n\tprivate JPanel btnPanel;//显示按钮\r\n\tprivate JButton preBtn;//上一题(或开始)\r\n\tprivate JButton nextBtn;//下一题(或提交)\r\n\tpublic MathTest() {\r\n\t\tint width = 400;//界面宽度\r\n\t\tint height = 200;//界面高度\r\n\t\tframe = new JFrame(\"数学考试\");\r\n\t\tToolkit toolkit = Toolkit.getDefaultToolkit();\r\n\t\tint x = (toolkit.getScreenSize().width - width) / 2;\r\n\t\tint y = (toolkit.getScreenSize().height - height) / 2;\r\n\t\tframe.setBounds(x, y, width, height);\r\n\t\tframe.setResizable(false);\r\n\t\tcontentPane = frame.getContentPane();\r\n\t\tcontentPane.setLayout(new GridLayout(3, 1, 0, 0));\r\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\t\tinit();\r\n\t}\r\n\t//获得显示剩余时间的字符串\r\n\tpublic String getTimeString(int currentTime) {\r\n\t\tint minute = currentTime / 60;\r\n\t\tint second = currentTime % 60;\r\n\t\treturn (minute==0?\"\":minute+\"分\")+(second&lt;10?(\"0\"+second):second)+\"秒\";\r\n\t}\r\n\t\r\n\tprivate void init() {\r\n\t\ttimeLabel = new JLabel(\"剩余时间：\" + getTimeString(totalTime), JLabel.CENTER);\r\n\t\tpanel = new JPanel();\r\n\t\tquestionSort = new JLabel(\"\");\r\n\t\tfirstNumField = new JTextField();\r\n\t\tfirstNumField.setHorizontalAlignment(JTextField.CENTER);\r\n\t\tfirstNumField.setPreferredSize(new Dimension(90, 30));\r\n\t\tfirstNumField.setEditable(false);\r\n\t\tfirstNumField.setBackground(Color.WHITE);\r\n\t\tsignLabel = new JLabel(\"+\");\r\n\t\tsecondNumField = new JTextField();\r\n\t\tsecondNumField.setHorizontalAlignment(JTextField.CENTER);\r\n\t\tsecondNumField.setPreferredSize(new Dimension(90, 30));\r\n\t\tsecondNumField.setEditable(false);\r\n\t\tsecondNumField.setBackground(Color.WHITE);\r\n\t\tequalLabel = new JLabel(\"=\");\r\n\t\tresultNumField = new JTextField();\r\n\t\tresultNumField.setHorizontalAlignment(JTextField.CENTER);\r\n\t\tresultNumField.setPreferredSize(new Dimension(90, 30));\r\n\t\tresultNumField.addKeyListener(new KeyAdapter() {\r\n\t\t\tpublic void keyTyped(KeyEvent e) {\r\n\t\t\t\tint temp = e.getKeyChar();\r\n\t\t\t\tif (temp &gt; 57 || temp &lt; 48 || resultNumField.getText().length()&gt;1) {\r\n\t\t\t\t\te.consume();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tbtnPanel = new JPanel();\r\n\t\tbtnPanel.setLayout(new GridLayout(1, 2, 0, 0));\r\n\t\tpreBtn = new JButton(\"开始考试\");\r\n\t\tpreBtn.addActionListener(this);\r\n\t\tpreBtn.setFocusable(false);\r\n\t\tnextBtn = new JButton(\"提交\");\r\n\t\tnextBtn.setFocusable(false);\r\n\t\tnextBtn.addActionListener(this);\r\n\t\ttimer = new Timer(1000, this);\r\n\t\tpanel.add(questionSort);\r\n\t\tpanel.add(firstNumField);\r\n\t\tpanel.add(signLabel);\r\n\t\tpanel.add(secondNumField);\r\n\t\tpanel.add(equalLabel);\r\n\t\tpanel.add(resultNumField);\r\n\t\tpanel.setVisible(false);\r\n\t\tbtnPanel.add(preBtn);\r\n\t\tbtnPanel.add(nextBtn);\r\n\t\tcontentPane.add(timeLabel);\r\n\t\tcontentPane.add(panel);\r\n\t\tcontentPane.add(btnPanel);\r\n\t\tsetDefaultFont(defaltFont);\r\n\t}\r\n\t//设置默认字体样式\r\n\tprivate void setDefaultFont(Font defaltFont) {\r\n\t\tField[] fields = this.getClass().getDeclaredFields();\r\n\t\tfor (Field field : fields) {\r\n\t\t\ttry {\r\n\t\t\t\tContainer container = null;\r\n\t\t\t\tfield.setAccessible(true);\r\n\t\t\t\tif (field.get(this) instanceof Container) {\r\n\t\t\t\t\tcontainer = (Container) field.get(this);\r\n\t\t\t\t\tcontainer.setFont(defaltFont);\r\n\t\t\t\t}\r\n\t\t\t\tfield.setAccessible(false);\r\n\t\t\t} catch (IllegalArgumentException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t} catch (IllegalAccessException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic void show() {\r\n\t\tframe.setVisible(true);\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void actionPerformed(ActionEvent e) {\r\n\t\tObject obj = e.getSource();\r\n\t\tif (obj == preBtn) {\r\n\t\t\tif (testStatus == 0) {\r\n\t\t\t\tstartTest();\r\n\t\t\t} else if (testStatus == 1) {\r\n\t\t\t\tint sort = currentQuestion.getSort();\r\n\t\t\t\tif (sort == 10) {\r\n\t\t\t\t\tnextBtn.setText(\"下一题\");\r\n\t\t\t\t}\r\n\t\t\t\tif (sort == 1) {\r\n\t\t\t\t\tJOptionPane.showMessageDialog(null, \"已经是第一题了！\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetResult();\r\n\t\t\t\t\tcurrentQuestion = questions.get(sort - 2);\r\n\t\t\t\t\tchangeQuestion();//上一题\r\n\t\t\t\t}\r\n\t\t\t} else if (testStatus == 2) {\r\n\t\t\t\tint confirm = JOptionPane.showConfirmDialog(null, \"是否进行下一场考试？\");\r\n\t\t\t\tif (confirm == JOptionPane.YES_OPTION) {\r\n\t\t\t\t\tquestions.clear();\r\n\t\t\t\t\tstartTest();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (obj == nextBtn) {\r\n\t\t\tif (testStatus == 1) {\r\n\t\t\t\tint sort = currentQuestion.getSort();\r\n\t\t\t\tif (sort == 9) {\r\n\t\t\t\t\tnextBtn.setText(\"提交\");\r\n\t\t\t\t} else if (sort == 10) {\r\n\t\t\t\t\tsetResult();\r\n\t\t\t\t\tint count = 0;//未答的题目数量\r\n\t\t\t\t\tfor (Question question : questions) {\r\n\t\t\t\t\t\tif (question.getResult() == null) {\r\n\t\t\t\t\t\t\tcount ++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (count &gt; 0) {\r\n\t\t\t\t\t\tJOptionPane.showMessageDialog(null, \"您还有\"+ count + \"道题未答！\");\r\n\t\t\t\t\t\tif (! canSubmit) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tint confirm = JOptionPane.showConfirmDialog(null, \"是否提交试卷？\");\r\n\t\t\t\t\tif (confirm == JOptionPane.YES_OPTION) {\r\n\t\t\t\t\t\tsubmitAndPrintGrade();//提交打印成绩\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetResult();\r\n\t\t\t\tcurrentQuestion = questions.get(sort);\r\n\t\t\t\tchangeQuestion();//下一题\r\n\t\t\t} else if (testStatus == 0) {\r\n\t\t\t\tJOptionPane.showMessageDialog(null, \"考试还未开始！\");\r\n\t\t\t} else if (testStatus == 2) {\r\n\t\t\t\tJOptionPane.showMessageDialog(null, \"考试已经结束！\");\r\n\t\t\t}\r\n\t\t} else if (obj == timer) {\r\n\t\t\ttimeLabel.setText(\"剩余时间：\" + getTimeString(-- totalTime));\r\n\t\t\tif (totalTime == 0) {\r\n\t\t\t\tsubmitAndPrintGrade();\r\n\t\t\t\tJOptionPane.showMessageDialog(null, \"时间到，自动提交！\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate void submitAndPrintGrade() {\r\n\t\tpreBtn.setText(\"开始考试\");\r\n\t\ttestStatus = 2;\r\n\t\tsubmitTime = new Date();\r\n\t\ttimer.stop();\r\n\t\tString fileUrl = null;\r\n\t\tif (gradeFileUrl.startsWith(\"classpath:/\")) {\r\n\t\t\tString classPathUrl = this.getClass().getResource(\"/\").getPath();\r\n\t\t\tclassPathUrl = classPathUrl.substring(1, classPathUrl.length());//去除第一个'/'\r\n\t\t\tfileUrl = gradeFileUrl.replaceAll(\"classpath:\", classPathUrl);\r\n\t\t\tif (classPathUrl.contains(\"%\")) {\r\n\t\t\t\tSystem.err.println(\"路径中可能存在中文或空格！\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfileUrl = gradeFileUrl;\r\n\t\t}\r\n\t\tFile gradeFile = new File(fileUrl);\r\n\t\tif (! gradeFile.exists()) {\r\n\t\t\ttry {\r\n\t\t\t\tgradeFile.createNewFile();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\tPrintWriter writer = null;\r\n\t\ttry {\r\n\t\t\tFileWriter fw = new FileWriter(gradeFile,true);\r\n\t\t\twriter = new PrintWriter(fw);\r\n\t\t\tString text = \"------------------------------------------------------\";\r\n\t\t\twriter.println(text);\r\n\t\t\tDateFormat df = new SimpleDateFormat(\"YYYY年MM月dd日  HH时mm分ss秒\");\r\n\t\t\ttext = \"开始答题时间：\" + df.format(startTime);\r\n\t\t\twriter.println(text);\r\n\t\t\ttext = \"结束答题时间：\" + df.format(submitTime);\r\n\t\t\twriter.println(text);\r\n\t\t\tlong usedTime = submitTime.getTime() - startTime.getTime();\r\n\t\t\tlong minutes = usedTime / 1000 / 60;\r\n\t\t\tlong seconds = (usedTime - minutes * 1000 * 60) / 1000;\r\n\t\t\tlong mseconds = usedTime - minutes * 1000 * 60 - seconds * 1000;\r\n\t\t\ttext = \"总共用时：\" + minutes + \"分\" + seconds + \"秒\" + mseconds + \"毫秒\";\r\n\t\t\twriter.println(text);\r\n\t\t\tint count = 0;//答对题目数\r\n\t\t\tfor (Question question : questions) {\r\n\t\t\t\tif (question.getResult()!=null&amp;&amp;question.getResult()==question.getRealResult()) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tString accuracy = (int)(count*100/questionCount) + \"%\";//正确率\r\n\t\t\ttext = \"共\"+questionCount+\"题，答对\"+count+\"道，答错\"+(questionCount-count)\r\n\t\t\t\t\t+\"道，正确率：\"+ accuracy;\r\n\t\t\twriter.println(text);\r\n\t\t\twriter.println();\r\n\t\t\ttext = \"序号\\t题目\\t\\t正确答案\\t批改\";\r\n\t\t\twriter.println(text);\r\n\t\t\tfor (int i = 1; i &lt; questions.size()+1; i ++) {\r\n\t\t\t\tQuestion q = questions.get(i-1);\r\n\t\t\t\tString correct = (q.getResult()!=null&amp;&amp;q.getRealResult()==q.getResult())?\"√\":\"×\";\r\n\t\t\t\ttext = \"第\"+numStr(i)+\"道：\\t\"+numStr(q.getFirstNum())+q.getOperator()\r\n\t\t\t\t+numStr(q.getSecondNum())+\" = \"+(q.getResult()==null?\"未答\":numStr(q.getResult()))+\"\\t\"+\r\n\t\t\t\tnumStr(q.getRealResult())+\"\\t\"+correct;\r\n\t\t\t\twriter.println(text);\r\n\t\t\t}\r\n\t\t\ttext = \"------------------------------------------------------\";\r\n\t\t\twriter.println(text);\r\n\t\t\twriter.println();\r\n\t\t\twriter.flush();\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} finally {\r\n\t\t\tif (writer != null)writer.close();\r\n\t\t}\r\n\t}\r\n\tprivate String numStr(int number) {\r\n\t\treturn number&lt;10?(\" \"+number+\" \"):(\"\"+number);\r\n\t}\r\n\t//开始考试\r\n\tprivate void startTest() {\r\n\t\t//先初始化题目\r\n\t\tfor (int i = 0; i &lt; questionCount; i++) {\r\n\t\t\t//随机0-3，得到运算符\r\n\t\t\tString operator = operators[(int)(Math.random()*4)];\r\n\t\t\t//随机第一个数0-99\r\n\t\t\tint firstNum = (int)(Math.random()*TestLimit);\r\n\t\t\t//随机第二个数0-99\r\n\t\t\tint secondNum = (int)(Math.random()*TestLimit);\r\n\t\t\tInteger result = null;\r\n\t\t\tif (\"＋\".equals(operator)) {\r\n\t\t\t\tresult = firstNum + secondNum;\r\n\t\t\t\twhile (result &gt;= 100) {\r\n\t\t\t\t\tfirstNum = (int)(Math.random()*TestLimit);\r\n\t\t\t\t\tsecondNum = (int)(Math.random()*TestLimit);\r\n\t\t\t\t\tresult = firstNum + secondNum;\r\n\t\t\t\t}\r\n\t\t\t} else if (\"－\".equals(operator)) {\r\n\t\t\t\tif (firstNum &lt; secondNum) {\r\n\t\t\t\t\tint temp = firstNum;\r\n\t\t\t\t\tfirstNum = secondNum;\r\n\t\t\t\t\tsecondNum = temp;\r\n\t\t\t\t}\r\n\t\t\t\tresult = firstNum - secondNum;\r\n\t\t\t} else if (\"×\".equals(operator)) {\r\n\t\t\t\tresult = firstNum * secondNum;\r\n\t\t\t\twhile (result &gt;= 100) {\r\n\t\t\t\t\tfirstNum = (int)(Math.random()*TestLimit);\r\n\t\t\t\t\tsecondNum = (int)(Math.random()*TestLimit);\r\n\t\t\t\t\tresult = firstNum * secondNum;\r\n\t\t\t\t}\r\n\t\t\t} else if (\"÷\".equals(operator)) {\r\n\t\t\t\twhile (secondNum == 0) {\r\n\t\t\t\t\tsecondNum = (int)(Math.random()*(TestLimit-1)+1);\r\n\t\t\t\t}\r\n\t\t\t\tresult = firstNum % secondNum;\r\n\t\t\t\twhile (result != 0) {\r\n\t\t\t\t\tfirstNum = (int)(Math.random()*(TestLimit-1)+1);\r\n\t\t\t\t\tsecondNum = (int)(Math.random()*(TestLimit-1)+1);\r\n\t\t\t\t\tresult = firstNum % secondNum;\r\n\t\t\t\t}\r\n\t\t\t\tresult = firstNum / secondNum;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new RuntimeException(\"不支持的运算符：\" + operator);\r\n\t\t\t}\r\n\t\t\tQuestion question = new Question();\r\n\t\t\tquestion.setSort(i + 1);\r\n\t\t\tquestion.setFirstNum(firstNum);\r\n\t\t\tquestion.setSecondNum(secondNum);\r\n\t\t\tquestion.setOperator(operator);\r\n\t\t\tquestion.setRealResult(result);\r\n\t\t\tquestions.add(question);\r\n\t\t}\r\n\t\ttestStatus = 1;//状态改为正在考试\r\n\t\tcurrentQuestion = questions.get(0);\r\n\t\tchangeQuestion();\r\n\t\tpanel.setVisible(true);\r\n\t\tpreBtn.setText(\"上一题\");\r\n\t\tnextBtn.setText(\"下一题\");\r\n\t\ttimer.start();//计时器开始\r\n\t\tstartTime = new Date();//开始时间\r\n\t}\r\n\t//设置显示题目\r\n\tprivate void changeQuestion() {\r\n\t\tint sort = currentQuestion.getSort();\r\n\t\tquestionSort.setText(\"第\"+(sort&lt;10?(\"0\"+sort):(sort+\"\"))+\"题：\");\r\n\t\tfirstNumField.setText(currentQuestion.getFirstNum()+\"\");\r\n\t\tsignLabel.setText(currentQuestion.getOperator());\r\n\t\tInteger result = currentQuestion.getResult();\r\n\t\tif (result == null) {\r\n\t\t\tresultNumField.setText(\"\");\r\n\t\t} else {\r\n\t\t\tresultNumField.setText(result.toString());\r\n\t\t}\r\n\t\tsecondNumField.setText(currentQuestion.getSecondNum()+\"\");\r\n\t}\r\n\t//将输入框的结果设置进question\r\n\tprivate void setResult() {\r\n\t\tif (!\"\".equals(resultNumField.getText().trim())) {\r\n\t\t\tcurrentQuestion.setResult(Integer.parseInt(resultNumField.getText().trim()));\r\n\t\t} else {\r\n\t\t\tcurrentQuestion.setResult(null);\r\n\t\t}\r\n\t}\r\n\tpublic static void main(String[] args) {\r\n\t\tnew MathTest().show();\r\n\t}\r\n}\r\nclass Question {\r\n\tprivate int sort;//第几道题\r\n\tprivate int firstNum;\r\n\tprivate int secondNum;\r\n\tprivate String operator;//运算符\r\n\tprivate Integer result;//输入的答案\r\n\tprivate int realResult;//真正答案\r\n\tpublic int getSort() {\r\n\t\treturn sort;\r\n\t}\r\n\tpublic void setSort(int sort) {\r\n\t\tthis.sort = sort;\r\n\t}\r\n\tpublic int getFirstNum() {\r\n\t\treturn firstNum;\r\n\t}\r\n\tpublic void setFirstNum(int firstNum) {\r\n\t\tthis.firstNum = firstNum;\r\n\t}\r\n\tpublic int getSecondNum() {\r\n\t\treturn secondNum;\r\n\t}\r\n\tpublic void setSecondNum(int secondNum) {\r\n\t\tthis.secondNum = secondNum;\r\n\t}\r\n\tpublic String getOperator() {\r\n\t\treturn operator;\r\n\t}\r\n\tpublic void setOperator(String operator) {\r\n\t\tthis.operator = operator;\r\n\t}\r\n\tpublic Integer getResult() {\r\n\t\treturn result;\r\n\t}\r\n\tpublic void setResult(Integer result) {\r\n\t\tthis.result = result;\r\n\t}\r\n\tpublic int getRealResult() {\r\n\t\treturn realResult;\r\n\t}\r\n\tpublic void setRealResult(int realResult) {\r\n\t\tthis.realResult = realResult;\r\n\t}\r\n}\r\n无聊花了半天写的，不涉及客户端服务端，数据库就更没有了，就写个文件记录，太费劲，不值当，总共就两个类。\r\n小伙伴可以自己修改一些参数，本来想弄个配置文件，想想就这么点东西，还是不弄了。", "Konwledge_Point": "异常处理", "Question": ["Java数学考试程序--在线等20c悬赏", ["实现一个数学考试程序（使用异常处理机制处理可能出现的异常）。要求如下：", "\n1、设计图形界面程序；", "\n2、随机出题，进行100以内的四则运算，每次考试限时5分钟；", "\n3、每次出10题，回答后提交，显示出错题目及回答正确率；", "\n4、可以保存考试历史记录，并能调出查看。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If the browser cleanly closes the connection, then read on the webssocket connection returns an error.  Cleanup the websocket connection as you would on any read error.&lt;/p&gt;\n\n&lt;p&gt;The application must PING the connection and expect the corresponding PONGs to detect other situations.  The &lt;a href=\"https://github.com/gorilla/websocket/tree/master/examples/chat\" rel=\"nofollow noreferrer\"&gt;chat example&lt;/a&gt; shows how to send PINGs and receive PONGs.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["golang websocket当浏览器意外关闭时如何通知", ["\n\n", "I am writing a websocket service in golang.\nThe program use gollira websocket to accept ws request, and in each request handler, it listen to rabbitmq queue for messages.", "\n\n", "The problem is, when i close browser window, the handler thread is still running, i guess there is an mechanism to be notified when connection disconnected.", "\n\n", "I try to listen to channel request.Context().Done(), when i doesn't work.", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"net/http\"\n\n    \"github.com/gorilla/websocket\"\n    \"github.com/streadway/amqp\"\n)\n\nvar (\n    addr     = \"localhost:9999\"\n    upgrader = websocket.Upgrader{\n        CheckOrigin: func(r *http.Request) bool { return true },\n    }\n)\n\nvar conn *amqp.Connection\n\nfunc watch(w http.ResponseWriter, r *http.Request) {\n    ns := r.URL.Query().Get(\"ns\")\n    if ns == \"\" {\n        return\n    }\n    c, err := upgrader.Upgrade(w, r, nil)\n    if err != nil {\n        log.Print(\"upgrade:\", err)\n        return\n    }\n    defer c.Close()\n\n    ch, err := conn.Channel()\n    failOnError(err, \"Failed to open a channel\")\n    defer ch.Close()\n\n    err = ch.ExchangeDeclare(\n        \"notify\", // name\n        \"fanout\",           // type\n        true,               // durable\n        false,              // auto-deleted\n        false,              // internal\n        false,              // no-wait\n        nil,                // arguments\n    )\n    failOnError(err, \"Failed to declare an exchange\")\n\n    q, err := ch.QueueDeclare(\n        \"\",    // name\n        false, // durable\n        false, // delete when usused\n        true,  // exclusive\n        false, // no-wait\n        nil,   // arguments\n    )\n    failOnError(err, \"Failed to declare a queue\")\n\n    err = ch.QueueBind(\n        q.Name,             // queue name\n        ns,                 // routing key\n        \"dsm_tasks_notify\", // exchange\n        false,\n        nil)\n    failOnError(err, \"Failed to bind a queue\")\n\n    msgs, err := ch.Consume(\n        q.Name, // queue\n        \"\",     // consumer\n        true,   // auto-ack\n        false,  // exclusive\n        false,  // no-local\n        false,  // no-wait\n        nil,    // args\n    )\n    failOnError(err, \"Failed to register a consumer\")\n\n    for {\n        select {\n        case d := <-msgs:\n            err = c.WriteMessage(websocket.TextMessage, d.Body)\n            if err != nil {\n                log.Println(\"write:\", err)\n                break\n            }\n        case <-r.Context().Done():\n            log.Println(\"Disconnect\")\n            return\n        }\n    }\n\n}\n\nfunc failOnError(err error, msg string) {\n    if err != nil {\n        log.Fatalf(\"%s: %s\", msg, err)\n        panic(fmt.Sprintf(\"%s: %s\", msg, err))\n    }\n}\n\nfunc main() {\n    var err error\n    conn, err = amqp.Dial(\"amqp://guest:guest@localhost:5672/\")\n    failOnError(err, \"Failed to connect to RabbitMQ\")\n    defer conn.Close()\n\n    http.HandleFunc(\"/watch\", watch)\n    log.Fatal(http.ListenAndServe(addr, nil))\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一个数字&amp;#xff1a;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的数字大于0&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;/span&gt;:\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;你输入的数字小于等于0&amp;#39;&lt;/span&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;&lt;/span&gt;:\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的不是数字&amp;#xff01;&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["哪一位神仙朋友帮帮我吧", ["输入一个数字，判断是否大于0。使用try语句实现如果输入不是数字时的异常处理。"]], "Tag": "程序设计"}
{"Answer": "m_keyboarddevice估计不是正确的指针，你没有正确获取到。", "Konwledge_Point": "异常处理", "Question": ["求助0xC0000005: 读取位置 0x00000004 时发生访问冲突错误", ["void DInputClass::GetInput()", "\n{", "\n    HRESULT hr = m_KeyboardDevice->GetDeviceState(sizeof(m_keyBuffer), (void**)&m_keyBuffer);  //在这里提示错误了", "\n    //获取键盘输入消息", "\n    if(hr)", "\n    {", "\n        m_KeyboardDevice->Acquire();", "\n        m_KeyboardDevice->GetDeviceState( sizeof(m_keyBuffer),(LPVOID)m_keyBuffer );", "\n    }", "\n\n", "hr = m_MouseDevice->GetDeviceState(sizeof(DIMOUSESTATE), (void**)&m_MouseState); \n//获取鼠标输入消息\nif(hr)\n{\n    m_MouseDevice->Acquire();\n    m_MouseDevice->GetDeviceState( sizeof(DIMOUSESTATE), (void**)&m_MouseState);\n}\n", "\n\n", "}", "\n请问出了什么问题？在其他的程序可以跑。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Test {\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; String name;\n    \n    \n    &lt;span class=\"hljs-comment\"&gt;//1包含类的封装&amp;#xff0c;getter/setter方法。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; getAge() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; age;\n    }\n\n\n    &lt;span class=\"hljs-comment\"&gt;//1包含类的封装&amp;#xff0c;getter/setter方法。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; setAge(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n    }\n\n\n    &lt;span class=\"hljs-comment\"&gt;//1包含类的封装&amp;#xff0c;getter/setter方法。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; String getName() {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; name;\n    }\n\n\n    &lt;span class=\"hljs-comment\"&gt;//1包含类的封装&amp;#xff0c;getter/setter方法。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; setName(String name) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n    }\n\n     \n\n    &lt;span class=\"hljs-comment\"&gt;//2包含构造方法和构造方法的重载。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Test() {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;();\n    }\n    &lt;span class=\"hljs-comment\"&gt;//2包含构造方法和构造方法的重载。&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Test(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age, String name) {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n    }\n\n\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated method stub&lt;/span&gt;\n        Test test\n        &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Test(&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;);\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;name:&amp;#34;&lt;/span&gt;&amp;#43;test.getName()&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,age:&amp;#34;&lt;/span&gt;&amp;#43;test.getAge());\n        \n        &lt;span class=\"hljs-comment\"&gt;//3包含选择语句和循环语句&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;使用循环&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println((i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,name:&amp;#34;&lt;/span&gt;&amp;#43;test.getName()&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,age:&amp;#34;&lt;/span&gt;&amp;#43;test.getAge());\n        }\n        \n        &lt;span class=\"hljs-comment\"&gt;//3包含选择语句和循环语句&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;使用选择&amp;#xff1a;&amp;#34;&lt;/span&gt;);        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;.equals(test.getName())) {\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\&amp;#34;张三\\&amp;#34;.equals(test.getName())&amp;#61;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;.equals(test.getName())));\n        }\n        \n        &lt;span class=\"hljs-comment\"&gt;//4包含4个字符串处理方法。&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;4个字符串处理方法&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//字符串的长度&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;test.getName().length&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;test.getName().length());\n        &lt;span class=\"hljs-comment\"&gt;//返回字符串第一个下标的字符&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;test.getName().charAt(0)&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;test.getName().charAt(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;));\n        &lt;span class=\"hljs-comment\"&gt;//连接两个字符串&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;test.getName().concat(\\&amp;#34;是个歌唱家&amp;#xff01;\\&amp;#34;)&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;test.getName().concat(&lt;span class=\"hljs-string\"&gt;&amp;#34;是个歌唱家&amp;#xff01;&amp;#34;&lt;/span&gt;));\n        &lt;span class=\"hljs-comment\"&gt;//返回字符串指定下标到字符串末尾的子串&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;test.getName().substring(1)&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;test.getName().substring(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n        \n        &lt;span class=\"hljs-comment\"&gt;//5包含异常处理机制。&lt;/span&gt;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;异常处理机制&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            i &amp;#61; j/k;\n        }&lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;(ArithmeticException e){\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#61;j/k ,j&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,k&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;k&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;k&amp;#43;&amp;#34;&lt;/span&gt;,出现除&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;异常-ArithmeticException,&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;e.getMessage());\n        }\n        \n    }\n\n}\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/349364476256128.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java编程大家都来瞅一眼吧", ["需从以下10个中随机挑选5个进行程序编写", "\n", "包含类的封装，getter/setter方法。", "包含构造方法和构造方法的重载。", "包含继承，方法重写。", "包含抽象类和接口。", "包含异常处理机制。", "包含自定义异常。", "包含super，final关键字。", "包含多态。", "包含4个字符串处理方法。", "包含选择语句和循环语句"]], "Tag": "程序设计"}
{"Answer": "这里有2个层次的问题。\r\n1） 如何确定连接状态是否正常？   需要定时保活，类似keepalive\r\n2） 还需要事件循环监听读事件。 读到 &lt;=0 的时候，程序就知道异常了。\r\n\r\n两个都要有， 才能比较及时的检测到连接异常、并执行正确的关闭操作。", "Konwledge_Point": "异常处理", "Question": ["socket被动异常检测问题", ["tcp通信有如下情形：server启动线程事件循环，client连接成功后，关闭server事件循环，client主动关闭连接。此时，client已经断开连接，但server因为事件循环停掉的原因，其与client的socket状态并未得到更新、状态一切正常。请问该怎么处理？", "\n也就是说，客户端都不在了，但服务端还保存了一个到客户端的连接，且该连接状态还是正常的，按理这不应该啊！", "\n最常见的现象就是，频繁插拔网线，就有可能产生这种客户端都掉线了，而服务端却检测不到的情形。", "\n\n", "目前尝试过的方法有两个：", "\n1、setSocketOption(QAbstractSocket::KeepAliveOption,1);实际使用后，没有效果。", "\n2、waitForReadyRead；由源码可以得到仅此可以触发socket的disconnted信号，但调用后对readyRead又有影响，所以无法解决检测异常的问题。", "\n\n", "至于心跳机制，需要由自己定义的协议才可以实现，在别人已有的基础上，是无法实现的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;from&lt;/code&gt;前面的逗号多余了&amp;#xff0c;去掉&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/460398766256168.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["在sqlserver数据库中还能正确执行的sql语句，在Visual Studio中执行却报错了？怎么解决", ["\n", "上面的是sql语句       异常处理提示的是“from”  附近有语法错误，但是在sqlserver中还正常执行了                                "]], "Tag": "程序设计"}
{"Answer": "就用commons fileupload嘛\r\n不用配置那个,struts2默认都是选择commons fileupload,说明commons fileupload是最好的实现.\r\n\r\n解决问题才是王道!费那事做啥", "Konwledge_Point": "异常处理", "Question": ["struts2多文件上传的异常", ["各位大侠，我在按照 ", "http://www.techrss.cn/html/2009/02-05/206680.htm", " 的示例做多文件上传个过程中，出现了类构造异常的错误：", "\n\n", "[code=\"java\"]", "\nimportjava.io.*;", "\nimport com.opensymphony.xwork2.ActionSupport;", "\npublic class UploadMoreAction extends ActionSupport", "\n{", "\nprivate java.util.List＜File＞uploads;", "\nprivate java.util.List＜String＞fileNames;", "\nprivate java.util.List＜String＞uploadContentTypes;", "\npublic java.util.List＜String＞getUploadFileName()", "\n{", "\nreturnfileNames;", "\n}", "\npublic voidsetUploadFileName(java.util.List＜String＞fileNames)", "\n{", "\nthis.fileNames=fileNames;", "\n}", "\npublic java.util.List＜File＞getUpload()", "\n{", "\nreturnuploads;", "\n}", "\npublic void setUpload(java.util.List＜File＞uploads)", "\n{", "\nthis.uploads=uploads;", "\n}", "\npublic void setUploadContentType(java.util.List＜String＞contentTypes)", "\n{", "\nthis.uploadContentTypes=contentTypes;", "\n}", "\npublic java.util.List＜String＞getUploadContentType()", "\n{", "\nreturnthis.uploadContentTypes;", "\n}", "\n\n", "public String execute()throwsException", "\n{", "\nif(uploads!=null)", "\n{", "\ninti=0;", "\nfor(;i＜uploads.size();i++)", "\n{", "\njava.io.InputStreamis=newjava.io.FileInputStream(uploads.get(i));", "\njava.io.OutputStreamos=newjava.io.FileOutputStream(\"d:upload\"+fileNames.get(i));", "\nbytebuffer=newbyte[8192];", "\nintcount=0;", "\nwhile((count=is.read(buffer))＞0)", "\n{", "\nos.write(buffer,0,count);", "\n}", "\nos.close();", "\nis.close();", "\n}", "\n}", "\nreturnSUCCESS;", "\n}", "\n}", "\n[/code]", "\n\n", "在执行下面这句：", "\n[code=\"java\"]", "\njava.io.InputStreamis=newjava.io.FileInputStream(uploads.get(i));", "\n[/code]", "\n出现了下面的异常：", "\njava.lang.ClassCastException: java.lang.String", "\n\n", "我debug时发现，uploads类型变成了 XWorkList 类型，而不是前面的 File 类型。这个 list 里存储有上传的多个文件的本地路径，如：d:\\My Documents\\My Pictures\\3.jpg，d:\\My Documents\\My Pictures\\4.jpg, 但就是到这儿出错了。", "\n\n", "不知道各位大侠有没有碰到相类似的问题？望指点，多谢了。", "\n[b]问题补充：[/b]", "\n上面的 uploads 存储的是本地上传文件的地址，发现是我的 ", " 表单忘记了加  enctype=\"multipart/form-data\" 现在得到的 uploads 里存储的是上传后临时地址，如： \\upload\\upload__6c755bc7_120404cacce__8000_00000049.tmp，\\upload\\upload__6c755bc7_120404cacce__8000_00000050.tmp\n\n", "而且运行到 [code=\"java\"]", "\njava.io.InputStream is=newjava.io.FileInputStream(uploads.get(i));", "\n[/code]", "\n依然报错：", "\njava.lang.ClassCastException: java.lang.String ", "\n\n", "为什么 uploads 里存储的不是 File 类型呢？", "\n[b]问题补充：[/b]", "\n我使用的文件处理方式是：", "\n\n", "[code=\"java\"]", "\n[/code] "]], "Tag": "程序设计"}
{"Answer": "第8个参数对应的实体字段是什么类型的？", "Konwledge_Point": "异常处理", "Question": ["hibernate list查询 报类型转换异常", ["查询方法如下:", "\n    public List find(String hql, Object... param) {", "\n        Query q = this.getCurrentSession().createQuery(hql);", "\n        if (param != null && param.length > 0) {", "\n            for (int i = 0; i < param.length; i++) {", "\n                q.setParameter(i, param[i]);", "\n            }", "\n        }", "\n        return q.list();", "\n    }", "\n    执行q.list()的时候,会报String不能转换为Integer错误,hibernate源码打进去跟了一下,截图见附件.", "\n    find方法的param中,第8个参数是一个很长的加密字符串,hibernate在处理这个的时候,用到OrdinalParameterDescriptor类,第8个参数是设置的的查询条件第八个的类型却是IntegerType.导致报类型转换异常.", "\n    我跟了半天也没找到是在什么时候初始化OrdinalParameterDescriptor类设置值的,有这块的高手能否解答一下.", "\n    hibernate用的4.1.5sp1.尝试用最新的4.2进去也会报这个错."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;视频演示都掌握不了的话 &amp;#xff0c; 文字内容更难描述了。&lt;/p&gt;\n&lt;p&gt;模块 就是把有些代码集合起来&amp;#xff0c; 为了便于调用 及让整体逻辑更容易理解&lt;/p&gt;\n&lt;p&gt;异常处理&amp;#xff0c;就是我们的程序在处理过程中&amp;#xff0c;可能因为输入数据&amp;#xff0c;网络的问题&amp;#xff0c;造成程序不能按原先的逻辑运行&amp;#xff0c;需要进行处理或者展示给程序的运行者&lt;br /&gt;抛出&amp;#xff0c;就是把异常展示出来 &amp;#xff0c; 程序里就是丢给更上一层的模块处理。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["怎样理解python中的模块", ["我看视频录播，视频讲的模块还有异常处理和抛出 我都没听懂 哪位大能能帮我解答一下"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/xiaozhuyuan/p/7098235.html", "Konwledge_Point": "异常处理", "Question": ["js使用json.parse()如何处理空格,换行等特殊字符", ["js使用json.parse()如何处理空格,换行等特殊字符", "\n\n", " formData=JSON.parse(formData);\n", "\n\n", "我这样把字符串转换成对象,但是提示有Unexpected token异常.查看为有空行的关系;", "\n这个应该如何解决?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你不满足那个a&amp;lt;0&amp;#xff0c;程序没抛异常&lt;br /&gt;方法上那个throws AgeException是说你这个方法可能出现这种异常&amp;#xff0c;但并不一定就会出现&amp;#xff0c;你a现在不小于0&amp;#xff0c;就不会触发那个throw new AgeException(&amp;#34;有异常&amp;#xff0c;打印信息&amp;#34;);&lt;/p&gt;\n&lt;p&gt;你可以这么理解&amp;#xff0c;就是你这个方法里在某种情况下抛出异常&amp;#xff0c;在方法声明上throws&amp;#xff0c;是告诉你的调用者&amp;#xff0c;我这可能有异常&amp;#xff0c;你想好怎么处理。&lt;br /&gt;比如调用登录的方法吗&amp;#xff0c;用户登录的时候&amp;#xff0c;用户名不存在&amp;#xff0c;在程序逻辑上就是一种异常&amp;#xff0c;你就可以扔出去&amp;#xff0c;但是用户名存在的时候它就不报异常。可是调用登录方法的人就得考虑&amp;#xff0c;你出现异常后它怎么办。&lt;br /&gt;一般我们开发企业项目的时候&amp;#xff0c;会自定义异常&amp;#xff0c;这个异常会有一个code和一个message&amp;#xff0c;code就是状态码&amp;#xff0c;前端会根据不同的状态码做不同的跳转或者提示。&lt;/p&gt;\n&lt;p&gt;你在方法上throws&amp;#xff0c;是说我可能出现异常&amp;#xff0c;这个异常我方法内部不处理&amp;#xff0c;你们谁调用谁处理。然后方法里运行到throw new Exception的时候才会真的抛异常出去&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java编译异常throws处理方式", ["将异常throws给jvm后，jvm默认处理：打印异常信息，并中断程序，这我是知道的。", "那下面我自定义了一个编译异常，并在main方法中的if条件句抛出，编译器提示有编译异常；说明出现编译异常。", "我main方法throws异常后，编译器提示正常了；处理方式是让jvm处理异常。", "运行程序，程序正常运行，没有打印异常信息；那jvm也没处理啊。", "jvm收没收到异常呢？还是说根本没异常?没有异常那我用的throws方法throws的谁呢?", "收到的话应该直接打印呀，很困惑。", "编译器判断是否有编译异常是怎样判断的呢？很迷惑这个过程", "\n", "\npublic ", "class", " ", "ExceptionTest", " ", "{\n    public static void main(", "String", "[] args) ", "throws", " ", "AgeException", " {\n        int a = ", "1", ";\n        ", "if", " (a < ", "0", ") {\n            ", "//抛出一个编译异常", "\n            ", "throw", " ", "new", " ", "AgeException", "(", "\"有异常，打印信息\"", ");\n        }\n        ", "System", ".out.println(", "\"没有异常，打印个g\"", ");\n    }\n}\n", "//自定义AgeException编译异常,继承ioexception这个编译异常", "\n", "class", " ", "AgeException", " ", "extends", " ", "IOException", " ", "{\n    public ", "AgeException", "(", "String", " s) {\n        ", "super", "(s);\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;采纳我的&amp;#xff0c;我就告诉你哦。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/810561183076156.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["遇到异常不知道怎么处理", ["问题遇到的现象和发生背景", "\n", "我的解答思路和尝试过的方法 试着改进下去括号的部分和parse依旧不能得到理想的结果", "\n", "import", " java.util.*;\n\n", "public", " ", "class", " ", "TestMathExper_122090080", " {\n    ", "public", " ", "static", " String ", "A", "(String str)", " {", "// 预处理字符串", "\n        ", "String", " ", "str0", " ", "=", " str.replace(", "\" \"", ", ", "\"\"", ");\n        ", "String", " ", "str1", " ", "=", " str0.toString();\n        ", "char", " ", "a", " ", "=", " str1.charAt(", "1", ");\n        ", "if", " (a == ", "'-'", ") {\n             ", "String", " ", "k", " ", "=", "  ", "\"0\"", " + str1;\n             ", "return", " k;\n        } ", "else", " {\n            ", "return", " str1;\n        }\n\n    }\n\n    ", "public", " ", "static", " String ", "removekuohao", "(String str)", "{", "//去括号", "\n        ", "String", " ", "a1", " ", "=", " str;\n        ", "if", "(str.contains(", "\"[(]\"", ")){\n            ", "int", " ", "x0", " ", "=", "str.lastIndexOf(", "\"(\"", ");\n            ", "String", " ", "y0", " ", "=", " str.substring(x0+", "1", ",a1.length());\n            ", "int", " ", "x1", " ", "=", "y0.indexOf(", "\")\"", ");\n            ", "String", " ", "y1", " ", "=", " y0.substring(", "1", ", x1);\n            ", "String", " ", "p0", " ", "=", " Sanjiao(y1);\n            String final1;\n            ", "if", "(p0.contains(", "\"[(]\"", ")){\n                ", "String", " ", "p1", " ", "=", "p0.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                ", "String", " ", "p2", " ", "=", " Chengchu(p1);\n                ", "if", "(p2.contains(", "\"[(]\"", ")){\n                    ", "String", " ", "p3", " ", "=", "p2.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                    ", "String", " ", "p4", " ", "=", " Jiajian(p3);\n                    ", "if", "(p4.contains(", "\"[(]\"", ")){\n                        final1 =p4.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        final1 =p4;\n                    }}\n                ", "else", "{\n                    ", "String", " ", "p3", " ", "=", "Jiajian(p2);\n                    ", "if", "(p3.contains(", "\"[(]\"", ")){\n                        final1 =p3.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        final1 =p3;\n                    }\n                }\n                }\n            ", "else", " {\n                ", "String", " ", "p1", " ", "=", "Chengchu(p0);\n                ", "if", "(p1.contains(", "\"[(]\"", ")){\n                    ", "String", " ", "p2", " ", "=", "p1.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                    ", "String", " ", "p3", " ", "=", " Jiajian(p2);\n                    ", "if", "(p3.contains(", "\"[(]\"", ")){\n                        final1 =p3.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        final1 =p3;\n                    }}\n                ", "else", "{\n                    ", "String", " ", "p2", " ", "=", "Jiajian(p1);\n                    ", "if", "(p2.contains(", "\"[(]\"", ")){\n                        final1 =p2.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        final1 =p2;\n                    }\n                }\n\n            }\n            ", "int", " ", "Midlength", " ", "=", " x0 + y1.length() +", "2", ";\n            ", "String", " ", "Mid", " ", "=", " str.substring(x0,Midlength);\n            ", "String", " ", "str2", " ", "=", "str.replaceAll(Mid, final1);\n            ", "String", " ", "begin", " ", "=", "str2.toString();\n            ", "return", " removekuohao(begin) ;\n        }\n        ", "return", " a1;\n\n\n    }\n\n    ", "public", " ", "static", " String ", "Chengchu", "(String str)", " {", "// 处理乘除号", "\n        ", "String", " ", "a2", " ", "=", " str;\n        ", "//分割字符串", "\n        ", "if", "(str.contains(", "\"*\"", ")||str.contains(", "\"/\"", ")){\n        String[] b0 = str.split(", "\"[*/+-]\"", ");", "//数字串", "\n        ", "String", " ", "b1", " ", "=", "str.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n        ", "int", " ", "x", " ", "=", " ", "0", ",y =", "0", ",z=", "0", ",k =", "0", ";\n        ", "if", "(str.contains(", "\"*\"", ")&&str.contains(", "\"/\"", ")){\n            x = b1.indexOf(", "\"*\"", ");\n            y = b1.indexOf(", "\"/\"", ");\n            ", "if", "(x > y){", "//除号在前", "\n                z = b1.indexOf(", "\"/\"", ");\n                k = str.indexOf(", "\"/\"", ");\n            }\n            ", "else", " ", "if", "(y > x){", "//乘号在前", "\n                z = b1.indexOf(", "\"*\"", ");\n                k = str.indexOf(", "\"*\"", ");        \n            }\n        }\n        ", "else", " ", "if", "(str.contains(", "\"*\"", ")){\n            z = b1.indexOf(", "\"*\"", ");\n            k = str.indexOf(", "\"*\"", ");\n        }\n        ", "else", " ", "if", "(str.contains(", "\"/\"", ")){\n            z = b1.indexOf(", "\"/\"", ");\n            k = str.indexOf(", "\"/\"", ");\n        }\n        ", "String", " ", "smallequation", " ", "=", " b0[z]+b1.charAt(z)+b0[z+", "1", "];\n        ", "String", " ", "result1", " ", "=", " suanshi(smallequation);", "//获得结果", "\n        ", "int", " ", "be", " ", "=", " k - b0[z].length(), end =k+b0[z+", "1", "].length()+", "1", ";\n        ", "String", " ", "equation1", " ", "=", " str.substring(be, end);\n        ", "String", " ", "u", " ", "=", " str.replaceAll(equation1, result1);\n        ", "String", " ", "u1", " ", "=", "u.toString();\n        ", "return", " Chengchu(u1);\n        }\n        ", "return", " a2;\n    }\n\n    ", "public", " ", "static", " String ", "Jiajian", "(String str)", " {", "// 处理加减", "\n        ", "String", " ", "a3", " ", "=", " str;\n        ", "if", "(str.contains(", "\"+\"", ")||str.contains(", "\"-\"", ")){\n            String[] l0 = str.split(", "\"[*/+-]\"", ");", "//数字串", "\n            ", "String", " ", "l1", " ", "=", "str.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n            ", "int", " ", "l", " ", "=", " ", "0", ",m =", "0", ",n=", "0", ",v =", "0", ";\n            ", "if", "(str.contains(", "\"+\"", ")&&str.contains(", "\"-\"", ")){\n                l = l1.indexOf(", "\"+\"", ");\n                m = l1.indexOf(", "\"-\"", ");\n                ", "if", "(l > m){", "//减号在前", "\n                    n = m;\n                    v = str.indexOf(", "\"-\"", ");\n                }\n                ", "else", " ", "if", "(m > l){", "//乘号在前", "\n                    n = l;\n                    v = str.indexOf(", "\"+\"", ");        \n                }\n            }\n            ", "else", " ", "if", "(str.contains(", "\"+\"", ")){\n                n = l1.indexOf(", "\"+\"", ");\n                v = str.indexOf(", "\"+\"", ");\n            }\n            ", "else", " ", "if", "(str.contains(", "\"-\"", ")){\n                n = l1.indexOf(", "\"-\"", ");\n                v = str.indexOf(", "\"-\"", ");\n            }\n            ", "String", " ", "smallequation1", " ", "=", " l0[n]+l1.charAt(n)+l0[n+", "1", "];\n            ", "String", " ", "result2", " ", "=", " suanshi(smallequation1);", "//获得结果", "\n            ", "int", " ", "be1", " ", "=", " v - l0[n].length(), end1 =v+l0[n+", "1", "].length();\n            ", "String", " ", "equation2", " ", "=", " str.substring(be1, end1+", "1", ");\n            ", "String", " ", "u1", " ", "=", " str.replaceAll(equation2, result2);\n            ", "return", " Chengchu(u1);\n            }\n        ", "return", " a3;\n    }\n\n    ", "public", " ", "static", " String ", "Sanjiao", "(String str)", " {", "// 处理三角函数", "\n        ", "String", " ", "a4", " ", "=", " str;\n        ", "if", "(str.contains(", "\"sin\"", ")||str.contains(", "\"cos\"", ")||str.contains(", "\"tan\"", ")||str.contains(", "\"sqrt\"", ")){", "//判断是否含有", "\n            String[] r0 = str.split(", "\"[*/+-]\"", ");\n            ", "String", " ", "r1", " ", "=", "str.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n            ", "int", " j=", "0", ";\n            ", "while", "(j<r1.length()+", "1", "){\n                ", "double", " ", "value", " ", "=", "0.0d", ";\n                ", "if", "(r0[j].contains(", "\"sin\"", ")){\n                    ", "String", " ", "t0", " ", "=", "r0[j].substring(", "3", ");\n                        ", "double", " ", "s0", " ", "=", " Double.parseDouble(t0);\n                         value = Math.sin(s0);\n                    }\n                     \n                ", "else", " ", "if", "(r0[j].contains(", "\"cos\"", ")){\n                    ", "String", " ", "t0", " ", "=", "r0[j].substring(", "3", ");\n                        ", "double", " ", "s0", " ", "=", " Double.parseDouble(t0);\n                         value = Math.cos(s0);\n                }\n                ", "else", " ", "if", "(r0[j].contains(", "\"tan\"", ")){\n                    ", "String", " ", "t0", " ", "=", "r0[j].substring(", "3", ");\n                        ", "double", " ", "s0", " ", "=", " Double.parseDouble(t0);\n                         value = Math.tan(s0);\n                }\n                ", "else", " ", "if", "(r0[j].contains(", "\"sqrt\"", ")){\n                    ", "String", " ", "t0", " ", "=", "r0[j].substring(", "4", ");\n                        ", "double", " ", "s0", " ", "=", " Double.parseDouble(t0);\n                        value = Math.sqrt(s0);\n \n                }\n                j++;\n                ", "String", " ", "f", " ", "=", "\"(\"", "+ value+", "\")\"", ";\n                ", "String", " ", "equation3", " ", "=", "str.replaceAll(r0[j], f);\n                ", "return", " Sanjiao(equation3);\n             }  \n        }", "return", " a4;\n\n    }\n    ", "public", " ", "static", " String ", "suanshi", "(String str)", "{\n        ", "double", " ", "c", " ", "=", "0.0d", ";\n        String[] w0;\n        ", "if", "(str.contains(", "\"+\"", ")){\n          w0 =str.split(", "\"+\"", ");\n          ", "double", " ", "g1", " ", "=", "Double.parseDouble(w0[", "0", "]);\n          ", "double", " ", "g2", " ", "=", "Double.parseDouble(w0[", "1", "]);\n          c =g1 +g2;\n        }\n        ", "else", " ", "if", "(str.contains(", "\"-\"", ")){\n          w0 =str.split(", "\"-\"", ");\n          ", "double", " ", "g1", " ", "=", "Double.parseDouble(w0[", "0", "]);\n          ", "double", " ", "g2", " ", "=", "Double.parseDouble(w0[", "1", "]);\n          c =g1 -g2;\n        }\n        ", "else", " ", "if", "(str.contains(", "\"*\"", ")){\n          w0 =str.split(", "\"[*]\"", ");\n          ", "double", " ", "g1", " ", "=", "Double.parseDouble(w0[", "0", "]);\n          ", "double", " ", "g2", " ", "=", "Double.parseDouble(w0[", "1", "]);\n          c =g1 *g2;\n        }\n        ", "else", " ", "if", "(str.contains(", "\"/\"", ")){\n          w0 =str.split(", "\"/\"", ");\n          ", "double", " ", "g1", " ", "=", "Double.parseDouble(w0[", "0", "]);\n          ", "double", " ", "g2", " ", "=", "Double.parseDouble(w0[", "1", "]);\n          c =g1 /g2;\n        }\n        ", "String", " ", "d", " ", "=", " ", "\"(\"", " + c + ", "\")\"", ";\n        ", "return", " d;\n\n    }\n\n    ", "public", " ", "static", " ", "double", " ", "parse", "(String str)", " {", "// 得到结果", "\n        ", "String", " ", "yuchuli", " ", "=", "A(str);\n        ", "String", " ", "wukohao", " ", "=", " removekuohao(yuchuli);\n        ", "String", " ", "w0", " ", "=", " Sanjiao(wukohao);\n        ", "String", " ", "w1", " ", "=", " Chengchu(w0);\n        ", "String", " ", "w2", " ", "=", "removekuohao(w1);\n        ", "String", " ", "w3", " ", "=", "Jiajian(w2);\n        ", "String", " ", "w4", " ", "=", "removekuohao (w3);\n        ", "double", " ", "o", " ", "=", "Double.parseDouble(w4);\n        ", "return", " o;\n \n\n    }\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " ", "throws", " Exception {\n        ", "Scanner", " ", "input", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "while", " (input.hasNextLine()) {\n            ", "double", " ", "result", " ", "=", " parse(input.nextLine());\n            System.out.println(String.valueOf(Math.round(result)));\n        }\n        input.close();\n    }\n}\n", "\n", "import", " java.util.*;\n\npublic class TestMathExper_122090080 {\n    public static String A(String str) {// 预处理字符串\n        String ", "str0", " = str.replace(", "\" \"", ", ", "\"\"", ");\n        String ", "str1", " = str0.", "toString", "();\n        char ", "a", " = str1.charAt(", "1", ");\n        ", "if", " (", "a", " == '-') {\n             String ", "k", " =  ", "\"0\"", " + str1;\n             return k;\n        } ", "else", " {\n            return str1;\n        }\n\n    }\n\n    public static String removekuohao(String str){//去括号\n        String ", "a1", " = str;\n        ", "if", "(str.contains(", "\"[(]\"", ")){\n            int ", "x0", " =str.lastIndexOf(", "\"(\"", ");\n            String ", "y0", " = str.substring(x0+", "1", ",a1.length());\n            int ", "x1", " =y0.indexOf(", "\")\"", ");\n            String ", "y1", " = y0.substring(", "1", ", x1);\n            String ", "p0", " = Sanjiao(y1);\n            String final1;\n            ", "if", "(p0.contains(", "\"[(]\"", ")){\n                String ", "p1", " =p0.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                String ", "p2", " = Chengchu(p1);\n                ", "if", "(p2.contains(", "\"[(]\"", ")){\n                    String ", "p3", " =p2.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                    String ", "p4", " = Jiajian(p3);\n                    ", "if", "(p4.contains(", "\"[(]\"", ")){\n                        ", "final1", " =p4.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        ", "final1", " =p4;\n                    }}\n                ", "else", "{\n                    String ", "p3", " =Jiajian(p2);\n                    ", "if", "(p3.contains(", "\"[(]\"", ")){\n                        ", "final1", " =p3.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        ", "final1", " =p3;\n                    }\n                }\n                }\n            ", "else", " {\n                String ", "p1", " =Chengchu(p0);\n                ", "if", "(p1.contains(", "\"[(]\"", ")){\n                    String ", "p2", " =p1.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                    String ", "p3", " = Jiajian(p2);\n                    ", "if", "(p3.contains(", "\"[(]\"", ")){\n                        ", "final1", " =p3.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        ", "final1", " =p3;\n                    }}\n                ", "else", "{\n                    String ", "p2", " =Jiajian(p1);\n                    ", "if", "(p2.contains(", "\"[(]\"", ")){\n                        ", "final1", " =p2.replace(", "\"(\"", ", ", "\"\"", ").replace(", "\")\"", ",", "\"\"", ");\n                     }\n                    ", "else", "{\n                        ", "final1", " =p2;\n                    }\n                }\n\n            }\n            int ", "Midlength", " = x0 + y1.length() +", "2", ";\n            String ", "Mid", " = str.substring(x0,Midlength);\n            String ", "str2", " =str.replaceAll(Mid, final1);\n            String ", "begin", " =str2.", "toString", "();\n            return removekuohao(begin) ;\n        }\n        return a1;\n\n\n    }\n\n    public static String Chengchu(String str) {// 处理乘除号\n        String ", "a2", " = str;\n        //分割字符串\n        int ", "x", " = ", "0", ",", "y", " =", "0", ",", "z=0,k", " =", "0", ",", "x0", " =", "0", ",", "y0", " =", "0", ";\n        char ai;\n        String[] ", "b0", " = str.split(", "\"[*/+-]\"", ");//数字串\n        String ", "b1", " =str.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n        ", "if", "(str.contains(", "\"*\"", ")||str.contains(", "\"/\"", ")){\n        ", "if", "(str.contains(", "\"*\"", ")&&str.contains(", "\"/\"", ")){\n            ", "x", " = b1.indexOf(", "\"*\"", ");\n            ", "y", " = b1.indexOf(", "\"/\"", ");\n            ", "x0", " =str.indexOf(", "\"*\"", ");\n            ", "y0", " =str.indexOf(", "\"/\"", ");\n            ", "if", "(x > y){//除号在前\n                 ", "ai", " = str.charAt(y0+", "1", ");\n                ", "if", "(", "ai", " == '-'){\n                    ", "z=b1.indexOf(\"/\");", "\n                    ", "k", " =str.indexOf(", "\"/\"", ");\n                    b0[z+", "1", "] =", "\"-\"", "+b0[z+", "1", "]; \n                }\n                ", "else", "{", "z", " = b1.indexOf(", "\"/\"", ");\n                ", "k", " = str.indexOf(", "\"/\"", ");}\n            }\n            ", "else", " ", "if", "(y > x){//乘号在前\n                ", "ai", " = str.charAt(x0+", "1", ");\n                ", "if", "(", "ai", " == '-'){\n                    ", "z=b1.indexOf(\"*\");", "\n                    ", "k", " =str.indexOf(", "\"*\"", ");\n                    b0[z+", "1", "] =", "\"-\"", "+b0[z+", "1", "]; \n                }\n                ", "else", "{", "z", " = b1.indexOf(", "\"*\"", ");\n                ", "k", " = str.indexOf(", "\"*\"", "); }       \n            }\n        }\n        ", "else", " ", "if", "(str.contains(", "\"*\"", ")){\n            ", "ai", " = str.charAt(x0+", "1", ");\n                ", "if", "(", "ai", " == '-'){\n                    ", "z=b1.indexOf(\"*\");", "\n                    ", "k", " =str.indexOf(", "\"*\"", ");\n                    b0[z+", "1", "] =", "\"-\"", "+b0[z+", "1", "]; \n                }\n            ", "else", "{", "z", " = b1.indexOf(", "\"*\"", ");\n            ", "k", " = str.indexOf(", "\"*\"", ");}\n        }\n        ", "else", " ", "if", "(str.contains(", "\"/\"", ")){\n            ", "ai", " = str.charAt(y0+", "1", ");\n                ", "if", "(", "ai", " == '-'){\n                    ", "z=b1.indexOf(\"/\");", "\n                    ", "k", " =str.indexOf(", "\"/\"", ");\n                    b0[z+", "1", "] =", "\"-\"", "+b0[z+", "1", "]; \n                }\n            ", "else", "{", "z", " = b1.indexOf(", "\"/\"", ");\n            ", "k", " = str.indexOf(", "\"/\"", ");}\n        }\n        String ", "smallequation", " = b0[z]+b1.charAt(z)+b0[z+", "1", "];\n        String ", "result1", " = suanshi(smallequation);//获得结果\n        int ", "be", " = k - b0[z].length(), ", "end", " =k+b0[z+", "1", "].length()+", "1", ";\n        String ", "equation1", " = str.substring(be, end);\n        String ", "u", " = str.replaceAll(equation1, result1);\n        String ", "u1", " =u.", "toString", "();\n        return Chengchu(u1);\n        }\n        return a2;\n    }\n\n    public static String Jiajian(String str) {// 处理加减\n        String ", "a3", " = str;\n        ", "if", "(str.contains(", "\"+\"", ")||str.contains(", "\"-\"", ")){\n            String fuck;\n            ", "if", " (str.contains(", "\"+-\"", ")||str.contains(", "\"--\"", ")){\n                ", "fuck", " =str.replaceAll(", "\"+-\"", ",", "\"-\"", ").replaceAll(", "\"--\"", ",", "\"+\"", ");\n            }\n            ", "else", "{\n                ", "fuck", " =str;\n\n            }\n            String[] ", "l0", " = fuck.split(", "\"[*/+-]\"", ");//数字串\n            String ", "l1", " =fuck.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n            int ", "l", " = ", "0", ",", "m", " =", "0", ",", "n=0,v", " =", "0", ";\n            ", "if", "(fuck.contains(", "\"+\"", ")&&fuck.contains(", "\"-\"", ")){\n                ", "l", " = l1.indexOf(", "\"+\"", ");\n                ", "m", " = l1.indexOf(", "\"-\"", ");\n                ", "if", "(l > m){//减号在前\n                    ", "n", " = m;\n                    ", "v", " = fuck.indexOf(", "\"-\"", ");\n                }\n                ", "else", " ", "if", "(m > l){//乘号在前\n                    ", "n", " = l;\n                    ", "v", " = fuck.indexOf(", "\"+\"", ");        \n                }\n            }\n            ", "else", " ", "if", "(fuck.contains(", "\"+\"", ")){\n                ", "n", " = l1.indexOf(", "\"+\"", ");\n                ", "v", " = fuck.indexOf(", "\"+\"", ");\n            }\n            ", "else", " ", "if", "(fuck.contains(", "\"-\"", ")){\n                ", "n", " = l1.indexOf(", "\"-\"", ");\n                ", "v", " = fuck.indexOf(", "\"-\"", ");\n            }\n            String ", "smallequation1", " = l0[n]+l1.charAt(n)+l0[n+", "1", "];\n            String ", "result2", " = suanshi(smallequation1);//获得结果\n            int ", "be1", " = v - l0[n].length(), ", "end1", " =v+l0[n+", "1", "].length();\n            String ", "equation2", " = str.substring(be1, end1+", "1", ");\n            String ", "u1", " = str.replaceAll(equation2, result2);\n            return Chengchu(u1);\n            }\n        return a3;\n    }\n\n    public static String Sanjiao(String str) {// 处理三角函数\n        String ", "a4", " = str;\n        ", "if", "(str.contains(", "\"sin\"", ")||str.contains(", "\"cos\"", ")||str.contains(", "\"tan\"", ")||str.contains(", "\"sqrt\"", ")){//判断是否含有\n            String[] ", "r0", " = str.split(", "\"[*/+-]\"", ");\n            String ", "r1", " =str.replaceAll(", "\"\\\\d\"", ",", "\"\"", ").replace(", "\".\"", ",", "\"\"", ");\n            int ", "j=0;", "\n            while(j<r1.length()+", "1", "){\n                double ", "value", " =", "0.0", "d;\n                ", "if", "(r0[j].contains(", "\"sin\"", ")){\n                    String ", "t0", " =r0[j].substring(", "3", ");\n                        double ", "s0", " = Double.parseDouble(t0);\n                         ", "value", " = Math.sin(s0);\n                    }\n                     \n                ", "else", " ", "if", "(r0[j].contains(", "\"cos\"", ")){\n                    String ", "t0", " =r0[j].substring(", "3", ");\n                        double ", "s0", " = Double.parseDouble(t0);\n                         ", "value", " = Math.cos(s0);\n                }\n                ", "else", " ", "if", "(r0[j].contains(", "\"tan\"", ")){\n                    String ", "t0", " =r0[j].substring(", "3", ");\n                        double ", "s0", " = Double.parseDouble(t0);\n                         ", "value", " = Math.tan(s0);\n                }\n                ", "else", " ", "if", "(r0[j].contains(", "\"sqrt\"", ")){\n                    String ", "t0", " =r0[j].substring(", "4", ");\n                        double ", "s0", " = Double.parseDouble(t0);\n                        ", "value", " = Math.sqrt(s0);\n \n                }\n                j++;\n                String ", "f", " =", "\"(\"", "+ value+", "\")\"", ";\n                String ", "equation3", " =str.replaceAll(r0[j], f);\n                return Sanjiao(equation3);\n             }  \n        }return a4;\n\n    }\n    public static String suanshi(String str){\n        double ", "c", " =", "0.0", "d;\n        String[] w0;\n        String ko;\n        ", "if", "(str.contains(", "\"+\"", ")){\n          ", "w0", " =str.split(", "\"+\"", ");\n          double ", "g1", " =Double.parseDouble(w0[", "0", "]);\n          double ", "g2", " =Double.parseDouble(w0[", "1", "]);\n          ", "c", " =g1 +g2;\n        }\n        ", "else", " ", "if", "(str.contains(", "\"-\"", ")){\n          char ", "first", " = str.charAt(", "0", ");\n          ", "if", "(", "first", " == '-'){\n           ", "ko", " = ", "\"0\"", " + str;\n           ", "w0", " = ko.split(", "\"-\"", ");\n           double ", "g0", " =Double.parseDouble(w0[", "0", "]);\n           double ", "g1", " =Double.parseDouble(w0[", "1", "]);\n           double ", "g2", " =Double.parseDouble(w0[", "2", "]);\n           ", "c", " =g0 - g1 - g2;\n          }\n          ", "else", "{\n          ", "w0", " =str.split(", "\"-\"", ");\n          double ", "g1", " =Double.parseDouble(w0[", "0", "]);\n          double ", "g2", " =Double.parseDouble(w0[", "1", "]);\n          ", "c", " =g1 -g2;}\n        }\n        ", "else", " ", "if", "(str.contains(", "\"*\"", ")){\n          ", "w0", " =str.split(", "\"[*]\"", ");\n          double ", "g1", " =Double.parseDouble(w0[", "0", "]);\n          double ", "g2", " =Double.parseDouble(w0[", "1", "]);\n          ", "c", " =g1 *g2;\n        }\n        ", "else", " ", "if", "(str.contains(", "\"/\"", ")){\n          ", "w0", " =str.split(", "\"/\"", ");\n          double ", "g1", " =Double.parseDouble(w0[", "0", "]);\n          double ", "g2", " =Double.parseDouble(w0[", "1", "]);\n          ", "c", " =g1 /g2;\n        }\n        String ", "d", " = ", "\"(\"", " + c + ", "\")\"", ";\n        return d;\n\n    }\n\n    public static double parse(String str) {// 得到结果\n        String ", "yuchuli", " =A(str);\n        String ", "wukohao", " = removekuohao(yuchuli);\n        String ", "w0", " = Sanjiao(wukohao);\n        String ", "w1", " = Chengchu(w0);\n        String ", "w2", " =removekuohao(w1);\n        String ", "w3", " =Jiajian(w2);\n        String ", "w4", " =removekuohao (w3);\n        double ", "o", " =Double.parseDouble(w4);\n        return o;\n \n\n    }\n\n    public static void main(String[] args) throws Exception {\n        Scanner ", "input", " = new Scanner(System.", "in", ");\n        while (input.hasNextLine()) {\n            double ", "result", " = parse(input.nextLine());\n            System.out.println(String.valueOf(Math.round(result)));\n        }\n        input.close();\n    }\n}\n\n\n```我对上一次出现的问题进行了改进，但同时我发现我忽视了乘除号后可能出现负数的情况，我又做出了更改，然后。。。。。。又报错了。\n我需要帮助，我知道这个代码是太长了，所以真的麻烦了（万分感谢）\n\n", "\n", "报错信息", "\n", "    at TestMathExper_", "122090080", ".Chengchu(TestMathExper_", "122090080", ".java:", "141", ")\n", "\n", "```", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "可以从e.getStackTrace();返回的字符串中解析出你要的信息（因为没有直接的接口）：\r\n\r\n\tpublic static void main(String[] args) throws UnsupportedEncodingException, ClassNotFoundException {\r\n\t\ttry {\r\n\t\t\tdouble d1 = Double.parseDouble(\"a\");\r\n\t\t} catch (Exception e) {\r\n\t\t\tStackTraceElement[] trace = e.getStackTrace();\r\n\t\t\tString firstException = trace[trace.length-1].toString();\r\n\t\t\tString[] strList = firstException.split(\".main\");\r\n\t\t\tString packageName = strList[0];\r\n\t\t\tstrList = strList[1].split(\":\");\r\n\t\t\tString fileName = strList[0].substring(1);\r\n\t\t\tString countNum = strList[1].substring(0, strList[1].length()-1);\r\n\t\t\t\r\n\t\t\tSystem.out.println(\"packageName: \" + packageName);\r\n\t\t\tSystem.out.println(\"fileName: \" + fileName);\r\n\t\t\tSystem.out.println(\"countNum: \" + countNum);\r\n\t\t}\r\n\t}\r\n\r\n返回结果：\r\npackageName: com.robert.base.TestClass\r\nfileName: TestClass.java\r\ncountNum: 26\r\n\r\n\r\n不过按照“effective java”说的，这是一种不好的获取信息的方式，最好不要采用。", "Konwledge_Point": "异常处理", "Question": ["关于Java异常的处理的一个小问题", ["当double d1 = Double.parseDouble(args[0]);发生异常时,我想在catch里面得到发生异常的这句话......", "\n\n", "就是通过使用传进来的 e 杂个能得到发生异常的\"double d1 = Double.parseDouble(args[0]);\"这句话,以及这句话发生的本JAVA文件名,JAVA文件中这句话的行号等呢?", "\n\n", "public static void main(String[] args) {", "\n        try{", "\n        if (3 != args.length){", "\n            System.out.println(\"Usage: TestArray1 \" + \"\\\"n1\\\"\"+\" \\\"op\\\" \" +\"\\\"n2\\\"\");", "\n            System.exit(-1);", "\n        }", "\n        double d1 = Double.parseDouble(args[0]);", "\n              }catch (Exception e) {", "\n            //?????在这里杂个写呢?", "\n        }", "\n    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/testcs_dn/article/details/78708209/%E6%98%AF%E5%90%A6%E5%AF%B9%E4%BD%A0%E6%9C%89%E5%B8%AE%E5%8A%A9\"&gt;https://blog.csdn.net/testcs_dn/article/details/78708209/是否对你有帮助&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["BufferUnderflowException怎么处理这个异常", ["项目上传一个大约2G的shipe文件 需要转换坐标，平时上传小的文件挺正常的，\n这次上传了一个大的文件就报BufferUnderflowException异常了，有大神知道怎么回事么，\n代码如下：", "\n", "public", " ", "static", " JSONObject ", "generateW84Shapefile", "(\n            SimpleFeatureSource featureSource, String shapeFileName, File inputFolder, File outputFolder,\n            ", "boolean", " keepFileName, ", "int", " fileCoordinateType)", " ", "throws", " JSONException {\n        ", "JSONObject", " ", "jo", " ", "=", " ", "new", " ", "JSONObject", "();\n        ", "try", " {\n            ", "if", " (!outputFolder.exists()) {\n                outputFolder.mkdirs();\n            }\n            ", "SimpleFeatureType", " ", "schema", " ", "=", " featureSource.getSchema();\n            ", "CoordinateReferenceSystem", " ", "dataCRS", " ", "=", " schema.getCoordinateReferenceSystem();\n            ", "if", " (dataCRS == ", "null", ") { ", "// can't find projection", "\n                log.error(", "\"Error: Can't find the projection of the uploaded shapefile.\"", ");\n                jo.put(", "\"Error\"", ", ", "\"Can't find the projection of the uploaded shapefile.\"", ");\n            } ", "else", " {\n                ", "Integer", " ", "epsgCode", " ", "=", " -", "1", ";\n                ", "try", " {\n                    epsgCode = CRS.lookupEpsgCode(dataCRS, ", "true", ");\n                    log.info(", "\"EPSG code of the source feature: \"", " + epsgCode);\n                } ", "catch", " (Exception ee) {\n                    log.error(", "\"Error in finding the EPSG code of the source feature\"", ", ee);\n                }\n                ", "int", " ", "count", " ", "=", " ", "0", ";\n                ", "if", " (epsgCode == ", "null", " || epsgCode != ", "4326", " || fileCoordinateType != ", "1", ") {\n                    ", "CoordinateReferenceSystem", " ", "wgs84CRS", " ", "=", " CRS.decode(", "\"EPSG:4326\"", ");\n                    ", "File", " ", "newShapeFile", " ", "=", " ", "new", " ", "File", "(outputFolder,\n                            shapeFileName + ((keepFileName || fileCoordinateType == ", "1", ") ? ", "\".shp\"", " : ", "\"_gcj02.shp\"", "));\n                    ", "DataStoreFactorySpi", " ", "factory", " ", "=", " ", "new", " ", "ShapefileDataStoreFactory", "();\n                    Map<String, Serializable> create = ", "new", " ", "HashMap", "<String, Serializable>();\n                    create.put(", "\"url\"", ", newShapeFile.toURI().toURL());\n                    create.put(", "\"create spatial index\"", ", Boolean.TRUE);\n                    ", "DataStore", " ", "dataStore", " ", "=", " factory.createNewDataStore(create);\n                    ", "SimpleFeatureType", " ", "featureType", " ", "=", " SimpleFeatureTypeBuilder.retype(schema, wgs84CRS);\n                    dataStore.createSchema(featureType);\n                    ", "// Get the name of the new Shapefile, which will be used to", "\n                    ", "// open the FeatureWriter", "\n                    ", "String", " ", "createdName", " ", "=", " newShapeFile.getName().substring(", "0", ", newShapeFile.getName().lastIndexOf(", "'.'", "));\n                    ", "Transaction", " ", "transaction", " ", "=", " ", "new", " ", "DefaultTransaction", "(", "\"Reproject\"", ");\n                    FeatureWriter<SimpleFeatureType, SimpleFeature> writer = dataStore\n                            .getFeatureWriterAppend(createdName, transaction);\n                    ", "SimpleFeatureCollection", " ", "featureCollection", " ", "=", " featureSource.getFeatures();\n                    ", "SimpleFeatureIterator", " ", "iterator", " ", "=", " featureCollection.features();\n                    ", "boolean", " ", "projected", " ", "=", " ", "true", ";\n                    ", "MathTransform", " ", "transform", " ", "=", " ", "null", ";\n                    ", "boolean", " ", "lenient", " ", "=", " ", "true", "; ", "// allow for some error due to", "\n                    ", "// different datums", "\n                    transform = CRS.findMathTransform(dataCRS,wgs84CRS, lenient);\n                    ", "try", " {\n                        ", "while", " (iterator.hasNext()) {  **", "//这一行报的错**", "\n                            ", "// copy the contents of each feature and transform", "\n                            ", "// the geometry", "\n                            ", "SimpleFeature", " ", "feature", " ", "=", " iterator.next();\n                            ", "SimpleFeature", " ", "copy", " ", "=", " writer.next();\n                            copy.setAttributes(feature.getAttributes());\n                            ", "Geometry", " ", "geometry", " ", "=", " (Geometry) feature.getDefaultGeometry();\n                            Geometry geometry2;\n                            ", "if", " (epsgCode == ", "null", " || epsgCode != ", "4326", ") {\n                                geometry2 = JTS.transform(geometry, transform);\n                            } ", "else", " {\n                                geometry2 = (Geometry) geometry.clone();\n                            }\n                            ", "if", "(fileCoordinateType == ", "2", ") {", "//bd09", "\n                                geometry2 = GCJConverter.bd09toGCJ(geometry2);\n                            }", "else", " ", "if", "(fileCoordinateType == ", "3", ") {\n                                geometry2 = GCJConverter.toGCJ(geometry2);\n                            }\n                            \n                            copy.setDefaultGeometry(geometry2);\n                            writer.write();\n                            count++;\n                        }\n                        writer.close();\n                        transaction.commit();\n                    } ", "catch", " (Exception e) {\n                        e.printStackTrace();\n                        projected = ", "false", ";\n                        log.error(", "\"Error: Can't reproject the uploaded shapefile.\"", ", e);\n                        log.info(", "\"count===>\"", "+count);\n                        transaction.rollback();\n                    } ", "finally", " {\n                        transaction.close();\n                        dataStore.dispose();\n                        iterator.close();\n                    }\n                    ", "if", " (!projected) {\n                        jo.put(", "\"Error\"", ", ", "\"Can't reproject the uploaded shapefile.\"", ");\n                    } ", "else", " {\n                        shapeFileName = createdName;\n                        jo.put(", "\"reprojected\"", ", projected);\n                    }\n                }\n            }\n        } ", "catch", " (Exception e) {\n            log.error(", "\"Error: Can't reproject the uploaded shapefile.\"", ", e);\n            jo.put(", "\"Error\"", ", ", "\"Can't reproject the uploaded shapefile.\"", ");\n        }\n        jo.put(", "\"shapefileName\"", ", shapeFileName);\n        \n        ", "return", " jo;\n    }\n", "\n", "报错信息：", "\n", "java", ".nio", ".BufferUnderflowException", "\n        at java", ".nio", ".Buffer", ".nextGetIndex", "(Buffer", ".java", ":", "500", ")\n        at java", ".nio", ".DirectByteBuffer", ".get", "(DirectByteBuffer", ".java", ":", "249", ")\n        at org", ".geotools", ".data", ".shapefile", ".dbf", ".DbaseFileReader", ".read", "(DbaseFileReader", ".java", ":", "427", ")\n        at org", ".geotools", ".data", ".shapefile", ".dbf", ".DbaseFileReader", ".readRow", "(DbaseFileReader", ".java", ":", "321", ")\n        at org", ".geotools", ".data", ".shapefile", ".ShapefileFeatureReader", ".hasNext", "(ShapefileFeatureReader", ".java", ":", "187", ")\n        at org", ".geotools", ".data", ".store", ".ContentFeatureCollection", "$WrappingFeatureIterator", ".hasNext", "(ContentFeatureCollection", ".java", ":", "143", ")\n        at com", ".XXX", ".util", ".ProjectUtils", ".generateW84Shapefile", "(ProjectUtils", ".java", ":", "203", ")\n        at sun", ".reflect", ".NativeMethodAccessorImpl", ".invoke0", "(Native Method)\n        at sun", ".reflect", ".NativeMethodAccessorImpl", ".invoke", "(NativeMethodAccessorImpl", ".java", ":", "62", ")\n        at sun", ".reflect", ".DelegatingMethodAccessorImpl", ".invoke", "(DelegatingMethodAccessorImpl", ".java", ":", "43", ")\n        at java", ".lang", ".reflect", ".Method", ".invoke", "(Method", ".java", ":", "498", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".internal", ".ResourceMethodInvocationHandlerFactory$", "1", ".invoke", "(ResourceMethodInvocationHandlerFactory", ".java", ":", "81", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".internal", ".AbstractJavaResourceMethodDispatcher$", "1", ".run", "(AbstractJavaResourceMethodDispatcher", ".java", ":", "151", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".internal", ".AbstractJavaResourceMethodDispatcher", ".invoke", "(AbstractJavaResourceMethodDispatcher", ".java", ":", "172", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".internal", ".JavaResourceMethodDispatcherProvider", "$TypeOutInvoker", ".doDispatch", "(JavaResourceMethodDispatcherProvider", ".java", ":", "195", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".internal", ".AbstractJavaResourceMethodDispatcher", ".dispatch", "(AbstractJavaResourceMethodDispatcher", ".java", ":", "104", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".ResourceMethodInvoker", ".invoke", "(ResourceMethodInvoker", ".java", ":", "384", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".ResourceMethodInvoker", ".apply", "(ResourceMethodInvoker", ".java", ":", "342", ")\n        at org", ".glassfish", ".jersey", ".server", ".model", ".ResourceMethodInvoker", ".apply", "(ResourceMethodInvoker", ".java", ":", "101", ")\n        at org", ".glassfish", ".jersey", ".server", ".ServerRuntime$", "1", ".run", "(ServerRuntime", ".java", ":", "271", ")\n        at org", ".glassfish", ".jersey", ".internal", ".Errors$", "1", ".call", "(Errors", ".java", ":", "271", ")\n        at org", ".glassfish", ".jersey", ".internal", ".Errors$", "1", ".call", "(Errors", ".java", ":", "267", ")\n        at org", ".glassfish", ".jersey", ".internal", ".Errors", ".process", "(Errors", ".java", ":", "315", ")\n        at org", ".glassfish", ".jersey", ".internal", ".Errors", ".process", "(Errors", ".java", ":", "297", ")\n        at org", ".glassfish", ".jersey", ".internal", ".Errors", ".process", "(Errors", ".java", ":", "267", ")\n        at org", ".glassfish", ".jersey", ".process", ".internal", ".RequestScope", ".runInScope", "(RequestScope", ".java", ":", "297", ")\n        at org", ".glassfish", ".jersey", ".server", ".ServerRuntime", ".process", "(ServerRuntime", ".java", ":", "254", ")\n        at org", ".glassfish", ".jersey", ".server", ".ApplicationHandler", ".handle", "(ApplicationHandler", ".java", ":", "1030", ")\n        at org", ".glassfish", ".jersey", ".servlet", ".WebComponent", ".service", "(WebComponent", ".java", ":", "377", ")\n        at org", ".glassfish", ".jersey", ".servlet", ".ServletContainer", ".service", "(ServletContainer", ".java", ":", "381", ")\n        at org", ".glassfish", ".jersey", ".servlet", ".ServletContainer", ".service", "(ServletContainer", ".java", ":", "344", ")\n        at org", ".glassfish", ".jersey", ".servlet", ".ServletContainer", ".service", "(ServletContainer", ".java", ":", "221", ")\n        at org", ".apache", ".catalina", ".core", ".ApplicationFilterChain", ".internalDoFilter", "(ApplicationFilterChain", ".java", ":", "303", ")\n        at org", ".apache", ".catalina", ".core", ".ApplicationFilterChain", ".doFilter", "(ApplicationFilterChain", ".java", ":", "208", ")\n        at org", ".apache", ".tomcat", ".websocket", ".server", ".WsFilter", ".doFilter", "(WsFilter", ".java", ":", "52", ")\n        at org", ".apache", ".catalina", ".core", ".ApplicationFilterChain", ".internalDoFilter", "(ApplicationFilterChain", ".java", ":", "241", ")\n        at org", ".apache", ".catalina", ".core", ".ApplicationFilterChain", ".doFilter", "(ApplicationFilterChain", ".java", ":", "208", ")\n        at org", ".apache", ".catalina", ".core", ".StandardWrapperValve", ".invoke", "(StandardWrapperValve", ".java", ":", "219", ")\n        at org", ".apache", ".catalina", ".core", ".StandardContextValve", ".invoke", "(StandardContextValve", ".java", ":", "110", ")\n        at org", ".apache", ".catalina", ".authenticator", ".AuthenticatorBase", ".invoke", "(AuthenticatorBase", ".java", ":", "494", ")\n        at org", ".apache", ".catalina", ".core", ".StandardHostValve", ".invoke", "(StandardHostValve", ".java", ":", "169", ")\n        at org", ".apache", ".catalina", ".valves", ".ErrorReportValve", ".invoke", "(ErrorReportValve", ".java", ":", "104", ")\n        at org", ".apache", ".catalina", ".valves", ".AccessLogValve", ".invoke", "(AccessLogValve", ".java", ":", "1025", ")\n        at org", ".apache", ".catalina", ".core", ".StandardEngineValve", ".invoke", "(StandardEngineValve", ".java", ":", "116", ")\n        at org", ".apache", ".catalina", ".connector", ".CoyoteAdapter", ".service", "(CoyoteAdapter", ".java", ":", "445", ")\n        at org", ".apache", ".coyote", ".ajp", ".AjpNioProcessor", ".process", "(AjpNioProcessor", ".java", ":", "175", ")\n        at org", ".apache", ".coyote", ".AbstractProtocol", "$AbstractConnectionHandler", ".process", "(AbstractProtocol", ".java", ":", "637", ")\n        at org", ".apache", ".tomcat", ".util", ".net", ".NioEndpoint", "$SocketProcessor", ".doRun", "(NioEndpoint", ".java", ":", "1775", ")\n        at org", ".apache", ".tomcat", ".util", ".net", ".NioEndpoint", "$SocketProcessor", ".run", "(NioEndpoint", ".java", ":", "1734", ")\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;test&lt;/span&gt; {\n    &lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;[]) {\n\n        &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt; [] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n        &lt;span class=\"hljs-title function_\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;李1&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;李2&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;李3&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;李4&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;李5&amp;#34;&lt;/span&gt;;\n            \n        }&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Exception&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n            &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数组初始化时发生异常&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;names数组的长度是&amp;#xff1a;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n            &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;names&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt;]);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["异常捕获处理代码，java", ["第二问，如何在原文中添加代码生成所示图片中的结果，尽量写的简单一点，小的懂得不是很多"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;右击计算机选属性&amp;#xff0c;在右侧选系统保护&amp;#xff0c;系统还原&amp;#xff0c;按步骤做就是了&amp;#xff0c;如果有还原软件&amp;#xff0c;自带的映像备份&amp;#xff0c;并且进行了备份&amp;#xff0c;也可以用软件、映像备份还原系统。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["未处理的异常: 0xC000001D: Illegal Instruction产生原因", ["在windows xp系统下用vs2005编译项目的时候，", "报错：未处理的异常: 0xC000001D: Illegal Instruction", "请问都有可能是什么原因会报这个错误？"]], "Tag": "程序设计"}
{"Answer": "个人比较喜欢用注解,注解更方便,配置的话要修改,有点麻烦..\r\n你说的侵入性,没有研究过,.\r\n统一处理异常,为什么不直接捕获异常,或者自己定义一个来统一处理", "Konwledge_Point": "异常处理", "Question": ["spring使用注解好还是配置好?", ["我在学习springmvc的统一异常处理时,有的人说使用注解@ExceptionHandler代码", "\n侵入性大,使用配置比较好?", "\n请问如何区分哪个的侵入性大?"]], "Tag": "程序设计"}
{"Answer": "如果你使用的是注解那就找你的想要插入数据的类，对ID的注解为：\r\n@GeneratedValue(strategy=GenerationType.AUTO)\r\nprivate Long pid;\r\n如果你使用的时配置文件形式\r\n&lt;id name=\"pid\" type=\"java.lang.Long\"&gt;\r\n            &lt;column name=\"PID\" precision=\"10\" scale=\"0\" /&gt;\r\n           &lt;generator class=\"sequence\"  &gt;\r\n                &lt;param name=\"sequence\"&gt;Function_SEQUENCE&lt;/param&gt;\r\n            &lt;/generator&gt;\r\n&lt;/id&gt;", "Konwledge_Point": "异常处理", "Question": ["怎么处理这个异常", ["在新增数据时发生这个问题，求指导。先谢过了！", "\nStruts has detected an unhandled exception:", "\nMessages:   ", "\n\n", "this id generator generates long, integer, short\nthis id generator generates long, integer, short; nested exception is org.hibernate.id.IdentifierGenerationException: this id generator generates long, integer, short\n", "\n\n", "File:   org/hibernate/id/IdentifierGeneratorFactory.java", "\nLine number:    167"]], "Tag": "程序设计"}
{"Answer": "1. 冒号\r\n2. 有效路径\r\n\r\ne.g.\r\n    string fileName = DateTime.Now.ToString(\"yyyyMMddhhmmssfff\") + \".txt\";", "Konwledge_Point": "异常处理", "Question": ["c#中创建文件流抛出异常System.NotSupportedException:“不支持给定路径的格式。”", ["详情：", "\n抛出异常System.NotSupportedException:“不支持给定路径的格式。”，", "\n抛出异常位置：创建文件流，", "\n运行时fileName的值为：\"201829815:14:33591.txt\"。", "\n注释掉的代码部分是我尝试的解决办法，但抛出相同异常。", "\n请不吝赐教，谢谢！FileStream的", "\n官方帮助文档", "https://docs.microsoft.com/zh-cn/dotnet/api/system.io.filestream?view=netframework-4.7.2", "\n\n", "//路径定义\n/*string currPath = Application.StartupPath;*/\nstring fileName =/*currPath+*/DateTime.Now.Year.ToString() +\nDateTime.Now.DayOfYear.ToString() +\n DateTime.Now.ToLongTimeString() +\n DateTime.Now.Millisecond.ToString()+\".txt\";\n\n//创建文件流\nFileStream fs = new FileStream(fileName, FileMode.CreateNew);\n\n//创建写入器\nStreamWriter streamWriter = new StreamWriter(fs);\nfor (int i = 0; i < listBox1.Items.Count; i++)\n {\n    streamWriter.Write(listBox1.Items[i]);\n }\n //关闭写入器\n streamWriter.Close();\n//关闭文件流\n fs.Close();\n//显示打印结果\nMessageBox.Show(\"打印成功\", \"打印结果\");\n"]], "Tag": "程序设计"}
{"Answer": "肯定是你getXXX返回了一个NULL，就没有得到对象，再toString肯定会报null pointer了，你可以在toString之前判断一下对象是否为空，不要写成链式就行了。", "Konwledge_Point": "异常处理", "Question": ["Map下写getget（key).toString();出现空指针异常", ["最近在编写android程序", "\n源码是这样的：", "\n        child5 = new ArrayList>();", "\n        childData5 = new HashMap();", "\n        childData5.put(\"health_person_txt_smoking\", person.getFlag_smoking());// 同理", "\n        childData5.put(\"health_person_txt_smokingnum\", smokingnum);// 同理", "\n        childData5.put(\"health_person_txt_drink\", person.getFlag_drink());", "\n        childData5.put(\"health_person_txt_drinknum\", drinknum);", "\n        childData5.put(\"health_person_txt_training\", person.getFlag_training());// 同理", "\n        childData5.put(\"health_person_txt_trainingnum\", trainingnum);// 同理", "\n        childData5.put(\"health_person_txt_sleep\", person.getFlag_sleep());", "\n        childData5.put(\"health_person_txt_sleepnum\", sleepnum);", "\n        child5.add(childData5);", "\n在下面直接编写map.get(key).tostring空指针异常。。。", "\n//这样直接写get（key).toString();出现空指针异常该如何编写这段代码", "\n            String name=(String)childData1.get(health_person_txt_name).toString();", "\n            String sex=(String)childData1.get(health_person_txt_sex).toString();", "\n            String birthday_string=(String)childData1.get(health_person_txt_birthday).toString();", "\n            String blood=(String)childData1.get(health_person_txt_blood).toString();", "\n            String insurance=(String)childData1.get(health_person_txt_insurance).toString();", "\n\n", "正确的编写方式什么？？？求各位老师帮忙解答"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Well, you can have a global exception handler in PHP that would call &lt;code&gt;json_encode&lt;/code&gt; on it then echo it out.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    function handleException( $e ) {\n       echo json_encode( $e );\n    }\n    set_exception_handler( 'handleException' );\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You could then check if, say, &lt;code&gt;json.Exception != undefined&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$.ajax({\n            type: \"POST\",\n            url: \"something.php\",\n            success: function(response){\n                 var json = jQuery.parseJSON( response );\n                 if( json.Exception != undefined ) {\n                    //handle exception...\n                 }\n                 // ... do stuff with json\n            }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["使用JQuery处理PHP异常", ["\n\n", "I'm using JQuery to call a PHP function that returns a JSON string upon success or throws some exceptions. Currently I'm calling ", "jQuery.parseJSON()", " on the response and if it fails I assume the response contains an exception string.", "\n\n", "\n$.ajax({\n            type: \"POST\",\n            url: \"something.php\",\n            success: function(response){\n                 try {\n                     var json = jQuery.parseJSON(response);\n                 }\n                catch (e) {\n                    alert(response);\n                    return -1;\n                 }\n                 // ... do stuff with json\n            }\n", "\n\n", "Can anyone suggest a more elegant way to catch the exception?", "\n\n", "Many thanks,\nItamar", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;java里面的异常有有很多种处理方式&amp;#xff0c;throws和try....catch是其中的两种常见的处理。&lt;br /&gt;1、throws 叫抛出异常&amp;#xff0c;说白了就是我们程序猿不处理该异常&amp;#xff0c;抛给程序的调用者&amp;#xff0c;就是JVM&lt;br /&gt;2、try....catch 就是我们程序猿处理异常的方式&amp;#xff0c;比如IO的读写操作。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["java在测试方法中抛出 一个throws 这个异常谁来处理", ["java在测试方法中抛出 一个throws 这个异常谁来处理 我是自学视频看到的 有没有帅锅可以解释一下 视频里没人处理 也没什么问题 我的认知里是throws最后必须得用try-catch处理才可以的  ", "\n", "\n@Test\n    ", "public", " ", "void", " test3() throws ParseException {\n        //实例化SimpleDateFormat\n        SimpleDateFormat sdf = ", "new", " SimpleDateFormat();\n\n        //格式化：日期 ", "---> 字符串", "\n        ", "Date", " ", "date", " = ", "new", " ", "Date", "();\n        ", "System", ".", "out", ".println(", "date", ");\n\n        String ", "format", " = sdf.format(", "date", ");\n        ", "System", ".", "out", ".println(", "format", ");\n\n\n        //解析：格式化的逆过程：字符串 ", "---> 日期", "\n        //这个方法中有一个异常被抛出\n        sdf.parse(", "format", ");\n\n    }\n\n"]], "Tag": "程序设计"}
{"Answer": "[color=blue][b]\r\n如果你的页面时用 超链接的方式 来引用视频等资源。\r\n\r\n你可以先用java程序或JSP脚本，通过File来检测目标资源是否存在？\r\n\r\n如果不存在，就抛出一个 你指定的异常（比如FileNotFoundException）。\r\n\r\n然后为这个异常定义一个 特有的错误页。[/b][/color]", "Konwledge_Point": "异常处理", "Question": ["文件找不到错误如何捕捉处理", ["我用的是spring mvc+hibernate 有一个视频的页面 页面可以找到的，但就是视频找不到所以就会出现404错误用 404捕获不到 应该如何处理这个异常 让找不到的课件跳到统一的一个页面上去", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "classpath看看是不是没把Junit加进去", "Konwledge_Point": "异常处理", "Question": ["【编程小白历险记】Error:(3, 36) java: 程序包org.junit.jupiter.api不存在     各位大佬   这个怎么解决？一脸懵逼！", ["package dljd.demo01;", "\n\n", "public class ThreadTest08 {", "\n    public static void main(String[] args) {", "\n        Thread t = new Thread(new MyRunnable2());", "\n        t.setName(\"t\");", "\n        t.start();", "\n        //希望5秒之后唤醒程序", "\n        try {", "\n            Thread.sleep(1000 * 5);", "\n        } catch (InterruptedException e) {", "\n            //打印异常信息", "\n//            e.printStackTrace();", "\n        }", "\n        //t线程终止睡眠  这种中断异常的方式是依靠了java的异常处理机制", "\n        t.interrupt();//中断线程睡眠", "\n\n", "}\n", "\n\n", "}", "\n\n", "//创建一个实现类", "\nclass MyRunnable2 implements Runnable {", "\n\n", "//重点：run当中的异常不能throws，只能try catch\n//因为run方法在父类中没有抛出任何异常，子类不能比父类抛出更多的异常\n\n@Override\npublic void run() {\n    System.out.println(Thread.currentThread().getName() + \"----->begin\");\n    try {\n        //睡眠1年\n        Thread.sleep(1000 * 60 * 60 * 24 * 365);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    //一年之后才会执行这个代码\n    System.out.println(Thread.currentThread().getName() + \"----->end\");\n    //调用doOther\n   // doOther();\n}\n\n/*因为这个不是继承方法 所以可以try catch\npublic void doOther() throws Exception{*/\n", "\n\n", "}", "\n\n", "结果：", "\n 给我蹦出来个新的java文件", "\npackage dljd.demo01;", "\n\n", "import static org.junit.jupiter.api.Assertions.*; // junit高亮红色显示", "\n\n", "class MyRunnableTest {", "\n\n", "}", "\n然后下面的输出栏出现：Error:(3, 36) java: 程序包org.junit.jupiter.api不存在", "\n\n", "import static org.junit.jupiter.api.Assertions.*;", "\n\n", "看提示我理解的是导包问题，但是不知道对不对！"]], "Tag": "程序设计"}
{"Answer": "楼主可以了解下SpringSide\r\n[url]https://github.com/springside/springside4[/url]\r\n里面包含了不少WEB开发的最佳实践。 :D", "Konwledge_Point": "异常处理", "Question": ["有没有适合学习的开源java web 项目？", ["我想学习下架构设计，权限管理，事务处理， 分页，日志，上传下载，异常处理，和网络安全的最佳实践，现在找到两个合适的项目，都是iteye网友的：thinkgem的jeesite和jinnianshilongnian的es,大家有没有类似的推荐，希望文档齐全，项目不要太庞大，谢谢大家"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你初始化的时候没有给base分配空间&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;bool&lt;/span&gt; InitStack(SqStack* &amp;amp;s)&lt;span class=\"hljs-comment\"&gt;//初始顺序栈&lt;/span&gt;\n{\n    s &amp;#61; (SqStack*)malloc(MAXSIZE * (sizeof(SqStack)));\n    s-&amp;gt;base &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; *)malloc(MAXSIZE * (sizeof(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;)));\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt; &amp;#61;&amp;#61; s-&amp;gt;base)\n    {    \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt; &amp;#61;&amp;#61; s)\n    {    \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n    s-&amp;gt;top &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;*)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    s-&amp;gt;stacksize &amp;#61; MAXSIZE;\n \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["在顺序栈的销毁过程中出现未经异常的处理", ["在顺序栈的销毁过程中出现未经异常的处理", "\n", "\n", "下面是入口", "\n", "\n", "下面是相关代码", "\n", "\n```c\ntypedef ", "struct", "  ", "//创建顺序栈", "\n{\n    ", "int", "* ", "base", ";\n    ", "int", "* top;\n    ", "int", " stacksize;\n}SqStack;\n\n", "bool", " ", "InitStack", "(", "SqStack* &s", ")", "//初始顺序栈", "\n{\n    s = (SqStack*)malloc(MAXSIZE * (", "sizeof", "(SqStack)));\n    ", "if", " (!s->", "base", ")\n    {    \n        ", "return", " ", "false", ";\n    }\n    s->top = (", "int", "*)", "-1", ";\n    s->stacksize = MAXSIZE;\n\n    ", "return", " ", "true", ";\n}\n\n", "// 销毁栈，释放栈空间，栈顶栈底指针置为NULL，长度置为0", "\n", "bool", " ", "DestroyStack", "(", "SqStack* &s", ")", "\n{    \n    free(s->", "base", ");\n    s->", "base", " = s->top = NULL;\n    s->stacksize = ", "0", ";\n    ", "return", " ", "true", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看你的Starter的spring.factories是否装载了这个Bean&amp;#xff0c;如果装载了那么引入你的Stater依赖的时候&amp;#xff0c;出现异常就会交给这个Stater处理。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["springboot自定义starter", ["问题遇到的现象和发生背景", "\n", "我使用springboot自定义了一个starter,在starter中有", "@ExceptionHandler异常处理,请问我在其他项目中引用这个starter ", "出现了Exception会不会被我这个starter处理", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "你的END和EXCEPTION写反了，应该是EXCEPTION在END之前。你这么一写，因为你在外层FOR循环下一行的BEGIN在里层FOR循环结束处就已经有END了，ORACLE在解析的时候，可能直接就把你的这个EXCEPTION当成是和存储过程同级的EXCEPTION。", "Konwledge_Point": "异常处理", "Question": ["请教一个Oracle存储过程问题！", ["我在写oracle存储过程。oracle 9i的。", "\n结构像这样。", "\n\n", "for i in 1..3 loop", "\n    begin", "\n insert ....                                             1", "\n for j in 1..3 loop", "\n    insert ...                                            2", "\n    insert ...                                           3", "\n end loop;", "\nend", "\nexception", "\n   when others then", "\n     ...", "\nend loop;", "\ncommit;", "\n\n", "在2处发生了异常，会到异常处理那里去处理。现在我想把当前的这个循环continue掉。但是1处的insert还是会执行。而如果我在异常里面写rollback了，会报错，之后的循环就不会执行了。", "\n请问下这里该怎么改，才能实现continue效果，还能保证事务的完整性？", "\n\n", "[b]问题补充：[/b]", "\n你的意思是说，如果2处插入时出异常了，那就干脆不插入了。其他地方该怎么执行还怎么执行？", "\n\n", "2处出异常了，1处就不插入了。就是说整个外部循环的此个循环无效了。", "\n下一个循环继续插入。。。。", "\n[b]问题补充：[/b]", "\n我的异常处理是在循环里面的啊。。。。", "\n\n", "[b]问题补充：[/b]", "\n你的END和EXCEPTION写反了，应该是EXCEPTION在END之前。你这么一写，因为你在外层FOR循环下一行的BEGIN在里层FOR循环结束处就已经有END了，ORACLE在解析的时候，可能直接就把你的这个EXCEPTION当成是和存储过程同级的EXCEPTION。", "\n\n", "反过来依然是这个问题。。。。。", "\n\n", "找了半天说是oracle  bug。。。。。", "\n\n", "我用数据反补的方式给手动回滚了。。。谢谢你的热心。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码可这样写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;inp&lt;/span&gt;&amp;#61;input()\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; inp[:-1].isdigit():\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; 1&amp;lt;&amp;#61;int(inp[:-1])&amp;lt;&amp;#61;17:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; inp[-1] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;AaFf&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;窗口&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; inp[-1] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;CDcd&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;过道&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; inp[-1] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;Bb&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;中间&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        raise Exception(&lt;span class=\"hljs-string\"&gt;&amp;#34;无效的座位号&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    raise Exception(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入出现异常&amp;#34;&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如对你有帮助&amp;#xff0c;请点击我回答右上角【采纳】按钮给予采纳&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["这个Python程序要怎么写呀", ["判断火车票座位（异常处理）", "描述", "用户输入一个数字和一个字母组成的座位号，根据字母判断位置是窗口、两人中间‘还是过道。目前中国高铁窗", "的字母是'A'和'F，过道位置是'C'和'D'，中间位置是'B'。", "每个车厢座位排数是1-17，字母不区分大小写。", "要求程序能捕捉到异常输入，当输入异常时（如：去掉最后一位前面不是数字值），输出'输入出现异常’。", "提示：有效的座位号必须满足：最后1位必须是指定字母，去掉最后1位前面的数字值必须是1～17", "输入格式", "输入一个数字和字母组合成的字符串。", "有效的字符串必须满足：1～2位的数字开始，以[A，B，C，DyF，a，b'，c，'d'，f]列表中字符结束的字符串，", "输出格式", "‘窗口、‘中间、过道’、‘输入出现异常、‘无效的座位号"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Looked through library.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;user_error('Connection closed by server', E_USER_NOTICE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It triggers errors. You can handle those errors using &lt;a href=\"http://php.net/manual/en/function.set-error-handler.php\"&gt;http://php.net/manual/en/function.set-error-handler.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;e.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Your file.php\n$ssh = new Net_SSH2('10.199.1.7');        \n$ssh-&amp;gt;login('deploy', $key);\n\n// bootstrap.php\n// This will catch all user notice errors!!!\nset_error_handler ('errorHandler', E_USER_NOTICE)\n\nfunction errorHandler($errno, $errstr, $errfile, $errline) {\n    echo 'Error';\n    // Whatever you want to do.\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["如何使用PHPseclib捕获未处理的错误？", ["\n\n", "Let's say I have the following piece of code.", "\n\n", "To test this, I change the server IP to mimic the error messages. The IP below doesn't exist so the ", "Unhandled Exception", " message is: ", "Cannot connect to 10.199.1.7. Error 113. No route to host", "\n\n", "This displays an ugly screen with PHP code. Is it possible to catch this error?", "\n\n", "try {\n      $ssh = new Net_SSH2('10.199.1.7');        \n  if (!$ssh->login('deploy', $key)) {\n       throw new Exception(\"Failed login\");\n  }\n} catch (Exception $e) {\n     ???\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "![这样能看清吗？](https://img-ask.csdn.net/upload/201703/15/1489578215_44516.jpg)", "Konwledge_Point": "异常处理", "Question": ["java用ClassforName来加载mysql驱动", ["java用ClassforName来加载mysql驱动，已经行异常处理，还是报错，详情如下图"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;检查一下图片路径是否正确&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["在vs2022用easyx在窗口中加载图片，出现未经处理的异常", ["在vs2022用easyx在窗口中加载图片，出现未经处理的异常", "\n", "如图，本人初学，不知道是哪里出了问题，能帮忙看看吗", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT&lt;br /&gt;根据错误信息&amp;#xff0c;这个问题可能是由于连接超时或网络连接不可用导致的。因此&amp;#xff0c;建议您检查以下几个方面&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;确保您的网络连接正常并且能够访问请求的地址。&lt;br /&gt;确保请求的地址正确且存在&amp;#xff0c;尝试在浏览器中打开请求的地址并查看是否可以正常访问。&lt;br /&gt;考虑增加超时设置&amp;#xff0c;以便在网络连接不可用时能够更快地失败并抛出异常。&lt;br /&gt;在您的代码中&amp;#xff0c;可以尝试添加以下代码行来设置超时&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-attribute\"&gt;response&lt;/span&gt; &amp;#61; urllib.request.urlopen(&amp;#39;http://site2.rjkflm.com:&lt;span class=\"hljs-number\"&gt;666&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;123&lt;/span&gt;index.html&amp;#39;, timeout&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中&amp;#xff0c;timeout参数设置了超时时间为10秒。您可以根据需要将超时时间设置为适当的值。如果在超时时间内无法连接到请求地址&amp;#xff0c;将引发urllib.error.URLError异常&amp;#xff0c;您可以在except代码块中处理这个异常。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python爬虫学习中遇到的问题", ["在进行异常处理学习的时候，遇到的问题，本来应该是返回状态码，异常信息和请求头信息的，但是反馈回来是", "urllib.error.URLError: <urlopen error [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。>", "书上给的代码都是这样，想有没有人帮帮我看看", "\n", "import", " urllib.request    ", "# 导入urllib.request模块", "\n", "import", " urllib.error      ", "# 导入urllib.error模块", "\n", "try", ":\n    ", "# 向不存在的网络地址发送请求", "\n    response = urllib.request.urlopen(", "'http://site2.rjkflm.com:666/123index.html'", ")\n    ", "print", "(response.status)\n", "except", " urllib.error.HTTPError ", "as", " error:    ", "# 捕获异常信息", "\n    ", "print", "(", "'状态码为：'", ",error.code)                      ", "# 打印状态码", "\n    ", "print", "(", "'异常信息为：'", ",error.reason)                  ", "# 打印异常原因", "\n    ", "print", "(", "'请求头信息如下：\\n'", ",error.headers)           ", "# 打印请求头", "\n\n\n"]], "Tag": "程序设计"}
{"Answer": "语句顺序问题。\r\ninit方法中：\r\n移动\r\nmainFrame.add(loginJpanel);//添加登陆界面 \r\n到\r\nloginJpanel.setOpaque(false);//将登陆界面设置为透明 \r\n后\r\n\r\nshowMe方法中：\r\n移动\r\nmainFrame.setVisible(true);//设置frame 可见 \r\n到方法的末尾。\r\n\r\n这样修改后，运行时正常了", "Konwledge_Point": "异常处理", "Question": ["请问我该如何处理这些异常", ["各位好，小弟刚学java一个月，更是刚接触swing没几天，现遇到一些问题，希望大家能够帮忙指导下，下面的代码是学习班我们组刚开的一个项目，是做的航空公司柜员系统，我负责界面设计，因为我看了论坛上各位大大用SWING做的界面很帅~很羡慕，所以就自告奋勇接了下来，下面的代码是设置背景图片，改变外观的代码，编译无错，运行出界面，但也报了很多异常，小弟实在不知道怎么处理，望有人帮忙", "\n\n", "package clientframe;", "\nimport java.awt.Toolkit;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\nimport javax.swing.ImageIcon;", "\nimport javax.swing.JButton;", "\nimport javax.swing.JFrame;", "\nimport javax.swing.JLabel;", "\nimport javax.swing.JPanel;", "\nimport javax.swing.JPasswordField;", "\nimport javax.swing.JTextField;", "\nimport javax.swing.SwingUtilities;", "\nimport javax.swing.UIManager;", "\n/**", "\n\n", "\n", "\n", "@author dj2041", "\n", "@version V1.0", "\n", "\n", "/", "\npublic class CloginFrame {", "\nprivate JFrame mainFrame;", "\nprivate JPanel loginJpanel;", "\nprivate JLabel idJlabel;", "\nprivate JLabel passwordJlabel;", "\nprivate JTextField idTextField;", "\nprivate JPasswordField passwordField;", "\nprivate JButton enterButton;", "\nprivate JButton cancerButton;", "\npublic CloginFrame() {", "\n    mainFrame=new JFrame();", "\n    idJlabel=new JLabel(\"工号\");", "\n    idTextField=new JTextField(15);", "\n    passwordJlabel=new JLabel(\"密码\");", "\n    passwordField=new JPasswordField(15);", "\n    enterButton=new JButton(\"确定\");", "\n    cancerButton=new JButton(\"取消\");", "\n    loginJpanel=new JPanel();", "\n    ImageIcon img = new ImageIcon(\"背景.jpg\");", "\n    setBackground(mainFrame,img);", "\n    init();", "\n    eventhandler();", "\n}", "\n/", "*", "\n\n", "\n", "\n", "@param frame 被设置的容器", "\n", "\n", "@param img  被设置为背景的图片", "\n*/", "\npublic void setBackground(JFrame frame,ImageIcon img){", "\nJLabel imgLabel=new JLabel(img);//将图片放入一个JLabel中", "\nimgLabel.setBounds(0, 0, img.getIconWidth(), img.getIconHeight());//设置图片所在的JLabel的属性", "\nframe.getLayeredPane().add(imgLabel,new Integer(Integer.MIN_VALUE));//将图片添加到LayeredPane层", "\n((JPanel) frame.getContentPane()).setOpaque(false);//使内容层透明", "\n}", "\nprivate void init(){", "\nmainFrame.setLayout(null);//设置为自定义布局", "\nmainFrame.add(loginJpanel);//添加登陆界面", "\nloginJpanel.add(idJlabel);", "\nloginJpanel.add(idTextField);", "\nloginJpanel.add(passwordJlabel);", "\nloginJpanel.add(passwordField);", "\nloginJpanel.add(enterButton);", "\nloginJpanel.add(cancerButton);//顺序添加组件", "\nloginJpanel.setSize(200, 120);//设置大小", "\nloginJpanel.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width/2-120, Toolkit.getDefaultToolkit().getScreenSize().height/2+60);", "\n//根据分辨率设置登陆界面相对位置", "\nloginJpanel.setOpaque(false);//将登陆界面设置为透明", "\n}", "\npublic void showMe(){", "\n\n", "mainFrame.setVisible(true);//设置frame 可见", "\nmainFrame.setLocation(0,0);//设置frame的位置", "\nmainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//设置关闭按钮命令", "\nmainFrame.setSize(Toolkit.getDefaultToolkit().getScreenSize().width, Toolkit.getDefaultToolkit().getScreenSize().height);//根据系统分辨率设置frame大小", "\ntry {", "\n    UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel\");//设置外观风格", "\n    SwingUtilities.updateComponentTreeUI(mainFrame);", "\n} catch (Exception e) {", "\n    e.printStackTrace();", "\n}", "\n}", "\npublic void eventhandler(){", "\n//?????", "\ncancerButton.addActionListener(new ActionListener(){", "\n    @Override", "\n    public void actionPerformed(ActionEvent e) {", "\n        // TODO Auto-generated method stub", "\n        System.exit(0);", "\n    }", "\n\n", "});", "\n}", "\npublic static void main(String[] args) {", "\nnew CloginFrame().showMe();", "\n}", "\n}", "\n", "\n", "\n", "\n", "异常如下：Exception in thread \"AWT-EventQueue-0\" java.lang.NullPointerException", "\n    at javax.swing.plaf.synth.SynthLookAndFeel.paintRegion(SynthLookAndFeel.java:387)", "\n    at javax.swing.plaf.synth.SynthLookAndFeel.update(SynthLookAndFeel.java:351)", "\n    at javax.swing.plaf.synth.SynthRootPaneUI.update(SynthRootPaneUI.java:77)", "\n    at javax.swing.JComponent.paintComponent(JComponent.java:763)", "\n    at javax.swing.JComponent.paint(JComponent.java:1027)", "\n    at javax.swing.JComponent.paintToOffscreen(JComponent.java:5122)", "\n    at javax.swing.BufferStrategyPaintManager.paint(BufferStrategyPaintManager.java:277)", "\n    at javax.swing.RepaintManager.paint(RepaintManager.java:1217)", "\n    at javax.swing.JComponent._paintImmediately(JComponent.java:5070)", "\n    at javax.swing.JComponent.paintImmediately(JComponent.java:4880)", "\n    at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:803)", "\n    at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:714)", "\n    at javax.swing.RepaintManager.seqPaintDirtyRegions(RepaintManager.java:694)", "\n    at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(SystemEventQueueUtilities.java:128)", "\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)", "\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)", "\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)", "\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)", "\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)", "\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)", "\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)", "\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;重做系统吧&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["请问电脑启动异常怎么处理？", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以当成缺失值选用中位数&amp;#xff0c;也可以当成异常值&amp;#xff0c;主观判断&amp;#xff0c;或者加入其它算法&amp;#xff0c;具体看我之前笔记为&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/submarineas/article/details/103863310\" id=\"textarea_1663575634178_1663575781761_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;房价租金预测总结笔记_submarineas的博客-CSDN博客_租金预测&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;问题与数据说明任务 本次赛题主要是通过房产市场、租赁市场、市场需求以及房屋配置来做出合理的房租预测&amp;#xff0c;以应对市场变化对运营商和房产机构带来的影响。命题方向为运用机器学习、人工智能等模型算法&amp;#xff0c;结合模型的创新能力&amp;#xff0c;来实现准确预测的目的。数据  线上比赛要求参赛选手根据给定的数据集&amp;#xff0c;建立模型&amp;#xff0c;预测房屋租金。 数据集中的数据类别包括租赁房源、小区、二手房、配套、新房、土地、人口、客户、真实...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/submarineas/article/details/103863310&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["如何算房价的平均数，因为有异常值，“价格待定”那里如何处理？", ["\n", "如何算房价的平均数，因为有异常值，“价格待定”那里如何处理？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/449553323356193.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Sq&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; x;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; n;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; f &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Sq&lt;/span&gt;(n);\n        cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;的平方根:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; f &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; e)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;错误:输入的不能是负数:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; e &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["C++函数模板和类模板", ["编写一个程序，求输入数的平方根。设置异常处理，对输入负数的情况给出提示。", "提示：", "#include", "#include ", "using namespace std;", "double Sq(double x)", "{", "    if (x < 0)", "        throw x;", "    return sqrt(x);", "}", "……"]], "Tag": "程序设计"}
{"Answer": "找到原因了（笑哭），突然发现是因为把动态空间的申请放进了数据输入错误才会执行的判定语句里面", "Konwledge_Point": "异常处理", "Question": ["0xC0000005: 写入位置 0x0000001C 时发生访问冲突。越界错误但是找不到在哪里", ["断点调试停在switch语句的p1部分，显示p1内存无法读取", "\n\n", "插入不了图片。。。。\n请大佬帮忙看看\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n/*定义单向链表类型StuLink，链表结点包含xh、xm、cj、dj、mc、nxet六个数据项\n分别代表学生的学号、姓名、成绩、等级、名次和指向下一个结点的指针，\n其中：学号、姓名、成绩是输入项，等级、名次是计算项*/\n", "\n\n", "\n struct StuLink\n{\n    int xh;\n    char xm[20];\n    int cj;\n    char dj;\n    int mc;\n    struct StuLink*next;\n};\n", "\n\n", " /* Creat_Link函数（10分）：建立一个StuLink类型的学生链表，返回链表头指针\n 每个链表结点代表一个学生信息，要求输入学号、姓名和成绩\n 其中：学号从1开始按递增1自动生成，成绩必须在[0,100]区间的整数，当输入成绩为-1时，表示输入结束*/\nstruct StuLink*Creat_Link()\n{\n    struct StuLink*list=0,*p1=0,*p2;int i=1;\n    int score;char name[20];\n    //list->xh =0;p2=list;\n    printf(\"\\n输入成绩为-1，结束输入！\\n\");\n    printf(\"请输入学生姓名\\n\");\n    scanf(\"%s\",name);\n    printf(\"请输入学生成绩\\n\");\n    scanf(\"%d\",&score );\n    while(score!=-1)\n    {\n        if(score<0||score>100)\n            {\n                    printf(\"输入成绩格式错误，请重新输入正确的学生成绩\\n\");\n                    scanf(\"%d\",&score );\n                    if( (p1=(struct StuLink*)malloc(sizeof(struct StuLink)))    ==0)\n                    {\n                        printf(\"动态内存空间分配失败\\n\");\n                        exit(0);\n                    }\n            }\n        else\n        {\n            switch(score/10)\n            {\n                case 9:p1->dj='A';break;    //计算等级\n                case 8:p1->dj='B';break;\n                case 7:p1->dj='C';break;\n                case 6:p1->dj='D';break;\n                default:p1->dj='E';\n            }\n            i++;\n            p1->xh =i;\n            p1->cj =score;\n            strcpy(p1->xm,name);\n\n            if(list==0)\n                list=p1;\n            else\n                p2->next=p1;\n            p2=p1;\n            printf(\"请输入学生姓名   \");\n            scanf(\"%s\",name);\n            printf(\"请输入学生成绩   \");\n            scanf(\"%d\",&score);\n            }\n    }\n    return list;\n}\n", "\n\n", "```int main()", "\n{", "\n    menu1();", "\n    Creat_Link ();", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;run.exec(&amp;#34;notepad.exe&amp;#34;);涉及到io流的读取&amp;#xff0c;所以可能存在异常&amp;#xff0c;比如exec内的文件名写错了等。所以要处理可能存在的io异常。&lt;/p&gt;\n\n&lt;p&gt;Thread.线程异常&amp;#xff0c;线程在执行过程中&amp;#xff0c;可能会被中断&amp;#xff0c;阻塞导致异常&amp;#xff0c;所以需要处理中断异常&amp;#xff0c;即 InterruptedException。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["学JAVA编译器Eclipse用.exec提示未处理的异常类型 IOException", ["\n", "package packagetest8;\npublic class Javatest68 {\n    public static void main(String[] argv) {\n        \n        Runtime run=Runtime.getRuntime();\n        Process pro=run.exec(\"notepad.exe\");\n        Thread.sleep(5000);\n        pro.destroy();\n    }\n}\n", "\n\n", ".exec提示未处理的异常类型 IOException", "\n\n", "Thread.提示未处理的异常类型 InterruptedException", "\n\n", "用throws可以解决但是！！！不知道这俩错误怎么产生的！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;每个类初始化的时候都会执行自己的构造方法&amp;#xff0c;没明白你疑惑的点在哪。&lt;/li&gt;&lt;li&gt;我猜测它放的这个值应该是后面在界面上显示的&amp;#xff0c;所以需要放值。&lt;/li&gt;&lt;li&gt;因为这里是finally 所以你这段代码不管有没有异常都会走到这里&amp;#xff0c;但是如果出现了异常&amp;#xff0c;你的rs这些变量有可能是空&amp;#xff0c;这个时候再执行close又会报空指针。&lt;/li&gt;&lt;li&gt;最后finally那里的close 要单独try catch 每一个&amp;#xff0c;要不然可能会出现前面的流关闭报了异常&amp;#xff0c;后面的流就没有执行关闭了。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "异常处理", "Question": ["有一段Java代码不理解", ["\n", "请问1.红色的地方为什么不只写Javaswing的构造方法？", "2.蓝色的地方为什么要写两个向量，只构造vdata不可以吗？", "3.绿色的地方判断这些是否为null是为什么", "4.这个代码还有哪些异常处理需要完善呢？"]], "Tag": "程序设计"}
{"Answer": "反射错误，对象生成时出了错误\r\n看下你是不是少了包\r\njavassist-3.7.ga.jar", "Konwledge_Point": "异常处理", "Question": ["java.lang.runtimeException此类异常如何处理", []], "Tag": "程序设计"}
{"Answer": "oracle没有提供finally,不过可以通过exception实现，把finally的处理做成一个方法,比如：final_process\r\n\r\n\r\nDECLARE\r\n    \r\nBEGIN\r\n    ...\r\n    ...\r\n    \r\n    final_process();\r\nEXCEPTION \r\n    WHEN OTHERS THEN\r\n        final_process();\r\nEND;", "Konwledge_Point": "异常处理", "Question": ["Oracle数据库Exception处理 怎么实现java里面的finally块那样的功能？", ["我们都知道java里面finally块里面的内容是在产生异常或者不产生异常都会执行（虚拟机停止工作除外），怎么才能让Oracle里面的Exception也能实现同样的功能啊？ :oops: "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码错了&amp;#xff0c;循环控制变量不应该是 j&amp;#43;&amp;#43;&amp;#xff0c;而应该是 j&amp;#43;&amp;#61;4&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["MFC截图后处理像素的时候，提取RGB值时有些异常不知道问题在哪，如何解决？", ["MFC截图后处理像素的时候，提取RGB值时有些异常", "不知道问题在哪", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/liudong8510/article/details/7329907", "Konwledge_Point": "异常处理", "Question": ["WCF客户端调用时出现”无法处理消息。这很可能是因为操作不正确“问题", ["今天在使用WCF调试时出现了以下异常", "\n”无法处理消息。这很可能是因为操作“", "http://tempuri.org/IUserInfo/GetUserUserList”不正确，或因为消息包含无效或过期的安全上下文令牌，或因为绑定之间出现不匹配。如果由于未处于活动状态导致服务中止了该通道，则安全上下文令牌无效。若要防止服务永久中止闲置会话，请增加服务终结点绑定上的接收超时“", "\n\n", "服务器端的配置如下", "\n\n", " <system.serviceModel>\n      <!--测试配置-->\n      <bindings>\n      <wsHttpBinding>\n        <binding name=\"WSHttpBinding_IUserInfo\"\n          maxBufferPoolSize=\"12000000\" maxReceivedMessageSize=\"12000000\" useDefaultWebProxy=\"false\">\n          <readerQuotas maxStringContentLength=\"12000000\" maxArrayLength=\"12000000\"/>\n          <security mode=\"None\"/>\n        </binding>\n      </wsHttpBinding>\n    </bindings>\n      <services>\n        <service name=\"WCFMonitorInterface.UserInfoService\">\n          <!-- Service Endpoints -->\n          <endpoint address=\"http://192.168.14.18:20005/UserInfoService/mex\" binding=\"wsHttpBinding\"\n                    bindingConfiguration=\"WSHttpBinding_IUserInfo\" \n                      contract=\"WCFMonitorInterface.Interfaces.IUserInfo\">\n          </endpoint>\n        </service>\n      </services>\n    <behaviors>\n      <serviceBehaviors>\n        <behavior>\n          <!-- 为避免泄漏元数据信息，请在部署前将以下值设置为 false -->\n          <serviceMetadata httpGetEnabled=\"true\" httpGetUrl=\"http://192.168.14.18:20005/UserInfoService/metadata\"/>\n          <!-- 要接收故障异常详细信息以进行调试，请将以下值设置为 true。在部署前设置为 false 以避免泄漏异常信息 -->\n          <serviceDebug includeExceptionDetailInFaults=\"false\"/>\n        </behavior>\n      </serviceBehaviors>\n    </behaviors>\n    <protocolMapping>\n        <add binding=\"basicHttpsBinding\" scheme=\"https\" />\n    </protocolMapping>    \n    <serviceHostingEnvironment aspNetCompatibilityEnabled=\"true\" multipleSiteBindingsEnabled=\"true\" />\n  </system.serviceModel>\n", "\n\n", "客户端配置如下", "\n\n", " <system.serviceModel>\n    <bindings>\n      <wsHttpBinding>\n        <binding name=\"WSHttpBinding_IUserInfo\"\n  maxBufferPoolSize=\"12000000\" maxReceivedMessageSize=\"12000000\" useDefaultWebProxy=\"false\">\n          <readerQuotas maxStringContentLength=\"12000000\" maxArrayLength=\"12000000\"/>\n          <security mode=\"None\"></security>\n        </binding>\n      </wsHttpBinding>\n    </bindings>\n    <client>\n      <endpoint address=\"http://192.168.14.18:20005/UserInfoService\"\n          binding=\"wsHttpBinding\" bindingConfiguration=\"WSHttpBinding_IUserInfo\"\n          contract=\"UserInfoService.IUserInfo\" name=\"WSHttpBinding_IUserInfo\">\n        <identity>\n          <userPrincipalName value=\"ludi\\ODST\" />\n        </identity>\n      </endpoint>\n    </client>\n  </system.serviceModel>\n\n", "\n\n", "由于WCF服务是寄宿在一个控制台程序下，也做了一些初始设置，代码如下", "\n\n", " host.AddServiceEndpoint(typeof(IUserInfo), new WSHttpBinding(), uri);\n                        if (host.Description.Behaviors.Find<ServiceMetadataBehavior>() == null)\n                        {\n                            ServiceMetadataBehavior behavior = new ServiceMetadataBehavior();\n                            behavior.HttpGetEnabled = true;\n                            behavior.HttpGetUrl = new Uri(MetaUri);\n                            host.Description.Behaviors.Add(behavior);\n                        }\n                        host.Opened += delegate\n                        {\n                            Console.WriteLine(\"WCF服务已开启\");\n                            Console.WriteLine(\"WCF服务元数据地址：\"+MetaUri);\n                        };\n                        host.Open();\n", "\n\n", "以上，望解答，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把原始代码贴一下看看,怕你精简这个代码不是原代码的本意&lt;/p&gt;\n&lt;p&gt;首先,应该有个地方声明了这个&amp;#34;A&amp;#34;作为exception,&lt;br /&gt;然后,顺着这个代码思路来看,假设他不加第二个raise,那么这段代码在遇到A这种异常的时候,就不会抛出错误,而只是执行了一次c_01过程(这个是在写日志表吧,而且应该是个独立事务)而已。加上第二个raise,目的就让它既记录日志也抛出错误。&lt;br /&gt;其实这里的日志可能是后期加进去的,&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;declare&lt;/span&gt;\na &lt;span class=\"hljs-keyword\"&gt;EXCEPTION&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;raise&lt;/span&gt; A&amp;#xff1b;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&amp;#xff1b;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;;\n/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后后面要加日志,就写了个exception,其实这个时候的raise A已经和第一个raise A 不一样了。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;exception里面如果不raise的话&amp;#xff0c;程序不会向调用它的程序抛出错误&amp;#xff0c;至于是raise A还是raise别的&amp;#xff0c;不影响这段程序的运行逻辑。其实如果exception里不raise,你就可以当它是个类似if或者case when的判断逻辑&amp;#xff0c;如果出现特定情况就执行特定的代码&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["sql文exception中出现的raise是什么意思", ["刚学plsql，看到一个项目，异常处理文里面在最后又写了一个raise是什么意思呢。", "\n", "大概是像下面这样的结构（简化了）：", "\n", "begin", "  if i = 0 then", "        raise A；", "  end if；", "exception", "  when A then", "          c_01（", "             f => g", "             d => s", "          )", "         rollback；", "         raise A；--这里是什么意思", "end", "；"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;出现了数组越界异常。方法内的row和col是char类型的。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["引发了未经处理的异常:写入访问权限冲突。 board 是 0x11100DE。", ["\n", "\n", "在向数组写入的过程中，", "引发了未经处理的异常:写入访问权限冲突。 board 是 0x11100DE，", "就会报这样的错误，真的不知道该怎么解决了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你while true啊&lt;/p&gt;\n\n&lt;p&gt;所以抓到异常了之后&amp;#xff0c;被catch处理掉了 程序不会停止 然后又到循环头部了&lt;/p&gt;\n\n&lt;p&gt;如果你不用try catch&amp;#xff0c;直接获取int之后show 一下,就直接抓到异常 程序就终止了。&lt;/p&gt;\n\n&lt;p&gt;try catch就是为了防止程序异常终止。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["while循环中try...catch死循环", ["\n", "public class test {\n    public static void main(String[] args) {\n        Scanner sv = new Scanner(System.in);\n        while (true) {\n            System.out.println(\"请输入值\");\n            try {\n                int index = sv.nextInt();\n                show(index);\n                break;\n            } catch (asd e) {\n                System.out.println(e.toString());\n                continue;\n            } catch (InputMismatchException e) {\n                System.out.println(\"输入错误\");\n                continue;\n            }\n        }\n\n    }\n\n    public static void show(int i) {\n        if (i < 10) {\n            System.out.println(i);\n        } else {\n            throw new asd(\"请输入一个小于10的数\");\n        }\n\n    }\n}\n\n\n//异常\npublic class asd extends RuntimeException {\n    public asd() {\n\n    }\n\n    public asd(String message) {\n        super(message);\n    }\n}", "\n", "\n\n", " 当输入小于10 的时候,代码会结束while循环", "\n\n", "\n\n", "输入大于10 的时候,会一直让重新输入", "\n\n", "\n\n", "输入字符的时候,会捕获异常进入死循环", "\n\n", "\n\n", "怎么才能解决这个死循环,捕获输入错误,并重新输入"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;很可能是数组越界了&amp;#xff0c;索引大于等于size()的大小了。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["读取访问权限冲突是什么原因要怎么解决！", ["引发未经处理的异常：读取访问权限冲突怎么处理", "\n\n"]], "Tag": "程序设计"}
{"Answer": "[quote]load\r\n\r\npublic Object load(Class theClass,\r\n                   Serializable id)\r\n            throws HibernateException\r\n\r\n    Return the persistent instance of the given entity class with the given identifier, assuming that the instance exists. This method might return a proxied instance that is initialized on-demand, when a non-identifier method is accessed.\r\n\r\n    You should not use this method to determine if an instance exists (use get() instead). Use this only to retrieve an instance that you assume exists, where non-existence would be an actual error.\r\n\r\n    Parameters:\r\n        theClass - a persistent class\r\n        id - a valid identifier of an existing persistent instance of the class \r\n    Returns:\r\n        the persistent instance or proxy \r\n    Throws:\r\n        HibernateException[/quote]\r\n这是从hibernate api 文档中session的load方法的介绍，人家告诉你了：你不能用这个方法来判定实体是否存在，而应该用get()替代。\r\n我试验了一下，\r\nget()的话，如果不存在，返回的是null\r\nload()则返回的是一个代理对象，如果你不使用这个对象，不会有任何问题，如果访问这个对象，就会有一个异常，如：org.hibernate.ObjectNotFoundException: No row with the given identifier exists: [test.UserTable#920]\r\n\r\n所以，我建议你使用get。", "Konwledge_Point": "异常处理", "Question": ["Tomcat errorPage 配置问题", ["JDK版本：jdk1.6.0", "\n\n", " ", "\n\n", "Tomcat 版本：apache-tomcat-6.0.18", "\n\n", "  <error-page>", "    <error-code>401</error-code>", "    <location>/401.htm</location>", "  </error-page>", "  <error-page>", "    <error-code>403</error-code>", "    <location>/403.htm</location>", "  </error-page>", "  <error-page>", "    <error-code>404</error-code>", "    <location>/404.htm</location>", "  </error-page>", "  <error-page>", "    <error-code>500</error-code>", "    <location>/500.htm</location>", "  </error-page>", " <error-page>", "    <exception-type>java.lang.Exception</exception-type>", "    <location>/errorProcess.jsp</location>", "</error-page>", "\n\n", " ", "\n\n", "模拟出错场景：客户发送请求在先 ", "\n\n", "                     客户端得到的新闻链接存在       恰好后台管理员客户单击连接前删除了该新闻                ", "\n\n", "                     向服务器端请求的路径如下：detail.jsp?i=402881e41e743103011e7447faa90005", "\n\n", "                     新闻详细页detail.jsp中处理了该请求 会调用service类处理 在不存在该记录时 hibernate会抛出NotObject异常", "\n\n", "疑惑：异常本应该本tomcat截获并处理 跳转到/errorProcess.jsp 进行友好提示 但是事实是：仍会跳转到detail.jsp页面 可想而知这个页面的遭遇是面目全非", "\n\n", "期待大家的回复  ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "问题补充：", "throne212 ", "hibernate层如下：", "public Object findByModelId(Class model,String modelId) {", "  return this.getHibernateTemplate().load(model, modelId);", "}", "spring层如下：", "public Object findByModelId(Class model,String modelId) throws Exception {", "  return getBaseDao().findByModelId(model,modelId);", "  }", "我们的整个架构都是将异常集中在spring层进行catch ", "现在的问题是  整个项目已经接近尾声 需要一个通用的方法 ", "如果为每个dao都增加异常处理 这个工作量相当大  请提供一个简单实用的方法 谢谢"]], "Tag": "程序设计"}
{"Answer": "嗯，二楼的说法不错，看视频的效果不错，本人就是看视频学习struts2的，其实学习struts2有些java基础就行了，最重要的上机操作，多敲敲代码，还有就是尚学堂的视频很不错，个人看法是比传智的好一些--当然这是个人看法，要下载视频的话直接到尚学堂或者传智网下就行了，不过有点麻烦，要评论之类的。另外提醒的就是不要单单的看视频，敲代码才是最重要的。\r\n\r\n下面几个下载的网址，希望对楼主有点帮助！\r\n传智：http://www.itcast.cn/video\r\n尚学堂：http://www.bjsxt.com/download.asp\r\n至于电驴那里的下载资源很多，推荐去看看！！", "Konwledge_Point": "异常处理", "Question": ["我该怎么办。。", ["我是一名大四学生，今年2月底，我到一家外包公司实习，毕业后可以留在那的。", "\n在学校，我从来没学过java，就学了点C语言，在公司实习，我就看了一本清华出版社的高等学校教材《Java2程序设计基础》，里面讲的全是类、对象、抽象类、接口、异常处理的基本语法。现在公司让我看Struts2框架，我看了有点吃力，我想问针对我这种情况，有什么Struts2的入门书籍么？ 或者，各位老大们告诉我下，我该怎么学，要看哪些书，才能参与到项目中去啊？。。。", "\n苦恼中。。。"]], "Tag": "程序设计"}
{"Answer": "面向切面的方法好像都是通过代理调用的吧，开销也比较大，为了省略一个null值判断而用切面编程，我觉得不可取，当然不判断null值而是catch空指针的做法更加是舍本逐末。\r\n\r\n如果你的业务处理逻辑是一个过滤器链的结构，那么在其中一个节点加上一个通用的对null值判断的过滤器可以省下你所面临的麻烦。", "Konwledge_Point": "异常处理", "Question": ["求解去掉null值判断的解决方法", ["[code=\"java\"]//假设这个方法要取到list.get(0)的值进行计算", "\n//那么 这段方法的开头必须是", "\npublic void mymethod(List", " list){", "\nIf(list!=null&&list.size()>0){", "\nA  a= list.get(0);", "\nIf(a!=null){", "\n//进行相关的业务实现", "\n}", "\n}", "\n}", "\n//或者也可以", "\npublic void mymethod(List", " list){", "\ntry{", "\nA  a= list.get(0);", "\n//进行相关的业务实现", "\n}", "\ncatch(Exception e){", "\n//异常处理，但是抛出一个异常 成本应该是比较高的。", "\n}", "\n}", "\n//请问各位看官 有没有更好地办法，控制入口值，", "\n使这个方法变成这样", "\nPublic void mymethod(List", " list){", "\nA  a= list.get(0);", "\n//进行相关的业务实现", "\n}", "\n//像null这种判断  我相信各位在java开发中 调用别人的接口时  会经常将取出来的值进行必要的null值判断，或者是在接受参数的时候做null值判断", "\n\n", "[/code]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;常见的错误就是文件找不到&amp;#xff0c;或编码错误&amp;#xff0c;可以指定错误类型进行输出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;def writefile(filepath, content, &lt;span class=\"hljs-attribute\"&gt;encoding&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;):\n    try:\n        f &amp;#61; open(filepath,&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;encoding&lt;/span&gt;&amp;#61;encoding)\n        f.write(content)\n        f.close()\n    except UnicodeEncodeError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;编码错误&amp;#34;&lt;/span&gt;)\n    except Exception as e:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出现异常&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e)\n\ndef readfile(filepath, &lt;span class=\"hljs-attribute\"&gt;encoding&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;):\n    try:\n        f &amp;#61; open(filepath,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;encoding&lt;/span&gt;&amp;#61;encoding)\n        content &amp;#61; f.readlines()\n        f.close()\n        return &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.join(content)\n    except FileNotFoundError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件未找到&amp;#34;&lt;/span&gt;)\n    except UnicodeDecodeError:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;解码错误&amp;#34;&lt;/span&gt;)\n    except Exception as e:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出现异常&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e)\n\n\ngushi &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;白日依山尽&amp;#xff0c;黄河入海流。\\n欲穷千里目&amp;#xff0c;更上一层楼。\\n&amp;#34;&lt;/span&gt;\nwritefile(&lt;span class=\"hljs-string\"&gt;&amp;#34;gushi.txt&amp;#34;&lt;/span&gt;, gushi)\n\ncontent &amp;#61; readfile(&lt;span class=\"hljs-string\"&gt;&amp;#39;gushi.txt&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; content:\n    writefile(&lt;span class=\"hljs-string\"&gt;&amp;#34;copy.txt&amp;#34;&lt;/span&gt;, content)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;复制完毕&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["try.except,finally语句的使用方法", ["问题遇到的现象和发生背景", "\n", "python网课的作业题，我只写出了下面代码实现了题目要求的运算结果，但是不会使用def函数，不知道应该在哪里使用try,except,finally语句添加异常处理，求指点。", "\n", "\n", "我写出的代码", "\n", "f = open(\"gushi.txt\",\"w\")", "f.write(\"白日依山尽，黄河入海流。\"\"\\n\"\"欲穷千里目，更上一层楼。\"\"\\n\")", "f.close()", "f = open(\"gushi.txt\")", "copy = open(\"copy.txt\",\"w\")", "content = f.readlines()", "for i in content:", "    copy.write(i)", "f.close()", "copy.close()"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes, code will continue. In php exists errors and exceptions. You can handle errors with function &lt;code&gt;set_error_handler()&lt;/code&gt;, handle uncathable exceptions with function &lt;code&gt;set_exception_handler()&lt;/code&gt; and you can handle exceptions using &lt;code&gt;try .. catch&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP  - 尝试并捕获块（异常）处理", ["\n\n", "I'm in doubt about exception handling.", "\n\n", "If I have a function ", "foo();", " is it same as if I handle it like this:", "\n\n", "try {\n    foo();\n} catch (Exception $e) {\n    // do someting\n}\n", "\n\n", "or if I do it in function like this:", "\n\n", "foo() {\n    try {\n       // function body\n    } catch (Exception $e) {\n       // do someting\n    }\n}\n", "\n\n", "And what if I do not throw ", "Exception", " ? Code will continue to execute even if error appears ?", "\n    "]], "Tag": "程序设计"}
{"Answer": "mapper没注入进来呗，检查下为什么没注入进来，是注解未生效，还是什么其他原因，debug下", "Konwledge_Point": "异常处理", "Question": ["MockMvc测试contorller，其中的mapper空指针异常，mapper是否需要进行特别处理？", ["Controller中注入了一个mapper：", "\n\n", "    @Autowired\n    private BingWallpaperMapper bingWallpaperMapper;\n", "\n\n", "使用MockMvc测试Controller时，", "\n\n", "    @RunWith(SpringRunner.class)\n    @SpringBootTest\n    public class BingWallpaperApiControllerTest {\n\n    private MockMvc mockMvc;\n\n    @Before\n    public void setUp() throws Exception {\n\n        mockMvc = MockMvcBuilders.standaloneSetup(new BingWallpaperApiController()).build();\n    }\n    }\n", "\n\n", "出现异常：", "\n\n", "org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\n    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n    at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\n    at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:167)\n    at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:134)\n    at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:183)\n    at xyz.yansheng.bing.wallpaper.controller.BingWallpaperApiControllerTest.testGetWallpaper(BingWallpaperApiControllerTest.java:41)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\n    at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\nCaused by: java.lang.NullPointerException\n    at xyz.yansheng.bing.wallpaper.controller.BingWallpaperApiController.getWallpaper(BingWallpaperApiController.java:116)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n    ... 41 more\n\n", "\n\n", "研究后发现是Controller中用到的mapper空指针异常，想请教下该如何处理这个问题？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I think what you are asking is more about when to print errors not when handle or not the errors. In my case I like printing all logs that I can if I think they will be useful for me in future. &lt;/p&gt;\n\n&lt;p&gt;In your case maybe the message &lt;code&gt;logs.Error(\"Error while parsing \")&lt;/code&gt; is too verbose because you are not showing any details there.&lt;/p&gt;\n\n&lt;p&gt;Other approach that you can consider is returning your custom error to the top level functions instead of in the deeper ones and only display the log message there. In the case of the example should be something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func main() {\n    bma, err := Parse(\"path\")\n    if err != nil {\n        log.Println(err)\n        return\n    }\n}\n\nfunc Parse(source string) (bma.Bma, error) {\n    file, err := ioutil.ReadFile(source + \"bma.yaml\")\n    m := bma.Bma{}\n    if err != nil {\n        return m, fmt.Errorf(\"Not able to read the bma file: %s\", err.Error())\n    }\n    err = yaml.Unmarshal([]byte(file), &amp;amp;m)\n    if err != nil {\n        return m, fmt.Errorf(\"Not able to unmarshal the bma file: %s\", err.Error())\n    }\n    return m, err\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["从函数和调用者到终端的Golang错误处理", ["\n\n", "I want to ask about best practise of error handling,\nLets assume I've the following function that read file parse it,\nwhich could return two types of errors , when the file not found and the unmarshal failed ", "\n\n", "func Parse(source string) (bma.Bma, error) {\n    file, err := ioutil.ReadFile(source + \"bma.yaml\")\n    m := bma.Bma{}\n    if err != nil {\n        logs.Error(\"Not able to read the bma file\")\n        return m, err\n    }\n    err = yaml.Unmarshal([]byte(file), &m)\n    if err != nil {\n        logs.Error(\"Not able to unmarshal the bma file \")\n        return m, err\n    }\n    return m, err\n}\n", "\n\n", "Now If I call to this function and there is error I printing also this error, the Program is CLI program so I think there is too much error will be printed if case of issue, Is It OK, or there is better approach ?", "\n\n", "bma ,err := Parse(\"path\")\n    if err != nil {\n        logs.Error(\"Error while parsing \")\n        return m, err\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "服务器上跟本地的版本，软件环境等是否一致", "Konwledge_Point": "异常处理", "Question": ["java poi 处理2007文档，抛异常", ["使用poi3.7 xmlbeans2.3，在本地运行没问题，到服务器上运行就报如下错误。", "\n请问大概是什么问题引起的？", "\n\n", " org.apache.poi.POIXMLException: java.lang.reflect.InvocationTargetException\n    at org.apache.poi.xwpf.usermodel.XWPFFactory.createDocumentPart(XWPFFactory.java:60)\n    at org.apache.poi.POIXMLDocumentPart.read(POIXMLDocumentPart.java:277)\n    at org.apache.poi.POIXMLDocument.load(POIXMLDocument.java:186)\n    at org.apache.poi.xwpf.usermodel.XWPFDocument.<init>(XWPFDocument.java:107)\n    at org.apache.poi.xwpf.extractor.XWPFWordExtractor.<init>(XWPFWordExtractor.java:53)\n    at cn.lds.search.utils.ReadFileUtil.readWord2007(ReadFileUtil.java:134)\n    at cn.lds.search.utils.searchLocalUtils.addIndex(searchLocalUtils.java:74)\n    at cn.lds.search.task.ScanLocalPathTask.addLocalIndex(ScanLocalPathTask.java:93)\n    at cn.lds.search.task.ScanLocalPathTask.startScanLocalPathTask(ScanLocalPathTask.java:50)\n    at cn.lds.search.task.ScanLocalPathTask.execute(ScanLocalPathTask.java:35)\n    at org.quartz.core.JobRunShell.run(JobRunShell.java:202)\n    at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.apache.poi.xwpf.usermodel.XWPFFactory.createDocumentPart(XWPFFactory.java:58)\n    ... 11 more\nCaused by: java.lang.ExceptionInInitializerError\n    at sun.misc.Unsafe.ensureClassInitialized(Native Method)\n    at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)\n    at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)\n    at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)\n    at java.lang.reflect.Field.getFieldAccessor(Field.java:899)\n    at java.lang.reflect.Field.get(Field.java:358)\n    at org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XmlBeans.java:770)\n    at org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument.<clinit>(Unknown Source)\n    at org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument$Factory.parse(Unknown Source)\n    at org.apache.poi.xwpf.usermodel.XWPFNumbering.onDocumentRead(XWPFNumbering.java:72)\n    at org.apache.poi.xwpf.usermodel.XWPFNumbering.<init>(XWPFNumbering.java:58)\n    ... 16 more\nCaused by: java.lang.RuntimeException: Could not instantiate SchemaTypeSystemImpl (java.lang.reflect.InvocationTargetException): is the version of xbean.jar correct?\n    at schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707.TypeSystemHolder.loadTypeSystem(Unknown Source)\n    at schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707.TypeSystemHolder.<clinit>(Unknown Source)\n    ... 27 more\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    ... 29 more\nCaused by: org.apache.xmlbeans.SchemaTypeLoaderException: XML-BEANS compiled schema: Incompatible minor version - expecting up to 23, got 24 (schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707.index) - code 3\n    at org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader.<init>(SchemaTypeSystemImpl.java:1522)\n    at org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.initFromHeader(SchemaTypeSystemImpl.java:260)\n    at org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl.<init>(SchemaTypeSystemImpl.java:183)\n    ... 33 more\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没看到log&amp;#xff0c;所以&amp;#xff0c;具体问题无法确定。&lt;br /&gt;一般无法获得token有以下几种情况&amp;#xff1a;&lt;br /&gt;1.首先确认上网环境是否能访问firebase,如果不能&amp;#xff0c;寻找软件解决访问firebase的问题。&lt;br /&gt;2.用的测试端末&amp;#xff08;模拟器等&amp;#xff09;没有安装google play服务。可以在选择模拟器时&amp;#xff0c;选择带google play服务的版本。&lt;br /&gt;3.模拟器的dns导致模拟器不能正常上网&amp;#xff0c;可以在测试端末中访问下firebase网站&amp;#xff0c;看看能正常上网不&amp;#xff1f;如果不能&amp;#xff0c;修改DNS.&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["firebase_messaging 无法获取token，如何解决？", ["Flutte接入firebase messaging（FCM）下载git的项目，运行起来后无法获取token", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "程序可以运行起来，无法获取toke数据", "获取token，app能接收到firebase 后台发送的推送数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;初始化函数修改为&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;int initlist(Linklist* L)\n{\n    (*L) &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (Lnode *)malloc(sizeof(Lnode))&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    if ((*L) &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; NULL)  return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;    &lt;/span&gt;\n    (*L)-&amp;gt;next &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; NULL&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后主函数里调用时&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Linklist L &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;initlist&lt;/span&gt;(&amp;amp;L); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;headinsert&lt;/span&gt;(L,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;headinsert&lt;/span&gt;(L, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;headinsert&lt;/span&gt;(L, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;headinsert&lt;/span&gt;(L, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["未经处理的异常：写入访问权限冲突", ["\n", "\n", "查了资料，硬是找不到相关的bug修复。", "另外没有使用NULL会提示不能使用未初始化的函数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;//这是我自己写的想在avg(&amp;#xff09;方法里捕捉和处理异常&amp;#xff0c;那么如何在输入不满足条件时&amp;#xff0c;返回一个合理的整型呢&amp;#xff1f;&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MyException&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Exception&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//创建自定义异常&amp;#xff0c;继承Exception类&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; code;\n\n    &lt;span class=\"hljs-comment\"&gt;//static final long serialVersionUID &amp;#61; -3387516993124229948L;&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MyException&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; code, String ErrorMessage)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//构造方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;(ErrorMessage); &lt;span class=\"hljs-comment\"&gt;//父类构造方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.code &amp;#61; code;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getCode&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; code;\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Tran&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;avg&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; number1, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; number2)&lt;/span&gt; &lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//求平均值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (number1 &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || number2 &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; MyException(&lt;span class=\"hljs-number\"&gt;88888&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;不可以使用负数&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//抛出异常&amp;#xff0c;不能计算负数&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (number1 &amp;gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; || number2 &amp;gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; MyException(&lt;span class=\"hljs-number\"&gt;99999&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;数值太大了&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//抛出异常&amp;#xff0c;不能计算大于100的数字&lt;/span&gt;\n        } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (MyException e) {\n            System.out.println(e.toString());\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; e.&lt;span class=\"hljs-title\"&gt;getCode&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n        }&lt;span class=\"hljs-comment\"&gt;//处理异常,不得不返回个整型数值&amp;#xff0c;只能写个9999这样异常大的&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (number1 &amp;#43; number2) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//输入正常时返回的值&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated method stub&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; result &amp;#61; avg(&lt;span class=\"hljs-number\"&gt;115&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;115&lt;/span&gt;);\n        System.out.println(result);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["请教java自定义异常的捕获和处理问题", ["\n", "//这是我自己写的想在avg(）方法里捕捉和处理异常，那么如何在输入不满足条件时，返回一个合理的整型呢？", "\n", "class", " ", "MyException", " ", "extends", " ", "Exception", " ", "{ ", "//创建自定义异常，继承Exception类", "\n      ", "//static final long serialVersionUID = -3387516993124229948L;", "\n      ", "public", " ", "MyException", "(String ErrorMessage)", " ", "{ ", "//构造方法", "\n          ", "super", "(ErrorMessage); ", "//父类构造方法", "\n          }\n      }\n", "public", " ", "class", " ", "Tran", " ", "{\n    ", "static", " ", "int", " ", "avg", "(", "int", " number1,", "int", " number2)", " ", "{", "//求平均值", "\n        ", "try", "{\n            ", "if", "(number1<", "0", "||number2<", "0", ")\n                ", "throw", " ", "new", " MyException(", "\"不可以使用负数\"", ");", "//抛出异常，不能计算负数", "\n            ", "else", " ", "if", "(number1>", "100", "||number2>", "100", ")\n                ", "throw", " ", "new", " MyException(", "\"数值太大了\"", ");", "//抛出异常，不能计算大于100的数字", "\n        }\n        ", "catch", "(MyException e) {\n            System.out.println(e.toString());\n            ", "return", " ", "99999", ";}", "//处理异常,不得不返回个整型数值，只能写个9999这样异常大的", "\n        ", "return", " (number1+number2)/", "2", ";", "//输入正常时返回的值", "\n}\n", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " ", "{\n        ", "// TODO Auto-generated method stub", "\n            ", "int", " result=avg(", "115", ",", "115", ");\n            System.out.println(result);\n}\n}\n"]], "Tag": "程序设计"}
{"Answer": "这个叫json，而且你的文本中有引号等特殊符号需要转义，如果你写在C#的话。\r\ngoogle json解析 C#", "Konwledge_Point": "异常处理", "Question": ["求大神指教这个字符串怎么长这样？", ["本来小白，求大神指导我该了解一下什么，把这个写到VS上会报错", "\n/*string param = \"{", "\n            \"params\": [", "\n                {", "\n                  \"username\":\"test\",", "\n                  \"cmdid\":\"1002\",", "\n                  \"logid\": \"12345\",", "\n                  \"appid\": \"您的apikey\",", "\n                  \"clientip\":\"10.23.34.5\",", "\n                  \"type\":\"st_groupverify\",", "\n                  \"groupid\": \"0\",", "\n                  \"versionnum\": \"1.0.0.1\",", "\n                }", "\n              ],", "\n              \"jsonrpc\": \"2.0\",", "\n              \"method\": \"Verify\",", "\n              \"id\":12", "\n            }\";*/"]], "Tag": "程序设计"}
{"Answer": "左边treeview，右边 datagridview或者listview", "Konwledge_Point": "异常处理", "Question": ["关于Winform窗体的控件", ["\n\n", "请问红圈标记的到底是什么样的控件...", "\n\n", "以前专注于搞bs，cs的winform研究不深，有坛友讲一讲吗？"]], "Tag": "程序设计"}
{"Answer": "你好，根据你的描述，你是不是在网上下载的代码直接运行或者修改后运行的，这很可能是你的matlab版本与以前的不同，某些定义会发生变化，也会导致在运行后，出现这种异常；我当时在大学的时候，就出现过你这样的错误，当时是某个变量定义问题，导致资源耗尽，具体解决方案你可以参考这边文章，[关于C++与Matlab混合编程错误???](http://blog.csdn.net/gggg_ggg/article/details/44832373 \"Matlab andC++\")希望对你有所帮助！", "Konwledge_Point": "异常处理", "Question": ["matlab里调用C++，while循环处理vector导致崩溃", ["matlab里调用C++，while循环处理vector导致崩溃。", "\n我在matlab里调用C++ ,VS2010，用mex x.cpp，运行一次之后能出来结果，但接着重复运行一下就容易死机，也就是每次打开就能运行一次。有时运行几次没问题，但之后还是导致matlab崩溃。", "\n是不是c ++代码最后要有一个释放资源什么的操作，求大神相助！", "\n有时候报错", "\nUnexpected Standard exception from MEX file.", "\nWhat() is:bad allocation", "\nC++代码见", "http://pan.baidu.com/s/1pJ0ZJzd。万分感谢！"]], "Tag": "程序设计"}
{"Answer": "你循环到最后一次截取字符的时候出现这个问题，因为截取的时候超过了那个范围\r\n你可以debug跟踪一下", "Konwledge_Point": "异常处理", "Question": ["String index out of range: -1 异常，急需处理", ["vt的大小是10 点击页面查询数据第10次的时候会出现String index out of range: -1  异常 \n头疼死了，希望牛人能给解决一下 \n", "\n\n", "\n\n", "\n\n", "<%     \n\n    //조회시\n\n    if(!bStart) {\n\n        if(vt == null || vt.size() == 0) {\n\n%>\n\n            alert(\"<%= (new Msg(\"MSG0154\")).getMessage() %>\");    //조회 후 데이타 없음 메세지\n\n<%\n\n        } else {\n\n\n            for(int i = 0, j = 0, val_i = 0; i < vt.size(); i++) {\n\n                fields = (String [])vt.get(i);\n\n%>\n\n                var val = new Array();\n\n                val[0] = \"<%=i+1%>\";\n\n<%\n\n                for(j = 0, val_i = 1; j < 14; j++) {//modify 13--14 Because Add a new Item\n\n                    if (j < fields.length) {\n\n%>\n\n                       val[<%= val_i++%>] = \"<%=convertStr(fields[j])%>\";\n\n<%\n\n                    } else {    // field 갯수가 더 적을시. (많을땐, 잘림.)\n\n%>                       \n\n                        val[<%= val_i++%>] = \"\";\n\n<%                       \n\n                    }\n                    System.out.println(\"val_i===in For=>\"+val_i);\n                    System.out.println(\"jjj===in For=>\"+j);\n                    \n\n                }\n                    System.out.println(\"ii====>\"+i);\n\n%>\n\n                //Row Data 생성 함수 Call\n\n                setMatrix(\"NOOUTLIST\", \"NOOUTLIST_Header\", val);\n\n<%\n\n            }\n                vt=null;\n\n        }\n\n    }\n\n%>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to throw an exception if there was some mysql error:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try {\n    $query_str = \"SELECT * FROM tbl_user WHERE username = '\".$username.\"'\";\n    $result = $this-&amp;gt;db-&amp;gt;query($query_str);\n\n    if (!$result)\n    {\n      throw new Exception('error in query');\n      return false;\n    }        \n\n    return $result;\n\n} catch (Exception $e) {\n    return;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["CodeIgniter中的数据库错误处理问题", ["\n\n", "I use CodeIgniter as my web application framework. I used a simple Try/Catch and I sent a sample value to test it, and it failed!", "\n\n", "I know I can use ", "$this->db->escape()", " function to solve my data problem but I just want to know: Why TRY/CATCH can not catch this error!", "\n\n", "Controler code:", "\n\n", "    $this->load->model('user_model');\n    $result = $this->user_model->test_user(\"tes'ti\");\n", "\n\n", "Model code:", "\n\n", "function test_user($username){\n    try {\n        $query_str = \"SELECT * FROM tbl_user WHERE username = '\".$username.\"'\";\n        $result = $this->db->query($query_str);\n        return $result;\n\n    } catch (Exception $e) {\n        return;\n\n    }\n}\n", "\n\n", "Output:", "\n\n", "A Database Error Occurred\n\nError Number: 1064\n\nYou have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ti'' at line 1\n\nSELECT * FROM tbl_user WHERE username = 'tes'ti'\n", "\n\n", "Let me know, where I made a mistake, if I did!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;好吧&amp;#xff0c;最后只能让我放弃try&amp;amp;catch了&amp;#xff0c;我选择在结构体&amp;#xff08;类&amp;#xff09;里添加一个bool属性&amp;#xff0c;叫做isObjVaild,c&amp;#43;&amp;#43;构造时默认值为false,那么要想让isObjValid为true,则GMI必须返回值&amp;#xff0c;因此来判断并处理这种较为极端的状况。&amp;#xff08;当然&amp;#xff0c;如果在DLL函数里面强行让string的data()指向异常地址并返回还是不可避免的&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C++ try,catch与野指针的问题", ["问题相关代码，请勿粘贴截图", "\n", "for", "(Mod ", "mod", " : mh.mods){\n        al(", "\"Mod \"", " + ", "mod", ".path);\n        ", "mod", ".info = ", "mod", ".", "GMI(", "basicInfo", ")", ";\n            al(", "\"Mod \"", " + ", "mod", ".info.name);", "//Log输出，debug时会输出至控制台", "\n    }\n", "\n", "运行结果及报错内容", "\n", "最后程序以各种乱码输出并崩溃，但中规中矩都是0xC0000005", "\n", "我的解答思路和尝试过的方法", "\n", "由于这个报错是我有意而为之，我当然知道问题在哪里。那就是GMI(xx)没有返回值，导致出现了野指针（有时又是空指针）【即mod.info.name.c_str()不是一个有效的地址】，于是我便用了try&catch", "\n", "  ", "try", "{\n            al(", "\"Mod \"", " + ", "mod", ".info.name + ", "\" \"", " + ", "mod", ".path + ", "\":\\nAuthor:\"", " + ", "mod", ".info.author + ", "\"\\nDescription:\"", " + ", "mod", ".info.Description + ", "\"\\n\"", ");\n        }catch(", "exception", "&){\n            ", "mod", ".info = ", "ModInfo()", ";\n            al(", "\"Mod \"", " + ", "mod", ".path + ", "\" returns a bad value when get the info!\"", ");\n        }\n    }\n", "\n", "报错是不报错了，但是程序并不输出异常处理的IO行，反而继续输出异常出现的地方，只不过这次输出为空：", "\n", "[", "2022", "-08", "-29", " ", "13", ":", "22", ":", "20", "]:", "1098.828700", "ms", ":Mod  ", "C", ":\\Users\\yd\\AppData\\Roaming\\StudyAll\\UnlimitedLife\\Mods\\ULSimpleMod.", "dll", ":\n", "Author", ":\n", "Description", ":\n", "\n", "我想要达到的结果", "\n", "我想要代码执行catch中的内容"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的sql语句写错了&amp;#xff0c;是delete  from&amp;#xff0c;而不是select * from。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#删除是会发生错误，该怎么改", ["\n", "\n", "下面是代码：", "string str1 = this.button3.Text;", "            //判断是否选中行", "            if(dataGridView1.SelectedRows.Count>0)", "            {", "\n", "        }\n        ", "else", "\n        {\n            MessageBox.", "Show(", "\"请选择要删除的行\"", ")", ";\n            return;\n         }\n        ", "//获取输入的信息", "\n        ", "string", " id = dataGridView1.SelectedRows", "[", "0", "]", ".Cells", "[", "0", "]", ".Value.", "ToString()", ";\n        \n        ", "//删除操作", "\n        ", "string", " strsql = ", "\"selete * from kqlog where id='\"", " + id + ", "\"'\"", ";\n        ", "// 添加异常处理", "\n        ", "try", "\n        {\n            SqlConnection con = ", "GetCon()", ";\n            con.", "Open()", ";\n            SqlCommand cmd = con.", "CreateCommand()", ";\n            cmd.CommandText = strsql;\n            ", "int", " count = cmd.", "ExecuteNonQuery()", ";\n            ", "if", " (count > ", "0", ")\n            {\n                this.toolStripStatusLabel1.Text = ", "\"操作成功 ！\"", ";\n            }\n            con.", "Close()", ";\n            shuxin", "()", ";\n        }\n        catch (Exception ex)\n        {\n\n            this.toolStripStatusLabel1.Text = ", "\"操作失败！失败原因：\"", " + ex.Message;\n\n        }\n", "\n", "该怎么改？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解决了&amp;#xff0c;端口默认是3306&amp;#xff0c;我把端口设为3060了。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["eclipse连接Mysql问题", ["\n", "import", " ", "java", ".", "sql", ".", "*", ";\n", "public", " ", "class", " ", "zhan", " {\n     \n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] ", "args", ") {\n        ", "String", " ", "driver", " ", "=", " ", "\"com.mysql.cj.jdbc.Driver\"", ";  ", "//加载驱动程序，不用改", "\n        ", "String", " ", "username", " ", "=", " ", "\"zhanzhan\"", "; ", "//数据库用户名按自己的改改！！！！！！！！", "\n        ", "String", " ", "password", " ", "=", " ", "\"020301\"", ";", "//数据库密码按自己的改改！！！！！！！！！！！", "\n        ", "String", " ", "Dbname", "=", "\"db\"", ";", "//以后访问自己数据库的时候按需修改，测试先用这个", "\n        ", "String", " ", "url", " ", "=", " ", "\"jdbc:mysql://localhost:3306/\"", "+", "Dbname", "+", "\"?&useSSL=false&serverTimezone=UTC\"", ";\n        ", "String", " ", "coding", "=", "\"&useUnicode=ture&characterEncoding=UTF-8\"", ";", "//编码格式", "\n        ", "Connection", " ", "conn", " ", "=", " ", "null", ";\n        ", "try", "{\n            ", "Class", ".", "forName", "(", "driver", ");\n            ", "//getConnection()方法，连接MySQL数据库！", "\n            ", "conn", "=", "DriverManager", ".", "getConnection", "(", "url", "+", "coding", ",", "username", ",", "password", ");\n            ", "if", "(", "!", "conn", ".", "isClosed", "())\n            ", "System", ".", "out", ".", "println", "(", "\"-------------------------------数据库连接成功！---------------------------\"", ");\n             ", "//创建statement类对象，用来执行SQL语句！", "\n            ", "Statement", " ", "Statement", "=", "conn", ".", "createStatement", "();\n            ", "//要执行的SQL语句", "\n            ", "String", " ", "sql", "=", "\"select * from user\"", " ;\n            ", "//ResultSet类，用来存放获取的结果集！", "\n            ", "ResultSet", " ", "rs", "=", "Statement", ".", "executeQuery", "(", "sql", ");\n            ", "while", "(", "rs", ".", "next", "()){\n                ", "System", ".", "out", ".", "println", "(", "rs", ".", "getString", "(", "\"name\"", "));\n            }\n              \n         }\n         ", "catch", "(", "ClassNotFoundException", " ", "e", "){\n             ", "//数据库驱动类异常处理", "\n        ", "System", ".", "out", ".", "println", "(", "\"数据库驱动加载失败！\"", ");\n        ", "e", ".", "printStackTrace", "();\n         }\n        ", "catch", "(", "SQLException", " ", "e1", "){\n        ", "//数据库连接失败异常处理", "\n         ", "e1", ".", "printStackTrace", "();\n        }\n        ", "catch", "(", "Exception", " ", "e2", "){\n        ", "e2", ".", "printStackTrace", "();\n        }\n        ", "finally", "{\n            ", "System", ".", "out", ".", "println", "(", "\"-------------------------------数据库数据获取成功！---------------------------\"", ");\n        } \n    }\n}\n", "\n", "\n", "无法输出hello和good，用户名和密码都改了，不知道那里有问题。"]], "Tag": "程序设计"}
{"Answer": "上传文件后，一定要将输出流关闭。否则就会处理一直被占用的状态！\r\n我以前也是碰到这种问题，使用 .close()以后就可以了！", "Konwledge_Point": "异常处理", "Question": ["java 删除文件不成功", ["   我在项目中需要用到文件上传，用jspsmartupload上传文件成功后，将此文件拷贝到服务器的另一个目录里，再去做数据库操作，如果数据库操作失败了，表明此次操作失败，这个文件也就没用了，于是在异常处理部分里把这个文件删掉。可是经常是删不掉。", "不知道为什么？", "    于是单步调试，我尝试在文件拷贝成功后，数据库操作未做的时候，手动的在机子上删除文件，结果windows提示说 文件正被使用，不让删除。", "    纳闷了？难道是jvm没有回收相关资源，os认为此文件仍被使用？", "   这个问题也不是每次都是，有时候顺利删除，有时候不行。比较郁闷了。", "问题补充：", "是 调用org.apache.commons.io.FileUtils，", "FileUtils.copyFile(tempFile, newFile);", "之后，newFile这个文件删不掉。FileUtils应该把相关的IO流都关闭了吧。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try not using sleep(), seems to work if the reason for timeout is real work:&lt;/p&gt;\n\n&lt;p&gt;Example&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function isPrime($num) {\n    if($num == 1)\n        return false;\n    if($num == 2)\n        return true;\n    if($num % 2 == 0) {\n        return false;\n    }\n    for($i = 3; $i &amp;lt;= ceil(sqrt($num)); $i = $i + 2) {\n        if($num % $i == 0)\n            return false;\n    }\n    return true;\n}\nfunction shutdown() \n{ \n     $a=error_get_last(); \n     if($a==null)   \n         echo \"No errors\"; \n     else \n          print_r($a); \n} \nregister_shutdown_function('shutdown'); \nini_set('max_execution_time',1 ); \n$ps = 0;\nfor ($i = 0; $i &amp;lt; 1000000; $i++) {\n    if (isPrime($i)){\n        $ps++;\n    }\n}\necho $ps;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP超时错误处理", ["\n\n", "I'm triyng to catch timeout error to output some clear text to the user (like \"Sorry, timeout\").\nSo why does this example:", "\n\n", "function shutdown() { \n    $a=error_get_last(); \n    if($a==null)   \n        echo \"No errors\"; \n    else \n         print_r($a); \n\n} \nregister_shutdown_function('shutdown'); \nini_set('max_execution_time',1 ); \nsleep(3); \n", "\n\n", "output ", "no errors", "?? I'm confused about it.\n", "Here", " this example looks helpful.\nThanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ResultDataVO&lt;/span&gt;&amp;lt;T&amp;gt; {\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 编码信息\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; code;\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 响应消息\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; msg;\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 响应内容\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; T data;\n\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ResultDataVO&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Integer code, &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; msg, T data)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.code &amp;#61; code;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.msg &amp;#61; msg;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.data &amp;#61; data;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=\"hljs-function\"&gt;ResultDataVO&amp;lt;T&amp;gt; &lt;span class=\"hljs-title\"&gt;ok&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; msg, T obj)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;ResultDataVO&lt;/span&gt;&amp;lt;T&amp;gt;(&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, msg, obj);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=\"hljs-function\"&gt;ResultDataVO&amp;lt;T&amp;gt; &lt;span class=\"hljs-title\"&gt;fail&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; msg,T obj)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;ResultDataVO&lt;/span&gt;&amp;lt;T&amp;gt;(&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;, msg, null);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; 修改返回的参数,&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ResultDataVO&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;TableDataInfo&lt;/span&gt;&amp;gt;&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;成功返回 ResultDataVO.ok(&amp;#34;success&amp;#34;,tableDataInfo) ,失败返回ResultDataVO.fail(&amp;#34;开始时间不能大于结束时间&amp;#34;,null)&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["当开始日期大于结束日期是会在msg里出现错误信息", ["一个接口，要实现根据起止时间查询数据库中的书记，但是当开始时间大于结束时间是，会在msg中有错误信息该怎么实现？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;impl对象生成错误。dao有问题&amp;#xff0c;应该是没有装配成功。没看到dao文件&amp;#xff0c;不知道啥问题&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["关于spring整合mybatis出现的问题错误", ["配置写的没有问题啊，就是运行出错。采用春注解开发模式的方式进行开发", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;相对路径的问题&amp;#xff0c;请采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["报错[http-nio-8080-exec-6]", ["我新添加了一个billcontroller后发现好像mvc无法识别报错，其他页面访问正常，百度了很多，注解和web配置都是没错的呀，新添加的这个注解什么的都加了,没有问题", "\n查询数据库也可查出来，真得不知道是哪里有问题，在线等。。。。", "\n", "具体错误：点订单管理报错404.其他功能正常", "\n", "\n\n", "控制台报错：", "\n\n", "\n\n", "\n ", "\n\n", "\n\n", "web.xml", "\n ", "\n\n", "\n", "<!DOCTYPE web-app PUBLIC\n \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n\n<web-app>\n  <display-name>Archetype Created Web Application</display-name>\n  <!--乱码过滤器-->\n  <filter>\n    <filter-name>encode</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <init-param>\n      <param-name>encoding</param-name>\n      <param-value>UTF-8</param-value>\n    </init-param>\n  </filter>\n  <filter-mapping>\n    <filter-name>encode</filter-name>\n    <url-pattern>/*</url-pattern>\n  </filter-mapping>\n  <!--MVC配置文件-->\n  <servlet>\n    <servlet-name>mvc</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <init-param>\n      <param-name>contextConfigLocation</param-name>\n      <param-value>classpath:spring-*.xml</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>mvc</servlet-name>\n    <url-pattern>/</url-pattern>\n  </servlet-mapping>\n</web-app>\n", "\n\n", "spring-mvc.xml", "\n\n", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:content=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd\n         http://www.springframework.org/schema/mvc\n         http://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n    <content:component-scan base-package=\"cn.smbms\"/>\n    <!--转换器 解决返回对象时候 乱码 和 日期样式-->\n    <!--<bean class=\"org.springframework.context.support.ConversionServiceFactoryBean\" id=\"conversionService2\">\n        <property name=\"converters\">\n            <bean class=\"cn.smbms.converts.StringToDateConvert\" id=\"stringToDateConvert\"/>\n        </property>\n    </bean>-->\n    <!--conversion-service=\"\"-->\n    <mvc:annotation-driven>\n        <mvc:message-converters>\n            <!--配置消息转换器-->\n            <bean class=\"org.springframework.http.converter.StringHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <value>application/json;charset=UTF-8</value>\n                    </list>\n                </property>\n            </bean>\n            <!--时间戳-->\n            <bean class=\"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter\"\n                  id=\"fastJsonHttpMessageConverter\">\n                <property name=\"supportedMediaTypes\">\n                    <list>\n                        <value>application/json;charset=UTF-8</value>\n                        <value>text/html;charset=UTF-8</value>\n                    </list>\n                </property>\n                <property name=\"features\">\n                    <list>\n                        <value>WriteDateUseDateFormat</value>\n                    </list>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n    <bean class=\"org.springframework.web.accept.ContentNegotiationManagerFactoryBean\" id=\"bean\">\n        <property name=\"favorParameter\" value=\"true\"/>\n        <property name=\"mediaTypes\">\n            <props>\n                <prop key=\"html\">text/html;charset=UTF-8</prop>\n                <prop key=\"json\">application/json;charset=UTF-8</prop>\n                <prop key=\"xml\">application/xml;charset=UTF-8</prop>\n            </props>\n        </property>\n    </bean>\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\" id=\"negotiatingViewResolver\">\n        <property name=\"contentNegotiationManager\" ref=\"bean\"/>\n        <property name=\"viewResolvers\">\n            <list>\n                <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n                    <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n                    <property name=\"suffix\" value=\".jsp\"/>\n                </bean>\n            </list>\n        </property>\n    </bean>\n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"viewResolver\">\n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n        <property name=\"suffix\" value=\".jsp\"/>\n    </bean>\n    <mvc:resources mapping=\"/css/**\" location=\"/css/\"/>\n    <mvc:resources mapping=\"/images/**\" location=\"/images/\"/>\n    <mvc:resources mapping=\"/js/**\" location=\"/js/\"/>\n    <mvc:resources mapping=\"/calendar/**\" location=\"/calendar/\"/>\n    <!--全局异常处理-->\n    <bean class=\"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\">\n        <property name=\"exceptionMappings\">\n            <props>\n                <prop key=\"java.lang.RuntimeException\">error</prop>\n            </props>\n        </property>\n    </bean>\n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">\n        <property name=\"maxUploadSize\" value=\"5000000\"/>\n        <property name=\"defaultEncoding\" value=\"UTF-8\"/>\n    </bean>\n    <!--拦截器-->\n    <mvc:interceptors>\n        <mvc:interceptor>\n            <!--拦截的请求-->\n            <mvc:mapping path=\"/**\"/>\n            <!--排除的请求-->\n            <mvc:exclude-mapping path=\"/\"/>\n            <mvc:exclude-mapping path=\"/login.do\"/>\n            <mvc:exclude-mapping path=\"/images/**\"/>\n            <mvc:exclude-mapping path=\"/js/**\"/>\n            <mvc:exclude-mapping path=\"/css/**\"/>\n            <mvc:exclude-mapping path=\"/calendar/**\"/>\n\n            <bean class=\"cn.smbms.intercept.Sysintercept\" id=\"sysintercept\"/>\n        </mvc:interceptor>\n    </mvc:interceptors>\n    \n</beans>", "\n\n", "\n "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;好&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["selenium.webdriver相关使用问题", ["我根据其他的播客尝试初步的尝试使用selenium.webdriver对firefox进行简单的操作，但下方的代码在输入之后就崩溃了。如果直接把网址赋值给url，则不会出现问题。如何解决输入后崩溃的问题？", "问题相关代码", "\n", "# python 3.8", "\n", "# This is the code for selenium to get the comixes.", "\n\n", "# import list", "\n", "import", " requests\n", "import", " time\n", "import", " re\n", "import", " random\n", "from", " selenium ", "import", " webdriver\n", "from", " selenium.webdriver.common.keys ", "import", " Keys  ", "# 输入框回车", "\n", "from", " selenium.webdriver.common.by ", "import", " By  ", "# 与下面的2个都是等待时要用到", "\n", "from", " selenium.webdriver.support.ui ", "import", " WebDriverWait\n", "from", " selenium.webdriver.support ", "import", " expected_conditions ", "as", " EC\n", "from", " selenium.common.exceptions ", "import", " NoSuchElementException, TimeoutException  ", "# 异常处理", "\n\n\n", "def", " ", "main", "():\n    driver = webdriver.Firefox()\n    ", "#url = 'https://xmanhua.com/m11156/'", "\n    ", "input", "(url)\n    driver.get(", "str", "(url))\n    wait = WebDriverWait(driver, ", "25", ")\n    driver.maximize_window()  ", "# 窗口最大化", "\n    html = driver.page_source\n    ", "print", "(html)\n    driver.quit()\n    \n\n", "if", " __name__ == ", "'__main__'", ":\n    main()\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The exception you throw will only be caught if it's inside a &lt;code&gt;try&lt;/code&gt; block.&lt;/p&gt;\n\n&lt;p&gt;If it isn't it'll propagate up the call stack, until it is caught in one of the earlier calling functions. &lt;/p&gt;\n\n&lt;p&gt;You're getting that fatal error because the exception you throw is never caught, so it's handled by the default unhandled exceptions handler, which emits the fatal error.&lt;/p&gt;\n\n&lt;p&gt;Examples:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try\n{\n    $createdContact = $comandos-&amp;gt;createContact($contactoVo);\n    if (error_condition())\n        throw new EppCommandsExceptions $e;\n}\ncatch(EppCommandsExceptions $e)\n{\n    $error .= 'Error Contact. Cód:'.$e-&amp;gt;getCode().' Mensagem:'.$e-&amp;gt;getMessage();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Throwing the exception directly in the try block is not usually very useful, because you could just as well recover from the error condition directly instead of throwing an exception. This construct becomes more useful, though, if &lt;code&gt;createContact&lt;/code&gt; may throw an exception. In this case, you have at some point to catch &lt;code&gt;EppCommandsExceptions&lt;/code&gt; to avoid a fatal error.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["处理异常 - 致命错误：未捕获的异常'EppCommandsExceptions'，消息'命令语法错误'", ["\n\n", "\n  ", "Fatal error: Uncaught exception\n  'EppCommandsExceptions' with message\n  'Required parameter missing'", "\n", "\n\n", "The line in question:", "\n\n", "throw new EppCommandsExceptions($result->msg, $codigo); \n", "\n\n", "Why am I having this error on this line?", "\n\n", "On ", "EppCommandsExceptions.class.php", "\nI have this class that extends Exception:", "\n\n", "class EppCommandsExceptions extends Exception\n{\n    //could be empty.\n}\n", "\n\n", "Next, on ", "CommandsController.php", " I have:", "\n\n", "include_once('EppCommandsExceptions.class.php');\n", "\n\n", "and, later, if something bad happens on ", "method1", ":", "\n\n", "throw new EppCommandsExceptions($result->msg, $codigo);\n", "\n\n", "later, on this same controller, another ", "method2", " that will run after method1,\nI have:\nif something goes bad with this too:", "\n\n", "throw new EppCommandsExceptions($result->msg, $codigo);\n", "\n\n", "Later I have, for the contact part - ", "method1", "\n\n", "try\n{\n    $createdContact = $comandos->createContact($contactoVo);\n}\ncatch(EppCommandsExceptions $e)\n{\n    $error .= 'Error Contact. Cód:'.$e->getCode().' Mensagem:'.$e->getMessage();\n}\n", "\n\n", "And later, for domain part: ", "method2", "\n\n", "try\n{\n    $createdDomain = $comandos->createDomain($domainVo);\n}\ncatch(EppCommandsExceptions $e)\n{\n    $error .= 'Error Domain. Cód:'.$e->getCode().' Mensagem:'.$e->getMessage();\n}\n", "\n\n", "Is it because I'm using the same exception for both methods?\nShould I have one Exception class for EACH method? :s", "\n\n", "Please advice,\nThanks a lot.\nMEM", "\n    "]], "Tag": "程序设计"}
{"Answer": "看bin 里面是不是少文件了。把bin 也复制过去", "Konwledge_Point": "异常处理", "Question": ["关于C#  异常的处理问题，感谢大神求帮助！！", ["做一个C#程序，读取本地word文档，并存入SQL Server，单独打开这个项目时可以很顺利地读取到本地Word文档，但当我把这个项目添加到另一个项目中去，再通过窗体程序（按钮）调用这个项目时，却无法读取到本地word文档了，出现 System.Runtime.InteropServices.COMException:“很抱歉，找不到您的文件。该项目是否已移动、重命名或删除? 这样的错误.....求大神指点！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I hope I'm understanding this question correctly -\nAre you basically asking if there is a natural internal exception to adopt instead of running your own exception?&lt;/p&gt;\n\n&lt;p&gt;Or are you just not aware you can do something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;try\n{\n    //some code to try\n    if (!in_array($type, $ascii_array)) {\n        throw new Exception('type not in ascii array');\n    }\n}\ncatch(Exception $e) {\n    die ('my custom exception message: ' . $e-&amp;gt;getMessage());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;if i missed the point, let me know and I may update.&lt;/p&gt;\n\n&lt;p&gt;As for a reason to not throw your own exceptions... I can't say I know of a real benefit to this. It would seem to me that in_array() is perfectly acceptable and throwing exceptions may just be personal preference and not necessarily a worthwhile concern for performance.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;EDIT&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Considering my answer and the question, it is noteworthy that this answer was accepted likely due to the conclusion in the comments that PHP does not allow you to declare functions that throw exceptions like Java does. Simply put.&lt;/p&gt;\n\n&lt;p&gt;So this answer is to serve only that purpose. Can PHP declare a function that throws an exception? No, not by default. You have to try and catch the exceptions yourself within the function.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["PHP：如何在下面的情况下处理异常", ["\n\n", "I don't have enough experience with PHP and programming at all, so I want to know, what the best decision in my situation is.\nHere is my code sample:", "\n\n", "public static function isAscii($string, $type, $length = -1)\n    {\n        if (!is_string($string))\n            throw new InternalException(ExceptionMessage::invalidFunctionParameterType(__CLASS__, __METHOD__));\n\n        if ($length !== -1 && !Str::isValidLength($string, $length))\n            return FALSE;\n\n        $ascii_array = Constants::asciiRegex();\n\n        if (!preg_match($ascii_array[$type], $string))\n            return FALSE;\n\n        return TRUE;\n    }\n", "\n\n", "I want to ensure that key ", "$type", " exists for array ", "$ascii_array", ". What is the best way to do that?", "\n\n", "I can offer two decisions:", "\n\n", "\n", "The simplest. Just check key existence manually with ", "array_key_exists()", " function. If key doesn't exist - throw an exception, also manually. But I think that is not a good idea and checking this condition is redundant, because PHP compiler will generate warning if I don’t write anything (Notice: Undefined index:) and I want to use this somehow. I found there are some predefined exceptions like ", "OutOfBoundsException", " and ", "OutOfRangeException", ", it would be easy just to use them like in Java, but it seems that PHP doesn’t throw these exceptions, only warnings and errors.", "\n", "Use ", "set_error_handler()", " function to 'convert' errors and warnings to exceptions. But there is another problem - how can I handle all possible errors? I tried to find the complete list of PHP errors and warnings, but ", "it doesn't exist", ".\nSo I have no idea how to solve this problem, please help me.\nThanks in advance, hope you will understand my question even with my poor English level.", "\n", "\n", "P.S. this is an array with regular expressions for different types of ascii strings.", "\n    "]], "Tag": "程序设计"}
{"Answer": "查询一个机构下所有账户的所有日志。。。。这肯定溢出啊。 。\r\n\r\n基本大型应用里不能取查 ‘所有’ 的\r\n\r\n你要给个条件限制，或者做分页，\r\n\r\n仔细再分析一下业务场景吧，需要变通一下", "Konwledge_Point": "异常处理", "Question": ["怎么处理大数据量的复杂查询？", ["小弟现在是要做一个这样的事情，一个日志的查询系统。这个日志要从4个表中查出来，每个表有几十万条数据(以后可能增长到几百万条)。  我现在用的是最平常的子查询，可是java中出报出内存溢出的异常(偶尔能查询出来，不过那速度真的忍受不了)，我就想问问各位大侠你们怎么处理这样的大数据量，而且有复杂的关联关系的查询啊？", "\n   问题表述不清，还请各位多多包涵。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Like you said, if used on a non-existing file, getimagesize generates a warning :&lt;/p&gt;\n\n&lt;p&gt;This code :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($data = getimagesize('not-existing.png')) {\n    echo \"OK\";\n} else {\n    echo \"NOT OK\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will get you a &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Warning: getimagesize(not-existing.png) [function.getimagesize]: \n  failed to open stream: No such file or directory \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br&gt;\nA solution would be to use the &lt;a href=\"http://www.php.net/manual/en/language.operators.errorcontrol.php\" rel=\"noreferrer\"&gt;@ operator&lt;/a&gt;, to mask that error :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if ($data = @getimagesize('not-existing.png')) {\n    echo \"OK\";\n} else {\n    echo \"NOT OK\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As the file doesn't exist, $data will still be false ; but no warning will be displayed.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\nAnother solution would be to &lt;a href=\"http://php.net/file_exists\" rel=\"noreferrer\"&gt;check if the file exists&lt;/a&gt;, before using getimagesize ; something like this would do :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (file_exists('not-existing.png') &amp;amp;&amp;amp; \n    ($data = getimagesize('not-existing.png'))\n   ) {\n    echo \"OK\";\n} else {\n    echo \"NOT OK\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the file doesn't exist, getimagesize is not called -- which means no warning&lt;/p&gt;\n\n&lt;p&gt;Still, this solution is not the one you should use for images that are on another server, and accessed via HTTP (if you are in this case), as it'll mean two requests to the remote server.&lt;/p&gt;\n\n&lt;p&gt;For local images, that would be quite OK, I suppose ; only problem I see is the notice generated when there is a read error not being masked.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\nFinally : &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I would allow errors to be displayed on your developpement server,&lt;/li&gt;\n&lt;li&gt;And would not display those on your production server -- see &lt;a href=\"http://php.net/manual/en/errorfunc.configuration.php#ini.display-errors\" rel=\"noreferrer\"&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt;, about that ;-)&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["当getimagesize找不到文件时处理错误", ["\n\n", "when I'm trying to ", "getimagesize($img)", " and the image doesn't exist, I get an error. I don't want to first check whether the file exists, just handle the error.", "\n\n", "I'm not sure how ", "try catch", " works, but I want to do something like:", "\n\n", "try: getimagesize($img) $works = true\ncatch: $works = flase\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "一般情况是在一个方法里打开，不管怎么用，都在这个方法里面关闭。\r\n或者如果inputStream是一个类的成员变量，那就在这个类销毁的时候关闭，比如写一个destory方法。\r\n而如果你的一个类需要一个inputStream，而且需要由多个地方调用，实在没有适合的地方去关闭，那建议你不要由外部传进去inputStream，而是传进去你需要使用的inputStream的class，然后由你的那个类构造方法创建，最后手动destroy。\r\n\r\n最后你的异常问题，主要是看你需要在哪里捕获，例如你serviceImpl里面有一个方法，返回值是int，那么你就不能在这里捕获，因为你无法传回异常状态，此时应该在调用这个serviceImpl的地方捕获。同时也有多级捕获的时候，也有让例如struts2自动捕获的时候，看情况吧。", "Konwledge_Point": "异常处理", "Question": ["关于输入输出流的惯用法", ["书上说，应该坚持“谁打开的谁负责关闭”的原则。", "\n比如这样一个函数 void f(InputStream ins) {...}", "\n因为ins不是在f里面打开的，所以不应该在f里面关掉f", "\n\n", "比如，ins是在main里面打开的，那么应该这样用", "\nmain() {", "\n   InputStream ins = new ...;", "\n   f(ins);", "\n   ins.close();", "\n}", "\n\n", "但是如果一个Stream是作为构造函数的参数传进去的话：", "\nclass Parser {", "\n   BufferedReader ins;", "\n   Parser(BufferedReader ins) { this.ins = ins; }", "\n   Entry parseNext() {//read from ins}", "\n   ...", "\n}", "\n\n", "假设Parse还有另一个构造函数的话, 便于直接从文件读取：", "\nParser(String fileName) {", "\n   ins = new BufferedReader(new FileReader(fileName));", "\n}", "\n那么这个ins应该在什么地方关闭呢？ 显然不应该在构造函数里面，因为parseNext的时候还要用到ins。", "\n\n", "应该在parseNext里面吗？在解析完最后一个entry之后关闭？ 这样也不行，因为用户可能只需要前一两个entry， 这样的话ins就永远不会关闭了。", "\n\n", "或者就不应该提供一个Parser(String)这样的便利构造函数， 每次都要由用户自己提供一个 new BufferedReader(new FileReader(fileName)), 这样的话岂不是太麻烦？ ", "\n\n", "即使是提供了一个 ", "\nBufferedReader open(String fileName) { return new BufferedReader(new FileReader(fileName)); }", "\n之类的辅助函数，用起来仍然比较麻烦:", "\nBufferedReader ins = FileUtil.open(fileName);", "\nParser p = new Parser(ins); //....", "\n并不比这种写法方便多少：", "\nBufferedReader ins = new BufferedReader(new FileReader(fileName));", "\nParser p = new Parser(ins);//....", "\n显然没有这样方便： Parser p = new Parser(fileName); 但是这样又会存在上面说的问题。", "\n\n", "不知道标准的做法应该是什么样子的呢？", "\n\n", "还有，函数的参数是应该尽量抽象，比如Reader，然后在函数里面包装成一个BufferedReader", "\n还是应该尽量具体呢，比如直接限定函数类型为BufferedReader", "\n\n", "另外就是关于IOException的异常处理，是应该尽量在函数里面捕获异常呢，还是应该将其抛出？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;if (($MismatchBundle == true)  &amp;amp;&amp;amp;  !($adminPass == true &amp;amp;&amp;amp; $thisUser['rankid'] == 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using ! on the entire section within ( ) worked as intended.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["处理作为异常的部分时的PHP IF构造", ["\n\n", "I'm having some trouble getting my code to work. And I lost my overview. Who can give me some insight?", "\n\n", "I'm looking for how to build an ", "IF", " construct.", "\n\n", "If I would describe the IF construct in words:", "\n\n", "MismatchBundle = true  unless  (adminPass = true & user = admin)\n", "\n\n", "I wrote the following code, but this didn't seem to work:", "\n\n", "if (($MismatchBundle == true)  &&  ($adminPass != true && $thisUser['rankid'] != 1)\n", "\n\n", "Anyone who knows how to get the 'unless' part in the code?", "\n\n", "What about this?", "\n\n", " if (($MismatchBundle == true)  &&  !($adminPass == true && $thisUser['rankid'] == 1)\n", "\n\n", "Is this allowed with the ! before a () section?", "\n    "]], "Tag": "程序设计"}
{"Answer": "换个jdk吧 和webservice没什么关系。", "Konwledge_Point": "异常处理", "Question": ["jvm异常！影响服务，该怎么处理？", ["Unexpected Signal : 11 occurred at PC=0xFA41561C", "\nFunction=[Unknown.]", "\nLibrary=(N/A)", "\n\n", "NOTE: We are unable to locate the function name symbol for the error", "\n      just occurred. Please refer to release documentation for possible", "\n      reason and solutions.", "\n\n", "Current Java thread:", "\n\n", "Dynamic libraries:", "\n0x10000         /u1/web/bea/jdk141_05/bin/java", "\n0xff350000      /usr/lib/libthread.so.1", "\n0xff340000      /usr/lib/libdl.so.1", "\n0xff200000      /usr/lib/libc.so.1", "\n0xff390000      /usr/platform/SUNW,Sun-Fire/lib/libc_psr.so.1", "\n0xfe000000      /u1/web/bea/jdk141_05/jre/lib/sparc/client/libjvm.so", "\n0xff2e0000      /usr/lib/libCrun.so.1", "\n0xff1e0000      /usr/lib/libsocket.so.1", "\n0xff100000      /usr/lib/libnsl.so.1", "\n0xff0d0000      /usr/lib/libm.so.1", "\n0xff1c0000      /usr/lib/libmp.so.2", "\n0xff070000      /u1/web/bea/jdk141_05/jre/lib/sparc/native_threads/libhpi.so", "\n0xff040000      /u1/web/bea/jdk141_05/jre/lib/sparc/libverify.so", "\n0xfe7c0000      /u1/web/bea/jdk141_05/jre/lib/sparc/libjava.so", "\n0xff020000      /u1/web/bea/jdk141_05/jre/lib/sparc/libzip.so", "\n0xfe4d0000      /usr/lib/locale/zh/zh.so.2", "\n0xfe4b0000      /usr/lib/locale/zh/methods_zh.so.2", "\n0xfa010000      /u1/web/bea/jdk141_05/jre/lib/sparc/libnet.so", "\n0xf1fe0000      /u1/web/bea/jdk141_05/jre/lib/sparc/librmi.so", "\n\n", "Local Time = Wed Feb 23 13:05:44 2011", "\nElapsed Time = 118", "\n#", "\n\n", "HotSpot Virtual Machine Error : 11", "\n\n", "Error ID : 4F530E43505002E6 01", "\n\n", "Please report this error at", "\n\n", "http://java.sun.com/cgi-bin/bugreport.cgi", "\n\n", "#", "\n\n", "Java VM: Java HotSpot(TM) Client VM (1.4.1_05-b01 mixed mode)", "\n\n", "#", "\n\n", "An error report file has been saved as hs_err_pid28877.log.", "\n\n", "Please refer to the file for further information.", "\n\n", "当调用webservice时，就出现此种情况。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;估计是传过去乱码了&amp;#xff0c;然后验签失败了&amp;#xff0c;要么就抓包看请求头&amp;#xff0c;最简单的处理就是文件名urlencode一下&amp;#xff0c;这样你直接返回到前端&amp;#xff0c;前端也不需要做什么应该就能看到原始的信息了&lt;br /&gt;ps&amp;#xff1a;你存文件信息&amp;#xff0c;文件名难道还依靠第三方&amp;#xff0c;自己不存起来&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["阿里云ossClient.putObject  上传文件 objectName 中包含+ 号也会报错，有知道如何解决的吗", ["2022-03-16 14:24:49.036 http-nio-9998-exec-8 | [62f802ad5ba96e15] | ERROR com.shein.mms.oss.impl.OssClientServiceImpl 上传 OSS 失败 文件名：大塘S+宿舍租赁合同补充协议.docx, The request signature we calculated does not match the signature you provided. Check your key and signing method."]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;VecCal&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, x&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, y&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, z&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;/span&gt;):\n        self.x &amp;#61; x\n        self.y &amp;#61; y\n        self.z &amp;#61; z\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, n&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 加法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x &amp;#43; n.x\n        result.y &amp;#61; self.y &amp;#43; n.y\n        result.z &amp;#61; self.z &amp;#43; n.z\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;subduction&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, n&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 减法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x - n.x\n        result.y &amp;#61; self.y - n.y\n        result.z &amp;#61; self.z - n.z\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;multiplication&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, number&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 乘法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x * number\n        result.y &amp;#61; self.y * number\n        result.z &amp;#61; self.z * number\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;division&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, number&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 除法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x // number\n        result.y &amp;#61; self.y // number\n        result.z &amp;#61; self.z // number\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;display&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;f&amp;#39;(&lt;span class=\"hljs-subst\"&gt;{self.x}&lt;/span&gt;, &lt;span class=\"hljs-subst\"&gt;{self.y}&lt;/span&gt;, &lt;span class=\"hljs-subst\"&gt;{self.z}&lt;/span&gt;)&amp;#39;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    data1 &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(i) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第一行输入一个三维向量,逗号(英文)分隔:&amp;#34;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)]\n    data2 &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(i) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第二行输入另一个三维向量,逗号(英文)分隔:&amp;#34;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)]\n    num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字:&amp;#34;&lt;/span&gt;))\n    the_VecCal &amp;#61; VecCal(data1[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], data1[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], data1[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n    the_n &amp;#61; VecCal(data2[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], data2[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], data2[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n    add &amp;#61; the_VecCal.add(n&amp;#61;the_n)\n    subduction &amp;#61; the_VecCal.subduction(n&amp;#61;the_n)\n    multiplication &amp;#61; the_VecCal.multiplication(number&amp;#61;num)\n    division &amp;#61; the_VecCal.division(number&amp;#61;num)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} &amp;#43; {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), the_n.display(), add.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} - {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), the_n.display(), subduction.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} * {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), num, multiplication.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} / {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), num, division.display()))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/412719024046186.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;有用的话点一下采纳&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["新型计算器 这个怎么做", ["题目：设计一个计算器，实现一个三维向量的加法，减法以及向量和标量的乘法和除法运算", "提示：", "1、定义类名为 VecCal，设计构造函数创建三维向量对象： def ", "init", "(self, x=0,y=0,z=0) 用x,y,z指代三个维度的值", "\n", "2、重写加法（+），减法（-），乘法（* ）和整除除法（//）运算，实现向量的加减乘除", "\n", "3、除法运算作异常处理，当输入标量数字是0时，除法结果为 （0，0，0）", "\n", "加法示例：", "\n", "def ", "add", "(self, n):  # 加法", "    result = VecCal()  # 定义结果变量，也是一个三维向量，通过构造函数创建", "    result.X = self.X + n.X", "    result.Y = self.Y + n.Y", "    result.Z = self.Z + n.Z", "    return result         # 返回 执行加法运算后的向量结果", "输入格式:", "第一行输入一个三维向量，逗号分隔，如：1，2，3", "\n", "第二行输入另一个三维向量，逗号分隔：如：4，5，6", "\n", "第三行输入一个数字， 如：3", "\n", "输出格式:", "(1, 2, 3) + (4, 5, 6) = (5, 7, 9)", "\n", "(1, 2, 3) - (4, 5, 6) = (-3, -3, -3)", "\n", "(1, 2, 3) * 3 = (3, 6, 9)", "\n", "(1, 2, 3) / 3 = (0, 0, 1)", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "1,2,3", "4,5,6", "3", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "(1, 2, 3) + (4, 5, 6) = (5, 7, 9)", "(1, 2, 3) - (4, 5, 6) = (-3, -3, -3)", "(1, 2, 3) * 3 = (3, 6, 9)", "(1, 2, 3) / 3 = (0, 0, 1)", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "[color=red]remapResults=\"true\"[/color] resultClass=\"java.util.HashMap\"\r\n\r\n\r\n因为返回的实体不一样 所有必须加上 remapResults=\"true\"  属性\r\n\r\n后台 根据 获取数据  HashMap map = (HashMap)list.get(0);\r\n String a = (String)map.get(\"A\");", "Konwledge_Point": "异常处理", "Question": ["关于ibatis的返回值问题", ["配置信息：", "\n        select * from t_admin_role where admin_id = #{aId} and role_id =#{rId}", "\n在ibatis中我如果在查询一个中间表 在配置里面返回值要写成什么呢？我在查询这个的时候配置过 返回值类型“map” “int”，都没有返回值，在执行到查询后就进入ibatis自己的异常处理去了，后台没有报错，因为我这个表 是中间表 所以没有实体，请教哈这问题要怎么解决呢？", "\n\n", "在后台数据代码是这样写的：", "\n                                Map map = new HashMap();", "\n                                map.put(\"aId\", aId);", "\n            map.put(\"rId\", rId);", "\n            Object object;", "\n            object = session.selectOne(Admin.class.getName()+\".find_admin_role\", map);", "\n            System.out.println(\"======================\"+object);", "\n\n", "在log4中输出的日志信息是：", "\nDEBUG [http-8080-1]                   java.sql.Connection     - ooo Connection Opened", "\nDEBUG [http-8080-1]            java.sql.PreparedStatement     - ==>  Executing: select * from t_admin_role where admin_id = ? and role_id =? ", "\nDEBUG [http-8080-1]            java.sql.PreparedStatement     - ==> Parameters: 2(Integer), 1(Integer)"]], "Tag": "程序设计"}
{"Answer": "The type \"class org.apache.roller.weblogger.pojos.TaskLock\" has not been enhanced. \r\n\r\n记得JPA里面有个叫enhance的操作，好像主要是提高速度的。但是不enhance不应该报错，应该报警告的。。。\r\nenhance具体操作没有细究，以前用netbeans做的，部署的时候netbeans会自动enhance~~~\r\n\r\n你找找jpa文档，看看怎么enhance.做一下enhance操作试试 :。。", "Konwledge_Point": "异常处理", "Question": ["java.lang.RuntimeException: <0.9.7-incubating fatal user error> 异常的处理", ["在配置roller4.0.1时，报openJPA的异常，文件用jar包时，不会出错，当用源代码时就包这个异常，这是什么原因？？", "\n\n", "严重: Exception sending context initialized event to listener instance of class org.apache.roller.weblogger.ui.core.RollerContext", "\njava.lang.RuntimeException:  org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.roller.weblogger.pojos.TaskLock\" has not been enhanced.", "\n    at org.apache.roller.weblogger.business.jpa.JPAPropertiesManagerImpl.initialize(JPAPropertiesManagerImpl.java:96)", "\n    at org.apache.roller.weblogger.business.WebloggerImpl.initialize(WebloggerImpl.java:303)", "\n    at org.apache.roller.weblogger.ui.core.RollerContext.contextInitialized(RollerContext.java:159)", "\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3843)", "\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4342)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)", "\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)", "\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)", "\n    at org.apache.catalina.core.StandardService.start(StandardService.java:516)", "\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)", "\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:578)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)", "\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)", "\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)", "\n    at java.lang.reflect.Method.invoke(Method.java:597)", "\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)", "\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)", "\nCaused by:  org.apache.openjpa.persistence.ArgumentException: The type \"class org.apache.roller.weblogger.pojos.TaskLock\" has not been enhanced.", "\n    at org.apache.openjpa.meta.ClassMetaData.resolveMeta(ClassMetaData.java:1606)", "\n    at org.apache.openjpa.meta.ClassMetaData.resolve(ClassMetaData.java:1580)", "\n    at org.apache.openjpa.meta.MetaDataRepository.processBuffer(MetaDataRepository.java:659)", "\n    at org.apache.openjpa.meta.MetaDataRepository.resolveMeta(MetaDataRepository.java:559)", "\n    at org.apache.openjpa.meta.MetaDataRepository.resolve(MetaDataRepository.java:484)", "\n    at org.apache.openjpa.meta.MetaDataRepository.getMetaData(MetaDataRepository.java:288)", "\n    at org.apache.openjpa.meta.MetaDataRepository.resolveAll(MetaDataRepository.java:1523)", "\n    at org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(MetaDataRepository.java:1498)", "\n    at org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(EntityManagerImpl.java:782)", "\n    at org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(EntityManagerImpl.java:65)", "\n    at org.apache.roller.weblogger.business.jpa.JPAPersistenceStrategy.getNamedQuery(JPAPersistenceStrategy.java:274)", "\n    at org.apache.roller.weblogger.business.jpa.JPAPropertiesManagerImpl.getProperties(JPAPropertiesManagerImpl.java:121)", "\n    at org.apache.roller.weblogger.business.jpa.JPAPropertiesManagerImpl.initialize(JPAPropertiesManagerImpl.java:77)", "\n    ... 17 more"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;主要涉及文件存取和字符串、字典、列表处理等&amp;#xff0c;参考如下代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;try:\n    f&amp;#61;open(&amp;#39;stud.csv&amp;#39;,&amp;#39;r&amp;#39;,encoding&amp;#61;&amp;#39;utf-8&amp;#39;)\nexcept IOError:\n    print(&amp;#34;文件打开错误&amp;#xff0c;请核对文件是否存在&amp;#34;)\nshu_dic &amp;#61; {0:&amp;#39;鼠&amp;#39;,1:&amp;#39;牛&amp;#39;,2:&amp;#39;虎&amp;#39;,3:&amp;#39;兔&amp;#39;,4:&amp;#39;龙&amp;#39;,5:&amp;#39;蛇&amp;#39;,6:&amp;#39;马&amp;#39;,7:&amp;#39;羊&amp;#39;,8:&amp;#39;猴&amp;#39;,9:&amp;#39;鸡&amp;#39;,10:&amp;#39;狗&amp;#39;,11:&amp;#39;猪&amp;#39;}\nd&amp;#61;f.read().split(&amp;#39;\\n&amp;#39;)\nsts&amp;#61;[]\nfor row in d[1:]:\n    id&amp;#61;row.split(&amp;#39;,&amp;#39;)[0]\n    name &amp;#61; row.split(&amp;#39;,&amp;#39;)[1]\n    bdate &amp;#61; row.split(&amp;#39;,&amp;#39;)[2][6:14]\n    sex &amp;#61; &amp;#39;女&amp;#39; if int(row.split(&amp;#39;,&amp;#39;)[2][16]) % 2 &amp;#61;&amp;#61; 0 else &amp;#39;男&amp;#39;\n    shu &amp;#61; shu_dic[(int(bdate[:4])-1984) % 12]\n    stu &amp;#61; [id, name, bdate, sex,shu]\n    sts.append(stu)\nf.close()\nnew&amp;#61;sorted(sts, key&amp;#61;lambda x: x[2], reverse&amp;#61;True)\nnew.insert(0,[&amp;#39;学号&amp;#39;, &amp;#39;姓名&amp;#39;, &amp;#39;出生日期&amp;#39;, &amp;#39;性别&amp;#39;, &amp;#39;生肖&amp;#39;])\ntry:\n    f1&amp;#61;open(&amp;#39;fname.txt&amp;#39;,&amp;#39;w&amp;#39;,encoding&amp;#61;&amp;#39;utf-8&amp;#39;)#fname为自己的学号\nexcept IOError:\n    print(&amp;#34;文件打开错误&amp;#xff0c;请核对文件是否存在&amp;#34;)\nfor line in new:\n    st&amp;#61;&amp;#39;,&amp;#39;.join(line)\n    f1.writelines(st)\n    f1.write(&amp;#39;\\n&amp;#39;)\n    print(st)\nf1.close()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;如你对解答满意&amp;#xff0c;请点击一下采纳。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python文件操作题", ["\n\n", "一、读取文件数据", "\n\n", "•将数据素材文件stud.csv保存到电脑C:\\py文件夹下；", "\n\n", "•设计程序读取stud.csv文件内容，循环逐行处理每个学生的", "\n\n", "数据，提取每个学生的学号、姓名、出生日期、性别组成", "\n\n", "一个列表；", "\n\n", "•如：[‘19080174031’,’黄晓瑞’,’19981225’,’女’]", "\n\n", "---此处添加IOError异常处理模块，若打开文件错误，则提示", "\n\n", "“文件打开错误，请核对文件是否存在”，程序结束（结束", "\n\n", "程序的方法早前的身份证练习中有讲到）", "\n\n", "二、添加生肖数据项", "\n\n", "在上一步提取的出生日期信息的基础上，推算出该同学的生", "\n\n", "肖，添加到上一步的列表中。", "\n\n", "如：[‘19080174031’,’黄晓瑞’,’19981225’,’女’,’虎’]", "\n\n", "推算生肖的方法，其实就是用出生日期的年份整数与某个鼠年的", "\n\n", "年份整数相减，然后减法的差与12取余的余数就是生肖的顺序了，", "\n\n", "0—鼠1—牛……………………11---猪", "\n\n", "三、当前学生信息添加到主列表", "\n\n", "当前学生信息列表生成完毕，将该列表作为一个子列表加入", "\n\n", "主列表，形如：", "\n\n", "[[‘19080174031’,’黄晓瑞’,’19981225’,’女’,’虎’],", "\n\n", "………………,", "\n\n", "[另外一个学生的信息]]", "\n\n", "四、主列表排序及添加表头", "\n\n", "全部学生信息添加到主列表生成完毕，按照出生日期对主列", "\n\n", "表逆序排序；", "\n\n", "在主列表最前面添加两个子列表，分别是表头和学生本人的", "\n\n", "信息，例如：", "\n\n", "[[‘学号’,’姓名’,’出生日期’,’性别’,’生肖’],", "\n\n", "[‘2009014031’,’王大蟒’,’20021225’,’女’,’蛇’],", "\n\n", "[‘19080174031’,’黄晓瑞’,’19981225’,’女’,’虎’],", "\n\n", "………………,", "\n\n", "[另外一个学生的信息]]", "\n\n", "五、结果写入文件", "\n\n", "将学生信息主列表生成写入CSV文件：", "\n\n", "“c:\\\\py\\\\fname.txt”", "\n\n", "其中的fname为学生本人的学号。", "\n\n", "---此处添加IOError异常处理模块，若打开文件错误，则提示", "\n\n", "“文件打开错误，请核对文件是否存在”，然后使用print函", "\n\n", "数输出所有学生的信息，每人一行。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;必填的字段input应该加 required&amp;#61;&amp;#34;required&amp;#34;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;method&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;action&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;testing.php&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; p10 m20&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#xfe61;姓 名\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;meminput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;required&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;required&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;p10 m20&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#xfe61;电话\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;meminput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;required&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;required&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;p10 m20&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt; 性 別\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;meminput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;p10 m20&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#xfe61;MAIL\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;meminput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;email&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;required&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;required&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=\"hljs-symbol\"&gt;&amp;amp;nbsp;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;提交&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["html如何处理表单提交错误的问题", ["\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", ">", "\n", "<", "head", ">", "\n", "<", "meta", " ", "charset", "=", "\"utf-8\"", ">", "\n", "<", "title", ">", "联络我们", "</", "title", ">", "\n", "<", "link", " ", "href", "=", "\"../css/css.css\"", " ", "rel", "=", "\"stylesheet\"", " ", "type", "=", "\"text/css\"", " />", "</", "head", ">", "\n", "<", "body", ">", "\n", "<", "div", " ", "id", "=", "\"head\"", ">", "\n  ", "<", "div", " ", "id", "=", "\"logo\"", ">", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "<", "img", " ", "src", "=", "\"../images/logo.jpg\"", " ", "alt", "=", "\"logo\"", " />", "</", "a", ">", "</", "div", ">", "\n  ", "<", "div", " ", "id", "=", "\"nav\"", ">", "\n    ", "<", "ul", ">", "\n      ", "<", "li", ">", "<", "a", " ", "href", "=", "\"../index.html\"", ">", "<", "img", " ", "src", "=", "\"../images/about.jpg\"", " ", "alt", "=", "\"about\"", " />", "</", "a", ">", "</", "li", ">", "\n      ", "<", "li", ">", "<", "a", " ", "href", "=", "\"../happy/chuansong.html\"", ">", "<", "img", " ", "src", "=", "\"../images/happy.jpg\"", " ", "alt", "=", "\"happy\"", " />", "</", "a", ">", "</", "li", ">", "\n      ", "<", "li", ">", "<", "a", " ", "href", "=", "\"../about/lianxi.html\"", ">", "<", "img", " ", "src", "=", "\"../images/contact.jpg\"", " ", "alt", "=", "\"contact\"", " />", "</", "a", ">", "</", "li", ">", "\n      ", "<", "li", ">", "<", "a", " ", "href", "=", "\"../play/paly1.html\"", ">", "<", "img", " ", "src", "=", "\"../images/play.jpg\"", " ", "alt", "=", "\"play\"", " />", "</", "a", ">", "</", "li", ">", "\n      ", "<", "li", ">", "<", "a", " ", "href", "=", "\"../member/huiyuan.html\"", ">", "<", "img", " ", "src", "=", "\"../images/member.jpg\"", " ", "alt", "=", "\"member\"", " />", "</", "a", ">", "</", "li", ">", "\n    ", "</", "ul", ">", "\n  ", "</", "div", ">", "\n  ", "<", "div", " ", "id", "=", "\"share\"", ">", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "<", "img", " ", "src", "=", "\"../images/share.jpg\"", " ", "alt", "=", "\"share\"", " />", "</", "a", ">", "</", "div", ">", "\n", "</", "div", ">", "\n", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n", "<", "div", " ", "id", "=", "\"ad\"", ">", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "<", "img", " ", "src", "=", "\"../images/imgad.jpg\"", " ", "width", "=", "\"990\"", " ", "alt", "=", "\"imgad\"", " />", " ", "</", "a", ">", "</", "div", ">", "\n", "<", "div", " ", "id", "=", "\"common_main\"", ">", "\n  ", "<", "div", " ", "id", "=", "\"common_left\"", ">", "\n    ", "<", "div", " ", "id", "=", "\"common_left_ad1\"", ">", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "<", "img", " ", "src", "=", "\"../images/imgleft.png\"", " ", "width", "=", "\"170\"", " ", "alt", "=", "\"imgleft\"", " />", "</", "a", ">", "</", "div", ">", "\n    ", "<", "div", " ", "id", "=", "\"common_left_ad1\"", ">", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "<", "img", " ", "src", "=", "\"../images/imgleft.png\"", " ", "width", "=", "\"170\"", " ", "alt", "=", "\"imgleft\"", " />", "</", "a", ">", "</", "div", ">", "\n  ", "</", "div", ">", "\n  ", "<", "div", " ", "id", "=", "\"common_right\"", ">", "\n    ", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n    ", "<", "p", " ", "class", "=", "\" m10 p10\"", " >", "注册会员", "</", "p", ">", "\n    ", "<", "div", " ", "id", "=", "\"membodera\"", ">", " ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n    ", "<", "div", " ", "id", "=", "\"memin\"", ">", "\n      ", "<", "form", ">", "\n        ", "<", "p", " ", "class", "=", "\" p10 m20\"", ">", "﹡姓 名\n        ", "<", "input", " ", "class", "=", "\"meminput2\"", " ", "type", "=", "\"text\"", " />", "\n        ", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"p10 m20\"", ">", "﹡电话\n        ", "<", "input", " ", "class", "=", "\"meminput2\"", " ", "type", "=", "\"number\"", " />", "\n        ", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"p10 m20\"", ">", " 性 別\n        ", "<", "input", " ", "class", "=", "\"meminput2\"", " ", "type", "=", "\"text\"", " />", "\n        ", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"p10 m20\"", ">", "﹡MAIL\n        ", "<", "input", " ", "class", "=", "\"meminput2\"", " ", "type", "=", "\"email\"", " />", "\n        ", "</", "p", ">", "\n          ", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "\n        ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"提交\"", " />", "\n      ", "</", "form", ">", "\n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"m20 ml140\"", ">", "\n", "<!--\n      <form id=\"form1\" name=\"form1\" method=\"post\" action=\"\">\n        \n\n      </form>\n-->", "\n    ", "</", "div", ">", "\n", "</", "div", ">", "\n", "</", "div", ">", "\n", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n", "</", "div", ">", "\n", "<", "div", " ", "class", "=", "\"clear\"", ">", "</", "div", ">", "\n", "<", "div", " ", "id", "=", "\"footer\"", ">", "\n  ", "<", "div", " ", "id", "=", "\"footer_info\"", ">", "\n    ", "<", "div", " ", "class", "=", "\"p15  ml30 fl\"", ">", " ", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "购物说明", "</", "a", ">", " ", "<", "a", " ", "href", "=", "\"#\"", " ", "target", "=", "\"_blank\"", ">", "个人隐私保密申明", "</", "a", ">", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"p15 fl\"", ">", "\n      ", "<", "p", " ", "class", "=", "\"fl\"", ">", "Service Email：xxxxxxxxxxxx", "</", "p", ">", "\n      ", "<", "p", " ", "class", "=", "\"fl ml30\"", ">", "制作人：xxxxxxxxxxxx", "</", "p", ">", "\n    ", "</", "div", ">", "\n  ", "</", "div", ">", "\n", "</", "div", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n", "\n", "原本的情况是这样的", "\n", "\n", "但是它任意输入都不会识别number，email等属性，点击提交后就跳转到空白页面，显示了个\"Not Found\"。", "\n", "应该怎么修改，只需要点击提交键能够识别输入内容是否正确，然后清空输入就行了，可以采用html+css，不用js"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的myds是在上面定义声明的吗&amp;#xff1f;看一下有没有初始化~&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["“未处理argumentnullexception”“值不能为null”怎么解决啊", ["\n", "求问这个语句应该怎么改？我看了异常的常规帮助也不懂怎么改。", "我真的完全不懂😭"]], "Tag": "程序设计"}
{"Answer": "不懂你说的。。。。\r\n\r\n就是函数的数据源  由 文件 改成  传感器变化值，加个数据处理方法不就好了。（onSensorChanged 的数据格式 转化 文件中的格式）", "Konwledge_Point": "异常处理", "Question": ["Android中传感器onSensorChanged中的数据处理问题，求大神指导！！！", ["onSensorChanged()在变化时会产生数据，原来产生的数据存储在文件中，通过读取文件中的数据，交给函数处理；但现在我想直接将产生的数据交给函数处理，请问能够实现吗？有什么方法？"]], "Tag": "程序设计"}
{"Answer": "ftp.isRemoteVerificationEnabled()\r\n\r\n用这个方法试一下吧\r\n\r\n\r\n但是隐约记得问题不是出在这里,ftp这时仍是连着的,ftp.retrieveFile 方法在上传多个文件时就会出这个问题,可能要换个方法", "Konwledge_Point": "异常处理", "Question": ["FTPClient连接时间过长无数据传输导致连接无效异常如何处理？", ["想要实现一个实时系统，while（true）{中间是从ftp服务器上面下载文件", "\n}", "\n\n", "现在碰到一个问题：有时候服务器上面没有文件就不会有data传输", "\n导致时间超过设置时间后无法读取文件", "\n但是使用：ftp.isConnect() 和ftp.isAvailable()去判断都是true", "\n但是ftp.retrieveFile(remoteFilePath+lists[i].getName(), fos);的时候就报错，请问如何判断ftp已经失效？或者说怎么样才能重新连接下载？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;多了空耳&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["接口接收不到String类型的参数", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "定义了一个实体类", "\n", "@Data", "\n", "@AllArgsConstructor", "\n", "@NoArgsConstructor", "\n", "//@ApiModel(value = \"RevenueDto\", description = \"营收dto\")", "\npublic class RevenueDto {\n    ", "@ApiModelProperty", "(value = ", "\"商户id-userID\"", ", dataType = ", "\"String\"", ", required = true, example = ", "\"123456\"", ")\n    private String currentUserId; ", "// 商户id-userID", "\n\n    ", "@ApiModelProperty", "(value = ", "\"开始时间\"", ", required = true, example = ", "\"2022-10-10 11:11:11\"", ")\n    ", "@JsonFormat", "(shape= JsonFormat.Shape.STRING, pattern=", "\"yyyy-MM-dd HH:mm:ss\"", ", timezone = ", "\"GMT+8\"", ")\n    private LocalDateTime  dateStart; ", "// 开始时间", "\n\n    ", "@ApiModelProperty", "(value = ", "\"结束时间\"", ", required = true, example = ", "\"2022-10-10 11:11:11\"", ")\n    ", "@JsonFormat", "(shape= JsonFormat.Shape.STRING, pattern=", "\"yyyy-MM-dd HH:mm:ss\"", ", timezone = ", "\"GMT+8\"", ")\n    private LocalDateTime  dateEnd; ", "// 结束时间", "\n\n}\n", "\n", "接口", "使用了两种方法，实体类dto对于参数currentUserId=null；map接受话是得到了currentUserId，但是get不出来。", "\n", "@PostMapping", "(", "\"/getRevenue\"", ")\n    ", "@ApiOperation", "(value = ", "\"获取营收统计信息\"", ")\n    ", "@ApiImplicitParam", "(name = ", "\"revenueDto\"", ", value = ", "\"营收dto\"", ", required = true, dataType = ", "\"RevenueDto\"", ")\n    public ResultInfo getRevenueInfo(", "@RequestBody", " RevenueDto revenueDto) {\n   ", "/* public ResultInfo getRevenueInfo(@RequestBody Map map) {\n        // todo：异常处理,字符串接收不到\n        //return ResultInfo.ok(threeService.getRevenueInfo(revenueDto));\n        RevenueDto revenueDto = new RevenueDto();\n        revenueDto.setCurrentUserId(map.get(\"currentUserId\").toString());\n        revenueDto.setDateStart(LocalDateTime.parse(map.get(\"dateStart\").toString()));\n        revenueDto.setDateEnd(LocalDateTime.parse(map.get(\"dateEnd\").toString()));\n        */", "\n        ", "return", " ", "ResultInfo", ".ok", "(threeService.getRevenueInfo(revenueDto));\n    }\n", "\n", "运行结果及报错内容", "\n", "使用了两种方法，实体类dto对于参数currentUserId=null；map接受话是得到了currentUserId，但是get不出来报错。", "\n", "参数字段名没有问题，都是currentUserId。没有大小写问题", "\n", "我的解答思路和尝试过的方法", "\n", "使用了两种方法，实体类dto对于参数currentUserId=null；map接受话是得到了currentUserId，但是get不出来报错。", "\n", "但是能接收到随便去一个字段名称为userid的字段的数据", "\n", "我想要达到的结果", "\n", "实体类dto能接受到参数currentUserId"]], "Tag": "程序设计"}
{"Answer": "你看看这个对你有帮助吗？http://www.iteye.com/topic/119935", "Konwledge_Point": "异常处理", "Question": ["json-plugin cglib nosuchmethodexception,不是hibernate引发的问题", ["事情是这样的，我打算用spring的AOP来完成一些功能，如日志处理，操作权限验证等。由于所有的Action都必须继承ActionSupport（我用的是Struts2），spring的配置文件中，我用的是BeanNameAutoProxyCreator，其中将proxyTargetClass这个属性设置成true，于是问题就来了，一旦我用json-plugin，那么就会抛出NoSuchMethodException。我知道这是由于json-plugin序列化的是Action的CGLIB代理类。像这这种问题，我不知道大家是如何解决的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看截图感觉接口返回数据有问题。指定了responseType:&amp;#39;blob&amp;#39;&amp;#xff0c;response应该是blob数据类型&amp;#xff0c;怎么存储的还是字符串一样的内容。&lt;/p&gt;\n&lt;p&gt;题主是不是将Excel文件用io当字符串读出后输出了&amp;#xff1f;应该是输出2进制的数据。&lt;/p&gt;\n&lt;p&gt;直接浏览器访问接口后保存文件&amp;#xff0c;这个文件能打开吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["前端下载后端文件流，文件可以下载，但是打不开，显示“文件已损坏”，postman可以下载并打开，无异常。", ["前端下载文件流，如下是图片说明", "\n", "\n", "\n", "\n", "\n", "\n", "下面是代码", "\n", "//这是请求时的处理参数", "\n", "xhrRequest", "({\n            ", "url", ": ", "\"http://172.30.16.40:8123/api/bomplus?SAP_BillId=0400004143\"", ",\n            ", "method", ": ", "'get'", ",\n            ", "headers", ": {\n                ", "'Content-Type'", ": ", "'application/json'", "\n            },\n            ", "responseType", ": ", "'blob'", ",\n            ", "data", ": {},\n        })\n            .", "then", "(", "res", " =>", " {\n                ", "resolve", "(res);\n            })\n            .", "catch", "(", "err", " =>", " {\n                ", "reject", "(err);\n            });\n\n", "//-------------------------", "\n\n", "//这是文件流处理的代码", "\n\n", "downloadFileNew", ": ", "function", " (", "res", ") {\n        ", "console", ".", "log", "(res);\n        ", "if", " (res.", "status", " != ", "200", ") {\n            ", "Message", ".", "error", "(", "decodeURIComponent", "(res.", "request", ".", "statusText", "));\n            ", "return", " ", "false", ";\n        } ", "else", " {\n            ", "let", " blob = ", "new", " ", "Blob", "([res.", "request", ".", "response", "], { ", "type", ": res.", "headers", "[", "'content-type'", "] });\n            ", "let", " url = ", "window", ".", "URL", ".", "createObjectURL", "(blob);\n            ", "let", " a = ", "document", ".", "createElement", "(", "'a'", ");\n            ", "document", ".", "body", ".", "appendChild", "(a);\n            ", "let", " fileName = res.", "headers", "[", "'content-disposition'", "].", "split", "(", "';'", ")[", "1", "].", "split", "(", "'='", ")[", "1", "];\n            ", "if", " (fileName[", "0", "] == ", "'\"'", ") {\n                fileName = fileName.", "split", "(", "'\"'", ")[", "1", "];\n            }\n            a.", "href", " = url;\n            a.", "download", " = fileName;\n            a.", "click", "();\n            ", "window", ".", "URL", ".", "revokeObjectURL", "(url);\n            ", "document", ".", "body", ".", "removeChild", "(a);\n        }\n    },\n", "\n", "图中显示文件流的下载没有问题，问题是最后文件打开的时候wps提示 无法打开文件 ，但是postman的send and  Download下载的文件没有问题，网上也找了很多参考，但大部分都是说mockjs导致的，但是我这个项目里面没有mock，所以返回的request是没有问题的，其中blob格式也设置了。请各位前端能人志士尽情的提出意见，本人不胜感激！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为myException()方法体内并没有异常&amp;#xff1b;&lt;br /&gt;方法一&lt;br /&gt;给一个异常&amp;#xff0c;例如&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;   &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;myException&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; MyException &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; result &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;方法二&lt;br /&gt;直接抛出MyException异常&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;myException&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; MyException &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; MyException();\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["Java初学者关于异常的问题", ["\n", "\n", "\n", "请问各位，自定义了一个编译时异常后，在测试类中的myException方中new出它的对象，然后对这个异常的处理方式为向上抛出，在main方法中调用myException方法并捕捉了这个异常，为什么catch分支中的222不能被打印出来呢？谢谢！"]], "Tag": "程序设计"}
{"Answer": "你把267行和135行附近的代码也贴出来更好点", "Konwledge_Point": "异常处理", "Question": ["Java Socket中out.writeObject()报空指针异常怎么处理？", ["\n====================华丽的分割线", "\n谢谢各位大佬！我莫名其妙弄出来了！但是还是不太懂，想问一问：", "\n这是原来的：", "\n这是现在的：", "\n为什么我把in和out的赋值换了一个位置，它们就不空了呢？？小白好懵，求大佬解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你上面构造sql语录那里&amp;#xff0c;只有右括号哒&amp;#xff0c;没有左括号&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C#代码发生错误，该怎么改？", ["就会发生错误", "\n", "\n", "这是代码：", "if (dataGridView1.SelectedRows.Count > 0)", "            {", "\n", "        }\n        ", "else", "\n        {\n            MessageBox.Show(", "\"请选择要的修改的行\"", ");\n            ", "return", ";\n        }\n        string str1 = ", "this", ".button2.Text;\n\n        ", "//获取输入的信息", "\n        string id = dataGridView1.SelectedRows[", "0", "].Cells[", "0", "].Value.ToString(); \n        string stime =  Convert.ToDateTime(", "this", ".dateTimePicker1.Text).ToString(", "\"yyyy-MM-dd\"", ");\n\n        string etime = ", "\"\"", ";\n        ", "if", "(", "this", ".dateTimePicker2.Visible == ", "true", ")\n        {\n            etime = Convert.ToDateTime(", "this", ".dateTimePicker2.Text).ToString(", "\"yyyy-MM-dd\"", ");\n        }\n        string xuehao = ", "this", ".textBox2.Text;\n        string xuhao = ", "this", ".textBox3.Text;\n        string yuanyin = ", "this", ".richTextBox1.Text;\n        ", "//编写修改的sql语句", "\n        string strsql = ", "\"update kqlog set starttime='\"", "+stime+", "\"',\"", "+\n            ", "\"enttime='\"", "+etime+", "\"',\"", "+\n            ", "\"yuanlin='\"", "+yuanyin+", "\"',\"", "+\n            ", "\"xuhao='\"", "+xuhao+", "\"',\"", "+\n            ", "\"xuehao='\"", "+xuehao+", "\"')\"", ";\n\n\n        ", "//...用id当条件就行，不用做这么麻烦了", "\n        strsql += ", "\" where id='\"", " + id + ", "\"'\"", ";\n        ", "// 添加异常处理", "\n        ", "try", "\n        {\n            SqlConnection con = GetCon();\n            con.Open();\n            SqlCommand cmd = con.CreateCommand();\n            cmd.CommandText = strsql;\n            int count = cmd.ExecuteNonQuery();\n            ", "if", " (count > ", "0", ")\n            {\n                ", "this", ".toolStripStatusLabel1.Text = ", "\"操作成功 ！\"", ";\n            }\n            con.Close();\n            shuxin();\n        }\n        ", "catch", " (Exception ex)\n        {\n\n            ", "this", ".toolStripStatusLabel1.Text = ", "\"操作失败！失败原因：\"", " + ex.Message;\n            \n        }\n\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;阿这.你这个URL所需要的电影数据不是写在接口里嘛?????打开F12开发者工具.刷新页面.选择XHR.就能看到这个网站数据返回是JSON接口&lt;br /&gt;&lt;a href=\"https://api.jackeriss.com/api/v1/recommend/?subject&amp;#61;tv_%E7%83%AD%E9%97%A8&amp;amp;page_start&amp;#61;0&amp;amp;page_limit&amp;#61;24\" id=\"textarea_1648622130801_1648622150733_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://api.jackeriss.com/api/v1/recommend/?subject&amp;#61;tv_%E7%83%AD%E9%97%A8&amp;amp;page_start&amp;#61;0&amp;amp;page_limit&amp;#61;24&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;如有帮助.点击采纳,谢谢&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["用Python爬取一个网页，向下滚动会不断生成div，想要爬取这些div但爬取下来只有个loading", [" 问题遇到的现象和发生背景 ：", "用Python爬取一个网页，这个网页的特点是如果向下滚动，会源源不断的生成", "标签，没有尽头，如果爬取这个网页，生成器", "标签爬取下来之后只有只有个loading，而我想要获得的就是这些生成的", "标签，应该怎么办？", "问题相关代码： ", "\n", "import urllib.request,urllib.error", "# 制定URL，获取网页数据", "\ndef askUrl(url):\n    head = {", "# 模拟浏览器头部信息，想浏览器发送消息", "\n        ", "\"authority\"", ": ", "\"cupfox.app\"", ",\n        ", "\"method\"", ": ", "\"GET\"", ",\n        ", "\"scheme\"", ": ", "\"https\"", ",\n        ", "\"path\"", ":", "\"/ list?category = % E7 % 83 % AD % E6 % 92 % AD % E6 % 96 % B0 % E5 % 89 % A7\"", ",\n        ", "\"user-agent\"", ": ", "\"Mozilla / 5.0(Linux;Android 6.0;Nexus 5 Build / MRA58N) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 99.0.4844.74 bile Safari / 537.36 Edg / 99.0.1150.55\"", "\n    }", "# 告诉服务器，我们能够接受什么类型的内容", "\n    request = urllib.request.Request(url,headers=head) ", "#把URL和头部信息headers封装成一个request对象赋给request，", "\n    html = ", "''", "# 定义一个对象，用于封装服务器返回的数据", "\n\n    ", "#爬取网页的时候，可能会遇到很多问题，这时候需要进行异常处理：", "\n    try:\n        response = urllib.request.urlopen(request,timeout=", "100", ")  ", "# 把封装的request对象发送给服务器，告诉它我们要打开一个URL，并且我们能够接收的类型在head里面有说明,timeout是超时时间，如果超过10秒服务器没有响应，判定为超时", "\n        html = response.read().decode(", "'utf-8'", ")", "#读取服务器返回的数据，因为数据经过utf-8编码，所以需要decode解码", "\n    except urllib.error.URLError as e :\n        ", "if", " hasattr(e,", "\"code\"", "):\n            ", "print", "(e.code) ", "# 把有什么问题打印出来", "\n        ", "if", " hasattr(e,", "\"reason\"", "):\n            ", "print", "(e.reason)", "# 把什么原因没有获取成功打印出来", "\n    ", "return", " html\n", "print", "(askUrl(", "\"https://cupfox.app/list?category=%E7%83%AD%E6%92%AD%E6%96%B0%E5%89%A7\"", "))\n\n", "\n", " 运行结果及报错内容 ：", "网页如果向下滑动网页会源源不断的生成div标签：", "\n", "\n", "下面是爬取到的内容", "\n<title id=\"qr5y417-aria\">Loading.</title>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题是在这句&amp;#xff0c;proxy&amp;#61; urllib.request.ProxyHandler({&amp;#39;http&amp;#39;:proxy_addr})&amp;#xff0c;设置代理语句写法错误&amp;#xff0c;改写成如下即可&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;proxy&lt;/span&gt;&amp;#61; urllib.request.ProxyHandler({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;http://&amp;#39;&lt;/span&gt;:proxy_addr})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如对你有帮助&amp;#xff0c;请点击我回答的右上方采纳按钮给予采纳。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["微信爬虫失败原因:由于计算机积极拒绝", ["新手学了微信文章爬虫", "参考了前辈们的代码，确不能成功，求助各位大佬！", "如下:", "#", "\n  ", "搜狗微信搜索_订阅号及文章内容独家收录，一搜即达", "\n  ", "微信公众号，精彩内容独家收录，一搜即达", "\n  ", "\n  ", "\n    ", "\n      ", "http://weixin.sogou.com/", "\n    ", "\n  ", "import re", "import urllib.request", "import time", "import urllib.error", "import urllib.request", "\n", "import scipy", "#自定义函数，功能为使用代理服务器爬一个网址", "def use_proxy(proxy_addr,url):", "    #建立异常处理机制", "    try:", "        req=urllib.request.Request(url)", "        req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36')", "        proxy= urllib.request.ProxyHandler({'http':proxy_addr})", "        opener = urllib.request.build_opener(proxy, urllib.request.HTTPHandler)", "        urllib.request.install_opener(opener)", "        data = urllib.request.urlopen(req).read()", "        return data", "    except urllib.error.URLError as e:", "        if hasattr(e,\"code\"):", "            print(e.code)", "        if hasattr(e,\"reason\"):", "            print(e.reason)", "        #若为URLError异常，延时10秒执行", "        time.sleep(10)", "    except Exception as e:", "        print(\"exception:\"+str(e))", "        #若为Exception异常，延时1秒执行", "        time.sleep(1)", "\n", "#设置关键词", "key=\"Python\"", "#设置代理服务器，该代理服务器有可能失效，读者需要换成新的有效代理服务器", "proxy=\"120.76.231.27:3128\"", "#爬前10页", "for i in range(1,10):", "    key=urllib.request.quote(key)", "    thispageurl= '", "\n  ", "' key '的相关微信公众号文章 – 搜狗微信搜索", "\n  ", "\n  ", "\n  ", "\n    ", "\n      ", "http://weixin.sogou.com/weixin?query=%27+key+%27&_sug_type_=&sut=4983&lkt=10%2C1527762297236%2C1527762302210&s_from=input&_sug_=y&type=2&sst0=1527762302313&page=%27+str(i)+%27&ie=utf8&w=01019900&dr=1%27", "\n    ", "\n  ", "    print(thispageurl)", "    thispagedata=use_proxy(proxy,thispageurl)", "    print(len(str(thispagedata)))", "\n", "pat1=", "'<a href=\"(.*?)\"'", "\nrs1=re.", "compile", "(pat1,re.S).findall(", "str", "(thispagedata))\n", "if", "(", "len", "(rs1)==", "0", "):\n    ", "print", "(", "\"此次（\"", "+", "str", "(i)+", "\"页）没成功\"", ")\n    ", "continue", "\n", "for", "  j ", "in", " ", "range", "(", "0", ",", "len", "(rs1)):\n    thisurl=rs1[j]\n    thisurl=thisurl.replace(", "\"amp;\"", ",", "\"\"", ")\n    ", "print", "(thisurl)\n    file=", "\"D:/Python学习/第\"", "+", "str", "(i)+", "\"页第\"", "+", "str", "(j)+", "\"篇文章.html\"", "\n    thisdata=use_proxy(proxy,thisurl)\n    ", "try", ":\n        fh=", "open", "(file,", "\"wb\"", ")\n        fh.write(thisdata)\n        fh.close()\n        ", "print", "(", "\"第\"", "+", "str", "(i)+", "\"页第\"", "+", "str", "(j)+", "\"篇文章成功\"", ")\n    ", "except", " Exception ", "as", " e:\n        ", "print", "(e)\n        ", "print", "(", "\"第\"", "+", "str", "(i)+", "\"页第\"", "+", "str", "(j)+", "\"篇文章失败\"", ")\n", "\n", "出现以下错误:", "\n", "[WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。", "4", "此次（1页）没成功", "[WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。", "4", "此次（2页）没成功", "[WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。", "4", "自己尝试解决方法:", "1.换了数个代理ip——还是失败", "2.尝试允许应用通过防火墙——还是不行", "3.加上decode", "data = urllib.request.urlopen(req).read().decode(\"utf-8\", \"ignore\")", "还是失败", "\n", "求助各位大佬"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/868623474936121.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["用python写的学生成绩管理系统有错。", ["\n", "#登录引导界面", "\ntxt =\\\n", "'''\n1. 添加学生信息\n2. 删除学生信息\n3. 修改学生信息\n4. 查询学生信息\n0. 退出系统\n'''", "\n\n", "#检测路径下是否存在通讯录文件，如果没有则建立文件", "\n", "import", " os.path\nis_exist = os.path.isfile(", "'addressbook.txt'", ")\n\n", "#添加联系人", "\n", "def", " ", "add", "():\n    ", "print", "(", "'添加学生信息'", ")   ", "#引导添加", "\n    ", "print", "(", "'姓名: '", ", end = ", "''", ")\n    Name = ", "input", "()      ", "#输入名字", "\n    ", "print", "(", "'性别: '", ", end = ", "''", ")\n    Sex = ", "input", "()       ", "#输入性别", "\n    ", "print", "(", "'学号: '", ", end = ", "''", ")\n    studentNumber = ", "input", "()    ", "#输入学号", "\n    ", "#将通讯录追加到文件末端", "\n    Contacts_file = ", "open", "(", "'addressbook.txt'", ",", "'a'", ")\n    Contacts_file.write(Name+", "'\\t\\t\\t'", "+Sex+", "'\\t\\t\\t'", "+studentNumber+", "'\\n'", ")     ", "#在文件中以名字，性别，学号格式排列，最后一个学号就直接换行准备下一个", "\n    Contacts_file.close()   ", "#文件写好后就关闭", "\n    ", "print", "(", "\"添加信息成功，已经保存在文档，请前去查看\"", "+", "'\\n'", ")\n\n", "#删除通讯录中的信息", "\n", "def", " ", "delete", "():\n    ", "print", "(", "'请输入你要删除的学生名字: '", ", end = ", "''", ")\n    name = ", "input", "()  ", "#输入需要删除的学生名字", "\n    Contacts_file = ", "open", "(", "'addressbook.txt'", ", ", "'r'", ")   ", "#打开文档", "\n    Contacts_list = []\n    ", "#将通讯录缓存到列表内，遇到需要删除的通讯录条目则跳过", "\n    ", "for", " line ", "in", " Contacts_file.readlines():\n        ", "if", " line.find(name) != -", "1", ":\n            ", "continue", "\n        Contacts_list.append(line)\n    ", "#将通讯录清空，将缓存在列表中的通讯录信息加载进文件内", "\n    Contacts_file = ", "open", "(", "'addressbook.txt'", ", ", "'w'", ")\n    ", "for", " i ", "in", " ", "range", "(", "0", ", ", "len", "(Contacts_list)):\n        Contacts_file.write(Contacts_list[i])\n    Contacts_file.close()\n    ", "print", "(", "\"该学生信息已经删除，具体可以对照文档查看\"", "+", "'\\n'", ")\n\n", "# 修改学员信息", "\n", "def", " ", "amend", "():\n    name = ", "input", "(", "\"请输入要修改的学员姓名:\"", ")\n    Contacts_file = ", "open", "(", "'addressbook.txt'", ", ", "'r'", ")  ", "# 打开文档", "\n    Contacts_list = []\n    ", "for", " i ", "in", " Contacts_list:\n        ", "if", " i[", "\"name\"", "] == name:\n            i[", "\"name\"", "] = ", "input", "(", "\"请输入要修改后的姓名:\"", ")\n            i[", "\"age\"", "] = ", "input", "(", "\"请输入要修改后的年龄:\"", ")\n            i[", "\"mobile\"", "] = ", "input", "(", "\"请输入要修改后的电话:\"", ")\n            ", "print", "(", "\"学员信息修改成功!\"", ")\n            ", "print", "(Contacts_list)\n            ", "break", "\n    ", "else", ":\n        ", "print", "(", "\"未找到学员信息!\"", ")\n\n\n\n\n", "#搜索通讯录", "\n", "def", " ", "search", "():\n    ", "print", "(", "'请输入你要查询的人的名字: '", ",end = ", "''", ")\n    Search_name = ", "input", "()\n    Contacts_file = ", "open", "(", "'addressbook.txt'", ",", "'r'", ")    ", "#打开通讯录文档", "\n    ", "for", " line ", "in", " Contacts_file.readlines():\n        String = line\n        find = String.find(Search_name)\n        ", "if", " find !=-", "1", " :\n            ", "print", "(", "\"此人信息为：\"", ")\n            ", "print", "(", "\"姓名:\"", "+", "'\\t\\t'", "+", "'性别:'", "+", "'\\t\\t'", "+", "'学号:'", ")\n            ", "print", "(line)\n            ", "break", "\n    ", "#若搜索不到，返回Not Found!", "\n    ", "if", " find == -", "1", ":\n        ", "print", "(", "'此人信息不存在'", ")\n    Contacts_file.close()\n\n", "class", " ", "InputError", "(", "Exception", "):\n    ", "'''当输出有误时，抛出此异常'''", "\n    ", "#自定义异常类型的初始化", "\n    ", "def", " ", "__init__", "(", "self, value", "):\n        self.value = value\n    ", "# 返回异常类对象的说明信息", "\n    ", "def", " ", "__str__", "(", "self", "):\n        ", "return", " (", "\"{} is invalid input\"", ".", "format", "(", "repr", "(self.value)))\n\n\n", "#主函数", "\n", "def", " ", "main", "():\n    ", "while", " ", "True", ":  ", "# 如果为真", "\n        ", "# try:", "\n\n        ", "print", "(", "\"欢迎光临学生管理系统，请选择功能对应的数字执行操作:\"", ")  ", "# 引导选择", "\n        ", "print", "(txt)  ", "# 打印引导界面", "\n        choice = ", "int", "(", "input", "())  ", "# 输入序号选择", "\n\n        ", "try", ":\n            ", "if", " ", "type", "(choice) != ", "int", ":\n                ", "raise", " main()\n        ", "except", " Exception ", "as", " e:\n            ", "print", "(", "\"输入数字类型错误,请重新输入功能对应的数字\"", ")\n        ", "# 输入错误序号则重启程序，异常处理", "\n        ", "if", " choice ", "not", " ", "in", " [", "1", ", ", "2", ", ", "3", ", ", "4", ", ", "0", "]:  ", "# 不在这4个序号里", "\n            ", "print", "(", "'错误选择'", ")  ", "# 打印错误选择", "\n            main()  ", "# 重新开始", "\n            ", "break", "\n        ", "# 输入正确序号执行相应程序", "\n        ", "elif", " choice == ", "1", ":  ", "# 选择序号为1", "\n            add()  ", "# 添加联系人函数启动", "\n        ", "elif", " choice == ", "2", ":  ", "# 选择序号为2", "\n            delete()  ", "# 删除联系人函数启动", "\n        ", "elif", " choice() ==", "3", ":  ", "# 选择序号为3", "\n            amend()   ", "# 修改联系人函数启动", "\n        ", "elif", " choice == ", "4", ":  ", "# 选择序号为4", "\n            search()  ", "# 查询联系人函数启动", "\n        ", "elif", " choice == ", "0", ":  ", "# 如果选择序号为0", "\n            ", "break", "  ", "# 结束执行", "\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    main()\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can write your own error handler with &lt;a href=\"http://php.net/manual/en/function.set-error-handler.php\" rel=\"nofollow\"&gt;&lt;code&gt;set_error_handler()&lt;/code&gt;&lt;/a&gt; and ignore and/or handle errors according to their level.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["包含其他第三方库时如何进行错误处理", ["\n\n", "I've added a 3rd party open source library to my php app. (phpseclib)\nI've wrapped all my calls to their methods with try / catch blocks and I'm handling all errors so that I handle errors gracefully. ", "\n\n", "However, because the 3rd party library doesn't have baked in error handling, when it dies, I get a php error from it + another codeigniter message that I'm throwing when I, let's say, try to connect to a device and it fails. ", "\n\n", "Aside from changing the library to include some error handling, I just want to make sure that there's nothing I can do to prevent these \"unhandled\" messages from appearing to the end user...", "\n\n", "Thank you", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In the general case you should be dealing with database errors using the error code and not any regex. &lt;/p&gt;\n\n&lt;p&gt;In your particular case pre-querying or using a Laravel method that does that automatically for you, might be preferable if your intention is to overwrite/update existing data. &lt;/p&gt;\n\n&lt;p&gt;If you want to generally anticipate an error and handle it you should do something like:&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;try {\n   $foo = new Foo(['foo' =&amp;gt; 42, 'bar' =&amp;gt; 1]);\n   $foo-&amp;gt;save();\n} catch (\\Exception $e) { // It's actually a QueryException but this works too\n   if ($e-&amp;gt;getCode() == 23000) {\n       // Deal with duplicate key error  \n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Refer to &lt;a href=\"https://dev.mysql.com/doc/refman/5.5/en/error-reference.html\" rel=\"nofollow noreferrer\"&gt;https://dev.mysql.com/doc/refman/5.5/en/error-reference.html&lt;/a&gt; for an exhaustive list of error codes (but ideally you'd only need to deal with a couple of specific errors and under very specific circumstances. &lt;/p&gt;\n\n&lt;p&gt;Lastly the SQL &lt;code&gt;ON DUPLICATE KEY UPDATE&lt;/code&gt; might also work for you, however if you are doing this to silently ignore the new values then I suggest you do the error handling instead. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel Eloquent，如何处理UNIQUE错误？", ["\n\n", "I have a MySQL constraint to ensure unique on a composite key. When inserting a new  record in my model ", "Foo", " I get the expected error: ", "\n\n", "$foo = new Foo(['foo' => 42, 'bar => 1]);\n$foo->save();\n", "\n\n", "Error:", "\n\n", "\n  ", "SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry '42' for key 'Unique'...", "\n", "\n\n", "One solution to avoid this error is to query the model before inserting:", "\n\n", "if (!Foo::where('foo', 42)->where('bar', 1)->first()) {\n  $foo = new Foo(['foo' => 42, 'bar => 1]);\n  $foo->save();\n}\n", "\n\n", "Another one would be to catch the exception when ", "preg_match(/UNIQUE/, $e->message)", " is ", "true", ". ", "\n\n", "Is there any better solution?", "\n\n", "EDIT", "\n\n", "I noticed that in ", "Illuminate\\Database\\Eloquent\\Builder", " Laravel does the double query anyway which is a bit sad: ", "\n\n", "public function findOrNew($id, $columns = ['*'])\n{\n    if (! is_null($model = $this->find($id, $columns))) {\n        return $model;\n    }\n\n    return $this->newModelInstance();\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Building a blank object is a nice thing. The right design pattern for that is called SpecialObjects. To be complete your code should return a MenuNotFound object which have the same interface as MenuObject.\nThen the way this MenuNotFound objects reacts to the interface entry points is up to you.\nThis avoid checks on the type of object returned and permits chaining.&lt;/p&gt;\n\n&lt;p&gt;For the Exception I personnaly prefer Exception which are only real problems. But in your case if you want to get a mail the exception is not a bad idea, maybe this exception or mail handling could be done in the MenuNotFound init.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["处理菜单未找到异常的最佳方法是什么？", ["\n\n", "I'm currently refactoring the menu class in our PHP CMS, and am currently trying to work out the best way to handle the issue where someone tries to create a menu (by passing in the title of the menu (we have main, footer, utility etc menus), but the menu isn't in the database.", "\n\n", "If they try to create a menu object with a menu that can be found then there's no problem, I can return the object as requested.  If they try to create one that isn't found though, I'm currently throwing an exception (which causes an email to be sent), then creating a blank menu object and returning that.  The call to output the menu then works without error, but outputs nothing.", "\n\n", "(I've done the above by setting it up so a static method of the menu class is called to create a menu object, which can then handle throwing an exception if necessary and return either the requested menu object, or a blank one).", "\n\n", "Hopefully all that makes sense! Is this the best method to take?  Or is there a more elegant solution?", "\n\n", "Chris", "\n\n", "Edit: ", "\n\n", "Here's the static function which is called to create a menu:", "\n\n", "static function makeMenu($id,$breakDepth=1){\n    // try to create Menu\n    try {\n        $menu = new Menu($id, $breakDepth);\n    }\n    catch (no_menu_found_exception $e) {\n        // if we failed to find it, an email should have been sent, and create a blank menu so rest of site works without error\n        $menu = new Menu(\"\");\n    }\n\n    return $menu;\n}\n", "\n\n", "and here's the constructor:", "\n\n", "function __construct($id,$breakDepth=1){\n    $this->treeObject = Doctrine_Core::getTable('CmsMenuItemNew')->getTree();\n    if ($id == \"\") {\n        // if ID supplied is empty, return an empty menu object \n        $this->rootNode = null;\n        $this->name = $id;\n        return;\n    } \n    if (is_numeric($id)) {\n        // check it exists?\n        $this->rootNode = $id;\n        $node = Doctrine_Core::getTable('CmsMenuItemNew')->findByDQL(\"menuid = '\".$id.\"'\")->getFirst();\n        $this->name = $node->menutitle;\n        if ($this->name == \"\") $this->rootNode = null;\n        return;\n    } else {\n        $this->name = $id;\n        // find the menu ID for the supplied name  \n        $table = Doctrine_Core::getTable('CmsMenuItemNew');\n        $table->setOption(\"orderBy\", \"level\");\n        $this->rootNode = $table->findByDQL(\"menutitle = '$id'\")->getFirst()->menuid;\n\n        // rootNode with supplied name not found, so look for a branch in the main menu\n        $this->breakDepth = $breakDepth;    \n        if ($this->rootNode === null) {\n            throw new no_menu_found_exception(\"Menu not found: \".$id);\n        }\n    }           \n\n}\n", "\n\n", "as mentioned - its still in development, so not completely finished yet.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;别光显示个error&amp;#xff0c;except里不要空着&amp;#xff0c;写上错误类型&amp;#xff0c;然后把错误类型给result&amp;#xff0c;这样才好调试啊&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["python在本地运行和腾讯云函数运行结果不一样", ["一个自动健康打卡的程序，我在PyCharm运行得到的结果是正确的，但部署在云函数后测试，结果是错误的，这个是什么情况", "\n", "\n", "# -*- coding: utf-8 -*-", "\n", "import", " time\n", "import", " smtplib\n", "from", " email.mime.text ", "import", " MIMEText\n", "from", " email.utils ", "import", " formataddr\n", "from", " selenium ", "import", " webdriver\n", "from", " selenium.webdriver.common.by ", "import", " By\n\n\n", "def", " ", "main", "():\n    ", "try", ":\n        option = webdriver.ChromeOptions()\n        ", "# option.add_argument('--headless')  # 设置无头启动", "\n        browser = webdriver.Chrome(options=option)  ", "# 调用无头的谷歌浏览器", "\n        browser.implicitly_wait(", "5", ")  ", "# 隐式等待", "\n        browser.get(", "\"https://yqfk-daka.dgut.edu.cn/\"", ")\n        ", "# 接受浏览器弹窗", "\n        ", "try", ":\n            browser.switch_to.alert().accept()\n        ", "except", ":\n            ", "pass", "\n        ", "# 登录", "\n        browser.find_element(By.NAME, ", "\"username\"", ").send_keys(", "\"***\"", ")  ", "# 学号", "\n        browser.find_element(By.ID, ", "\"casPassword\"", ").send_keys(", "\"***\\n\"", ")  ", "# 密码", "\n        time.sleep(", "2", ")\n        ", "try", ":\n            browser.execute_script(", "'document.querySelector(\"button\").click();'", ")\n        ", "except", ":\n            ", "pass", "\n        result = ", "\"success\"", "\n        browser.quit()\n    ", "except", ":\n        result = ", "\"error\"", "  ", "# 异常处理", "\n\n    ", "print", "(result)\n\n    msg = MIMEText(result, ", "'html'", ", ", "'utf-8'", ")  ", "# 正文", "\n    msg[", "'From'", "] = formataddr([", "\"自动打卡\"", ", ", "\"***\"", "])  ", "# 发信人", "\n    msg[", "'Subject'", "] = ", "\"自动打卡\"", "  ", "# 标题", "\n    server = smtplib.SMTP_SSL(", "\"smtp.qq.com\"", ")  ", "# 邮箱服务器", "\n    server.login(", "\"***\"", ", ", "\"***\"", ")  ", "# 发件人 密钥", "\n    server.sendmail(", "\"***\"", ", ", "\"***\"", ", msg.as_string())  ", "# 发件人 收件人", "\n    server.quit()\n\n\n", "def", " ", "main_handler", "(", "event, context", "):\n    ", "return", " main()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    main()\n\n", "\n", "本地运行结果", "返回success", "\n", "腾讯云函数测试结果", "返回null，邮件内容是error"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;So the issue was default namespacing. You need to put a backslash before &lt;code&gt;Exception&lt;/code&gt; like so &lt;code&gt;\\Exception&lt;/code&gt; when using namespaces or at least put a use statement (&lt;code&gt;use Exception;&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;Because I did not do either of these it was looking for an Exception class within my current namespace and therefore wasn't catching anything.  &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["Laravel 5.2  - 处理命令中调用的命令的异常", ["\n\n", "So I have a command(1) that is calling another command(1) (command 1 and 2 from here on in). However, if command 2 throws an exception it can't be caught by command 1 for some reason. ", "\n\n", "Does anyone know how to deal with exceptions on \"command-ception\"?", "\n\n", "Here is my code:", "\n\n", "public function handle()\n{\n    $this->client = $this->argument('client');\n\n    try {\n        // Create database\n        $this->createClientDatabase();\n\n        $this->call('migrate', [\n            '--database' => $this->client,\n            '--path' => 'database/migrations/aca',\n        ]);\n\n        // Import the information into the tables\n\n    } catch (Exception $e) {\n        $this->dropClientDatabase();\n    }\n}\n", "\n\n", "To clarify, I create a database and connection on the fly but if something fails on the migration call I end up with an empty database and no way to catch the error. If something happens within ", "$this->call()", " it simply dies and doesn't continue processing command 1.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;property name=\"transactionAttributes\"&gt; \r\n      &lt;props&gt; \r\n        &lt;prop key=\"de*\"&gt;PROPAGATION_REQUIRED &lt;/prop&gt; \r\n      &lt;/props&gt; \r\n    &lt;/property&gt; \r\n你这里写错啦，你只做了以de开头的失误处理\r\n一般我是这样写的\r\n&lt;prop key=\"get*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"find*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"load*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"query*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"search*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"save*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"add*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"create*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"insert*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"do*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"update*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"change*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"remove*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"delete*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"del*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"dispense*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"send*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"init*\"&gt;PROPAGATION_REQUIRED&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"*\"&gt;PROPAGATION_REQUIRED,readOnly&lt;/prop&gt;\r\n只读失误的设置为PROPAGATION_REQUIRED,readOnly，其他的设置为PROPAGATION_REQUIRED", "Konwledge_Point": "异常处理", "Question": ["我的spring事务为什么不起作用？？？", ["接口： ", "\npublic interface StuDao { ", "\n\n", "public void insert(); ", "\npublic void delete(); ", "\n} ", "\npublic interface StuSer { ", "\n\n", "public void update(); ", "\n} ", "\n实现： ", "\nimport org.springframework.jdbc.core.JdbcTemplate; ", "\nimport org.springframework.jdbc.core.support.JdbcDaoSupport; ", "\nimport com.test.spring.interf.StuDao; ", "\npublic class DaoImpl extends JdbcDaoSupport  implements StuDao { ", "\npublic void delete() { ", "\n          JdbcTemplate jt= this.getJdbcTemplate(); ", "\nString sql1 = \"delete from student1 where id=1\"; ", "\njt.update(sql1); ", "\n} ", "\npublic void insert() { ", "\n          JdbcTemplate jt= this.getJdbcTemplate(); ", "\nString sql = \"insert into student2 values (1,'jack','dd')\";//这句话会出错 ", "\njt.update(sql); ", "\n} ", "\n} ", "\npublic class StuSerImpl { ", "\nprivate DaoImpl dao; ", "\npublic void update() { ", "\n            try{ ", "\n                this.dao.delete(); ", "\n                this.dao.insert(); ", "\n            }catch(Exception e){ ", "\n              System.out.println(\"stuSerImpl-----\"+e); ", "\n            } ", "\n} ", "\npublic DaoImpl getDao() { ", "\nreturn dao; ", "\n} ", "\npublic void setDao(DaoImpl dao) { ", "\nthis.dao = dao; ", "\n} ", "\n} ", "\naction： ", "\npublic void setStuSerImpl(StuSerImpl stuSerImpl) { ", "\n    this.stuSerImpl = stuSerImpl; ", "\n  } ", "\n  public StuSerImpl getStuSerImpl() { ", "\n    return this.stuSerImpl; ", "\n  } ", "\n  private StuSerImpl stuSerImpl; ", "\n  public ActionForward execute(ActionMapping mapping, ActionForm form, ", "\n                              HttpServletRequest request, ", "\n                              HttpServletResponse response) { ", "\n    DForm dForm = (DForm) form; // TODO Auto-generated method stub ", "\n    try{ ", "\n      stuSerImpl.update(); ", "\n    }catch(Exception e){ ", "\n      System.out.println(\"-------------\"+e); ", "\n    } ", "\n    return null; ", "\n  } ", "\n} ", "\nstruts-config.xml: ", "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> ", "\n<!DOCTYPE struts-config PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN\" \"", "http://struts.apache.org/dtds/struts-config_1_1.dtd\">", " ", "\n      attribute=\"dForm\" ", "\n      name=\"dForm\" ", "\n      path=\"/d\" ", "\n      scope=\"request\"    type=\"org.springframework.web.struts.DelegatingActionProxy\" /> ", "\napplicationContext.xml: ", "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> ", "\n<!DOCTYPE beans PUBLIC \"-//SPRING//DTD BEAN//EN\" \"", "http://www.springframework.org/dtd/spring-beans.dtd\">", " ", "\n  <!-- ", "** ", "--> ", "oracle.jdbc.driver.OracleDriver ", "jdbc:oracle:thin:@****:** ", "** ", "** ", "PROPAGATION_REQUIRED ", "\n\n", "[b]问题补充：[/b]", "\n上面的写错了，是这样：", "PROPAGATION_REQUIRED,-BadSqlGrammarException", "\n[b]问题补充：[/b]", "\n不做异常处理也不行啊。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看下这个&amp;#xff0c;再理一下思路吧&amp;#xff0c;你大概的也写出来了。&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq_59329164/article/details/123122510\" id=\"textarea_1654347385851_1654347504788_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;java实现ATM取款机系统&amp;#xff08;无GUI&amp;#xff09;_有晚风叙旧的博客-CSDN博客_atm机系统java&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;通过Java基础语法实现ATM存款取款等简易操作&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_59329164/article/details/123122510&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["学java练习小项目写了一半不会", ["设计一个银行ATM取款机系统。", "\n", "要求：", "1、需要有账户类Account，里面包含账户姓名、账号、密码、余额、账户类型  管理员和普通用户  两种等信息，不同的账户包括管理员Manager类、普通用户User类 继承自此账户类。", "2、账户的信息需要从文件中读取例如：读取记事本，读取的存取到集合类中ArrayList、LinkedList、HashMap、HashTable。", "3、普通用户需要输入账号、密码及账户类型，在确认正确后显示除了密码的所有信息；否则提示用户密码或者账号输入错误，然后回到登录登录要求有：账号输入、密码、以及账户类型的选择。", "4、普通用户登录成功后。用户可以取钱、转账、退出。", "        4.1 取钱。需要输入金额，如果金额大于余额需要提示 提示：如果输入的不是数字，需要进行异常处理；如果输入的不是正数，需要提示。要考虑到非正常的情况 ；", "        4.2 转账。如果金额小于等于余额，直接转账，在转账后，需要输入对方的账号对方账号要存在，才能成功，否则会有相应提示；否则提示余额不足。要考虑到非正常的情况。", "        4.3 退出。直接退出到登录页面。", "5、管理员账号登录。", "        5.1 可以查看所有的普通用户  以列表的形式存在 ，并且对所有的普通用户都可以修改根据列表的信息前的对应的1、2、3等序号进行修改，不能修改账号，只能修改密码，仅限于密码重置为默认密码 例如默认密码000000 ", "\n", "\n", "package", " _7_text;\n", "import", " java.util.ArrayList;\n", "public", " ", "class", " ", "Account", " {\n    ", "private", " ", "String", " ", "name", " ", "=", " ", "\"\"", ";\n    ", "private", " ", "int", " ", "role", " ", "=", " ", "0", ";\n    ", "private", " ", "String", " ", "password", " ", "=", " ", "\"\"", ";\n    ", "public", " ", "static", " ArrayList<Account> normalUsersList = ", "new", " ", "ArrayList", "<Account>();\n    ", "public", " String ", "getName", "()", " {\n        ", "return", " name;\n    }\n\n    ", "public", " ", "void", " ", "setName", "(String name)", " {\n        ", "this", ".name = name;\n    }\n\n    ", "public", " ", "int", " ", "getRole", "()", " {\n        ", "return", " role;\n    }\n\n    ", "public", " ", "void", " ", "setRole", "(", "int", " role)", " {\n        ", "this", ".role = role;\n    }\n\n    ", "public", " String ", "getPassword", "()", " {\n        ", "return", " password;\n    }\n\n    ", "public", " ", "void", " ", "setPassword", "(String password)", " {\n        ", "this", ".password = password;\n    }\n\n    ", "public", " ", "Account", "(String name, ", "int", " role, String password)", " {\n        ", "super", "();\n        ", "this", ".name = name;\n        ", "this", ".role = role;\n        ", "this", ".password = password;\n    }\n\n    ", "public", " ", "Account", "()", " {\n        ", "super", "();\n    }\n}\n\n\n", "package", " _7_text;\n\n", "public", " ", "class", " ", "Manager", " ", "extends", " ", "Account", " {\n    ", "//数据文件中,管理员信息和普通用户都存在一个文件中,", "\n    ", "//只是管理员没有金额,金额部分是一个空字符串", "\n    ", "private", " ", "String", " ", "manageAccount", " ", "=", " ", "\"\"", ";", "//管理员账号", "\n    ", "public", " ", "static", " ", "final", " ", "String", " ", "defaultedPassword", " ", "=", " ", "\"000000\"", ";", "//管理员给普通用户重置密码:", "\n\n    ", "public", " String ", "getManageAccount", "()", " {\n        ", "return", " manageAccount;\n    }\n\n    ", "public", " ", "void", " ", "setManageAccount", "(String manageAccount)", " {\n        ", "this", ".manageAccount = manageAccount;\n    }\n}\n\n\n", "package", " _7_text;\n\n", "public", " ", "class", " ", "NormalUser", " ", "extends", " ", "Account", " {\n    ", "private", " ", "int", " ", "money", " ", "=", " ", "0", ";", "//金额", "\n\n    ", "//普通用户卡号,用户转账,唯一", "\n    ", "public", " ", "String", " ", "id_card", " ", "=", " ", "\"\"", ";\n\n    ", "public", " ", "int", " ", "getMoney", "()", " {\n        ", "return", " money;\n    }\n\n    ", "public", " ", "void", " ", "setMoney", "(", "int", " money)", " {\n        ", "this", ".money = money;\n    }\n\n    ", "public", " String ", "getId_card", "()", " {\n        ", "return", " id_card;\n    }\n\n    ", "public", " ", "void", " ", "setId_card", "(String id_card)", " {\n        ", "this", ".id_card = id_card;\n    }\n}\n\n\n", "package", " _7_text;\n\n", "import", " java.io.BufferedReader;\n", "import", " java.io.BufferedWriter;\n", "import", " java.io.File;\n", "import", " java.io.FileInputStream;\n", "import", " java.io.FileOutputStream;\n", "import", " java.io.InputStreamReader;\n", "import", " java.io.OutputStreamWriter;\n", "import", " java.util.Scanner;\n\n", "public", " ", "class", " ", "ATMTest", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "try", " {\n            ", "//1.文件读取,且把文件中的数据转成对象,在集合中保存", "\n            ", "//读文档", "\n            ", "File", " ", "file", " ", "=", " ", "new", " ", "File", "(", "\"src\\\\account.txt\"", ");\n            ", "BufferedReader", " ", "bufferedReader", " ", "=", " ", "new", " ", "BufferedReader", "(", "new", " ", "InputStreamReader", "(", "new", " ", "FileInputStream", "(file)));\n            ", "String", " ", "strAccount", " ", "=", " bufferedReader.readLine();", "//读取文件中的一行(按照每行读取数据)", "\n            ", "//管理员在文件的第一行(管理员放在链表的第一个)", "\n            ", "Manager", " ", "manager", " ", "=", " ", "new", " ", "Manager", "();\n            String[] temp = strAccount.split(", "\",\"", ");", "//把上面读的一条记录分割成字符串数组", "\n            manager.setManageAccount(temp[", "1", "]);\n            manager.setName(temp[", "0", "]);\n            manager.setPassword(temp[", "2", "]);\n            manager.setRole(Integer.parseInt(temp[", "4", "]));\n            Account.normalUsersList.add(manager);", "//把第一个用户(管理员)放在集合链表中", "\n            ", "//继续读文件,普通用户在其他行", "\n            strAccount = bufferedReader.readLine();\n            ", "while", " (strAccount != ", "null", ") {\n                temp = strAccount.split(", "\",\"", ");\n                ", "NormalUser", " ", "normalUser", " ", "=", " ", "new", " ", "NormalUser", "();\n                normalUser.setName(temp[", "0", "]);\n                normalUser.setId_card(temp[", "1", "]);\n                normalUser.setMoney(Integer.parseInt(temp[", "2", "]));\n                normalUser.setPassword(temp[", "3", "]);\n                normalUser.setRole(", "0", ");\n                Account.normalUsersList.add(normalUser);\n                strAccount = bufferedReader.readLine();\n            }\n\n            ", "while", " (", "true", ") {\n                System.out.println(", "\"======用户登录======\"", ");\n                System.out.println(", "\"======1.输入用户账号======\"", ");\n                ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n                ", "String", " ", "strAccountTemp", " ", "=", " scanner.next();\n                System.out.println(", "\"======2.输入用户密码======\"", ");\n                ", "String", " ", "strPasswordTemp", " ", "=", " scanner.next();\n                System.out.println(", "\"======3.输入用户角色(只能允许输入0或者1,0:管理员;1:普通用户)======\"", ");\n\n                ", "while", " (", "true", ") {\n                    ", "try", " {\n                        ", "int", " ", "role", " ", "=", " Integer.parseInt(scanner.next());\n                        ", "if", " (role == ", "1", " || role == ", "0", ") {\n                            ", "break", ";\n                        } ", "else", " {\n                            System.out.printf(", "\"请再次输入角色,确定输入的是数字,且是0或1\"", ");\n                        }\n                    } ", "catch", " (Exception e) {\n                        System.out.println(", "\"请再次输入角色,确定输入的是数字,且是0或1\"", ");\n                    }\n                }\n\n                ", "boolean", " ", "boolResult", " ", "=", " ", "false", ";\n                ", "for", " (Account account : Account.normalUsersList) {", "//遍历Account.normalUsersList的集合,取出每一个元素", "\n\n                    ", "//boolResult = true;", "\n                }\n\n                ", "if", " (boolResult) {\n\n                    ", "while", " (", "true", ") {\n                        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < Account.normalUsersList.size(); i++) {\n                            ", "NormalUser", " ", "normalUserTmp", " ", "=", " (NormalUser) Account.normalUsersList.get(i);\n                            ", "if", " (", "\"zhangsan3\"", ".equals(normalUserTmp.getName())) {\n                                normalUserTmp.setMoney(normalUserTmp.getMoney() - ", "1000", ");\n                            }\n                        }\n                    }\n                } ", "else", " {\n                    System.out.println(", "\"登录不成功\"", ");\n                    System.out.println(", "\"按1继续登录,按2退出登录,结束程序\"", ");\n                    ", "int", " ", "iChoice", " ", "=", " scanner.nextInt();\n                    ", "if", " (iChoice == ", "2", ") {\n                        ", "BufferedWriter", " ", "bufferedWriter", " ", "=", " ", "new", " ", "BufferedWriter", "(", "new", " ", "OutputStreamWriter", "(\n                                ", "new", " ", "FileOutputStream", "(file, ", "false", ")));\n\n                        ", "String", " ", "str", " ", "=", " ", "\"\"", ";\n                        ", "Manager", " ", "managerTmp", " ", "=", " (Manager) Account.normalUsersList.get(", "0", ");\n\n                        str = managerTmp.getName() + ", "\",\"", " + managerTmp.getManageAccount() +\n                                ", "\",,\"", " + managerTmp.getPassword() + ", "\",\"", " + managerTmp.getRole();\n                        bufferedWriter.write(str);\n                        bufferedWriter.newLine();\n                        ", "for", " (", "int", " ", "i", " ", "=", " ", "1", "; i < Account.normalUsersList.size(); i++) {\n                            ", "NormalUser", " ", "normalUserTmp", " ", "=", " (NormalUser) Account.normalUsersList.get(i);\n                            str = normalUserTmp.getName() + ", "\",\"", " + normalUserTmp.getId_card() +\n                                    ", "\",\"", " + normalUserTmp.getMoney() + ", "\",\"", " + normalUserTmp.getPassword() +\n                                    ", "\",\"", " + normalUserTmp.getRole();\n                            bufferedWriter.write(str);\n                            bufferedWriter.newLine();\n                        }\n                        bufferedWriter.flush();\n                        bufferedWriter.close();\n                        System.out.println(", "\"程序结束\"", ");\n                        ", "break", ";\n                    }\n                }\n            }\n        } ", "catch", " (Exception e) {\n            e.printStackTrace();\n        } ", "finally", " {\n        }\n    }\n}\n\n", "\n", "\n", "\n", "已有模板按要求补全代码ATMTest", "\n", "已有模板按要求补全代码ATMTest", "\n", "已有模板按要求补全代码ATMTest"]], "Tag": "程序设计"}
{"Answer": "[color=indigo]http://www.ibm.com/developerworks/cn/data/library/techarticles/0310bhogal/0310bhogal.html\r\nhttp://lavasoft.blog.51cto.com/62575/64683/\r\n希望对你有帮助[/color]", "Konwledge_Point": "异常处理", "Question": ["db2 处理大字段 方法 java", ["大家好，我以前处理oracle数据库大字段时没啥问题，比如", "\n插入一条记录 将大字段 对应使用 empty_clob() 函数代替，然后 select for update这条记录", "\n然后在改写大字段内容，最后commit提交", "\n但是 我现在使用 db2数据库 报 classcast 异常，啥原因？ shi因为 数据库jdbc jar不正确 还是？", "\n我的部分代码：", "\n\n", "if(rs.next()){", "\n                         COM.ibm.db2.app.Clob msgClob = (COM.ibm.db2.app.Clob)rs.getClob(Alert_logPoHelper.OP_MSG.getName());", "\n                         COM.ibm.db2.app.Clob descClob = (COM.ibm.db2.app.Clob)rs.getClob(Alert_logPoHelper.OP_DESC.getName());", "\n                           try {", "\n                            Writer writer = msgClob.getWriter();", "\n                            writer.write(msgInfo.toCharArray());", "\n                            writer.flush();    //强制写入", "\n                            writer.close();    //关闭", "\n                            writer = descClob.getWriter();", "\n                            writer.write(desInfo.toCharArray());", "\n                        } catch (Exception e) {", "\n                            e.printStackTrace();", "\n                        } ", "\n                    }", "\n\n", "java.lang.ClassCastException: com.ibm.db2.jcc.b.vd", "\n    at com.mjp.system.SystemLogUtil$1.callBack(SystemLogUtil.java:77)", "\n    at com.mjp.core.db.MyQueryRunner.rsQuery(MyQueryRunner.java:160)", "\n    at com.mjp.system.SystemLogUtil.dbLog(SystemLogUtil.java:93)", "\n    at com.mjp.system.SystemLogUtil.main(SystemLogUtil.java:131)", "\n不能将 java.sql.Clob 转换成 COM.ibm.db2.app.Clob ？", "\n大家 在db2上是如何操作 Clob的？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这里爬的慢&amp;#xff0c;应该是没有使用多线程的缘故&amp;#xff08;你导入了多进程的库&amp;#xff0c;但你这代码似乎也没有使用&amp;#xff09;。geturl是耗时操作&amp;#xff0c;单线程情况下&amp;#xff0c;这个操作不结束&amp;#xff0c;后面代码就得等它结束&amp;#xff0c;而且geturl在一轮抓取中好像还调用了不止一次。正确的思路是同时开几个子线程去getClassurl&amp;#xff0c;这几个线程抓取到的结果在各自的线程经过getaddClassurl处理后统一存放到一个队列(Queue)里&amp;#xff1b;之后再开多个子线程&amp;#xff0c;同时向这个队列索取结果并在各自线程继续抓取内容&amp;#xff08;也就是classhtml &amp;#61; geturl(u)这一步也要使用多线程&amp;#xff09;&amp;#xff0c;最后在各自的线程里执行write_to_file。当然&amp;#xff0c;爬虫爬多了&amp;#xff0c;你会发现大多数情况爬那么快没什么用&amp;#xff0c;因为大多数网站都有严厉的反爬措施&amp;#xff0c;你还得研究怎么处理被对方断线(也就是状态码不再是200&amp;#xff09;的场景。&lt;/p&gt;\n\n&lt;p&gt;至于你说改dict&amp;#xff0c;这不就是给字典添加一个键值对嘛&amp;#xff0c;有什么难的。。。dict_hd[&amp;#34;stu_name&amp;#34;]&amp;#61;&amp;#34;后端&amp;#34;不就行了&amp;#xff0c;可能是我理解错了你的意思&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["爬虫速度很慢。怎么改进一下，并且不需要手动改dict", ["\n", "# author:Administrator\n# date:2021/04/30\n\nimport requests #第三方下载器\nimport re #正则表达式\nimport json #格式化数据用\nfrom requests.exceptions import RequestException #做异常处理\nfrom multiprocessing import Pool #使用多进程\n\n\n\ndef geturl(url):\n    try:\n        response = requests.get(url)\n        if response.status_code == 200:\n            return response.content.decode(\"utf-8\")\n        return None\n    except RequestException:\n        return None\n\n#取慕课主页课程url 放入list\nclassUrl_list = []\ndef parse_one_classUrl(html):\n    pattern = re.compile('.*?<a target=\"_blank\" href=\"(.*?)\">',re.S)\n    items = re.findall(pattern,html)\n    classUrl_list.append(items)\n\n\n# 正则匹配数据\ndef parse_one_page(html):\n    pattern = re.compile('.*?<div class=\"title-box\">.*?<h1>(.*?)</h1>'\n                         '.*?<span>难度</span>.*?<span class=\"nodistance\">(.*?)</span>'\n                         '.*?<span>时长</span>.*?<span class=\"nodistance\">(.*?)</span>'\n                         '.*?<span>学习人数</span>.*?<span class=\"nodistance\">(.*?)</span>'\n                         '.*?<span>综合评分</span>.*?<span class=\"nodistance\">(.*?)</span>'\n                         ,re.S)\n    items = re.findall(pattern,html)\n    for item in items:\n        # 格式化每一条数据为字典类型的数据\n        yield {\n            'title': item[0],\n            'difficulty': item[1],\n            'duration': item[2],\n            'stu_number': item[3],\n            'comprehensive_evaluation': item[4]\n        }\n\n#获取课程urlList\ndef getClassurl(dict):\n    for class_type in dict:\n        for stuname in dict[class_type]:\n            url = geturl(dict[class_type][stuname])\n            #获取课程urlList\n            parse_one_classUrl(url)\n    return classUrl_list\n\n#url不全  拼接地址\nClassurladd = []\nhomeurl='https://coding.imooc.com'\ndef getaddClassurl(list):\n    for pagelist in list:\n        for classurl in pagelist:\n            Classurladd.append(homeurl + classurl)\n    return Classurladd\n\n#写入文本\ndef write_to_file(name,content):\n    with open('..\\\\text\\%s.txt' %name,'a',encoding='utf-8') as f:\n        f.write(json.dumps(content,ensure_ascii=False)+'\\n')\n        f.close()\n\n\ndict_qd = {'前端':{'vus.js':'https://coding.imooc.com/?c=vuejs','HTML/CSS':'https://coding.imooc.com/?c=html','JavaScript':'https://coding.imooc.com/?c=javascript','Node.js':'https://coding.imooc.com/?c=nodejs'}}\ndict_hd = {'后端':{'java':'https://coding.imooc.com/?c=java','SpringBoot':'https://coding.imooc.com/?c=springboot','SpringCloud':'https://coding.imooc.com/?c=springcloud'}}\ndict_ydkf = {'移动开发':{'android':'https://coding.imooc.com/?c=android','ios':'https://coding.imooc.com/?c=ios','Reactnative':'https://coding.imooc.com/?c=reactnative'}}\ndict_yun = {'云计算大数据':{'hadoop':'https://coding.imooc.com/?c=hadoop','大数据':'https://coding.imooc.com/?c=bigdata','Spark':'https://coding.imooc.com/?c=spark','Docker':'https://coding.imooc.com/?c=docker'}}\ndict_db = {'数据库':{'mysql':'https://coding.imooc.com/?c=mysql','redis':'https://coding.imooc.com/?c=redis','mongodb':'https://coding.imooc.com/?c=mongodb'}}\n\n\ndef main():\n    url_list = getClassurl(dict_hd)\n    Classurladd = getaddClassurl(url_list)\n    print(classUrl_list)\n    for u in Classurladd:\n        classhtml = geturl(u)\n        for item in parse_one_page(classhtml):\n            write_to_file(\"dict_hd\",item)\n\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n", "我自己写了一个爬慕课网的demo，但速度很慢，想看看大神帮我改进一下，目前我是手动去改dict值。", "\n\n", "现在爬到的数据格式是：", "\n\n", "\n{\"title\": \"Spring Cloud Alibaba 大型互联网领域多场景最佳实践\", \"difficulty\": \"中级\", \"duration\": \"15小时\"}", "\n\n", "想更改为：", "\n\n", "\n{\"stu_name\":\"后端\",\"title\": \"Spring Cloud Alibaba 大型互联网领域多场景最佳实践\", \"difficulty\": \"中级\", \"duration\": \"15小时\"}", "\n\n", "并且爬的速度太慢了", "\n\n", " ", "\n\n", "求求大神，路过帮孩子想想办法"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;你这句“大多是说运行时异常为程序员代码的问题&amp;#xff0c;应该检查其代码中的Bug&amp;#xff0c;而不应该try  catch它”是有问题的&amp;#xff01;&amp;#xff01;&amp;#xff01;不catch打印错误日志&amp;#xff0c;不好定位跟踪错误代码。如果是生产上有BUG&amp;#xff0c;那时间就是金钱。&lt;br /&gt;你可以&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;定义一个全局异常处理类&amp;#xff0c;使用注解&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;ExceptionHandler&amp;#xff0c;可以捕获到全局异常&amp;#xff0c;这种方式为辅助方式&amp;#xff0c;用来捕获review后的代码&amp;#xff0c;该类代码一般不会出现编译上的报错&amp;#xff0c;但是有可能出现程序上的报错。&lt;/a&gt;&lt;/li&gt;&lt;li&gt;而try catch 则是为了&amp;#xff0c;更好的处理异常&amp;#xff0c;定位跟踪异常问题(通过日志打印相关参数)&amp;#xff0c;写到代码中的。两者一起用&amp;#xff0c;舒适程度加倍&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "异常处理", "Question": ["对于Java运行时异常的一些问题", ["在网上查了相关问题，大多是说运行时异常为程序员代码的问题，应该检查其代码中的Bug，而不应该", "try", "  ", "catch", "它。\n\n如果此时有一种情况，数据库蹦掉，抛出运行时异常。此前是否应该处理此情况，提前", "try", "掉相关代码？\n\n                             此问题困扰许久，谢谢大家。\n"]], "Tag": "程序设计"}
{"Answer": "问题已解决; sqllite 存入blob字段时 以流的形式将多媒体文件读入流中，并在流中组装prmt,导致堆内存溢出，使线程无限等待。", "Konwledge_Point": "异常处理", "Question": ["ThreadPoolTaskExecutor  异步任务 对于长时间大数据的执行，执行一半线程终止。", ["生产环境上，对于较大的数据导出，使用了ThreadPoolTaskExecutor  的异步任务。", "\n       实际使用中发现，对于较大的数据导出如4G的sqlite的DB文件，异步任务执行到一半的时候不在执行，通过进度最终发现，进度到一定的时候就不在进行任务了，们目前试了2次，一次是1520/3344，一次是1778/3344 停止任务。", "\n        我不清楚是不是线程抛出异常了，因为我在现有的日志中没有发现相关异常记录，如果是 我应该怎么记录这个日志呢?", "\n        Spring配置", "\n        <!-- 核心线程数，默认为1 -->", "\n        <!-- 最大线程数，默认为Integer.MAX_VALUE -->", "\n        <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE-->", "\n        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->", "\n        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->", "\n            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->", "\n        //自动注入 ", "\n        @Autowired", "\n    ThreadPoolTaskExecutor threadPoolTaskExecutor;", "\n    //异步任务", "\n            ExportDbTaskThread zipPackageThread = new ExportDbTaskThread(resultPackageService,expFile,contextPath,", "\n                    tbType,filterParam,sortParam,xzqdm+xzqmc,progressId);", "\n            threadPoolTaskExecutor.execute(zipPackageThread);", "\n\n", "    问题已解决; sqllite 存入blob字段时 以流的形式将多媒体文件读入流中，并在流中组装prmt,导致堆内存溢出，使线程无限等待。\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;def boxLine(ser):\n    if ser.&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;()&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:#只有一条返回空数组&amp;#xff0c;要不下面的那句ser切片会返回空数组调用median返回nan\n        return []\n    ser &amp;#61; ser.&lt;span class=\"hljs-built_in\"&gt;sort_values&lt;/span&gt;()\n    if ser.&lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt;()%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        Q3 &amp;#61; ser[&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(ser)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;):].&lt;span class=\"hljs-built_in\"&gt;median&lt;/span&gt;()\n        Q1 &amp;#61; ser[:&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(ser)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)].&lt;span class=\"hljs-built_in\"&gt;median&lt;/span&gt;()\n    else:\n        Q3 &amp;#61; ser[&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(ser)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;):].&lt;span class=\"hljs-built_in\"&gt;median&lt;/span&gt;()\n        Q1 &amp;#61; ser[:&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(ser)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)].&lt;span class=\"hljs-built_in\"&gt;median&lt;/span&gt;()########只有一条返回空数组\n    IQR &amp;#61; &lt;span class=\"hljs-built_in\"&gt;round&lt;/span&gt;(Q3-Q1,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    rule &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;round&lt;/span&gt;(Q3&amp;#43;&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*IQR)&amp;lt;ser)|(&lt;span class=\"hljs-built_in\"&gt;round&lt;/span&gt;(Q1-&lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;*IQR)&amp;gt;ser)\n    li &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(ser[rule.values &amp;#61;&amp;#61; True].index)\n    return li\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["python数据处理出现问题", ["数据处理出错，并且爬取有异常值。需要修改异常值，和表格中的数据，但是代码光报错。"]], "Tag": "程序设计"}
{"Answer": "可能数据库没连接上（因为不同数据库版本的驱动不同） 来检查你的数据库是否链接上 在你得到的Connection conn=DriverManager.getConnection(参数);  后面加一段代码 if(conn==null) System.out.println(\"数据库没连接上\") else  System.out.println(\"数据库已连接上\") ;  运行tomcat 如果出错，看错误信息 看出现的信息 如果是数据库没连接上 那么，就换一个jdbc的jar包，重新试一试", "Konwledge_Point": "异常处理", "Question": ["用jsp写的表单用户登录页面，访问mysql数据库时候 出错 ，如下图", ["在处理登录的时候为什么有时候出现500错误，有时候又出现找不到数据库连接，我用得mysql数据库，驱动程序也添加了的，求大神指教一下啊！"]], "Tag": "程序设计"}
{"Answer": "控件没有注册，或者是控件是32bit的，你的程序是64bit的", "Konwledge_Point": "异常处理", "Question": ["c#调用surfer时出现80080005的异常", ["“System.Runtime.InteropServices.COMException”类型的异常在 mscorlib.dll 中发生，但未在用户代码中进行处理", "\n\n", "其他信息: 检索 COM 类工厂中 CLSID 为 {B2933480-9788-11D2-9780-00104B6D9C80} 的组件失败，原因是出现以下错误: 80080005 服务器运行失败 (异常来自 HRESULT:0x80080005 (CO_E_SERVER_EXEC_FAILURE))。", "\n\n", "急等，求解答"]], "Tag": "程序设计"}
{"Answer": "我想知道楼主为什么觉得没有事物配置就无法插入到数据库中呢~", "Konwledge_Point": "异常处理", "Question": ["hibernate 不用事务，也提交到了数据库，帮忙看看", ["\n", "配置 spring mvc + hibernate , 我在配置文件配置了注解的事务，但是controller 没写上@transaction 数据竟然插入到了数据库， 我都把事务的配置文件给干掉了也是提交到了数据库， 看了半天找不到， 帮忙看看，谢谢！ 用的是sql server 数据库", "\n", " ", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n    id=\"WebApp_ID\" version=\"3.0\">\n    \n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>WEB-INF/spring/spring.xml</param-value>\n    </context-param>\n    \n    <!-- 配置DispatcherServlet-->\n    <servlet>\n        <servlet-name>springMVC</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>WEB-INF/spring/springMVC.xml</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>    \n    \n    <servlet-mapping>\n        <servlet-name>springMVC</servlet-name>\n        <url-pattern>*.do</url-pattern>\n    </servlet-mapping>\n    \n    <!-- 监听器 -->\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n    </listener>\n    \n    <!-- 编码过滤器 -->\n    <filter>\n        <filter-name>encodingFilter</filter-name>\n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n        <init-param>\n            <param-name>encoding</param-name>\n            <param-value>UTF-8</param-value>\n        </init-param>\n    </filter>\n    <filter-mapping>\n        <filter-name>encodingFilter</filter-name>\n        <url-pattern>*.do</url-pattern>\n    </filter-mapping>\n    \n    <!-- security -->\n    <filter>\n        <filter-name>springSecurityFilterChain</filter-name>\n        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n    </filter>\n    <filter-mapping>\n        <filter-name>springSecurityFilterChain</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping> \n    <welcome-file-list>\n        <welcome-file>index.do</welcome-file>\n    </welcome-file-list>\n    \n</web-app>", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n    xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n    xmlns:dwr=\"http://www.directwebremoting.org/schema/spring-dwr\"\n    xmlns:jaxws=\"http://cxf.apache.org/jaxws\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n    http://www.springframework.org/schema/beans/spring-beans.xsd\n    http://www.springframework.org/schema/mvc\n    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd\n    http://www.springframework.org/schema/tx  \n    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd \n    http://www.springframework.org/schema/aop \n    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd \n    http://www.springframework.org/schema/context\n    http://www.springframework.org/schema/context/spring-context.xsd\">\n\n    <context:annotation-config />\n\n    <!-- 自动扫描的包名 -->\n    <context:component-scan base-package=\"com.belief.web.controller.**\"></context:component-scan>\n    \n    <bean id=\"springContextUtil\" class=\"com.belief.web.common.util.SpringContextUtil\" ></bean>\n\n     <bean id=\"messageSource\" class=\"org.springframework.context.support.ReloadableResourceBundleMessageSource\"> \n        <property name=\"basename\">\n            <value>/WEB-INF/message/message</value>\n        </property>\n        <property name=\"cacheSeconds\">\n            <value>-1</value>\n        </property>\n        <property name=\"defaultEncoding\">\n            <value>UTF-8</value>\n        </property>\n    </bean>\n    \n    <!-- 默认的注解 -->\n    <!-- <mvc:annotation-driven/> -->\n    <bean class=\"org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping\">\n        <!-- <property name=\"interceptors\">\n            <list>\n                <bean class=\"com.belief.web.common.MyIntercepter\"></bean>\n                国际化拦截器配置\n                <bean id=\"localResolver\" class=\"org.springframework.web.servlet.i18n.LocaleChangeInterceptor\"></bean>\n            </list>\n        </property> -->\n    </bean>\n    <!-- 手动注册注解 -->\n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">\n        <property name=\"messageConverters\">\n            <list>\n                <ref bean=\"byteArray_hmc\" />\n                <ref bean=\"string_hmc\" />\n                <ref bean=\"resource_hmc\" />\n                <ref bean=\"source_hmc\" />\n                <ref bean=\"xmlAware_hmc\" />\n                <ref bean=\"jaxb2Root-hmc\" />\n                <ref bean=\"jackson_hmc\" />\n            </list>\n        </property>\n    </bean>\n    <bean id=\"byteArray_hmc\" class=\"org.springframework.http.converter.ByteArrayHttpMessageConverter\"></bean>\n    <bean id=\"string_hmc\" class=\"org.springframework.http.converter.StringHttpMessageConverter\">\n        <property name =\"supportedMediaTypes\">  \n            <list><value>text/plain;charset=UTF-8</value></list>  \n        </property>  \n    </bean>\n    <bean id=\"resource_hmc\" class=\"org.springframework.http.converter.ResourceHttpMessageConverter\"></bean>\n    <bean id=\"source_hmc\" class=\"org.springframework.http.converter.xml.SourceHttpMessageConverter\"></bean>\n    <bean id=\"xmlAware_hmc\" class=\"org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter\"></bean>\n    <bean id=\"jaxb2Root-hmc\" class=\"org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter\"></bean>\n    <bean id=\"jackson_hmc\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\"></bean>\n    \n    <!-- 试图解析 -->\n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" p:prefix=\"/WEB-INF/pages/\" >\n        <!-- <property name=\"prefix\" value=\"/WEB-INF/pages/\"></property>\n        <property name=\"suffix\" value=\"\"></property> -->\n        <property name=\"viewClass\" value=\"org.springframework.web.servlet.view.JstlView\"></property>\n    </bean>\n    \n    <bean id=\"localeResolver\" class=\"org.springframework.web.servlet.i18n.CookieLocaleResolver\">\n        <property name=\"cookieName\" value=\"clientlanguage\"/>\n        <property name=\"cookieMaxAge\">\n            <value>2592000</value>\n        </property>\n    </bean>\n    \n    <!-- 拦截器 -->\n    <mvc:interceptors>\n        <bean class=\"com.belief.web.common.intercepter.MyIntercepter\"></bean>\n        <!-- 国际化拦截器配置 -->\n        <bean id=\"localResolver\" class=\"org.springframework.web.servlet.i18n.LocaleChangeInterceptor\"></bean>\n        <!-- 单独URL配置拦截器 -->\n        <!-- <mvc:interceptor>\n            <mvc:mapping path=\"/user/*\" />\n            <bean class=\"com.belief.web.common.MyIntercepter\"></bean>\n        </mvc:interceptor> -->\n    </mvc:interceptors>\n    \n    <!-- 静态资源文件的访问，方案一 -->\n    <mvc:default-servlet-handler/>\n    \n    <!-- 静态资源文件的访问，方案二  cache-period 可以使得静态资源进行web cache -->\n    <!-- <mvc:resources location=\"/images/\" mapping=\"/images/**\" cache-period=\"31556926\" />\n    <mvc:resources location=\"/js/\" mapping=\"/js/**\"/>\n    <mvc:resources location=\"/css/\" mapping=\"/css/**\"/> -->\n    \n    <!-- 全局异常处理 -->\n    <bean id=\"exceptionResolver\" class=\"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\">\n        <property name=\"defaultErrorView\">\n            <value>/error/exception.jsp</value>\n        </property>\n        <!-- 值：“org.springframework.web.servlet.handler.SimpleMappingExceptionResolver”，是“SimpleMappingExceptionResolver类的全限定名”。\n        这个值不是随便写的。  因为我在log4j的配置文件中还要加入\n        log4j.logger.org.springframework.web.servlet.handler.SimpleMappingExceptionResolver=WARN，\n        保证这个级别是warn的日志一定会被记录，即使log4j的根日志级别是ERROR。 -->\n        <property name=\"warnLogCategory\">    \n            <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  \n        </property>   \n        <property name=\"exceptionMappings\">\n            <props>\n                <prop key=\"java.lang.IllegalArgumentException\">/error/exception.jsp</prop>\n            </props>\n        </property>\n    </bean>\n    \n</beans>", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans default-autowire=\"byName\"\n    xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n    xmlns:aop=\"http://www.springframework.org/schema/aop\"\n    xsi:schemaLocation=\"  \n         http://www.springframework.org/schema/beans   \n         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  \n         http://www.springframework.org/schema/context   \n         http://www.springframework.org/schema/context/spring-context-3.0.xsd  \n         http://www.springframework.org/schema/tx   \n         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  \n         http://www.springframework.org/schema/aop  \n         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd\"> \n\n    <bean id=\"dataSource\" class=\"org.logicalcobwebs.proxool.ProxoolDataSource\" depends-on=\"propertyConfigurer\">\n        <property name=\"driver\" value=\"${jdbc.driverClassName}\"></property>\n        <property name=\"driverUrl\" value=\"${jdbc.url}\"></property>\n        <property name=\"user\" value=\"${jdbc.username}\"></property>\n        <property name=\"password\" value=\"${jdbc.password}\"></property>\n        <!-- 最大连接数(默认5个) -->\n        <property name=\"maximumConnectionCount\">\n            <value>60</value>\n        </property>\n        <!-- 最小连接数(默认2个) -->\n        <property name=\"minimumConnectionCount\">\n            <value>10</value>\n        </property>\n        <!-- 同时构建节流 -->\n        <property name=\"simultaneousBuildThrottle\">\n            <value>10000</value>\n        </property>\n        <!-- 最少保持的空闲连接数(默认2个) -->\n        <property name=\"prototypeCount\">\n            <value>5</value>\n        </property>\n        <!-- 使用前测试 -->\n        <property name=\"testBeforeUse\">\n            <value>true</value>\n        </property>\n        <!-- 测试使用的sql -->\n        <property name=\"houseKeepingTestSql\">\n            <value>select getDate()</value>\n        </property>\n        <!-- 最大活动时间(超过此时间线程将被kill,默认5分钟) -->\n        <property name=\"maximumActiveTime\">\n            <value>7200000</value>\n        </property>\n        <!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->\n        <!-- <property name=\"houseKeepingSleepTime\" value=\"${proxool.hourseKeepingSleepTime}\"/> -->\n    </bean>\n\n    <!-- 可以在XML配置文件中加入外部属性文件 -->\n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n        <property name=\"location\">\n            <value>WEB-INF/config.properties</value>\n        </property>\n    </bean>   \n\n    <bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate3.LocalSessionFactoryBean\" depends-on=\"propertyConfigurer\">\n        <property name=\"dataSource\">\n            <ref local=\"dataSource\" /> \n        </property>\n        <property name=\"mappingResources\">\n            <list>\n                <value>com/belief/web/biz/user/User.hbm.xml</value>\n            </list>\n        </property>\n        <property name=\"hibernateProperties\">\n            <props>\n                <!-- Oracle -->\n                <!-- <prop key=\"hibernate.dialect\">org.hibernate.dialect.OracleDialect</prop> -->\n                <!-- Sql Server -->\n                <prop key=\"hibernate.dialect\">org.hibernate.dialect.SQLServerDialect</prop>\n                <prop key=\"hibernate.cglib.use_reflection_optimizer\">true</prop>\n                <prop key=\"hibernate.show_sql\">${hibernate.show_sql}</prop>             \n                <prop key=\"hibernate.query.substitutions\">true 1, false 0</prop>\n                <!-- 开启二级缓存  -->\n                <!-- <prop key=\"hibernate.cache.use_second_level_cache\">true</prop> -->\n                <!-- 设置缓存类  -->\n                <!-- <prop key=\"hibernate.cache.provider_class\">org.hibernate.cache.EhCacheProvider</prop> -->\n                <!-- 否使用结构化的方式缓存对象 -->\n                <!-- <prop key=\"hibernate.cache.use_structured_entries\">true</prop> -->\n                <!-- 是否缓存查询结果 -->\n                <!-- <prop key=\"hibernate.cache.use_query_cache\">true</prop> -->\n            </props>\n        </property>\n    </bean>\n    \n    <bean name=\"openSessionInViewInterceptor\" class=\"org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor\">\n       <property name=\"sessionFactory\"><ref bean=\"sessionFactory\"/></property>\n    </bean>\n    \n    <!-- 配置事务 -->\n    <bean id=\"transactionManager\" class=\"org.springframework.orm.hibernate3.HibernateTransactionManager\">\n        <property name=\"sessionFactory\" >\n            <ref local=\"sessionFactory\"/>\n        </property>\n    </bean>\n    \n    <!-- 注解事务 -->\n    <tx:annotation-driven transaction-manager=\"transactionManager\" />\n    \n    \n    <bean id=\"dao\" class=\"com.belief.web.common.dao.Dao\">\n    </bean>\n    \n    <bean id=\"daoFactorySupport\" class=\"com.belief.web.common.dao.DaoFactorySupport\">\n    </bean>\n</beans>", "\n", "@RequestMapping(value = \"/add\",method = RequestMethod.POST)\n    public String add(HttpServletRequest request,HttpServletResponse response){\n        Dao dao = DaoFactory.getInstance().getDao();\n        User user = new User();\n        user.setName(\"hibernate\");\n        user.setState(PojoState.NORMAL);\n        user.setVersion(1);\n        dao.save(user);\n        return \"redirect:/index.do\";\n    }", "\n", "public class User extends BaseEntity\n{\n\n    private static final long serialVersionUID = 2274719953051444808L;\n\n    /** 员工姓名 */\n    private String name;\n    /** 用户组 */\n    private String userGroup;", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n    \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\n<hibernate-mapping>\n    <class name=\"com.belief.web.biz.user.User\" table=\"auth_user\">\n        <!-- <cache usage=\"read-write\" /> -->\n        <id name=\"id\" column=\"user_id\" unsaved-value=\"null\">\n            <generator class=\"identity\" />\n        </id>\n        <property name=\"version\" column=\"version\" />\n        <property name=\"createTime\" column=\"create_time\" />\n        <property name=\"updateTime\" column=\"update_time\" />\n        <property name=\"userGroup\" column=\"user_group\" />\n        <property name=\"penddingReadAnnonAmt\" column=\"pendding_read_annon_amt\" />\n        <many-to-one name=\"createUser\" column=\"create_user\" class=\"com.belief.web.biz.user.User\" />\n        <many-to-one name=\"updateUser\" column=\"update_user\" class=\"com.belief.web.biz.user.User\" />\n        <property name=\"state\" type=\"com.belief.web.common.entity.PojoStateType\" />\n        <property name=\"name\" />\n    </class>\n</hibernate-mapping>", "\n", "package com.belief.web.common.dao;\n\nimport java.util.List;\n\nimport org.springframework.orm.hibernate3.support.HibernateDaoSupport;\n\nimport com.belief.web.common.entity.BaseEntity;\n\n@SuppressWarnings(\"unchecked\")\npublic class Dao extends HibernateDaoSupport{\n\n    public <T extends BaseEntity>T get(Class<? extends BaseEntity> cls,String id){\n        return (T) this.getHibernateTemplate().get(cls, id);\n    }\n    \n    public List<BaseEntity> find(Class<? extends BaseEntity> cls){\n        return this.getHibernateTemplate().find(\"FROM \"+cls.getName());\n    }\n    \n    public void save(BaseEntity baseEntity){\n        getHibernateTemplate().save(baseEntity);\n    }\n    \n}\n", "\n", "package com.belief.web.common.dao;\n\n\npublic class DaoFactory {\n\n    private static final DaoFactory instance = new DaoFactory();\n\n    public static DaoFactory getInstance() {\n        return instance;\n    }\n    \n    Dao dao;\n\n    public Dao getDao() {\n        return dao;\n    }\n    \n}\n", "\n", "package com.belief.web.common.dao;\n\n\npublic class DaoFactorySupport {\n\n    public void setDao(Dao dao){\n        DaoFactory.getInstance().dao = dao;\n    }\n    \n    \n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;在使用 axios 发送请求时&amp;#xff0c;如果请求发生错误&amp;#xff0c;那么会触发响应拦截器中的 error 回调函数&amp;#xff0c;error 参数是一个包含错误信息的对象&amp;#xff0c;它的结构如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;{\n  message: string,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误信息\n  name: string,     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误名称\n  config: Object,   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 发生错误时的请求配置\n  code?: string,    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 错误代码\n  request?: any,    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; XMLHttpRequest 对象&amp;#xff0c;用于发起请求\n  response?: any,   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 响应数据&amp;#xff08;如果有的话&amp;#xff09;\n  isAxiosError: boolean, &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 是否是 axios 自定义错误\n  toJSON: Function  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 将错误对象转为 JSON 的方法\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在响应拦截器中&amp;#xff0c;我们可以通过检查 error.response 属性来判断请求是否成功&amp;#xff0c;如果 error.response 不为空&amp;#xff0c;则表示请求已经成功返回了一个 HTTP 响应&amp;#xff0c;但是响应状态码不在 2xx 范围内。否则&amp;#xff0c;如果 error.response 为空&amp;#xff0c;则表示请求没有成功发出&amp;#xff0c;比如请求超时、网络错误等。&lt;/p&gt;\n&lt;p&gt;在你的情况下&amp;#xff0c;由于控制台打印 error 时显示 Network Error&amp;#xff0c;这意味着请求并没有成功发出&amp;#xff0c;所以 error.response 属性为 undefined。在这种情况下&amp;#xff0c;你可以检查 error.message 属性来获取更详细的错误信息。例如&amp;#xff0c;在你的响应拦截器中&amp;#xff0c;你可以这样处理&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;error &lt;/span&gt;&amp;#61;&amp;gt; {\n  console.log(error.message)  // 打印错误信息\n  return Promise.reject(error)  // 返回 Promise.reject() 来抛出错误\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样做的目的是在发生请求错误时&amp;#xff0c;将错误信息暴露给开发者&amp;#xff0c;以便更好地进行调试和修复。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["axios响应拦截器error问题", ["打印error本身显示Network Error", "但是打印error.response确实undefined，这不是格式化error的一个步骤吗为什么是undefined，以及在网上看到一些处理如果没有error.response的话就对error.message做处理，我打印error.message确实显示Network Error了。", "有大佬知道这是为什么吗，初学不太懂。怎么error.response就是undefined呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是自定义异常练习&amp;#xff0c;编写类集继承exception类&amp;#xff0c;然后在测试类中throw这个自定义异常类&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Java，刚学的异常不太懂，谁会这道题", ["创建方法printDeptAndEmp（），两个参数，部门编号，员工编号，1-5 抛出部门异常，1-10 抛出员工异常，然后在主调函数中对可能的异常分别进行处理", "\nDepartmentException", "\nEmployeeException", "\n两个自定义异常"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In security.yaml put &lt;strong&gt;login&lt;/strong&gt; firewall at the first place&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;firewalls:\n    login:\n       #login context\n\n    #other firewalls\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "异常处理", "Question": ["使用Sf4进行Lexik JWT身份验证：未捕获异常：无法找到路径“/ login_check”的控制器", ["\n\n", "I followed the Sf4 sandbox to install JWT Auth, but still I have this response :", "\n\n", "2019-01-03T18:39:27+01:00 [info] Matched route \"login_check\".\n2019-01-03T18:39:27+01:00 [info] Populated the TokenStorage with an anonymous Token.\n2019-01-03T18:39:27+01:00 [warning] Unable to look for the controller as the \"_controller\" parameter is missing.\n2019-01-03T18:39:27+01:00 [critical] Uncaught Exception: Unable to find the controller for path \"/login_check\". The route is wrongly configured.\n[Thu Jan  3 18:39:27 2019] 127.0.0.1:48564 [404]: /login_check\n", "\n\n", "When I try this command : ", "\n\n", "\n  ", "curl -X POST -H \"Content-Type: application/json\" ", "http://localhost:8000/login_check", " -d '{\"email\":\"johndoe@test.fr\",\"password\":\"test\"}'", "\n", "\n\n", "Here is my routes.yaml : ", "\n\n", "index:\n    path: /\n    controller: App\\Controller\\DefaultController::index\n\nregister:\n    path: /register\n    controller: App\\Controller\\DefaultController::register\n    methods: POST\n\napi:\n    path: /api\n    controller: App\\Controller\\DefaultController::api\n\nlogin_check:\n    path:     /login_check\n    methods:  [POST]\n", "\n\n", "And here is my security.yaml : ", "\n\n", "security:\n    encoders:\n        App\\Entity\\User:\n            algorithm: bcrypt\n            cost: 12\n\n    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers\n    providers:\n        # used to reload user from session & other features (e.g. switch_user)\n        app_user_provider:\n            entity:\n                class: App\\Entity\\User\n                property: email\n    firewalls:\n        dev:\n            pattern: ^/(_(profiler|wdt)|css|images|js)/\n            security: false\n\n        main:\n            anonymous: true\n\n        login:\n            pattern:  ^/login\n            stateless: true\n            anonymous: true\n            json_login:\n                check_path:               /login_check\n                success_handler:          lexik_jwt_authentication.handler.authentication_success\n                failure_handler:          lexik_jwt_authentication.handler.authentication_failure\n                username_path: email\n                password_path: password\n        api:\n            pattern:   ^/\n            stateless: true\n            guard:\n                authenticators:\n                    - lexik_jwt_authentication.jwt_token_authenticator\n\n    # Easy way to control access for large sections of your site\n    # Note: Only the *first* access control that matches will be used\n    access_control:\n        # - { path: ^/admin, roles: ROLE_ADMIN }\n        # - { path: ^/profile, roles: ROLE_USER }\n", "\n\n", "I am using PHP7.2 and ", "Symfony 4.2", ".\nDoes someone know how to correct this error ?", "\n\n", "Thanks,", "\n\n", "Adrien", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nhttp:&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;localhost:&lt;span class=\"hljs-number\"&gt;9092&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;/user/&lt;/span&gt;out\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;url是这么写吧&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["RestTemplate报ResourceAccessException的问题，求解答", ["2021-12-27 00:53:46.436 ERROR 7760 --- [nio-9093-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"localhost://9092/user/out\": unknown protocol: localhost; nested exception is java.net.MalformedURLException: unknown protocol: localhost] with root cause", "\n", "@RestController", "\n", "@RequestMapping(", "\"/consumer\"", ")", "\n", "public", " ", "class", " ", "ConsumerController", " ", "{\n\n    ", "private", " ", "final", " RestTemplate restTemplate;\n\n    ", "public", " ConsumerController(RestTemplate restTemplate) {\n        ", "this", ".restTemplate = restTemplate;\n    }\n    ", "@RequestMapping(", "\"/find\"", ")", "\n    ", "public", " String findAll(){\n        String url=", "\"http://localhost://9092/user/out\"", ";\n        String str = restTemplate.getForObject(url, String.", "class", ");\n        System.", "out", ".println(str);\n        ", "return", " str;\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;问题在于你定义的类名和工具类名重名了。&lt;/strong&gt;&lt;br /&gt;可能工具InputMismatchException 包都没有导入&amp;#xff0c;直接使用了定义的类作为异常类。&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;解决方式&amp;#xff1a;&lt;/strong&gt;&lt;br /&gt;1、修改你的类名&amp;#xff0c;不要和工具类InputMismatchException 同名。&lt;br /&gt;2、使用全限定路径类名。java.util.InputMismatchException&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;java&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Scanner&lt;/span&gt;;\n&lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;InputMismatchException&lt;/span&gt; {\n    &lt;span class=\"hljs-variable\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String&lt;/span&gt;[] &lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;) {\n&lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;sc&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;in&lt;/span&gt;);\n&lt;span class=\"hljs-title function_\"&gt;try&lt;/span&gt; { \n   int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;sc&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;nextInt&lt;/span&gt;();\n&lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;);\n}&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;java&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;util&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;InputMismatchException&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt;){\n    &lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入不为整型&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Exception&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n&lt;span class=\"hljs-title class_\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;异常类型为&amp;#34;&lt;/span&gt;);\n}\n}\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "异常处理", "Question": ["为什么不能抛出异常错误InputMismatchException", ["编程从键盘上输入一个整数，当输入的是非整数时会出现 InputMismatchException 异常。请编写程序", "对此异常进行捕获处理。", "我的代码如下：", "\n", "import", " ", "java", ".", "util", ".", "Scanner", ";\n", "public", " ", "class", " ", "InputMismatchException", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] ", "args", ") {\n", "Scanner", " ", "sc", "=", "new", " ", "Scanner", "(", "System", ".", "in", ");\n", "try", " { \n   int ", "a", "=", "sc", ".", "nextInt", "();\n", "System", ".", "out", ".", "println", "(", "a", ");\n}", "catch", " (", "InputMismatchException", " ", "e", "){\n    ", "System", ".", "out", ".", "println", "(", "\"输入不为整型\"", ");\n}\n", "catch", "(", "Exception", " ", "e", ") {\n", "System", ".", "out", ".", "println", "(", "\"异常类型为\"", ");\n}\n}\n}\n", "\n", "请问大佬能帮我看看这代码有什么问题吗？为什么会显示不兼容类型，在相应try语句中不能抛出错误InputMismatchException？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;public static void main(String[] args) {\n double a&amp;#61;0;\n while(a&amp;#61;&amp;#61;0)\t\t//判断a不为0\n {System.out.println(&amp;#34;输入a的值:&amp;#34;);\n Scanner input &amp;#61; new Scanner(System.in);\n a&amp;#61;input.nextDouble();}\n \n System.out.println(&amp;#34;输入b的值:&amp;#34;);\n Scanner input1 &amp;#61; new Scanner(System.in);\n double b&amp;#61;input1.nextDouble();\n \n System.out.println(&amp;#34;输入c的值:&amp;#34;);\n Scanner input2 &amp;#61; new Scanner(System.in);\n double c&amp;#61;input2.nextDouble();\n \n double d&amp;#61;b*b-4*a*c;\t\t//根据b^2-4ac判断方程可解性\n System.out.println(d);\n if(d&amp;lt;0)\n  System.out.println(&amp;#34;方程无解&amp;#34;);\n else if(d&amp;#61;&amp;#61;0)\n  System.out.println(&amp;#34;方程有一个解:&amp;#34;&amp;#43; -b/(2*a)); \n else\n  System.out.println(&amp;#34;方程有两个解&amp;#xff1a;&amp;#34;&amp;#43; (-b&amp;#43;Math.sqrt(d))/(2*a) &amp;#43;&amp;#34;和&amp;#34;&amp;#43; (-b-Math.sqrt(d))/(2*a));\n }\t\t\t\t\t\t\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["各位彭于晏，java定义一个元二次方程", ["1、有三个私有成员变量a,b,c；\n\n2、定义两个构造方法（带两个参数、不带参数）；\n\n3、定义三组设置存取a,b,c的方法；\n\n4、定义两个方法(求两个实根根、判断是否有实根)；\n\n5、重写toString方法（输出：“一元二次方程(a,b,c)”）；\n\n6、重写equal方法（当三个系数均相等时为真）；\n\n7、自定义异常类，创建一元二次方程对象中当a等于零时抛出自定义异常；\n\n8、定义一个测试类完成如下要求：\n\n（1）利用随机方法创建若干一元二次方程对象保存到数据文件。\n\n（2）读出文件中所有一元二次方程对象并计算输出一元二次方程的实根。\n\n（3）对可能出现的异常进行处理。"]], "Tag": "程序设计"}
{"Answer": "你看一下这个帖子：\r\nhttp://www.iteye.com/topic/134360\r\n希望对你有帮助。\r\n\r\n[quote]\r\n我猜想你应该是用&lt;jaxws:endpont&gt;标签来发布你的service吧?\r\n\r\n只传递serviceBean Object给他,CXF这样会根据你的Impl类去反射,然后去生成wsdl,通过观察你的HibernateEntityDao, 他继承了HibernateGenericDao, 这个类里有重载的get方法, 跟泛型没多大关系..\r\n\r\n这里,我有一个work around的方法. 就是不用JAX-WS API,用CXF的API:\r\n\r\nJaxWsServerFactoryBean sf = new JaxWsServerFactoryBean();\r\nsf.setServiceClass(CompanyService.class);\r\nsf.setAddress(\"http://localhost:9001/Hello\");\r\nCompanyManager impl = new CompanyManager();\r\nsf.setServiceBean(impl);\r\nsf.create();\r\n\r\n你也可以通过spring的配置,标签应该是:&lt;jaxws:server&gt;\r\n\r\n&lt;jaxws:server serviceClass=\"**.CompanyService\" serviceBean=\"#companyManager\" address=\"/companyService\"&gt;\r\n&lt;/jaxws:server&gt;\r\n\r\n这样的话,CXF就是通过Interface去生成你的WSDL, 而不是根据你的Impl类去生成wsdl.就不会有重载的问题,如果在你的Interface上有重载的问题,你可以加@WebMethod(operationName=\"\")的方式来解决.\r\n\r\n我只测过代码的,配置文件没测过,你需要看cxf的jaxws.xsd来配置..不过我记得是那样的...\r\n[/quote]", "Konwledge_Point": "异常处理", "Question": ["CXF自动生成客户端时出现异常", ["生成代码是出现WSDLToJava Error: java.lang.IllegalArgumentException: An operation with name [{h", "ttp://", "www.centra.com/CWS}Add", "] already exists in this service异常什么原因？", "问题补充：", "如果不是自己写的服务器怎么处理？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ndf&amp;#61;df&lt;span class=\"hljs-selector-class\"&gt;.replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;,np.NAN)&lt;span class=\"hljs-selector-class\"&gt;.bfill&lt;/span&gt;()&lt;span class=\"hljs-selector-class\"&gt;.groupby&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.first&lt;/span&gt;()\ndf&amp;#61;df&lt;span class=\"hljs-selector-class\"&gt;.replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;,np.NAN)&lt;span class=\"hljs-selector-class\"&gt;.astype&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.groupby&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.sum&lt;/span&gt;()\ndf&amp;#61;df&lt;span class=\"hljs-selector-class\"&gt;.replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;,np.NAN)&lt;span class=\"hljs-selector-class\"&gt;.groupby&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.agg&lt;/span&gt;({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;VAR1&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;VAR2&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;VAR3&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;VAR4&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;VAR5&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;三个都行&amp;#xff0c;看数据通用性取舍。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["【Python】数据清洗：如何去重处理各列行中异常缺失值提取有效数据？", ["求解答", "\n", "题目：用最小代码量，从图片一提取数据变为图片二", "\n", "\n", " 图片一\n\n", "\n", " 图片二"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/lujiandong1/article/details/52654703", "Konwledge_Point": "异常处理", "Question": ["数据缺失值处理的几个疑问", ["数据中含有缺失值、异常值，及无意义的数值0. 我的操作步骤是先将数值0替换成缺失值。再对数据进行z-score标准化处理，找出异常值后，也将异常值替换成空值。再统一对缺失值进行填充处理。我的问题是：", "\n1. 我的操作步骤是否合理？", "\n2. 如果按照上述步骤，将数值0和异常值替换成缺失值后， 导致缺失值数量较多，无法进行填充处理，该如何解决？", "\n3. 缺失值的填充，应该是针对原始数据进行的填充，而不会对标准化数据也同时进行填充吧？ （原始数据缺失，标准化数据也同样缺失的）", "\n4. 如第3步正确，那数据填充完毕，是否还要对数据再次进行标准化处理，以便后期建模（后期建模，考虑到量纲问题，有必要将标准化数据纳入建模，而非原始数据）。"]], "Tag": "程序设计"}
{"Answer": "两个时间相减，可以用TimeSpan，不要直接相减。", "Konwledge_Point": "异常处理", "Question": ["c# datetime.tostring()异常问题求解。", ["1.winform 写了个进程监控，实机运行时发现如图1报异常。", "\n\n", "按照图片中提示是timer2丢出，timer2作用仅是更新界面label中“监控已运行****”", "\n\n", "timer2代码逻辑很简单：每隔1秒更新label。见代码片", "\n\n", "private void Timer2_Tick(object sender,EventArgs e)\n            {\n            if(tb.ToString() == \"0001/1/1 0:00:00\")\n                {\n                }\n            else\n                {\n                this.label1.Text = \"监控已运行:\" + (DateTime.Now - tb).ToString(\"g\").Substring(0,11);\n                }\n            }\n", "\n\n", "我理解下来，报错的意思是时间相减之后位数不够11位了，所以抛出异常，这个理解对么？ ", "\n\n", "2.同时还问个问题：如图2", "\ndt是datetime 未点button时未赋值，它在tostring（）的时候咋还会有异常呢？能否指点一下。", "\n\n", "新手轻喷!", "\n\n", "谢谢", "\n\n", "\n\n", "\n\n", "试试这么处理", "\nEeeeee", "\n\n", "string str = null;\nTimeSpan ts = starTime.Subtract(nowTime).Duration();\n str = ts.Days.ToString() + \"天\" + ts.Hours.ToString() + \"小时\" + ts.Minutes.ToString() + \"分钟\" + ts.Seconds.ToString() + \"秒\";\nreturn str;\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的输入部分有问题&amp;#xff0c;导致最后的的brr返回为空&amp;#xff0c;puts()输出空字符串报错。&lt;br /&gt;我没太看得懂你do while 循环部分是在做什么&amp;#xff1f;getchar每次只能接收一个字符&amp;#xff0c;但是看你的意思应该是接收一个字符串&amp;#xff0c;而你里面的for循环限定了你的i不可超过20&amp;#xff0c;那么你for上面的那句*(brr &amp;#43; j) &amp;#61; arr &amp;#43; i;有什么作用呢&amp;#xff1f;你的j自增呢&amp;#xff1f;每次都是0你觉得对吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["指针数组赋值，vs15弹出strlen.asm文件", ["C primer plus上一道课后题：", "题目：创建一个函数，实现功能：键入一句话，返回一个指针数组，每个指针数组内元素指向一个独立单词。", "\n", "运行结果及报错内容 ：", "功能基本都实现了，回调指针数组赋值的时候出错。", "\n", "这个是报错框：", "基于vs2015；", "\n", "之后调试几次后vs15不报错了，直接弹出了strlen.asm文件", "\n", "\n", "查阅资料：”请注意，strlen的主循环部分，是以 4 个 char 为一组作为一个DWORD (32 bits) 送到 eax 去检测的，因此要求必须读取 DWORD 时以 4 bytes 对齐，所以如果字符串地址并不对齐，则前面的1~3个char必须逐个字节检测。进入主循环的循环条件相当于以下代码：“", "以下是资料出处", "https://www.cnblogs.com/hoodlum1980/archive/2010/08/04/1792322.html", "\n", "我的理解是在37行处        *(brr + j) = arr + i; 用指针赋值时，每一段指针长度不定，没有对齐导致程序卡住？（一个不是很成熟的想法，汇编才开始学）如果是这个问题，又应该如何解决；或者是尽量避免在指针数组中存储并处理长度不等的指针？", "\n", "源码如下：", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n\n", "char", "** ", "get_alpha", "(", "char", "*, ", "int", " number)", ";\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "char", " arr[", "200", "];\n    ", "int", " number;\n    ", "int", " i;\n\n    ", "printf", "(", "\"How many words do you wish to enter?\"", ");\n    ", "scanf", "(", "\"%d\"", ", &number);\n\n    ", "char", "** crr = ", "NULL", ";\n\n    crr = ", "get_alpha", "(arr, number);\n    ", "for", " (i = ", "0", "; i<number; ++i)\n        ", "puts", "(crr[i]);\n    ", "free", "(crr);\n    \n    ", "getchar", "();\n    ", "return", " ", "0", ";\n}\n\n", "char", "** ", "get_alpha", "(", "char", "* arr, ", "int", " number)", "\n", "{\n    ", "char", " ** brr;\n    ", "int", " i = ", "0", ";\n    ", "int", " j = ", "0", ";\n    ", "int", " time = ", "0", ";\n\n    brr = (", "char", "**)", "malloc", "(number*", "sizeof", "(", "char", "*));\n\n    ", "printf", "(", "\"Enter %d words now:\"", ", number);\n    ", "do", " {\n        *(brr + j) = arr + i;\n        ", "for", " (i; i < ", "20", "; ++i)\n        {\n            ", "if", " (i == ", "0", ")\n                ", "for", " (", "int", " u = ", "0", "; u<", "200", "; u++)\n                    arr[u] = ", "0", ";\n            ", "if", " ((arr[i] = ", "getchar", "()) == ", "' '", ")\n            {\n                arr[i] = ", "0", ";\n                ++i;\n                ", "break", ";\n            }\n            ", "else", " ", "if", " (arr[i] == ", "'\\n'", ")", "break", ";\n        }\n        ++time;\n    } ", "while", " (time != number);\n\n    ", "return", " brr;\n}\n\n", "\n", "看了好几遍感觉都没什么问题，还请各位老哥帮帮忙🤦‍♂️，谢谢！"]], "Tag": "程序设计"}
{"Answer": "还是要查看你的具体错误信息，是不是命令路径等没设置跟Eclipse一样", "Konwledge_Point": "异常处理", "Question": ["linux下 java打成jar包运行，压缩文件失败", ["linux下 java打成jar包运行，压缩文件失败（java程序内有压缩文件处理）。但是在linux下，用eclipse执行的话，压缩文件成功。求大神！！！！"]], "Tag": "程序设计"}
{"Answer": "这不是内存泄漏，而是你没有正确分配指针，或者下标越界，检查下m_input、i data分别是什么", "Konwledge_Point": "异常处理", "Question": ["MFC，串口通信，内存泄露", ["使用MFC单文档写一个串口通信的程序，其中使用如下语句时：", "\nfor(i=0;i<length;i++)", "\n{", "\n    m_input.GetElement(&i,data+i);//transfer data from COleSafeArray to BYTE", "\n}", "\n\n", "出现内存泄露，会弹出如下语句：", "\nTMAP.exe 中的 0x78baf4ec (mfc100d.dll) 处有未经处理的异常: 0xC0000005: 读取位置 0x544e4545 时发生访问冲突，", "\n\n", "请问，该如何解决此问题？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以throw你自定义的异常&amp;#xff0c;c#会向上抛异常&amp;#xff0c;不用像java一样在方法后面写throws&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["C# 如何像Java一样有throws语句向外层抛出异常", ["请问C#存在这个功能吗？", "在Java中在定义函数时可以使用throws设定向外层调用它的函数抛出异常，由调用它的函数进行处理？请问C#存在这个功能吗？", "现在需要用到。", "写了一个程序，C#服务端向客户端发送心跳包，并通过socket的Send()函数的异常情况来判断连接是否断开了，现在发送各种消息的功能都封装在一个函数里（包括心跳包），我想自定义一个异常，用发消息的这个函数接收，并向外层抛出？", "\n", "发送消息的函数", "\n", "       public void send(", "string", "[]", " cmdArr) \n        {\n            lock (objLck)\n            {\n                ", "string", "[]", " strArrSnd = get", "CmdSnd(", "cmdArr", ")", ";\n\n                ", "try", "\n                {\n                    ", "int", " i;\n                    ", "for", " (i = ", "0", "; i < strArrSnd.Length; i++)\n                    {\n                        byte", "[]", " bytSnd;\n                        bytSnd = Encoding.Default.", "GetBytes(", "strArrSnd", "[", "i", "])", ";\n                        skt.", "Send(", "bytSnd", ", ", "bytSnd", ".Length, SocketFlags.None)", ";\n                    }\n                }\n                catch (Exception ex)\n                {\n                         ", "//此处，可否向外层抛出一个异常，由调用它的函数处理？", "\n                }\n                cmdCnt ++;\n            }\n        }\n\n", "\n", "发送心跳包的地方：", "\n", "try", "\n                    {\n                string[] strArr = clntArr[pstn]", ".getCmd", "(1000, 1)", ";\n\n            clntArr[pstn]", ".send", "(strArr)", ";  ", "//", "这个函数是调用的上面那个send函数，底下要进行处理，但是目前这个样子catch不到\n\n                    }\ncatch ", "(SocketException sktEx)", "\n                    {\n                        ", "...", "\n                       }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是下面这样&amp;#xff0c;有数据才能读&amp;#xff0c;要不会出错。比如用户名输入错了&amp;#xff0c;那么reader是没有数据的&amp;#xff0c;调用Read后返回false。如果有数据read后返回true&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;string queryPassword&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nif(dr.Read())//Read后会返回是否已经\n{\n&lt;span class=\"hljs-attribute\"&gt;queryPassword&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;dr[&lt;span class=\"hljs-string\"&gt;&amp;#34;password&amp;#34;&lt;/span&gt;].ToString()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助麻烦点个&lt;strong&gt;采纳【本回答右上角】&lt;/strong&gt;&amp;#xff0c;谢谢~~有其他问题可以继续交流~&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["【C#】【MySQL】【报错】MySql.Data.MySqlClient.MySqlException", ["这是一个简单的登录验证，在使用MySql.Data.MySqlClient的过程中出现错误。", "已确认数据库和数据库命令无误", "报错如下", "\n", "\n", "MySql.Data.MySqlClient.MySqlException:“Invalid attempt to access a field before calling Read()”", "代码截图如下", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;占位符没有被解析。&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["Discuz! X3.4屏幕版首页推荐文章列表显示异常", ["Discuz! X3.4屏幕版首页推荐文章列表显示异常，发布者账号名显示的是author、查看量显示的是views、评论量显示的是replies，求专家帮忙看看怎么处理这个问题。", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/intbird/article/details/19905549\r\nhttp://www.cnblogs.com/tianzhijiexian/p/4254110.html", "Konwledge_Point": "异常处理", "Question": ["布局中使用ImageView OOM（急）", ["项目中每个界面布局中都使用了大量的图片做背景，在切换几个界面后会报OOM异常"]], "Tag": "程序设计"}
{"Answer": "主线程MainThread 就是显示对话框的线程\r\n\r\nclass MainThread {\r\n   public int count= 0 /* 计数百分比 */\r\n   public WorkRunnable workThread  /* 工作线程 */\r\n\r\n   public void progress() {\r\n       while( true ) {\r\n            sychronized( workThread.condition ) {\r\n                if( count == 100 ) {\r\n                    break; /* 工作线程处理完毕 */\r\n                }\r\n                wait();\r\n            }\r\n       }\r\n\r\n       ArrayList result = workThread.bl.getQuery(); \r\n       ……\r\n       /* 此时result 应该不为空 */\r\n   }\r\n}\r\n\r\n工作线程  WorkRunnable  做查询的线程\r\nclass WorkRunnable implements Runnable {\r\n    public BuinessLogic bl;\r\n    public Object condition /* 用于主线程和工作线程同步 */\r\n    public MainThread  mt ;\r\n\r\n    public void run() {\r\n        String sqlstr = new String(\"select * …… \" );\r\n        ResultSet rs = conn.execute( sqlstr );\r\n        while( rs.hasNext() ) {\r\n            rs.next();\r\n            ………\r\n\r\n            /* 当前取的在总记录的百分比 */\r\n            mt.count = 计算出的百分比;\r\n            synchronized( condition ) {\r\n                condition.notify();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n两个线程用一个condition进行同步，线程的同步主要依靠Object类的wait和notify方法来实现。5.0后有条件变量可以用", "Konwledge_Point": "异常处理", "Question": ["关于Java进度条多线程调用问题,一个很实用的问题,希望熟悉多线程编程的高手看看", ["目前我在做一个C/S架构的Java应用,其中有一项查询操作非常耗时,可以增加个进度条以提高用户界面友好型.大体流程是这样的,在一个方法内", "\nprotected void action_queryButton()实行一个耗时的查询操作ArrayList alQuery = BuinessLogic.getQuery(); 此操作非常耗时,我把它抽出来放到一个线程中去做,具体是:先写个QueryDialog继承于JDialog,上面加入JProgressBar进度条,在初始化QueryDialog的过程中启动线程做费时查询,期间不断将查询进度消息返回给JDialogProgress中的 JProgressBar(这样用户可以看到进度条在不断刷新往前跑),最后查询结束,返回查询结果集alQuery(是一个ArrayList对象). 这一切都已实现,关键问题是当我启动线程执行费时查询操作时,主线程也继续往下执行,我的线程还没来得及返回结果集,主线程已经", "\n将一个空引用赋给result了(ArrayList result = alQuery;)等我线程返回时,一切晚矣~~~主线程继续往下执行(当然会抛个空指针异常,呵呵)...我的最终目的也就没有达到.我的目的是让线程去执行费时操作,同时界面显示进度条不断刷新,等费时查询结束,进度条跑到100%,然后返回结果集给主线程下一行的ArrayList引用对象 result,这样我才算真正完成任务,事与愿违啊,线程启动后,主线程继续往下走,没有完成任务交接.实例伪代码我附上了,", "\nprotected  ArrayList action_queryButton()", "\n    {    //主线程开始", "\n        .", "\n        .", "\n        .", "\n        .", "\n        // 新建查询对话框", "\n        QueryDialog queryDialog = new QueryDialog(topFrame, this.managerContext);", "\n\n", "    // 打开对话框:注意,我开始启动费时查询线程了.线程start方法我封装在queryDialog.showDialog(queryParam, iFrame)方法里,具体代码这\n    //里不提供了.\n    if (queryDialog.showDialog(queryParam, iFrame) != queryDialog.OPTION_OK)\n    {\n        // 用户取消 或者 异常\n        queryDialog.dispose();\n        queryDialog = null;\n        return;\n    }\n    /*获得查询参数:注意我上面开启了个线程,当线程还没结束,也就是说还没返回查询结果集时,主线程继续往下走,执行了下步操作调getQuery方法得到一个ArrayList空对象(因为此时线程没有走完,不可能返回真实查询结果),系统会抛个空指针*/\n    ArrayList result = queryDialog.getQuery();\n    setQueryManagerContext(tempParam);\n    queryDialog.dispose();\n    queryDialog = null;\n\n  //\n  .\n  .\n  .\n  .\n  return result;\n\n}\n", "\n\n", "我的解决方法是在开启查询线程后,让主线程停止不动,不让它往下走,等待查询结束QueryDialog对象返回查询结果集后,再让主线程继续下一步  ArrayList result = queryDialog.getQuery();这样,result就有值了,一切都OK. 请问谁有更好的解决办法? 如果不方便给出代码,说出思路也行,说错没关系,大家一起探讨共同进步嘛,呵呵."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个错误是因为后台没有传值到前台页面&amp;#xff0c;获取不到值request.getAttribute(&amp;#34;stations&amp;#34;);&lt;/p&gt;\n\n&lt;p&gt;看看后台哪里调用了设置的代码&amp;#xff0c;应该是这样的&lt;/p&gt;\n\n&lt;p&gt;request.setAttribute(&amp;#34;stations&amp;#34;,List对象名称);&lt;/p&gt;", "Konwledge_Point": "异常处理", "Question": ["maven工程运行之后出现异常", ["\n\n", "HTTP状态 500 - 内部服务器错误", "\n\n", "类型", " 异常报告", "\n\n", "消息", " 在 [46] 行处理 [map1.jsp] 时发生异常", "\n\n", "描述", " 服务器遇到一个意外的情况，阻止它完成请求。", "\n\n", "例外情况", "\n\n", "\n", "org.apache.jasper.JasperException: 在 [46] 行处理 [map1.jsp] 时发生异常\n\n43: \tvar markerArr = [];\n44: \tvar obj={};\n45: \t\t<%List<Station> list = (List<Station>) request.getAttribute(\"stations\");\n46: \t\tfor (int i = 0; i < list.size(); i++) {\n47: \t\t\tStation s = list.get(i);\n48: \t\t\tString latitude = s.getLatitude();\n49: \t\t\tString longitude = s.getLongitude();\n\n\nStacktrace:\n\torg.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:626)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:515)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:733)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n", "\n\n", "根本原因。", "\n\n", "\n", "java.lang.NullPointerException\n\torg.apache.jsp.map1_jsp._jspService(map1_jsp.java:168)\n\torg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:71)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:733)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:733)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n", "\n\n", "):注意", " 主要问题的全部 stack 信息可以在 server logs 里查看", "\n\n", "Apache Tomcat/9.0.37", "\n\n", "\n", "<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n\tpageEncoding=\"UTF-8\"%>\n<%@ page isELIgnored=\"false\"%>\n<%@ page import=\"com.map.pojo.Station\"%>\n<%@ page import=\"java.util.List\"%>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Insert title here</title>\n\n<style>\nbody, html, #container {\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tfont-family: \"微软雅黑\";\n}\n</style>\n<script\n\tsrc=\"//api.map.baidu.com/api?type=webgl&v=1.0&ak=f7VQvU1BbyNNGfPzDIRGybKXpn3SFnat\"></script>\n\n</head>\n<body>\n\n\t<div id=\"container\"></div>\n\n\t<%-- \n\t\n\t<c:forEach var=\"s\" items=\"${stations}\" varStatus=\"status\">\n     \t\t名称：${s.name},经度：${s.longitude},纬度：${s.latitude}</br>\n\t</c:forEach> --%>\n\n\t<script type=\"text/javascript\">\n\n\tvar map = new BMapGL.Map('container');\n\tmap.centerAndZoom(new BMapGL.Point(119.16816, 36.714439), 12);\n\tmap.enableScrollWheelZoom(true);\n\t\n\tvar markerArr = [];\n\tvar obj={};\n\t\t<%List<Station> list = (List<Station>) request.getAttribute(\"stations\");\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tStation s = list.get(i);\n\t\t\tString latitude = s.getLatitude();\n\t\t\tString longitude = s.getLongitude();\n\t\t\tString name = s.getName();%>\n\t\t\t\t\tvar obj=[\"<%=longitude%>\",\"<%=latitude%>\",\"地址:\"+'<%=name%>'];\n\t\t\t\t\tmarkerArr.push(obj);\n\t\t\t\t\t//alert(markerArr);\n\t\t\t\t\t//alert('<%=name%>'+\",\"+'<%=latitude%>'+\",\"+'<%=longitude%>\n\t\t\t\t');\n\t<%}%>\n\t\tfor (var i = 0; i < markerArr.length; i++) {\n\n\t\t\t(function(x) {\n\t\t\t\tvar marker = new BMapGL.Marker(new BMapGL.Point(\n\t\t\t\t\t\tmarkerArr[x][0], markerArr[x][1]));\n\t\t\t\tvar addres = markerArr[x][2];\n\n\t\t\t\tmap.addOverlay(marker);\n\t\t\t\tvar opts = {\n\t\t\t\t\twidth : 150,\n\t\t\t\t\theight : 100,\n\t\t\t\t\ttitle : \"所在单位\",\n\t\t\t\t\tenableMessage : true,\n\t\t\t\t};\n\t\t\t\tvar content = \"<br/>\" + addres;\n\t\t\t\tvar info_Window = new BMapGL.InfoWindow(content, opts);\n\t\t\t\tmarker.addEventListener(\"click\", function() {\n\t\t\t\t\tthis.openInfoWindow(info_Window);\n\t\t\t\t});\n\t\t\t\tmap.addOverlay(marker);\n\t\t\t})(i);\n\t\t}\n\t\tmap.addControl(new BMapGL.NavigationControl());\n\t</script>\n\n</body>\n</html>"]], "Tag": "程序设计"}
